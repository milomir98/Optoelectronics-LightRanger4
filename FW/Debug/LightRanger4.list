
LightRanger4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000193d4  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000698c  080195a4  080195a4  000295a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0801ff30  0801ff30  000303fc  2**0
                  CONTENTS
  4 .ARM          00000008  0801ff30  0801ff30  0002ff30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0801ff38  0801ff38  000303fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0801ff38  0801ff38  0002ff38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801ff3c  0801ff3c  0002ff3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000003fc  20000000  0801ff40  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00019700  200003fc  0802033c  000303fc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20019afc  0802033c  00039afc  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000303fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0003e38c  00000000  00000000  0003042a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00004b32  00000000  00000000  0006e7b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001bc78  00000000  00000000  000732e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00001160  00000000  00000000  0008ef60  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000051a8  00000000  00000000  000900c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  0002f0e4  00000000  00000000  00095268  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   0001653d  00000000  00000000  000c434c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    00110b06  00000000  00000000  000da889  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      000000fd  00000000  00000000  001eb38f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00003c44  00000000  00000000  001eb48c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200003fc 	.word	0x200003fc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0801958c 	.word	0x0801958c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000400 	.word	0x20000400
 800020c:	0801958c 	.word	0x0801958c

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__aeabi_d2iz>:
 8000a5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a60:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a64:	d215      	bcs.n	8000a92 <__aeabi_d2iz+0x36>
 8000a66:	d511      	bpl.n	8000a8c <__aeabi_d2iz+0x30>
 8000a68:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a6c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a70:	d912      	bls.n	8000a98 <__aeabi_d2iz+0x3c>
 8000a72:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a76:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a7a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a82:	fa23 f002 	lsr.w	r0, r3, r2
 8000a86:	bf18      	it	ne
 8000a88:	4240      	negne	r0, r0
 8000a8a:	4770      	bx	lr
 8000a8c:	f04f 0000 	mov.w	r0, #0
 8000a90:	4770      	bx	lr
 8000a92:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a96:	d105      	bne.n	8000aa4 <__aeabi_d2iz+0x48>
 8000a98:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a9c:	bf08      	it	eq
 8000a9e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000aa2:	4770      	bx	lr
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	bf00      	nop

08000aac <__aeabi_d2f>:
 8000aac:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ab0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ab4:	bf24      	itt	cs
 8000ab6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000aba:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000abe:	d90d      	bls.n	8000adc <__aeabi_d2f+0x30>
 8000ac0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ac4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ac8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000acc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000ad0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ad4:	bf08      	it	eq
 8000ad6:	f020 0001 	biceq.w	r0, r0, #1
 8000ada:	4770      	bx	lr
 8000adc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000ae0:	d121      	bne.n	8000b26 <__aeabi_d2f+0x7a>
 8000ae2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000ae6:	bfbc      	itt	lt
 8000ae8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000aec:	4770      	bxlt	lr
 8000aee:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000af2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000af6:	f1c2 0218 	rsb	r2, r2, #24
 8000afa:	f1c2 0c20 	rsb	ip, r2, #32
 8000afe:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b02:	fa20 f002 	lsr.w	r0, r0, r2
 8000b06:	bf18      	it	ne
 8000b08:	f040 0001 	orrne.w	r0, r0, #1
 8000b0c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b10:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b14:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b18:	ea40 000c 	orr.w	r0, r0, ip
 8000b1c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b20:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b24:	e7cc      	b.n	8000ac0 <__aeabi_d2f+0x14>
 8000b26:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b2a:	d107      	bne.n	8000b3c <__aeabi_d2f+0x90>
 8000b2c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b30:	bf1e      	ittt	ne
 8000b32:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b36:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b3a:	4770      	bxne	lr
 8000b3c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b40:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b44:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b48:	4770      	bx	lr
 8000b4a:	bf00      	nop

08000b4c <__aeabi_uldivmod>:
 8000b4c:	b953      	cbnz	r3, 8000b64 <__aeabi_uldivmod+0x18>
 8000b4e:	b94a      	cbnz	r2, 8000b64 <__aeabi_uldivmod+0x18>
 8000b50:	2900      	cmp	r1, #0
 8000b52:	bf08      	it	eq
 8000b54:	2800      	cmpeq	r0, #0
 8000b56:	bf1c      	itt	ne
 8000b58:	f04f 31ff 	movne.w	r1, #4294967295
 8000b5c:	f04f 30ff 	movne.w	r0, #4294967295
 8000b60:	f000 b972 	b.w	8000e48 <__aeabi_idiv0>
 8000b64:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b68:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b6c:	f000 f806 	bl	8000b7c <__udivmoddi4>
 8000b70:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b78:	b004      	add	sp, #16
 8000b7a:	4770      	bx	lr

08000b7c <__udivmoddi4>:
 8000b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b80:	9e08      	ldr	r6, [sp, #32]
 8000b82:	4604      	mov	r4, r0
 8000b84:	4688      	mov	r8, r1
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	d14b      	bne.n	8000c22 <__udivmoddi4+0xa6>
 8000b8a:	428a      	cmp	r2, r1
 8000b8c:	4615      	mov	r5, r2
 8000b8e:	d967      	bls.n	8000c60 <__udivmoddi4+0xe4>
 8000b90:	fab2 f282 	clz	r2, r2
 8000b94:	b14a      	cbz	r2, 8000baa <__udivmoddi4+0x2e>
 8000b96:	f1c2 0720 	rsb	r7, r2, #32
 8000b9a:	fa01 f302 	lsl.w	r3, r1, r2
 8000b9e:	fa20 f707 	lsr.w	r7, r0, r7
 8000ba2:	4095      	lsls	r5, r2
 8000ba4:	ea47 0803 	orr.w	r8, r7, r3
 8000ba8:	4094      	lsls	r4, r2
 8000baa:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000bae:	0c23      	lsrs	r3, r4, #16
 8000bb0:	fbb8 f7fe 	udiv	r7, r8, lr
 8000bb4:	fa1f fc85 	uxth.w	ip, r5
 8000bb8:	fb0e 8817 	mls	r8, lr, r7, r8
 8000bbc:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bc0:	fb07 f10c 	mul.w	r1, r7, ip
 8000bc4:	4299      	cmp	r1, r3
 8000bc6:	d909      	bls.n	8000bdc <__udivmoddi4+0x60>
 8000bc8:	18eb      	adds	r3, r5, r3
 8000bca:	f107 30ff 	add.w	r0, r7, #4294967295
 8000bce:	f080 811b 	bcs.w	8000e08 <__udivmoddi4+0x28c>
 8000bd2:	4299      	cmp	r1, r3
 8000bd4:	f240 8118 	bls.w	8000e08 <__udivmoddi4+0x28c>
 8000bd8:	3f02      	subs	r7, #2
 8000bda:	442b      	add	r3, r5
 8000bdc:	1a5b      	subs	r3, r3, r1
 8000bde:	b2a4      	uxth	r4, r4
 8000be0:	fbb3 f0fe 	udiv	r0, r3, lr
 8000be4:	fb0e 3310 	mls	r3, lr, r0, r3
 8000be8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000bec:	fb00 fc0c 	mul.w	ip, r0, ip
 8000bf0:	45a4      	cmp	ip, r4
 8000bf2:	d909      	bls.n	8000c08 <__udivmoddi4+0x8c>
 8000bf4:	192c      	adds	r4, r5, r4
 8000bf6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000bfa:	f080 8107 	bcs.w	8000e0c <__udivmoddi4+0x290>
 8000bfe:	45a4      	cmp	ip, r4
 8000c00:	f240 8104 	bls.w	8000e0c <__udivmoddi4+0x290>
 8000c04:	3802      	subs	r0, #2
 8000c06:	442c      	add	r4, r5
 8000c08:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000c0c:	eba4 040c 	sub.w	r4, r4, ip
 8000c10:	2700      	movs	r7, #0
 8000c12:	b11e      	cbz	r6, 8000c1c <__udivmoddi4+0xa0>
 8000c14:	40d4      	lsrs	r4, r2
 8000c16:	2300      	movs	r3, #0
 8000c18:	e9c6 4300 	strd	r4, r3, [r6]
 8000c1c:	4639      	mov	r1, r7
 8000c1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c22:	428b      	cmp	r3, r1
 8000c24:	d909      	bls.n	8000c3a <__udivmoddi4+0xbe>
 8000c26:	2e00      	cmp	r6, #0
 8000c28:	f000 80eb 	beq.w	8000e02 <__udivmoddi4+0x286>
 8000c2c:	2700      	movs	r7, #0
 8000c2e:	e9c6 0100 	strd	r0, r1, [r6]
 8000c32:	4638      	mov	r0, r7
 8000c34:	4639      	mov	r1, r7
 8000c36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c3a:	fab3 f783 	clz	r7, r3
 8000c3e:	2f00      	cmp	r7, #0
 8000c40:	d147      	bne.n	8000cd2 <__udivmoddi4+0x156>
 8000c42:	428b      	cmp	r3, r1
 8000c44:	d302      	bcc.n	8000c4c <__udivmoddi4+0xd0>
 8000c46:	4282      	cmp	r2, r0
 8000c48:	f200 80fa 	bhi.w	8000e40 <__udivmoddi4+0x2c4>
 8000c4c:	1a84      	subs	r4, r0, r2
 8000c4e:	eb61 0303 	sbc.w	r3, r1, r3
 8000c52:	2001      	movs	r0, #1
 8000c54:	4698      	mov	r8, r3
 8000c56:	2e00      	cmp	r6, #0
 8000c58:	d0e0      	beq.n	8000c1c <__udivmoddi4+0xa0>
 8000c5a:	e9c6 4800 	strd	r4, r8, [r6]
 8000c5e:	e7dd      	b.n	8000c1c <__udivmoddi4+0xa0>
 8000c60:	b902      	cbnz	r2, 8000c64 <__udivmoddi4+0xe8>
 8000c62:	deff      	udf	#255	; 0xff
 8000c64:	fab2 f282 	clz	r2, r2
 8000c68:	2a00      	cmp	r2, #0
 8000c6a:	f040 808f 	bne.w	8000d8c <__udivmoddi4+0x210>
 8000c6e:	1b49      	subs	r1, r1, r5
 8000c70:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c74:	fa1f f885 	uxth.w	r8, r5
 8000c78:	2701      	movs	r7, #1
 8000c7a:	fbb1 fcfe 	udiv	ip, r1, lr
 8000c7e:	0c23      	lsrs	r3, r4, #16
 8000c80:	fb0e 111c 	mls	r1, lr, ip, r1
 8000c84:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c88:	fb08 f10c 	mul.w	r1, r8, ip
 8000c8c:	4299      	cmp	r1, r3
 8000c8e:	d907      	bls.n	8000ca0 <__udivmoddi4+0x124>
 8000c90:	18eb      	adds	r3, r5, r3
 8000c92:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000c96:	d202      	bcs.n	8000c9e <__udivmoddi4+0x122>
 8000c98:	4299      	cmp	r1, r3
 8000c9a:	f200 80cd 	bhi.w	8000e38 <__udivmoddi4+0x2bc>
 8000c9e:	4684      	mov	ip, r0
 8000ca0:	1a59      	subs	r1, r3, r1
 8000ca2:	b2a3      	uxth	r3, r4
 8000ca4:	fbb1 f0fe 	udiv	r0, r1, lr
 8000ca8:	fb0e 1410 	mls	r4, lr, r0, r1
 8000cac:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000cb0:	fb08 f800 	mul.w	r8, r8, r0
 8000cb4:	45a0      	cmp	r8, r4
 8000cb6:	d907      	bls.n	8000cc8 <__udivmoddi4+0x14c>
 8000cb8:	192c      	adds	r4, r5, r4
 8000cba:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cbe:	d202      	bcs.n	8000cc6 <__udivmoddi4+0x14a>
 8000cc0:	45a0      	cmp	r8, r4
 8000cc2:	f200 80b6 	bhi.w	8000e32 <__udivmoddi4+0x2b6>
 8000cc6:	4618      	mov	r0, r3
 8000cc8:	eba4 0408 	sub.w	r4, r4, r8
 8000ccc:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000cd0:	e79f      	b.n	8000c12 <__udivmoddi4+0x96>
 8000cd2:	f1c7 0c20 	rsb	ip, r7, #32
 8000cd6:	40bb      	lsls	r3, r7
 8000cd8:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000cdc:	ea4e 0e03 	orr.w	lr, lr, r3
 8000ce0:	fa01 f407 	lsl.w	r4, r1, r7
 8000ce4:	fa20 f50c 	lsr.w	r5, r0, ip
 8000ce8:	fa21 f30c 	lsr.w	r3, r1, ip
 8000cec:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000cf0:	4325      	orrs	r5, r4
 8000cf2:	fbb3 f9f8 	udiv	r9, r3, r8
 8000cf6:	0c2c      	lsrs	r4, r5, #16
 8000cf8:	fb08 3319 	mls	r3, r8, r9, r3
 8000cfc:	fa1f fa8e 	uxth.w	sl, lr
 8000d00:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000d04:	fb09 f40a 	mul.w	r4, r9, sl
 8000d08:	429c      	cmp	r4, r3
 8000d0a:	fa02 f207 	lsl.w	r2, r2, r7
 8000d0e:	fa00 f107 	lsl.w	r1, r0, r7
 8000d12:	d90b      	bls.n	8000d2c <__udivmoddi4+0x1b0>
 8000d14:	eb1e 0303 	adds.w	r3, lr, r3
 8000d18:	f109 30ff 	add.w	r0, r9, #4294967295
 8000d1c:	f080 8087 	bcs.w	8000e2e <__udivmoddi4+0x2b2>
 8000d20:	429c      	cmp	r4, r3
 8000d22:	f240 8084 	bls.w	8000e2e <__udivmoddi4+0x2b2>
 8000d26:	f1a9 0902 	sub.w	r9, r9, #2
 8000d2a:	4473      	add	r3, lr
 8000d2c:	1b1b      	subs	r3, r3, r4
 8000d2e:	b2ad      	uxth	r5, r5
 8000d30:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d34:	fb08 3310 	mls	r3, r8, r0, r3
 8000d38:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000d3c:	fb00 fa0a 	mul.w	sl, r0, sl
 8000d40:	45a2      	cmp	sl, r4
 8000d42:	d908      	bls.n	8000d56 <__udivmoddi4+0x1da>
 8000d44:	eb1e 0404 	adds.w	r4, lr, r4
 8000d48:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d4c:	d26b      	bcs.n	8000e26 <__udivmoddi4+0x2aa>
 8000d4e:	45a2      	cmp	sl, r4
 8000d50:	d969      	bls.n	8000e26 <__udivmoddi4+0x2aa>
 8000d52:	3802      	subs	r0, #2
 8000d54:	4474      	add	r4, lr
 8000d56:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000d5a:	fba0 8902 	umull	r8, r9, r0, r2
 8000d5e:	eba4 040a 	sub.w	r4, r4, sl
 8000d62:	454c      	cmp	r4, r9
 8000d64:	46c2      	mov	sl, r8
 8000d66:	464b      	mov	r3, r9
 8000d68:	d354      	bcc.n	8000e14 <__udivmoddi4+0x298>
 8000d6a:	d051      	beq.n	8000e10 <__udivmoddi4+0x294>
 8000d6c:	2e00      	cmp	r6, #0
 8000d6e:	d069      	beq.n	8000e44 <__udivmoddi4+0x2c8>
 8000d70:	ebb1 050a 	subs.w	r5, r1, sl
 8000d74:	eb64 0403 	sbc.w	r4, r4, r3
 8000d78:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000d7c:	40fd      	lsrs	r5, r7
 8000d7e:	40fc      	lsrs	r4, r7
 8000d80:	ea4c 0505 	orr.w	r5, ip, r5
 8000d84:	e9c6 5400 	strd	r5, r4, [r6]
 8000d88:	2700      	movs	r7, #0
 8000d8a:	e747      	b.n	8000c1c <__udivmoddi4+0xa0>
 8000d8c:	f1c2 0320 	rsb	r3, r2, #32
 8000d90:	fa20 f703 	lsr.w	r7, r0, r3
 8000d94:	4095      	lsls	r5, r2
 8000d96:	fa01 f002 	lsl.w	r0, r1, r2
 8000d9a:	fa21 f303 	lsr.w	r3, r1, r3
 8000d9e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000da2:	4338      	orrs	r0, r7
 8000da4:	0c01      	lsrs	r1, r0, #16
 8000da6:	fbb3 f7fe 	udiv	r7, r3, lr
 8000daa:	fa1f f885 	uxth.w	r8, r5
 8000dae:	fb0e 3317 	mls	r3, lr, r7, r3
 8000db2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000db6:	fb07 f308 	mul.w	r3, r7, r8
 8000dba:	428b      	cmp	r3, r1
 8000dbc:	fa04 f402 	lsl.w	r4, r4, r2
 8000dc0:	d907      	bls.n	8000dd2 <__udivmoddi4+0x256>
 8000dc2:	1869      	adds	r1, r5, r1
 8000dc4:	f107 3cff 	add.w	ip, r7, #4294967295
 8000dc8:	d22f      	bcs.n	8000e2a <__udivmoddi4+0x2ae>
 8000dca:	428b      	cmp	r3, r1
 8000dcc:	d92d      	bls.n	8000e2a <__udivmoddi4+0x2ae>
 8000dce:	3f02      	subs	r7, #2
 8000dd0:	4429      	add	r1, r5
 8000dd2:	1acb      	subs	r3, r1, r3
 8000dd4:	b281      	uxth	r1, r0
 8000dd6:	fbb3 f0fe 	udiv	r0, r3, lr
 8000dda:	fb0e 3310 	mls	r3, lr, r0, r3
 8000dde:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000de2:	fb00 f308 	mul.w	r3, r0, r8
 8000de6:	428b      	cmp	r3, r1
 8000de8:	d907      	bls.n	8000dfa <__udivmoddi4+0x27e>
 8000dea:	1869      	adds	r1, r5, r1
 8000dec:	f100 3cff 	add.w	ip, r0, #4294967295
 8000df0:	d217      	bcs.n	8000e22 <__udivmoddi4+0x2a6>
 8000df2:	428b      	cmp	r3, r1
 8000df4:	d915      	bls.n	8000e22 <__udivmoddi4+0x2a6>
 8000df6:	3802      	subs	r0, #2
 8000df8:	4429      	add	r1, r5
 8000dfa:	1ac9      	subs	r1, r1, r3
 8000dfc:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000e00:	e73b      	b.n	8000c7a <__udivmoddi4+0xfe>
 8000e02:	4637      	mov	r7, r6
 8000e04:	4630      	mov	r0, r6
 8000e06:	e709      	b.n	8000c1c <__udivmoddi4+0xa0>
 8000e08:	4607      	mov	r7, r0
 8000e0a:	e6e7      	b.n	8000bdc <__udivmoddi4+0x60>
 8000e0c:	4618      	mov	r0, r3
 8000e0e:	e6fb      	b.n	8000c08 <__udivmoddi4+0x8c>
 8000e10:	4541      	cmp	r1, r8
 8000e12:	d2ab      	bcs.n	8000d6c <__udivmoddi4+0x1f0>
 8000e14:	ebb8 0a02 	subs.w	sl, r8, r2
 8000e18:	eb69 020e 	sbc.w	r2, r9, lr
 8000e1c:	3801      	subs	r0, #1
 8000e1e:	4613      	mov	r3, r2
 8000e20:	e7a4      	b.n	8000d6c <__udivmoddi4+0x1f0>
 8000e22:	4660      	mov	r0, ip
 8000e24:	e7e9      	b.n	8000dfa <__udivmoddi4+0x27e>
 8000e26:	4618      	mov	r0, r3
 8000e28:	e795      	b.n	8000d56 <__udivmoddi4+0x1da>
 8000e2a:	4667      	mov	r7, ip
 8000e2c:	e7d1      	b.n	8000dd2 <__udivmoddi4+0x256>
 8000e2e:	4681      	mov	r9, r0
 8000e30:	e77c      	b.n	8000d2c <__udivmoddi4+0x1b0>
 8000e32:	3802      	subs	r0, #2
 8000e34:	442c      	add	r4, r5
 8000e36:	e747      	b.n	8000cc8 <__udivmoddi4+0x14c>
 8000e38:	f1ac 0c02 	sub.w	ip, ip, #2
 8000e3c:	442b      	add	r3, r5
 8000e3e:	e72f      	b.n	8000ca0 <__udivmoddi4+0x124>
 8000e40:	4638      	mov	r0, r7
 8000e42:	e708      	b.n	8000c56 <__udivmoddi4+0xda>
 8000e44:	4637      	mov	r7, r6
 8000e46:	e6e9      	b.n	8000c1c <__udivmoddi4+0xa0>

08000e48 <__aeabi_idiv0>:
 8000e48:	4770      	bx	lr
 8000e4a:	bf00      	nop

08000e4c <HAL_InitTick>:
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000e4c:	4a0e      	ldr	r2, [pc, #56]	; (8000e88 <HAL_InitTick+0x3c>)
 8000e4e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000e52:	490e      	ldr	r1, [pc, #56]	; (8000e8c <HAL_InitTick+0x40>)
 8000e54:	7812      	ldrb	r2, [r2, #0]
 8000e56:	fbb3 f3f2 	udiv	r3, r3, r2
{
 8000e5a:	b510      	push	{r4, lr}
 8000e5c:	4604      	mov	r4, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000e5e:	6808      	ldr	r0, [r1, #0]
 8000e60:	fbb0 f0f3 	udiv	r0, r0, r3
 8000e64:	f000 f890 	bl	8000f88 <HAL_SYSTICK_Config>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000e68:	b908      	cbnz	r0, 8000e6e <HAL_InitTick+0x22>
 8000e6a:	2c0f      	cmp	r4, #15
 8000e6c:	d901      	bls.n	8000e72 <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 8000e6e:	2001      	movs	r0, #1
  }

  /* Return function status */
  return HAL_OK;
}
 8000e70:	bd10      	pop	{r4, pc}
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000e72:	2200      	movs	r2, #0
 8000e74:	4621      	mov	r1, r4
 8000e76:	f04f 30ff 	mov.w	r0, #4294967295
 8000e7a:	f000 f84f 	bl	8000f1c <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8000e7e:	4b04      	ldr	r3, [pc, #16]	; (8000e90 <HAL_InitTick+0x44>)
 8000e80:	2000      	movs	r0, #0
 8000e82:	601c      	str	r4, [r3, #0]
}
 8000e84:	bd10      	pop	{r4, pc}
 8000e86:	bf00      	nop
 8000e88:	20000000 	.word	0x20000000
 8000e8c:	20000038 	.word	0x20000038
 8000e90:	20000004 	.word	0x20000004

08000e94 <HAL_Init>:
{
 8000e94:	b508      	push	{r3, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000e96:	2003      	movs	r0, #3
 8000e98:	f000 f82c 	bl	8000ef4 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8000e9c:	2000      	movs	r0, #0
 8000e9e:	f7ff ffd5 	bl	8000e4c <HAL_InitTick>
  HAL_MspInit();
 8000ea2:	f006 fa07 	bl	80072b4 <HAL_MspInit>
}
 8000ea6:	2000      	movs	r0, #0
 8000ea8:	bd08      	pop	{r3, pc}
 8000eaa:	bf00      	nop

08000eac <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8000eac:	4a03      	ldr	r2, [pc, #12]	; (8000ebc <HAL_IncTick+0x10>)
 8000eae:	4b04      	ldr	r3, [pc, #16]	; (8000ec0 <HAL_IncTick+0x14>)
 8000eb0:	6811      	ldr	r1, [r2, #0]
 8000eb2:	781b      	ldrb	r3, [r3, #0]
 8000eb4:	440b      	add	r3, r1
 8000eb6:	6013      	str	r3, [r2, #0]
}
 8000eb8:	4770      	bx	lr
 8000eba:	bf00      	nop
 8000ebc:	20019750 	.word	0x20019750
 8000ec0:	20000000 	.word	0x20000000

08000ec4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8000ec4:	4b01      	ldr	r3, [pc, #4]	; (8000ecc <HAL_GetTick+0x8>)
 8000ec6:	6818      	ldr	r0, [r3, #0]
}
 8000ec8:	4770      	bx	lr
 8000eca:	bf00      	nop
 8000ecc:	20019750 	.word	0x20019750

08000ed0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000ed0:	b538      	push	{r3, r4, r5, lr}
 8000ed2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8000ed4:	f7ff fff6 	bl	8000ec4 <HAL_GetTick>
 8000ed8:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000eda:	1c63      	adds	r3, r4, #1
 8000edc:	d002      	beq.n	8000ee4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8000ede:	4b04      	ldr	r3, [pc, #16]	; (8000ef0 <HAL_Delay+0x20>)
 8000ee0:	781b      	ldrb	r3, [r3, #0]
 8000ee2:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8000ee4:	f7ff ffee 	bl	8000ec4 <HAL_GetTick>
 8000ee8:	1b40      	subs	r0, r0, r5
 8000eea:	42a0      	cmp	r0, r4
 8000eec:	d3fa      	bcc.n	8000ee4 <HAL_Delay+0x14>
  {
  }
}
 8000eee:	bd38      	pop	{r3, r4, r5, pc}
 8000ef0:	20000000 	.word	0x20000000

08000ef4 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000ef4:	4907      	ldr	r1, [pc, #28]	; (8000f14 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8000ef6:	0200      	lsls	r0, r0, #8
 8000ef8:	4b07      	ldr	r3, [pc, #28]	; (8000f18 <HAL_NVIC_SetPriorityGrouping+0x24>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000efa:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8000efc:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8000f00:	b410      	push	{r4}
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8000f02:	f64f 04ff 	movw	r4, #63743	; 0xf8ff
 8000f06:	4022      	ands	r2, r4
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8000f08:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f0c:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8000f0e:	4318      	orrs	r0, r3
  SCB->AIRCR =  reg_value;
 8000f10:	60c8      	str	r0, [r1, #12]
 8000f12:	4770      	bx	lr
 8000f14:	e000ed00 	.word	0xe000ed00
 8000f18:	05fa0000 	.word	0x05fa0000

08000f1c <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000f1c:	4b17      	ldr	r3, [pc, #92]	; (8000f7c <HAL_NVIC_SetPriority+0x60>)
 8000f1e:	68db      	ldr	r3, [r3, #12]
 8000f20:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8000f24:	b430      	push	{r4, r5}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8000f26:	f1c3 0507 	rsb	r5, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000f2a:	1d1c      	adds	r4, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8000f2c:	2d04      	cmp	r5, #4
 8000f2e:	bf28      	it	cs
 8000f30:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000f32:	2c06      	cmp	r4, #6
 8000f34:	d918      	bls.n	8000f68 <HAL_NVIC_SetPriority+0x4c>
 8000f36:	3b03      	subs	r3, #3
 8000f38:	f04f 34ff 	mov.w	r4, #4294967295
 8000f3c:	409c      	lsls	r4, r3
 8000f3e:	ea22 0404 	bic.w	r4, r2, r4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000f42:	f04f 32ff 	mov.w	r2, #4294967295
  if ((int32_t)(IRQn) >= 0)
 8000f46:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000f48:	fa02 f205 	lsl.w	r2, r2, r5
 8000f4c:	ea21 0102 	bic.w	r1, r1, r2
 8000f50:	fa01 f203 	lsl.w	r2, r1, r3
 8000f54:	ea42 0204 	orr.w	r2, r2, r4
 8000f58:	ea4f 1202 	mov.w	r2, r2, lsl #4
 8000f5c:	b2d2      	uxtb	r2, r2
  if ((int32_t)(IRQn) >= 0)
 8000f5e:	db06      	blt.n	8000f6e <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f60:	4b07      	ldr	r3, [pc, #28]	; (8000f80 <HAL_NVIC_SetPriority+0x64>)
 8000f62:	541a      	strb	r2, [r3, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8000f64:	bc30      	pop	{r4, r5}
 8000f66:	4770      	bx	lr
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000f68:	2400      	movs	r4, #0
 8000f6a:	4623      	mov	r3, r4
 8000f6c:	e7e9      	b.n	8000f42 <HAL_NVIC_SetPriority+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f6e:	f000 000f 	and.w	r0, r0, #15
 8000f72:	4b04      	ldr	r3, [pc, #16]	; (8000f84 <HAL_NVIC_SetPriority+0x68>)
 8000f74:	541a      	strb	r2, [r3, r0]
 8000f76:	bc30      	pop	{r4, r5}
 8000f78:	4770      	bx	lr
 8000f7a:	bf00      	nop
 8000f7c:	e000ed00 	.word	0xe000ed00
 8000f80:	e000e400 	.word	0xe000e400
 8000f84:	e000ed14 	.word	0xe000ed14

08000f88 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000f88:	3801      	subs	r0, #1
 8000f8a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000f8e:	d20d      	bcs.n	8000fac <HAL_SYSTICK_Config+0x24>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000f90:	4b07      	ldr	r3, [pc, #28]	; (8000fb0 <HAL_SYSTICK_Config+0x28>)
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000f92:	2200      	movs	r2, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000f94:	2107      	movs	r1, #7
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8000f96:	b430      	push	{r4, r5}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f98:	25f0      	movs	r5, #240	; 0xf0
 8000f9a:	4c06      	ldr	r4, [pc, #24]	; (8000fb4 <HAL_SYSTICK_Config+0x2c>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000f9c:	6058      	str	r0, [r3, #4]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8000f9e:	4610      	mov	r0, r2
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000fa0:	f884 5023 	strb.w	r5, [r4, #35]	; 0x23
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000fa4:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000fa6:	6019      	str	r1, [r3, #0]
   return SysTick_Config(TicksNumb);
}
 8000fa8:	bc30      	pop	{r4, r5}
 8000faa:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 8000fac:	2001      	movs	r0, #1
 8000fae:	4770      	bx	lr
 8000fb0:	e000e010 	.word	0xe000e010
 8000fb4:	e000ed00 	.word	0xe000ed00

08000fb8 <HAL_SYSTICK_IRQHandler>:
/**
  * @brief  This function handles SYSTICK interrupt request.
  * @retval None
  */
void HAL_SYSTICK_IRQHandler(void)
{
 8000fb8:	b508      	push	{r3, lr}
  HAL_SYSTICK_Callback();
 8000fba:	f005 ff6f 	bl	8006e9c <HAL_SYSTICK_Callback>
}
 8000fbe:	bd08      	pop	{r3, pc}

08000fc0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8000fc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000fc4:	4688      	mov	r8, r1
 8000fc6:	b083      	sub	sp, #12
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8000fc8:	2400      	movs	r4, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8000fca:	f8d1 9000 	ldr.w	r9, [r1]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8000fce:	f8df e1f8 	ldr.w	lr, [pc, #504]	; 80011c8 <HAL_GPIO_Init+0x208>
 8000fd2:	e003      	b.n	8000fdc <HAL_GPIO_Init+0x1c>
  for(position = 0; position < GPIO_NUMBER; position++)
 8000fd4:	3401      	adds	r4, #1
 8000fd6:	2c10      	cmp	r4, #16
 8000fd8:	f000 80b6 	beq.w	8001148 <HAL_GPIO_Init+0x188>
    ioposition = ((uint32_t)0x01) << position;
 8000fdc:	2301      	movs	r3, #1
 8000fde:	40a3      	lsls	r3, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8000fe0:	ea09 0203 	and.w	r2, r9, r3
    if(iocurrent == ioposition)
 8000fe4:	4293      	cmp	r3, r2
 8000fe6:	d1f5      	bne.n	8000fd4 <HAL_GPIO_Init+0x14>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8000fe8:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8000fec:	0067      	lsls	r7, r4, #1
 8000fee:	2103      	movs	r1, #3
 8000ff0:	f025 0c10 	bic.w	ip, r5, #16
 8000ff4:	40b9      	lsls	r1, r7
 8000ff6:	f10c 33ff 	add.w	r3, ip, #4294967295
 8000ffa:	43c9      	mvns	r1, r1
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8000ffc:	2b01      	cmp	r3, #1
 8000ffe:	d810      	bhi.n	8001022 <HAL_GPIO_Init+0x62>
        temp = GPIOx->OSPEEDR; 
 8001000:	6886      	ldr	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 8001002:	f3c5 1300 	ubfx	r3, r5, #4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8001006:	ea06 0a01 	and.w	sl, r6, r1
        temp |= (GPIO_Init->Speed << (position * 2));
 800100a:	f8d8 600c 	ldr.w	r6, [r8, #12]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800100e:	40a3      	lsls	r3, r4
        temp |= (GPIO_Init->Speed << (position * 2));
 8001010:	40be      	lsls	r6, r7
 8001012:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
 8001016:	6086      	str	r6, [r0, #8]
        temp = GPIOx->OTYPER;
 8001018:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800101a:	ea26 0602 	bic.w	r6, r6, r2
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800101e:	4333      	orrs	r3, r6
        GPIOx->OTYPER = temp;
 8001020:	6043      	str	r3, [r0, #4]
      temp = GPIOx->PUPDR;
 8001022:	68c3      	ldr	r3, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001024:	f1bc 0f02 	cmp.w	ip, #2
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8001028:	f8d8 6008 	ldr.w	r6, [r8, #8]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 800102c:	ea03 0301 	and.w	r3, r3, r1
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8001030:	fa06 f607 	lsl.w	r6, r6, r7
 8001034:	ea46 0603 	orr.w	r6, r6, r3
      GPIOx->PUPDR = temp;
 8001038:	60c6      	str	r6, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800103a:	d115      	bne.n	8001068 <HAL_GPIO_Init+0xa8>
        temp = GPIOx->AFR[position >> 3];
 800103c:	08e3      	lsrs	r3, r4, #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800103e:	f004 0c07 	and.w	ip, r4, #7
 8001042:	f04f 0b0f 	mov.w	fp, #15
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8001046:	f8d8 6010 	ldr.w	r6, [r8, #16]
 800104a:	eb00 0383 	add.w	r3, r0, r3, lsl #2
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800104e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp = GPIOx->AFR[position >> 3];
 8001052:	f8d3 a020 	ldr.w	sl, [r3, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8001056:	fa0b fb0c 	lsl.w	fp, fp, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800105a:	fa06 f60c 	lsl.w	r6, r6, ip
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800105e:	ea2a 0a0b 	bic.w	sl, sl, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8001062:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3] = temp;
 8001066:	621e      	str	r6, [r3, #32]
      temp = GPIOx->MODER;
 8001068:	6806      	ldr	r6, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 800106a:	f005 0303 	and.w	r3, r5, #3
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 800106e:	4031      	ands	r1, r6
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8001070:	40bb      	lsls	r3, r7
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8001072:	00ef      	lsls	r7, r5, #3
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8001074:	ea43 0301 	orr.w	r3, r3, r1
      GPIOx->MODER = temp;
 8001078:	6003      	str	r3, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800107a:	d5ab      	bpl.n	8000fd4 <HAL_GPIO_Init+0x14>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800107c:	4b48      	ldr	r3, [pc, #288]	; (80011a0 <HAL_GPIO_Init+0x1e0>)
 800107e:	f024 0603 	bic.w	r6, r4, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8001082:	f04f 0c0f 	mov.w	ip, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001086:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8001088:	4619      	mov	r1, r3
 800108a:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800108e:	f004 0303 	and.w	r3, r4, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001092:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8001096:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800109a:	009b      	lsls	r3, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800109c:	644f      	str	r7, [r1, #68]	; 0x44
 800109e:	6c4f      	ldr	r7, [r1, #68]	; 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80010a0:	fa0c f103 	lsl.w	r1, ip, r3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80010a4:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80010a8:	9701      	str	r7, [sp, #4]
 80010aa:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 80010ac:	68b7      	ldr	r7, [r6, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80010ae:	ea27 0101 	bic.w	r1, r7, r1
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80010b2:	4f3c      	ldr	r7, [pc, #240]	; (80011a4 <HAL_GPIO_Init+0x1e4>)
 80010b4:	42b8      	cmp	r0, r7
 80010b6:	d020      	beq.n	80010fa <HAL_GPIO_Init+0x13a>
 80010b8:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80010bc:	42b8      	cmp	r0, r7
 80010be:	d046      	beq.n	800114e <HAL_GPIO_Init+0x18e>
 80010c0:	4f39      	ldr	r7, [pc, #228]	; (80011a8 <HAL_GPIO_Init+0x1e8>)
 80010c2:	42b8      	cmp	r0, r7
 80010c4:	d048      	beq.n	8001158 <HAL_GPIO_Init+0x198>
 80010c6:	4f39      	ldr	r7, [pc, #228]	; (80011ac <HAL_GPIO_Init+0x1ec>)
 80010c8:	42b8      	cmp	r0, r7
 80010ca:	d04a      	beq.n	8001162 <HAL_GPIO_Init+0x1a2>
 80010cc:	4f38      	ldr	r7, [pc, #224]	; (80011b0 <HAL_GPIO_Init+0x1f0>)
 80010ce:	42b8      	cmp	r0, r7
 80010d0:	d04c      	beq.n	800116c <HAL_GPIO_Init+0x1ac>
 80010d2:	4f38      	ldr	r7, [pc, #224]	; (80011b4 <HAL_GPIO_Init+0x1f4>)
 80010d4:	42b8      	cmp	r0, r7
 80010d6:	d053      	beq.n	8001180 <HAL_GPIO_Init+0x1c0>
 80010d8:	4f37      	ldr	r7, [pc, #220]	; (80011b8 <HAL_GPIO_Init+0x1f8>)
 80010da:	42b8      	cmp	r0, r7
 80010dc:	d055      	beq.n	800118a <HAL_GPIO_Init+0x1ca>
 80010de:	4f37      	ldr	r7, [pc, #220]	; (80011bc <HAL_GPIO_Init+0x1fc>)
 80010e0:	42b8      	cmp	r0, r7
 80010e2:	d048      	beq.n	8001176 <HAL_GPIO_Init+0x1b6>
 80010e4:	4f36      	ldr	r7, [pc, #216]	; (80011c0 <HAL_GPIO_Init+0x200>)
 80010e6:	42b8      	cmp	r0, r7
 80010e8:	d054      	beq.n	8001194 <HAL_GPIO_Init+0x1d4>
 80010ea:	4f36      	ldr	r7, [pc, #216]	; (80011c4 <HAL_GPIO_Init+0x204>)
 80010ec:	42b8      	cmp	r0, r7
 80010ee:	bf0c      	ite	eq
 80010f0:	2709      	moveq	r7, #9
 80010f2:	270a      	movne	r7, #10
 80010f4:	fa07 f303 	lsl.w	r3, r7, r3
 80010f8:	4319      	orrs	r1, r3
        SYSCFG->EXTICR[position >> 2] = temp;
 80010fa:	60b1      	str	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80010fc:	43d1      	mvns	r1, r2
        temp = EXTI->IMR;
 80010fe:	f8de 3000 	ldr.w	r3, [lr]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001102:	03ee      	lsls	r6, r5, #15
  for(position = 0; position < GPIO_NUMBER; position++)
 8001104:	f104 0401 	add.w	r4, r4, #1
        temp &= ~((uint32_t)iocurrent);
 8001108:	bf54      	ite	pl
 800110a:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 800110c:	4313      	orrmi	r3, r2
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800110e:	03af      	lsls	r7, r5, #14
        EXTI->IMR = temp;
 8001110:	f8ce 3000 	str.w	r3, [lr]
        temp = EXTI->EMR;
 8001114:	f8de 3004 	ldr.w	r3, [lr, #4]
        temp &= ~((uint32_t)iocurrent);
 8001118:	bf54      	ite	pl
 800111a:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 800111c:	4313      	orrmi	r3, r2
        EXTI->EMR = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800111e:	02ee      	lsls	r6, r5, #11
        EXTI->EMR = temp;
 8001120:	f8ce 3004 	str.w	r3, [lr, #4]
        temp = EXTI->RTSR;
 8001124:	f8de 3008 	ldr.w	r3, [lr, #8]
        temp &= ~((uint32_t)iocurrent);
 8001128:	bf54      	ite	pl
 800112a:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 800112c:	4313      	orrmi	r3, r2
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800112e:	02ad      	lsls	r5, r5, #10
        EXTI->RTSR = temp;
 8001130:	f8ce 3008 	str.w	r3, [lr, #8]
        temp = EXTI->FTSR;
 8001134:	f8de 300c 	ldr.w	r3, [lr, #12]
        temp &= ~((uint32_t)iocurrent);
 8001138:	bf54      	ite	pl
 800113a:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 800113c:	4313      	orrmi	r3, r2
  for(position = 0; position < GPIO_NUMBER; position++)
 800113e:	2c10      	cmp	r4, #16
        }
        EXTI->FTSR = temp;
 8001140:	f8ce 300c 	str.w	r3, [lr, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 8001144:	f47f af4a 	bne.w	8000fdc <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001148:	b003      	add	sp, #12
 800114a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800114e:	2701      	movs	r7, #1
 8001150:	fa07 f303 	lsl.w	r3, r7, r3
 8001154:	4319      	orrs	r1, r3
 8001156:	e7d0      	b.n	80010fa <HAL_GPIO_Init+0x13a>
 8001158:	2702      	movs	r7, #2
 800115a:	fa07 f303 	lsl.w	r3, r7, r3
 800115e:	4319      	orrs	r1, r3
 8001160:	e7cb      	b.n	80010fa <HAL_GPIO_Init+0x13a>
 8001162:	2703      	movs	r7, #3
 8001164:	fa07 f303 	lsl.w	r3, r7, r3
 8001168:	4319      	orrs	r1, r3
 800116a:	e7c6      	b.n	80010fa <HAL_GPIO_Init+0x13a>
 800116c:	2704      	movs	r7, #4
 800116e:	fa07 f303 	lsl.w	r3, r7, r3
 8001172:	4319      	orrs	r1, r3
 8001174:	e7c1      	b.n	80010fa <HAL_GPIO_Init+0x13a>
 8001176:	2707      	movs	r7, #7
 8001178:	fa07 f303 	lsl.w	r3, r7, r3
 800117c:	4319      	orrs	r1, r3
 800117e:	e7bc      	b.n	80010fa <HAL_GPIO_Init+0x13a>
 8001180:	2705      	movs	r7, #5
 8001182:	fa07 f303 	lsl.w	r3, r7, r3
 8001186:	4319      	orrs	r1, r3
 8001188:	e7b7      	b.n	80010fa <HAL_GPIO_Init+0x13a>
 800118a:	2706      	movs	r7, #6
 800118c:	fa07 f303 	lsl.w	r3, r7, r3
 8001190:	4319      	orrs	r1, r3
 8001192:	e7b2      	b.n	80010fa <HAL_GPIO_Init+0x13a>
 8001194:	2708      	movs	r7, #8
 8001196:	fa07 f303 	lsl.w	r3, r7, r3
 800119a:	4319      	orrs	r1, r3
 800119c:	e7ad      	b.n	80010fa <HAL_GPIO_Init+0x13a>
 800119e:	bf00      	nop
 80011a0:	40023800 	.word	0x40023800
 80011a4:	40020000 	.word	0x40020000
 80011a8:	40020800 	.word	0x40020800
 80011ac:	40020c00 	.word	0x40020c00
 80011b0:	40021000 	.word	0x40021000
 80011b4:	40021400 	.word	0x40021400
 80011b8:	40021800 	.word	0x40021800
 80011bc:	40021c00 	.word	0x40021c00
 80011c0:	40022000 	.word	0x40022000
 80011c4:	40022400 	.word	0x40022400
 80011c8:	40013c00 	.word	0x40013c00

080011cc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80011cc:	b902      	cbnz	r2, 80011d0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 80011ce:	0409      	lsls	r1, r1, #16
 80011d0:	6181      	str	r1, [r0, #24]
  }
}
 80011d2:	4770      	bx	lr

080011d4 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80011d4:	b570      	push	{r4, r5, r6, lr}
 80011d6:	4604      	mov	r4, r0
 80011d8:	460d      	mov	r5, r1
 80011da:	4616      	mov	r6, r2
 80011dc:	1c6a      	adds	r2, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 80011de:	6823      	ldr	r3, [r4, #0]
 80011e0:	d12c      	bne.n	800123c <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 80011e2:	699a      	ldr	r2, [r3, #24]
 80011e4:	0790      	lsls	r0, r2, #30
 80011e6:	d427      	bmi.n	8001238 <I2C_WaitOnTXISFlagUntilTimeout+0x64>
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80011e8:	699a      	ldr	r2, [r3, #24]
 80011ea:	06d1      	lsls	r1, r2, #27
 80011ec:	d5f9      	bpl.n	80011e2 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
  {
    /* Wait until STOP Flag is reset */
    /* AutoEnd should be initiate after AF */
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80011ee:	699a      	ldr	r2, [r3, #24]
 80011f0:	0691      	lsls	r1, r2, #26
 80011f2:	d5fc      	bpl.n	80011ee <I2C_WaitOnTXISFlagUntilTimeout+0x1a>

    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80011f4:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80011f6:	2110      	movs	r1, #16
 80011f8:	61d9      	str	r1, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80011fa:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 80011fc:	699a      	ldr	r2, [r3, #24]
 80011fe:	0790      	lsls	r0, r2, #30
 8001200:	d501      	bpl.n	8001206 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    hi2c->Instance->TXDR = 0x00U;
 8001202:	2200      	movs	r2, #0
 8001204:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8001206:	699a      	ldr	r2, [r3, #24]
 8001208:	07d1      	lsls	r1, r2, #31
 800120a:	d403      	bmi.n	8001214 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 800120c:	699a      	ldr	r2, [r3, #24]
 800120e:	f042 0201 	orr.w	r2, r2, #1
 8001212:	619a      	str	r2, [r3, #24]

    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8001214:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001216:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
 8001218:	4e1b      	ldr	r6, [pc, #108]	; (8001288 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>)
    hi2c->State = HAL_I2C_STATE_READY;
 800121a:	2520      	movs	r5, #32
      return HAL_ERROR;
 800121c:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 800121e:	4032      	ands	r2, r6
 8001220:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001222:	6c63      	ldr	r3, [r4, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8001224:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001228:	f043 0304 	orr.w	r3, r3, #4
 800122c:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 800122e:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001232:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 8001236:	bd70      	pop	{r4, r5, r6, pc}
  return HAL_OK;
 8001238:	2000      	movs	r0, #0
}
 800123a:	bd70      	pop	{r4, r5, r6, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 800123c:	699a      	ldr	r2, [r3, #24]
 800123e:	0792      	lsls	r2, r2, #30
 8001240:	d4fa      	bmi.n	8001238 <I2C_WaitOnTXISFlagUntilTimeout+0x64>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001242:	699a      	ldr	r2, [r3, #24]
 8001244:	06d0      	lsls	r0, r2, #27
 8001246:	d41b      	bmi.n	8001280 <I2C_WaitOnTXISFlagUntilTimeout+0xac>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001248:	f7ff fe3c 	bl	8000ec4 <HAL_GetTick>
 800124c:	1b80      	subs	r0, r0, r6
 800124e:	42a8      	cmp	r0, r5
 8001250:	d801      	bhi.n	8001256 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
 8001252:	2d00      	cmp	r5, #0
 8001254:	d1c2      	bne.n	80011dc <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001256:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001258:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800125a:	2200      	movs	r2, #0
        __HAL_UNLOCK(hi2c);
 800125c:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800125e:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001260:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001264:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001266:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800126a:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
 800126e:	bd70      	pop	{r4, r5, r6, pc}
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001270:	f7ff fe28 	bl	8000ec4 <HAL_GetTick>
 8001274:	1b80      	subs	r0, r0, r6
 8001276:	4285      	cmp	r5, r0
 8001278:	d3ed      	bcc.n	8001256 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
 800127a:	2d00      	cmp	r5, #0
 800127c:	d0eb      	beq.n	8001256 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
 800127e:	6823      	ldr	r3, [r4, #0]
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001280:	699a      	ldr	r2, [r3, #24]
 8001282:	0692      	lsls	r2, r2, #26
 8001284:	d5f4      	bpl.n	8001270 <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
 8001286:	e7b5      	b.n	80011f4 <I2C_WaitOnTXISFlagUntilTimeout+0x20>
 8001288:	fe00e800 	.word	0xfe00e800

0800128c <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 800128c:	b570      	push	{r4, r5, r6, lr}
 800128e:	4604      	mov	r4, r0
 8001290:	460d      	mov	r5, r1
 8001292:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001294:	6823      	ldr	r3, [r4, #0]
 8001296:	699a      	ldr	r2, [r3, #24]
 8001298:	0692      	lsls	r2, r2, #26
 800129a:	d449      	bmi.n	8001330 <I2C_WaitOnSTOPFlagUntilTimeout+0xa4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800129c:	699a      	ldr	r2, [r3, #24]
 800129e:	06d2      	lsls	r2, r2, #27
 80012a0:	d526      	bpl.n	80012f0 <I2C_WaitOnSTOPFlagUntilTimeout+0x64>
 80012a2:	1c68      	adds	r0, r5, #1
 80012a4:	d138      	bne.n	8001318 <I2C_WaitOnSTOPFlagUntilTimeout+0x8c>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80012a6:	699a      	ldr	r2, [r3, #24]
 80012a8:	0691      	lsls	r1, r2, #26
 80012aa:	d5fc      	bpl.n	80012a6 <I2C_WaitOnSTOPFlagUntilTimeout+0x1a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80012ac:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80012ae:	2110      	movs	r1, #16
 80012b0:	61d9      	str	r1, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80012b2:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 80012b4:	699a      	ldr	r2, [r3, #24]
 80012b6:	0790      	lsls	r0, r2, #30
 80012b8:	d501      	bpl.n	80012be <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    hi2c->Instance->TXDR = 0x00U;
 80012ba:	2200      	movs	r2, #0
 80012bc:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80012be:	699a      	ldr	r2, [r3, #24]
 80012c0:	07d1      	lsls	r1, r2, #31
 80012c2:	d403      	bmi.n	80012cc <I2C_WaitOnSTOPFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 80012c4:	699a      	ldr	r2, [r3, #24]
 80012c6:	f042 0201 	orr.w	r2, r2, #1
 80012ca:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
 80012cc:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80012ce:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
 80012d0:	4e18      	ldr	r6, [pc, #96]	; (8001334 <I2C_WaitOnSTOPFlagUntilTimeout+0xa8>)
    hi2c->State = HAL_I2C_STATE_READY;
 80012d2:	2520      	movs	r5, #32
      return HAL_ERROR;
 80012d4:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 80012d6:	4032      	ands	r2, r6
 80012d8:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 80012da:	6c63      	ldr	r3, [r4, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
 80012dc:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 80012e0:	f043 0304 	orr.w	r3, r3, #4
 80012e4:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 80012e6:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80012ea:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 80012ee:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80012f0:	f7ff fde8 	bl	8000ec4 <HAL_GetTick>
 80012f4:	1b80      	subs	r0, r0, r6
 80012f6:	42a8      	cmp	r0, r5
 80012f8:	d801      	bhi.n	80012fe <I2C_WaitOnSTOPFlagUntilTimeout+0x72>
 80012fa:	2d00      	cmp	r5, #0
 80012fc:	d1ca      	bne.n	8001294 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80012fe:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001300:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001302:	2200      	movs	r2, #0
        __HAL_UNLOCK(hi2c);
 8001304:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001306:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001308:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800130c:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 800130e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001312:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
 8001316:	bd70      	pop	{r4, r5, r6, pc}
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001318:	699a      	ldr	r2, [r3, #24]
 800131a:	0692      	lsls	r2, r2, #26
 800131c:	d4c6      	bmi.n	80012ac <I2C_WaitOnSTOPFlagUntilTimeout+0x20>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800131e:	f7ff fdd1 	bl	8000ec4 <HAL_GetTick>
 8001322:	1b80      	subs	r0, r0, r6
 8001324:	4285      	cmp	r5, r0
 8001326:	d3ea      	bcc.n	80012fe <I2C_WaitOnSTOPFlagUntilTimeout+0x72>
 8001328:	2d00      	cmp	r5, #0
 800132a:	d0e8      	beq.n	80012fe <I2C_WaitOnSTOPFlagUntilTimeout+0x72>
 800132c:	6823      	ldr	r3, [r4, #0]
 800132e:	e7b8      	b.n	80012a2 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
 8001330:	2000      	movs	r0, #0
}
 8001332:	bd70      	pop	{r4, r5, r6, pc}
 8001334:	fe00e800 	.word	0xfe00e800

08001338 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8001338:	2800      	cmp	r0, #0
 800133a:	d04d      	beq.n	80013d8 <HAL_I2C_Init+0xa0>
{
 800133c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800133e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8001342:	4604      	mov	r4, r0
 8001344:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001348:	2b00      	cmp	r3, #0
 800134a:	d040      	beq.n	80013ce <HAL_I2C_Init+0x96>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800134c:	2124      	movs	r1, #36	; 0x24
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800134e:	68e5      	ldr	r5, [r4, #12]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001350:	e9d4 3200 	ldrd	r3, r2, [r4]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8001354:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001358:	2d01      	cmp	r5, #1
  __HAL_I2C_DISABLE(hi2c);
 800135a:	6818      	ldr	r0, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 800135c:	f022 6170 	bic.w	r1, r2, #251658240	; 0xf000000
 8001360:	68a2      	ldr	r2, [r4, #8]
  __HAL_I2C_DISABLE(hi2c);
 8001362:	f020 0001 	bic.w	r0, r0, #1
 8001366:	6018      	str	r0, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001368:	6119      	str	r1, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 800136a:	6899      	ldr	r1, [r3, #8]
 800136c:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
 8001370:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001372:	d028      	beq.n	80013c6 <HAL_I2C_Init+0x8e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8001374:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8001378:	2d02      	cmp	r5, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 800137a:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 800137c:	d102      	bne.n	8001384 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 800137e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001382:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001384:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001386:	2100      	movs	r1, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001388:	4814      	ldr	r0, [pc, #80]	; (80013dc <HAL_I2C_Init+0xa4>)
  hi2c->State = HAL_I2C_STATE_READY;
 800138a:	2720      	movs	r7, #32
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 800138c:	69a6      	ldr	r6, [r4, #24]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800138e:	4310      	orrs	r0, r2
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001390:	e9d4 2504 	ldrd	r2, r5, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001394:	6058      	str	r0, [r3, #4]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001396:	432a      	orrs	r2, r5
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8001398:	68d8      	ldr	r0, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 800139a:	69e5      	ldr	r5, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 800139c:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80013a0:	6a26      	ldr	r6, [r4, #32]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80013a2:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80013a6:	4335      	orrs	r5, r6
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80013a8:	60d8      	str	r0, [r3, #12]
  return HAL_OK;
 80013aa:	4608      	mov	r0, r1
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 80013ac:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80013ae:	601d      	str	r5, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 80013b0:	681a      	ldr	r2, [r3, #0]
 80013b2:	f042 0201 	orr.w	r2, r2, #1
 80013b6:	601a      	str	r2, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80013b8:	6461      	str	r1, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 80013ba:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80013be:	6321      	str	r1, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80013c0:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 80013c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80013c6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80013ca:	609a      	str	r2, [r3, #8]
 80013cc:	e7da      	b.n	8001384 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
 80013ce:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 80013d2:	f005 ff87 	bl	80072e4 <HAL_I2C_MspInit>
 80013d6:	e7b9      	b.n	800134c <HAL_I2C_Init+0x14>
    return HAL_ERROR;
 80013d8:	2001      	movs	r0, #1
}
 80013da:	4770      	bx	lr
 80013dc:	02008000 	.word	0x02008000

080013e0 <HAL_I2C_Master_Transmit>:
{
 80013e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 80013e4:	f890 4041 	ldrb.w	r4, [r0, #65]	; 0x41
{
 80013e8:	9e08      	ldr	r6, [sp, #32]
  if (hi2c->State == HAL_I2C_STATE_READY)
 80013ea:	2c20      	cmp	r4, #32
 80013ec:	d16f      	bne.n	80014ce <HAL_I2C_Master_Transmit+0xee>
    __HAL_LOCK(hi2c);
 80013ee:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 80013f2:	2c01      	cmp	r4, #1
 80013f4:	d06b      	beq.n	80014ce <HAL_I2C_Master_Transmit+0xee>
 80013f6:	4698      	mov	r8, r3
 80013f8:	2301      	movs	r3, #1
 80013fa:	4691      	mov	r9, r2
 80013fc:	460f      	mov	r7, r1
 80013fe:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8001402:	4604      	mov	r4, r0
    tickstart = HAL_GetTick();
 8001404:	f7ff fd5e 	bl	8000ec4 <HAL_GetTick>
 8001408:	4605      	mov	r5, r0
 800140a:	e004      	b.n	8001416 <HAL_I2C_Master_Transmit+0x36>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800140c:	f7ff fd5a 	bl	8000ec4 <HAL_GetTick>
 8001410:	1b40      	subs	r0, r0, r5
 8001412:	2819      	cmp	r0, #25
 8001414:	d875      	bhi.n	8001502 <HAL_I2C_Master_Transmit+0x122>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001416:	6823      	ldr	r3, [r4, #0]
 8001418:	6998      	ldr	r0, [r3, #24]
 800141a:	f410 4000 	ands.w	r0, r0, #32768	; 0x8000
 800141e:	d1f5      	bne.n	800140c <HAL_I2C_Master_Transmit+0x2c>
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001420:	2210      	movs	r2, #16
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8001422:	2121      	movs	r1, #33	; 0x21
    hi2c->pBuffPtr  = pData;
 8001424:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 8001428:	f3c7 0709 	ubfx	r7, r7, #0, #10
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800142c:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001430:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001434:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->XferCount = Size;
 8001436:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800143a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 800143c:	6360      	str	r0, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800143e:	2aff      	cmp	r2, #255	; 0xff
 8001440:	d848      	bhi.n	80014d4 <HAL_I2C_Master_Transmit+0xf4>
      hi2c->XferSize = hi2c->XferCount;
 8001442:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2,
 8001444:	4a48      	ldr	r2, [pc, #288]	; (8001568 <HAL_I2C_Master_Transmit+0x188>)
      hi2c->XferSize = hi2c->XferCount;
 8001446:	b289      	uxth	r1, r1
  MODIFY_REG(hi2c->Instance->CR2,
 8001448:	6858      	ldr	r0, [r3, #4]
 800144a:	433a      	orrs	r2, r7
 800144c:	f8df e124 	ldr.w	lr, [pc, #292]	; 8001574 <HAL_I2C_Master_Transmit+0x194>
 8001450:	fa5f fc81 	uxtb.w	ip, r1
      hi2c->XferSize = hi2c->XferCount;
 8001454:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001456:	ea00 010e 	and.w	r1, r0, lr
 800145a:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800145e:	430a      	orrs	r2, r1
 8001460:	605a      	str	r2, [r3, #4]
 8001462:	f8df 8114 	ldr.w	r8, [pc, #276]	; 8001578 <HAL_I2C_Master_Transmit+0x198>
 8001466:	f8df 9114 	ldr.w	r9, [pc, #276]	; 800157c <HAL_I2C_Master_Transmit+0x19c>
 800146a:	ea47 0808 	orr.w	r8, r7, r8
    while (hi2c->XferCount > 0U)
 800146e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001470:	462a      	mov	r2, r5
 8001472:	4631      	mov	r1, r6
 8001474:	4620      	mov	r0, r4
    while (hi2c->XferCount > 0U)
 8001476:	b29b      	uxth	r3, r3
 8001478:	2b00      	cmp	r3, #0
 800147a:	d062      	beq.n	8001542 <HAL_I2C_Master_Transmit+0x162>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800147c:	f7ff feaa 	bl	80011d4 <I2C_WaitOnTXISFlagUntilTimeout>
 8001480:	2800      	cmp	r0, #0
 8001482:	d15b      	bne.n	800153c <HAL_I2C_Master_Transmit+0x15c>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8001484:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001486:	6821      	ldr	r1, [r4, #0]
 8001488:	f810 2b01 	ldrb.w	r2, [r0], #1
      hi2c->XferSize--;
 800148c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 800148e:	628a      	str	r2, [r1, #40]	; 0x28
      hi2c->XferCount--;
 8001490:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8001492:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 8001494:	6260      	str	r0, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8001496:	3a01      	subs	r2, #1
      hi2c->XferSize--;
 8001498:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
 800149a:	b292      	uxth	r2, r2
      hi2c->XferSize--;
 800149c:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800149e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80014a0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80014a2:	b292      	uxth	r2, r2
 80014a4:	2a00      	cmp	r2, #0
 80014a6:	d0e2      	beq.n	800146e <HAL_I2C_Master_Transmit+0x8e>
 80014a8:	2b00      	cmp	r3, #0
 80014aa:	d1e0      	bne.n	800146e <HAL_I2C_Master_Transmit+0x8e>
 80014ac:	1c70      	adds	r0, r6, #1
 80014ae:	d11d      	bne.n	80014ec <HAL_I2C_Master_Transmit+0x10c>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80014b0:	698b      	ldr	r3, [r1, #24]
 80014b2:	061a      	lsls	r2, r3, #24
 80014b4:	d5fc      	bpl.n	80014b0 <HAL_I2C_Master_Transmit+0xd0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80014b6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80014b8:	2bff      	cmp	r3, #255	; 0xff
 80014ba:	d930      	bls.n	800151e <HAL_I2C_Master_Transmit+0x13e>
  MODIFY_REG(hi2c->Instance->CR2,
 80014bc:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80014be:	22ff      	movs	r2, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 80014c0:	ea03 0309 	and.w	r3, r3, r9
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80014c4:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 80014c6:	ea43 0308 	orr.w	r3, r3, r8
 80014ca:	604b      	str	r3, [r1, #4]
 80014cc:	e7cf      	b.n	800146e <HAL_I2C_Master_Transmit+0x8e>
    return HAL_BUSY;
 80014ce:	2002      	movs	r0, #2
}
 80014d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  MODIFY_REG(hi2c->Instance->CR2,
 80014d4:	685a      	ldr	r2, [r3, #4]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80014d6:	20ff      	movs	r0, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 80014d8:	f8df c098 	ldr.w	ip, [pc, #152]	; 8001574 <HAL_I2C_Master_Transmit+0x194>
 80014dc:	4923      	ldr	r1, [pc, #140]	; (800156c <HAL_I2C_Master_Transmit+0x18c>)
 80014de:	ea02 020c 	and.w	r2, r2, ip
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80014e2:	8520      	strh	r0, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 80014e4:	4339      	orrs	r1, r7
 80014e6:	430a      	orrs	r2, r1
 80014e8:	605a      	str	r2, [r3, #4]
 80014ea:	e7ba      	b.n	8001462 <HAL_I2C_Master_Transmit+0x82>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80014ec:	698b      	ldr	r3, [r1, #24]
 80014ee:	061b      	lsls	r3, r3, #24
 80014f0:	d4e1      	bmi.n	80014b6 <HAL_I2C_Master_Transmit+0xd6>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80014f2:	f7ff fce7 	bl	8000ec4 <HAL_GetTick>
 80014f6:	1b40      	subs	r0, r0, r5
 80014f8:	4286      	cmp	r6, r0
 80014fa:	d302      	bcc.n	8001502 <HAL_I2C_Master_Transmit+0x122>
 80014fc:	b10e      	cbz	r6, 8001502 <HAL_I2C_Master_Transmit+0x122>
 80014fe:	6821      	ldr	r1, [r4, #0]
 8001500:	e7d4      	b.n	80014ac <HAL_I2C_Master_Transmit+0xcc>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001502:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001504:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001506:	2200      	movs	r2, #0
          return HAL_ERROR;
 8001508:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800150a:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 800150c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001510:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001512:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001516:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
 800151a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
          hi2c->XferSize = hi2c->XferCount;
 800151e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 8001520:	f047 7300 	orr.w	r3, r7, #33554432	; 0x2000000
 8001524:	6848      	ldr	r0, [r1, #4]
          hi2c->XferSize = hi2c->XferCount;
 8001526:	b292      	uxth	r2, r2
  MODIFY_REG(hi2c->Instance->CR2,
 8001528:	ea00 0009 	and.w	r0, r0, r9
 800152c:	fa5f fc82 	uxtb.w	ip, r2
          hi2c->XferSize = hi2c->XferCount;
 8001530:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001532:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 8001536:	4303      	orrs	r3, r0
 8001538:	604b      	str	r3, [r1, #4]
 800153a:	e798      	b.n	800146e <HAL_I2C_Master_Transmit+0x8e>
        return HAL_ERROR;
 800153c:	2001      	movs	r0, #1
}
 800153e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001542:	f7ff fea3 	bl	800128c <I2C_WaitOnSTOPFlagUntilTimeout>
 8001546:	2800      	cmp	r0, #0
 8001548:	d1f8      	bne.n	800153c <HAL_I2C_Master_Transmit+0x15c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800154a:	6823      	ldr	r3, [r4, #0]
 800154c:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
 800154e:	4d08      	ldr	r5, [pc, #32]	; (8001570 <HAL_I2C_Master_Transmit+0x190>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001550:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8001552:	685a      	ldr	r2, [r3, #4]
 8001554:	402a      	ands	r2, r5
 8001556:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8001558:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 800155c:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8001560:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8001564:	e7b4      	b.n	80014d0 <HAL_I2C_Master_Transmit+0xf0>
 8001566:	bf00      	nop
 8001568:	82002000 	.word	0x82002000
 800156c:	81ff2000 	.word	0x81ff2000
 8001570:	fe00e800 	.word	0xfe00e800
 8001574:	fc009800 	.word	0xfc009800
 8001578:	01ff0000 	.word	0x01ff0000
 800157c:	fc009c00 	.word	0xfc009c00

08001580 <HAL_I2C_Master_Receive>:
{
 8001580:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001584:	f890 4041 	ldrb.w	r4, [r0, #65]	; 0x41
{
 8001588:	9d08      	ldr	r5, [sp, #32]
  if (hi2c->State == HAL_I2C_STATE_READY)
 800158a:	2c20      	cmp	r4, #32
 800158c:	d17f      	bne.n	800168e <HAL_I2C_Master_Receive+0x10e>
    __HAL_LOCK(hi2c);
 800158e:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8001592:	2c01      	cmp	r4, #1
 8001594:	d07b      	beq.n	800168e <HAL_I2C_Master_Receive+0x10e>
 8001596:	4698      	mov	r8, r3
 8001598:	2301      	movs	r3, #1
 800159a:	4691      	mov	r9, r2
 800159c:	460f      	mov	r7, r1
 800159e:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 80015a2:	4604      	mov	r4, r0
    tickstart = HAL_GetTick();
 80015a4:	f7ff fc8e 	bl	8000ec4 <HAL_GetTick>
 80015a8:	4606      	mov	r6, r0
 80015aa:	e004      	b.n	80015b6 <HAL_I2C_Master_Receive+0x36>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80015ac:	f7ff fc8a 	bl	8000ec4 <HAL_GetTick>
 80015b0:	1b80      	subs	r0, r0, r6
 80015b2:	2819      	cmp	r0, #25
 80015b4:	d878      	bhi.n	80016a8 <HAL_I2C_Master_Receive+0x128>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80015b6:	6823      	ldr	r3, [r4, #0]
 80015b8:	6998      	ldr	r0, [r3, #24]
 80015ba:	f410 4000 	ands.w	r0, r0, #32768	; 0x8000
 80015be:	d1f5      	bne.n	80015ac <HAL_I2C_Master_Receive+0x2c>
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 80015c0:	2210      	movs	r2, #16
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80015c2:	2122      	movs	r1, #34	; 0x22
    hi2c->pBuffPtr  = pData;
 80015c4:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 80015c8:	f3c7 0709 	ubfx	r7, r7, #0, #10
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80015cc:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 80015d0:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80015d4:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->XferCount = Size;
 80015d6:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80015da:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 80015dc:	6360      	str	r0, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80015de:	2aff      	cmp	r2, #255	; 0xff
 80015e0:	d86f      	bhi.n	80016c2 <HAL_I2C_Master_Receive+0x142>
      hi2c->XferSize = hi2c->XferCount;
 80015e2:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 80015e4:	4a7c      	ldr	r2, [pc, #496]	; (80017d8 <HAL_I2C_Master_Receive+0x258>)
      hi2c->XferSize = hi2c->XferCount;
 80015e6:	b289      	uxth	r1, r1
  MODIFY_REG(hi2c->Instance->CR2,
 80015e8:	6858      	ldr	r0, [r3, #4]
 80015ea:	433a      	orrs	r2, r7
 80015ec:	f8df e1f4 	ldr.w	lr, [pc, #500]	; 80017e4 <HAL_I2C_Master_Receive+0x264>
 80015f0:	fa5f fc81 	uxtb.w	ip, r1
      hi2c->XferSize = hi2c->XferCount;
 80015f4:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 80015f6:	ea00 010e 	and.w	r1, r0, lr
 80015fa:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 80015fe:	430a      	orrs	r2, r1
 8001600:	605a      	str	r2, [r3, #4]
 8001602:	f8df 81e4 	ldr.w	r8, [pc, #484]	; 80017e8 <HAL_I2C_Master_Receive+0x268>
 8001606:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 80017ec <HAL_I2C_Master_Receive+0x26c>
 800160a:	ea47 0808 	orr.w	r8, r7, r8
    while (hi2c->XferCount > 0U)
 800160e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001610:	b29b      	uxth	r3, r3
 8001612:	b96b      	cbnz	r3, 8001630 <HAL_I2C_Master_Receive+0xb0>
 8001614:	e099      	b.n	800174a <HAL_I2C_Master_Receive+0x1ca>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8001616:	699a      	ldr	r2, [r3, #24]
 8001618:	0690      	lsls	r0, r2, #26
 800161a:	f100 80b6 	bmi.w	800178a <HAL_I2C_Master_Receive+0x20a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800161e:	f7ff fc51 	bl	8000ec4 <HAL_GetTick>
 8001622:	1b80      	subs	r0, r0, r6
 8001624:	4285      	cmp	r5, r0
 8001626:	f0c0 80a5 	bcc.w	8001774 <HAL_I2C_Master_Receive+0x1f4>
 800162a:	2d00      	cmp	r5, #0
 800162c:	f000 80a2 	beq.w	8001774 <HAL_I2C_Master_Receive+0x1f4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8001630:	6823      	ldr	r3, [r4, #0]
 8001632:	699a      	ldr	r2, [r3, #24]
 8001634:	0752      	lsls	r2, r2, #29
 8001636:	d45c      	bmi.n	80016f2 <HAL_I2C_Master_Receive+0x172>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001638:	699a      	ldr	r2, [r3, #24]
 800163a:	06d0      	lsls	r0, r2, #27
 800163c:	d5eb      	bpl.n	8001616 <HAL_I2C_Master_Receive+0x96>
 800163e:	1c69      	adds	r1, r5, #1
 8001640:	d14b      	bne.n	80016da <HAL_I2C_Master_Receive+0x15a>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001642:	699a      	ldr	r2, [r3, #24]
 8001644:	0692      	lsls	r2, r2, #26
 8001646:	d5fc      	bpl.n	8001642 <HAL_I2C_Master_Receive+0xc2>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001648:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800164a:	2110      	movs	r1, #16
 800164c:	61d9      	str	r1, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800164e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8001650:	699a      	ldr	r2, [r3, #24]
 8001652:	0796      	lsls	r6, r2, #30
 8001654:	d501      	bpl.n	800165a <HAL_I2C_Master_Receive+0xda>
    hi2c->Instance->TXDR = 0x00U;
 8001656:	2200      	movs	r2, #0
 8001658:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800165a:	699a      	ldr	r2, [r3, #24]
 800165c:	07d5      	lsls	r5, r2, #31
 800165e:	d403      	bmi.n	8001668 <HAL_I2C_Master_Receive+0xe8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8001660:	699a      	ldr	r2, [r3, #24]
 8001662:	f042 0201 	orr.w	r2, r2, #1
 8001666:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
 8001668:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800166a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
 800166c:	4e5b      	ldr	r6, [pc, #364]	; (80017dc <HAL_I2C_Master_Receive+0x25c>)
    hi2c->State = HAL_I2C_STATE_READY;
 800166e:	2520      	movs	r5, #32
        return HAL_ERROR;
 8001670:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8001672:	4032      	ands	r2, r6
 8001674:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001676:	6c63      	ldr	r3, [r4, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
 8001678:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800167c:	f043 0304 	orr.w	r3, r3, #4
 8001680:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8001682:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001686:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 800168a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    return HAL_BUSY;
 800168e:	2002      	movs	r0, #2
}
 8001690:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001694:	6993      	ldr	r3, [r2, #24]
 8001696:	061b      	lsls	r3, r3, #24
 8001698:	d447      	bmi.n	800172a <HAL_I2C_Master_Receive+0x1aa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800169a:	f7ff fc13 	bl	8000ec4 <HAL_GetTick>
 800169e:	1b80      	subs	r0, r0, r6
 80016a0:	4285      	cmp	r5, r0
 80016a2:	d301      	bcc.n	80016a8 <HAL_I2C_Master_Receive+0x128>
 80016a4:	2d00      	cmp	r5, #0
 80016a6:	d13a      	bne.n	800171e <HAL_I2C_Master_Receive+0x19e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80016a8:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80016aa:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80016ac:	2200      	movs	r2, #0
          return HAL_ERROR;
 80016ae:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80016b0:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 80016b2:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80016b6:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80016b8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80016bc:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 80016c0:	e7e6      	b.n	8001690 <HAL_I2C_Master_Receive+0x110>
  MODIFY_REG(hi2c->Instance->CR2,
 80016c2:	685a      	ldr	r2, [r3, #4]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80016c4:	20ff      	movs	r0, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 80016c6:	f8df c11c 	ldr.w	ip, [pc, #284]	; 80017e4 <HAL_I2C_Master_Receive+0x264>
 80016ca:	4945      	ldr	r1, [pc, #276]	; (80017e0 <HAL_I2C_Master_Receive+0x260>)
 80016cc:	ea02 020c 	and.w	r2, r2, ip
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80016d0:	8520      	strh	r0, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 80016d2:	4339      	orrs	r1, r7
 80016d4:	430a      	orrs	r2, r1
 80016d6:	605a      	str	r2, [r3, #4]
 80016d8:	e793      	b.n	8001602 <HAL_I2C_Master_Receive+0x82>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80016da:	699a      	ldr	r2, [r3, #24]
 80016dc:	0697      	lsls	r7, r2, #26
 80016de:	d4b3      	bmi.n	8001648 <HAL_I2C_Master_Receive+0xc8>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80016e0:	f7ff fbf0 	bl	8000ec4 <HAL_GetTick>
 80016e4:	1b80      	subs	r0, r0, r6
 80016e6:	4285      	cmp	r5, r0
 80016e8:	d3de      	bcc.n	80016a8 <HAL_I2C_Master_Receive+0x128>
 80016ea:	2d00      	cmp	r5, #0
 80016ec:	d0dc      	beq.n	80016a8 <HAL_I2C_Master_Receive+0x128>
 80016ee:	6823      	ldr	r3, [r4, #0]
 80016f0:	e7a5      	b.n	800163e <HAL_I2C_Master_Receive+0xbe>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 80016f2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80016f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80016f6:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
 80016f8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80016fa:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80016fc:	3901      	subs	r1, #1
      hi2c->pBuffPtr++;
 80016fe:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8001700:	3b01      	subs	r3, #1
      hi2c->XferCount--;
 8001702:	b289      	uxth	r1, r1
      hi2c->pBuffPtr++;
 8001704:	3201      	adds	r2, #1
      hi2c->XferSize--;
 8001706:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
 8001708:	8561      	strh	r1, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800170a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800170c:	8523      	strh	r3, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800170e:	b289      	uxth	r1, r1
      hi2c->pBuffPtr++;
 8001710:	6262      	str	r2, [r4, #36]	; 0x24
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8001712:	2b00      	cmp	r3, #0
 8001714:	f47f af7b 	bne.w	800160e <HAL_I2C_Master_Receive+0x8e>
 8001718:	2900      	cmp	r1, #0
 800171a:	f43f af78 	beq.w	800160e <HAL_I2C_Master_Receive+0x8e>
 800171e:	1c68      	adds	r0, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001720:	6822      	ldr	r2, [r4, #0]
 8001722:	d1b7      	bne.n	8001694 <HAL_I2C_Master_Receive+0x114>
 8001724:	6993      	ldr	r3, [r2, #24]
 8001726:	0619      	lsls	r1, r3, #24
 8001728:	d5fc      	bpl.n	8001724 <HAL_I2C_Master_Receive+0x1a4>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800172a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800172c:	2bff      	cmp	r3, #255	; 0xff
 800172e:	d942      	bls.n	80017b6 <HAL_I2C_Master_Receive+0x236>
  MODIFY_REG(hi2c->Instance->CR2,
 8001730:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8001732:	21ff      	movs	r1, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8001734:	ea03 0309 	and.w	r3, r3, r9
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8001738:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 800173a:	ea43 0308 	orr.w	r3, r3, r8
 800173e:	6053      	str	r3, [r2, #4]
    while (hi2c->XferCount > 0U)
 8001740:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001742:	b29b      	uxth	r3, r3
 8001744:	2b00      	cmp	r3, #0
 8001746:	f47f af73 	bne.w	8001630 <HAL_I2C_Master_Receive+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800174a:	4632      	mov	r2, r6
 800174c:	4629      	mov	r1, r5
 800174e:	4620      	mov	r0, r4
 8001750:	f7ff fd9c 	bl	800128c <I2C_WaitOnSTOPFlagUntilTimeout>
 8001754:	2800      	cmp	r0, #0
 8001756:	d13d      	bne.n	80017d4 <HAL_I2C_Master_Receive+0x254>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001758:	6823      	ldr	r3, [r4, #0]
 800175a:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
 800175c:	4d1f      	ldr	r5, [pc, #124]	; (80017dc <HAL_I2C_Master_Receive+0x25c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800175e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8001760:	685a      	ldr	r2, [r3, #4]
 8001762:	402a      	ands	r2, r5
 8001764:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8001766:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 800176a:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800176e:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8001772:	e78d      	b.n	8001690 <HAL_I2C_Master_Receive+0x110>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001774:	6c63      	ldr	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8001776:	2220      	movs	r2, #32
      __HAL_UNLOCK(hi2c);
 8001778:	2100      	movs	r1, #0
        return HAL_ERROR;
 800177a:	2001      	movs	r0, #1
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800177c:	4313      	orrs	r3, r2
      __HAL_UNLOCK(hi2c);
 800177e:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001782:	6463      	str	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8001784:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
 8001788:	e782      	b.n	8001690 <HAL_I2C_Master_Receive+0x110>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
 800178a:	699a      	ldr	r2, [r3, #24]
 800178c:	0751      	lsls	r1, r2, #29
 800178e:	d502      	bpl.n	8001796 <HAL_I2C_Master_Receive+0x216>
 8001790:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8001792:	2a00      	cmp	r2, #0
 8001794:	d1ad      	bne.n	80016f2 <HAL_I2C_Master_Receive+0x172>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001796:	2520      	movs	r5, #32
        I2C_RESET_CR2(hi2c);
 8001798:	4e10      	ldr	r6, [pc, #64]	; (80017dc <HAL_I2C_Master_Receive+0x25c>)
        hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800179a:	2200      	movs	r2, #0
        return HAL_ERROR;
 800179c:	2001      	movs	r0, #1
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800179e:	61dd      	str	r5, [r3, #28]
        I2C_RESET_CR2(hi2c);
 80017a0:	6859      	ldr	r1, [r3, #4]
 80017a2:	4031      	ands	r1, r6
 80017a4:	6059      	str	r1, [r3, #4]
        hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80017a6:	6462      	str	r2, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 80017a8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->State = HAL_I2C_STATE_READY;
 80017ac:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80017b0:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 80017b4:	e76c      	b.n	8001690 <HAL_I2C_Master_Receive+0x110>
          hi2c->XferSize = hi2c->XferCount;
 80017b6:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 80017b8:	f047 7300 	orr.w	r3, r7, #33554432	; 0x2000000
 80017bc:	6850      	ldr	r0, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
 80017be:	b289      	uxth	r1, r1
  MODIFY_REG(hi2c->Instance->CR2,
 80017c0:	ea00 0009 	and.w	r0, r0, r9
 80017c4:	fa5f fc81 	uxtb.w	ip, r1
          hi2c->XferSize = hi2c->XferCount;
 80017c8:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 80017ca:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 80017ce:	4303      	orrs	r3, r0
 80017d0:	6053      	str	r3, [r2, #4]
 80017d2:	e71c      	b.n	800160e <HAL_I2C_Master_Receive+0x8e>
      return HAL_ERROR;
 80017d4:	2001      	movs	r0, #1
 80017d6:	e75b      	b.n	8001690 <HAL_I2C_Master_Receive+0x110>
 80017d8:	82002400 	.word	0x82002400
 80017dc:	fe00e800 	.word	0xfe00e800
 80017e0:	81ff2400 	.word	0x81ff2400
 80017e4:	fc009800 	.word	0xfc009800
 80017e8:	01ff0000 	.word	0x01ff0000
 80017ec:	fc009c00 	.word	0xfc009c00

080017f0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80017f0:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80017f4:	b2db      	uxtb	r3, r3
 80017f6:	2b20      	cmp	r3, #32
{
 80017f8:	b470      	push	{r4, r5, r6}
  if (hi2c->State == HAL_I2C_STATE_READY)
 80017fa:	d11f      	bne.n	800183c <HAL_I2CEx_ConfigAnalogFilter+0x4c>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80017fc:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
 8001800:	2a01      	cmp	r2, #1
 8001802:	d01b      	beq.n	800183c <HAL_I2CEx_ConfigAnalogFilter+0x4c>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8001804:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8001806:	2424      	movs	r4, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8001808:	2600      	movs	r6, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
 800180a:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
 800180e:	6815      	ldr	r5, [r2, #0]

    return HAL_OK;
 8001810:	4634      	mov	r4, r6
    __HAL_I2C_DISABLE(hi2c);
 8001812:	f025 0501 	bic.w	r5, r5, #1
 8001816:	6015      	str	r5, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8001818:	6815      	ldr	r5, [r2, #0]
 800181a:	f425 5580 	bic.w	r5, r5, #4096	; 0x1000
 800181e:	6015      	str	r5, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
 8001820:	6815      	ldr	r5, [r2, #0]
 8001822:	4329      	orrs	r1, r5
 8001824:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8001826:	6811      	ldr	r1, [r2, #0]
 8001828:	f041 0101 	orr.w	r1, r1, #1
 800182c:	6011      	str	r1, [r2, #0]
    __HAL_UNLOCK(hi2c);
 800182e:	f880 6040 	strb.w	r6, [r0, #64]	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 8001832:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  }
  else
  {
    return HAL_BUSY;
  }
}
 8001836:	4620      	mov	r0, r4
 8001838:	bc70      	pop	{r4, r5, r6}
 800183a:	4770      	bx	lr
    return HAL_BUSY;
 800183c:	2402      	movs	r4, #2
}
 800183e:	4620      	mov	r0, r4
 8001840:	bc70      	pop	{r4, r5, r6}
 8001842:	4770      	bx	lr

08001844 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8001844:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8001848:	b2db      	uxtb	r3, r3
 800184a:	2b20      	cmp	r3, #32
{
 800184c:	b470      	push	{r4, r5, r6}
  if (hi2c->State == HAL_I2C_STATE_READY)
 800184e:	d11e      	bne.n	800188e <HAL_I2CEx_ConfigDigitalFilter+0x4a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8001850:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
 8001854:	2a01      	cmp	r2, #1
 8001856:	d01a      	beq.n	800188e <HAL_I2CEx_ConfigDigitalFilter+0x4a>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8001858:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800185a:	2424      	movs	r4, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800185c:	2600      	movs	r6, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
 800185e:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
 8001862:	6814      	ldr	r4, [r2, #0]

    return HAL_OK;
 8001864:	4635      	mov	r5, r6
    __HAL_I2C_DISABLE(hi2c);
 8001866:	f024 0401 	bic.w	r4, r4, #1
 800186a:	6014      	str	r4, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
 800186c:	6814      	ldr	r4, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
 800186e:	f424 6470 	bic.w	r4, r4, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
 8001872:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
    hi2c->Instance->CR1 = tmpreg;
 8001876:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8001878:	6811      	ldr	r1, [r2, #0]
 800187a:	f041 0101 	orr.w	r1, r1, #1
 800187e:	6011      	str	r1, [r2, #0]
    __HAL_UNLOCK(hi2c);
 8001880:	f880 6040 	strb.w	r6, [r0, #64]	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 8001884:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  }
  else
  {
    return HAL_BUSY;
  }
}
 8001888:	4628      	mov	r0, r5
 800188a:	bc70      	pop	{r4, r5, r6}
 800188c:	4770      	bx	lr
    return HAL_BUSY;
 800188e:	2502      	movs	r5, #2
}
 8001890:	4628      	mov	r0, r5
 8001892:	bc70      	pop	{r4, r5, r6}
 8001894:	4770      	bx	lr
 8001896:	bf00      	nop

08001898 <HAL_PWR_EnableBkUpAccess>:
  * @retval None
  */
void HAL_PWR_EnableBkUpAccess(void)
{
  /* Enable access to RTC and backup registers */
  SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8001898:	4a02      	ldr	r2, [pc, #8]	; (80018a4 <HAL_PWR_EnableBkUpAccess+0xc>)
 800189a:	6813      	ldr	r3, [r2, #0]
 800189c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80018a0:	6013      	str	r3, [r2, #0]
}
 80018a2:	4770      	bx	lr
 80018a4:	40007000 	.word	0x40007000

080018a8 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 80018a8:	4a1b      	ldr	r2, [pc, #108]	; (8001918 <HAL_PWREx_EnableOverDrive+0x70>)
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80018aa:	4b1c      	ldr	r3, [pc, #112]	; (800191c <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80018ac:	6c11      	ldr	r1, [r2, #64]	; 0x40
 80018ae:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
{
 80018b2:	b530      	push	{r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 80018b4:	6411      	str	r1, [r2, #64]	; 0x40
{
 80018b6:	b083      	sub	sp, #12
  __HAL_RCC_PWR_CLK_ENABLE();
 80018b8:	6c12      	ldr	r2, [r2, #64]	; 0x40

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80018ba:	461c      	mov	r4, r3
  __HAL_RCC_PWR_CLK_ENABLE();
 80018bc:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80018c0:	9201      	str	r2, [sp, #4]
 80018c2:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80018c4:	681a      	ldr	r2, [r3, #0]
 80018c6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80018ca:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 80018cc:	f7ff fafa 	bl	8000ec4 <HAL_GetTick>
 80018d0:	4605      	mov	r5, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80018d2:	e005      	b.n	80018e0 <HAL_PWREx_EnableOverDrive+0x38>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80018d4:	f7ff faf6 	bl	8000ec4 <HAL_GetTick>
 80018d8:	1b40      	subs	r0, r0, r5
 80018da:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80018de:	d817      	bhi.n	8001910 <HAL_PWREx_EnableOverDrive+0x68>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80018e0:	6863      	ldr	r3, [r4, #4]
 80018e2:	03da      	lsls	r2, r3, #15
 80018e4:	d5f6      	bpl.n	80018d4 <HAL_PWREx_EnableOverDrive+0x2c>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80018e6:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80018e8:	4d0c      	ldr	r5, [pc, #48]	; (800191c <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80018ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80018ee:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 80018f0:	f7ff fae8 	bl	8000ec4 <HAL_GetTick>
 80018f4:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80018f6:	e005      	b.n	8001904 <HAL_PWREx_EnableOverDrive+0x5c>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80018f8:	f7ff fae4 	bl	8000ec4 <HAL_GetTick>
 80018fc:	1b00      	subs	r0, r0, r4
 80018fe:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8001902:	d805      	bhi.n	8001910 <HAL_PWREx_EnableOverDrive+0x68>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8001904:	686b      	ldr	r3, [r5, #4]
 8001906:	039b      	lsls	r3, r3, #14
 8001908:	d5f6      	bpl.n	80018f8 <HAL_PWREx_EnableOverDrive+0x50>
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800190a:	2000      	movs	r0, #0
}
 800190c:	b003      	add	sp, #12
 800190e:	bd30      	pop	{r4, r5, pc}
      return HAL_TIMEOUT;
 8001910:	2003      	movs	r0, #3
}
 8001912:	b003      	add	sp, #12
 8001914:	bd30      	pop	{r4, r5, pc}
 8001916:	bf00      	nop
 8001918:	40023800 	.word	0x40023800
 800191c:	40007000 	.word	0x40007000

08001920 <HAL_RCC_OscConfig>:
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8001920:	2800      	cmp	r0, #0
 8001922:	f000 814c 	beq.w	8001bbe <HAL_RCC_OscConfig+0x29e>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001926:	6803      	ldr	r3, [r0, #0]
{
 8001928:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800192c:	07dd      	lsls	r5, r3, #31
{
 800192e:	b082      	sub	sp, #8
 8001930:	4604      	mov	r4, r0
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001932:	d535      	bpl.n	80019a0 <HAL_RCC_OscConfig+0x80>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8001934:	49ac      	ldr	r1, [pc, #688]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001936:	688a      	ldr	r2, [r1, #8]
 8001938:	f002 020c 	and.w	r2, r2, #12
 800193c:	2a04      	cmp	r2, #4
 800193e:	f000 80ff 	beq.w	8001b40 <HAL_RCC_OscConfig+0x220>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001942:	688a      	ldr	r2, [r1, #8]
 8001944:	f002 020c 	and.w	r2, r2, #12
 8001948:	2a08      	cmp	r2, #8
 800194a:	f000 80f5 	beq.w	8001b38 <HAL_RCC_OscConfig+0x218>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800194e:	6863      	ldr	r3, [r4, #4]
 8001950:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001954:	d010      	beq.n	8001978 <HAL_RCC_OscConfig+0x58>
 8001956:	2b00      	cmp	r3, #0
 8001958:	f000 811a 	beq.w	8001b90 <HAL_RCC_OscConfig+0x270>
 800195c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001960:	4ba1      	ldr	r3, [pc, #644]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001962:	681a      	ldr	r2, [r3, #0]
 8001964:	f000 8164 	beq.w	8001c30 <HAL_RCC_OscConfig+0x310>
 8001968:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800196c:	601a      	str	r2, [r3, #0]
 800196e:	681a      	ldr	r2, [r3, #0]
 8001970:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001974:	601a      	str	r2, [r3, #0]
 8001976:	e004      	b.n	8001982 <HAL_RCC_OscConfig+0x62>
 8001978:	4a9b      	ldr	r2, [pc, #620]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 800197a:	6813      	ldr	r3, [r2, #0]
 800197c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001980:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8001982:	f7ff fa9f 	bl	8000ec4 <HAL_GetTick>

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001986:	4d98      	ldr	r5, [pc, #608]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
        tickstart = HAL_GetTick();
 8001988:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800198a:	e005      	b.n	8001998 <HAL_RCC_OscConfig+0x78>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800198c:	f7ff fa9a 	bl	8000ec4 <HAL_GetTick>
 8001990:	1b80      	subs	r0, r0, r6
 8001992:	2864      	cmp	r0, #100	; 0x64
 8001994:	f200 80ef 	bhi.w	8001b76 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001998:	682b      	ldr	r3, [r5, #0]
 800199a:	039a      	lsls	r2, r3, #14
 800199c:	d5f6      	bpl.n	800198c <HAL_RCC_OscConfig+0x6c>
 800199e:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80019a0:	079f      	lsls	r7, r3, #30
 80019a2:	d442      	bmi.n	8001a2a <HAL_RCC_OscConfig+0x10a>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80019a4:	071a      	lsls	r2, r3, #28
 80019a6:	d517      	bpl.n	80019d8 <HAL_RCC_OscConfig+0xb8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80019a8:	6963      	ldr	r3, [r4, #20]
 80019aa:	2b00      	cmp	r3, #0
 80019ac:	f000 80b1 	beq.w	8001b12 <HAL_RCC_OscConfig+0x1f2>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80019b0:	4b8d      	ldr	r3, [pc, #564]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 80019b2:	6f5a      	ldr	r2, [r3, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80019b4:	461d      	mov	r5, r3
      __HAL_RCC_LSI_ENABLE();
 80019b6:	f042 0201 	orr.w	r2, r2, #1
 80019ba:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
 80019bc:	f7ff fa82 	bl	8000ec4 <HAL_GetTick>
 80019c0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80019c2:	e005      	b.n	80019d0 <HAL_RCC_OscConfig+0xb0>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80019c4:	f7ff fa7e 	bl	8000ec4 <HAL_GetTick>
 80019c8:	1b80      	subs	r0, r0, r6
 80019ca:	2802      	cmp	r0, #2
 80019cc:	f200 80d3 	bhi.w	8001b76 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80019d0:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80019d2:	079b      	lsls	r3, r3, #30
 80019d4:	d5f6      	bpl.n	80019c4 <HAL_RCC_OscConfig+0xa4>
 80019d6:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80019d8:	075d      	lsls	r5, r3, #29
 80019da:	d56b      	bpl.n	8001ab4 <HAL_RCC_OscConfig+0x194>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80019dc:	4b82      	ldr	r3, [pc, #520]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 80019de:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80019e0:	00d0      	lsls	r0, r2, #3
 80019e2:	f100 80ee 	bmi.w	8001bc2 <HAL_RCC_OscConfig+0x2a2>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 80019e6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
      pwrclkchanged = SET;
 80019e8:	2501      	movs	r5, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 80019ea:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80019ee:	641a      	str	r2, [r3, #64]	; 0x40
 80019f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019f2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019f6:	9301      	str	r3, [sp, #4]
 80019f8:	9b01      	ldr	r3, [sp, #4]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80019fa:	4b7c      	ldr	r3, [pc, #496]	; (8001bec <HAL_RCC_OscConfig+0x2cc>)
 80019fc:	681a      	ldr	r2, [r3, #0]
 80019fe:	05d1      	lsls	r1, r2, #23
 8001a00:	f140 80a8 	bpl.w	8001b54 <HAL_RCC_OscConfig+0x234>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001a04:	68a3      	ldr	r3, [r4, #8]
 8001a06:	2b01      	cmp	r3, #1
 8001a08:	d039      	beq.n	8001a7e <HAL_RCC_OscConfig+0x15e>
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	f000 80db 	beq.w	8001bc6 <HAL_RCC_OscConfig+0x2a6>
 8001a10:	2b05      	cmp	r3, #5
 8001a12:	4b75      	ldr	r3, [pc, #468]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001a14:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001a16:	f000 8113 	beq.w	8001c40 <HAL_RCC_OscConfig+0x320>
 8001a1a:	f022 0201 	bic.w	r2, r2, #1
 8001a1e:	671a      	str	r2, [r3, #112]	; 0x70
 8001a20:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001a22:	f022 0204 	bic.w	r2, r2, #4
 8001a26:	671a      	str	r2, [r3, #112]	; 0x70
 8001a28:	e02e      	b.n	8001a88 <HAL_RCC_OscConfig+0x168>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8001a2a:	4a6f      	ldr	r2, [pc, #444]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001a2c:	6891      	ldr	r1, [r2, #8]
 8001a2e:	f011 0f0c 	tst.w	r1, #12
 8001a32:	d063      	beq.n	8001afc <HAL_RCC_OscConfig+0x1dc>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001a34:	6891      	ldr	r1, [r2, #8]
 8001a36:	f001 010c 	and.w	r1, r1, #12
 8001a3a:	2908      	cmp	r1, #8
 8001a3c:	d05b      	beq.n	8001af6 <HAL_RCC_OscConfig+0x1d6>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8001a3e:	68e3      	ldr	r3, [r4, #12]
 8001a40:	2b00      	cmp	r3, #0
 8001a42:	f000 80e1 	beq.w	8001c08 <HAL_RCC_OscConfig+0x2e8>
        __HAL_RCC_HSI_ENABLE();
 8001a46:	4b68      	ldr	r3, [pc, #416]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001a48:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001a4a:	461d      	mov	r5, r3
        __HAL_RCC_HSI_ENABLE();
 8001a4c:	f042 0201 	orr.w	r2, r2, #1
 8001a50:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8001a52:	f7ff fa37 	bl	8000ec4 <HAL_GetTick>
 8001a56:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001a58:	e005      	b.n	8001a66 <HAL_RCC_OscConfig+0x146>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001a5a:	f7ff fa33 	bl	8000ec4 <HAL_GetTick>
 8001a5e:	1b80      	subs	r0, r0, r6
 8001a60:	2802      	cmp	r0, #2
 8001a62:	f200 8088 	bhi.w	8001b76 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001a66:	682b      	ldr	r3, [r5, #0]
 8001a68:	0798      	lsls	r0, r3, #30
 8001a6a:	d5f6      	bpl.n	8001a5a <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001a6c:	682b      	ldr	r3, [r5, #0]
 8001a6e:	6922      	ldr	r2, [r4, #16]
 8001a70:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8001a74:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8001a78:	602b      	str	r3, [r5, #0]
 8001a7a:	6823      	ldr	r3, [r4, #0]
 8001a7c:	e792      	b.n	80019a4 <HAL_RCC_OscConfig+0x84>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001a7e:	4a5a      	ldr	r2, [pc, #360]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001a80:	6f13      	ldr	r3, [r2, #112]	; 0x70
 8001a82:	f043 0301 	orr.w	r3, r3, #1
 8001a86:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8001a88:	f7ff fa1c 	bl	8000ec4 <HAL_GetTick>

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001a8c:	4e56      	ldr	r6, [pc, #344]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
      tickstart = HAL_GetTick();
 8001a8e:	4680      	mov	r8, r0
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001a90:	f241 3788 	movw	r7, #5000	; 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001a94:	e005      	b.n	8001aa2 <HAL_RCC_OscConfig+0x182>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001a96:	f7ff fa15 	bl	8000ec4 <HAL_GetTick>
 8001a9a:	eba0 0008 	sub.w	r0, r0, r8
 8001a9e:	42b8      	cmp	r0, r7
 8001aa0:	d869      	bhi.n	8001b76 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001aa2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8001aa4:	079b      	lsls	r3, r3, #30
 8001aa6:	d5f6      	bpl.n	8001a96 <HAL_RCC_OscConfig+0x176>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8001aa8:	b125      	cbz	r5, 8001ab4 <HAL_RCC_OscConfig+0x194>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8001aaa:	4a4f      	ldr	r2, [pc, #316]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001aac:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001aae:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001ab2:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001ab4:	69a0      	ldr	r0, [r4, #24]
 8001ab6:	b1d0      	cbz	r0, 8001aee <HAL_RCC_OscConfig+0x1ce>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001ab8:	4b4b      	ldr	r3, [pc, #300]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001aba:	689a      	ldr	r2, [r3, #8]
 8001abc:	f002 020c 	and.w	r2, r2, #12
 8001ac0:	2a08      	cmp	r2, #8
 8001ac2:	f000 80c5 	beq.w	8001c50 <HAL_RCC_OscConfig+0x330>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001ac6:	2802      	cmp	r0, #2
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001ac8:	681a      	ldr	r2, [r3, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001aca:	f000 80eb 	beq.w	8001ca4 <HAL_RCC_OscConfig+0x384>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001ace:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001ad2:	461c      	mov	r4, r3
        __HAL_RCC_PLL_DISABLE();
 8001ad4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8001ad6:	f7ff f9f5 	bl	8000ec4 <HAL_GetTick>
 8001ada:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001adc:	e004      	b.n	8001ae8 <HAL_RCC_OscConfig+0x1c8>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001ade:	f7ff f9f1 	bl	8000ec4 <HAL_GetTick>
 8001ae2:	1b40      	subs	r0, r0, r5
 8001ae4:	2802      	cmp	r0, #2
 8001ae6:	d846      	bhi.n	8001b76 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001ae8:	6823      	ldr	r3, [r4, #0]
 8001aea:	019b      	lsls	r3, r3, #6
 8001aec:	d4f7      	bmi.n	8001ade <HAL_RCC_OscConfig+0x1be>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 8001aee:	2000      	movs	r0, #0
}
 8001af0:	b002      	add	sp, #8
 8001af2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001af6:	6852      	ldr	r2, [r2, #4]
 8001af8:	0256      	lsls	r6, r2, #9
 8001afa:	d4a0      	bmi.n	8001a3e <HAL_RCC_OscConfig+0x11e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001afc:	4a3a      	ldr	r2, [pc, #232]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001afe:	6812      	ldr	r2, [r2, #0]
 8001b00:	0795      	lsls	r5, r2, #30
 8001b02:	d53c      	bpl.n	8001b7e <HAL_RCC_OscConfig+0x25e>
 8001b04:	68e2      	ldr	r2, [r4, #12]
 8001b06:	2a01      	cmp	r2, #1
 8001b08:	d039      	beq.n	8001b7e <HAL_RCC_OscConfig+0x25e>
        return HAL_ERROR;
 8001b0a:	2001      	movs	r0, #1
}
 8001b0c:	b002      	add	sp, #8
 8001b0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 8001b12:	4b35      	ldr	r3, [pc, #212]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001b14:	6f5a      	ldr	r2, [r3, #116]	; 0x74
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001b16:	461d      	mov	r5, r3
      __HAL_RCC_LSI_DISABLE();
 8001b18:	f022 0201 	bic.w	r2, r2, #1
 8001b1c:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
 8001b1e:	f7ff f9d1 	bl	8000ec4 <HAL_GetTick>
 8001b22:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001b24:	e004      	b.n	8001b30 <HAL_RCC_OscConfig+0x210>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001b26:	f7ff f9cd 	bl	8000ec4 <HAL_GetTick>
 8001b2a:	1b80      	subs	r0, r0, r6
 8001b2c:	2802      	cmp	r0, #2
 8001b2e:	d822      	bhi.n	8001b76 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001b30:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8001b32:	079f      	lsls	r7, r3, #30
 8001b34:	d4f7      	bmi.n	8001b26 <HAL_RCC_OscConfig+0x206>
 8001b36:	e74e      	b.n	80019d6 <HAL_RCC_OscConfig+0xb6>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001b38:	684a      	ldr	r2, [r1, #4]
 8001b3a:	0250      	lsls	r0, r2, #9
 8001b3c:	f57f af07 	bpl.w	800194e <HAL_RCC_OscConfig+0x2e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001b40:	4a29      	ldr	r2, [pc, #164]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001b42:	6812      	ldr	r2, [r2, #0]
 8001b44:	0391      	lsls	r1, r2, #14
 8001b46:	f57f af2b 	bpl.w	80019a0 <HAL_RCC_OscConfig+0x80>
 8001b4a:	6862      	ldr	r2, [r4, #4]
 8001b4c:	2a00      	cmp	r2, #0
 8001b4e:	f47f af27 	bne.w	80019a0 <HAL_RCC_OscConfig+0x80>
 8001b52:	e7da      	b.n	8001b0a <HAL_RCC_OscConfig+0x1ea>
      PWR->CR1 |= PWR_CR1_DBP;
 8001b54:	681a      	ldr	r2, [r3, #0]
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8001b56:	461e      	mov	r6, r3
      PWR->CR1 |= PWR_CR1_DBP;
 8001b58:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001b5c:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8001b5e:	f7ff f9b1 	bl	8000ec4 <HAL_GetTick>
 8001b62:	4607      	mov	r7, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8001b64:	6833      	ldr	r3, [r6, #0]
 8001b66:	05da      	lsls	r2, r3, #23
 8001b68:	f53f af4c 	bmi.w	8001a04 <HAL_RCC_OscConfig+0xe4>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001b6c:	f7ff f9aa 	bl	8000ec4 <HAL_GetTick>
 8001b70:	1bc0      	subs	r0, r0, r7
 8001b72:	2864      	cmp	r0, #100	; 0x64
 8001b74:	d9f6      	bls.n	8001b64 <HAL_RCC_OscConfig+0x244>
            return HAL_TIMEOUT;
 8001b76:	2003      	movs	r0, #3
}
 8001b78:	b002      	add	sp, #8
 8001b7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001b7e:	491a      	ldr	r1, [pc, #104]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001b80:	6920      	ldr	r0, [r4, #16]
 8001b82:	680a      	ldr	r2, [r1, #0]
 8001b84:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8001b88:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8001b8c:	600a      	str	r2, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001b8e:	e709      	b.n	80019a4 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001b90:	4b15      	ldr	r3, [pc, #84]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
 8001b92:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001b94:	461d      	mov	r5, r3
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001b96:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001b9a:	601a      	str	r2, [r3, #0]
 8001b9c:	681a      	ldr	r2, [r3, #0]
 8001b9e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001ba2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8001ba4:	f7ff f98e 	bl	8000ec4 <HAL_GetTick>
 8001ba8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001baa:	e004      	b.n	8001bb6 <HAL_RCC_OscConfig+0x296>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001bac:	f7ff f98a 	bl	8000ec4 <HAL_GetTick>
 8001bb0:	1b80      	subs	r0, r0, r6
 8001bb2:	2864      	cmp	r0, #100	; 0x64
 8001bb4:	d8df      	bhi.n	8001b76 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001bb6:	682b      	ldr	r3, [r5, #0]
 8001bb8:	039b      	lsls	r3, r3, #14
 8001bba:	d4f7      	bmi.n	8001bac <HAL_RCC_OscConfig+0x28c>
 8001bbc:	e6ef      	b.n	800199e <HAL_RCC_OscConfig+0x7e>
    return HAL_ERROR;
 8001bbe:	2001      	movs	r0, #1
}
 8001bc0:	4770      	bx	lr
  FlagStatus pwrclkchanged = RESET;
 8001bc2:	2500      	movs	r5, #0
 8001bc4:	e719      	b.n	80019fa <HAL_RCC_OscConfig+0xda>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001bc6:	4b08      	ldr	r3, [pc, #32]	; (8001be8 <HAL_RCC_OscConfig+0x2c8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001bc8:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001bcc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001bce:	461e      	mov	r6, r3
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001bd0:	f022 0201 	bic.w	r2, r2, #1
 8001bd4:	671a      	str	r2, [r3, #112]	; 0x70
 8001bd6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001bd8:	f022 0204 	bic.w	r2, r2, #4
 8001bdc:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
 8001bde:	f7ff f971 	bl	8000ec4 <HAL_GetTick>
 8001be2:	4607      	mov	r7, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001be4:	e009      	b.n	8001bfa <HAL_RCC_OscConfig+0x2da>
 8001be6:	bf00      	nop
 8001be8:	40023800 	.word	0x40023800
 8001bec:	40007000 	.word	0x40007000
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001bf0:	f7ff f968 	bl	8000ec4 <HAL_GetTick>
 8001bf4:	1bc0      	subs	r0, r0, r7
 8001bf6:	4540      	cmp	r0, r8
 8001bf8:	d8bd      	bhi.n	8001b76 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001bfa:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8001bfc:	0798      	lsls	r0, r3, #30
 8001bfe:	d4f7      	bmi.n	8001bf0 <HAL_RCC_OscConfig+0x2d0>
    if (pwrclkchanged == SET)
 8001c00:	2d00      	cmp	r5, #0
 8001c02:	f43f af57 	beq.w	8001ab4 <HAL_RCC_OscConfig+0x194>
 8001c06:	e750      	b.n	8001aaa <HAL_RCC_OscConfig+0x18a>
        __HAL_RCC_HSI_DISABLE();
 8001c08:	4b41      	ldr	r3, [pc, #260]	; (8001d10 <HAL_RCC_OscConfig+0x3f0>)
 8001c0a:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001c0c:	461d      	mov	r5, r3
        __HAL_RCC_HSI_DISABLE();
 8001c0e:	f022 0201 	bic.w	r2, r2, #1
 8001c12:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8001c14:	f7ff f956 	bl	8000ec4 <HAL_GetTick>
 8001c18:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001c1a:	e004      	b.n	8001c26 <HAL_RCC_OscConfig+0x306>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001c1c:	f7ff f952 	bl	8000ec4 <HAL_GetTick>
 8001c20:	1b80      	subs	r0, r0, r6
 8001c22:	2802      	cmp	r0, #2
 8001c24:	d8a7      	bhi.n	8001b76 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001c26:	682b      	ldr	r3, [r5, #0]
 8001c28:	0799      	lsls	r1, r3, #30
 8001c2a:	d4f7      	bmi.n	8001c1c <HAL_RCC_OscConfig+0x2fc>
 8001c2c:	6823      	ldr	r3, [r4, #0]
 8001c2e:	e6b9      	b.n	80019a4 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001c30:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8001c34:	601a      	str	r2, [r3, #0]
 8001c36:	681a      	ldr	r2, [r3, #0]
 8001c38:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001c3c:	601a      	str	r2, [r3, #0]
 8001c3e:	e6a0      	b.n	8001982 <HAL_RCC_OscConfig+0x62>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001c40:	f042 0204 	orr.w	r2, r2, #4
 8001c44:	671a      	str	r2, [r3, #112]	; 0x70
 8001c46:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001c48:	f042 0201 	orr.w	r2, r2, #1
 8001c4c:	671a      	str	r2, [r3, #112]	; 0x70
 8001c4e:	e71b      	b.n	8001a88 <HAL_RCC_OscConfig+0x168>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001c50:	2801      	cmp	r0, #1
      pll_config = RCC->PLLCFGR;
 8001c52:	685a      	ldr	r2, [r3, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001c54:	f43f af5a 	beq.w	8001b0c <HAL_RCC_OscConfig+0x1ec>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001c58:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001c5c:	69e1      	ldr	r1, [r4, #28]
 8001c5e:	428b      	cmp	r3, r1
 8001c60:	f47f af53 	bne.w	8001b0a <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8001c64:	f002 033f 	and.w	r3, r2, #63	; 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001c68:	6a21      	ldr	r1, [r4, #32]
 8001c6a:	428b      	cmp	r3, r1
 8001c6c:	f47f af4d 	bne.w	8001b0a <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8001c70:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8001c74:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001c76:	4013      	ands	r3, r2
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8001c78:	ebb3 1f81 	cmp.w	r3, r1, lsl #6
 8001c7c:	f47f af45 	bne.w	8001b0a <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8001c80:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001c82:	f402 3140 	and.w	r1, r2, #196608	; 0x30000
 8001c86:	085b      	lsrs	r3, r3, #1
 8001c88:	3b01      	subs	r3, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8001c8a:	ebb1 4f03 	cmp.w	r1, r3, lsl #16
 8001c8e:	f47f af3c 	bne.w	8001b0a <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8001c92:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001c94:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8001c98:	ebb2 6f03 	cmp.w	r2, r3, lsl #24
    return HAL_ERROR;
 8001c9c:	bf14      	ite	ne
 8001c9e:	2001      	movne	r0, #1
 8001ca0:	2000      	moveq	r0, #0
 8001ca2:	e733      	b.n	8001b0c <HAL_RCC_OscConfig+0x1ec>
        __HAL_RCC_PLL_DISABLE();
 8001ca4:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001ca8:	461d      	mov	r5, r3
        __HAL_RCC_PLL_DISABLE();
 8001caa:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8001cac:	f7ff f90a 	bl	8000ec4 <HAL_GetTick>
 8001cb0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001cb2:	e005      	b.n	8001cc0 <HAL_RCC_OscConfig+0x3a0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001cb4:	f7ff f906 	bl	8000ec4 <HAL_GetTick>
 8001cb8:	1b80      	subs	r0, r0, r6
 8001cba:	2802      	cmp	r0, #2
 8001cbc:	f63f af5b 	bhi.w	8001b76 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001cc0:	682b      	ldr	r3, [r5, #0]
 8001cc2:	0199      	lsls	r1, r3, #6
 8001cc4:	d4f6      	bmi.n	8001cb4 <HAL_RCC_OscConfig+0x394>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001cc6:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8001cca:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001ccc:	4313      	orrs	r3, r2
 8001cce:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 8001cd2:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001cd6:	4c0e      	ldr	r4, [pc, #56]	; (8001d10 <HAL_RCC_OscConfig+0x3f0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001cd8:	0852      	lsrs	r2, r2, #1
 8001cda:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8001cde:	3a01      	subs	r2, #1
 8001ce0:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8001ce4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001ce8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8001cea:	682b      	ldr	r3, [r5, #0]
 8001cec:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001cf0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8001cf2:	f7ff f8e7 	bl	8000ec4 <HAL_GetTick>
 8001cf6:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001cf8:	e005      	b.n	8001d06 <HAL_RCC_OscConfig+0x3e6>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001cfa:	f7ff f8e3 	bl	8000ec4 <HAL_GetTick>
 8001cfe:	1b40      	subs	r0, r0, r5
 8001d00:	2802      	cmp	r0, #2
 8001d02:	f63f af38 	bhi.w	8001b76 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001d06:	6823      	ldr	r3, [r4, #0]
 8001d08:	019a      	lsls	r2, r3, #6
 8001d0a:	d5f6      	bpl.n	8001cfa <HAL_RCC_OscConfig+0x3da>
 8001d0c:	e6ef      	b.n	8001aee <HAL_RCC_OscConfig+0x1ce>
 8001d0e:	bf00      	nop
 8001d10:	40023800 	.word	0x40023800

08001d14 <HAL_RCC_ClockConfig>:
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
  uint32_t tickstart = 0;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8001d14:	b178      	cbz	r0, 8001d36 <HAL_RCC_ClockConfig+0x22>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8001d16:	4a5e      	ldr	r2, [pc, #376]	; (8001e90 <HAL_RCC_ClockConfig+0x17c>)
 8001d18:	6813      	ldr	r3, [r2, #0]
 8001d1a:	f003 030f 	and.w	r3, r3, #15
 8001d1e:	428b      	cmp	r3, r1
 8001d20:	d20b      	bcs.n	8001d3a <HAL_RCC_ClockConfig+0x26>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001d22:	6813      	ldr	r3, [r2, #0]
 8001d24:	f023 030f 	bic.w	r3, r3, #15
 8001d28:	430b      	orrs	r3, r1
 8001d2a:	6013      	str	r3, [r2, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001d2c:	6813      	ldr	r3, [r2, #0]
 8001d2e:	f003 030f 	and.w	r3, r3, #15
 8001d32:	428b      	cmp	r3, r1
 8001d34:	d001      	beq.n	8001d3a <HAL_RCC_ClockConfig+0x26>
    return HAL_ERROR;
 8001d36:	2001      	movs	r0, #1

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);

  return HAL_OK;
}
 8001d38:	4770      	bx	lr
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001d3a:	6803      	ldr	r3, [r0, #0]
{
 8001d3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001d40:	079d      	lsls	r5, r3, #30
 8001d42:	d514      	bpl.n	8001d6e <HAL_RCC_ClockConfig+0x5a>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001d44:	075c      	lsls	r4, r3, #29
 8001d46:	d504      	bpl.n	8001d52 <HAL_RCC_ClockConfig+0x3e>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001d48:	4c52      	ldr	r4, [pc, #328]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
 8001d4a:	68a2      	ldr	r2, [r4, #8]
 8001d4c:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 8001d50:	60a2      	str	r2, [r4, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001d52:	071a      	lsls	r2, r3, #28
 8001d54:	d504      	bpl.n	8001d60 <HAL_RCC_ClockConfig+0x4c>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001d56:	4c4f      	ldr	r4, [pc, #316]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
 8001d58:	68a2      	ldr	r2, [r4, #8]
 8001d5a:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 8001d5e:	60a2      	str	r2, [r4, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001d60:	4c4c      	ldr	r4, [pc, #304]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
 8001d62:	6885      	ldr	r5, [r0, #8]
 8001d64:	68a2      	ldr	r2, [r4, #8]
 8001d66:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8001d6a:	432a      	orrs	r2, r5
 8001d6c:	60a2      	str	r2, [r4, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001d6e:	07df      	lsls	r7, r3, #31
 8001d70:	4604      	mov	r4, r0
 8001d72:	460d      	mov	r5, r1
 8001d74:	d521      	bpl.n	8001dba <HAL_RCC_ClockConfig+0xa6>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001d76:	6842      	ldr	r2, [r0, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001d78:	4b46      	ldr	r3, [pc, #280]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001d7a:	2a01      	cmp	r2, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001d7c:	681b      	ldr	r3, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001d7e:	d063      	beq.n	8001e48 <HAL_RCC_ClockConfig+0x134>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001d80:	2a02      	cmp	r2, #2
 8001d82:	d079      	beq.n	8001e78 <HAL_RCC_ClockConfig+0x164>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001d84:	0799      	lsls	r1, r3, #30
 8001d86:	d528      	bpl.n	8001dda <HAL_RCC_ClockConfig+0xc6>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001d88:	4942      	ldr	r1, [pc, #264]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001d8a:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001d8e:	688b      	ldr	r3, [r1, #8]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001d90:	460e      	mov	r6, r1
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001d92:	f023 0303 	bic.w	r3, r3, #3
 8001d96:	4313      	orrs	r3, r2
 8001d98:	608b      	str	r3, [r1, #8]
    tickstart = HAL_GetTick();
 8001d9a:	f7ff f893 	bl	8000ec4 <HAL_GetTick>
 8001d9e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001da0:	e004      	b.n	8001dac <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001da2:	f7ff f88f 	bl	8000ec4 <HAL_GetTick>
 8001da6:	1bc0      	subs	r0, r0, r7
 8001da8:	4540      	cmp	r0, r8
 8001daa:	d863      	bhi.n	8001e74 <HAL_RCC_ClockConfig+0x160>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001dac:	68b3      	ldr	r3, [r6, #8]
 8001dae:	6862      	ldr	r2, [r4, #4]
 8001db0:	f003 030c 	and.w	r3, r3, #12
 8001db4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8001db8:	d1f3      	bne.n	8001da2 <HAL_RCC_ClockConfig+0x8e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8001dba:	4a35      	ldr	r2, [pc, #212]	; (8001e90 <HAL_RCC_ClockConfig+0x17c>)
 8001dbc:	6813      	ldr	r3, [r2, #0]
 8001dbe:	f003 030f 	and.w	r3, r3, #15
 8001dc2:	42ab      	cmp	r3, r5
 8001dc4:	d90c      	bls.n	8001de0 <HAL_RCC_ClockConfig+0xcc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001dc6:	6813      	ldr	r3, [r2, #0]
 8001dc8:	f023 030f 	bic.w	r3, r3, #15
 8001dcc:	432b      	orrs	r3, r5
 8001dce:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001dd0:	6813      	ldr	r3, [r2, #0]
 8001dd2:	f003 030f 	and.w	r3, r3, #15
 8001dd6:	42ab      	cmp	r3, r5
 8001dd8:	d002      	beq.n	8001de0 <HAL_RCC_ClockConfig+0xcc>
    return HAL_ERROR;
 8001dda:	2001      	movs	r0, #1
}
 8001ddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001de0:	6823      	ldr	r3, [r4, #0]
 8001de2:	075a      	lsls	r2, r3, #29
 8001de4:	d506      	bpl.n	8001df4 <HAL_RCC_ClockConfig+0xe0>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001de6:	492b      	ldr	r1, [pc, #172]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
 8001de8:	68e0      	ldr	r0, [r4, #12]
 8001dea:	688a      	ldr	r2, [r1, #8]
 8001dec:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 8001df0:	4302      	orrs	r2, r0
 8001df2:	608a      	str	r2, [r1, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001df4:	071b      	lsls	r3, r3, #28
 8001df6:	d507      	bpl.n	8001e08 <HAL_RCC_ClockConfig+0xf4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8001df8:	4a26      	ldr	r2, [pc, #152]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
 8001dfa:	6921      	ldr	r1, [r4, #16]
 8001dfc:	6893      	ldr	r3, [r2, #8]
 8001dfe:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8001e02:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8001e06:	6093      	str	r3, [r2, #8]
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001e08:	4922      	ldr	r1, [pc, #136]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
 8001e0a:	688b      	ldr	r3, [r1, #8]
 8001e0c:	f003 030c 	and.w	r3, r3, #12
 8001e10:	2b04      	cmp	r3, #4
 8001e12:	d01c      	beq.n	8001e4e <HAL_RCC_ClockConfig+0x13a>
 8001e14:	2b08      	cmp	r3, #8
 8001e16:	d12b      	bne.n	8001e70 <HAL_RCC_ClockConfig+0x15c>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001e18:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8001e1a:	684b      	ldr	r3, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001e1c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001e20:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8001e22:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
 8001e26:	d12a      	bne.n	8001e7e <HAL_RCC_ClockConfig+0x16a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001e28:	481b      	ldr	r0, [pc, #108]	; (8001e98 <HAL_RCC_ClockConfig+0x184>)
 8001e2a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8001e2e:	fba1 0100 	umull	r0, r1, r1, r0
 8001e32:	f7fe fe8b 	bl	8000b4c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8001e36:	4b17      	ldr	r3, [pc, #92]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
 8001e38:	685b      	ldr	r3, [r3, #4]
 8001e3a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8001e3e:	3301      	adds	r3, #1
 8001e40:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8001e42:	fbb0 f3f3 	udiv	r3, r0, r3
 8001e46:	e003      	b.n	8001e50 <HAL_RCC_ClockConfig+0x13c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001e48:	039e      	lsls	r6, r3, #14
 8001e4a:	d49d      	bmi.n	8001d88 <HAL_RCC_ClockConfig+0x74>
 8001e4c:	e7c5      	b.n	8001dda <HAL_RCC_ClockConfig+0xc6>
      sysclockfreq = HSE_VALUE;
 8001e4e:	4b13      	ldr	r3, [pc, #76]	; (8001e9c <HAL_RCC_ClockConfig+0x188>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001e50:	4a10      	ldr	r2, [pc, #64]	; (8001e94 <HAL_RCC_ClockConfig+0x180>)
 8001e52:	4c13      	ldr	r4, [pc, #76]	; (8001ea0 <HAL_RCC_ClockConfig+0x18c>)
 8001e54:	6892      	ldr	r2, [r2, #8]
  HAL_InitTick(uwTickPrio);
 8001e56:	4813      	ldr	r0, [pc, #76]	; (8001ea4 <HAL_RCC_ClockConfig+0x190>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001e58:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8001e5c:	4912      	ldr	r1, [pc, #72]	; (8001ea8 <HAL_RCC_ClockConfig+0x194>)
  HAL_InitTick(uwTickPrio);
 8001e5e:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001e60:	5ca2      	ldrb	r2, [r4, r2]
 8001e62:	40d3      	lsrs	r3, r2
 8001e64:	600b      	str	r3, [r1, #0]
  HAL_InitTick(uwTickPrio);
 8001e66:	f7fe fff1 	bl	8000e4c <HAL_InitTick>
  return HAL_OK;
 8001e6a:	2000      	movs	r0, #0
}
 8001e6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      sysclockfreq = HSI_VALUE;
 8001e70:	4b09      	ldr	r3, [pc, #36]	; (8001e98 <HAL_RCC_ClockConfig+0x184>)
 8001e72:	e7ed      	b.n	8001e50 <HAL_RCC_ClockConfig+0x13c>
        return HAL_TIMEOUT;
 8001e74:	2003      	movs	r0, #3
 8001e76:	e7b1      	b.n	8001ddc <HAL_RCC_ClockConfig+0xc8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001e78:	0198      	lsls	r0, r3, #6
 8001e7a:	d485      	bmi.n	8001d88 <HAL_RCC_ClockConfig+0x74>
 8001e7c:	e7ad      	b.n	8001dda <HAL_RCC_ClockConfig+0xc6>
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001e7e:	4807      	ldr	r0, [pc, #28]	; (8001e9c <HAL_RCC_ClockConfig+0x188>)
 8001e80:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8001e84:	2300      	movs	r3, #0
 8001e86:	fba1 0100 	umull	r0, r1, r1, r0
 8001e8a:	f7fe fe5f 	bl	8000b4c <__aeabi_uldivmod>
 8001e8e:	e7d2      	b.n	8001e36 <HAL_RCC_ClockConfig+0x122>
 8001e90:	40023c00 	.word	0x40023c00
 8001e94:	40023800 	.word	0x40023800
 8001e98:	00f42400 	.word	0x00f42400
 8001e9c:	017d7840 	.word	0x017d7840
 8001ea0:	08019618 	.word	0x08019618
 8001ea4:	20000004 	.word	0x20000004
 8001ea8:	20000038 	.word	0x20000038

08001eac <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8001eac:	6803      	ldr	r3, [r0, #0]
{
 8001eae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8001eb2:	f013 0601 	ands.w	r6, r3, #1
{
 8001eb6:	b083      	sub	sp, #12
 8001eb8:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8001eba:	d00b      	beq.n	8001ed4 <HAL_RCCEx_PeriphCLKConfig+0x28>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8001ebc:	4ab6      	ldr	r2, [pc, #728]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001ebe:	6891      	ldr	r1, [r2, #8]
 8001ec0:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 8001ec4:	6091      	str	r1, [r2, #8]
 8001ec6:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8001ec8:	6891      	ldr	r1, [r2, #8]
 8001eca:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8001ecc:	fab6 f686 	clz	r6, r6
 8001ed0:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8001ed2:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8001ed4:	f413 2500 	ands.w	r5, r3, #524288	; 0x80000
 8001ed8:	d010      	beq.n	8001efc <HAL_RCCEx_PeriphCLKConfig+0x50>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8001eda:	49af      	ldr	r1, [pc, #700]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001edc:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 8001ede:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8001ee2:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8001ee6:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001eea:	ea42 0205 	orr.w	r2, r2, r5
 8001eee:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8001ef2:	f000 821a 	beq.w	800232a <HAL_RCCEx_PeriphCLKConfig+0x47e>
    {
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8001ef6:	fab5 f585 	clz	r5, r5
 8001efa:	096d      	lsrs	r5, r5, #5
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8001efc:	02d9      	lsls	r1, r3, #11
 8001efe:	d510      	bpl.n	8001f22 <HAL_RCCEx_PeriphCLKConfig+0x76>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8001f00:	48a5      	ldr	r0, [pc, #660]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001f02:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8001f04:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8001f08:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8001f0c:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8001f10:	ea42 0201 	orr.w	r2, r2, r1
 8001f14:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8001f18:	f000 820a 	beq.w	8002330 <HAL_RCCEx_PeriphCLKConfig+0x484>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 8001f1c:	2900      	cmp	r1, #0
 8001f1e:	bf08      	it	eq
 8001f20:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 8001f22:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 8001f26:	bf18      	it	ne
 8001f28:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8001f2a:	069a      	lsls	r2, r3, #26
 8001f2c:	f100 81b7 	bmi.w	800229e <HAL_RCCEx_PeriphCLKConfig+0x3f2>
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8001f30:	06d9      	lsls	r1, r3, #27
 8001f32:	d50c      	bpl.n	8001f4e <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8001f34:	4a98      	ldr	r2, [pc, #608]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001f36:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 8001f3a:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 8001f3e:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
 8001f42:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 8001f46:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001f48:	4301      	orrs	r1, r0
 8001f4a:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8001f4e:	045a      	lsls	r2, r3, #17
 8001f50:	d508      	bpl.n	8001f64 <HAL_RCCEx_PeriphCLKConfig+0xb8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8001f52:	4991      	ldr	r1, [pc, #580]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001f54:	6e60      	ldr	r0, [r4, #100]	; 0x64
 8001f56:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f5a:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8001f5e:	4302      	orrs	r2, r0
 8001f60:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8001f64:	041f      	lsls	r7, r3, #16
 8001f66:	d508      	bpl.n	8001f7a <HAL_RCCEx_PeriphCLKConfig+0xce>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8001f68:	498b      	ldr	r1, [pc, #556]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001f6a:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8001f6c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f70:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8001f74:	4302      	orrs	r2, r0
 8001f76:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8001f7a:	03d8      	lsls	r0, r3, #15
 8001f7c:	d508      	bpl.n	8001f90 <HAL_RCCEx_PeriphCLKConfig+0xe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8001f7e:	4986      	ldr	r1, [pc, #536]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001f80:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001f82:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f86:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001f8a:	4302      	orrs	r2, r0
 8001f8c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8001f90:	0399      	lsls	r1, r3, #14
 8001f92:	d508      	bpl.n	8001fa6 <HAL_RCCEx_PeriphCLKConfig+0xfa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8001f94:	4980      	ldr	r1, [pc, #512]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001f96:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8001f98:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001f9c:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8001fa0:	4302      	orrs	r2, r0
 8001fa2:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8001fa6:	065a      	lsls	r2, r3, #25
 8001fa8:	d508      	bpl.n	8001fbc <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8001faa:	497b      	ldr	r1, [pc, #492]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001fac:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8001fae:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001fb2:	f022 0203 	bic.w	r2, r2, #3
 8001fb6:	4302      	orrs	r2, r0
 8001fb8:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8001fbc:	061f      	lsls	r7, r3, #24
 8001fbe:	d508      	bpl.n	8001fd2 <HAL_RCCEx_PeriphCLKConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8001fc0:	4975      	ldr	r1, [pc, #468]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001fc2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8001fc4:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001fc8:	f022 020c 	bic.w	r2, r2, #12
 8001fcc:	4302      	orrs	r2, r0
 8001fce:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8001fd2:	05d8      	lsls	r0, r3, #23
 8001fd4:	d508      	bpl.n	8001fe8 <HAL_RCCEx_PeriphCLKConfig+0x13c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8001fd6:	4970      	ldr	r1, [pc, #448]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001fd8:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8001fda:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001fde:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 8001fe2:	4302      	orrs	r2, r0
 8001fe4:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8001fe8:	0599      	lsls	r1, r3, #22
 8001fea:	d508      	bpl.n	8001ffe <HAL_RCCEx_PeriphCLKConfig+0x152>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8001fec:	496a      	ldr	r1, [pc, #424]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8001fee:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8001ff0:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8001ff4:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8001ff8:	4302      	orrs	r2, r0
 8001ffa:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8001ffe:	055a      	lsls	r2, r3, #21
 8002000:	d508      	bpl.n	8002014 <HAL_RCCEx_PeriphCLKConfig+0x168>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8002002:	4965      	ldr	r1, [pc, #404]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002004:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8002006:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800200a:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800200e:	4302      	orrs	r2, r0
 8002010:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8002014:	051f      	lsls	r7, r3, #20
 8002016:	d508      	bpl.n	800202a <HAL_RCCEx_PeriphCLKConfig+0x17e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8002018:	495f      	ldr	r1, [pc, #380]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800201a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800201c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002020:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8002024:	4302      	orrs	r2, r0
 8002026:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 800202a:	04d8      	lsls	r0, r3, #19
 800202c:	d508      	bpl.n	8002040 <HAL_RCCEx_PeriphCLKConfig+0x194>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 800202e:	495a      	ldr	r1, [pc, #360]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002030:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8002032:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002036:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 800203a:	4302      	orrs	r2, r0
 800203c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8002040:	0499      	lsls	r1, r3, #18
 8002042:	d508      	bpl.n	8002056 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8002044:	4954      	ldr	r1, [pc, #336]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002046:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8002048:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800204c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8002050:	4302      	orrs	r2, r0
 8002052:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8002056:	025a      	lsls	r2, r3, #9
 8002058:	d508      	bpl.n	800206c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 800205a:	494f      	ldr	r1, [pc, #316]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800205c:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800205e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002062:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 8002066:	4302      	orrs	r2, r0
 8002068:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800206c:	029f      	lsls	r7, r3, #10
 800206e:	d50c      	bpl.n	800208a <HAL_RCCEx_PeriphCLKConfig+0x1de>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002070:	4949      	ldr	r1, [pc, #292]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002072:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 8002074:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8002078:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800207c:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
      pllsaiused = 1;
 8002080:	bf08      	it	eq
 8002082:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002084:	4302      	orrs	r2, r0
 8002086:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 800208a:	f013 0f08 	tst.w	r3, #8
 800208e:	bf18      	it	ne
 8002090:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8002092:	0358      	lsls	r0, r3, #13
 8002094:	d508      	bpl.n	80020a8 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8002096:	4940      	ldr	r1, [pc, #256]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002098:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800209a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800209e:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80020a2:	4302      	orrs	r2, r0
 80020a4:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 80020a8:	0219      	lsls	r1, r3, #8
 80020aa:	f100 80ed 	bmi.w	8002288 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 80020ae:	2e01      	cmp	r6, #1
 80020b0:	d001      	beq.n	80020b6 <HAL_RCCEx_PeriphCLKConfig+0x20a>
 80020b2:	019a      	lsls	r2, r3, #6
 80020b4:	d560      	bpl.n	8002178 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 80020b6:	4b38      	ldr	r3, [pc, #224]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80020b8:	681a      	ldr	r2, [r3, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80020ba:	461e      	mov	r6, r3
    __HAL_RCC_PLLI2S_DISABLE();
 80020bc:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 80020c0:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 80020c2:	f7fe feff 	bl	8000ec4 <HAL_GetTick>
 80020c6:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80020c8:	e005      	b.n	80020d6 <HAL_RCCEx_PeriphCLKConfig+0x22a>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80020ca:	f7fe fefb 	bl	8000ec4 <HAL_GetTick>
 80020ce:	1bc0      	subs	r0, r0, r7
 80020d0:	2864      	cmp	r0, #100	; 0x64
 80020d2:	f200 80d5 	bhi.w	8002280 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80020d6:	6833      	ldr	r3, [r6, #0]
 80020d8:	011b      	lsls	r3, r3, #4
 80020da:	d4f6      	bmi.n	80020ca <HAL_RCCEx_PeriphCLKConfig+0x21e>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 80020dc:	6823      	ldr	r3, [r4, #0]
 80020de:	07df      	lsls	r7, r3, #31
 80020e0:	d512      	bpl.n	8002108 <HAL_RCCEx_PeriphCLKConfig+0x25c>
 80020e2:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80020e4:	b982      	cbnz	r2, 8002108 <HAL_RCCEx_PeriphCLKConfig+0x25c>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 80020e6:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 80020ea:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 80020ee:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 80020f2:	6860      	ldr	r0, [r4, #4]
 80020f4:	f007 6770 	and.w	r7, r7, #251658240	; 0xf000000
 80020f8:	68a1      	ldr	r1, [r4, #8]
 80020fa:	433a      	orrs	r2, r7
 80020fc:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002100:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
 8002104:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8002108:	031e      	lsls	r6, r3, #12
 800210a:	d504      	bpl.n	8002116 <HAL_RCCEx_PeriphCLKConfig+0x26a>
 800210c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800210e:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 8002112:	f000 811e 	beq.w	8002352 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 8002116:	02d8      	lsls	r0, r3, #11
 8002118:	d504      	bpl.n	8002124 <HAL_RCCEx_PeriphCLKConfig+0x278>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 800211a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800211c:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 8002120:	f000 8117 	beq.w	8002352 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8002124:	01d9      	lsls	r1, r3, #7
 8002126:	d511      	bpl.n	800214c <HAL_RCCEx_PeriphCLKConfig+0x2a0>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8002128:	4e1b      	ldr	r6, [pc, #108]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 800212a:	6860      	ldr	r0, [r4, #4]
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 800212c:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8002130:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8002134:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8002138:	6921      	ldr	r1, [r4, #16]
 800213a:	f007 47e0 	and.w	r7, r7, #1879048192	; 0x70000000
 800213e:	433a      	orrs	r2, r7
 8002140:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002144:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002148:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800214c:	019a      	lsls	r2, r3, #6
 800214e:	f100 80f1 	bmi.w	8002334 <HAL_RCCEx_PeriphCLKConfig+0x488>
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8002152:	4b11      	ldr	r3, [pc, #68]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002154:	681a      	ldr	r2, [r3, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002156:	461e      	mov	r6, r3
    __HAL_RCC_PLLI2S_ENABLE();
 8002158:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800215c:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800215e:	f7fe feb1 	bl	8000ec4 <HAL_GetTick>
 8002162:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002164:	e005      	b.n	8002172 <HAL_RCCEx_PeriphCLKConfig+0x2c6>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8002166:	f7fe fead 	bl	8000ec4 <HAL_GetTick>
 800216a:	1bc0      	subs	r0, r0, r7
 800216c:	2864      	cmp	r0, #100	; 0x64
 800216e:	f200 8087 	bhi.w	8002280 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002172:	6833      	ldr	r3, [r6, #0]
 8002174:	011b      	lsls	r3, r3, #4
 8002176:	d5f6      	bpl.n	8002166 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8002178:	2d01      	cmp	r5, #1
 800217a:	d003      	beq.n	8002184 <HAL_RCCEx_PeriphCLKConfig+0x2d8>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800217c:	2000      	movs	r0, #0
}
 800217e:	b003      	add	sp, #12
 8002180:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 8002184:	4b04      	ldr	r3, [pc, #16]	; (8002198 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002186:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002188:	461d      	mov	r5, r3
    __HAL_RCC_PLLSAI_DISABLE();
 800218a:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 800218e:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002190:	f7fe fe98 	bl	8000ec4 <HAL_GetTick>
 8002194:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002196:	e006      	b.n	80021a6 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 8002198:	40023800 	.word	0x40023800
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800219c:	f7fe fe92 	bl	8000ec4 <HAL_GetTick>
 80021a0:	1b80      	subs	r0, r0, r6
 80021a2:	2864      	cmp	r0, #100	; 0x64
 80021a4:	d86c      	bhi.n	8002280 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80021a6:	682b      	ldr	r3, [r5, #0]
 80021a8:	009f      	lsls	r7, r3, #2
 80021aa:	d4f7      	bmi.n	800219c <HAL_RCCEx_PeriphCLKConfig+0x2f0>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 80021ac:	6823      	ldr	r3, [r4, #0]
 80021ae:	031d      	lsls	r5, r3, #12
 80021b0:	d501      	bpl.n	80021b6 <HAL_RCCEx_PeriphCLKConfig+0x30a>
 80021b2:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80021b4:	b11a      	cbz	r2, 80021be <HAL_RCCEx_PeriphCLKConfig+0x312>
 80021b6:	02d8      	lsls	r0, r3, #11
 80021b8:	d51d      	bpl.n	80021f6 <HAL_RCCEx_PeriphCLKConfig+0x34a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80021ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80021bc:	b9da      	cbnz	r2, 80021f6 <HAL_RCCEx_PeriphCLKConfig+0x34a>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80021be:	4982      	ldr	r1, [pc, #520]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80021c0:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80021c2:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80021c6:	f8d1 6088 	ldr.w	r6, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80021ca:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 80021ce:	69a0      	ldr	r0, [r4, #24]
 80021d0:	f006 46e0 	and.w	r6, r6, #1879048192	; 0x70000000
 80021d4:	4332      	orrs	r2, r6
 80021d6:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 80021da:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80021de:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80021e2:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 80021e6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80021e8:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80021ec:	3801      	subs	r0, #1
 80021ee:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80021f2:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 80021f6:	0299      	lsls	r1, r3, #10
 80021f8:	d515      	bpl.n	8002226 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 80021fa:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80021fc:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
 8002200:	d111      	bne.n	8002226 <HAL_RCCEx_PeriphCLKConfig+0x37a>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002202:	4971      	ldr	r1, [pc, #452]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8002204:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002206:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800220a:	f8d1 6088 	ldr.w	r6, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 800220e:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8002212:	6a20      	ldr	r0, [r4, #32]
 8002214:	f006 46e0 	and.w	r6, r6, #1879048192	; 0x70000000
 8002218:	4332      	orrs	r2, r6
 800221a:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800221e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8002222:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8002226:	071a      	lsls	r2, r3, #28
 8002228:	d519      	bpl.n	800225e <HAL_RCCEx_PeriphCLKConfig+0x3b2>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800222a:	4a67      	ldr	r2, [pc, #412]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 800222c:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800222e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8002232:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8002236:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800223a:	69e0      	ldr	r0, [r4, #28]
 800223c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002240:	430b      	orrs	r3, r1
 8002242:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8002246:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800224a:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800224e:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8002252:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002254:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8002258:	430b      	orrs	r3, r1
 800225a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800225e:	4b5a      	ldr	r3, [pc, #360]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002260:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8002262:	461c      	mov	r4, r3
    __HAL_RCC_PLLSAI_ENABLE();
 8002264:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8002268:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800226a:	f7fe fe2b 	bl	8000ec4 <HAL_GetTick>
 800226e:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8002270:	6823      	ldr	r3, [r4, #0]
 8002272:	009b      	lsls	r3, r3, #2
 8002274:	d482      	bmi.n	800217c <HAL_RCCEx_PeriphCLKConfig+0x2d0>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8002276:	f7fe fe25 	bl	8000ec4 <HAL_GetTick>
 800227a:	1b40      	subs	r0, r0, r5
 800227c:	2864      	cmp	r0, #100	; 0x64
 800227e:	d9f7      	bls.n	8002270 <HAL_RCCEx_PeriphCLKConfig+0x3c4>
        return HAL_TIMEOUT;
 8002280:	2003      	movs	r0, #3
}
 8002282:	b003      	add	sp, #12
 8002284:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8002288:	494f      	ldr	r1, [pc, #316]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 800228a:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 800228e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002292:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002296:	4302      	orrs	r2, r0
 8002298:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
 800229c:	e707      	b.n	80020ae <HAL_RCCEx_PeriphCLKConfig+0x202>
    __HAL_RCC_PWR_CLK_ENABLE();
 800229e:	4a4a      	ldr	r2, [pc, #296]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
    PWR->CR1 |= PWR_CR1_DBP;
 80022a0:	4b4a      	ldr	r3, [pc, #296]	; (80023cc <HAL_RCCEx_PeriphCLKConfig+0x520>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80022a2:	6c11      	ldr	r1, [r2, #64]	; 0x40
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 80022a4:	461f      	mov	r7, r3
    __HAL_RCC_PWR_CLK_ENABLE();
 80022a6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80022aa:	6411      	str	r1, [r2, #64]	; 0x40
 80022ac:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80022ae:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80022b2:	9201      	str	r2, [sp, #4]
 80022b4:	9a01      	ldr	r2, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 80022b6:	681a      	ldr	r2, [r3, #0]
 80022b8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80022bc:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 80022be:	f7fe fe01 	bl	8000ec4 <HAL_GetTick>
 80022c2:	4680      	mov	r8, r0
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 80022c4:	e005      	b.n	80022d2 <HAL_RCCEx_PeriphCLKConfig+0x426>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80022c6:	f7fe fdfd 	bl	8000ec4 <HAL_GetTick>
 80022ca:	eba0 0008 	sub.w	r0, r0, r8
 80022ce:	2864      	cmp	r0, #100	; 0x64
 80022d0:	d8d6      	bhi.n	8002280 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 80022d2:	683b      	ldr	r3, [r7, #0]
 80022d4:	05db      	lsls	r3, r3, #23
 80022d6:	d5f6      	bpl.n	80022c6 <HAL_RCCEx_PeriphCLKConfig+0x41a>
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80022d8:	4a3b      	ldr	r2, [pc, #236]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 80022da:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022dc:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80022de:	f403 7040 	and.w	r0, r3, #768	; 0x300
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80022e2:	f411 7140 	ands.w	r1, r1, #768	; 0x300
 80022e6:	d010      	beq.n	800230a <HAL_RCCEx_PeriphCLKConfig+0x45e>
 80022e8:	4281      	cmp	r1, r0
 80022ea:	d00e      	beq.n	800230a <HAL_RCCEx_PeriphCLKConfig+0x45e>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80022ec:	6f11      	ldr	r1, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80022ee:	6f17      	ldr	r7, [r2, #112]	; 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80022f0:	f421 7140 	bic.w	r1, r1, #768	; 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 80022f4:	f447 3780 	orr.w	r7, r7, #65536	; 0x10000
 80022f8:	6717      	str	r7, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 80022fa:	6f17      	ldr	r7, [r2, #112]	; 0x70
 80022fc:	f427 3780 	bic.w	r7, r7, #65536	; 0x10000
 8002300:	6717      	str	r7, [r2, #112]	; 0x70
      RCC->BDCR = tmpreg0;
 8002302:	6711      	str	r1, [r2, #112]	; 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8002304:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8002306:	07cf      	lsls	r7, r1, #31
 8002308:	d448      	bmi.n	800239c <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800230a:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
 800230e:	d03c      	beq.n	800238a <HAL_RCCEx_PeriphCLKConfig+0x4de>
 8002310:	492d      	ldr	r1, [pc, #180]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002312:	688a      	ldr	r2, [r1, #8]
 8002314:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 8002318:	608a      	str	r2, [r1, #8]
 800231a:	4a2b      	ldr	r2, [pc, #172]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 800231c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002320:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8002322:	430b      	orrs	r3, r1
 8002324:	6713      	str	r3, [r2, #112]	; 0x70
 8002326:	6823      	ldr	r3, [r4, #0]
 8002328:	e602      	b.n	8001f30 <HAL_RCCEx_PeriphCLKConfig+0x84>
  uint32_t pllsaiused = 0;
 800232a:	2500      	movs	r5, #0
      plli2sused = 1;
 800232c:	2601      	movs	r6, #1
 800232e:	e5e5      	b.n	8001efc <HAL_RCCEx_PeriphCLKConfig+0x50>
      plli2sused = 1;
 8002330:	2601      	movs	r6, #1
 8002332:	e5f6      	b.n	8001f22 <HAL_RCCEx_PeriphCLKConfig+0x76>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8002334:	6923      	ldr	r3, [r4, #16]
 8002336:	6862      	ldr	r2, [r4, #4]
 8002338:	041b      	lsls	r3, r3, #16
 800233a:	e9d4 1002 	ldrd	r1, r0, [r4, #8]
 800233e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8002342:	4a21      	ldr	r2, [pc, #132]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002344:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8002348:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800234c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8002350:	e6ff      	b.n	8002152 <HAL_RCCEx_PeriphCLKConfig+0x2a6>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8002352:	4e1d      	ldr	r6, [pc, #116]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8002354:	6860      	ldr	r0, [r4, #4]
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8002356:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800235a:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800235e:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8002362:	68e1      	ldr	r1, [r4, #12]
 8002364:	f007 47e0 	and.w	r7, r7, #1879048192	; 0x70000000
 8002368:	433a      	orrs	r2, r7
 800236a:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 800236e:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8002372:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8002376:	f8d6 108c 	ldr.w	r1, [r6, #140]	; 0x8c
 800237a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800237c:	f021 011f 	bic.w	r1, r1, #31
 8002380:	3a01      	subs	r2, #1
 8002382:	430a      	orrs	r2, r1
 8002384:	f8c6 208c 	str.w	r2, [r6, #140]	; 0x8c
 8002388:	e6cc      	b.n	8002124 <HAL_RCCEx_PeriphCLKConfig+0x278>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800238a:	480f      	ldr	r0, [pc, #60]	; (80023c8 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 800238c:	4910      	ldr	r1, [pc, #64]	; (80023d0 <HAL_RCCEx_PeriphCLKConfig+0x524>)
 800238e:	6882      	ldr	r2, [r0, #8]
 8002390:	4019      	ands	r1, r3
 8002392:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 8002396:	430a      	orrs	r2, r1
 8002398:	6082      	str	r2, [r0, #8]
 800239a:	e7be      	b.n	800231a <HAL_RCCEx_PeriphCLKConfig+0x46e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800239c:	4617      	mov	r7, r2
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800239e:	f241 3888 	movw	r8, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80023a2:	f7fe fd8f 	bl	8000ec4 <HAL_GetTick>
 80023a6:	4681      	mov	r9, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80023a8:	e006      	b.n	80023b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80023aa:	f7fe fd8b 	bl	8000ec4 <HAL_GetTick>
 80023ae:	eba0 0009 	sub.w	r0, r0, r9
 80023b2:	4540      	cmp	r0, r8
 80023b4:	f63f af64 	bhi.w	8002280 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80023b8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80023ba:	0798      	lsls	r0, r3, #30
 80023bc:	d5f5      	bpl.n	80023aa <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 80023be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80023c0:	f403 7040 	and.w	r0, r3, #768	; 0x300
 80023c4:	e7a1      	b.n	800230a <HAL_RCCEx_PeriphCLKConfig+0x45e>
 80023c6:	bf00      	nop
 80023c8:	40023800 	.word	0x40023800
 80023cc:	40007000 	.word	0x40007000
 80023d0:	0ffffcff 	.word	0x0ffffcff

080023d4 <Init_LCD_GPIO>:
//=============================================================================
void Init_LCD_GPIO(void)
{
	  GPIO_InitTypeDef GPIO_InitStruct;

	  __HAL_RCC_CRC_CLK_ENABLE();
 80023d4:	4b37      	ldr	r3, [pc, #220]	; (80024b4 <Init_LCD_GPIO+0xe0>)
	  __HAL_RCC_GPIOE_CLK_ENABLE();
	  __HAL_RCC_GPIOF_CLK_ENABLE();
	  __HAL_RCC_GPIOG_CLK_ENABLE();


	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 80023d6:	2200      	movs	r2, #0
 80023d8:	f44f 4178 	mov.w	r1, #63488	; 0xf800
{
 80023dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	  __HAL_RCC_CRC_CLK_ENABLE();
 80023e0:	6b1d      	ldr	r5, [r3, #48]	; 0x30
{
 80023e2:	b08b      	sub	sp, #44	; 0x2c
	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 80023e4:	4c34      	ldr	r4, [pc, #208]	; (80024b8 <Init_LCD_GPIO+0xe4>)
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);

	  GPIO_InitStruct.Pin = GCMD;
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023e6:	4616      	mov	r6, r2
	  __HAL_RCC_CRC_CLK_ENABLE();
 80023e8:	f445 5580 	orr.w	r5, r5, #4096	; 0x1000
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
 80023ec:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 80024bc <Init_LCD_GPIO+0xe8>
	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 80023f0:	4620      	mov	r0, r4
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);
 80023f2:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 80024c0 <Init_LCD_GPIO+0xec>
	  __HAL_RCC_CRC_CLK_ENABLE();
 80023f6:	631d      	str	r5, [r3, #48]	; 0x30
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80023f8:	2701      	movs	r7, #1
	  __HAL_RCC_CRC_CLK_ENABLE();
 80023fa:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 80023fc:	f405 5580 	and.w	r5, r5, #4096	; 0x1000
 8002400:	9501      	str	r5, [sp, #4]
 8002402:	9d01      	ldr	r5, [sp, #4]
	  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002404:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 8002406:	f045 0510 	orr.w	r5, r5, #16
 800240a:	631d      	str	r5, [r3, #48]	; 0x30
 800240c:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 800240e:	f005 0510 	and.w	r5, r5, #16
 8002412:	9502      	str	r5, [sp, #8]
 8002414:	9d02      	ldr	r5, [sp, #8]
	  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002416:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 8002418:	f045 0520 	orr.w	r5, r5, #32
 800241c:	631d      	str	r5, [r3, #48]	; 0x30
 800241e:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 8002420:	f005 0520 	and.w	r5, r5, #32
 8002424:	9503      	str	r5, [sp, #12]
 8002426:	9d03      	ldr	r5, [sp, #12]
	  __HAL_RCC_GPIOG_CLK_ENABLE();
 8002428:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 800242a:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 800242e:	631d      	str	r5, [r3, #48]	; 0x30
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002430:	2503      	movs	r5, #3
	  __HAL_RCC_GPIOG_CLK_ENABLE();
 8002432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002434:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002438:	9304      	str	r3, [sp, #16]
 800243a:	9b04      	ldr	r3, [sp, #16]
	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 800243c:	f7fe fec6 	bl	80011cc <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
 8002440:	4648      	mov	r0, r9
 8002442:	4632      	mov	r2, r6
 8002444:	21ff      	movs	r1, #255	; 0xff
 8002446:	f7fe fec1 	bl	80011cc <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);
 800244a:	4632      	mov	r2, r6
 800244c:	4640      	mov	r0, r8
 800244e:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8002452:	f7fe febb 	bl	80011cc <HAL_GPIO_WritePin>
	  GPIO_InitStruct.Pin = GCMD;
 8002456:	f44f 4378 	mov.w	r3, #63488	; 0xf800
	  HAL_GPIO_Init(GDISP_CMD_PORT, &GPIO_InitStruct);
 800245a:	4620      	mov	r0, r4
 800245c:	a905      	add	r1, sp, #20
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800245e:	e9cd 3705 	strd	r3, r7, [sp, #20]
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002462:	e9cd 6507 	strd	r6, r5, [sp, #28]
	  HAL_GPIO_Init(GDISP_CMD_PORT, &GPIO_InitStruct);
 8002466:	f7fe fdab 	bl	8000fc0 <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_LO;
 800246a:	23ff      	movs	r3, #255	; 0xff
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
	  HAL_GPIO_Init(GDISP_DATA_LO_PORT, &GPIO_InitStruct);
 800246c:	4648      	mov	r0, r9
 800246e:	a905      	add	r1, sp, #20
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002470:	9508      	str	r5, [sp, #32]
	  GPIO_InitStruct.Pin = GDATA_LO;
 8002472:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002474:	e9cd 7606 	strd	r7, r6, [sp, #24]
	  HAL_GPIO_Init(GDISP_DATA_LO_PORT, &GPIO_InitStruct);
 8002478:	f7fe fda2 	bl	8000fc0 <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_HI;
 800247c:	f44f 437f 	mov.w	r3, #65280	; 0xff00
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
	  HAL_GPIO_Init(GDISP_DATA_HI_PORT, &GPIO_InitStruct);
 8002480:	a905      	add	r1, sp, #20
 8002482:	4640      	mov	r0, r8
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002484:	9508      	str	r5, [sp, #32]

	  SET_CS; SET_WR; SET_RD; SET_DC; SET_RST;
 8002486:	f44f 5500 	mov.w	r5, #8192	; 0x2000
	  GPIO_InitStruct.Pin = GDATA_HI;
 800248a:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800248c:	e9cd 7606 	strd	r7, r6, [sp, #24]
	  HAL_GPIO_Init(GDISP_DATA_HI_PORT, &GPIO_InitStruct);
 8002490:	f7fe fd96 	bl	8000fc0 <HAL_GPIO_Init>
	  SET_CS; SET_WR; SET_RD; SET_DC; SET_RST;
 8002494:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8002498:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800249c:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80024a0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80024a4:	61a5      	str	r5, [r4, #24]
 80024a6:	61a0      	str	r0, [r4, #24]
 80024a8:	61a1      	str	r1, [r4, #24]
 80024aa:	61a2      	str	r2, [r4, #24]
 80024ac:	61a3      	str	r3, [r4, #24]
}
 80024ae:	b00b      	add	sp, #44	; 0x2c
 80024b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80024b4:	40023800 	.word	0x40023800
 80024b8:	40021400 	.word	0x40021400
 80024bc:	40021800 	.word	0x40021800
 80024c0:	40021000 	.word	0x40021000

080024c4 <SSD1963_WriteCommand>:
//=============================================================================
// Write command to display
//=============================================================================
void SSD1963_WriteCommand(uint16_t Data)
{
	uint16_t _Data=~Data;
 80024c4:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80024c6:	4911      	ldr	r1, [pc, #68]	; (800250c <SSD1963_WriteCommand+0x48>)

	CLR_CS;
 80024c8:	4a11      	ldr	r2, [pc, #68]	; (8002510 <SSD1963_WriteCommand+0x4c>)
	CLR_DC;
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80024ca:	041b      	lsls	r3, r3, #16
{
 80024cc:	b470      	push	{r4, r5, r6}
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80024ce:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80024d2:	b2c4      	uxtb	r4, r0
 80024d4:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80024d8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80024dc:	618d      	str	r5, [r1, #24]
	CLR_CS;
 80024de:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80024e2:	4323      	orrs	r3, r4
 80024e4:	4c0b      	ldr	r4, [pc, #44]	; (8002514 <SSD1963_WriteCommand+0x50>)
	CLR_CS;
 80024e6:	6195      	str	r5, [r2, #24]
	CLR_DC;
 80024e8:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
 80024ec:	6195      	str	r5, [r2, #24]
	writeStrobe;
 80024ee:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80024f2:	61a3      	str	r3, [r4, #24]
	writeStrobe;
 80024f4:	f44f 6400 	mov.w	r4, #2048	; 0x800
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80024f8:	694e      	ldr	r6, [r1, #20]
	SET_CS;
 80024fa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80024fe:	4330      	orrs	r0, r6
 8002500:	6148      	str	r0, [r1, #20]
	writeStrobe;
 8002502:	6195      	str	r5, [r2, #24]
 8002504:	6194      	str	r4, [r2, #24]
	SET_CS;
 8002506:	6193      	str	r3, [r2, #24]
}
 8002508:	bc70      	pop	{r4, r5, r6}
 800250a:	4770      	bx	lr
 800250c:	40021000 	.word	0x40021000
 8002510:	40021400 	.word	0x40021400
 8002514:	40021800 	.word	0x40021800

08002518 <SSD1963_WriteData>:
// Write data to display
//=============================================================================

void SSD1963_WriteData(uint16_t Data)
{
	uint16_t _Data=~Data;
 8002518:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800251a:	4911      	ldr	r1, [pc, #68]	; (8002560 <SSD1963_WriteData+0x48>)

	CLR_CS;
 800251c:	4a11      	ldr	r2, [pc, #68]	; (8002564 <SSD1963_WriteData+0x4c>)
	SET_DC;
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800251e:	041b      	lsls	r3, r3, #16
{
 8002520:	b470      	push	{r4, r5, r6}
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002522:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002526:	b2c4      	uxtb	r4, r0
 8002528:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800252c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002530:	618d      	str	r5, [r1, #24]
	CLR_CS;
 8002532:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002536:	4323      	orrs	r3, r4
 8002538:	4c0b      	ldr	r4, [pc, #44]	; (8002568 <SSD1963_WriteData+0x50>)
	CLR_CS;
 800253a:	6195      	str	r5, [r2, #24]
	SET_DC;
 800253c:	f44f 4500 	mov.w	r5, #32768	; 0x8000
 8002540:	6195      	str	r5, [r2, #24]
	writeStrobe;
 8002542:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002546:	61a3      	str	r3, [r4, #24]
	writeStrobe;
 8002548:	f44f 6400 	mov.w	r4, #2048	; 0x800
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800254c:	694e      	ldr	r6, [r1, #20]
	SET_CS;
 800254e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002552:	4330      	orrs	r0, r6
 8002554:	6148      	str	r0, [r1, #20]
	writeStrobe;
 8002556:	6195      	str	r5, [r2, #24]
 8002558:	6194      	str	r4, [r2, #24]
	SET_CS;
 800255a:	6193      	str	r3, [r2, #24]

}
 800255c:	bc70      	pop	{r4, r5, r6}
 800255e:	4770      	bx	lr
 8002560:	40021000 	.word	0x40021000
 8002564:	40021400 	.word	0x40021400
 8002568:	40021800 	.word	0x40021800

0800256c <SSD1963_WriteDataMultiple>:
//=============================================================================
// Write multiple data to display
//=============================================================================
void SSD1963_WriteDataMultiple(uint16_t * Data, int NumItems)
{
  while (NumItems)
 800256c:	b399      	cbz	r1, 80025d6 <SSD1963_WriteDataMultiple+0x6a>
 800256e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
	writeStrobe;
 8002572:	f04f 6c00 	mov.w	ip, #134217728	; 0x8000000
{
 8002576:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800257a:	4d17      	ldr	r5, [pc, #92]	; (80025d8 <SSD1963_WriteDataMultiple+0x6c>)
 800257c:	f04f 4a7f 	mov.w	sl, #4278190080	; 0xff000000
	CLR_CS;
 8002580:	4c16      	ldr	r4, [pc, #88]	; (80025dc <SSD1963_WriteDataMultiple+0x70>)
 8002582:	f04f 5900 	mov.w	r9, #536870912	; 0x20000000
	SET_DC;
 8002586:	f44f 4800 	mov.w	r8, #32768	; 0x8000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800258a:	f8df e054 	ldr.w	lr, [pc, #84]	; 80025e0 <SSD1963_WriteDataMultiple+0x74>
	writeStrobe;
 800258e:	f44f 6700 	mov.w	r7, #2048	; 0x800
	SET_CS;
 8002592:	f44f 5600 	mov.w	r6, #8192	; 0x2000
  {
	  SSD1963_WriteData(*Data);
 8002596:	f830 3b02 	ldrh.w	r3, [r0], #2
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800259a:	f8c5 a018 	str.w	sl, [r5, #24]
	uint16_t _Data=~Data;
 800259e:	43da      	mvns	r2, r3
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80025a0:	fa5f fb83 	uxtb.w	fp, r3
	CLR_CS;
 80025a4:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80025a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80025ac:	0412      	lsls	r2, r2, #16
	SET_DC;
 80025ae:	f8c4 8018 	str.w	r8, [r4, #24]
  while (NumItems)
 80025b2:	4288      	cmp	r0, r1
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80025b4:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 80025b8:	ea42 020b 	orr.w	r2, r2, fp
 80025bc:	f8ce 2018 	str.w	r2, [lr, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80025c0:	696a      	ldr	r2, [r5, #20]
 80025c2:	ea43 0302 	orr.w	r3, r3, r2
 80025c6:	616b      	str	r3, [r5, #20]
	writeStrobe;
 80025c8:	f8c4 c018 	str.w	ip, [r4, #24]
 80025cc:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80025ce:	61a6      	str	r6, [r4, #24]
  while (NumItems)
 80025d0:	d1e1      	bne.n	8002596 <SSD1963_WriteDataMultiple+0x2a>
	  Data++;
	  NumItems--;
  }
}
 80025d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80025d6:	4770      	bx	lr
 80025d8:	40021000 	.word	0x40021000
 80025dc:	40021400 	.word	0x40021400
 80025e0:	40021800 	.word	0x40021800

080025e4 <SSD1963_Init>:
//=============================================================================
// Display initialization
//=============================================================================

void SSD1963_Init (void)
{
 80025e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	CLR_RST;  // reset
 80025e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80025ec:	4cbd      	ldr	r4, [pc, #756]	; (80028e4 <SSD1963_Init+0x300>)
{
 80025ee:	b083      	sub	sp, #12
	HAL_Delay(500);
 80025f0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
	CLR_RST;  // reset
 80025f4:	61a3      	str	r3, [r4, #24]
	SET_RST;
 80025f6:	f44f 4680 	mov.w	r6, #16384	; 0x4000
	HAL_Delay(500);
 80025fa:	f7fe fc69 	bl	8000ed0 <HAL_Delay>
	CLR_CS;
 80025fe:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
	writeStrobe;
 8002602:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
	HAL_Delay(100);
 8002606:	2064      	movs	r0, #100	; 0x64
	CLR_CS;
 8002608:	9201      	str	r2, [sp, #4]
	CLR_DC;
 800260a:	f04f 4a00 	mov.w	sl, #2147483648	; 0x80000000
	writeStrobe;
 800260e:	9300      	str	r3, [sp, #0]
 8002610:	f44f 6700 	mov.w	r7, #2048	; 0x800
	SET_RST;
 8002614:	61a6      	str	r6, [r4, #24]
	SET_CS;
 8002616:	f44f 5600 	mov.w	r6, #8192	; 0x2000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800261a:	4db3      	ldr	r5, [pc, #716]	; (80028e8 <SSD1963_Init+0x304>)
	HAL_Delay(100);
 800261c:	f7fe fc58 	bl	8000ed0 <HAL_Delay>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002620:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002624:	f8df 82d4 	ldr.w	r8, [pc, #724]	; 80028fc <SSD1963_Init+0x318>
	CLR_CS;
 8002628:	9a01      	ldr	r2, [sp, #4]

	SSD1963_WriteCommand(SSD1963_SOFT_RESET);
	HAL_Delay(10);
 800262a:	200a      	movs	r0, #10
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800262c:	61ab      	str	r3, [r5, #24]
	SET_DC;
 800262e:	f44f 4900 	mov.w	r9, #32768	; 0x8000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002632:	4bae      	ldr	r3, [pc, #696]	; (80028ec <SSD1963_Init+0x308>)
	CLR_CS;
 8002634:	61a2      	str	r2, [r4, #24]
 8002636:	9201      	str	r2, [sp, #4]
	CLR_DC;
 8002638:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800263c:	f8c8 3018 	str.w	r3, [r8, #24]
	writeStrobe;
 8002640:	9b00      	ldr	r3, [sp, #0]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002642:	f8d5 c014 	ldr.w	ip, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002646:	f8df b2b8 	ldr.w	fp, [pc, #696]	; 8002900 <SSD1963_Init+0x31c>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800264a:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800264e:	61a3      	str	r3, [r4, #24]
 8002650:	9300      	str	r3, [sp, #0]
 8002652:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002654:	61a6      	str	r6, [r4, #24]
	HAL_Delay(10);
 8002656:	f7fe fc3b 	bl	8000ed0 <HAL_Delay>
	CLR_CS;
 800265a:	9a01      	ldr	r2, [sp, #4]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800265c:	f8df e2a4 	ldr.w	lr, [pc, #676]	; 8002904 <SSD1963_Init+0x320>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002660:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002664:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002668:	f8df c29c 	ldr.w	ip, [pc, #668]	; 8002908 <SSD1963_Init+0x324>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800266c:	61ab      	str	r3, [r5, #24]
	SSD1963_WriteData(4);  	// dummy

	SSD1963_WriteCommand(SSD1963_SET_PLL);
	SSD1963_WriteData(0x0001);

	HAL_Delay(100);
 800266e:	2064      	movs	r0, #100	; 0x64
	CLR_CS;
 8002670:	61a2      	str	r2, [r4, #24]
	writeStrobe;
 8002672:	9b00      	ldr	r3, [sp, #0]
	CLR_DC;
 8002674:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002678:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800267c:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002680:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8002684:	61a3      	str	r3, [r4, #24]
 8002686:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002688:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800268a:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800268c:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800268e:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002692:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002696:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800269a:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800269e:	61a3      	str	r3, [r4, #24]
 80026a0:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80026a2:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80026a4:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80026a6:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80026a8:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80026ac:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80026b0:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80026b4:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80026b8:	61a3      	str	r3, [r4, #24]
 80026ba:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80026bc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80026be:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80026c0:	498b      	ldr	r1, [pc, #556]	; (80028f0 <SSD1963_Init+0x30c>)
	CLR_CS;
 80026c2:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80026c4:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80026c8:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80026cc:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80026d0:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80026d4:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80026d8:	61a3      	str	r3, [r4, #24]
 80026da:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80026dc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80026de:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80026e0:	4984      	ldr	r1, [pc, #528]	; (80028f4 <SSD1963_Init+0x310>)
	CLR_CS;
 80026e2:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80026e4:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80026e8:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80026ec:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80026f0:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80026f4:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80026f8:	61a3      	str	r3, [r4, #24]
 80026fa:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80026fc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80026fe:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002700:	61a2      	str	r2, [r4, #24]
 8002702:	9201      	str	r2, [sp, #4]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002704:	4a79      	ldr	r2, [pc, #484]	; (80028ec <SSD1963_Init+0x308>)
	SET_DC;
 8002706:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800270a:	f8c8 2018 	str.w	r2, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800270e:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8002712:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8002716:	61a3      	str	r3, [r4, #24]
 8002718:	9300      	str	r3, [sp, #0]
 800271a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800271c:	61a6      	str	r6, [r4, #24]
	HAL_Delay(100);
 800271e:	f7fe fbd7 	bl	8000ed0 <HAL_Delay>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002722:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	CLR_CS;
 8002726:	9a01      	ldr	r2, [sp, #4]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002728:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800272c:	61ab      	str	r3, [r5, #24]
	SSD1963_WriteData(0x0000);
	SSD1963_WriteData(0x0000);

	SSD1963_WriteCommand(SSD1963_SET_DISPLAY_ON);//SET display on

	HAL_Delay(10);
 800272e:	200a      	movs	r0, #10
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002730:	4b70      	ldr	r3, [pc, #448]	; (80028f4 <SSD1963_Init+0x310>)
	CLR_CS;
 8002732:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 8002734:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002738:	f8c8 3018 	str.w	r3, [r8, #24]
	writeStrobe;
 800273c:	9b00      	ldr	r3, [sp, #0]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800273e:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8002742:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8002746:	61a3      	str	r3, [r4, #24]
 8002748:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800274a:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800274c:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800274e:	496a      	ldr	r1, [pc, #424]	; (80028f8 <SSD1963_Init+0x314>)
	CLR_CS;
 8002750:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002752:	f8df c1b8 	ldr.w	ip, [pc, #440]	; 800290c <SSD1963_Init+0x328>
	SET_DC;
 8002756:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800275a:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800275e:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002762:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002766:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800276a:	61a3      	str	r3, [r4, #24]
 800276c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800276e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002770:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002772:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 8002774:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002778:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800277c:	f8df c190 	ldr.w	ip, [pc, #400]	; 8002910 <SSD1963_Init+0x32c>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002780:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002784:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8002788:	61a3      	str	r3, [r4, #24]
 800278a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800278c:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800278e:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002790:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002792:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002796:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800279a:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800279e:	f8c5 c014 	str.w	ip, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80027a2:	f44f 0c7f 	mov.w	ip, #16711680	; 0xff0000
	writeStrobe;
 80027a6:	61a3      	str	r3, [r4, #24]
 80027a8:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80027aa:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80027ac:	61a9      	str	r1, [r5, #24]
 80027ae:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 80027b2:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80027b4:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80027b8:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80027bc:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80027c0:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80027c4:	61a3      	str	r3, [r4, #24]
 80027c6:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80027c8:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80027ca:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80027cc:	4947      	ldr	r1, [pc, #284]	; (80028ec <SSD1963_Init+0x308>)
	CLR_CS;
 80027ce:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80027d0:	f8df c140 	ldr.w	ip, [pc, #320]	; 8002914 <SSD1963_Init+0x330>
	SET_DC;
 80027d4:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80027d8:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80027dc:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80027e0:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80027e4:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80027e8:	61a3      	str	r3, [r4, #24]
 80027ea:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80027ec:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80027ee:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80027f0:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80027f2:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80027f6:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80027fa:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80027fe:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8002802:	61a3      	str	r3, [r4, #24]
 8002804:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002806:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002808:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800280a:	4938      	ldr	r1, [pc, #224]	; (80028ec <SSD1963_Init+0x308>)
	CLR_CS;
 800280c:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800280e:	f8df c108 	ldr.w	ip, [pc, #264]	; 8002918 <SSD1963_Init+0x334>
	SET_DC;
 8002812:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002816:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800281a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800281e:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002822:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8002826:	61a3      	str	r3, [r4, #24]
 8002828:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800282a:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800282c:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800282e:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002830:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002834:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002838:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800283c:	f8c5 c014 	str.w	ip, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002840:	f44f 0c7f 	mov.w	ip, #16711680	; 0xff0000
	writeStrobe;
 8002844:	61a3      	str	r3, [r4, #24]
 8002846:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002848:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800284a:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800284c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8002850:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002852:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002856:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800285a:	f8df c0c0 	ldr.w	ip, [pc, #192]	; 800291c <SSD1963_Init+0x338>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800285e:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002862:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8002866:	61a3      	str	r3, [r4, #24]
 8002868:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800286a:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800286c:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800286e:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 8002870:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002874:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002878:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800287c:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8002880:	61a3      	str	r3, [r4, #24]
 8002882:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002884:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002886:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002888:	491b      	ldr	r1, [pc, #108]	; (80028f8 <SSD1963_Init+0x314>)
	CLR_CS;
 800288a:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800288c:	f8df c090 	ldr.w	ip, [pc, #144]	; 8002920 <SSD1963_Init+0x33c>
	SET_DC;
 8002890:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002894:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002898:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800289c:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80028a0:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80028a4:	61a3      	str	r3, [r4, #24]
 80028a6:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80028a8:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80028aa:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80028ac:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80028ae:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80028b2:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80028b6:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80028ba:	f8df c068 	ldr.w	ip, [pc, #104]	; 8002924 <SSD1963_Init+0x340>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80028be:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80028c2:	61a3      	str	r3, [r4, #24]
 80028c4:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80028c6:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80028c8:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80028ca:	4908      	ldr	r1, [pc, #32]	; (80028ec <SSD1963_Init+0x308>)
	CLR_CS;
 80028cc:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80028ce:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80028d2:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80028d6:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80028da:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80028de:	f8c5 e014 	str.w	lr, [r5, #20]
 80028e2:	e021      	b.n	8002928 <SSD1963_Init+0x344>
 80028e4:	40021400 	.word	0x40021400
 80028e8:	40021000 	.word	0x40021000
 80028ec:	00fe0001 	.word	0x00fe0001
 80028f0:	00fb0004 	.word	0x00fb0004
 80028f4:	001f00e0 	.word	0x001f00e0
 80028f8:	00fc0003 	.word	0x00fc0003
 80028fc:	40021800 	.word	0x40021800
 8002900:	00fd0002 	.word	0x00fd0002
 8002904:	001d00e2 	.word	0x001d00e2
 8002908:	00e2001d 	.word	0x00e2001d
 800290c:	004f00b0 	.word	0x004f00b0
 8002910:	00df0020 	.word	0x00df0020
 8002914:	002000df 	.word	0x002000df
 8002918:	00f0000f 	.word	0x00f0000f
 800291c:	000f00f0 	.word	0x000f00f0
 8002920:	001900e6 	.word	0x001900e6
 8002924:	008a0075 	.word	0x008a0075
	writeStrobe;
 8002928:	61a3      	str	r3, [r4, #24]
 800292a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800292c:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800292e:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002930:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002932:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002936:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800293a:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800293e:	f8df c344 	ldr.w	ip, [pc, #836]	; 8002c84 <SSD1963_Init+0x6a0>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002942:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8002946:	61a3      	str	r3, [r4, #24]
 8002948:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800294a:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800294c:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800294e:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002950:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002954:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002958:	f8df c32c 	ldr.w	ip, [pc, #812]	; 8002c88 <SSD1963_Init+0x6a4>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800295c:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002960:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8002964:	61a3      	str	r3, [r4, #24]
 8002966:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002968:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800296a:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800296c:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 800296e:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002972:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002976:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800297a:	f8df c310 	ldr.w	ip, [pc, #784]	; 8002c8c <SSD1963_Init+0x6a8>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800297e:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8002982:	61a3      	str	r3, [r4, #24]
 8002984:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002986:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002988:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800298a:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800298c:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002990:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002994:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002998:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800299c:	61a3      	str	r3, [r4, #24]
 800299e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80029a0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80029a2:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80029a4:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80029a6:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80029aa:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80029ae:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80029b2:	f8df c2dc 	ldr.w	ip, [pc, #732]	; 8002c90 <SSD1963_Init+0x6ac>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80029b6:	f8c5 e014 	str.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80029ba:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
	writeStrobe;
 80029be:	61a3      	str	r3, [r4, #24]
 80029c0:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80029c2:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80029c4:	61a9      	str	r1, [r5, #24]
 80029c6:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 80029ca:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80029cc:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80029d0:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80029d4:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80029d8:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80029dc:	61a3      	str	r3, [r4, #24]
 80029de:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80029e0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80029e2:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80029e4:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80029e6:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80029ea:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80029ee:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80029f2:	f8df c2a0 	ldr.w	ip, [pc, #672]	; 8002c94 <SSD1963_Init+0x6b0>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80029f6:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80029fa:	61a3      	str	r3, [r4, #24]
 80029fc:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80029fe:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002a00:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002a02:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002a04:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a08:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002a0c:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a10:	f8df e284 	ldr.w	lr, [pc, #644]	; 8002c98 <SSD1963_Init+0x6b4>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002a14:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a18:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8002a1c:	61a3      	str	r3, [r4, #24]
 8002a1e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002a20:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002a22:	61a9      	str	r1, [r5, #24]
 8002a24:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8002a28:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002a2a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a2e:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002a32:	f8d5 b014 	ldr.w	fp, [r5, #20]
 8002a36:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a3a:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8002a3e:	61a3      	str	r3, [r4, #24]
 8002a40:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002a42:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002a44:	61a9      	str	r1, [r5, #24]
 8002a46:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8002a4a:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002a4c:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a50:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002a54:	f8d5 b014 	ldr.w	fp, [r5, #20]
 8002a58:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a5c:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8002a60:	61a3      	str	r3, [r4, #24]
 8002a62:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002a64:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002a66:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002a68:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8002a6c:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002a6e:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a72:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002a76:	f8d5 b014 	ldr.w	fp, [r5, #20]
 8002a7a:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 8002a7e:	61a3      	str	r3, [r4, #24]
 8002a80:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002a82:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002a84:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002a86:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 8002a88:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a8c:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002a90:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002a94:	f8df c204 	ldr.w	ip, [pc, #516]	; 8002c9c <SSD1963_Init+0x6b8>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002a98:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 8002a9c:	61a3      	str	r3, [r4, #24]
 8002a9e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002aa0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002aa2:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002aa4:	4973      	ldr	r1, [pc, #460]	; (8002c74 <SSD1963_Init+0x690>)
	CLR_CS;
 8002aa6:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002aa8:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002aac:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002ab0:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002ab4:	f8d5 b014 	ldr.w	fp, [r5, #20]
 8002ab8:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 8002abc:	61a3      	str	r3, [r4, #24]
 8002abe:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002ac0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002ac2:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002ac4:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002ac6:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002aca:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002ace:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002ad2:	f8df e1cc 	ldr.w	lr, [pc, #460]	; 8002ca0 <SSD1963_Init+0x6bc>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002ad6:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002ada:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8002ade:	61a3      	str	r3, [r4, #24]
 8002ae0:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002ae2:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002ae4:	61a9      	str	r1, [r5, #24]
 8002ae6:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8002aea:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002aec:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002af0:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002af4:	f8d5 b014 	ldr.w	fp, [r5, #20]
 8002af8:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 8002afc:	61a3      	str	r3, [r4, #24]
 8002afe:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002b00:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002b02:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002b04:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002b06:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002b0a:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002b0e:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002b12:	f8df c190 	ldr.w	ip, [pc, #400]	; 8002ca4 <SSD1963_Init+0x6c0>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002b16:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 8002b1a:	61a3      	str	r3, [r4, #24]
 8002b1c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002b1e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002b20:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002b22:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002b24:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002b28:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002b2c:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002b30:	f8c5 e014 	str.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002b34:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
	writeStrobe;
 8002b38:	61a3      	str	r3, [r4, #24]
 8002b3a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002b3c:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002b3e:	61a9      	str	r1, [r5, #24]
 8002b40:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8002b44:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002b46:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002b4a:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002b4e:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002b52:	f8c5 e014 	str.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002b56:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
	writeStrobe;
 8002b5a:	61a3      	str	r3, [r4, #24]
 8002b5c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002b5e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002b60:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002b62:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8002b66:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002b68:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002b6c:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002b70:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8002b74:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8002b78:	61a3      	str	r3, [r4, #24]
 8002b7a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002b7c:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002b7e:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002b80:	61a2      	str	r2, [r4, #24]
 8002b82:	9201      	str	r2, [sp, #4]
	CLR_DC;
 8002b84:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002b88:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002b8c:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8002b90:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8002b94:	61a3      	str	r3, [r4, #24]
 8002b96:	9300      	str	r3, [sp, #0]
 8002b98:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002b9a:	61a6      	str	r6, [r4, #24]
	HAL_Delay(10);
 8002b9c:	f7fe f998 	bl	8000ed0 <HAL_Delay>
	CLR_CS;
 8002ba0:	9a01      	ldr	r2, [sp, #4]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002ba2:	4835      	ldr	r0, [pc, #212]	; (8002c78 <SSD1963_Init+0x694>)
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002ba4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002ba8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002bac:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8002ca8 <SSD1963_Init+0x6c4>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002bb0:	61ab      	str	r3, [r5, #24]
	CLR_CS;
 8002bb2:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 8002bb4:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002bb8:	f8c8 0018 	str.w	r0, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002bbc:	6968      	ldr	r0, [r5, #20]
	writeStrobe;
 8002bbe:	9b00      	ldr	r3, [sp, #0]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002bc0:	6168      	str	r0, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002bc2:	482e      	ldr	r0, [pc, #184]	; (8002c7c <SSD1963_Init+0x698>)
	writeStrobe;
 8002bc4:	61a3      	str	r3, [r4, #24]
 8002bc6:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002bc8:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002bca:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002bcc:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002bce:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002bd2:	f8c8 0018 	str.w	r0, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002bd6:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002bda:	4829      	ldr	r0, [pc, #164]	; (8002c80 <SSD1963_Init+0x69c>)
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002bdc:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8002be0:	61a3      	str	r3, [r4, #24]
 8002be2:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002be4:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002be6:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002be8:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002bea:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002bee:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002bf2:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8002bf6:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8002bfa:	61a3      	str	r3, [r4, #24]
 8002bfc:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002bfe:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002c00:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002c02:	491c      	ldr	r1, [pc, #112]	; (8002c74 <SSD1963_Init+0x690>)
	CLR_CS;
 8002c04:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002c06:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002c0a:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002c0e:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002c12:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8002c16:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8002c1a:	61a3      	str	r3, [r4, #24]
 8002c1c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002c1e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002c20:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002c22:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002c24:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002c28:	f8c8 0018 	str.w	r0, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002c2c:	6968      	ldr	r0, [r5, #20]
 8002c2e:	6168      	str	r0, [r5, #20]
	writeStrobe;
 8002c30:	61a3      	str	r3, [r4, #24]
 8002c32:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002c34:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002c36:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002c38:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
	CLR_CS;
 8002c3c:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8002c3e:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002c42:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002c46:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002c4a:	6968      	ldr	r0, [r5, #20]
 8002c4c:	6168      	str	r0, [r5, #20]
	writeStrobe;
 8002c4e:	61a3      	str	r3, [r4, #24]
 8002c50:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002c52:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8002c54:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8002c56:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002c58:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
	SET_DC;
 8002c5c:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8002c60:	f8c8 2018 	str.w	r2, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8002c64:	696a      	ldr	r2, [r5, #20]
 8002c66:	616a      	str	r2, [r5, #20]
	writeStrobe;
 8002c68:	61a3      	str	r3, [r4, #24]
 8002c6a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8002c6c:	61a6      	str	r6, [r4, #24]
	SSD1963_WriteData(0x0040); 					// brightness level 0x00 - 0xFF
	SSD1963_WriteData(0x0000); 					// minimum brightness level =  0x00 - 0xFF
	SSD1963_WriteData(0x0000);					// brightness prescalar 0x0 - 0xF


}
 8002c6e:	b003      	add	sp, #12
 8002c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c74:	00fe0001 	.word	0x00fe0001
 8002c78:	004100be 	.word	0x004100be
 8002c7c:	00fb0004 	.word	0x00fb0004
 8002c80:	00bf0040 	.word	0x00bf0040
 8002c84:	001200ed 	.word	0x001200ed
 8002c88:	004b00b4 	.word	0x004b00b4
 8002c8c:	00eb0014 	.word	0x00eb0014
 8002c90:	00d3002c 	.word	0x00d3002c
 8002c94:	004900b6 	.word	0x004900b6
 8002c98:	00e1001e 	.word	0x00e1001e
 8002c9c:	00f3000c 	.word	0x00f3000c
 8002ca0:	00f90006 	.word	0x00f90006
 8002ca4:	00d60029 	.word	0x00d60029
 8002ca8:	003f00c0 	.word	0x003f00c0

08002cac <Init_TOUCH_GPIO>:

I2C_HandleTypeDef hi2c;


void Init_TOUCH_GPIO(I2C_HandleTypeDef i2c_handle)
{
 8002cac:	b084      	sub	sp, #16
 8002cae:	b508      	push	{r3, lr}
 8002cb0:	f10d 0c08 	add.w	ip, sp, #8
 8002cb4:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	hi2c=i2c_handle;
 8002cb8:	224c      	movs	r2, #76	; 0x4c
 8002cba:	4661      	mov	r1, ip
 8002cbc:	4803      	ldr	r0, [pc, #12]	; (8002ccc <Init_TOUCH_GPIO+0x20>)
 8002cbe:	f016 f838 	bl	8018d32 <memcpy>
}
 8002cc2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002cc6:	b004      	add	sp, #16
 8002cc8:	4770      	bx	lr
 8002cca:	bf00      	nop
 8002ccc:	20019754 	.word	0x20019754

08002cd0 <STMPE610_Init>:

	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
}

void STMPE610_Init(void)
{
 8002cd0:	b570      	push	{r4, r5, r6, lr}
 8002cd2:	b084      	sub	sp, #16
	txbuf[0]=reg;
 8002cd4:	f240 2303 	movw	r3, #515	; 0x203
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002cd8:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002cdc:	4d81      	ldr	r5, [pc, #516]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002cde:	ac04      	add	r4, sp, #16
 8002ce0:	f824 3d04 	strh.w	r3, [r4, #-4]!
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002ce4:	9600      	str	r6, [sp, #0]
 8002ce6:	2302      	movs	r3, #2
 8002ce8:	4622      	mov	r2, r4
 8002cea:	2188      	movs	r1, #136	; 0x88
 8002cec:	4628      	mov	r0, r5
 8002cee:	f7fe fb77 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002cf2:	2800      	cmp	r0, #0
 8002cf4:	d1f6      	bne.n	8002ce4 <STMPE610_Init+0x14>
	STMPE610_Write(STMPE610_REG_SYS_CTRL1, 0x02);		// Software chip reset
	HAL_Delay(10);
 8002cf6:	200a      	movs	r0, #10
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002cf8:	f44f 5640 	mov.w	r6, #12288	; 0x3000
	HAL_Delay(10);
 8002cfc:	f7fe f8e8 	bl	8000ed0 <HAL_Delay>
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d00:	4d78      	ldr	r5, [pc, #480]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002d02:	f240 4304 	movw	r3, #1028	; 0x404
 8002d06:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d0a:	9600      	str	r6, [sp, #0]
 8002d0c:	2302      	movs	r3, #2
 8002d0e:	4622      	mov	r2, r4
 8002d10:	2188      	movs	r1, #136	; 0x88
 8002d12:	4628      	mov	r0, r5
 8002d14:	f7fe fb64 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002d18:	2800      	cmp	r0, #0
 8002d1a:	d1f6      	bne.n	8002d0a <STMPE610_Init+0x3a>
	txbuf[0]=reg;
 8002d1c:	f240 330a 	movw	r3, #778	; 0x30a
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d20:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002d24:	4d6f      	ldr	r5, [pc, #444]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002d26:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d2a:	9600      	str	r6, [sp, #0]
 8002d2c:	2302      	movs	r3, #2
 8002d2e:	4622      	mov	r2, r4
 8002d30:	2188      	movs	r1, #136	; 0x88
 8002d32:	4628      	mov	r0, r5
 8002d34:	f7fe fb54 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002d38:	2800      	cmp	r0, #0
 8002d3a:	d1f6      	bne.n	8002d2a <STMPE610_Init+0x5a>
	txbuf[0]=reg;
 8002d3c:	f644 0320 	movw	r3, #18464	; 0x4820
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d40:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002d44:	4d67      	ldr	r5, [pc, #412]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002d46:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d4a:	9600      	str	r6, [sp, #0]
 8002d4c:	2302      	movs	r3, #2
 8002d4e:	4622      	mov	r2, r4
 8002d50:	2188      	movs	r1, #136	; 0x88
 8002d52:	4628      	mov	r0, r5
 8002d54:	f7fe fb44 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002d58:	2800      	cmp	r0, #0
 8002d5a:	d1f6      	bne.n	8002d4a <STMPE610_Init+0x7a>
	
	STMPE610_Write(STMPE610_REG_SYS_CTRL2, 0x04);		// Temperature sensor clock off, GPIO clock off, touch clock on, ADC clock on
	STMPE610_Write(STMPE610_REG_INT_EN, 0x03);			// Interrupt on INT pin when there is a sample or a touch transition.
	//STMPE610_write_reg(STMPE610_REG_INT_EN, 0x00);						// Don't Interrupt on INT pin
	STMPE610_Write(STMPE610_REG_ADC_CTRL1, 0x48);		// ADC conversion time = 80 clock ticks, 12-bit ADC, internal voltage refernce
	HAL_Delay(2);
 8002d5c:	2002      	movs	r0, #2
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d5e:	f44f 5640 	mov.w	r6, #12288	; 0x3000
	HAL_Delay(2);
 8002d62:	f7fe f8b5 	bl	8000ed0 <HAL_Delay>
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d66:	4d5f      	ldr	r5, [pc, #380]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002d68:	f240 1321 	movw	r3, #289	; 0x121
 8002d6c:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d70:	9600      	str	r6, [sp, #0]
 8002d72:	2302      	movs	r3, #2
 8002d74:	4622      	mov	r2, r4
 8002d76:	2188      	movs	r1, #136	; 0x88
 8002d78:	4628      	mov	r0, r5
 8002d7a:	f7fe fb31 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002d7e:	2800      	cmp	r0, #0
 8002d80:	d1f6      	bne.n	8002d70 <STMPE610_Init+0xa0>
	txbuf[0]=reg;
 8002d82:	2317      	movs	r3, #23
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d84:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002d88:	4d56      	ldr	r5, [pc, #344]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002d8a:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002d8e:	9600      	str	r6, [sp, #0]
 8002d90:	2302      	movs	r3, #2
 8002d92:	4622      	mov	r2, r4
 8002d94:	2188      	movs	r1, #136	; 0x88
 8002d96:	4628      	mov	r0, r5
 8002d98:	f7fe fb22 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002d9c:	2800      	cmp	r0, #0
 8002d9e:	d1f6      	bne.n	8002d8e <STMPE610_Init+0xbe>
	txbuf[0]=reg;
 8002da0:	f24a 3341 	movw	r3, #41793	; 0xa341
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002da4:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002da8:	4d4e      	ldr	r5, [pc, #312]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002daa:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002dae:	9600      	str	r6, [sp, #0]
 8002db0:	2302      	movs	r3, #2
 8002db2:	4622      	mov	r2, r4
 8002db4:	2188      	movs	r1, #136	; 0x88
 8002db6:	4628      	mov	r0, r5
 8002db8:	f7fe fb12 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002dbc:	2800      	cmp	r0, #0
 8002dbe:	d1f6      	bne.n	8002dae <STMPE610_Init+0xde>
	txbuf[0]=reg;
 8002dc0:	f44f 73a5 	mov.w	r3, #330	; 0x14a
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002dc4:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002dc8:	4d46      	ldr	r5, [pc, #280]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002dca:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002dce:	9600      	str	r6, [sp, #0]
 8002dd0:	2302      	movs	r3, #2
 8002dd2:	4622      	mov	r2, r4
 8002dd4:	2188      	movs	r1, #136	; 0x88
 8002dd6:	4628      	mov	r0, r5
 8002dd8:	f7fe fb02 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002ddc:	2800      	cmp	r0, #0
 8002dde:	d1f6      	bne.n	8002dce <STMPE610_Init+0xfe>
	txbuf[0]=reg;
 8002de0:	f240 134b 	movw	r3, #331	; 0x14b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002de4:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002de8:	4d3e      	ldr	r5, [pc, #248]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002dea:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002dee:	9600      	str	r6, [sp, #0]
 8002df0:	2302      	movs	r3, #2
 8002df2:	4622      	mov	r2, r4
 8002df4:	2188      	movs	r1, #136	; 0x88
 8002df6:	4628      	mov	r0, r5
 8002df8:	f7fe faf2 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002dfc:	2800      	cmp	r0, #0
 8002dfe:	d1f6      	bne.n	8002dee <STMPE610_Init+0x11e>
	txbuf[0]=reg;
 8002e00:	234b      	movs	r3, #75	; 0x4b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e02:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002e06:	4d37      	ldr	r5, [pc, #220]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002e08:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e0c:	9600      	str	r6, [sp, #0]
 8002e0e:	2302      	movs	r3, #2
 8002e10:	4622      	mov	r2, r4
 8002e12:	2188      	movs	r1, #136	; 0x88
 8002e14:	4628      	mov	r0, r5
 8002e16:	f7fe fae3 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002e1a:	2800      	cmp	r0, #0
 8002e1c:	d1f6      	bne.n	8002e0c <STMPE610_Init+0x13c>
	txbuf[0]=reg;
 8002e1e:	f240 7356 	movw	r3, #1878	; 0x756
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e22:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002e26:	4d2f      	ldr	r5, [pc, #188]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002e28:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e2c:	9600      	str	r6, [sp, #0]
 8002e2e:	2302      	movs	r3, #2
 8002e30:	4622      	mov	r2, r4
 8002e32:	2188      	movs	r1, #136	; 0x88
 8002e34:	4628      	mov	r0, r5
 8002e36:	f7fe fad3 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002e3a:	2800      	cmp	r0, #0
 8002e3c:	d1f6      	bne.n	8002e2c <STMPE610_Init+0x15c>
	txbuf[0]=reg;
 8002e3e:	f44f 73ac 	mov.w	r3, #344	; 0x158
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e42:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002e46:	4d27      	ldr	r5, [pc, #156]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002e48:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e4c:	9600      	str	r6, [sp, #0]
 8002e4e:	2302      	movs	r3, #2
 8002e50:	4622      	mov	r2, r4
 8002e52:	2188      	movs	r1, #136	; 0x88
 8002e54:	4628      	mov	r0, r5
 8002e56:	f7fe fac3 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002e5a:	2800      	cmp	r0, #0
 8002e5c:	d1f6      	bne.n	8002e4c <STMPE610_Init+0x17c>
	txbuf[0]=reg;
 8002e5e:	f44f 5341 	mov.w	r3, #12352	; 0x3040
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e62:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002e66:	4d1f      	ldr	r5, [pc, #124]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002e68:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e6c:	9600      	str	r6, [sp, #0]
 8002e6e:	2302      	movs	r3, #2
 8002e70:	4622      	mov	r2, r4
 8002e72:	2188      	movs	r1, #136	; 0x88
 8002e74:	4628      	mov	r0, r5
 8002e76:	f7fe fab3 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002e7a:	2800      	cmp	r0, #0
 8002e7c:	d1f6      	bne.n	8002e6c <STMPE610_Init+0x19c>
	txbuf[0]=reg;
 8002e7e:	f44f 5345 	mov.w	r3, #12608	; 0x3140
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e82:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002e86:	4d17      	ldr	r5, [pc, #92]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002e88:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002e8c:	9600      	str	r6, [sp, #0]
 8002e8e:	2302      	movs	r3, #2
 8002e90:	4622      	mov	r2, r4
 8002e92:	2188      	movs	r1, #136	; 0x88
 8002e94:	4628      	mov	r0, r5
 8002e96:	f7fe faa3 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002e9a:	2800      	cmp	r0, #0
 8002e9c:	d1f6      	bne.n	8002e8c <STMPE610_Init+0x1bc>
	txbuf[0]=reg;
 8002e9e:	f64f 730b 	movw	r3, #65291	; 0xff0b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002ea2:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002ea6:	4d0f      	ldr	r5, [pc, #60]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002ea8:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002eac:	9600      	str	r6, [sp, #0]
 8002eae:	2302      	movs	r3, #2
 8002eb0:	4622      	mov	r2, r4
 8002eb2:	2188      	movs	r1, #136	; 0x88
 8002eb4:	4628      	mov	r0, r5
 8002eb6:	f7fe fa93 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002eba:	2800      	cmp	r0, #0
 8002ebc:	d1f6      	bne.n	8002eac <STMPE610_Init+0x1dc>
	txbuf[0]=reg;
 8002ebe:	f240 1309 	movw	r3, #265	; 0x109
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002ec2:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002ec6:	4d07      	ldr	r5, [pc, #28]	; (8002ee4 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8002ec8:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002ecc:	9600      	str	r6, [sp, #0]
 8002ece:	2302      	movs	r3, #2
 8002ed0:	4622      	mov	r2, r4
 8002ed2:	2188      	movs	r1, #136	; 0x88
 8002ed4:	4628      	mov	r0, r5
 8002ed6:	f7fe fa83 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002eda:	2800      	cmp	r0, #0
 8002edc:	d1f6      	bne.n	8002ecc <STMPE610_Init+0x1fc>
	//STMPE610_write_reg(STMPE610_REG_TSC_CTRL, 0x32);						// X&Y, 16 reading window
	//STMPE610_write_reg(TMPE610_REG_TSC_CTRL, 0x33);						// X&Y, 16 reading window, TSC enable

	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);		// Clear all interrupts
	STMPE610_Write(STMPE610_REG_INT_CTRL, 0x01);		// Level interrupt, enable interrupts
}
 8002ede:	b004      	add	sp, #16
 8002ee0:	bd70      	pop	{r4, r5, r6, pc}
 8002ee2:	bf00      	nop
 8002ee4:	20019754 	.word	0x20019754

08002ee8 <STMPE610_read_xyz>:

uint8_t STMPE610_read_xyz(void)
{
 8002ee8:	b570      	push	{r4, r5, r6, lr}
 8002eea:	224b      	movs	r2, #75	; 0x4b
 8002eec:	b086      	sub	sp, #24
	rxbuf[0] = 0;
 8002eee:	2300      	movs	r3, #0
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8002ef0:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8002ef4:	4c80      	ldr	r4, [pc, #512]	; (80030f8 <STMPE610_read_xyz+0x210>)
 8002ef6:	f88d 200d 	strb.w	r2, [sp, #13]
	rxbuf[0] = 0;
 8002efa:	f88d 3014 	strb.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8002efe:	9500      	str	r5, [sp, #0]
 8002f00:	2301      	movs	r3, #1
 8002f02:	f10d 020d 	add.w	r2, sp, #13
 8002f06:	2188      	movs	r1, #136	; 0x88
 8002f08:	4620      	mov	r0, r4
 8002f0a:	f7fe fa69 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002f0e:	2800      	cmp	r0, #0
 8002f10:	d1f5      	bne.n	8002efe <STMPE610_read_xyz+0x16>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 8002f12:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8002f16:	4c78      	ldr	r4, [pc, #480]	; (80030f8 <STMPE610_read_xyz+0x210>)
 8002f18:	9500      	str	r5, [sp, #0]
 8002f1a:	2301      	movs	r3, #1
 8002f1c:	aa05      	add	r2, sp, #20
 8002f1e:	2188      	movs	r1, #136	; 0x88
 8002f20:	4620      	mov	r0, r4
 8002f22:	f7fe fb2d 	bl	8001580 <HAL_I2C_Master_Receive>
 8002f26:	2800      	cmp	r0, #0
 8002f28:	d1f6      	bne.n	8002f18 <STMPE610_read_xyz+0x30>
	return rxbuf[0];
 8002f2a:	f89d 3014 	ldrb.w	r3, [sp, #20]
	uint8_t	status;

	// Is there something in the fifo
	status = STMPE610_ReadByte(STMPE610_REG_FIFO_STA);
	if ((status & 0x20))
 8002f2e:	f013 0320 	ands.w	r3, r3, #32
 8002f32:	d03c      	beq.n	8002fae <STMPE610_read_xyz+0xc6>
	txbuf[0]=reg;
 8002f34:	f64f 730b 	movw	r3, #65291	; 0xff0b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002f38:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8002f3c:	4c6e      	ldr	r4, [pc, #440]	; (80030f8 <STMPE610_read_xyz+0x210>)
	txbuf[0]=reg;
 8002f3e:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8002f42:	9500      	str	r5, [sp, #0]
 8002f44:	2302      	movs	r3, #2
 8002f46:	aa05      	add	r2, sp, #20
 8002f48:	2188      	movs	r1, #136	; 0x88
 8002f4a:	4620      	mov	r0, r4
 8002f4c:	f7fe fa48 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002f50:	2800      	cmp	r0, #0
 8002f52:	d1f6      	bne.n	8002f42 <STMPE610_read_xyz+0x5a>
 8002f54:	2340      	movs	r3, #64	; 0x40
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8002f56:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8002f5a:	4c67      	ldr	r4, [pc, #412]	; (80030f8 <STMPE610_read_xyz+0x210>)
	rxbuf[0] = 0;
 8002f5c:	f88d 0010 	strb.w	r0, [sp, #16]
 8002f60:	f88d 3014 	strb.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8002f64:	9500      	str	r5, [sp, #0]
 8002f66:	2301      	movs	r3, #1
 8002f68:	aa05      	add	r2, sp, #20
 8002f6a:	2188      	movs	r1, #136	; 0x88
 8002f6c:	4620      	mov	r0, r4
 8002f6e:	f7fe fa37 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002f72:	2800      	cmp	r0, #0
 8002f74:	d1f6      	bne.n	8002f64 <STMPE610_read_xyz+0x7c>
 8002f76:	ac04      	add	r4, sp, #16
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 8002f78:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8002f7c:	4d5e      	ldr	r5, [pc, #376]	; (80030f8 <STMPE610_read_xyz+0x210>)
 8002f7e:	9600      	str	r6, [sp, #0]
 8002f80:	2301      	movs	r3, #1
 8002f82:	4622      	mov	r2, r4
 8002f84:	2188      	movs	r1, #136	; 0x88
 8002f86:	4628      	mov	r0, r5
 8002f88:	f7fe fafa 	bl	8001580 <HAL_I2C_Master_Receive>
 8002f8c:	2800      	cmp	r0, #0
 8002f8e:	d1f6      	bne.n	8002f7e <STMPE610_read_xyz+0x96>
	{
		STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);
		if (!(STMPE610_ReadByte(STMPE610_REG_TSC_CTRL) & 0x80))
 8002f90:	f99d 3010 	ldrsb.w	r3, [sp, #16]
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	f2c0 80ab 	blt.w	80030f0 <STMPE610_read_xyz+0x208>
		{
			x=0;
 8002f9a:	4c58      	ldr	r4, [pc, #352]	; (80030fc <STMPE610_read_xyz+0x214>)
			y=0;
			z=0;
	//		UART8_printf("true");
			return TRUE;
 8002f9c:	2301      	movs	r3, #1
			y=0;
 8002f9e:	4958      	ldr	r1, [pc, #352]	; (8003100 <STMPE610_read_xyz+0x218>)
			z=0;
 8002fa0:	4a58      	ldr	r2, [pc, #352]	; (8003104 <STMPE610_read_xyz+0x21c>)
			x=0;
 8002fa2:	8020      	strh	r0, [r4, #0]
			y=0;
 8002fa4:	8008      	strh	r0, [r1, #0]
			z=0;
 8002fa6:	8010      	strh	r0, [r2, #0]
	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x00);		// FIFO reset disable
	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);


	return TRUE;
}
 8002fa8:	4618      	mov	r0, r3
 8002faa:	b006      	add	sp, #24
 8002fac:	bd70      	pop	{r4, r5, r6, pc}
 8002fae:	224d      	movs	r2, #77	; 0x4d
 8002fb0:	ac04      	add	r4, sp, #16
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8002fb2:	f242 7610 	movw	r6, #10000	; 0x2710
 8002fb6:	4d50      	ldr	r5, [pc, #320]	; (80030f8 <STMPE610_read_xyz+0x210>)
	rxbuf[0] = 0;
 8002fb8:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002fbc:	f88d 2010 	strb.w	r2, [sp, #16]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8002fc0:	9600      	str	r6, [sp, #0]
 8002fc2:	2301      	movs	r3, #1
 8002fc4:	4622      	mov	r2, r4
 8002fc6:	2188      	movs	r1, #136	; 0x88
 8002fc8:	4628      	mov	r0, r5
 8002fca:	f7fe fa09 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8002fce:	2800      	cmp	r0, #0
 8002fd0:	d1f6      	bne.n	8002fc0 <STMPE610_read_xyz+0xd8>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 2, 10000) != HAL_OK);
 8002fd2:	f242 7510 	movw	r5, #10000	; 0x2710
 8002fd6:	4c48      	ldr	r4, [pc, #288]	; (80030f8 <STMPE610_read_xyz+0x210>)
 8002fd8:	9500      	str	r5, [sp, #0]
 8002fda:	2302      	movs	r3, #2
 8002fdc:	aa05      	add	r2, sp, #20
 8002fde:	2188      	movs	r1, #136	; 0x88
 8002fe0:	4620      	mov	r0, r4
 8002fe2:	f7fe facd 	bl	8001580 <HAL_I2C_Master_Receive>
 8002fe6:	2800      	cmp	r0, #0
 8002fe8:	d1f6      	bne.n	8002fd8 <STMPE610_read_xyz+0xf0>
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8002fea:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8002fee:	214f      	movs	r1, #79	; 0x4f
 8002ff0:	f89d 3015 	ldrb.w	r3, [sp, #21]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8002ff4:	f242 7510 	movw	r5, #10000	; 0x2710
 8002ff8:	4c3f      	ldr	r4, [pc, #252]	; (80030f8 <STMPE610_read_xyz+0x210>)
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8002ffa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	x = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_X);
 8002ffe:	4a3f      	ldr	r2, [pc, #252]	; (80030fc <STMPE610_read_xyz+0x214>)
	rxbuf[0] = 0;
 8003000:	f8ad 0014 	strh.w	r0, [sp, #20]
 8003004:	f88d 100f 	strb.w	r1, [sp, #15]
	x = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_X);
 8003008:	8013      	strh	r3, [r2, #0]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 800300a:	9500      	str	r5, [sp, #0]
 800300c:	2301      	movs	r3, #1
 800300e:	f10d 020f 	add.w	r2, sp, #15
 8003012:	2188      	movs	r1, #136	; 0x88
 8003014:	4620      	mov	r0, r4
 8003016:	f7fe f9e3 	bl	80013e0 <HAL_I2C_Master_Transmit>
 800301a:	2800      	cmp	r0, #0
 800301c:	d1f5      	bne.n	800300a <STMPE610_read_xyz+0x122>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 2, 10000) != HAL_OK);
 800301e:	f242 7510 	movw	r5, #10000	; 0x2710
 8003022:	4c35      	ldr	r4, [pc, #212]	; (80030f8 <STMPE610_read_xyz+0x210>)
 8003024:	9500      	str	r5, [sp, #0]
 8003026:	2302      	movs	r3, #2
 8003028:	aa05      	add	r2, sp, #20
 800302a:	2188      	movs	r1, #136	; 0x88
 800302c:	4620      	mov	r0, r4
 800302e:	f7fe faa7 	bl	8001580 <HAL_I2C_Master_Receive>
 8003032:	2800      	cmp	r0, #0
 8003034:	d1f6      	bne.n	8003024 <STMPE610_read_xyz+0x13c>
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8003036:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800303a:	2151      	movs	r1, #81	; 0x51
 800303c:	f89d 3015 	ldrb.w	r3, [sp, #21]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8003040:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8003044:	4c2c      	ldr	r4, [pc, #176]	; (80030f8 <STMPE610_read_xyz+0x210>)
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8003046:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	y = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_Y);
 800304a:	4a2d      	ldr	r2, [pc, #180]	; (8003100 <STMPE610_read_xyz+0x218>)
	rxbuf[0] = 0;
 800304c:	f88d 0014 	strb.w	r0, [sp, #20]
 8003050:	f88d 100e 	strb.w	r1, [sp, #14]
	y = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_Y);
 8003054:	8013      	strh	r3, [r2, #0]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8003056:	9500      	str	r5, [sp, #0]
 8003058:	2301      	movs	r3, #1
 800305a:	f10d 020e 	add.w	r2, sp, #14
 800305e:	2188      	movs	r1, #136	; 0x88
 8003060:	4620      	mov	r0, r4
 8003062:	f7fe f9bd 	bl	80013e0 <HAL_I2C_Master_Transmit>
 8003066:	2800      	cmp	r0, #0
 8003068:	d1f5      	bne.n	8003056 <STMPE610_read_xyz+0x16e>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 800306a:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 800306e:	4c22      	ldr	r4, [pc, #136]	; (80030f8 <STMPE610_read_xyz+0x210>)
 8003070:	9500      	str	r5, [sp, #0]
 8003072:	2301      	movs	r3, #1
 8003074:	aa05      	add	r2, sp, #20
 8003076:	2188      	movs	r1, #136	; 0x88
 8003078:	4620      	mov	r0, r4
 800307a:	f7fe fa81 	bl	8001580 <HAL_I2C_Master_Receive>
 800307e:	2800      	cmp	r0, #0
 8003080:	d1f6      	bne.n	8003070 <STMPE610_read_xyz+0x188>
	return rxbuf[0];
 8003082:	f89d 1014 	ldrb.w	r1, [sp, #20]
	txbuf[0]=reg;
 8003086:	f240 134b 	movw	r3, #331	; 0x14b
	z = STMPE610_ReadByte(STMPE610_REG_TSC_DATA_Z);
 800308a:	4a1e      	ldr	r2, [pc, #120]	; (8003104 <STMPE610_read_xyz+0x21c>)
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 800308c:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8003090:	4c19      	ldr	r4, [pc, #100]	; (80030f8 <STMPE610_read_xyz+0x210>)
	z = STMPE610_ReadByte(STMPE610_REG_TSC_DATA_Z);
 8003092:	8011      	strh	r1, [r2, #0]
	txbuf[0]=reg;
 8003094:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8003098:	9500      	str	r5, [sp, #0]
 800309a:	2302      	movs	r3, #2
 800309c:	aa05      	add	r2, sp, #20
 800309e:	2188      	movs	r1, #136	; 0x88
 80030a0:	4620      	mov	r0, r4
 80030a2:	f7fe f99d 	bl	80013e0 <HAL_I2C_Master_Transmit>
 80030a6:	2800      	cmp	r0, #0
 80030a8:	d1f6      	bne.n	8003098 <STMPE610_read_xyz+0x1b0>
	txbuf[0]=reg;
 80030aa:	234b      	movs	r3, #75	; 0x4b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 80030ac:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 80030b0:	4c11      	ldr	r4, [pc, #68]	; (80030f8 <STMPE610_read_xyz+0x210>)
	txbuf[0]=reg;
 80030b2:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 80030b6:	9500      	str	r5, [sp, #0]
 80030b8:	2302      	movs	r3, #2
 80030ba:	aa05      	add	r2, sp, #20
 80030bc:	2188      	movs	r1, #136	; 0x88
 80030be:	4620      	mov	r0, r4
 80030c0:	f7fe f98e 	bl	80013e0 <HAL_I2C_Master_Transmit>
 80030c4:	2800      	cmp	r0, #0
 80030c6:	d1f6      	bne.n	80030b6 <STMPE610_read_xyz+0x1ce>
	txbuf[0]=reg;
 80030c8:	f64f 730b 	movw	r3, #65291	; 0xff0b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 80030cc:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 80030d0:	4c09      	ldr	r4, [pc, #36]	; (80030f8 <STMPE610_read_xyz+0x210>)
	txbuf[0]=reg;
 80030d2:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 80030d6:	9500      	str	r5, [sp, #0]
 80030d8:	2302      	movs	r3, #2
 80030da:	aa05      	add	r2, sp, #20
 80030dc:	2188      	movs	r1, #136	; 0x88
 80030de:	4620      	mov	r0, r4
 80030e0:	f7fe f97e 	bl	80013e0 <HAL_I2C_Master_Transmit>
 80030e4:	2800      	cmp	r0, #0
 80030e6:	d1f6      	bne.n	80030d6 <STMPE610_read_xyz+0x1ee>
	return TRUE;
 80030e8:	2301      	movs	r3, #1
}
 80030ea:	4618      	mov	r0, r3
 80030ec:	b006      	add	sp, #24
 80030ee:	bd70      	pop	{r4, r5, r6, pc}
		return FALSE;
 80030f0:	4603      	mov	r3, r0
}
 80030f2:	4618      	mov	r0, r3
 80030f4:	b006      	add	sp, #24
 80030f6:	bd70      	pop	{r4, r5, r6, pc}
 80030f8:	20019754 	.word	0x20019754
 80030fc:	20000418 	.word	0x20000418
 8003100:	2000041a 	.word	0x2000041a
 8003104:	2000041c 	.word	0x2000041c

08003108 <STMPE610_GetX_TOUCH>:

uint16_t STMPE610_GetX_TOUCH(void)
{
 8003108:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)x;
 800310a:	4b13      	ldr	r3, [pc, #76]	; (8003158 <STMPE610_GetX_TOUCH+0x50>)
	pom=480.0*(pom-GUI_TOUCH_AD_LEFT)/(GUI_TOUCH_AD_RIGHT-GUI_TOUCH_AD_LEFT);
 800310c:	ed9f 7a13 	vldr	s14, [pc, #76]	; 800315c <STMPE610_GetX_TOUCH+0x54>
	pom=(float)x;
 8003110:	881b      	ldrh	r3, [r3, #0]
 8003112:	ee07 3a90 	vmov	s15, r3
 8003116:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=480.0*(pom-GUI_TOUCH_AD_LEFT)/(GUI_TOUCH_AD_RIGHT-GUI_TOUCH_AD_LEFT);
 800311a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800311e:	ee17 0a90 	vmov	r0, s15
 8003122:	f7fd fa31 	bl	8000588 <__aeabi_f2d>
 8003126:	2200      	movs	r2, #0
 8003128:	4b0d      	ldr	r3, [pc, #52]	; (8003160 <STMPE610_GetX_TOUCH+0x58>)
 800312a:	f7fd fa85 	bl	8000638 <__aeabi_dmul>
 800312e:	a308      	add	r3, pc, #32	; (adr r3, 8003150 <STMPE610_GetX_TOUCH+0x48>)
 8003130:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003134:	f7fd fbaa 	bl	800088c <__aeabi_ddiv>
 8003138:	f7fd fcb8 	bl	8000aac <__aeabi_d2f>
	return (uint16_t)pom;
 800313c:	ee07 0a90 	vmov	s15, r0
 8003140:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 8003144:	ee17 3a90 	vmov	r3, s15
 8003148:	b298      	uxth	r0, r3
 800314a:	bd08      	pop	{r3, pc}
 800314c:	f3af 8000 	nop.w
 8003150:	00000000 	.word	0x00000000
 8003154:	40adc400 	.word	0x40adc400
 8003158:	20000418 	.word	0x20000418
 800315c:	43120000 	.word	0x43120000
 8003160:	407e0000 	.word	0x407e0000
 8003164:	00000000 	.word	0x00000000

08003168 <STMPE610_GetY_TOUCH>:
uint16_t STMPE610_GetY_TOUCH(void)
{
 8003168:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)y;
 800316a:	4b13      	ldr	r3, [pc, #76]	; (80031b8 <STMPE610_GetY_TOUCH+0x50>)
	pom=272.0*(pom-GUI_TOUCH_AD_TOP)/(GUI_TOUCH_AD_BOTTOM-GUI_TOUCH_AD_TOP);
 800316c:	ed9f 7a13 	vldr	s14, [pc, #76]	; 80031bc <STMPE610_GetY_TOUCH+0x54>
	pom=(float)y;
 8003170:	881b      	ldrh	r3, [r3, #0]
 8003172:	ee07 3a90 	vmov	s15, r3
 8003176:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=272.0*(pom-GUI_TOUCH_AD_TOP)/(GUI_TOUCH_AD_BOTTOM-GUI_TOUCH_AD_TOP);
 800317a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800317e:	ee17 0a90 	vmov	r0, s15
 8003182:	f7fd fa01 	bl	8000588 <__aeabi_f2d>
 8003186:	2200      	movs	r2, #0
 8003188:	4b0d      	ldr	r3, [pc, #52]	; (80031c0 <STMPE610_GetY_TOUCH+0x58>)
 800318a:	f7fd fa55 	bl	8000638 <__aeabi_dmul>
 800318e:	a308      	add	r3, pc, #32	; (adr r3, 80031b0 <STMPE610_GetY_TOUCH+0x48>)
 8003190:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003194:	f7fd fb7a 	bl	800088c <__aeabi_ddiv>
 8003198:	f7fd fc88 	bl	8000aac <__aeabi_d2f>
	return (uint16_t)pom;
 800319c:	ee07 0a90 	vmov	s15, r0
 80031a0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 80031a4:	ee17 3a90 	vmov	r3, s15
 80031a8:	b298      	uxth	r0, r3
 80031aa:	bd08      	pop	{r3, pc}
 80031ac:	f3af 8000 	nop.w
 80031b0:	00000000 	.word	0x00000000
 80031b4:	40abea00 	.word	0x40abea00
 80031b8:	2000041a 	.word	0x2000041a
 80031bc:	43870000 	.word	0x43870000
 80031c0:	40710000 	.word	0x40710000

080031c4 <STMPE610_GetX_TOUCH_RAW>:
	return (uint16_t)pom;
}

uint16_t STMPE610_GetX_TOUCH_RAW(void)
{
	return x;
 80031c4:	4b01      	ldr	r3, [pc, #4]	; (80031cc <STMPE610_GetX_TOUCH_RAW+0x8>)
}
 80031c6:	8818      	ldrh	r0, [r3, #0]
 80031c8:	4770      	bx	lr
 80031ca:	bf00      	nop
 80031cc:	20000418 	.word	0x20000418

080031d0 <STMPE610_GetY_TOUCH_RAW>:
uint16_t STMPE610_GetY_TOUCH_RAW(void)
{
	return y;
 80031d0:	4b01      	ldr	r3, [pc, #4]	; (80031d8 <STMPE610_GetY_TOUCH_RAW+0x8>)
}
 80031d2:	8818      	ldrh	r0, [r3, #0]
 80031d4:	4770      	bx	lr
 80031d6:	bf00      	nop
 80031d8:	2000041a 	.word	0x2000041a

080031dc <VL53L1_LoadPatch>:

/* End Group PAL IRQ Triggered events Functions */


static VL53L1_Error VL53L1_LoadPatch(VL53L1_DEV Dev)
{
 80031dc:	b570      	push	{r4, r5, r6, lr}
	uint8_t comms_buffer[256];
	uint32_t patch_power;
	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE)
		status = VL53L1_WrByte(
 80031de:	2200      	movs	r2, #0
{
 80031e0:	b0c0      	sub	sp, #256	; 0x100
		status = VL53L1_WrByte(
 80031e2:	2185      	movs	r1, #133	; 0x85
{
 80031e4:	4605      	mov	r5, r0
		status = VL53L1_WrByte(
 80031e6:	f003 fcd1 	bl	8006b8c <VL53L1_WrByte>
				Dev,
				VL53L1_FIRMWARE__ENABLE,
				0x00);
	/* Force GO1 on */
	if (status == VL53L1_ERROR_NONE)
 80031ea:	4604      	mov	r4, r0
 80031ec:	b110      	cbz	r0, 80031f4 <VL53L1_LoadPatch+0x18>
				0x01);

	LOG_FUNCTION_END(status);

	return status;
}
 80031ee:	4620      	mov	r0, r4
 80031f0:	b040      	add	sp, #256	; 0x100
 80031f2:	bd70      	pop	{r4, r5, r6, pc}
		VL53L1_enable_powerforce(Dev);
 80031f4:	4628      	mov	r0, r5
 80031f6:	f002 fdef 	bl	8005dd8 <VL53L1_enable_powerforce>
	patch_tuning = BDTable[VL53L1_TUNING_PHASECAL_PATCH_POWER];
 80031fa:	4b2a      	ldr	r3, [pc, #168]	; (80032a4 <VL53L1_LoadPatch+0xc8>)
 80031fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80031fe:	3b01      	subs	r3, #1
 8003200:	2b02      	cmp	r3, #2
 8003202:	d802      	bhi.n	800320a <VL53L1_LoadPatch+0x2e>
 8003204:	4a28      	ldr	r2, [pc, #160]	; (80032a8 <VL53L1_LoadPatch+0xcc>)
 8003206:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
		comms_buffer[0] = 0x29;
 800320a:	4828      	ldr	r0, [pc, #160]	; (80032ac <VL53L1_LoadPatch+0xd0>)
		comms_buffer[4] = 0x28;
 800320c:	2628      	movs	r6, #40	; 0x28
		status = VL53L1_WriteMulti(
 800320e:	2306      	movs	r3, #6
 8003210:	466a      	mov	r2, sp
		comms_buffer[0] = 0x29;
 8003212:	9000      	str	r0, [sp, #0]
		status = VL53L1_WriteMulti(
 8003214:	f240 4176 	movw	r1, #1142	; 0x476
 8003218:	4628      	mov	r0, r5
		comms_buffer[5] = patch_power;
 800321a:	f88d 4005 	strb.w	r4, [sp, #5]
		comms_buffer[4] = 0x28;
 800321e:	f88d 6004 	strb.w	r6, [sp, #4]
		status = VL53L1_WriteMulti(
 8003222:	f003 fc5b 	bl	8006adc <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE) {
 8003226:	4604      	mov	r4, r0
 8003228:	2800      	cmp	r0, #0
 800322a:	d1e0      	bne.n	80031ee <VL53L1_LoadPatch+0x12>
		comms_buffer[0] = 0x03;
 800322c:	4820      	ldr	r0, [pc, #128]	; (80032b0 <VL53L1_LoadPatch+0xd4>)
 800322e:	f642 1407 	movw	r4, #10503	; 0x2907
		status = VL53L1_WriteMulti(
 8003232:	2306      	movs	r3, #6
 8003234:	466a      	mov	r2, sp
		comms_buffer[0] = 0x03;
 8003236:	9000      	str	r0, [sp, #0]
		status = VL53L1_WriteMulti(
 8003238:	f240 4196 	movw	r1, #1174	; 0x496
 800323c:	4628      	mov	r0, r5
		comms_buffer[0] = 0x03;
 800323e:	f8ad 4004 	strh.w	r4, [sp, #4]
		status = VL53L1_WriteMulti(
 8003242:	f003 fc4b 	bl	8006adc <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE) {
 8003246:	4604      	mov	r4, r0
 8003248:	2800      	cmp	r0, #0
 800324a:	d1d0      	bne.n	80031ee <VL53L1_LoadPatch+0x12>
		comms_buffer[0] = 0x00;
 800324c:	f44f 66e0 	mov.w	r6, #1792	; 0x700
		status = VL53L1_WriteMulti(
 8003250:	2302      	movs	r3, #2
 8003252:	466a      	mov	r2, sp
 8003254:	f240 4172 	movw	r1, #1138	; 0x472
 8003258:	4628      	mov	r0, r5
		comms_buffer[0] = 0x00;
 800325a:	f8ad 6000 	strh.w	r6, [sp]
		status = VL53L1_WriteMulti(
 800325e:	f003 fc3d 	bl	8006adc <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE) {
 8003262:	4604      	mov	r4, r0
 8003264:	2800      	cmp	r0, #0
 8003266:	d1c2      	bne.n	80031ee <VL53L1_LoadPatch+0x12>
		status = VL53L1_WriteMulti(
 8003268:	466a      	mov	r2, sp
 800326a:	2302      	movs	r3, #2
 800326c:	f240 4174 	movw	r1, #1140	; 0x474
 8003270:	4628      	mov	r0, r5
		comms_buffer[0] = 0x00;
 8003272:	f8ad 6000 	strh.w	r6, [sp]
		status = VL53L1_WriteMulti(
 8003276:	f003 fc31 	bl	8006adc <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE)
 800327a:	4604      	mov	r4, r0
 800327c:	2800      	cmp	r0, #0
 800327e:	d1b6      	bne.n	80031ee <VL53L1_LoadPatch+0x12>
		status = VL53L1_WrByte(
 8003280:	2201      	movs	r2, #1
 8003282:	f44f 618e 	mov.w	r1, #1136	; 0x470
 8003286:	4628      	mov	r0, r5
 8003288:	f003 fc80 	bl	8006b8c <VL53L1_WrByte>
	if (status == VL53L1_ERROR_NONE)
 800328c:	4604      	mov	r4, r0
 800328e:	2800      	cmp	r0, #0
 8003290:	d1ad      	bne.n	80031ee <VL53L1_LoadPatch+0x12>
		status = VL53L1_WrByte(
 8003292:	4628      	mov	r0, r5
 8003294:	2201      	movs	r2, #1
 8003296:	2185      	movs	r1, #133	; 0x85
 8003298:	f003 fc78 	bl	8006b8c <VL53L1_WrByte>
 800329c:	4604      	mov	r4, r0
}
 800329e:	4620      	mov	r0, r4
 80032a0:	b040      	add	sp, #256	; 0x100
 80032a2:	bd70      	pop	{r4, r5, r6, pc}
 80032a4:	20000008 	.word	0x20000008
 80032a8:	080195fc 	.word	0x080195fc
 80032ac:	400ec929 	.word	0x400ec929
 80032b0:	6f036d03 	.word	0x6f036d03

080032b4 <VL53L1_DataInit>:
{
 80032b4:	b570      	push	{r4, r5, r6, lr}
		Status = VL53L1_data_init(Dev, 1);
 80032b6:	2101      	movs	r1, #1
{
 80032b8:	4604      	mov	r4, r0
		Status = VL53L1_data_init(Dev, 1);
 80032ba:	f000 fbb5 	bl	8003a28 <VL53L1_data_init>
	if (Status == VL53L1_ERROR_NONE)
 80032be:	4606      	mov	r6, r0
 80032c0:	b9a0      	cbnz	r0, 80032ec <VL53L1_DataInit+0x38>
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_WAIT_STATICINIT);
 80032c2:	2501      	movs	r5, #1
		tmpuint16 = VL53L1_FIXPOINT1616TOFIXPOINT142(value);
 80032c4:	f8d4 1388 	ldr.w	r1, [r4, #904]	; 0x388
		VL53L1_set_lite_sigma_threshold(Dev, tmpuint16);
 80032c8:	4620      	mov	r0, r4
 80032ca:	f3c1 318f 	ubfx	r1, r1, #14, #16
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_WAIT_STATICINIT);
 80032ce:	f884 5378 	strb.w	r5, [r4, #888]	; 0x378
		VL53L1_set_lite_sigma_threshold(Dev, tmpuint16);
 80032d2:	f000 feab 	bl	800402c <VL53L1_set_lite_sigma_threshold>
		tmpuint16 = VL53L1_FIXPOINT1616TOFIXPOINT97(value);
 80032d6:	f8d4 138c 	ldr.w	r1, [r4, #908]	; 0x38c
		VL53L1_SETARRAYPARAMETERFIELD(Dev,
 80032da:	f884 5384 	strb.w	r5, [r4, #900]	; 0x384
		VL53L1_set_lite_min_count_rate(Dev, tmpuint16);
 80032de:	4620      	mov	r0, r4
 80032e0:	f3c1 214f 	ubfx	r1, r1, #9, #16
 80032e4:	f000 feac 	bl	8004040 <VL53L1_set_lite_min_count_rate>
		VL53L1_SETARRAYPARAMETERFIELD(Dev,
 80032e8:	f884 5385 	strb.w	r5, [r4, #901]	; 0x385
}
 80032ec:	4630      	mov	r0, r6
 80032ee:	bd70      	pop	{r4, r5, r6, pc}

080032f0 <VL53L1_WaitDeviceBooted>:
	Status = VL53L1_poll_for_boot_completion(Dev,
 80032f0:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 80032f4:	f003 bbc2 	b.w	8006a7c <VL53L1_poll_for_boot_completion>

080032f8 <VL53L1_SetDistanceMode>:
	if ((DistanceMode != VL53L1_DISTANCEMODE_SHORT) &&
 80032f8:	1e4a      	subs	r2, r1, #1
	uint32_t TimingBudget = 0;
 80032fa:	2300      	movs	r3, #0
{
 80032fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	if ((DistanceMode != VL53L1_DISTANCEMODE_SHORT) &&
 8003300:	2a02      	cmp	r2, #2
{
 8003302:	b08d      	sub	sp, #52	; 0x34
	PresetMode = VL53L1DevDataGet(Dev, CurrentParameters.PresetMode);
 8003304:	f890 837c 	ldrb.w	r8, [r0, #892]	; 0x37c
	uint32_t PhaseCalTimeoutUs = 0;
 8003308:	9307      	str	r3, [sp, #28]
	uint32_t MmTimeoutUs = 0;
 800330a:	e9cd 3305 	strd	r3, r3, [sp, #20]
	if ((DistanceMode != VL53L1_DISTANCEMODE_SHORT) &&
 800330e:	d875      	bhi.n	80033fc <VL53L1_SetDistanceMode+0x104>
 8003310:	460d      	mov	r5, r1
		Status = VL53L1_get_user_zone(Dev, &user_zone);
 8003312:	a908      	add	r1, sp, #32
 8003314:	4604      	mov	r4, r0
 8003316:	f000 fd43 	bl	8003da0 <VL53L1_get_user_zone>
	if (Status == VL53L1_ERROR_NONE)
 800331a:	b110      	cbz	r0, 8003322 <VL53L1_SetDistanceMode+0x2a>
}
 800331c:	b00d      	add	sp, #52	; 0x34
 800331e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		Status = VL53L1_get_timeouts_us(Dev, &PhaseCalTimeoutUs,
 8003322:	ab05      	add	r3, sp, #20
 8003324:	aa06      	add	r2, sp, #24
 8003326:	a907      	add	r1, sp, #28
 8003328:	4620      	mov	r0, r4
	inter_measurement_period_ms =  VL53L1DevDataGet(Dev,
 800332a:	6967      	ldr	r7, [r4, #20]
		Status = VL53L1_get_timeouts_us(Dev, &PhaseCalTimeoutUs,
 800332c:	f000 fcd8 	bl	8003ce0 <VL53L1_get_timeouts_us>
 8003330:	4603      	mov	r3, r0
	if (Status == VL53L1_ERROR_NONE)
 8003332:	2800      	cmp	r0, #0
 8003334:	d1f2      	bne.n	800331c <VL53L1_SetDistanceMode+0x24>
	if ((PresetMode == VL53L1_PRESETMODE_AUTONOMOUS) ||
 8003336:	f1b8 0f03 	cmp.w	r8, #3
	uint16_t dss_config__target_total_rate_mcps = 0;
 800333a:	f8ad 0012 	strh.w	r0, [sp, #18]
	uint32_t lld_range_config_timeout_us = 0;
 800333e:	900b      	str	r0, [sp, #44]	; 0x2c
	uint32_t mm_config_timeout_us = 0;
 8003340:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
	if ((PresetMode == VL53L1_PRESETMODE_AUTONOMOUS) ||
 8003344:	d01d      	beq.n	8003382 <VL53L1_SetDistanceMode+0x8a>
 8003346:	f1b8 0f08 	cmp.w	r8, #8
 800334a:	d01a      	beq.n	8003382 <VL53L1_SetDistanceMode+0x8a>
	switch (DistanceMode) {
 800334c:	2d01      	cmp	r5, #1
		measurement_mode  = VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK;
 800334e:	f04f 0920 	mov.w	r9, #32
	switch (DistanceMode) {
 8003352:	d01a      	beq.n	800338a <VL53L1_SetDistanceMode+0x92>
	default:
 8003354:	2d02      	cmp	r5, #2
 8003356:	bf0b      	itete	eq
 8003358:	2325      	moveq	r3, #37	; 0x25
 800335a:	2326      	movne	r3, #38	; 0x26
 800335c:	2606      	moveq	r6, #6
 800335e:	2608      	movne	r6, #8
 8003360:	bf0c      	ite	eq
 8003362:	2201      	moveq	r2, #1
 8003364:	2203      	movne	r2, #3
	switch (PresetMode) {
 8003366:	f1b8 0f04 	cmp.w	r8, #4
 800336a:	d045      	beq.n	80033f8 <VL53L1_SetDistanceMode+0x100>
 800336c:	f1b8 0f08 	cmp.w	r8, #8
 8003370:	d00f      	beq.n	8003392 <VL53L1_SetDistanceMode+0x9a>
 8003372:	f1b8 0f03 	cmp.w	r8, #3
 8003376:	d00d      	beq.n	8003394 <VL53L1_SetDistanceMode+0x9c>
		Status = VL53L1_ERROR_MODE_NOT_SUPPORTED;
 8003378:	f06f 0007 	mvn.w	r0, #7
}
 800337c:	b00d      	add	sp, #52	; 0x34
 800337e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	switch (DistanceMode) {
 8003382:	2d01      	cmp	r5, #1
		measurement_mode  = VL53L1_DEVICEMEASUREMENTMODE_TIMED;
 8003384:	f04f 0940 	mov.w	r9, #64	; 0x40
	switch (DistanceMode) {
 8003388:	d1e4      	bne.n	8003354 <VL53L1_SetDistanceMode+0x5c>
 800338a:	2324      	movs	r3, #36	; 0x24
 800338c:	2607      	movs	r6, #7
 800338e:	2202      	movs	r2, #2
 8003390:	e7e9      	b.n	8003366 <VL53L1_SetDistanceMode+0x6e>
		*pDevicePresetMode = LowPowerTimedModes[DistIdx];
 8003392:	461e      	mov	r6, r3
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8003394:	a90b      	add	r1, sp, #44	; 0x2c
 8003396:	a80a      	add	r0, sp, #40	; 0x28
 8003398:	ab09      	add	r3, sp, #36	; 0x24
 800339a:	f10d 0212 	add.w	r2, sp, #18
 800339e:	9101      	str	r1, [sp, #4]
 80033a0:	4631      	mov	r1, r6
 80033a2:	9000      	str	r0, [sp, #0]
 80033a4:	4620      	mov	r0, r4
 80033a6:	f000 fd0d 	bl	8003dc4 <VL53L1_get_preset_mode_timing_cfg>
	if (Status == VL53L1_ERROR_NONE)
 80033aa:	2800      	cmp	r0, #0
 80033ac:	d1b6      	bne.n	800331c <VL53L1_SetDistanceMode+0x24>
		Status = VL53L1_set_preset_mode(
 80033ae:	4631      	mov	r1, r6
 80033b0:	9702      	str	r7, [sp, #8]
 80033b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80033b4:	4620      	mov	r0, r4
 80033b6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80033ba:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 80033be:	e9cd 6700 	strd	r6, r7, [sp]
 80033c2:	f000 fd53 	bl	8003e6c <VL53L1_set_preset_mode>
	if (Status == VL53L1_ERROR_NONE)
 80033c6:	2800      	cmp	r0, #0
 80033c8:	d1a8      	bne.n	800331c <VL53L1_SetDistanceMode+0x24>
		VL53L1DevDataSet(Dev, LLData.measurement_mode,
 80033ca:	f884 9002 	strb.w	r9, [r4, #2]
		Status = VL53L1_set_timeouts_us(Dev, PhaseCalTimeoutUs,
 80033ce:	4620      	mov	r0, r4
		VL53L1DevDataSet(Dev, CurrentParameters.PresetMode, PresetMode);
 80033d0:	f884 837c 	strb.w	r8, [r4, #892]	; 0x37c
		VL53L1DevDataSet(Dev, CurrentParameters.DistanceMode,
 80033d4:	f884 537d 	strb.w	r5, [r4, #893]	; 0x37d
		Status = VL53L1_set_timeouts_us(Dev, PhaseCalTimeoutUs,
 80033d8:	9907      	ldr	r1, [sp, #28]
 80033da:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 80033de:	f000 fc65 	bl	8003cac <VL53L1_set_timeouts_us>
		if (Status == VL53L1_ERROR_NONE)
 80033e2:	2800      	cmp	r0, #0
 80033e4:	d19a      	bne.n	800331c <VL53L1_SetDistanceMode+0x24>
			VL53L1DevDataSet(Dev, LLData.range_config_timeout_us,
 80033e6:	9b05      	ldr	r3, [sp, #20]
		Status = VL53L1_set_user_zone(Dev, &user_zone);
 80033e8:	a908      	add	r1, sp, #32
 80033ea:	4620      	mov	r0, r4
			VL53L1DevDataSet(Dev, LLData.range_config_timeout_us,
 80033ec:	6123      	str	r3, [r4, #16]
		Status = VL53L1_set_user_zone(Dev, &user_zone);
 80033ee:	f000 fcc5 	bl	8003d7c <VL53L1_set_user_zone>
}
 80033f2:	b00d      	add	sp, #52	; 0x34
 80033f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		*pDevicePresetMode = LightModes[DistIdx];
 80033f8:	4616      	mov	r6, r2
 80033fa:	e7cb      	b.n	8003394 <VL53L1_SetDistanceMode+0x9c>
		return VL53L1_ERROR_INVALID_PARAMS;
 80033fc:	f06f 0003 	mvn.w	r0, #3
 8003400:	e78c      	b.n	800331c <VL53L1_SetDistanceMode+0x24>
 8003402:	bf00      	nop

08003404 <VL53L1_SetMeasurementTimingBudgetMicroSeconds>:
	if (MeasurementTimingBudgetMicroSeconds > 10000000)
 8003404:	4a47      	ldr	r2, [pc, #284]	; (8003524 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x120>)
	uint8_t Mm1Enabled = 0;
 8003406:	2300      	movs	r3, #0
{
 8003408:	b570      	push	{r4, r5, r6, lr}
	if (MeasurementTimingBudgetMicroSeconds > 10000000)
 800340a:	4291      	cmp	r1, r2
{
 800340c:	b086      	sub	sp, #24
	uint8_t Mm1Enabled = 0;
 800340e:	f88d 3006 	strb.w	r3, [sp, #6]
	uint8_t Mm2Enabled = 0;
 8003412:	f88d 3007 	strb.w	r3, [sp, #7]
	uint32_t PhaseCalTimeoutUs = 0;
 8003416:	9304      	str	r3, [sp, #16]
	uint32_t MmTimeoutUs = 0;
 8003418:	e9cd 3302 	strd	r3, r3, [sp, #8]
	if (MeasurementTimingBudgetMicroSeconds > 10000000)
 800341c:	d903      	bls.n	8003426 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x22>
			Status = VL53L1_ERROR_MODE_NOT_SUPPORTED;
 800341e:	f06f 0003 	mvn.w	r0, #3
}
 8003422:	b006      	add	sp, #24
 8003424:	bd70      	pop	{r4, r5, r6, pc}
 8003426:	460d      	mov	r5, r1
	Status = VL53L1_get_sequence_config_bit(Dev,
 8003428:	f10d 0206 	add.w	r2, sp, #6
 800342c:	2105      	movs	r1, #5
 800342e:	4604      	mov	r4, r0
 8003430:	f000 fc8c 	bl	8003d4c <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE) {
 8003434:	2800      	cmp	r0, #0
 8003436:	d1f4      	bne.n	8003422 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
	Status = VL53L1_get_sequence_config_bit(Dev,
 8003438:	f10d 0207 	add.w	r2, sp, #7
 800343c:	2106      	movs	r1, #6
 800343e:	4620      	mov	r0, r4
 8003440:	f000 fc84 	bl	8003d4c <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE)
 8003444:	2800      	cmp	r0, #0
 8003446:	d1ec      	bne.n	8003422 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
		Status = VL53L1_get_timeouts_us(Dev,
 8003448:	ab02      	add	r3, sp, #8
 800344a:	aa03      	add	r2, sp, #12
 800344c:	a904      	add	r1, sp, #16
 800344e:	4620      	mov	r0, r4
 8003450:	f000 fc46 	bl	8003ce0 <VL53L1_get_timeouts_us>
	if (Status == VL53L1_ERROR_NONE) {
 8003454:	2800      	cmp	r0, #0
 8003456:	d1e4      	bne.n	8003422 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
		switch (PresetMode) {
 8003458:	f894 337c 	ldrb.w	r3, [r4, #892]	; 0x37c
 800345c:	2b04      	cmp	r3, #4
 800345e:	d040      	beq.n	80034e2 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xde>
 8003460:	2b08      	cmp	r3, #8
 8003462:	d02a      	beq.n	80034ba <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xb6>
 8003464:	2b03      	cmp	r3, #3
 8003466:	d005      	beq.n	8003474 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x70>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 8003468:	2d00      	cmp	r5, #0
 800346a:	d0d8      	beq.n	800341e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
			Status = VL53L1_ERROR_MODE_NOT_SUPPORTED;
 800346c:	f06f 0007 	mvn.w	r0, #7
}
 8003470:	b006      	add	sp, #24
 8003472:	bd70      	pop	{r4, r5, r6, pc}
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 8003474:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8003478:	2b01      	cmp	r3, #1
 800347a:	d04a      	beq.n	8003512 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x10e>
 800347c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003480:	2b01      	cmp	r3, #1
 8003482:	d046      	beq.n	8003512 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x10e>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 8003484:	f245 4360 	movw	r3, #21600	; 0x5460
 8003488:	429d      	cmp	r5, r3
 800348a:	d9c8      	bls.n	800341e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 800348c:	4b26      	ldr	r3, [pc, #152]	; (8003528 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x124>)
			divisor = 2;
 800348e:	2602      	movs	r6, #2
			FDAMaxTimingBudgetUs *= 2;
 8003490:	4a26      	ldr	r2, [pc, #152]	; (800352c <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x128>)
					- TimingGuard);
 8003492:	442b      	add	r3, r5
			if (TimingBudget > FDAMaxTimingBudgetUs)
 8003494:	4293      	cmp	r3, r2
 8003496:	d8c2      	bhi.n	800341e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
				Status = VL53L1_set_timeouts_us(
 8003498:	9a03      	ldr	r2, [sp, #12]
 800349a:	4620      	mov	r0, r4
 800349c:	9904      	ldr	r1, [sp, #16]
				TimingBudget /= divisor;
 800349e:	fbb3 f6f6 	udiv	r6, r3, r6
				Status = VL53L1_set_timeouts_us(
 80034a2:	4633      	mov	r3, r6
				TimingBudget /= divisor;
 80034a4:	9602      	str	r6, [sp, #8]
				Status = VL53L1_set_timeouts_us(
 80034a6:	f000 fc01 	bl	8003cac <VL53L1_set_timeouts_us>
			if (Status == VL53L1_ERROR_NONE)
 80034aa:	2800      	cmp	r0, #0
 80034ac:	d1b9      	bne.n	8003422 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
				VL53L1DevDataSet(Dev,
 80034ae:	9b02      	ldr	r3, [sp, #8]
		VL53L1DevDataSet(Dev,
 80034b0:	f8c4 5380 	str.w	r5, [r4, #896]	; 0x380
				VL53L1DevDataSet(Dev,
 80034b4:	6123      	str	r3, [r4, #16]
}
 80034b6:	b006      	add	sp, #24
 80034b8:	bd70      	pop	{r4, r5, r6, pc}
			VL53L1_get_tuning_parm(Dev,
 80034ba:	aa05      	add	r2, sp, #20
 80034bc:	f248 0136 	movw	r1, #32822	; 0x8036
 80034c0:	4620      	mov	r0, r4
 80034c2:	f001 f91b 	bl	80046fc <VL53L1_get_tuning_parm>
			if (vhv_loops > 0) {
 80034c6:	9a05      	ldr	r2, [sp, #20]
 80034c8:	2a00      	cmp	r2, #0
 80034ca:	dd27      	ble.n	800351c <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x118>
				vhv += vhv_loops *
 80034cc:	23f5      	movs	r3, #245	; 0xf5
 80034ce:	fb03 f302 	mul.w	r3, r3, r2
 80034d2:	f603 63d1 	addw	r3, r3, #3793	; 0xed1
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 80034d6:	429d      	cmp	r5, r3
 80034d8:	d9a1      	bls.n	800341e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 80034da:	1aeb      	subs	r3, r5, r3
			FDAMaxTimingBudgetUs *= 2;
 80034dc:	4a13      	ldr	r2, [pc, #76]	; (800352c <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x128>)
			divisor = 2;
 80034de:	2602      	movs	r6, #2
 80034e0:	e7d8      	b.n	8003494 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x90>
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 80034e2:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80034e6:	2b01      	cmp	r3, #1
 80034e8:	d00b      	beq.n	8003502 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xfe>
 80034ea:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80034ee:	2b01      	cmp	r3, #1
 80034f0:	d007      	beq.n	8003502 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xfe>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 80034f2:	f5b5 7f7a 	cmp.w	r5, #1000	; 0x3e8
 80034f6:	d992      	bls.n	800341e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 80034f8:	f5a5 737a 	sub.w	r3, r5, #1000	; 0x3e8
	uint32_t FDAMaxTimingBudgetUs = FDA_MAX_TIMING_BUDGET_US;
 80034fc:	4a0c      	ldr	r2, [pc, #48]	; (8003530 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x12c>)
		divisor = 1;
 80034fe:	2601      	movs	r6, #1
 8003500:	e7c8      	b.n	8003494 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x90>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 8003502:	f241 3388 	movw	r3, #5000	; 0x1388
 8003506:	429d      	cmp	r5, r3
 8003508:	d989      	bls.n	800341e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 800350a:	1aeb      	subs	r3, r5, r3
	uint32_t FDAMaxTimingBudgetUs = FDA_MAX_TIMING_BUDGET_US;
 800350c:	4a08      	ldr	r2, [pc, #32]	; (8003530 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x12c>)
		divisor = 1;
 800350e:	2601      	movs	r6, #1
 8003510:	e7c0      	b.n	8003494 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x90>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 8003512:	f246 73e8 	movw	r3, #26600	; 0x67e8
 8003516:	429d      	cmp	r5, r3
 8003518:	d981      	bls.n	800341e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
 800351a:	e7de      	b.n	80034da <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xd6>
 800351c:	f640 63d1 	movw	r3, #3793	; 0xed1
 8003520:	e7d9      	b.n	80034d6 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xd2>
 8003522:	bf00      	nop
 8003524:	00989680 	.word	0x00989680
 8003528:	ffffaba0 	.word	0xffffaba0
 800352c:	0010c8e0 	.word	0x0010c8e0
 8003530:	00086470 	.word	0x00086470

08003534 <VL53L1_StaticInit>:
	VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_IDLE);
 8003534:	2203      	movs	r2, #3
	VL53L1DevDataSet(Dev, LLData.measurement_mode, measurement_mode);
 8003536:	2320      	movs	r3, #32
{
 8003538:	b530      	push	{r4, r5, lr}
 800353a:	b089      	sub	sp, #36	; 0x24
	VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_IDLE);
 800353c:	f880 2378 	strb.w	r2, [r0, #888]	; 0x378
	VL53L1DevDataSet(Dev, LLData.measurement_mode, measurement_mode);
 8003540:	7083      	strb	r3, [r0, #2]
{
 8003542:	4604      	mov	r4, r0
	Status = VL53L1_low_power_auto_data_init(Dev);
 8003544:	f002 fd7c 	bl	8006040 <VL53L1_low_power_auto_data_init>
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8003548:	aa07      	add	r2, sp, #28
 800354a:	ab06      	add	r3, sp, #24
	uint16_t dss_config__target_total_rate_mcps = 0;
 800354c:	2500      	movs	r5, #0
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 800354e:	4620      	mov	r0, r4
 8003550:	2126      	movs	r1, #38	; 0x26
	uint16_t dss_config__target_total_rate_mcps = 0;
 8003552:	f8ad 5012 	strh.w	r5, [sp, #18]
	uint32_t lld_range_config_timeout_us = 0;
 8003556:	9507      	str	r5, [sp, #28]
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8003558:	e9cd 3200 	strd	r3, r2, [sp]
 800355c:	ab05      	add	r3, sp, #20
 800355e:	f10d 0212 	add.w	r2, sp, #18
	uint32_t mm_config_timeout_us = 0;
 8003562:	e9cd 5505 	strd	r5, r5, [sp, #20]
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8003566:	f000 fc2d 	bl	8003dc4 <VL53L1_get_preset_mode_timing_cfg>
	if (Status == VL53L1_ERROR_NONE)
 800356a:	b120      	cbz	r0, 8003576 <VL53L1_StaticInit+0x42>
	VL53L1DevDataSet(Dev, CurrentParameters.PresetMode,
 800356c:	2308      	movs	r3, #8
 800356e:	f884 337c 	strb.w	r3, [r4, #892]	; 0x37c
}
 8003572:	b009      	add	sp, #36	; 0x24
 8003574:	bd30      	pop	{r4, r5, pc}
		Status = VL53L1_set_preset_mode(
 8003576:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 800357a:	9807      	ldr	r0, [sp, #28]
 800357c:	9b05      	ldr	r3, [sp, #20]
 800357e:	2126      	movs	r1, #38	; 0x26
 8003580:	9502      	str	r5, [sp, #8]
 8003582:	9d06      	ldr	r5, [sp, #24]
 8003584:	9001      	str	r0, [sp, #4]
 8003586:	4620      	mov	r0, r4
 8003588:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800358c:	9500      	str	r5, [sp, #0]
 800358e:	f000 fc6d 	bl	8003e6c <VL53L1_set_preset_mode>
	if (Status == VL53L1_ERROR_NONE)
 8003592:	2800      	cmp	r0, #0
 8003594:	d1ea      	bne.n	800356c <VL53L1_StaticInit+0x38>
		VL53L1DevDataSet(Dev, LLData.measurement_mode,
 8003596:	2240      	movs	r2, #64	; 0x40
		VL53L1DevDataSet(Dev, CurrentParameters.PresetMode, PresetMode);
 8003598:	2308      	movs	r3, #8
			Status = VL53L1_SetMeasurementTimingBudgetMicroSeconds(
 800359a:	f24a 0128 	movw	r1, #41000	; 0xa028
 800359e:	4620      	mov	r0, r4
		VL53L1DevDataSet(Dev, LLData.measurement_mode,
 80035a0:	70a2      	strb	r2, [r4, #2]
		VL53L1DevDataSet(Dev, CurrentParameters.PresetMode, PresetMode);
 80035a2:	f884 337c 	strb.w	r3, [r4, #892]	; 0x37c
			Status = VL53L1_SetMeasurementTimingBudgetMicroSeconds(
 80035a6:	f7ff ff2d 	bl	8003404 <VL53L1_SetMeasurementTimingBudgetMicroSeconds>
	if (Status == VL53L1_ERROR_NONE) {
 80035aa:	2800      	cmp	r0, #0
 80035ac:	d1de      	bne.n	800356c <VL53L1_StaticInit+0x38>
	Status = VL53L1_set_inter_measurement_period_ms(Dev,
 80035ae:	f44f 6185 	mov.w	r1, #1064	; 0x428
 80035b2:	4620      	mov	r0, r4
 80035b4:	f000 fb5e 	bl	8003c74 <VL53L1_set_inter_measurement_period_ms>
	VL53L1DevDataSet(Dev, CurrentParameters.PresetMode,
 80035b8:	2308      	movs	r3, #8
 80035ba:	f884 337c 	strb.w	r3, [r4, #892]	; 0x37c
}
 80035be:	b009      	add	sp, #36	; 0x24
 80035c0:	bd30      	pop	{r4, r5, pc}
 80035c2:	bf00      	nop

080035c4 <VL53L1_SetInterMeasurementPeriodMilliSeconds>:
	adjustedIMP += (adjustedIMP * 64) / 1000;
 80035c4:	018b      	lsls	r3, r1, #6
 80035c6:	4a03      	ldr	r2, [pc, #12]	; (80035d4 <VL53L1_SetInterMeasurementPeriodMilliSeconds+0x10>)
 80035c8:	fba2 2303 	umull	r2, r3, r2, r3
	Status = VL53L1_set_inter_measurement_period_ms(Dev,
 80035cc:	eb01 1193 	add.w	r1, r1, r3, lsr #6
 80035d0:	f000 bb50 	b.w	8003c74 <VL53L1_set_inter_measurement_period_ms>
 80035d4:	10624dd3 	.word	0x10624dd3

080035d8 <VL53L1_StartMeasurement>:
{
 80035d8:	b5f0      	push	{r4, r5, r6, r7, lr}
	DeviceMeasurementMode = VL53L1DevDataGet(Dev, LLData.measurement_mode);
 80035da:	7885      	ldrb	r5, [r0, #2]
{
 80035dc:	b087      	sub	sp, #28
 80035de:	4604      	mov	r4, r0
	if (DeviceMeasurementMode != VL53L1_DEVICEMEASUREMENTMODE_TIMED)
 80035e0:	2d40      	cmp	r5, #64	; 0x40
 80035e2:	d137      	bne.n	8003654 <VL53L1_StartMeasurement+0x7c>
	switch (CurrPalState) {
 80035e4:	f890 3378 	ldrb.w	r3, [r0, #888]	; 0x378
 80035e8:	2b05      	cmp	r3, #5
 80035ea:	d82c      	bhi.n	8003646 <VL53L1_StartMeasurement+0x6e>
 80035ec:	2b04      	cmp	r3, #4
 80035ee:	d23b      	bcs.n	8003668 <VL53L1_StartMeasurement+0x90>
 80035f0:	2b02      	cmp	r3, #2
 80035f2:	d939      	bls.n	8003668 <VL53L1_StartMeasurement+0x90>
	uint8_t Mm1Enabled = 0;
 80035f4:	2300      	movs	r3, #0
	Status = VL53L1_get_sequence_config_bit(Dev,
 80035f6:	f10d 0206 	add.w	r2, sp, #6
 80035fa:	2105      	movs	r1, #5
	uint8_t Mm1Enabled = 0;
 80035fc:	f88d 3006 	strb.w	r3, [sp, #6]
	uint8_t Mm2Enabled = 0;
 8003600:	f88d 3007 	strb.w	r3, [sp, #7]
	uint32_t PhaseCalTimeoutUs = 0;
 8003604:	9304      	str	r3, [sp, #16]
	uint32_t  RangeTimeoutUs = 0;
 8003606:	e9cd 3302 	strd	r3, r3, [sp, #8]
	Status = VL53L1_get_sequence_config_bit(Dev,
 800360a:	f000 fb9f 	bl	8003d4c <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE)
 800360e:	b370      	cbz	r0, 800366e <VL53L1_StartMeasurement+0x96>
		switch (PresetMode) {
 8003610:	2604      	movs	r6, #4
 8003612:	af05      	add	r7, sp, #20
	Status = VL53L1_get_inter_measurement_period_ms(Dev, &adjustedIMP);
 8003614:	4639      	mov	r1, r7
 8003616:	4620      	mov	r0, r4
 8003618:	f000 fb3a 	bl	8003c90 <VL53L1_get_inter_measurement_period_ms>
	adjustedIMP -= (adjustedIMP * 64) / 1000;
 800361c:	9b05      	ldr	r3, [sp, #20]
 800361e:	4947      	ldr	r1, [pc, #284]	; (800373c <VL53L1_StartMeasurement+0x164>)
 8003620:	019a      	lsls	r2, r3, #6
 8003622:	fba1 1202 	umull	r1, r2, r1, r2
 8003626:	eba3 1392 	sub.w	r3, r3, r2, lsr #6
		if (IMPms < MTBus + TIMED_MODE_TIMING_GUARD_MILLISECONDS)
 800362a:	42b3      	cmp	r3, r6
 800362c:	f0c0 8083 	bcc.w	8003736 <VL53L1_StartMeasurement+0x15e>
		Status = VL53L1_init_and_start_range(
 8003630:	4629      	mov	r1, r5
 8003632:	2206      	movs	r2, #6
 8003634:	4620      	mov	r0, r4
 8003636:	f000 fd07 	bl	8004048 <VL53L1_init_and_start_range>
	if (Status == VL53L1_ERROR_NONE)
 800363a:	b948      	cbnz	r0, 8003650 <VL53L1_StartMeasurement+0x78>
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_RUNNING);
 800363c:	2304      	movs	r3, #4
 800363e:	f884 3378 	strb.w	r3, [r4, #888]	; 0x378
}
 8003642:	b007      	add	sp, #28
 8003644:	bdf0      	pop	{r4, r5, r6, r7, pc}
	switch (CurrPalState) {
 8003646:	3b62      	subs	r3, #98	; 0x62
 8003648:	2b01      	cmp	r3, #1
 800364a:	d90d      	bls.n	8003668 <VL53L1_StartMeasurement+0x90>
		Status = VL53L1_ERROR_UNDEFINED;
 800364c:	f06f 0002 	mvn.w	r0, #2
}
 8003650:	b007      	add	sp, #28
 8003652:	bdf0      	pop	{r4, r5, r6, r7, pc}
		VL53L1_LoadPatch(Dev);
 8003654:	f7ff fdc2 	bl	80031dc <VL53L1_LoadPatch>
	switch (CurrPalState) {
 8003658:	f894 3378 	ldrb.w	r3, [r4, #888]	; 0x378
 800365c:	2b05      	cmp	r3, #5
 800365e:	d8f2      	bhi.n	8003646 <VL53L1_StartMeasurement+0x6e>
 8003660:	2b04      	cmp	r3, #4
 8003662:	d201      	bcs.n	8003668 <VL53L1_StartMeasurement+0x90>
 8003664:	2b02      	cmp	r3, #2
 8003666:	d8e3      	bhi.n	8003630 <VL53L1_StartMeasurement+0x58>
		Status = VL53L1_ERROR_INVALID_COMMAND;
 8003668:	f06f 000d 	mvn.w	r0, #13
 800366c:	e7f0      	b.n	8003650 <VL53L1_StartMeasurement+0x78>
	Status = VL53L1_get_sequence_config_bit(Dev,
 800366e:	f10d 0207 	add.w	r2, sp, #7
 8003672:	2106      	movs	r1, #6
 8003674:	4620      	mov	r0, r4
 8003676:	f000 fb69 	bl	8003d4c <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE)
 800367a:	2800      	cmp	r0, #0
 800367c:	d1c8      	bne.n	8003610 <VL53L1_StartMeasurement+0x38>
		Status = VL53L1_get_timeouts_us(Dev,
 800367e:	ab03      	add	r3, sp, #12
 8003680:	aa02      	add	r2, sp, #8
 8003682:	a904      	add	r1, sp, #16
 8003684:	4620      	mov	r0, r4
 8003686:	f000 fb2b 	bl	8003ce0 <VL53L1_get_timeouts_us>
	if (Status == VL53L1_ERROR_NONE) {
 800368a:	2800      	cmp	r0, #0
 800368c:	d1c0      	bne.n	8003610 <VL53L1_StartMeasurement+0x38>
		switch (PresetMode) {
 800368e:	f894 337c 	ldrb.w	r3, [r4, #892]	; 0x37c
 8003692:	2b04      	cmp	r3, #4
 8003694:	d030      	beq.n	80036f8 <VL53L1_StartMeasurement+0x120>
 8003696:	2b08      	cmp	r3, #8
 8003698:	d015      	beq.n	80036c6 <VL53L1_StartMeasurement+0xee>
 800369a:	2b03      	cmp	r3, #3
 800369c:	d1b8      	bne.n	8003610 <VL53L1_StartMeasurement+0x38>
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 800369e:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80036a2:	9a03      	ldr	r2, [sp, #12]
 80036a4:	2b01      	cmp	r3, #1
 80036a6:	d039      	beq.n	800371c <VL53L1_StartMeasurement+0x144>
 80036a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80036ac:	2b01      	cmp	r3, #1
 80036ae:	d035      	beq.n	800371c <VL53L1_StartMeasurement+0x144>
				MeasTimingBdg = 2 * RangeTimeoutUs + 21600;
 80036b0:	f642 2330 	movw	r3, #10800	; 0x2a30
 80036b4:	4413      	add	r3, r2
 80036b6:	4921      	ldr	r1, [pc, #132]	; (800373c <VL53L1_StartMeasurement+0x164>)
 80036b8:	af05      	add	r7, sp, #20
 80036ba:	005e      	lsls	r6, r3, #1
 80036bc:	fba1 3606 	umull	r3, r6, r1, r6
 80036c0:	09b6      	lsrs	r6, r6, #6
 80036c2:	3604      	adds	r6, #4
 80036c4:	e7a6      	b.n	8003614 <VL53L1_StartMeasurement+0x3c>
			VL53L1_get_tuning_parm(Dev,
 80036c6:	af05      	add	r7, sp, #20
 80036c8:	f248 0136 	movw	r1, #32822	; 0x8036
 80036cc:	4620      	mov	r0, r4
				vhv += vhv_loops *
 80036ce:	26f5      	movs	r6, #245	; 0xf5
			VL53L1_get_tuning_parm(Dev,
 80036d0:	463a      	mov	r2, r7
 80036d2:	f001 f813 	bl	80046fc <VL53L1_get_tuning_parm>
			if (vhv_loops > 0) {
 80036d6:	9b05      	ldr	r3, [sp, #20]
 80036d8:	2b00      	cmp	r3, #0
 80036da:	dd02      	ble.n	80036e2 <VL53L1_StartMeasurement+0x10a>
				vhv += vhv_loops *
 80036dc:	fb06 f603 	mul.w	r6, r6, r3
 80036e0:	36f5      	adds	r6, #245	; 0xf5
			MeasTimingBdg = 2 * RangeTimeoutUs + TimingGuard;
 80036e2:	9a03      	ldr	r2, [sp, #12]
 80036e4:	4b15      	ldr	r3, [pc, #84]	; (800373c <VL53L1_StartMeasurement+0x164>)
 80036e6:	eb06 0642 	add.w	r6, r6, r2, lsl #1
 80036ea:	f606 56dc 	addw	r6, r6, #3548	; 0xddc
 80036ee:	fba3 3606 	umull	r3, r6, r3, r6
 80036f2:	09b6      	lsrs	r6, r6, #6
 80036f4:	3604      	adds	r6, #4
 80036f6:	e78d      	b.n	8003614 <VL53L1_StartMeasurement+0x3c>
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 80036f8:	f89d 2006 	ldrb.w	r2, [sp, #6]
 80036fc:	9b03      	ldr	r3, [sp, #12]
 80036fe:	2a01      	cmp	r2, #1
 8003700:	d00f      	beq.n	8003722 <VL53L1_StartMeasurement+0x14a>
 8003702:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8003706:	2a01      	cmp	r2, #1
 8003708:	d00b      	beq.n	8003722 <VL53L1_StartMeasurement+0x14a>
				MeasTimingBdg = RangeTimeoutUs + 1000;
 800370a:	f503 767a 	add.w	r6, r3, #1000	; 0x3e8
 800370e:	4b0b      	ldr	r3, [pc, #44]	; (800373c <VL53L1_StartMeasurement+0x164>)
 8003710:	af05      	add	r7, sp, #20
 8003712:	fba3 3606 	umull	r3, r6, r3, r6
 8003716:	09b6      	lsrs	r6, r6, #6
 8003718:	3604      	adds	r6, #4
 800371a:	e77b      	b.n	8003614 <VL53L1_StartMeasurement+0x3c>
				MeasTimingBdg = 2 * RangeTimeoutUs + 26600;
 800371c:	f243 33f4 	movw	r3, #13300	; 0x33f4
 8003720:	e7c8      	b.n	80036b4 <VL53L1_StartMeasurement+0xdc>
				MeasTimingBdg = RangeTimeoutUs + 5000;
 8003722:	f241 3288 	movw	r2, #5000	; 0x1388
 8003726:	4e05      	ldr	r6, [pc, #20]	; (800373c <VL53L1_StartMeasurement+0x164>)
 8003728:	af05      	add	r7, sp, #20
 800372a:	441a      	add	r2, r3
 800372c:	fba6 3602 	umull	r3, r6, r6, r2
 8003730:	09b6      	lsrs	r6, r6, #6
 8003732:	3604      	adds	r6, #4
 8003734:	e76e      	b.n	8003614 <VL53L1_StartMeasurement+0x3c>
			Status = VL53L1_ERROR_INVALID_PARAMS;
 8003736:	f06f 0003 	mvn.w	r0, #3
	return Status;
 800373a:	e789      	b.n	8003650 <VL53L1_StartMeasurement+0x78>
 800373c:	10624dd3 	.word	0x10624dd3

08003740 <VL53L1_StopMeasurement>:
{
 8003740:	b570      	push	{r4, r5, r6, lr}
 8003742:	4604      	mov	r4, r0
	Status = VL53L1_stop_range(Dev);
 8003744:	f000 fe68 	bl	8004418 <VL53L1_stop_range>
 8003748:	4605      	mov	r5, r0
	if (DeviceMeasurementMode != VL53L1_DEVICEMEASUREMENTMODE_TIMED)
 800374a:	78a3      	ldrb	r3, [r4, #2]
 800374c:	2b40      	cmp	r3, #64	; 0x40
 800374e:	d105      	bne.n	800375c <VL53L1_StopMeasurement+0x1c>
	if (Status == VL53L1_ERROR_NONE)
 8003750:	b915      	cbnz	r5, 8003758 <VL53L1_StopMeasurement+0x18>
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_IDLE);
 8003752:	2303      	movs	r3, #3
 8003754:	f884 3378 	strb.w	r3, [r4, #888]	; 0x378
}
 8003758:	4628      	mov	r0, r5
 800375a:	bd70      	pop	{r4, r5, r6, pc}
static VL53L1_Error VL53L1_UnloadPatch(VL53L1_DEV Dev)
{
	VL53L1_Error status = VL53L1_ERROR_NONE;
	/* Disable Firmware (allow full write access) */
	if (status == VL53L1_ERROR_NONE)
		status = VL53L1_WrByte(
 800375c:	2200      	movs	r2, #0
 800375e:	2185      	movs	r1, #133	; 0x85
 8003760:	4620      	mov	r0, r4
 8003762:	f003 fa13 	bl	8006b8c <VL53L1_WrByte>
				Dev,
				VL53L1_FIRMWARE__ENABLE,
				0x00);
	/* Force GO1 off */
	if (status == VL53L1_ERROR_NONE)
 8003766:	4606      	mov	r6, r0
 8003768:	2800      	cmp	r0, #0
 800376a:	d1f1      	bne.n	8003750 <VL53L1_StopMeasurement+0x10>
		VL53L1_disable_powerforce(Dev);
 800376c:	4620      	mov	r0, r4
 800376e:	f002 fb39 	bl	8005de4 <VL53L1_disable_powerforce>
	/* Disable firmware patching */
	if (status == VL53L1_ERROR_NONE)
		status = VL53L1_WrByte(
 8003772:	4632      	mov	r2, r6
 8003774:	f44f 618e 	mov.w	r1, #1136	; 0x470
 8003778:	4620      	mov	r0, r4
 800377a:	f003 fa07 	bl	8006b8c <VL53L1_WrByte>
				Dev,
				VL53L1_PATCH__CTRL,
				0x00);
	/* Enable Firmware */
	if (status == VL53L1_ERROR_NONE)
 800377e:	2800      	cmp	r0, #0
 8003780:	d1e6      	bne.n	8003750 <VL53L1_StopMeasurement+0x10>
		status = VL53L1_WrByte(
 8003782:	2201      	movs	r2, #1
 8003784:	2185      	movs	r1, #133	; 0x85
 8003786:	4620      	mov	r0, r4
 8003788:	f003 fa00 	bl	8006b8c <VL53L1_WrByte>
 800378c:	e7e0      	b.n	8003750 <VL53L1_StopMeasurement+0x10>
 800378e:	bf00      	nop

08003790 <VL53L1_WaitMeasurementDataReady>:
	Status = VL53L1_poll_for_range_completion(Dev,
 8003790:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8003794:	f003 b992 	b.w	8006abc <VL53L1_poll_for_range_completion>

08003798 <VL53L1_GetRangingMeasurementData>:
{
 8003798:	b5f0      	push	{r4, r5, r6, r7, lr}
	memset(pRangingMeasurementData, 0xFF,
 800379a:	f04f 33ff 	mov.w	r3, #4294967295
{
 800379e:	460c      	mov	r4, r1
 80037a0:	b0a3      	sub	sp, #140	; 0x8c
	Status = VL53L1_get_device_results(
 80037a2:	2102      	movs	r1, #2
	memset(pRangingMeasurementData, 0xFF,
 80037a4:	6023      	str	r3, [r4, #0]
{
 80037a6:	4605      	mov	r5, r0
	Status = VL53L1_get_device_results(
 80037a8:	aa01      	add	r2, sp, #4
	memset(pRangingMeasurementData, 0xFF,
 80037aa:	6063      	str	r3, [r4, #4]
 80037ac:	60a3      	str	r3, [r4, #8]
 80037ae:	60e3      	str	r3, [r4, #12]
 80037b0:	6123      	str	r3, [r4, #16]
 80037b2:	6163      	str	r3, [r4, #20]
 80037b4:	61a3      	str	r3, [r4, #24]
	Status = VL53L1_get_device_results(
 80037b6:	f000 fe53 	bl	8004460 <VL53L1_get_device_results>
	if (Status == VL53L1_ERROR_NONE) {
 80037ba:	b108      	cbz	r0, 80037c0 <VL53L1_GetRangingMeasurementData+0x28>
}
 80037bc:	b023      	add	sp, #140	; 0x8c
 80037be:	bdf0      	pop	{r4, r5, r6, r7, pc}
	FilteredRangeStatus = presults_data->range_status & 0x1F;
 80037c0:	f89d 6046 	ldrb.w	r6, [sp, #70]	; 0x46
		pRangingMeasurementData->StreamCount = presults->stream_count;
 80037c4:	f89d 2006 	ldrb.w	r2, [sp, #6]
	FilteredRangeStatus = presults_data->range_status & 0x1F;
 80037c8:	f006 061f 	and.w	r6, r6, #31
	pRangeData->TimeStamp = presults_data->time_stamp;
 80037cc:	9b03      	ldr	r3, [sp, #12]
		pRangingMeasurementData->StreamCount = presults->stream_count;
 80037ce:	7122      	strb	r2, [r4, #4]
	else if (FilteredRangeStatus == VL53L1_DEVICEERROR_PHASECONSISTENCY)
 80037d0:	2e07      	cmp	r6, #7
	pRangeData->TimeStamp = presults_data->time_stamp;
 80037d2:	6023      	str	r3, [r4, #0]
		Status = SetSimpleData(Dev, 1,
 80037d4:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80037d8:	f9bd 0044 	ldrsh.w	r0, [sp, #68]	; 0x44
 80037dc:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
	else if (FilteredRangeStatus == VL53L1_DEVICEERROR_PHASECONSISTENCY)
 80037e0:	d01d      	beq.n	800381e <VL53L1_GetRangingMeasurementData+0x86>
		if (presults_data->median_range_mm < SRL)
 80037e2:	f5b0 7f96 	cmp.w	r0, #300	; 0x12c
 80037e6:	db7c      	blt.n	80038e2 <VL53L1_GetRangingMeasurementData+0x14a>
			RAS = LRAP * presults_data->median_range_mm;
 80037e8:	f641 139a 	movw	r3, #6554	; 0x199a
 80037ec:	fb10 fc03 	smulbb	ip, r0, r3
 80037f0:	ea4f 0e5c 	mov.w	lr, ip, lsr #1
			partial = (GGm * presults_data->sigma_mm);
 80037f4:	4b54      	ldr	r3, [pc, #336]	; (8003948 <VL53L1_GetRangingMeasurementData+0x1b0>)
			if (partial <= GI)
 80037f6:	4955      	ldr	r1, [pc, #340]	; (800394c <VL53L1_GetRangingMeasurementData+0x1b4>)
			partial = partial + (RAS >> 1);
 80037f8:	fb03 e307 	mla	r3, r3, r7, lr
			partial = partial / RAS;
 80037fc:	fbb3 f3fc 	udiv	r3, r3, ip
			partial = partial * 65536;
 8003800:	041b      	lsls	r3, r3, #16
			if (partial <= GI)
 8003802:	428b      	cmp	r3, r1
 8003804:	d80b      	bhi.n	800381e <VL53L1_GetRangingMeasurementData+0x86>
				SRQL = GI - partial;
 8003806:	1acb      	subs	r3, r1, r3
		finalvalue = (uint8_t)(SRQL >> 16);
 8003808:	0c1b      	lsrs	r3, r3, #16
		returnvalue = MAX(50, MIN(100, finalvalue));
 800380a:	2b32      	cmp	r3, #50	; 0x32
		finalvalue = (uint8_t)(SRQL >> 16);
 800380c:	fa5f fc83 	uxtb.w	ip, r3
		returnvalue = MAX(50, MIN(100, finalvalue));
 8003810:	d905      	bls.n	800381e <VL53L1_GetRangingMeasurementData+0x86>
 8003812:	f1bc 0f64 	cmp.w	ip, #100	; 0x64
 8003816:	bf28      	it	cs
 8003818:	f04f 0c64 	movcs.w	ip, #100	; 0x64
 800381c:	e001      	b.n	8003822 <VL53L1_GetRangingMeasurementData+0x8a>
		returnvalue = 50;
 800381e:	f04f 0c32 	mov.w	ip, #50	; 0x32
	SignalRate = VL53L1_FIXPOINT97TOFIXPOINT1616(
 8003822:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
	TempFix1616 = VL53L1_FIXPOINT97TOFIXPOINT1616(
 8003826:	027f      	lsls	r7, r7, #9
	AmbientRate = VL53L1_FIXPOINT97TOFIXPOINT1616(
 8003828:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
	switch (device_status) {
 800382c:	3a01      	subs	r2, #1
	SignalRate = VL53L1_FIXPOINT97TOFIXPOINT1616(
 800382e:	025b      	lsls	r3, r3, #9
	pRangeData->RangeMilliMeter = presults_data->median_range_mm;
 8003830:	8320      	strh	r0, [r4, #24]
	AmbientRate = VL53L1_FIXPOINT97TOFIXPOINT1616(
 8003832:	0249      	lsls	r1, r1, #9
	pRangeData->RangeFractionalPart = 0;
 8003834:	2000      	movs	r0, #0
	pRangeData->SigmaMilliMeter = TempFix1616;
 8003836:	6167      	str	r7, [r4, #20]
	pRangeData->RangeQualityLevel = ComputeRQL(active_results,
 8003838:	f884 c005 	strb.w	ip, [r4, #5]
	pRangeData->RangeFractionalPart = 0;
 800383c:	76a0      	strb	r0, [r4, #26]
	pRangeData->AmbientRateRtnMegaCps = AmbientRate;
 800383e:	e9c4 3102 	strd	r3, r1, [r4, #8]
	pRangeData->EffectiveSpadRtnCount =
 8003842:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8003846:	8221      	strh	r1, [r4, #16]
	switch (device_status) {
 8003848:	2a10      	cmp	r2, #16
 800384a:	d84f      	bhi.n	80038ec <VL53L1_GetRangingMeasurementData+0x154>
 800384c:	e8df f002 	tbb	[pc, r2]
 8003850:	4e464646 	.word	0x4e464646
 8003854:	4e4e4e4e 	.word	0x4e4e4e4e
 8003858:	4e4e4e4e 	.word	0x4e4e4e4e
 800385c:	4e4e4e09 	.word	0x4e4e4e09
 8003860:	46          	.byte	0x46
 8003861:	00          	.byte	0x00
		pRangeData->RangeStatus = VL53L1_RANGESTATUS_MIN_RANGE_FAIL;
 8003862:	220d      	movs	r2, #13
 8003864:	76e2      	strb	r2, [r4, #27]
	VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8003866:	f8c5 3394 	str.w	r3, [r5, #916]	; 0x394
		Status = VL53L1_get_lite_sigma_threshold(Dev, &SigmaThresh);
 800386a:	4628      	mov	r0, r5
	VL53L1_SETARRAYPARAMETERFIELD(Dev,
 800386c:	f8c5 7390 	str.w	r7, [r5, #912]	; 0x390
		Status = VL53L1_get_lite_sigma_threshold(Dev, &SigmaThresh);
 8003870:	f10d 0102 	add.w	r1, sp, #2
 8003874:	f000 fbd4 	bl	8004020 <VL53L1_get_lite_sigma_threshold>
 8003878:	f1a6 0306 	sub.w	r3, r6, #6
 800387c:	fab3 f383 	clz	r3, r3
 8003880:	095b      	lsrs	r3, r3, #5
	if (Status == VL53L1_ERROR_NONE) {
 8003882:	2800      	cmp	r0, #0
 8003884:	d142      	bne.n	800390c <VL53L1_GetRangingMeasurementData+0x174>
		TempFix1616 = VL53L1_FIXPOINT142TOFIXPOINT1616(SigmaThresh);
 8003886:	f8bd 2002 	ldrh.w	r2, [sp, #2]
		if (TempFix1616 == 0) {
 800388a:	0391      	lsls	r1, r2, #14
 800388c:	2a00      	cmp	r2, #0
 800388e:	d04c      	beq.n	800392a <VL53L1_GetRangingMeasurementData+0x192>
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8003890:	2201      	movs	r2, #1
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8003892:	f8c5 1388 	str.w	r1, [r5, #904]	; 0x388
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8003896:	f885 2384 	strb.w	r2, [r5, #900]	; 0x384
 800389a:	f1a6 0604 	sub.w	r6, r6, #4
	VL53L1_SETARRAYPARAMETERFIELD(Dev, LimitChecksStatus,
 800389e:	f885 3386 	strb.w	r3, [r5, #902]	; 0x386
		Status = VL53L1_get_lite_min_count_rate(Dev, &MinCountRate);
 80038a2:	f10d 0102 	add.w	r1, sp, #2
 80038a6:	4628      	mov	r0, r5
 80038a8:	fab6 f686 	clz	r6, r6
 80038ac:	f000 fbc2 	bl	8004034 <VL53L1_get_lite_min_count_rate>
 80038b0:	0976      	lsrs	r6, r6, #5
	if (Status == VL53L1_ERROR_NONE) {
 80038b2:	bb18      	cbnz	r0, 80038fc <VL53L1_GetRangingMeasurementData+0x164>
		TempFix1616 = VL53L1_FIXPOINT97TOFIXPOINT1616(MinCountRate);
 80038b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
		if (TempFix1616 == 0) {
 80038b8:	025a      	lsls	r2, r3, #9
 80038ba:	b393      	cbz	r3, 8003922 <VL53L1_GetRangingMeasurementData+0x18a>
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 80038bc:	2301      	movs	r3, #1
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 80038be:	f8c5 238c 	str.w	r2, [r5, #908]	; 0x38c
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 80038c2:	f885 3385 	strb.w	r3, [r5, #901]	; 0x385
	VL53L1_SETARRAYPARAMETERFIELD(Dev, LimitChecksStatus,
 80038c6:	f885 6387 	strb.w	r6, [r5, #903]	; 0x387
	if ((pRangeData->RangeStatus == VL53L1_RANGESTATUS_RANGE_VALID) &&
 80038ca:	7ee3      	ldrb	r3, [r4, #27]
	Range = pRangeData->RangeMilliMeter;
 80038cc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
	if ((pRangeData->RangeStatus == VL53L1_RANGESTATUS_RANGE_VALID) &&
 80038d0:	b90b      	cbnz	r3, 80038d6 <VL53L1_GetRangingMeasurementData+0x13e>
 80038d2:	2a00      	cmp	r2, #0
 80038d4:	db2d      	blt.n	8003932 <VL53L1_GetRangingMeasurementData+0x19a>
		Status = SetSimpleData(Dev, 1,
 80038d6:	2000      	movs	r0, #0
}
 80038d8:	b023      	add	sp, #140	; 0x8c
 80038da:	bdf0      	pop	{r4, r5, r6, r7, pc}
		pRangeData->RangeStatus = VL53L1_RANGESTATUS_HARDWARE_FAIL;
 80038dc:	2205      	movs	r2, #5
 80038de:	76e2      	strb	r2, [r4, #27]
 80038e0:	e7c1      	b.n	8003866 <VL53L1_GetRangingMeasurementData+0xce>
		if (presults_data->median_range_mm < SRL)
 80038e2:	f44f 2e70 	mov.w	lr, #983040	; 0xf0000
			RAS = SRAS * 65536;
 80038e6:	f44f 1cf0 	mov.w	ip, #1966080	; 0x1e0000
 80038ea:	e783      	b.n	80037f4 <VL53L1_GetRangingMeasurementData+0x5c>
 80038ec:	1f32      	subs	r2, r6, #4
 80038ee:	b2d2      	uxtb	r2, r2
 80038f0:	2a0f      	cmp	r2, #15
 80038f2:	d813      	bhi.n	800391c <VL53L1_GetRangingMeasurementData+0x184>
 80038f4:	4916      	ldr	r1, [pc, #88]	; (8003950 <VL53L1_GetRangingMeasurementData+0x1b8>)
 80038f6:	5c8a      	ldrb	r2, [r1, r2]
			pRangeData->RangeStatus =
 80038f8:	76e2      	strb	r2, [r4, #27]
 80038fa:	e7b4      	b.n	8003866 <VL53L1_GetRangingMeasurementData+0xce>
 80038fc:	f895 3385 	ldrb.w	r3, [r5, #901]	; 0x385
 8003900:	2b01      	cmp	r3, #1
 8003902:	bf14      	ite	ne
 8003904:	2600      	movne	r6, #0
 8003906:	f006 0601 	andeq.w	r6, r6, #1
 800390a:	e7dc      	b.n	80038c6 <VL53L1_GetRangingMeasurementData+0x12e>
 800390c:	f895 2384 	ldrb.w	r2, [r5, #900]	; 0x384
 8003910:	2a01      	cmp	r2, #1
 8003912:	bf14      	ite	ne
 8003914:	2300      	movne	r3, #0
 8003916:	f003 0301 	andeq.w	r3, r3, #1
 800391a:	e7be      	b.n	800389a <VL53L1_GetRangingMeasurementData+0x102>
	default:
 800391c:	22ff      	movs	r2, #255	; 0xff
			pRangeData->RangeStatus =
 800391e:	76e2      	strb	r2, [r4, #27]
 8003920:	e7a1      	b.n	8003866 <VL53L1_GetRangingMeasurementData+0xce>
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8003922:	f885 2385 	strb.w	r2, [r5, #901]	; 0x385
 8003926:	4616      	mov	r6, r2
 8003928:	e7cd      	b.n	80038c6 <VL53L1_GetRangingMeasurementData+0x12e>
 800392a:	f885 1384 	strb.w	r1, [r5, #900]	; 0x384
 800392e:	460b      	mov	r3, r1
 8003930:	e7b3      	b.n	800389a <VL53L1_GetRangingMeasurementData+0x102>
		if (Range < BDTable[VL53L1_TUNING_PROXY_MIN])
 8003932:	4b08      	ldr	r3, [pc, #32]	; (8003954 <VL53L1_GetRangingMeasurementData+0x1bc>)
 8003934:	685b      	ldr	r3, [r3, #4]
 8003936:	429a      	cmp	r2, r3
 8003938:	db02      	blt.n	8003940 <VL53L1_GetRangingMeasurementData+0x1a8>
			pRangeData->RangeMilliMeter = 0;
 800393a:	2000      	movs	r0, #0
 800393c:	8320      	strh	r0, [r4, #24]
 800393e:	e73d      	b.n	80037bc <VL53L1_GetRangingMeasurementData+0x24>
			pRangeData->RangeStatus =
 8003940:	230e      	movs	r3, #14
		Status = SetSimpleData(Dev, 1,
 8003942:	2000      	movs	r0, #0
			pRangeData->RangeStatus =
 8003944:	76e3      	strb	r3, [r4, #27]
 8003946:	e739      	b.n	80037bc <VL53L1_GetRangingMeasurementData+0x24>
 8003948:	0030cccd 	.word	0x0030cccd
 800394c:	0075b333 	.word	0x0075b333
 8003950:	08019608 	.word	0x08019608
 8003954:	20000008 	.word	0x20000008

08003958 <VL53L1_read_p2p_data>:
}


VL53L1_Error VL53L1_read_p2p_data(
	VL53L1_DEV        Dev)
{
 8003958:	b570      	push	{r4, r5, r6, lr}
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE)
		status = VL53L1_get_static_nvm_managed(
 800395a:	f500 71ac 	add.w	r1, r0, #344	; 0x158
{
 800395e:	b082      	sub	sp, #8
 8003960:	4604      	mov	r4, r0
		status = VL53L1_get_static_nvm_managed(
 8003962:	f002 fc11 	bl	8006188 <VL53L1_get_static_nvm_managed>
						Dev,
						&(pdev->stat_nvm));

	if (status == VL53L1_ERROR_NONE)
 8003966:	4605      	mov	r5, r0
 8003968:	b1a0      	cbz	r0, 8003994 <VL53L1_read_p2p_data+0x3c>

	/*
	 * Check if there a sensible value for osc_measured__fast_osc__frequency
	 */

	if (pdev->stat_nvm.osc_measured__fast_osc__frequency < 0x1000) {
 800396a:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
 800396e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003972:	d331      	bcc.n	80039d8 <VL53L1_read_p2p_data+0x80>

	/* catch parts where the optical centre is
	 * no programmed in to the NVM
	 */

	if (pdev->optical_centre.x_centre == 0 &&
 8003974:	f8b4 30a2 	ldrh.w	r3, [r4, #162]	; 0xa2
 8003978:	b94b      	cbnz	r3, 800398e <VL53L1_read_p2p_data+0x36>
		pdev->optical_centre.y_centre == 0) {
		pdev->optical_centre.x_centre =
				pdev->mm_roi.x_centre << 4;
 800397a:	f894 209e 	ldrb.w	r2, [r4, #158]	; 0x9e
		pdev->optical_centre.y_centre =
				pdev->mm_roi.y_centre << 4;
 800397e:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
				pdev->mm_roi.x_centre << 4;
 8003982:	0112      	lsls	r2, r2, #4
				pdev->mm_roi.y_centre << 4;
 8003984:	011b      	lsls	r3, r3, #4
		pdev->optical_centre.x_centre =
 8003986:	f884 20a2 	strb.w	r2, [r4, #162]	; 0xa2
		pdev->optical_centre.y_centre =
 800398a:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
	}

	LOG_FUNCTION_END(status);

	return status;
}
 800398e:	4628      	mov	r0, r5
 8003990:	b002      	add	sp, #8
 8003992:	bd70      	pop	{r4, r5, r6, pc}
		status = VL53L1_get_customer_nvm_managed(
 8003994:	f104 0142 	add.w	r1, r4, #66	; 0x42
 8003998:	4620      	mov	r0, r4
 800399a:	f002 fc81 	bl	80062a0 <VL53L1_get_customer_nvm_managed>
	if (status == VL53L1_ERROR_NONE) {
 800399e:	4605      	mov	r5, r0
 80039a0:	2800      	cmp	r0, #0
 80039a2:	d1e2      	bne.n	800396a <VL53L1_read_p2p_data+0x12>
		status = VL53L1_get_nvm_copy_data(
 80039a4:	f504 76fd 	add.w	r6, r4, #506	; 0x1fa
 80039a8:	4620      	mov	r0, r4
 80039aa:	4631      	mov	r1, r6
 80039ac:	f002 ffe8 	bl	8006980 <VL53L1_get_nvm_copy_data>
		if (status == VL53L1_ERROR_NONE)
 80039b0:	4605      	mov	r5, r0
 80039b2:	2800      	cmp	r0, #0
 80039b4:	d1d9      	bne.n	800396a <VL53L1_read_p2p_data+0x12>
			VL53L1_copy_rtn_good_spads_to_buffer(
 80039b6:	4630      	mov	r0, r6
 80039b8:	f104 01f0 	add.w	r1, r4, #240	; 0xf0
 80039bc:	f002 f946 	bl	8005c4c <VL53L1_copy_rtn_good_spads_to_buffer>
		status =
 80039c0:	f504 722d 	add.w	r2, r4, #692	; 0x2b4
 80039c4:	21de      	movs	r1, #222	; 0xde
 80039c6:	4620      	mov	r0, r4
 80039c8:	f003 f8fc 	bl	8006bc4 <VL53L1_RdWord>
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency < 0x1000) {
 80039cc:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
		status =
 80039d0:	4605      	mov	r5, r0
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency < 0x1000) {
 80039d2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80039d6:	d203      	bcs.n	80039e0 <VL53L1_read_p2p_data+0x88>
		pdev->stat_nvm.osc_measured__fast_osc__frequency = 0xBCCC;
 80039d8:	f64b 43cc 	movw	r3, #48332	; 0xbccc
 80039dc:	f8a4 315e 	strh.w	r3, [r4, #350]	; 0x15e
	if (status == VL53L1_ERROR_NONE)
 80039e0:	2d00      	cmp	r5, #0
 80039e2:	d1c7      	bne.n	8003974 <VL53L1_read_p2p_data+0x1c>
	uint8_t  xy_size = 0;

	LOG_FUNCTION_START("");

	/* convert SPAD number into (row,col) location */
	VL53L1_decode_row_col(
 80039e4:	f10d 0206 	add.w	r2, sp, #6
 80039e8:	f10d 0107 	add.w	r1, sp, #7
 80039ec:	f894 022a 	ldrb.w	r0, [r4, #554]	; 0x22a
	uint8_t  x       = 0;
 80039f0:	f88d 5006 	strb.w	r5, [sp, #6]
	uint8_t  y       = 0;
 80039f4:	f88d 5007 	strb.w	r5, [sp, #7]
	VL53L1_decode_row_col(
 80039f8:	f002 fb84 	bl	8006104 <VL53L1_decode_row_col>
			pdev->nvm_copy_data.roi_config__mode_roi_centre_spad,
			&y,
			&x);

	pmm_roi->x_centre = x;
 80039fc:	f89d 2006 	ldrb.w	r2, [sp, #6]
 8003a00:	462b      	mov	r3, r5
 8003a02:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8003a06:	f362 0307 	bfi	r3, r2, #0, #8
	 * versus the API sense
	 *
	 * MS Nibble = height
	 * LS Nibble = width
	 */
	xy_size = pdev->nvm_copy_data.roi_config__mode_roi_xy_size;
 8003a0a:	f894 222b 	ldrb.w	r2, [r4, #555]	; 0x22b
	pmm_roi->x_centre = x;
 8003a0e:	f361 230f 	bfi	r3, r1, #8, #8

	pmm_roi->height = xy_size >> 4;
	pmm_roi->width  = xy_size & 0x0F;
 8003a12:	f002 010f 	and.w	r1, r2, #15
	pmm_roi->height = xy_size >> 4;
 8003a16:	0912      	lsrs	r2, r2, #4
	pmm_roi->x_centre = x;
 8003a18:	f361 4317 	bfi	r3, r1, #16, #8
 8003a1c:	f362 631f 	bfi	r3, r2, #24, #8
 8003a20:	f8c4 309e 	str.w	r3, [r4, #158]	; 0x9e
 8003a24:	e7a6      	b.n	8003974 <VL53L1_read_p2p_data+0x1c>
 8003a26:	bf00      	nop

08003a28 <VL53L1_data_init>:
{
 8003a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a2c:	460d      	mov	r5, r1
 8003a2e:	b08b      	sub	sp, #44	; 0x2c
	VL53L1_init_ll_driver_state(
 8003a30:	2162      	movs	r1, #98	; 0x62
{
 8003a32:	4604      	mov	r4, r0
	VL53L1_init_ll_driver_state(
 8003a34:	f002 f844 	bl	8005ac0 <VL53L1_init_ll_driver_state>
	pdev->wait_method             = VL53L1_WAIT_METHOD_BLOCKING;
 8003a38:	f04f 2301 	mov.w	r3, #16777472	; 0x1000100
	pdev->offset_correction_mode  =
 8003a3c:	2001      	movs	r0, #1
	pdev->phasecal_config_timeout_us  =  1000;
 8003a3e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	pdev->mm_config_timeout_us        =  2000;
 8003a42:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
	pdev->wait_method             = VL53L1_WAIT_METHOD_BLOCKING;
 8003a46:	6023      	str	r3, [r4, #0]
	pdev->range_config_timeout_us     = 13000;
 8003a48:	f243 23c8 	movw	r3, #13000	; 0x32c8
	pdev->offset_correction_mode  =
 8003a4c:	7120      	strb	r0, [r4, #4]
	pdev->phasecal_config_timeout_us  =  1000;
 8003a4e:	60a1      	str	r1, [r4, #8]
	pdev->inter_measurement_period_ms =   100;
 8003a50:	2064      	movs	r0, #100	; 0x64
	pdev->dss_config__target_total_rate_mcps = 0x0A00;
 8003a52:	f44f 6120 	mov.w	r1, #2560	; 0xa00
	pdev->mm_config_timeout_us        =  2000;
 8003a56:	60e2      	str	r2, [r4, #12]
	pdev->range_config_timeout_us     = 13000;
 8003a58:	6123      	str	r3, [r4, #16]
	pdev->debug_mode                  =  0x00;
 8003a5a:	2200      	movs	r2, #0
	pdev->gain_cal.standard_ranging_gain_factor =
 8003a5c:	f240 73db 	movw	r3, #2011	; 0x7db
	pdev->inter_measurement_period_ms =   100;
 8003a60:	6160      	str	r0, [r4, #20]
	pdev->dss_config__target_total_rate_mcps = 0x0A00;
 8003a62:	8321      	strh	r1, [r4, #24]
	VL53L1_init_version(Dev);
 8003a64:	4620      	mov	r0, r4
	pdev->debug_mode                  =  0x00;
 8003a66:	f884 2021 	strb.w	r2, [r4, #33]	; 0x21
	pdev->gain_cal.standard_ranging_gain_factor =
 8003a6a:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
	VL53L1_init_version(Dev);
 8003a6e:	f002 f81d 	bl	8005aac <VL53L1_init_version>
	if (read_p2p_data > 0 && status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
 8003a72:	b115      	cbz	r5, 8003a7a <VL53L1_data_init+0x52>
			status = VL53L1_read_p2p_data(Dev);
 8003a74:	4620      	mov	r0, r4
 8003a76:	f7ff ff6f 	bl	8003958 <VL53L1_read_p2p_data>
	status =
 8003a7a:	f504 7088 	add.w	r0, r4, #272	; 0x110
		VL53L1_init_tuning_parm_storage_struct(
 8003a7e:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
	status =
 8003a82:	f000 ff9f 	bl	80049c4 <VL53L1_init_refspadchar_config_struct>
	status =
 8003a86:	f504 7090 	add.w	r0, r4, #288	; 0x120
 8003a8a:	f000 ffaf 	bl	80049ec <VL53L1_init_ssc_config_struct>
	status =
 8003a8e:	f504 7196 	add.w	r1, r4, #300	; 0x12c
 8003a92:	f104 0042 	add.w	r0, r4, #66	; 0x42

	VL53L1_Error  status = VL53L1_ERROR_NONE;
	VL53L1_LLDriverData_t *pdev =
			VL53L1DevStructGetLLDriverHandle(Dev);

	VL53L1_static_config_t        *pstatic       = &(pdev->stat_cfg);
 8003a96:	f504 7bb2 	add.w	fp, r4, #356	; 0x164
	status =
 8003a9a:	f000 ffb3 	bl	8004a04 <VL53L1_init_xtalk_config_struct>
	status =
 8003a9e:	f504 70a2 	add.w	r0, r4, #324	; 0x144
 8003aa2:	f000 ffd1 	bl	8004a48 <VL53L1_init_offset_cal_config_struct>
	status =
 8003aa6:	4628      	mov	r0, r5
 8003aa8:	f000 ffe2 	bl	8004a70 <VL53L1_init_tuning_parm_storage_struct>
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound =
			(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 8003aac:	f894 3160 	ldrb.w	r3, [r4, #352]	; 0x160
	VL53L1_init_ll_driver_state(
 8003ab0:	2103      	movs	r1, #3
		status = VL53L1_set_preset_mode(
 8003ab2:	68a2      	ldr	r2, [r4, #8]
 8003ab4:	f894 8001 	ldrb.w	r8, [r4, #1]
	VL53L1_init_ll_driver_state(
 8003ab8:	4620      	mov	r0, r4
			(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 8003aba:	400b      	ands	r3, r1
		status = VL53L1_set_preset_mode(
 8003abc:	9207      	str	r2, [sp, #28]
 8003abe:	68e2      	ldr	r2, [r4, #12]
	VL53L1_general_config_t       *pgeneral      = &(pdev->gen_cfg);
 8003ac0:	f504 76c2 	add.w	r6, r4, #388	; 0x184
			(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 8003ac4:	3b80      	subs	r3, #128	; 0x80
		status = VL53L1_set_preset_mode(
 8003ac6:	f8b4 9018 	ldrh.w	r9, [r4, #24]
 8003aca:	9208      	str	r2, [sp, #32]
	VL53L1_timing_config_t        *ptiming       = &(pdev->tim_cfg);
 8003acc:	f504 77ce 	add.w	r7, r4, #412	; 0x19c
	pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound =
 8003ad0:	f884 3160 	strb.w	r3, [r4, #352]	; 0x160
	VL53L1_dynamic_config_t       *pdynamic      = &(pdev->dyn_cfg);
 8003ad4:	f504 73da 	add.w	r3, r4, #436	; 0x1b4
	VL53L1_system_control_t       *psystem       = &(pdev->sys_ctrl);
 8003ad8:	f504 7ae4 	add.w	sl, r4, #456	; 0x1c8
	VL53L1_dynamic_config_t       *pdynamic      = &(pdev->dyn_cfg);
 8003adc:	9305      	str	r3, [sp, #20]
		status = VL53L1_set_preset_mode(
 8003ade:	6923      	ldr	r3, [r4, #16]
 8003ae0:	9309      	str	r3, [sp, #36]	; 0x24
 8003ae2:	6963      	ldr	r3, [r4, #20]
 8003ae4:	9306      	str	r3, [sp, #24]
	VL53L1_init_ll_driver_state(
 8003ae6:	f001 ffeb 	bl	8005ac0 <VL53L1_init_ll_driver_state>
	switch (device_preset_mode) {
 8003aea:	f108 32ff 	add.w	r2, r8, #4294967295
	VL53L1_low_power_auto_data_t  *plpadata      =
 8003aee:	f504 7139 	add.w	r1, r4, #740	; 0x2e4
	switch (device_preset_mode) {
 8003af2:	9b05      	ldr	r3, [sp, #20]
 8003af4:	2a25      	cmp	r2, #37	; 0x25
 8003af6:	f200 80b7 	bhi.w	8003c68 <VL53L1_data_init+0x240>
 8003afa:	e8df f002 	tbb	[pc, r2]
 8003afe:	4e45      	.short	0x4e45
 8003b00:	72696057 	.word	0x72696057
 8003b04:	b5b5847b 	.word	0xb5b5847b
 8003b08:	b5b5b5b5 	.word	0xb5b5b5b5
 8003b0c:	968db5b5 	.word	0x968db5b5
 8003b10:	b5b5b5b5 	.word	0xb5b5b5b5
 8003b14:	b5b5b5b5 	.word	0xb5b5b5b5
 8003b18:	b5b5b5b5 	.word	0xb5b5b5b5
 8003b1c:	b5b5b5b5 	.word	0xb5b5b5b5
 8003b20:	13aa9fb5 	.word	0x13aa9fb5
		status = VL53L1_preset_mode_low_power_auto_long_ranging(
 8003b24:	e9cd 5101 	strd	r5, r1, [sp, #4]
 8003b28:	4658      	mov	r0, fp
 8003b2a:	f8cd a000 	str.w	sl, [sp]
 8003b2e:	463a      	mov	r2, r7
 8003b30:	4631      	mov	r1, r6
 8003b32:	f001 fded 	bl	8005710 <VL53L1_preset_mode_low_power_auto_long_ranging>
 8003b36:	4605      	mov	r5, r0
	if (status == VL53L1_ERROR_NONE) {
 8003b38:	b9fd      	cbnz	r5, 8003b7a <VL53L1_data_init+0x152>
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8003b3a:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
		pstatic->dss_config__target_total_rate_mcps =
 8003b3e:	f8a4 9164 	strh.w	r9, [r4, #356]	; 0x164
		pdev->dss_config__target_total_rate_mcps    =
 8003b42:	f8a4 9018 	strh.w	r9, [r4, #24]
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8003b46:	2b00      	cmp	r3, #0
 8003b48:	f000 8091 	beq.w	8003c6e <VL53L1_data_init+0x246>
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8003b4c:	9a08      	ldr	r2, [sp, #32]
		pdev->phasecal_config_timeout_us = phasecal_config_timeout_us;
 8003b4e:	9807      	ldr	r0, [sp, #28]
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8003b50:	60e2      	str	r2, [r4, #12]
		status =
 8003b52:	4611      	mov	r1, r2
		pdev->range_config_timeout_us    = range_config_timeout_us;
 8003b54:	9a09      	ldr	r2, [sp, #36]	; 0x24
		pdev->phasecal_config_timeout_us = phasecal_config_timeout_us;
 8003b56:	60a0      	str	r0, [r4, #8]
		pdev->range_config_timeout_us    = range_config_timeout_us;
 8003b58:	6122      	str	r2, [r4, #16]
		status =
 8003b5a:	e9cd 6700 	strd	r6, r7, [sp]
 8003b5e:	f002 f9a1 	bl	8005ea4 <VL53L1_calc_timeout_register_values>
	if (status == VL53L1_ERROR_NONE)
 8003b62:	4605      	mov	r5, r0
 8003b64:	b948      	cbnz	r0, 8003b7a <VL53L1_data_init+0x152>
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8003b66:	f8b4 32b4 	ldrh.w	r3, [r4, #692]	; 0x2b4
 8003b6a:	2b00      	cmp	r3, #0
 8003b6c:	d07f      	beq.n	8003c6e <VL53L1_data_init+0x246>
			inter_measurement_period_ms *
 8003b6e:	9a06      	ldr	r2, [sp, #24]
 8003b70:	fb02 f303 	mul.w	r3, r2, r3
		pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 8003b74:	6162      	str	r2, [r4, #20]
		pdev->tim_cfg.system__intermeasurement_period = \
 8003b76:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
	VL53L1_low_power_auto_data_init(
 8003b7a:	4620      	mov	r0, r4
 8003b7c:	f002 fa60 	bl	8006040 <VL53L1_low_power_auto_data_init>
}
 8003b80:	4628      	mov	r0, r5
 8003b82:	b00b      	add	sp, #44	; 0x2c
 8003b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status = VL53L1_preset_mode_standard_ranging(
 8003b88:	e9cd a500 	strd	sl, r5, [sp]
 8003b8c:	4658      	mov	r0, fp
 8003b8e:	463a      	mov	r2, r7
 8003b90:	4631      	mov	r1, r6
 8003b92:	f000 ffb7 	bl	8004b04 <VL53L1_preset_mode_standard_ranging>
 8003b96:	4605      	mov	r5, r0
 8003b98:	e7ce      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_short_range(
 8003b9a:	e9cd a500 	strd	sl, r5, [sp]
 8003b9e:	4658      	mov	r0, fp
 8003ba0:	463a      	mov	r2, r7
 8003ba2:	4631      	mov	r1, r6
 8003ba4:	f001 f842 	bl	8004c2c <VL53L1_preset_mode_standard_ranging_short_range>
 8003ba8:	4605      	mov	r5, r0
 8003baa:	e7c5      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_long_range(
 8003bac:	e9cd a500 	strd	sl, r5, [sp]
 8003bb0:	4658      	mov	r0, fp
 8003bb2:	463a      	mov	r2, r7
 8003bb4:	4631      	mov	r1, r6
 8003bb6:	f001 f8cd 	bl	8004d54 <VL53L1_preset_mode_standard_ranging_long_range>
 8003bba:	4605      	mov	r5, r0
 8003bbc:	e7bc      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_mm1_cal(
 8003bbe:	e9cd a500 	strd	sl, r5, [sp]
 8003bc2:	4658      	mov	r0, fp
 8003bc4:	463a      	mov	r2, r7
 8003bc6:	4631      	mov	r1, r6
 8003bc8:	f001 f958 	bl	8004e7c <VL53L1_preset_mode_standard_ranging_mm1_cal>
 8003bcc:	4605      	mov	r5, r0
 8003bce:	e7b3      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_mm2_cal(
 8003bd0:	e9cd a500 	strd	sl, r5, [sp]
 8003bd4:	4658      	mov	r0, fp
 8003bd6:	463a      	mov	r2, r7
 8003bd8:	4631      	mov	r1, r6
 8003bda:	f001 f9e5 	bl	8004fa8 <VL53L1_preset_mode_standard_ranging_mm2_cal>
 8003bde:	4605      	mov	r5, r0
 8003be0:	e7aa      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_timed_ranging(
 8003be2:	e9cd a500 	strd	sl, r5, [sp]
 8003be6:	4658      	mov	r0, fp
 8003be8:	463a      	mov	r2, r7
 8003bea:	4631      	mov	r1, r6
 8003bec:	f001 fa72 	bl	80050d4 <VL53L1_preset_mode_timed_ranging>
 8003bf0:	4605      	mov	r5, r0
 8003bf2:	e7a1      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_timed_ranging_short_range(
 8003bf4:	e9cd a500 	strd	sl, r5, [sp]
 8003bf8:	4658      	mov	r0, fp
 8003bfa:	463a      	mov	r2, r7
 8003bfc:	4631      	mov	r1, r6
 8003bfe:	f001 fb07 	bl	8005210 <VL53L1_preset_mode_timed_ranging_short_range>
 8003c02:	4605      	mov	r5, r0
 8003c04:	e798      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_timed_ranging_long_range(
 8003c06:	e9cd a500 	strd	sl, r5, [sp]
 8003c0a:	4658      	mov	r0, fp
 8003c0c:	463a      	mov	r2, r7
 8003c0e:	4631      	mov	r1, r6
 8003c10:	f001 fb9e 	bl	8005350 <VL53L1_preset_mode_timed_ranging_long_range>
 8003c14:	4605      	mov	r5, r0
 8003c16:	e78f      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_olt(
 8003c18:	e9cd a500 	strd	sl, r5, [sp]
 8003c1c:	4658      	mov	r0, fp
 8003c1e:	463a      	mov	r2, r7
 8003c20:	4631      	mov	r1, r6
 8003c22:	f001 feaf 	bl	8005984 <VL53L1_preset_mode_olt>
 8003c26:	4605      	mov	r5, r0
 8003c28:	e786      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_singleshot_ranging(
 8003c2a:	e9cd a500 	strd	sl, r5, [sp]
 8003c2e:	4658      	mov	r0, fp
 8003c30:	463a      	mov	r2, r7
 8003c32:	4631      	mov	r1, r6
 8003c34:	f001 fe0a 	bl	800584c <VL53L1_preset_mode_singleshot_ranging>
 8003c38:	4605      	mov	r5, r0
 8003c3a:	e77d      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_low_power_auto_short_ranging(
 8003c3c:	e9cd 5101 	strd	r5, r1, [sp, #4]
 8003c40:	4658      	mov	r0, fp
 8003c42:	f8cd a000 	str.w	sl, [sp]
 8003c46:	463a      	mov	r2, r7
 8003c48:	4631      	mov	r1, r6
 8003c4a:	f001 fcc1 	bl	80055d0 <VL53L1_preset_mode_low_power_auto_short_ranging>
 8003c4e:	4605      	mov	r5, r0
 8003c50:	e772      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_low_power_auto_ranging(
 8003c52:	e9cd 5101 	strd	r5, r1, [sp, #4]
 8003c56:	4658      	mov	r0, fp
 8003c58:	f8cd a000 	str.w	sl, [sp]
 8003c5c:	463a      	mov	r2, r7
 8003c5e:	4631      	mov	r1, r6
 8003c60:	f001 fc12 	bl	8005488 <VL53L1_preset_mode_low_power_auto_ranging>
 8003c64:	4605      	mov	r5, r0
 8003c66:	e767      	b.n	8003b38 <VL53L1_data_init+0x110>
		status = VL53L1_ERROR_INVALID_PARAMS;
 8003c68:	f06f 0503 	mvn.w	r5, #3
 8003c6c:	e785      	b.n	8003b7a <VL53L1_data_init+0x152>
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8003c6e:	f06f 050e 	mvn.w	r5, #14
 8003c72:	e782      	b.n	8003b7a <VL53L1_data_init+0x152>

08003c74 <VL53L1_set_inter_measurement_period_ms>:
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8003c74:	f8b0 32b4 	ldrh.w	r3, [r0, #692]	; 0x2b4
{
 8003c78:	4602      	mov	r2, r0
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8003c7a:	b133      	cbz	r3, 8003c8a <VL53L1_set_inter_measurement_period_ms+0x16>
			inter_measurement_period_ms *
 8003c7c:	fb01 f303 	mul.w	r3, r1, r3
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8003c80:	2000      	movs	r0, #0
		pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 8003c82:	6151      	str	r1, [r2, #20]
		pdev->tim_cfg.system__intermeasurement_period = \
 8003c84:	f8c2 31ac 	str.w	r3, [r2, #428]	; 0x1ac
 8003c88:	4770      	bx	lr
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8003c8a:	f06f 000e 	mvn.w	r0, #14
}
 8003c8e:	4770      	bx	lr

08003c90 <VL53L1_get_inter_measurement_period_ms>:
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8003c90:	f8b0 22b4 	ldrh.w	r2, [r0, #692]	; 0x2b4
 8003c94:	b132      	cbz	r2, 8003ca4 <VL53L1_get_inter_measurement_period_ms+0x14>
			pdev->tim_cfg.system__intermeasurement_period /
 8003c96:	f8d0 31ac 	ldr.w	r3, [r0, #428]	; 0x1ac
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8003c9a:	2000      	movs	r0, #0
			pdev->tim_cfg.system__intermeasurement_period /
 8003c9c:	fbb3 f3f2 	udiv	r3, r3, r2
		*pinter_measurement_period_ms = \
 8003ca0:	600b      	str	r3, [r1, #0]
 8003ca2:	4770      	bx	lr
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8003ca4:	f06f 000e 	mvn.w	r0, #14
}
 8003ca8:	4770      	bx	lr
 8003caa:	bf00      	nop

08003cac <VL53L1_set_timeouts_us>:
{
 8003cac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003cae:	461d      	mov	r5, r3
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8003cb0:	f8b0 315e 	ldrh.w	r3, [r0, #350]	; 0x15e
{
 8003cb4:	b083      	sub	sp, #12
 8003cb6:	4604      	mov	r4, r0
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8003cb8:	b17b      	cbz	r3, 8003cda <VL53L1_set_timeouts_us+0x2e>
 8003cba:	4608      	mov	r0, r1
			VL53L1_calc_timeout_register_values(
 8003cbc:	f504 77ce 	add.w	r7, r4, #412	; 0x19c
 8003cc0:	f504 76c2 	add.w	r6, r4, #388	; 0x184
 8003cc4:	4611      	mov	r1, r2
		pdev->range_config_timeout_us    = range_config_timeout_us;
 8003cc6:	6125      	str	r5, [r4, #16]
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8003cc8:	e9c4 0202 	strd	r0, r2, [r4, #8]
		status =
 8003ccc:	462a      	mov	r2, r5
 8003cce:	e9cd 6700 	strd	r6, r7, [sp]
 8003cd2:	f002 f8e7 	bl	8005ea4 <VL53L1_calc_timeout_register_values>
}
 8003cd6:	b003      	add	sp, #12
 8003cd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8003cda:	f06f 000e 	mvn.w	r0, #14
 8003cde:	e7fa      	b.n	8003cd6 <VL53L1_set_timeouts_us+0x2a>

08003ce0 <VL53L1_get_timeouts_us>:
{
 8003ce0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ce4:	4604      	mov	r4, r0
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8003ce6:	f8b0 015e 	ldrh.w	r0, [r0, #350]	; 0x15e
 8003cea:	b360      	cbz	r0, 8003d46 <VL53L1_get_timeouts_us+0x66>
 8003cec:	460f      	mov	r7, r1
		macro_period_us =
 8003cee:	f894 11a2 	ldrb.w	r1, [r4, #418]	; 0x1a2
 8003cf2:	4616      	mov	r6, r2
 8003cf4:	461d      	mov	r5, r3
 8003cf6:	f002 f87b 	bl	8005df0 <VL53L1_calc_macro_period_us>
 8003cfa:	4680      	mov	r8, r0
			VL53L1_calc_timeout_us(
 8003cfc:	4601      	mov	r1, r0
 8003cfe:	f894 018b 	ldrb.w	r0, [r4, #395]	; 0x18b
 8003d02:	f002 f8b5 	bl	8005e70 <VL53L1_calc_timeout_us>
		*pphasecal_config_timeout_us =
 8003d06:	6038      	str	r0, [r7, #0]
		timeout_encoded =
 8003d08:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
			VL53L1_calc_decoded_timeout_us(
 8003d0c:	4641      	mov	r1, r8
			(uint16_t)pdev->tim_cfg.mm_config__timeout_macrop_a_lo;
 8003d0e:	f894 019d 	ldrb.w	r0, [r4, #413]	; 0x19d
		timeout_encoded = (timeout_encoded << 8) +
 8003d12:	eb00 2003 	add.w	r0, r0, r3, lsl #8
			VL53L1_calc_decoded_timeout_us(
 8003d16:	b280      	uxth	r0, r0
 8003d18:	f002 f8b4 	bl	8005e84 <VL53L1_calc_decoded_timeout_us>
		*pmm_config_timeout_us =
 8003d1c:	6030      	str	r0, [r6, #0]
		timeout_encoded =
 8003d1e:	f894 31a0 	ldrb.w	r3, [r4, #416]	; 0x1a0
			VL53L1_calc_decoded_timeout_us(
 8003d22:	4641      	mov	r1, r8
			(uint16_t)pdev->tim_cfg.range_config__timeout_macrop_a_lo;
 8003d24:	f894 01a1 	ldrb.w	r0, [r4, #417]	; 0x1a1
		timeout_encoded = (timeout_encoded << 8) +
 8003d28:	eb00 2003 	add.w	r0, r0, r3, lsl #8
			VL53L1_calc_decoded_timeout_us(
 8003d2c:	b280      	uxth	r0, r0
 8003d2e:	f002 f8a9 	bl	8005e84 <VL53L1_calc_decoded_timeout_us>
		*prange_config_timeout_us =
 8003d32:	6028      	str	r0, [r5, #0]
		pdev->phasecal_config_timeout_us = *pphasecal_config_timeout_us;
 8003d34:	683b      	ldr	r3, [r7, #0]
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8003d36:	2000      	movs	r0, #0
		pdev->phasecal_config_timeout_us = *pphasecal_config_timeout_us;
 8003d38:	60a3      	str	r3, [r4, #8]
		pdev->mm_config_timeout_us       = *pmm_config_timeout_us;
 8003d3a:	6833      	ldr	r3, [r6, #0]
 8003d3c:	60e3      	str	r3, [r4, #12]
		pdev->range_config_timeout_us    = *prange_config_timeout_us;
 8003d3e:	682b      	ldr	r3, [r5, #0]
 8003d40:	6123      	str	r3, [r4, #16]
}
 8003d42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8003d46:	f06f 000e 	mvn.w	r0, #14
 8003d4a:	e7fa      	b.n	8003d42 <VL53L1_get_timeouts_us+0x62>

08003d4c <VL53L1_get_sequence_config_bit>:
	if (bit_id <= VL53L1_DEVICESEQUENCECONFIG_RANGE) {
 8003d4c:	2907      	cmp	r1, #7
 8003d4e:	d812      	bhi.n	8003d76 <VL53L1_get_sequence_config_bit+0x2a>
 8003d50:	f890 31c5 	ldrb.w	r3, [r0, #453]	; 0x1c5
		if (bit_id > 0) {
 8003d54:	b151      	cbz	r1, 8003d6c <VL53L1_get_sequence_config_bit+0x20>
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8003d56:	2000      	movs	r0, #0
{
 8003d58:	b410      	push	{r4}
			bit_mask  = 0x01 << bit_id;
 8003d5a:	2401      	movs	r4, #1
 8003d5c:	408c      	lsls	r4, r1
			*pvalue  = *pvalue >> bit_id;
 8003d5e:	4023      	ands	r3, r4
}
 8003d60:	f85d 4b04 	ldr.w	r4, [sp], #4
			*pvalue  = *pvalue >> bit_id;
 8003d64:	fa43 f101 	asr.w	r1, r3, r1
 8003d68:	7011      	strb	r1, [r2, #0]
}
 8003d6a:	4770      	bx	lr
		*pvalue =
 8003d6c:	f003 0301 	and.w	r3, r3, #1
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8003d70:	4608      	mov	r0, r1
		*pvalue =
 8003d72:	7013      	strb	r3, [r2, #0]
 8003d74:	4770      	bx	lr
		status = VL53L1_ERROR_INVALID_PARAMS;
 8003d76:	f06f 0003 	mvn.w	r0, #3
}
 8003d7a:	4770      	bx	lr

08003d7c <VL53L1_set_user_zone>:
{
 8003d7c:	b538      	push	{r3, r4, r5, lr}
 8003d7e:	460c      	mov	r4, r1
 8003d80:	4605      	mov	r5, r0
	VL53L1_encode_row_col(
 8003d82:	f200 12c3 	addw	r2, r0, #451	; 0x1c3
 8003d86:	7809      	ldrb	r1, [r1, #0]
 8003d88:	7860      	ldrb	r0, [r4, #1]
 8003d8a:	f002 f93f 	bl	800600c <VL53L1_encode_row_col>
	VL53L1_encode_zone_size(
 8003d8e:	78a0      	ldrb	r0, [r4, #2]
 8003d90:	f505 72e2 	add.w	r2, r5, #452	; 0x1c4
 8003d94:	78e1      	ldrb	r1, [r4, #3]
 8003d96:	f002 f94f 	bl	8006038 <VL53L1_encode_zone_size>
}
 8003d9a:	2000      	movs	r0, #0
 8003d9c:	bd38      	pop	{r3, r4, r5, pc}
 8003d9e:	bf00      	nop

08003da0 <VL53L1_get_user_zone>:
{
 8003da0:	b538      	push	{r3, r4, r5, lr}
 8003da2:	460c      	mov	r4, r1
 8003da4:	4605      	mov	r5, r0
	VL53L1_decode_row_col(
 8003da6:	460a      	mov	r2, r1
 8003da8:	f890 01c3 	ldrb.w	r0, [r0, #451]	; 0x1c3
 8003dac:	3101      	adds	r1, #1
 8003dae:	f002 f9a9 	bl	8006104 <VL53L1_decode_row_col>
	VL53L1_decode_zone_size(
 8003db2:	f895 01c4 	ldrb.w	r0, [r5, #452]	; 0x1c4
 8003db6:	1ce2      	adds	r2, r4, #3
 8003db8:	1ca1      	adds	r1, r4, #2
 8003dba:	f002 f937 	bl	800602c <VL53L1_decode_zone_size>
}
 8003dbe:	2000      	movs	r0, #0
 8003dc0:	bd38      	pop	{r3, r4, r5, pc}
 8003dc2:	bf00      	nop

08003dc4 <VL53L1_get_preset_mode_timing_cfg>:
	switch (device_preset_mode) {
 8003dc4:	3901      	subs	r1, #1
{
 8003dc6:	b430      	push	{r4, r5}
	switch (device_preset_mode) {
 8003dc8:	2925      	cmp	r1, #37	; 0x25
 8003dca:	d84a      	bhi.n	8003e62 <VL53L1_get_preset_mode_timing_cfg+0x9e>
 8003dcc:	e8df f001 	tbb	[pc, r1]
 8003dd0:	37373737 	.word	0x37373737
 8003dd4:	25252537 	.word	0x25252537
 8003dd8:	49494949 	.word	0x49494949
 8003ddc:	49494949 	.word	0x49494949
 8003de0:	49492537 	.word	0x49492537
 8003de4:	49494949 	.word	0x49494949
 8003de8:	49494949 	.word	0x49494949
 8003dec:	49494949 	.word	0x49494949
 8003df0:	13494949 	.word	0x13494949
 8003df4:	1313      	.short	0x1313
				pdev->tuning_parms.tp_dss_target_timed_mcps;
 8003df6:	f8b0 50cc 	ldrh.w	r5, [r0, #204]	; 0xcc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8003dfa:	2100      	movs	r1, #0
				pdev->tuning_parms.tp_phasecal_timeout_timed_us;
 8003dfc:	f8d0 40d4 	ldr.w	r4, [r0, #212]	; 0xd4
		*pdss_config__target_total_rate_mcps =
 8003e00:	8015      	strh	r5, [r2, #0]
		*pphasecal_config_timeout_us =
 8003e02:	601c      	str	r4, [r3, #0]
		*pmm_config_timeout_us =
 8003e04:	9a02      	ldr	r2, [sp, #8]
				pdev->tuning_parms.tp_mm_timeout_lpa_us;
 8003e06:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
		*pmm_config_timeout_us =
 8003e0a:	6013      	str	r3, [r2, #0]
		*prange_config_timeout_us =
 8003e0c:	9a03      	ldr	r2, [sp, #12]
				pdev->tuning_parms.tp_range_timeout_lpa_us;
 8003e0e:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
}
 8003e12:	4608      	mov	r0, r1
		*prange_config_timeout_us =
 8003e14:	6013      	str	r3, [r2, #0]
}
 8003e16:	bc30      	pop	{r4, r5}
 8003e18:	4770      	bx	lr
				pdev->tuning_parms.tp_dss_target_timed_mcps;
 8003e1a:	f8b0 50cc 	ldrh.w	r5, [r0, #204]	; 0xcc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8003e1e:	2100      	movs	r1, #0
				pdev->tuning_parms.tp_phasecal_timeout_timed_us;
 8003e20:	f8d0 40d4 	ldr.w	r4, [r0, #212]	; 0xd4
		*pdss_config__target_total_rate_mcps =
 8003e24:	8015      	strh	r5, [r2, #0]
		*pphasecal_config_timeout_us =
 8003e26:	601c      	str	r4, [r3, #0]
		*pmm_config_timeout_us =
 8003e28:	9a02      	ldr	r2, [sp, #8]
				pdev->tuning_parms.tp_mm_timeout_timed_us;
 8003e2a:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
		*pmm_config_timeout_us =
 8003e2e:	6013      	str	r3, [r2, #0]
		*prange_config_timeout_us =
 8003e30:	9a03      	ldr	r2, [sp, #12]
				pdev->tuning_parms.tp_range_timeout_timed_us;
 8003e32:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
}
 8003e36:	4608      	mov	r0, r1
		*prange_config_timeout_us =
 8003e38:	6013      	str	r3, [r2, #0]
}
 8003e3a:	bc30      	pop	{r4, r5}
 8003e3c:	4770      	bx	lr
				pdev->tuning_parms.tp_dss_target_lite_mcps;
 8003e3e:	f8b0 50ca 	ldrh.w	r5, [r0, #202]	; 0xca
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8003e42:	2100      	movs	r1, #0
				pdev->tuning_parms.tp_phasecal_timeout_lite_us;
 8003e44:	f8d0 40d0 	ldr.w	r4, [r0, #208]	; 0xd0
		*pdss_config__target_total_rate_mcps =
 8003e48:	8015      	strh	r5, [r2, #0]
		*pphasecal_config_timeout_us =
 8003e4a:	601c      	str	r4, [r3, #0]
		*pmm_config_timeout_us =
 8003e4c:	9a02      	ldr	r2, [sp, #8]
				pdev->tuning_parms.tp_mm_timeout_lite_us;
 8003e4e:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
		*pmm_config_timeout_us =
 8003e52:	6013      	str	r3, [r2, #0]
		*prange_config_timeout_us =
 8003e54:	9a03      	ldr	r2, [sp, #12]
				pdev->tuning_parms.tp_range_timeout_lite_us;
 8003e56:	f8d0 30e4 	ldr.w	r3, [r0, #228]	; 0xe4
}
 8003e5a:	4608      	mov	r0, r1
		*prange_config_timeout_us =
 8003e5c:	6013      	str	r3, [r2, #0]
}
 8003e5e:	bc30      	pop	{r4, r5}
 8003e60:	4770      	bx	lr
		status = VL53L1_ERROR_INVALID_PARAMS;
 8003e62:	f06f 0103 	mvn.w	r1, #3
}
 8003e66:	bc30      	pop	{r4, r5}
 8003e68:	4608      	mov	r0, r1
 8003e6a:	4770      	bx	lr

08003e6c <VL53L1_set_preset_mode>:
{
 8003e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e70:	b085      	sub	sp, #20
 8003e72:	4699      	mov	r9, r3
 8003e74:	460d      	mov	r5, r1
 8003e76:	4604      	mov	r4, r0
	pdev->mm_config_timeout_us        = mm_config_timeout_us;
 8003e78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
	VL53L1_init_ll_driver_state(
 8003e7a:	2103      	movs	r1, #3
	pdev->preset_mode                 = device_preset_mode;
 8003e7c:	7045      	strb	r5, [r0, #1]
	switch (device_preset_mode) {
 8003e7e:	3d01      	subs	r5, #1
	pdev->mm_config_timeout_us        = mm_config_timeout_us;
 8003e80:	60c3      	str	r3, [r0, #12]
{
 8003e82:	4692      	mov	sl, r2
	pdev->range_config_timeout_us     = range_config_timeout_us;
 8003e84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
	VL53L1_static_config_t        *pstatic       = &(pdev->stat_cfg);
 8003e86:	f500 7bb2 	add.w	fp, r0, #356	; 0x164
	VL53L1_general_config_t       *pgeneral      = &(pdev->gen_cfg);
 8003e8a:	f500 77c2 	add.w	r7, r0, #388	; 0x184
	VL53L1_timing_config_t        *ptiming       = &(pdev->tim_cfg);
 8003e8e:	f500 78ce 	add.w	r8, r0, #412	; 0x19c
	pdev->range_config_timeout_us     = range_config_timeout_us;
 8003e92:	6103      	str	r3, [r0, #16]
	VL53L1_dynamic_config_t       *pdynamic      = &(pdev->dyn_cfg);
 8003e94:	f500 76da 	add.w	r6, r0, #436	; 0x1b4
	pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 8003e98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003e9a:	6143      	str	r3, [r0, #20]
	VL53L1_init_ll_driver_state(
 8003e9c:	f001 fe10 	bl	8005ac0 <VL53L1_init_ll_driver_state>
	VL53L1_system_control_t       *psystem       = &(pdev->sys_ctrl);
 8003ea0:	f504 72e4 	add.w	r2, r4, #456	; 0x1c8
	VL53L1_tuning_parm_storage_t  *ptuning_parms = &(pdev->tuning_parms);
 8003ea4:	f104 01a4 	add.w	r1, r4, #164	; 0xa4
	VL53L1_low_power_auto_data_t  *plpadata      =
 8003ea8:	f504 7039 	add.w	r0, r4, #740	; 0x2e4
	switch (device_preset_mode) {
 8003eac:	2d25      	cmp	r5, #37	; 0x25
 8003eae:	f200 80b1 	bhi.w	8004014 <VL53L1_set_preset_mode+0x1a8>
 8003eb2:	e8df f005 	tbb	[pc, r5]
 8003eb6:	4a41      	.short	0x4a41
 8003eb8:	6e655c53 	.word	0x6e655c53
 8003ebc:	afaf8077 	.word	0xafaf8077
 8003ec0:	afafafaf 	.word	0xafafafaf
 8003ec4:	9289afaf 	.word	0x9289afaf
 8003ec8:	afafafaf 	.word	0xafafafaf
 8003ecc:	afafafaf 	.word	0xafafafaf
 8003ed0:	afafafaf 	.word	0xafafafaf
 8003ed4:	afafafaf 	.word	0xafafafaf
 8003ed8:	13a59baf 	.word	0x13a59baf
		status = VL53L1_preset_mode_low_power_auto_long_ranging(
 8003edc:	9002      	str	r0, [sp, #8]
 8003ede:	4633      	mov	r3, r6
 8003ee0:	9101      	str	r1, [sp, #4]
 8003ee2:	4658      	mov	r0, fp
 8003ee4:	9200      	str	r2, [sp, #0]
 8003ee6:	4639      	mov	r1, r7
 8003ee8:	4642      	mov	r2, r8
 8003eea:	f001 fc11 	bl	8005710 <VL53L1_preset_mode_low_power_auto_long_ranging>
	if (status == VL53L1_ERROR_NONE) {
 8003eee:	bb00      	cbnz	r0, 8003f32 <VL53L1_set_preset_mode+0xc6>
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8003ef0:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
		pstatic->dss_config__target_total_rate_mcps =
 8003ef4:	f8a4 a164 	strh.w	sl, [r4, #356]	; 0x164
		pdev->dss_config__target_total_rate_mcps    =
 8003ef8:	f8a4 a018 	strh.w	sl, [r4, #24]
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8003efc:	2b00      	cmp	r3, #0
 8003efe:	f000 808c 	beq.w	800401a <VL53L1_set_preset_mode+0x1ae>
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8003f02:	9a0e      	ldr	r2, [sp, #56]	; 0x38
		status =
 8003f04:	4648      	mov	r0, r9
		pdev->phasecal_config_timeout_us = phasecal_config_timeout_us;
 8003f06:	f8c4 9008 	str.w	r9, [r4, #8]
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8003f0a:	60e2      	str	r2, [r4, #12]
		status =
 8003f0c:	4611      	mov	r1, r2
		pdev->range_config_timeout_us    = range_config_timeout_us;
 8003f0e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003f10:	6122      	str	r2, [r4, #16]
		status =
 8003f12:	f8cd 8004 	str.w	r8, [sp, #4]
 8003f16:	9700      	str	r7, [sp, #0]
 8003f18:	f001 ffc4 	bl	8005ea4 <VL53L1_calc_timeout_register_values>
	if (status == VL53L1_ERROR_NONE)
 8003f1c:	b948      	cbnz	r0, 8003f32 <VL53L1_set_preset_mode+0xc6>
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8003f1e:	f8b4 32b4 	ldrh.w	r3, [r4, #692]	; 0x2b4
 8003f22:	2b00      	cmp	r3, #0
 8003f24:	d079      	beq.n	800401a <VL53L1_set_preset_mode+0x1ae>
			inter_measurement_period_ms *
 8003f26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003f28:	fb02 f303 	mul.w	r3, r2, r3
		pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 8003f2c:	6162      	str	r2, [r4, #20]
		pdev->tim_cfg.system__intermeasurement_period = \
 8003f2e:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
}
 8003f32:	b005      	add	sp, #20
 8003f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status = VL53L1_preset_mode_standard_ranging(
 8003f38:	9101      	str	r1, [sp, #4]
 8003f3a:	4633      	mov	r3, r6
 8003f3c:	9200      	str	r2, [sp, #0]
 8003f3e:	4658      	mov	r0, fp
 8003f40:	4642      	mov	r2, r8
 8003f42:	4639      	mov	r1, r7
 8003f44:	f000 fdde 	bl	8004b04 <VL53L1_preset_mode_standard_ranging>
		break;
 8003f48:	e7d1      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_short_range(
 8003f4a:	9101      	str	r1, [sp, #4]
 8003f4c:	4633      	mov	r3, r6
 8003f4e:	9200      	str	r2, [sp, #0]
 8003f50:	4658      	mov	r0, fp
 8003f52:	4642      	mov	r2, r8
 8003f54:	4639      	mov	r1, r7
 8003f56:	f000 fe69 	bl	8004c2c <VL53L1_preset_mode_standard_ranging_short_range>
		break;
 8003f5a:	e7c8      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_long_range(
 8003f5c:	9101      	str	r1, [sp, #4]
 8003f5e:	4633      	mov	r3, r6
 8003f60:	9200      	str	r2, [sp, #0]
 8003f62:	4658      	mov	r0, fp
 8003f64:	4642      	mov	r2, r8
 8003f66:	4639      	mov	r1, r7
 8003f68:	f000 fef4 	bl	8004d54 <VL53L1_preset_mode_standard_ranging_long_range>
		break;
 8003f6c:	e7bf      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_mm1_cal(
 8003f6e:	9101      	str	r1, [sp, #4]
 8003f70:	4633      	mov	r3, r6
 8003f72:	9200      	str	r2, [sp, #0]
 8003f74:	4658      	mov	r0, fp
 8003f76:	4642      	mov	r2, r8
 8003f78:	4639      	mov	r1, r7
 8003f7a:	f000 ff7f 	bl	8004e7c <VL53L1_preset_mode_standard_ranging_mm1_cal>
		break;
 8003f7e:	e7b6      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_mm2_cal(
 8003f80:	9101      	str	r1, [sp, #4]
 8003f82:	4633      	mov	r3, r6
 8003f84:	9200      	str	r2, [sp, #0]
 8003f86:	4658      	mov	r0, fp
 8003f88:	4642      	mov	r2, r8
 8003f8a:	4639      	mov	r1, r7
 8003f8c:	f001 f80c 	bl	8004fa8 <VL53L1_preset_mode_standard_ranging_mm2_cal>
		break;
 8003f90:	e7ad      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_timed_ranging(
 8003f92:	9101      	str	r1, [sp, #4]
 8003f94:	4633      	mov	r3, r6
 8003f96:	9200      	str	r2, [sp, #0]
 8003f98:	4658      	mov	r0, fp
 8003f9a:	4642      	mov	r2, r8
 8003f9c:	4639      	mov	r1, r7
 8003f9e:	f001 f899 	bl	80050d4 <VL53L1_preset_mode_timed_ranging>
		break;
 8003fa2:	e7a4      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_timed_ranging_short_range(
 8003fa4:	9101      	str	r1, [sp, #4]
 8003fa6:	4633      	mov	r3, r6
 8003fa8:	9200      	str	r2, [sp, #0]
 8003faa:	4658      	mov	r0, fp
 8003fac:	4642      	mov	r2, r8
 8003fae:	4639      	mov	r1, r7
 8003fb0:	f001 f92e 	bl	8005210 <VL53L1_preset_mode_timed_ranging_short_range>
		break;
 8003fb4:	e79b      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_timed_ranging_long_range(
 8003fb6:	9101      	str	r1, [sp, #4]
 8003fb8:	4633      	mov	r3, r6
 8003fba:	9200      	str	r2, [sp, #0]
 8003fbc:	4658      	mov	r0, fp
 8003fbe:	4642      	mov	r2, r8
 8003fc0:	4639      	mov	r1, r7
 8003fc2:	f001 f9c5 	bl	8005350 <VL53L1_preset_mode_timed_ranging_long_range>
		break;
 8003fc6:	e792      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_olt(
 8003fc8:	9101      	str	r1, [sp, #4]
 8003fca:	4633      	mov	r3, r6
 8003fcc:	9200      	str	r2, [sp, #0]
 8003fce:	4658      	mov	r0, fp
 8003fd0:	4642      	mov	r2, r8
 8003fd2:	4639      	mov	r1, r7
 8003fd4:	f001 fcd6 	bl	8005984 <VL53L1_preset_mode_olt>
		break;
 8003fd8:	e789      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_singleshot_ranging(
 8003fda:	9101      	str	r1, [sp, #4]
 8003fdc:	4633      	mov	r3, r6
 8003fde:	9200      	str	r2, [sp, #0]
 8003fe0:	4658      	mov	r0, fp
 8003fe2:	4642      	mov	r2, r8
 8003fe4:	4639      	mov	r1, r7
 8003fe6:	f001 fc31 	bl	800584c <VL53L1_preset_mode_singleshot_ranging>
		break;
 8003fea:	e780      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_low_power_auto_short_ranging(
 8003fec:	9002      	str	r0, [sp, #8]
 8003fee:	4633      	mov	r3, r6
 8003ff0:	9101      	str	r1, [sp, #4]
 8003ff2:	4658      	mov	r0, fp
 8003ff4:	9200      	str	r2, [sp, #0]
 8003ff6:	4639      	mov	r1, r7
 8003ff8:	4642      	mov	r2, r8
 8003ffa:	f001 fae9 	bl	80055d0 <VL53L1_preset_mode_low_power_auto_short_ranging>
		break;
 8003ffe:	e776      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_low_power_auto_ranging(
 8004000:	9002      	str	r0, [sp, #8]
 8004002:	4633      	mov	r3, r6
 8004004:	9101      	str	r1, [sp, #4]
 8004006:	4658      	mov	r0, fp
 8004008:	9200      	str	r2, [sp, #0]
 800400a:	4639      	mov	r1, r7
 800400c:	4642      	mov	r2, r8
 800400e:	f001 fa3b 	bl	8005488 <VL53L1_preset_mode_low_power_auto_ranging>
		break;
 8004012:	e76c      	b.n	8003eee <VL53L1_set_preset_mode+0x82>
		status = VL53L1_ERROR_INVALID_PARAMS;
 8004014:	f06f 0003 	mvn.w	r0, #3
 8004018:	e78b      	b.n	8003f32 <VL53L1_set_preset_mode+0xc6>
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 800401a:	f06f 000e 	mvn.w	r0, #14
 800401e:	e788      	b.n	8003f32 <VL53L1_set_preset_mode+0xc6>

08004020 <VL53L1_get_lite_sigma_threshold>:
			pdev->tim_cfg.range_config__sigma_thresh;
 8004020:	f8b0 31a6 	ldrh.w	r3, [r0, #422]	; 0x1a6
}
 8004024:	2000      	movs	r0, #0
	*plite_sigma =
 8004026:	800b      	strh	r3, [r1, #0]
}
 8004028:	4770      	bx	lr
 800402a:	bf00      	nop

0800402c <VL53L1_set_lite_sigma_threshold>:
	pdev->tim_cfg.range_config__sigma_thresh = lite_sigma;
 800402c:	f8a0 11a6 	strh.w	r1, [r0, #422]	; 0x1a6
}
 8004030:	2000      	movs	r0, #0
 8004032:	4770      	bx	lr

08004034 <VL53L1_get_lite_min_count_rate>:
			pdev->tim_cfg.range_config__min_count_rate_rtn_limit_mcps;
 8004034:	f8b0 31a8 	ldrh.w	r3, [r0, #424]	; 0x1a8
}
 8004038:	2000      	movs	r0, #0
	*plite_mincountrate =
 800403a:	800b      	strh	r3, [r1, #0]
}
 800403c:	4770      	bx	lr
 800403e:	bf00      	nop

08004040 <VL53L1_set_lite_min_count_rate>:
	pdev->tim_cfg.range_config__min_count_rate_rtn_limit_mcps =
 8004040:	f8a0 11a8 	strh.w	r1, [r0, #424]	; 0x1a8
}
 8004044:	2000      	movs	r0, #0
 8004046:	4770      	bx	lr

08004048 <VL53L1_init_and_start_range>:

VL53L1_Error VL53L1_init_and_start_range(
	VL53L1_DEV                     Dev,
	uint8_t                        measurement_mode,
	VL53L1_DeviceConfigLevel       device_config_level)
{
 8004048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800404c:	4604      	mov	r4, r0
	pdev->measurement_mode = measurement_mode;

	/* Merge measurement mode with mode_start */

	psystem->system__mode_start =
		(psystem->system__mode_start &
 800404e:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
{
 8004052:	4616      	mov	r6, r2
		VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK) |
		measurement_mode;

	/* copy in rit from xtalk config */

	pdev->stat_cfg.algo__range_ignore_threshold_mcps =
 8004054:	f8b0 0142 	ldrh.w	r0, [r0, #322]	; 0x142
		(psystem->system__mode_start &
 8004058:	f003 030f 	and.w	r3, r3, #15
	/* Start Patch_LowPowerAutoMode */

	/* doing this ensures stop_range followed by a get_device_results does
	 * not mess up the counters */

	if (pdev->low_power_auto_data.low_power_auto_range_count == 0xFF) {
 800405c:	f894 22e6 	ldrb.w	r2, [r4, #742]	; 0x2e6
	pdev->measurement_mode = measurement_mode;
 8004060:	70a1      	strb	r1, [r4, #2]
{
 8004062:	b0c9      	sub	sp, #292	; 0x124
		VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK) |
 8004064:	4319      	orrs	r1, r3
	if (pdev->low_power_auto_data.low_power_auto_range_count == 0xFF) {
 8004066:	2aff      	cmp	r2, #255	; 0xff
	pdev->stat_cfg.algo__range_ignore_threshold_mcps =
 8004068:	f8a4 017c 	strh.w	r0, [r4, #380]	; 0x17c
	psystem->system__mode_start =
 800406c:	f884 11cc 	strb.w	r1, [r4, #460]	; 0x1cc
	if (pdev->low_power_auto_data.low_power_auto_range_count == 0xFF) {
 8004070:	d102      	bne.n	8004078 <VL53L1_init_and_start_range+0x30>
		pdev->low_power_auto_data.low_power_auto_range_count = 0x0;
 8004072:	2300      	movs	r3, #0
 8004074:	f884 32e6 	strb.w	r3, [r4, #742]	; 0x2e6
	}

	/* For Presence. Override threshold config */
	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8004078:	f8d4 22e4 	ldr.w	r2, [r4, #740]	; 0x2e4
 800407c:	4bbf      	ldr	r3, [pc, #764]	; (800437c <VL53L1_init_and_start_range+0x334>)
 800407e:	4013      	ands	r3, r2
 8004080:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004084:	d00e      	beq.n	80040a4 <VL53L1_init_and_start_range+0x5c>
			device_config_level =
				VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS;
		}
	}

	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8004086:	4abe      	ldr	r2, [pc, #760]	; (8004380 <VL53L1_init_and_start_range+0x338>)
 8004088:	4293      	cmp	r3, r2
 800408a:	d03e      	beq.n	800410a <VL53L1_init_and_start_range+0xc2>

	/*
	 * Determine Initial I2C index
	 */

	switch (device_config_level) {
 800408c:	1e73      	subs	r3, r6, #1
 800408e:	2b05      	cmp	r3, #5
 8004090:	f200 8178 	bhi.w	8004384 <VL53L1_init_and_start_range+0x33c>
 8004094:	e8df f013 	tbh	[pc, r3, lsl #1]
 8004098:	01260109 	.word	0x01260109
 800409c:	00f00141 	.word	0x00f00141
 80040a0:	015a01a8 	.word	0x015a01a8
		if ((pdev->dyn_cfg.system__sequence_config & (
 80040a4:	f894 31c5 	ldrb.w	r3, [r4, #453]	; 0x1c5
		pdev->gen_cfg.system__interrupt_config_gpio = 1 << 5;
 80040a8:	2220      	movs	r2, #32
			pdev->gen_cfg.system__interrupt_config_gpio;
 80040aa:	f894 1186 	ldrb.w	r1, [r4, #390]	; 0x186
		if ((pdev->dyn_cfg.system__sequence_config & (
 80040ae:	f013 0f60 	tst.w	r3, #96	; 0x60
		pdev->gen_cfg.system__interrupt_config_gpio = 1 << 5;
 80040b2:	f884 2186 	strb.w	r2, [r4, #390]	; 0x186
		pdev->low_power_auto_data.saved_interrupt_config =
 80040b6:	f884 12e7 	strb.w	r1, [r4, #743]	; 0x2e7
		if ((pdev->dyn_cfg.system__sequence_config & (
 80040ba:	f000 80d8 	beq.w	800426e <VL53L1_init_and_start_range+0x226>
			pdev->customer.algo__part_to_part_range_offset_mm = 0x0;
 80040be:	2200      	movs	r2, #0
 80040c0:	f8d4 02e4 	ldr.w	r0, [r4, #740]	; 0x2e4
		if (device_config_level <
 80040c4:	2e04      	cmp	r6, #4
 80040c6:	4bad      	ldr	r3, [pc, #692]	; (800437c <VL53L1_init_and_start_range+0x334>)
 80040c8:	f8a4 2054 	strh.w	r2, [r4, #84]	; 0x54
 80040cc:	ea03 0300 	and.w	r3, r3, r0
 80040d0:	d8d9      	bhi.n	8004086 <VL53L1_init_and_start_range+0x3e>
	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 80040d2:	4aab      	ldr	r2, [pc, #684]	; (8004380 <VL53L1_init_and_start_range+0x338>)
 80040d4:	4293      	cmp	r3, r2
 80040d6:	d01a      	beq.n	800410e <VL53L1_init_and_start_range+0xc6>
 80040d8:	234d      	movs	r3, #77	; 0x4d
 80040da:	2037      	movs	r0, #55	; 0x37
 80040dc:	f64f 76f4 	movw	r6, #65524	; 0xfff4
 80040e0:	2501      	movs	r5, #1
 80040e2:	9307      	str	r3, [sp, #28]
 80040e4:	2317      	movs	r3, #23
 80040e6:	f04f 0b64 	mov.w	fp, #100	; 0x64
 80040ea:	9500      	str	r5, [sp, #0]
 80040ec:	9306      	str	r3, [sp, #24]
 80040ee:	2300      	movs	r3, #0
 80040f0:	46a9      	mov	r9, r5
 80040f2:	46aa      	mov	sl, r5
 80040f4:	46a8      	mov	r8, r5
 80040f6:	277b      	movs	r7, #123	; 0x7b
 80040f8:	e9cd 3004 	strd	r3, r0, [sp, #16]
 80040fc:	2376      	movs	r3, #118	; 0x76
 80040fe:	e9cd 6302 	strd	r6, r3, [sp, #8]
	case VL53L1_DEVICECONFIGLEVEL_FULL:
		i2c_index = VL53L1_STATIC_NVM_MANAGED_I2C_INDEX;
		break;
	case VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS:
		i2c_index = VL53L1_CUSTOMER_NVM_MANAGED_I2C_INDEX;
 8004102:	230d      	movs	r3, #13
	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8004104:	2605      	movs	r6, #5
		i2c_index = VL53L1_CUSTOMER_NVM_MANAGED_I2C_INDEX;
 8004106:	9301      	str	r3, [sp, #4]
 8004108:	e01a      	b.n	8004140 <VL53L1_init_and_start_range+0xf8>
 800410a:	f894 12e7 	ldrb.w	r1, [r4, #743]	; 0x2e7
		pdev->gen_cfg.system__interrupt_config_gpio =
 800410e:	2359      	movs	r3, #89	; 0x59
 8004110:	f04f 0e23 	mov.w	lr, #35	; 0x23
 8004114:	2501      	movs	r5, #1
 8004116:	f884 1186 	strb.w	r1, [r4, #390]	; 0x186
 800411a:	9307      	str	r3, [sp, #28]
 800411c:	2343      	movs	r3, #67	; 0x43
 800411e:	2100      	movs	r1, #0
 8004120:	f04f 0b70 	mov.w	fp, #112	; 0x70
 8004124:	46a9      	mov	r9, r5
 8004126:	46aa      	mov	sl, r5
 8004128:	46a8      	mov	r8, r5
 800412a:	2787      	movs	r7, #135	; 0x87
		device_config_level = VL53L1_DEVICECONFIGLEVEL_FULL;
 800412c:	2606      	movs	r6, #6
		pdev->gen_cfg.system__interrupt_config_gpio =
 800412e:	9500      	str	r5, [sp, #0]
		i2c_index = VL53L1_STATIC_NVM_MANAGED_I2C_INDEX;
 8004130:	9501      	str	r5, [sp, #4]
		pdev->gen_cfg.system__interrupt_config_gpio =
 8004132:	e9cd 3e05 	strd	r3, lr, [sp, #20]
 8004136:	230c      	movs	r3, #12
 8004138:	9304      	str	r3, [sp, #16]
 800413a:	2382      	movs	r3, #130	; 0x82
 800413c:	e9cd 1302 	strd	r1, r3, [sp, #8]

	/* Initialize buffer */

	pbuffer = &buffer[0];
	for (i = 0 ; i < i2c_buffer_size_bytes ; i++) {
		*pbuffer++ = 0;
 8004140:	1e7a      	subs	r2, r7, #1
 8004142:	2100      	movs	r1, #0
 8004144:	a808      	add	r0, sp, #32
 8004146:	b292      	uxth	r2, r2
 8004148:	3201      	adds	r2, #1
 800414a:	f014 fe16 	bl	8018d7a <memset>
	}

	/* Build I2C buffer */

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_FULL &&
 800414e:	2e05      	cmp	r6, #5
 8004150:	d87a      	bhi.n	8004248 <VL53L1_init_and_start_range+0x200>
 8004152:	2201      	movs	r2, #1
	VL53L1_Error status = VL53L1_ERROR_NONE;
 8004154:	2000      	movs	r0, #0
				pstatic_nvm,
				VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS &&
 8004156:	f1b8 0f00 	cmp.w	r8, #0
 800415a:	d14a      	bne.n	80041f2 <VL53L1_init_and_start_range+0x1aa>
				pcustomer_nvm,
				VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_STATIC_ONWARDS &&
 800415c:	f1ba 0f00 	cmp.w	sl, #0
 8004160:	d00c      	beq.n	800417c <VL53L1_init_and_start_range+0x134>
 8004162:	b15a      	cbz	r2, 800417c <VL53L1_init_and_start_range+0x134>
		status == VL53L1_ERROR_NONE) {

		i2c_buffer_offset_bytes = \
			VL53L1_STATIC_CONFIG_I2C_INDEX - i2c_index;

		status =
 8004164:	9b06      	ldr	r3, [sp, #24]
 8004166:	aa08      	add	r2, sp, #32
 8004168:	2120      	movs	r1, #32
 800416a:	f504 70b2 	add.w	r0, r4, #356	; 0x164
 800416e:	4413      	add	r3, r2
 8004170:	461a      	mov	r2, r3
 8004172:	f002 f8e7 	bl	8006344 <VL53L1_i2c_encode_static_config>
 8004176:	fab0 f280 	clz	r2, r0
 800417a:	0952      	lsrs	r2, r2, #5
				pstatic,
				VL53L1_STATIC_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_GENERAL_ONWARDS &&
 800417c:	f1b9 0f00 	cmp.w	r9, #0
 8004180:	d00c      	beq.n	800419c <VL53L1_init_and_start_range+0x154>
 8004182:	b15a      	cbz	r2, 800419c <VL53L1_init_and_start_range+0x154>
		status == VL53L1_ERROR_NONE) {

		i2c_buffer_offset_bytes =
				VL53L1_GENERAL_CONFIG_I2C_INDEX - i2c_index;

		status =
 8004184:	9b05      	ldr	r3, [sp, #20]
 8004186:	aa08      	add	r2, sp, #32
 8004188:	2116      	movs	r1, #22
 800418a:	f504 70c2 	add.w	r0, r4, #388	; 0x184
 800418e:	4413      	add	r3, r2
 8004190:	461a      	mov	r2, r3
 8004192:	f002 f945 	bl	8006420 <VL53L1_i2c_encode_general_config>
 8004196:	fab0 f280 	clz	r2, r0
 800419a:	0952      	lsrs	r2, r2, #5
				pgeneral,
				VL53L1_GENERAL_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_TIMING_ONWARDS &&
 800419c:	9b00      	ldr	r3, [sp, #0]
 800419e:	b163      	cbz	r3, 80041ba <VL53L1_init_and_start_range+0x172>
 80041a0:	b15a      	cbz	r2, 80041ba <VL53L1_init_and_start_range+0x172>
		status == VL53L1_ERROR_NONE) {

		i2c_buffer_offset_bytes = \
				VL53L1_TIMING_CONFIG_I2C_INDEX - i2c_index;

		status =
 80041a2:	9b07      	ldr	r3, [sp, #28]
 80041a4:	aa08      	add	r2, sp, #32
 80041a6:	2117      	movs	r1, #23
 80041a8:	f504 70ce 	add.w	r0, r4, #412	; 0x19c
 80041ac:	4413      	add	r3, r2
 80041ae:	461a      	mov	r2, r3
 80041b0:	f002 f97c 	bl	80064ac <VL53L1_i2c_encode_timing_config>
 80041b4:	fab0 f280 	clz	r2, r0
 80041b8:	0952      	lsrs	r2, r2, #5
				ptiming,
				VL53L1_TIMING_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_DYNAMIC_ONWARDS &&
 80041ba:	b1b5      	cbz	r5, 80041ea <VL53L1_init_and_start_range+0x1a2>
 80041bc:	b1aa      	cbz	r2, 80041ea <VL53L1_init_and_start_range+0x1a2>

		i2c_buffer_offset_bytes = \
			VL53L1_DYNAMIC_CONFIG_I2C_INDEX - i2c_index;

		/* If in back to back mode, use GPH ID from cfg_state */
		if ((psystem->system__mode_start &
 80041be:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 80041c2:	069b      	lsls	r3, r3, #26
 80041c4:	d509      	bpl.n	80041da <VL53L1_init_and_start_range+0x192>
			VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK) ==
			VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK) {
			pdynamic->system__grouped_parameter_hold_0 = pstate->cfg_gph_id | 0x01;
 80041c6:	f894 202e 	ldrb.w	r2, [r4, #46]	; 0x2e
 80041ca:	f042 0301 	orr.w	r3, r2, #1
			pdynamic->system__grouped_parameter_hold_1 = pstate->cfg_gph_id | 0x01;
			pdynamic->system__grouped_parameter_hold   = pstate->cfg_gph_id;
 80041ce:	f884 21c6 	strb.w	r2, [r4, #454]	; 0x1c6
			pdynamic->system__grouped_parameter_hold_0 = pstate->cfg_gph_id | 0x01;
 80041d2:	f884 31b4 	strb.w	r3, [r4, #436]	; 0x1b4
			pdynamic->system__grouped_parameter_hold_1 = pstate->cfg_gph_id | 0x01;
 80041d6:	f884 31c0 	strb.w	r3, [r4, #448]	; 0x1c0
		}
		status =
 80041da:	ab08      	add	r3, sp, #32
 80041dc:	2112      	movs	r1, #18
 80041de:	f504 70da 	add.w	r0, r4, #436	; 0x1b4
 80041e2:	eb03 020b 	add.w	r2, r3, fp
 80041e6:	f002 f9a5 	bl	8006534 <VL53L1_i2c_encode_dynamic_config>
				pdynamic,
				VL53L1_DYNAMIC_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (status == VL53L1_ERROR_NONE) {
 80041ea:	b178      	cbz	r0, 800420c <VL53L1_init_and_start_range+0x1c4>
		status = VL53L1_update_ll_driver_cfg_state(Dev);

	LOG_FUNCTION_END(status);

	return status;
}
 80041ec:	b049      	add	sp, #292	; 0x124
 80041ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status =
 80041f2:	9b04      	ldr	r3, [sp, #16]
 80041f4:	aa08      	add	r2, sp, #32
 80041f6:	2117      	movs	r1, #23
 80041f8:	f104 0042 	add.w	r0, r4, #66	; 0x42
 80041fc:	4413      	add	r3, r2
 80041fe:	461a      	mov	r2, r3
 8004200:	f001 fffc 	bl	80061fc <VL53L1_i2c_encode_customer_nvm_managed>
 8004204:	fab0 f280 	clz	r2, r0
 8004208:	0952      	lsrs	r2, r2, #5
 800420a:	e7a7      	b.n	800415c <VL53L1_init_and_start_range+0x114>
		status =
 800420c:	aa08      	add	r2, sp, #32
 800420e:	9b03      	ldr	r3, [sp, #12]
 8004210:	2105      	movs	r1, #5
 8004212:	f504 70e4 	add.w	r0, r4, #456	; 0x1c8
 8004216:	4413      	add	r3, r2
 8004218:	461a      	mov	r2, r3
 800421a:	f002 f9cd 	bl	80065b8 <VL53L1_i2c_encode_system_control>
	if (status == VL53L1_ERROR_NONE) {
 800421e:	2800      	cmp	r0, #0
 8004220:	d1e4      	bne.n	80041ec <VL53L1_init_and_start_range+0x1a4>
		status =
 8004222:	463b      	mov	r3, r7
 8004224:	aa08      	add	r2, sp, #32
 8004226:	9901      	ldr	r1, [sp, #4]
 8004228:	4620      	mov	r0, r4
 800422a:	f002 fc57 	bl	8006adc <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE)
 800422e:	2800      	cmp	r0, #0
 8004230:	d1dc      	bne.n	80041ec <VL53L1_init_and_start_range+0x1a4>
		status = VL53L1_update_ll_driver_rd_state(Dev);
 8004232:	4620      	mov	r0, r4
 8004234:	f001 fc58 	bl	8005ae8 <VL53L1_update_ll_driver_rd_state>
	if (status == VL53L1_ERROR_NONE)
 8004238:	2800      	cmp	r0, #0
 800423a:	d1d7      	bne.n	80041ec <VL53L1_init_and_start_range+0x1a4>
		status = VL53L1_update_ll_driver_cfg_state(Dev);
 800423c:	4620      	mov	r0, r4
 800423e:	f001 fccf 	bl	8005be0 <VL53L1_update_ll_driver_cfg_state>
}
 8004242:	b049      	add	sp, #292	; 0x124
 8004244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status =
 8004248:	9b02      	ldr	r3, [sp, #8]
 800424a:	aa08      	add	r2, sp, #32
 800424c:	210b      	movs	r1, #11
 800424e:	f504 70ac 	add.w	r0, r4, #344	; 0x158
 8004252:	4413      	add	r3, r2
 8004254:	461a      	mov	r2, r3
 8004256:	f001 ff69 	bl	800612c <VL53L1_i2c_encode_static_nvm_managed>
 800425a:	fab0 f280 	clz	r2, r0
 800425e:	0952      	lsrs	r2, r2, #5
 8004260:	ea08 0802 	and.w	r8, r8, r2
	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS &&
 8004264:	f1b8 0f00 	cmp.w	r8, #0
 8004268:	f43f af78 	beq.w	800415c <VL53L1_init_and_start_range+0x114>
 800426c:	e7c1      	b.n	80041f2 <VL53L1_init_and_start_range+0x1aa>
				pdev->customer.mm_config__outer_offset_mm * 4;
 800426e:	f8b4 2058 	ldrh.w	r2, [r4, #88]	; 0x58
 8004272:	0092      	lsls	r2, r2, #2
 8004274:	b212      	sxth	r2, r2
 8004276:	e723      	b.n	80040c0 <VL53L1_init_and_start_range+0x78>
	switch (device_config_level) {
 8004278:	2300      	movs	r3, #0
 800427a:	2236      	movs	r2, #54	; 0x36
 800427c:	f64f 71dd 	movw	r1, #65501	; 0xffdd
 8004280:	2501      	movs	r5, #1
 8004282:	9306      	str	r3, [sp, #24]
 8004284:	4698      	mov	r8, r3
 8004286:	9207      	str	r2, [sp, #28]
 8004288:	f64f 73e9 	movw	r3, #65513	; 0xffe9
 800428c:	2220      	movs	r2, #32
 800428e:	f04f 0b4d 	mov.w	fp, #77	; 0x4d
 8004292:	9500      	str	r5, [sp, #0]
 8004294:	46a9      	mov	r9, r5
 8004296:	46aa      	mov	sl, r5
 8004298:	2764      	movs	r7, #100	; 0x64
 800429a:	e9cd 3204 	strd	r3, r2, [sp, #16]
 800429e:	235f      	movs	r3, #95	; 0x5f
 80042a0:	e9cd 1302 	strd	r1, r3, [sp, #8]
		i2c_index = VL53L1_STATIC_CONFIG_I2C_INDEX;
 80042a4:	2324      	movs	r3, #36	; 0x24
 80042a6:	9301      	str	r3, [sp, #4]
 80042a8:	e74a      	b.n	8004140 <VL53L1_init_and_start_range+0xf8>
		break;
 80042aa:	f64f 73b3 	movw	r3, #65459	; 0xffb3
 80042ae:	f64f 7ee9 	movw	lr, #65513	; 0xffe9
 80042b2:	f64f 7190 	movw	r1, #65424	; 0xff90
 80042b6:	f04f 0b00 	mov.w	fp, #0
 80042ba:	2717      	movs	r7, #23
 80042bc:	2501      	movs	r5, #1
 80042be:	f8cd b000 	str.w	fp, [sp]
 80042c2:	46d9      	mov	r9, fp
 80042c4:	46da      	mov	sl, fp
 80042c6:	46d8      	mov	r8, fp
 80042c8:	e9cd 3e06 	strd	r3, lr, [sp, #24]
 80042cc:	f64f 73d3 	movw	r3, #65491	; 0xffd3
 80042d0:	9305      	str	r3, [sp, #20]
 80042d2:	f64f 739c 	movw	r3, #65436	; 0xff9c
 80042d6:	9304      	str	r3, [sp, #16]
 80042d8:	2312      	movs	r3, #18
 80042da:	e9cd 1302 	strd	r1, r3, [sp, #8]
		i2c_index = VL53L1_DYNAMIC_CONFIG_I2C_INDEX;
 80042de:	2371      	movs	r3, #113	; 0x71
 80042e0:	9301      	str	r3, [sp, #4]
		break;
 80042e2:	e72d      	b.n	8004140 <VL53L1_init_and_start_range+0xf8>
		break;
 80042e4:	2300      	movs	r3, #0
 80042e6:	f64f 70ea 	movw	r0, #65514	; 0xffea
 80042ea:	f64f 77a7 	movw	r7, #65447	; 0xffa7
 80042ee:	2501      	movs	r5, #1
 80042f0:	4699      	mov	r9, r3
 80042f2:	9307      	str	r3, [sp, #28]
 80042f4:	4698      	mov	r8, r3
 80042f6:	f64f 73b3 	movw	r3, #65459	; 0xffb3
 80042fa:	f64f 72ca 	movw	r2, #65482	; 0xffca
 80042fe:	f04f 0b17 	mov.w	fp, #23
 8004302:	46ca      	mov	sl, r9
 8004304:	9500      	str	r5, [sp, #0]
 8004306:	9206      	str	r2, [sp, #24]
 8004308:	e9cd 3004 	strd	r3, r0, [sp, #16]
 800430c:	2329      	movs	r3, #41	; 0x29
 800430e:	e9cd 7302 	strd	r7, r3, [sp, #8]
		i2c_index = VL53L1_TIMING_CONFIG_I2C_INDEX;
 8004312:	235a      	movs	r3, #90	; 0x5a
		break;
 8004314:	272e      	movs	r7, #46	; 0x2e
		i2c_index = VL53L1_TIMING_CONFIG_I2C_INDEX;
 8004316:	9301      	str	r3, [sp, #4]
		break;
 8004318:	e712      	b.n	8004140 <VL53L1_init_and_start_range+0xf8>
		break;
 800431a:	2300      	movs	r3, #0
 800431c:	2216      	movs	r2, #22
 800431e:	2501      	movs	r5, #1
 8004320:	2744      	movs	r7, #68	; 0x44
 8004322:	9305      	str	r3, [sp, #20]
 8004324:	469a      	mov	sl, r3
 8004326:	4698      	mov	r8, r3
 8004328:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 800432c:	9207      	str	r2, [sp, #28]
 800432e:	f64f 72bd 	movw	r2, #65469	; 0xffbd
 8004332:	9306      	str	r3, [sp, #24]
 8004334:	f64f 73c9 	movw	r3, #65481	; 0xffc9
 8004338:	46a9      	mov	r9, r5
 800433a:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
 800433e:	9304      	str	r3, [sp, #16]
 8004340:	233f      	movs	r3, #63	; 0x3f
 8004342:	e9cd 5700 	strd	r5, r7, [sp]
 8004346:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800434a:	e6f9      	b.n	8004140 <VL53L1_init_and_start_range+0xf8>
	switch (device_config_level) {
 800434c:	2359      	movs	r3, #89	; 0x59
 800434e:	2743      	movs	r7, #67	; 0x43
 8004350:	2501      	movs	r5, #1
 8004352:	f04f 0c00 	mov.w	ip, #0
 8004356:	9307      	str	r3, [sp, #28]
 8004358:	2323      	movs	r3, #35	; 0x23
 800435a:	f04f 0b70 	mov.w	fp, #112	; 0x70
 800435e:	9500      	str	r5, [sp, #0]
 8004360:	9306      	str	r3, [sp, #24]
 8004362:	230c      	movs	r3, #12
 8004364:	46a9      	mov	r9, r5
 8004366:	46aa      	mov	sl, r5
 8004368:	46a8      	mov	r8, r5
		i2c_index = VL53L1_STATIC_NVM_MANAGED_I2C_INDEX;
 800436a:	9501      	str	r5, [sp, #4]
	switch (device_config_level) {
 800436c:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8004370:	2382      	movs	r3, #130	; 0x82
 8004372:	2787      	movs	r7, #135	; 0x87
 8004374:	e9cd c302 	strd	ip, r3, [sp, #8]
 8004378:	e6e2      	b.n	8004140 <VL53L1_init_and_start_range+0xf8>
 800437a:	bf00      	nop
 800437c:	00ffff00 	.word	0x00ffff00
 8004380:	00010100 	.word	0x00010100
 8004384:	2e04      	cmp	r6, #4
		break;
 8004386:	f64f 70a1 	movw	r0, #65441	; 0xffa1
 800438a:	f64f 7c7e 	movw	ip, #65406	; 0xff7e
 800438e:	f64f 7bee 	movw	fp, #65518	; 0xffee
 8004392:	bf94      	ite	ls
 8004394:	f04f 0800 	movls.w	r8, #0
 8004398:	f04f 0801 	movhi.w	r8, #1
 800439c:	2e03      	cmp	r6, #3
 800439e:	f04f 0705 	mov.w	r7, #5
 80043a2:	bf94      	ite	ls
 80043a4:	f04f 0a00 	movls.w	sl, #0
 80043a8:	f04f 0a01 	movhi.w	sl, #1
 80043ac:	2e02      	cmp	r6, #2
 80043ae:	bf94      	ite	ls
 80043b0:	f04f 0900 	movls.w	r9, #0
 80043b4:	f04f 0901 	movhi.w	r9, #1
 80043b8:	2e01      	cmp	r6, #1
 80043ba:	bf94      	ite	ls
 80043bc:	2300      	movls	r3, #0
 80043be:	2301      	movhi	r3, #1
 80043c0:	1c35      	adds	r5, r6, #0
 80043c2:	9300      	str	r3, [sp, #0]
 80043c4:	f64f 73d7 	movw	r3, #65495	; 0xffd7
 80043c8:	bf18      	it	ne
 80043ca:	2501      	movne	r5, #1
 80043cc:	9307      	str	r3, [sp, #28]
 80043ce:	f64f 73c1 	movw	r3, #65473	; 0xffc1
 80043d2:	e9cd 3005 	strd	r3, r0, [sp, #20]
 80043d6:	f64f 738a 	movw	r3, #65418	; 0xff8a
 80043da:	9304      	str	r3, [sp, #16]
 80043dc:	2300      	movs	r3, #0
 80043de:	e9cd c302 	strd	ip, r3, [sp, #8]
		i2c_index = VL53L1_SYSTEM_CONTROL_I2C_INDEX;
 80043e2:	2383      	movs	r3, #131	; 0x83
 80043e4:	9301      	str	r3, [sp, #4]
		break;
 80043e6:	e6ab      	b.n	8004140 <VL53L1_init_and_start_range+0xf8>
	switch (device_config_level) {
 80043e8:	234d      	movs	r3, #77	; 0x4d
 80043ea:	2137      	movs	r1, #55	; 0x37
 80043ec:	f64f 70f4 	movw	r0, #65524	; 0xfff4
 80043f0:	2501      	movs	r5, #1
 80043f2:	9307      	str	r3, [sp, #28]
 80043f4:	2317      	movs	r3, #23
 80043f6:	f04f 0b64 	mov.w	fp, #100	; 0x64
 80043fa:	9500      	str	r5, [sp, #0]
 80043fc:	9306      	str	r3, [sp, #24]
 80043fe:	2300      	movs	r3, #0
 8004400:	46a9      	mov	r9, r5
 8004402:	46aa      	mov	sl, r5
 8004404:	46a8      	mov	r8, r5
 8004406:	277b      	movs	r7, #123	; 0x7b
 8004408:	e9cd 3104 	strd	r3, r1, [sp, #16]
 800440c:	2376      	movs	r3, #118	; 0x76
 800440e:	e9cd 0302 	strd	r0, r3, [sp, #8]
		i2c_index = VL53L1_CUSTOMER_NVM_MANAGED_I2C_INDEX;
 8004412:	230d      	movs	r3, #13
 8004414:	9301      	str	r3, [sp, #4]
 8004416:	e693      	b.n	8004140 <VL53L1_init_and_start_range+0xf8>

08004418 <VL53L1_stop_range>:


VL53L1_Error VL53L1_stop_range(
	VL53L1_DEV     Dev)
{
 8004418:	b538      	push	{r3, r4, r5, lr}
			VL53L1DevStructGetLLDriverHandle(Dev);

	/* Merge ABORT mode with mode_start */

	pdev->sys_ctrl.system__mode_start =
			(pdev->sys_ctrl.system__mode_start & VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK) |
 800441a:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
{
 800441e:	4604      	mov	r4, r0
			 VL53L1_DEVICEMEASUREMENTMODE_ABORT;

	status = VL53L1_set_system_control(
 8004420:	f500 71e4 	add.w	r1, r0, #456	; 0x1c8
			(pdev->sys_ctrl.system__mode_start & VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK) |
 8004424:	f003 030f 	and.w	r3, r3, #15
 8004428:	f063 037f 	orn	r3, r3, #127	; 0x7f
	pdev->sys_ctrl.system__mode_start =
 800442c:	f880 31cc 	strb.w	r3, [r0, #460]	; 0x1cc
	status = VL53L1_set_system_control(
 8004430:	f002 f8dc 	bl	80065ec <VL53L1_set_system_control>
				Dev,
				&pdev->sys_ctrl);

	/* Abort bit is auto clear so clear register group structure to match */
	pdev->sys_ctrl.system__mode_start =
			(pdev->sys_ctrl.system__mode_start & VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK);
 8004434:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
	status = VL53L1_set_system_control(
 8004438:	4605      	mov	r5, r0

	/* reset zone dynamic info */
	VL53L1_init_ll_driver_state(
 800443a:	2103      	movs	r1, #3
			(pdev->sys_ctrl.system__mode_start & VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK);
 800443c:	f003 030f 	and.w	r3, r3, #15
	VL53L1_init_ll_driver_state(
 8004440:	4620      	mov	r0, r4
	pdev->sys_ctrl.system__mode_start =
 8004442:	f884 31cc 	strb.w	r3, [r4, #460]	; 0x1cc
	VL53L1_init_ll_driver_state(
 8004446:	f001 fb3b 	bl	8005ac0 <VL53L1_init_ll_driver_state>
			Dev,
			VL53L1_DEVICESTATE_SW_STANDBY);

	/* reset low power auto */
	if (pdev->low_power_auto_data.is_low_power_auto_mode == 1)
 800444a:	f894 32e5 	ldrb.w	r3, [r4, #741]	; 0x2e5
 800444e:	2b01      	cmp	r3, #1
 8004450:	d001      	beq.n	8004456 <VL53L1_stop_range+0x3e>
		VL53L1_low_power_auto_data_stop_range(Dev);

	return status;
}
 8004452:	4628      	mov	r0, r5
 8004454:	bd38      	pop	{r3, r4, r5, pc}
		VL53L1_low_power_auto_data_stop_range(Dev);
 8004456:	4620      	mov	r0, r4
 8004458:	f001 fe02 	bl	8006060 <VL53L1_low_power_auto_data_stop_range>
}
 800445c:	4628      	mov	r0, r5
 800445e:	bd38      	pop	{r3, r4, r5, pc}

08004460 <VL53L1_get_device_results>:

	LOG_FUNCTION_START("");

	/* Determine multi byte read transaction size */

	switch (device_results_level) {
 8004460:	2901      	cmp	r1, #1

VL53L1_Error VL53L1_get_device_results(
	VL53L1_DEV                    Dev,
	VL53L1_DeviceResultsLevel     device_results_level,
	VL53L1_range_results_t       *prange_results)
{
 8004462:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004466:	460e      	mov	r6, r1
 8004468:	b0c1      	sub	sp, #260	; 0x104
 800446a:	4604      	mov	r4, r0
 800446c:	4690      	mov	r8, r2
	VL53L1_LLDriverData_t *pdev =
			VL53L1DevStructGetLLDriverHandle(Dev);
	VL53L1_LLDriverResults_t *pres =
			VL53L1DevStructGetLLResultsHandle(Dev);

	VL53L1_range_results_t   *presults = &(pres->range_results);
 800446e:	f500 773d 	add.w	r7, r0, #756	; 0x2f4
	switch (device_results_level) {
 8004472:	f000 810c 	beq.w	800468e <VL53L1_get_device_results+0x22e>
 8004476:	2902      	cmp	r1, #2
		status =
 8004478:	46e9      	mov	r9, sp
 800447a:	f04f 0188 	mov.w	r1, #136	; 0x88
 800447e:	bf0c      	ite	eq
 8004480:	2386      	moveq	r3, #134	; 0x86
 8004482:	232c      	movne	r3, #44	; 0x2c
 8004484:	464a      	mov	r2, r9
 8004486:	f002 fb51 	bl	8006b2c <VL53L1_ReadMulti>
	if (device_results_level >= VL53L1_DEVICERESULTSLEVEL_FULL &&
 800448a:	2e01      	cmp	r6, #1
		status == VL53L1_ERROR_NONE) {
 800448c:	fab0 f380 	clz	r3, r0
 8004490:	4605      	mov	r5, r0
 8004492:	ea4f 1353 	mov.w	r3, r3, lsr #5
	if (device_results_level >= VL53L1_DEVICERESULTSLEVEL_FULL &&
 8004496:	d90b      	bls.n	80044b0 <VL53L1_get_device_results+0x50>
 8004498:	b153      	cbz	r3, 80044b0 <VL53L1_get_device_results+0x50>
		status =
 800449a:	f504 722b 	add.w	r2, r4, #684	; 0x2ac
 800449e:	f10d 014e 	add.w	r1, sp, #78	; 0x4e
 80044a2:	2038      	movs	r0, #56	; 0x38
 80044a4:	f002 f992 	bl	80067cc <VL53L1_i2c_decode_debug_results>
 80044a8:	fab0 f380 	clz	r3, r0
 80044ac:	4605      	mov	r5, r0
 80044ae:	095b      	lsrs	r3, r3, #5
	if (device_results_level >= VL53L1_DEVICERESULTSLEVEL_UPTO_CORE &&
 80044b0:	b106      	cbz	r6, 80044b4 <VL53L1_get_device_results+0x54>
 80044b2:	b98b      	cbnz	r3, 80044d8 <VL53L1_get_device_results+0x78>
	if (status == VL53L1_ERROR_NONE) {
 80044b4:	b1cd      	cbz	r5, 80044ea <VL53L1_get_device_results+0x8a>
 80044b6:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
	presults->rd_device_state  = pdev->ll_state.rd_device_state;

	/* copy internal structure to supplied output pointer */

	memcpy(
 80044ba:	4639      	mov	r1, r7
 80044bc:	f894 0030 	ldrb.w	r0, [r4, #48]	; 0x30
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 80044c0:	f884 22f4 	strb.w	r2, [r4, #756]	; 0x2f4
	memcpy(
 80044c4:	2284      	movs	r2, #132	; 0x84
	presults->rd_device_state  = pdev->ll_state.rd_device_state;
 80044c6:	f884 02f5 	strb.w	r0, [r4, #757]	; 0x2f5
	memcpy(
 80044ca:	4640      	mov	r0, r8
 80044cc:	f014 fc31 	bl	8018d32 <memcpy>
#endif

	LOG_FUNCTION_END(status);

	return status;
}
 80044d0:	4628      	mov	r0, r5
 80044d2:	b041      	add	sp, #260	; 0x104
 80044d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		status =
 80044d8:	f504 7222 	add.w	r2, r4, #648	; 0x288
 80044dc:	a90b      	add	r1, sp, #44	; 0x2c
 80044de:	2021      	movs	r0, #33	; 0x21
 80044e0:	f002 f938 	bl	8006754 <VL53L1_i2c_decode_core_results>
 80044e4:	4605      	mov	r5, r0
	if (status == VL53L1_ERROR_NONE) {
 80044e6:	2d00      	cmp	r5, #0
 80044e8:	d1e5      	bne.n	80044b6 <VL53L1_get_device_results+0x56>
		status =
 80044ea:	4649      	mov	r1, r9
 80044ec:	f504 72e7 	add.w	r2, r4, #462	; 0x1ce
 80044f0:	202c      	movs	r0, #44	; 0x2c
 80044f2:	f002 f89f 	bl	8006634 <VL53L1_i2c_decode_system_results>
	if (status == VL53L1_ERROR_NONE)
 80044f6:	4605      	mov	r5, r0
 80044f8:	2800      	cmp	r0, #0
 80044fa:	d1dc      	bne.n	80044b6 <VL53L1_get_device_results+0x56>

	LOG_FUNCTION_START("");

	/* copy results */

	presults->stream_count    = psys->result__stream_count;
 80044fc:	f894 61d1 	ldrb.w	r6, [r4, #465]	; 0x1d1
 8004500:	f894 21cf 	ldrb.w	r2, [r4, #463]	; 0x1cf

	pdata = &(presults->data[0]);

	for (i = 0 ; i < 2 ; i++) {

		pdata->range_id     = i;
 8004504:	f884 02f8 	strb.w	r0, [r4, #760]	; 0x2f8
		pdata->time_stamp   = 0;
 8004508:	f8c4 02fc 	str.w	r0, [r4, #764]	; 0x2fc
 800450c:	f002 021f 	and.w	r2, r2, #31
	presults->stream_count    = psys->result__stream_count;
 8004510:	f884 62f6 	strb.w	r6, [r4, #758]	; 0x2f6
		VL53L1_copy_sys_and_core_results_to_range_results(
 8004514:	f8b4 509c 	ldrh.w	r5, [r4, #156]	; 0x9c

		if ((psys->result__stream_count == 0) &&
 8004518:	2e00      	cmp	r6, #0
 800451a:	f000 80c3 	beq.w	80046a4 <VL53L1_get_device_results+0x244>

		switch (i) {

		case 0:

			if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM1)
 800451e:	f894 31d0 	ldrb.w	r3, [r4, #464]	; 0x1d0
		if ((psys->result__stream_count == 0) &&
 8004522:	4611      	mov	r1, r2
			if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM1)
 8004524:	2b07      	cmp	r3, #7
 8004526:	f884 1336 	strb.w	r1, [r4, #822]	; 0x336
 800452a:	f000 80c6 	beq.w	80046ba <VL53L1_get_device_results+0x25a>
				pdata->actual_effective_spads =
					psys->result__mm_inner_actual_effective_spads_sd0;
			else if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM2)
 800452e:	2b08      	cmp	r3, #8
				pdata->actual_effective_spads =
						psys->result__mm_outer_actual_effective_spads_sd0;
			else
				pdata->actual_effective_spads =
 8004530:	bf14      	ite	ne
 8004532:	f8b4 31d2 	ldrhne.w	r3, [r4, #466]	; 0x1d2
				pdata->actual_effective_spads =
 8004536:	f8b4 31e2 	ldrheq.w	r3, [r4, #482]	; 0x1e2
 800453a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
			/* End Patch_SigmaEstimateAccuracyImprovement */

			pdata->median_phase =
				psys->result__phase_sd0;

			range_mm =
 800453e:	f8b4 11dc 	ldrh.w	r1, [r4, #476]	; 0x1dc
			pdata->sigma_mm = (uint16_t)tmpu32;
 8004542:	f64f 73ff 	movw	r3, #65535	; 0xffff
			tmpu32 = ((uint32_t)psys->result__sigma_sd0 << 5);
 8004546:	f8b4 01d8 	ldrh.w	r0, [r4, #472]	; 0x1d8
				(int32_t)psys->result__final_crosstalk_corrected_range_mm_sd0;

			/* apply correction gain */
			range_mm *= gain_factor;
 800454a:	fb01 f105 	mul.w	r1, r1, r5
			pdata->peak_signal_count_rate_mcps =
 800454e:	f8b4 e1de 	ldrh.w	lr, [r4, #478]	; 0x1de
			tmpu32 = ((uint32_t)psys->result__sigma_sd0 << 5);
 8004552:	0140      	lsls	r0, r0, #5
			pdata->avg_signal_count_rate_mcps =
 8004554:	f8b4 c1e4 	ldrh.w	ip, [r4, #484]	; 0x1e4
			range_mm += 0x0400;
 8004558:	f501 6180 	add.w	r1, r1, #1024	; 0x400
			pdata->peak_signal_count_rate_mcps =
 800455c:	f8a4 e324 	strh.w	lr, [r4, #804]	; 0x324
			pdata->sigma_mm = (uint16_t)tmpu32;
 8004560:	4298      	cmp	r0, r3
			pdata->avg_signal_count_rate_mcps =
 8004562:	f8a4 c326 	strh.w	ip, [r4, #806]	; 0x326
			range_mm /= 0x0800;
 8004566:	ea4f 21e1 	mov.w	r1, r1, asr #11
			pdata->sigma_mm = (uint16_t)tmpu32;
 800456a:	bf28      	it	cs
 800456c:	4618      	movcs	r0, r3
		pdata->range_id     = i;
 800456e:	2301      	movs	r3, #1

			pdata->median_range_mm = (int16_t)range_mm;
 8004570:	f8a4 1334 	strh.w	r1, [r4, #820]	; 0x334
		pdata->range_id     = i;
 8004574:	f884 3338 	strb.w	r3, [r4, #824]	; 0x338
			pdata->ambient_count_rate_mcps =
 8004578:	f8b4 11d6 	ldrh.w	r1, [r4, #470]	; 0x1d6
			pdata->median_phase =
 800457c:	f8b4 31da 	ldrh.w	r3, [r4, #474]	; 0x1da
			pdata->ambient_count_rate_mcps =
 8004580:	f8a4 1328 	strh.w	r1, [r4, #808]	; 0x328
			pdata->median_phase =
 8004584:	f8a4 3332 	strh.w	r3, [r4, #818]	; 0x332

			pdata->ranging_total_events =
 8004588:	f8d4 128c 	ldr.w	r1, [r4, #652]	; 0x28c
				pcore->result_core__ranging_total_events_sd0;
			pdata->signal_total_events =
 800458c:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
			pdata->sigma_mm = (uint16_t)tmpu32;
 8004590:	f8a4 0330 	strh.w	r0, [r4, #816]	; 0x330
		pdata->time_stamp   = 0;
 8004594:	2000      	movs	r0, #0
			pdata->ranging_total_events =
 8004596:	f8c4 131c 	str.w	r1, [r4, #796]	; 0x31c
			pdata->signal_total_events =
 800459a:	f8c4 3320 	str.w	r3, [r4, #800]	; 0x320
				pcore->result_core__signal_total_events_sd0;
			pdata->total_periods_elapsed =
 800459e:	f8d4 1294 	ldr.w	r1, [r4, #660]	; 0x294
				pcore->result_core__total_periods_elapsed_sd0;
			pdata->ambient_window_events =
 80045a2:	f8d4 3288 	ldr.w	r3, [r4, #648]	; 0x288
			pdata->total_periods_elapsed =
 80045a6:	f8c4 130c 	str.w	r1, [r4, #780]	; 0x30c
			pdata->ambient_window_events =
 80045aa:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
		pdata->time_stamp   = 0;
 80045ae:	f8c4 033c 	str.w	r0, [r4, #828]	; 0x33c
		if ((psys->result__stream_count == 0) &&
 80045b2:	2e00      	cmp	r6, #0
 80045b4:	f040 8086 	bne.w	80046c4 <VL53L1_get_device_results+0x264>
 80045b8:	2a09      	cmp	r2, #9
 80045ba:	bf14      	ite	ne
 80045bc:	4611      	movne	r1, r2
 80045be:	2113      	moveq	r1, #19
			/* End Patch_SigmaEstimateAccuracyImprovement */

			pdata->median_phase =
				psys->result__phase_sd1;

			range_mm =
 80045c0:	f8b4 31f0 	ldrh.w	r3, [r4, #496]	; 0x1f0
			pdata->avg_signal_count_rate_mcps =
 80045c4:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80045c8:	f884 1376 	strb.w	r1, [r4, #886]	; 0x376
				(int32_t)psys->result__final_crosstalk_corrected_range_mm_sd1;

			/* apply correction gain */
			range_mm *= gain_factor;
 80045cc:	fb03 f305 	mul.w	r3, r3, r5
			tmpu32 = ((uint32_t)psys->result__sigma_sd1 << 5);
 80045d0:	f8b4 11ec 	ldrh.w	r1, [r4, #492]	; 0x1ec
			pdata->avg_signal_count_rate_mcps =
 80045d4:	f8a4 0366 	strh.w	r0, [r4, #870]	; 0x366
			tmpu32 = ((uint32_t)psys->result__sigma_sd1 << 5);
 80045d8:	0149      	lsls	r1, r1, #5
			range_mm += 0x0400;
 80045da:	f503 6380 	add.w	r3, r3, #1024	; 0x400
			pdata->actual_effective_spads =
 80045de:	f8b4 51e6 	ldrh.w	r5, [r4, #486]	; 0x1e6
			pdata->sigma_mm = (uint16_t)tmpu32;
 80045e2:	4281      	cmp	r1, r0
			range_mm /= 0x0800;
 80045e4:	ea4f 23e3 	mov.w	r3, r3, asr #11
			pdata->actual_effective_spads =
 80045e8:	f8a4 5348 	strh.w	r5, [r4, #840]	; 0x348
			pdata->sigma_mm = (uint16_t)tmpu32;
 80045ec:	bf28      	it	cs
 80045ee:	4601      	movcs	r1, r0

			pdata->median_range_mm = (int16_t)range_mm;
 80045f0:	f8a4 3374 	strh.w	r3, [r4, #884]	; 0x374
			pdata->peak_signal_count_rate_mcps =
 80045f4:	f8b4 31e8 	ldrh.w	r3, [r4, #488]	; 0x1e8

	/* Update Global Device Status for results
	 * - Default to no update
	 */

	presults->device_status = VL53L1_DEVICEERROR_NOUPDATE;
 80045f8:	2000      	movs	r0, #0
			pdata->sigma_mm = (uint16_t)tmpu32;
 80045fa:	f8a4 1370 	strh.w	r1, [r4, #880]	; 0x370
 80045fe:	2a11      	cmp	r2, #17
			pdata->ambient_count_rate_mcps =
 8004600:	f8b4 11ea 	ldrh.w	r1, [r4, #490]	; 0x1ea
			pdata->peak_signal_count_rate_mcps =
 8004604:	f8a4 3364 	strh.w	r3, [r4, #868]	; 0x364
			pdata->median_phase =
 8004608:	f8b4 31ee 	ldrh.w	r3, [r4, #494]	; 0x1ee
			pdata->ambient_count_rate_mcps =
 800460c:	f8a4 1368 	strh.w	r1, [r4, #872]	; 0x368
			pdata->median_phase =
 8004610:	f8a4 3372 	strh.w	r3, [r4, #882]	; 0x372
			pdata->ranging_total_events =
 8004614:	f8d4 129c 	ldr.w	r1, [r4, #668]	; 0x29c
			pdata->signal_total_events =
 8004618:	f8d4 32a0 	ldr.w	r3, [r4, #672]	; 0x2a0
			pdata->ranging_total_events =
 800461c:	f8c4 135c 	str.w	r1, [r4, #860]	; 0x35c
			pdata->signal_total_events =
 8004620:	f8c4 3360 	str.w	r3, [r4, #864]	; 0x360
			pdata->total_periods_elapsed  =
 8004624:	f8d4 12a4 	ldr.w	r1, [r4, #676]	; 0x2a4
			pdata->ambient_window_events =
 8004628:	f8d4 3298 	ldr.w	r3, [r4, #664]	; 0x298
			pdata->total_periods_elapsed  =
 800462c:	f8c4 134c 	str.w	r1, [r4, #844]	; 0x34c
			pdata->ambient_window_events =
 8004630:	f8c4 3358 	str.w	r3, [r4, #856]	; 0x358
	presults->device_status = VL53L1_DEVICEERROR_NOUPDATE;
 8004634:	f884 02f7 	strb.w	r0, [r4, #759]	; 0x2f7
 8004638:	f894 12e5 	ldrb.w	r1, [r4, #741]	; 0x2e5
 800463c:	d808      	bhi.n	8004650 <VL53L1_get_device_results+0x1f0>
 800463e:	2301      	movs	r3, #1
 8004640:	4d2d      	ldr	r5, [pc, #180]	; (80046f8 <VL53L1_get_device_results+0x298>)
 8004642:	4093      	lsls	r3, r2
 8004644:	422b      	tst	r3, r5
 8004646:	d003      	beq.n	8004650 <VL53L1_get_device_results+0x1f0>
	case VL53L1_DEVICEERROR_VCSELWATCHDOGTESTFAILURE:
	case VL53L1_DEVICEERROR_NOVHVVALUEFOUND:
	case VL53L1_DEVICEERROR_USERROICLIP:
	case VL53L1_DEVICEERROR_MULTCLIPFAIL:

		presults->device_status = (psys->result__range_status &
 8004648:	f884 22f7 	strb.w	r2, [r4, #759]	; 0x2f7
				VL53L1_RANGE_STATUS__RANGE_STATUS_MASK);

		presults->data[0].range_status = VL53L1_DEVICEERROR_NOUPDATE;
 800464c:	f884 0336 	strb.w	r0, [r4, #822]	; 0x336
	if (pdev->low_power_auto_data.is_low_power_auto_mode == 1) {
 8004650:	2901      	cmp	r1, #1
 8004652:	d107      	bne.n	8004664 <VL53L1_get_device_results+0x204>
			(pdev->low_power_auto_data.low_power_auto_range_count == 0)) {
 8004654:	f894 32e6 	ldrb.w	r3, [r4, #742]	; 0x2e6
		if ((status == VL53L1_ERROR_NONE) &&
 8004658:	b3b3      	cbz	r3, 80046c8 <VL53L1_get_device_results+0x268>
		} else if ((status == VL53L1_ERROR_NONE) &&
 800465a:	2b01      	cmp	r3, #1
 800465c:	d102      	bne.n	8004664 <VL53L1_get_device_results+0x204>
			pdev->low_power_auto_data.low_power_auto_range_count = 2;
 800465e:	2302      	movs	r3, #2
 8004660:	f884 32e6 	strb.w	r3, [r4, #742]	; 0x2e6
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 8004664:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
	memcpy(
 8004668:	4639      	mov	r1, r7
	presults->rd_device_state  = pdev->ll_state.rd_device_state;
 800466a:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
	memcpy(
 800466e:	4640      	mov	r0, r8
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 8004670:	f884 22f4 	strb.w	r2, [r4, #756]	; 0x2f4
	memcpy(
 8004674:	2284      	movs	r2, #132	; 0x84
	presults->rd_device_state  = pdev->ll_state.rd_device_state;
 8004676:	f884 32f5 	strb.w	r3, [r4, #757]	; 0x2f5
	memcpy(
 800467a:	f014 fb5a 	bl	8018d32 <memcpy>
		status = VL53L1_check_ll_driver_rd_state(Dev);
 800467e:	4620      	mov	r0, r4
 8004680:	f001 fa80 	bl	8005b84 <VL53L1_check_ll_driver_rd_state>
 8004684:	4605      	mov	r5, r0
}
 8004686:	4628      	mov	r0, r5
 8004688:	b041      	add	sp, #260	; 0x104
 800468a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		status =
 800468e:	46e9      	mov	r9, sp
 8004690:	234d      	movs	r3, #77	; 0x4d
 8004692:	2188      	movs	r1, #136	; 0x88
 8004694:	464a      	mov	r2, r9
 8004696:	f002 fa49 	bl	8006b2c <VL53L1_ReadMulti>
 800469a:	fab0 f380 	clz	r3, r0
 800469e:	4605      	mov	r5, r0
 80046a0:	095b      	lsrs	r3, r3, #5
 80046a2:	e705      	b.n	80044b0 <VL53L1_get_device_results+0x50>
		if ((psys->result__stream_count == 0) &&
 80046a4:	2a09      	cmp	r2, #9
			if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM1)
 80046a6:	f894 31d0 	ldrb.w	r3, [r4, #464]	; 0x1d0
		if ((psys->result__stream_count == 0) &&
 80046aa:	bf14      	ite	ne
 80046ac:	4611      	movne	r1, r2
 80046ae:	2113      	moveq	r1, #19
			if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM1)
 80046b0:	2b07      	cmp	r3, #7
 80046b2:	f884 1336 	strb.w	r1, [r4, #822]	; 0x336
 80046b6:	f47f af3a 	bne.w	800452e <VL53L1_get_device_results+0xce>
				pdata->actual_effective_spads =
 80046ba:	f8b4 31e0 	ldrh.w	r3, [r4, #480]	; 0x1e0
 80046be:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80046c2:	e73c      	b.n	800453e <VL53L1_get_device_results+0xde>
		if ((psys->result__stream_count == 0) &&
 80046c4:	4611      	mov	r1, r2
 80046c6:	e77b      	b.n	80045c0 <VL53L1_get_device_results+0x160>
			status = VL53L1_low_power_auto_setup_manual_calibration(
 80046c8:	4620      	mov	r0, r4
			pdev->low_power_auto_data.low_power_auto_range_count = 1;
 80046ca:	2601      	movs	r6, #1
			status = VL53L1_low_power_auto_setup_manual_calibration(
 80046cc:	f001 fcec 	bl	80060a8 <VL53L1_low_power_auto_setup_manual_calibration>
 80046d0:	f894 2030 	ldrb.w	r2, [r4, #48]	; 0x30
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 80046d4:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
			status = VL53L1_low_power_auto_setup_manual_calibration(
 80046d8:	4605      	mov	r5, r0
	presults->rd_device_state  = pdev->ll_state.rd_device_state;
 80046da:	f884 22f5 	strb.w	r2, [r4, #757]	; 0x2f5
	memcpy(
 80046de:	4639      	mov	r1, r7
 80046e0:	4640      	mov	r0, r8
			pdev->low_power_auto_data.low_power_auto_range_count = 1;
 80046e2:	f884 62e6 	strb.w	r6, [r4, #742]	; 0x2e6
	memcpy(
 80046e6:	2284      	movs	r2, #132	; 0x84
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 80046e8:	f884 32f4 	strb.w	r3, [r4, #756]	; 0x2f4
	memcpy(
 80046ec:	f014 fb21 	bl	8018d32 <memcpy>
	if (status == VL53L1_ERROR_NONE)
 80046f0:	2d00      	cmp	r5, #0
 80046f2:	d0c4      	beq.n	800467e <VL53L1_get_device_results+0x21e>
 80046f4:	e6ec      	b.n	80044d0 <VL53L1_get_device_results+0x70>
 80046f6:	bf00      	nop
 80046f8:	0002200e 	.word	0x0002200e

080046fc <VL53L1_get_tuning_parm>:

	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	switch (tuning_parm_key) {
 80046fc:	f5a1 4100 	sub.w	r1, r1, #32768	; 0x8000
 8004700:	2938      	cmp	r1, #56	; 0x38
 8004702:	f200 8158 	bhi.w	80049b6 <VL53L1_get_tuning_parm+0x2ba>
 8004706:	e8df f011 	tbh	[pc, r1, lsl #1]
 800470a:	0151      	.short	0x0151
 800470c:	0147014c 	.word	0x0147014c
 8004710:	013d0142 	.word	0x013d0142
 8004714:	01330138 	.word	0x01330138
 8004718:	0129012e 	.word	0x0129012e
 800471c:	011f0124 	.word	0x011f0124
 8004720:	0115011a 	.word	0x0115011a
 8004724:	010b0110 	.word	0x010b0110
 8004728:	01010106 	.word	0x01010106
 800472c:	00f700fc 	.word	0x00f700fc
 8004730:	00ed00f2 	.word	0x00ed00f2
 8004734:	00e300e8 	.word	0x00e300e8
 8004738:	00d900de 	.word	0x00d900de
 800473c:	00cf00d4 	.word	0x00cf00d4
 8004740:	00c500ca 	.word	0x00c500ca
 8004744:	00bb00c0 	.word	0x00bb00c0
 8004748:	00b100b6 	.word	0x00b100b6
 800474c:	00a700ac 	.word	0x00a700ac
 8004750:	009d00a2 	.word	0x009d00a2
 8004754:	00930098 	.word	0x00930098
 8004758:	0089008e 	.word	0x0089008e
 800475c:	007f0084 	.word	0x007f0084
 8004760:	0075007a 	.word	0x0075007a
 8004764:	006b0070 	.word	0x006b0070
 8004768:	00610066 	.word	0x00610066
 800476c:	0057005c 	.word	0x0057005c
 8004770:	004d0052 	.word	0x004d0052
 8004774:	00430048 	.word	0x00430048
 8004778:	0039003e 	.word	0x0039003e
	case VL53L1_TUNINGPARM_LOWPOWERAUTO_MM_CONFIG_TIMEOUT_US:
		*ptuning_parm_value =
				(int32_t)pdev->tuning_parms.tp_mm_timeout_lpa_us;
	break;
	case VL53L1_TUNINGPARM_LOWPOWERAUTO_RANGE_CONFIG_TIMEOUT_US:
		*ptuning_parm_value =
 800477c:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004780:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8004782:	6013      	str	r3, [r2, #0]
				(int32_t)pdev->tuning_parms.tp_range_timeout_lpa_us;
	break;
 8004784:	4770      	bx	lr
		*ptuning_parm_value =
 8004786:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800478a:	2000      	movs	r0, #0
		*ptuning_parm_value =
 800478c:	6013      	str	r3, [r2, #0]
	break;
 800478e:	4770      	bx	lr
				(int32_t)pdev->low_power_auto_data.vhv_loop_bound;
 8004790:	f890 32e4 	ldrb.w	r3, [r0, #740]	; 0x2e4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004794:	2000      	movs	r0, #0
				(int32_t)pdev->low_power_auto_data.vhv_loop_bound;
 8004796:	6013      	str	r3, [r2, #0]
	break;
 8004798:	4770      	bx	lr
		*ptuning_parm_value =
 800479a:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800479e:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80047a0:	6013      	str	r3, [r2, #0]
	break;
 80047a2:	4770      	bx	lr
		*ptuning_parm_value =
 80047a4:	f8d0 30e4 	ldr.w	r3, [r0, #228]	; 0xe4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80047a8:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80047aa:	6013      	str	r3, [r2, #0]
	break;
 80047ac:	4770      	bx	lr
		*ptuning_parm_value =
 80047ae:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80047b2:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80047b4:	6013      	str	r3, [r2, #0]
	break;
 80047b6:	4770      	bx	lr
		*ptuning_parm_value =
 80047b8:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80047bc:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80047be:	6013      	str	r3, [r2, #0]
	break;
 80047c0:	4770      	bx	lr
		*ptuning_parm_value =
 80047c2:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80047c6:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80047c8:	6013      	str	r3, [r2, #0]
	break;
 80047ca:	4770      	bx	lr
		*ptuning_parm_value =
 80047cc:	f8d0 30d0 	ldr.w	r3, [r0, #208]	; 0xd0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80047d0:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80047d2:	6013      	str	r3, [r2, #0]
	break;
 80047d4:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_dss_target_timed_mcps;
 80047d6:	f8b0 30cc 	ldrh.w	r3, [r0, #204]	; 0xcc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80047da:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_dss_target_timed_mcps;
 80047dc:	6013      	str	r3, [r2, #0]
	break;
 80047de:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_dss_target_lite_mcps;
 80047e0:	f8b0 30ca 	ldrh.w	r3, [r0, #202]	; 0xca
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80047e4:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_dss_target_lite_mcps;
 80047e6:	6013      	str	r3, [r2, #0]
	break;
 80047e8:	4770      	bx	lr
				(int32_t)pdev->ssc_cfg.rate_limit_mcps;
 80047ea:	f8b0 3128 	ldrh.w	r3, [r0, #296]	; 0x128
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80047ee:	2000      	movs	r0, #0
				(int32_t)pdev->ssc_cfg.rate_limit_mcps;
 80047f0:	6013      	str	r3, [r2, #0]
	break;
 80047f2:	4770      	bx	lr
				(int32_t)pdev->ssc_cfg.vcsel_start;
 80047f4:	f890 3122 	ldrb.w	r3, [r0, #290]	; 0x122
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80047f8:	2000      	movs	r0, #0
				(int32_t)pdev->ssc_cfg.vcsel_start;
 80047fa:	6013      	str	r3, [r2, #0]
	break;
 80047fc:	4770      	bx	lr
				(int32_t)pdev->ssc_cfg.vcsel_period;
 80047fe:	f890 3121 	ldrb.w	r3, [r0, #289]	; 0x121
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004802:	2000      	movs	r0, #0
				(int32_t)pdev->ssc_cfg.vcsel_period;
 8004804:	6013      	str	r3, [r2, #0]
	break;
 8004806:	4770      	bx	lr
				(int32_t)pdev->offsetcal_cfg.mm2_num_of_samples;
 8004808:	f890 3156 	ldrb.w	r3, [r0, #342]	; 0x156
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800480c:	2000      	movs	r0, #0
				(int32_t)pdev->offsetcal_cfg.mm2_num_of_samples;
 800480e:	6013      	str	r3, [r2, #0]
	break;
 8004810:	4770      	bx	lr
			(int32_t)pdev->offsetcal_cfg.mm1_num_of_samples;
 8004812:	f890 3155 	ldrb.w	r3, [r0, #341]	; 0x155
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004816:	2000      	movs	r0, #0
			(int32_t)pdev->offsetcal_cfg.mm1_num_of_samples;
 8004818:	6013      	str	r3, [r2, #0]
	break;
 800481a:	4770      	bx	lr
				(int32_t)pdev->offsetcal_cfg.pre_num_of_samples;
 800481c:	f890 3154 	ldrb.w	r3, [r0, #340]	; 0x154
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004820:	2000      	movs	r0, #0
				(int32_t)pdev->offsetcal_cfg.pre_num_of_samples;
 8004822:	6013      	str	r3, [r2, #0]
	break;
 8004824:	4770      	bx	lr
		*ptuning_parm_value =
 8004826:	f8d0 314c 	ldr.w	r3, [r0, #332]	; 0x14c
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800482a:	2000      	movs	r0, #0
		*ptuning_parm_value =
 800482c:	6013      	str	r3, [r2, #0]
	break;
 800482e:	4770      	bx	lr
		*ptuning_parm_value =
 8004830:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004834:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8004836:	6013      	str	r3, [r2, #0]
	break;
 8004838:	4770      	bx	lr
		*ptuning_parm_value =
 800483a:	f8d0 3148 	ldr.w	r3, [r0, #328]	; 0x148
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800483e:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8004840:	6013      	str	r3, [r2, #0]
	break;
 8004842:	4770      	bx	lr
				(int32_t)pdev->offsetcal_cfg.dss_config__target_total_rate_mcps;;
 8004844:	f8b0 3144 	ldrh.w	r3, [r0, #324]	; 0x144
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004848:	2000      	movs	r0, #0
				(int32_t)pdev->offsetcal_cfg.dss_config__target_total_rate_mcps;;
 800484a:	6013      	str	r3, [r2, #0]
	break;
 800484c:	4770      	bx	lr
				(int32_t)pdev->refspadchar.max_count_rate_limit_mcps;
 800484e:	f8b0 311c 	ldrh.w	r3, [r0, #284]	; 0x11c
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004852:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.max_count_rate_limit_mcps;
 8004854:	6013      	str	r3, [r2, #0]
	break;
 8004856:	4770      	bx	lr
				(int32_t)pdev->refspadchar.min_count_rate_limit_mcps;
 8004858:	f8b0 311a 	ldrh.w	r3, [r0, #282]	; 0x11a
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800485c:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.min_count_rate_limit_mcps;
 800485e:	6013      	str	r3, [r2, #0]
	break;
 8004860:	4770      	bx	lr
				(int32_t)pdev->refspadchar.target_count_rate_mcps;
 8004862:	f8b0 3118 	ldrh.w	r3, [r0, #280]	; 0x118
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004866:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.target_count_rate_mcps;
 8004868:	6013      	str	r3, [r2, #0]
	break;
 800486a:	4770      	bx	lr
		*ptuning_parm_value =
 800486c:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004870:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8004872:	6013      	str	r3, [r2, #0]
	break;
 8004874:	4770      	bx	lr
				(int32_t)pdev->refspadchar.vcsel_period;
 8004876:	f890 3111 	ldrb.w	r3, [r0, #273]	; 0x111
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800487a:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.vcsel_period;
 800487c:	6013      	str	r3, [r2, #0]
	break;
 800487e:	4770      	bx	lr
				(int32_t)pdev->refspadchar.device_test_mode;
 8004880:	f890 3110 	ldrb.w	r3, [r0, #272]	; 0x110
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004884:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.device_test_mode;
 8004886:	6013      	str	r3, [r2, #0]
	break;
 8004888:	4770      	bx	lr
				(int32_t)pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound;
 800488a:	f890 3160 	ldrb.w	r3, [r0, #352]	; 0x160
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800488e:	2000      	movs	r0, #0
				(int32_t)pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound;
 8004890:	6013      	str	r3, [r2, #0]
	break;
 8004892:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_timed_seed_cfg;
 8004894:	f890 30c6 	ldrb.w	r3, [r0, #198]	; 0xc6
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004898:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_timed_seed_cfg;
 800489a:	6013      	str	r3, [r2, #0]
	break;
 800489c:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_short;
 800489e:	f890 30af 	ldrb.w	r3, [r0, #175]	; 0xaf
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048a2:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_short;
 80048a4:	6013      	str	r3, [r2, #0]
	break;
 80048a6:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_med;
 80048a8:	f890 30ae 	ldrb.w	r3, [r0, #174]	; 0xae
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048ac:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_med;
 80048ae:	6013      	str	r3, [r2, #0]
	break;
 80048b0:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_long;
 80048b2:	f890 30ad 	ldrb.w	r3, [r0, #173]	; 0xad
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048b6:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_long;
 80048b8:	6013      	str	r3, [r2, #0]
	break;
 80048ba:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_short;
 80048bc:	f890 30ac 	ldrb.w	r3, [r0, #172]	; 0xac
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048c0:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_short;
 80048c2:	6013      	str	r3, [r2, #0]
	break;
 80048c4:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_med;
 80048c6:	f890 30ab 	ldrb.w	r3, [r0, #171]	; 0xab
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048ca:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_med;
 80048cc:	6013      	str	r3, [r2, #0]
	break;
 80048ce:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_long;
 80048d0:	f890 30aa 	ldrb.w	r3, [r0, #170]	; 0xaa
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048d4:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_long;
 80048d6:	6013      	str	r3, [r2, #0]
	break;
 80048d8:	4770      	bx	lr
				(int32_t)pdev->xtalk_cfg.lite_mode_crosstalk_margin_kcps;
 80048da:	f9b0 313e 	ldrsh.w	r3, [r0, #318]	; 0x13e
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048de:	2000      	movs	r0, #0
				(int32_t)pdev->xtalk_cfg.lite_mode_crosstalk_margin_kcps;
 80048e0:	6013      	str	r3, [r2, #0]
	break;
 80048e2:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_first_order_select;
 80048e4:	f890 30c8 	ldrb.w	r3, [r0, #200]	; 0xc8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048e8:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_first_order_select;
 80048ea:	6013      	str	r3, [r2, #0]
	break;
 80048ec:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_quantifier;
 80048ee:	f890 30c7 	ldrb.w	r3, [r0, #199]	; 0xc7
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048f2:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_quantifier;
 80048f4:	6013      	str	r3, [r2, #0]
	break;
 80048f6:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_seed_cfg ;
 80048f8:	f890 30c5 	ldrb.w	r3, [r0, #197]	; 0xc5
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80048fc:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_seed_cfg ;
 80048fe:	6013      	str	r3, [r2, #0]
	break;
 8004900:	4770      	bx	lr
				(int32_t)pdev->xtalk_cfg.crosstalk_range_ignore_threshold_mult;
 8004902:	f890 3140 	ldrb.w	r3, [r0, #320]	; 0x140
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004906:	2000      	movs	r0, #0
				(int32_t)pdev->xtalk_cfg.crosstalk_range_ignore_threshold_mult;
 8004908:	6013      	str	r3, [r2, #0]
	break;
 800490a:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_sigma_ref_mm;
 800490c:	f890 30c4 	ldrb.w	r3, [r0, #196]	; 0xc4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004910:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_sigma_ref_mm;
 8004912:	6013      	str	r3, [r2, #0]
	break;
 8004914:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_amb_width_ns;
 8004916:	f890 30c3 	ldrb.w	r3, [r0, #195]	; 0xc3
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800491a:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_amb_width_ns;
 800491c:	6013      	str	r3, [r2, #0]
	break;
 800491e:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_pulse_width_ns;
 8004920:	f890 30c2 	ldrb.w	r3, [r0, #194]	; 0xc2
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004924:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_pulse_width_ns;
 8004926:	6013      	str	r3, [r2, #0]
	break;
 8004928:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_short_min_count_rate_rtn_mcps;
 800492a:	f8b0 30c0 	ldrh.w	r3, [r0, #192]	; 0xc0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800492e:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_short_min_count_rate_rtn_mcps;
 8004930:	6013      	str	r3, [r2, #0]
	break;
 8004932:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_med_min_count_rate_rtn_mcps;
 8004934:	f8b0 30be 	ldrh.w	r3, [r0, #190]	; 0xbe
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004938:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_med_min_count_rate_rtn_mcps;
 800493a:	6013      	str	r3, [r2, #0]
	break;
 800493c:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_long_min_count_rate_rtn_mcps;
 800493e:	f8b0 30bc 	ldrh.w	r3, [r0, #188]	; 0xbc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004942:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_long_min_count_rate_rtn_mcps;
 8004944:	6013      	str	r3, [r2, #0]
	break;
 8004946:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_short_sigma_thresh_mm;
 8004948:	f8b0 30ba 	ldrh.w	r3, [r0, #186]	; 0xba
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800494c:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_short_sigma_thresh_mm;
 800494e:	6013      	str	r3, [r2, #0]
	break;
 8004950:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_med_sigma_thresh_mm;
 8004952:	f8b0 30b8 	ldrh.w	r3, [r0, #184]	; 0xb8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004956:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_med_sigma_thresh_mm;
 8004958:	6013      	str	r3, [r2, #0]
	break;
 800495a:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_long_sigma_thresh_mm;
 800495c:	f8b0 30b6 	ldrh.w	r3, [r0, #182]	; 0xb6
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004960:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_long_sigma_thresh_mm;
 8004962:	6013      	str	r3, [r2, #0]
	break;
 8004964:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_min_clip;
 8004966:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800496a:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_min_clip;
 800496c:	6013      	str	r3, [r2, #0]
	break;
 800496e:	4770      	bx	lr
				(int32_t)pdev->gain_cal.standard_ranging_gain_factor;
 8004970:	f8b0 309c 	ldrh.w	r3, [r0, #156]	; 0x9c
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004974:	2000      	movs	r0, #0
				(int32_t)pdev->gain_cal.standard_ranging_gain_factor;
 8004976:	6013      	str	r3, [r2, #0]
	break;
 8004978:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_cal_repeat_rate;
 800497a:	f8b0 30b2 	ldrh.w	r3, [r0, #178]	; 0xb2
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800497e:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_cal_repeat_rate;
 8004980:	6013      	str	r3, [r2, #0]
	break;
 8004982:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_phasecal_target;
 8004984:	f890 30b1 	ldrb.w	r3, [r0, #177]	; 0xb1
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004988:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_phasecal_target;
 800498a:	6013      	str	r3, [r2, #0]
	break;
 800498c:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_consistency_lite_phase_tolerance;
 800498e:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8004992:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_consistency_lite_phase_tolerance;
 8004994:	6013      	str	r3, [r2, #0]
	break;
 8004996:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_tuning_parm_lld_version;
 8004998:	f8b0 30a8 	ldrh.w	r3, [r0, #168]	; 0xa8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800499c:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_tuning_parm_lld_version;
 800499e:	6013      	str	r3, [r2, #0]
	break;
 80049a0:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_tuning_parm_key_table_version;
 80049a2:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80049a6:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_tuning_parm_key_table_version;
 80049a8:	6013      	str	r3, [r2, #0]
	break;
 80049aa:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_tuning_parm_version;
 80049ac:	f8b0 30a4 	ldrh.w	r3, [r0, #164]	; 0xa4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80049b0:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_tuning_parm_version;
 80049b2:	6013      	str	r3, [r2, #0]
	break;
 80049b4:	4770      	bx	lr


	default:
		*ptuning_parm_value = 0x7FFFFFFF;
 80049b6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
		status = VL53L1_ERROR_INVALID_PARAMS;
 80049ba:	f06f 0003 	mvn.w	r0, #3
		*ptuning_parm_value = 0x7FFFFFFF;
 80049be:	6013      	str	r3, [r2, #0]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 80049c0:	4770      	bx	lr
 80049c2:	bf00      	nop

080049c4 <VL53L1_init_refspadchar_config_struct>:


#ifndef VL53L1_NOCALIB
VL53L1_Error VL53L1_init_refspadchar_config_struct(
	VL53L1_refspadchar_config_t   *pdata)
{
 80049c4:	b410      	push	{r4}
 80049c6:	4603      	mov	r3, r0
	 * target_count_rate_mcps    = 0x0A00 - 9.7 -> 20.0 Mcps
	 * min_count_rate_limit_mcps = 0x0500 - 9.7 -> 10.0 Mcps
	 * max_count_rate_limit_mcps = 0x1400 - 9.7 -> 40.0 Mcps
	 */

	pdata->device_test_mode =
 80049c8:	f640 3408 	movw	r4, #2824	; 0xb08
			VL53L1_TUNINGPARM_REFSPADCHAR_DEVICE_TEST_MODE_DEFAULT;
	pdata->vcsel_period              =
			VL53L1_TUNINGPARM_REFSPADCHAR_VCSEL_PERIOD_DEFAULT;
	pdata->timeout_us                =
 80049cc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
			VL53L1_TUNINGPARM_REFSPADCHAR_PHASECAL_TIMEOUT_US_DEFAULT;
	pdata->target_count_rate_mcps    =
 80049d0:	4905      	ldr	r1, [pc, #20]	; (80049e8 <VL53L1_init_refspadchar_config_struct+0x24>)
			VL53L1_TUNINGPARM_REFSPADCHAR_TARGET_COUNT_RATE_MCPS_DEFAULT;
	pdata->min_count_rate_limit_mcps =
			VL53L1_TUNINGPARM_REFSPADCHAR_MIN_COUNTRATE_LIMIT_MCPS_DEFAULT;
	pdata->max_count_rate_limit_mcps =
 80049d2:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
	pdata->device_test_mode =
 80049d6:	801c      	strh	r4, [r3, #0]
	pdata->timeout_us                =
 80049d8:	6058      	str	r0, [r3, #4]
			VL53L1_TUNINGPARM_REFSPADCHAR_MAX_COUNTRATE_LIMIT_MCPS_DEFAULT;

	LOG_FUNCTION_END(status);

	return status;
}
 80049da:	2000      	movs	r0, #0
	pdata->target_count_rate_mcps    =
 80049dc:	6099      	str	r1, [r3, #8]
	pdata->max_count_rate_limit_mcps =
 80049de:	819a      	strh	r2, [r3, #12]
}
 80049e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80049e4:	4770      	bx	lr
 80049e6:	bf00      	nop
 80049e8:	05000a00 	.word	0x05000a00

080049ec <VL53L1_init_ssc_config_struct>:


#ifndef VL53L1_NOCALIB
VL53L1_Error VL53L1_init_ssc_config_struct(
	VL53L1_ssc_config_t   *pdata)
{
 80049ec:	4603      	mov	r3, r0

	/* VCSEL pulse width */
	pdata->vcsel_width  = 0x02;

	/* SSC timeout [us] */
	pdata->timeout_us   = 36000;
 80049ee:	f648 41a0 	movw	r1, #36000	; 0x8ca0
	pdata->array_select = VL53L1_DEVICESSCARRAY_RTN;
 80049f2:	4803      	ldr	r0, [pc, #12]	; (8004a00 <VL53L1_init_ssc_config_struct+0x14>)

	/* SSC rate limit [Mcps]
	 * - 9.7 for VCSEL ON
	 * - 1.15 for VCSEL OFF
	 */
	pdata->rate_limit_mcps =
 80049f4:	220c      	movs	r2, #12
	pdata->timeout_us   = 36000;
 80049f6:	6059      	str	r1, [r3, #4]
	pdata->array_select = VL53L1_DEVICESSCARRAY_RTN;
 80049f8:	6018      	str	r0, [r3, #0]
			VL53L1_TUNINGPARM_SPADMAP_RATE_LIMIT_MCPS_DEFAULT;

	LOG_FUNCTION_END(status);

	return status;
}
 80049fa:	2000      	movs	r0, #0
	pdata->rate_limit_mcps =
 80049fc:	811a      	strh	r2, [r3, #8]
}
 80049fe:	4770      	bx	lr
 8004a00:	020f1200 	.word	0x020f1200

08004a04 <VL53L1_init_xtalk_config_struct>:


VL53L1_Error VL53L1_init_xtalk_config_struct(
	VL53L1_customer_nvm_managed_t *pnvm,
	VL53L1_xtalk_config_t   *pdata)
{
 8004a04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	pdata->algo__crosstalk_compensation_plane_offset_kcps      =
		pnvm->algo__crosstalk_compensation_plane_offset_kcps;
	pdata->algo__crosstalk_compensation_x_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_x_plane_gradient_kcps;
	pdata->algo__crosstalk_compensation_y_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_y_plane_gradient_kcps;
 8004a06:	f9b0 200e 	ldrsh.w	r2, [r0, #14]
	pdata->nvm_default__crosstalk_compensation_x_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_x_plane_gradient_kcps;
	pdata->nvm_default__crosstalk_compensation_y_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_y_plane_gradient_kcps;

	pdata->lite_mode_crosstalk_margin_kcps                     =
 8004a0a:	2700      	movs	r7, #0
		pnvm->algo__crosstalk_compensation_plane_offset_kcps;
 8004a0c:	8943      	ldrh	r3, [r0, #10]
			VL53L1_TUNINGPARM_LITE_XTALK_MARGIN_KCPS_DEFAULT;

	/* Default for Range Ignore Threshold Mult = 2.0 */

	pdata->crosstalk_range_ignore_threshold_mult =
 8004a0e:	2640      	movs	r6, #64	; 0x40
		pnvm->algo__crosstalk_compensation_x_plane_gradient_kcps;
 8004a10:	f9b0 500c 	ldrsh.w	r5, [r0, #12]
 8004a14:	68c4      	ldr	r4, [r0, #12]
	pdata->nvm_default__crosstalk_compensation_plane_offset_kcps      =
 8004a16:	608b      	str	r3, [r1, #8]
	pdata->nvm_default__crosstalk_compensation_x_plane_gradient_kcps  =
 8004a18:	818d      	strh	r5, [r1, #12]
	pdata->nvm_default__crosstalk_compensation_y_plane_gradient_kcps  =
 8004a1a:	81ca      	strh	r2, [r1, #14]
	pdata->lite_mode_crosstalk_margin_kcps                     =
 8004a1c:	824f      	strh	r7, [r1, #18]
	pdata->crosstalk_range_ignore_threshold_mult =
 8004a1e:	750e      	strb	r6, [r1, #20]
	pdata->algo__crosstalk_compensation_x_plane_gradient_kcps  =
 8004a20:	e9c1 3400 	strd	r3, r4, [r1]
			VL53L1_TUNINGPARM_LITE_RIT_MULT_DEFAULT;

	if ((pdata->algo__crosstalk_compensation_plane_offset_kcps == 0x00)
 8004a24:	b923      	cbnz	r3, 8004a30 <VL53L1_init_xtalk_config_struct+0x2c>
		&& (pdata->algo__crosstalk_compensation_x_plane_gradient_kcps == 0x00)
		&& (pdata->algo__crosstalk_compensation_y_plane_gradient_kcps == 0x00))
 8004a26:	b91c      	cbnz	r4, 8004a30 <VL53L1_init_xtalk_config_struct+0x2c>
 8004a28:	740c      	strb	r4, [r1, #16]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8004a2a:	2000      	movs	r0, #0
		pdata->crosstalk_range_ignore_threshold_rate_mcps = 0;
 8004a2c:	82cc      	strh	r4, [r1, #22]
}
 8004a2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a30:	2001      	movs	r0, #1
 8004a32:	460c      	mov	r4, r1
 8004a34:	7408      	strb	r0, [r1, #16]
			VL53L1_calc_range_ignore_threshold(
 8004a36:	4629      	mov	r1, r5
 8004a38:	4618      	mov	r0, r3
 8004a3a:	2340      	movs	r3, #64	; 0x40
 8004a3c:	f001 f9e8 	bl	8005e10 <VL53L1_calc_range_ignore_threshold>
		pdata->crosstalk_range_ignore_threshold_rate_mcps =
 8004a40:	82e0      	strh	r0, [r4, #22]
}
 8004a42:	2000      	movs	r0, #0
 8004a44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a46:	bf00      	nop

08004a48 <VL53L1_init_offset_cal_config_struct>:

#ifndef VL53L1_NOCALIB
VL53L1_Error VL53L1_init_offset_cal_config_struct(
	VL53L1_offsetcal_config_t   *pdata)
{
 8004a48:	b430      	push	{r4, r5}
 8004a4a:	4603      	mov	r3, r0
	/* Preset Timeout and DSS defaults */

	pdata->dss_config__target_total_rate_mcps          =
			VL53L1_TUNINGPARM_OFFSET_CAL_DSS_RATE_MCPS_DEFAULT;
	/* 20.0 Mcps */
	pdata->phasecal_config_timeout_us                  =
 8004a4c:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
	pdata->dss_config__target_total_rate_mcps          =
 8004a50:	f44f 6020 	mov.w	r0, #2560	; 0xa00
			VL53L1_TUNINGPARM_OFFSET_CAL_PHASECAL_TIMEOUT_US_DEFAULT;
	/* 1000 us */
	pdata->range_config_timeout_us                     =
			VL53L1_TUNINGPARM_OFFSET_CAL_RANGE_TIMEOUT_US_DEFAULT;
	/* 13000 us */
	pdata->mm_config_timeout_us                        =
 8004a54:	f642 0408 	movw	r4, #10248	; 0x2808

	/* Init number of averaged samples */

	pdata->pre_num_of_samples                          =
			VL53L1_TUNINGPARM_OFFSET_CAL_PRE_SAMPLES_DEFAULT;
	pdata->mm1_num_of_samples                          =
 8004a58:	2109      	movs	r1, #9
	pdata->phasecal_config_timeout_us                  =
 8004a5a:	f243 22c8 	movw	r2, #13000	; 0x32c8
	pdata->dss_config__target_total_rate_mcps          =
 8004a5e:	8018      	strh	r0, [r3, #0]
			VL53L1_TUNINGPARM_OFFSET_CAL_MM2_SAMPLES_DEFAULT;

	LOG_FUNCTION_END(status);

	return status;
}
 8004a60:	2000      	movs	r0, #0
	pdata->phasecal_config_timeout_us                  =
 8004a62:	605d      	str	r5, [r3, #4]
	pdata->mm_config_timeout_us                        =
 8004a64:	821c      	strh	r4, [r3, #16]
	pdata->mm1_num_of_samples                          =
 8004a66:	7499      	strb	r1, [r3, #18]
	pdata->range_config_timeout_us                     =
 8004a68:	e9c3 2202 	strd	r2, r2, [r3, #8]
}
 8004a6c:	bc30      	pop	{r4, r5}
 8004a6e:	4770      	bx	lr

08004a70 <VL53L1_init_tuning_parm_storage_struct>:
#endif

VL53L1_Error VL53L1_init_tuning_parm_storage_struct(
	VL53L1_tuning_parm_storage_t   *pdata)
{
 8004a70:	b4f0      	push	{r4, r5, r6, r7}
 8004a72:	4603      	mov	r3, r0
	 *
	 * - Custom overwrite possible from vl53l1_set_tuning_parms()
	 * - via tuning file input
	 */

	pdata->tp_tuning_parm_version              =
 8004a74:	4c1e      	ldr	r4, [pc, #120]	; (8004af0 <VL53L1_init_tuning_parm_storage_struct+0x80>)
 8004a76:	481f      	ldr	r0, [pc, #124]	; (8004af4 <VL53L1_init_tuning_parm_storage_struct+0x84>)
			VL53L1_TUNINGPARM_VERSION_DEFAULT;
	pdata->tp_tuning_parm_key_table_version    =
			VL53L1_TUNINGPARM_KEY_TABLE_VERSION_DEFAULT;
	pdata->tp_tuning_parm_lld_version          =
			VL53L1_TUNINGPARM_LLD_VERSION_DEFAULT;
	pdata->tp_init_phase_rtn_lite_long         =
 8004a78:	f242 1102 	movw	r1, #8450	; 0x2102
	pdata->tp_tuning_parm_version              =
 8004a7c:	605c      	str	r4, [r3, #4]
			VL53L1_TUNINGPARM_PHASECAL_TARGET_DEFAULT;
	pdata->tp_cal_repeat_rate                  =
			VL53L1_TUNINGPARM_LITE_CAL_REPEAT_RATE_DEFAULT;
	pdata->tp_lite_min_clip                    =
			VL53L1_TUNINGPARM_LITE_MIN_CLIP_MM_DEFAULT;
	pdata->tp_lite_long_sigma_thresh_mm        =
 8004a7e:	f04f 16c0 	mov.w	r6, #12583104	; 0xc000c0
 8004a82:	4c1d      	ldr	r4, [pc, #116]	; (8004af8 <VL53L1_init_tuning_parm_storage_struct+0x88>)
			VL53L1_TUNINGPARM_LITE_SIGMA_REF_MM_DEFAULT;
	pdata->tp_lite_seed_cfg                      =
			VL53L1_TUNINGPARM_LITE_SEED_CONFIG_DEFAULT;
	pdata->tp_timed_seed_cfg                     =
			VL53L1_TUNINGPARM_TIMED_SEED_CONFIG_DEFAULT;
	pdata->tp_lite_quantifier                    =
 8004a84:	2502      	movs	r5, #2
	pdata->tp_init_phase_rtn_lite_long         =
 8004a86:	4a1d      	ldr	r2, [pc, #116]	; (8004afc <VL53L1_init_tuning_parm_storage_struct+0x8c>)
			VL53L1_TUNINGPARM_LITE_DSS_CONFIG_TARGET_TOTAL_RATE_MCPS_DEFAULT;
	pdata->tp_dss_target_timed_mcps              =
			VL53L1_TUNINGPARM_TIMED_DSS_CONFIG_TARGET_TOTAL_RATE_MCPS_DEFAULT;
	pdata->tp_phasecal_timeout_lite_us           =
			VL53L1_TUNINGPARM_LITE_PHASECAL_CONFIG_TIMEOUT_US;
	pdata->tp_phasecal_timeout_timed_us          =
 8004a88:	f44f 777a 	mov.w	r7, #1000	; 0x3e8
	pdata->tp_lite_long_sigma_thresh_mm        =
 8004a8c:	f8c3 4012 	str.w	r4, [r3, #18]
 8004a90:	f5a4 0428 	sub.w	r4, r4, #11010048	; 0xa80000
	pdata->tp_init_phase_rtn_lite_long         =
 8004a94:	609a      	str	r2, [r3, #8]
	pdata->tp_dss_target_lite_mcps               =
 8004a96:	f04f 220a 	mov.w	r2, #167774720	; 0xa000a00
	pdata->tp_init_phase_rtn_lite_long         =
 8004a9a:	60d9      	str	r1, [r3, #12]
	pdata->tp_phasecal_timeout_lite_us           =
 8004a9c:	f248 0130 	movw	r1, #32816	; 0x8030
	pdata->tp_tuning_parm_version              =
 8004aa0:	6018      	str	r0, [r3, #0]
	pdata->tp_timed_seed_cfg                     =
 8004aa2:	2001      	movs	r0, #1
	pdata->tp_lite_long_sigma_thresh_mm        =
 8004aa4:	f8c3 4016 	str.w	r4, [r3, #22]
	pdata->tp_lite_sigma_est_pulse_width_ns      =
 8004aa8:	4c15      	ldr	r4, [pc, #84]	; (8004b00 <VL53L1_init_tuning_parm_storage_struct+0x90>)
	pdata->tp_timed_seed_cfg                     =
 8004aaa:	f883 0022 	strb.w	r0, [r3, #34]	; 0x22
			VL53L1_TUNINGPARM_LITE_MM_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_mm_timeout_timed_us                =
			VL53L1_TUNINGPARM_TIMED_MM_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_range_timeout_lite_us              =
			VL53L1_TUNINGPARM_LITE_RANGE_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_range_timeout_timed_us             =
 8004aae:	f243 20c8 	movw	r0, #13000	; 0x32c8
	pdata->tp_lite_quantifier                    =
 8004ab2:	f883 5023 	strb.w	r5, [r3, #35]	; 0x23
			VL53L1_TUNINGPARM_TIMED_RANGE_CONFIG_TIMEOUT_US_DEFAULT;

	/* Added for Patch_LowPowerAutoMode */

	pdata->tp_mm_timeout_lpa_us =
 8004ab6:	f44f 752f 	mov.w	r5, #700	; 0x2bc
	pdata->tp_lite_sigma_est_pulse_width_ns      =
 8004aba:	f8c3 401e 	str.w	r4, [r3, #30]
			VL53L1_TUNINGPARM_LOWPOWERAUTO_MM_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_range_timeout_lpa_us =
 8004abe:	f44f 54fa 	mov.w	r4, #8000	; 0x1f40
	pdata->tp_lite_long_sigma_thresh_mm        =
 8004ac2:	f8c3 601a 	str.w	r6, [r3, #26]
	pdata->tp_range_timeout_lite_us              =
 8004ac6:	f24f 6618 	movw	r6, #63000	; 0xf618
	pdata->tp_dss_target_lite_mcps               =
 8004aca:	f8c3 2026 	str.w	r2, [r3, #38]	; 0x26
	pdata->tp_cal_repeat_rate                  =
 8004ace:	2200      	movs	r2, #0
	pdata->tp_phasecal_timeout_lite_us           =
 8004ad0:	62d9      	str	r1, [r3, #44]	; 0x2c
	pdata->tp_mm_timeout_lite_us                 =
 8004ad2:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
	pdata->tp_phasecal_timeout_timed_us          =
 8004ad6:	631f      	str	r7, [r3, #48]	; 0x30
	pdata->tp_mm_timeout_lpa_us =
 8004ad8:	63dd      	str	r5, [r3, #60]	; 0x3c
	pdata->tp_range_timeout_lpa_us =
 8004ada:	649c      	str	r4, [r3, #72]	; 0x48
	pdata->tp_cal_repeat_rate                  =
 8004adc:	741a      	strb	r2, [r3, #16]
	pdata->tp_lite_first_order_select            =
 8004ade:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
	pdata->tp_range_timeout_timed_us             =
 8004ae2:	e9c3 6010 	strd	r6, r0, [r3, #64]	; 0x40
	pdata->tp_mm_timeout_timed_us                =
 8004ae6:	e9c3 110d 	strd	r1, r1, [r3, #52]	; 0x34


	LOG_FUNCTION_END(status);

	return status;
}
 8004aea:	4610      	mov	r0, r2
 8004aec:	bcf0      	pop	{r4, r5, r6, r7}
 8004aee:	4770      	bx	lr
 8004af0:	0a0e8041 	.word	0x0a0e8041
 8004af4:	80018003 	.word	0x80018003
 8004af8:	01680168 	.word	0x01680168
 8004afc:	060a0e06 	.word	0x060a0e06
 8004b00:	02011008 	.word	0x02011008

08004b04 <VL53L1_preset_mode_standard_ranging>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8004b04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004b08:	9d08      	ldr	r5, [sp, #32]

	/* Static Configuration */

	/* dss_config__target_total_rate_mcps = 20.0 Mcps 9.7 fp */
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
	pstatic->debug__ctrl                                      = 0x00;
 8004b0a:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004b0c:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8004b10:	f8df c114 	ldr.w	ip, [pc, #276]	; 8004c28 <VL53L1_preset_mode_standard_ranging+0x124>
 8004b14:	4f3f      	ldr	r7, [pc, #252]	; (8004c14 <VL53L1_preset_mode_standard_ranging+0x110>)
	pstatic->sigma_estimator__effective_ambient_width_ns      =
			ptuning_parms->tp_lite_sigma_est_amb_width_ns;
	pstatic->sigma_estimator__sigma_ref_mm                    =
			ptuning_parms->tp_lite_sigma_ref_mm;
	/* Minimum allowable value of 1 - 0 disables the feature */
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004b16:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8004b18:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;

	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;

	/* set RIT distance to 20 mm */
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004b1c:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8004b20:	f8c0 700e 	str.w	r7, [r0, #14]
			ptuning_parms->tp_consistency_lite_phase_tolerance;
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
	pstatic->sd_config__reset_stages_msb                      = 0x00;
	pstatic->sd_config__reset_stages_lsb                      = 0x00;

	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8004b24:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8004b28:	f8c0 4002 	str.w	r4, [r0, #2]
 8004b2c:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004b30:	f8a0 e000 	strh.w	lr, [r0]
	 * 0 - disables
	 * 12-bit value -> 4095 max
	 */
	pgeneral->cal_config__repeat_rate                         =
			ptuning_parms->tp_cal_repeat_rate;
	pgeneral->global_config__vcsel_width                      = 0x02;
 8004b34:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8004b38:	f895 801e 	ldrb.w	r8, [r5, #30]
 8004b3c:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8004b40:	f895 801f 	ldrb.w	r8, [r5, #31]
 8004b44:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004b48:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8004b4c:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8004b4e:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004b50:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004b52:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004b56:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8004b5a:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8004b5c:	f895 8010 	ldrb.w	r8, [r5, #16]
 8004b60:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8004b64:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8004b68:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8004b6a:	f880 801c 	strb.w	r8, [r0, #28]
			VL53L1_DEVICEDSSMODE__TARGET_RATE;
	/* format for threshold high and low is 9.7 fp */
	pgeneral->system__thresh_rate_high                        = 0x0000;
	pgeneral->system__thresh_rate_low                         = 0x0000;
	/* The format for manual effective spads is 8.8 -> 0x8C00 = 140.00 */
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8004b6e:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8004b72:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8004b74:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__min_spads_limit                     = 0x01;

	/* Timing Configuration */

	/* Default timing of 2ms */
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004b76:	f640 10f5 	movw	r0, #2549	; 0x9f5
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8004b7a:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8004b7c:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8004b7e:	f8a1 e006 	strh.w	lr, [r1, #6]

	/* Phase limit register formats = 5.3
	 * low   = 0x08 ->  1.0
	 * high  = 0x78 -> 15.0 -> 3.0m
	 */
	ptiming->range_config__valid_phase_low                    = 0x08;
 8004b82:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 8004b86:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8004b88:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8004b8a:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8004b8c:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8004b8e:	4f22      	ldr	r7, [pc, #136]	; (8004c18 <VL53L1_preset_mode_standard_ranging+0x114>)
	pgeneral->dss_config__roi_mode_control =
 8004b90:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8004b92:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8004b96:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8004b98:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004b9c:	4f1f      	ldr	r7, [pc, #124]	; (8004c1c <VL53L1_preset_mode_standard_ranging+0x118>)
 8004b9e:	4920      	ldr	r1, [pc, #128]	; (8004c20 <VL53L1_preset_mode_standard_ranging+0x11c>)
 8004ba0:	8110      	strh	r0, [r2, #8]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8004ba2:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004ba4:	6011      	str	r1, [r2, #0]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
	pdynamic->system__seed_config =
			ptuning_parms->tp_lite_seed_cfg;

	/* Timing A */
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8004ba6:	f640 110b 	movw	r1, #2315	; 0x90b
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004baa:	6057      	str	r7, [r2, #4]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8004bac:	f8b5 801a 	ldrh.w	r8, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 8004bb0:	f8b5 9014 	ldrh.w	r9, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8004bb4:	f8a2 800c 	strh.w	r8, [r2, #12]

	/* Below defaults will be overwritten by zone_cfg
	 * Spad no = 199 (0xC7)
	 * Spad no =  63 (0x3F)
	 */
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8004bb8:	f04f 08c7 	mov.w	r8, #199	; 0xc7
	ptiming->range_config__sigma_thresh                       =
 8004bbc:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8004bc0:	f882 e00e 	strb.w	lr, [r2, #14]
	/* 16x16 ROI */
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;


	pdynamic->system__sequence_config                          = \
 8004bc4:	f04f 0edb 	mov.w	lr, #219	; 0xdb
	ptiming->range_config__valid_phase_high                   = 0x78;
 8004bc8:	73d0      	strb	r0, [r2, #15]
			VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK;

	LOG_FUNCTION_END(status);

	return status;
}
 8004bca:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8004bcc:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8004bce:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8004bd0:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8004bd2:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8004bd6:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8004bd8:	f895 2021 	ldrb.w	r2, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8004bdc:	8119      	strh	r1, [r3, #8]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8004bde:	2102      	movs	r1, #2
	pdynamic->system__seed_config =
 8004be0:	71da      	strb	r2, [r3, #7]
	pdynamic->sd_config__initial_phase_sd0                     =
 8004be2:	79ea      	ldrb	r2, [r5, #7]
 8004be4:	729a      	strb	r2, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8004be6:	7aaa      	ldrb	r2, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8004be8:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8004bea:	72da      	strb	r2, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8004bec:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
	psystem->system__stream_count_ctrl                         = 0x00;
 8004bf0:	4a0c      	ldr	r2, [pc, #48]	; (8004c24 <VL53L1_preset_mode_standard_ranging+0x120>)
	pdynamic->sd_config__first_order_select =
 8004bf2:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8004bf4:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8004bf8:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 8004bfc:	739c      	strb	r4, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8004bfe:	f883 800f 	strb.w	r8, [r3, #15]
	pdynamic->system__sequence_config                          = \
 8004c02:	f883 e011 	strb.w	lr, [r3, #17]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8004c06:	7499      	strb	r1, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 8004c08:	9b07      	ldr	r3, [sp, #28]
 8004c0a:	f8c3 2001 	str.w	r2, [r3, #1]
}
 8004c0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004c12:	bf00      	nop
 8004c14:	00080200 	.word	0x00080200
 8004c18:	01ff3800 	.word	0x01ff3800
 8004c1c:	010bcc01 	.word	0x010bcc01
 8004c20:	20001a00 	.word	0x20001a00
 8004c24:	21010100 	.word	0x21010100
 8004c28:	02110000 	.word	0x02110000

08004c2c <VL53L1_preset_mode_standard_ranging_short_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8004c2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004c30:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8004c32:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004c34:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8004c38:	f8df c114 	ldr.w	ip, [pc, #276]	; 8004d50 <VL53L1_preset_mode_standard_ranging_short_range+0x124>
 8004c3c:	4f40      	ldr	r7, [pc, #256]	; (8004d40 <VL53L1_preset_mode_standard_ranging_short_range+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004c3e:	2601      	movs	r6, #1
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004c40:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8004c44:	f04f 6e32 	mov.w	lr, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8004c48:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004c4c:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8004c50:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8004c54:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8004c58:	f8c0 4002 	str.w	r4, [r0, #2]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8004c5c:	f04f 09c7 	mov.w	r9, #199	; 0xc7
	pstatic->debug__ctrl                                      = 0x00;
 8004c60:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8004c64:	f895 801e 	ldrb.w	r8, [r5, #30]
 8004c68:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8004c6c:	f895 801f 	ldrb.w	r8, [r5, #31]
 8004c70:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004c74:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8004c78:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8004c7a:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8004c7c:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004c7e:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004c80:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004c84:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_min_clip                             =
 8004c88:	f895 8010 	ldrb.w	r8, [r5, #16]
 8004c8c:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8004c90:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8004c94:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8004c96:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8004c9a:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8004c9e:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8004ca0:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8004ca2:	f8c1 e000 	str.w	lr, [r1]
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 8004ca6:	f64c 4e01 	movw	lr, #52225	; 0xcc01
	pgeneral->cal_config__repeat_rate                         =
 8004caa:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8004cac:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8004cae:	8088      	strh	r0, [r1, #4]
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 8004cb0:	20f5      	movs	r0, #245	; 0xf5
	pgeneral->phasecal_config__target                         =
 8004cb2:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8004cb4:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8004cb6:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8004cb8:	4f22      	ldr	r7, [pc, #136]	; (8004d44 <VL53L1_preset_mode_standard_ranging_short_range+0x118>)
	pgeneral->dss_config__roi_mode_control =
 8004cba:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8004cbc:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8004cc0:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8004cc2:	f8a1 8010 	strh.w	r8, [r1, #16]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8004cc6:	f04f 0802 	mov.w	r8, #2
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004cca:	491f      	ldr	r1, [pc, #124]	; (8004d48 <VL53L1_preset_mode_standard_ranging_short_range+0x11c>)
	ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 8004ccc:	71d6      	strb	r6, [r2, #7]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004cce:	6011      	str	r1, [r2, #0]
	pdynamic->system__sequence_config                          = \
 8004cd0:	21db      	movs	r1, #219	; 0xdb
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 8004cd2:	f8a2 e004 	strh.w	lr, [r2, #4]
		 * min_count_rate_rtn_limit_mcps = 0x0080 ->  9.7fp ->  1.0 Mcps
		 * valid_phase_low               = 0x08 -> 5.3fp -> 1.0
		 * valid_phase_high              = 0x38 -> 5.3fp -> 7.0 -> 1.4m
		 */

		ptiming->range_config__vcsel_period_a                = 0x07;
 8004cd6:	f04f 0e07 	mov.w	lr, #7
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 8004cda:	7210      	strb	r0, [r2, #8]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8004cdc:	4620      	mov	r0, r4
	ptiming->system__fractional_enable                        = 0x00;
 8004cde:	7514      	strb	r4, [r2, #20]
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8004ce0:	6114      	str	r4, [r2, #16]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8004ce2:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8004ce4:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8004ce8:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8004cea:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8004cee:	731e      	strb	r6, [r3, #12]
		ptiming->range_config__vcsel_period_b                = 0x05;
 8004cf0:	2605      	movs	r6, #5
	pdynamic->system__seed_config =
 8004cf2:	71dc      	strb	r4, [r3, #7]
	pdynamic->sd_config__first_order_select =
 8004cf4:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
	psystem->system__stream_count_ctrl                         = 0x00;
 8004cf8:	4f14      	ldr	r7, [pc, #80]	; (8004d4c <VL53L1_preset_mode_standard_ranging_short_range+0x120>)
	pdynamic->sd_config__first_order_select =
 8004cfa:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8004cfc:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->system__sequence_config                          = \
 8004d00:	7459      	strb	r1, [r3, #17]
	psystem->system__stream_count_ctrl                         = 0x00;
 8004d02:	9907      	ldr	r1, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8004d04:	f883 c010 	strb.w	ip, [r3, #16]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8004d08:	f240 5c07 	movw	ip, #1287	; 0x507
	pdynamic->sd_config__quantifier         =
 8004d0c:	739c      	strb	r4, [r3, #14]
		ptiming->range_config__valid_phase_low               = 0x08;
 8004d0e:	f643 0408 	movw	r4, #14344	; 0x3808
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8004d12:	f883 900f 	strb.w	r9, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8004d16:	f883 8012 	strb.w	r8, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 8004d1a:	f8c1 7001 	str.w	r7, [r1, #1]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8004d1e:	f882 e006 	strb.w	lr, [r2, #6]
		ptiming->range_config__vcsel_period_b                = 0x05;
 8004d22:	7256      	strb	r6, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8004d24:	8aef      	ldrh	r7, [r5, #22]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8004d26:	8bae      	ldrh	r6, [r5, #28]
		ptiming->range_config__sigma_thresh                  =
 8004d28:	8157      	strh	r7, [r2, #10]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8004d2a:	8196      	strh	r6, [r2, #12]
		ptiming->range_config__valid_phase_low               = 0x08;
 8004d2c:	81d4      	strh	r4, [r2, #14]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8004d2e:	f8a3 c008 	strh.w	ip, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 8004d32:	7a2a      	ldrb	r2, [r5, #8]
 8004d34:	729a      	strb	r2, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8004d36:	7aea      	ldrb	r2, [r5, #11]
 8004d38:	72da      	strb	r2, [r3, #11]
}
 8004d3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004d3e:	bf00      	nop
 8004d40:	00080200 	.word	0x00080200
 8004d44:	01ff3800 	.word	0x01ff3800
 8004d48:	20001a00 	.word	0x20001a00
 8004d4c:	21010100 	.word	0x21010100
 8004d50:	02110000 	.word	0x02110000

08004d54 <VL53L1_preset_mode_standard_ranging_long_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8004d54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004d58:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8004d5a:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004d5c:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8004d60:	f8df c114 	ldr.w	ip, [pc, #276]	; 8004e78 <VL53L1_preset_mode_standard_ranging_long_range+0x124>
 8004d64:	4f40      	ldr	r7, [pc, #256]	; (8004e68 <VL53L1_preset_mode_standard_ranging_long_range+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004d66:	2601      	movs	r6, #1
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004d68:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8004d6c:	f04f 6e32 	mov.w	lr, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8004d70:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004d74:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8004d78:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8004d7c:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8004d80:	f8c0 4002 	str.w	r4, [r0, #2]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8004d84:	f04f 09c7 	mov.w	r9, #199	; 0xc7
	pstatic->debug__ctrl                                      = 0x00;
 8004d88:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8004d8c:	f895 801e 	ldrb.w	r8, [r5, #30]
 8004d90:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8004d94:	f895 801f 	ldrb.w	r8, [r5, #31]
 8004d98:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004d9c:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8004da0:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8004da2:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8004da4:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004da6:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004da8:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004dac:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_min_clip                             =
 8004db0:	f895 8010 	ldrb.w	r8, [r5, #16]
 8004db4:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8004db8:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8004dbc:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8004dbe:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8004dc2:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8004dc6:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8004dc8:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8004dca:	f8c1 e000 	str.w	lr, [r1]
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 8004dce:	f64c 4e01 	movw	lr, #52225	; 0xcc01
	pgeneral->cal_config__repeat_rate                         =
 8004dd2:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8004dd4:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8004dd6:	8088      	strh	r0, [r1, #4]
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 8004dd8:	20f5      	movs	r0, #245	; 0xf5
	pgeneral->phasecal_config__target                         =
 8004dda:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8004ddc:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8004dde:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8004de0:	4f22      	ldr	r7, [pc, #136]	; (8004e6c <VL53L1_preset_mode_standard_ranging_long_range+0x118>)
	pgeneral->dss_config__roi_mode_control =
 8004de2:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8004de4:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8004de8:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8004dea:	f8a1 8010 	strh.w	r8, [r1, #16]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8004dee:	f04f 0802 	mov.w	r8, #2
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004df2:	491f      	ldr	r1, [pc, #124]	; (8004e70 <VL53L1_preset_mode_standard_ranging_long_range+0x11c>)
	ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 8004df4:	71d6      	strb	r6, [r2, #7]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004df6:	6011      	str	r1, [r2, #0]
	pdynamic->system__sequence_config                          = \
 8004df8:	21db      	movs	r1, #219	; 0xdb
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 8004dfa:	f8a2 e004 	strh.w	lr, [r2, #4]
		 * min_count_rate_rtn_limit_mcps = 0x0080 ->  9.7fp ->  1.0 Mcps
		 * valid_phase_low               = 0x08 -> 5.3fp ->  1.0
		 * valid_phase_high              = 0xB8 -> 5.3fp -> 23.0 -> 4.6m
		 */

		ptiming->range_config__vcsel_period_a                = 0x0F;
 8004dfe:	f04f 0e0f 	mov.w	lr, #15
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 8004e02:	7210      	strb	r0, [r2, #8]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8004e04:	4620      	mov	r0, r4
	ptiming->system__fractional_enable                        = 0x00;
 8004e06:	7514      	strb	r4, [r2, #20]
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8004e08:	6114      	str	r4, [r2, #16]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8004e0a:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8004e0c:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8004e10:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8004e12:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8004e16:	731e      	strb	r6, [r3, #12]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8004e18:	260d      	movs	r6, #13
	pdynamic->system__seed_config =
 8004e1a:	71dc      	strb	r4, [r3, #7]
	pdynamic->sd_config__first_order_select =
 8004e1c:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
	psystem->system__stream_count_ctrl                         = 0x00;
 8004e20:	4f14      	ldr	r7, [pc, #80]	; (8004e74 <VL53L1_preset_mode_standard_ranging_long_range+0x120>)
	pdynamic->sd_config__first_order_select =
 8004e22:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8004e24:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->system__sequence_config                          = \
 8004e28:	7459      	strb	r1, [r3, #17]
	psystem->system__stream_count_ctrl                         = 0x00;
 8004e2a:	9907      	ldr	r1, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8004e2c:	f883 c010 	strb.w	ip, [r3, #16]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8004e30:	f640 5c0f 	movw	ip, #3343	; 0xd0f
	pdynamic->sd_config__quantifier         =
 8004e34:	739c      	strb	r4, [r3, #14]
		ptiming->range_config__valid_phase_low               = 0x08;
 8004e36:	f64b 0408 	movw	r4, #47112	; 0xb808
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8004e3a:	f883 900f 	strb.w	r9, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8004e3e:	f883 8012 	strb.w	r8, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 8004e42:	f8c1 7001 	str.w	r7, [r1, #1]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 8004e46:	f882 e006 	strb.w	lr, [r2, #6]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8004e4a:	7256      	strb	r6, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8004e4c:	8a6f      	ldrh	r7, [r5, #18]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8004e4e:	8b2e      	ldrh	r6, [r5, #24]
		ptiming->range_config__sigma_thresh                  =
 8004e50:	8157      	strh	r7, [r2, #10]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8004e52:	8196      	strh	r6, [r2, #12]
		ptiming->range_config__valid_phase_low               = 0x08;
 8004e54:	81d4      	strh	r4, [r2, #14]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8004e56:	f8a3 c008 	strh.w	ip, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 8004e5a:	79aa      	ldrb	r2, [r5, #6]
 8004e5c:	729a      	strb	r2, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8004e5e:	7a6a      	ldrb	r2, [r5, #9]
 8004e60:	72da      	strb	r2, [r3, #11]
}
 8004e62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004e66:	bf00      	nop
 8004e68:	00080200 	.word	0x00080200
 8004e6c:	01ff3800 	.word	0x01ff3800
 8004e70:	20001a00 	.word	0x20001a00
 8004e74:	21010100 	.word	0x21010100
 8004e78:	02110000 	.word	0x02110000

08004e7c <VL53L1_preset_mode_standard_ranging_mm1_cal>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8004e7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004e80:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8004e82:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004e84:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8004e88:	f8df c118 	ldr.w	ip, [pc, #280]	; 8004fa4 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x128>
 8004e8c:	4f40      	ldr	r7, [pc, #256]	; (8004f90 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004e8e:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8004e90:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004e94:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8004e98:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8004e9c:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8004ea0:	f8c0 4002 	str.w	r4, [r0, #2]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004ea4:	f640 19f5 	movw	r9, #2549	; 0x9f5
	pstatic->debug__ctrl                                      = 0x00;
 8004ea8:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004eac:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8004eb0:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8004eb4:	f895 801e 	ldrb.w	r8, [r5, #30]
 8004eb8:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8004ebc:	f895 801f 	ldrb.w	r8, [r5, #31]
 8004ec0:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004ec4:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8004ec8:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8004eca:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004ecc:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004ece:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004ed2:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8004ed6:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8004ed8:	f895 8010 	ldrb.w	r8, [r5, #16]
 8004edc:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8004ee0:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8004ee4:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8004ee6:	f880 801c 	strb.w	r8, [r0, #28]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8004eea:	f640 180b 	movw	r8, #2315	; 0x90b
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8004eee:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8004ef0:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8004ef2:	f44f 400c 	mov.w	r0, #35840	; 0x8c00
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8004ef6:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8004ef8:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8004efa:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8004efe:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 8004f02:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8004f04:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8004f06:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8004f08:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8004f0a:	4f22      	ldr	r7, [pc, #136]	; (8004f94 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x118>)
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8004f0c:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8004f0e:	f8c1 7012 	str.w	r7, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004f12:	4f21      	ldr	r7, [pc, #132]	; (8004f98 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x11c>)
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8004f14:	8208      	strh	r0, [r1, #16]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8004f16:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004f18:	6017      	str	r7, [r2, #0]
 8004f1a:	4f20      	ldr	r7, [pc, #128]	; (8004f9c <VL53L1_preset_mode_standard_ranging_mm1_cal+0x120>)
 8004f1c:	f8a2 9008 	strh.w	r9, [r2, #8]
 8004f20:	6057      	str	r7, [r2, #4]
	ptiming->range_config__sigma_thresh                       =
 8004f22:	f8b5 9014 	ldrh.w	r9, [r5, #20]
 8004f26:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8004f2a:	f8b5 901a 	ldrh.w	r9, [r5, #26]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8004f2e:	f882 e00e 	strb.w	lr, [r2, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8004f32:	f04f 0ec7 	mov.w	lr, #199	; 0xc7
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8004f36:	f8a2 900c 	strh.w	r9, [r2, #12]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8004f3a:	73d0      	strb	r0, [r2, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8004f3c:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8004f3e:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8004f40:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8004f42:	2202      	movs	r2, #2
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8004f44:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8004f46:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8004f4a:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8004f4c:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8004f50:	f8a3 8008 	strh.w	r8, [r3, #8]
	pdynamic->system__seed_config =
 8004f54:	71dc      	strb	r4, [r3, #7]
		pdynamic->system__sequence_config  = \
 8004f56:	243b      	movs	r4, #59	; 0x3b
	pdynamic->sd_config__initial_phase_sd0                     =
 8004f58:	f895 8007 	ldrb.w	r8, [r5, #7]
 8004f5c:	f883 800a 	strb.w	r8, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8004f60:	f895 800a 	ldrb.w	r8, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8004f64:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8004f66:	f883 800b 	strb.w	r8, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8004f6a:	f895 6024 	ldrb.w	r6, [r5, #36]	; 0x24
 8004f6e:	735e      	strb	r6, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8004f70:	f895 6023 	ldrb.w	r6, [r5, #35]	; 0x23
	psystem->system__stream_count_ctrl                         = 0x00;
 8004f74:	4d0a      	ldr	r5, [pc, #40]	; (8004fa0 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x124>)
	pdynamic->sd_config__quantifier         =
 8004f76:	739e      	strb	r6, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 8004f78:	9e07      	ldr	r6, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8004f7a:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8004f7e:	f883 e00f 	strb.w	lr, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8004f82:	749a      	strb	r2, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 8004f84:	f8c6 5001 	str.w	r5, [r6, #1]
		pgeneral->dss_config__roi_mode_control =
 8004f88:	728a      	strb	r2, [r1, #10]
		pdynamic->system__sequence_config  = \
 8004f8a:	745c      	strb	r4, [r3, #17]
}
 8004f8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004f90:	00080200 	.word	0x00080200
 8004f94:	01ff3800 	.word	0x01ff3800
 8004f98:	20001a00 	.word	0x20001a00
 8004f9c:	010bcc01 	.word	0x010bcc01
 8004fa0:	21010100 	.word	0x21010100
 8004fa4:	02110000 	.word	0x02110000

08004fa8 <VL53L1_preset_mode_standard_ranging_mm2_cal>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8004fa8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004fac:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8004fae:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004fb0:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8004fb4:	f8df c118 	ldr.w	ip, [pc, #280]	; 80050d0 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x128>
 8004fb8:	4f40      	ldr	r7, [pc, #256]	; (80050bc <VL53L1_preset_mode_standard_ranging_mm2_cal+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004fba:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8004fbc:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004fc0:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8004fc4:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8004fc8:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8004fcc:	f8c0 4002 	str.w	r4, [r0, #2]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8004fd0:	f640 19f5 	movw	r9, #2549	; 0x9f5
	pstatic->debug__ctrl                                      = 0x00;
 8004fd4:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8004fd8:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8004fdc:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8004fe0:	f895 801e 	ldrb.w	r8, [r5, #30]
 8004fe4:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8004fe8:	f895 801f 	ldrb.w	r8, [r5, #31]
 8004fec:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004ff0:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8004ff4:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8004ff6:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8004ff8:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8004ffa:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8004ffe:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8005002:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8005004:	f895 8010 	ldrb.w	r8, [r5, #16]
 8005008:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 800500c:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8005010:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8005012:	f880 801c 	strb.w	r8, [r0, #28]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8005016:	f640 180b 	movw	r8, #2315	; 0x90b
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 800501a:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 800501c:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800501e:	f44f 400c 	mov.w	r0, #35840	; 0x8c00
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8005022:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8005024:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8005026:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800502a:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 800502e:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8005030:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8005032:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8005034:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005036:	4f22      	ldr	r7, [pc, #136]	; (80050c0 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x118>)
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8005038:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800503a:	f8c1 7012 	str.w	r7, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800503e:	4f21      	ldr	r7, [pc, #132]	; (80050c4 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x11c>)
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8005040:	8208      	strh	r0, [r1, #16]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8005042:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8005044:	6017      	str	r7, [r2, #0]
 8005046:	4f20      	ldr	r7, [pc, #128]	; (80050c8 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x120>)
 8005048:	f8a2 9008 	strh.w	r9, [r2, #8]
 800504c:	6057      	str	r7, [r2, #4]
	ptiming->range_config__sigma_thresh                       =
 800504e:	f8b5 9014 	ldrh.w	r9, [r5, #20]
 8005052:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8005056:	f8b5 901a 	ldrh.w	r9, [r5, #26]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800505a:	f882 e00e 	strb.w	lr, [r2, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800505e:	f04f 0ec7 	mov.w	lr, #199	; 0xc7
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8005062:	f8a2 900c 	strh.w	r9, [r2, #12]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8005066:	73d0      	strb	r0, [r2, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8005068:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 800506a:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 800506c:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 800506e:	2202      	movs	r2, #2
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8005070:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8005072:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8005076:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8005078:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 800507c:	f8a3 8008 	strh.w	r8, [r3, #8]
	pdynamic->system__seed_config =
 8005080:	71dc      	strb	r4, [r3, #7]
		pdynamic->system__sequence_config  = \
 8005082:	245b      	movs	r4, #91	; 0x5b
	pdynamic->sd_config__initial_phase_sd0                     =
 8005084:	f895 8007 	ldrb.w	r8, [r5, #7]
 8005088:	f883 800a 	strb.w	r8, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 800508c:	f895 800a 	ldrb.w	r8, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8005090:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8005092:	f883 800b 	strb.w	r8, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8005096:	f895 6024 	ldrb.w	r6, [r5, #36]	; 0x24
 800509a:	735e      	strb	r6, [r3, #13]
	pdynamic->sd_config__quantifier         =
 800509c:	f895 6023 	ldrb.w	r6, [r5, #35]	; 0x23
	psystem->system__stream_count_ctrl                         = 0x00;
 80050a0:	4d0a      	ldr	r5, [pc, #40]	; (80050cc <VL53L1_preset_mode_standard_ranging_mm2_cal+0x124>)
	pdynamic->sd_config__quantifier         =
 80050a2:	739e      	strb	r6, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 80050a4:	9e07      	ldr	r6, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80050a6:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80050aa:	f883 e00f 	strb.w	lr, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 80050ae:	749a      	strb	r2, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 80050b0:	f8c6 5001 	str.w	r5, [r6, #1]
		pgeneral->dss_config__roi_mode_control =
 80050b4:	728a      	strb	r2, [r1, #10]
		pdynamic->system__sequence_config  = \
 80050b6:	745c      	strb	r4, [r3, #17]
}
 80050b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80050bc:	00080200 	.word	0x00080200
 80050c0:	01ff3800 	.word	0x01ff3800
 80050c4:	20001a00 	.word	0x20001a00
 80050c8:	010bcc01 	.word	0x010bcc01
 80050cc:	21010100 	.word	0x21010100
 80050d0:	02110000 	.word	0x02110000

080050d4 <VL53L1_preset_mode_timed_ranging>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 80050d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80050d8:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 80050da:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80050dc:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 80050e0:	f8df c120 	ldr.w	ip, [pc, #288]	; 8005204 <VL53L1_preset_mode_timed_ranging+0x130>
 80050e4:	4f46      	ldr	r7, [pc, #280]	; (8005200 <VL53L1_preset_mode_timed_ranging+0x12c>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80050e6:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 80050e8:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80050ec:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 80050f0:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80050f4:	f04f 6832 	mov.w	r8, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80050f8:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80050fc:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8005100:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005104:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8005108:	f895 e01e 	ldrb.w	lr, [r5, #30]
 800510c:	f880 e012 	strb.w	lr, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8005110:	f895 e01f 	ldrb.w	lr, [r5, #31]
 8005114:	f880 e013 	strb.w	lr, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005118:	f895 e020 	ldrb.w	lr, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 800511c:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 800511e:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8005120:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8005122:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8005124:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005128:	f880 e014 	strb.w	lr, [r0, #20]
	pstatic->algo__range_min_clip                             =
 800512c:	f895 e010 	ldrb.w	lr, [r5, #16]
 8005130:	f880 e01b 	strb.w	lr, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8005134:	f895 e00c 	ldrb.w	lr, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8005138:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 800513a:	f880 e01c 	strb.w	lr, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800513e:	f44f 4e0c 	mov.w	lr, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8005142:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8005144:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8005146:	f8c1 8000 	str.w	r8, [r1]
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 800514a:	f04f 080b 	mov.w	r8, #11
	pgeneral->cal_config__repeat_rate                         =
 800514e:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8005150:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8005152:	8088      	strh	r0, [r1, #4]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8005154:	2009      	movs	r0, #9
	pgeneral->phasecal_config__target                         =
 8005156:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8005158:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 800515a:	720f      	strb	r7, [r1, #8]
{
 800515c:	9f07      	ldr	r7, [sp, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800515e:	f8a1 e010 	strh.w	lr, [r1, #16]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005162:	f8df e0a4 	ldr.w	lr, [pc, #164]	; 8005208 <VL53L1_preset_mode_timed_ranging+0x134>
	pgeneral->dss_config__roi_mode_control =
 8005166:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005168:	f8c1 e012 	str.w	lr, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800516c:	f8df e09c 	ldr.w	lr, [pc, #156]	; 800520c <VL53L1_preset_mode_timed_ranging+0x138>
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8005170:	60cc      	str	r4, [r1, #12]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8005172:	f647 0108 	movw	r1, #30728	; 0x7808
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8005176:	f8c2 e000 	str.w	lr, [r2]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 800517a:	f640 1e0b 	movw	lr, #2315	; 0x90b
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 800517e:	f882 8006 	strb.w	r8, [r2, #6]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8005182:	7250      	strb	r0, [r2, #9]
	ptiming->range_config__sigma_thresh                       =
 8005184:	f8b5 8014 	ldrh.w	r8, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8005188:	8b68      	ldrh	r0, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 800518a:	f8a2 800a 	strh.w	r8, [r2, #10]

		/* Disable GPH  */
		pdynamic->system__grouped_parameter_hold = 0x00;

		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 800518e:	f44f 4831 	mov.w	r8, #45312	; 0xb100
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8005192:	8190      	strh	r0, [r2, #12]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8005194:	20c7      	movs	r0, #199	; 0xc7
	ptiming->system__fractional_enable                        = 0x00;
 8005196:	7514      	strb	r4, [r2, #20]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8005198:	81d1      	strh	r1, [r2, #14]
	pdynamic->system__sequence_config                          = \
 800519a:	21db      	movs	r1, #219	; 0xdb
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 800519c:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 800519e:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 80051a2:	719c      	strb	r4, [r3, #6]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 80051a4:	f8a3 e008 	strh.w	lr, [r3, #8]
	pdynamic->sd_config__initial_phase_sd0                     =
 80051a8:	f895 e007 	ldrb.w	lr, [r5, #7]
 80051ac:	f883 e00a 	strb.w	lr, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 80051b0:	f895 e00a 	ldrb.w	lr, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80051b4:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 80051b6:	f883 e00b 	strb.w	lr, [r3, #11]
		ptiming->range_config__timeout_macrop_a_lo                = 0xB1;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 80051ba:	f04f 0ed4 	mov.w	lr, #212	; 0xd4
	pdynamic->sd_config__first_order_select =
 80051be:	f895 9024 	ldrb.w	r9, [r5, #36]	; 0x24
 80051c2:	f883 900d 	strb.w	r9, [r3, #13]
	pdynamic->sd_config__quantifier         =
 80051c6:	f895 9023 	ldrb.w	r9, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80051ca:	f883 c010 	strb.w	ip, [r3, #16]

		/* Timing Configuration */

		ptiming->system__intermeasurement_period = 0x00000600;
 80051ce:	f44f 6cc0 	mov.w	ip, #1536	; 0x600
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80051d2:	73d8      	strb	r0, [r3, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 80051d4:	4620      	mov	r0, r4
	pdynamic->system__sequence_config                          = \
 80051d6:	7459      	strb	r1, [r3, #17]
		psystem->system__mode_start =
 80051d8:	2140      	movs	r1, #64	; 0x40
	pdynamic->sd_config__quantifier         =
 80051da:	f883 900e 	strb.w	r9, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 80051de:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 80051e0:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 80051e2:	70fe      	strb	r6, [r7, #3]
		pdynamic->system__grouped_parameter_hold = 0x00;
 80051e4:	749c      	strb	r4, [r3, #18]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 80051e6:	f8a2 8004 	strh.w	r8, [r2, #4]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 80051ea:	71d4      	strb	r4, [r2, #7]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 80051ec:	f882 e008 	strb.w	lr, [r2, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 80051f0:	f8c2 c010 	str.w	ip, [r2, #16]
		pdynamic->system__seed_config =
 80051f4:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 80051f8:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start =
 80051fa:	7139      	strb	r1, [r7, #4]
}
 80051fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005200:	00080200 	.word	0x00080200
 8005204:	02110000 	.word	0x02110000
 8005208:	01ff3800 	.word	0x01ff3800
 800520c:	20001a00 	.word	0x20001a00

08005210 <VL53L1_preset_mode_timed_ranging_short_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8005210:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005214:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8005216:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005218:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 800521c:	f8df c124 	ldr.w	ip, [pc, #292]	; 8005344 <VL53L1_preset_mode_timed_ranging_short_range+0x134>
 8005220:	4f47      	ldr	r7, [pc, #284]	; (8005340 <VL53L1_preset_mode_timed_ranging_short_range+0x130>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8005222:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8005224:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8005228:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 800522c:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8005230:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8005234:	f8c0 4002 	str.w	r4, [r0, #2]
 8005238:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 800523c:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8005240:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8005244:	f895 801e 	ldrb.w	r8, [r5, #30]
 8005248:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 800524c:	f895 801f 	ldrb.w	r8, [r5, #31]
 8005250:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005254:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8005258:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 800525a:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800525c:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 800525e:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005262:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8005266:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8005268:	f895 8010 	ldrb.w	r8, [r5, #16]
 800526c:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8005270:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8005274:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8005276:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800527a:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 800527e:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8005280:	77c4      	strb	r4, [r0, #31]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8005282:	20c7      	movs	r0, #199	; 0xc7
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8005284:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8005286:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8005288:	f8a1 e006 	strh.w	lr, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 800528c:	808f      	strh	r7, [r1, #4]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800528e:	f8df e0b8 	ldr.w	lr, [pc, #184]	; 8005348 <VL53L1_preset_mode_timed_ranging_short_range+0x138>
	pgeneral->phasecal_config__target                         =
 8005292:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8005294:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8005296:	720f      	strb	r7, [r1, #8]
{
 8005298:	9f07      	ldr	r7, [sp, #28]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800529a:	f8c1 e012 	str.w	lr, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800529e:	f8df e0ac 	ldr.w	lr, [pc, #172]	; 800534c <VL53L1_preset_mode_timed_ranging_short_range+0x13c>
	pgeneral->dss_config__roi_mode_control =
 80052a2:	728e      	strb	r6, [r1, #10]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 80052a4:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80052a6:	f8a1 8010 	strh.w	r8, [r1, #16]
	pdynamic->system__sequence_config                          = \
 80052aa:	21db      	movs	r1, #219	; 0xdb
	ptiming->system__fractional_enable                        = 0x00;
 80052ac:	7514      	strb	r4, [r2, #20]
		ptiming->range_config__vcsel_period_a                = 0x07;
 80052ae:	f04f 0807 	mov.w	r8, #7
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80052b2:	f8c2 e000 	str.w	lr, [r2]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 80052b6:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 80052b8:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 80052bc:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80052be:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__first_order_select =
 80052c0:	f895 e024 	ldrb.w	lr, [r5, #36]	; 0x24
 80052c4:	f883 e00d 	strb.w	lr, [r3, #13]
		ptiming->range_config__vcsel_period_b                = 0x05;
 80052c8:	f04f 0e05 	mov.w	lr, #5
	pdynamic->sd_config__quantifier         =
 80052cc:	f895 9023 	ldrb.w	r9, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80052d0:	73d8      	strb	r0, [r3, #15]
		ptiming->range_config__valid_phase_low               = 0x08;
 80052d2:	f643 0008 	movw	r0, #14344	; 0x3808
	pdynamic->system__sequence_config                          = \
 80052d6:	7459      	strb	r1, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 80052d8:	f240 5107 	movw	r1, #1287	; 0x507
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80052dc:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 80052e0:	f883 900e 	strb.w	r9, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 80052e4:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 80052e6:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 80052e8:	70fe      	strb	r6, [r7, #3]
		ptiming->range_config__vcsel_period_a                = 0x07;
 80052ea:	f882 8006 	strb.w	r8, [r2, #6]


		/* Timing Configuration */

		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 80052ee:	f248 4801 	movw	r8, #33793	; 0x8401
		ptiming->range_config__vcsel_period_b                = 0x05;
 80052f2:	f882 e009 	strb.w	lr, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 80052f6:	f8b5 e016 	ldrh.w	lr, [r5, #22]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 80052fa:	f8b5 c01c 	ldrh.w	ip, [r5, #28]
		ptiming->range_config__sigma_thresh                  =
 80052fe:	f8a2 e00a 	strh.w	lr, [r2, #10]
		ptiming->range_config__timeout_macrop_a_lo                = 0x84;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x01;
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8005302:	f04f 0eb1 	mov.w	lr, #177	; 0xb1
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8005306:	f8a2 c00c 	strh.w	ip, [r2, #12]

		ptiming->system__intermeasurement_period = 0x00000600;
 800530a:	f44f 6cc0 	mov.w	ip, #1536	; 0x600
		ptiming->range_config__valid_phase_low               = 0x08;
 800530e:	81d0      	strh	r0, [r2, #14]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8005310:	8119      	strh	r1, [r3, #8]
				ptuning_parms->tp_timed_seed_cfg;

		/* System control */

		/* Configure Timed/Psuedo-solo mode */
		psystem->system__mode_start =
 8005312:	2140      	movs	r1, #64	; 0x40
		pdynamic->sd_config__initial_phase_sd0               =
 8005314:	7a28      	ldrb	r0, [r5, #8]
 8005316:	7298      	strb	r0, [r3, #10]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8005318:	4620      	mov	r0, r4
		pdynamic->sd_config__initial_phase_sd1               =
 800531a:	f895 900b 	ldrb.w	r9, [r5, #11]
		pdynamic->system__grouped_parameter_hold = 0x00;
 800531e:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 8005320:	f883 900b 	strb.w	r9, [r3, #11]
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 8005324:	f8a2 8004 	strh.w	r8, [r2, #4]
		ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 8005328:	71d6      	strb	r6, [r2, #7]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 800532a:	f882 e008 	strb.w	lr, [r2, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 800532e:	f8c2 c010 	str.w	ip, [r2, #16]
		pdynamic->system__seed_config =
 8005332:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 8005336:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start =
 8005338:	7139      	strb	r1, [r7, #4]
}
 800533a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800533e:	bf00      	nop
 8005340:	00080200 	.word	0x00080200
 8005344:	02110000 	.word	0x02110000
 8005348:	01ff3800 	.word	0x01ff3800
 800534c:	20001a00 	.word	0x20001a00

08005350 <VL53L1_preset_mode_timed_ranging_long_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8005350:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005354:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8005356:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005358:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 800535c:	f8df c124 	ldr.w	ip, [pc, #292]	; 8005484 <VL53L1_preset_mode_timed_ranging_long_range+0x134>
 8005360:	4f45      	ldr	r7, [pc, #276]	; (8005478 <VL53L1_preset_mode_timed_ranging_long_range+0x128>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8005362:	2601      	movs	r6, #1
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005364:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8005368:	f04f 6e32 	mov.w	lr, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 800536c:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8005370:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8005374:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8005378:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 800537c:	f8c0 4002 	str.w	r4, [r0, #2]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 8005380:	f04f 090f 	mov.w	r9, #15
	pstatic->debug__ctrl                                      = 0x00;
 8005384:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8005388:	f895 801e 	ldrb.w	r8, [r5, #30]
 800538c:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8005390:	f895 801f 	ldrb.w	r8, [r5, #31]
 8005394:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005398:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 800539c:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 800539e:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80053a0:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80053a2:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80053a4:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80053a8:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_min_clip                             =
 80053ac:	f895 8010 	ldrb.w	r8, [r5, #16]
 80053b0:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80053b4:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80053b8:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80053ba:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80053be:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80053c2:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80053c4:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80053c6:	f8c1 e000 	str.w	lr, [r1]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80053ca:	f04f 0ec7 	mov.w	lr, #199	; 0xc7
	pgeneral->cal_config__repeat_rate                         =
 80053ce:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80053d0:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 80053d2:	8088      	strh	r0, [r1, #4]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80053d4:	4829      	ldr	r0, [pc, #164]	; (800547c <VL53L1_preset_mode_timed_ranging_long_range+0x12c>)
	pgeneral->phasecal_config__target                         =
 80053d6:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 80053d8:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 80053da:	720f      	strb	r7, [r1, #8]
{
 80053dc:	9f07      	ldr	r7, [sp, #28]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 80053de:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80053e0:	f8c1 0012 	str.w	r0, [r1, #18]
	pdynamic->system__sequence_config                          = \
 80053e4:	20db      	movs	r0, #219	; 0xdb
	pgeneral->dss_config__roi_mode_control =
 80053e6:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80053e8:	f8a1 8010 	strh.w	r8, [r1, #16]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 80053ec:	f04f 080d 	mov.w	r8, #13
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80053f0:	4923      	ldr	r1, [pc, #140]	; (8005480 <VL53L1_preset_mode_timed_ranging_long_range+0x130>)
	ptiming->system__fractional_enable                        = 0x00;
 80053f2:	7514      	strb	r4, [r2, #20]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80053f4:	6011      	str	r1, [r2, #0]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 80053f6:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 80053f8:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 80053fc:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80053fe:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__first_order_select =
 8005400:	f895 1024 	ldrb.w	r1, [r5, #36]	; 0x24
 8005404:	7359      	strb	r1, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8005406:	f895 1023 	ldrb.w	r1, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 800540a:	f883 c010 	strb.w	ip, [r3, #16]
		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
		ptiming->range_config__timeout_macrop_a_lo                = 0x97;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 800540e:	f04f 0cb1 	mov.w	ip, #177	; 0xb1
	pdynamic->sd_config__quantifier         =
 8005412:	7399      	strb	r1, [r3, #14]
		ptiming->range_config__valid_phase_low               = 0x08;
 8005414:	f64b 0108 	movw	r1, #47112	; 0xb808
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8005418:	f883 e00f 	strb.w	lr, [r3, #15]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 800541c:	f44f 4e17 	mov.w	lr, #38656	; 0x9700
	pdynamic->system__sequence_config                          = \
 8005420:	7458      	strb	r0, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8005422:	f640 500f 	movw	r0, #3343	; 0xd0f
	psystem->system__stream_count_ctrl                         = 0x00;
 8005426:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 8005428:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 800542a:	70fe      	strb	r6, [r7, #3]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 800542c:	f882 9006 	strb.w	r9, [r2, #6]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8005430:	f882 8009 	strb.w	r8, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8005434:	f8b5 8012 	ldrh.w	r8, [r5, #18]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8005438:	8b2e      	ldrh	r6, [r5, #24]
		ptiming->range_config__valid_phase_low               = 0x08;
 800543a:	81d1      	strh	r1, [r2, #14]
				ptuning_parms->tp_timed_seed_cfg;

		/* System control */

		/* Configure Timed/Psuedo-solo mode */
		psystem->system__mode_start =
 800543c:	2140      	movs	r1, #64	; 0x40
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 800543e:	8196      	strh	r6, [r2, #12]
		ptiming->system__intermeasurement_period = 0x00000600;
 8005440:	f44f 66c0 	mov.w	r6, #1536	; 0x600
		ptiming->range_config__sigma_thresh                  =
 8005444:	f8a2 800a 	strh.w	r8, [r2, #10]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8005448:	8118      	strh	r0, [r3, #8]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 800544a:	4620      	mov	r0, r4
		pdynamic->sd_config__initial_phase_sd0               =
 800544c:	f895 8006 	ldrb.w	r8, [r5, #6]
 8005450:	f883 800a 	strb.w	r8, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8005454:	f895 8009 	ldrb.w	r8, [r5, #9]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8005458:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 800545a:	f883 800b 	strb.w	r8, [r3, #11]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 800545e:	f8a2 e004 	strh.w	lr, [r2, #4]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 8005462:	71d4      	strb	r4, [r2, #7]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8005464:	f882 c008 	strb.w	ip, [r2, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8005468:	6116      	str	r6, [r2, #16]
		pdynamic->system__seed_config =
 800546a:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 800546e:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start =
 8005470:	7139      	strb	r1, [r7, #4]
}
 8005472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005476:	bf00      	nop
 8005478:	00080200 	.word	0x00080200
 800547c:	01ff3800 	.word	0x01ff3800
 8005480:	20001a00 	.word	0x20001a00
 8005484:	02110000 	.word	0x02110000

08005488 <VL53L1_preset_mode_low_power_auto_ranging>:
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms,
	VL53L1_low_power_auto_data_t *plpadata)
{
 8005488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800548c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	pstatic->debug__ctrl                                      = 0x00;
 800548e:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005490:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8005494:	f8df c134 	ldr.w	ip, [pc, #308]	; 80055cc <VL53L1_preset_mode_low_power_auto_ranging+0x144>
 8005498:	4e49      	ldr	r6, [pc, #292]	; (80055c0 <VL53L1_preset_mode_low_power_auto_ranging+0x138>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800549a:	2701      	movs	r7, #1
	pstatic->debug__ctrl                                      = 0x00;
 800549c:	f8c0 c00a 	str.w	ip, [r0, #10]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80054a0:	f04f 6932 	mov.w	r9, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80054a4:	f8c0 600e 	str.w	r6, [r0, #14]
{
 80054a8:	4616      	mov	r6, r2
	pstatic->debug__ctrl                                      = 0x00;
 80054aa:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80054ae:	f640 5c02 	movw	ip, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 80054b2:	f8c0 4006 	str.w	r4, [r0, #6]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80054b6:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80054ba:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80054be:	f04f 0eff 	mov.w	lr, #255	; 0xff
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80054c2:	7faa      	ldrb	r2, [r5, #30]
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 80054c4:	f04f 0a0b 	mov.w	sl, #11
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80054c8:	f04f 0bc7 	mov.w	fp, #199	; 0xc7
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80054cc:	7482      	strb	r2, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80054ce:	7fea      	ldrb	r2, [r5, #31]
 80054d0:	74c2      	strb	r2, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80054d2:	f895 2020 	ldrb.w	r2, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 80054d6:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 80054d8:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80054da:	7547      	strb	r7, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80054dc:	f880 e01a 	strb.w	lr, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80054e0:	7502      	strb	r2, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80054e2:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 80054e4:	7c2a      	ldrb	r2, [r5, #16]
 80054e6:	76c2      	strb	r2, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80054e8:	7b2a      	ldrb	r2, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80054ea:	7744      	strb	r4, [r0, #29]
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80054ec:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80054ee:	77c4      	strb	r4, [r0, #31]
	pstatic->algo__consistency_check__tolerance               =
 80054f0:	7702      	strb	r2, [r0, #28]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80054f2:	f8c1 9000 	str.w	r9, [r1]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 80054f6:	f04f 0909 	mov.w	r9, #9
	pgeneral->cal_config__repeat_rate                         =
 80054fa:	89ea      	ldrh	r2, [r5, #14]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80054fc:	4831      	ldr	r0, [pc, #196]	; (80055c4 <VL53L1_preset_mode_low_power_auto_ranging+0x13c>)
	pgeneral->global_config__vcsel_width                      = 0x02;
 80054fe:	f8a1 c006 	strh.w	ip, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8005502:	808a      	strh	r2, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8005504:	7b6a      	ldrb	r2, [r5, #13]
{
 8005506:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
	pgeneral->phasecal_config__target                         =
 800550a:	720a      	strb	r2, [r1, #8]
{
 800550c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
	pgeneral->phasecal_config__override                       = 0x00;
 800550e:	724c      	strb	r4, [r1, #9]
	pgeneral->dss_config__roi_mode_control =
 8005510:	728f      	strb	r7, [r1, #10]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8005512:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005514:	f8c1 0012 	str.w	r0, [r1, #18]
					ptuning_parms);

	/* now setup the low power auto mode */

	if (status == VL53L1_ERROR_NONE) {
		status = VL53L1_config_low_power_auto_mode(
 8005518:	4608      	mov	r0, r1
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800551a:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800551e:	f647 0808 	movw	r8, #30728	; 0x7808
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8005522:	4929      	ldr	r1, [pc, #164]	; (80055c8 <VL53L1_preset_mode_low_power_auto_ranging+0x140>)
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 8005524:	f886 a006 	strb.w	sl, [r6, #6]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8005528:	6031      	str	r1, [r6, #0]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 800552a:	f640 110b 	movw	r1, #2315	; 0x90b
	ptiming->range_config__vcsel_period_b                     = 0x09;
 800552e:	f886 9009 	strb.w	r9, [r6, #9]
	ptiming->range_config__sigma_thresh                       =
 8005532:	f8b5 a014 	ldrh.w	sl, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8005536:	f8b5 901a 	ldrh.w	r9, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 800553a:	f8a6 a00a 	strh.w	sl, [r6, #10]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 800553e:	f44f 4a31 	mov.w	sl, #45312	; 0xb100
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8005542:	f8a6 900c 	strh.w	r9, [r6, #12]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 8005546:	f04f 09d4 	mov.w	r9, #212	; 0xd4
	ptiming->system__fractional_enable                        = 0x00;
 800554a:	7534      	strb	r4, [r6, #20]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800554c:	f8a6 800e 	strh.w	r8, [r6, #14]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8005550:	701f      	strb	r7, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8005552:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8005556:	719c      	strb	r4, [r3, #6]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8005558:	8119      	strh	r1, [r3, #8]
	pdynamic->system__sequence_config                          = \
 800555a:	21db      	movs	r1, #219	; 0xdb
	pdynamic->sd_config__initial_phase_sd0                     =
 800555c:	f895 8007 	ldrb.w	r8, [r5, #7]
 8005560:	f883 800a 	strb.w	r8, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8005564:	f895 800a 	ldrb.w	r8, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8005568:	731f      	strb	r7, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 800556a:	f883 800b 	strb.w	r8, [r3, #11]
	pdynamic->sd_config__first_order_select =
 800556e:	f895 8024 	ldrb.w	r8, [r5, #36]	; 0x24
 8005572:	f883 800d 	strb.w	r8, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8005576:	f895 8023 	ldrb.w	r8, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 800557a:	f883 e010 	strb.w	lr, [r3, #16]
		psystem->system__mode_start =
 800557e:	f04f 0e40 	mov.w	lr, #64	; 0x40
	pdynamic->sd_config__quantifier         =
 8005582:	f883 800e 	strb.w	r8, [r3, #14]
		ptiming->system__intermeasurement_period = 0x00000600;
 8005586:	f44f 68c0 	mov.w	r8, #1536	; 0x600
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800558a:	f883 b00f 	strb.w	fp, [r3, #15]
	pdynamic->system__sequence_config                          = \
 800558e:	7459      	strb	r1, [r3, #17]
		status = VL53L1_config_low_power_auto_mode(
 8005590:	4619      	mov	r1, r3
	psystem->system__stream_count_ctrl                         = 0x00;
 8005592:	f88c 4001 	strb.w	r4, [ip, #1]
	psystem->firmware__enable                                  = 0x01;
 8005596:	f88c 7002 	strb.w	r7, [ip, #2]
	psystem->system__interrupt_clear                           = \
 800559a:	f88c 7003 	strb.w	r7, [ip, #3]
		pdynamic->system__grouped_parameter_hold = 0x00;
 800559e:	749c      	strb	r4, [r3, #18]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 80055a0:	71f4      	strb	r4, [r6, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 80055a2:	f8a6 a004 	strh.w	sl, [r6, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 80055a6:	f886 9008 	strb.w	r9, [r6, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 80055aa:	f8c6 8010 	str.w	r8, [r6, #16]
		pdynamic->system__seed_config =
 80055ae:	f895 4022 	ldrb.w	r4, [r5, #34]	; 0x22
 80055b2:	71dc      	strb	r4, [r3, #7]
		psystem->system__mode_start =
 80055b4:	f88c e004 	strb.w	lr, [ip, #4]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 80055b8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		status = VL53L1_config_low_power_auto_mode(
 80055bc:	f000 bd6a 	b.w	8006094 <VL53L1_config_low_power_auto_mode>
 80055c0:	00080200 	.word	0x00080200
 80055c4:	01ff3800 	.word	0x01ff3800
 80055c8:	20001a00 	.word	0x20001a00
 80055cc:	02110000 	.word	0x02110000

080055d0 <VL53L1_preset_mode_low_power_auto_short_ranging>:
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms,
	VL53L1_low_power_auto_data_t *plpadata)
{
 80055d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055d4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	pstatic->debug__ctrl                                      = 0x00;
 80055d6:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80055d8:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 80055dc:	f8df c12c 	ldr.w	ip, [pc, #300]	; 800570c <VL53L1_preset_mode_low_power_auto_short_ranging+0x13c>
 80055e0:	4e47      	ldr	r6, [pc, #284]	; (8005700 <VL53L1_preset_mode_low_power_auto_short_ranging+0x130>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80055e2:	2701      	movs	r7, #1
	pstatic->debug__ctrl                                      = 0x00;
 80055e4:	f8c0 c00a 	str.w	ip, [r0, #10]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80055e8:	f04f 6932 	mov.w	r9, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80055ec:	f8c0 600e 	str.w	r6, [r0, #14]
{
 80055f0:	4616      	mov	r6, r2
	pstatic->debug__ctrl                                      = 0x00;
 80055f2:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80055f6:	f640 5c02 	movw	ip, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 80055fa:	f8c0 4006 	str.w	r4, [r0, #6]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80055fe:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005602:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8005606:	f04f 0eff 	mov.w	lr, #255	; 0xff
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 800560a:	7faa      	ldrb	r2, [r5, #30]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800560c:	f04f 0ac7 	mov.w	sl, #199	; 0xc7
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8005610:	7482      	strb	r2, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8005612:	7fea      	ldrb	r2, [r5, #31]
 8005614:	74c2      	strb	r2, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005616:	f895 2020 	ldrb.w	r2, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 800561a:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 800561c:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800561e:	7547      	strb	r7, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8005620:	f880 e01a 	strb.w	lr, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005624:	7502      	strb	r2, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8005626:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8005628:	7c2a      	ldrb	r2, [r5, #16]
 800562a:	76c2      	strb	r2, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 800562c:	7b2a      	ldrb	r2, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 800562e:	7744      	strb	r4, [r0, #29]
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8005630:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8005632:	77c4      	strb	r4, [r0, #31]
	pstatic->algo__consistency_check__tolerance               =
 8005634:	7702      	strb	r2, [r0, #28]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8005636:	f8c1 9000 	str.w	r9, [r1]
		ptiming->range_config__vcsel_period_a                = 0x07;
 800563a:	f04f 0907 	mov.w	r9, #7
	pgeneral->cal_config__repeat_rate                         =
 800563e:	89ea      	ldrh	r2, [r5, #14]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005640:	4830      	ldr	r0, [pc, #192]	; (8005704 <VL53L1_preset_mode_low_power_auto_short_ranging+0x134>)
	pgeneral->global_config__vcsel_width                      = 0x02;
 8005642:	f8a1 c006 	strh.w	ip, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8005646:	808a      	strh	r2, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8005648:	7b6a      	ldrb	r2, [r5, #13]
{
 800564a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
	pgeneral->phasecal_config__target                         =
 800564e:	720a      	strb	r2, [r1, #8]
{
 8005650:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
	pgeneral->phasecal_config__override                       = 0x00;
 8005652:	724c      	strb	r4, [r1, #9]
	pgeneral->dss_config__roi_mode_control =
 8005654:	728f      	strb	r7, [r1, #10]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8005656:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005658:	f8c1 0012 	str.w	r0, [r1, #18]
					ptuning_parms);

	/* now setup the low power auto mode */

	if (status == VL53L1_ERROR_NONE) {
		status = VL53L1_config_low_power_auto_mode(
 800565c:	4608      	mov	r0, r1
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800565e:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8005662:	4929      	ldr	r1, [pc, #164]	; (8005708 <VL53L1_preset_mode_low_power_auto_short_ranging+0x138>)
	ptiming->system__fractional_enable                        = 0x00;
 8005664:	7534      	strb	r4, [r6, #20]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8005666:	6031      	str	r1, [r6, #0]
	pdynamic->system__sequence_config                          = \
 8005668:	21db      	movs	r1, #219	; 0xdb
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 800566a:	701f      	strb	r7, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 800566c:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8005670:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8005672:	731f      	strb	r7, [r3, #12]
	pdynamic->sd_config__first_order_select =
 8005674:	f895 8024 	ldrb.w	r8, [r5, #36]	; 0x24
 8005678:	f883 800d 	strb.w	r8, [r3, #13]
		ptiming->range_config__vcsel_period_b                = 0x05;
 800567c:	f04f 0805 	mov.w	r8, #5
	pdynamic->sd_config__quantifier         =
 8005680:	f895 b023 	ldrb.w	fp, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8005684:	f883 e010 	strb.w	lr, [r3, #16]
		ptiming->range_config__valid_phase_low               = 0x08;
 8005688:	f643 0e08 	movw	lr, #14344	; 0x3808
	pdynamic->sd_config__quantifier         =
 800568c:	f883 b00e 	strb.w	fp, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8005690:	f883 a00f 	strb.w	sl, [r3, #15]
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 8005694:	f248 4a01 	movw	sl, #33793	; 0x8401
	pdynamic->system__sequence_config                          = \
 8005698:	7459      	strb	r1, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 800569a:	f240 5107 	movw	r1, #1287	; 0x507
	psystem->system__stream_count_ctrl                         = 0x00;
 800569e:	f88c 4001 	strb.w	r4, [ip, #1]
	psystem->firmware__enable                                  = 0x01;
 80056a2:	f88c 7002 	strb.w	r7, [ip, #2]
	psystem->system__interrupt_clear                           = \
 80056a6:	f88c 7003 	strb.w	r7, [ip, #3]
		ptiming->range_config__vcsel_period_a                = 0x07;
 80056aa:	f886 9006 	strb.w	r9, [r6, #6]
		ptiming->range_config__vcsel_period_b                = 0x05;
 80056ae:	f886 8009 	strb.w	r8, [r6, #9]
		ptiming->range_config__sigma_thresh                  =
 80056b2:	f8b5 9016 	ldrh.w	r9, [r5, #22]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 80056b6:	f8b5 801c 	ldrh.w	r8, [r5, #28]
		ptiming->range_config__sigma_thresh                  =
 80056ba:	f8a6 900a 	strh.w	r9, [r6, #10]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 80056be:	f04f 09b1 	mov.w	r9, #177	; 0xb1
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 80056c2:	f8a6 800c 	strh.w	r8, [r6, #12]
		ptiming->system__intermeasurement_period = 0x00000600;
 80056c6:	f44f 68c0 	mov.w	r8, #1536	; 0x600
		ptiming->range_config__valid_phase_low               = 0x08;
 80056ca:	f8a6 e00e 	strh.w	lr, [r6, #14]
		psystem->system__mode_start =
 80056ce:	f04f 0e40 	mov.w	lr, #64	; 0x40
		pdynamic->sd_config__woi_sd0                         = 0x07;
 80056d2:	8119      	strh	r1, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 80056d4:	7a29      	ldrb	r1, [r5, #8]
 80056d6:	7299      	strb	r1, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 80056d8:	7ae9      	ldrb	r1, [r5, #11]
		pdynamic->system__grouped_parameter_hold = 0x00;
 80056da:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 80056dc:	72d9      	strb	r1, [r3, #11]
		status = VL53L1_config_low_power_auto_mode(
 80056de:	4619      	mov	r1, r3
		ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 80056e0:	71f7      	strb	r7, [r6, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 80056e2:	f8a6 a004 	strh.w	sl, [r6, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 80056e6:	f886 9008 	strb.w	r9, [r6, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 80056ea:	f8c6 8010 	str.w	r8, [r6, #16]
		pdynamic->system__seed_config =
 80056ee:	f895 4022 	ldrb.w	r4, [r5, #34]	; 0x22
 80056f2:	71dc      	strb	r4, [r3, #7]
		psystem->system__mode_start =
 80056f4:	f88c e004 	strb.w	lr, [ip, #4]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 80056f8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		status = VL53L1_config_low_power_auto_mode(
 80056fc:	f000 bcca 	b.w	8006094 <VL53L1_config_low_power_auto_mode>
 8005700:	00080200 	.word	0x00080200
 8005704:	01ff3800 	.word	0x01ff3800
 8005708:	20001a00 	.word	0x20001a00
 800570c:	02110000 	.word	0x02110000

08005710 <VL53L1_preset_mode_low_power_auto_long_ranging>:
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms,
	VL53L1_low_power_auto_data_t *plpadata)
{
 8005710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005714:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	pstatic->debug__ctrl                                      = 0x00;
 8005716:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005718:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 800571c:	f8df c128 	ldr.w	ip, [pc, #296]	; 8005848 <VL53L1_preset_mode_low_power_auto_long_ranging+0x138>
 8005720:	4e46      	ldr	r6, [pc, #280]	; (800583c <VL53L1_preset_mode_low_power_auto_long_ranging+0x12c>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8005722:	2701      	movs	r7, #1
	pstatic->debug__ctrl                                      = 0x00;
 8005724:	f8c0 c00a 	str.w	ip, [r0, #10]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8005728:	f04f 6932 	mov.w	r9, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 800572c:	f8c0 600e 	str.w	r6, [r0, #14]
{
 8005730:	4616      	mov	r6, r2
	pstatic->debug__ctrl                                      = 0x00;
 8005732:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8005736:	f640 5c02 	movw	ip, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 800573a:	f8c0 4006 	str.w	r4, [r0, #6]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800573e:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005742:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8005746:	f04f 0eff 	mov.w	lr, #255	; 0xff
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 800574a:	7faa      	ldrb	r2, [r5, #30]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800574c:	f04f 0ac7 	mov.w	sl, #199	; 0xc7
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8005750:	7482      	strb	r2, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8005752:	7fea      	ldrb	r2, [r5, #31]
 8005754:	74c2      	strb	r2, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005756:	f895 2020 	ldrb.w	r2, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 800575a:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 800575c:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800575e:	7547      	strb	r7, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8005760:	f880 e01a 	strb.w	lr, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005764:	7502      	strb	r2, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8005766:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8005768:	7c2a      	ldrb	r2, [r5, #16]
 800576a:	76c2      	strb	r2, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 800576c:	7b2a      	ldrb	r2, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 800576e:	7744      	strb	r4, [r0, #29]
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8005770:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8005772:	77c4      	strb	r4, [r0, #31]
	pstatic->algo__consistency_check__tolerance               =
 8005774:	7702      	strb	r2, [r0, #28]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8005776:	f8c1 9000 	str.w	r9, [r1]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 800577a:	f04f 090f 	mov.w	r9, #15
	pgeneral->cal_config__repeat_rate                         =
 800577e:	89ea      	ldrh	r2, [r5, #14]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005780:	482f      	ldr	r0, [pc, #188]	; (8005840 <VL53L1_preset_mode_low_power_auto_long_ranging+0x130>)
	pgeneral->global_config__vcsel_width                      = 0x02;
 8005782:	f8a1 c006 	strh.w	ip, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8005786:	808a      	strh	r2, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8005788:	7b6a      	ldrb	r2, [r5, #13]
{
 800578a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
	pgeneral->phasecal_config__target                         =
 800578e:	720a      	strb	r2, [r1, #8]
{
 8005790:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
	pgeneral->phasecal_config__override                       = 0x00;
 8005792:	724c      	strb	r4, [r1, #9]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8005794:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005796:	f8c1 0012 	str.w	r0, [r1, #18]
					ptuning_parms);

	/* now setup the low power auto mode */

	if (status == VL53L1_ERROR_NONE) {
		status = VL53L1_config_low_power_auto_mode(
 800579a:	4608      	mov	r0, r1
	pgeneral->dss_config__roi_mode_control =
 800579c:	728f      	strb	r7, [r1, #10]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800579e:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80057a2:	4928      	ldr	r1, [pc, #160]	; (8005844 <VL53L1_preset_mode_low_power_auto_long_ranging+0x134>)
	ptiming->system__fractional_enable                        = 0x00;
 80057a4:	7534      	strb	r4, [r6, #20]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80057a6:	6031      	str	r1, [r6, #0]
	pdynamic->system__sequence_config                          = \
 80057a8:	21db      	movs	r1, #219	; 0xdb
	pdynamic->system__thresh_high                              = 0x0000;
 80057aa:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 80057ae:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 80057b0:	701f      	strb	r7, [r3, #0]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80057b2:	731f      	strb	r7, [r3, #12]
	pdynamic->sd_config__first_order_select =
 80057b4:	f895 8024 	ldrb.w	r8, [r5, #36]	; 0x24
 80057b8:	f883 800d 	strb.w	r8, [r3, #13]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 80057bc:	f04f 080d 	mov.w	r8, #13
	pdynamic->sd_config__quantifier         =
 80057c0:	f895 b023 	ldrb.w	fp, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80057c4:	f883 e010 	strb.w	lr, [r3, #16]
		ptiming->range_config__valid_phase_low               = 0x08;
 80057c8:	f64b 0e08 	movw	lr, #47112	; 0xb808
	pdynamic->sd_config__quantifier         =
 80057cc:	f883 b00e 	strb.w	fp, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80057d0:	f883 a00f 	strb.w	sl, [r3, #15]
	pdynamic->system__sequence_config                          = \
 80057d4:	7459      	strb	r1, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 80057d6:	f640 510f 	movw	r1, #3343	; 0xd0f
	psystem->system__stream_count_ctrl                         = 0x00;
 80057da:	f88c 4001 	strb.w	r4, [ip, #1]
	psystem->firmware__enable                                  = 0x01;
 80057de:	f88c 7002 	strb.w	r7, [ip, #2]
	psystem->system__interrupt_clear                           = \
 80057e2:	f88c 7003 	strb.w	r7, [ip, #3]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 80057e6:	f886 9006 	strb.w	r9, [r6, #6]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 80057ea:	f44f 4917 	mov.w	r9, #38656	; 0x9700
		ptiming->range_config__vcsel_period_b                = 0x0D;
 80057ee:	f886 8009 	strb.w	r8, [r6, #9]
		ptiming->range_config__sigma_thresh                  =
 80057f2:	f8b5 8012 	ldrh.w	r8, [r5, #18]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 80057f6:	8b2f      	ldrh	r7, [r5, #24]
		ptiming->range_config__sigma_thresh                  =
 80057f8:	f8a6 800a 	strh.w	r8, [r6, #10]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 80057fc:	f04f 08b1 	mov.w	r8, #177	; 0xb1
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8005800:	81b7      	strh	r7, [r6, #12]
		psystem->system__mode_start =
 8005802:	2740      	movs	r7, #64	; 0x40
		ptiming->range_config__valid_phase_low               = 0x08;
 8005804:	f8a6 e00e 	strh.w	lr, [r6, #14]
		ptiming->system__intermeasurement_period = 0x00000600;
 8005808:	f44f 6ec0 	mov.w	lr, #1536	; 0x600
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 800580c:	8119      	strh	r1, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 800580e:	79a9      	ldrb	r1, [r5, #6]
 8005810:	7299      	strb	r1, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8005812:	7a69      	ldrb	r1, [r5, #9]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8005814:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 8005816:	72d9      	strb	r1, [r3, #11]
		status = VL53L1_config_low_power_auto_mode(
 8005818:	4619      	mov	r1, r3
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 800581a:	71f4      	strb	r4, [r6, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 800581c:	f8a6 9004 	strh.w	r9, [r6, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8005820:	f886 8008 	strb.w	r8, [r6, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8005824:	f8c6 e010 	str.w	lr, [r6, #16]
		pdynamic->system__seed_config =
 8005828:	f895 4022 	ldrb.w	r4, [r5, #34]	; 0x22
 800582c:	71dc      	strb	r4, [r3, #7]
		psystem->system__mode_start =
 800582e:	f88c 7004 	strb.w	r7, [ip, #4]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8005832:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		status = VL53L1_config_low_power_auto_mode(
 8005836:	f000 bc2d 	b.w	8006094 <VL53L1_config_low_power_auto_mode>
 800583a:	bf00      	nop
 800583c:	00080200 	.word	0x00080200
 8005840:	01ff3800 	.word	0x01ff3800
 8005844:	20001a00 	.word	0x20001a00
 8005848:	02110000 	.word	0x02110000

0800584c <VL53L1_preset_mode_singleshot_ranging>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 800584c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005850:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8005852:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005854:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8005858:	f8df c124 	ldr.w	ip, [pc, #292]	; 8005980 <VL53L1_preset_mode_singleshot_ranging+0x134>
 800585c:	4f45      	ldr	r7, [pc, #276]	; (8005974 <VL53L1_preset_mode_singleshot_ranging+0x128>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800585e:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8005860:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8005864:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8005868:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 800586c:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8005870:	f8c0 4002 	str.w	r4, [r0, #2]
 8005874:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8005878:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 800587c:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8005880:	f895 801e 	ldrb.w	r8, [r5, #30]
 8005884:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8005888:	f895 801f 	ldrb.w	r8, [r5, #31]
 800588c:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8005890:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8005894:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8005896:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8005898:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 800589a:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800589e:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80058a2:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 80058a4:	f895 8010 	ldrb.w	r8, [r5, #16]
 80058a8:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80058ac:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80058b0:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80058b2:	f880 801c 	strb.w	r8, [r0, #28]
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 80058b6:	f04f 080b 	mov.w	r8, #11
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80058ba:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80058bc:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80058be:	f44f 400c 	mov.w	r0, #35840	; 0x8c00
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80058c2:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 80058c4:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80058c6:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 80058ca:	f04f 0e09 	mov.w	lr, #9
	pgeneral->cal_config__repeat_rate                         =
 80058ce:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 80058d0:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 80058d2:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 80058d4:	720f      	strb	r7, [r1, #8]
{
 80058d6:	9f07      	ldr	r7, [sp, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80058d8:	8208      	strh	r0, [r1, #16]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80058da:	4827      	ldr	r0, [pc, #156]	; (8005978 <VL53L1_preset_mode_singleshot_ranging+0x12c>)
	pgeneral->dss_config__roi_mode_control =
 80058dc:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80058de:	f8c1 0012 	str.w	r0, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80058e2:	4826      	ldr	r0, [pc, #152]	; (800597c <VL53L1_preset_mode_singleshot_ranging+0x130>)
	pgeneral->system__thresh_rate_high                        = 0x0000;
 80058e4:	60cc      	str	r4, [r1, #12]
	ptiming->range_config__valid_phase_low                    = 0x08;
 80058e6:	2108      	movs	r1, #8
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80058e8:	6010      	str	r0, [r2, #0]
	ptiming->range_config__valid_phase_high                   = 0x78;
 80058ea:	2078      	movs	r0, #120	; 0x78
	ptiming->range_config__vcsel_period_b                     = 0x09;
 80058ec:	f882 e009 	strb.w	lr, [r2, #9]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 80058f0:	f640 1e0b 	movw	lr, #2315	; 0x90b
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 80058f4:	f882 8006 	strb.w	r8, [r2, #6]
	ptiming->range_config__sigma_thresh                       =
 80058f8:	f8b5 9014 	ldrh.w	r9, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 80058fc:	f8b5 801a 	ldrh.w	r8, [r5, #26]
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8005900:	6114      	str	r4, [r2, #16]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8005902:	f8a2 800c 	strh.w	r8, [r2, #12]
		pdynamic->system__grouped_parameter_hold = 0x00;

		/* Timing Configuration */

		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8005906:	f44f 4831 	mov.w	r8, #45312	; 0xb100
	ptiming->system__fractional_enable                        = 0x00;
 800590a:	7514      	strb	r4, [r2, #20]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800590c:	7391      	strb	r1, [r2, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800590e:	21c7      	movs	r1, #199	; 0xc7
	ptiming->range_config__valid_phase_high                   = 0x78;
 8005910:	73d0      	strb	r0, [r2, #15]
	pdynamic->system__sequence_config                          = \
 8005912:	20db      	movs	r0, #219	; 0xdb
	ptiming->range_config__sigma_thresh                       =
 8005914:	f8a2 900a 	strh.w	r9, [r2, #10]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8005918:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 800591a:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 800591e:	719c      	strb	r4, [r3, #6]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8005920:	f8a3 e008 	strh.w	lr, [r3, #8]
	pdynamic->sd_config__initial_phase_sd0                     =
 8005924:	f895 e007 	ldrb.w	lr, [r5, #7]
 8005928:	f883 e00a 	strb.w	lr, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 800592c:	f895 e00a 	ldrb.w	lr, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8005930:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8005932:	f883 e00b 	strb.w	lr, [r3, #11]
		ptiming->range_config__timeout_macrop_a_lo                = 0xB1;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 8005936:	f04f 0ed4 	mov.w	lr, #212	; 0xd4
	pdynamic->sd_config__first_order_select =
 800593a:	f895 9024 	ldrb.w	r9, [r5, #36]	; 0x24
 800593e:	f883 900d 	strb.w	r9, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8005942:	f895 9023 	ldrb.w	r9, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8005946:	73d9      	strb	r1, [r3, #15]
				ptuning_parms->tp_timed_seed_cfg;

		/* System control */

		/* Configure Timed/Psuedo-solo mode */
		psystem->system__mode_start = \
 8005948:	2110      	movs	r1, #16
	pdynamic->system__sequence_config                          = \
 800594a:	7458      	strb	r0, [r3, #17]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 800594c:	4620      	mov	r0, r4
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 800594e:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 8005952:	f883 900e 	strb.w	r9, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 8005956:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 8005958:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 800595a:	70fe      	strb	r6, [r7, #3]
		pdynamic->system__grouped_parameter_hold = 0x00;
 800595c:	749c      	strb	r4, [r3, #18]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 800595e:	71d4      	strb	r4, [r2, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8005960:	f8a2 8004 	strh.w	r8, [r2, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 8005964:	f882 e008 	strb.w	lr, [r2, #8]
		pdynamic->system__seed_config =
 8005968:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 800596c:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start = \
 800596e:	7139      	strb	r1, [r7, #4]
}
 8005970:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005974:	00080200 	.word	0x00080200
 8005978:	01ff3800 	.word	0x01ff3800
 800597c:	20001a00 	.word	0x20001a00
 8005980:	02110000 	.word	0x02110000

08005984 <VL53L1_preset_mode_olt>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8005984:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005988:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 800598a:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 800598c:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8005990:	f8df c114 	ldr.w	ip, [pc, #276]	; 8005aa8 <VL53L1_preset_mode_olt+0x124>
 8005994:	4f3f      	ldr	r7, [pc, #252]	; (8005a94 <VL53L1_preset_mode_olt+0x110>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8005996:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8005998:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 800599c:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 80059a0:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80059a4:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80059a8:	f8c0 4002 	str.w	r4, [r0, #2]
 80059ac:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80059b0:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80059b4:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80059b8:	f895 801e 	ldrb.w	r8, [r5, #30]
 80059bc:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80059c0:	f895 801f 	ldrb.w	r8, [r5, #31]
 80059c4:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80059c8:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 80059cc:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 80059ce:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80059d0:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80059d2:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80059d6:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80059da:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 80059dc:	f895 8010 	ldrb.w	r8, [r5, #16]
 80059e0:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80059e4:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80059e8:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80059ea:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80059ee:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80059f2:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80059f4:	77c4      	strb	r4, [r0, #31]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80059f6:	f640 10f5 	movw	r0, #2549	; 0x9f5
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80059fa:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 80059fc:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80059fe:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8005a02:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 8005a06:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8005a08:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8005a0a:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8005a0c:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005a0e:	4f22      	ldr	r7, [pc, #136]	; (8005a98 <VL53L1_preset_mode_olt+0x114>)
	pgeneral->dss_config__roi_mode_control =
 8005a10:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8005a12:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8005a16:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8005a18:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8005a1c:	4f1f      	ldr	r7, [pc, #124]	; (8005a9c <VL53L1_preset_mode_olt+0x118>)
 8005a1e:	4920      	ldr	r1, [pc, #128]	; (8005aa0 <VL53L1_preset_mode_olt+0x11c>)
 8005a20:	8110      	strh	r0, [r2, #8]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8005a22:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8005a24:	6011      	str	r1, [r2, #0]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8005a26:	f640 110b 	movw	r1, #2315	; 0x90b
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8005a2a:	6057      	str	r7, [r2, #4]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8005a2c:	f8b5 801a 	ldrh.w	r8, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 8005a30:	f8b5 9014 	ldrh.w	r9, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8005a34:	f8a2 800c 	strh.w	r8, [r2, #12]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8005a38:	f04f 08c7 	mov.w	r8, #199	; 0xc7
	ptiming->range_config__sigma_thresh                       =
 8005a3c:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8005a40:	f882 e00e 	strb.w	lr, [r2, #14]
	pdynamic->system__sequence_config                          = \
 8005a44:	f04f 0edb 	mov.w	lr, #219	; 0xdb
	ptiming->range_config__valid_phase_high                   = 0x78;
 8005a48:	73d0      	strb	r0, [r2, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8005a4a:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8005a4c:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8005a4e:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8005a50:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8005a52:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8005a56:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8005a58:	f895 2021 	ldrb.w	r2, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8005a5c:	8119      	strh	r1, [r3, #8]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8005a5e:	2102      	movs	r1, #2
	pdynamic->system__seed_config =
 8005a60:	71da      	strb	r2, [r3, #7]
	pdynamic->sd_config__initial_phase_sd0                     =
 8005a62:	79ea      	ldrb	r2, [r5, #7]
 8005a64:	729a      	strb	r2, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8005a66:	7aaa      	ldrb	r2, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8005a68:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8005a6a:	72da      	strb	r2, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8005a6c:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
		psystem->system__stream_count_ctrl  = 0x01;
 8005a70:	4a0c      	ldr	r2, [pc, #48]	; (8005aa4 <VL53L1_preset_mode_olt+0x120>)
	pdynamic->sd_config__first_order_select =
 8005a72:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8005a74:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8005a78:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 8005a7c:	739c      	strb	r4, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8005a7e:	f883 800f 	strb.w	r8, [r3, #15]
	pdynamic->system__sequence_config                          = \
 8005a82:	f883 e011 	strb.w	lr, [r3, #17]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8005a86:	7499      	strb	r1, [r3, #18]
		psystem->system__stream_count_ctrl  = 0x01;
 8005a88:	9b07      	ldr	r3, [sp, #28]
 8005a8a:	f8c3 2001 	str.w	r2, [r3, #1]
}
 8005a8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005a92:	bf00      	nop
 8005a94:	00080200 	.word	0x00080200
 8005a98:	01ff3800 	.word	0x01ff3800
 8005a9c:	010bcc01 	.word	0x010bcc01
 8005aa0:	20001a00 	.word	0x20001a00
 8005aa4:	21010101 	.word	0x21010101
 8005aa8:	02110000 	.word	0x02110000

08005aac <VL53L1_init_version>:
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	pdev->version.ll_major    = VL53L1_LL_API_IMPLEMENTATION_VER_MAJOR;
	pdev->version.ll_minor    = VL53L1_LL_API_IMPLEMENTATION_VER_MINOR;
	pdev->version.ll_build    = VL53L1_LL_API_IMPLEMENTATION_VER_SUB;
	pdev->version.ll_revision = VL53L1_LL_API_IMPLEMENTATION_VER_REVISION;
 8005aac:	f640 018e 	movw	r1, #2190	; 0x88e
 8005ab0:	f240 2201 	movw	r2, #513	; 0x201
	pdev->version.ll_minor    = VL53L1_LL_API_IMPLEMENTATION_VER_MINOR;
 8005ab4:	230d      	movs	r3, #13
	pdev->version.ll_revision = VL53L1_LL_API_IMPLEMENTATION_VER_REVISION;
 8005ab6:	6241      	str	r1, [r0, #36]	; 0x24
 8005ab8:	8502      	strh	r2, [r0, #40]	; 0x28
	pdev->version.ll_minor    = VL53L1_LL_API_IMPLEMENTATION_VER_MINOR;
 8005aba:	f880 302a 	strb.w	r3, [r0, #42]	; 0x2a
}
 8005abe:	4770      	bx	lr

08005ac0 <VL53L1_init_ll_driver_state>:

	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);
	VL53L1_ll_driver_state_t *pstate = &(pdev->ll_state);

	pstate->cfg_device_state  = device_state;
	pstate->cfg_stream_count  = 0;
 8005ac0:	2300      	movs	r3, #0
	pstate->cfg_gph_id        = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8005ac2:	2202      	movs	r2, #2
	pstate->cfg_device_state  = device_state;
 8005ac4:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
	pstate->cfg_timing_status = 0;

	pstate->rd_device_state   = device_state;
 8005ac8:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
	pstate->cfg_stream_count  = 0;
 8005acc:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
	pstate->cfg_timing_status = 0;
 8005ad0:	f880 302f 	strb.w	r3, [r0, #47]	; 0x2f
	pstate->rd_stream_count   = 0;
 8005ad4:	f880 3031 	strb.w	r3, [r0, #49]	; 0x31
	pstate->rd_gph_id         = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
	pstate->rd_timing_status  = 0;
 8005ad8:	f880 3033 	strb.w	r3, [r0, #51]	; 0x33
	pstate->cfg_gph_id        = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8005adc:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
	pstate->rd_gph_id         = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8005ae0:	f880 2032 	strb.w	r2, [r0, #50]	; 0x32

}
 8005ae4:	4770      	bx	lr
 8005ae6:	bf00      	nop

08005ae8 <VL53L1_update_ll_driver_rd_state>:

#ifdef VL53L1_LOGGING
	VL53L1_print_ll_driver_state(pstate);
#endif

	if ((pdev->sys_ctrl.system__mode_start &
 8005ae8:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
 8005aec:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8005af0:	d017      	beq.n	8005b22 <VL53L1_update_ll_driver_rd_state+0x3a>

		/*
		 * implement read stream count
		 */

		if (pstate->rd_stream_count == 0xFF) {
 8005af2:	f890 3031 	ldrb.w	r3, [r0, #49]	; 0x31
 8005af6:	2bff      	cmp	r3, #255	; 0xff
 8005af8:	d017      	beq.n	8005b2a <VL53L1_update_ll_driver_rd_state+0x42>
			pstate->rd_stream_count = 0x80;
		} else {
			pstate->rd_stream_count++;
 8005afa:	3301      	adds	r3, #1
 8005afc:	b2db      	uxtb	r3, r3

		/*
		 * Toggle grouped parameter hold ID
		 */

		pstate->rd_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8005afe:	f890 1032 	ldrb.w	r1, [r0, #50]	; 0x32

		/* Ok now ranging  */

		switch (pstate->rd_device_state) {
 8005b02:	f890 2030 	ldrb.w	r2, [r0, #48]	; 0x30
		pstate->rd_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8005b06:	f081 0102 	eor.w	r1, r1, #2
 8005b0a:	f880 3031 	strb.w	r3, [r0, #49]	; 0x31
		switch (pstate->rd_device_state) {
 8005b0e:	1ed3      	subs	r3, r2, #3
		pstate->rd_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8005b10:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
		switch (pstate->rd_device_state) {
 8005b14:	2b05      	cmp	r3, #5
 8005b16:	d804      	bhi.n	8005b22 <VL53L1_update_ll_driver_rd_state+0x3a>
 8005b18:	e8df f003 	tbb	[pc, r3]
 8005b1c:	19030321 	.word	0x19030321
 8005b20:	0914      	.short	0x0914

		break;

		default:

			pstate->rd_device_state  =
 8005b22:	4b17      	ldr	r3, [pc, #92]	; (8005b80 <VL53L1_update_ll_driver_rd_state+0x98>)
 8005b24:	6303      	str	r3, [r0, #48]	; 0x30
#endif

	LOG_FUNCTION_END(status);

	return status;
}
 8005b26:	2000      	movs	r0, #0
 8005b28:	4770      	bx	lr
			pstate->rd_stream_count = 0x80;
 8005b2a:	2380      	movs	r3, #128	; 0x80
 8005b2c:	e7e7      	b.n	8005afe <VL53L1_update_ll_driver_rd_state+0x16>
			pstate->rd_timing_status ^= 0x01;
 8005b2e:	f890 3033 	ldrb.w	r3, [r0, #51]	; 0x33
			pstate->rd_device_state =
 8005b32:	2208      	movs	r2, #8
			pstate->rd_timing_status ^= 0x01;
 8005b34:	f083 0301 	eor.w	r3, r3, #1
			pstate->rd_device_state =
 8005b38:	f880 2030 	strb.w	r2, [r0, #48]	; 0x30
			pstate->rd_timing_status ^= 0x01;
 8005b3c:	f880 3033 	strb.w	r3, [r0, #51]	; 0x33
}
 8005b40:	2000      	movs	r0, #0
 8005b42:	4770      	bx	lr
			pstate->rd_device_state =
 8005b44:	2308      	movs	r3, #8
 8005b46:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
}
 8005b4a:	2000      	movs	r0, #0
 8005b4c:	4770      	bx	lr
			pstate->rd_stream_count = 0;
 8005b4e:	2200      	movs	r2, #0
			pstate->rd_device_state =
 8005b50:	2308      	movs	r3, #8
			pstate->rd_stream_count = 0;
 8005b52:	f880 2031 	strb.w	r2, [r0, #49]	; 0x31
			pstate->rd_device_state =
 8005b56:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
}
 8005b5a:	2000      	movs	r0, #0
 8005b5c:	4770      	bx	lr
			if ((pdev->dyn_cfg.system__grouped_parameter_hold &
 8005b5e:	f890 21c6 	ldrb.w	r2, [r0, #454]	; 0x1c6
			pstate->rd_stream_count  = 0;
 8005b62:	2300      	movs	r3, #0
			if ((pdev->dyn_cfg.system__grouped_parameter_hold &
 8005b64:	f012 0f02 	tst.w	r2, #2
			pstate->rd_stream_count  = 0;
 8005b68:	f880 3031 	strb.w	r3, [r0, #49]	; 0x31
			pstate->rd_timing_status = 0;
 8005b6c:	f880 3033 	strb.w	r3, [r0, #51]	; 0x33
				pstate->rd_device_state =
 8005b70:	bf14      	ite	ne
 8005b72:	2306      	movne	r3, #6
 8005b74:	2308      	moveq	r3, #8
 8005b76:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
}
 8005b7a:	2000      	movs	r0, #0
 8005b7c:	4770      	bx	lr
 8005b7e:	bf00      	nop
 8005b80:	00020003 	.word	0x00020003

08005b84 <VL53L1_check_ll_driver_rd_state>:
	device_gph_id = (psys_results->result__interrupt_status &
		VL53L1_INTERRUPT_STATUS__GPH_ID_INT_STATUS_MASK) >> 4;

	/* only apply checks in back to back mode */

	if ((pdev->sys_ctrl.system__mode_start &
 8005b84:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
 8005b88:	f013 0320 	ands.w	r3, r3, #32
 8005b8c:	d01d      	beq.n	8005bca <VL53L1_check_ll_driver_rd_state+0x46>
		 *
		 * In theory the stream count should zero for the GPH interrupt
		 * but that is not the case after at abort ....
		 */

		if (pstate->rd_device_state ==
 8005b8e:	f890 2030 	ldrb.w	r2, [r0, #48]	; 0x30
			psys_results->result__range_status &
 8005b92:	f890 31cf 	ldrb.w	r3, [r0, #463]	; 0x1cf
		if (pstate->rd_device_state ==
 8005b96:	2a06      	cmp	r2, #6
 8005b98:	d019      	beq.n	8005bce <VL53L1_check_ll_driver_rd_state+0x4a>
{
 8005b9a:	b410      	push	{r4}
		VL53L1_INTERRUPT_STATUS__GPH_ID_INT_STATUS_MASK) >> 4;
 8005b9c:	f890 31ce 	ldrb.w	r3, [r0, #462]	; 0x1ce
			if (device_range_status !=
				VL53L1_DEVICEERROR_GPHSTREAMCOUNT0READY) {
				status = VL53L1_ERROR_GPH_SYNC_CHECK_FAIL;
			}
		} else {
			if (pstate->rd_stream_count != device_stream_count) {
 8005ba0:	f890 4031 	ldrb.w	r4, [r0, #49]	; 0x31
 8005ba4:	f890 11d1 	ldrb.w	r1, [r0, #465]	; 0x1d1
		VL53L1_INTERRUPT_STATUS__GPH_ID_INT_STATUS_MASK) >> 4;
 8005ba8:	111b      	asrs	r3, r3, #4

		/*
		 * Check Read state GPH ID
		 */

		if (pstate->rd_gph_id != device_gph_id) {
 8005baa:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
			if (pstate->rd_stream_count != device_stream_count) {
 8005bae:	428c      	cmp	r4, r1
		if (pstate->rd_gph_id != device_gph_id) {
 8005bb0:	f003 0302 	and.w	r3, r3, #2
	} /* if back to back */

	LOG_FUNCTION_END(status);

	return status;
}
 8005bb4:	f85d 4b04 	ldr.w	r4, [sp], #4
				status = VL53L1_ERROR_STREAM_COUNT_CHECK_FAIL;
 8005bb8:	bf14      	ite	ne
 8005bba:	f06f 0011 	mvnne.w	r0, #17
 8005bbe:	2000      	moveq	r0, #0
		if (pstate->rd_gph_id != device_gph_id) {
 8005bc0:	429a      	cmp	r2, r3
			status = VL53L1_ERROR_GPH_ID_CHECK_FAIL;
 8005bc2:	bf18      	it	ne
 8005bc4:	f06f 0012 	mvnne.w	r0, #18
}
 8005bc8:	4770      	bx	lr
	VL53L1_Error         status = VL53L1_ERROR_NONE;
 8005bca:	4618      	mov	r0, r3
}
 8005bcc:	4770      	bx	lr
			if (device_range_status !=
 8005bce:	f003 031f 	and.w	r3, r3, #31
 8005bd2:	2b12      	cmp	r3, #18
				status = VL53L1_ERROR_GPH_SYNC_CHECK_FAIL;
 8005bd4:	bf0c      	ite	eq
 8005bd6:	2000      	moveq	r0, #0
 8005bd8:	f06f 0010 	mvnne.w	r0, #16
 8005bdc:	4770      	bx	lr
 8005bde:	bf00      	nop

08005be0 <VL53L1_update_ll_driver_cfg_state>:
	VL53L1_print_ll_driver_state(pstate);
#endif

	/* if top bits of mode start reset are zero then in standby state */

	if ((pdev->sys_ctrl.system__mode_start &
 8005be0:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
 8005be4:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8005be8:	d013      	beq.n	8005c12 <VL53L1_update_ll_driver_cfg_state+0x32>

		/*
		 * implement configuration stream count
		 */

		if (pstate->cfg_stream_count == 0xFF) {
 8005bea:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8005bee:	2bff      	cmp	r3, #255	; 0xff
 8005bf0:	d013      	beq.n	8005c1a <VL53L1_update_ll_driver_cfg_state+0x3a>
			pstate->cfg_stream_count = 0x80;
		} else {
			pstate->cfg_stream_count++;
 8005bf2:	3301      	adds	r3, #1
 8005bf4:	b2db      	uxtb	r3, r3

		/*
		 * Toggle grouped parameter hold ID
		 */

		pstate->cfg_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8005bf6:	f890 202e 	ldrb.w	r2, [r0, #46]	; 0x2e

		/*
		 * Implement configuration state machine
		 */

		switch (pstate->cfg_device_state) {
 8005bfa:	f890 102c 	ldrb.w	r1, [r0, #44]	; 0x2c
		pstate->cfg_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8005bfe:	f082 0202 	eor.w	r2, r2, #2
 8005c02:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
		switch (pstate->cfg_device_state) {
 8005c06:	2903      	cmp	r1, #3
		pstate->cfg_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8005c08:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
		switch (pstate->cfg_device_state) {
 8005c0c:	d00f      	beq.n	8005c2e <VL53L1_update_ll_driver_cfg_state+0x4e>
 8005c0e:	2904      	cmp	r1, #4
 8005c10:	d005      	beq.n	8005c1e <VL53L1_update_ll_driver_cfg_state+0x3e>

		break;

		default:

			pstate->cfg_device_state = VL53L1_DEVICESTATE_SW_STANDBY;
 8005c12:	4b0d      	ldr	r3, [pc, #52]	; (8005c48 <VL53L1_update_ll_driver_cfg_state+0x68>)
 8005c14:	62c3      	str	r3, [r0, #44]	; 0x2c
#endif

	LOG_FUNCTION_END(status);

	return status;
}
 8005c16:	2000      	movs	r0, #0
 8005c18:	4770      	bx	lr
			pstate->cfg_stream_count = 0x80;
 8005c1a:	2380      	movs	r3, #128	; 0x80
 8005c1c:	e7eb      	b.n	8005bf6 <VL53L1_update_ll_driver_cfg_state+0x16>
			pstate->cfg_timing_status ^= 0x01;
 8005c1e:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 8005c22:	f083 0301 	eor.w	r3, r3, #1
 8005c26:	f880 302f 	strb.w	r3, [r0, #47]	; 0x2f
}
 8005c2a:	2000      	movs	r0, #0
 8005c2c:	4770      	bx	lr
			pstate->cfg_timing_status ^= 0x01;
 8005c2e:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
			pstate->cfg_stream_count = 1;
 8005c32:	2101      	movs	r1, #1
			pstate->cfg_device_state = VL53L1_DEVICESTATE_RANGING_DSS_AUTO;
 8005c34:	2204      	movs	r2, #4
			pstate->cfg_timing_status ^= 0x01;
 8005c36:	404b      	eors	r3, r1
			pstate->cfg_stream_count = 1;
 8005c38:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
			pstate->cfg_device_state = VL53L1_DEVICESTATE_RANGING_DSS_AUTO;
 8005c3c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
			pstate->cfg_timing_status ^= 0x01;
 8005c40:	f880 302f 	strb.w	r3, [r0, #47]	; 0x2f
}
 8005c44:	2000      	movs	r0, #0
 8005c46:	4770      	bx	lr
 8005c48:	00020003 	.word	0x00020003

08005c4c <VL53L1_copy_rtn_good_spads_to_buffer>:
{
	/*
	 * Convenience function to copy return SPAD enables to buffer
	 */

	*(pbuffer +  0) = pdata->global_config__spad_enables_rtn_0;
 8005c4c:	7c03      	ldrb	r3, [r0, #16]
 8005c4e:	700b      	strb	r3, [r1, #0]
	*(pbuffer +  1) = pdata->global_config__spad_enables_rtn_1;
 8005c50:	7c43      	ldrb	r3, [r0, #17]
 8005c52:	704b      	strb	r3, [r1, #1]
	*(pbuffer +  2) = pdata->global_config__spad_enables_rtn_2;
 8005c54:	7c83      	ldrb	r3, [r0, #18]
 8005c56:	708b      	strb	r3, [r1, #2]
	*(pbuffer +  3) = pdata->global_config__spad_enables_rtn_3;
 8005c58:	7cc3      	ldrb	r3, [r0, #19]
 8005c5a:	70cb      	strb	r3, [r1, #3]
	*(pbuffer +  4) = pdata->global_config__spad_enables_rtn_4;
 8005c5c:	7d03      	ldrb	r3, [r0, #20]
 8005c5e:	710b      	strb	r3, [r1, #4]
	*(pbuffer +  5) = pdata->global_config__spad_enables_rtn_5;
 8005c60:	7d43      	ldrb	r3, [r0, #21]
 8005c62:	714b      	strb	r3, [r1, #5]
	*(pbuffer +  6) = pdata->global_config__spad_enables_rtn_6;
 8005c64:	7d83      	ldrb	r3, [r0, #22]
 8005c66:	718b      	strb	r3, [r1, #6]
	*(pbuffer +  7) = pdata->global_config__spad_enables_rtn_7;
 8005c68:	7dc3      	ldrb	r3, [r0, #23]
 8005c6a:	71cb      	strb	r3, [r1, #7]
	*(pbuffer +  8) = pdata->global_config__spad_enables_rtn_8;
 8005c6c:	7e03      	ldrb	r3, [r0, #24]
 8005c6e:	720b      	strb	r3, [r1, #8]
	*(pbuffer +  9) = pdata->global_config__spad_enables_rtn_9;
 8005c70:	7e43      	ldrb	r3, [r0, #25]
 8005c72:	724b      	strb	r3, [r1, #9]
	*(pbuffer + 10) = pdata->global_config__spad_enables_rtn_10;
 8005c74:	7e83      	ldrb	r3, [r0, #26]
 8005c76:	728b      	strb	r3, [r1, #10]
	*(pbuffer + 11) = pdata->global_config__spad_enables_rtn_11;
 8005c78:	7ec3      	ldrb	r3, [r0, #27]
 8005c7a:	72cb      	strb	r3, [r1, #11]
	*(pbuffer + 12) = pdata->global_config__spad_enables_rtn_12;
 8005c7c:	7f03      	ldrb	r3, [r0, #28]
 8005c7e:	730b      	strb	r3, [r1, #12]
	*(pbuffer + 13) = pdata->global_config__spad_enables_rtn_13;
 8005c80:	7f43      	ldrb	r3, [r0, #29]
 8005c82:	734b      	strb	r3, [r1, #13]
	*(pbuffer + 14) = pdata->global_config__spad_enables_rtn_14;
 8005c84:	7f83      	ldrb	r3, [r0, #30]
 8005c86:	738b      	strb	r3, [r1, #14]
	*(pbuffer + 15) = pdata->global_config__spad_enables_rtn_15;
 8005c88:	7fc3      	ldrb	r3, [r0, #31]
 8005c8a:	73cb      	strb	r3, [r1, #15]
	*(pbuffer + 16) = pdata->global_config__spad_enables_rtn_16;
 8005c8c:	f890 3020 	ldrb.w	r3, [r0, #32]
 8005c90:	740b      	strb	r3, [r1, #16]
	*(pbuffer + 17) = pdata->global_config__spad_enables_rtn_17;
 8005c92:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 8005c96:	744b      	strb	r3, [r1, #17]
	*(pbuffer + 18) = pdata->global_config__spad_enables_rtn_18;
 8005c98:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8005c9c:	748b      	strb	r3, [r1, #18]
	*(pbuffer + 19) = pdata->global_config__spad_enables_rtn_19;
 8005c9e:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8005ca2:	74cb      	strb	r3, [r1, #19]
	*(pbuffer + 20) = pdata->global_config__spad_enables_rtn_20;
 8005ca4:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8005ca8:	750b      	strb	r3, [r1, #20]
	*(pbuffer + 21) = pdata->global_config__spad_enables_rtn_21;
 8005caa:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8005cae:	754b      	strb	r3, [r1, #21]
	*(pbuffer + 22) = pdata->global_config__spad_enables_rtn_22;
 8005cb0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8005cb4:	758b      	strb	r3, [r1, #22]
	*(pbuffer + 23) = pdata->global_config__spad_enables_rtn_23;
 8005cb6:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 8005cba:	75cb      	strb	r3, [r1, #23]
	*(pbuffer + 24) = pdata->global_config__spad_enables_rtn_24;
 8005cbc:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8005cc0:	760b      	strb	r3, [r1, #24]
	*(pbuffer + 25) = pdata->global_config__spad_enables_rtn_25;
 8005cc2:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
 8005cc6:	764b      	strb	r3, [r1, #25]
	*(pbuffer + 26) = pdata->global_config__spad_enables_rtn_26;
 8005cc8:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
 8005ccc:	768b      	strb	r3, [r1, #26]
	*(pbuffer + 27) = pdata->global_config__spad_enables_rtn_27;
 8005cce:	f890 302b 	ldrb.w	r3, [r0, #43]	; 0x2b
 8005cd2:	76cb      	strb	r3, [r1, #27]
	*(pbuffer + 28) = pdata->global_config__spad_enables_rtn_28;
 8005cd4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8005cd8:	770b      	strb	r3, [r1, #28]
	*(pbuffer + 29) = pdata->global_config__spad_enables_rtn_29;
 8005cda:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8005cde:	774b      	strb	r3, [r1, #29]
	*(pbuffer + 30) = pdata->global_config__spad_enables_rtn_30;
 8005ce0:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 8005ce4:	778b      	strb	r3, [r1, #30]
	*(pbuffer + 31) = pdata->global_config__spad_enables_rtn_31;
 8005ce6:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 8005cea:	77cb      	strb	r3, [r1, #31]
}
 8005cec:	4770      	bx	lr
 8005cee:	bf00      	nop

08005cf0 <VL53L1_i2c_encode_uint16_t>:
	uint16_t   i    = 0;
	uint16_t   data = 0;

	data =  ip_value;

	for (i = 0; i < count ; i++) {
 8005cf0:	b179      	cbz	r1, 8005d12 <VL53L1_i2c_encode_uint16_t+0x22>
 8005cf2:	1e53      	subs	r3, r2, #1
 8005cf4:	440a      	add	r2, r1
{
 8005cf6:	b410      	push	{r4}
 8005cf8:	1e4c      	subs	r4, r1, #1
 8005cfa:	4419      	add	r1, r3
 8005cfc:	b2a3      	uxth	r3, r4
 8005cfe:	1ac9      	subs	r1, r1, r3
		pbuffer[count-i-1] = (uint8_t)(data & 0x00FF);
 8005d00:	f802 0d01 	strb.w	r0, [r2, #-1]!
	for (i = 0; i < count ; i++) {
 8005d04:	4291      	cmp	r1, r2
		data = data >> 8;
 8005d06:	ea4f 2010 	mov.w	r0, r0, lsr #8
	for (i = 0; i < count ; i++) {
 8005d0a:	d1f9      	bne.n	8005d00 <VL53L1_i2c_encode_uint16_t+0x10>
	}
}
 8005d0c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005d10:	4770      	bx	lr
 8005d12:	4770      	bx	lr

08005d14 <VL53L1_i2c_decode_uint16_t>:
	 * (MS byte first order)
	 */

	uint16_t   value = 0x00;

	while (count-- > 0) {
 8005d14:	1e43      	subs	r3, r0, #1
 8005d16:	b29b      	uxth	r3, r3
 8005d18:	b148      	cbz	r0, 8005d2e <VL53L1_i2c_decode_uint16_t+0x1a>
 8005d1a:	3301      	adds	r3, #1
	uint16_t   value = 0x00;
 8005d1c:	2000      	movs	r0, #0
 8005d1e:	440b      	add	r3, r1
		value = (value << 8) | (uint16_t)*pbuffer++;
 8005d20:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005d24:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
	while (count-- > 0) {
 8005d28:	4299      	cmp	r1, r3
		value = (value << 8) | (uint16_t)*pbuffer++;
 8005d2a:	b280      	uxth	r0, r0
	while (count-- > 0) {
 8005d2c:	d1f8      	bne.n	8005d20 <VL53L1_i2c_decode_uint16_t+0xc>
	}

	return value;
}
 8005d2e:	4770      	bx	lr

08005d30 <VL53L1_i2c_encode_int16_t>:
	uint16_t   i    = 0;
	int16_t    data = 0;

	data =  ip_value;

	for (i = 0; i < count ; i++) {
 8005d30:	b179      	cbz	r1, 8005d52 <VL53L1_i2c_encode_int16_t+0x22>
 8005d32:	1e53      	subs	r3, r2, #1
 8005d34:	440a      	add	r2, r1
{
 8005d36:	b410      	push	{r4}
 8005d38:	1e4c      	subs	r4, r1, #1
 8005d3a:	4419      	add	r1, r3
 8005d3c:	b2a3      	uxth	r3, r4
 8005d3e:	1ac9      	subs	r1, r1, r3
		pbuffer[count-i-1] = (uint8_t)(data & 0x00FF);
 8005d40:	f802 0d01 	strb.w	r0, [r2, #-1]!
	for (i = 0; i < count ; i++) {
 8005d44:	4291      	cmp	r1, r2
		data = data >> 8;
 8005d46:	ea4f 2020 	mov.w	r0, r0, asr #8
	for (i = 0; i < count ; i++) {
 8005d4a:	d1f9      	bne.n	8005d40 <VL53L1_i2c_encode_int16_t+0x10>
	}
}
 8005d4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005d50:	4770      	bx	lr
 8005d52:	4770      	bx	lr

08005d54 <VL53L1_i2c_decode_int16_t>:
	 */

	int16_t    value = 0x00;

	/* implement sign extension */
	if (*pbuffer >= 0x80) {
 8005d54:	f991 3000 	ldrsb.w	r3, [r1]
		value = 0xFFFF;
	}

	while (count-- > 0) {
 8005d58:	1e42      	subs	r2, r0, #1
	if (*pbuffer >= 0x80) {
 8005d5a:	17db      	asrs	r3, r3, #31
	while (count-- > 0) {
 8005d5c:	b292      	uxth	r2, r2
	if (*pbuffer >= 0x80) {
 8005d5e:	b21b      	sxth	r3, r3
	while (count-- > 0) {
 8005d60:	b140      	cbz	r0, 8005d74 <VL53L1_i2c_decode_int16_t+0x20>
 8005d62:	3201      	adds	r2, #1
 8005d64:	440a      	add	r2, r1
		value = (value << 8) | (int16_t)*pbuffer++;
 8005d66:	f811 0b01 	ldrb.w	r0, [r1], #1
 8005d6a:	b25b      	sxtb	r3, r3
	while (count-- > 0) {
 8005d6c:	4291      	cmp	r1, r2
		value = (value << 8) | (int16_t)*pbuffer++;
 8005d6e:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
	while (count-- > 0) {
 8005d72:	d1f8      	bne.n	8005d66 <VL53L1_i2c_decode_int16_t+0x12>
	}

	return value;
}
 8005d74:	4618      	mov	r0, r3
 8005d76:	4770      	bx	lr

08005d78 <VL53L1_i2c_encode_uint32_t>:
	uint16_t   i    = 0;
	uint32_t   data = 0;

	data =  ip_value;

	for (i = 0; i < count ; i++) {
 8005d78:	b179      	cbz	r1, 8005d9a <VL53L1_i2c_encode_uint32_t+0x22>
 8005d7a:	1e53      	subs	r3, r2, #1
 8005d7c:	440a      	add	r2, r1
{
 8005d7e:	b410      	push	{r4}
 8005d80:	1e4c      	subs	r4, r1, #1
 8005d82:	4419      	add	r1, r3
 8005d84:	b2a3      	uxth	r3, r4
 8005d86:	1ac9      	subs	r1, r1, r3
		pbuffer[count-i-1] = (uint8_t)(data & 0x00FF);
 8005d88:	f802 0d01 	strb.w	r0, [r2, #-1]!
	for (i = 0; i < count ; i++) {
 8005d8c:	4291      	cmp	r1, r2
		data = data >> 8;
 8005d8e:	ea4f 2010 	mov.w	r0, r0, lsr #8
	for (i = 0; i < count ; i++) {
 8005d92:	d1f9      	bne.n	8005d88 <VL53L1_i2c_encode_uint32_t+0x10>
	}
}
 8005d94:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005d98:	4770      	bx	lr
 8005d9a:	4770      	bx	lr

08005d9c <VL53L1_i2c_decode_uint32_t>:
	 * (MS byte first order)
	 */

	uint32_t   value = 0x00;

	while (count-- > 0) {
 8005d9c:	1e43      	subs	r3, r0, #1
 8005d9e:	b29b      	uxth	r3, r3
 8005da0:	b140      	cbz	r0, 8005db4 <VL53L1_i2c_decode_uint32_t+0x18>
 8005da2:	3301      	adds	r3, #1
	uint32_t   value = 0x00;
 8005da4:	2000      	movs	r0, #0
 8005da6:	440b      	add	r3, r1
		value = (value << 8) | (uint32_t)*pbuffer++;
 8005da8:	f811 2b01 	ldrb.w	r2, [r1], #1
	while (count-- > 0) {
 8005dac:	4299      	cmp	r1, r3
		value = (value << 8) | (uint32_t)*pbuffer++;
 8005dae:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
	while (count-- > 0) {
 8005db2:	d1f9      	bne.n	8005da8 <VL53L1_i2c_decode_uint32_t+0xc>
	}

	return value;
}
 8005db4:	4770      	bx	lr
 8005db6:	bf00      	nop

08005db8 <VL53L1_i2c_decode_int32_t>:
	/* implement sign extension */
	if (*pbuffer >= 0x80) {
		value = 0xFFFFFFFF;
	}

	while (count-- > 0) {
 8005db8:	1e42      	subs	r2, r0, #1
	if (*pbuffer >= 0x80) {
 8005dba:	f991 3000 	ldrsb.w	r3, [r1]
	while (count-- > 0) {
 8005dbe:	b292      	uxth	r2, r2
	if (*pbuffer >= 0x80) {
 8005dc0:	17db      	asrs	r3, r3, #31
	while (count-- > 0) {
 8005dc2:	b138      	cbz	r0, 8005dd4 <VL53L1_i2c_decode_int32_t+0x1c>
 8005dc4:	3201      	adds	r2, #1
 8005dc6:	440a      	add	r2, r1
		value = (value << 8) | (int32_t)*pbuffer++;
 8005dc8:	f811 0b01 	ldrb.w	r0, [r1], #1
	while (count-- > 0) {
 8005dcc:	4291      	cmp	r1, r2
		value = (value << 8) | (int32_t)*pbuffer++;
 8005dce:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
	while (count-- > 0) {
 8005dd2:	d1f9      	bne.n	8005dc8 <VL53L1_i2c_decode_int32_t+0x10>
	}

	return value;
}
 8005dd4:	4618      	mov	r0, r3
 8005dd6:	4770      	bx	lr

08005dd8 <VL53L1_enable_powerforce>:
	 */

	VL53L1_Error status       = VL53L1_ERROR_NONE;
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	pdev->sys_ctrl.power_management__go1_power_force = value;
 8005dd8:	2201      	movs	r2, #1

	status = VL53L1_WrByte(
 8005dda:	2183      	movs	r1, #131	; 0x83
	pdev->sys_ctrl.power_management__go1_power_force = value;
 8005ddc:	f880 21c8 	strb.w	r2, [r0, #456]	; 0x1c8
	status = VL53L1_WrByte(
 8005de0:	f000 bed4 	b.w	8006b8c <VL53L1_WrByte>

08005de4 <VL53L1_disable_powerforce>:
	pdev->sys_ctrl.power_management__go1_power_force = value;
 8005de4:	2200      	movs	r2, #0
	status = VL53L1_WrByte(
 8005de6:	2183      	movs	r1, #131	; 0x83
	pdev->sys_ctrl.power_management__go1_power_force = value;
 8005de8:	f880 21c8 	strb.w	r2, [r0, #456]	; 0x1c8
	status = VL53L1_WrByte(
 8005dec:	f000 bece 	b.w	8006b8c <VL53L1_WrByte>

08005df0 <VL53L1_calc_macro_period_us>:
#endif

uint32_t VL53L1_calc_macro_period_us(
	uint16_t  fast_osc_frequency,
	uint8_t   vcsel_period)
{
 8005df0:	b538      	push	{r3, r4, r5, lr}
 8005df2:	460d      	mov	r5, r1

	/*  Calculate PLL period in [us] from the  fast_osc_frequency
	 *  Fast osc frequency fixed point format = unsigned 4.12
	 */

	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8005df4:	f000 f97a 	bl	80060ec <VL53L1_calc_pll_period_us>
 8005df8:	4604      	mov	r4, r0

	/*  VCSEL period
	 *  - the real VCSEL period in PLL clocks = 2*(VCSEL_PERIOD+1)
	 */

	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8005dfa:	4628      	mov	r0, r5
	 *  Max bits (24 - 6) + 12 = 30-bits usage
	 *
	 *  Downshift by 6 before multiplying by the VCSEL Period
	 */

	macro_period_us =
 8005dfc:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8005e00:	f000 f97a 	bl	80060f8 <VL53L1_decode_vcsel_period>
	macro_period_us =
 8005e04:	0224      	lsls	r4, r4, #8
			(uint32_t)VL53L1_MACRO_PERIOD_VCSEL_PERIODS *
			pll_period_us;
	macro_period_us = macro_period_us >> 6;
 8005e06:	09a4      	lsrs	r4, r4, #6

	macro_period_us = macro_period_us * (uint32_t)vcsel_period_pclks;
 8005e08:	fb04 f000 	mul.w	r0, r4, r0
#endif

	LOG_FUNCTION_END(0);

	return macro_period_us;
}
 8005e0c:	0980      	lsrs	r0, r0, #6
 8005e0e:	bd38      	pop	{r3, r4, r5, pc}

08005e10 <VL53L1_calc_range_ignore_threshold>:

	LOG_FUNCTION_START("");

	/* Shift central_rate to .13 fractional for simple addition */

	central_rate_int = ((int32_t)central_rate * (1 << 4)) / (1000);
 8005e10:	0100      	lsls	r0, r0, #4

	if (x_gradient < 0) {
 8005e12:	2900      	cmp	r1, #0
{
 8005e14:	b410      	push	{r4}
	central_rate_int = ((int32_t)central_rate * (1 << 4)) / (1000);
 8005e16:	4c15      	ldr	r4, [pc, #84]	; (8005e6c <VL53L1_calc_range_ignore_threshold+0x5c>)
 8005e18:	fb84 c400 	smull	ip, r4, r4, r0
 8005e1c:	ea4f 70e0 	mov.w	r0, r0, asr #31
 8005e20:	ebc0 10a4 	rsb	r0, r0, r4, asr #6
	if (x_gradient < 0) {
 8005e24:	db1e      	blt.n	8005e64 <VL53L1_calc_range_ignore_threshold+0x54>
 8005e26:	2100      	movs	r1, #0
		x_gradient_int = x_gradient * -1;
	}

	if (y_gradient < 0) {
 8005e28:	2a00      	cmp	r2, #0
 8005e2a:	da02      	bge.n	8005e32 <VL53L1_calc_range_ignore_threshold+0x22>
		y_gradient_int = y_gradient * -1;
 8005e2c:	4252      	negs	r2, r2
 8005e2e:	fa01 f182 	sxtah	r1, r1, r2

	/* Calculate full rate per spad - worst case from measured xtalk */
	/* Generated here from .11 fractional kcps */
	/* Additional factor of 4 applied to bring fractional precision to .13 */

	range_ignore_thresh_int = (8 * x_gradient_int * 4) + (8 * y_gradient_int * 4);
 8005e32:	0149      	lsls	r1, r1, #5

	/* Convert Kcps to Mcps */

	range_ignore_thresh_int = range_ignore_thresh_int / 1000;
 8005e34:	4c0d      	ldr	r4, [pc, #52]	; (8005e6c <VL53L1_calc_range_ignore_threshold+0x5c>)
 8005e36:	17ca      	asrs	r2, r1, #31
 8005e38:	fb84 4101 	smull	r4, r1, r4, r1
#endif

	LOG_FUNCTION_END(0);

	return range_ignore_thresh_kcps;
}
 8005e3c:	f85d 4b04 	ldr.w	r4, [sp], #4
	range_ignore_thresh_int = range_ignore_thresh_int / 1000;
 8005e40:	ebc2 11a1 	rsb	r1, r2, r1, asr #6
	range_ignore_thresh_int = range_ignore_thresh_int + central_rate_int;
 8005e44:	4408      	add	r0, r1
	range_ignore_thresh_int = (int32_t)rate_mult * range_ignore_thresh_int;
 8005e46:	fb00 f303 	mul.w	r3, r0, r3
	range_ignore_thresh_int = (range_ignore_thresh_int + (1<<4)) / (1<<5);
 8005e4a:	f113 0010 	adds.w	r0, r3, #16
 8005e4e:	bf48      	it	mi
 8005e50:	f103 002f 	addmi.w	r0, r3, #47	; 0x2f
	return range_ignore_thresh_kcps;
 8005e54:	f64f 73ff 	movw	r3, #65535	; 0xffff
	range_ignore_thresh_int = (range_ignore_thresh_int + (1<<4)) / (1<<5);
 8005e58:	1140      	asrs	r0, r0, #5
	return range_ignore_thresh_kcps;
 8005e5a:	4298      	cmp	r0, r3
 8005e5c:	bfa8      	it	ge
 8005e5e:	4618      	movge	r0, r3
}
 8005e60:	b280      	uxth	r0, r0
 8005e62:	4770      	bx	lr
		x_gradient_int = x_gradient * -1;
 8005e64:	4249      	negs	r1, r1
 8005e66:	b209      	sxth	r1, r1
 8005e68:	e7de      	b.n	8005e28 <VL53L1_calc_range_ignore_threshold+0x18>
 8005e6a:	bf00      	nop
 8005e6c:	10624dd3 	.word	0x10624dd3

08005e70 <VL53L1_calc_timeout_us>:
	uint64_t tmp            = 0;

	LOG_FUNCTION_START("");

	tmp  = (uint64_t)timeout_mclks * (uint64_t)macro_period_us;
	tmp += 0x00800;
 8005e70:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8005e74:	2300      	movs	r3, #0
 8005e76:	fbe1 2300 	umlal	r2, r3, r1, r0
	tmp  = tmp >> 12;
 8005e7a:	0b10      	lsrs	r0, r2, #12
#endif

	LOG_FUNCTION_END(0);

	return timeout_us;
}
 8005e7c:	ea40 5003 	orr.w	r0, r0, r3, lsl #20
 8005e80:	4770      	bx	lr
 8005e82:	bf00      	nop

08005e84 <VL53L1_calc_decoded_timeout_us>:
	 * format (LSByte * 2^MSByte) + 1
	 */

	uint32_t timeout_macro_clks = 0;

	timeout_macro_clks = ((uint32_t) (encoded_timeout & 0x00FF)
 8005e84:	b2c3      	uxtb	r3, r0
			<< (uint32_t) ((encoded_timeout & 0xFF00) >> 8)) + 1;
 8005e86:	0a00      	lsrs	r0, r0, #8
 8005e88:	fa03 f000 	lsl.w	r0, r3, r0
{
 8005e8c:	b430      	push	{r4, r5}
	timeout_macro_clks = ((uint32_t) (encoded_timeout & 0x00FF)
 8005e8e:	3001      	adds	r0, #1
	tmp += 0x00800;
 8005e90:	f44f 6400 	mov.w	r4, #2048	; 0x800
 8005e94:	2500      	movs	r5, #0
 8005e96:	fbe0 4501 	umlal	r4, r5, r0, r1
	tmp  = tmp >> 12;
 8005e9a:	0b20      	lsrs	r0, r4, #12
}
 8005e9c:	ea40 5005 	orr.w	r0, r0, r5, lsl #20
 8005ea0:	bc30      	pop	{r4, r5}
 8005ea2:	4770      	bx	lr

08005ea4 <VL53L1_calc_timeout_register_values>:
	uint32_t                 mm_config_timeout_us,
	uint32_t                 range_config_timeout_us,
	uint16_t                 fast_osc_frequency,
	VL53L1_general_config_t *pgeneral,
	VL53L1_timing_config_t  *ptiming)
{
 8005ea4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ea8:	9d09      	ldr	r5, [sp, #36]	; 0x24
	uint32_t timeout_mclks      = 0;
	uint16_t timeout_encoded    = 0;

	LOG_FUNCTION_START("");

	if (fast_osc_frequency == 0) {
 8005eaa:	2b00      	cmp	r3, #0
 8005eac:	f000 80aa 	beq.w	8006004 <VL53L1_calc_timeout_register_values+0x160>
 8005eb0:	4681      	mov	r9, r0
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
	} else {
		/* Update Macro Period for Range A VCSEL Period */
		macro_period_us =
				VL53L1_calc_macro_period_us(
 8005eb2:	f895 a006 	ldrb.w	sl, [r5, #6]
	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8005eb6:	4618      	mov	r0, r3
 8005eb8:	460c      	mov	r4, r1
 8005eba:	461f      	mov	r7, r3
 8005ebc:	4616      	mov	r6, r2
 8005ebe:	f000 f915 	bl	80060ec <VL53L1_calc_pll_period_us>
 8005ec2:	4680      	mov	r8, r0
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8005ec4:	4650      	mov	r0, sl
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005ec6:	0324      	lsls	r4, r4, #12
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8005ec8:	f000 f916 	bl	80060f8 <VL53L1_decode_vcsel_period>
	macro_period_us =
 8005ecc:	eb08 02c8 	add.w	r2, r8, r8, lsl #3
 8005ed0:	0212      	lsls	r2, r2, #8
	macro_period_us = macro_period_us >> 6;
 8005ed2:	0992      	lsrs	r2, r2, #6
	macro_period_us = macro_period_us * (uint32_t)vcsel_period_pclks;
 8005ed4:	fb02 f200 	mul.w	r2, r2, r0
		/* clip as the phase cal timeout register is only 8-bits */
		if (timeout_mclks > 0xFF)
			timeout_mclks = 0xFF;

		pgeneral->phasecal_config__timeout_macrop =
				(uint8_t)timeout_mclks;
 8005ed8:	9808      	ldr	r0, [sp, #32]
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005eda:	09d1      	lsrs	r1, r2, #7
	macro_period_us = macro_period_us >> 6;
 8005edc:	0992      	lsrs	r2, r2, #6
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005ede:	eb01 3909 	add.w	r9, r1, r9, lsl #12
 8005ee2:	190b      	adds	r3, r1, r4
	timeout_mclks   =
 8005ee4:	fbb9 f9f2 	udiv	r9, r9, r2
 8005ee8:	fbb3 f3f2 	udiv	r3, r3, r2
				(uint8_t)timeout_mclks;
 8005eec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8005ef0:	bf28      	it	cs
 8005ef2:	f04f 09ff 	movcs.w	r9, #255	; 0xff
 8005ef6:	f880 9007 	strb.w	r9, [r0, #7]
	if (timeout_mclks > 0) {
 8005efa:	bb7b      	cbnz	r3, 8005f5c <VL53L1_calc_timeout_register_values+0xb8>
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005efc:	0336      	lsls	r6, r6, #12
	if (timeout_mclks > 0) {
 8005efe:	4618      	mov	r0, r3
				mm_config_timeout_us,
				macro_period_us);

		ptiming->mm_config__timeout_macrop_a_hi =
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->mm_config__timeout_macrop_a_lo =
 8005f00:	706b      	strb	r3, [r5, #1]
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005f02:	4431      	add	r1, r6
		ptiming->mm_config__timeout_macrop_a_hi =
 8005f04:	7028      	strb	r0, [r5, #0]
	timeout_mclks   =
 8005f06:	fbb1 f1f2 	udiv	r1, r1, r2
	if (timeout_mclks > 0) {
 8005f0a:	2900      	cmp	r1, #0
 8005f0c:	d141      	bne.n	8005f92 <VL53L1_calc_timeout_register_values+0xee>
 8005f0e:	460b      	mov	r3, r1
		timeout_encoded =
			VL53L1_calc_encoded_timeout(
				range_config_timeout_us,
				macro_period_us);

		ptiming->range_config__timeout_macrop_a_hi =
 8005f10:	712b      	strb	r3, [r5, #4]
	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8005f12:	4638      	mov	r0, r7
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->range_config__timeout_macrop_a_lo =
 8005f14:	7169      	strb	r1, [r5, #5]
				(uint8_t) (timeout_encoded & 0x00FF);

		/* Update Macro Period for Range B VCSEL Period */
		macro_period_us =
				VL53L1_calc_macro_period_us(
 8005f16:	f895 8009 	ldrb.w	r8, [r5, #9]
	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8005f1a:	f000 f8e7 	bl	80060ec <VL53L1_calc_pll_period_us>
 8005f1e:	4607      	mov	r7, r0
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8005f20:	4640      	mov	r0, r8
	macro_period_us =
 8005f22:	eb07 07c7 	add.w	r7, r7, r7, lsl #3
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8005f26:	f000 f8e7 	bl	80060f8 <VL53L1_decode_vcsel_period>
	macro_period_us =
 8005f2a:	023f      	lsls	r7, r7, #8
	macro_period_us = macro_period_us >> 6;
 8005f2c:	09bf      	lsrs	r7, r7, #6
	macro_period_us = macro_period_us * (uint32_t)vcsel_period_pclks;
 8005f2e:	fb07 f000 	mul.w	r0, r7, r0
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005f32:	09c2      	lsrs	r2, r0, #7
	macro_period_us = macro_period_us >> 6;
 8005f34:	0980      	lsrs	r0, r0, #6
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005f36:	4414      	add	r4, r2
	timeout_mclks   =
 8005f38:	fbb4 f4f0 	udiv	r4, r4, r0
	if (timeout_mclks > 0) {
 8005f3c:	2c00      	cmp	r4, #0
 8005f3e:	d14e      	bne.n	8005fde <VL53L1_calc_timeout_register_values+0x13a>
 8005f40:	4623      	mov	r3, r4
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005f42:	4416      	add	r6, r2
		timeout_encoded =
				VL53L1_calc_encoded_timeout(
					mm_config_timeout_us,
					macro_period_us);

		ptiming->mm_config__timeout_macrop_b_hi =
 8005f44:	70ab      	strb	r3, [r5, #2]
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->mm_config__timeout_macrop_b_lo =
 8005f46:	70ec      	strb	r4, [r5, #3]
	timeout_mclks   =
 8005f48:	fbb6 f6f0 	udiv	r6, r6, r0
	if (timeout_mclks > 0) {
 8005f4c:	2e00      	cmp	r6, #0
 8005f4e:	d133      	bne.n	8005fb8 <VL53L1_calc_timeout_register_values+0x114>
 8005f50:	4633      	mov	r3, r6
	VL53L1_Error status = VL53L1_ERROR_NONE;
 8005f52:	2000      	movs	r0, #0
		/* Update Range Timing B timeout */
		timeout_encoded = VL53L1_calc_encoded_timeout(
							range_config_timeout_us,
							macro_period_us);

		ptiming->range_config__timeout_macrop_b_hi =
 8005f54:	71eb      	strb	r3, [r5, #7]
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->range_config__timeout_macrop_b_lo =
 8005f56:	722e      	strb	r6, [r5, #8]

	LOG_FUNCTION_END(0);

	return status;

}
 8005f58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		ls_byte = timeout_mclks - 1;
 8005f5c:	1e58      	subs	r0, r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005f5e:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 8005f62:	d00a      	beq.n	8005f7a <VL53L1_calc_timeout_register_values+0xd6>
	uint16_t ms_byte = 0;
 8005f64:	2300      	movs	r3, #0
			ls_byte = ls_byte >> 1;
 8005f66:	0840      	lsrs	r0, r0, #1
			ms_byte++;
 8005f68:	3301      	adds	r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005f6a:	f020 0cff 	bic.w	ip, r0, #255	; 0xff
			ms_byte++;
 8005f6e:	b29b      	uxth	r3, r3
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005f70:	f1bc 0f00 	cmp.w	ip, #0
 8005f74:	d1f7      	bne.n	8005f66 <VL53L1_calc_timeout_register_values+0xc2>
 8005f76:	021b      	lsls	r3, r3, #8
 8005f78:	b29b      	uxth	r3, r3
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005f7a:	0336      	lsls	r6, r6, #12
		encoded_timeout = (ms_byte << 8)
 8005f7c:	4403      	add	r3, r0
			((timeout_us << 12) + (macro_period_us>>1)) /
 8005f7e:	4431      	add	r1, r6
		encoded_timeout = (ms_byte << 8)
 8005f80:	b29b      	uxth	r3, r3
	timeout_mclks   =
 8005f82:	fbb1 f1f2 	udiv	r1, r1, r2
 8005f86:	0a18      	lsrs	r0, r3, #8
 8005f88:	b2db      	uxtb	r3, r3
		ptiming->mm_config__timeout_macrop_a_hi =
 8005f8a:	7028      	strb	r0, [r5, #0]
		ptiming->mm_config__timeout_macrop_a_lo =
 8005f8c:	706b      	strb	r3, [r5, #1]
	if (timeout_mclks > 0) {
 8005f8e:	2900      	cmp	r1, #0
 8005f90:	d0bd      	beq.n	8005f0e <VL53L1_calc_timeout_register_values+0x6a>
		ls_byte = timeout_mclks - 1;
 8005f92:	1e48      	subs	r0, r1, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005f94:	f030 01ff 	bics.w	r1, r0, #255	; 0xff
 8005f98:	d009      	beq.n	8005fae <VL53L1_calc_timeout_register_values+0x10a>
	uint16_t ms_byte = 0;
 8005f9a:	2100      	movs	r1, #0
			ls_byte = ls_byte >> 1;
 8005f9c:	0840      	lsrs	r0, r0, #1
			ms_byte++;
 8005f9e:	3101      	adds	r1, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005fa0:	f020 03ff 	bic.w	r3, r0, #255	; 0xff
			ms_byte++;
 8005fa4:	b289      	uxth	r1, r1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005fa6:	2b00      	cmp	r3, #0
 8005fa8:	d1f8      	bne.n	8005f9c <VL53L1_calc_timeout_register_values+0xf8>
 8005faa:	0209      	lsls	r1, r1, #8
 8005fac:	b289      	uxth	r1, r1
		encoded_timeout = (ms_byte << 8)
 8005fae:	4401      	add	r1, r0
 8005fb0:	b289      	uxth	r1, r1
 8005fb2:	0a0b      	lsrs	r3, r1, #8
 8005fb4:	b2c9      	uxtb	r1, r1
 8005fb6:	e7ab      	b.n	8005f10 <VL53L1_calc_timeout_register_values+0x6c>
		ls_byte = timeout_mclks - 1;
 8005fb8:	1e70      	subs	r0, r6, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005fba:	f030 06ff 	bics.w	r6, r0, #255	; 0xff
 8005fbe:	d009      	beq.n	8005fd4 <VL53L1_calc_timeout_register_values+0x130>
	uint16_t ms_byte = 0;
 8005fc0:	2300      	movs	r3, #0
			ls_byte = ls_byte >> 1;
 8005fc2:	0840      	lsrs	r0, r0, #1
			ms_byte++;
 8005fc4:	3301      	adds	r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005fc6:	f020 02ff 	bic.w	r2, r0, #255	; 0xff
			ms_byte++;
 8005fca:	b29b      	uxth	r3, r3
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005fcc:	2a00      	cmp	r2, #0
 8005fce:	d1f8      	bne.n	8005fc2 <VL53L1_calc_timeout_register_values+0x11e>
 8005fd0:	021e      	lsls	r6, r3, #8
 8005fd2:	b2b6      	uxth	r6, r6
		encoded_timeout = (ms_byte << 8)
 8005fd4:	4406      	add	r6, r0
 8005fd6:	b2b6      	uxth	r6, r6
 8005fd8:	0a33      	lsrs	r3, r6, #8
 8005fda:	b2f6      	uxtb	r6, r6
 8005fdc:	e7b9      	b.n	8005f52 <VL53L1_calc_timeout_register_values+0xae>
		ls_byte = timeout_mclks - 1;
 8005fde:	1e61      	subs	r1, r4, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005fe0:	f031 04ff 	bics.w	r4, r1, #255	; 0xff
 8005fe4:	d009      	beq.n	8005ffa <VL53L1_calc_timeout_register_values+0x156>
	uint16_t ms_byte = 0;
 8005fe6:	2300      	movs	r3, #0
			ls_byte = ls_byte >> 1;
 8005fe8:	0849      	lsrs	r1, r1, #1
			ms_byte++;
 8005fea:	3301      	adds	r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005fec:	f021 04ff 	bic.w	r4, r1, #255	; 0xff
			ms_byte++;
 8005ff0:	b29b      	uxth	r3, r3
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8005ff2:	2c00      	cmp	r4, #0
 8005ff4:	d1f8      	bne.n	8005fe8 <VL53L1_calc_timeout_register_values+0x144>
 8005ff6:	021c      	lsls	r4, r3, #8
 8005ff8:	b2a4      	uxth	r4, r4
		encoded_timeout = (ms_byte << 8)
 8005ffa:	440c      	add	r4, r1
 8005ffc:	b2a4      	uxth	r4, r4
 8005ffe:	0a23      	lsrs	r3, r4, #8
 8006000:	b2e4      	uxtb	r4, r4
 8006002:	e79e      	b.n	8005f42 <VL53L1_calc_timeout_register_values+0x9e>
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8006004:	f06f 000e 	mvn.w	r0, #14
 8006008:	e7a6      	b.n	8005f58 <VL53L1_calc_timeout_register_values+0xb4>
 800600a:	bf00      	nop

0800600c <VL53L1_encode_row_col>:
{
	/**
	 *  Encodes the input array(row,col) location as SPAD number.
	 */

	if (row > 7) {
 800600c:	2807      	cmp	r0, #7
 800600e:	d806      	bhi.n	800601e <VL53L1_encode_row_col+0x12>
		*pspad_number = 128 + (col << 3) + (15-row);
	} else {
		*pspad_number = ((15-col) << 3) + row;
 8006010:	f1c1 010f 	rsb	r1, r1, #15
 8006014:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 8006018:	b2c0      	uxtb	r0, r0
 800601a:	7010      	strb	r0, [r2, #0]
	}
}
 800601c:	4770      	bx	lr
		*pspad_number = 128 + (col << 3) + (15-row);
 800601e:	ebc0 00c1 	rsb	r0, r0, r1, lsl #3
 8006022:	3871      	subs	r0, #113	; 0x71
 8006024:	b2c0      	uxtb	r0, r0
 8006026:	7010      	strb	r0, [r2, #0]
}
 8006028:	4770      	bx	lr
 800602a:	bf00      	nop

0800602c <VL53L1_decode_zone_size>:
	 *
	 * MS Nibble = height
	 * LS Nibble = width
	 */

	*pheight = encoded_xy_size >> 4;
 800602c:	0903      	lsrs	r3, r0, #4
	*pwidth  = encoded_xy_size & 0x0F;
 800602e:	f000 000f 	and.w	r0, r0, #15
	*pheight = encoded_xy_size >> 4;
 8006032:	7013      	strb	r3, [r2, #0]
	*pwidth  = encoded_xy_size & 0x0F;
 8006034:	7008      	strb	r0, [r1, #0]

}
 8006036:	4770      	bx	lr

08006038 <VL53L1_encode_zone_size>:
	 *
	 * MS Nibble = height
	 * LS Nibble = width
	 */

	*pencoded_xy_size = (height << 4) + width;
 8006038:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 800603c:	7011      	strb	r1, [r2, #0]

}
 800603e:	4770      	bx	lr

08006040 <VL53L1_low_power_auto_data_init>:

	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	pdev->low_power_auto_data.vhv_loop_bound =
 8006040:	2200      	movs	r2, #0
{
 8006042:	4603      	mov	r3, r0
	pdev->low_power_auto_data.vhv_loop_bound =
 8006044:	2103      	movs	r1, #3
 8006046:	f8a0 22e8 	strh.w	r2, [r0, #744]	; 0x2e8
 800604a:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
	pdev->low_power_auto_data.dss__required_spads = 0;

	LOG_FUNCTION_END(status);

	return status;
}
 800604e:	4610      	mov	r0, r2
	pdev->low_power_auto_data.saved_vhv_timeout = 0;
 8006050:	f883 22ea 	strb.w	r2, [r3, #746]	; 0x2ea
	pdev->low_power_auto_data.dss__total_rate_per_spad_mcps = 0;
 8006054:	f8c3 22ec 	str.w	r2, [r3, #748]	; 0x2ec
	pdev->low_power_auto_data.dss__required_spads = 0;
 8006058:	f8a3 22f0 	strh.w	r2, [r3, #752]	; 0x2f0
}
 800605c:	4770      	bx	lr
 800605e:	bf00      	nop

08006060 <VL53L1_low_power_auto_data_stop_range>:

VL53L1_Error VL53L1_low_power_auto_data_stop_range(
	VL53L1_DEV                          Dev
	)
{
 8006060:	4603      	mov	r3, r0
	/* doing this ensures stop_range followed by a get_device_results does
	 * not mess up the counters */

	pdev->low_power_auto_data.low_power_auto_range_count = 0xFF;

	pdev->low_power_auto_data.first_run_phasecal_result = 0;
 8006062:	2200      	movs	r2, #0
	pdev->low_power_auto_data.low_power_auto_range_count = 0xFF;
 8006064:	20ff      	movs	r0, #255	; 0xff
	pdev->low_power_auto_data.dss__total_rate_per_spad_mcps = 0;
	pdev->low_power_auto_data.dss__required_spads = 0;

	/* restore vhv configs */
	if (pdev->low_power_auto_data.saved_vhv_init != 0)
 8006066:	f893 12e8 	ldrb.w	r1, [r3, #744]	; 0x2e8
	pdev->low_power_auto_data.low_power_auto_range_count = 0xFF;
 800606a:	f883 02e6 	strb.w	r0, [r3, #742]	; 0x2e6
	pdev->low_power_auto_data.first_run_phasecal_result = 0;
 800606e:	f883 22ea 	strb.w	r2, [r3, #746]	; 0x2ea
	pdev->low_power_auto_data.dss__total_rate_per_spad_mcps = 0;
 8006072:	f8c3 22ec 	str.w	r2, [r3, #748]	; 0x2ec
	pdev->low_power_auto_data.dss__required_spads = 0;
 8006076:	f8a3 22f0 	strh.w	r2, [r3, #752]	; 0x2f0
	if (pdev->low_power_auto_data.saved_vhv_init != 0)
 800607a:	b109      	cbz	r1, 8006080 <VL53L1_low_power_auto_data_stop_range+0x20>
		pdev->stat_nvm.vhv_config__init =
 800607c:	f883 1163 	strb.w	r1, [r3, #355]	; 0x163
			pdev->low_power_auto_data.saved_vhv_init;
	if (pdev->low_power_auto_data.saved_vhv_timeout != 0)
 8006080:	f893 22e9 	ldrb.w	r2, [r3, #745]	; 0x2e9
 8006084:	b10a      	cbz	r2, 800608a <VL53L1_low_power_auto_data_stop_range+0x2a>
		pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound =
 8006086:	f883 2160 	strb.w	r2, [r3, #352]	; 0x160
			pdev->low_power_auto_data.saved_vhv_timeout;

	/* remove phasecal override */
	pdev->gen_cfg.phasecal_config__override = 0x00;
 800608a:	2000      	movs	r0, #0
 800608c:	f883 018d 	strb.w	r0, [r3, #397]	; 0x18d

	LOG_FUNCTION_END(status);

	return status;
}
 8006090:	4770      	bx	lr
 8006092:	bf00      	nop

08006094 <VL53L1_config_low_power_auto_mode>:
VL53L1_Error VL53L1_config_low_power_auto_mode(
	VL53L1_general_config_t   *pgeneral,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_low_power_auto_data_t *plpadata
	)
{
 8006094:	b410      	push	{r4}

	/* set low power auto mode */
	plpadata->is_low_power_auto_mode = 1;

	/* set low power range count to 0 */
	plpadata->low_power_auto_range_count = 0;
 8006096:	2000      	movs	r0, #0
	plpadata->is_low_power_auto_mode = 1;
 8006098:	2401      	movs	r4, #1

	/* Turn off MM1/MM2 and DSS2 */
	pdynamic->system__sequence_config = \
 800609a:	239b      	movs	r3, #155	; 0x9b
	plpadata->is_low_power_auto_mode = 1;
 800609c:	7054      	strb	r4, [r2, #1]
	plpadata->low_power_auto_range_count = 0;
 800609e:	7090      	strb	r0, [r2, #2]
	pdynamic->system__sequence_config = \
 80060a0:	744b      	strb	r3, [r1, #17]
			VL53L1_SEQUENCE_RANGE_EN;

	LOG_FUNCTION_END(status);

	return status;
}
 80060a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80060a6:	4770      	bx	lr

080060a8 <VL53L1_low_power_auto_setup_manual_calibration>:

VL53L1_Error VL53L1_low_power_auto_setup_manual_calibration(
	VL53L1_DEV        Dev)
{
 80060a8:	4603      	mov	r3, r0
		pdev->low_power_auto_data.first_run_phasecal_result;

	LOG_FUNCTION_END(status);

	return status;
}
 80060aa:	2000      	movs	r0, #0
{
 80060ac:	b470      	push	{r4, r5, r6}
		pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound;
 80060ae:	f893 4160 	ldrb.w	r4, [r3, #352]	; 0x160
	pdev->gen_cfg.phasecal_config__override = 0x01;
 80060b2:	2501      	movs	r5, #1
		pdev->stat_nvm.vhv_config__init;
 80060b4:	f893 2163 	ldrb.w	r2, [r3, #355]	; 0x163
		(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 80060b8:	f004 0103 	and.w	r1, r4, #3
		(pdev->low_power_auto_data.vhv_loop_bound << 2);
 80060bc:	f893 62e4 	ldrb.w	r6, [r3, #740]	; 0x2e4
	pdev->low_power_auto_data.saved_vhv_init =
 80060c0:	f883 22e8 	strb.w	r2, [r3, #744]	; 0x2e8
	pdev->stat_nvm.vhv_config__init &= 0x7F;
 80060c4:	f002 027f 	and.w	r2, r2, #127	; 0x7f
		(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 80060c8:	eb01 0186 	add.w	r1, r1, r6, lsl #2
	pdev->low_power_auto_data.saved_vhv_timeout =
 80060cc:	f883 42e9 	strb.w	r4, [r3, #745]	; 0x2e9
		pdev->dbg_results.phasecal_result__vcsel_start;
 80060d0:	f893 42ae 	ldrb.w	r4, [r3, #686]	; 0x2ae
	pdev->stat_nvm.vhv_config__init &= 0x7F;
 80060d4:	f883 2163 	strb.w	r2, [r3, #355]	; 0x163
	pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound =
 80060d8:	f883 1160 	strb.w	r1, [r3, #352]	; 0x160
	pdev->gen_cfg.phasecal_config__override = 0x01;
 80060dc:	f883 518d 	strb.w	r5, [r3, #397]	; 0x18d
	pdev->low_power_auto_data.first_run_phasecal_result =
 80060e0:	f883 42ea 	strb.w	r4, [r3, #746]	; 0x2ea
	pdev->gen_cfg.cal_config__vcsel_start =
 80060e4:	f883 4187 	strb.w	r4, [r3, #391]	; 0x187
}
 80060e8:	bc70      	pop	{r4, r5, r6}
 80060ea:	4770      	bx	lr

080060ec <VL53L1_calc_pll_period_us>:

	uint32_t  pll_period_us        = 0;

	LOG_FUNCTION_START("");

	pll_period_us = (0x01 << 30) / fast_osc_frequency;
 80060ec:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
#endif

	LOG_FUNCTION_END(0);

	return pll_period_us;
}
 80060f0:	fb93 f0f0 	sdiv	r0, r3, r0
 80060f4:	4770      	bx	lr
 80060f6:	bf00      	nop

080060f8 <VL53L1_decode_vcsel_period>:
	 * the real period in PLL clocks
	 */

	uint8_t vcsel_period_pclks = 0;

	vcsel_period_pclks = (vcsel_period_reg + 1) << 1;
 80060f8:	3001      	adds	r0, #1
 80060fa:	0040      	lsls	r0, r0, #1

	return vcsel_period_pclks;
}
 80060fc:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
 8006100:	4770      	bx	lr
 8006102:	bf00      	nop

08006104 <VL53L1_decode_row_col>:
	/**
	 *  Decodes the array (row,col) location from
	 *  the input SPAD number
	 */

	if (spad_number > 127) {
 8006104:	0603      	lsls	r3, r0, #24
 8006106:	d407      	bmi.n	8006118 <VL53L1_decode_row_col+0x14>
		*prow = 8 + ((255-spad_number) & 0x07);
		*pcol = (spad_number-128) >> 3;
	} else {
		*prow = spad_number & 0x07;
		*pcol = (127-spad_number) >> 3;
 8006108:	f1c0 037f 	rsb	r3, r0, #127	; 0x7f
		*prow = spad_number & 0x07;
 800610c:	f000 0007 	and.w	r0, r0, #7
		*pcol = (127-spad_number) >> 3;
 8006110:	10db      	asrs	r3, r3, #3
		*prow = spad_number & 0x07;
 8006112:	7008      	strb	r0, [r1, #0]
		*pcol = (127-spad_number) >> 3;
 8006114:	7013      	strb	r3, [r2, #0]
	}
}
 8006116:	4770      	bx	lr
		*prow = 8 + ((255-spad_number) & 0x07);
 8006118:	43c3      	mvns	r3, r0
		*pcol = (spad_number-128) >> 3;
 800611a:	3880      	subs	r0, #128	; 0x80
		*prow = 8 + ((255-spad_number) & 0x07);
 800611c:	f003 0307 	and.w	r3, r3, #7
		*pcol = (spad_number-128) >> 3;
 8006120:	10c0      	asrs	r0, r0, #3
		*prow = 8 + ((255-spad_number) & 0x07);
 8006122:	3308      	adds	r3, #8
 8006124:	700b      	strb	r3, [r1, #0]
		*pcol = (spad_number-128) >> 3;
 8006126:	7010      	strb	r0, [r2, #0]
 8006128:	4770      	bx	lr
 800612a:	bf00      	nop

0800612c <VL53L1_i2c_encode_static_nvm_managed>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES > buf_size)
 800612c:	290a      	cmp	r1, #10
 800612e:	d927      	bls.n	8006180 <VL53L1_i2c_encode_static_nvm_managed+0x54>
		pdata->ana_config__vhv_ref_sel_vquench & 0x7F;
	*(pbuffer +   3) =
		pdata->ana_config__reg_avdd1v2_sel & 0x3;
	*(pbuffer +   4) =
		pdata->ana_config__fast_osc__trim & 0x7F;
	VL53L1_i2c_encode_uint16_t(
 8006130:	2102      	movs	r1, #2
{
 8006132:	b538      	push	{r3, r4, r5, lr}
		pdata->i2c_slave__device_address & 0x7F;
 8006134:	7803      	ldrb	r3, [r0, #0]
 8006136:	4614      	mov	r4, r2
 8006138:	4605      	mov	r5, r0
	VL53L1_i2c_encode_uint16_t(
 800613a:	3205      	adds	r2, #5
		pdata->i2c_slave__device_address & 0x7F;
 800613c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   0) =
 8006140:	7023      	strb	r3, [r4, #0]
		pdata->ana_config__vhv_ref_sel_vddpix & 0xF;
 8006142:	7843      	ldrb	r3, [r0, #1]
 8006144:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   1) =
 8006148:	7063      	strb	r3, [r4, #1]
		pdata->ana_config__vhv_ref_sel_vquench & 0x7F;
 800614a:	7883      	ldrb	r3, [r0, #2]
 800614c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   2) =
 8006150:	70a3      	strb	r3, [r4, #2]
		pdata->ana_config__reg_avdd1v2_sel & 0x3;
 8006152:	78c3      	ldrb	r3, [r0, #3]
 8006154:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +   3) =
 8006158:	70e3      	strb	r3, [r4, #3]
		pdata->ana_config__fast_osc__trim & 0x7F;
 800615a:	7903      	ldrb	r3, [r0, #4]
 800615c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   4) =
 8006160:	7123      	strb	r3, [r4, #4]
	VL53L1_i2c_encode_uint16_t(
 8006162:	88c0      	ldrh	r0, [r0, #6]
 8006164:	f7ff fdc4 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->osc_measured__fast_osc__frequency,
		2,
		pbuffer +   5);
	*(pbuffer +   7) =
		pdata->vhv_config__timeout_macrop_loop_bound;
 8006168:	7a2b      	ldrb	r3, [r5, #8]
	*(pbuffer +  10) =
		pdata->vhv_config__init;
	LOG_FUNCTION_END(status);


	return status;
 800616a:	2000      	movs	r0, #0
	*(pbuffer +   7) =
 800616c:	71e3      	strb	r3, [r4, #7]
		pdata->vhv_config__count_thresh;
 800616e:	7a6b      	ldrb	r3, [r5, #9]
	*(pbuffer +   8) =
 8006170:	7223      	strb	r3, [r4, #8]
		pdata->vhv_config__offset & 0x3F;
 8006172:	7aab      	ldrb	r3, [r5, #10]
 8006174:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   9) =
 8006178:	7263      	strb	r3, [r4, #9]
		pdata->vhv_config__init;
 800617a:	7aeb      	ldrb	r3, [r5, #11]
	*(pbuffer +  10) =
 800617c:	72a3      	strb	r3, [r4, #10]
}
 800617e:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8006180:	f06f 0009 	mvn.w	r0, #9
}
 8006184:	4770      	bx	lr
 8006186:	bf00      	nop

08006188 <VL53L1_get_static_nvm_managed>:


VL53L1_Error VL53L1_get_static_nvm_managed(
	VL53L1_DEV                 Dev,
	VL53L1_static_nvm_managed_t  *pdata)
{
 8006188:	b5f0      	push	{r4, r5, r6, r7, lr}
 800618a:	b085      	sub	sp, #20
 800618c:	460c      	mov	r4, r1
	uint8_t comms_buffer[VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES];

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
		status = VL53L1_ReadMulti(
 800618e:	230b      	movs	r3, #11
 8006190:	2101      	movs	r1, #1
 8006192:	aa01      	add	r2, sp, #4
 8006194:	f000 fcca 	bl	8006b2c <VL53L1_ReadMulti>
			Dev,
			VL53L1_I2C_SLAVE__DEVICE_ADDRESS,
			comms_buffer,
			VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES);

	if (status == VL53L1_ERROR_NONE)
 8006198:	4605      	mov	r5, r0
 800619a:	bb60      	cbnz	r0, 80061f6 <VL53L1_get_static_nvm_managed+0x6e>
		(*(pbuffer +   0)) & 0x7F;
 800619c:	f89d 3004 	ldrb.w	r3, [sp, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   5));
 80061a0:	f10d 0109 	add.w	r1, sp, #9
		(*(pbuffer +   1)) & 0xF;
 80061a4:	f89d 7005 	ldrb.w	r7, [sp, #5]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   5));
 80061a8:	2002      	movs	r0, #2
		(*(pbuffer +   0)) & 0x7F;
 80061aa:	f003 037f 	and.w	r3, r3, #127	; 0x7f
		(*(pbuffer +   2)) & 0x7F;
 80061ae:	f89d 6006 	ldrb.w	r6, [sp, #6]
		(*(pbuffer +   3)) & 0x3;
 80061b2:	f89d 2007 	ldrb.w	r2, [sp, #7]
		(*(pbuffer +   1)) & 0xF;
 80061b6:	f007 070f 	and.w	r7, r7, #15
	pdata->i2c_slave__device_address =
 80061ba:	7023      	strb	r3, [r4, #0]
		(*(pbuffer +   2)) & 0x7F;
 80061bc:	f006 067f 	and.w	r6, r6, #127	; 0x7f
		(*(pbuffer +   4)) & 0x7F;
 80061c0:	f89d 3008 	ldrb.w	r3, [sp, #8]
		(*(pbuffer +   3)) & 0x3;
 80061c4:	f002 0203 	and.w	r2, r2, #3
	pdata->ana_config__vhv_ref_sel_vquench =
 80061c8:	70a6      	strb	r6, [r4, #2]
		(*(pbuffer +   4)) & 0x7F;
 80061ca:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	pdata->ana_config__reg_avdd1v2_sel =
 80061ce:	70e2      	strb	r2, [r4, #3]
	pdata->ana_config__vhv_ref_sel_vddpix =
 80061d0:	7067      	strb	r7, [r4, #1]
	pdata->ana_config__fast_osc__trim =
 80061d2:	7123      	strb	r3, [r4, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   5));
 80061d4:	f7ff fd9e 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
		(*(pbuffer +   9)) & 0x3F;
 80061d8:	f89d 300d 	ldrb.w	r3, [sp, #13]
	pdata->vhv_config__timeout_macrop_loop_bound =
 80061dc:	f89d 600b 	ldrb.w	r6, [sp, #11]
		(*(pbuffer +   9)) & 0x3F;
 80061e0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->vhv_config__count_thresh =
 80061e4:	f89d 100c 	ldrb.w	r1, [sp, #12]
	pdata->vhv_config__init =
 80061e8:	f89d 200e 	ldrb.w	r2, [sp, #14]
	pdata->osc_measured__fast_osc__frequency =
 80061ec:	80e0      	strh	r0, [r4, #6]
	pdata->vhv_config__offset =
 80061ee:	72a3      	strb	r3, [r4, #10]
	pdata->vhv_config__timeout_macrop_loop_bound =
 80061f0:	7226      	strb	r6, [r4, #8]
	pdata->vhv_config__count_thresh =
 80061f2:	7261      	strb	r1, [r4, #9]
	pdata->vhv_config__init =
 80061f4:	72e2      	strb	r2, [r4, #11]
			pdata);

	LOG_FUNCTION_END(status);

	return status;
}
 80061f6:	4628      	mov	r0, r5
 80061f8:	b005      	add	sp, #20
 80061fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080061fc <VL53L1_i2c_encode_customer_nvm_managed>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES > buf_size)
 80061fc:	2916      	cmp	r1, #22
 80061fe:	d94b      	bls.n	8006298 <VL53L1_i2c_encode_customer_nvm_managed+0x9c>
		pdata->global_config__ref_en_start_select;
	*(pbuffer +   7) =
		pdata->ref_spad_man__num_requested_ref_spads & 0x3F;
	*(pbuffer +   8) =
		pdata->ref_spad_man__ref_location & 0x3;
	VL53L1_i2c_encode_uint16_t(
 8006200:	2102      	movs	r1, #2
{
 8006202:	b538      	push	{r3, r4, r5, lr}
 8006204:	4615      	mov	r5, r2
		pdata->global_config__spad_enables_ref_0;
 8006206:	7803      	ldrb	r3, [r0, #0]
 8006208:	4604      	mov	r4, r0
	VL53L1_i2c_encode_uint16_t(
 800620a:	3209      	adds	r2, #9
	*(pbuffer +   0) =
 800620c:	702b      	strb	r3, [r5, #0]
		pdata->global_config__spad_enables_ref_1;
 800620e:	7843      	ldrb	r3, [r0, #1]
	*(pbuffer +   1) =
 8006210:	706b      	strb	r3, [r5, #1]
		pdata->global_config__spad_enables_ref_2;
 8006212:	7883      	ldrb	r3, [r0, #2]
	*(pbuffer +   2) =
 8006214:	70ab      	strb	r3, [r5, #2]
		pdata->global_config__spad_enables_ref_3;
 8006216:	78c3      	ldrb	r3, [r0, #3]
	*(pbuffer +   3) =
 8006218:	70eb      	strb	r3, [r5, #3]
		pdata->global_config__spad_enables_ref_4;
 800621a:	7903      	ldrb	r3, [r0, #4]
	*(pbuffer +   4) =
 800621c:	712b      	strb	r3, [r5, #4]
		pdata->global_config__spad_enables_ref_5 & 0xF;
 800621e:	7943      	ldrb	r3, [r0, #5]
 8006220:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   5) =
 8006224:	716b      	strb	r3, [r5, #5]
		pdata->global_config__ref_en_start_select;
 8006226:	7983      	ldrb	r3, [r0, #6]
	*(pbuffer +   6) =
 8006228:	71ab      	strb	r3, [r5, #6]
		pdata->ref_spad_man__num_requested_ref_spads & 0x3F;
 800622a:	79c3      	ldrb	r3, [r0, #7]
 800622c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   7) =
 8006230:	71eb      	strb	r3, [r5, #7]
		pdata->ref_spad_man__ref_location & 0x3;
 8006232:	7a03      	ldrb	r3, [r0, #8]
 8006234:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +   8) =
 8006238:	722b      	strb	r3, [r5, #8]
	VL53L1_i2c_encode_uint16_t(
 800623a:	8940      	ldrh	r0, [r0, #10]
 800623c:	f7ff fd58 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->algo__crosstalk_compensation_plane_offset_kcps,
		2,
		pbuffer +   9);
	VL53L1_i2c_encode_int16_t(
 8006240:	f105 020b 	add.w	r2, r5, #11
 8006244:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 8006248:	2102      	movs	r1, #2
 800624a:	f7ff fd71 	bl	8005d30 <VL53L1_i2c_encode_int16_t>
		pdata->algo__crosstalk_compensation_x_plane_gradient_kcps,
		2,
		pbuffer +  11);
	VL53L1_i2c_encode_int16_t(
 800624e:	f105 020d 	add.w	r2, r5, #13
 8006252:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8006256:	2102      	movs	r1, #2
 8006258:	f7ff fd6a 	bl	8005d30 <VL53L1_i2c_encode_int16_t>
		pdata->algo__crosstalk_compensation_y_plane_gradient_kcps,
		2,
		pbuffer +  13);
	VL53L1_i2c_encode_uint16_t(
 800625c:	f105 020f 	add.w	r2, r5, #15
 8006260:	8a20      	ldrh	r0, [r4, #16]
 8006262:	2102      	movs	r1, #2
 8006264:	f7ff fd44 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->ref_spad_char__total_rate_target_mcps,
		2,
		pbuffer +  15);
	VL53L1_i2c_encode_int16_t(
 8006268:	8a60      	ldrh	r0, [r4, #18]
 800626a:	f105 0211 	add.w	r2, r5, #17
 800626e:	2102      	movs	r1, #2
 8006270:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8006274:	f7ff fd5c 	bl	8005d30 <VL53L1_i2c_encode_int16_t>
		pdata->algo__part_to_part_range_offset_mm & 0x1FFF,
		2,
		pbuffer +  17);
	VL53L1_i2c_encode_int16_t(
 8006278:	f105 0213 	add.w	r2, r5, #19
 800627c:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8006280:	2102      	movs	r1, #2
 8006282:	f7ff fd55 	bl	8005d30 <VL53L1_i2c_encode_int16_t>
		pdata->mm_config__inner_offset_mm,
		2,
		pbuffer +  19);
	VL53L1_i2c_encode_int16_t(
 8006286:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 800628a:	f105 0215 	add.w	r2, r5, #21
 800628e:	2102      	movs	r1, #2
 8006290:	f7ff fd4e 	bl	8005d30 <VL53L1_i2c_encode_int16_t>
		2,
		pbuffer +  21);
	LOG_FUNCTION_END(status);


	return status;
 8006294:	2000      	movs	r0, #0
}
 8006296:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8006298:	f06f 0009 	mvn.w	r0, #9
}
 800629c:	4770      	bx	lr
 800629e:	bf00      	nop

080062a0 <VL53L1_get_customer_nvm_managed>:


VL53L1_Error VL53L1_get_customer_nvm_managed(
	VL53L1_DEV                 Dev,
	VL53L1_customer_nvm_managed_t  *pdata)
{
 80062a0:	b570      	push	{r4, r5, r6, lr}
 80062a2:	b086      	sub	sp, #24
 80062a4:	460c      	mov	r4, r1
	uint8_t comms_buffer[VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES];

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
		status = VL53L1_ReadMulti(
 80062a6:	2317      	movs	r3, #23
 80062a8:	210d      	movs	r1, #13
 80062aa:	466a      	mov	r2, sp
 80062ac:	f000 fc3e 	bl	8006b2c <VL53L1_ReadMulti>
			Dev,
			VL53L1_GLOBAL_CONFIG__SPAD_ENABLES_REF_0,
			comms_buffer,
			VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES);

	if (status == VL53L1_ERROR_NONE)
 80062b0:	4605      	mov	r5, r0
 80062b2:	2800      	cmp	r0, #0
 80062b4:	d142      	bne.n	800633c <VL53L1_get_customer_nvm_managed+0x9c>
		(*(pbuffer +   5)) & 0xF;
 80062b6:	f89d 6005 	ldrb.w	r6, [sp, #5]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   9));
 80062ba:	f10d 0109 	add.w	r1, sp, #9
		(*(pbuffer +   7)) & 0x3F;
 80062be:	f89d 2007 	ldrb.w	r2, [sp, #7]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   9));
 80062c2:	2002      	movs	r0, #2
		(*(pbuffer +   8)) & 0x3;
 80062c4:	f89d 3008 	ldrb.w	r3, [sp, #8]
		(*(pbuffer +   5)) & 0xF;
 80062c8:	f006 060f 	and.w	r6, r6, #15
		(*(pbuffer +   7)) & 0x3F;
 80062cc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
		(*(pbuffer +   8)) & 0x3;
 80062d0:	f003 0303 	and.w	r3, r3, #3
	pdata->global_config__spad_enables_ref_5 =
 80062d4:	7166      	strb	r6, [r4, #5]
	pdata->ref_spad_man__num_requested_ref_spads =
 80062d6:	71e2      	strb	r2, [r4, #7]
	pdata->global_config__spad_enables_ref_0 =
 80062d8:	9e00      	ldr	r6, [sp, #0]
	pdata->global_config__spad_enables_ref_4 =
 80062da:	f89d 2004 	ldrb.w	r2, [sp, #4]
	pdata->ref_spad_man__ref_location =
 80062de:	7223      	strb	r3, [r4, #8]
	pdata->global_config__ref_en_start_select =
 80062e0:	f89d 3006 	ldrb.w	r3, [sp, #6]
	pdata->global_config__spad_enables_ref_4 =
 80062e4:	7122      	strb	r2, [r4, #4]
	pdata->global_config__ref_en_start_select =
 80062e6:	71a3      	strb	r3, [r4, #6]
	pdata->global_config__spad_enables_ref_0 =
 80062e8:	6026      	str	r6, [r4, #0]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   9));
 80062ea:	f7ff fd13 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  11));
 80062ee:	f10d 010b 	add.w	r1, sp, #11
	pdata->algo__crosstalk_compensation_plane_offset_kcps =
 80062f2:	8160      	strh	r0, [r4, #10]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  11));
 80062f4:	2002      	movs	r0, #2
 80062f6:	f7ff fd2d 	bl	8005d54 <VL53L1_i2c_decode_int16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  13));
 80062fa:	f10d 010d 	add.w	r1, sp, #13
	pdata->algo__crosstalk_compensation_x_plane_gradient_kcps =
 80062fe:	81a0      	strh	r0, [r4, #12]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  13));
 8006300:	2002      	movs	r0, #2
 8006302:	f7ff fd27 	bl	8005d54 <VL53L1_i2c_decode_int16_t>
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  15));
 8006306:	f10d 010f 	add.w	r1, sp, #15
	pdata->algo__crosstalk_compensation_y_plane_gradient_kcps =
 800630a:	81e0      	strh	r0, [r4, #14]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  15));
 800630c:	2002      	movs	r0, #2
 800630e:	f7ff fd01 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  17)) & 0x1FFF;
 8006312:	f10d 0111 	add.w	r1, sp, #17
	pdata->ref_spad_char__total_rate_target_mcps =
 8006316:	8220      	strh	r0, [r4, #16]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  17)) & 0x1FFF;
 8006318:	2002      	movs	r0, #2
 800631a:	f7ff fd1b 	bl	8005d54 <VL53L1_i2c_decode_int16_t>
 800631e:	f3c0 030c 	ubfx	r3, r0, #0, #13
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  19));
 8006322:	f10d 0113 	add.w	r1, sp, #19
 8006326:	2002      	movs	r0, #2
	pdata->algo__part_to_part_range_offset_mm =
 8006328:	8263      	strh	r3, [r4, #18]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  19));
 800632a:	f7ff fd13 	bl	8005d54 <VL53L1_i2c_decode_int16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  21));
 800632e:	f10d 0115 	add.w	r1, sp, #21
	pdata->mm_config__inner_offset_mm =
 8006332:	82a0      	strh	r0, [r4, #20]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  21));
 8006334:	2002      	movs	r0, #2
 8006336:	f7ff fd0d 	bl	8005d54 <VL53L1_i2c_decode_int16_t>
	pdata->mm_config__outer_offset_mm =
 800633a:	82e0      	strh	r0, [r4, #22]
			pdata);

	LOG_FUNCTION_END(status);

	return status;
}
 800633c:	4628      	mov	r0, r5
 800633e:	b006      	add	sp, #24
 8006340:	bd70      	pop	{r4, r5, r6, pc}
 8006342:	bf00      	nop

08006344 <VL53L1_i2c_encode_static_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_STATIC_CONFIG_I2C_SIZE_BYTES > buf_size)
 8006344:	291f      	cmp	r1, #31
 8006346:	d968      	bls.n	800641a <VL53L1_i2c_encode_static_config+0xd6>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	VL53L1_i2c_encode_uint16_t(
 8006348:	2102      	movs	r1, #2
{
 800634a:	b538      	push	{r3, r4, r5, lr}
 800634c:	4604      	mov	r4, r0
	VL53L1_i2c_encode_uint16_t(
 800634e:	8800      	ldrh	r0, [r0, #0]
 8006350:	4615      	mov	r5, r2
 8006352:	f7ff fccd 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->dss_config__target_total_rate_mcps,
		2,
		pbuffer +   0);
	*(pbuffer +   2) =
		pdata->debug__ctrl & 0x1;
 8006356:	78a3      	ldrb	r3, [r4, #2]
		pdata->algo__crosstalk_compensation_valid_height_mm;
	*(pbuffer +  22) =
		pdata->spare_host_config__static_config_spare_0;
	*(pbuffer +  23) =
		pdata->spare_host_config__static_config_spare_1;
	VL53L1_i2c_encode_uint16_t(
 8006358:	2102      	movs	r1, #2
 800635a:	f105 0218 	add.w	r2, r5, #24
		pdata->debug__ctrl & 0x1;
 800635e:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   2) =
 8006362:	70ab      	strb	r3, [r5, #2]
		pdata->test_mode__ctrl & 0xF;
 8006364:	78e3      	ldrb	r3, [r4, #3]
 8006366:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   3) =
 800636a:	70eb      	strb	r3, [r5, #3]
		pdata->clk_gating__ctrl & 0xF;
 800636c:	7923      	ldrb	r3, [r4, #4]
 800636e:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   4) =
 8006372:	712b      	strb	r3, [r5, #4]
		pdata->nvm_bist__ctrl & 0x1F;
 8006374:	7963      	ldrb	r3, [r4, #5]
 8006376:	f003 031f 	and.w	r3, r3, #31
	*(pbuffer +   5) =
 800637a:	716b      	strb	r3, [r5, #5]
		pdata->nvm_bist__num_nvm_words & 0x7F;
 800637c:	79a3      	ldrb	r3, [r4, #6]
 800637e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   6) =
 8006382:	71ab      	strb	r3, [r5, #6]
		pdata->nvm_bist__start_address & 0x7F;
 8006384:	79e3      	ldrb	r3, [r4, #7]
 8006386:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   7) =
 800638a:	71eb      	strb	r3, [r5, #7]
		pdata->host_if__status & 0x1;
 800638c:	7a23      	ldrb	r3, [r4, #8]
 800638e:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   8) =
 8006392:	722b      	strb	r3, [r5, #8]
		pdata->pad_i2c_hv__config;
 8006394:	7a63      	ldrb	r3, [r4, #9]
	*(pbuffer +   9) =
 8006396:	726b      	strb	r3, [r5, #9]
		pdata->pad_i2c_hv__extsup_config & 0x1;
 8006398:	7aa3      	ldrb	r3, [r4, #10]
 800639a:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +  10) =
 800639e:	72ab      	strb	r3, [r5, #10]
		pdata->gpio_hv_pad__ctrl & 0x3;
 80063a0:	7ae3      	ldrb	r3, [r4, #11]
 80063a2:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  11) =
 80063a6:	72eb      	strb	r3, [r5, #11]
		pdata->gpio_hv_mux__ctrl & 0x1F;
 80063a8:	7b23      	ldrb	r3, [r4, #12]
 80063aa:	f003 031f 	and.w	r3, r3, #31
	*(pbuffer +  12) =
 80063ae:	732b      	strb	r3, [r5, #12]
		pdata->gpio__tio_hv_status & 0x3;
 80063b0:	7b63      	ldrb	r3, [r4, #13]
 80063b2:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  13) =
 80063b6:	736b      	strb	r3, [r5, #13]
		pdata->gpio__fio_hv_status & 0x3;
 80063b8:	7ba3      	ldrb	r3, [r4, #14]
 80063ba:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  14) =
 80063be:	73ab      	strb	r3, [r5, #14]
		pdata->ana_config__spad_sel_pswidth & 0x7;
 80063c0:	7be3      	ldrb	r3, [r4, #15]
 80063c2:	f003 0307 	and.w	r3, r3, #7
	*(pbuffer +  15) =
 80063c6:	73eb      	strb	r3, [r5, #15]
		pdata->ana_config__vcsel_pulse_width_offset & 0x1F;
 80063c8:	7c23      	ldrb	r3, [r4, #16]
 80063ca:	f003 031f 	and.w	r3, r3, #31
	*(pbuffer +  16) =
 80063ce:	742b      	strb	r3, [r5, #16]
		pdata->ana_config__fast_osc__config_ctrl & 0x1;
 80063d0:	7c63      	ldrb	r3, [r4, #17]
 80063d2:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +  17) =
 80063d6:	746b      	strb	r3, [r5, #17]
		pdata->sigma_estimator__effective_pulse_width_ns;
 80063d8:	7ca3      	ldrb	r3, [r4, #18]
	*(pbuffer +  18) =
 80063da:	74ab      	strb	r3, [r5, #18]
		pdata->sigma_estimator__effective_ambient_width_ns;
 80063dc:	7ce3      	ldrb	r3, [r4, #19]
	*(pbuffer +  19) =
 80063de:	74eb      	strb	r3, [r5, #19]
		pdata->sigma_estimator__sigma_ref_mm;
 80063e0:	7d23      	ldrb	r3, [r4, #20]
	*(pbuffer +  20) =
 80063e2:	752b      	strb	r3, [r5, #20]
		pdata->algo__crosstalk_compensation_valid_height_mm;
 80063e4:	7d63      	ldrb	r3, [r4, #21]
	*(pbuffer +  21) =
 80063e6:	756b      	strb	r3, [r5, #21]
		pdata->spare_host_config__static_config_spare_0;
 80063e8:	7da3      	ldrb	r3, [r4, #22]
	*(pbuffer +  22) =
 80063ea:	75ab      	strb	r3, [r5, #22]
		pdata->spare_host_config__static_config_spare_1;
 80063ec:	7de3      	ldrb	r3, [r4, #23]
	*(pbuffer +  23) =
 80063ee:	75eb      	strb	r3, [r5, #23]
	VL53L1_i2c_encode_uint16_t(
 80063f0:	8b20      	ldrh	r0, [r4, #24]
 80063f2:	f7ff fc7d 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->algo__range_ignore_threshold_mcps,
		2,
		pbuffer +  24);
	*(pbuffer +  26) =
		pdata->algo__range_ignore_valid_height_mm;
 80063f6:	7ea3      	ldrb	r3, [r4, #26]
	*(pbuffer +  31) =
		pdata->sd_config__reset_stages_lsb;
	LOG_FUNCTION_END(status);


	return status;
 80063f8:	2000      	movs	r0, #0
	*(pbuffer +  26) =
 80063fa:	76ab      	strb	r3, [r5, #26]
		pdata->algo__range_min_clip;
 80063fc:	7ee3      	ldrb	r3, [r4, #27]
	*(pbuffer +  27) =
 80063fe:	76eb      	strb	r3, [r5, #27]
		pdata->algo__consistency_check__tolerance & 0xF;
 8006400:	7f23      	ldrb	r3, [r4, #28]
 8006402:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +  28) =
 8006406:	772b      	strb	r3, [r5, #28]
		pdata->spare_host_config__static_config_spare_2;
 8006408:	7f63      	ldrb	r3, [r4, #29]
	*(pbuffer +  29) =
 800640a:	776b      	strb	r3, [r5, #29]
		pdata->sd_config__reset_stages_msb & 0xF;
 800640c:	7fa3      	ldrb	r3, [r4, #30]
 800640e:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +  30) =
 8006412:	77ab      	strb	r3, [r5, #30]
		pdata->sd_config__reset_stages_lsb;
 8006414:	7fe3      	ldrb	r3, [r4, #31]
	*(pbuffer +  31) =
 8006416:	77eb      	strb	r3, [r5, #31]
}
 8006418:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 800641a:	f06f 0009 	mvn.w	r0, #9
}
 800641e:	4770      	bx	lr

08006420 <VL53L1_i2c_encode_general_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_GENERAL_CONFIG_I2C_SIZE_BYTES > buf_size)
 8006420:	2915      	cmp	r1, #21
 8006422:	d93f      	bls.n	80064a4 <VL53L1_i2c_encode_general_config+0x84>
		pdata->global_config__stream_divider;
	*(pbuffer +   2) =
		pdata->system__interrupt_config_gpio;
	*(pbuffer +   3) =
		pdata->cal_config__vcsel_start & 0x7F;
	VL53L1_i2c_encode_uint16_t(
 8006424:	2102      	movs	r1, #2
{
 8006426:	b538      	push	{r3, r4, r5, lr}
 8006428:	4614      	mov	r4, r2
		pdata->gph_config__stream_count_update_value;
 800642a:	7803      	ldrb	r3, [r0, #0]
 800642c:	4605      	mov	r5, r0
	VL53L1_i2c_encode_uint16_t(
 800642e:	3204      	adds	r2, #4
	*(pbuffer +   0) =
 8006430:	7023      	strb	r3, [r4, #0]
		pdata->global_config__stream_divider;
 8006432:	7843      	ldrb	r3, [r0, #1]
	*(pbuffer +   1) =
 8006434:	7063      	strb	r3, [r4, #1]
		pdata->system__interrupt_config_gpio;
 8006436:	7883      	ldrb	r3, [r0, #2]
	*(pbuffer +   2) =
 8006438:	70a3      	strb	r3, [r4, #2]
		pdata->cal_config__vcsel_start & 0x7F;
 800643a:	78c3      	ldrb	r3, [r0, #3]
 800643c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   3) =
 8006440:	70e3      	strb	r3, [r4, #3]
	VL53L1_i2c_encode_uint16_t(
 8006442:	8880      	ldrh	r0, [r0, #4]
 8006444:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8006448:	f7ff fc52 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->cal_config__repeat_rate & 0xFFF,
		2,
		pbuffer +   4);
	*(pbuffer +   6) =
		pdata->global_config__vcsel_width & 0x7F;
 800644c:	79ab      	ldrb	r3, [r5, #6]
		pdata->phasecal_config__target;
	*(pbuffer +   9) =
		pdata->phasecal_config__override & 0x1;
	*(pbuffer +  11) =
		pdata->dss_config__roi_mode_control & 0x7;
	VL53L1_i2c_encode_uint16_t(
 800644e:	f104 020c 	add.w	r2, r4, #12
 8006452:	2102      	movs	r1, #2
		pdata->global_config__vcsel_width & 0x7F;
 8006454:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   6) =
 8006458:	71a3      	strb	r3, [r4, #6]
		pdata->phasecal_config__timeout_macrop;
 800645a:	79eb      	ldrb	r3, [r5, #7]
	*(pbuffer +   7) =
 800645c:	71e3      	strb	r3, [r4, #7]
		pdata->phasecal_config__target;
 800645e:	7a2b      	ldrb	r3, [r5, #8]
	*(pbuffer +   8) =
 8006460:	7223      	strb	r3, [r4, #8]
		pdata->phasecal_config__override & 0x1;
 8006462:	7a6b      	ldrb	r3, [r5, #9]
 8006464:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   9) =
 8006468:	7263      	strb	r3, [r4, #9]
		pdata->dss_config__roi_mode_control & 0x7;
 800646a:	7aab      	ldrb	r3, [r5, #10]
 800646c:	f003 0307 	and.w	r3, r3, #7
	*(pbuffer +  11) =
 8006470:	72e3      	strb	r3, [r4, #11]
	VL53L1_i2c_encode_uint16_t(
 8006472:	89a8      	ldrh	r0, [r5, #12]
 8006474:	f7ff fc3c 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_rate_high,
		2,
		pbuffer +  12);
	VL53L1_i2c_encode_uint16_t(
 8006478:	f104 020e 	add.w	r2, r4, #14
 800647c:	89e8      	ldrh	r0, [r5, #14]
 800647e:	2102      	movs	r1, #2
 8006480:	f7ff fc36 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_rate_low,
		2,
		pbuffer +  14);
	VL53L1_i2c_encode_uint16_t(
 8006484:	8a28      	ldrh	r0, [r5, #16]
 8006486:	f104 0210 	add.w	r2, r4, #16
 800648a:	2102      	movs	r1, #2
 800648c:	f7ff fc30 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->dss_config__manual_effective_spads_select,
		2,
		pbuffer +  16);
	*(pbuffer +  18) =
		pdata->dss_config__manual_block_select;
 8006490:	7cab      	ldrb	r3, [r5, #18]
	*(pbuffer +  21) =
		pdata->dss_config__min_spads_limit;
	LOG_FUNCTION_END(status);


	return status;
 8006492:	2000      	movs	r0, #0
	*(pbuffer +  18) =
 8006494:	74a3      	strb	r3, [r4, #18]
		pdata->dss_config__aperture_attenuation;
 8006496:	7ceb      	ldrb	r3, [r5, #19]
	*(pbuffer +  19) =
 8006498:	74e3      	strb	r3, [r4, #19]
		pdata->dss_config__max_spads_limit;
 800649a:	7d2b      	ldrb	r3, [r5, #20]
	*(pbuffer +  20) =
 800649c:	7523      	strb	r3, [r4, #20]
		pdata->dss_config__min_spads_limit;
 800649e:	7d6b      	ldrb	r3, [r5, #21]
	*(pbuffer +  21) =
 80064a0:	7563      	strb	r3, [r4, #21]
}
 80064a2:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 80064a4:	f06f 0009 	mvn.w	r0, #9
}
 80064a8:	4770      	bx	lr
 80064aa:	bf00      	nop

080064ac <VL53L1_i2c_encode_timing_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_TIMING_CONFIG_I2C_SIZE_BYTES > buf_size)
 80064ac:	2916      	cmp	r1, #22
 80064ae:	d93d      	bls.n	800652c <VL53L1_i2c_encode_timing_config+0x80>
		pdata->range_config__timeout_macrop_b_hi & 0xF;
	*(pbuffer +   8) =
		pdata->range_config__timeout_macrop_b_lo;
	*(pbuffer +   9) =
		pdata->range_config__vcsel_period_b & 0x3F;
	VL53L1_i2c_encode_uint16_t(
 80064b0:	2102      	movs	r1, #2
{
 80064b2:	b538      	push	{r3, r4, r5, lr}
		pdata->mm_config__timeout_macrop_a_hi & 0xF;
 80064b4:	7803      	ldrb	r3, [r0, #0]
 80064b6:	4614      	mov	r4, r2
 80064b8:	4605      	mov	r5, r0
	VL53L1_i2c_encode_uint16_t(
 80064ba:	320a      	adds	r2, #10
		pdata->mm_config__timeout_macrop_a_hi & 0xF;
 80064bc:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   0) =
 80064c0:	7023      	strb	r3, [r4, #0]
		pdata->mm_config__timeout_macrop_a_lo;
 80064c2:	7843      	ldrb	r3, [r0, #1]
	*(pbuffer +   1) =
 80064c4:	7063      	strb	r3, [r4, #1]
		pdata->mm_config__timeout_macrop_b_hi & 0xF;
 80064c6:	7883      	ldrb	r3, [r0, #2]
 80064c8:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   2) =
 80064cc:	70a3      	strb	r3, [r4, #2]
		pdata->mm_config__timeout_macrop_b_lo;
 80064ce:	78c3      	ldrb	r3, [r0, #3]
	*(pbuffer +   3) =
 80064d0:	70e3      	strb	r3, [r4, #3]
		pdata->range_config__timeout_macrop_a_hi & 0xF;
 80064d2:	7903      	ldrb	r3, [r0, #4]
 80064d4:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   4) =
 80064d8:	7123      	strb	r3, [r4, #4]
		pdata->range_config__timeout_macrop_a_lo;
 80064da:	7943      	ldrb	r3, [r0, #5]
	*(pbuffer +   5) =
 80064dc:	7163      	strb	r3, [r4, #5]
		pdata->range_config__vcsel_period_a & 0x3F;
 80064de:	7983      	ldrb	r3, [r0, #6]
 80064e0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   6) =
 80064e4:	71a3      	strb	r3, [r4, #6]
		pdata->range_config__timeout_macrop_b_hi & 0xF;
 80064e6:	79c3      	ldrb	r3, [r0, #7]
 80064e8:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   7) =
 80064ec:	71e3      	strb	r3, [r4, #7]
		pdata->range_config__timeout_macrop_b_lo;
 80064ee:	7a03      	ldrb	r3, [r0, #8]
	*(pbuffer +   8) =
 80064f0:	7223      	strb	r3, [r4, #8]
		pdata->range_config__vcsel_period_b & 0x3F;
 80064f2:	7a43      	ldrb	r3, [r0, #9]
 80064f4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   9) =
 80064f8:	7263      	strb	r3, [r4, #9]
	VL53L1_i2c_encode_uint16_t(
 80064fa:	8940      	ldrh	r0, [r0, #10]
 80064fc:	f7ff fbf8 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->range_config__sigma_thresh,
		2,
		pbuffer +  10);
	VL53L1_i2c_encode_uint16_t(
 8006500:	f104 020c 	add.w	r2, r4, #12
 8006504:	89a8      	ldrh	r0, [r5, #12]
 8006506:	2102      	movs	r1, #2
 8006508:	f7ff fbf2 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->range_config__min_count_rate_rtn_limit_mcps,
		2,
		pbuffer +  12);
	*(pbuffer +  14) =
		pdata->range_config__valid_phase_low;
 800650c:	7bab      	ldrb	r3, [r5, #14]
	*(pbuffer +  15) =
		pdata->range_config__valid_phase_high;
	VL53L1_i2c_encode_uint32_t(
 800650e:	f104 0212 	add.w	r2, r4, #18
 8006512:	2104      	movs	r1, #4
	*(pbuffer +  14) =
 8006514:	73a3      	strb	r3, [r4, #14]
		pdata->range_config__valid_phase_high;
 8006516:	7beb      	ldrb	r3, [r5, #15]
	*(pbuffer +  15) =
 8006518:	73e3      	strb	r3, [r4, #15]
	VL53L1_i2c_encode_uint32_t(
 800651a:	6928      	ldr	r0, [r5, #16]
 800651c:	f7ff fc2c 	bl	8005d78 <VL53L1_i2c_encode_uint32_t>
		pdata->system__intermeasurement_period,
		4,
		pbuffer +  18);
	*(pbuffer +  22) =
		pdata->system__fractional_enable & 0x1;
 8006520:	7d2b      	ldrb	r3, [r5, #20]
	LOG_FUNCTION_END(status);


	return status;
 8006522:	2000      	movs	r0, #0
		pdata->system__fractional_enable & 0x1;
 8006524:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +  22) =
 8006528:	75a3      	strb	r3, [r4, #22]
}
 800652a:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 800652c:	f06f 0009 	mvn.w	r0, #9
}
 8006530:	4770      	bx	lr
 8006532:	bf00      	nop

08006534 <VL53L1_i2c_encode_dynamic_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_DYNAMIC_CONFIG_I2C_SIZE_BYTES > buf_size)
 8006534:	2911      	cmp	r1, #17
 8006536:	d93c      	bls.n	80065b2 <VL53L1_i2c_encode_dynamic_config+0x7e>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	*(pbuffer +   0) =
		pdata->system__grouped_parameter_hold_0 & 0x3;
	VL53L1_i2c_encode_uint16_t(
 8006538:	2102      	movs	r1, #2
{
 800653a:	b538      	push	{r3, r4, r5, lr}
		pdata->system__grouped_parameter_hold_0 & 0x3;
 800653c:	7803      	ldrb	r3, [r0, #0]
 800653e:	4615      	mov	r5, r2
 8006540:	4604      	mov	r4, r0
 8006542:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +   0) =
 8006546:	f802 3b01 	strb.w	r3, [r2], #1
	VL53L1_i2c_encode_uint16_t(
 800654a:	8840      	ldrh	r0, [r0, #2]
 800654c:	f7ff fbd0 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_high,
		2,
		pbuffer +   1);
	VL53L1_i2c_encode_uint16_t(
 8006550:	88a0      	ldrh	r0, [r4, #4]
 8006552:	1cea      	adds	r2, r5, #3
 8006554:	2102      	movs	r1, #2
 8006556:	f7ff fbcb 	bl	8005cf0 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_low,
		2,
		pbuffer +   3);
	*(pbuffer +   5) =
		pdata->system__enable_xtalk_per_quadrant & 0x1;
 800655a:	79a3      	ldrb	r3, [r4, #6]
	*(pbuffer +  17) =
		pdata->system__grouped_parameter_hold & 0x3;
	LOG_FUNCTION_END(status);


	return status;
 800655c:	2000      	movs	r0, #0
		pdata->system__enable_xtalk_per_quadrant & 0x1;
 800655e:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   5) =
 8006562:	716b      	strb	r3, [r5, #5]
		pdata->system__seed_config & 0x7;
 8006564:	79e3      	ldrb	r3, [r4, #7]
 8006566:	f003 0307 	and.w	r3, r3, #7
	*(pbuffer +   6) =
 800656a:	71ab      	strb	r3, [r5, #6]
		pdata->sd_config__woi_sd0;
 800656c:	7a23      	ldrb	r3, [r4, #8]
	*(pbuffer +   7) =
 800656e:	71eb      	strb	r3, [r5, #7]
		pdata->sd_config__woi_sd1;
 8006570:	7a63      	ldrb	r3, [r4, #9]
	*(pbuffer +   8) =
 8006572:	722b      	strb	r3, [r5, #8]
		pdata->sd_config__initial_phase_sd0 & 0x7F;
 8006574:	7aa3      	ldrb	r3, [r4, #10]
 8006576:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   9) =
 800657a:	726b      	strb	r3, [r5, #9]
		pdata->sd_config__initial_phase_sd1 & 0x7F;
 800657c:	7ae3      	ldrb	r3, [r4, #11]
 800657e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +  10) =
 8006582:	72ab      	strb	r3, [r5, #10]
		pdata->system__grouped_parameter_hold_1 & 0x3;
 8006584:	7b23      	ldrb	r3, [r4, #12]
 8006586:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  11) =
 800658a:	72eb      	strb	r3, [r5, #11]
		pdata->sd_config__first_order_select & 0x3;
 800658c:	7b63      	ldrb	r3, [r4, #13]
 800658e:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  12) =
 8006592:	732b      	strb	r3, [r5, #12]
		pdata->sd_config__quantifier & 0xF;
 8006594:	7ba3      	ldrb	r3, [r4, #14]
 8006596:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +  13) =
 800659a:	736b      	strb	r3, [r5, #13]
		pdata->roi_config__user_roi_centre_spad;
 800659c:	7be3      	ldrb	r3, [r4, #15]
	*(pbuffer +  14) =
 800659e:	73ab      	strb	r3, [r5, #14]
		pdata->roi_config__user_roi_requested_global_xy_size;
 80065a0:	7c23      	ldrb	r3, [r4, #16]
	*(pbuffer +  15) =
 80065a2:	73eb      	strb	r3, [r5, #15]
		pdata->system__sequence_config;
 80065a4:	7c63      	ldrb	r3, [r4, #17]
	*(pbuffer +  16) =
 80065a6:	742b      	strb	r3, [r5, #16]
		pdata->system__grouped_parameter_hold & 0x3;
 80065a8:	7ca3      	ldrb	r3, [r4, #18]
 80065aa:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  17) =
 80065ae:	746b      	strb	r3, [r5, #17]
}
 80065b0:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 80065b2:	f06f 0009 	mvn.w	r0, #9
}
 80065b6:	4770      	bx	lr

080065b8 <VL53L1_i2c_encode_system_control>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_SYSTEM_CONTROL_I2C_SIZE_BYTES > buf_size)
 80065b8:	2904      	cmp	r1, #4
{
 80065ba:	4603      	mov	r3, r0
	if (VL53L1_SYSTEM_CONTROL_I2C_SIZE_BYTES > buf_size)
 80065bc:	d913      	bls.n	80065e6 <VL53L1_i2c_encode_system_control+0x2e>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	*(pbuffer +   0) =
		pdata->power_management__go1_power_force & 0x1;
 80065be:	7801      	ldrb	r1, [r0, #0]
	*(pbuffer +   4) =
		pdata->system__mode_start;
	LOG_FUNCTION_END(status);


	return status;
 80065c0:	2000      	movs	r0, #0
		pdata->power_management__go1_power_force & 0x1;
 80065c2:	f001 0101 	and.w	r1, r1, #1
	*(pbuffer +   0) =
 80065c6:	7011      	strb	r1, [r2, #0]
		pdata->system__stream_count_ctrl & 0x1;
 80065c8:	7859      	ldrb	r1, [r3, #1]
 80065ca:	f001 0101 	and.w	r1, r1, #1
	*(pbuffer +   1) =
 80065ce:	7051      	strb	r1, [r2, #1]
		pdata->firmware__enable & 0x1;
 80065d0:	7899      	ldrb	r1, [r3, #2]
 80065d2:	f001 0101 	and.w	r1, r1, #1
	*(pbuffer +   2) =
 80065d6:	7091      	strb	r1, [r2, #2]
		pdata->system__interrupt_clear & 0x3;
 80065d8:	78d9      	ldrb	r1, [r3, #3]
 80065da:	f001 0103 	and.w	r1, r1, #3
	*(pbuffer +   3) =
 80065de:	70d1      	strb	r1, [r2, #3]
		pdata->system__mode_start;
 80065e0:	791b      	ldrb	r3, [r3, #4]
	*(pbuffer +   4) =
 80065e2:	7113      	strb	r3, [r2, #4]
	return status;
 80065e4:	4770      	bx	lr
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 80065e6:	f06f 0009 	mvn.w	r0, #9
}
 80065ea:	4770      	bx	lr

080065ec <VL53L1_set_system_control>:


VL53L1_Error VL53L1_set_system_control(
	VL53L1_DEV                 Dev,
	VL53L1_system_control_t   *pdata)
{
 80065ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80065ee:	460c      	mov	r4, r1
 80065f0:	b083      	sub	sp, #12
			pdata,
			VL53L1_SYSTEM_CONTROL_I2C_SIZE_BYTES,
			comms_buffer);

	if (status == VL53L1_ERROR_NONE)
		status = VL53L1_WriteMulti(
 80065f2:	2305      	movs	r3, #5
 80065f4:	2183      	movs	r1, #131	; 0x83
		pdata->power_management__go1_power_force & 0x1;
 80065f6:	f894 c000 	ldrb.w	ip, [r4]
		status = VL53L1_WriteMulti(
 80065fa:	466a      	mov	r2, sp
		pdata->system__stream_count_ctrl & 0x1;
 80065fc:	7867      	ldrb	r7, [r4, #1]
		pdata->firmware__enable & 0x1;
 80065fe:	78a6      	ldrb	r6, [r4, #2]
		pdata->power_management__go1_power_force & 0x1;
 8006600:	f00c 0c01 	and.w	ip, ip, #1
		pdata->system__interrupt_clear & 0x3;
 8006604:	78e5      	ldrb	r5, [r4, #3]
		pdata->system__stream_count_ctrl & 0x1;
 8006606:	f007 0701 	and.w	r7, r7, #1
	*(pbuffer +   4) =
 800660a:	f894 e004 	ldrb.w	lr, [r4, #4]
		pdata->firmware__enable & 0x1;
 800660e:	f006 0601 	and.w	r6, r6, #1
		pdata->system__interrupt_clear & 0x3;
 8006612:	f005 0403 	and.w	r4, r5, #3
	*(pbuffer +   0) =
 8006616:	f88d c000 	strb.w	ip, [sp]
	*(pbuffer +   1) =
 800661a:	f88d 7001 	strb.w	r7, [sp, #1]
	*(pbuffer +   2) =
 800661e:	f88d 6002 	strb.w	r6, [sp, #2]
	*(pbuffer +   3) =
 8006622:	f88d 4003 	strb.w	r4, [sp, #3]
	*(pbuffer +   4) =
 8006626:	f88d e004 	strb.w	lr, [sp, #4]
		status = VL53L1_WriteMulti(
 800662a:	f000 fa57 	bl	8006adc <VL53L1_WriteMulti>
			VL53L1_SYSTEM_CONTROL_I2C_SIZE_BYTES);

	LOG_FUNCTION_END(status);

	return status;
}
 800662e:	b003      	add	sp, #12
 8006630:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006632:	bf00      	nop

08006634 <VL53L1_i2c_decode_system_results>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_SYSTEM_RESULTS_I2C_SIZE_BYTES > buf_size)
 8006634:	282b      	cmp	r0, #43	; 0x2b
 8006636:	f240 8089 	bls.w	800674c <VL53L1_i2c_decode_system_results+0x118>
	pdata->result__report_status =
		(*(pbuffer +   2)) & 0xF;
	pdata->result__stream_count =
		(*(pbuffer +   3));
	pdata->result__dss_actual_effective_spads_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   4));
 800663a:	2002      	movs	r0, #2
{
 800663c:	b538      	push	{r3, r4, r5, lr}
		(*(pbuffer +   0)) & 0x3F;
 800663e:	780b      	ldrb	r3, [r1, #0]
 8006640:	460d      	mov	r5, r1
 8006642:	4614      	mov	r4, r2
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   4));
 8006644:	3104      	adds	r1, #4
		(*(pbuffer +   0)) & 0x3F;
 8006646:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->result__interrupt_status =
 800664a:	7013      	strb	r3, [r2, #0]
	pdata->result__range_status =
 800664c:	786b      	ldrb	r3, [r5, #1]
 800664e:	7053      	strb	r3, [r2, #1]
		(*(pbuffer +   2)) & 0xF;
 8006650:	78ab      	ldrb	r3, [r5, #2]
 8006652:	f003 030f 	and.w	r3, r3, #15
	pdata->result__report_status =
 8006656:	7093      	strb	r3, [r2, #2]
	pdata->result__stream_count =
 8006658:	78eb      	ldrb	r3, [r5, #3]
 800665a:	70d3      	strb	r3, [r2, #3]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   4));
 800665c:	f7ff fb5a 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__peak_signal_count_rate_mcps_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   6));
 8006660:	1da9      	adds	r1, r5, #6
	pdata->result__dss_actual_effective_spads_sd0 =
 8006662:	80a0      	strh	r0, [r4, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   6));
 8006664:	2002      	movs	r0, #2
 8006666:	f7ff fb55 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__ambient_count_rate_mcps_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8));
 800666a:	f105 0108 	add.w	r1, r5, #8
	pdata->result__peak_signal_count_rate_mcps_sd0 =
 800666e:	80e0      	strh	r0, [r4, #6]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8));
 8006670:	2002      	movs	r0, #2
 8006672:	f7ff fb4f 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__sigma_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  10));
 8006676:	f105 010a 	add.w	r1, r5, #10
	pdata->result__ambient_count_rate_mcps_sd0 =
 800667a:	8120      	strh	r0, [r4, #8]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  10));
 800667c:	2002      	movs	r0, #2
 800667e:	f7ff fb49 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__phase_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  12));
 8006682:	f105 010c 	add.w	r1, r5, #12
	pdata->result__sigma_sd0 =
 8006686:	8160      	strh	r0, [r4, #10]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  12));
 8006688:	2002      	movs	r0, #2
 800668a:	f7ff fb43 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__final_crosstalk_corrected_range_mm_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  14));
 800668e:	f105 010e 	add.w	r1, r5, #14
	pdata->result__phase_sd0 =
 8006692:	81a0      	strh	r0, [r4, #12]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  14));
 8006694:	2002      	movs	r0, #2
 8006696:	f7ff fb3d 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__peak_signal_count_rate_crosstalk_corrected_mcps_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  16));
 800669a:	f105 0110 	add.w	r1, r5, #16
	pdata->result__final_crosstalk_corrected_range_mm_sd0 =
 800669e:	81e0      	strh	r0, [r4, #14]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  16));
 80066a0:	2002      	movs	r0, #2
 80066a2:	f7ff fb37 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__mm_inner_actual_effective_spads_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  18));
 80066a6:	f105 0112 	add.w	r1, r5, #18
	pdata->result__peak_signal_count_rate_crosstalk_corrected_mcps_sd0 =
 80066aa:	8220      	strh	r0, [r4, #16]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  18));
 80066ac:	2002      	movs	r0, #2
 80066ae:	f7ff fb31 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__mm_outer_actual_effective_spads_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  20));
 80066b2:	f105 0114 	add.w	r1, r5, #20
	pdata->result__mm_inner_actual_effective_spads_sd0 =
 80066b6:	8260      	strh	r0, [r4, #18]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  20));
 80066b8:	2002      	movs	r0, #2
 80066ba:	f7ff fb2b 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__avg_signal_count_rate_mcps_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  22));
 80066be:	f105 0116 	add.w	r1, r5, #22
	pdata->result__mm_outer_actual_effective_spads_sd0 =
 80066c2:	82a0      	strh	r0, [r4, #20]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  22));
 80066c4:	2002      	movs	r0, #2
 80066c6:	f7ff fb25 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__dss_actual_effective_spads_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  24));
 80066ca:	f105 0118 	add.w	r1, r5, #24
	pdata->result__avg_signal_count_rate_mcps_sd0 =
 80066ce:	82e0      	strh	r0, [r4, #22]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  24));
 80066d0:	2002      	movs	r0, #2
 80066d2:	f7ff fb1f 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__peak_signal_count_rate_mcps_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  26));
 80066d6:	f105 011a 	add.w	r1, r5, #26
	pdata->result__dss_actual_effective_spads_sd1 =
 80066da:	8320      	strh	r0, [r4, #24]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  26));
 80066dc:	2002      	movs	r0, #2
 80066de:	f7ff fb19 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__ambient_count_rate_mcps_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  28));
 80066e2:	f105 011c 	add.w	r1, r5, #28
	pdata->result__peak_signal_count_rate_mcps_sd1 =
 80066e6:	8360      	strh	r0, [r4, #26]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  28));
 80066e8:	2002      	movs	r0, #2
 80066ea:	f7ff fb13 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__sigma_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  30));
 80066ee:	f105 011e 	add.w	r1, r5, #30
	pdata->result__ambient_count_rate_mcps_sd1 =
 80066f2:	83a0      	strh	r0, [r4, #28]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  30));
 80066f4:	2002      	movs	r0, #2
 80066f6:	f7ff fb0d 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__phase_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  32));
 80066fa:	f105 0120 	add.w	r1, r5, #32
	pdata->result__sigma_sd1 =
 80066fe:	83e0      	strh	r0, [r4, #30]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  32));
 8006700:	2002      	movs	r0, #2
 8006702:	f7ff fb07 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__final_crosstalk_corrected_range_mm_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  34));
 8006706:	f105 0122 	add.w	r1, r5, #34	; 0x22
	pdata->result__phase_sd1 =
 800670a:	8420      	strh	r0, [r4, #32]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  34));
 800670c:	2002      	movs	r0, #2
 800670e:	f7ff fb01 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__spare_0_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  36));
 8006712:	f105 0124 	add.w	r1, r5, #36	; 0x24
	pdata->result__final_crosstalk_corrected_range_mm_sd1 =
 8006716:	8460      	strh	r0, [r4, #34]	; 0x22
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  36));
 8006718:	2002      	movs	r0, #2
 800671a:	f7ff fafb 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__spare_1_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  38));
 800671e:	f105 0126 	add.w	r1, r5, #38	; 0x26
	pdata->result__spare_0_sd1 =
 8006722:	84a0      	strh	r0, [r4, #36]	; 0x24
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  38));
 8006724:	2002      	movs	r0, #2
 8006726:	f7ff faf5 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__spare_2_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  40));
 800672a:	f105 0128 	add.w	r1, r5, #40	; 0x28
	pdata->result__spare_1_sd1 =
 800672e:	84e0      	strh	r0, [r4, #38]	; 0x26
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  40));
 8006730:	2002      	movs	r0, #2
 8006732:	f7ff faef 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->result__spare_2_sd1 =
 8006736:	8520      	strh	r0, [r4, #40]	; 0x28
	pdata->result__spare_3_sd1 =
 8006738:	f895 302a 	ldrb.w	r3, [r5, #42]	; 0x2a
	pdata->result__thresh_info =
		(*(pbuffer +  43));

	LOG_FUNCTION_END(status);

	return status;
 800673c:	2000      	movs	r0, #0
	pdata->result__spare_3_sd1 =
 800673e:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
	pdata->result__thresh_info =
 8006742:	f895 302b 	ldrb.w	r3, [r5, #43]	; 0x2b
 8006746:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
}
 800674a:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 800674c:	f06f 0009 	mvn.w	r0, #9
}
 8006750:	4770      	bx	lr
 8006752:	bf00      	nop

08006754 <VL53L1_i2c_decode_core_results>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_CORE_RESULTS_I2C_SIZE_BYTES > buf_size)
 8006754:	2820      	cmp	r0, #32
 8006756:	d935      	bls.n	80067c4 <VL53L1_i2c_decode_core_results+0x70>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	pdata->result_core__ambient_window_events_sd0 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +   0));
 8006758:	2004      	movs	r0, #4
{
 800675a:	b538      	push	{r3, r4, r5, lr}
 800675c:	4614      	mov	r4, r2
 800675e:	460d      	mov	r5, r1
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +   0));
 8006760:	f7ff fb1c 	bl	8005d9c <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__ranging_total_events_sd0 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +   4));
 8006764:	1d29      	adds	r1, r5, #4
	pdata->result_core__ambient_window_events_sd0 =
 8006766:	6020      	str	r0, [r4, #0]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +   4));
 8006768:	2004      	movs	r0, #4
 800676a:	f7ff fb17 	bl	8005d9c <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__signal_total_events_sd0 =
		(VL53L1_i2c_decode_int32_t(4, pbuffer +   8));
 800676e:	f105 0108 	add.w	r1, r5, #8
	pdata->result_core__ranging_total_events_sd0 =
 8006772:	6060      	str	r0, [r4, #4]
		(VL53L1_i2c_decode_int32_t(4, pbuffer +   8));
 8006774:	2004      	movs	r0, #4
 8006776:	f7ff fb1f 	bl	8005db8 <VL53L1_i2c_decode_int32_t>
	pdata->result_core__total_periods_elapsed_sd0 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  12));
 800677a:	f105 010c 	add.w	r1, r5, #12
	pdata->result_core__signal_total_events_sd0 =
 800677e:	60a0      	str	r0, [r4, #8]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  12));
 8006780:	2004      	movs	r0, #4
 8006782:	f7ff fb0b 	bl	8005d9c <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__ambient_window_events_sd1 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  16));
 8006786:	f105 0110 	add.w	r1, r5, #16
	pdata->result_core__total_periods_elapsed_sd0 =
 800678a:	60e0      	str	r0, [r4, #12]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  16));
 800678c:	2004      	movs	r0, #4
 800678e:	f7ff fb05 	bl	8005d9c <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__ranging_total_events_sd1 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  20));
 8006792:	f105 0114 	add.w	r1, r5, #20
	pdata->result_core__ambient_window_events_sd1 =
 8006796:	6120      	str	r0, [r4, #16]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  20));
 8006798:	2004      	movs	r0, #4
 800679a:	f7ff faff 	bl	8005d9c <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__signal_total_events_sd1 =
		(VL53L1_i2c_decode_int32_t(4, pbuffer +  24));
 800679e:	f105 0118 	add.w	r1, r5, #24
	pdata->result_core__ranging_total_events_sd1 =
 80067a2:	6160      	str	r0, [r4, #20]
		(VL53L1_i2c_decode_int32_t(4, pbuffer +  24));
 80067a4:	2004      	movs	r0, #4
 80067a6:	f7ff fb07 	bl	8005db8 <VL53L1_i2c_decode_int32_t>
	pdata->result_core__total_periods_elapsed_sd1 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  28));
 80067aa:	f105 011c 	add.w	r1, r5, #28
	pdata->result_core__signal_total_events_sd1 =
 80067ae:	61a0      	str	r0, [r4, #24]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  28));
 80067b0:	2004      	movs	r0, #4
 80067b2:	f7ff faf3 	bl	8005d9c <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__total_periods_elapsed_sd1 =
 80067b6:	61e0      	str	r0, [r4, #28]
	pdata->result_core__spare_0 =
 80067b8:	f895 3020 	ldrb.w	r3, [r5, #32]
		(*(pbuffer +  32));

	LOG_FUNCTION_END(status);

	return status;
 80067bc:	2000      	movs	r0, #0
	pdata->result_core__spare_0 =
 80067be:	f884 3020 	strb.w	r3, [r4, #32]
}
 80067c2:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 80067c4:	f06f 0009 	mvn.w	r0, #9
}
 80067c8:	4770      	bx	lr
 80067ca:	bf00      	nop

080067cc <VL53L1_i2c_decode_debug_results>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_DEBUG_RESULTS_I2C_SIZE_BYTES > buf_size)
 80067cc:	2837      	cmp	r0, #55	; 0x37
 80067ce:	f240 80d3 	bls.w	8006978 <VL53L1_i2c_decode_debug_results+0x1ac>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	pdata->phasecal_result__reference_phase =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   0));
 80067d2:	2002      	movs	r0, #2
{
 80067d4:	b538      	push	{r3, r4, r5, lr}
 80067d6:	4614      	mov	r4, r2
 80067d8:	460d      	mov	r5, r1
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   0));
 80067da:	f7ff fa9b 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->phasecal_result__reference_phase =
 80067de:	8020      	strh	r0, [r4, #0]
	pdata->vhv_result__search_result =
		(*(pbuffer +   6)) & 0x3F;
	pdata->vhv_result__latest_setting =
		(*(pbuffer +   7)) & 0x3F;
	pdata->result__osc_calibrate_val =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8)) & 0x3FF;
 80067e0:	f105 0108 	add.w	r1, r5, #8
		(*(pbuffer +   2)) & 0x7F;
 80067e4:	78ab      	ldrb	r3, [r5, #2]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8)) & 0x3FF;
 80067e6:	2002      	movs	r0, #2
		(*(pbuffer +   2)) & 0x7F;
 80067e8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	pdata->phasecal_result__vcsel_start =
 80067ec:	70a3      	strb	r3, [r4, #2]
		(*(pbuffer +   3)) & 0x3F;
 80067ee:	78eb      	ldrb	r3, [r5, #3]
 80067f0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->ref_spad_char_result__num_actual_ref_spads =
 80067f4:	70e3      	strb	r3, [r4, #3]
		(*(pbuffer +   4)) & 0x3;
 80067f6:	792b      	ldrb	r3, [r5, #4]
 80067f8:	f003 0303 	and.w	r3, r3, #3
	pdata->ref_spad_char_result__ref_location =
 80067fc:	7123      	strb	r3, [r4, #4]
		(*(pbuffer +   5)) & 0x1;
 80067fe:	796b      	ldrb	r3, [r5, #5]
 8006800:	f003 0301 	and.w	r3, r3, #1
	pdata->vhv_result__coldboot_status =
 8006804:	7163      	strb	r3, [r4, #5]
		(*(pbuffer +   6)) & 0x3F;
 8006806:	79ab      	ldrb	r3, [r5, #6]
 8006808:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->vhv_result__search_result =
 800680c:	71a3      	strb	r3, [r4, #6]
		(*(pbuffer +   7)) & 0x3F;
 800680e:	79eb      	ldrb	r3, [r5, #7]
 8006810:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->vhv_result__latest_setting =
 8006814:	71e3      	strb	r3, [r4, #7]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8)) & 0x3FF;
 8006816:	f7ff fa7d 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
 800681a:	f3c0 0309 	ubfx	r3, r0, #0, #10
	pdata->firmware__mode_status =
		(*(pbuffer +  16));
	pdata->firmware__secondary_mode_status =
		(*(pbuffer +  17));
	pdata->firmware__cal_repeat_rate_counter =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  18)) & 0xFFF;
 800681e:	f105 0112 	add.w	r1, r5, #18
 8006822:	2002      	movs	r0, #2
	pdata->result__osc_calibrate_val =
 8006824:	8123      	strh	r3, [r4, #8]
		(*(pbuffer +  10)) & 0x3;
 8006826:	7aab      	ldrb	r3, [r5, #10]
 8006828:	f003 0303 	and.w	r3, r3, #3
	pdata->ana_config__powerdown_go1 =
 800682c:	72a3      	strb	r3, [r4, #10]
		(*(pbuffer +  11)) & 0x3;
 800682e:	7aeb      	ldrb	r3, [r5, #11]
 8006830:	f003 0303 	and.w	r3, r3, #3
	pdata->ana_config__ref_bg_ctrl =
 8006834:	72e3      	strb	r3, [r4, #11]
		(*(pbuffer +  12)) & 0xF;
 8006836:	7b2b      	ldrb	r3, [r5, #12]
 8006838:	f003 030f 	and.w	r3, r3, #15
	pdata->ana_config__regdvdd1v2_ctrl =
 800683c:	7323      	strb	r3, [r4, #12]
		(*(pbuffer +  13)) & 0x7;
 800683e:	7b6b      	ldrb	r3, [r5, #13]
 8006840:	f003 0307 	and.w	r3, r3, #7
	pdata->ana_config__osc_slow_ctrl =
 8006844:	7363      	strb	r3, [r4, #13]
		(*(pbuffer +  14)) & 0x1;
 8006846:	7bab      	ldrb	r3, [r5, #14]
 8006848:	f003 0301 	and.w	r3, r3, #1
	pdata->test_mode__status =
 800684c:	73a3      	strb	r3, [r4, #14]
		(*(pbuffer +  15)) & 0x3;
 800684e:	7beb      	ldrb	r3, [r5, #15]
 8006850:	f003 0303 	and.w	r3, r3, #3
	pdata->firmware__system_status =
 8006854:	73e3      	strb	r3, [r4, #15]
	pdata->firmware__mode_status =
 8006856:	7c2b      	ldrb	r3, [r5, #16]
 8006858:	7423      	strb	r3, [r4, #16]
	pdata->firmware__secondary_mode_status =
 800685a:	7c6b      	ldrb	r3, [r5, #17]
 800685c:	7463      	strb	r3, [r4, #17]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  18)) & 0xFFF;
 800685e:	f7ff fa59 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
 8006862:	f3c0 030b 	ubfx	r3, r0, #0, #12
	pdata->gph__system__thresh_high =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  22));
 8006866:	f105 0116 	add.w	r1, r5, #22
 800686a:	2002      	movs	r0, #2
	pdata->firmware__cal_repeat_rate_counter =
 800686c:	8263      	strh	r3, [r4, #18]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  22));
 800686e:	f7ff fa51 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->gph__system__thresh_low =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  24));
 8006872:	f105 0118 	add.w	r1, r5, #24
	pdata->gph__system__thresh_high =
 8006876:	82a0      	strh	r0, [r4, #20]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  24));
 8006878:	2002      	movs	r0, #2
 800687a:	f7ff fa4b 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
	pdata->gph__system__thresh_low =
 800687e:	82e0      	strh	r0, [r4, #22]
	pdata->gph__system__enable_xtalk_per_quadrant =
		(*(pbuffer +  26)) & 0x1;
 8006880:	7eab      	ldrb	r3, [r5, #26]
	pdata->pad_startup_mode__value_ro =
		(*(pbuffer +  44)) & 0x3;
	pdata->pad_startup_mode__value_ctrl =
		(*(pbuffer +  45)) & 0x3F;
	pdata->pll_period_us =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  46)) & 0x3FFFF;
 8006882:	f105 012e 	add.w	r1, r5, #46	; 0x2e
 8006886:	2004      	movs	r0, #4
		(*(pbuffer +  26)) & 0x1;
 8006888:	f003 0301 	and.w	r3, r3, #1
	pdata->gph__system__enable_xtalk_per_quadrant =
 800688c:	7623      	strb	r3, [r4, #24]
		(*(pbuffer +  27)) & 0x7;
 800688e:	7eeb      	ldrb	r3, [r5, #27]
 8006890:	f003 0307 	and.w	r3, r3, #7
	pdata->gph__spare_0 =
 8006894:	7663      	strb	r3, [r4, #25]
	pdata->gph__sd_config__woi_sd0 =
 8006896:	7f2b      	ldrb	r3, [r5, #28]
 8006898:	76a3      	strb	r3, [r4, #26]
	pdata->gph__sd_config__woi_sd1 =
 800689a:	7f6b      	ldrb	r3, [r5, #29]
 800689c:	76e3      	strb	r3, [r4, #27]
		(*(pbuffer +  30)) & 0x7F;
 800689e:	7fab      	ldrb	r3, [r5, #30]
 80068a0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	pdata->gph__sd_config__initial_phase_sd0 =
 80068a4:	7723      	strb	r3, [r4, #28]
		(*(pbuffer +  31)) & 0x7F;
 80068a6:	7feb      	ldrb	r3, [r5, #31]
 80068a8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	pdata->gph__sd_config__initial_phase_sd1 =
 80068ac:	7763      	strb	r3, [r4, #29]
		(*(pbuffer +  32)) & 0x3;
 80068ae:	f895 3020 	ldrb.w	r3, [r5, #32]
 80068b2:	f003 0303 	and.w	r3, r3, #3
	pdata->gph__sd_config__first_order_select =
 80068b6:	77a3      	strb	r3, [r4, #30]
		(*(pbuffer +  33)) & 0xF;
 80068b8:	f895 3021 	ldrb.w	r3, [r5, #33]	; 0x21
 80068bc:	f003 030f 	and.w	r3, r3, #15
	pdata->gph__sd_config__quantifier =
 80068c0:	77e3      	strb	r3, [r4, #31]
	pdata->gph__roi_config__user_roi_centre_spad =
 80068c2:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 80068c6:	f884 3020 	strb.w	r3, [r4, #32]
	pdata->gph__roi_config__user_roi_requested_global_xy_size =
 80068ca:	f895 3023 	ldrb.w	r3, [r5, #35]	; 0x23
 80068ce:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
	pdata->gph__system__sequence_config =
 80068d2:	f895 3024 	ldrb.w	r3, [r5, #36]	; 0x24
 80068d6:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
		(*(pbuffer +  37)) & 0x1;
 80068da:	f895 3025 	ldrb.w	r3, [r5, #37]	; 0x25
 80068de:	f003 0301 	and.w	r3, r3, #1
	pdata->gph__gph_id =
 80068e2:	f884 3023 	strb.w	r3, [r4, #35]	; 0x23
		(*(pbuffer +  38)) & 0x3;
 80068e6:	f895 3026 	ldrb.w	r3, [r5, #38]	; 0x26
 80068ea:	f003 0303 	and.w	r3, r3, #3
	pdata->system__interrupt_set =
 80068ee:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
		(*(pbuffer +  39)) & 0x1F;
 80068f2:	f895 3027 	ldrb.w	r3, [r5, #39]	; 0x27
 80068f6:	f003 031f 	and.w	r3, r3, #31
	pdata->interrupt_manager__enables =
 80068fa:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
		(*(pbuffer +  40)) & 0x1F;
 80068fe:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
 8006902:	f003 031f 	and.w	r3, r3, #31
	pdata->interrupt_manager__clear =
 8006906:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
		(*(pbuffer +  41)) & 0x1F;
 800690a:	f895 3029 	ldrb.w	r3, [r5, #41]	; 0x29
 800690e:	f003 031f 	and.w	r3, r3, #31
	pdata->interrupt_manager__status =
 8006912:	f884 3027 	strb.w	r3, [r4, #39]	; 0x27
		(*(pbuffer +  42)) & 0x1;
 8006916:	f895 302a 	ldrb.w	r3, [r5, #42]	; 0x2a
 800691a:	f003 0301 	and.w	r3, r3, #1
	pdata->mcu_to_host_bank__wr_access_en =
 800691e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
		(*(pbuffer +  43)) & 0x1;
 8006922:	f895 302b 	ldrb.w	r3, [r5, #43]	; 0x2b
 8006926:	f003 0301 	and.w	r3, r3, #1
	pdata->power_management__go1_reset_status =
 800692a:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
		(*(pbuffer +  44)) & 0x3;
 800692e:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8006932:	f003 0303 	and.w	r3, r3, #3
	pdata->pad_startup_mode__value_ro =
 8006936:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
		(*(pbuffer +  45)) & 0x3F;
 800693a:	f895 302d 	ldrb.w	r3, [r5, #45]	; 0x2d
 800693e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->pad_startup_mode__value_ctrl =
 8006942:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  46)) & 0x3FFFF;
 8006946:	f7ff fa29 	bl	8005d9c <VL53L1_i2c_decode_uint32_t>
 800694a:	f3c0 0311 	ubfx	r3, r0, #0, #18
	pdata->interrupt_scheduler__data_out =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  50));
 800694e:	f105 0132 	add.w	r1, r5, #50	; 0x32
 8006952:	2004      	movs	r0, #4
	pdata->pll_period_us =
 8006954:	62e3      	str	r3, [r4, #44]	; 0x2c
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  50));
 8006956:	f7ff fa21 	bl	8005d9c <VL53L1_i2c_decode_uint32_t>
	pdata->interrupt_scheduler__data_out =
 800695a:	6320      	str	r0, [r4, #48]	; 0x30
	pdata->nvm_bist__complete =
		(*(pbuffer +  54)) & 0x1;
 800695c:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
	pdata->nvm_bist__status =
		(*(pbuffer +  55)) & 0x1;

	LOG_FUNCTION_END(status);

	return status;
 8006960:	2000      	movs	r0, #0
		(*(pbuffer +  54)) & 0x1;
 8006962:	f003 0301 	and.w	r3, r3, #1
	pdata->nvm_bist__complete =
 8006966:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
		(*(pbuffer +  55)) & 0x1;
 800696a:	f895 3037 	ldrb.w	r3, [r5, #55]	; 0x37
 800696e:	f003 0301 	and.w	r3, r3, #1
	pdata->nvm_bist__status =
 8006972:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 8006976:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8006978:	f06f 0009 	mvn.w	r0, #9
}
 800697c:	4770      	bx	lr
 800697e:	bf00      	nop

08006980 <VL53L1_get_nvm_copy_data>:


VL53L1_Error VL53L1_get_nvm_copy_data(
	VL53L1_DEV                 Dev,
	VL53L1_nvm_copy_data_t    *pdata)
{
 8006980:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006984:	b08e      	sub	sp, #56	; 0x38
 8006986:	460c      	mov	r4, r1
	uint8_t comms_buffer[VL53L1_NVM_COPY_DATA_I2C_SIZE_BYTES];

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
		status = VL53L1_ReadMulti(
 8006988:	2331      	movs	r3, #49	; 0x31
 800698a:	f240 110f 	movw	r1, #271	; 0x10f
 800698e:	aa01      	add	r2, sp, #4
 8006990:	f000 f8cc 	bl	8006b2c <VL53L1_ReadMulti>
			Dev,
			VL53L1_IDENTIFICATION__MODEL_ID,
			comms_buffer,
			VL53L1_NVM_COPY_DATA_I2C_SIZE_BYTES);

	if (status == VL53L1_ERROR_NONE)
 8006994:	4605      	mov	r5, r0
 8006996:	2800      	cmp	r0, #0
 8006998:	d16c      	bne.n	8006a74 <VL53L1_get_nvm_copy_data+0xf4>
	pdata->identification__model_id =
 800699a:	f89d 6004 	ldrb.w	r6, [sp, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   3));
 800699e:	f10d 0107 	add.w	r1, sp, #7
	pdata->identification__module_type =
 80069a2:	f89d 2005 	ldrb.w	r2, [sp, #5]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   3));
 80069a6:	2002      	movs	r0, #2
	pdata->identification__revision_id =
 80069a8:	f89d 3006 	ldrb.w	r3, [sp, #6]
	pdata->identification__model_id =
 80069ac:	7026      	strb	r6, [r4, #0]
	pdata->identification__module_type =
 80069ae:	7062      	strb	r2, [r4, #1]
	pdata->identification__revision_id =
 80069b0:	70a3      	strb	r3, [r4, #2]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   3));
 80069b2:	f7ff f9af 	bl	8005d14 <VL53L1_i2c_decode_uint16_t>
		(*(pbuffer +   6)) & 0x7;
 80069b6:	f89d 900a 	ldrb.w	r9, [sp, #10]
		(*(pbuffer +   5)) & 0x7F;
 80069ba:	f89d a009 	ldrb.w	sl, [sp, #9]
		(*(pbuffer +   7)) & 0x7;
 80069be:	f89d 800b 	ldrb.w	r8, [sp, #11]
		(*(pbuffer +   6)) & 0x7;
 80069c2:	f009 0907 	and.w	r9, r9, #7
		(*(pbuffer +   8)) & 0x3F;
 80069c6:	f89d e00c 	ldrb.w	lr, [sp, #12]
		(*(pbuffer +   5)) & 0x7F;
 80069ca:	f00a 0a7f 	and.w	sl, sl, #127	; 0x7f
		(*(pbuffer +   9)) & 0x3F;
 80069ce:	f89d c00d 	ldrb.w	ip, [sp, #13]
		(*(pbuffer +   7)) & 0x7;
 80069d2:	f008 0807 	and.w	r8, r8, #7
		(*(pbuffer +  10)) & 0x1;
 80069d6:	f89d 700e 	ldrb.w	r7, [sp, #14]
		(*(pbuffer +   8)) & 0x3F;
 80069da:	f00e 0e3f 	and.w	lr, lr, #63	; 0x3f
		(*(pbuffer +  11)) & 0x7F;
 80069de:	f89d 600f 	ldrb.w	r6, [sp, #15]
		(*(pbuffer +   9)) & 0x3F;
 80069e2:	f00c 0c3f 	and.w	ip, ip, #63	; 0x3f
		(*(pbuffer +  12)) & 0x1;
 80069e6:	f89d 1010 	ldrb.w	r1, [sp, #16]
		(*(pbuffer +  10)) & 0x1;
 80069ea:	f007 0701 	and.w	r7, r7, #1
		(*(pbuffer +  13)) & 0x3F;
 80069ee:	f89d 2011 	ldrb.w	r2, [sp, #17]
		(*(pbuffer +  11)) & 0x7F;
 80069f2:	f006 067f 	and.w	r6, r6, #127	; 0x7f
		(*(pbuffer +  14)) & 0x3F;
 80069f6:	f89d 3012 	ldrb.w	r3, [sp, #18]
		(*(pbuffer +  12)) & 0x1;
 80069fa:	f001 0101 	and.w	r1, r1, #1
		(*(pbuffer +  13)) & 0x3F;
 80069fe:	f002 023f 	and.w	r2, r2, #63	; 0x3f
	pdata->identification__module_id =
 8006a02:	80a0      	strh	r0, [r4, #4]
		(*(pbuffer +  14)) & 0x3F;
 8006a04:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->global_config__spad_enables_rtn_1 =
 8006a08:	f89d 0014 	ldrb.w	r0, [sp, #20]
	pdata->ana_config__fast_osc__freq_set =
 8006a0c:	f884 9007 	strb.w	r9, [r4, #7]
	pdata->global_config__spad_enables_rtn_0 =
 8006a10:	f89d 9013 	ldrb.w	r9, [sp, #19]
	pdata->ana_config__vcsel_selion =
 8006a14:	f884 e009 	strb.w	lr, [r4, #9]
	pdata->protected_laser_safety__lock_bit =
 8006a18:	72e7      	strb	r7, [r4, #11]
	pdata->laser_safety__key =
 8006a1a:	7326      	strb	r6, [r4, #12]
	pdata->laser_safety__key_ro =
 8006a1c:	7361      	strb	r1, [r4, #13]
	pdata->laser_safety__clip =
 8006a1e:	73a2      	strb	r2, [r4, #14]
	pdata->laser_safety__mult =
 8006a20:	73e3      	strb	r3, [r4, #15]
	pdata->global_config__spad_enables_rtn_1 =
 8006a22:	7460      	strb	r0, [r4, #17]
	pdata->global_config__spad_enables_rtn_2 =
 8006a24:	f8dd e019 	ldr.w	lr, [sp, #25]
 8006a28:	f8dd 701d 	ldr.w	r7, [sp, #29]
 8006a2c:	f8dd 6021 	ldr.w	r6, [sp, #33]	; 0x21
 8006a30:	f8dd 0025 	ldr.w	r0, [sp, #37]	; 0x25
 8006a34:	f8dd 1029 	ldr.w	r1, [sp, #41]	; 0x29
 8006a38:	f8dd 202d 	ldr.w	r2, [sp, #45]	; 0x2d
 8006a3c:	f8dd 3031 	ldr.w	r3, [sp, #49]	; 0x31
	pdata->ana_config__fast_osc__trim_max =
 8006a40:	f884 a006 	strb.w	sl, [r4, #6]
	pdata->ana_config__vcsel_trim =
 8006a44:	f884 8008 	strb.w	r8, [r4, #8]
	pdata->ana_config__vcsel_selion_max =
 8006a48:	f884 c00a 	strb.w	ip, [r4, #10]
	pdata->global_config__spad_enables_rtn_0 =
 8006a4c:	f884 9010 	strb.w	r9, [r4, #16]
	pdata->global_config__spad_enables_rtn_2 =
 8006a50:	f8dd c015 	ldr.w	ip, [sp, #21]
 8006a54:	f8c4 e016 	str.w	lr, [r4, #22]
 8006a58:	f8c4 c012 	str.w	ip, [r4, #18]
 8006a5c:	f8c4 701a 	str.w	r7, [r4, #26]
 8006a60:	f8c4 601e 	str.w	r6, [r4, #30]
 8006a64:	f8c4 0022 	str.w	r0, [r4, #34]	; 0x22
 8006a68:	f8c4 1026 	str.w	r1, [r4, #38]	; 0x26
 8006a6c:	f8c4 202a 	str.w	r2, [r4, #42]	; 0x2a
 8006a70:	f8c4 302e 	str.w	r3, [r4, #46]	; 0x2e
			pdata);

	LOG_FUNCTION_END(status);

	return status;
}
 8006a74:	4628      	mov	r0, r5
 8006a76:	b00e      	add	sp, #56	; 0x38
 8006a78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08006a7c <VL53L1_poll_for_boot_completion>:


VL53L1_Error VL53L1_poll_for_boot_completion(
	VL53L1_DEV    Dev,
	uint32_t      timeout_ms)
{
 8006a7c:	b570      	push	{r4, r5, r6, lr}
 8006a7e:	460e      	mov	r6, r1
 8006a80:	b082      	sub	sp, #8
	 * it copies the NVM data into the G02 host register banks
	 * The host must wait the required time to allow the copy
	 * to complete before attempting to read the firmware status
	 */

	status = VL53L1_WaitUs(
 8006a82:	f44f 6196 	mov.w	r1, #1200	; 0x4b0
{
 8006a86:	4605      	mov	r5, r0
	status = VL53L1_WaitUs(
 8006a88:	f000 f8ce 	bl	8006c28 <VL53L1_WaitUs>
			Dev,
			VL53L1_FIRMWARE_BOOT_TIME_US);

	if (status == VL53L1_ERROR_NONE)
 8006a8c:	4604      	mov	r4, r0
 8006a8e:	b110      	cbz	r0, 8006a96 <VL53L1_poll_for_boot_completion+0x1a>
		VL53L1_init_ll_driver_state(Dev, VL53L1_DEVICESTATE_SW_STANDBY);

	LOG_FUNCTION_END(status);

	return status;
}
 8006a90:	4620      	mov	r0, r4
 8006a92:	b002      	add	sp, #8
 8006a94:	bd70      	pop	{r4, r5, r6, pc}
		status =
 8006a96:	2401      	movs	r4, #1
 8006a98:	4631      	mov	r1, r6
 8006a9a:	22e5      	movs	r2, #229	; 0xe5
 8006a9c:	4628      	mov	r0, r5
 8006a9e:	9401      	str	r4, [sp, #4]
 8006aa0:	4623      	mov	r3, r4
 8006aa2:	9400      	str	r4, [sp, #0]
 8006aa4:	f000 f8ce 	bl	8006c44 <VL53L1_WaitValueMaskEx>
	if (status == VL53L1_ERROR_NONE)
 8006aa8:	4604      	mov	r4, r0
 8006aaa:	2800      	cmp	r0, #0
 8006aac:	d1f0      	bne.n	8006a90 <VL53L1_poll_for_boot_completion+0x14>
		VL53L1_init_ll_driver_state(Dev, VL53L1_DEVICESTATE_SW_STANDBY);
 8006aae:	4628      	mov	r0, r5
 8006ab0:	2103      	movs	r1, #3
 8006ab2:	f7ff f805 	bl	8005ac0 <VL53L1_init_ll_driver_state>
}
 8006ab6:	4620      	mov	r0, r4
 8006ab8:	b002      	add	sp, #8
 8006aba:	bd70      	pop	{r4, r5, r6, pc}

08006abc <VL53L1_poll_for_range_completion>:


VL53L1_Error VL53L1_poll_for_range_completion(
	VL53L1_DEV     Dev,
	uint32_t       timeout_ms)
{
 8006abc:	b510      	push	{r4, lr}

	gpio__mux_active_high_hv =
			pdev->stat_cfg.gpio_hv_mux__ctrl &
			VL53L1_DEVICEINTERRUPTLEVEL_ACTIVE_MASK;

	if (gpio__mux_active_high_hv == VL53L1_DEVICEINTERRUPTLEVEL_ACTIVE_HIGH)
 8006abe:	f890 3170 	ldrb.w	r3, [r0, #368]	; 0x170
{
 8006ac2:	b082      	sub	sp, #8
		interrupt_ready = 0x01;
	else
		interrupt_ready = 0x00;

	status =
 8006ac4:	2401      	movs	r4, #1
 8006ac6:	2231      	movs	r2, #49	; 0x31
	if (gpio__mux_active_high_hv == VL53L1_DEVICEINTERRUPTLEVEL_ACTIVE_HIGH)
 8006ac8:	f083 0310 	eor.w	r3, r3, #16
	status =
 8006acc:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8006ad0:	e9cd 4400 	strd	r4, r4, [sp]
 8006ad4:	f000 f8b6 	bl	8006c44 <VL53L1_WaitValueMaskEx>
			VL53L1_POLLING_DELAY_MS);

	LOG_FUNCTION_END(status);

	return status;
}
 8006ad8:	b002      	add	sp, #8
 8006ada:	bd10      	pop	{r4, pc}

08006adc <VL53L1_WriteMulti>:
}

VL53L1_Error VL53L1_WriteMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
    int status_int;
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    if (count > sizeof(_I2CBuffer) - 1) {
 8006adc:	2bff      	cmp	r3, #255	; 0xff
 8006ade:	d81f      	bhi.n	8006b20 <VL53L1_WriteMulti+0x44>
VL53L1_Error VL53L1_WriteMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8006ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006ae2:	460e      	mov	r6, r1
        return VL53L1_ERROR_INVALID_PARAMS;
    }
    _I2CBuffer[0] = index>>8;
 8006ae4:	4f10      	ldr	r7, [pc, #64]	; (8006b28 <VL53L1_WriteMulti+0x4c>)
 8006ae6:	461c      	mov	r4, r3
VL53L1_Error VL53L1_WriteMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8006ae8:	b083      	sub	sp, #12
    _I2CBuffer[0] = index>>8;
 8006aea:	0a33      	lsrs	r3, r6, #8
 8006aec:	4605      	mov	r5, r0
 8006aee:	4611      	mov	r1, r2
    _I2CBuffer[1] = index&0xFF;
    memcpy(&_I2CBuffer[2], pdata, count);
 8006af0:	1cb8      	adds	r0, r7, #2
 8006af2:	4622      	mov	r2, r4
    _I2CBuffer[0] = index>>8;
 8006af4:	703b      	strb	r3, [r7, #0]
    _I2CBuffer[1] = index&0xFF;
 8006af6:	707e      	strb	r6, [r7, #1]
    memcpy(&_I2CBuffer[2], pdata, count);
 8006af8:	f012 f91b 	bl	8018d32 <memcpy>
    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, count + 2);
 8006afc:	1ca3      	adds	r3, r4, #2
    int i2c_time_out = I2C_TIME_OUT_BASE+ count* I2C_TIME_OUT_BYTE;
 8006afe:	340c      	adds	r4, #12
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006b00:	f895 1398 	ldrb.w	r1, [r5, #920]	; 0x398
 8006b04:	463a      	mov	r2, r7
 8006b06:	f8d5 03a0 	ldr.w	r0, [r5, #928]	; 0x3a0
 8006b0a:	b29b      	uxth	r3, r3
 8006b0c:	9400      	str	r4, [sp, #0]
 8006b0e:	f7fa fc67 	bl	80013e0 <HAL_I2C_Master_Transmit>
    if (status_int != 0) {
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 8006b12:	2800      	cmp	r0, #0
 8006b14:	bf0c      	ite	eq
 8006b16:	2000      	moveq	r0, #0
 8006b18:	f06f 000c 	mvnne.w	r0, #12
    }
    VL53L1_PutI2cBus();
    return Status;
}
 8006b1c:	b003      	add	sp, #12
 8006b1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return VL53L1_ERROR_INVALID_PARAMS;
 8006b20:	f06f 0003 	mvn.w	r0, #3
}
 8006b24:	4770      	bx	lr
 8006b26:	bf00      	nop
 8006b28:	200197a0 	.word	0x200197a0

08006b2c <VL53L1_ReadMulti>:

// the ranging_sensor_comms.dll will take care of the page selection
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8006b2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b30:	460e      	mov	r6, r1
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    int32_t status_int;

    _I2CBuffer[0] = index>>8;
 8006b32:	4d15      	ldr	r5, [pc, #84]	; (8006b88 <VL53L1_ReadMulti+0x5c>)
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8006b34:	b082      	sub	sp, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006b36:	f04f 0e0c 	mov.w	lr, #12
    _I2CBuffer[0] = index>>8;
 8006b3a:	ea4f 2c16 	mov.w	ip, r6, lsr #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006b3e:	f890 1398 	ldrb.w	r1, [r0, #920]	; 0x398
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8006b42:	4604      	mov	r4, r0
 8006b44:	4690      	mov	r8, r2
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006b46:	f8d0 03a0 	ldr.w	r0, [r0, #928]	; 0x3a0
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8006b4a:	461f      	mov	r7, r3
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006b4c:	f8cd e000 	str.w	lr, [sp]
 8006b50:	462a      	mov	r2, r5
 8006b52:	2302      	movs	r3, #2
    _I2CBuffer[0] = index>>8;
 8006b54:	f885 c000 	strb.w	ip, [r5]
    _I2CBuffer[1] = index&0xFF;
 8006b58:	706e      	strb	r6, [r5, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006b5a:	f7fa fc41 	bl	80013e0 <HAL_I2C_Master_Transmit>
    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, 2);
    if (status_int != 0) {
 8006b5e:	b980      	cbnz	r0, 8006b82 <VL53L1_ReadMulti+0x56>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8006b60:	f894 1398 	ldrb.w	r1, [r4, #920]	; 0x398
    int i2c_time_out = I2C_TIME_OUT_BASE+ count* I2C_TIME_OUT_BYTE;
 8006b64:	f107 030a 	add.w	r3, r7, #10
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8006b68:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8006b6c:	4642      	mov	r2, r8
 8006b6e:	9300      	str	r3, [sp, #0]
 8006b70:	f041 0101 	orr.w	r1, r1, #1
 8006b74:	b2bb      	uxth	r3, r7
 8006b76:	f7fa fd03 	bl	8001580 <HAL_I2C_Master_Receive>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
        goto done;
    }
    status_int = _I2CRead(Dev, pdata, count);
    if (status_int != 0) {
 8006b7a:	b910      	cbnz	r0, 8006b82 <VL53L1_ReadMulti+0x56>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
    }
done:
    VL53L1_PutI2cBus();
    return Status;
}
 8006b7c:	b002      	add	sp, #8
 8006b7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 8006b82:	f06f 000c 	mvn.w	r0, #12
 8006b86:	e7f9      	b.n	8006b7c <VL53L1_ReadMulti+0x50>
 8006b88:	200197a0 	.word	0x200197a0

08006b8c <VL53L1_WrByte>:

VL53L1_Error VL53L1_WrByte(VL53L1_DEV Dev, uint16_t index, uint8_t data) {
 8006b8c:	b570      	push	{r4, r5, r6, lr}
 8006b8e:	460d      	mov	r5, r1
 8006b90:	b082      	sub	sp, #8
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    int32_t status_int;

    _I2CBuffer[0] = index>>8;
 8006b92:	4c0b      	ldr	r4, [pc, #44]	; (8006bc0 <VL53L1_WrByte+0x34>)
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006b94:	230d      	movs	r3, #13
    _I2CBuffer[0] = index>>8;
 8006b96:	0a2e      	lsrs	r6, r5, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006b98:	f890 1398 	ldrb.w	r1, [r0, #920]	; 0x398
    _I2CBuffer[1] = index&0xFF;
    _I2CBuffer[2] = data;
 8006b9c:	70a2      	strb	r2, [r4, #2]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006b9e:	4622      	mov	r2, r4
 8006ba0:	f8d0 03a0 	ldr.w	r0, [r0, #928]	; 0x3a0
 8006ba4:	9300      	str	r3, [sp, #0]
 8006ba6:	2303      	movs	r3, #3
    _I2CBuffer[0] = index>>8;
 8006ba8:	7026      	strb	r6, [r4, #0]
    _I2CBuffer[1] = index&0xFF;
 8006baa:	7065      	strb	r5, [r4, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006bac:	f7fa fc18 	bl	80013e0 <HAL_I2C_Master_Transmit>

    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, 3);
    if (status_int != 0) {
 8006bb0:	2800      	cmp	r0, #0
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
    }
    VL53L1_PutI2cBus();
    return Status;
}
 8006bb2:	bf14      	ite	ne
 8006bb4:	f06f 000c 	mvnne.w	r0, #12
 8006bb8:	2000      	moveq	r0, #0
 8006bba:	b002      	add	sp, #8
 8006bbc:	bd70      	pop	{r4, r5, r6, pc}
 8006bbe:	bf00      	nop
 8006bc0:	200197a0 	.word	0x200197a0

08006bc4 <VL53L1_RdWord>:
done:
    VL53L1_PutI2cBus();
    return Status;
}

VL53L1_Error VL53L1_RdWord(VL53L1_DEV Dev, uint16_t index, uint16_t *data) {
 8006bc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006bc8:	460e      	mov	r6, r1
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    int32_t status_int;

    _I2CBuffer[0] = index>>8;
 8006bca:	4c16      	ldr	r4, [pc, #88]	; (8006c24 <VL53L1_RdWord+0x60>)
VL53L1_Error VL53L1_RdWord(VL53L1_DEV Dev, uint16_t index, uint16_t *data) {
 8006bcc:	b082      	sub	sp, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006bce:	f04f 080c 	mov.w	r8, #12
    _I2CBuffer[0] = index>>8;
 8006bd2:	0a33      	lsrs	r3, r6, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006bd4:	f890 1398 	ldrb.w	r1, [r0, #920]	; 0x398
VL53L1_Error VL53L1_RdWord(VL53L1_DEV Dev, uint16_t index, uint16_t *data) {
 8006bd8:	4605      	mov	r5, r0
 8006bda:	4617      	mov	r7, r2
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006bdc:	f8d0 03a0 	ldr.w	r0, [r0, #928]	; 0x3a0
 8006be0:	4622      	mov	r2, r4
    _I2CBuffer[0] = index>>8;
 8006be2:	7023      	strb	r3, [r4, #0]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006be4:	2302      	movs	r3, #2
 8006be6:	f8cd 8000 	str.w	r8, [sp]
	_I2CBuffer[1] = index&0xFF;
 8006bea:	7066      	strb	r6, [r4, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006bec:	f7fa fbf8 	bl	80013e0 <HAL_I2C_Master_Transmit>
    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, 2);

    if( status_int ){
 8006bf0:	b9a0      	cbnz	r0, 8006c1c <VL53L1_RdWord+0x58>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8006bf2:	f895 1398 	ldrb.w	r1, [r5, #920]	; 0x398
 8006bf6:	2302      	movs	r3, #2
 8006bf8:	f8d5 03a0 	ldr.w	r0, [r5, #928]	; 0x3a0
 8006bfc:	4622      	mov	r2, r4
 8006bfe:	f8cd 8000 	str.w	r8, [sp]
 8006c02:	f041 0101 	orr.w	r1, r1, #1
 8006c06:	f7fa fcbb 	bl	8001580 <HAL_I2C_Master_Receive>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
        goto done;
    }
    status_int = _I2CRead(Dev, _I2CBuffer, 2);
    if (status_int != 0) {
 8006c0a:	b938      	cbnz	r0, 8006c1c <VL53L1_RdWord+0x58>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
        goto done;
    }

    *data = ((uint16_t)_I2CBuffer[0]<<8) + (uint16_t)_I2CBuffer[1];
 8006c0c:	7822      	ldrb	r2, [r4, #0]
 8006c0e:	7863      	ldrb	r3, [r4, #1]
 8006c10:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8006c14:	803b      	strh	r3, [r7, #0]
done:
    VL53L1_PutI2cBus();
    return Status;
}
 8006c16:	b002      	add	sp, #8
 8006c18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 8006c1c:	f06f 000c 	mvn.w	r0, #12
 8006c20:	e7f9      	b.n	8006c16 <VL53L1_RdWord+0x52>
 8006c22:	bf00      	nop
 8006c24:	200197a0 	.word	0x200197a0

08006c28 <VL53L1_WaitUs>:
	(void)pdev;
	HAL_Delay(wait_ms);
    return VL53L1_ERROR_NONE;
}

VL53L1_Error VL53L1_WaitUs(VL53L1_Dev_t *pdev, int32_t wait_us){
 8006c28:	b508      	push	{r3, lr}
	(void)pdev;
	HAL_Delay(wait_us/1000);
 8006c2a:	4b05      	ldr	r3, [pc, #20]	; (8006c40 <VL53L1_WaitUs+0x18>)
 8006c2c:	17c8      	asrs	r0, r1, #31
 8006c2e:	fb83 3101 	smull	r3, r1, r3, r1
 8006c32:	ebc0 10a1 	rsb	r0, r0, r1, asr #6
 8006c36:	f7fa f94b 	bl	8000ed0 <HAL_Delay>
    return VL53L1_ERROR_NONE;
}
 8006c3a:	2000      	movs	r0, #0
 8006c3c:	bd08      	pop	{r3, pc}
 8006c3e:	bf00      	nop
 8006c40:	10624dd3 	.word	0x10624dd3

08006c44 <VL53L1_WaitValueMaskEx>:
	uint32_t      timeout_ms,
	uint16_t      index,
	uint8_t       value,
	uint8_t       mask,
	uint32_t      poll_delay_ms)
{
 8006c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c48:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
 8006c4c:	460e      	mov	r6, r1

	VL53L1_Error status         = VL53L1_ERROR_NONE;
	uint32_t     start_time_ms = 0;
	uint32_t     current_time_ms = 0;
	uint32_t     polling_time_ms = 0;
	uint8_t      byte_value      = 0;
 8006c4e:	2700      	movs	r7, #0
{
 8006c50:	4615      	mov	r5, r2
 8006c52:	4604      	mov	r4, r0
#ifdef PAL_EXTENDED
	VL53L1_get_register_name(
			index,
			register_name);
#else
	VL53L1_COPYSTRING(register_name, "");
 8006c54:	f240 12ff 	movw	r2, #511	; 0x1ff
 8006c58:	4944      	ldr	r1, [pc, #272]	; (8006d6c <VL53L1_WaitValueMaskEx+0x128>)
 8006c5a:	a804      	add	r0, sp, #16
	uint8_t      byte_value      = 0;
 8006c5c:	f88d 700f 	strb.w	r7, [sp, #15]
{
 8006c60:	4699      	mov	r9, r3
 8006c62:	f89d 8238 	ldrb.w	r8, [sp, #568]	; 0x238
 8006c66:	9f8f      	ldr	r7, [sp, #572]	; 0x23c
	VL53L1_COPYSTRING(register_name, "");
 8006c68:	f012 f8b8 	bl	8018ddc <strncpy>
	VL53L1_set_trace_functions(VL53L1_TRACE_FUNCTION_NONE);
#endif

	/* wait until value is found, timeout reached on error occurred */

	while ((status == VL53L1_ERROR_NONE) &&
 8006c6c:	2e00      	cmp	r6, #0
 8006c6e:	d064      	beq.n	8006d3a <VL53L1_WaitValueMaskEx+0xf6>
 8006c70:	ea4f 2a15 	mov.w	sl, r5, lsr #8
 8006c74:	4e3e      	ldr	r6, [pc, #248]	; (8006d70 <VL53L1_WaitValueMaskEx+0x12c>)
 8006c76:	b2ed      	uxtb	r5, r5
 8006c78:	bbaf      	cbnz	r7, 8006ce6 <VL53L1_WaitValueMaskEx+0xa2>
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006c7a:	f04f 0b0c 	mov.w	fp, #12
 8006c7e:	4637      	mov	r7, r6
 8006c80:	e010      	b.n	8006ca4 <VL53L1_WaitValueMaskEx+0x60>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8006c82:	f894 c398 	ldrb.w	ip, [r4, #920]	; 0x398
 8006c86:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8006c8a:	9100      	str	r1, [sp, #0]
 8006c8c:	ea4c 0103 	orr.w	r1, ip, r3
 8006c90:	f7fa fc76 	bl	8001580 <HAL_I2C_Master_Receive>
    if (status_int != 0) {
 8006c94:	2800      	cmp	r0, #0
 8006c96:	d15b      	bne.n	8006d50 <VL53L1_WaitValueMaskEx+0x10c>
			status = VL53L1_RdByte(
							pdev,
							index,
							&byte_value);

		if ((byte_value & mask) == value)
 8006c98:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8006c9c:	ea08 0303 	and.w	r3, r8, r3
 8006ca0:	454b      	cmp	r3, r9
 8006ca2:	d01b      	beq.n	8006cdc <VL53L1_WaitValueMaskEx+0x98>
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006ca4:	f894 1398 	ldrb.w	r1, [r4, #920]	; 0x398
 8006ca8:	2302      	movs	r3, #2
 8006caa:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8006cae:	463a      	mov	r2, r7
 8006cb0:	f8cd b000 	str.w	fp, [sp]
	_I2CBuffer[0] = index>>8;
 8006cb4:	f886 a000 	strb.w	sl, [r6]
	_I2CBuffer[1] = index&0xFF;
 8006cb8:	7075      	strb	r5, [r6, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006cba:	f7fa fb91 	bl	80013e0 <HAL_I2C_Master_Transmit>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8006cbe:	210b      	movs	r1, #11
 8006cc0:	2301      	movs	r3, #1
 8006cc2:	f10d 020f 	add.w	r2, sp, #15
    if( status_int ){
 8006cc6:	2800      	cmp	r0, #0
 8006cc8:	d0db      	beq.n	8006c82 <VL53L1_WaitValueMaskEx+0x3e>
		if ((byte_value & mask) == value)
 8006cca:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8006cce:	ea08 0803 	and.w	r8, r8, r3
 8006cd2:	45c1      	cmp	r9, r8
 8006cd4:	d046      	beq.n	8006d64 <VL53L1_WaitValueMaskEx+0x120>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 8006cd6:	f06f 000c 	mvn.w	r0, #12
 8006cda:	e000      	b.n	8006cde <VL53L1_WaitValueMaskEx+0x9a>
	/* Restore function logging */
	VL53L1_set_trace_functions(trace_functions);
#endif

	if (found == 0 && status == VL53L1_ERROR_NONE)
		status = VL53L1_ERROR_TIME_OUT;
 8006cdc:	2000      	movs	r0, #0

	return status;
}
 8006cde:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
 8006ce2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006ce6:	46b3      	mov	fp, r6
 8006ce8:	978f      	str	r7, [sp, #572]	; 0x23c
 8006cea:	e012      	b.n	8006d12 <VL53L1_WaitValueMaskEx+0xce>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8006cec:	f894 c398 	ldrb.w	ip, [r4, #920]	; 0x398
 8006cf0:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8006cf4:	9100      	str	r1, [sp, #0]
 8006cf6:	ea4c 0103 	orr.w	r1, ip, r3
 8006cfa:	f7fa fc41 	bl	8001580 <HAL_I2C_Master_Receive>
    if (status_int != 0) {
 8006cfe:	bb38      	cbnz	r0, 8006d50 <VL53L1_WaitValueMaskEx+0x10c>
		if ((byte_value & mask) == value)
 8006d00:	f89d 300f 	ldrb.w	r3, [sp, #15]
	HAL_Delay(wait_ms);
 8006d04:	988f      	ldr	r0, [sp, #572]	; 0x23c
		if ((byte_value & mask) == value)
 8006d06:	ea08 0303 	and.w	r3, r8, r3
 8006d0a:	4599      	cmp	r9, r3
 8006d0c:	d0e6      	beq.n	8006cdc <VL53L1_WaitValueMaskEx+0x98>
	HAL_Delay(wait_ms);
 8006d0e:	f7fa f8df 	bl	8000ed0 <HAL_Delay>
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006d12:	270c      	movs	r7, #12
 8006d14:	f894 1398 	ldrb.w	r1, [r4, #920]	; 0x398
 8006d18:	2302      	movs	r3, #2
 8006d1a:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8006d1e:	465a      	mov	r2, fp
 8006d20:	9700      	str	r7, [sp, #0]
	_I2CBuffer[0] = index>>8;
 8006d22:	f886 a000 	strb.w	sl, [r6]
	_I2CBuffer[1] = index&0xFF;
 8006d26:	7075      	strb	r5, [r6, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8006d28:	f7fa fb5a 	bl	80013e0 <HAL_I2C_Master_Transmit>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8006d2c:	210b      	movs	r1, #11
 8006d2e:	2301      	movs	r3, #1
 8006d30:	f10d 020f 	add.w	r2, sp, #15
    if( status_int ){
 8006d34:	2800      	cmp	r0, #0
 8006d36:	d0d9      	beq.n	8006cec <VL53L1_WaitValueMaskEx+0xa8>
 8006d38:	e7c7      	b.n	8006cca <VL53L1_WaitValueMaskEx+0x86>
	VL53L1_Error status         = VL53L1_ERROR_NONE;
 8006d3a:	4630      	mov	r0, r6
	if (found == 0 && status == VL53L1_ERROR_NONE)
 8006d3c:	4306      	orrs	r6, r0
 8006d3e:	b2f6      	uxtb	r6, r6
		status = VL53L1_ERROR_TIME_OUT;
 8006d40:	2e00      	cmp	r6, #0
 8006d42:	bf08      	it	eq
 8006d44:	f06f 0006 	mvneq.w	r0, #6
}
 8006d48:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
 8006d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if ((byte_value & mask) == value)
 8006d50:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8006d54:	ea08 0803 	and.w	r8, r8, r3
 8006d58:	45c1      	cmp	r9, r8
 8006d5a:	d0bc      	beq.n	8006cd6 <VL53L1_WaitValueMaskEx+0x92>
 8006d5c:	2600      	movs	r6, #0
 8006d5e:	f06f 000c 	mvn.w	r0, #12
 8006d62:	e7eb      	b.n	8006d3c <VL53L1_WaitValueMaskEx+0xf8>
			found = 1;
 8006d64:	2601      	movs	r6, #1
		if ((byte_value & mask) == value)
 8006d66:	f06f 000c 	mvn.w	r0, #12
 8006d6a:	e7e7      	b.n	8006d3c <VL53L1_WaitValueMaskEx+0xf8>
 8006d6c:	08019848 	.word	0x08019848
 8006d70:	200197a0 	.word	0x200197a0

08006d74 <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 8006d74:	b508      	push	{r3, lr}
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 8006d76:	4805      	ldr	r0, [pc, #20]	; (8006d8c <GUI_X_Config+0x18>)
 8006d78:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
 8006d7c:	f00a fb46 	bl	801140c <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 8006d80:	4803      	ldr	r0, [pc, #12]	; (8006d90 <GUI_X_Config+0x1c>)
}
 8006d82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  GUI_SetDefaultFont(GUI_FONT_6X8);
 8006d86:	f009 beb3 	b.w	8010af0 <GUI_SetDefaultFont>
 8006d8a:	bf00      	nop
 8006d8c:	20000420 	.word	0x20000420
 8006d90:	08019990 	.word	0x08019990

08006d94 <GUI_X_GetTime>:
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
  return OS_TimeMS; 
 8006d94:	4b01      	ldr	r3, [pc, #4]	; (8006d9c <GUI_X_GetTime+0x8>)
 8006d96:	6818      	ldr	r0, [r3, #0]
}
 8006d98:	4770      	bx	lr
 8006d9a:	bf00      	nop
 8006d9c:	200198a0 	.word	0x200198a0

08006da0 <GUI_X_Delay>:

void GUI_X_Delay(int ms) { 
  int tEnd = OS_TimeMS + ms;
 8006da0:	4a03      	ldr	r2, [pc, #12]	; (8006db0 <GUI_X_Delay+0x10>)
 8006da2:	6813      	ldr	r3, [r2, #0]
 8006da4:	4418      	add	r0, r3
  while ((tEnd - OS_TimeMS) > 0);
 8006da6:	6813      	ldr	r3, [r2, #0]
 8006da8:	1ac3      	subs	r3, r0, r3
 8006daa:	2b00      	cmp	r3, #0
 8006dac:	dcfb      	bgt.n	8006da6 <GUI_X_Delay+0x6>
}
 8006dae:	4770      	bx	lr
 8006db0:	200198a0 	.word	0x200198a0

08006db4 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8006db4:	4770      	bx	lr
 8006db6:	bf00      	nop

08006db8 <GUI_TOUCH_X_ActivateX>:



void GUI_TOUCH_X_ActivateX(void)
{
}
 8006db8:	4770      	bx	lr
 8006dba:	bf00      	nop

08006dbc <GUI_TOUCH_X_ActivateY>:
 8006dbc:	4770      	bx	lr
 8006dbe:	bf00      	nop

08006dc0 <GUI_TOUCH_X_MeasureX>:
void GUI_TOUCH_X_ActivateY(void)
{
}
int  GUI_TOUCH_X_MeasureX(void)
{
 8006dc0:	b508      	push	{r3, lr}
  return STMPE610_GetX_TOUCH_RAW();
 8006dc2:	f7fc f9ff 	bl	80031c4 <STMPE610_GetX_TOUCH_RAW>
}
 8006dc6:	bd08      	pop	{r3, pc}

08006dc8 <GUI_TOUCH_X_MeasureY>:
int  GUI_TOUCH_X_MeasureY(void)
{
 8006dc8:	b508      	push	{r3, lr}
  return STMPE610_GetY_TOUCH_RAW();
 8006dca:	f7fc fa01 	bl	80031d0 <STMPE610_GetY_TOUCH_RAW>
}
 8006dce:	bd08      	pop	{r3, pc}

08006dd0 <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 8006dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 8006dd2:	2400      	movs	r4, #0
void LCD_X_Config(void) {
 8006dd4:	b0a3      	sub	sp, #140	; 0x8c
  GUI_PORT_API PortAPI = {0};
 8006dd6:	2268      	movs	r2, #104	; 0x68
  GUIDRV_FlexColor_Config(pDevice, &Config);
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = SSD1963_WriteCommand;
  PortAPI.pfWrite16_A1  = SSD1963_WriteData;
 8006dd8:	4f23      	ldr	r7, [pc, #140]	; (8006e68 <LCD_X_Config+0x98>)
  GUI_PORT_API PortAPI = {0};
 8006dda:	4621      	mov	r1, r4
 8006ddc:	a808      	add	r0, sp, #32
  CONFIG_FLEXCOLOR Config = {0};
 8006dde:	9407      	str	r4, [sp, #28]
  PortAPI.pfWriteM16_A1 = SSD1963_WriteDataMultiple;
 8006de0:	4e22      	ldr	r6, [pc, #136]	; (8006e6c <LCD_X_Config+0x9c>)
  CONFIG_FLEXCOLOR Config = {0};
 8006de2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8006de6:	e9cd 4405 	strd	r4, r4, [sp, #20]
  GUI_PORT_API PortAPI = {0};
 8006dea:	f011 ffc6 	bl	8018d7a <memset>
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
 8006dee:	4623      	mov	r3, r4
 8006df0:	4622      	mov	r2, r4
 8006df2:	491f      	ldr	r1, [pc, #124]	; (8006e70 <LCD_X_Config+0xa0>)
 8006df4:	481f      	ldr	r0, [pc, #124]	; (8006e74 <LCD_X_Config+0xa4>)
 8006df6:	f009 fe11 	bl	8010a1c <GUI_DEVICE_CreateAndLink>
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8006dfa:	f44f 7288 	mov.w	r2, #272	; 0x110
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
 8006dfe:	4605      	mov	r5, r0
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8006e00:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8006e04:	4620      	mov	r0, r4
 8006e06:	f007 fa4d 	bl	800e2a4 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, XSIZE_PHYS, YSIZE_PHYS);
 8006e0a:	f44f 7288 	mov.w	r2, #272	; 0x110
 8006e0e:	4620      	mov	r0, r4
 8006e10:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8006e14:	f007 fa2e 	bl	800e274 <LCD_SetVSizeEx>
  GUIDRV_FlexColor_Config(pDevice, &Config);
 8006e18:	a903      	add	r1, sp, #12
 8006e1a:	4628      	mov	r0, r5
  Config.Orientation = 0;
 8006e1c:	9405      	str	r4, [sp, #20]
  GUIDRV_FlexColor_Config(pDevice, &Config);
 8006e1e:	f007 f9c8 	bl	800e1b2 <GUIDRV_FlexColor_Config>
  PortAPI.pfWrite16_A0  = SSD1963_WriteCommand;
 8006e22:	f8df c05c 	ldr.w	ip, [pc, #92]	; 8006e80 <LCD_X_Config+0xb0>
 // PortAPI.pfReadM16_A1  = SSD1963_ReadData;
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66720, GUIDRV_FLEXCOLOR_M16C0B16);
 8006e26:	a908      	add	r1, sp, #32
 8006e28:	4628      	mov	r0, r5
 8006e2a:	4b13      	ldr	r3, [pc, #76]	; (8006e78 <LCD_X_Config+0xa8>)
 8006e2c:	4a13      	ldr	r2, [pc, #76]	; (8006e7c <LCD_X_Config+0xac>)
  PortAPI.pfWriteM16_A1 = SSD1963_WriteDataMultiple;
 8006e2e:	9613      	str	r6, [sp, #76]	; 0x4c
  PortAPI.pfWrite16_A1  = SSD1963_WriteData;
 8006e30:	e9cd c710 	strd	ip, r7, [sp, #64]	; 0x40
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66720, GUIDRV_FLEXCOLOR_M16C0B16);
 8006e34:	f007 f9db 	bl	800e1ee <GUIDRV_FlexColor_SetFunc>

  GUI_TOUCH_Calibrate(GUI_COORD_X, 0, 480, GUI_TOUCH_AD_LEFT , GUI_TOUCH_AD_RIGHT);
 8006e38:	f640 7274 	movw	r2, #3956	; 0xf74
 8006e3c:	4621      	mov	r1, r4
 8006e3e:	4620      	mov	r0, r4
 8006e40:	9200      	str	r2, [sp, #0]
 8006e42:	2392      	movs	r3, #146	; 0x92
 8006e44:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8006e48:	f008 fcda 	bl	800f800 <GUI_TOUCH_Calibrate>
  GUI_TOUCH_Calibrate(GUI_COORD_Y, 0, 272, GUI_TOUCH_AD_TOP, GUI_TOUCH_AD_BOTTOM);
 8006e4c:	f640 7203 	movw	r2, #3843	; 0xf03
 8006e50:	4621      	mov	r1, r4
 8006e52:	f44f 7387 	mov.w	r3, #270	; 0x10e
 8006e56:	9200      	str	r2, [sp, #0]
 8006e58:	f44f 7288 	mov.w	r2, #272	; 0x110
 8006e5c:	2001      	movs	r0, #1
 8006e5e:	f008 fccf 	bl	800f800 <GUI_TOUCH_Calibrate>

}
 8006e62:	b023      	add	sp, #140	; 0x8c
 8006e64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e66:	bf00      	nop
 8006e68:	08002519 	.word	0x08002519
 8006e6c:	0800256d 	.word	0x0800256d
 8006e70:	0801f294 	.word	0x0801f294
 8006e74:	0801f144 	.word	0x0801f144
 8006e78:	0800dbb9 	.word	0x0800dbb9
 8006e7c:	0800d51d 	.word	0x0800d51d
 8006e80:	080024c5 	.word	0x080024c5

08006e84 <LCD_X_DisplayDriver>:
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 8006e84:	2901      	cmp	r1, #1
 8006e86:	d106      	bne.n	8006e96 <LCD_X_DisplayDriver+0x12>
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 8006e88:	b508      	push	{r3, lr}
    // display controller and put it into operation. If the display
    // controller is not initialized by any external routine this needs
    // to be adapted by the customer...
    //
    // ...
	  SSD1963_Init();
 8006e8a:	f7fb fbab 	bl	80025e4 <SSD1963_Init>
	  STMPE610_Init();
 8006e8e:	f7fb ff1f 	bl	8002cd0 <STMPE610_Init>
    return 0;
 8006e92:	2000      	movs	r0, #0
  }
  default:
    r = -1;
  }
  return r;
}
 8006e94:	bd08      	pop	{r3, pc}
  return r;
 8006e96:	f04f 30ff 	mov.w	r0, #4294967295
}
 8006e9a:	4770      	bx	lr

08006e9c <HAL_SYSTICK_Callback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_SYSTICK_Callback(void)
{
	OS_TimeMS++;
 8006e9c:	4a02      	ldr	r2, [pc, #8]	; (8006ea8 <HAL_SYSTICK_Callback+0xc>)
 8006e9e:	6813      	ldr	r3, [r2, #0]
 8006ea0:	3301      	adds	r3, #1
 8006ea2:	6013      	str	r3, [r2, #0]
}
 8006ea4:	4770      	bx	lr
 8006ea6:	bf00      	nop
 8006ea8:	200198a0 	.word	0x200198a0

08006eac <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8006eac:	b5f0      	push	{r4, r5, r6, r7, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8006eae:	2400      	movs	r4, #0
{
 8006eb0:	b0b5      	sub	sp, #212	; 0xd4
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8006eb2:	2230      	movs	r2, #48	; 0x30
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8006eb4:	2502      	movs	r5, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8006eb6:	4621      	mov	r1, r4
 8006eb8:	a807      	add	r0, sp, #28
 8006eba:	f011 ff5e 	bl	8018d7a <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8006ebe:	4621      	mov	r1, r4
 8006ec0:	2284      	movs	r2, #132	; 0x84
 8006ec2:	a813      	add	r0, sp, #76	; 0x4c
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8006ec4:	9406      	str	r4, [sp, #24]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8006ec6:	2701      	movs	r7, #1
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8006ec8:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8006ecc:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8006ed0:	e9cd 4404 	strd	r4, r4, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8006ed4:	f011 ff51 	bl	8018d7a <memset>
  HAL_PWR_EnableBkUpAccess();
 8006ed8:	f7fa fcde 	bl	8001898 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_PWR_CLK_ENABLE();
 8006edc:	4a1f      	ldr	r2, [pc, #124]	; (8006f5c <SystemClock_Config+0xb0>)
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8006ede:	4b20      	ldr	r3, [pc, #128]	; (8006f60 <SystemClock_Config+0xb4>)
  RCC_OscInitStruct.PLL.PLLM = 25;
  RCC_OscInitStruct.PLL.PLLN = 384;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 8;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8006ee0:	a807      	add	r0, sp, #28
  __HAL_RCC_PWR_CLK_ENABLE();
 8006ee2:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8006ee4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8006ee8:	6411      	str	r1, [r2, #64]	; 0x40
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8006eea:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  __HAL_RCC_PWR_CLK_ENABLE();
 8006eee:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8006ef0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8006ef4:	9200      	str	r2, [sp, #0]
 8006ef6:	9a00      	ldr	r2, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8006ef8:	681a      	ldr	r2, [r3, #0]
 8006efa:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8006efe:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.PLL.PLLN = 384;
 8006f00:	f44f 72c0 	mov.w	r2, #384	; 0x180
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8006f04:	681b      	ldr	r3, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8006f06:	9108      	str	r1, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 25;
 8006f08:	2119      	movs	r1, #25
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8006f0a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
  RCC_OscInitStruct.PLL.PLLN = 384;
 8006f0e:	9210      	str	r2, [sp, #64]	; 0x40
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8006f10:	9707      	str	r7, [sp, #28]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8006f12:	9301      	str	r3, [sp, #4]
 8006f14:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.PLL.PLLQ = 8;
 8006f16:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8006f18:	950d      	str	r5, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLQ = 8;
 8006f1a:	9312      	str	r3, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8006f1c:	9511      	str	r5, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLM = 25;
 8006f1e:	e9cd 610e 	strd	r6, r1, [sp, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8006f22:	f7fa fcfd 	bl	8001920 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8006f26:	260f      	movs	r6, #15
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8006f28:	f7fa fcbe 	bl	80018a8 <HAL_PWREx_EnableOverDrive>
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8006f2c:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8006f30:	f44f 5380 	mov.w	r3, #4096	; 0x1000

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 8006f34:	2106      	movs	r1, #6
 8006f36:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8006f38:	9602      	str	r6, [sp, #8]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8006f3a:	e9cd 2305 	strd	r2, r3, [sp, #20]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8006f3e:	e9cd 5403 	strd	r5, r4, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 8006f42:	f7fa fee7 	bl	8001d14 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C2;
 8006f46:	f44f 4340 	mov.w	r3, #49152	; 0xc000
  PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
  PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8006f4a:	a813      	add	r0, sp, #76	; 0x4c
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C2;
 8006f4c:	9313      	str	r3, [sp, #76]	; 0x4c
  PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 8006f4e:	e9cd 442c 	strd	r4, r4, [sp, #176]	; 0xb0
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8006f52:	f7fa ffab 	bl	8001eac <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 8006f56:	b035      	add	sp, #212	; 0xd4
 8006f58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006f5a:	bf00      	nop
 8006f5c:	40023800 	.word	0x40023800
 8006f60:	40007000 	.word	0x40007000

08006f64 <main>:
{
 8006f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f68:	ed2d 8b04 	vpush	{d8-d9}
 8006f6c:	f2ad 4d1c 	subw	sp, sp, #1052	; 0x41c
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006f70:	2400      	movs	r4, #0
  HAL_Init();
 8006f72:	f7f9 ff8f 	bl	8000e94 <HAL_Init>
  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);

  /*Configure GPIO pin : PG15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006f76:	2501      	movs	r5, #1
  SystemClock_Config();
 8006f78:	f7ff ff98 	bl	8006eac <SystemClock_Config>
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8006f7c:	4bb9      	ldr	r3, [pc, #740]	; (8007264 <main+0x300>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006f7e:	9421      	str	r4, [sp, #132]	; 0x84
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_15, GPIO_PIN_RESET);
 8006f80:	4622      	mov	r2, r4
 8006f82:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  hi2c1.Instance = I2C1;
 8006f86:	4fb8      	ldr	r7, [pc, #736]	; (8007268 <main+0x304>)
  hi2c1.Init.Timing = 0x20303E5D;
 8006f88:	f8df 8314 	ldr.w	r8, [pc, #788]	; 80072a0 <main+0x33c>
		 interMeasurementPeriod = ( (IMP_HIGH - timingBudget+4) * ((float)GetInterMeasPeriod_Percentage() / 100) ) + timingBudget+4;
 8006f8c:	ed9f 8ab7 	vldr	s16, [pc, #732]	; 800726c <main+0x308>
			 timingBudget = ( (TB_HIGH - TB_MEDIUM_LOW) * ((float)GetTimingBudget_Percentage() / 100) ) + TB_MEDIUM_LOW;
 8006f90:	ed9f 9ab7 	vldr	s18, [pc, #732]	; 8007270 <main+0x30c>
 8006f94:	eddf 8ab7 	vldr	s17, [pc, #732]	; 8007274 <main+0x310>
			 timingBudget = ( (TB_HIGH - TB_SHORT_LOW) * ((float)GetTimingBudget_Percentage() / 100) ) + TB_SHORT_LOW;
 8006f98:	eddf 9ab7 	vldr	s19, [pc, #732]	; 8007278 <main+0x314>
 8006f9c:	f8df a304 	ldr.w	sl, [pc, #772]	; 80072a4 <main+0x340>
 8006fa0:	f8df 9304 	ldr.w	r9, [pc, #772]	; 80072a8 <main+0x344>
 8006fa4:	f8df b304 	ldr.w	fp, [pc, #772]	; 80072ac <main+0x348>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006fa8:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
 8006fac:	e9cd 441f 	strd	r4, r4, [sp, #124]	; 0x7c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8006fb0:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8006fb2:	f040 0004 	orr.w	r0, r0, #4
 8006fb6:	6318      	str	r0, [r3, #48]	; 0x30
 8006fb8:	6b1e      	ldr	r6, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_15, GPIO_PIN_RESET);
 8006fba:	48b0      	ldr	r0, [pc, #704]	; (800727c <main+0x318>)
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8006fbc:	f006 0604 	and.w	r6, r6, #4
 8006fc0:	9611      	str	r6, [sp, #68]	; 0x44
 8006fc2:	9e11      	ldr	r6, [sp, #68]	; 0x44
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8006fc4:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006fc6:	f046 0620 	orr.w	r6, r6, #32
 8006fca:	631e      	str	r6, [r3, #48]	; 0x30
 8006fcc:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006fce:	f006 0620 	and.w	r6, r6, #32
 8006fd2:	9612      	str	r6, [sp, #72]	; 0x48
 8006fd4:	9e12      	ldr	r6, [sp, #72]	; 0x48
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8006fd6:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006fd8:	f046 0680 	orr.w	r6, r6, #128	; 0x80
 8006fdc:	631e      	str	r6, [r3, #48]	; 0x30
 8006fde:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006fe0:	f006 0680 	and.w	r6, r6, #128	; 0x80
 8006fe4:	9613      	str	r6, [sp, #76]	; 0x4c
 8006fe6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8006fe8:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006fea:	f046 0640 	orr.w	r6, r6, #64	; 0x40
 8006fee:	631e      	str	r6, [r3, #48]	; 0x30
 8006ff0:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006ff2:	f006 0640 	and.w	r6, r6, #64	; 0x40
 8006ff6:	9614      	str	r6, [sp, #80]	; 0x50
 8006ff8:	9e14      	ldr	r6, [sp, #80]	; 0x50
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8006ffa:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006ffc:	f046 0602 	orr.w	r6, r6, #2
 8007000:	631e      	str	r6, [r3, #48]	; 0x30
 8007002:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  hi2c2.Instance = I2C2;
 8007004:	4e9e      	ldr	r6, [pc, #632]	; (8007280 <main+0x31c>)
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8007006:	f003 0302 	and.w	r3, r3, #2
 800700a:	9315      	str	r3, [sp, #84]	; 0x54
 800700c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_15, GPIO_PIN_RESET);
 800700e:	f7fa f8dd 	bl	80011cc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 8007012:	4622      	mov	r2, r4
 8007014:	2108      	movs	r1, #8
 8007016:	489b      	ldr	r0, [pc, #620]	; (8007284 <main+0x320>)
 8007018:	f7fa f8d8 	bl	80011cc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 800701c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8007020:	a91d      	add	r1, sp, #116	; 0x74
 8007022:	4896      	ldr	r0, [pc, #600]	; (800727c <main+0x318>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8007024:	e9cd 351d 	strd	r3, r5, [sp, #116]	; 0x74
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8007028:	e9cd 441f 	strd	r4, r4, [sp, #124]	; 0x7c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800702c:	f7f9 ffc8 	bl	8000fc0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8007030:	2308      	movs	r3, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8007032:	a91d      	add	r1, sp, #116	; 0x74
 8007034:	4893      	ldr	r0, [pc, #588]	; (8007284 <main+0x320>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8007036:	9420      	str	r4, [sp, #128]	; 0x80
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8007038:	931d      	str	r3, [sp, #116]	; 0x74
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800703a:	e9cd 541e 	strd	r5, r4, [sp, #120]	; 0x78
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800703e:	f7f9 ffbf 	bl	8000fc0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB4 */
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 8007042:	2210      	movs	r2, #16
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007044:	2302      	movs	r3, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8007046:	a91d      	add	r1, sp, #116	; 0x74
 8007048:	488e      	ldr	r0, [pc, #568]	; (8007284 <main+0x320>)
  GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800704a:	9321      	str	r3, [sp, #132]	; 0x84
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800704c:	e9cd 231d 	strd	r2, r3, [sp, #116]	; 0x74
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8007050:	e9cd 441f 	strd	r4, r4, [sp, #124]	; 0x7c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8007054:	f7f9 ffb4 	bl	8000fc0 <HAL_GPIO_Init>
  hi2c1.Instance = I2C1;
 8007058:	4b8b      	ldr	r3, [pc, #556]	; (8007288 <main+0x324>)
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800705a:	4638      	mov	r0, r7
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800705c:	623c      	str	r4, [r7, #32]
  hi2c1.Init.Timing = 0x20303E5D;
 800705e:	e9c7 3800 	strd	r3, r8, [r7]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8007062:	e9c7 4502 	strd	r4, r5, [r7, #8]
  hi2c1.Init.OwnAddress2 = 0;
 8007066:	e9c7 4404 	strd	r4, r4, [r7, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800706a:	e9c7 4406 	strd	r4, r4, [r7, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800706e:	f7fa f963 	bl	8001338 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8007072:	4621      	mov	r1, r4
 8007074:	4638      	mov	r0, r7
 8007076:	f7fa fbbb 	bl	80017f0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 800707a:	4621      	mov	r1, r4
 800707c:	4638      	mov	r0, r7
 800707e:	f7fa fbe1 	bl	8001844 <HAL_I2CEx_ConfigDigitalFilter>
  hi2c2.Instance = I2C2;
 8007082:	4b82      	ldr	r3, [pc, #520]	; (800728c <main+0x328>)
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8007084:	4630      	mov	r0, r6
  hi2c2.Instance = I2C2;
 8007086:	6033      	str	r3, [r6, #0]
  hi2c2.Init.OwnAddress1 = 0;
 8007088:	e9c6 8401 	strd	r8, r4, [r6, #4]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800708c:	e9c6 5403 	strd	r5, r4, [r6, #12]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8007090:	e9c6 4405 	strd	r4, r4, [r6, #20]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8007094:	e9c6 4407 	strd	r4, r4, [r6, #28]
  Init_TOUCH_GPIO(hi2c1);
 8007098:	f107 0510 	add.w	r5, r7, #16
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800709c:	f7fa f94c 	bl	8001338 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80070a0:	4621      	mov	r1, r4
 80070a2:	4630      	mov	r0, r6
 80070a4:	f7fa fba4 	bl	80017f0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 80070a8:	4621      	mov	r1, r4
 80070aa:	4630      	mov	r0, r6
  Init_TOUCH_GPIO(hi2c1);
 80070ac:	466c      	mov	r4, sp
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 80070ae:	f7fa fbc9 	bl	8001844 <HAL_I2CEx_ConfigDigitalFilter>
 80070b2:	f8df 81fc 	ldr.w	r8, [pc, #508]	; 80072b0 <main+0x34c>
  Init_LCD_GPIO();
 80070b6:	f7fb f98d 	bl	80023d4 <Init_LCD_GPIO>
  Init_TOUCH_GPIO(hi2c1);
 80070ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80070bc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80070be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80070c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80070c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80070c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80070c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80070ca:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80070ce:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80070d2:	f7fb fdeb 	bl	8002cac <Init_TOUCH_GPIO>
 80070d6:	4d6e      	ldr	r5, [pc, #440]	; (8007290 <main+0x32c>)
  STMPE610_Init();
 80070d8:	f7fb fdfa 	bl	8002cd0 <STMPE610_Init>
	 GUI_SetFont(&GUI_Font20B_ASCII);
 80070dc:	4f6d      	ldr	r7, [pc, #436]	; (8007294 <main+0x330>)
  DisplayApp_Init();
 80070de:	f000 fab9 	bl	8007654 <DisplayApp_Init>
  Dev->I2cDevAddr = 0x52;
 80070e2:	2352      	movs	r3, #82	; 0x52
  VL53L1_WaitDeviceBooted( Dev );
 80070e4:	a81d      	add	r0, sp, #116	; 0x74
  Dev->I2cHandle = &hi2c2;
 80070e6:	f8cd 6414 	str.w	r6, [sp, #1044]	; 0x414
  Dev->I2cDevAddr = 0x52;
 80070ea:	f88d 340c 	strb.w	r3, [sp, #1036]	; 0x40c
  VL53L1_WaitDeviceBooted( Dev );
 80070ee:	f7fc f8ff 	bl	80032f0 <VL53L1_WaitDeviceBooted>
 80070f2:	4e69      	ldr	r6, [pc, #420]	; (8007298 <main+0x334>)
  VL53L1_DataInit( Dev );
 80070f4:	a81d      	add	r0, sp, #116	; 0x74
 80070f6:	f7fc f8dd 	bl	80032b4 <VL53L1_DataInit>
  VL53L1_StaticInit( Dev );
 80070fa:	a81d      	add	r0, sp, #116	; 0x74
 80070fc:	f7fc fa1a 	bl	8003534 <VL53L1_StaticInit>
	 X_koordinata=STMPE610_GetX_TOUCH();
 8007100:	f7fc f802 	bl	8003108 <STMPE610_GetX_TOUCH>
 8007104:	f8aa 0000 	strh.w	r0, [sl]
	 Y_koordinata=STMPE610_GetY_TOUCH();
 8007108:	f7fc f82e 	bl	8003168 <STMPE610_GetY_TOUCH>
 800710c:	f8a9 0000 	strh.w	r0, [r9]
	 STMPE610_read_xyz();
 8007110:	f7fb feea 	bl	8002ee8 <STMPE610_read_xyz>
	 GUI_TOUCH_Exec();
 8007114:	f008 fbd2 	bl	800f8bc <GUI_TOUCH_Exec>
	 keyPressed=GUI_GetKey();
 8007118:	f009 f898 	bl	801024c <GUI_GetKey>
 800711c:	f8a8 0000 	strh.w	r0, [r8]
	 GUI_Delay(1);
 8007120:	2001      	movs	r0, #1
 8007122:	f008 fb59 	bl	800f7d8 <GUI_Delay>
	 GUI_SetColor(GUI_BLACK);
 8007126:	2000      	movs	r0, #0
 8007128:	f008 ff5a 	bl	800ffe0 <GUI_SetColor>
	 GUI_SetFont(&GUI_Font20B_ASCII);
 800712c:	4638      	mov	r0, r7
 800712e:	f008 ff29 	bl	800ff84 <GUI_SetFont>
	 if(OK_Button())
 8007132:	f000 faf5 	bl	8007720 <OK_Button>
 8007136:	bb20      	cbnz	r0, 8007182 <main+0x21e>
	 if(START_Button())
 8007138:	f000 fb02 	bl	8007740 <START_Button>
 800713c:	b110      	cbz	r0, 8007144 <main+0x1e0>
		 start = true;
 800713e:	f04f 0301 	mov.w	r3, #1
 8007142:	702b      	strb	r3, [r5, #0]
	 if(STOP_Button())
 8007144:	f000 fb0c 	bl	8007760 <STOP_Button>
 8007148:	b148      	cbz	r0, 800715e <main+0x1fa>
		 start = false;
 800714a:	2300      	movs	r3, #0
 800714c:	702b      	strb	r3, [r5, #0]
		 VL53L1_StopMeasurement(Dev);
 800714e:	a81d      	add	r0, sp, #116	; 0x74
 8007150:	f7fc faf6 	bl	8003740 <VL53L1_StopMeasurement>
		 WriteDistance(-1);
 8007154:	f04f 30ff 	mov.w	r0, #4294967295
 8007158:	f000 fa98 	bl	800768c <WriteDistance>
 800715c:	e7d0      	b.n	8007100 <main+0x19c>
	 if(start)
 800715e:	782b      	ldrb	r3, [r5, #0]
 8007160:	2b00      	cmp	r3, #0
 8007162:	d0f4      	beq.n	800714e <main+0x1ea>
		 VL53L1_StartMeasurement( Dev );
 8007164:	a81d      	add	r0, sp, #116	; 0x74
 8007166:	f7fc fa37 	bl	80035d8 <VL53L1_StartMeasurement>
		 VL53L1_WaitMeasurementDataReady( Dev );
 800716a:	a81d      	add	r0, sp, #116	; 0x74
 800716c:	f7fc fb10 	bl	8003790 <VL53L1_WaitMeasurementDataReady>
		 VL53L1_GetRangingMeasurementData( Dev, &RangingData );
 8007170:	a916      	add	r1, sp, #88	; 0x58
 8007172:	a81d      	add	r0, sp, #116	; 0x74
 8007174:	f7fc fb10 	bl	8003798 <VL53L1_GetRangingMeasurementData>
		 WriteDistance(RangingData.RangeMilliMeter);
 8007178:	f9bd 0070 	ldrsh.w	r0, [sp, #112]	; 0x70
 800717c:	f000 fa86 	bl	800768c <WriteDistance>
 8007180:	e7be      	b.n	8007100 <main+0x19c>
		 start = false;
 8007182:	2300      	movs	r3, #0
		 VL53L1_StopMeasurement(Dev);
 8007184:	a81d      	add	r0, sp, #116	; 0x74
		 start = false;
 8007186:	702b      	strb	r3, [r5, #0]
		 VL53L1_StopMeasurement(Dev);
 8007188:	f7fc fada 	bl	8003740 <VL53L1_StopMeasurement>
		 distanceMode = DistanceMode();
 800718c:	f000 faf8 	bl	8007780 <DistanceMode>
		 switch(distanceMode)
 8007190:	2801      	cmp	r0, #1
		 distanceMode = DistanceMode();
 8007192:	f8cb 0000 	str.w	r0, [fp]
		 switch(distanceMode)
 8007196:	d035      	beq.n	8007204 <main+0x2a0>
 8007198:	2802      	cmp	r0, #2
 800719a:	d061      	beq.n	8007260 <main+0x2fc>
 800719c:	2800      	cmp	r0, #0
 800719e:	d048      	beq.n	8007232 <main+0x2ce>
 80071a0:	6834      	ldr	r4, [r6, #0]
		 interMeasurementPeriod = ( (IMP_HIGH - timingBudget+4) * ((float)GetInterMeasPeriod_Percentage() / 100) ) + timingBudget+4;
 80071a2:	f000 faaf 	bl	8007704 <GetInterMeasPeriod_Percentage>
 80071a6:	ee07 0a90 	vmov	s15, r0
 80071aa:	f5c4 747c 	rsb	r4, r4, #1008	; 0x3f0
 80071ae:	6833      	ldr	r3, [r6, #0]
 80071b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
		 timingBudget = timingBudget*1000;
 80071b4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
		 interMeasurementPeriod = ( (IMP_HIGH - timingBudget+4) * ((float)GetInterMeasPeriod_Percentage() / 100) ) + timingBudget+4;
 80071b8:	eef1 6a00 	vmov.f32	s13, #16	; 0x40800000  4.0
		 VL53L1_SetDistanceMode( Dev, distanceMode );
 80071bc:	f89b 1000 	ldrb.w	r1, [fp]
		 timingBudget = timingBudget*1000;
 80071c0:	fb02 f203 	mul.w	r2, r2, r3
		 VL53L1_SetDistanceMode( Dev, distanceMode );
 80071c4:	a81d      	add	r0, sp, #116	; 0x74
		 interMeasurementPeriod = ( (IMP_HIGH - timingBudget+4) * ((float)GetInterMeasPeriod_Percentage() / 100) ) + timingBudget+4;
 80071c6:	ee87 6a88 	vdiv.f32	s12, s15, s16
 80071ca:	ee07 4a90 	vmov	s15, r4
 80071ce:	4c33      	ldr	r4, [pc, #204]	; (800729c <main+0x338>)
		 timingBudget = timingBudget*1000;
 80071d0:	6032      	str	r2, [r6, #0]
		 interMeasurementPeriod = ( (IMP_HIGH - timingBudget+4) * ((float)GetInterMeasPeriod_Percentage() / 100) ) + timingBudget+4;
 80071d2:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80071d6:	ee07 3a90 	vmov	s15, r3
 80071da:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80071de:	eee7 7a06 	vfma.f32	s15, s14, s12
 80071e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80071e6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80071ea:	edc4 7a00 	vstr	s15, [r4]
		 VL53L1_SetDistanceMode( Dev, distanceMode );
 80071ee:	f7fc f883 	bl	80032f8 <VL53L1_SetDistanceMode>
		 VL53L1_SetMeasurementTimingBudgetMicroSeconds( Dev, timingBudget );
 80071f2:	6831      	ldr	r1, [r6, #0]
 80071f4:	a81d      	add	r0, sp, #116	; 0x74
 80071f6:	f7fc f905 	bl	8003404 <VL53L1_SetMeasurementTimingBudgetMicroSeconds>
		 VL53L1_SetInterMeasurementPeriodMilliSeconds( Dev, interMeasurementPeriod );
 80071fa:	6821      	ldr	r1, [r4, #0]
 80071fc:	a81d      	add	r0, sp, #116	; 0x74
 80071fe:	f7fc f9e1 	bl	80035c4 <VL53L1_SetInterMeasurementPeriodMilliSeconds>
 8007202:	e799      	b.n	8007138 <main+0x1d4>
			 VL53L1_SetDistanceMode( Dev, VL53L1_DISTANCEMODE_MEDIUM );
 8007204:	2102      	movs	r1, #2
			 VL53L1_SetDistanceMode( Dev, VL53L1_DISTANCEMODE_LONG );
 8007206:	a81d      	add	r0, sp, #116	; 0x74
 8007208:	f7fc f876 	bl	80032f8 <VL53L1_SetDistanceMode>
			 timingBudget = ( (TB_HIGH - TB_LONG_LOW) * ((float)GetTimingBudget_Percentage() / 100) ) + TB_LONG_LOW;
 800720c:	f000 fa6c 	bl	80076e8 <GetTimingBudget_Percentage>
 8007210:	ee07 0a90 	vmov	s15, r0
 8007214:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8007218:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800721c:	eeb0 7a68 	vmov.f32	s14, s17
 8007220:	eea7 7a89 	vfma.f32	s14, s15, s18
 8007224:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8007228:	ee17 4a90 	vmov	r4, s15
 800722c:	edc6 7a00 	vstr	s15, [r6]
			 break;
 8007230:	e7b7      	b.n	80071a2 <main+0x23e>
			 VL53L1_SetDistanceMode( Dev, VL53L1_DISTANCEMODE_SHORT );
 8007232:	2101      	movs	r1, #1
 8007234:	a81d      	add	r0, sp, #116	; 0x74
 8007236:	f7fc f85f 	bl	80032f8 <VL53L1_SetDistanceMode>
			 timingBudget = ( (TB_HIGH - TB_SHORT_LOW) * ((float)GetTimingBudget_Percentage() / 100) ) + TB_SHORT_LOW;
 800723a:	f000 fa55 	bl	80076e8 <GetTimingBudget_Percentage>
 800723e:	ee07 0a90 	vmov	s15, r0
 8007242:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8007246:	eef3 7a04 	vmov.f32	s15, #52	; 0x41a00000  20.0
 800724a:	ee86 7a88 	vdiv.f32	s14, s13, s16
 800724e:	eee7 7a29 	vfma.f32	s15, s14, s19
 8007252:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007256:	ee17 4a90 	vmov	r4, s15
 800725a:	edc6 7a00 	vstr	s15, [r6]
			 break;
 800725e:	e7a0      	b.n	80071a2 <main+0x23e>
			 VL53L1_SetDistanceMode( Dev, VL53L1_DISTANCEMODE_LONG );
 8007260:	2103      	movs	r1, #3
 8007262:	e7d0      	b.n	8007206 <main+0x2a2>
 8007264:	40023800 	.word	0x40023800
 8007268:	200198a4 	.word	0x200198a4
 800726c:	42c80000 	.word	0x42c80000
 8007270:	44718000 	.word	0x44718000
 8007274:	42040000 	.word	0x42040000
 8007278:	4474c000 	.word	0x4474c000
 800727c:	40021800 	.word	0x40021800
 8007280:	200198f0 	.word	0x200198f0
 8007284:	40020400 	.word	0x40020400
 8007288:	40005400 	.word	0x40005400
 800728c:	40005800 	.word	0x40005800
 8007290:	2001993c 	.word	0x2001993c
 8007294:	0801c724 	.word	0x0801c724
 8007298:	20019430 	.word	0x20019430
 800729c:	20019428 	.word	0x20019428
 80072a0:	20303e5d 	.word	0x20303e5d
 80072a4:	20019420 	.word	0x20019420
 80072a8:	20019422 	.word	0x20019422
 80072ac:	20019424 	.word	0x20019424
 80072b0:	2001942c 	.word	0x2001942c

080072b4 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80072b4:	4b0a      	ldr	r3, [pc, #40]	; (80072e0 <HAL_MspInit+0x2c>)
{
 80072b6:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 80072b8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80072ba:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80072be:	641a      	str	r2, [r3, #64]	; 0x40
 80072c0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80072c2:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80072c6:	9200      	str	r2, [sp, #0]
 80072c8:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80072ca:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80072cc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80072d0:	645a      	str	r2, [r3, #68]	; 0x44
 80072d2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80072d4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80072d8:	9301      	str	r3, [sp, #4]
 80072da:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80072dc:	b002      	add	sp, #8
 80072de:	4770      	bx	lr
 80072e0:	40023800 	.word	0x40023800

080072e4 <HAL_I2C_MspInit>:
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C1)
 80072e4:	6802      	ldr	r2, [r0, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80072e6:	2300      	movs	r3, #0
  if(hi2c->Instance==I2C1)
 80072e8:	4929      	ldr	r1, [pc, #164]	; (8007390 <HAL_I2C_MspInit+0xac>)
{
 80072ea:	b570      	push	{r4, r5, r6, lr}
  if(hi2c->Instance==I2C1)
 80072ec:	428a      	cmp	r2, r1
{
 80072ee:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80072f0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80072f4:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80072f8:	9309      	str	r3, [sp, #36]	; 0x24
  if(hi2c->Instance==I2C1)
 80072fa:	d026      	beq.n	800734a <HAL_I2C_MspInit+0x66>
    __HAL_RCC_I2C1_CLK_ENABLE();
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
  else if(hi2c->Instance==I2C2)
 80072fc:	4b25      	ldr	r3, [pc, #148]	; (8007394 <HAL_I2C_MspInit+0xb0>)
 80072fe:	429a      	cmp	r2, r3
 8007300:	d001      	beq.n	8007306 <HAL_I2C_MspInit+0x22>
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8007302:	b00a      	add	sp, #40	; 0x28
 8007304:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8007306:	4c24      	ldr	r4, [pc, #144]	; (8007398 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8007308:	2012      	movs	r0, #18
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800730a:	2203      	movs	r2, #3
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800730c:	2601      	movs	r6, #1
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800730e:	6b23      	ldr	r3, [r4, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8007310:	2504      	movs	r5, #4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8007312:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8007314:	f043 0320 	orr.w	r3, r3, #32
 8007318:	6323      	str	r3, [r4, #48]	; 0x30
 800731a:	6b23      	ldr	r3, [r4, #48]	; 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800731c:	9006      	str	r0, [sp, #24]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800731e:	f003 0320 	and.w	r3, r3, #32
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8007322:	481e      	ldr	r0, [pc, #120]	; (800739c <HAL_I2C_MspInit+0xb8>)
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8007324:	9205      	str	r2, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8007326:	9303      	str	r3, [sp, #12]
 8007328:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800732a:	9208      	str	r2, [sp, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800732c:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 800732e:	9509      	str	r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8007330:	f7f9 fe46 	bl	8000fc0 <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 8007334:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007336:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800733a:	6423      	str	r3, [r4, #64]	; 0x40
 800733c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800733e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007342:	9304      	str	r3, [sp, #16]
 8007344:	9b04      	ldr	r3, [sp, #16]
}
 8007346:	b00a      	add	sp, #40	; 0x28
 8007348:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800734a:	4c13      	ldr	r4, [pc, #76]	; (8007398 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800734c:	2212      	movs	r2, #18
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800734e:	2001      	movs	r0, #1
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8007350:	26c0      	movs	r6, #192	; 0xc0
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8007352:	6b23      	ldr	r3, [r4, #48]	; 0x30
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8007354:	2503      	movs	r5, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8007356:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8007358:	f043 0302 	orr.w	r3, r3, #2
 800735c:	6323      	str	r3, [r4, #48]	; 0x30
 800735e:	6b23      	ldr	r3, [r4, #48]	; 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8007360:	9206      	str	r2, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8007362:	2204      	movs	r2, #4
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8007364:	f003 0302 	and.w	r3, r3, #2
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8007368:	9007      	str	r0, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800736a:	480d      	ldr	r0, [pc, #52]	; (80073a0 <HAL_I2C_MspInit+0xbc>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800736c:	9301      	str	r3, [sp, #4]
 800736e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8007370:	9605      	str	r6, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8007372:	e9cd 5208 	strd	r5, r2, [sp, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8007376:	f7f9 fe23 	bl	8000fc0 <HAL_GPIO_Init>
    __HAL_RCC_I2C1_CLK_ENABLE();
 800737a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800737c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8007380:	6423      	str	r3, [r4, #64]	; 0x40
 8007382:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007384:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007388:	9302      	str	r3, [sp, #8]
 800738a:	9b02      	ldr	r3, [sp, #8]
}
 800738c:	b00a      	add	sp, #40	; 0x28
 800738e:	bd70      	pop	{r4, r5, r6, pc}
 8007390:	40005400 	.word	0x40005400
 8007394:	40005800 	.word	0x40005800
 8007398:	40023800 	.word	0x40023800
 800739c:	40021400 	.word	0x40021400
 80073a0:	40020400 	.word	0x40020400

080073a4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80073a4:	4770      	bx	lr
 80073a6:	bf00      	nop

080073a8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80073a8:	e7fe      	b.n	80073a8 <HardFault_Handler>
 80073aa:	bf00      	nop

080073ac <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80073ac:	e7fe      	b.n	80073ac <MemManage_Handler>
 80073ae:	bf00      	nop

080073b0 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80073b0:	e7fe      	b.n	80073b0 <BusFault_Handler>
 80073b2:	bf00      	nop

080073b4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80073b4:	e7fe      	b.n	80073b4 <UsageFault_Handler>
 80073b6:	bf00      	nop

080073b8 <SVC_Handler>:
 80073b8:	4770      	bx	lr
 80073ba:	bf00      	nop

080073bc <DebugMon_Handler>:
 80073bc:	4770      	bx	lr
 80073be:	bf00      	nop

080073c0 <PendSV_Handler>:
 80073c0:	4770      	bx	lr
 80073c2:	bf00      	nop

080073c4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80073c4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80073c6:	f7f9 fd71 	bl	8000eac <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
HAL_SYSTICK_IRQHandler();
  /* USER CODE END SysTick_IRQn 1 */
}
 80073ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
HAL_SYSTICK_IRQHandler();
 80073ce:	f7f9 bdf3 	b.w	8000fb8 <HAL_SYSTICK_IRQHandler>
 80073d2:	bf00      	nop

080073d4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80073d4:	4a0c      	ldr	r2, [pc, #48]	; (8007408 <_sbrk+0x34>)
{
 80073d6:	b508      	push	{r3, lr}
	if (heap_end == 0)
 80073d8:	6813      	ldr	r3, [r2, #0]
 80073da:	b133      	cbz	r3, 80073ea <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80073dc:	4418      	add	r0, r3
 80073de:	4669      	mov	r1, sp
 80073e0:	4288      	cmp	r0, r1
 80073e2:	d809      	bhi.n	80073f8 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80073e4:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80073e6:	4618      	mov	r0, r3
 80073e8:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80073ea:	4908      	ldr	r1, [pc, #32]	; (800740c <_sbrk+0x38>)
 80073ec:	460b      	mov	r3, r1
 80073ee:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80073f0:	4669      	mov	r1, sp
 80073f2:	4418      	add	r0, r3
 80073f4:	4288      	cmp	r0, r1
 80073f6:	d9f5      	bls.n	80073e4 <_sbrk+0x10>
		errno = ENOMEM;
 80073f8:	f011 fc62 	bl	8018cc0 <__errno>
 80073fc:	220c      	movs	r2, #12
		return (caddr_t) -1;
 80073fe:	f04f 33ff 	mov.w	r3, #4294967295
		errno = ENOMEM;
 8007402:	6002      	str	r2, [r0, #0]
}
 8007404:	4618      	mov	r0, r3
 8007406:	bd08      	pop	{r3, pc}
 8007408:	20019434 	.word	0x20019434
 800740c:	20019b00 	.word	0x20019b00

08007410 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007410:	4a03      	ldr	r2, [pc, #12]	; (8007420 <SystemInit+0x10>)
 8007412:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8007416:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800741a:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800741e:	4770      	bx	lr
 8007420:	e000ed00 	.word	0xe000ed00

08007424 <_cbWin>:
static void _cbWin(WM_MESSAGE * pMsg);
static void _cbWin(WM_MESSAGE * pMsg) {
  //WM_HWIN                 hDialog;
  static LISTWHEEL_Handle hMulti;

  switch (pMsg->MsgId) {
 8007424:	6803      	ldr	r3, [r0, #0]
 8007426:	2b01      	cmp	r3, #1
static void _cbWin(WM_MESSAGE * pMsg) {
 8007428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800742c:	b084      	sub	sp, #16
  switch (pMsg->MsgId) {
 800742e:	d00e      	beq.n	800744e <_cbWin+0x2a>
 8007430:	2b0f      	cmp	r3, #15
 8007432:	d107      	bne.n	8007444 <_cbWin+0x20>
    // Set alignment of tabs
    //
    MULTIPAGE_SetAlign(hMulti, MULTIPAGE_ALIGN_LEFT);
    break;
  case WM_PAINT:
    GUI_SetBkColor(GUI_MAKE_COLOR(0x00FFDBB3));
 8007434:	4826      	ldr	r0, [pc, #152]	; (80074d0 <_cbWin+0xac>)
 8007436:	f008 fdd1 	bl	800ffdc <GUI_SetBkColor>
  default:
    WM_DefaultProc(pMsg);
    break;
  }

}
 800743a:	b004      	add	sp, #16
 800743c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    GUI_Clear();
 8007440:	f009 bb8e 	b.w	8010b60 <GUI_Clear>
}
 8007444:	b004      	add	sp, #16
 8007446:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    WM_DefaultProc(pMsg);
 800744a:	f004 bd29 	b.w	800bea0 <WM_DefaultProc>
    hMulti = MULTIPAGE_CreateEx(0, 0, LCD_GetXSize(), LCD_GetYSize(), WM_HBKWIN, WM_CF_SHOW, 0, GUI_ID_MULTIPAGE0);
 800744e:	2400      	movs	r4, #0
 8007450:	f006 ffba 	bl	800e3c8 <LCD_GetXSize>
 8007454:	2602      	movs	r6, #2
 8007456:	4607      	mov	r7, r0
 8007458:	f006 ffbe 	bl	800e3d8 <LCD_GetYSize>
 800745c:	4680      	mov	r8, r0
 800745e:	f003 fb6f 	bl	800ab40 <WM_GetDesktopWindow>
 8007462:	f44f 710c 	mov.w	r1, #560	; 0x230
 8007466:	4d1b      	ldr	r5, [pc, #108]	; (80074d4 <_cbWin+0xb0>)
 8007468:	4643      	mov	r3, r8
 800746a:	9000      	str	r0, [sp, #0]
 800746c:	463a      	mov	r2, r7
 800746e:	9103      	str	r1, [sp, #12]
 8007470:	4620      	mov	r0, r4
 8007472:	4621      	mov	r1, r4
 8007474:	9601      	str	r6, [sp, #4]
 8007476:	9402      	str	r4, [sp, #8]
 8007478:	f001 fbc4 	bl	8008c04 <MULTIPAGE_CreateEx>
    hDialog_app = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog1, WM_UNATTACHED, 0, 0);
 800747c:	f04f 33ff 	mov.w	r3, #4294967295
    hMulti = MULTIPAGE_CreateEx(0, 0, LCD_GetXSize(), LCD_GetYSize(), WM_HBKWIN, WM_CF_SHOW, 0, GUI_ID_MULTIPAGE0);
 8007480:	6028      	str	r0, [r5, #0]
    hDialog_app = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog1, WM_UNATTACHED, 0, 0);
 8007482:	2106      	movs	r1, #6
 8007484:	4a14      	ldr	r2, [pc, #80]	; (80074d8 <_cbWin+0xb4>)
 8007486:	4815      	ldr	r0, [pc, #84]	; (80074dc <_cbWin+0xb8>)
 8007488:	4e15      	ldr	r6, [pc, #84]	; (80074e0 <_cbWin+0xbc>)
 800748a:	e9cd 4400 	strd	r4, r4, [sp]
 800748e:	f002 fc25 	bl	8009cdc <GUI_CreateDialogBox>
 8007492:	4603      	mov	r3, r0
    MULTIPAGE_AddPage(hMulti, hDialog_app, "Measured distance");
 8007494:	4601      	mov	r1, r0
 8007496:	4a13      	ldr	r2, [pc, #76]	; (80074e4 <_cbWin+0xc0>)
 8007498:	6828      	ldr	r0, [r5, #0]
    hDialog_app = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog1, WM_UNATTACHED, 0, 0);
 800749a:	6033      	str	r3, [r6, #0]
    MULTIPAGE_AddPage(hMulti, hDialog_app, "Measured distance");
 800749c:	f001 fd90 	bl	8008fc0 <MULTIPAGE_AddPage>
    hDialog_sett = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_UNATTACHED, 0, 0);
 80074a0:	9401      	str	r4, [sp, #4]
 80074a2:	f04f 33ff 	mov.w	r3, #4294967295
 80074a6:	9400      	str	r4, [sp, #0]
 80074a8:	210a      	movs	r1, #10
 80074aa:	4a0f      	ldr	r2, [pc, #60]	; (80074e8 <_cbWin+0xc4>)
 80074ac:	480f      	ldr	r0, [pc, #60]	; (80074ec <_cbWin+0xc8>)
 80074ae:	f002 fc15 	bl	8009cdc <GUI_CreateDialogBox>
 80074b2:	4e0f      	ldr	r6, [pc, #60]	; (80074f0 <_cbWin+0xcc>)
 80074b4:	4603      	mov	r3, r0
    MULTIPAGE_AddPage(hMulti, hDialog_sett, "Settings");
 80074b6:	4601      	mov	r1, r0
 80074b8:	4a0e      	ldr	r2, [pc, #56]	; (80074f4 <_cbWin+0xd0>)
 80074ba:	6828      	ldr	r0, [r5, #0]
    hDialog_sett = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_UNATTACHED, 0, 0);
 80074bc:	6033      	str	r3, [r6, #0]
    MULTIPAGE_AddPage(hMulti, hDialog_sett, "Settings");
 80074be:	f001 fd7f 	bl	8008fc0 <MULTIPAGE_AddPage>
    MULTIPAGE_SetAlign(hMulti, MULTIPAGE_ALIGN_LEFT);
 80074c2:	4621      	mov	r1, r4
 80074c4:	6828      	ldr	r0, [r5, #0]
}
 80074c6:	b004      	add	sp, #16
 80074c8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    MULTIPAGE_SetAlign(hMulti, MULTIPAGE_ALIGN_LEFT);
 80074cc:	f001 be0c 	b.w	80090e8 <MULTIPAGE_SetAlign>
 80074d0:	00ffdbb3 	.word	0x00ffdbb3
 80074d4:	20019438 	.word	0x20019438
 80074d8:	080075b5 	.word	0x080075b5
 80074dc:	08019634 	.word	0x08019634
 80074e0:	20019944 	.word	0x20019944
 80074e4:	080197f8 	.word	0x080197f8
 80074e8:	080074f9 	.word	0x080074f9
 80074ec:	080196dc 	.word	0x080196dc
 80074f0:	20019940 	.word	0x20019940
 80074f4:	0801980c 	.word	0x0801980c

080074f8 <_cbDialog2>:
  switch (pMsg->MsgId) {
 80074f8:	6803      	ldr	r3, [r0, #0]
 80074fa:	2b1d      	cmp	r3, #29
static void _cbDialog2(WM_MESSAGE * pMsg) {
 80074fc:	b510      	push	{r4, lr}
 80074fe:	4604      	mov	r4, r0
  switch (pMsg->MsgId) {
 8007500:	d00a      	beq.n	8007518 <_cbDialog2+0x20>
 8007502:	2b26      	cmp	r3, #38	; 0x26
 8007504:	d104      	bne.n	8007510 <_cbDialog2+0x18>
    Id    = WM_GetId(pMsg->hWinSrc);
 8007506:	6880      	ldr	r0, [r0, #8]
}
 8007508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Id    = WM_GetId(pMsg->hWinSrc);
 800750c:	f003 baca 	b.w	800aaa4 <WM_GetId>
}
 8007510:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    WM_DefaultProc(pMsg);
 8007514:	f004 bcc4 	b.w	800bea0 <WM_DefaultProc>
    WINDOW_SetBkColor(hItem, GUI_MAKE_COLOR(0x00FFDBB3));
 8007518:	4922      	ldr	r1, [pc, #136]	; (80075a4 <_cbDialog2+0xac>)
 800751a:	6840      	ldr	r0, [r0, #4]
 800751c:	f000 f9f9 	bl	8007912 <WINDOW_SetBkColor>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
 8007520:	f640 0106 	movw	r1, #2054	; 0x806
 8007524:	6860      	ldr	r0, [r4, #4]
 8007526:	f003 fafc 	bl	800ab22 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 800752a:	491f      	ldr	r1, [pc, #124]	; (80075a8 <_cbDialog2+0xb0>)
 800752c:	f002 fd83 	bl	800a036 <BUTTON_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_0);
 8007530:	f640 0107 	movw	r1, #2055	; 0x807
 8007534:	6860      	ldr	r0, [r4, #4]
 8007536:	f003 faf4 	bl	800ab22 <WM_GetDialogItem>
    RADIO_SetTextColor(hItem, GUI_MAKE_COLOR(0x000000FF));
 800753a:	21ff      	movs	r1, #255	; 0xff
 800753c:	f000 fe5d 	bl	80081fa <RADIO_SetTextColor>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
 8007540:	f640 0108 	movw	r1, #2056	; 0x808
 8007544:	6860      	ldr	r0, [r4, #4]
 8007546:	f003 faec 	bl	800ab22 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 800754a:	4918      	ldr	r1, [pc, #96]	; (80075ac <_cbDialog2+0xb4>)
 800754c:	f000 fbe8 	bl	8007d20 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_3);
 8007550:	f640 0109 	movw	r1, #2057	; 0x809
 8007554:	6860      	ldr	r0, [r4, #4]
 8007556:	f003 fae4 	bl	800ab22 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 800755a:	4914      	ldr	r1, [pc, #80]	; (80075ac <_cbDialog2+0xb4>)
 800755c:	f000 fbe0 	bl	8007d20 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
 8007560:	f640 010a 	movw	r1, #2058	; 0x80a
 8007564:	6860      	ldr	r0, [r4, #4]
 8007566:	f003 fadc 	bl	800ab22 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 800756a:	4910      	ldr	r1, [pc, #64]	; (80075ac <_cbDialog2+0xb4>)
 800756c:	f000 fbd8 	bl	8007d20 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
 8007570:	f640 010d 	movw	r1, #2061	; 0x80d
 8007574:	6860      	ldr	r0, [r4, #4]
 8007576:	f003 fad4 	bl	800ab22 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 800757a:	490c      	ldr	r1, [pc, #48]	; (80075ac <_cbDialog2+0xb4>)
 800757c:	f000 fbd0 	bl	8007d20 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8007580:	f640 010e 	movw	r1, #2062	; 0x80e
 8007584:	6860      	ldr	r0, [r4, #4]
 8007586:	f003 facc 	bl	800ab22 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 800758a:	4908      	ldr	r1, [pc, #32]	; (80075ac <_cbDialog2+0xb4>)
 800758c:	f000 fbc8 	bl	8007d20 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_2);
 8007590:	6860      	ldr	r0, [r4, #4]
 8007592:	f640 010f 	movw	r1, #2063	; 0x80f
 8007596:	f003 fac4 	bl	800ab22 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_16_ASCII);
 800759a:	4905      	ldr	r1, [pc, #20]	; (80075b0 <_cbDialog2+0xb8>)
}
 800759c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BUTTON_SetFont(hItem, GUI_FONT_16_ASCII);
 80075a0:	f002 bd49 	b.w	800a036 <BUTTON_SetFont>
 80075a4:	00ffdbb3 	.word	0x00ffdbb3
 80075a8:	0801bc74 	.word	0x0801bc74
 80075ac:	0801deec 	.word	0x0801deec
 80075b0:	0801d5cc 	.word	0x0801d5cc

080075b4 <_cbDialog1>:
  switch (pMsg->MsgId) {
 80075b4:	6802      	ldr	r2, [r0, #0]
 80075b6:	2a1d      	cmp	r2, #29
static void _cbDialog1(WM_MESSAGE * pMsg) {
 80075b8:	b538      	push	{r3, r4, r5, lr}
 80075ba:	4604      	mov	r4, r0
  switch (pMsg->MsgId) {
 80075bc:	d00a      	beq.n	80075d4 <_cbDialog1+0x20>
 80075be:	2a26      	cmp	r2, #38	; 0x26
 80075c0:	d104      	bne.n	80075cc <_cbDialog1+0x18>
    Id    = WM_GetId(pMsg->hWinSrc);
 80075c2:	6880      	ldr	r0, [r0, #8]
}
 80075c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    Id    = WM_GetId(pMsg->hWinSrc);
 80075c8:	f003 ba6c 	b.w	800aaa4 <WM_GetId>
}
 80075cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    WM_DefaultProc(pMsg);
 80075d0:	f004 bc66 	b.w	800bea0 <WM_DefaultProc>
    WINDOW_SetBkColor(hItem, GUI_MAKE_COLOR(0x00FFDBB3));
 80075d4:	491b      	ldr	r1, [pc, #108]	; (8007644 <_cbDialog1+0x90>)
 80075d6:	6840      	ldr	r0, [r0, #4]
 80075d8:	f000 f99b 	bl	8007912 <WINDOW_SetBkColor>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 80075dc:	f640 0102 	movw	r1, #2050	; 0x802
 80075e0:	6860      	ldr	r0, [r4, #4]
 80075e2:	f003 fa9e 	bl	800ab22 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 80075e6:	4918      	ldr	r1, [pc, #96]	; (8007648 <_cbDialog1+0x94>)
 80075e8:	f000 fb9a 	bl	8007d20 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_0);
 80075ec:	f640 0103 	movw	r1, #2051	; 0x803
 80075f0:	6860      	ldr	r0, [r4, #4]
 80075f2:	f003 fa96 	bl	800ab22 <WM_GetDialogItem>
 80075f6:	4605      	mov	r5, r0
    EDIT_SetText(hItem, "123");
 80075f8:	4914      	ldr	r1, [pc, #80]	; (800764c <_cbDialog1+0x98>)
 80075fa:	f002 faf1 	bl	8009be0 <EDIT_SetText>
    EDIT_SetFont(hItem, GUI_FONT_24B_ASCII);
 80075fe:	4628      	mov	r0, r5
 8007600:	4911      	ldr	r1, [pc, #68]	; (8007648 <_cbDialog1+0x94>)
 8007602:	f002 fadb 	bl	8009bbc <EDIT_SetFont>
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
 8007606:	4628      	mov	r0, r5
 8007608:	210e      	movs	r1, #14
 800760a:	f002 fb56 	bl	8009cba <EDIT_SetTextAlign>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 800760e:	f640 0104 	movw	r1, #2052	; 0x804
 8007612:	6860      	ldr	r0, [r4, #4]
 8007614:	f003 fa85 	bl	800ab22 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8007618:	490b      	ldr	r1, [pc, #44]	; (8007648 <_cbDialog1+0x94>)
 800761a:	f000 fb81 	bl	8007d20 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_0);
 800761e:	f640 0105 	movw	r1, #2053	; 0x805
 8007622:	6860      	ldr	r0, [r4, #4]
 8007624:	f003 fa7d 	bl	800ab22 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 8007628:	4909      	ldr	r1, [pc, #36]	; (8007650 <_cbDialog1+0x9c>)
 800762a:	f002 fd04 	bl	800a036 <BUTTON_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
 800762e:	6860      	ldr	r0, [r4, #4]
 8007630:	f640 0106 	movw	r1, #2054	; 0x806
 8007634:	f003 fa75 	bl	800ab22 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 8007638:	4905      	ldr	r1, [pc, #20]	; (8007650 <_cbDialog1+0x9c>)
}
 800763a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 800763e:	f002 bcfa 	b.w	800a036 <BUTTON_SetFont>
 8007642:	bf00      	nop
 8007644:	00ffdbb3 	.word	0x00ffdbb3
 8007648:	0801a7fc 	.word	0x0801a7fc
 800764c:	080197f4 	.word	0x080197f4
 8007650:	0801bc74 	.word	0x0801bc74

08007654 <DisplayApp_Init>:

void DisplayApp_Init(void);
void DisplayApp_Init(void) {
 8007654:	b500      	push	{lr}
 8007656:	b085      	sub	sp, #20
  //
  // Init GUI
  //
  GUI_Init();
 8007658:	f009 fabc 	bl	8010bd4 <GUI_Init>
  //
  // Enable multi-buffering
  //
  WM_MULTIBUF_Enable(1);
 800765c:	2001      	movs	r0, #1
 800765e:	f003 f987 	bl	800a970 <WM_MULTIBUF_Enable>
  //
  // Create a window
  //
  WM_CreateWindowAsChild(0, 0, 480, 272, WM_HBKWIN, WM_CF_SHOW, _cbWin, 0);
 8007662:	f003 fa6d 	bl	800ab40 <WM_GetDesktopWindow>
 8007666:	4b08      	ldr	r3, [pc, #32]	; (8007688 <DisplayApp_Init+0x34>)
 8007668:	2202      	movs	r2, #2
 800766a:	2100      	movs	r1, #0
 800766c:	9302      	str	r3, [sp, #8]
 800766e:	f44f 7388 	mov.w	r3, #272	; 0x110
 8007672:	9201      	str	r2, [sp, #4]
 8007674:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007678:	9000      	str	r0, [sp, #0]
 800767a:	4608      	mov	r0, r1
 800767c:	9103      	str	r1, [sp, #12]
 800767e:	f004 f82d 	bl	800b6dc <WM_CreateWindowAsChild>

}
 8007682:	b005      	add	sp, #20
 8007684:	f85d fb04 	ldr.w	pc, [sp], #4
 8007688:	08007425 	.word	0x08007425

0800768c <WriteDistance>:
void WriteDistance(int distance);
void WriteDistance(int distance)
{
	char distance_tmp[5];

	if(distance == -1)
 800768c:	1c43      	adds	r3, r0, #1
{
 800768e:	b500      	push	{lr}
 8007690:	b083      	sub	sp, #12
	if(distance == -1)
 8007692:	d010      	beq.n	80076b6 <WriteDistance+0x2a>
		sprintf((char*)distance_tmp, "STOP\r");
		EDIT_SetText(WM_GetDialogItem(hDialog_app,ID_EDIT_0),distance_tmp);
	}
	else
	{
		sprintf((char*)distance_tmp, "%d\r",distance);
 8007694:	4602      	mov	r2, r0
 8007696:	4911      	ldr	r1, [pc, #68]	; (80076dc <WriteDistance+0x50>)
 8007698:	4668      	mov	r0, sp
 800769a:	f011 fb77 	bl	8018d8c <siprintf>
		EDIT_SetText(WM_GetDialogItem(hDialog_app,ID_EDIT_0),distance_tmp);
 800769e:	4b10      	ldr	r3, [pc, #64]	; (80076e0 <WriteDistance+0x54>)
 80076a0:	f640 0103 	movw	r1, #2051	; 0x803
 80076a4:	6818      	ldr	r0, [r3, #0]
 80076a6:	f003 fa3c 	bl	800ab22 <WM_GetDialogItem>
 80076aa:	4669      	mov	r1, sp
 80076ac:	f002 fa98 	bl	8009be0 <EDIT_SetText>
	}
}
 80076b0:	b003      	add	sp, #12
 80076b2:	f85d fb04 	ldr.w	pc, [sp], #4
		sprintf((char*)distance_tmp, "STOP\r");
 80076b6:	4b0b      	ldr	r3, [pc, #44]	; (80076e4 <WriteDistance+0x58>)
		EDIT_SetText(WM_GetDialogItem(hDialog_app,ID_EDIT_0),distance_tmp);
 80076b8:	4a09      	ldr	r2, [pc, #36]	; (80076e0 <WriteDistance+0x54>)
		sprintf((char*)distance_tmp, "STOP\r");
 80076ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 80076be:	f8ad 1004 	strh.w	r1, [sp, #4]
		EDIT_SetText(WM_GetDialogItem(hDialog_app,ID_EDIT_0),distance_tmp);
 80076c2:	f640 0103 	movw	r1, #2051	; 0x803
		sprintf((char*)distance_tmp, "STOP\r");
 80076c6:	9000      	str	r0, [sp, #0]
		EDIT_SetText(WM_GetDialogItem(hDialog_app,ID_EDIT_0),distance_tmp);
 80076c8:	6810      	ldr	r0, [r2, #0]
 80076ca:	f003 fa2a 	bl	800ab22 <WM_GetDialogItem>
 80076ce:	4669      	mov	r1, sp
 80076d0:	f002 fa86 	bl	8009be0 <EDIT_SetText>
}
 80076d4:	b003      	add	sp, #12
 80076d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80076da:	bf00      	nop
 80076dc:	08019630 	.word	0x08019630
 80076e0:	20019944 	.word	0x20019944
 80076e4:	08019628 	.word	0x08019628

080076e8 <GetTimingBudget_Percentage>:

int GetTimingBudget_Percentage(void);
int GetTimingBudget_Percentage(void) {
 80076e8:	b508      	push	{r3, lr}

	return SLIDER_GetValue(WM_GetDialogItem(hDialog_sett, ID_SLIDER_0));
 80076ea:	4b05      	ldr	r3, [pc, #20]	; (8007700 <GetTimingBudget_Percentage+0x18>)
 80076ec:	f640 010b 	movw	r1, #2059	; 0x80b
 80076f0:	6818      	ldr	r0, [r3, #0]
 80076f2:	f003 fa16 	bl	800ab22 <WM_GetDialogItem>
}
 80076f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	return SLIDER_GetValue(WM_GetDialogItem(hDialog_sett, ID_SLIDER_0));
 80076fa:	f000 bd6f 	b.w	80081dc <SLIDER_GetValue>
 80076fe:	bf00      	nop
 8007700:	20019940 	.word	0x20019940

08007704 <GetInterMeasPeriod_Percentage>:

int GetInterMeasPeriod_Percentage(void);
int GetInterMeasPeriod_Percentage(void) {
 8007704:	b508      	push	{r3, lr}

	return SLIDER_GetValue(WM_GetDialogItem(hDialog_sett, ID_SLIDER_1));
 8007706:	4b05      	ldr	r3, [pc, #20]	; (800771c <GetInterMeasPeriod_Percentage+0x18>)
 8007708:	f640 010c 	movw	r1, #2060	; 0x80c
 800770c:	6818      	ldr	r0, [r3, #0]
 800770e:	f003 fa08 	bl	800ab22 <WM_GetDialogItem>
}
 8007712:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	return SLIDER_GetValue(WM_GetDialogItem(hDialog_sett, ID_SLIDER_1));
 8007716:	f000 bd61 	b.w	80081dc <SLIDER_GetValue>
 800771a:	bf00      	nop
 800771c:	20019940 	.word	0x20019940

08007720 <OK_Button>:

bool OK_Button(void);
bool OK_Button(void) {
 8007720:	b508      	push	{r3, lr}

	if (BUTTON_IsPressed(WM_GetDialogItem(hDialog_sett, ID_BUTTON_2)) == 0)
 8007722:	4b06      	ldr	r3, [pc, #24]	; (800773c <OK_Button+0x1c>)
 8007724:	f640 010f 	movw	r1, #2063	; 0x80f
 8007728:	6818      	ldr	r0, [r3, #0]
 800772a:	f003 f9fa 	bl	800ab22 <WM_GetDialogItem>
 800772e:	f002 fb27 	bl	8009d80 <BUTTON_IsPressed>
		return false;
	else
		return true;
}
 8007732:	3000      	adds	r0, #0
 8007734:	bf18      	it	ne
 8007736:	2001      	movne	r0, #1
 8007738:	bd08      	pop	{r3, pc}
 800773a:	bf00      	nop
 800773c:	20019940 	.word	0x20019940

08007740 <START_Button>:

bool START_Button(void);
bool START_Button(void) {
 8007740:	b508      	push	{r3, lr}

	if (BUTTON_IsPressed(WM_GetDialogItem(hDialog_app, ID_BUTTON_0)) == 0)
 8007742:	4b06      	ldr	r3, [pc, #24]	; (800775c <START_Button+0x1c>)
 8007744:	f640 0105 	movw	r1, #2053	; 0x805
 8007748:	6818      	ldr	r0, [r3, #0]
 800774a:	f003 f9ea 	bl	800ab22 <WM_GetDialogItem>
 800774e:	f002 fb17 	bl	8009d80 <BUTTON_IsPressed>
		return false;
	else
		return true;
}
 8007752:	3000      	adds	r0, #0
 8007754:	bf18      	it	ne
 8007756:	2001      	movne	r0, #1
 8007758:	bd08      	pop	{r3, pc}
 800775a:	bf00      	nop
 800775c:	20019944 	.word	0x20019944

08007760 <STOP_Button>:


bool STOP_Button(void);
bool STOP_Button(void) {
 8007760:	b508      	push	{r3, lr}

	if (BUTTON_IsPressed(WM_GetDialogItem(hDialog_app, ID_BUTTON_1)) == 0)
 8007762:	4b06      	ldr	r3, [pc, #24]	; (800777c <STOP_Button+0x1c>)
 8007764:	f640 0106 	movw	r1, #2054	; 0x806
 8007768:	6818      	ldr	r0, [r3, #0]
 800776a:	f003 f9da 	bl	800ab22 <WM_GetDialogItem>
 800776e:	f002 fb07 	bl	8009d80 <BUTTON_IsPressed>
		return false;
	else
		return true;
}
 8007772:	3000      	adds	r0, #0
 8007774:	bf18      	it	ne
 8007776:	2001      	movne	r0, #1
 8007778:	bd08      	pop	{r3, pc}
 800777a:	bf00      	nop
 800777c:	20019944 	.word	0x20019944

08007780 <DistanceMode>:

int DistanceMode(void);
int DistanceMode(void) {
 8007780:	b508      	push	{r3, lr}

	return RADIO_GetValue(WM_GetDialogItem(hDialog_sett, ID_RADIO_0));
 8007782:	4b05      	ldr	r3, [pc, #20]	; (8007798 <DistanceMode+0x18>)
 8007784:	f640 0107 	movw	r1, #2055	; 0x807
 8007788:	6818      	ldr	r0, [r3, #0]
 800778a:	f003 f9ca 	bl	800ab22 <WM_GetDialogItem>
}
 800778e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	return RADIO_GetValue(WM_GetDialogItem(hDialog_sett, ID_RADIO_0));
 8007792:	f000 bef4 	b.w	800857e <RADIO_GetValue>
 8007796:	bf00      	nop
 8007798:	20019940 	.word	0x20019940

0800779c <Reset_Handler>:
 800779c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80077d4 <LoopFillZerobss+0x12>
 80077a0:	480d      	ldr	r0, [pc, #52]	; (80077d8 <LoopFillZerobss+0x16>)
 80077a2:	490e      	ldr	r1, [pc, #56]	; (80077dc <LoopFillZerobss+0x1a>)
 80077a4:	4a0e      	ldr	r2, [pc, #56]	; (80077e0 <LoopFillZerobss+0x1e>)
 80077a6:	2300      	movs	r3, #0
 80077a8:	e002      	b.n	80077b0 <LoopCopyDataInit>

080077aa <CopyDataInit>:
 80077aa:	58d4      	ldr	r4, [r2, r3]
 80077ac:	50c4      	str	r4, [r0, r3]
 80077ae:	3304      	adds	r3, #4

080077b0 <LoopCopyDataInit>:
 80077b0:	18c4      	adds	r4, r0, r3
 80077b2:	428c      	cmp	r4, r1
 80077b4:	d3f9      	bcc.n	80077aa <CopyDataInit>
 80077b6:	4a0b      	ldr	r2, [pc, #44]	; (80077e4 <LoopFillZerobss+0x22>)
 80077b8:	4c0b      	ldr	r4, [pc, #44]	; (80077e8 <LoopFillZerobss+0x26>)
 80077ba:	2300      	movs	r3, #0
 80077bc:	e001      	b.n	80077c2 <LoopFillZerobss>

080077be <FillZerobss>:
 80077be:	6013      	str	r3, [r2, #0]
 80077c0:	3204      	adds	r2, #4

080077c2 <LoopFillZerobss>:
 80077c2:	42a2      	cmp	r2, r4
 80077c4:	d3fb      	bcc.n	80077be <FillZerobss>
 80077c6:	f7ff fe23 	bl	8007410 <SystemInit>
 80077ca:	f011 fa7f 	bl	8018ccc <__libc_init_array>
 80077ce:	f7ff fbc9 	bl	8006f64 <main>
 80077d2:	4770      	bx	lr
 80077d4:	20050000 	.word	0x20050000
 80077d8:	20000000 	.word	0x20000000
 80077dc:	200003fc 	.word	0x200003fc
 80077e0:	0801ff40 	.word	0x0801ff40
 80077e4:	200003fc 	.word	0x200003fc
 80077e8:	20019afc 	.word	0x20019afc

080077ec <ADC_IRQHandler>:
 80077ec:	e7fe      	b.n	80077ec <ADC_IRQHandler>

080077ee <WINDOW_Callback>:
 80077ee:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80077f2:	6845      	ldr	r5, [r0, #4]
 80077f4:	4604      	mov	r4, r0
 80077f6:	4628      	mov	r0, r5
 80077f8:	f009 fde2 	bl	80113c0 <GUI_ALLOC_LockH>
 80077fc:	af02      	add	r7, sp, #8
 80077fe:	6b86      	ldr	r6, [r0, #56]	; 0x38
 8007800:	f847 0d08 	str.w	r0, [r7, #-8]!
 8007804:	f8d0 9034 	ldr.w	r9, [r0, #52]	; 0x34
 8007808:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 800780c:	4668      	mov	r0, sp
 800780e:	f009 fde5 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007812:	6823      	ldr	r3, [r4, #0]
 8007814:	2b1f      	cmp	r3, #31
 8007816:	d02f      	beq.n	8007878 <WINDOW_Callback+0x8a>
 8007818:	dc06      	bgt.n	8007828 <WINDOW_Callback+0x3a>
 800781a:	2b0f      	cmp	r3, #15
 800781c:	d060      	beq.n	80078e0 <WINDOW_Callback+0xf2>
 800781e:	2b1e      	cmp	r3, #30
 8007820:	d015      	beq.n	800784e <WINDOW_Callback+0x60>
 8007822:	2b0e      	cmp	r3, #14
 8007824:	d169      	bne.n	80078fa <WINDOW_Callback+0x10c>
 8007826:	e04a      	b.n	80078be <WINDOW_Callback+0xd0>
 8007828:	2b22      	cmp	r3, #34	; 0x22
 800782a:	d063      	beq.n	80078f4 <WINDOW_Callback+0x106>
 800782c:	2b2a      	cmp	r3, #42	; 0x2a
 800782e:	d002      	beq.n	8007836 <WINDOW_Callback+0x48>
 8007830:	2b20      	cmp	r3, #32
 8007832:	d162      	bne.n	80078fa <WINDOW_Callback+0x10c>
 8007834:	e025      	b.n	8007882 <WINDOW_Callback+0x94>
 8007836:	4628      	mov	r0, r5
 8007838:	f009 fdc2 	bl	80113c0 <GUI_ALLOC_LockH>
 800783c:	68e3      	ldr	r3, [r4, #12]
 800783e:	9000      	str	r0, [sp, #0]
 8007840:	b10b      	cbz	r3, 8007846 <WINDOW_Callback+0x58>
 8007842:	63c3      	str	r3, [r0, #60]	; 0x3c
 8007844:	e001      	b.n	800784a <WINDOW_Callback+0x5c>
 8007846:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8007848:	60e3      	str	r3, [r4, #12]
 800784a:	4668      	mov	r0, sp
 800784c:	e034      	b.n	80078b8 <WINDOW_Callback+0xca>
 800784e:	68e4      	ldr	r4, [r4, #12]
 8007850:	2c01      	cmp	r4, #1
 8007852:	d15b      	bne.n	800790c <WINDOW_Callback+0x11e>
 8007854:	4630      	mov	r0, r6
 8007856:	f003 f89b 	bl	800a990 <WM_IsWindow>
 800785a:	2800      	cmp	r0, #0
 800785c:	d03c      	beq.n	80078d8 <WINDOW_Callback+0xea>
 800785e:	4630      	mov	r0, r6
 8007860:	f002 fe38 	bl	800a4d4 <WM_SetFocus>
 8007864:	4630      	mov	r0, r6
 8007866:	f003 f8cd 	bl	800aa04 <WM_HasFocus>
 800786a:	2800      	cmp	r0, #0
 800786c:	d04e      	beq.n	800790c <WINDOW_Callback+0x11e>
 800786e:	4630      	mov	r0, r6
 8007870:	4621      	mov	r1, r4
 8007872:	f000 f938 	bl	8007ae6 <WIDGET_OrState>
 8007876:	e049      	b.n	800790c <WINDOW_Callback+0x11e>
 8007878:	4628      	mov	r0, r5
 800787a:	4621      	mov	r1, r4
 800787c:	f000 f966 	bl	8007b4c <WIDGET_HandleActive>
 8007880:	e044      	b.n	800790c <WINDOW_Callback+0x11e>
 8007882:	4628      	mov	r0, r5
 8007884:	f009 fd9c 	bl	80113c0 <GUI_ALLOC_LockH>
 8007888:	68e4      	ldr	r4, [r4, #12]
 800788a:	9001      	str	r0, [sp, #4]
 800788c:	b19c      	cbz	r4, 80078b6 <WINDOW_Callback+0xc8>
 800788e:	6860      	ldr	r0, [r4, #4]
 8007890:	4629      	mov	r1, r5
 8007892:	f002 fc93 	bl	800a1bc <WM__IsAncestorOrSelf>
 8007896:	b930      	cbnz	r0, 80078a6 <WINDOW_Callback+0xb8>
 8007898:	6820      	ldr	r0, [r4, #0]
 800789a:	4629      	mov	r1, r5
 800789c:	f002 fc7d 	bl	800a19a <WM__IsAncestor>
 80078a0:	b148      	cbz	r0, 80078b6 <WINDOW_Callback+0xc8>
 80078a2:	6822      	ldr	r2, [r4, #0]
 80078a4:	e005      	b.n	80078b2 <WINDOW_Callback+0xc4>
 80078a6:	6860      	ldr	r0, [r4, #4]
 80078a8:	4629      	mov	r1, r5
 80078aa:	f002 fc76 	bl	800a19a <WM__IsAncestor>
 80078ae:	b110      	cbz	r0, 80078b6 <WINDOW_Callback+0xc8>
 80078b0:	6862      	ldr	r2, [r4, #4]
 80078b2:	9b01      	ldr	r3, [sp, #4]
 80078b4:	639a      	str	r2, [r3, #56]	; 0x38
 80078b6:	a801      	add	r0, sp, #4
 80078b8:	f009 fd90 	bl	80113dc <GUI_ALLOC_UnlockH>
 80078bc:	e026      	b.n	800790c <WINDOW_Callback+0x11e>
 80078be:	68e3      	ldr	r3, [r4, #12]
 80078c0:	685a      	ldr	r2, [r3, #4]
 80078c2:	2a00      	cmp	r2, #0
 80078c4:	dd19      	ble.n	80078fa <WINDOW_Callback+0x10c>
 80078c6:	681b      	ldr	r3, [r3, #0]
 80078c8:	2b09      	cmp	r3, #9
 80078ca:	d005      	beq.n	80078d8 <WINDOW_Callback+0xea>
 80078cc:	2b0a      	cmp	r3, #10
 80078ce:	d114      	bne.n	80078fa <WINDOW_Callback+0x10c>
 80078d0:	4628      	mov	r0, r5
 80078d2:	f002 fd9d 	bl	800a410 <WM_SetFocusOnPrevChild>
 80078d6:	e019      	b.n	800790c <WINDOW_Callback+0x11e>
 80078d8:	4628      	mov	r0, r5
 80078da:	f002 fdc9 	bl	800a470 <WM_SetFocusOnNextChild>
 80078de:	e015      	b.n	800790c <WINDOW_Callback+0x11e>
 80078e0:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80078e4:	4598      	cmp	r8, r3
 80078e6:	d008      	beq.n	80078fa <WINDOW_Callback+0x10c>
 80078e8:	4640      	mov	r0, r8
 80078ea:	f007 f985 	bl	800ebf8 <LCD_SetBkColor>
 80078ee:	f009 f937 	bl	8010b60 <GUI_Clear>
 80078f2:	e002      	b.n	80078fa <WINDOW_Callback+0x10c>
 80078f4:	f8c4 800c 	str.w	r8, [r4, #12]
 80078f8:	e008      	b.n	800790c <WINDOW_Callback+0x11e>
 80078fa:	f1b9 0f00 	cmp.w	r9, #0
 80078fe:	d002      	beq.n	8007906 <WINDOW_Callback+0x118>
 8007900:	4620      	mov	r0, r4
 8007902:	47c8      	blx	r9
 8007904:	e002      	b.n	800790c <WINDOW_Callback+0x11e>
 8007906:	4620      	mov	r0, r4
 8007908:	f004 faca 	bl	800bea0 <WM_DefaultProc>
 800790c:	b003      	add	sp, #12
 800790e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08007912 <WINDOW_SetBkColor>:
 8007912:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007914:	460d      	mov	r5, r1
 8007916:	4604      	mov	r4, r0
 8007918:	f009 fd52 	bl	80113c0 <GUI_ALLOC_LockH>
 800791c:	4602      	mov	r2, r0
 800791e:	a802      	add	r0, sp, #8
 8007920:	6415      	str	r5, [r2, #64]	; 0x40
 8007922:	f840 2d04 	str.w	r2, [r0, #-4]!
 8007926:	f009 fd59 	bl	80113dc <GUI_ALLOC_UnlockH>
 800792a:	4620      	mov	r0, r4
 800792c:	f003 fe95 	bl	800b65a <WM_InvalidateWindow>
 8007930:	b003      	add	sp, #12
 8007932:	bd30      	pop	{r4, r5, pc}

08007934 <WINDOW_CreateUser>:
 8007934:	b510      	push	{r4, lr}
 8007936:	b086      	sub	sp, #24
 8007938:	9c08      	ldr	r4, [sp, #32]
 800793a:	9400      	str	r4, [sp, #0]
 800793c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800793e:	9401      	str	r4, [sp, #4]
 8007940:	4c0f      	ldr	r4, [pc, #60]	; (8007980 <WINDOW_CreateUser+0x4c>)
 8007942:	9402      	str	r4, [sp, #8]
 8007944:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8007946:	3418      	adds	r4, #24
 8007948:	9403      	str	r4, [sp, #12]
 800794a:	f003 fec7 	bl	800b6dc <WM_CreateWindowAsChild>
 800794e:	4604      	mov	r4, r0
 8007950:	b190      	cbz	r0, 8007978 <WINDOW_CreateUser+0x44>
 8007952:	f009 fd35 	bl	80113c0 <GUI_ALLOC_LockH>
 8007956:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007958:	9005      	str	r0, [sp, #20]
 800795a:	2210      	movs	r2, #16
 800795c:	f000 f8ee 	bl	8007b3c <WIDGET__Init>
 8007960:	a806      	add	r0, sp, #24
 8007962:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007964:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8007968:	6351      	str	r1, [r2, #52]	; 0x34
 800796a:	2100      	movs	r1, #0
 800796c:	6391      	str	r1, [r2, #56]	; 0x38
 800796e:	4905      	ldr	r1, [pc, #20]	; (8007984 <WINDOW_CreateUser+0x50>)
 8007970:	6809      	ldr	r1, [r1, #0]
 8007972:	6411      	str	r1, [r2, #64]	; 0x40
 8007974:	f009 fd32 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007978:	4620      	mov	r0, r4
 800797a:	b006      	add	sp, #24
 800797c:	bd10      	pop	{r4, pc}
 800797e:	bf00      	nop
 8007980:	080077ef 	.word	0x080077ef
 8007984:	2000003c 	.word	0x2000003c

08007988 <WINDOW_CreateIndirect>:
 8007988:	b5f0      	push	{r4, r5, r6, r7, lr}
 800798a:	b087      	sub	sp, #28
 800798c:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8007990:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8007994:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8007998:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800799c:	9100      	str	r1, [sp, #0]
 800799e:	8a41      	ldrh	r1, [r0, #18]
 80079a0:	9101      	str	r1, [sp, #4]
 80079a2:	2100      	movs	r1, #0
 80079a4:	9102      	str	r1, [sp, #8]
 80079a6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80079aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80079ac:	9103      	str	r1, [sp, #12]
 80079ae:	9404      	str	r4, [sp, #16]
 80079b0:	6984      	ldr	r4, [r0, #24]
 80079b2:	9405      	str	r4, [sp, #20]
 80079b4:	eb0e 0002 	add.w	r0, lr, r2
 80079b8:	18f9      	adds	r1, r7, r3
 80079ba:	4632      	mov	r2, r6
 80079bc:	462b      	mov	r3, r5
 80079be:	f7ff ffb9 	bl	8007934 <WINDOW_CreateUser>
 80079c2:	b007      	add	sp, #28
 80079c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080079c6 <_EffectRequiresRedraw>:
 80079c6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80079c8:	460d      	mov	r5, r1
 80079ca:	f100 0108 	add.w	r1, r0, #8
 80079ce:	4602      	mov	r2, r0
 80079d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80079d2:	c903      	ldmia	r1, {r0, r1}
 80079d4:	681c      	ldr	r4, [r3, #0]
 80079d6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80079da:	4610      	mov	r0, r2
 80079dc:	4669      	mov	r1, sp
 80079de:	f002 fbb6 	bl	800a14e <WM__Screen2Client>
 80079e2:	f9b5 2000 	ldrsh.w	r2, [r5]
 80079e6:	f9bd 3000 	ldrsh.w	r3, [sp]
 80079ea:	4422      	add	r2, r4
 80079ec:	429a      	cmp	r2, r3
 80079ee:	dc17      	bgt.n	8007a20 <_EffectRequiresRedraw+0x5a>
 80079f0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80079f4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80079f8:	1b12      	subs	r2, r2, r4
 80079fa:	429a      	cmp	r2, r3
 80079fc:	db10      	blt.n	8007a20 <_EffectRequiresRedraw+0x5a>
 80079fe:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8007a02:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8007a06:	4422      	add	r2, r4
 8007a08:	429a      	cmp	r2, r3
 8007a0a:	dc09      	bgt.n	8007a20 <_EffectRequiresRedraw+0x5a>
 8007a0c:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 8007a10:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8007a14:	1b04      	subs	r4, r0, r4
 8007a16:	429c      	cmp	r4, r3
 8007a18:	bfac      	ite	ge
 8007a1a:	2000      	movge	r0, #0
 8007a1c:	2001      	movlt	r0, #1
 8007a1e:	e000      	b.n	8007a22 <_EffectRequiresRedraw+0x5c>
 8007a20:	2001      	movs	r0, #1
 8007a22:	b003      	add	sp, #12
 8007a24:	bd30      	pop	{r4, r5, pc}

08007a26 <WIDGET__RotateRect90>:
 8007a26:	f9b0 3000 	ldrsh.w	r3, [r0]
 8007a2a:	b570      	push	{r4, r5, r6, lr}
 8007a2c:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8007a30:	8815      	ldrh	r5, [r2, #0]
 8007a32:	88d0      	ldrh	r0, [r2, #6]
 8007a34:	8894      	ldrh	r4, [r2, #4]
 8007a36:	8852      	ldrh	r2, [r2, #2]
 8007a38:	804d      	strh	r5, [r1, #2]
 8007a3a:	1af3      	subs	r3, r6, r3
 8007a3c:	b29b      	uxth	r3, r3
 8007a3e:	1a18      	subs	r0, r3, r0
 8007a40:	1a9b      	subs	r3, r3, r2
 8007a42:	8008      	strh	r0, [r1, #0]
 8007a44:	808b      	strh	r3, [r1, #4]
 8007a46:	80cc      	strh	r4, [r1, #6]
 8007a48:	bd70      	pop	{r4, r5, r6, pc}

08007a4a <WIDGET__GetClientRect>:
 8007a4a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8007a4c:	071b      	lsls	r3, r3, #28
 8007a4e:	b513      	push	{r0, r1, r4, lr}
 8007a50:	460c      	mov	r4, r1
 8007a52:	d50f      	bpl.n	8007a74 <WIDGET__GetClientRect+0x2a>
 8007a54:	4668      	mov	r0, sp
 8007a56:	f003 f8a1 	bl	800ab9c <WM_GetClientRect>
 8007a5a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8007a5e:	8023      	strh	r3, [r4, #0]
 8007a60:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8007a64:	80a3      	strh	r3, [r4, #4]
 8007a66:	f8bd 3000 	ldrh.w	r3, [sp]
 8007a6a:	8063      	strh	r3, [r4, #2]
 8007a6c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8007a70:	80e3      	strh	r3, [r4, #6]
 8007a72:	e002      	b.n	8007a7a <WIDGET__GetClientRect+0x30>
 8007a74:	4608      	mov	r0, r1
 8007a76:	f003 f891 	bl	800ab9c <WM_GetClientRect>
 8007a7a:	b002      	add	sp, #8
 8007a7c:	bd10      	pop	{r4, pc}

08007a7e <WIDGET__GetInsideRect>:
 8007a7e:	b538      	push	{r3, r4, r5, lr}
 8007a80:	4604      	mov	r4, r0
 8007a82:	460d      	mov	r5, r1
 8007a84:	f003 fda1 	bl	800b5ca <WM__GetClientRectWin>
 8007a88:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007a8a:	4628      	mov	r0, r5
 8007a8c:	4629      	mov	r1, r5
 8007a8e:	681a      	ldr	r2, [r3, #0]
 8007a90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007a94:	f007 b953 	b.w	800ed3e <GUI__ReduceRect>

08007a98 <WIDGET__GetWindowSizeX>:
 8007a98:	b513      	push	{r0, r1, r4, lr}
 8007a9a:	4604      	mov	r4, r0
 8007a9c:	f009 fc90 	bl	80113c0 <GUI_ALLOC_LockH>
 8007aa0:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8007aa2:	9001      	str	r0, [sp, #4]
 8007aa4:	071b      	lsls	r3, r3, #28
 8007aa6:	4620      	mov	r0, r4
 8007aa8:	d502      	bpl.n	8007ab0 <WIDGET__GetWindowSizeX+0x18>
 8007aaa:	f002 ffce 	bl	800aa4a <WM_GetWindowSizeY>
 8007aae:	e001      	b.n	8007ab4 <WIDGET__GetWindowSizeX+0x1c>
 8007ab0:	f002 ffb6 	bl	800aa20 <WM_GetWindowSizeX>
 8007ab4:	4604      	mov	r4, r0
 8007ab6:	a801      	add	r0, sp, #4
 8007ab8:	f009 fc90 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007abc:	4620      	mov	r0, r4
 8007abe:	b002      	add	sp, #8
 8007ac0:	bd10      	pop	{r4, pc}

08007ac2 <WIDGET_SetState>:
 8007ac2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007ac4:	460c      	mov	r4, r1
 8007ac6:	4605      	mov	r5, r0
 8007ac8:	f009 fc7a 	bl	80113c0 <GUI_ALLOC_LockH>
 8007acc:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8007ace:	9001      	str	r0, [sp, #4]
 8007ad0:	4294      	cmp	r4, r2
 8007ad2:	d003      	beq.n	8007adc <WIDGET_SetState+0x1a>
 8007ad4:	8644      	strh	r4, [r0, #50]	; 0x32
 8007ad6:	4628      	mov	r0, r5
 8007ad8:	f003 fdbf 	bl	800b65a <WM_InvalidateWindow>
 8007adc:	a801      	add	r0, sp, #4
 8007ade:	f009 fc7d 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007ae2:	b003      	add	sp, #12
 8007ae4:	bd30      	pop	{r4, r5, pc}

08007ae6 <WIDGET_OrState>:
 8007ae6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007ae8:	460c      	mov	r4, r1
 8007aea:	4605      	mov	r5, r0
 8007aec:	b178      	cbz	r0, 8007b0e <WIDGET_OrState+0x28>
 8007aee:	f009 fc67 	bl	80113c0 <GUI_ALLOC_LockH>
 8007af2:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8007af4:	9001      	str	r0, [sp, #4]
 8007af6:	ea04 0102 	and.w	r1, r4, r2
 8007afa:	428c      	cmp	r4, r1
 8007afc:	d004      	beq.n	8007b08 <WIDGET_OrState+0x22>
 8007afe:	4314      	orrs	r4, r2
 8007b00:	8644      	strh	r4, [r0, #50]	; 0x32
 8007b02:	4628      	mov	r0, r5
 8007b04:	f003 fda9 	bl	800b65a <WM_InvalidateWindow>
 8007b08:	a801      	add	r0, sp, #4
 8007b0a:	f009 fc67 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007b0e:	b003      	add	sp, #12
 8007b10:	bd30      	pop	{r4, r5, pc}

08007b12 <WIDGET_AndState>:
 8007b12:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007b14:	460d      	mov	r5, r1
 8007b16:	4604      	mov	r4, r0
 8007b18:	b170      	cbz	r0, 8007b38 <WIDGET_AndState+0x26>
 8007b1a:	f009 fc51 	bl	80113c0 <GUI_ALLOC_LockH>
 8007b1e:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8007b20:	9001      	str	r0, [sp, #4]
 8007b22:	ea22 0105 	bic.w	r1, r2, r5
 8007b26:	428a      	cmp	r2, r1
 8007b28:	d003      	beq.n	8007b32 <WIDGET_AndState+0x20>
 8007b2a:	8641      	strh	r1, [r0, #50]	; 0x32
 8007b2c:	4620      	mov	r0, r4
 8007b2e:	f003 fd94 	bl	800b65a <WM_InvalidateWindow>
 8007b32:	a801      	add	r0, sp, #4
 8007b34:	f009 fc52 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007b38:	b003      	add	sp, #12
 8007b3a:	bd30      	pop	{r4, r5, pc}

08007b3c <WIDGET__Init>:
 8007b3c:	4b02      	ldr	r3, [pc, #8]	; (8007b48 <WIDGET__Init+0xc>)
 8007b3e:	8642      	strh	r2, [r0, #50]	; 0x32
 8007b40:	681b      	ldr	r3, [r3, #0]
 8007b42:	62c3      	str	r3, [r0, #44]	; 0x2c
 8007b44:	8601      	strh	r1, [r0, #48]	; 0x30
 8007b46:	4770      	bx	lr
 8007b48:	20000040 	.word	0x20000040

08007b4c <WIDGET_HandleActive>:
 8007b4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007b4e:	460d      	mov	r5, r1
 8007b50:	b085      	sub	sp, #20
 8007b52:	4606      	mov	r6, r0
 8007b54:	2800      	cmp	r0, #0
 8007b56:	f000 8093 	beq.w	8007c80 <WIDGET_HandleActive+0x134>
 8007b5a:	f009 fc31 	bl	80113c0 <GUI_ALLOC_LockH>
 8007b5e:	682b      	ldr	r3, [r5, #0]
 8007b60:	9002      	str	r0, [sp, #8]
 8007b62:	2b16      	cmp	r3, #22
 8007b64:	d052      	beq.n	8007c0c <WIDGET_HandleActive+0xc0>
 8007b66:	dc0c      	bgt.n	8007b82 <WIDGET_HandleActive+0x36>
 8007b68:	2b11      	cmp	r3, #17
 8007b6a:	d033      	beq.n	8007bd4 <WIDGET_HandleActive+0x88>
 8007b6c:	dc02      	bgt.n	8007b74 <WIDGET_HandleActive+0x28>
 8007b6e:	2b0d      	cmp	r3, #13
 8007b70:	d03e      	beq.n	8007bf0 <WIDGET_HandleActive+0xa4>
 8007b72:	e07e      	b.n	8007c72 <WIDGET_HandleActive+0x126>
 8007b74:	2b14      	cmp	r3, #20
 8007b76:	d077      	beq.n	8007c68 <WIDGET_HandleActive+0x11c>
 8007b78:	2b15      	cmp	r3, #21
 8007b7a:	d17a      	bne.n	8007c72 <WIDGET_HandleActive+0x126>
 8007b7c:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8007b80:	e070      	b.n	8007c64 <WIDGET_HandleActive+0x118>
 8007b82:	2b1f      	cmp	r3, #31
 8007b84:	d06b      	beq.n	8007c5e <WIDGET_HandleActive+0x112>
 8007b86:	dc02      	bgt.n	8007b8e <WIDGET_HandleActive+0x42>
 8007b88:	2b1e      	cmp	r3, #30
 8007b8a:	d042      	beq.n	8007c12 <WIDGET_HandleActive+0xc6>
 8007b8c:	e071      	b.n	8007c72 <WIDGET_HandleActive+0x126>
 8007b8e:	2b31      	cmp	r3, #49	; 0x31
 8007b90:	d01e      	beq.n	8007bd0 <WIDGET_HandleActive+0x84>
 8007b92:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8007b96:	d16c      	bne.n	8007c72 <WIDGET_HandleActive+0x126>
 8007b98:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8007b9a:	6819      	ldr	r1, [r3, #0]
 8007b9c:	68eb      	ldr	r3, [r5, #12]
 8007b9e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	a802      	add	r0, sp, #8
 8007ba4:	1acd      	subs	r5, r1, r3
 8007ba6:	f009 fc19 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007baa:	4630      	mov	r0, r6
 8007bac:	f009 fc08 	bl	80113c0 <GUI_ALLOC_LockH>
 8007bb0:	ac04      	add	r4, sp, #16
 8007bb2:	4269      	negs	r1, r5
 8007bb4:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007bb8:	460a      	mov	r2, r1
 8007bba:	462b      	mov	r3, r5
 8007bbc:	9500      	str	r5, [sp, #0]
 8007bbe:	f002 fa4c 	bl	800a05a <WM__UpdateChildPositions>
 8007bc2:	4620      	mov	r0, r4
 8007bc4:	f009 fc0a 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007bc8:	4630      	mov	r0, r6
 8007bca:	f003 fd46 	bl	800b65a <WM_InvalidateWindow>
 8007bce:	e04e      	b.n	8007c6e <WIDGET_HandleActive+0x122>
 8007bd0:	2400      	movs	r4, #0
 8007bd2:	e03f      	b.n	8007c54 <WIDGET_HandleActive+0x108>
 8007bd4:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8007bd6:	06d9      	lsls	r1, r3, #27
 8007bd8:	d54b      	bpl.n	8007c72 <WIDGET_HandleActive+0x126>
 8007bda:	68eb      	ldr	r3, [r5, #12]
 8007bdc:	7a1b      	ldrb	r3, [r3, #8]
 8007bde:	2b00      	cmp	r3, #0
 8007be0:	d047      	beq.n	8007c72 <WIDGET_HandleActive+0x126>
 8007be2:	a802      	add	r0, sp, #8
 8007be4:	f009 fbfa 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007be8:	4630      	mov	r0, r6
 8007bea:	f002 fc73 	bl	800a4d4 <WM_SetFocus>
 8007bee:	e040      	b.n	8007c72 <WIDGET_HandleActive+0x126>
 8007bf0:	68eb      	ldr	r3, [r5, #12]
 8007bf2:	68db      	ldr	r3, [r3, #12]
 8007bf4:	2b00      	cmp	r3, #0
 8007bf6:	d03c      	beq.n	8007c72 <WIDGET_HandleActive+0x126>
 8007bf8:	7a1b      	ldrb	r3, [r3, #8]
 8007bfa:	2b00      	cmp	r3, #0
 8007bfc:	d039      	beq.n	8007c72 <WIDGET_HandleActive+0x126>
 8007bfe:	a802      	add	r0, sp, #8
 8007c00:	f009 fbec 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007c04:	4630      	mov	r0, r6
 8007c06:	f002 ffe9 	bl	800abdc <WM_BringToTop>
 8007c0a:	e030      	b.n	8007c6e <WIDGET_HandleActive+0x122>
 8007c0c:	68eb      	ldr	r3, [r5, #12]
 8007c0e:	8603      	strh	r3, [r0, #48]	; 0x30
 8007c10:	e02d      	b.n	8007c6e <WIDGET_HandleActive+0x122>
 8007c12:	68eb      	ldr	r3, [r5, #12]
 8007c14:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 8007c16:	2b01      	cmp	r3, #1
 8007c18:	d108      	bne.n	8007c2c <WIDGET_HandleActive+0xe0>
 8007c1a:	06ca      	lsls	r2, r1, #27
 8007c1c:	d50d      	bpl.n	8007c3a <WIDGET_HandleActive+0xee>
 8007c1e:	4630      	mov	r0, r6
 8007c20:	f041 0101 	orr.w	r1, r1, #1
 8007c24:	f7ff ff4d 	bl	8007ac2 <WIDGET_SetState>
 8007c28:	2708      	movs	r7, #8
 8007c2a:	e008      	b.n	8007c3e <WIDGET_HandleActive+0xf2>
 8007c2c:	f021 0101 	bic.w	r1, r1, #1
 8007c30:	4630      	mov	r0, r6
 8007c32:	f7ff ff46 	bl	8007ac2 <WIDGET_SetState>
 8007c36:	2709      	movs	r7, #9
 8007c38:	e001      	b.n	8007c3e <WIDGET_HandleActive+0xf2>
 8007c3a:	f04f 37ff 	mov.w	r7, #4294967295
 8007c3e:	a802      	add	r0, sp, #8
 8007c40:	f009 fbcc 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007c44:	1c7b      	adds	r3, r7, #1
 8007c46:	f04f 0400 	mov.w	r4, #0
 8007c4a:	d005      	beq.n	8007c58 <WIDGET_HandleActive+0x10c>
 8007c4c:	4630      	mov	r0, r6
 8007c4e:	4639      	mov	r1, r7
 8007c50:	f002 fdaf 	bl	800a7b2 <WM_NotifyParent>
 8007c54:	60ec      	str	r4, [r5, #12]
 8007c56:	e00d      	b.n	8007c74 <WIDGET_HandleActive+0x128>
 8007c58:	2301      	movs	r3, #1
 8007c5a:	60eb      	str	r3, [r5, #12]
 8007c5c:	e00a      	b.n	8007c74 <WIDGET_HandleActive+0x128>
 8007c5e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8007c60:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8007c64:	60eb      	str	r3, [r5, #12]
 8007c66:	e002      	b.n	8007c6e <WIDGET_HandleActive+0x122>
 8007c68:	68e9      	ldr	r1, [r5, #12]
 8007c6a:	f7ff ff08 	bl	8007a7e <WIDGET__GetInsideRect>
 8007c6e:	2400      	movs	r4, #0
 8007c70:	e000      	b.n	8007c74 <WIDGET_HandleActive+0x128>
 8007c72:	2401      	movs	r4, #1
 8007c74:	9b02      	ldr	r3, [sp, #8]
 8007c76:	b123      	cbz	r3, 8007c82 <WIDGET_HandleActive+0x136>
 8007c78:	a802      	add	r0, sp, #8
 8007c7a:	f009 fbaf 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007c7e:	e000      	b.n	8007c82 <WIDGET_HandleActive+0x136>
 8007c80:	2401      	movs	r4, #1
 8007c82:	4620      	mov	r0, r4
 8007c84:	b005      	add	sp, #20
 8007c86:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007c88 <WIDGET__FillRectEx>:
 8007c88:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8007c8a:	071b      	lsls	r3, r3, #28
 8007c8c:	b507      	push	{r0, r1, r2, lr}
 8007c8e:	460a      	mov	r2, r1
 8007c90:	d503      	bpl.n	8007c9a <WIDGET__FillRectEx+0x12>
 8007c92:	4669      	mov	r1, sp
 8007c94:	f7ff fec7 	bl	8007a26 <WIDGET__RotateRect90>
 8007c98:	466a      	mov	r2, sp
 8007c9a:	4610      	mov	r0, r2
 8007c9c:	f008 fc14 	bl	80104c8 <GUI_FillRectEx>
 8007ca0:	b003      	add	sp, #12
 8007ca2:	f85d fb04 	ldr.w	pc, [sp], #4

08007ca6 <WIDGET__DrawTriangle>:
 8007ca6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ca8:	461c      	mov	r4, r3
 8007caa:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8007cac:	9f06      	ldr	r7, [sp, #24]
 8007cae:	071b      	lsls	r3, r3, #28
 8007cb0:	460d      	mov	r5, r1
 8007cb2:	4616      	mov	r6, r2
 8007cb4:	d50a      	bpl.n	8007ccc <WIDGET__DrawTriangle+0x26>
 8007cb6:	2c00      	cmp	r4, #0
 8007cb8:	db07      	blt.n	8007cca <WIDGET__DrawTriangle+0x24>
 8007cba:	4628      	mov	r0, r5
 8007cbc:	1b31      	subs	r1, r6, r4
 8007cbe:	19a2      	adds	r2, r4, r6
 8007cc0:	f008 fc76 	bl	80105b0 <GUI_DrawHLine>
 8007cc4:	3c01      	subs	r4, #1
 8007cc6:	443d      	add	r5, r7
 8007cc8:	e7f5      	b.n	8007cb6 <WIDGET__DrawTriangle+0x10>
 8007cca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007ccc:	2c00      	cmp	r4, #0
 8007cce:	db07      	blt.n	8007ce0 <WIDGET__DrawTriangle+0x3a>
 8007cd0:	4628      	mov	r0, r5
 8007cd2:	1b31      	subs	r1, r6, r4
 8007cd4:	19a2      	adds	r2, r4, r6
 8007cd6:	f008 fc49 	bl	801056c <GUI_DrawVLine>
 8007cda:	3c01      	subs	r4, #1
 8007cdc:	443d      	add	r5, r7
 8007cde:	e7f5      	b.n	8007ccc <WIDGET__DrawTriangle+0x26>
 8007ce0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007ce2 <WIDGET__EFFECT_DrawDownRect>:
 8007ce2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007ce4:	4605      	mov	r5, r0
 8007ce6:	460c      	mov	r4, r1
 8007ce8:	b919      	cbnz	r1, 8007cf2 <WIDGET__EFFECT_DrawDownRect+0x10>
 8007cea:	4668      	mov	r0, sp
 8007cec:	f002 ff56 	bl	800ab9c <WM_GetClientRect>
 8007cf0:	466c      	mov	r4, sp
 8007cf2:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 8007cf4:	071b      	lsls	r3, r3, #28
 8007cf6:	d505      	bpl.n	8007d04 <WIDGET__EFFECT_DrawDownRect+0x22>
 8007cf8:	4622      	mov	r2, r4
 8007cfa:	4628      	mov	r0, r5
 8007cfc:	4669      	mov	r1, sp
 8007cfe:	f7ff fe92 	bl	8007a26 <WIDGET__RotateRect90>
 8007d02:	466c      	mov	r4, sp
 8007d04:	4628      	mov	r0, r5
 8007d06:	4621      	mov	r1, r4
 8007d08:	f7ff fe5d 	bl	80079c6 <_EffectRequiresRedraw>
 8007d0c:	b118      	cbz	r0, 8007d16 <WIDGET__EFFECT_DrawDownRect+0x34>
 8007d0e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8007d10:	4620      	mov	r0, r4
 8007d12:	691b      	ldr	r3, [r3, #16]
 8007d14:	4798      	blx	r3
 8007d16:	b003      	add	sp, #12
 8007d18:	bd30      	pop	{r4, r5, pc}

08007d1a <WIDGET__EFFECT_DrawDown>:
 8007d1a:	2100      	movs	r1, #0
 8007d1c:	f7ff bfe1 	b.w	8007ce2 <WIDGET__EFFECT_DrawDownRect>

08007d20 <TEXT_SetFont>:
 8007d20:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007d22:	460c      	mov	r4, r1
 8007d24:	4605      	mov	r5, r0
 8007d26:	b160      	cbz	r0, 8007d42 <TEXT_SetFont+0x22>
 8007d28:	f009 fb4a 	bl	80113c0 <GUI_ALLOC_LockH>
 8007d2c:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8007d2e:	9001      	str	r0, [sp, #4]
 8007d30:	42a2      	cmp	r2, r4
 8007d32:	d003      	beq.n	8007d3c <TEXT_SetFont+0x1c>
 8007d34:	6344      	str	r4, [r0, #52]	; 0x34
 8007d36:	4628      	mov	r0, r5
 8007d38:	f003 fc8f 	bl	800b65a <WM_InvalidateWindow>
 8007d3c:	a801      	add	r0, sp, #4
 8007d3e:	f009 fb4d 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007d42:	b003      	add	sp, #12
 8007d44:	bd30      	pop	{r4, r5, pc}

08007d46 <TEXT_CreateIndirect>:
 8007d46:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d48:	b087      	sub	sp, #28
 8007d4a:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8007d4e:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8007d52:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8007d56:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8007d5a:	9100      	str	r1, [sp, #0]
 8007d5c:	2102      	movs	r1, #2
 8007d5e:	9101      	str	r1, [sp, #4]
 8007d60:	8a41      	ldrh	r1, [r0, #18]
 8007d62:	9102      	str	r1, [sp, #8]
 8007d64:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8007d68:	9103      	str	r1, [sp, #12]
 8007d6a:	6844      	ldr	r4, [r0, #4]
 8007d6c:	9404      	str	r4, [sp, #16]
 8007d6e:	6984      	ldr	r4, [r0, #24]
 8007d70:	9405      	str	r4, [sp, #20]
 8007d72:	eb0e 0002 	add.w	r0, lr, r2
 8007d76:	18f9      	adds	r1, r7, r3
 8007d78:	4632      	mov	r2, r6
 8007d7a:	462b      	mov	r3, r5
 8007d7c:	f000 f866 	bl	8007e4c <TEXT_CreateUser>
 8007d80:	b007      	add	sp, #28
 8007d82:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007d84 <TEXT_Callback>:
 8007d84:	b530      	push	{r4, r5, lr}
 8007d86:	6845      	ldr	r5, [r0, #4]
 8007d88:	4604      	mov	r4, r0
 8007d8a:	b085      	sub	sp, #20
 8007d8c:	4628      	mov	r0, r5
 8007d8e:	4621      	mov	r1, r4
 8007d90:	f7ff fedc 	bl	8007b4c <WIDGET_HandleActive>
 8007d94:	2800      	cmp	r0, #0
 8007d96:	d056      	beq.n	8007e46 <TEXT_Callback+0xc2>
 8007d98:	6823      	ldr	r3, [r4, #0]
 8007d9a:	2b0f      	cmp	r3, #15
 8007d9c:	d01e      	beq.n	8007ddc <TEXT_Callback+0x58>
 8007d9e:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8007da2:	d00e      	beq.n	8007dc2 <TEXT_Callback+0x3e>
 8007da4:	2b0b      	cmp	r3, #11
 8007da6:	d14b      	bne.n	8007e40 <TEXT_Callback+0xbc>
 8007da8:	4628      	mov	r0, r5
 8007daa:	f009 fb09 	bl	80113c0 <GUI_ALLOC_LockH>
 8007dae:	ad04      	add	r5, sp, #16
 8007db0:	f845 0d08 	str.w	r0, [r5, #-8]!
 8007db4:	3044      	adds	r0, #68	; 0x44
 8007db6:	f009 fd5b 	bl	8011870 <GUI_ALLOC_FreePtr>
 8007dba:	4628      	mov	r0, r5
 8007dbc:	f009 fb0e 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007dc0:	e03e      	b.n	8007e40 <TEXT_Callback+0xbc>
 8007dc2:	68e3      	ldr	r3, [r4, #12]
 8007dc4:	b12b      	cbz	r3, 8007dd2 <TEXT_Callback+0x4e>
 8007dc6:	7a1b      	ldrb	r3, [r3, #8]
 8007dc8:	2b00      	cmp	r3, #0
 8007dca:	bf0c      	ite	eq
 8007dcc:	2102      	moveq	r1, #2
 8007dce:	2101      	movne	r1, #1
 8007dd0:	e000      	b.n	8007dd4 <TEXT_Callback+0x50>
 8007dd2:	2103      	movs	r1, #3
 8007dd4:	4628      	mov	r0, r5
 8007dd6:	f002 fcec 	bl	800a7b2 <WM_NotifyParent>
 8007dda:	e031      	b.n	8007e40 <TEXT_Callback+0xbc>
 8007ddc:	4628      	mov	r0, r5
 8007dde:	f009 faef 	bl	80113c0 <GUI_ALLOC_LockH>
 8007de2:	9000      	str	r0, [sp, #0]
 8007de4:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8007de6:	f006 ff0f 	bl	800ec08 <LCD_SetColor>
 8007dea:	9b00      	ldr	r3, [sp, #0]
 8007dec:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8007dee:	f008 f8c9 	bl	800ff84 <GUI_SetFont>
 8007df2:	4628      	mov	r0, r5
 8007df4:	f002 fad0 	bl	800a398 <WM_GetHasTrans>
 8007df8:	b928      	cbnz	r0, 8007e06 <TEXT_Callback+0x82>
 8007dfa:	9b00      	ldr	r3, [sp, #0]
 8007dfc:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8007dfe:	f006 fefb 	bl	800ebf8 <LCD_SetBkColor>
 8007e02:	f008 fead 	bl	8010b60 <GUI_Clear>
 8007e06:	9b00      	ldr	r3, [sp, #0]
 8007e08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007e0a:	b1ab      	cbz	r3, 8007e38 <TEXT_Callback+0xb4>
 8007e0c:	2002      	movs	r0, #2
 8007e0e:	f008 f8af 	bl	800ff70 <GUI_SetTextMode>
 8007e12:	a802      	add	r0, sp, #8
 8007e14:	f002 fec2 	bl	800ab9c <WM_GetClientRect>
 8007e18:	9b00      	ldr	r3, [sp, #0]
 8007e1a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8007e1c:	f009 fad0 	bl	80113c0 <GUI_ALLOC_LockH>
 8007e20:	9b00      	ldr	r3, [sp, #0]
 8007e22:	9001      	str	r0, [sp, #4]
 8007e24:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 8007e28:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8007e2c:	a902      	add	r1, sp, #8
 8007e2e:	f008 fc43 	bl	80106b8 <GUI_DispStringInRectWrap>
 8007e32:	a801      	add	r0, sp, #4
 8007e34:	f009 fad2 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007e38:	4668      	mov	r0, sp
 8007e3a:	f009 facf 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007e3e:	e002      	b.n	8007e46 <TEXT_Callback+0xc2>
 8007e40:	4620      	mov	r0, r4
 8007e42:	f004 f82d 	bl	800bea0 <WM_DefaultProc>
 8007e46:	b005      	add	sp, #20
 8007e48:	bd30      	pop	{r4, r5, pc}
	...

08007e4c <TEXT_CreateUser>:
 8007e4c:	b570      	push	{r4, r5, r6, lr}
 8007e4e:	b086      	sub	sp, #24
 8007e50:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007e52:	9500      	str	r5, [sp, #0]
 8007e54:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007e56:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8007e58:	f045 0501 	orr.w	r5, r5, #1
 8007e5c:	9501      	str	r5, [sp, #4]
 8007e5e:	4d1a      	ldr	r5, [pc, #104]	; (8007ec8 <TEXT_CreateUser+0x7c>)
 8007e60:	9502      	str	r5, [sp, #8]
 8007e62:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8007e64:	3520      	adds	r5, #32
 8007e66:	9503      	str	r5, [sp, #12]
 8007e68:	f003 fc38 	bl	800b6dc <WM_CreateWindowAsChild>
 8007e6c:	4605      	mov	r5, r0
 8007e6e:	b340      	cbz	r0, 8007ec2 <TEXT_CreateUser+0x76>
 8007e70:	b18c      	cbz	r4, 8007e96 <TEXT_CreateUser+0x4a>
 8007e72:	4620      	mov	r0, r4
 8007e74:	f7f8 f9cc 	bl	8000210 <strlen>
 8007e78:	3001      	adds	r0, #1
 8007e7a:	f009 fd0e 	bl	801189a <GUI_ALLOC_AllocZero>
 8007e7e:	4606      	mov	r6, r0
 8007e80:	b150      	cbz	r0, 8007e98 <TEXT_CreateUser+0x4c>
 8007e82:	f009 fa9d 	bl	80113c0 <GUI_ALLOC_LockH>
 8007e86:	4621      	mov	r1, r4
 8007e88:	9005      	str	r0, [sp, #20]
 8007e8a:	f010 ff9f 	bl	8018dcc <strcpy>
 8007e8e:	a805      	add	r0, sp, #20
 8007e90:	f009 faa4 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007e94:	e000      	b.n	8007e98 <TEXT_CreateUser+0x4c>
 8007e96:	4626      	mov	r6, r4
 8007e98:	4628      	mov	r0, r5
 8007e9a:	f009 fa91 	bl	80113c0 <GUI_ALLOC_LockH>
 8007e9e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8007ea0:	9005      	str	r0, [sp, #20]
 8007ea2:	2200      	movs	r2, #0
 8007ea4:	f7ff fe4a 	bl	8007b3c <WIDGET__Init>
 8007ea8:	9c05      	ldr	r4, [sp, #20]
 8007eaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007eac:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 8007eb0:	4b06      	ldr	r3, [pc, #24]	; (8007ecc <TEXT_CreateUser+0x80>)
 8007eb2:	6466      	str	r6, [r4, #68]	; 0x44
 8007eb4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8007eb6:	3434      	adds	r4, #52	; 0x34
 8007eb8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007ebc:	a805      	add	r0, sp, #20
 8007ebe:	f009 fa8d 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007ec2:	4628      	mov	r0, r5
 8007ec4:	b006      	add	sp, #24
 8007ec6:	bd70      	pop	{r4, r5, r6, pc}
 8007ec8:	08007d85 	.word	0x08007d85
 8007ecc:	20000044 	.word	0x20000044

08007ed0 <SLIDER_CreateIndirect>:
 8007ed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007ed2:	b087      	sub	sp, #28
 8007ed4:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8007ed8:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8007edc:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8007ee0:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8007ee4:	9100      	str	r1, [sp, #0]
 8007ee6:	2100      	movs	r1, #0
 8007ee8:	9101      	str	r1, [sp, #4]
 8007eea:	8a41      	ldrh	r1, [r0, #18]
 8007eec:	9102      	str	r1, [sp, #8]
 8007eee:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8007ef2:	9103      	str	r1, [sp, #12]
 8007ef4:	6984      	ldr	r4, [r0, #24]
 8007ef6:	9404      	str	r4, [sp, #16]
 8007ef8:	eb0e 0002 	add.w	r0, lr, r2
 8007efc:	18f9      	adds	r1, r7, r3
 8007efe:	4632      	mov	r2, r6
 8007f00:	462b      	mov	r3, r5
 8007f02:	f000 f803 	bl	8007f0c <SLIDER_CreateUser>
 8007f06:	b007      	add	sp, #28
 8007f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08007f0c <SLIDER_CreateUser>:
 8007f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f10:	b086      	sub	sp, #24
 8007f12:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8007f14:	9400      	str	r4, [sp, #0]
 8007f16:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8007f18:	f044 0401 	orr.w	r4, r4, #1
 8007f1c:	9401      	str	r4, [sp, #4]
 8007f1e:	4c1c      	ldr	r4, [pc, #112]	; (8007f90 <SLIDER_CreateUser+0x84>)
 8007f20:	9402      	str	r4, [sp, #8]
 8007f22:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8007f24:	3438      	adds	r4, #56	; 0x38
 8007f26:	9403      	str	r4, [sp, #12]
 8007f28:	f003 fbd8 	bl	800b6dc <WM_CreateWindowAsChild>
 8007f2c:	4680      	mov	r8, r0
 8007f2e:	b358      	cbz	r0, 8007f88 <SLIDER_CreateUser+0x7c>
 8007f30:	f009 fa46 	bl	80113c0 <GUI_ALLOC_LockH>
 8007f34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007f36:	4d17      	ldr	r5, [pc, #92]	; (8007f94 <SLIDER_CreateUser+0x88>)
 8007f38:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007f3a:	9005      	str	r0, [sp, #20]
 8007f3c:	f013 0f08 	tst.w	r3, #8
 8007f40:	bf14      	ite	ne
 8007f42:	2218      	movne	r2, #24
 8007f44:	2210      	moveq	r2, #16
 8007f46:	f7ff fdf9 	bl	8007b3c <WIDGET__Init>
 8007f4a:	af06      	add	r7, sp, #24
 8007f4c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007f4e:	f857 6d04 	ldr.w	r6, [r7, #-4]!
 8007f52:	f106 0434 	add.w	r4, r6, #52	; 0x34
 8007f56:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007f58:	e895 0003 	ldmia.w	r5, {r0, r1}
 8007f5c:	e884 0003 	stmia.w	r4, {r0, r1}
 8007f60:	4c0d      	ldr	r4, [pc, #52]	; (8007f98 <SLIDER_CreateUser+0x8c>)
 8007f62:	6823      	ldr	r3, [r4, #0]
 8007f64:	64f3      	str	r3, [r6, #76]	; 0x4c
 8007f66:	2308      	movs	r3, #8
 8007f68:	f8a6 3060 	strh.w	r3, [r6, #96]	; 0x60
 8007f6c:	2364      	movs	r3, #100	; 0x64
 8007f6e:	6573      	str	r3, [r6, #84]	; 0x54
 8007f70:	2300      	movs	r3, #0
 8007f72:	65b3      	str	r3, [r6, #88]	; 0x58
 8007f74:	f04f 33ff 	mov.w	r3, #4294967295
 8007f78:	6533      	str	r3, [r6, #80]	; 0x50
 8007f7a:	4638      	mov	r0, r7
 8007f7c:	f009 fa2e 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007f80:	6823      	ldr	r3, [r4, #0]
 8007f82:	4640      	mov	r0, r8
 8007f84:	685b      	ldr	r3, [r3, #4]
 8007f86:	4798      	blx	r3
 8007f88:	4640      	mov	r0, r8
 8007f8a:	b006      	add	sp, #24
 8007f8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007f90:	08008085 	.word	0x08008085
 8007f94:	20000058 	.word	0x20000058
 8007f98:	20000054 	.word	0x20000054

08007f9c <SLIDER_Dec>:
 8007f9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007f9e:	4605      	mov	r5, r0
 8007fa0:	b1c0      	cbz	r0, 8007fd4 <SLIDER_Dec+0x38>
 8007fa2:	f009 fa0d 	bl	80113c0 <GUI_ALLOC_LockH>
 8007fa6:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8007fa8:	6d81      	ldr	r1, [r0, #88]	; 0x58
 8007faa:	ac02      	add	r4, sp, #8
 8007fac:	428a      	cmp	r2, r1
 8007fae:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007fb2:	dd0c      	ble.n	8007fce <SLIDER_Dec+0x32>
 8007fb4:	3a01      	subs	r2, #1
 8007fb6:	65c2      	str	r2, [r0, #92]	; 0x5c
 8007fb8:	4628      	mov	r0, r5
 8007fba:	f003 fb4e 	bl	800b65a <WM_InvalidateWindow>
 8007fbe:	4620      	mov	r0, r4
 8007fc0:	f009 fa0c 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007fc4:	4628      	mov	r0, r5
 8007fc6:	2105      	movs	r1, #5
 8007fc8:	f002 fbf3 	bl	800a7b2 <WM_NotifyParent>
 8007fcc:	e002      	b.n	8007fd4 <SLIDER_Dec+0x38>
 8007fce:	4620      	mov	r0, r4
 8007fd0:	f009 fa04 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007fd4:	b003      	add	sp, #12
 8007fd6:	bd30      	pop	{r4, r5, pc}

08007fd8 <SLIDER_GetFlag>:
 8007fd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007fda:	460d      	mov	r5, r1
 8007fdc:	4604      	mov	r4, r0
 8007fde:	b150      	cbz	r0, 8007ff6 <SLIDER_GetFlag+0x1e>
 8007fe0:	f009 f9ee 	bl	80113c0 <GUI_ALLOC_LockH>
 8007fe4:	ab02      	add	r3, sp, #8
 8007fe6:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8007fea:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007fee:	4618      	mov	r0, r3
 8007ff0:	402c      	ands	r4, r5
 8007ff2:	f009 f9f3 	bl	80113dc <GUI_ALLOC_UnlockH>
 8007ff6:	4620      	mov	r0, r4
 8007ff8:	b003      	add	sp, #12
 8007ffa:	bd30      	pop	{r4, r5, pc}

08007ffc <SLIDER_Inc>:
 8007ffc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007ffe:	4605      	mov	r5, r0
 8008000:	b1c0      	cbz	r0, 8008034 <SLIDER_Inc+0x38>
 8008002:	f009 f9dd 	bl	80113c0 <GUI_ALLOC_LockH>
 8008006:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8008008:	6d41      	ldr	r1, [r0, #84]	; 0x54
 800800a:	ac02      	add	r4, sp, #8
 800800c:	428a      	cmp	r2, r1
 800800e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008012:	da0c      	bge.n	800802e <SLIDER_Inc+0x32>
 8008014:	3201      	adds	r2, #1
 8008016:	65c2      	str	r2, [r0, #92]	; 0x5c
 8008018:	4628      	mov	r0, r5
 800801a:	f003 fb1e 	bl	800b65a <WM_InvalidateWindow>
 800801e:	4620      	mov	r0, r4
 8008020:	f009 f9dc 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008024:	4628      	mov	r0, r5
 8008026:	2105      	movs	r1, #5
 8008028:	f002 fbc3 	bl	800a7b2 <WM_NotifyParent>
 800802c:	e002      	b.n	8008034 <SLIDER_Inc+0x38>
 800802e:	4620      	mov	r0, r4
 8008030:	f009 f9d4 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008034:	b003      	add	sp, #12
 8008036:	bd30      	pop	{r4, r5, pc}

08008038 <SLIDER_SetValue>:
 8008038:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800803a:	460e      	mov	r6, r1
 800803c:	4605      	mov	r5, r0
 800803e:	b1f8      	cbz	r0, 8008080 <SLIDER_SetValue+0x48>
 8008040:	f009 f9be 	bl	80113c0 <GUI_ALLOC_LockH>
 8008044:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8008046:	4296      	cmp	r6, r2
 8008048:	bfac      	ite	ge
 800804a:	4631      	movge	r1, r6
 800804c:	4611      	movlt	r1, r2
 800804e:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8008050:	4291      	cmp	r1, r2
 8008052:	bfa8      	it	ge
 8008054:	4611      	movge	r1, r2
 8008056:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8008058:	ac02      	add	r4, sp, #8
 800805a:	428a      	cmp	r2, r1
 800805c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008060:	d00b      	beq.n	800807a <SLIDER_SetValue+0x42>
 8008062:	65c1      	str	r1, [r0, #92]	; 0x5c
 8008064:	4628      	mov	r0, r5
 8008066:	f003 faf8 	bl	800b65a <WM_InvalidateWindow>
 800806a:	4620      	mov	r0, r4
 800806c:	f009 f9b6 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008070:	4628      	mov	r0, r5
 8008072:	2105      	movs	r1, #5
 8008074:	f002 fb9d 	bl	800a7b2 <WM_NotifyParent>
 8008078:	e002      	b.n	8008080 <SLIDER_SetValue+0x48>
 800807a:	4620      	mov	r0, r4
 800807c:	f009 f9ae 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008080:	b002      	add	sp, #8
 8008082:	bd70      	pop	{r4, r5, r6, pc}

08008084 <SLIDER_Callback>:
 8008084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008088:	6844      	ldr	r4, [r0, #4]
 800808a:	4605      	mov	r5, r0
 800808c:	b085      	sub	sp, #20
 800808e:	4620      	mov	r0, r4
 8008090:	4629      	mov	r1, r5
 8008092:	f7ff fd5b 	bl	8007b4c <WIDGET_HandleActive>
 8008096:	2800      	cmp	r0, #0
 8008098:	f000 809d 	beq.w	80081d6 <SLIDER_Callback+0x152>
 800809c:	682b      	ldr	r3, [r5, #0]
 800809e:	2b0f      	cmp	r3, #15
 80080a0:	d006      	beq.n	80080b0 <SLIDER_Callback+0x2c>
 80080a2:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80080a6:	d014      	beq.n	80080d2 <SLIDER_Callback+0x4e>
 80080a8:	2b0e      	cmp	r3, #14
 80080aa:	f040 8091 	bne.w	80081d0 <SLIDER_Callback+0x14c>
 80080ae:	e07f      	b.n	80081b0 <SLIDER_Callback+0x12c>
 80080b0:	4620      	mov	r0, r4
 80080b2:	f009 f985 	bl	80113c0 <GUI_ALLOC_LockH>
 80080b6:	ab04      	add	r3, sp, #16
 80080b8:	f843 0d04 	str.w	r0, [r3, #-4]!
 80080bc:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80080be:	6815      	ldr	r5, [r2, #0]
 80080c0:	4618      	mov	r0, r3
 80080c2:	f009 f98b 	bl	80113dc <GUI_ALLOC_UnlockH>
 80080c6:	2d00      	cmp	r5, #0
 80080c8:	f000 8085 	beq.w	80081d6 <SLIDER_Callback+0x152>
 80080cc:	4620      	mov	r0, r4
 80080ce:	47a8      	blx	r5
 80080d0:	e081      	b.n	80081d6 <SLIDER_Callback+0x152>
 80080d2:	68ef      	ldr	r7, [r5, #12]
 80080d4:	2f00      	cmp	r7, #0
 80080d6:	d07b      	beq.n	80081d0 <SLIDER_Callback+0x14c>
 80080d8:	4620      	mov	r0, r4
 80080da:	f009 f971 	bl	80113c0 <GUI_ALLOC_LockH>
 80080de:	4603      	mov	r3, r0
 80080e0:	a804      	add	r0, sp, #16
 80080e2:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 80080e4:	f840 3d04 	str.w	r3, [r0, #-4]!
 80080e8:	6d9e      	ldr	r6, [r3, #88]	; 0x58
 80080ea:	f8d3 9054 	ldr.w	r9, [r3, #84]	; 0x54
 80080ee:	f8b3 b060 	ldrh.w	fp, [r3, #96]	; 0x60
 80080f2:	f8b3 8028 	ldrh.w	r8, [r3, #40]	; 0x28
 80080f6:	9201      	str	r2, [sp, #4]
 80080f8:	f009 f970 	bl	80113dc <GUI_ALLOC_UnlockH>
 80080fc:	9a01      	ldr	r2, [sp, #4]
 80080fe:	7a3b      	ldrb	r3, [r7, #8]
 8008100:	f402 7a80 	and.w	sl, r2, #256	; 0x100
 8008104:	2b00      	cmp	r3, #0
 8008106:	d043      	beq.n	8008190 <SLIDER_Callback+0x10c>
 8008108:	cf82      	ldmia	r7, {r1, r7}
 800810a:	fa0f f38b 	sxth.w	r3, fp
 800810e:	f04f 0b02 	mov.w	fp, #2
 8008112:	f012 0f08 	tst.w	r2, #8
 8008116:	fb93 f3fb 	sdiv	r3, r3, fp
 800811a:	f103 0301 	add.w	r3, r3, #1
 800811e:	bf08      	it	eq
 8008120:	460f      	moveq	r7, r1
 8008122:	1aff      	subs	r7, r7, r3
 8008124:	4620      	mov	r0, r4
 8008126:	9301      	str	r3, [sp, #4]
 8008128:	f7ff fcb6 	bl	8007a98 <WIDGET__GetWindowSizeX>
 800812c:	2f00      	cmp	r7, #0
 800812e:	9b01      	ldr	r3, [sp, #4]
 8008130:	dd11      	ble.n	8008156 <SLIDER_Callback+0xd2>
 8008132:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 8008136:	4287      	cmp	r7, r0
 8008138:	da0c      	bge.n	8008154 <SLIDER_Callback+0xd0>
 800813a:	2800      	cmp	r0, #0
 800813c:	bf08      	it	eq
 800813e:	2001      	moveq	r0, #1
 8008140:	fb90 fbfb 	sdiv	fp, r0, fp
 8008144:	ebc6 0909 	rsb	r9, r6, r9
 8008148:	fb09 b707 	mla	r7, r9, r7, fp
 800814c:	fbb7 f0f0 	udiv	r0, r7, r0
 8008150:	4406      	add	r6, r0
 8008152:	e000      	b.n	8008156 <SLIDER_Callback+0xd2>
 8008154:	464e      	mov	r6, r9
 8008156:	4620      	mov	r0, r4
 8008158:	f002 fc25 	bl	800a9a6 <WM_IsFocussable>
 800815c:	b110      	cbz	r0, 8008164 <SLIDER_Callback+0xe0>
 800815e:	4620      	mov	r0, r4
 8008160:	f002 f9b8 	bl	800a4d4 <WM_SetFocus>
 8008164:	4620      	mov	r0, r4
 8008166:	2101      	movs	r1, #1
 8008168:	f002 fa1c 	bl	800a5a4 <WM_SetCapture>
 800816c:	4620      	mov	r0, r4
 800816e:	4631      	mov	r1, r6
 8008170:	f7ff ff62 	bl	8008038 <SLIDER_SetValue>
 8008174:	f1ba 0f00 	cmp.w	sl, #0
 8008178:	d12a      	bne.n	80081d0 <SLIDER_Callback+0x14c>
 800817a:	4620      	mov	r0, r4
 800817c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008180:	f7ff fcb1 	bl	8007ae6 <WIDGET_OrState>
 8008184:	f018 0f02 	tst.w	r8, #2
 8008188:	d022      	beq.n	80081d0 <SLIDER_Callback+0x14c>
 800818a:	4620      	mov	r0, r4
 800818c:	2101      	movs	r1, #1
 800818e:	e00c      	b.n	80081aa <SLIDER_Callback+0x126>
 8008190:	f1ba 0f00 	cmp.w	sl, #0
 8008194:	d01c      	beq.n	80081d0 <SLIDER_Callback+0x14c>
 8008196:	4620      	mov	r0, r4
 8008198:	f44f 7180 	mov.w	r1, #256	; 0x100
 800819c:	f7ff fcb9 	bl	8007b12 <WIDGET_AndState>
 80081a0:	f018 0f02 	tst.w	r8, #2
 80081a4:	d014      	beq.n	80081d0 <SLIDER_Callback+0x14c>
 80081a6:	4620      	mov	r0, r4
 80081a8:	2102      	movs	r1, #2
 80081aa:	f002 fb02 	bl	800a7b2 <WM_NotifyParent>
 80081ae:	e00f      	b.n	80081d0 <SLIDER_Callback+0x14c>
 80081b0:	68ea      	ldr	r2, [r5, #12]
 80081b2:	6813      	ldr	r3, [r2, #0]
 80081b4:	6852      	ldr	r2, [r2, #4]
 80081b6:	2a00      	cmp	r2, #0
 80081b8:	dd0a      	ble.n	80081d0 <SLIDER_Callback+0x14c>
 80081ba:	2b10      	cmp	r3, #16
 80081bc:	d005      	beq.n	80081ca <SLIDER_Callback+0x146>
 80081be:	2b12      	cmp	r3, #18
 80081c0:	d106      	bne.n	80081d0 <SLIDER_Callback+0x14c>
 80081c2:	4620      	mov	r0, r4
 80081c4:	f7ff ff1a 	bl	8007ffc <SLIDER_Inc>
 80081c8:	e002      	b.n	80081d0 <SLIDER_Callback+0x14c>
 80081ca:	4620      	mov	r0, r4
 80081cc:	f7ff fee6 	bl	8007f9c <SLIDER_Dec>
 80081d0:	4628      	mov	r0, r5
 80081d2:	f003 fe65 	bl	800bea0 <WM_DefaultProc>
 80081d6:	b005      	add	sp, #20
 80081d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080081dc <SLIDER_GetValue>:
 80081dc:	b513      	push	{r0, r1, r4, lr}
 80081de:	4604      	mov	r4, r0
 80081e0:	b140      	cbz	r0, 80081f4 <SLIDER_GetValue+0x18>
 80081e2:	f009 f8ed 	bl	80113c0 <GUI_ALLOC_LockH>
 80081e6:	ab02      	add	r3, sp, #8
 80081e8:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 80081ea:	f843 0d04 	str.w	r0, [r3, #-4]!
 80081ee:	4618      	mov	r0, r3
 80081f0:	f009 f8f4 	bl	80113dc <GUI_ALLOC_UnlockH>
 80081f4:	4620      	mov	r0, r4
 80081f6:	b002      	add	sp, #8
 80081f8:	bd10      	pop	{r4, pc}

080081fa <RADIO_SetTextColor>:
 80081fa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80081fc:	460c      	mov	r4, r1
 80081fe:	4605      	mov	r5, r0
 8008200:	b180      	cbz	r0, 8008224 <RADIO_SetTextColor+0x2a>
 8008202:	f009 f8dd 	bl	80113c0 <GUI_ALLOC_LockH>
 8008206:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8008208:	9001      	str	r0, [sp, #4]
 800820a:	4294      	cmp	r4, r2
 800820c:	d007      	beq.n	800821e <RADIO_SetTextColor+0x24>
 800820e:	6384      	str	r4, [r0, #56]	; 0x38
 8008210:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8008212:	f000 ffed 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 8008216:	b110      	cbz	r0, 800821e <RADIO_SetTextColor+0x24>
 8008218:	4628      	mov	r0, r5
 800821a:	f003 fa1e 	bl	800b65a <WM_InvalidateWindow>
 800821e:	a801      	add	r0, sp, #4
 8008220:	f009 f8dc 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008224:	b003      	add	sp, #12
 8008226:	bd30      	pop	{r4, r5, pc}

08008228 <RADIO_CreateIndirect>:
 8008228:	b5f0      	push	{r4, r5, r6, r7, lr}
 800822a:	b089      	sub	sp, #36	; 0x24
 800822c:	6944      	ldr	r4, [r0, #20]
 800822e:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8008232:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8008236:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 800823a:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800823e:	9100      	str	r1, [sp, #0]
 8008240:	8a41      	ldrh	r1, [r0, #18]
 8008242:	9101      	str	r1, [sp, #4]
 8008244:	2100      	movs	r1, #0
 8008246:	9102      	str	r1, [sp, #8]
 8008248:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800824c:	9103      	str	r1, [sp, #12]
 800824e:	b2e1      	uxtb	r1, r4
 8008250:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8008254:	9104      	str	r1, [sp, #16]
 8008256:	9405      	str	r4, [sp, #20]
 8008258:	6984      	ldr	r4, [r0, #24]
 800825a:	9406      	str	r4, [sp, #24]
 800825c:	eb0e 0002 	add.w	r0, lr, r2
 8008260:	18f9      	adds	r1, r7, r3
 8008262:	4632      	mov	r2, r6
 8008264:	462b      	mov	r3, r5
 8008266:	f000 f839 	bl	80082dc <RADIO_CreateUser>
 800826a:	b009      	add	sp, #36	; 0x24
 800826c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800826e <RADIO__GetButtonSize>:
 800826e:	b530      	push	{r4, r5, lr}
 8008270:	b08b      	sub	sp, #44	; 0x2c
 8008272:	4605      	mov	r5, r0
 8008274:	f009 f8a4 	bl	80113c0 <GUI_ALLOC_LockH>
 8008278:	ab0a      	add	r3, sp, #40	; 0x28
 800827a:	6d82      	ldr	r2, [r0, #88]	; 0x58
 800827c:	f843 0d28 	str.w	r0, [r3, #-40]!
 8008280:	6894      	ldr	r4, [r2, #8]
 8008282:	4668      	mov	r0, sp
 8008284:	f009 f8aa 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008288:	2319      	movs	r3, #25
 800828a:	9302      	str	r3, [sp, #8]
 800828c:	9501      	str	r5, [sp, #4]
 800828e:	6863      	ldr	r3, [r4, #4]
 8008290:	a801      	add	r0, sp, #4
 8008292:	4798      	blx	r3
 8008294:	b00b      	add	sp, #44	; 0x2c
 8008296:	bd30      	pop	{r4, r5, pc}

08008298 <RADIO__SetValue>:
 8008298:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800829a:	460c      	mov	r4, r1
 800829c:	4605      	mov	r5, r0
 800829e:	f009 f88f 	bl	80113c0 <GUI_ALLOC_LockH>
 80082a2:	f8b0 2064 	ldrh.w	r2, [r0, #100]	; 0x64
 80082a6:	9001      	str	r0, [sp, #4]
 80082a8:	4294      	cmp	r4, r2
 80082aa:	bfa8      	it	ge
 80082ac:	f102 34ff 	addge.w	r4, r2, #4294967295
 80082b0:	f9b0 2060 	ldrsh.w	r2, [r0, #96]	; 0x60
 80082b4:	4294      	cmp	r4, r2
 80082b6:	d00c      	beq.n	80082d2 <RADIO__SetValue+0x3a>
 80082b8:	f8a0 4060 	strh.w	r4, [r0, #96]	; 0x60
 80082bc:	4628      	mov	r0, r5
 80082be:	f003 f9cc 	bl	800b65a <WM_InvalidateWindow>
 80082c2:	a801      	add	r0, sp, #4
 80082c4:	f009 f88a 	bl	80113dc <GUI_ALLOC_UnlockH>
 80082c8:	4628      	mov	r0, r5
 80082ca:	2105      	movs	r1, #5
 80082cc:	f002 fa71 	bl	800a7b2 <WM_NotifyParent>
 80082d0:	e002      	b.n	80082d8 <RADIO__SetValue+0x40>
 80082d2:	a801      	add	r0, sp, #4
 80082d4:	f009 f882 	bl	80113dc <GUI_ALLOC_UnlockH>
 80082d8:	b003      	add	sp, #12
 80082da:	bd30      	pop	{r4, r5, pc}

080082dc <RADIO_CreateUser>:
 80082dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082e0:	b087      	sub	sp, #28
 80082e2:	4c33      	ldr	r4, [pc, #204]	; (80083b0 <RADIO_CreateUser+0xd4>)
 80082e4:	9f15      	ldr	r7, [sp, #84]	; 0x54
 80082e6:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80082e8:	6924      	ldr	r4, [r4, #16]
 80082ea:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 80082ee:	8865      	ldrh	r5, [r4, #2]
 80082f0:	2f00      	cmp	r7, #0
 80082f2:	bfd8      	it	le
 80082f4:	2714      	movle	r7, #20
 80082f6:	2e00      	cmp	r6, #0
 80082f8:	bfd8      	it	le
 80082fa:	2602      	movle	r6, #2
 80082fc:	b91b      	cbnz	r3, 8008306 <RADIO_CreateUser+0x2a>
 80082fe:	3504      	adds	r5, #4
 8008300:	1e73      	subs	r3, r6, #1
 8008302:	fb07 5303 	mla	r3, r7, r3, r5
 8008306:	b90a      	cbnz	r2, 800830c <RADIO_CreateUser+0x30>
 8008308:	8822      	ldrh	r2, [r4, #0]
 800830a:	3204      	adds	r2, #4
 800830c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800830e:	f8cd a000 	str.w	sl, [sp]
 8008312:	f044 0401 	orr.w	r4, r4, #1
 8008316:	9401      	str	r4, [sp, #4]
 8008318:	4c26      	ldr	r4, [pc, #152]	; (80083b4 <RADIO_CreateUser+0xd8>)
 800831a:	9402      	str	r4, [sp, #8]
 800831c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 800831e:	343c      	adds	r4, #60	; 0x3c
 8008320:	9403      	str	r4, [sp, #12]
 8008322:	f003 f9db 	bl	800b6dc <WM_CreateWindowAsChild>
 8008326:	4680      	mov	r8, r0
 8008328:	2800      	cmp	r0, #0
 800832a:	d03c      	beq.n	80083a6 <RADIO_CreateUser+0xca>
 800832c:	f000 fff5 	bl	800931a <GUI_ARRAY_Create>
 8008330:	2400      	movs	r4, #0
 8008332:	4605      	mov	r5, r0
 8008334:	2100      	movs	r1, #0
 8008336:	4628      	mov	r0, r5
 8008338:	460a      	mov	r2, r1
 800833a:	3401      	adds	r4, #1
 800833c:	f000 ff67 	bl	800920e <GUI_ARRAY_AddItem>
 8008340:	42b4      	cmp	r4, r6
 8008342:	dbf7      	blt.n	8008334 <RADIO_CreateUser+0x58>
 8008344:	4640      	mov	r0, r8
 8008346:	f009 f83b 	bl	80113c0 <GUI_ALLOC_LockH>
 800834a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800834c:	65c5      	str	r5, [r0, #92]	; 0x5c
 800834e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8008352:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8008354:	f8df b060 	ldr.w	fp, [pc, #96]	; 80083b8 <RADIO_CreateUser+0xdc>
 8008358:	9005      	str	r0, [sp, #20]
 800835a:	f042 0210 	orr.w	r2, r2, #16
 800835e:	f7ff fbed 	bl	8007b3c <WIDGET__Init>
 8008362:	4d13      	ldr	r5, [pc, #76]	; (80083b0 <RADIO_CreateUser+0xd4>)
 8008364:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8008368:	f8db 3000 	ldr.w	r3, [fp]
 800836c:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
 8008370:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008372:	f109 0434 	add.w	r4, r9, #52	; 0x34
 8008376:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008378:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800837a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800837c:	682b      	ldr	r3, [r5, #0]
 800837e:	6023      	str	r3, [r4, #0]
 8008380:	4650      	mov	r0, sl
 8008382:	f002 fc19 	bl	800abb8 <WM_GetBkColor>
 8008386:	f8c9 0034 	str.w	r0, [r9, #52]	; 0x34
 800838a:	a806      	add	r0, sp, #24
 800838c:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8008390:	f8a3 6064 	strh.w	r6, [r3, #100]	; 0x64
 8008394:	f8a3 7062 	strh.w	r7, [r3, #98]	; 0x62
 8008398:	f009 f820 	bl	80113dc <GUI_ALLOC_UnlockH>
 800839c:	f8db 3000 	ldr.w	r3, [fp]
 80083a0:	4640      	mov	r0, r8
 80083a2:	685b      	ldr	r3, [r3, #4]
 80083a4:	4798      	blx	r3
 80083a6:	4640      	mov	r0, r8
 80083a8:	b007      	add	sp, #28
 80083aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80083ae:	bf00      	nop
 80083b0:	20000070 	.word	0x20000070
 80083b4:	0800842f 	.word	0x0800842f
 80083b8:	20000094 	.word	0x20000094

080083bc <RADIO_SetValue>:
 80083bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80083be:	460c      	mov	r4, r1
 80083c0:	4605      	mov	r5, r0
 80083c2:	b1a8      	cbz	r0, 80083f0 <RADIO_SetValue+0x34>
 80083c4:	f008 fffc 	bl	80113c0 <GUI_ALLOC_LockH>
 80083c8:	ab02      	add	r3, sp, #8
 80083ca:	f890 6066 	ldrb.w	r6, [r0, #102]	; 0x66
 80083ce:	f843 0d04 	str.w	r0, [r3, #-4]!
 80083d2:	4618      	mov	r0, r3
 80083d4:	f009 f802 	bl	80113dc <GUI_ALLOC_UnlockH>
 80083d8:	4628      	mov	r0, r5
 80083da:	b12e      	cbz	r6, 80083e8 <RADIO_SetValue+0x2c>
 80083dc:	4b05      	ldr	r3, [pc, #20]	; (80083f4 <RADIO_SetValue+0x38>)
 80083de:	681b      	ldr	r3, [r3, #0]
 80083e0:	b113      	cbz	r3, 80083e8 <RADIO_SetValue+0x2c>
 80083e2:	4621      	mov	r1, r4
 80083e4:	4798      	blx	r3
 80083e6:	e003      	b.n	80083f0 <RADIO_SetValue+0x34>
 80083e8:	ea24 71e4 	bic.w	r1, r4, r4, asr #31
 80083ec:	f7ff ff54 	bl	8008298 <RADIO__SetValue>
 80083f0:	b002      	add	sp, #8
 80083f2:	bd70      	pop	{r4, r5, r6, pc}
 80083f4:	20019948 	.word	0x20019948

080083f8 <RADIO_AddValue>:
 80083f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80083fa:	460c      	mov	r4, r1
 80083fc:	4606      	mov	r6, r0
 80083fe:	b168      	cbz	r0, 800841c <RADIO_AddValue+0x24>
 8008400:	f008 ffde 	bl	80113c0 <GUI_ALLOC_LockH>
 8008404:	4602      	mov	r2, r0
 8008406:	a802      	add	r0, sp, #8
 8008408:	f9b2 5060 	ldrsh.w	r5, [r2, #96]	; 0x60
 800840c:	f840 2d04 	str.w	r2, [r0, #-4]!
 8008410:	f008 ffe4 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008414:	4630      	mov	r0, r6
 8008416:	1929      	adds	r1, r5, r4
 8008418:	f7ff ffd0 	bl	80083bc <RADIO_SetValue>
 800841c:	b002      	add	sp, #8
 800841e:	bd70      	pop	{r4, r5, r6, pc}

08008420 <RADIO_Dec>:
 8008420:	f04f 31ff 	mov.w	r1, #4294967295
 8008424:	f7ff bfe8 	b.w	80083f8 <RADIO_AddValue>

08008428 <RADIO_Inc>:
 8008428:	2101      	movs	r1, #1
 800842a:	f7ff bfe5 	b.w	80083f8 <RADIO_AddValue>

0800842e <RADIO_Callback>:
 800842e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008432:	6844      	ldr	r4, [r0, #4]
 8008434:	4605      	mov	r5, r0
 8008436:	4629      	mov	r1, r5
 8008438:	4620      	mov	r0, r4
 800843a:	f7ff fb87 	bl	8007b4c <WIDGET_HandleActive>
 800843e:	2800      	cmp	r0, #0
 8008440:	f000 809a 	beq.w	8008578 <RADIO_Callback+0x14a>
 8008444:	682b      	ldr	r3, [r5, #0]
 8008446:	2b0f      	cmp	r3, #15
 8008448:	d00c      	beq.n	8008464 <RADIO_Callback+0x36>
 800844a:	dc05      	bgt.n	8008458 <RADIO_Callback+0x2a>
 800844c:	2b0b      	cmp	r3, #11
 800844e:	f000 8084 	beq.w	800855a <RADIO_Callback+0x12c>
 8008452:	2b0e      	cmp	r3, #14
 8008454:	d06d      	beq.n	8008532 <RADIO_Callback+0x104>
 8008456:	e08c      	b.n	8008572 <RADIO_Callback+0x144>
 8008458:	2b2b      	cmp	r3, #43	; 0x2b
 800845a:	d013      	beq.n	8008484 <RADIO_Callback+0x56>
 800845c:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8008460:	d01d      	beq.n	800849e <RADIO_Callback+0x70>
 8008462:	e086      	b.n	8008572 <RADIO_Callback+0x144>
 8008464:	4620      	mov	r0, r4
 8008466:	f008 ffab 	bl	80113c0 <GUI_ALLOC_LockH>
 800846a:	ab02      	add	r3, sp, #8
 800846c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008470:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8008472:	6815      	ldr	r5, [r2, #0]
 8008474:	4618      	mov	r0, r3
 8008476:	f008 ffb1 	bl	80113dc <GUI_ALLOC_UnlockH>
 800847a:	2d00      	cmp	r5, #0
 800847c:	d07c      	beq.n	8008578 <RADIO_Callback+0x14a>
 800847e:	4620      	mov	r0, r4
 8008480:	47a8      	blx	r5
 8008482:	e079      	b.n	8008578 <RADIO_Callback+0x14a>
 8008484:	4620      	mov	r0, r4
 8008486:	f008 ff9b 	bl	80113c0 <GUI_ALLOC_LockH>
 800848a:	ab02      	add	r3, sp, #8
 800848c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008490:	f890 2066 	ldrb.w	r2, [r0, #102]	; 0x66
 8008494:	60ea      	str	r2, [r5, #12]
 8008496:	4618      	mov	r0, r3
 8008498:	f008 ffa0 	bl	80113dc <GUI_ALLOC_UnlockH>
 800849c:	e06c      	b.n	8008578 <RADIO_Callback+0x14a>
 800849e:	4620      	mov	r0, r4
 80084a0:	68ee      	ldr	r6, [r5, #12]
 80084a2:	f008 ff8d 	bl	80113c0 <GUI_ALLOC_LockH>
 80084a6:	9001      	str	r0, [sp, #4]
 80084a8:	f890 3066 	ldrb.w	r3, [r0, #102]	; 0x66
 80084ac:	f8b0 7062 	ldrh.w	r7, [r0, #98]	; 0x62
 80084b0:	b143      	cbz	r3, 80084c4 <RADIO_Callback+0x96>
 80084b2:	f9b0 9006 	ldrsh.w	r9, [r0, #6]
 80084b6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80084ba:	ebc3 0909 	rsb	r9, r3, r9
 80084be:	f109 0901 	add.w	r9, r9, #1
 80084c2:	e006      	b.n	80084d2 <RADIO_Callback+0xa4>
 80084c4:	6d83      	ldr	r3, [r0, #88]	; 0x58
 80084c6:	689b      	ldr	r3, [r3, #8]
 80084c8:	4620      	mov	r0, r4
 80084ca:	681b      	ldr	r3, [r3, #0]
 80084cc:	4798      	blx	r3
 80084ce:	f100 0904 	add.w	r9, r0, #4
 80084d2:	a802      	add	r0, sp, #8
 80084d4:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80084d8:	f8b3 8030 	ldrh.w	r8, [r3, #48]	; 0x30
 80084dc:	f008 ff7e 	bl	80113dc <GUI_ALLOC_UnlockH>
 80084e0:	68eb      	ldr	r3, [r5, #12]
 80084e2:	b1a3      	cbz	r3, 800850e <RADIO_Callback+0xe0>
 80084e4:	7a33      	ldrb	r3, [r6, #8]
 80084e6:	b1ab      	cbz	r3, 8008514 <RADIO_Callback+0xe6>
 80084e8:	6873      	ldr	r3, [r6, #4]
 80084ea:	fb93 f1f7 	sdiv	r1, r3, r7
 80084ee:	fb07 3711 	mls	r7, r7, r1, r3
 80084f2:	454f      	cmp	r7, r9
 80084f4:	dc02      	bgt.n	80084fc <RADIO_Callback+0xce>
 80084f6:	4620      	mov	r0, r4
 80084f8:	f7ff ff60 	bl	80083bc <RADIO_SetValue>
 80084fc:	4620      	mov	r0, r4
 80084fe:	f002 fa52 	bl	800a9a6 <WM_IsFocussable>
 8008502:	b150      	cbz	r0, 800851a <RADIO_Callback+0xec>
 8008504:	4620      	mov	r0, r4
 8008506:	f001 ffe5 	bl	800a4d4 <WM_SetFocus>
 800850a:	2600      	movs	r6, #0
 800850c:	e006      	b.n	800851c <RADIO_Callback+0xee>
 800850e:	461e      	mov	r6, r3
 8008510:	2103      	movs	r1, #3
 8008512:	e004      	b.n	800851e <RADIO_Callback+0xf0>
 8008514:	2601      	movs	r6, #1
 8008516:	2102      	movs	r1, #2
 8008518:	e001      	b.n	800851e <RADIO_Callback+0xf0>
 800851a:	4606      	mov	r6, r0
 800851c:	2101      	movs	r1, #1
 800851e:	4620      	mov	r0, r4
 8008520:	f002 f947 	bl	800a7b2 <WM_NotifyParent>
 8008524:	2e01      	cmp	r6, #1
 8008526:	d124      	bne.n	8008572 <RADIO_Callback+0x144>
 8008528:	fa0f f088 	sxth.w	r0, r8
 800852c:	f007 fe96 	bl	801025c <GUI_StoreKey>
 8008530:	e01f      	b.n	8008572 <RADIO_Callback+0x144>
 8008532:	68eb      	ldr	r3, [r5, #12]
 8008534:	685a      	ldr	r2, [r3, #4]
 8008536:	2a00      	cmp	r2, #0
 8008538:	dd1b      	ble.n	8008572 <RADIO_Callback+0x144>
 800853a:	681b      	ldr	r3, [r3, #0]
 800853c:	3b10      	subs	r3, #16
 800853e:	2b03      	cmp	r3, #3
 8008540:	d817      	bhi.n	8008572 <RADIO_Callback+0x144>
 8008542:	e8df f003 	tbb	[pc, r3]
 8008546:	0606      	.short	0x0606
 8008548:	0202      	.short	0x0202
 800854a:	4620      	mov	r0, r4
 800854c:	f7ff ff6c 	bl	8008428 <RADIO_Inc>
 8008550:	e00f      	b.n	8008572 <RADIO_Callback+0x144>
 8008552:	4620      	mov	r0, r4
 8008554:	f7ff ff64 	bl	8008420 <RADIO_Dec>
 8008558:	e00b      	b.n	8008572 <RADIO_Callback+0x144>
 800855a:	4620      	mov	r0, r4
 800855c:	f008 ff30 	bl	80113c0 <GUI_ALLOC_LockH>
 8008560:	ac02      	add	r4, sp, #8
 8008562:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008566:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8008568:	f000 fe9b 	bl	80092a2 <GUI_ARRAY_Delete>
 800856c:	4620      	mov	r0, r4
 800856e:	f008 ff35 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008572:	4628      	mov	r0, r5
 8008574:	f003 fc94 	bl	800bea0 <WM_DefaultProc>
 8008578:	b003      	add	sp, #12
 800857a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800857e <RADIO_GetValue>:
 800857e:	b513      	push	{r0, r1, r4, lr}
 8008580:	4604      	mov	r4, r0
 8008582:	b148      	cbz	r0, 8008598 <RADIO_GetValue+0x1a>
 8008584:	f008 ff1c 	bl	80113c0 <GUI_ALLOC_LockH>
 8008588:	ab02      	add	r3, sp, #8
 800858a:	f9b0 4060 	ldrsh.w	r4, [r0, #96]	; 0x60
 800858e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008592:	4618      	mov	r0, r3
 8008594:	f008 ff22 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008598:	4620      	mov	r0, r4
 800859a:	b002      	add	sp, #8
 800859c:	bd10      	pop	{r4, pc}

0800859e <_AdjustRect>:
 800859e:	b538      	push	{r3, r4, r5, lr}
 80085a0:	4605      	mov	r5, r0
 80085a2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80085a4:	460c      	mov	r4, r1
 80085a6:	f007 ff73 	bl	8010490 <GUI_GetYSizeOfFont>
 80085aa:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
 80085ae:	b90b      	cbnz	r3, 80085b4 <_AdjustRect+0x16>
 80085b0:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
 80085b4:	6eaa      	ldr	r2, [r5, #104]	; 0x68
 80085b6:	4283      	cmp	r3, r0
 80085b8:	bfac      	ite	ge
 80085ba:	18d0      	addge	r0, r2, r3
 80085bc:	1810      	addlt	r0, r2, r0
 80085be:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 80085c0:	f013 0f08 	tst.w	r3, #8
 80085c4:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80085c6:	d009      	beq.n	80085dc <_AdjustRect+0x3e>
 80085c8:	075a      	lsls	r2, r3, #29
 80085ca:	d503      	bpl.n	80085d4 <_AdjustRect+0x36>
 80085cc:	8823      	ldrh	r3, [r4, #0]
 80085ce:	4418      	add	r0, r3
 80085d0:	8020      	strh	r0, [r4, #0]
 80085d2:	bd38      	pop	{r3, r4, r5, pc}
 80085d4:	88a3      	ldrh	r3, [r4, #4]
 80085d6:	1a18      	subs	r0, r3, r0
 80085d8:	80a0      	strh	r0, [r4, #4]
 80085da:	bd38      	pop	{r3, r4, r5, pc}
 80085dc:	075b      	lsls	r3, r3, #29
 80085de:	d503      	bpl.n	80085e8 <_AdjustRect+0x4a>
 80085e0:	88e3      	ldrh	r3, [r4, #6]
 80085e2:	1a18      	subs	r0, r3, r0
 80085e4:	80e0      	strh	r0, [r4, #6]
 80085e6:	bd38      	pop	{r3, r4, r5, pc}
 80085e8:	8863      	ldrh	r3, [r4, #2]
 80085ea:	4418      	add	r0, r3
 80085ec:	8060      	strh	r0, [r4, #2]
 80085ee:	bd38      	pop	{r3, r4, r5, pc}

080085f0 <_GetScrollbarH>:
 80085f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80085f2:	f008 fee5 	bl	80113c0 <GUI_ALLOC_LockH>
 80085f6:	ad02      	add	r5, sp, #8
 80085f8:	69c4      	ldr	r4, [r0, #28]
 80085fa:	f845 0d04 	str.w	r0, [r5, #-4]!
 80085fe:	4628      	mov	r0, r5
 8008600:	f008 feec 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008604:	b154      	cbz	r4, 800861c <_GetScrollbarH+0x2c>
 8008606:	4620      	mov	r0, r4
 8008608:	f002 fa4c 	bl	800aaa4 <WM_GetId>
 800860c:	28ff      	cmp	r0, #255	; 0xff
 800860e:	d005      	beq.n	800861c <_GetScrollbarH+0x2c>
 8008610:	4620      	mov	r0, r4
 8008612:	f008 fed5 	bl	80113c0 <GUI_ALLOC_LockH>
 8008616:	9001      	str	r0, [sp, #4]
 8008618:	6a04      	ldr	r4, [r0, #32]
 800861a:	e7f0      	b.n	80085fe <_GetScrollbarH+0xe>
 800861c:	4620      	mov	r0, r4
 800861e:	b003      	add	sp, #12
 8008620:	bd30      	pop	{r4, r5, pc}

08008622 <_GetEnable>:
 8008622:	b513      	push	{r0, r1, r4, lr}
 8008624:	460c      	mov	r4, r1
 8008626:	f008 fecb 	bl	80113c0 <GUI_ALLOC_LockH>
 800862a:	9001      	str	r0, [sp, #4]
 800862c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800862e:	f000 fddf 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 8008632:	4284      	cmp	r4, r0
 8008634:	d20e      	bcs.n	8008654 <_GetEnable+0x32>
 8008636:	9b01      	ldr	r3, [sp, #4]
 8008638:	4621      	mov	r1, r4
 800863a:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800863c:	f000 fe5a 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 8008640:	ab02      	add	r3, sp, #8
 8008642:	7904      	ldrb	r4, [r0, #4]
 8008644:	f843 0d08 	str.w	r0, [r3, #-8]!
 8008648:	4668      	mov	r0, sp
 800864a:	f004 0401 	and.w	r4, r4, #1
 800864e:	f008 fec5 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008652:	e000      	b.n	8008656 <_GetEnable+0x34>
 8008654:	2400      	movs	r4, #0
 8008656:	a801      	add	r0, sp, #4
 8008658:	f008 fec0 	bl	80113dc <GUI_ALLOC_UnlockH>
 800865c:	4620      	mov	r0, r4
 800865e:	b002      	add	sp, #8
 8008660:	bd10      	pop	{r4, pc}

08008662 <_AddScrollbar>:
 8008662:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008666:	b089      	sub	sp, #36	; 0x24
 8008668:	4689      	mov	r9, r1
 800866a:	4690      	mov	r8, r2
 800866c:	4605      	mov	r5, r0
 800866e:	461f      	mov	r7, r3
 8008670:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8008672:	f008 fea5 	bl	80113c0 <GUI_ALLOC_LockH>
 8008676:	ac08      	add	r4, sp, #32
 8008678:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800867a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800867e:	f8b0 a032 	ldrh.w	sl, [r0, #50]	; 0x32
 8008682:	9305      	str	r3, [sp, #20]
 8008684:	4620      	mov	r0, r4
 8008686:	f008 fea9 	bl	80113dc <GUI_ALLOC_UnlockH>
 800868a:	4628      	mov	r0, r5
 800868c:	f7ff ffb0 	bl	80085f0 <_GetScrollbarH>
 8008690:	4683      	mov	fp, r0
 8008692:	b9a0      	cbnz	r0, 80086be <_AddScrollbar+0x5c>
 8008694:	f00a 0308 	and.w	r3, sl, #8
 8008698:	21ff      	movs	r1, #255	; 0xff
 800869a:	2202      	movs	r2, #2
 800869c:	b29b      	uxth	r3, r3
 800869e:	9500      	str	r5, [sp, #0]
 80086a0:	9101      	str	r1, [sp, #4]
 80086a2:	9202      	str	r2, [sp, #8]
 80086a4:	b103      	cbz	r3, 80086a8 <_AddScrollbar+0x46>
 80086a6:	2308      	movs	r3, #8
 80086a8:	9303      	str	r3, [sp, #12]
 80086aa:	4641      	mov	r1, r8
 80086ac:	4648      	mov	r0, r9
 80086ae:	463a      	mov	r2, r7
 80086b0:	4633      	mov	r3, r6
 80086b2:	f009 fd84 	bl	80121be <SCROLLBAR_Create>
 80086b6:	9905      	ldr	r1, [sp, #20]
 80086b8:	f009 f9b8 	bl	8011a2c <WIDGET_SetEffect>
 80086bc:	e008      	b.n	80086d0 <_AddScrollbar+0x6e>
 80086be:	4649      	mov	r1, r9
 80086c0:	4642      	mov	r2, r8
 80086c2:	f002 f880 	bl	800a7c6 <WM_MoveChildTo>
 80086c6:	4658      	mov	r0, fp
 80086c8:	4639      	mov	r1, r7
 80086ca:	4632      	mov	r2, r6
 80086cc:	f001 fe6d 	bl	800a3aa <WM_SetSize>
 80086d0:	4628      	mov	r0, r5
 80086d2:	f008 fe75 	bl	80113c0 <GUI_ALLOC_LockH>
 80086d6:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80086d8:	9007      	str	r0, [sp, #28]
 80086da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80086de:	8643      	strh	r3, [r0, #50]	; 0x32
 80086e0:	4620      	mov	r0, r4
 80086e2:	f008 fe7b 	bl	80113dc <GUI_ALLOC_UnlockH>
 80086e6:	b009      	add	sp, #36	; 0x24
 80086e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080086ec <_SetScrollbar>:
 80086ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80086ee:	460c      	mov	r4, r1
 80086f0:	4606      	mov	r6, r0
 80086f2:	f7ff ff7d 	bl	80085f0 <_GetScrollbarH>
 80086f6:	4621      	mov	r1, r4
 80086f8:	4605      	mov	r5, r0
 80086fa:	f00a f831 	bl	8012760 <SCROLLBAR_SetNumItems>
 80086fe:	4628      	mov	r0, r5
 8008700:	2101      	movs	r1, #1
 8008702:	f00a f840 	bl	8012786 <SCROLLBAR_SetPageSize>
 8008706:	4630      	mov	r0, r6
 8008708:	f008 fe5a 	bl	80113c0 <GUI_ALLOC_LockH>
 800870c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800870e:	9001      	str	r0, [sp, #4]
 8008710:	42a2      	cmp	r2, r4
 8008712:	4603      	mov	r3, r0
 8008714:	db07      	blt.n	8008726 <_SetScrollbar+0x3a>
 8008716:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8008718:	f012 0201 	ands.w	r2, r2, #1
 800871c:	bf1a      	itte	ne
 800871e:	f104 34ff 	addne.w	r4, r4, #4294967295
 8008722:	6444      	strne	r4, [r0, #68]	; 0x44
 8008724:	6442      	streq	r2, [r0, #68]	; 0x44
 8008726:	4628      	mov	r0, r5
 8008728:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800872a:	f009 fe09 	bl	8012340 <SCROLLBAR_SetValue>
 800872e:	a801      	add	r0, sp, #4
 8008730:	f008 fe54 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008734:	b002      	add	sp, #8
 8008736:	bd70      	pop	{r4, r5, r6, pc}

08008738 <_ShowPage>:
 8008738:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800873a:	460d      	mov	r5, r1
 800873c:	f008 fe40 	bl	80113c0 <GUI_ALLOC_LockH>
 8008740:	4602      	mov	r2, r0
 8008742:	a804      	add	r0, sp, #16
 8008744:	6b96      	ldr	r6, [r2, #56]	; 0x38
 8008746:	f840 2d0c 	str.w	r2, [r0, #-12]!
 800874a:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 800874c:	f008 fe46 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008750:	4630      	mov	r0, r6
 8008752:	f008 fe35 	bl	80113c0 <GUI_ALLOC_LockH>
 8008756:	9002      	str	r0, [sp, #8]
 8008758:	4620      	mov	r0, r4
 800875a:	f000 fd49 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 800875e:	4285      	cmp	r5, r0
 8008760:	d20b      	bcs.n	800877a <_ShowPage+0x42>
 8008762:	4629      	mov	r1, r5
 8008764:	4620      	mov	r0, r4
 8008766:	f000 fdc5 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 800876a:	ab04      	add	r3, sp, #16
 800876c:	6805      	ldr	r5, [r0, #0]
 800876e:	f843 0d10 	str.w	r0, [r3, #-16]!
 8008772:	4668      	mov	r0, sp
 8008774:	f008 fe32 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008778:	e000      	b.n	800877c <_ShowPage+0x44>
 800877a:	2500      	movs	r5, #0
 800877c:	a804      	add	r0, sp, #16
 800877e:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8008782:	69dc      	ldr	r4, [r3, #28]
 8008784:	f008 fe2a 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008788:	b1cc      	cbz	r4, 80087be <_ShowPage+0x86>
 800878a:	42ac      	cmp	r4, r5
 800878c:	4620      	mov	r0, r4
 800878e:	d10b      	bne.n	80087a8 <_ShowPage+0x70>
 8008790:	f001 fdc1 	bl	800a316 <WM_ShowWindow>
 8008794:	f002 f996 	bl	800aac4 <WM_GetFocussedWindow>
 8008798:	4621      	mov	r1, r4
 800879a:	f001 fcea 	bl	800a172 <WM__IsChild>
 800879e:	b928      	cbnz	r0, 80087ac <_ShowPage+0x74>
 80087a0:	4620      	mov	r0, r4
 80087a2:	f001 fe97 	bl	800a4d4 <WM_SetFocus>
 80087a6:	e001      	b.n	80087ac <_ShowPage+0x74>
 80087a8:	f002 f916 	bl	800a9d8 <WM_HideWindow>
 80087ac:	4620      	mov	r0, r4
 80087ae:	f008 fe07 	bl	80113c0 <GUI_ALLOC_LockH>
 80087b2:	ab04      	add	r3, sp, #16
 80087b4:	6a04      	ldr	r4, [r0, #32]
 80087b6:	f843 0d04 	str.w	r0, [r3, #-4]!
 80087ba:	4618      	mov	r0, r3
 80087bc:	e7e2      	b.n	8008784 <_ShowPage+0x4c>
 80087be:	b004      	add	sp, #16
 80087c0:	bd70      	pop	{r4, r5, r6, pc}

080087c2 <MULTIPAGE__CalcBorderRect>:
 80087c2:	b538      	push	{r3, r4, r5, lr}
 80087c4:	4605      	mov	r5, r0
 80087c6:	460c      	mov	r4, r1
 80087c8:	f002 feff 	bl	800b5ca <WM__GetClientRectWin>
 80087cc:	4628      	mov	r0, r5
 80087ce:	4621      	mov	r1, r4
 80087d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80087d4:	f7ff bee3 	b.w	800859e <_AdjustRect>

080087d8 <MULTIPAGE__CalcClientRect>:
 80087d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80087da:	460d      	mov	r5, r1
 80087dc:	f008 fdf0 	bl	80113c0 <GUI_ALLOC_LockH>
 80087e0:	ac02      	add	r4, sp, #8
 80087e2:	4629      	mov	r1, r5
 80087e4:	9001      	str	r0, [sp, #4]
 80087e6:	f7ff f94a 	bl	8007a7e <WIDGET__GetInsideRect>
 80087ea:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 80087ee:	4629      	mov	r1, r5
 80087f0:	f7ff fed5 	bl	800859e <_AdjustRect>
 80087f4:	4620      	mov	r0, r4
 80087f6:	f008 fdf1 	bl	80113dc <GUI_ALLOC_UnlockH>
 80087fa:	b003      	add	sp, #12
 80087fc:	bd30      	pop	{r4, r5, pc}

080087fe <MULTIPAGE__DeleteScrollbar>:
 80087fe:	b513      	push	{r0, r1, r4, lr}
 8008800:	4604      	mov	r4, r0
 8008802:	f7ff fef5 	bl	80085f0 <_GetScrollbarH>
 8008806:	f003 f813 	bl	800b830 <WM_DeleteWindow>
 800880a:	4620      	mov	r0, r4
 800880c:	f008 fdd8 	bl	80113c0 <GUI_ALLOC_LockH>
 8008810:	ab02      	add	r3, sp, #8
 8008812:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8008814:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008818:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800881c:	8642      	strh	r2, [r0, #50]	; 0x32
 800881e:	4618      	mov	r0, r3
 8008820:	f008 fddc 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008824:	b002      	add	sp, #8
 8008826:	bd10      	pop	{r4, pc}

08008828 <MULTIPAGE__GetPageWidth>:
 8008828:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800882a:	460d      	mov	r5, r1
 800882c:	f008 fdc8 	bl	80113c0 <GUI_ALLOC_LockH>
 8008830:	9001      	str	r0, [sp, #4]
 8008832:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008834:	f000 fcdc 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 8008838:	9b01      	ldr	r3, [sp, #4]
 800883a:	6e5c      	ldr	r4, [r3, #100]	; 0x64
 800883c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800883e:	8e59      	ldrh	r1, [r3, #50]	; 0x32
 8008840:	2908      	cmp	r1, #8
 8008842:	bf08      	it	eq
 8008844:	4614      	moveq	r4, r2
 8008846:	4285      	cmp	r5, r0
 8008848:	d22e      	bcs.n	80088a8 <MULTIPAGE__GetPageWidth+0x80>
 800884a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800884c:	f007 fb9a 	bl	800ff84 <GUI_SetFont>
 8008850:	9b01      	ldr	r3, [sp, #4]
 8008852:	4629      	mov	r1, r5
 8008854:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8008856:	f000 fd4d 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 800885a:	6885      	ldr	r5, [r0, #8]
 800885c:	9000      	str	r0, [sp, #0]
 800885e:	b10d      	cbz	r5, 8008864 <MULTIPAGE__GetPageWidth+0x3c>
 8008860:	442c      	add	r4, r5
 8008862:	e01d      	b.n	80088a0 <MULTIPAGE__GetPageWidth+0x78>
 8008864:	3018      	adds	r0, #24
 8008866:	f007 fe17 	bl	8010498 <GUI_GetStringDistX>
 800886a:	462e      	mov	r6, r5
 800886c:	1907      	adds	r7, r0, r4
 800886e:	9b00      	ldr	r3, [sp, #0]
 8008870:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8008874:	68d8      	ldr	r0, [r3, #12]
 8008876:	b160      	cbz	r0, 8008892 <MULTIPAGE__GetPageWidth+0x6a>
 8008878:	9b01      	ldr	r3, [sp, #4]
 800887a:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 800887c:	071b      	lsls	r3, r3, #28
 800887e:	d502      	bpl.n	8008886 <MULTIPAGE__GetPageWidth+0x5e>
 8008880:	f000 fc83 	bl	800918a <GUI_DRAW__GetYSize>
 8008884:	e001      	b.n	800888a <MULTIPAGE__GetPageWidth+0x62>
 8008886:	f000 fc6e 	bl	8009166 <GUI_DRAW__GetXSize>
 800888a:	4420      	add	r0, r4
 800888c:	4286      	cmp	r6, r0
 800888e:	bfb8      	it	lt
 8008890:	4606      	movlt	r6, r0
 8008892:	3501      	adds	r5, #1
 8008894:	2d03      	cmp	r5, #3
 8008896:	d1ea      	bne.n	800886e <MULTIPAGE__GetPageWidth+0x46>
 8008898:	42be      	cmp	r6, r7
 800889a:	bfac      	ite	ge
 800889c:	4634      	movge	r4, r6
 800889e:	463c      	movlt	r4, r7
 80088a0:	4668      	mov	r0, sp
 80088a2:	f008 fd9b 	bl	80113dc <GUI_ALLOC_UnlockH>
 80088a6:	e000      	b.n	80088aa <MULTIPAGE__GetPageWidth+0x82>
 80088a8:	2400      	movs	r4, #0
 80088aa:	a801      	add	r0, sp, #4
 80088ac:	f008 fd96 	bl	80113dc <GUI_ALLOC_UnlockH>
 80088b0:	4620      	mov	r0, r4
 80088b2:	b003      	add	sp, #12
 80088b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080088b6 <MULTIPAGE__GetTabBarRect>:
 80088b6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80088ba:	b085      	sub	sp, #20
 80088bc:	460c      	mov	r4, r1
 80088be:	4606      	mov	r6, r0
 80088c0:	f008 fd7e 	bl	80113c0 <GUI_ALLOC_LockH>
 80088c4:	9001      	str	r0, [sp, #4]
 80088c6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80088c8:	f007 fde2 	bl	8010490 <GUI_GetYSizeOfFont>
 80088cc:	9b01      	ldr	r3, [sp, #4]
 80088ce:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
 80088d2:	b90a      	cbnz	r2, 80088d8 <MULTIPAGE__GetTabBarRect+0x22>
 80088d4:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80088d8:	6e99      	ldr	r1, [r3, #104]	; 0x68
 80088da:	f8b3 9032 	ldrh.w	r9, [r3, #50]	; 0x32
 80088de:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80088e0:	6f9f      	ldr	r7, [r3, #120]	; 0x78
 80088e2:	4282      	cmp	r2, r0
 80088e4:	bfac      	ite	ge
 80088e6:	eb01 0802 	addge.w	r8, r1, r2
 80088ea:	eb01 0800 	addlt.w	r8, r1, r0
 80088ee:	4618      	mov	r0, r3
 80088f0:	a902      	add	r1, sp, #8
 80088f2:	f7ff ff66 	bl	80087c2 <MULTIPAGE__CalcBorderRect>
 80088f6:	a801      	add	r0, sp, #4
 80088f8:	f008 fd70 	bl	80113dc <GUI_ALLOC_UnlockH>
 80088fc:	f019 0f08 	tst.w	r9, #8
 8008900:	f005 0304 	and.w	r3, r5, #4
 8008904:	f409 7180 	and.w	r1, r9, #256	; 0x100
 8008908:	f005 0501 	and.w	r5, r5, #1
 800890c:	d01d      	beq.n	800894a <MULTIPAGE__GetTabBarRect+0x94>
 800890e:	b10b      	cbz	r3, 8008914 <MULTIPAGE__GetTabBarRect+0x5e>
 8008910:	2300      	movs	r3, #0
 8008912:	e001      	b.n	8008918 <MULTIPAGE__GetTabBarRect+0x62>
 8008914:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8008918:	8023      	strh	r3, [r4, #0]
 800891a:	8822      	ldrh	r2, [r4, #0]
 800891c:	4490      	add	r8, r2
 800891e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8008922:	b119      	cbz	r1, 800892c <MULTIPAGE__GetTabBarRect+0x76>
 8008924:	f9bd 000e 	ldrsh.w	r0, [sp, #14]
 8008928:	3820      	subs	r0, #32
 800892a:	e001      	b.n	8008930 <MULTIPAGE__GetTabBarRect+0x7a>
 800892c:	4630      	mov	r0, r6
 800892e:	47b8      	blx	r7
 8008930:	b145      	cbz	r5, 8008944 <MULTIPAGE__GetTabBarRect+0x8e>
 8008932:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8008936:	80e3      	strh	r3, [r4, #6]
 8008938:	b21a      	sxth	r2, r3
 800893a:	1a10      	subs	r0, r2, r0
 800893c:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8008940:	8060      	strh	r0, [r4, #2]
 8008942:	e01a      	b.n	800897a <MULTIPAGE__GetTabBarRect+0xc4>
 8008944:	8065      	strh	r5, [r4, #2]
 8008946:	80e0      	strh	r0, [r4, #6]
 8008948:	e017      	b.n	800897a <MULTIPAGE__GetTabBarRect+0xc4>
 800894a:	b10b      	cbz	r3, 8008950 <MULTIPAGE__GetTabBarRect+0x9a>
 800894c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8008950:	8063      	strh	r3, [r4, #2]
 8008952:	8862      	ldrh	r2, [r4, #2]
 8008954:	4490      	add	r8, r2
 8008956:	f8a4 8006 	strh.w	r8, [r4, #6]
 800895a:	b119      	cbz	r1, 8008964 <MULTIPAGE__GetTabBarRect+0xae>
 800895c:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 8008960:	3820      	subs	r0, #32
 8008962:	e001      	b.n	8008968 <MULTIPAGE__GetTabBarRect+0xb2>
 8008964:	4630      	mov	r0, r6
 8008966:	47b8      	blx	r7
 8008968:	b12d      	cbz	r5, 8008976 <MULTIPAGE__GetTabBarRect+0xc0>
 800896a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800896e:	80a3      	strh	r3, [r4, #4]
 8008970:	1a18      	subs	r0, r3, r0
 8008972:	8020      	strh	r0, [r4, #0]
 8008974:	e001      	b.n	800897a <MULTIPAGE__GetTabBarRect+0xc4>
 8008976:	8025      	strh	r5, [r4, #0]
 8008978:	80a0      	strh	r0, [r4, #4]
 800897a:	b005      	add	sp, #20
 800897c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008980 <MULTIPAGE__UpdatePositions>:
 8008980:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008984:	b088      	sub	sp, #32
 8008986:	4604      	mov	r4, r0
 8008988:	f008 fd1a 	bl	80113c0 <GUI_ALLOC_LockH>
 800898c:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800898e:	9003      	str	r0, [sp, #12]
 8008990:	4620      	mov	r0, r4
 8008992:	4798      	blx	r3
 8008994:	4605      	mov	r5, r0
 8008996:	9803      	ldr	r0, [sp, #12]
 8008998:	a904      	add	r1, sp, #16
 800899a:	f8b0 a032 	ldrh.w	sl, [r0, #50]	; 0x32
 800899e:	f8d0 9048 	ldr.w	r9, [r0, #72]	; 0x48
 80089a2:	6cc6      	ldr	r6, [r0, #76]	; 0x4c
 80089a4:	f8d0 8070 	ldr.w	r8, [r0, #112]	; 0x70
 80089a8:	6b87      	ldr	r7, [r0, #56]	; 0x38
 80089aa:	f7ff ff0a 	bl	80087c2 <MULTIPAGE__CalcBorderRect>
 80089ae:	a803      	add	r0, sp, #12
 80089b0:	f008 fd14 	bl	80113dc <GUI_ALLOC_UnlockH>
 80089b4:	f01a 0f08 	tst.w	sl, #8
 80089b8:	d03f      	beq.n	8008a3a <MULTIPAGE__UpdatePositions+0xba>
 80089ba:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80089be:	429d      	cmp	r5, r3
 80089c0:	dd3f      	ble.n	8008a42 <MULTIPAGE__UpdatePositions+0xc2>
 80089c2:	4648      	mov	r0, r9
 80089c4:	f007 fd64 	bl	8010490 <GUI_GetYSizeOfFont>
 80089c8:	3006      	adds	r0, #6
 80089ca:	2204      	movs	r2, #4
 80089cc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80089d0:	fb90 f3f2 	sdiv	r3, r0, r2
 80089d4:	07f2      	lsls	r2, r6, #31
 80089d6:	bf57      	itett	pl
 80089d8:	f9bd 2016 	ldrshpl.w	r2, [sp, #22]
 80089dc:	f9bd 2012 	ldrshmi.w	r2, [sp, #18]
 80089e0:	eba2 0243 	subpl.w	r2, r2, r3, lsl #1
 80089e4:	3201      	addpl	r2, #1
 80089e6:	0770      	lsls	r0, r6, #29
 80089e8:	bf49      	itett	mi
 80089ea:	f9bd 1010 	ldrshmi.w	r1, [sp, #16]
 80089ee:	f9bd 1014 	ldrshpl.w	r1, [sp, #20]
 80089f2:	ebc3 0101 	rsbmi	r1, r3, r1
 80089f6:	3101      	addmi	r1, #1
 80089f8:	f1b8 0f00 	cmp.w	r8, #0
 80089fc:	d004      	beq.n	8008a08 <MULTIPAGE__UpdatePositions+0x88>
 80089fe:	0058      	lsls	r0, r3, #1
 8008a00:	9000      	str	r0, [sp, #0]
 8008a02:	4620      	mov	r0, r4
 8008a04:	f7ff fe2d 	bl	8008662 <_AddScrollbar>
 8008a08:	4620      	mov	r0, r4
 8008a0a:	a906      	add	r1, sp, #24
 8008a0c:	f7ff ff53 	bl	80088b6 <MULTIPAGE__GetTabBarRect>
 8008a10:	2300      	movs	r3, #0
 8008a12:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8008a16:	f9bd 201a 	ldrsh.w	r2, [sp, #26]
 8008a1a:	1a8a      	subs	r2, r1, r2
 8008a1c:	2a00      	cmp	r2, #0
 8008a1e:	bfcc      	ite	gt
 8008a20:	3201      	addgt	r2, #1
 8008a22:	2201      	movle	r2, #1
 8008a24:	4295      	cmp	r5, r2
 8008a26:	4620      	mov	r0, r4
 8008a28:	f103 0601 	add.w	r6, r3, #1
 8008a2c:	db4c      	blt.n	8008ac8 <MULTIPAGE__UpdatePositions+0x148>
 8008a2e:	4619      	mov	r1, r3
 8008a30:	f7ff fefa 	bl	8008828 <MULTIPAGE__GetPageWidth>
 8008a34:	4633      	mov	r3, r6
 8008a36:	1a2d      	subs	r5, r5, r0
 8008a38:	e7eb      	b.n	8008a12 <MULTIPAGE__UpdatePositions+0x92>
 8008a3a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8008a3e:	429d      	cmp	r5, r3
 8008a40:	dc03      	bgt.n	8008a4a <MULTIPAGE__UpdatePositions+0xca>
 8008a42:	4620      	mov	r0, r4
 8008a44:	f7ff fedb 	bl	80087fe <MULTIPAGE__DeleteScrollbar>
 8008a48:	e041      	b.n	8008ace <MULTIPAGE__UpdatePositions+0x14e>
 8008a4a:	4648      	mov	r0, r9
 8008a4c:	f007 fd20 	bl	8010490 <GUI_GetYSizeOfFont>
 8008a50:	07f1      	lsls	r1, r6, #31
 8008a52:	f100 0006 	add.w	r0, r0, #6
 8008a56:	f04f 0204 	mov.w	r2, #4
 8008a5a:	bf54      	ite	pl
 8008a5c:	f9bd 1014 	ldrshpl.w	r1, [sp, #20]
 8008a60:	f9bd 1010 	ldrshmi.w	r1, [sp, #16]
 8008a64:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8008a68:	fb90 f3f2 	sdiv	r3, r0, r2
 8008a6c:	bf5c      	itt	pl
 8008a6e:	eba1 0143 	subpl.w	r1, r1, r3, lsl #1
 8008a72:	3101      	addpl	r1, #1
 8008a74:	0772      	lsls	r2, r6, #29
 8008a76:	bf57      	itett	pl
 8008a78:	f9bd 2012 	ldrshpl.w	r2, [sp, #18]
 8008a7c:	f9bd 2016 	ldrshmi.w	r2, [sp, #22]
 8008a80:	ebc3 0202 	rsbpl	r2, r3, r2
 8008a84:	3201      	addpl	r2, #1
 8008a86:	f1b8 0f00 	cmp.w	r8, #0
 8008a8a:	d004      	beq.n	8008a96 <MULTIPAGE__UpdatePositions+0x116>
 8008a8c:	9300      	str	r3, [sp, #0]
 8008a8e:	4620      	mov	r0, r4
 8008a90:	005b      	lsls	r3, r3, #1
 8008a92:	f7ff fde6 	bl	8008662 <_AddScrollbar>
 8008a96:	4620      	mov	r0, r4
 8008a98:	a906      	add	r1, sp, #24
 8008a9a:	f7ff ff0c 	bl	80088b6 <MULTIPAGE__GetTabBarRect>
 8008a9e:	2300      	movs	r3, #0
 8008aa0:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 8008aa4:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8008aa8:	1a8a      	subs	r2, r1, r2
 8008aaa:	2a00      	cmp	r2, #0
 8008aac:	bfcc      	ite	gt
 8008aae:	3201      	addgt	r2, #1
 8008ab0:	2201      	movle	r2, #1
 8008ab2:	4295      	cmp	r5, r2
 8008ab4:	4620      	mov	r0, r4
 8008ab6:	f103 0601 	add.w	r6, r3, #1
 8008aba:	db05      	blt.n	8008ac8 <MULTIPAGE__UpdatePositions+0x148>
 8008abc:	4619      	mov	r1, r3
 8008abe:	f7ff feb3 	bl	8008828 <MULTIPAGE__GetPageWidth>
 8008ac2:	4633      	mov	r3, r6
 8008ac4:	1a2d      	subs	r5, r5, r0
 8008ac6:	e7eb      	b.n	8008aa0 <MULTIPAGE__UpdatePositions+0x120>
 8008ac8:	4631      	mov	r1, r6
 8008aca:	f7ff fe0f 	bl	80086ec <_SetScrollbar>
 8008ace:	4620      	mov	r0, r4
 8008ad0:	a904      	add	r1, sp, #16
 8008ad2:	f7ff fe81 	bl	80087d8 <MULTIPAGE__CalcClientRect>
 8008ad6:	4638      	mov	r0, r7
 8008ad8:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8008adc:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8008ae0:	f001 fe71 	bl	800a7c6 <WM_MoveChildTo>
 8008ae4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8008ae8:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 8008aec:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8008af0:	1ac9      	subs	r1, r1, r3
 8008af2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8008af6:	1ad2      	subs	r2, r2, r3
 8008af8:	4638      	mov	r0, r7
 8008afa:	3101      	adds	r1, #1
 8008afc:	3201      	adds	r2, #1
 8008afe:	f001 fc54 	bl	800a3aa <WM_SetSize>
 8008b02:	4620      	mov	r0, r4
 8008b04:	f002 fda9 	bl	800b65a <WM_InvalidateWindow>
 8008b08:	b008      	add	sp, #32
 8008b0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08008b10 <MULTIPAGE_CreateUser>:
 8008b10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b12:	b089      	sub	sp, #36	; 0x24
 8008b14:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8008b16:	9400      	str	r4, [sp, #0]
 8008b18:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8008b1a:	f044 0401 	orr.w	r4, r4, #1
 8008b1e:	9401      	str	r4, [sp, #4]
 8008b20:	4c33      	ldr	r4, [pc, #204]	; (8008bf0 <MULTIPAGE_CreateUser+0xe0>)
 8008b22:	9402      	str	r4, [sp, #8]
 8008b24:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8008b26:	3460      	adds	r4, #96	; 0x60
 8008b28:	9403      	str	r4, [sp, #12]
 8008b2a:	f002 fdd7 	bl	800b6dc <WM_CreateWindowAsChild>
 8008b2e:	4606      	mov	r6, r0
 8008b30:	2800      	cmp	r0, #0
 8008b32:	d059      	beq.n	8008be8 <MULTIPAGE_CreateUser+0xd8>
 8008b34:	f000 fbf1 	bl	800931a <GUI_ARRAY_Create>
 8008b38:	4604      	mov	r4, r0
 8008b3a:	2800      	cmp	r0, #0
 8008b3c:	d054      	beq.n	8008be8 <MULTIPAGE_CreateUser+0xd8>
 8008b3e:	4630      	mov	r0, r6
 8008b40:	f008 fc3e 	bl	80113c0 <GUI_ALLOC_LockH>
 8008b44:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008b46:	4d2b      	ldr	r5, [pc, #172]	; (8008bf4 <MULTIPAGE_CreateUser+0xe4>)
 8008b48:	63c4      	str	r4, [r0, #60]	; 0x3c
 8008b4a:	f012 0f08 	tst.w	r2, #8
 8008b4e:	bf14      	ite	ne
 8008b50:	2218      	movne	r2, #24
 8008b52:	2210      	moveq	r2, #16
 8008b54:	9911      	ldr	r1, [sp, #68]	; 0x44
 8008b56:	9005      	str	r0, [sp, #20]
 8008b58:	f7fe fff0 	bl	8007b3c <WIDGET__Init>
 8008b5c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008b5e:	9f05      	ldr	r7, [sp, #20]
 8008b60:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8008b64:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008b66:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008b68:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008b6a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008b6c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008b6e:	682b      	ldr	r3, [r5, #0]
 8008b70:	6023      	str	r3, [r4, #0]
 8008b72:	4d21      	ldr	r5, [pc, #132]	; (8008bf8 <MULTIPAGE_CreateUser+0xe8>)
 8008b74:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008b78:	643b      	str	r3, [r7, #64]	; 0x40
 8008b7a:	4b20      	ldr	r3, [pc, #128]	; (8008bfc <MULTIPAGE_CreateUser+0xec>)
 8008b7c:	637b      	str	r3, [r7, #52]	; 0x34
 8008b7e:	2400      	movs	r4, #0
 8008b80:	682b      	ldr	r3, [r5, #0]
 8008b82:	67fb      	str	r3, [r7, #124]	; 0x7c
 8008b84:	a906      	add	r1, sp, #24
 8008b86:	4630      	mov	r0, r6
 8008b88:	647c      	str	r4, [r7, #68]	; 0x44
 8008b8a:	f8c7 4084 	str.w	r4, [r7, #132]	; 0x84
 8008b8e:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 8008b92:	f7ff fe21 	bl	80087d8 <MULTIPAGE__CalcClientRect>
 8008b96:	a805      	add	r0, sp, #20
 8008b98:	f008 fc20 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008b9c:	682b      	ldr	r3, [r5, #0]
 8008b9e:	4630      	mov	r0, r6
 8008ba0:	685b      	ldr	r3, [r3, #4]
 8008ba2:	4798      	blx	r3
 8008ba4:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8008ba8:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8008bac:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8008bb0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8008bb4:	9403      	str	r4, [sp, #12]
 8008bb6:	f240 7582 	movw	r5, #1922	; 0x782
 8008bba:	1a12      	subs	r2, r2, r0
 8008bbc:	1a5b      	subs	r3, r3, r1
 8008bbe:	9501      	str	r5, [sp, #4]
 8008bc0:	4d0f      	ldr	r5, [pc, #60]	; (8008c00 <MULTIPAGE_CreateUser+0xf0>)
 8008bc2:	9600      	str	r6, [sp, #0]
 8008bc4:	9502      	str	r5, [sp, #8]
 8008bc6:	3201      	adds	r2, #1
 8008bc8:	3301      	adds	r3, #1
 8008bca:	f002 fd87 	bl	800b6dc <WM_CreateWindowAsChild>
 8008bce:	4604      	mov	r4, r0
 8008bd0:	b138      	cbz	r0, 8008be2 <MULTIPAGE_CreateUser+0xd2>
 8008bd2:	4630      	mov	r0, r6
 8008bd4:	f008 fbf4 	bl	80113c0 <GUI_ALLOC_LockH>
 8008bd8:	9005      	str	r0, [sp, #20]
 8008bda:	6384      	str	r4, [r0, #56]	; 0x38
 8008bdc:	a805      	add	r0, sp, #20
 8008bde:	f008 fbfd 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008be2:	4630      	mov	r0, r6
 8008be4:	f7ff fecc 	bl	8008980 <MULTIPAGE__UpdatePositions>
 8008be8:	4630      	mov	r0, r6
 8008bea:	b009      	add	sp, #36	; 0x24
 8008bec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008bee:	bf00      	nop
 8008bf0:	08008ca3 	.word	0x08008ca3
 8008bf4:	20000098 	.word	0x20000098
 8008bf8:	200000d4 	.word	0x200000d4
 8008bfc:	08012ccd 	.word	0x08012ccd
 8008c00:	08008f3d 	.word	0x08008f3d

08008c04 <MULTIPAGE_CreateEx>:
 8008c04:	b510      	push	{r4, lr}
 8008c06:	b086      	sub	sp, #24
 8008c08:	9c08      	ldr	r4, [sp, #32]
 8008c0a:	9400      	str	r4, [sp, #0]
 8008c0c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8008c0e:	9401      	str	r4, [sp, #4]
 8008c10:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008c12:	9402      	str	r4, [sp, #8]
 8008c14:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008c16:	9403      	str	r4, [sp, #12]
 8008c18:	2400      	movs	r4, #0
 8008c1a:	9404      	str	r4, [sp, #16]
 8008c1c:	f7ff ff78 	bl	8008b10 <MULTIPAGE_CreateUser>
 8008c20:	b006      	add	sp, #24
 8008c22:	bd10      	pop	{r4, pc}

08008c24 <MULTIPAGE_SelectPage>:
 8008c24:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008c28:	460c      	mov	r4, r1
 8008c2a:	4605      	mov	r5, r0
 8008c2c:	2800      	cmp	r0, #0
 8008c2e:	d035      	beq.n	8008c9c <MULTIPAGE_SelectPage+0x78>
 8008c30:	f008 fbc6 	bl	80113c0 <GUI_ALLOC_LockH>
 8008c34:	ae02      	add	r6, sp, #8
 8008c36:	6bc7      	ldr	r7, [r0, #60]	; 0x3c
 8008c38:	f846 0d04 	str.w	r0, [r6, #-4]!
 8008c3c:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 8008c40:	4638      	mov	r0, r7
 8008c42:	f000 fad5 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 8008c46:	4681      	mov	r9, r0
 8008c48:	4630      	mov	r0, r6
 8008c4a:	f008 fbc7 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008c4e:	454c      	cmp	r4, r9
 8008c50:	d224      	bcs.n	8008c9c <MULTIPAGE_SelectPage+0x78>
 8008c52:	4628      	mov	r0, r5
 8008c54:	4621      	mov	r1, r4
 8008c56:	f7ff fce4 	bl	8008622 <_GetEnable>
 8008c5a:	b1f8      	cbz	r0, 8008c9c <MULTIPAGE_SelectPage+0x78>
 8008c5c:	4544      	cmp	r4, r8
 8008c5e:	d00f      	beq.n	8008c80 <MULTIPAGE_SelectPage+0x5c>
 8008c60:	4621      	mov	r1, r4
 8008c62:	4628      	mov	r0, r5
 8008c64:	f7ff fd68 	bl	8008738 <_ShowPage>
 8008c68:	4628      	mov	r0, r5
 8008c6a:	f008 fba9 	bl	80113c0 <GUI_ALLOC_LockH>
 8008c6e:	9001      	str	r0, [sp, #4]
 8008c70:	6404      	str	r4, [r0, #64]	; 0x40
 8008c72:	4630      	mov	r0, r6
 8008c74:	f008 fbb2 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008c78:	4628      	mov	r0, r5
 8008c7a:	f7ff fe81 	bl	8008980 <MULTIPAGE__UpdatePositions>
 8008c7e:	e00d      	b.n	8008c9c <MULTIPAGE_SelectPage+0x78>
 8008c80:	4621      	mov	r1, r4
 8008c82:	4638      	mov	r0, r7
 8008c84:	f000 fb36 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 8008c88:	ab02      	add	r3, sp, #8
 8008c8a:	6804      	ldr	r4, [r0, #0]
 8008c8c:	f843 0d08 	str.w	r0, [r3, #-8]!
 8008c90:	4668      	mov	r0, sp
 8008c92:	f008 fba3 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008c96:	4620      	mov	r0, r4
 8008c98:	f001 fc1c 	bl	800a4d4 <WM_SetFocus>
 8008c9c:	b003      	add	sp, #12
 8008c9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008ca2 <MULTIPAGE_Callback>:
 8008ca2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008ca6:	6844      	ldr	r4, [r0, #4]
 8008ca8:	4605      	mov	r5, r0
 8008caa:	2c00      	cmp	r4, #0
 8008cac:	f000 8102 	beq.w	8008eb4 <MULTIPAGE_Callback+0x212>
 8008cb0:	6803      	ldr	r3, [r0, #0]
 8008cb2:	2b1e      	cmp	r3, #30
 8008cb4:	d12d      	bne.n	8008d12 <MULTIPAGE_Callback+0x70>
 8008cb6:	68c3      	ldr	r3, [r0, #12]
 8008cb8:	2b01      	cmp	r3, #1
 8008cba:	d130      	bne.n	8008d1e <MULTIPAGE_Callback+0x7c>
 8008cbc:	4620      	mov	r0, r4
 8008cbe:	f008 fb7f 	bl	80113c0 <GUI_ALLOC_LockH>
 8008cc2:	4602      	mov	r2, r0
 8008cc4:	a802      	add	r0, sp, #8
 8008cc6:	6bd6      	ldr	r6, [r2, #60]	; 0x3c
 8008cc8:	f840 2d04 	str.w	r2, [r0, #-4]!
 8008ccc:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8008cce:	f008 fb85 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008cd2:	4630      	mov	r0, r6
 8008cd4:	f000 fa8c 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 8008cd8:	4287      	cmp	r7, r0
 8008cda:	d20b      	bcs.n	8008cf4 <MULTIPAGE_Callback+0x52>
 8008cdc:	4630      	mov	r0, r6
 8008cde:	4639      	mov	r1, r7
 8008ce0:	f000 fb08 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 8008ce4:	ab02      	add	r3, sp, #8
 8008ce6:	6806      	ldr	r6, [r0, #0]
 8008ce8:	f843 0d08 	str.w	r0, [r3, #-8]!
 8008cec:	4668      	mov	r0, sp
 8008cee:	f008 fb75 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008cf2:	e000      	b.n	8008cf6 <MULTIPAGE_Callback+0x54>
 8008cf4:	2600      	movs	r6, #0
 8008cf6:	4630      	mov	r0, r6
 8008cf8:	f001 fe4c 	bl	800a994 <WM_IsVisible>
 8008cfc:	b178      	cbz	r0, 8008d1e <MULTIPAGE_Callback+0x7c>
 8008cfe:	f001 fee1 	bl	800aac4 <WM_GetFocussedWindow>
 8008d02:	4631      	mov	r1, r6
 8008d04:	f001 fa35 	bl	800a172 <WM__IsChild>
 8008d08:	b948      	cbnz	r0, 8008d1e <MULTIPAGE_Callback+0x7c>
 8008d0a:	4630      	mov	r0, r6
 8008d0c:	f001 fbe2 	bl	800a4d4 <WM_SetFocus>
 8008d10:	e005      	b.n	8008d1e <MULTIPAGE_Callback+0x7c>
 8008d12:	4620      	mov	r0, r4
 8008d14:	4629      	mov	r1, r5
 8008d16:	f7fe ff19 	bl	8007b4c <WIDGET_HandleActive>
 8008d1a:	4606      	mov	r6, r0
 8008d1c:	e000      	b.n	8008d20 <MULTIPAGE_Callback+0x7e>
 8008d1e:	2600      	movs	r6, #0
 8008d20:	682b      	ldr	r3, [r5, #0]
 8008d22:	2b14      	cmp	r3, #20
 8008d24:	f000 80ad 	beq.w	8008e82 <MULTIPAGE_Callback+0x1e0>
 8008d28:	dc08      	bgt.n	8008d3c <MULTIPAGE_Callback+0x9a>
 8008d2a:	2b0b      	cmp	r3, #11
 8008d2c:	f000 80b2 	beq.w	8008e94 <MULTIPAGE_Callback+0x1f2>
 8008d30:	2b0f      	cmp	r3, #15
 8008d32:	d024      	beq.n	8008d7e <MULTIPAGE_Callback+0xdc>
 8008d34:	2b05      	cmp	r3, #5
 8008d36:	f040 80b9 	bne.w	8008eac <MULTIPAGE_Callback+0x20a>
 8008d3a:	e0a7      	b.n	8008e8c <MULTIPAGE_Callback+0x1ea>
 8008d3c:	2b26      	cmp	r3, #38	; 0x26
 8008d3e:	f000 8086 	beq.w	8008e4e <MULTIPAGE_Callback+0x1ac>
 8008d42:	dc0e      	bgt.n	8008d62 <MULTIPAGE_Callback+0xc0>
 8008d44:	2b17      	cmp	r3, #23
 8008d46:	f040 80b1 	bne.w	8008eac <MULTIPAGE_Callback+0x20a>
 8008d4a:	4620      	mov	r0, r4
 8008d4c:	f008 fb38 	bl	80113c0 <GUI_ALLOC_LockH>
 8008d50:	ab02      	add	r3, sp, #8
 8008d52:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8008d54:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008d58:	60ea      	str	r2, [r5, #12]
 8008d5a:	4618      	mov	r0, r3
 8008d5c:	f008 fb3e 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008d60:	e0a8      	b.n	8008eb4 <MULTIPAGE_Callback+0x212>
 8008d62:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8008d66:	d01b      	beq.n	8008da0 <MULTIPAGE_Callback+0xfe>
 8008d68:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008d6c:	f040 809e 	bne.w	8008eac <MULTIPAGE_Callback+0x20a>
 8008d70:	4620      	mov	r0, r4
 8008d72:	f7ff fc3d 	bl	80085f0 <_GetScrollbarH>
 8008d76:	68e9      	ldr	r1, [r5, #12]
 8008d78:	f008 fe58 	bl	8011a2c <WIDGET_SetEffect>
 8008d7c:	e086      	b.n	8008e8c <MULTIPAGE_Callback+0x1ea>
 8008d7e:	4620      	mov	r0, r4
 8008d80:	f008 fb1e 	bl	80113c0 <GUI_ALLOC_LockH>
 8008d84:	ab02      	add	r3, sp, #8
 8008d86:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008d8a:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
 8008d8c:	6815      	ldr	r5, [r2, #0]
 8008d8e:	4618      	mov	r0, r3
 8008d90:	f008 fb24 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008d94:	2d00      	cmp	r5, #0
 8008d96:	f000 808d 	beq.w	8008eb4 <MULTIPAGE_Callback+0x212>
 8008d9a:	4620      	mov	r0, r4
 8008d9c:	47a8      	blx	r5
 8008d9e:	e089      	b.n	8008eb4 <MULTIPAGE_Callback+0x212>
 8008da0:	68ee      	ldr	r6, [r5, #12]
 8008da2:	2e00      	cmp	r6, #0
 8008da4:	d04a      	beq.n	8008e3c <MULTIPAGE_Callback+0x19a>
 8008da6:	7a33      	ldrb	r3, [r6, #8]
 8008da8:	2b00      	cmp	r3, #0
 8008daa:	d049      	beq.n	8008e40 <MULTIPAGE_Callback+0x19e>
 8008dac:	4620      	mov	r0, r4
 8008dae:	f8d6 a000 	ldr.w	sl, [r6]
 8008db2:	f8d6 9004 	ldr.w	r9, [r6, #4]
 8008db6:	f008 fb03 	bl	80113c0 <GUI_ALLOC_LockH>
 8008dba:	af02      	add	r7, sp, #8
 8008dbc:	f847 0d04 	str.w	r0, [r7, #-4]!
 8008dc0:	f8d0 8074 	ldr.w	r8, [r0, #116]	; 0x74
 8008dc4:	4638      	mov	r0, r7
 8008dc6:	f008 fb09 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008dca:	4651      	mov	r1, sl
 8008dcc:	4620      	mov	r0, r4
 8008dce:	464a      	mov	r2, r9
 8008dd0:	47c0      	blx	r8
 8008dd2:	1e01      	subs	r1, r0, #0
 8008dd4:	4620      	mov	r0, r4
 8008dd6:	db09      	blt.n	8008dec <MULTIPAGE_Callback+0x14a>
 8008dd8:	f7ff ff24 	bl	8008c24 <MULTIPAGE_SelectPage>
 8008ddc:	4620      	mov	r0, r4
 8008dde:	2105      	movs	r1, #5
 8008de0:	f001 fce7 	bl	800a7b2 <WM_NotifyParent>
 8008de4:	4620      	mov	r0, r4
 8008de6:	f001 fef9 	bl	800abdc <WM_BringToTop>
 8008dea:	e02b      	b.n	8008e44 <MULTIPAGE_Callback+0x1a2>
 8008dec:	f001 fe4a 	bl	800aa84 <WM_GetWindowOrgX>
 8008df0:	4482      	add	sl, r0
 8008df2:	4620      	mov	r0, r4
 8008df4:	f001 fe4e 	bl	800aa94 <WM_GetWindowOrgY>
 8008df8:	4481      	add	r9, r0
 8008dfa:	4651      	mov	r1, sl
 8008dfc:	4620      	mov	r0, r4
 8008dfe:	464a      	mov	r2, r9
 8008e00:	f001 fc4a 	bl	800a698 <WM_Screen2hWinEx>
 8008e04:	4680      	mov	r8, r0
 8008e06:	b1e8      	cbz	r0, 8008e44 <MULTIPAGE_Callback+0x1a2>
 8008e08:	42a0      	cmp	r0, r4
 8008e0a:	d01b      	beq.n	8008e44 <MULTIPAGE_Callback+0x1a2>
 8008e0c:	f001 fe3a 	bl	800aa84 <WM_GetWindowOrgX>
 8008e10:	ebc0 000a 	rsb	r0, r0, sl
 8008e14:	6030      	str	r0, [r6, #0]
 8008e16:	4640      	mov	r0, r8
 8008e18:	f001 fe3c 	bl	800aa94 <WM_GetWindowOrgY>
 8008e1c:	ebc0 0009 	rsb	r0, r0, r9
 8008e20:	6070      	str	r0, [r6, #4]
 8008e22:	f8c5 8004 	str.w	r8, [r5, #4]
 8008e26:	4640      	mov	r0, r8
 8008e28:	f008 faca 	bl	80113c0 <GUI_ALLOC_LockH>
 8008e2c:	9001      	str	r0, [sp, #4]
 8008e2e:	6906      	ldr	r6, [r0, #16]
 8008e30:	4638      	mov	r0, r7
 8008e32:	f008 fad3 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008e36:	4628      	mov	r0, r5
 8008e38:	47b0      	blx	r6
 8008e3a:	e003      	b.n	8008e44 <MULTIPAGE_Callback+0x1a2>
 8008e3c:	2103      	movs	r1, #3
 8008e3e:	e002      	b.n	8008e46 <MULTIPAGE_Callback+0x1a4>
 8008e40:	2102      	movs	r1, #2
 8008e42:	e000      	b.n	8008e46 <MULTIPAGE_Callback+0x1a4>
 8008e44:	2101      	movs	r1, #1
 8008e46:	4620      	mov	r0, r4
 8008e48:	f001 fcb3 	bl	800a7b2 <WM_NotifyParent>
 8008e4c:	e032      	b.n	8008eb4 <MULTIPAGE_Callback+0x212>
 8008e4e:	68eb      	ldr	r3, [r5, #12]
 8008e50:	2b05      	cmp	r3, #5
 8008e52:	d12f      	bne.n	8008eb4 <MULTIPAGE_Callback+0x212>
 8008e54:	68a8      	ldr	r0, [r5, #8]
 8008e56:	f001 fe25 	bl	800aaa4 <WM_GetId>
 8008e5a:	28ff      	cmp	r0, #255	; 0xff
 8008e5c:	d12a      	bne.n	8008eb4 <MULTIPAGE_Callback+0x212>
 8008e5e:	4620      	mov	r0, r4
 8008e60:	f008 faae 	bl	80113c0 <GUI_ALLOC_LockH>
 8008e64:	ae02      	add	r6, sp, #8
 8008e66:	4607      	mov	r7, r0
 8008e68:	f846 0d04 	str.w	r0, [r6, #-4]!
 8008e6c:	68a8      	ldr	r0, [r5, #8]
 8008e6e:	f009 f997 	bl	80121a0 <SCROLLBAR_GetValue>
 8008e72:	6478      	str	r0, [r7, #68]	; 0x44
 8008e74:	4630      	mov	r0, r6
 8008e76:	f008 fab1 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008e7a:	4620      	mov	r0, r4
 8008e7c:	f002 fbed 	bl	800b65a <WM_InvalidateWindow>
 8008e80:	e018      	b.n	8008eb4 <MULTIPAGE_Callback+0x212>
 8008e82:	4620      	mov	r0, r4
 8008e84:	68e9      	ldr	r1, [r5, #12]
 8008e86:	f7ff fca7 	bl	80087d8 <MULTIPAGE__CalcClientRect>
 8008e8a:	e013      	b.n	8008eb4 <MULTIPAGE_Callback+0x212>
 8008e8c:	4620      	mov	r0, r4
 8008e8e:	f7ff fd77 	bl	8008980 <MULTIPAGE__UpdatePositions>
 8008e92:	e00f      	b.n	8008eb4 <MULTIPAGE_Callback+0x212>
 8008e94:	4620      	mov	r0, r4
 8008e96:	f008 fa93 	bl	80113c0 <GUI_ALLOC_LockH>
 8008e9a:	ac02      	add	r4, sp, #8
 8008e9c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008ea0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008ea2:	f000 f9fe 	bl	80092a2 <GUI_ARRAY_Delete>
 8008ea6:	4620      	mov	r0, r4
 8008ea8:	f008 fa98 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008eac:	b116      	cbz	r6, 8008eb4 <MULTIPAGE_Callback+0x212>
 8008eae:	4628      	mov	r0, r5
 8008eb0:	f002 fff6 	bl	800bea0 <WM_DefaultProc>
 8008eb4:	b002      	add	sp, #8
 8008eb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008eba <_MoveSel>:
 8008eba:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008ebe:	460f      	mov	r7, r1
 8008ec0:	4606      	mov	r6, r0
 8008ec2:	f008 fa7d 	bl	80113c0 <GUI_ALLOC_LockH>
 8008ec6:	9001      	str	r0, [sp, #4]
 8008ec8:	4630      	mov	r0, r6
 8008eca:	f7ff fb91 	bl	80085f0 <_GetScrollbarH>
 8008ece:	9b01      	ldr	r3, [sp, #4]
 8008ed0:	4680      	mov	r8, r0
 8008ed2:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8008ed4:	f000 f98c 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 8008ed8:	4681      	mov	r9, r0
 8008eda:	a802      	add	r0, sp, #8
 8008edc:	f04f 34ff 	mov.w	r4, #4294967295
 8008ee0:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8008ee4:	6c15      	ldr	r5, [r2, #64]	; 0x40
 8008ee6:	f8d2 a044 	ldr.w	sl, [r2, #68]	; 0x44
 8008eea:	f008 fa77 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008eee:	443d      	add	r5, r7
 8008ef0:	2d00      	cmp	r5, #0
 8008ef2:	da06      	bge.n	8008f02 <_MoveSel+0x48>
 8008ef4:	2c00      	cmp	r4, #0
 8008ef6:	db11      	blt.n	8008f1c <_MoveSel+0x62>
 8008ef8:	4630      	mov	r0, r6
 8008efa:	4621      	mov	r1, r4
 8008efc:	f7ff fe92 	bl	8008c24 <MULTIPAGE_SelectPage>
 8008f00:	e00e      	b.n	8008f20 <_MoveSel+0x66>
 8008f02:	454d      	cmp	r5, r9
 8008f04:	daf6      	bge.n	8008ef4 <_MoveSel+0x3a>
 8008f06:	1c63      	adds	r3, r4, #1
 8008f08:	d1f4      	bne.n	8008ef4 <_MoveSel+0x3a>
 8008f0a:	4629      	mov	r1, r5
 8008f0c:	4630      	mov	r0, r6
 8008f0e:	f7ff fb88 	bl	8008622 <_GetEnable>
 8008f12:	2800      	cmp	r0, #0
 8008f14:	bf18      	it	ne
 8008f16:	462c      	movne	r4, r5
 8008f18:	443d      	add	r5, r7
 8008f1a:	e7e9      	b.n	8008ef0 <_MoveSel+0x36>
 8008f1c:	eb0a 0407 	add.w	r4, sl, r7
 8008f20:	f1b8 0f00 	cmp.w	r8, #0
 8008f24:	d007      	beq.n	8008f36 <_MoveSel+0x7c>
 8008f26:	2c00      	cmp	r4, #0
 8008f28:	db05      	blt.n	8008f36 <_MoveSel+0x7c>
 8008f2a:	454c      	cmp	r4, r9
 8008f2c:	da03      	bge.n	8008f36 <_MoveSel+0x7c>
 8008f2e:	4640      	mov	r0, r8
 8008f30:	4621      	mov	r1, r4
 8008f32:	f009 fa05 	bl	8012340 <SCROLLBAR_SetValue>
 8008f36:	b002      	add	sp, #8
 8008f38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008f3c <_ClientCallback>:
 8008f3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008f3e:	6845      	ldr	r5, [r0, #4]
 8008f40:	4604      	mov	r4, r0
 8008f42:	4628      	mov	r0, r5
 8008f44:	f001 fd96 	bl	800aa74 <WM_GetParent>
 8008f48:	6823      	ldr	r3, [r4, #0]
 8008f4a:	2b17      	cmp	r3, #23
 8008f4c:	4606      	mov	r6, r0
 8008f4e:	d020      	beq.n	8008f92 <_ClientCallback+0x56>
 8008f50:	dc11      	bgt.n	8008f76 <_ClientCallback+0x3a>
 8008f52:	2b0e      	cmp	r3, #14
 8008f54:	d01f      	beq.n	8008f96 <_ClientCallback+0x5a>
 8008f56:	2b0f      	cmp	r3, #15
 8008f58:	d12d      	bne.n	8008fb6 <_ClientCallback+0x7a>
 8008f5a:	f008 fa31 	bl	80113c0 <GUI_ALLOC_LockH>
 8008f5e:	ac02      	add	r4, sp, #8
 8008f60:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008f64:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8008f66:	f005 fe47 	bl	800ebf8 <LCD_SetBkColor>
 8008f6a:	4620      	mov	r0, r4
 8008f6c:	f008 fa36 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008f70:	f007 fdf6 	bl	8010b60 <GUI_Clear>
 8008f74:	e022      	b.n	8008fbc <_ClientCallback+0x80>
 8008f76:	2b31      	cmp	r3, #49	; 0x31
 8008f78:	d008      	beq.n	8008f8c <_ClientCallback+0x50>
 8008f7a:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8008f7e:	d11a      	bne.n	8008fb6 <_ClientCallback+0x7a>
 8008f80:	f001 faa8 	bl	800a4d4 <WM_SetFocus>
 8008f84:	4630      	mov	r0, r6
 8008f86:	f001 fe29 	bl	800abdc <WM_BringToTop>
 8008f8a:	e017      	b.n	8008fbc <_ClientCallback+0x80>
 8008f8c:	2300      	movs	r3, #0
 8008f8e:	60e3      	str	r3, [r4, #12]
 8008f90:	e014      	b.n	8008fbc <_ClientCallback+0x80>
 8008f92:	60e5      	str	r5, [r4, #12]
 8008f94:	e012      	b.n	8008fbc <_ClientCallback+0x80>
 8008f96:	68e3      	ldr	r3, [r4, #12]
 8008f98:	685a      	ldr	r2, [r3, #4]
 8008f9a:	2a00      	cmp	r2, #0
 8008f9c:	dd0b      	ble.n	8008fb6 <_ClientCallback+0x7a>
 8008f9e:	681b      	ldr	r3, [r3, #0]
 8008fa0:	2b21      	cmp	r3, #33	; 0x21
 8008fa2:	d003      	beq.n	8008fac <_ClientCallback+0x70>
 8008fa4:	2b22      	cmp	r3, #34	; 0x22
 8008fa6:	d106      	bne.n	8008fb6 <_ClientCallback+0x7a>
 8008fa8:	2101      	movs	r1, #1
 8008faa:	e001      	b.n	8008fb0 <_ClientCallback+0x74>
 8008fac:	f04f 31ff 	mov.w	r1, #4294967295
 8008fb0:	f7ff ff83 	bl	8008eba <_MoveSel>
 8008fb4:	e002      	b.n	8008fbc <_ClientCallback+0x80>
 8008fb6:	4620      	mov	r0, r4
 8008fb8:	f002 ff72 	bl	800bea0 <WM_DefaultProc>
 8008fbc:	b002      	add	sp, #8
 8008fbe:	bd70      	pop	{r4, r5, r6, pc}

08008fc0 <MULTIPAGE_AddPage>:
 8008fc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008fc4:	460c      	mov	r4, r1
 8008fc6:	b08d      	sub	sp, #52	; 0x34
 8008fc8:	4616      	mov	r6, r2
 8008fca:	4681      	mov	r9, r0
 8008fcc:	2800      	cmp	r0, #0
 8008fce:	d079      	beq.n	80090c4 <MULTIPAGE_AddPage+0x104>
 8008fd0:	f008 f9f6 	bl	80113c0 <GUI_ALLOC_LockH>
 8008fd4:	ab0c      	add	r3, sp, #48	; 0x30
 8008fd6:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8008fd8:	f843 0d28 	str.w	r0, [r3, #-40]!
 8008fdc:	6b87      	ldr	r7, [r0, #56]	; 0x38
 8008fde:	4618      	mov	r0, r3
 8008fe0:	f008 f9fc 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008fe4:	bb74      	cbnz	r4, 8009044 <MULTIPAGE_AddPage+0x84>
 8008fe6:	4638      	mov	r0, r7
 8008fe8:	f008 f9ea 	bl	80113c0 <GUI_ALLOC_LockH>
 8008fec:	ab0c      	add	r3, sp, #48	; 0x30
 8008fee:	69c7      	ldr	r7, [r0, #28]
 8008ff0:	f843 0d20 	str.w	r0, [r3, #-32]!
 8008ff4:	4618      	mov	r0, r3
 8008ff6:	f008 f9f1 	bl	80113dc <GUI_ALLOC_UnlockH>
 8008ffa:	b357      	cbz	r7, 8009052 <MULTIPAGE_AddPage+0x92>
 8008ffc:	bb5c      	cbnz	r4, 8009056 <MULTIPAGE_AddPage+0x96>
 8008ffe:	4628      	mov	r0, r5
 8009000:	f000 f8f6 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 8009004:	46a0      	mov	r8, r4
 8009006:	4682      	mov	sl, r0
 8009008:	45d0      	cmp	r8, sl
 800900a:	da12      	bge.n	8009032 <MULTIPAGE_AddPage+0x72>
 800900c:	4641      	mov	r1, r8
 800900e:	4628      	mov	r0, r5
 8009010:	f000 f970 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 8009014:	4602      	mov	r2, r0
 8009016:	a80c      	add	r0, sp, #48	; 0x30
 8009018:	2100      	movs	r1, #0
 800901a:	f8d2 b000 	ldr.w	fp, [r2]
 800901e:	f840 2d2c 	str.w	r2, [r0, #-44]!
 8009022:	6091      	str	r1, [r2, #8]
 8009024:	f008 f9da 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009028:	45bb      	cmp	fp, r7
 800902a:	d003      	beq.n	8009034 <MULTIPAGE_AddPage+0x74>
 800902c:	f108 0801 	add.w	r8, r8, #1
 8009030:	e7ea      	b.n	8009008 <MULTIPAGE_AddPage+0x48>
 8009032:	463c      	mov	r4, r7
 8009034:	4638      	mov	r0, r7
 8009036:	f008 f9c3 	bl	80113c0 <GUI_ALLOC_LockH>
 800903a:	ab0c      	add	r3, sp, #48	; 0x30
 800903c:	6a07      	ldr	r7, [r0, #32]
 800903e:	f843 0d24 	str.w	r0, [r3, #-36]!
 8009042:	e7d7      	b.n	8008ff4 <MULTIPAGE_AddPage+0x34>
 8009044:	2200      	movs	r2, #0
 8009046:	4620      	mov	r0, r4
 8009048:	4639      	mov	r1, r7
 800904a:	4613      	mov	r3, r2
 800904c:	f001 fe57 	bl	800acfe <WM_AttachWindowAt>
 8009050:	e001      	b.n	8009056 <MULTIPAGE_AddPage+0x96>
 8009052:	2c00      	cmp	r4, #0
 8009054:	d036      	beq.n	80090c4 <MULTIPAGE_AddPage+0x104>
 8009056:	2300      	movs	r3, #0
 8009058:	f88d 3003 	strb.w	r3, [sp, #3]
 800905c:	b90e      	cbnz	r6, 8009062 <MULTIPAGE_AddPage+0xa2>
 800905e:	f10d 0603 	add.w	r6, sp, #3
 8009062:	2301      	movs	r3, #1
 8009064:	f88d 3018 	strb.w	r3, [sp, #24]
 8009068:	4630      	mov	r0, r6
 800906a:	2300      	movs	r3, #0
 800906c:	9405      	str	r4, [sp, #20]
 800906e:	9308      	str	r3, [sp, #32]
 8009070:	9309      	str	r3, [sp, #36]	; 0x24
 8009072:	930a      	str	r3, [sp, #40]	; 0x28
 8009074:	9307      	str	r3, [sp, #28]
 8009076:	f7f7 f8cb 	bl	8000210 <strlen>
 800907a:	a905      	add	r1, sp, #20
 800907c:	f100 021c 	add.w	r2, r0, #28
 8009080:	4628      	mov	r0, r5
 8009082:	f000 f8c4 	bl	800920e <GUI_ARRAY_AddItem>
 8009086:	b9b0      	cbnz	r0, 80090b6 <MULTIPAGE_AddPage+0xf6>
 8009088:	4628      	mov	r0, r5
 800908a:	f000 f8b1 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 800908e:	1e41      	subs	r1, r0, #1
 8009090:	4628      	mov	r0, r5
 8009092:	f000 f92f 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 8009096:	ac0c      	add	r4, sp, #48	; 0x30
 8009098:	4607      	mov	r7, r0
 800909a:	f844 0d2c 	str.w	r0, [r4, #-44]!
 800909e:	4630      	mov	r0, r6
 80090a0:	f7f7 f8b6 	bl	8000210 <strlen>
 80090a4:	4631      	mov	r1, r6
 80090a6:	1c42      	adds	r2, r0, #1
 80090a8:	f107 0018 	add.w	r0, r7, #24
 80090ac:	f00f fe41 	bl	8018d32 <memcpy>
 80090b0:	4620      	mov	r0, r4
 80090b2:	f008 f993 	bl	80113dc <GUI_ALLOC_UnlockH>
 80090b6:	4628      	mov	r0, r5
 80090b8:	f000 f89a 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 80090bc:	1e41      	subs	r1, r0, #1
 80090be:	4648      	mov	r0, r9
 80090c0:	f7ff fdb0 	bl	8008c24 <MULTIPAGE_SelectPage>
 80090c4:	b00d      	add	sp, #52	; 0x34
 80090c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080090ca <MULTIPAGE_GetFont>:
 80090ca:	b513      	push	{r0, r1, r4, lr}
 80090cc:	4604      	mov	r4, r0
 80090ce:	b140      	cbz	r0, 80090e2 <MULTIPAGE_GetFont+0x18>
 80090d0:	f008 f976 	bl	80113c0 <GUI_ALLOC_LockH>
 80090d4:	ab02      	add	r3, sp, #8
 80090d6:	6c84      	ldr	r4, [r0, #72]	; 0x48
 80090d8:	f843 0d04 	str.w	r0, [r3, #-4]!
 80090dc:	4618      	mov	r0, r3
 80090de:	f008 f97d 	bl	80113dc <GUI_ALLOC_UnlockH>
 80090e2:	4620      	mov	r0, r4
 80090e4:	b002      	add	sp, #8
 80090e6:	bd10      	pop	{r4, pc}

080090e8 <MULTIPAGE_SetAlign>:
 80090e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80090ea:	460d      	mov	r5, r1
 80090ec:	4604      	mov	r4, r0
 80090ee:	b1d8      	cbz	r0, 8009128 <MULTIPAGE_SetAlign+0x40>
 80090f0:	f008 f966 	bl	80113c0 <GUI_ALLOC_LockH>
 80090f4:	a902      	add	r1, sp, #8
 80090f6:	64c5      	str	r5, [r0, #76]	; 0x4c
 80090f8:	9001      	str	r0, [sp, #4]
 80090fa:	4620      	mov	r0, r4
 80090fc:	f7ff fb6c 	bl	80087d8 <MULTIPAGE__CalcClientRect>
 8009100:	9b01      	ldr	r3, [sp, #4]
 8009102:	f9bd 6008 	ldrsh.w	r6, [sp, #8]
 8009106:	f9b3 1000 	ldrsh.w	r1, [r3]
 800910a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800910e:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 8009112:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8009114:	4431      	add	r1, r6
 8009116:	442a      	add	r2, r5
 8009118:	f001 fc27 	bl	800a96a <WM_MoveTo>
 800911c:	a801      	add	r0, sp, #4
 800911e:	f008 f95d 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009122:	4620      	mov	r0, r4
 8009124:	f7ff fc2c 	bl	8008980 <MULTIPAGE__UpdatePositions>
 8009128:	b004      	add	sp, #16
 800912a:	bd70      	pop	{r4, r5, r6, pc}

0800912c <MULTIPAGE_IsPageEnabled>:
 800912c:	b108      	cbz	r0, 8009132 <MULTIPAGE_IsPageEnabled+0x6>
 800912e:	f7ff ba78 	b.w	8008622 <_GetEnable>
 8009132:	4770      	bx	lr

08009134 <GUI_DRAW__Draw>:
 8009134:	e92d 43e3 	stmdb	sp!, {r0, r1, r5, r6, r7, r8, r9, lr}
 8009138:	4688      	mov	r8, r1
 800913a:	4617      	mov	r7, r2
 800913c:	461e      	mov	r6, r3
 800913e:	4681      	mov	r9, r0
 8009140:	b170      	cbz	r0, 8009160 <GUI_DRAW__Draw+0x2c>
 8009142:	f008 f93d 	bl	80113c0 <GUI_ALLOC_LockH>
 8009146:	4605      	mov	r5, r0
 8009148:	a802      	add	r0, sp, #8
 800914a:	682b      	ldr	r3, [r5, #0]
 800914c:	f840 5d04 	str.w	r5, [r0, #-4]!
 8009150:	681d      	ldr	r5, [r3, #0]
 8009152:	f008 f943 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009156:	4648      	mov	r0, r9
 8009158:	4641      	mov	r1, r8
 800915a:	463a      	mov	r2, r7
 800915c:	4633      	mov	r3, r6
 800915e:	47a8      	blx	r5
 8009160:	b002      	add	sp, #8
 8009162:	e8bd 83e0 	ldmia.w	sp!, {r5, r6, r7, r8, r9, pc}

08009166 <GUI_DRAW__GetXSize>:
 8009166:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009168:	4604      	mov	r4, r0
 800916a:	b160      	cbz	r0, 8009186 <GUI_DRAW__GetXSize+0x20>
 800916c:	f008 f928 	bl	80113c0 <GUI_ALLOC_LockH>
 8009170:	ab02      	add	r3, sp, #8
 8009172:	6802      	ldr	r2, [r0, #0]
 8009174:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009178:	4618      	mov	r0, r3
 800917a:	6855      	ldr	r5, [r2, #4]
 800917c:	f008 f92e 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009180:	4620      	mov	r0, r4
 8009182:	47a8      	blx	r5
 8009184:	e7ff      	b.n	8009186 <GUI_DRAW__GetXSize+0x20>
 8009186:	b003      	add	sp, #12
 8009188:	bd30      	pop	{r4, r5, pc}

0800918a <GUI_DRAW__GetYSize>:
 800918a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800918c:	4604      	mov	r4, r0
 800918e:	b160      	cbz	r0, 80091aa <GUI_DRAW__GetYSize+0x20>
 8009190:	f008 f916 	bl	80113c0 <GUI_ALLOC_LockH>
 8009194:	ab02      	add	r3, sp, #8
 8009196:	6802      	ldr	r2, [r0, #0]
 8009198:	f843 0d04 	str.w	r0, [r3, #-4]!
 800919c:	4618      	mov	r0, r3
 800919e:	6895      	ldr	r5, [r2, #8]
 80091a0:	f008 f91c 	bl	80113dc <GUI_ALLOC_UnlockH>
 80091a4:	4620      	mov	r0, r4
 80091a6:	47a8      	blx	r5
 80091a8:	e7ff      	b.n	80091aa <GUI_DRAW__GetYSize+0x20>
 80091aa:	b003      	add	sp, #12
 80091ac:	bd30      	pop	{r4, r5, pc}

080091ae <GUI_ARRAY__GethItem>:
 80091ae:	8803      	ldrh	r3, [r0, #0]
 80091b0:	4299      	cmp	r1, r3
 80091b2:	b513      	push	{r0, r1, r4, lr}
 80091b4:	460c      	mov	r4, r1
 80091b6:	d20e      	bcs.n	80091d6 <GUI_ARRAY__GethItem+0x28>
 80091b8:	6840      	ldr	r0, [r0, #4]
 80091ba:	b150      	cbz	r0, 80091d2 <GUI_ARRAY__GethItem+0x24>
 80091bc:	f008 f900 	bl	80113c0 <GUI_ALLOC_LockH>
 80091c0:	ab02      	add	r3, sp, #8
 80091c2:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 80091c6:	f843 0d04 	str.w	r0, [r3, #-4]!
 80091ca:	4618      	mov	r0, r3
 80091cc:	f008 f906 	bl	80113dc <GUI_ALLOC_UnlockH>
 80091d0:	e002      	b.n	80091d8 <GUI_ARRAY__GethItem+0x2a>
 80091d2:	4604      	mov	r4, r0
 80091d4:	e000      	b.n	80091d8 <GUI_ARRAY__GethItem+0x2a>
 80091d6:	2400      	movs	r4, #0
 80091d8:	4620      	mov	r0, r4
 80091da:	b002      	add	sp, #8
 80091dc:	bd10      	pop	{r4, pc}

080091de <GUI_ARRAY__GetpItemLocked>:
 80091de:	b508      	push	{r3, lr}
 80091e0:	f7ff ffe5 	bl	80091ae <GUI_ARRAY__GethItem>
 80091e4:	b118      	cbz	r0, 80091ee <GUI_ARRAY__GetpItemLocked+0x10>
 80091e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80091ea:	f008 b8e9 	b.w	80113c0 <GUI_ALLOC_LockH>
 80091ee:	bd08      	pop	{r3, pc}

080091f0 <GUI_ARRAY_GetNumItems>:
 80091f0:	b513      	push	{r0, r1, r4, lr}
 80091f2:	4604      	mov	r4, r0
 80091f4:	b140      	cbz	r0, 8009208 <GUI_ARRAY_GetNumItems+0x18>
 80091f6:	f008 f8e3 	bl	80113c0 <GUI_ALLOC_LockH>
 80091fa:	ab02      	add	r3, sp, #8
 80091fc:	8804      	ldrh	r4, [r0, #0]
 80091fe:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009202:	4618      	mov	r0, r3
 8009204:	f008 f8ea 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009208:	4620      	mov	r0, r4
 800920a:	b002      	add	sp, #8
 800920c:	bd10      	pop	{r4, pc}

0800920e <GUI_ARRAY_AddItem>:
 800920e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009212:	4605      	mov	r5, r0
 8009214:	2800      	cmp	r0, #0
 8009216:	d03d      	beq.n	8009294 <GUI_ARRAY_AddItem+0x86>
 8009218:	b14a      	cbz	r2, 800922e <GUI_ARRAY_AddItem+0x20>
 800921a:	4608      	mov	r0, r1
 800921c:	4611      	mov	r1, r2
 800921e:	f008 fb51 	bl	80118c4 <GUI_ALLOC_AllocInit>
 8009222:	f1d0 0401 	rsbs	r4, r0, #1
 8009226:	4607      	mov	r7, r0
 8009228:	bf38      	it	cc
 800922a:	2400      	movcc	r4, #0
 800922c:	e001      	b.n	8009232 <GUI_ARRAY_AddItem+0x24>
 800922e:	4614      	mov	r4, r2
 8009230:	4617      	mov	r7, r2
 8009232:	4628      	mov	r0, r5
 8009234:	f008 f8c4 	bl	80113c0 <GUI_ALLOC_LockH>
 8009238:	ae02      	add	r6, sp, #8
 800923a:	f8b0 8000 	ldrh.w	r8, [r0]
 800923e:	f846 0d08 	str.w	r0, [r6, #-8]!
 8009242:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8009246:	4668      	mov	r0, sp
 8009248:	f008 f8c8 	bl	80113dc <GUI_ALLOC_UnlockH>
 800924c:	bb24      	cbnz	r4, 8009298 <GUI_ARRAY_AddItem+0x8a>
 800924e:	f108 0101 	add.w	r1, r8, #1
 8009252:	4648      	mov	r0, r9
 8009254:	0089      	lsls	r1, r1, #2
 8009256:	f006 ff3e 	bl	80100d6 <GUI_ALLOC_Realloc>
 800925a:	4681      	mov	r9, r0
 800925c:	b918      	cbnz	r0, 8009266 <GUI_ARRAY_AddItem+0x58>
 800925e:	4638      	mov	r0, r7
 8009260:	f008 f8e8 	bl	8011434 <GUI_ALLOC_Free>
 8009264:	e018      	b.n	8009298 <GUI_ARRAY_AddItem+0x8a>
 8009266:	f008 f8ab 	bl	80113c0 <GUI_ALLOC_LockH>
 800926a:	ab02      	add	r3, sp, #8
 800926c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009270:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 8009274:	4618      	mov	r0, r3
 8009276:	f008 f8b1 	bl	80113dc <GUI_ALLOC_UnlockH>
 800927a:	4628      	mov	r0, r5
 800927c:	f008 f8a0 	bl	80113c0 <GUI_ALLOC_LockH>
 8009280:	8803      	ldrh	r3, [r0, #0]
 8009282:	9000      	str	r0, [sp, #0]
 8009284:	3301      	adds	r3, #1
 8009286:	f8c0 9004 	str.w	r9, [r0, #4]
 800928a:	8003      	strh	r3, [r0, #0]
 800928c:	4668      	mov	r0, sp
 800928e:	f008 f8a5 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009292:	e002      	b.n	800929a <GUI_ARRAY_AddItem+0x8c>
 8009294:	4604      	mov	r4, r0
 8009296:	e000      	b.n	800929a <GUI_ARRAY_AddItem+0x8c>
 8009298:	2401      	movs	r4, #1
 800929a:	4620      	mov	r0, r4
 800929c:	b003      	add	sp, #12
 800929e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080092a2 <GUI_ARRAY_Delete>:
 80092a2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80092a4:	4605      	mov	r5, r0
 80092a6:	b318      	cbz	r0, 80092f0 <GUI_ARRAY_Delete+0x4e>
 80092a8:	f008 f88a 	bl	80113c0 <GUI_ALLOC_LockH>
 80092ac:	9000      	str	r0, [sp, #0]
 80092ae:	6840      	ldr	r0, [r0, #4]
 80092b0:	b1c0      	cbz	r0, 80092e4 <GUI_ARRAY_Delete+0x42>
 80092b2:	f008 f885 	bl	80113c0 <GUI_ALLOC_LockH>
 80092b6:	2400      	movs	r4, #0
 80092b8:	9001      	str	r0, [sp, #4]
 80092ba:	9b00      	ldr	r3, [sp, #0]
 80092bc:	881b      	ldrh	r3, [r3, #0]
 80092be:	429c      	cmp	r4, r3
 80092c0:	da06      	bge.n	80092d0 <GUI_ARRAY_Delete+0x2e>
 80092c2:	9801      	ldr	r0, [sp, #4]
 80092c4:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 80092c8:	f008 fad2 	bl	8011870 <GUI_ALLOC_FreePtr>
 80092cc:	3401      	adds	r4, #1
 80092ce:	e7f4      	b.n	80092ba <GUI_ARRAY_Delete+0x18>
 80092d0:	a801      	add	r0, sp, #4
 80092d2:	f008 f883 	bl	80113dc <GUI_ALLOC_UnlockH>
 80092d6:	9800      	ldr	r0, [sp, #0]
 80092d8:	3004      	adds	r0, #4
 80092da:	f008 fac9 	bl	8011870 <GUI_ALLOC_FreePtr>
 80092de:	9b00      	ldr	r3, [sp, #0]
 80092e0:	2200      	movs	r2, #0
 80092e2:	801a      	strh	r2, [r3, #0]
 80092e4:	4668      	mov	r0, sp
 80092e6:	f008 f879 	bl	80113dc <GUI_ALLOC_UnlockH>
 80092ea:	4628      	mov	r0, r5
 80092ec:	f008 f8a2 	bl	8011434 <GUI_ALLOC_Free>
 80092f0:	b003      	add	sp, #12
 80092f2:	bd30      	pop	{r4, r5, pc}

080092f4 <GUI_ARRAY_GetpItemLocked>:
 80092f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80092f6:	460e      	mov	r6, r1
 80092f8:	4605      	mov	r5, r0
 80092fa:	b158      	cbz	r0, 8009314 <GUI_ARRAY_GetpItemLocked+0x20>
 80092fc:	f008 f860 	bl	80113c0 <GUI_ALLOC_LockH>
 8009300:	ac02      	add	r4, sp, #8
 8009302:	4631      	mov	r1, r6
 8009304:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009308:	f7ff ff69 	bl	80091de <GUI_ARRAY__GetpItemLocked>
 800930c:	4605      	mov	r5, r0
 800930e:	4620      	mov	r0, r4
 8009310:	f008 f864 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009314:	4628      	mov	r0, r5
 8009316:	b002      	add	sp, #8
 8009318:	bd70      	pop	{r4, r5, r6, pc}

0800931a <GUI_ARRAY_Create>:
 800931a:	2008      	movs	r0, #8
 800931c:	f008 babd 	b.w	801189a <GUI_ALLOC_AllocZero>

08009320 <EDIT_CreateIndirect>:
 8009320:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009322:	b087      	sub	sp, #28
 8009324:	4604      	mov	r4, r0
 8009326:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 800932a:	9100      	str	r1, [sp, #0]
 800932c:	2100      	movs	r1, #0
 800932e:	6965      	ldr	r5, [r4, #20]
 8009330:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 8009334:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 8009338:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 800933c:	9101      	str	r1, [sp, #4]
 800933e:	8a61      	ldrh	r1, [r4, #18]
 8009340:	9102      	str	r1, [sp, #8]
 8009342:	9504      	str	r5, [sp, #16]
 8009344:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8009348:	69a5      	ldr	r5, [r4, #24]
 800934a:	9103      	str	r1, [sp, #12]
 800934c:	9505      	str	r5, [sp, #20]
 800934e:	4410      	add	r0, r2
 8009350:	eb0e 0103 	add.w	r1, lr, r3
 8009354:	463a      	mov	r2, r7
 8009356:	4633      	mov	r3, r6
 8009358:	f000 fa12 	bl	8009780 <EDIT_CreateUser>
 800935c:	4605      	mov	r5, r0
 800935e:	b110      	cbz	r0, 8009366 <EDIT_CreateIndirect+0x46>
 8009360:	8a61      	ldrh	r1, [r4, #18]
 8009362:	f000 fcaa 	bl	8009cba <EDIT_SetTextAlign>
 8009366:	4628      	mov	r0, r5
 8009368:	b007      	add	sp, #28
 800936a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800936c <_Paint>:
 800936c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009370:	b08d      	sub	sp, #52	; 0x34
 8009372:	2300      	movs	r3, #0
 8009374:	4605      	mov	r5, r0
 8009376:	460e      	mov	r6, r1
 8009378:	9300      	str	r3, [sp, #0]
 800937a:	f000 fef1 	bl	800a160 <WM__IsEnabled>
 800937e:	4604      	mov	r4, r0
 8009380:	4628      	mov	r0, r5
 8009382:	f008 f81d 	bl	80113c0 <GUI_ALLOC_LockH>
 8009386:	9001      	str	r0, [sp, #4]
 8009388:	b12e      	cbz	r6, 8009396 <_Paint+0x2a>
 800938a:	f890 2056 	ldrb.w	r2, [r0, #86]	; 0x56
 800938e:	f042 0204 	orr.w	r2, r2, #4
 8009392:	f880 2056 	strb.w	r2, [r0, #86]	; 0x56
 8009396:	f104 021e 	add.w	r2, r4, #30
 800939a:	f10d 0810 	add.w	r8, sp, #16
 800939e:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 80093a2:	f005 fc29 	bl	800ebf8 <LCD_SetBkColor>
 80093a6:	9b01      	ldr	r3, [sp, #4]
 80093a8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80093ac:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 80093ae:	f005 fc2b 	bl	800ec08 <LCD_SetColor>
 80093b2:	9c01      	ldr	r4, [sp, #4]
 80093b4:	2300      	movs	r3, #0
 80093b6:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 80093b8:	9302      	str	r3, [sp, #8]
 80093ba:	f006 fde3 	bl	800ff84 <GUI_SetFont>
 80093be:	4620      	mov	r0, r4
 80093c0:	4641      	mov	r1, r8
 80093c2:	f7fe fb5c 	bl	8007a7e <WIDGET__GetInsideRect>
 80093c6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80093c8:	b110      	cbz	r0, 80093d0 <_Paint+0x64>
 80093ca:	f007 fff9 	bl	80113c0 <GUI_ALLOC_LockH>
 80093ce:	9002      	str	r0, [sp, #8]
 80093d0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80093d4:	f10d 0a18 	add.w	sl, sp, #24
 80093d8:	e88a 0003 	stmia.w	sl, {r0, r1}
 80093dc:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
 80093e0:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 80093e4:	9802      	ldr	r0, [sp, #8]
 80093e6:	441a      	add	r2, r3
 80093e8:	3201      	adds	r2, #1
 80093ea:	f8ad 2018 	strh.w	r2, [sp, #24]
 80093ee:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 80093f2:	3a01      	subs	r2, #1
 80093f4:	1ad3      	subs	r3, r2, r3
 80093f6:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
 80093fa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80093fe:	4651      	mov	r1, sl
 8009400:	465a      	mov	r2, fp
 8009402:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8009404:	f005 fde8 	bl	800efd8 <GUI__CalcTextRect>
 8009408:	8e65      	ldrh	r5, [r4, #50]	; 0x32
 800940a:	f015 0501 	ands.w	r5, r5, #1
 800940e:	d057      	beq.n	80094c0 <_Paint+0x154>
 8009410:	f894 5055 	ldrb.w	r5, [r4, #85]	; 0x55
 8009414:	9802      	ldr	r0, [sp, #8]
 8009416:	2d00      	cmp	r5, #0
 8009418:	bf08      	it	eq
 800941a:	2501      	moveq	r5, #1
 800941c:	f005 fd6a 	bl	800eef4 <GUI__GetNumChars>
 8009420:	4681      	mov	r9, r0
 8009422:	9802      	ldr	r0, [sp, #8]
 8009424:	2800      	cmp	r0, #0
 8009426:	d04b      	beq.n	80094c0 <_Paint+0x154>
 8009428:	2300      	movs	r3, #0
 800942a:	9303      	str	r3, [sp, #12]
 800942c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8009430:	b913      	cbnz	r3, 8009438 <_Paint+0xcc>
 8009432:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009434:	b323      	cbz	r3, 8009480 <_Paint+0x114>
 8009436:	b31e      	cbz	r6, 8009480 <_Paint+0x114>
 8009438:	6ce7      	ldr	r7, [r4, #76]	; 0x4c
 800943a:	454f      	cmp	r7, r9
 800943c:	da2a      	bge.n	8009494 <_Paint+0x128>
 800943e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009440:	b1ab      	cbz	r3, 800946e <_Paint+0x102>
 8009442:	b1a6      	cbz	r6, 800946e <_Paint+0x102>
 8009444:	2500      	movs	r5, #0
 8009446:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 8009448:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800944a:	4413      	add	r3, r2
 800944c:	429f      	cmp	r7, r3
 800944e:	da0a      	bge.n	8009466 <_Paint+0xfa>
 8009450:	4639      	mov	r1, r7
 8009452:	464a      	mov	r2, r9
 8009454:	2300      	movs	r3, #0
 8009456:	9802      	ldr	r0, [sp, #8]
 8009458:	f005 fdb6 	bl	800efc8 <GUI__GetCursorCharacter>
 800945c:	f007 fe9c 	bl	8011198 <GUI_GetCharDistX>
 8009460:	3701      	adds	r7, #1
 8009462:	4405      	add	r5, r0
 8009464:	e7ef      	b.n	8009446 <_Paint+0xda>
 8009466:	2d00      	cmp	r5, #0
 8009468:	bf08      	it	eq
 800946a:	2501      	moveq	r5, #1
 800946c:	e012      	b.n	8009494 <_Paint+0x128>
 800946e:	4639      	mov	r1, r7
 8009470:	464a      	mov	r2, r9
 8009472:	ab03      	add	r3, sp, #12
 8009474:	f005 fda8 	bl	800efc8 <GUI__GetCursorCharacter>
 8009478:	f007 fe8e 	bl	8011198 <GUI_GetCharDistX>
 800947c:	4605      	mov	r5, r0
 800947e:	e009      	b.n	8009494 <_Paint+0x128>
 8009480:	4b4c      	ldr	r3, [pc, #304]	; (80095b4 <_Paint+0x248>)
 8009482:	681b      	ldr	r3, [r3, #0]
 8009484:	2b01      	cmp	r3, #1
 8009486:	d105      	bne.n	8009494 <_Paint+0x128>
 8009488:	4b4b      	ldr	r3, [pc, #300]	; (80095b8 <_Paint+0x24c>)
 800948a:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 800948c:	681b      	ldr	r3, [r3, #0]
 800948e:	4649      	mov	r1, r9
 8009490:	4798      	blx	r3
 8009492:	9003      	str	r0, [sp, #12]
 8009494:	e89b 0003 	ldmia.w	fp, {r0, r1}
 8009498:	ab08      	add	r3, sp, #32
 800949a:	e883 0003 	stmia.w	r3, {r0, r1}
 800949e:	9b03      	ldr	r3, [sp, #12]
 80094a0:	b123      	cbz	r3, 80094ac <_Paint+0x140>
 80094a2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80094a6:	1b5b      	subs	r3, r3, r5
 80094a8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80094ac:	9802      	ldr	r0, [sp, #8]
 80094ae:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80094b0:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 80094b4:	464a      	mov	r2, r9
 80094b6:	f005 fd73 	bl	800efa0 <GUI__GetCursorPosX>
 80094ba:	4438      	add	r0, r7
 80094bc:	f8ad 0020 	strh.w	r0, [sp, #32]
 80094c0:	9b02      	ldr	r3, [sp, #8]
 80094c2:	b113      	cbz	r3, 80094ca <_Paint+0x15e>
 80094c4:	a802      	add	r0, sp, #8
 80094c6:	f007 ff89 	bl	80113dc <GUI_ALLOC_UnlockH>
 80094ca:	9b01      	ldr	r3, [sp, #4]
 80094cc:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80094ce:	b110      	cbz	r0, 80094d6 <_Paint+0x16a>
 80094d0:	f007 ff76 	bl	80113c0 <GUI_ALLOC_LockH>
 80094d4:	9000      	str	r0, [sp, #0]
 80094d6:	2000      	movs	r0, #0
 80094d8:	f002 fafc 	bl	800bad4 <WM__InitIVRSearch>
 80094dc:	b940      	cbnz	r0, 80094f0 <_Paint+0x184>
 80094de:	2e00      	cmp	r6, #0
 80094e0:	d05c      	beq.n	800959c <_Paint+0x230>
 80094e2:	9b01      	ldr	r3, [sp, #4]
 80094e4:	2100      	movs	r1, #0
 80094e6:	f8d3 0084 	ldr.w	r0, [r3, #132]	; 0x84
 80094ea:	f000 feeb 	bl	800a2c4 <WM_RestartTimer>
 80094ee:	e055      	b.n	800959c <_Paint+0x230>
 80094f0:	4640      	mov	r0, r8
 80094f2:	f000 ff25 	bl	800a340 <WM_SetUserClipRect>
 80094f6:	b12e      	cbz	r6, 8009504 <_Paint+0x198>
 80094f8:	9800      	ldr	r0, [sp, #0]
 80094fa:	4641      	mov	r1, r8
 80094fc:	4652      	mov	r2, sl
 80094fe:	465b      	mov	r3, fp
 8009500:	f008 faa2 	bl	8011a48 <WIDGET__FillStringInRect>
 8009504:	9b01      	ldr	r3, [sp, #4]
 8009506:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 8009508:	07d0      	lsls	r0, r2, #31
 800950a:	d53d      	bpl.n	8009588 <_Paint+0x21c>
 800950c:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 8009510:	0719      	lsls	r1, r3, #28
 8009512:	d52f      	bpl.n	8009574 <_Paint+0x208>
 8009514:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8009518:	3b01      	subs	r3, #1
 800951a:	442b      	add	r3, r5
 800951c:	2000      	movs	r0, #0
 800951e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009522:	f000 ff0d 	bl	800a340 <WM_SetUserClipRect>
 8009526:	a808      	add	r0, sp, #32
 8009528:	f000 ff0a 	bl	800a340 <WM_SetUserClipRect>
 800952c:	9b01      	ldr	r3, [sp, #4]
 800952e:	f893 2056 	ldrb.w	r2, [r3, #86]	; 0x56
 8009532:	0752      	lsls	r2, r2, #29
 8009534:	d507      	bpl.n	8009546 <_Paint+0x1da>
 8009536:	6f58      	ldr	r0, [r3, #116]	; 0x74
 8009538:	f006 fd52 	bl	800ffe0 <GUI_SetColor>
 800953c:	9b01      	ldr	r3, [sp, #4]
 800953e:	f8d3 0080 	ldr.w	r0, [r3, #128]	; 0x80
 8009542:	f006 fd4b 	bl	800ffdc <GUI_SetBkColor>
 8009546:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 800954a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 800954e:	9800      	ldr	r0, [sp, #0]
 8009550:	f007 f950 	bl	80107f4 <GUI_DispStringAt>
 8009554:	2004      	movs	r0, #4
 8009556:	f006 fd1f 	bl	800ff98 <GUI_SetDrawMode>
 800955a:	4b18      	ldr	r3, [pc, #96]	; (80095bc <_Paint+0x250>)
 800955c:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	f9b3 0022 	ldrsh.w	r0, [r3, #34]	; 0x22
 8009566:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800956a:	1942      	adds	r2, r0, r5
 800956c:	3a01      	subs	r2, #1
 800956e:	f006 ffb7 	bl	80104e0 <GUI_FillRect>
 8009572:	e009      	b.n	8009588 <_Paint+0x21c>
 8009574:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8009578:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 800957c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8009580:	1942      	adds	r2, r0, r5
 8009582:	3a01      	subs	r2, #1
 8009584:	f006 ff4c 	bl	8010420 <GUI_InvertRect>
 8009588:	2000      	movs	r0, #0
 800958a:	f000 fed9 	bl	800a340 <WM_SetUserClipRect>
 800958e:	b116      	cbz	r6, 8009596 <_Paint+0x22a>
 8009590:	9801      	ldr	r0, [sp, #4]
 8009592:	f7fe fbc2 	bl	8007d1a <WIDGET__EFFECT_DrawDown>
 8009596:	f002 f9db 	bl	800b950 <WM__GetNextIVR>
 800959a:	e79f      	b.n	80094dc <_Paint+0x170>
 800959c:	a801      	add	r0, sp, #4
 800959e:	f007 ff1d 	bl	80113dc <GUI_ALLOC_UnlockH>
 80095a2:	9b00      	ldr	r3, [sp, #0]
 80095a4:	b113      	cbz	r3, 80095ac <_Paint+0x240>
 80095a6:	4668      	mov	r0, sp
 80095a8:	f007 ff18 	bl	80113dc <GUI_ALLOC_UnlockH>
 80095ac:	b00d      	add	sp, #52	; 0x34
 80095ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80095b2:	bf00      	nop
 80095b4:	200199a0 	.word	0x200199a0
 80095b8:	200199b4 	.word	0x200199b4
 80095bc:	2000016c 	.word	0x2000016c

080095c0 <_IncrementBuffer>:
 80095c0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80095c4:	460e      	mov	r6, r1
 80095c6:	4680      	mov	r8, r0
 80095c8:	f007 fefa 	bl	80113c0 <GUI_ALLOC_LockH>
 80095cc:	ac02      	add	r4, sp, #8
 80095ce:	8f47      	ldrh	r7, [r0, #58]	; 0x3a
 80095d0:	6b45      	ldr	r5, [r0, #52]	; 0x34
 80095d2:	f844 0d08 	str.w	r0, [r4, #-8]!
 80095d6:	4437      	add	r7, r6
 80095d8:	4668      	mov	r0, sp
 80095da:	f007 feff 	bl	80113dc <GUI_ALLOC_UnlockH>
 80095de:	4628      	mov	r0, r5
 80095e0:	4639      	mov	r1, r7
 80095e2:	f006 fd78 	bl	80100d6 <GUI_ALLOC_Realloc>
 80095e6:	4606      	mov	r6, r0
 80095e8:	b1a0      	cbz	r0, 8009614 <_IncrementBuffer+0x54>
 80095ea:	b945      	cbnz	r5, 80095fe <_IncrementBuffer+0x3e>
 80095ec:	f007 fee8 	bl	80113c0 <GUI_ALLOC_LockH>
 80095f0:	4602      	mov	r2, r0
 80095f2:	a802      	add	r0, sp, #8
 80095f4:	f840 2d04 	str.w	r2, [r0, #-4]!
 80095f8:	7015      	strb	r5, [r2, #0]
 80095fa:	f007 feef 	bl	80113dc <GUI_ALLOC_UnlockH>
 80095fe:	4640      	mov	r0, r8
 8009600:	f007 fede 	bl	80113c0 <GUI_ALLOC_LockH>
 8009604:	9000      	str	r0, [sp, #0]
 8009606:	8747      	strh	r7, [r0, #58]	; 0x3a
 8009608:	6346      	str	r6, [r0, #52]	; 0x34
 800960a:	4668      	mov	r0, sp
 800960c:	f007 fee6 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009610:	2001      	movs	r0, #1
 8009612:	e7ff      	b.n	8009614 <_IncrementBuffer+0x54>
 8009614:	b002      	add	sp, #8
 8009616:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800961a <_ChangeCharacter>:
 800961a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800961e:	460d      	mov	r5, r1
 8009620:	4606      	mov	r6, r0
 8009622:	2100      	movs	r1, #0
 8009624:	4628      	mov	r0, r5
 8009626:	4690      	mov	r8, r2
 8009628:	461f      	mov	r7, r3
 800962a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800962e:	f88d 1006 	strb.w	r1, [sp, #6]
 8009632:	f005 fee1 	bl	800f3f8 <GUI_UC__CalcSizeOfChar>
 8009636:	4445      	add	r5, r8
 8009638:	b2ad      	uxth	r5, r5
 800963a:	4604      	mov	r4, r0
 800963c:	4628      	mov	r0, r5
 800963e:	f005 fedb 	bl	800f3f8 <GUI_UC__CalcSizeOfChar>
 8009642:	4284      	cmp	r4, r0
 8009644:	d10c      	bne.n	8009660 <_ChangeCharacter+0x46>
 8009646:	4629      	mov	r1, r5
 8009648:	a801      	add	r0, sp, #4
 800964a:	f005 fecd 	bl	800f3e8 <GUI_UC_Encode>
 800964e:	a901      	add	r1, sp, #4
 8009650:	4638      	mov	r0, r7
 8009652:	4622      	mov	r2, r4
 8009654:	f00f fb6d 	bl	8018d32 <memcpy>
 8009658:	4630      	mov	r0, r6
 800965a:	2105      	movs	r1, #5
 800965c:	f001 f8a9 	bl	800a7b2 <WM_NotifyParent>
 8009660:	b002      	add	sp, #8
 8009662:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009666 <_IsSpaceInBuffer>:
 8009666:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009668:	4606      	mov	r6, r0
 800966a:	460f      	mov	r7, r1
 800966c:	f007 fea8 	bl	80113c0 <GUI_ALLOC_LockH>
 8009670:	9000      	str	r0, [sp, #0]
 8009672:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8009674:	b158      	cbz	r0, 800968e <_IsSpaceInBuffer+0x28>
 8009676:	f007 fea3 	bl	80113c0 <GUI_ALLOC_LockH>
 800967a:	ac02      	add	r4, sp, #8
 800967c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009680:	f7f6 fdc6 	bl	8000210 <strlen>
 8009684:	4605      	mov	r5, r0
 8009686:	4620      	mov	r0, r4
 8009688:	f007 fea8 	bl	80113dc <GUI_ALLOC_UnlockH>
 800968c:	e000      	b.n	8009690 <_IsSpaceInBuffer+0x2a>
 800968e:	4605      	mov	r5, r0
 8009690:	a802      	add	r0, sp, #8
 8009692:	197c      	adds	r4, r7, r5
 8009694:	f850 2d08 	ldr.w	r2, [r0, #-8]!
 8009698:	8f52      	ldrh	r2, [r2, #58]	; 0x3a
 800969a:	3401      	adds	r4, #1
 800969c:	1aa4      	subs	r4, r4, r2
 800969e:	4668      	mov	r0, sp
 80096a0:	f007 fe9c 	bl	80113dc <GUI_ALLOC_UnlockH>
 80096a4:	2c00      	cmp	r4, #0
 80096a6:	dd08      	ble.n	80096ba <_IsSpaceInBuffer+0x54>
 80096a8:	4630      	mov	r0, r6
 80096aa:	f104 0110 	add.w	r1, r4, #16
 80096ae:	f7ff ff87 	bl	80095c0 <_IncrementBuffer>
 80096b2:	3000      	adds	r0, #0
 80096b4:	bf18      	it	ne
 80096b6:	2001      	movne	r0, #1
 80096b8:	e000      	b.n	80096bc <_IsSpaceInBuffer+0x56>
 80096ba:	2001      	movs	r0, #1
 80096bc:	b003      	add	sp, #12
 80096be:	bdf0      	pop	{r4, r5, r6, r7, pc}

080096c0 <_DeleteChar>:
 80096c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80096c2:	4607      	mov	r7, r0
 80096c4:	f007 fe7c 	bl	80113c0 <GUI_ALLOC_LockH>
 80096c8:	4602      	mov	r2, r0
 80096ca:	a802      	add	r0, sp, #8
 80096cc:	6b54      	ldr	r4, [r2, #52]	; 0x34
 80096ce:	f840 2d08 	str.w	r2, [r0, #-8]!
 80096d2:	4668      	mov	r0, sp
 80096d4:	6cd6      	ldr	r6, [r2, #76]	; 0x4c
 80096d6:	f007 fe81 	bl	80113dc <GUI_ALLOC_UnlockH>
 80096da:	b314      	cbz	r4, 8009722 <_DeleteChar+0x62>
 80096dc:	4620      	mov	r0, r4
 80096de:	f007 fe6f 	bl	80113c0 <GUI_ALLOC_LockH>
 80096e2:	ac02      	add	r4, sp, #8
 80096e4:	4631      	mov	r1, r6
 80096e6:	4605      	mov	r5, r0
 80096e8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80096ec:	f005 fea0 	bl	800f430 <GUI_UC__NumChars2NumBytes>
 80096f0:	4606      	mov	r6, r0
 80096f2:	4628      	mov	r0, r5
 80096f4:	f7f6 fd8c 	bl	8000210 <strlen>
 80096f8:	4286      	cmp	r6, r0
 80096fa:	d20f      	bcs.n	800971c <_DeleteChar+0x5c>
 80096fc:	4435      	add	r5, r6
 80096fe:	4628      	mov	r0, r5
 8009700:	f005 fe62 	bl	800f3c8 <GUI_UC_GetCharSize>
 8009704:	1829      	adds	r1, r5, r0
 8009706:	4628      	mov	r0, r5
 8009708:	f00f fb60 	bl	8018dcc <strcpy>
 800970c:	4620      	mov	r0, r4
 800970e:	f007 fe65 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009712:	4638      	mov	r0, r7
 8009714:	2105      	movs	r1, #5
 8009716:	f001 f84c 	bl	800a7b2 <WM_NotifyParent>
 800971a:	e002      	b.n	8009722 <_DeleteChar+0x62>
 800971c:	4620      	mov	r0, r4
 800971e:	f007 fe5d 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009722:	b003      	add	sp, #12
 8009724:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009726 <EDIT__SetCursorPos>:
 8009726:	b513      	push	{r0, r1, r4, lr}
 8009728:	460c      	mov	r4, r1
 800972a:	f007 fe49 	bl	80113c0 <GUI_ALLOC_LockH>
 800972e:	9000      	str	r0, [sp, #0]
 8009730:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8009732:	b1f8      	cbz	r0, 8009774 <EDIT__SetCursorPos+0x4e>
 8009734:	f007 fe44 	bl	80113c0 <GUI_ALLOC_LockH>
 8009738:	9001      	str	r0, [sp, #4]
 800973a:	f005 fbdb 	bl	800eef4 <GUI__GetNumChars>
 800973e:	9b00      	ldr	r3, [sp, #0]
 8009740:	f9b3 1038 	ldrsh.w	r1, [r3, #56]	; 0x38
 8009744:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8009748:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 800974c:	2a00      	cmp	r2, #0
 800974e:	bf0c      	ite	eq
 8009750:	460a      	moveq	r2, r1
 8009752:	1e4a      	subne	r2, r1, #1
 8009754:	4294      	cmp	r4, r2
 8009756:	bfa8      	it	ge
 8009758:	4614      	movge	r4, r2
 800975a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800975c:	4284      	cmp	r4, r0
 800975e:	bfb8      	it	lt
 8009760:	4620      	movlt	r0, r4
 8009762:	4282      	cmp	r2, r0
 8009764:	f04f 0200 	mov.w	r2, #0
 8009768:	bf18      	it	ne
 800976a:	64d8      	strne	r0, [r3, #76]	; 0x4c
 800976c:	651a      	str	r2, [r3, #80]	; 0x50
 800976e:	a801      	add	r0, sp, #4
 8009770:	f007 fe34 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009774:	4668      	mov	r0, sp
 8009776:	f007 fe31 	bl	80113dc <GUI_ALLOC_UnlockH>
 800977a:	b002      	add	sp, #8
 800977c:	bd10      	pop	{r4, pc}
	...

08009780 <EDIT_CreateUser>:
 8009780:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009784:	b086      	sub	sp, #24
 8009786:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8009788:	9400      	str	r4, [sp, #0]
 800978a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800978c:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 8009790:	f444 5480 	orr.w	r4, r4, #4096	; 0x1000
 8009794:	9401      	str	r4, [sp, #4]
 8009796:	4c21      	ldr	r4, [pc, #132]	; (800981c <EDIT_CreateUser+0x9c>)
 8009798:	9402      	str	r4, [sp, #8]
 800979a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800979c:	3460      	adds	r4, #96	; 0x60
 800979e:	9403      	str	r4, [sp, #12]
 80097a0:	f001 ff9c 	bl	800b6dc <WM_CreateWindowAsChild>
 80097a4:	4607      	mov	r7, r0
 80097a6:	2800      	cmp	r0, #0
 80097a8:	d034      	beq.n	8009814 <EDIT_CreateUser+0x94>
 80097aa:	f007 fe09 	bl	80113c0 <GUI_ALLOC_LockH>
 80097ae:	4d1c      	ldr	r5, [pc, #112]	; (8009820 <EDIT_CreateUser+0xa0>)
 80097b0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80097b2:	9005      	str	r0, [sp, #20]
 80097b4:	2210      	movs	r2, #16
 80097b6:	f7fe f9c1 	bl	8007b3c <WIDGET__Init>
 80097ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80097bc:	9e05      	ldr	r6, [sp, #20]
 80097be:	f106 0460 	add.w	r4, r6, #96	; 0x60
 80097c2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80097c4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80097c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80097c8:	682b      	ldr	r3, [r5, #0]
 80097ca:	6023      	str	r3, [r4, #0]
 80097cc:	2301      	movs	r3, #1
 80097ce:	f886 3055 	strb.w	r3, [r6, #85]	; 0x55
 80097d2:	f118 0301 	adds.w	r3, r8, #1
 80097d6:	bf18      	it	ne
 80097d8:	2301      	movne	r3, #1
 80097da:	f1b8 0f00 	cmp.w	r8, #0
 80097de:	bfcc      	ite	gt
 80097e0:	fa1f f888 	uxthgt.w	r8, r8
 80097e4:	f04f 0808 	movle.w	r8, #8
 80097e8:	f886 3088 	strb.w	r3, [r6, #136]	; 0x88
 80097ec:	2300      	movs	r3, #0
 80097ee:	8773      	strh	r3, [r6, #58]	; 0x3a
 80097f0:	6373      	str	r3, [r6, #52]	; 0x34
 80097f2:	f8a6 8038 	strh.w	r8, [r6, #56]	; 0x38
 80097f6:	a805      	add	r0, sp, #20
 80097f8:	f007 fdf0 	bl	80113dc <GUI_ALLOC_UnlockH>
 80097fc:	fa0f f188 	sxth.w	r1, r8
 8009800:	4638      	mov	r0, r7
 8009802:	3101      	adds	r1, #1
 8009804:	f7ff fedc 	bl	80095c0 <_IncrementBuffer>
 8009808:	4604      	mov	r4, r0
 800980a:	b918      	cbnz	r0, 8009814 <EDIT_CreateUser+0x94>
 800980c:	4638      	mov	r0, r7
 800980e:	f002 f80f 	bl	800b830 <WM_DeleteWindow>
 8009812:	4627      	mov	r7, r4
 8009814:	4638      	mov	r0, r7
 8009816:	b006      	add	sp, #24
 8009818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800981c:	08009ac1 	.word	0x08009ac1
 8009820:	200000d8 	.word	0x200000d8

08009824 <EDIT_SetCursorAtPixel>:
 8009824:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009828:	460f      	mov	r7, r1
 800982a:	4604      	mov	r4, r0
 800982c:	2800      	cmp	r0, #0
 800982e:	d04f      	beq.n	80098d0 <EDIT_SetCursorAtPixel+0xac>
 8009830:	f007 fdc6 	bl	80113c0 <GUI_ALLOC_LockH>
 8009834:	9001      	str	r0, [sp, #4]
 8009836:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8009838:	2800      	cmp	r0, #0
 800983a:	d046      	beq.n	80098ca <EDIT_SetCursorAtPixel+0xa6>
 800983c:	f007 fdc0 	bl	80113c0 <GUI_ALLOC_LockH>
 8009840:	9b01      	ldr	r3, [sp, #4]
 8009842:	9000      	str	r0, [sp, #0]
 8009844:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8009846:	f006 fb9d 	bl	800ff84 <GUI_SetFont>
 800984a:	4680      	mov	r8, r0
 800984c:	4620      	mov	r0, r4
 800984e:	f001 f8e7 	bl	800aa20 <WM_GetWindowSizeX>
 8009852:	4605      	mov	r5, r0
 8009854:	9800      	ldr	r0, [sp, #0]
 8009856:	f006 fe1f 	bl	8010498 <GUI_GetStringDistX>
 800985a:	9b01      	ldr	r3, [sp, #4]
 800985c:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800985e:	f002 0203 	and.w	r2, r2, #3
 8009862:	2a01      	cmp	r2, #1
 8009864:	4606      	mov	r6, r0
 8009866:	d007      	beq.n	8009878 <EDIT_SetCursorAtPixel+0x54>
 8009868:	2a02      	cmp	r2, #2
 800986a:	d109      	bne.n	8009880 <EDIT_SetCursorAtPixel+0x5c>
 800986c:	1a2d      	subs	r5, r5, r0
 800986e:	3501      	adds	r5, #1
 8009870:	fb95 f5f2 	sdiv	r5, r5, r2
 8009874:	1b7d      	subs	r5, r7, r5
 8009876:	e009      	b.n	800988c <EDIT_SetCursorAtPixel+0x68>
 8009878:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800987a:	1b45      	subs	r5, r0, r5
 800987c:	43db      	mvns	r3, r3
 800987e:	e003      	b.n	8009888 <EDIT_SetCursorAtPixel+0x64>
 8009880:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8009882:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009884:	681b      	ldr	r3, [r3, #0]
 8009886:	43ed      	mvns	r5, r5
 8009888:	1aed      	subs	r5, r5, r3
 800988a:	443d      	add	r5, r7
 800988c:	9800      	ldr	r0, [sp, #0]
 800988e:	f005 fb31 	bl	800eef4 <GUI__GetNumChars>
 8009892:	2d00      	cmp	r5, #0
 8009894:	4602      	mov	r2, r0
 8009896:	da02      	bge.n	800989e <EDIT_SetCursorAtPixel+0x7a>
 8009898:	4620      	mov	r0, r4
 800989a:	2100      	movs	r1, #0
 800989c:	e00a      	b.n	80098b4 <EDIT_SetCursorAtPixel+0x90>
 800989e:	42b5      	cmp	r5, r6
 80098a0:	dd02      	ble.n	80098a8 <EDIT_SetCursorAtPixel+0x84>
 80098a2:	4620      	mov	r0, r4
 80098a4:	4611      	mov	r1, r2
 80098a6:	e005      	b.n	80098b4 <EDIT_SetCursorAtPixel+0x90>
 80098a8:	4629      	mov	r1, r5
 80098aa:	9800      	ldr	r0, [sp, #0]
 80098ac:	f005 fb82 	bl	800efb4 <GUI__GetCursorPosChar>
 80098b0:	4601      	mov	r1, r0
 80098b2:	4620      	mov	r0, r4
 80098b4:	f7ff ff37 	bl	8009726 <EDIT__SetCursorPos>
 80098b8:	4668      	mov	r0, sp
 80098ba:	f007 fd8f 	bl	80113dc <GUI_ALLOC_UnlockH>
 80098be:	4640      	mov	r0, r8
 80098c0:	f006 fb60 	bl	800ff84 <GUI_SetFont>
 80098c4:	4620      	mov	r0, r4
 80098c6:	f001 fec8 	bl	800b65a <WM_InvalidateWindow>
 80098ca:	a801      	add	r0, sp, #4
 80098cc:	f007 fd86 	bl	80113dc <GUI_ALLOC_UnlockH>
 80098d0:	b002      	add	sp, #8
 80098d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080098d6 <EDIT_AddKey>:
 80098d6:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80098da:	460d      	mov	r5, r1
 80098dc:	4604      	mov	r4, r0
 80098de:	2800      	cmp	r0, #0
 80098e0:	f000 80eb 	beq.w	8009aba <EDIT_AddKey+0x1e4>
 80098e4:	f007 fd6c 	bl	80113c0 <GUI_ALLOC_LockH>
 80098e8:	af04      	add	r7, sp, #16
 80098ea:	f8d0 9058 	ldr.w	r9, [r0, #88]	; 0x58
 80098ee:	f847 0d0c 	str.w	r0, [r7, #-12]!
 80098f2:	f890 a054 	ldrb.w	sl, [r0, #84]	; 0x54
 80098f6:	f8d0 8034 	ldr.w	r8, [r0, #52]	; 0x34
 80098fa:	6cc6      	ldr	r6, [r0, #76]	; 0x4c
 80098fc:	4638      	mov	r0, r7
 80098fe:	f007 fd6d 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009902:	f1b9 0f00 	cmp.w	r9, #0
 8009906:	d003      	beq.n	8009910 <EDIT_AddKey+0x3a>
 8009908:	4620      	mov	r0, r4
 800990a:	4629      	mov	r1, r5
 800990c:	47c8      	blx	r9
 800990e:	e0d1      	b.n	8009ab4 <EDIT_AddKey+0x1de>
 8009910:	2d12      	cmp	r5, #18
 8009912:	f000 80cb 	beq.w	8009aac <EDIT_AddKey+0x1d6>
 8009916:	dc05      	bgt.n	8009924 <EDIT_AddKey+0x4e>
 8009918:	2d10      	cmp	r5, #16
 800991a:	d03d      	beq.n	8009998 <EDIT_AddKey+0xc2>
 800991c:	dc09      	bgt.n	8009932 <EDIT_AddKey+0x5c>
 800991e:	2d08      	cmp	r5, #8
 8009920:	d03d      	beq.n	800999e <EDIT_AddKey+0xc8>
 8009922:	e05a      	b.n	80099da <EDIT_AddKey+0x104>
 8009924:	2d1d      	cmp	r5, #29
 8009926:	d045      	beq.n	80099b4 <EDIT_AddKey+0xde>
 8009928:	2d1e      	cmp	r5, #30
 800992a:	d03f      	beq.n	80099ac <EDIT_AddKey+0xd6>
 800992c:	2d13      	cmp	r5, #19
 800992e:	d154      	bne.n	80099da <EDIT_AddKey+0x104>
 8009930:	e015      	b.n	800995e <EDIT_AddKey+0x88>
 8009932:	f1b8 0f00 	cmp.w	r8, #0
 8009936:	f000 80bd 	beq.w	8009ab4 <EDIT_AddKey+0x1de>
 800993a:	4640      	mov	r0, r8
 800993c:	f007 fd40 	bl	80113c0 <GUI_ALLOC_LockH>
 8009940:	ad04      	add	r5, sp, #16
 8009942:	4631      	mov	r1, r6
 8009944:	4607      	mov	r7, r0
 8009946:	f845 0d04 	str.w	r0, [r5, #-4]!
 800994a:	f005 fd71 	bl	800f430 <GUI_UC__NumChars2NumBytes>
 800994e:	183e      	adds	r6, r7, r0
 8009950:	4630      	mov	r0, r6
 8009952:	f005 fd41 	bl	800f3d8 <GUI_UC_GetCharCode>
 8009956:	2201      	movs	r2, #1
 8009958:	4601      	mov	r1, r0
 800995a:	4620      	mov	r0, r4
 800995c:	e015      	b.n	800998a <EDIT_AddKey+0xb4>
 800995e:	f1b8 0f00 	cmp.w	r8, #0
 8009962:	f000 80a7 	beq.w	8009ab4 <EDIT_AddKey+0x1de>
 8009966:	4640      	mov	r0, r8
 8009968:	f007 fd2a 	bl	80113c0 <GUI_ALLOC_LockH>
 800996c:	ad04      	add	r5, sp, #16
 800996e:	4631      	mov	r1, r6
 8009970:	4607      	mov	r7, r0
 8009972:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009976:	f005 fd5b 	bl	800f430 <GUI_UC__NumChars2NumBytes>
 800997a:	183e      	adds	r6, r7, r0
 800997c:	4630      	mov	r0, r6
 800997e:	f005 fd2b 	bl	800f3d8 <GUI_UC_GetCharCode>
 8009982:	f04f 32ff 	mov.w	r2, #4294967295
 8009986:	4601      	mov	r1, r0
 8009988:	4620      	mov	r0, r4
 800998a:	4633      	mov	r3, r6
 800998c:	f7ff fe45 	bl	800961a <_ChangeCharacter>
 8009990:	4628      	mov	r0, r5
 8009992:	f007 fd23 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009996:	e08d      	b.n	8009ab4 <EDIT_AddKey+0x1de>
 8009998:	4620      	mov	r0, r4
 800999a:	1e71      	subs	r1, r6, #1
 800999c:	e088      	b.n	8009ab0 <EDIT_AddKey+0x1da>
 800999e:	2e00      	cmp	r6, #0
 80099a0:	f000 8088 	beq.w	8009ab4 <EDIT_AddKey+0x1de>
 80099a4:	4620      	mov	r0, r4
 80099a6:	1e71      	subs	r1, r6, #1
 80099a8:	f7ff febd 	bl	8009726 <EDIT__SetCursorPos>
 80099ac:	4620      	mov	r0, r4
 80099ae:	f7ff fe87 	bl	80096c0 <_DeleteChar>
 80099b2:	e07f      	b.n	8009ab4 <EDIT_AddKey+0x1de>
 80099b4:	4620      	mov	r0, r4
 80099b6:	f007 fd03 	bl	80113c0 <GUI_ALLOC_LockH>
 80099ba:	f1ba 0f01 	cmp.w	sl, #1
 80099be:	9001      	str	r0, [sp, #4]
 80099c0:	d102      	bne.n	80099c8 <EDIT_AddKey+0xf2>
 80099c2:	f880 9054 	strb.w	r9, [r0, #84]	; 0x54
 80099c6:	e006      	b.n	80099d6 <EDIT_AddKey+0x100>
 80099c8:	2301      	movs	r3, #1
 80099ca:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 80099ce:	4631      	mov	r1, r6
 80099d0:	4620      	mov	r0, r4
 80099d2:	f7ff fea8 	bl	8009726 <EDIT__SetCursorPos>
 80099d6:	4638      	mov	r0, r7
 80099d8:	e7db      	b.n	8009992 <EDIT_AddKey+0xbc>
 80099da:	2d1f      	cmp	r5, #31
 80099dc:	dd6a      	ble.n	8009ab4 <EDIT_AddKey+0x1de>
 80099de:	f1ba 0f00 	cmp.w	sl, #0
 80099e2:	d002      	beq.n	80099ea <EDIT_AddKey+0x114>
 80099e4:	4620      	mov	r0, r4
 80099e6:	f7ff fe6b 	bl	80096c0 <_DeleteChar>
 80099ea:	4620      	mov	r0, r4
 80099ec:	f007 fce8 	bl	80113c0 <GUI_ALLOC_LockH>
 80099f0:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 80099f4:	9002      	str	r0, [sp, #8]
 80099f6:	2b00      	cmp	r3, #0
 80099f8:	4607      	mov	r7, r0
 80099fa:	dd18      	ble.n	8009a2e <EDIT_AddKey+0x158>
 80099fc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80099fe:	b160      	cbz	r0, 8009a1a <EDIT_AddKey+0x144>
 8009a00:	f007 fcde 	bl	80113c0 <GUI_ALLOC_LockH>
 8009a04:	f10d 0810 	add.w	r8, sp, #16
 8009a08:	f848 0d04 	str.w	r0, [r8, #-4]!
 8009a0c:	f005 fa72 	bl	800eef4 <GUI__GetNumChars>
 8009a10:	4681      	mov	r9, r0
 8009a12:	4640      	mov	r0, r8
 8009a14:	f007 fce2 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009a18:	e000      	b.n	8009a1c <EDIT_AddKey+0x146>
 8009a1a:	4681      	mov	r9, r0
 8009a1c:	f9b7 8038 	ldrsh.w	r8, [r7, #56]	; 0x38
 8009a20:	45c1      	cmp	r9, r8
 8009a22:	bfac      	ite	ge
 8009a24:	f04f 0800 	movge.w	r8, #0
 8009a28:	f04f 0801 	movlt.w	r8, #1
 8009a2c:	e001      	b.n	8009a32 <EDIT_AddKey+0x15c>
 8009a2e:	f04f 0801 	mov.w	r8, #1
 8009a32:	af04      	add	r7, sp, #16
 8009a34:	f857 3d08 	ldr.w	r3, [r7, #-8]!
 8009a38:	4638      	mov	r0, r7
 8009a3a:	f8d3 a04c 	ldr.w	sl, [r3, #76]	; 0x4c
 8009a3e:	f007 fccd 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009a42:	f1b8 0f00 	cmp.w	r8, #0
 8009a46:	d035      	beq.n	8009ab4 <EDIT_AddKey+0x1de>
 8009a48:	fa1f f885 	uxth.w	r8, r5
 8009a4c:	4640      	mov	r0, r8
 8009a4e:	f005 fcd3 	bl	800f3f8 <GUI_UC__CalcSizeOfChar>
 8009a52:	4681      	mov	r9, r0
 8009a54:	4649      	mov	r1, r9
 8009a56:	4620      	mov	r0, r4
 8009a58:	f7ff fe05 	bl	8009666 <_IsSpaceInBuffer>
 8009a5c:	b350      	cbz	r0, 8009ab4 <EDIT_AddKey+0x1de>
 8009a5e:	4620      	mov	r0, r4
 8009a60:	f007 fcae 	bl	80113c0 <GUI_ALLOC_LockH>
 8009a64:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8009a66:	9002      	str	r0, [sp, #8]
 8009a68:	4638      	mov	r0, r7
 8009a6a:	f007 fcb7 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009a6e:	4628      	mov	r0, r5
 8009a70:	f007 fca6 	bl	80113c0 <GUI_ALLOC_LockH>
 8009a74:	ad04      	add	r5, sp, #16
 8009a76:	4651      	mov	r1, sl
 8009a78:	4607      	mov	r7, r0
 8009a7a:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009a7e:	f005 fcd7 	bl	800f430 <GUI_UC__NumChars2NumBytes>
 8009a82:	4407      	add	r7, r0
 8009a84:	4638      	mov	r0, r7
 8009a86:	f7f6 fbc3 	bl	8000210 <strlen>
 8009a8a:	4639      	mov	r1, r7
 8009a8c:	1c42      	adds	r2, r0, #1
 8009a8e:	eb07 0009 	add.w	r0, r7, r9
 8009a92:	f00f f959 	bl	8018d48 <memmove>
 8009a96:	4641      	mov	r1, r8
 8009a98:	4638      	mov	r0, r7
 8009a9a:	f005 fca5 	bl	800f3e8 <GUI_UC_Encode>
 8009a9e:	4628      	mov	r0, r5
 8009aa0:	f007 fc9c 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009aa4:	4620      	mov	r0, r4
 8009aa6:	2105      	movs	r1, #5
 8009aa8:	f000 fe83 	bl	800a7b2 <WM_NotifyParent>
 8009aac:	4620      	mov	r0, r4
 8009aae:	1c71      	adds	r1, r6, #1
 8009ab0:	f7ff fe39 	bl	8009726 <EDIT__SetCursorPos>
 8009ab4:	4620      	mov	r0, r4
 8009ab6:	f001 fdd0 	bl	800b65a <WM_InvalidateWindow>
 8009aba:	b004      	add	sp, #16
 8009abc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08009ac0 <EDIT_Callback>:
 8009ac0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009ac2:	6844      	ldr	r4, [r0, #4]
 8009ac4:	4605      	mov	r5, r0
 8009ac6:	4620      	mov	r0, r4
 8009ac8:	f000 fb4a 	bl	800a160 <WM__IsEnabled>
 8009acc:	4629      	mov	r1, r5
 8009ace:	4606      	mov	r6, r0
 8009ad0:	4620      	mov	r0, r4
 8009ad2:	f7fe f83b 	bl	8007b4c <WIDGET_HandleActive>
 8009ad6:	2800      	cmp	r0, #0
 8009ad8:	d06b      	beq.n	8009bb2 <EDIT_Callback+0xf2>
 8009ada:	682b      	ldr	r3, [r5, #0]
 8009adc:	2b0f      	cmp	r3, #15
 8009ade:	d040      	beq.n	8009b62 <EDIT_Callback+0xa2>
 8009ae0:	dc04      	bgt.n	8009aec <EDIT_Callback+0x2c>
 8009ae2:	2b0b      	cmp	r3, #11
 8009ae4:	d042      	beq.n	8009b6c <EDIT_Callback+0xac>
 8009ae6:	2b0e      	cmp	r3, #14
 8009ae8:	d04d      	beq.n	8009b86 <EDIT_Callback+0xc6>
 8009aea:	e05f      	b.n	8009bac <EDIT_Callback+0xec>
 8009aec:	f240 1213 	movw	r2, #275	; 0x113
 8009af0:	4293      	cmp	r3, r2
 8009af2:	d003      	beq.n	8009afc <EDIT_Callback+0x3c>
 8009af4:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009af8:	d021      	beq.n	8009b3e <EDIT_Callback+0x7e>
 8009afa:	e057      	b.n	8009bac <EDIT_Callback+0xec>
 8009afc:	4620      	mov	r0, r4
 8009afe:	f001 fdcd 	bl	800b69c <WM_SelectWindow>
 8009b02:	4620      	mov	r0, r4
 8009b04:	f007 fc5c 	bl	80113c0 <GUI_ALLOC_LockH>
 8009b08:	ae02      	add	r6, sp, #8
 8009b0a:	f846 0d04 	str.w	r0, [r6, #-4]!
 8009b0e:	f890 3056 	ldrb.w	r3, [r0, #86]	; 0x56
 8009b12:	f083 0304 	eor.w	r3, r3, #4
 8009b16:	f880 3056 	strb.w	r3, [r0, #86]	; 0x56
 8009b1a:	4630      	mov	r0, r6
 8009b1c:	f007 fc5e 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009b20:	2100      	movs	r1, #0
 8009b22:	4620      	mov	r0, r4
 8009b24:	f7ff fc22 	bl	800936c <_Paint>
 8009b28:	4620      	mov	r0, r4
 8009b2a:	f007 fc49 	bl	80113c0 <GUI_ALLOC_LockH>
 8009b2e:	2100      	movs	r1, #0
 8009b30:	9001      	str	r0, [sp, #4]
 8009b32:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 8009b36:	f000 fbc5 	bl	800a2c4 <WM_RestartTimer>
 8009b3a:	4630      	mov	r0, r6
 8009b3c:	e020      	b.n	8009b80 <EDIT_Callback+0xc0>
 8009b3e:	68eb      	ldr	r3, [r5, #12]
 8009b40:	b153      	cbz	r3, 8009b58 <EDIT_Callback+0x98>
 8009b42:	7a1a      	ldrb	r2, [r3, #8]
 8009b44:	4620      	mov	r0, r4
 8009b46:	b12a      	cbz	r2, 8009b54 <EDIT_Callback+0x94>
 8009b48:	6819      	ldr	r1, [r3, #0]
 8009b4a:	f7ff fe6b 	bl	8009824 <EDIT_SetCursorAtPixel>
 8009b4e:	4620      	mov	r0, r4
 8009b50:	2101      	movs	r1, #1
 8009b52:	e003      	b.n	8009b5c <EDIT_Callback+0x9c>
 8009b54:	2102      	movs	r1, #2
 8009b56:	e001      	b.n	8009b5c <EDIT_Callback+0x9c>
 8009b58:	4620      	mov	r0, r4
 8009b5a:	2103      	movs	r1, #3
 8009b5c:	f000 fe29 	bl	800a7b2 <WM_NotifyParent>
 8009b60:	e024      	b.n	8009bac <EDIT_Callback+0xec>
 8009b62:	4620      	mov	r0, r4
 8009b64:	2101      	movs	r1, #1
 8009b66:	f7ff fc01 	bl	800936c <_Paint>
 8009b6a:	e022      	b.n	8009bb2 <EDIT_Callback+0xf2>
 8009b6c:	4620      	mov	r0, r4
 8009b6e:	f007 fc27 	bl	80113c0 <GUI_ALLOC_LockH>
 8009b72:	ac02      	add	r4, sp, #8
 8009b74:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009b78:	3034      	adds	r0, #52	; 0x34
 8009b7a:	f007 fe79 	bl	8011870 <GUI_ALLOC_FreePtr>
 8009b7e:	4620      	mov	r0, r4
 8009b80:	f007 fc2c 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009b84:	e012      	b.n	8009bac <EDIT_Callback+0xec>
 8009b86:	b18e      	cbz	r6, 8009bac <EDIT_Callback+0xec>
 8009b88:	68eb      	ldr	r3, [r5, #12]
 8009b8a:	685a      	ldr	r2, [r3, #4]
 8009b8c:	2a00      	cmp	r2, #0
 8009b8e:	dd0d      	ble.n	8009bac <EDIT_Callback+0xec>
 8009b90:	6819      	ldr	r1, [r3, #0]
 8009b92:	f1a1 0309 	sub.w	r3, r1, #9
 8009b96:	2b19      	cmp	r3, #25
 8009b98:	d804      	bhi.n	8009ba4 <EDIT_Callback+0xe4>
 8009b9a:	2201      	movs	r2, #1
 8009b9c:	409a      	lsls	r2, r3
 8009b9e:	4b06      	ldr	r3, [pc, #24]	; (8009bb8 <EDIT_Callback+0xf8>)
 8009ba0:	4013      	ands	r3, r2
 8009ba2:	b91b      	cbnz	r3, 8009bac <EDIT_Callback+0xec>
 8009ba4:	4620      	mov	r0, r4
 8009ba6:	f7ff fe96 	bl	80098d6 <EDIT_AddKey>
 8009baa:	e002      	b.n	8009bb2 <EDIT_Callback+0xf2>
 8009bac:	4628      	mov	r0, r5
 8009bae:	f002 f977 	bl	800bea0 <WM_DefaultProc>
 8009bb2:	b002      	add	sp, #8
 8009bb4:	bd70      	pop	{r4, r5, r6, pc}
 8009bb6:	bf00      	nop
 8009bb8:	03040013 	.word	0x03040013

08009bbc <EDIT_SetFont>:
 8009bbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009bbe:	460d      	mov	r5, r1
 8009bc0:	4606      	mov	r6, r0
 8009bc2:	b158      	cbz	r0, 8009bdc <EDIT_SetFont+0x20>
 8009bc4:	f007 fbfc 	bl	80113c0 <GUI_ALLOC_LockH>
 8009bc8:	ac02      	add	r4, sp, #8
 8009bca:	6685      	str	r5, [r0, #104]	; 0x68
 8009bcc:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009bd0:	4630      	mov	r0, r6
 8009bd2:	f001 fd42 	bl	800b65a <WM_InvalidateWindow>
 8009bd6:	4620      	mov	r0, r4
 8009bd8:	f007 fc00 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009bdc:	b002      	add	sp, #8
 8009bde:	bd70      	pop	{r4, r5, r6, pc}

08009be0 <EDIT_SetText>:
 8009be0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009be4:	460c      	mov	r4, r1
 8009be6:	4606      	mov	r6, r0
 8009be8:	2800      	cmp	r0, #0
 8009bea:	d063      	beq.n	8009cb4 <EDIT_SetText+0xd4>
 8009bec:	f007 fbe8 	bl	80113c0 <GUI_ALLOC_LockH>
 8009bf0:	ad02      	add	r5, sp, #8
 8009bf2:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8009bf4:	f845 0d08 	str.w	r0, [r5, #-8]!
 8009bf8:	f8b0 8038 	ldrh.w	r8, [r0, #56]	; 0x38
 8009bfc:	4668      	mov	r0, sp
 8009bfe:	f007 fbed 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009c02:	2c00      	cmp	r4, #0
 8009c04:	d046      	beq.n	8009c94 <EDIT_SetText+0xb4>
 8009c06:	b16f      	cbz	r7, 8009c24 <EDIT_SetText+0x44>
 8009c08:	4638      	mov	r0, r7
 8009c0a:	f007 fbd9 	bl	80113c0 <GUI_ALLOC_LockH>
 8009c0e:	af02      	add	r7, sp, #8
 8009c10:	f847 0d04 	str.w	r0, [r7, #-4]!
 8009c14:	f7f6 fafc 	bl	8000210 <strlen>
 8009c18:	f100 0901 	add.w	r9, r0, #1
 8009c1c:	4638      	mov	r0, r7
 8009c1e:	f007 fbdd 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009c22:	e000      	b.n	8009c26 <EDIT_SetText+0x46>
 8009c24:	46b9      	mov	r9, r7
 8009c26:	4620      	mov	r0, r4
 8009c28:	f005 f964 	bl	800eef4 <GUI__GetNumChars>
 8009c2c:	fa0f f788 	sxth.w	r7, r8
 8009c30:	42b8      	cmp	r0, r7
 8009c32:	bfb8      	it	lt
 8009c34:	4607      	movlt	r7, r0
 8009c36:	4639      	mov	r1, r7
 8009c38:	4620      	mov	r0, r4
 8009c3a:	f005 fbf9 	bl	800f430 <GUI_UC__NumChars2NumBytes>
 8009c3e:	f100 0801 	add.w	r8, r0, #1
 8009c42:	ebc9 0108 	rsb	r1, r9, r8
 8009c46:	4630      	mov	r0, r6
 8009c48:	f7ff fd0d 	bl	8009666 <_IsSpaceInBuffer>
 8009c4c:	2800      	cmp	r0, #0
 8009c4e:	d02e      	beq.n	8009cae <EDIT_SetText+0xce>
 8009c50:	4630      	mov	r0, r6
 8009c52:	f007 fbb5 	bl	80113c0 <GUI_ALLOC_LockH>
 8009c56:	9000      	str	r0, [sp, #0]
 8009c58:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8009c5a:	f007 fbb1 	bl	80113c0 <GUI_ALLOC_LockH>
 8009c5e:	4642      	mov	r2, r8
 8009c60:	4621      	mov	r1, r4
 8009c62:	9001      	str	r0, [sp, #4]
 8009c64:	f00f f865 	bl	8018d32 <memcpy>
 8009c68:	9b01      	ldr	r3, [sp, #4]
 8009c6a:	4443      	add	r3, r8
 8009c6c:	2200      	movs	r2, #0
 8009c6e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009c72:	9b00      	ldr	r3, [sp, #0]
 8009c74:	f9b3 2038 	ldrsh.w	r2, [r3, #56]	; 0x38
 8009c78:	64df      	str	r7, [r3, #76]	; 0x4c
 8009c7a:	4297      	cmp	r7, r2
 8009c7c:	d106      	bne.n	8009c8c <EDIT_SetText+0xac>
 8009c7e:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8009c82:	2a01      	cmp	r2, #1
 8009c84:	bf04      	itt	eq
 8009c86:	f107 37ff 	addeq.w	r7, r7, #4294967295
 8009c8a:	64df      	streq	r7, [r3, #76]	; 0x4c
 8009c8c:	a801      	add	r0, sp, #4
 8009c8e:	f007 fba5 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009c92:	e009      	b.n	8009ca8 <EDIT_SetText+0xc8>
 8009c94:	4630      	mov	r0, r6
 8009c96:	f007 fb93 	bl	80113c0 <GUI_ALLOC_LockH>
 8009c9a:	9000      	str	r0, [sp, #0]
 8009c9c:	3034      	adds	r0, #52	; 0x34
 8009c9e:	f007 fde7 	bl	8011870 <GUI_ALLOC_FreePtr>
 8009ca2:	9b00      	ldr	r3, [sp, #0]
 8009ca4:	875c      	strh	r4, [r3, #58]	; 0x3a
 8009ca6:	64dc      	str	r4, [r3, #76]	; 0x4c
 8009ca8:	4668      	mov	r0, sp
 8009caa:	f007 fb97 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009cae:	4630      	mov	r0, r6
 8009cb0:	f001 fcd3 	bl	800b65a <WM_InvalidateWindow>
 8009cb4:	b003      	add	sp, #12
 8009cb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009cba <EDIT_SetTextAlign>:
 8009cba:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009cbc:	460c      	mov	r4, r1
 8009cbe:	4605      	mov	r5, r0
 8009cc0:	b150      	cbz	r0, 8009cd8 <EDIT_SetTextAlign+0x1e>
 8009cc2:	f007 fb7d 	bl	80113c0 <GUI_ALLOC_LockH>
 8009cc6:	9001      	str	r0, [sp, #4]
 8009cc8:	b118      	cbz	r0, 8009cd2 <EDIT_SetTextAlign+0x18>
 8009cca:	6604      	str	r4, [r0, #96]	; 0x60
 8009ccc:	4628      	mov	r0, r5
 8009cce:	f001 fcc4 	bl	800b65a <WM_InvalidateWindow>
 8009cd2:	a801      	add	r0, sp, #4
 8009cd4:	f007 fb82 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009cd8:	b003      	add	sp, #12
 8009cda:	bd30      	pop	{r4, r5, pc}

08009cdc <GUI_CreateDialogBox>:
 8009cdc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009ce0:	4606      	mov	r6, r0
 8009ce2:	4688      	mov	r8, r1
 8009ce4:	4614      	mov	r4, r2
 8009ce6:	461d      	mov	r5, r3
 8009ce8:	b913      	cbnz	r3, 8009cf0 <GUI_CreateDialogBox+0x14>
 8009cea:	f000 ff29 	bl	800ab40 <WM_GetDesktopWindow>
 8009cee:	4605      	mov	r5, r0
 8009cf0:	9400      	str	r4, [sp, #0]
 8009cf2:	4630      	mov	r0, r6
 8009cf4:	6834      	ldr	r4, [r6, #0]
 8009cf6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009cf8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009cfa:	4629      	mov	r1, r5
 8009cfc:	47a0      	blx	r4
 8009cfe:	4604      	mov	r4, r0
 8009d00:	2800      	cmp	r0, #0
 8009d02:	d039      	beq.n	8009d78 <GUI_CreateDialogBox+0x9c>
 8009d04:	f000 ff28 	bl	800ab58 <WM_GetClientWindow>
 8009d08:	8a71      	ldrh	r1, [r6, #18]
 8009d0a:	4607      	mov	r7, r0
 8009d0c:	4620      	mov	r0, r4
 8009d0e:	f7fd feea 	bl	8007ae6 <WIDGET_OrState>
 8009d12:	4620      	mov	r0, r4
 8009d14:	f000 faff 	bl	800a316 <WM_ShowWindow>
 8009d18:	4638      	mov	r0, r7
 8009d1a:	f108 38ff 	add.w	r8, r8, #4294967295
 8009d1e:	f000 fafa 	bl	800a316 <WM_ShowWindow>
 8009d22:	f1b8 0f00 	cmp.w	r8, #0
 8009d26:	dd0f      	ble.n	8009d48 <GUI_CreateDialogBox+0x6c>
 8009d28:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 8009d2c:	2200      	movs	r2, #0
 8009d2e:	9200      	str	r2, [sp, #0]
 8009d30:	4630      	mov	r0, r6
 8009d32:	4639      	mov	r1, r7
 8009d34:	4613      	mov	r3, r2
 8009d36:	47e0      	blx	ip
 8009d38:	4681      	mov	r9, r0
 8009d3a:	2800      	cmp	r0, #0
 8009d3c:	d1ed      	bne.n	8009d1a <GUI_CreateDialogBox+0x3e>
 8009d3e:	4620      	mov	r0, r4
 8009d40:	f001 fd76 	bl	800b830 <WM_DeleteWindow>
 8009d44:	4648      	mov	r0, r9
 8009d46:	e018      	b.n	8009d7a <GUI_CreateDialogBox+0x9e>
 8009d48:	4638      	mov	r0, r7
 8009d4a:	211d      	movs	r1, #29
 8009d4c:	f000 fc46 	bl	800a5dc <WM_SendMessageNoPara>
 8009d50:	1c6b      	adds	r3, r5, #1
 8009d52:	d011      	beq.n	8009d78 <GUI_CreateDialogBox+0x9c>
 8009d54:	f000 feb6 	bl	800aac4 <WM_GetFocussedWindow>
 8009d58:	b150      	cbz	r0, 8009d70 <GUI_CreateDialogBox+0x94>
 8009d5a:	f007 fb27 	bl	80113ac <GUI_ALLOC_h2p>
 8009d5e:	6980      	ldr	r0, [r0, #24]
 8009d60:	42a0      	cmp	r0, r4
 8009d62:	d00a      	beq.n	8009d7a <GUI_CreateDialogBox+0x9e>
 8009d64:	2800      	cmp	r0, #0
 8009d66:	d1f8      	bne.n	8009d5a <GUI_CreateDialogBox+0x7e>
 8009d68:	4620      	mov	r0, r4
 8009d6a:	f000 fb81 	bl	800a470 <WM_SetFocusOnNextChild>
 8009d6e:	e003      	b.n	8009d78 <GUI_CreateDialogBox+0x9c>
 8009d70:	42a5      	cmp	r5, r4
 8009d72:	d1f9      	bne.n	8009d68 <GUI_CreateDialogBox+0x8c>
 8009d74:	4628      	mov	r0, r5
 8009d76:	e000      	b.n	8009d7a <GUI_CreateDialogBox+0x9e>
 8009d78:	4620      	mov	r0, r4
 8009d7a:	b003      	add	sp, #12
 8009d7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009d80 <BUTTON_IsPressed>:
 8009d80:	b513      	push	{r0, r1, r4, lr}
 8009d82:	4604      	mov	r4, r0
 8009d84:	b150      	cbz	r0, 8009d9c <BUTTON_IsPressed+0x1c>
 8009d86:	f007 fb1b 	bl	80113c0 <GUI_ALLOC_LockH>
 8009d8a:	ab02      	add	r3, sp, #8
 8009d8c:	8e44      	ldrh	r4, [r0, #50]	; 0x32
 8009d8e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009d92:	4618      	mov	r0, r3
 8009d94:	f3c4 2400 	ubfx	r4, r4, #8, #1
 8009d98:	f007 fb20 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009d9c:	4620      	mov	r0, r4
 8009d9e:	b002      	add	sp, #8
 8009da0:	bd10      	pop	{r4, pc}

08009da2 <BUTTON_CreateIndirect>:
 8009da2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009da4:	b087      	sub	sp, #28
 8009da6:	4604      	mov	r4, r0
 8009da8:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8009dac:	9100      	str	r1, [sp, #0]
 8009dae:	2100      	movs	r1, #0
 8009db0:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 8009db4:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 8009db8:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 8009dbc:	9101      	str	r1, [sp, #4]
 8009dbe:	8a61      	ldrh	r1, [r4, #18]
 8009dc0:	69a5      	ldr	r5, [r4, #24]
 8009dc2:	9102      	str	r1, [sp, #8]
 8009dc4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8009dc8:	9103      	str	r1, [sp, #12]
 8009dca:	9504      	str	r5, [sp, #16]
 8009dcc:	eb0e 0103 	add.w	r1, lr, r3
 8009dd0:	4410      	add	r0, r2
 8009dd2:	4633      	mov	r3, r6
 8009dd4:	463a      	mov	r2, r7
 8009dd6:	f000 f8cd 	bl	8009f74 <BUTTON_CreateUser>
 8009dda:	6861      	ldr	r1, [r4, #4]
 8009ddc:	4605      	mov	r5, r0
 8009dde:	f000 f901 	bl	8009fe4 <BUTTON_SetText>
 8009de2:	4628      	mov	r0, r5
 8009de4:	b007      	add	sp, #28
 8009de6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009de8 <_OnButtonPressed>:
 8009de8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009dea:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009dee:	4604      	mov	r4, r0
 8009df0:	f7fd fe79 	bl	8007ae6 <WIDGET_OrState>
 8009df4:	4620      	mov	r0, r4
 8009df6:	f007 fae3 	bl	80113c0 <GUI_ALLOC_LockH>
 8009dfa:	ab02      	add	r3, sp, #8
 8009dfc:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8009dfe:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009e02:	4618      	mov	r0, r3
 8009e04:	f007 faea 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009e08:	07ab      	lsls	r3, r5, #30
 8009e0a:	d503      	bpl.n	8009e14 <_OnButtonPressed+0x2c>
 8009e0c:	4620      	mov	r0, r4
 8009e0e:	2101      	movs	r1, #1
 8009e10:	f000 fccf 	bl	800a7b2 <WM_NotifyParent>
 8009e14:	b003      	add	sp, #12
 8009e16:	bd30      	pop	{r4, r5, pc}

08009e18 <_OnButtonReleased>:
 8009e18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009e1a:	4605      	mov	r5, r0
 8009e1c:	460c      	mov	r4, r1
 8009e1e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009e22:	f7fd fe76 	bl	8007b12 <WIDGET_AndState>
 8009e26:	4628      	mov	r0, r5
 8009e28:	f007 faca 	bl	80113c0 <GUI_ALLOC_LockH>
 8009e2c:	4602      	mov	r2, r0
 8009e2e:	a802      	add	r0, sp, #8
 8009e30:	6a96      	ldr	r6, [r2, #40]	; 0x28
 8009e32:	f840 2d04 	str.w	r2, [r0, #-4]!
 8009e36:	8e17      	ldrh	r7, [r2, #48]	; 0x30
 8009e38:	f007 fad0 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009e3c:	2c02      	cmp	r4, #2
 8009e3e:	d102      	bne.n	8009e46 <_OnButtonReleased+0x2e>
 8009e40:	4638      	mov	r0, r7
 8009e42:	f006 fa0b 	bl	801025c <GUI_StoreKey>
 8009e46:	07b3      	lsls	r3, r6, #30
 8009e48:	d503      	bpl.n	8009e52 <_OnButtonReleased+0x3a>
 8009e4a:	4628      	mov	r0, r5
 8009e4c:	4621      	mov	r1, r4
 8009e4e:	f000 fcb0 	bl	800a7b2 <WM_NotifyParent>
 8009e52:	b003      	add	sp, #12
 8009e54:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009e56 <_OnTouchDefault>:
 8009e56:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009e58:	460d      	mov	r5, r1
 8009e5a:	4604      	mov	r4, r0
 8009e5c:	f007 fab0 	bl	80113c0 <GUI_ALLOC_LockH>
 8009e60:	ab02      	add	r3, sp, #8
 8009e62:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8009e64:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009e68:	4618      	mov	r0, r3
 8009e6a:	f007 fab7 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009e6e:	68ea      	ldr	r2, [r5, #12]
 8009e70:	b162      	cbz	r2, 8009e8c <_OnTouchDefault+0x36>
 8009e72:	7a12      	ldrb	r2, [r2, #8]
 8009e74:	f406 7380 	and.w	r3, r6, #256	; 0x100
 8009e78:	b122      	cbz	r2, 8009e84 <_OnTouchDefault+0x2e>
 8009e7a:	b95b      	cbnz	r3, 8009e94 <_OnTouchDefault+0x3e>
 8009e7c:	4620      	mov	r0, r4
 8009e7e:	f7ff ffb3 	bl	8009de8 <_OnButtonPressed>
 8009e82:	e007      	b.n	8009e94 <_OnTouchDefault+0x3e>
 8009e84:	b133      	cbz	r3, 8009e94 <_OnTouchDefault+0x3e>
 8009e86:	4620      	mov	r0, r4
 8009e88:	2102      	movs	r1, #2
 8009e8a:	e001      	b.n	8009e90 <_OnTouchDefault+0x3a>
 8009e8c:	4620      	mov	r0, r4
 8009e8e:	2103      	movs	r1, #3
 8009e90:	f7ff ffc2 	bl	8009e18 <_OnButtonReleased>
 8009e94:	b002      	add	sp, #8
 8009e96:	bd70      	pop	{r4, r5, r6, pc}

08009e98 <BUTTON_Callback>:
 8009e98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009e9a:	6844      	ldr	r4, [r0, #4]
 8009e9c:	4605      	mov	r5, r0
 8009e9e:	4629      	mov	r1, r5
 8009ea0:	4620      	mov	r0, r4
 8009ea2:	f7fd fe53 	bl	8007b4c <WIDGET_HandleActive>
 8009ea6:	2800      	cmp	r0, #0
 8009ea8:	d05d      	beq.n	8009f66 <BUTTON_Callback+0xce>
 8009eaa:	682b      	ldr	r3, [r5, #0]
 8009eac:	2b0f      	cmp	r3, #15
 8009eae:	d016      	beq.n	8009ede <BUTTON_Callback+0x46>
 8009eb0:	dc04      	bgt.n	8009ebc <BUTTON_Callback+0x24>
 8009eb2:	2b0b      	cmp	r3, #11
 8009eb4:	d023      	beq.n	8009efe <BUTTON_Callback+0x66>
 8009eb6:	2b0e      	cmp	r3, #14
 8009eb8:	d033      	beq.n	8009f22 <BUTTON_Callback+0x8a>
 8009eba:	e051      	b.n	8009f60 <BUTTON_Callback+0xc8>
 8009ebc:	2b28      	cmp	r3, #40	; 0x28
 8009ebe:	d048      	beq.n	8009f52 <BUTTON_Callback+0xba>
 8009ec0:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009ec4:	d005      	beq.n	8009ed2 <BUTTON_Callback+0x3a>
 8009ec6:	2b11      	cmp	r3, #17
 8009ec8:	d14a      	bne.n	8009f60 <BUTTON_Callback+0xc8>
 8009eca:	4b28      	ldr	r3, [pc, #160]	; (8009f6c <BUTTON_Callback+0xd4>)
 8009ecc:	681b      	ldr	r3, [r3, #0]
 8009ece:	b913      	cbnz	r3, 8009ed6 <BUTTON_Callback+0x3e>
 8009ed0:	e049      	b.n	8009f66 <BUTTON_Callback+0xce>
 8009ed2:	4b27      	ldr	r3, [pc, #156]	; (8009f70 <BUTTON_Callback+0xd8>)
 8009ed4:	681b      	ldr	r3, [r3, #0]
 8009ed6:	4620      	mov	r0, r4
 8009ed8:	4629      	mov	r1, r5
 8009eda:	4798      	blx	r3
 8009edc:	e043      	b.n	8009f66 <BUTTON_Callback+0xce>
 8009ede:	4620      	mov	r0, r4
 8009ee0:	f007 fa6e 	bl	80113c0 <GUI_ALLOC_LockH>
 8009ee4:	ab02      	add	r3, sp, #8
 8009ee6:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009eea:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8009eec:	6815      	ldr	r5, [r2, #0]
 8009eee:	4618      	mov	r0, r3
 8009ef0:	f007 fa74 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009ef4:	2d00      	cmp	r5, #0
 8009ef6:	d036      	beq.n	8009f66 <BUTTON_Callback+0xce>
 8009ef8:	4620      	mov	r0, r4
 8009efa:	47a8      	blx	r5
 8009efc:	e033      	b.n	8009f66 <BUTTON_Callback+0xce>
 8009efe:	4620      	mov	r0, r4
 8009f00:	f007 fa5e 	bl	80113c0 <GUI_ALLOC_LockH>
 8009f04:	ac02      	add	r4, sp, #8
 8009f06:	9001      	str	r0, [sp, #4]
 8009f08:	3068      	adds	r0, #104	; 0x68
 8009f0a:	f007 fcb1 	bl	8011870 <GUI_ALLOC_FreePtr>
 8009f0e:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 8009f12:	2103      	movs	r1, #3
 8009f14:	306c      	adds	r0, #108	; 0x6c
 8009f16:	f007 fcb3 	bl	8011880 <GUI_ALLOC_FreePtrArray>
 8009f1a:	4620      	mov	r0, r4
 8009f1c:	f007 fa5e 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009f20:	e01e      	b.n	8009f60 <BUTTON_Callback+0xc8>
 8009f22:	68ea      	ldr	r2, [r5, #12]
 8009f24:	ca0c      	ldmia	r2, {r2, r3}
 8009f26:	2a0d      	cmp	r2, #13
 8009f28:	d002      	beq.n	8009f30 <BUTTON_Callback+0x98>
 8009f2a:	2a20      	cmp	r2, #32
 8009f2c:	d007      	beq.n	8009f3e <BUTTON_Callback+0xa6>
 8009f2e:	e010      	b.n	8009f52 <BUTTON_Callback+0xba>
 8009f30:	2b00      	cmp	r3, #0
 8009f32:	dd0e      	ble.n	8009f52 <BUTTON_Callback+0xba>
 8009f34:	4620      	mov	r0, r4
 8009f36:	f7ff ff57 	bl	8009de8 <_OnButtonPressed>
 8009f3a:	4620      	mov	r0, r4
 8009f3c:	e005      	b.n	8009f4a <BUTTON_Callback+0xb2>
 8009f3e:	2b00      	cmp	r3, #0
 8009f40:	4620      	mov	r0, r4
 8009f42:	dd02      	ble.n	8009f4a <BUTTON_Callback+0xb2>
 8009f44:	f7ff ff50 	bl	8009de8 <_OnButtonPressed>
 8009f48:	e00d      	b.n	8009f66 <BUTTON_Callback+0xce>
 8009f4a:	2102      	movs	r1, #2
 8009f4c:	f7ff ff64 	bl	8009e18 <_OnButtonReleased>
 8009f50:	e009      	b.n	8009f66 <BUTTON_Callback+0xce>
 8009f52:	68eb      	ldr	r3, [r5, #12]
 8009f54:	b923      	cbnz	r3, 8009f60 <BUTTON_Callback+0xc8>
 8009f56:	4620      	mov	r0, r4
 8009f58:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009f5c:	f7fd fdd9 	bl	8007b12 <WIDGET_AndState>
 8009f60:	4628      	mov	r0, r5
 8009f62:	f001 ff9d 	bl	800bea0 <WM_DefaultProc>
 8009f66:	b003      	add	sp, #12
 8009f68:	bd30      	pop	{r4, r5, pc}
 8009f6a:	bf00      	nop
 8009f6c:	2001943c 	.word	0x2001943c
 8009f70:	200000fc 	.word	0x200000fc

08009f74 <BUTTON_CreateUser>:
 8009f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f76:	b087      	sub	sp, #28
 8009f78:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8009f7a:	9400      	str	r4, [sp, #0]
 8009f7c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8009f7e:	9401      	str	r4, [sp, #4]
 8009f80:	4c15      	ldr	r4, [pc, #84]	; (8009fd8 <BUTTON_CreateUser+0x64>)
 8009f82:	9402      	str	r4, [sp, #8]
 8009f84:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8009f86:	344c      	adds	r4, #76	; 0x4c
 8009f88:	9403      	str	r4, [sp, #12]
 8009f8a:	f001 fba7 	bl	800b6dc <WM_CreateWindowAsChild>
 8009f8e:	4607      	mov	r7, r0
 8009f90:	b1f8      	cbz	r0, 8009fd2 <BUTTON_CreateUser+0x5e>
 8009f92:	f007 fa15 	bl	80113c0 <GUI_ALLOC_LockH>
 8009f96:	4d11      	ldr	r5, [pc, #68]	; (8009fdc <BUTTON_CreateUser+0x68>)
 8009f98:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8009f9a:	9005      	str	r0, [sp, #20]
 8009f9c:	2210      	movs	r2, #16
 8009f9e:	f7fd fdcd 	bl	8007b3c <WIDGET__Init>
 8009fa2:	ae06      	add	r6, sp, #24
 8009fa4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009fa6:	f856 ed04 	ldr.w	lr, [r6, #-4]!
 8009faa:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 8009fae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009fb0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009fb2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009fb4:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8009fb8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009fbc:	4c08      	ldr	r4, [pc, #32]	; (8009fe0 <BUTTON_CreateUser+0x6c>)
 8009fbe:	6823      	ldr	r3, [r4, #0]
 8009fc0:	f8ce 3064 	str.w	r3, [lr, #100]	; 0x64
 8009fc4:	4630      	mov	r0, r6
 8009fc6:	f007 fa09 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009fca:	6823      	ldr	r3, [r4, #0]
 8009fcc:	4638      	mov	r0, r7
 8009fce:	685b      	ldr	r3, [r3, #4]
 8009fd0:	4798      	blx	r3
 8009fd2:	4638      	mov	r0, r7
 8009fd4:	b007      	add	sp, #28
 8009fd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009fd8:	08009e99 	.word	0x08009e99
 8009fdc:	20000100 	.word	0x20000100
 8009fe0:	20000130 	.word	0x20000130

08009fe4 <BUTTON_SetText>:
 8009fe4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009fe6:	460c      	mov	r4, r1
 8009fe8:	4605      	mov	r5, r0
 8009fea:	b300      	cbz	r0, 800a02e <BUTTON_SetText+0x4a>
 8009fec:	f007 f9e8 	bl	80113c0 <GUI_ALLOC_LockH>
 8009ff0:	6e86      	ldr	r6, [r0, #104]	; 0x68
 8009ff2:	9000      	str	r0, [sp, #0]
 8009ff4:	4668      	mov	r0, sp
 8009ff6:	9601      	str	r6, [sp, #4]
 8009ff8:	f007 f9f0 	bl	80113dc <GUI_ALLOC_UnlockH>
 8009ffc:	4621      	mov	r1, r4
 8009ffe:	a801      	add	r0, sp, #4
 800a000:	f004 fe62 	bl	800ecc8 <GUI__SetText>
 800a004:	f1d0 0401 	rsbs	r4, r0, #1
 800a008:	bf38      	it	cc
 800a00a:	2400      	movcc	r4, #0
 800a00c:	b984      	cbnz	r4, 800a030 <BUTTON_SetText+0x4c>
 800a00e:	9b01      	ldr	r3, [sp, #4]
 800a010:	42b3      	cmp	r3, r6
 800a012:	d008      	beq.n	800a026 <BUTTON_SetText+0x42>
 800a014:	4628      	mov	r0, r5
 800a016:	f007 f9d3 	bl	80113c0 <GUI_ALLOC_LockH>
 800a01a:	9b01      	ldr	r3, [sp, #4]
 800a01c:	9000      	str	r0, [sp, #0]
 800a01e:	6683      	str	r3, [r0, #104]	; 0x68
 800a020:	4668      	mov	r0, sp
 800a022:	f007 f9db 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a026:	4628      	mov	r0, r5
 800a028:	f001 fb17 	bl	800b65a <WM_InvalidateWindow>
 800a02c:	e000      	b.n	800a030 <BUTTON_SetText+0x4c>
 800a02e:	2401      	movs	r4, #1
 800a030:	4620      	mov	r0, r4
 800a032:	b002      	add	sp, #8
 800a034:	bd70      	pop	{r4, r5, r6, pc}

0800a036 <BUTTON_SetFont>:
 800a036:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a038:	460c      	mov	r4, r1
 800a03a:	4605      	mov	r5, r0
 800a03c:	b158      	cbz	r0, 800a056 <BUTTON_SetFont+0x20>
 800a03e:	f007 f9bf 	bl	80113c0 <GUI_ALLOC_LockH>
 800a042:	4602      	mov	r2, r0
 800a044:	a802      	add	r0, sp, #8
 800a046:	6554      	str	r4, [r2, #84]	; 0x54
 800a048:	f840 2d04 	str.w	r2, [r0, #-4]!
 800a04c:	f007 f9c6 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a050:	4628      	mov	r0, r5
 800a052:	f001 fb02 	bl	800b65a <WM_InvalidateWindow>
 800a056:	b003      	add	sp, #12
 800a058:	bd30      	pop	{r4, r5, pc}

0800a05a <WM__UpdateChildPositions>:
 800a05a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a05e:	b087      	sub	sp, #28
 800a060:	69c4      	ldr	r4, [r0, #28]
 800a062:	9303      	str	r3, [sp, #12]
 800a064:	468a      	mov	sl, r1
 800a066:	4693      	mov	fp, r2
 800a068:	2c00      	cmp	r4, #0
 800a06a:	d06d      	beq.n	800a148 <WM__UpdateChildPositions+0xee>
 800a06c:	4620      	mov	r0, r4
 800a06e:	f007 f9a7 	bl	80113c0 <GUI_ALLOC_LockH>
 800a072:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800a074:	9005      	str	r0, [sp, #20]
 800a076:	f401 7320 	and.w	r3, r1, #640	; 0x280
 800a07a:	2b80      	cmp	r3, #128	; 0x80
 800a07c:	f8b0 8000 	ldrh.w	r8, [r0]
 800a080:	8842      	ldrh	r2, [r0, #2]
 800a082:	8886      	ldrh	r6, [r0, #4]
 800a084:	88c5      	ldrh	r5, [r0, #6]
 800a086:	d008      	beq.n	800a09a <WM__UpdateChildPositions+0x40>
 800a088:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 800a08c:	d108      	bne.n	800a0a0 <WM__UpdateChildPositions+0x46>
 800a08e:	eb08 090a 	add.w	r9, r8, sl
 800a092:	fa1f f989 	uxth.w	r9, r9
 800a096:	9b03      	ldr	r3, [sp, #12]
 800a098:	e008      	b.n	800a0ac <WM__UpdateChildPositions+0x52>
 800a09a:	9803      	ldr	r0, [sp, #12]
 800a09c:	b283      	uxth	r3, r0
 800a09e:	e001      	b.n	800a0a4 <WM__UpdateChildPositions+0x4a>
 800a0a0:	fa1f f38a 	uxth.w	r3, sl
 800a0a4:	eb03 0908 	add.w	r9, r3, r8
 800a0a8:	fa1f f989 	uxth.w	r9, r9
 800a0ac:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 800a0b0:	4433      	add	r3, r6
 800a0b2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800a0b6:	b29b      	uxth	r3, r3
 800a0b8:	d008      	beq.n	800a0cc <WM__UpdateChildPositions+0x72>
 800a0ba:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 800a0be:	d108      	bne.n	800a0d2 <WM__UpdateChildPositions+0x78>
 800a0c0:	eb02 0c0b 	add.w	ip, r2, fp
 800a0c4:	fa1f fc8c 	uxth.w	ip, ip
 800a0c8:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800a0ca:	e008      	b.n	800a0de <WM__UpdateChildPositions+0x84>
 800a0cc:	9910      	ldr	r1, [sp, #64]	; 0x40
 800a0ce:	b28f      	uxth	r7, r1
 800a0d0:	e001      	b.n	800a0d6 <WM__UpdateChildPositions+0x7c>
 800a0d2:	fa1f f78b 	uxth.w	r7, fp
 800a0d6:	eb07 0c02 	add.w	ip, r7, r2
 800a0da:	fa1f fc8c 	uxth.w	ip, ip
 800a0de:	fa0f f989 	sxth.w	r9, r9
 800a0e2:	fa0f f888 	sxth.w	r8, r8
 800a0e6:	b212      	sxth	r2, r2
 800a0e8:	442f      	add	r7, r5
 800a0ea:	fa0f fc8c 	sxth.w	ip, ip
 800a0ee:	ebb9 0108 	subs.w	r1, r9, r8
 800a0f2:	9202      	str	r2, [sp, #8]
 800a0f4:	b2bf      	uxth	r7, r7
 800a0f6:	ebc2 020c 	rsb	r2, r2, ip
 800a0fa:	d100      	bne.n	800a0fe <WM__UpdateChildPositions+0xa4>
 800a0fc:	b142      	cbz	r2, 800a110 <WM__UpdateChildPositions+0xb6>
 800a0fe:	4620      	mov	r0, r4
 800a100:	9301      	str	r3, [sp, #4]
 800a102:	f8cd c000 	str.w	ip, [sp]
 800a106:	f000 fc2e 	bl	800a966 <WM_MoveWindow>
 800a10a:	f8dd c000 	ldr.w	ip, [sp]
 800a10e:	9b01      	ldr	r3, [sp, #4]
 800a110:	b21b      	sxth	r3, r3
 800a112:	ebc9 0903 	rsb	r9, r9, r3
 800a116:	b236      	sxth	r6, r6
 800a118:	9b02      	ldr	r3, [sp, #8]
 800a11a:	ebc6 0808 	rsb	r8, r6, r8
 800a11e:	b23f      	sxth	r7, r7
 800a120:	b22d      	sxth	r5, r5
 800a122:	ebcc 0c07 	rsb	ip, ip, r7
 800a126:	1b5d      	subs	r5, r3, r5
 800a128:	eb19 0108 	adds.w	r1, r9, r8
 800a12c:	eb0c 0205 	add.w	r2, ip, r5
 800a130:	d100      	bne.n	800a134 <WM__UpdateChildPositions+0xda>
 800a132:	b112      	cbz	r2, 800a13a <WM__UpdateChildPositions+0xe0>
 800a134:	4620      	mov	r0, r4
 800a136:	f000 fac1 	bl	800a6bc <WM_ResizeWindow>
 800a13a:	a806      	add	r0, sp, #24
 800a13c:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800a140:	6a1c      	ldr	r4, [r3, #32]
 800a142:	f007 f94b 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a146:	e78f      	b.n	800a068 <WM__UpdateChildPositions+0xe>
 800a148:	b007      	add	sp, #28
 800a14a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a14e <WM__Screen2Client>:
 800a14e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800a152:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800a156:	4608      	mov	r0, r1
 800a158:	4252      	negs	r2, r2
 800a15a:	4259      	negs	r1, r3
 800a15c:	f006 b8a2 	b.w	80102a4 <GUI_MoveRect>

0800a160 <WM__IsEnabled>:
 800a160:	b508      	push	{r3, lr}
 800a162:	f007 f923 	bl	80113ac <GUI_ALLOC_h2p>
 800a166:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800a168:	f080 0010 	eor.w	r0, r0, #16
 800a16c:	f3c0 1000 	ubfx	r0, r0, #4, #1
 800a170:	bd08      	pop	{r3, pc}

0800a172 <WM__IsChild>:
 800a172:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a174:	460d      	mov	r5, r1
 800a176:	4604      	mov	r4, r0
 800a178:	b160      	cbz	r0, 800a194 <WM__IsChild+0x22>
 800a17a:	f007 f921 	bl	80113c0 <GUI_ALLOC_LockH>
 800a17e:	9001      	str	r0, [sp, #4]
 800a180:	b120      	cbz	r0, 800a18c <WM__IsChild+0x1a>
 800a182:	6984      	ldr	r4, [r0, #24]
 800a184:	1b63      	subs	r3, r4, r5
 800a186:	425c      	negs	r4, r3
 800a188:	415c      	adcs	r4, r3
 800a18a:	e000      	b.n	800a18e <WM__IsChild+0x1c>
 800a18c:	4604      	mov	r4, r0
 800a18e:	a801      	add	r0, sp, #4
 800a190:	f007 f924 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a194:	4620      	mov	r0, r4
 800a196:	b003      	add	sp, #12
 800a198:	bd30      	pop	{r4, r5, pc}

0800a19a <WM__IsAncestor>:
 800a19a:	b510      	push	{r4, lr}
 800a19c:	460c      	mov	r4, r1
 800a19e:	b908      	cbnz	r0, 800a1a4 <WM__IsAncestor+0xa>
 800a1a0:	2000      	movs	r0, #0
 800a1a2:	bd10      	pop	{r4, pc}
 800a1a4:	2900      	cmp	r1, #0
 800a1a6:	d0fb      	beq.n	800a1a0 <WM__IsAncestor+0x6>
 800a1a8:	f007 f900 	bl	80113ac <GUI_ALLOC_h2p>
 800a1ac:	6980      	ldr	r0, [r0, #24]
 800a1ae:	42a0      	cmp	r0, r4
 800a1b0:	d002      	beq.n	800a1b8 <WM__IsAncestor+0x1e>
 800a1b2:	2800      	cmp	r0, #0
 800a1b4:	d1f8      	bne.n	800a1a8 <WM__IsAncestor+0xe>
 800a1b6:	e7f3      	b.n	800a1a0 <WM__IsAncestor+0x6>
 800a1b8:	2001      	movs	r0, #1
 800a1ba:	bd10      	pop	{r4, pc}

0800a1bc <WM__IsAncestorOrSelf>:
 800a1bc:	4288      	cmp	r0, r1
 800a1be:	d001      	beq.n	800a1c4 <WM__IsAncestorOrSelf+0x8>
 800a1c0:	f7ff bfeb 	b.w	800a19a <WM__IsAncestor>
 800a1c4:	2001      	movs	r0, #1
 800a1c6:	4770      	bx	lr

0800a1c8 <_cbTimer>:
 800a1c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a1ca:	4604      	mov	r4, r0
 800a1cc:	2100      	movs	r1, #0
 800a1ce:	4668      	mov	r0, sp
 800a1d0:	2210      	movs	r2, #16
 800a1d2:	f00e fdd2 	bl	8018d7a <memset>
 800a1d6:	6860      	ldr	r0, [r4, #4]
 800a1d8:	b150      	cbz	r0, 800a1f0 <_cbTimer+0x28>
 800a1da:	f007 f8e7 	bl	80113ac <GUI_ALLOC_h2p>
 800a1de:	f240 1313 	movw	r3, #275	; 0x113
 800a1e2:	6840      	ldr	r0, [r0, #4]
 800a1e4:	9300      	str	r3, [sp, #0]
 800a1e6:	4669      	mov	r1, sp
 800a1e8:	6863      	ldr	r3, [r4, #4]
 800a1ea:	9303      	str	r3, [sp, #12]
 800a1ec:	f001 f9de 	bl	800b5ac <WM_SendMessage>
 800a1f0:	b004      	add	sp, #16
 800a1f2:	bd10      	pop	{r4, pc}

0800a1f4 <WM_DeleteTimer>:
 800a1f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a1f6:	4605      	mov	r5, r0
 800a1f8:	b168      	cbz	r0, 800a216 <WM_DeleteTimer+0x22>
 800a1fa:	f007 f8e1 	bl	80113c0 <GUI_ALLOC_LockH>
 800a1fe:	ac02      	add	r4, sp, #8
 800a200:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a204:	6800      	ldr	r0, [r0, #0]
 800a206:	f005 fa75 	bl	800f6f4 <GUI_TIMER_Delete>
 800a20a:	4620      	mov	r0, r4
 800a20c:	f007 f8e6 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a210:	4628      	mov	r0, r5
 800a212:	f007 f90f 	bl	8011434 <GUI_ALLOC_Free>
 800a216:	b003      	add	sp, #12
 800a218:	bd30      	pop	{r4, r5, pc}

0800a21a <WM__DeleteAssocTimer>:
 800a21a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a21c:	4605      	mov	r5, r0
 800a21e:	a801      	add	r0, sp, #4
 800a220:	f005 f9e6 	bl	800f5f0 <GUI_TIMER__GetFirstTimer>
 800a224:	4604      	mov	r4, r0
 800a226:	b1dc      	cbz	r4, 800a260 <WM__DeleteAssocTimer+0x46>
 800a228:	4620      	mov	r0, r4
 800a22a:	2101      	movs	r1, #1
 800a22c:	f005 fabd 	bl	800f7aa <GUI_TIMER_GetFlag>
 800a230:	9b01      	ldr	r3, [sp, #4]
 800a232:	b183      	cbz	r3, 800a256 <WM__DeleteAssocTimer+0x3c>
 800a234:	b178      	cbz	r0, 800a256 <WM__DeleteAssocTimer+0x3c>
 800a236:	4618      	mov	r0, r3
 800a238:	f007 f8b8 	bl	80113ac <GUI_ALLOC_h2p>
 800a23c:	6843      	ldr	r3, [r0, #4]
 800a23e:	42ab      	cmp	r3, r5
 800a240:	d109      	bne.n	800a256 <WM__DeleteAssocTimer+0x3c>
 800a242:	4620      	mov	r0, r4
 800a244:	a901      	add	r1, sp, #4
 800a246:	9e01      	ldr	r6, [sp, #4]
 800a248:	f005 f9ea 	bl	800f620 <GUI_TIMER__GetNextTimerLin>
 800a24c:	4604      	mov	r4, r0
 800a24e:	4630      	mov	r0, r6
 800a250:	f7ff ffd0 	bl	800a1f4 <WM_DeleteTimer>
 800a254:	e7e7      	b.n	800a226 <WM__DeleteAssocTimer+0xc>
 800a256:	4620      	mov	r0, r4
 800a258:	a901      	add	r1, sp, #4
 800a25a:	f005 f9e1 	bl	800f620 <GUI_TIMER__GetNextTimerLin>
 800a25e:	e7e1      	b.n	800a224 <WM__DeleteAssocTimer+0xa>
 800a260:	b002      	add	sp, #8
 800a262:	bd70      	pop	{r4, r5, r6, pc}

0800a264 <WM_CreateTimer>:
 800a264:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a268:	4680      	mov	r8, r0
 800a26a:	200c      	movs	r0, #12
 800a26c:	460f      	mov	r7, r1
 800a26e:	4616      	mov	r6, r2
 800a270:	f007 fb13 	bl	801189a <GUI_ALLOC_AllocZero>
 800a274:	4604      	mov	r4, r0
 800a276:	b1f0      	cbz	r0, 800a2b6 <WM_CreateTimer+0x52>
 800a278:	f005 faac 	bl	800f7d4 <GUI_GetTime>
 800a27c:	4622      	mov	r2, r4
 800a27e:	1981      	adds	r1, r0, r6
 800a280:	2301      	movs	r3, #1
 800a282:	480f      	ldr	r0, [pc, #60]	; (800a2c0 <WM_CreateTimer+0x5c>)
 800a284:	f005 f9e8 	bl	800f658 <GUI_TIMER_Create>
 800a288:	4605      	mov	r5, r0
 800a28a:	4620      	mov	r0, r4
 800a28c:	b185      	cbz	r5, 800a2b0 <WM_CreateTimer+0x4c>
 800a28e:	f007 f897 	bl	80113c0 <GUI_ALLOC_LockH>
 800a292:	4603      	mov	r3, r0
 800a294:	a802      	add	r0, sp, #8
 800a296:	f8c3 8004 	str.w	r8, [r3, #4]
 800a29a:	f840 3d04 	str.w	r3, [r0, #-4]!
 800a29e:	609f      	str	r7, [r3, #8]
 800a2a0:	601d      	str	r5, [r3, #0]
 800a2a2:	f007 f89b 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a2a6:	4628      	mov	r0, r5
 800a2a8:	4631      	mov	r1, r6
 800a2aa:	f005 fa57 	bl	800f75c <GUI_TIMER_SetPeriod>
 800a2ae:	e002      	b.n	800a2b6 <WM_CreateTimer+0x52>
 800a2b0:	f007 f8c0 	bl	8011434 <GUI_ALLOC_Free>
 800a2b4:	462c      	mov	r4, r5
 800a2b6:	4620      	mov	r0, r4
 800a2b8:	b002      	add	sp, #8
 800a2ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a2be:	bf00      	nop
 800a2c0:	0800a1c9 	.word	0x0800a1c9

0800a2c4 <WM_RestartTimer>:
 800a2c4:	b513      	push	{r0, r1, r4, lr}
 800a2c6:	460c      	mov	r4, r1
 800a2c8:	b180      	cbz	r0, 800a2ec <WM_RestartTimer+0x28>
 800a2ca:	f007 f879 	bl	80113c0 <GUI_ALLOC_LockH>
 800a2ce:	9001      	str	r0, [sp, #4]
 800a2d0:	b11c      	cbz	r4, 800a2da <WM_RestartTimer+0x16>
 800a2d2:	6800      	ldr	r0, [r0, #0]
 800a2d4:	4621      	mov	r1, r4
 800a2d6:	f005 fa41 	bl	800f75c <GUI_TIMER_SetPeriod>
 800a2da:	ac02      	add	r4, sp, #8
 800a2dc:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 800a2e0:	6818      	ldr	r0, [r3, #0]
 800a2e2:	f005 fa49 	bl	800f778 <GUI_TIMER_Restart>
 800a2e6:	4620      	mov	r0, r4
 800a2e8:	f007 f878 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a2ec:	b002      	add	sp, #8
 800a2ee:	bd10      	pop	{r4, pc}

0800a2f0 <WM_InvalidateWindowAndDescs>:
 800a2f0:	b510      	push	{r4, lr}
 800a2f2:	4604      	mov	r4, r0
 800a2f4:	b170      	cbz	r0, 800a314 <WM_InvalidateWindowAndDescs+0x24>
 800a2f6:	f001 f9b0 	bl	800b65a <WM_InvalidateWindow>
 800a2fa:	4620      	mov	r0, r4
 800a2fc:	f000 fbec 	bl	800aad8 <WM_GetFirstChild>
 800a300:	4604      	mov	r4, r0
 800a302:	b13c      	cbz	r4, 800a314 <WM_InvalidateWindowAndDescs+0x24>
 800a304:	4620      	mov	r0, r4
 800a306:	f7ff fff3 	bl	800a2f0 <WM_InvalidateWindowAndDescs>
 800a30a:	4620      	mov	r0, r4
 800a30c:	f007 f84e 	bl	80113ac <GUI_ALLOC_h2p>
 800a310:	6a04      	ldr	r4, [r0, #32]
 800a312:	e7f6      	b.n	800a302 <WM_InvalidateWindowAndDescs+0x12>
 800a314:	bd10      	pop	{r4, pc}

0800a316 <WM_ShowWindow>:
 800a316:	b513      	push	{r0, r1, r4, lr}
 800a318:	4604      	mov	r4, r0
 800a31a:	b170      	cbz	r0, 800a33a <WM_ShowWindow+0x24>
 800a31c:	f007 f850 	bl	80113c0 <GUI_ALLOC_LockH>
 800a320:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800a322:	9001      	str	r0, [sp, #4]
 800a324:	0793      	lsls	r3, r2, #30
 800a326:	d405      	bmi.n	800a334 <WM_ShowWindow+0x1e>
 800a328:	f042 0202 	orr.w	r2, r2, #2
 800a32c:	6282      	str	r2, [r0, #40]	; 0x28
 800a32e:	4620      	mov	r0, r4
 800a330:	f7ff ffde 	bl	800a2f0 <WM_InvalidateWindowAndDescs>
 800a334:	a801      	add	r0, sp, #4
 800a336:	f007 f851 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a33a:	b002      	add	sp, #8
 800a33c:	bd10      	pop	{r4, pc}
	...

0800a340 <WM_SetUserClipRect>:
 800a340:	4b04      	ldr	r3, [pc, #16]	; (800a354 <WM_SetUserClipRect+0x14>)
 800a342:	b510      	push	{r4, lr}
 800a344:	681b      	ldr	r3, [r3, #0]
 800a346:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 800a348:	6458      	str	r0, [r3, #68]	; 0x44
 800a34a:	f000 ffdf 	bl	800b30c <WM__ActivateClipRect>
 800a34e:	4620      	mov	r0, r4
 800a350:	bd10      	pop	{r4, pc}
 800a352:	bf00      	nop
 800a354:	2000016c 	.word	0x2000016c

0800a358 <WM_SetHasTrans>:
 800a358:	b513      	push	{r0, r1, r4, lr}
 800a35a:	4604      	mov	r4, r0
 800a35c:	b1b8      	cbz	r0, 800a38e <WM_SetHasTrans+0x36>
 800a35e:	f007 f82f 	bl	80113c0 <GUI_ALLOC_LockH>
 800a362:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a364:	9001      	str	r0, [sp, #4]
 800a366:	07db      	lsls	r3, r3, #31
 800a368:	d40e      	bmi.n	800a388 <WM_SetHasTrans+0x30>
 800a36a:	4620      	mov	r0, r4
 800a36c:	f009 fad0 	bl	8013910 <WM_ValidateWindow>
 800a370:	9b01      	ldr	r3, [sp, #4]
 800a372:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800a374:	f042 0201 	orr.w	r2, r2, #1
 800a378:	629a      	str	r2, [r3, #40]	; 0x28
 800a37a:	4b06      	ldr	r3, [pc, #24]	; (800a394 <WM_SetHasTrans+0x3c>)
 800a37c:	681a      	ldr	r2, [r3, #0]
 800a37e:	4620      	mov	r0, r4
 800a380:	3201      	adds	r2, #1
 800a382:	601a      	str	r2, [r3, #0]
 800a384:	f001 f969 	bl	800b65a <WM_InvalidateWindow>
 800a388:	a801      	add	r0, sp, #4
 800a38a:	f007 f827 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a38e:	b002      	add	sp, #8
 800a390:	bd10      	pop	{r4, pc}
 800a392:	bf00      	nop
 800a394:	2001999c 	.word	0x2001999c

0800a398 <WM_GetHasTrans>:
 800a398:	b508      	push	{r3, lr}
 800a39a:	b128      	cbz	r0, 800a3a8 <WM_GetHasTrans+0x10>
 800a39c:	f007 f806 	bl	80113ac <GUI_ALLOC_h2p>
 800a3a0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800a3a2:	f000 0001 	and.w	r0, r0, #1
 800a3a6:	bd08      	pop	{r3, pc}
 800a3a8:	bd08      	pop	{r3, pc}

0800a3aa <WM_SetSize>:
 800a3aa:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 800a3ae:	460e      	mov	r6, r1
 800a3b0:	4690      	mov	r8, r2
 800a3b2:	4607      	mov	r7, r0
 800a3b4:	b1d0      	cbz	r0, 800a3ec <WM_SetSize+0x42>
 800a3b6:	f007 f803 	bl	80113c0 <GUI_ALLOC_LockH>
 800a3ba:	4603      	mov	r3, r0
 800a3bc:	a802      	add	r0, sp, #8
 800a3be:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800a3c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a3c6:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 800a3ca:	f840 3d04 	str.w	r3, [r0, #-4]!
 800a3ce:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800a3d2:	1a8a      	subs	r2, r1, r2
 800a3d4:	1aed      	subs	r5, r5, r3
 800a3d6:	43d2      	mvns	r2, r2
 800a3d8:	43ed      	mvns	r5, r5
 800a3da:	4416      	add	r6, r2
 800a3dc:	4445      	add	r5, r8
 800a3de:	f006 fffd 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a3e2:	4638      	mov	r0, r7
 800a3e4:	4631      	mov	r1, r6
 800a3e6:	462a      	mov	r2, r5
 800a3e8:	f000 f968 	bl	800a6bc <WM_ResizeWindow>
 800a3ec:	b003      	add	sp, #12
 800a3ee:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

0800a3f2 <_GetPrevChild>:
 800a3f2:	b510      	push	{r4, lr}
 800a3f4:	4604      	mov	r4, r0
 800a3f6:	b918      	cbnz	r0, 800a400 <_GetPrevChild+0xe>
 800a3f8:	4620      	mov	r0, r4
 800a3fa:	f009 fa60 	bl	80138be <WM__GetLastSibling>
 800a3fe:	e003      	b.n	800a408 <_GetPrevChild+0x16>
 800a400:	f009 fa4a 	bl	8013898 <WM__GetPrevSibling>
 800a404:	2800      	cmp	r0, #0
 800a406:	d0f7      	beq.n	800a3f8 <_GetPrevChild+0x6>
 800a408:	42a0      	cmp	r0, r4
 800a40a:	bf08      	it	eq
 800a40c:	2000      	moveq	r0, #0
 800a40e:	bd10      	pop	{r4, pc}

0800a410 <WM_SetFocusOnPrevChild>:
 800a410:	b538      	push	{r3, r4, r5, lr}
 800a412:	4604      	mov	r4, r0
 800a414:	b1b0      	cbz	r0, 800a444 <WM_SetFocusOnPrevChild+0x34>
 800a416:	f009 fa5f 	bl	80138d8 <WM__GetFocussedChild>
 800a41a:	f7ff ffea 	bl	800a3f2 <_GetPrevChild>
 800a41e:	4605      	mov	r5, r0
 800a420:	4604      	mov	r4, r0
 800a422:	4620      	mov	r0, r4
 800a424:	f000 fabf 	bl	800a9a6 <WM_IsFocussable>
 800a428:	b930      	cbnz	r0, 800a438 <WM_SetFocusOnPrevChild+0x28>
 800a42a:	b12c      	cbz	r4, 800a438 <WM_SetFocusOnPrevChild+0x28>
 800a42c:	4620      	mov	r0, r4
 800a42e:	f7ff ffe0 	bl	800a3f2 <_GetPrevChild>
 800a432:	42a8      	cmp	r0, r5
 800a434:	4604      	mov	r4, r0
 800a436:	d1f4      	bne.n	800a422 <WM_SetFocusOnPrevChild+0x12>
 800a438:	4620      	mov	r0, r4
 800a43a:	f000 f84b 	bl	800a4d4 <WM_SetFocus>
 800a43e:	2800      	cmp	r0, #0
 800a440:	bf18      	it	ne
 800a442:	2400      	movne	r4, #0
 800a444:	4620      	mov	r0, r4
 800a446:	bd38      	pop	{r3, r4, r5, pc}

0800a448 <_GetNextChild>:
 800a448:	b538      	push	{r3, r4, r5, lr}
 800a44a:	4605      	mov	r5, r0
 800a44c:	460c      	mov	r4, r1
 800a44e:	b921      	cbnz	r1, 800a45a <_GetNextChild+0x12>
 800a450:	4628      	mov	r0, r5
 800a452:	f006 ffab 	bl	80113ac <GUI_ALLOC_h2p>
 800a456:	69c0      	ldr	r0, [r0, #28]
 800a458:	e005      	b.n	800a466 <_GetNextChild+0x1e>
 800a45a:	4608      	mov	r0, r1
 800a45c:	f006 ffa6 	bl	80113ac <GUI_ALLOC_h2p>
 800a460:	6a00      	ldr	r0, [r0, #32]
 800a462:	2800      	cmp	r0, #0
 800a464:	d0f4      	beq.n	800a450 <_GetNextChild+0x8>
 800a466:	42a0      	cmp	r0, r4
 800a468:	bf08      	it	eq
 800a46a:	2000      	moveq	r0, #0
 800a46c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800a470 <WM_SetFocusOnNextChild>:
 800a470:	b570      	push	{r4, r5, r6, lr}
 800a472:	4605      	mov	r5, r0
 800a474:	b340      	cbz	r0, 800a4c8 <WM_SetFocusOnNextChild+0x58>
 800a476:	f009 fa2f 	bl	80138d8 <WM__GetFocussedChild>
 800a47a:	4601      	mov	r1, r0
 800a47c:	4628      	mov	r0, r5
 800a47e:	f7ff ffe3 	bl	800a448 <_GetNextChild>
 800a482:	4606      	mov	r6, r0
 800a484:	4604      	mov	r4, r0
 800a486:	4620      	mov	r0, r4
 800a488:	f000 fa8d 	bl	800a9a6 <WM_IsFocussable>
 800a48c:	b938      	cbnz	r0, 800a49e <WM_SetFocusOnNextChild+0x2e>
 800a48e:	b13c      	cbz	r4, 800a4a0 <WM_SetFocusOnNextChild+0x30>
 800a490:	4621      	mov	r1, r4
 800a492:	4628      	mov	r0, r5
 800a494:	f7ff ffd8 	bl	800a448 <_GetNextChild>
 800a498:	42b0      	cmp	r0, r6
 800a49a:	4604      	mov	r4, r0
 800a49c:	d1f3      	bne.n	800a486 <WM_SetFocusOnNextChild+0x16>
 800a49e:	b90c      	cbnz	r4, 800a4a4 <WM_SetFocusOnNextChild+0x34>
 800a4a0:	2400      	movs	r4, #0
 800a4a2:	e012      	b.n	800a4ca <WM_SetFocusOnNextChild+0x5a>
 800a4a4:	4d0a      	ldr	r5, [pc, #40]	; (800a4d0 <WM_SetFocusOnNextChild+0x60>)
 800a4a6:	4620      	mov	r0, r4
 800a4a8:	682e      	ldr	r6, [r5, #0]
 800a4aa:	f001 f8d9 	bl	800b660 <WM__GetTopLevelLayer>
 800a4ae:	3001      	adds	r0, #1
 800a4b0:	d00b      	beq.n	800a4ca <WM_SetFocusOnNextChild+0x5a>
 800a4b2:	4620      	mov	r0, r4
 800a4b4:	f001 f8d4 	bl	800b660 <WM__GetTopLevelLayer>
 800a4b8:	6028      	str	r0, [r5, #0]
 800a4ba:	4620      	mov	r0, r4
 800a4bc:	f000 f80a 	bl	800a4d4 <WM_SetFocus>
 800a4c0:	602e      	str	r6, [r5, #0]
 800a4c2:	2800      	cmp	r0, #0
 800a4c4:	d1ec      	bne.n	800a4a0 <WM_SetFocusOnNextChild+0x30>
 800a4c6:	e000      	b.n	800a4ca <WM_SetFocusOnNextChild+0x5a>
 800a4c8:	4604      	mov	r4, r0
 800a4ca:	4620      	mov	r0, r4
 800a4cc:	bd70      	pop	{r4, r5, r6, pc}
 800a4ce:	bf00      	nop
 800a4d0:	20019974 	.word	0x20019974

0800a4d4 <WM_SetFocus>:
 800a4d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a4d6:	b087      	sub	sp, #28
 800a4d8:	4604      	mov	r4, r0
 800a4da:	2100      	movs	r1, #0
 800a4dc:	a802      	add	r0, sp, #8
 800a4de:	2210      	movs	r2, #16
 800a4e0:	f00e fc4b 	bl	8018d7a <memset>
 800a4e4:	2c00      	cmp	r4, #0
 800a4e6:	d03a      	beq.n	800a55e <WM_SetFocus+0x8a>
 800a4e8:	4b1f      	ldr	r3, [pc, #124]	; (800a568 <WM_SetFocus+0x94>)
 800a4ea:	4a20      	ldr	r2, [pc, #128]	; (800a56c <WM_SetFocus+0x98>)
 800a4ec:	6819      	ldr	r1, [r3, #0]
 800a4ee:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800a4f2:	4284      	cmp	r4, r0
 800a4f4:	4616      	mov	r6, r2
 800a4f6:	461f      	mov	r7, r3
 800a4f8:	d031      	beq.n	800a55e <WM_SetFocus+0x8a>
 800a4fa:	231e      	movs	r3, #30
 800a4fc:	e88d 0011 	stmia.w	sp, {r0, r4}
 800a500:	9302      	str	r3, [sp, #8]
 800a502:	b110      	cbz	r0, 800a50a <WM_SetFocus+0x36>
 800a504:	a902      	add	r1, sp, #8
 800a506:	f009 f9a9 	bl	801385c <WM__SendMessage>
 800a50a:	2301      	movs	r3, #1
 800a50c:	4620      	mov	r0, r4
 800a50e:	a902      	add	r1, sp, #8
 800a510:	9305      	str	r3, [sp, #20]
 800a512:	f009 f9a3 	bl	801385c <WM__SendMessage>
 800a516:	9d05      	ldr	r5, [sp, #20]
 800a518:	bb15      	cbnz	r5, 800a560 <WM_SetFocus+0x8c>
 800a51a:	683b      	ldr	r3, [r7, #0]
 800a51c:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 800a520:	4620      	mov	r0, r4
 800a522:	f000 faa7 	bl	800aa74 <WM_GetParent>
 800a526:	4604      	mov	r4, r0
 800a528:	b138      	cbz	r0, 800a53a <WM_SetFocus+0x66>
 800a52a:	2320      	movs	r3, #32
 800a52c:	9302      	str	r3, [sp, #8]
 800a52e:	a902      	add	r1, sp, #8
 800a530:	ab00      	add	r3, sp, #0
 800a532:	9305      	str	r3, [sp, #20]
 800a534:	f009 f992 	bl	801385c <WM__SendMessage>
 800a538:	e7f2      	b.n	800a520 <WM_SetFocus+0x4c>
 800a53a:	9c00      	ldr	r4, [sp, #0]
 800a53c:	4620      	mov	r0, r4
 800a53e:	f000 fa27 	bl	800a990 <WM_IsWindow>
 800a542:	b168      	cbz	r0, 800a560 <WM_SetFocus+0x8c>
 800a544:	4620      	mov	r0, r4
 800a546:	f000 fa95 	bl	800aa74 <WM_GetParent>
 800a54a:	4604      	mov	r4, r0
 800a54c:	b140      	cbz	r0, 800a560 <WM_SetFocus+0x8c>
 800a54e:	2320      	movs	r3, #32
 800a550:	9302      	str	r3, [sp, #8]
 800a552:	a902      	add	r1, sp, #8
 800a554:	ab00      	add	r3, sp, #0
 800a556:	9305      	str	r3, [sp, #20]
 800a558:	f009 f980 	bl	801385c <WM__SendMessage>
 800a55c:	e7f2      	b.n	800a544 <WM_SetFocus+0x70>
 800a55e:	2501      	movs	r5, #1
 800a560:	4628      	mov	r0, r5
 800a562:	b007      	add	sp, #28
 800a564:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a566:	bf00      	nop
 800a568:	20019974 	.word	0x20019974
 800a56c:	20019964 	.word	0x20019964

0800a570 <WM__ReleaseCapture>:
 800a570:	b530      	push	{r4, r5, lr}
 800a572:	4d0a      	ldr	r5, [pc, #40]	; (800a59c <WM__ReleaseCapture+0x2c>)
 800a574:	4c0a      	ldr	r4, [pc, #40]	; (800a5a0 <WM__ReleaseCapture+0x30>)
 800a576:	682b      	ldr	r3, [r5, #0]
 800a578:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800a57c:	b085      	sub	sp, #20
 800a57e:	b150      	cbz	r0, 800a596 <WM__ReleaseCapture+0x26>
 800a580:	a904      	add	r1, sp, #16
 800a582:	2318      	movs	r3, #24
 800a584:	f841 3d10 	str.w	r3, [r1, #-16]!
 800a588:	4669      	mov	r1, sp
 800a58a:	f009 f967 	bl	801385c <WM__SendMessage>
 800a58e:	682b      	ldr	r3, [r5, #0]
 800a590:	2200      	movs	r2, #0
 800a592:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 800a596:	b005      	add	sp, #20
 800a598:	bd30      	pop	{r4, r5, pc}
 800a59a:	bf00      	nop
 800a59c:	20019974 	.word	0x20019974
 800a5a0:	20019990 	.word	0x20019990

0800a5a4 <WM_SetCapture>:
 800a5a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a5a6:	4b09      	ldr	r3, [pc, #36]	; (800a5cc <WM_SetCapture+0x28>)
 800a5a8:	4a09      	ldr	r2, [pc, #36]	; (800a5d0 <WM_SetCapture+0x2c>)
 800a5aa:	4604      	mov	r4, r0
 800a5ac:	6818      	ldr	r0, [r3, #0]
 800a5ae:	460f      	mov	r7, r1
 800a5b0:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 800a5b4:	42a1      	cmp	r1, r4
 800a5b6:	4615      	mov	r5, r2
 800a5b8:	461e      	mov	r6, r3
 800a5ba:	d001      	beq.n	800a5c0 <WM_SetCapture+0x1c>
 800a5bc:	f7ff ffd8 	bl	800a570 <WM__ReleaseCapture>
 800a5c0:	6833      	ldr	r3, [r6, #0]
 800a5c2:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 800a5c6:	4b03      	ldr	r3, [pc, #12]	; (800a5d4 <WM_SetCapture+0x30>)
 800a5c8:	701f      	strb	r7, [r3, #0]
 800a5ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a5cc:	20019974 	.word	0x20019974
 800a5d0:	20019990 	.word	0x20019990
 800a5d4:	20019978 	.word	0x20019978

0800a5d8 <WM_ReleaseCapture>:
 800a5d8:	f7ff bfca 	b.w	800a570 <WM__ReleaseCapture>

0800a5dc <WM_SendMessageNoPara>:
 800a5dc:	f009 b92a 	b.w	8013834 <WM__SendMessageNoPara>

0800a5e0 <WM__IsInWindow>:
 800a5e0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a5e2:	f013 0302 	ands.w	r3, r3, #2
 800a5e6:	d012      	beq.n	800a60e <WM__IsInWindow+0x2e>
 800a5e8:	f9b0 3000 	ldrsh.w	r3, [r0]
 800a5ec:	4299      	cmp	r1, r3
 800a5ee:	db10      	blt.n	800a612 <WM__IsInWindow+0x32>
 800a5f0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a5f4:	4299      	cmp	r1, r3
 800a5f6:	dc0c      	bgt.n	800a612 <WM__IsInWindow+0x32>
 800a5f8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800a5fc:	429a      	cmp	r2, r3
 800a5fe:	db08      	blt.n	800a612 <WM__IsInWindow+0x32>
 800a600:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a604:	4282      	cmp	r2, r0
 800a606:	bfcc      	ite	gt
 800a608:	2000      	movgt	r0, #0
 800a60a:	2001      	movle	r0, #1
 800a60c:	4770      	bx	lr
 800a60e:	4618      	mov	r0, r3
 800a610:	4770      	bx	lr
 800a612:	2000      	movs	r0, #0
 800a614:	4770      	bx	lr

0800a616 <_Screen2hWin>:
 800a616:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a61a:	460e      	mov	r6, r1
 800a61c:	4617      	mov	r7, r2
 800a61e:	4698      	mov	r8, r3
 800a620:	4605      	mov	r5, r0
 800a622:	b320      	cbz	r0, 800a66e <_Screen2hWin+0x58>
 800a624:	f006 fecc 	bl	80113c0 <GUI_ALLOC_LockH>
 800a628:	4639      	mov	r1, r7
 800a62a:	4642      	mov	r2, r8
 800a62c:	4604      	mov	r4, r0
 800a62e:	9001      	str	r0, [sp, #4]
 800a630:	f7ff ffd6 	bl	800a5e0 <WM__IsInWindow>
 800a634:	4681      	mov	r9, r0
 800a636:	b920      	cbnz	r0, 800a642 <_Screen2hWin+0x2c>
 800a638:	a801      	add	r0, sp, #4
 800a63a:	f006 fecf 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a63e:	4648      	mov	r0, r9
 800a640:	e016      	b.n	800a670 <_Screen2hWin+0x5a>
 800a642:	69e4      	ldr	r4, [r4, #28]
 800a644:	b91c      	cbnz	r4, 800a64e <_Screen2hWin+0x38>
 800a646:	a801      	add	r0, sp, #4
 800a648:	f006 fec8 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a64c:	e00f      	b.n	800a66e <_Screen2hWin+0x58>
 800a64e:	42b4      	cmp	r4, r6
 800a650:	d0f9      	beq.n	800a646 <_Screen2hWin+0x30>
 800a652:	4620      	mov	r0, r4
 800a654:	4631      	mov	r1, r6
 800a656:	463a      	mov	r2, r7
 800a658:	4643      	mov	r3, r8
 800a65a:	f7ff ffdc 	bl	800a616 <_Screen2hWin>
 800a65e:	2800      	cmp	r0, #0
 800a660:	bf18      	it	ne
 800a662:	4605      	movne	r5, r0
 800a664:	4620      	mov	r0, r4
 800a666:	f006 fea1 	bl	80113ac <GUI_ALLOC_h2p>
 800a66a:	6a04      	ldr	r4, [r0, #32]
 800a66c:	e7ea      	b.n	800a644 <_Screen2hWin+0x2e>
 800a66e:	4628      	mov	r0, r5
 800a670:	b003      	add	sp, #12
 800a672:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a678 <WM_Screen2hWin>:
 800a678:	b570      	push	{r4, r5, r6, lr}
 800a67a:	4b06      	ldr	r3, [pc, #24]	; (800a694 <WM_Screen2hWin+0x1c>)
 800a67c:	460c      	mov	r4, r1
 800a67e:	4605      	mov	r5, r0
 800a680:	6818      	ldr	r0, [r3, #0]
 800a682:	f000 fa53 	bl	800ab2c <WM_GetDesktopWindowEx>
 800a686:	462a      	mov	r2, r5
 800a688:	4623      	mov	r3, r4
 800a68a:	2100      	movs	r1, #0
 800a68c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a690:	f7ff bfc1 	b.w	800a616 <_Screen2hWin>
 800a694:	20019974 	.word	0x20019974

0800a698 <WM_Screen2hWinEx>:
 800a698:	b570      	push	{r4, r5, r6, lr}
 800a69a:	4b07      	ldr	r3, [pc, #28]	; (800a6b8 <WM_Screen2hWinEx+0x20>)
 800a69c:	460d      	mov	r5, r1
 800a69e:	4614      	mov	r4, r2
 800a6a0:	4606      	mov	r6, r0
 800a6a2:	6818      	ldr	r0, [r3, #0]
 800a6a4:	f000 fa42 	bl	800ab2c <WM_GetDesktopWindowEx>
 800a6a8:	4631      	mov	r1, r6
 800a6aa:	462a      	mov	r2, r5
 800a6ac:	4623      	mov	r3, r4
 800a6ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6b2:	f7ff bfb0 	b.w	800a616 <_Screen2hWin>
 800a6b6:	bf00      	nop
 800a6b8:	20019974 	.word	0x20019974

0800a6bc <WM_ResizeWindow>:
 800a6bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6c0:	ea51 0302 	orrs.w	r3, r1, r2
 800a6c4:	b08a      	sub	sp, #40	; 0x28
 800a6c6:	4680      	mov	r8, r0
 800a6c8:	460e      	mov	r6, r1
 800a6ca:	4617      	mov	r7, r2
 800a6cc:	d06e      	beq.n	800a7ac <WM_ResizeWindow+0xf0>
 800a6ce:	2800      	cmp	r0, #0
 800a6d0:	d06c      	beq.n	800a7ac <WM_ResizeWindow+0xf0>
 800a6d2:	f006 fe75 	bl	80113c0 <GUI_ALLOC_LockH>
 800a6d6:	4603      	mov	r3, r0
 800a6d8:	9003      	str	r0, [sp, #12]
 800a6da:	c803      	ldmia	r0, {r0, r1}
 800a6dc:	ad04      	add	r5, sp, #16
 800a6de:	ac06      	add	r4, sp, #24
 800a6e0:	e885 0003 	stmia.w	r5, {r0, r1}
 800a6e4:	e884 0003 	stmia.w	r4, {r0, r1}
 800a6e8:	b17e      	cbz	r6, 800a70a <WM_ResizeWindow+0x4e>
 800a6ea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800a6ec:	f402 7220 	and.w	r2, r2, #640	; 0x280
 800a6f0:	2a80      	cmp	r2, #128	; 0x80
 800a6f2:	d105      	bne.n	800a700 <WM_ResizeWindow+0x44>
 800a6f4:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800a6f8:	1b96      	subs	r6, r2, r6
 800a6fa:	f8ad 6018 	strh.w	r6, [sp, #24]
 800a6fe:	e004      	b.n	800a70a <WM_ResizeWindow+0x4e>
 800a700:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800a704:	4416      	add	r6, r2
 800a706:	f8ad 601c 	strh.w	r6, [sp, #28]
 800a70a:	b187      	cbz	r7, 800a72e <WM_ResizeWindow+0x72>
 800a70c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800a70e:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 800a712:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 800a716:	d105      	bne.n	800a724 <WM_ResizeWindow+0x68>
 800a718:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800a71c:	1bd7      	subs	r7, r2, r7
 800a71e:	f8ad 701a 	strh.w	r7, [sp, #26]
 800a722:	e004      	b.n	800a72e <WM_ResizeWindow+0x72>
 800a724:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800a728:	4417      	add	r7, r2
 800a72a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a72e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a730:	03da      	lsls	r2, r3, #15
 800a732:	d502      	bpl.n	800a73a <WM_ResizeWindow+0x7e>
 800a734:	4640      	mov	r0, r8
 800a736:	f000 fe1d 	bl	800b374 <WM__InvalidateDrawAndDescs>
 800a73a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800a73e:	9b03      	ldr	r3, [sp, #12]
 800a740:	e883 0003 	stmia.w	r3, {r0, r1}
 800a744:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a746:	079b      	lsls	r3, r3, #30
 800a748:	d50a      	bpl.n	800a760 <WM_ResizeWindow+0xa4>
 800a74a:	a808      	add	r0, sp, #32
 800a74c:	4629      	mov	r1, r5
 800a74e:	4622      	mov	r2, r4
 800a750:	f005 fdb8 	bl	80102c4 <GUI_MergeRect>
 800a754:	9b03      	ldr	r3, [sp, #12]
 800a756:	a808      	add	r0, sp, #32
 800a758:	6999      	ldr	r1, [r3, #24]
 800a75a:	6a1a      	ldr	r2, [r3, #32]
 800a75c:	f000 ff0e 	bl	800b57c <WM__InvalidateRectEx>
 800a760:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 800a764:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800a768:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 800a76c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 800a770:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 800a774:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800a778:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 800a77c:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800a780:	1ae3      	subs	r3, r4, r3
 800a782:	1a38      	subs	r0, r7, r0
 800a784:	ac0a      	add	r4, sp, #40	; 0x28
 800a786:	1aaa      	subs	r2, r5, r2
 800a788:	9000      	str	r0, [sp, #0]
 800a78a:	1a71      	subs	r1, r6, r1
 800a78c:	9803      	ldr	r0, [sp, #12]
 800a78e:	f7ff fc64 	bl	800a05a <WM__UpdateChildPositions>
 800a792:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 800a796:	f101 0008 	add.w	r0, r1, #8
 800a79a:	f004 fb8d 	bl	800eeb8 <GUI__IntersectRect>
 800a79e:	4640      	mov	r0, r8
 800a7a0:	2105      	movs	r1, #5
 800a7a2:	f000 ff07 	bl	800b5b4 <WM__SendMsgNoData>
 800a7a6:	4620      	mov	r0, r4
 800a7a8:	f006 fe18 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a7ac:	b00a      	add	sp, #40	; 0x28
 800a7ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a7b2 <WM_NotifyParent>:
 800a7b2:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a7b4:	2326      	movs	r3, #38	; 0x26
 800a7b6:	9103      	str	r1, [sp, #12]
 800a7b8:	4669      	mov	r1, sp
 800a7ba:	9300      	str	r3, [sp, #0]
 800a7bc:	f009 faec 	bl	8013d98 <WM_SendToParent>
 800a7c0:	b005      	add	sp, #20
 800a7c2:	f85d fb04 	ldr.w	pc, [sp], #4

0800a7c6 <WM_MoveChildTo>:
 800a7c6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a7c8:	460f      	mov	r7, r1
 800a7ca:	4616      	mov	r6, r2
 800a7cc:	4605      	mov	r5, r0
 800a7ce:	b320      	cbz	r0, 800a81a <WM_MoveChildTo+0x54>
 800a7d0:	f000 f950 	bl	800aa74 <WM_GetParent>
 800a7d4:	b308      	cbz	r0, 800a81a <WM_MoveChildTo+0x54>
 800a7d6:	f006 fdf3 	bl	80113c0 <GUI_ALLOC_LockH>
 800a7da:	9000      	str	r0, [sp, #0]
 800a7dc:	4628      	mov	r0, r5
 800a7de:	f006 fdef 	bl	80113c0 <GUI_ALLOC_LockH>
 800a7e2:	ab02      	add	r3, sp, #8
 800a7e4:	4604      	mov	r4, r0
 800a7e6:	9001      	str	r0, [sp, #4]
 800a7e8:	f853 0d08 	ldr.w	r0, [r3, #-8]!
 800a7ec:	f9b4 2000 	ldrsh.w	r2, [r4]
 800a7f0:	f9b0 1000 	ldrsh.w	r1, [r0]
 800a7f4:	1a8a      	subs	r2, r1, r2
 800a7f6:	4417      	add	r7, r2
 800a7f8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800a7fc:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800a800:	4668      	mov	r0, sp
 800a802:	1a8a      	subs	r2, r1, r2
 800a804:	4416      	add	r6, r2
 800a806:	f006 fde9 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a80a:	a801      	add	r0, sp, #4
 800a80c:	f006 fde6 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a810:	4628      	mov	r0, r5
 800a812:	4639      	mov	r1, r7
 800a814:	4632      	mov	r2, r6
 800a816:	f000 f838 	bl	800a88a <WM__MoveWindow>
 800a81a:	b003      	add	sp, #12
 800a81c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a81e <_MoveDescendents>:
 800a81e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a822:	b088      	sub	sp, #32
 800a824:	4606      	mov	r6, r0
 800a826:	460c      	mov	r4, r1
 800a828:	4615      	mov	r5, r2
 800a82a:	a804      	add	r0, sp, #16
 800a82c:	2100      	movs	r1, #0
 800a82e:	2210      	movs	r2, #16
 800a830:	f00e faa3 	bl	8018d7a <memset>
 800a834:	b336      	cbz	r6, 800a884 <_MoveDescendents+0x66>
 800a836:	4630      	mov	r0, r6
 800a838:	f006 fdc2 	bl	80113c0 <GUI_ALLOC_LockH>
 800a83c:	4621      	mov	r1, r4
 800a83e:	462a      	mov	r2, r5
 800a840:	9001      	str	r0, [sp, #4]
 800a842:	f005 fd2f 	bl	80102a4 <GUI_MoveRect>
 800a846:	9801      	ldr	r0, [sp, #4]
 800a848:	4621      	mov	r1, r4
 800a84a:	3008      	adds	r0, #8
 800a84c:	462a      	mov	r2, r5
 800a84e:	f005 fd29 	bl	80102a4 <GUI_MoveRect>
 800a852:	a808      	add	r0, sp, #32
 800a854:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 800a858:	f8d2 801c 	ldr.w	r8, [r2, #28]
 800a85c:	6a17      	ldr	r7, [r2, #32]
 800a85e:	f006 fdbd 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a862:	4640      	mov	r0, r8
 800a864:	4621      	mov	r1, r4
 800a866:	462a      	mov	r2, r5
 800a868:	f7ff ffd9 	bl	800a81e <_MoveDescendents>
 800a86c:	2303      	movs	r3, #3
 800a86e:	9304      	str	r3, [sp, #16]
 800a870:	4630      	mov	r0, r6
 800a872:	ab02      	add	r3, sp, #8
 800a874:	a904      	add	r1, sp, #16
 800a876:	9307      	str	r3, [sp, #28]
 800a878:	9402      	str	r4, [sp, #8]
 800a87a:	9503      	str	r5, [sp, #12]
 800a87c:	463e      	mov	r6, r7
 800a87e:	f008 ffed 	bl	801385c <WM__SendMessage>
 800a882:	e7d7      	b.n	800a834 <_MoveDescendents+0x16>
 800a884:	b008      	add	sp, #32
 800a886:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a88a <WM__MoveWindow>:
 800a88a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a88e:	b08b      	sub	sp, #44	; 0x2c
 800a890:	4606      	mov	r6, r0
 800a892:	460d      	mov	r5, r1
 800a894:	4614      	mov	r4, r2
 800a896:	a806      	add	r0, sp, #24
 800a898:	2100      	movs	r1, #0
 800a89a:	2210      	movs	r2, #16
 800a89c:	f00e fa6d 	bl	8018d7a <memset>
 800a8a0:	2e00      	cmp	r6, #0
 800a8a2:	d043      	beq.n	800a92c <WM__MoveWindow+0xa2>
 800a8a4:	b90d      	cbnz	r5, 800a8aa <WM__MoveWindow+0x20>
 800a8a6:	2c00      	cmp	r4, #0
 800a8a8:	d040      	beq.n	800a92c <WM__MoveWindow+0xa2>
 800a8aa:	4630      	mov	r0, r6
 800a8ac:	f006 fd88 	bl	80113c0 <GUI_ALLOC_LockH>
 800a8b0:	4603      	mov	r3, r0
 800a8b2:	9001      	str	r0, [sp, #4]
 800a8b4:	c803      	ldmia	r0, {r0, r1}
 800a8b6:	f10d 0808 	add.w	r8, sp, #8
 800a8ba:	e888 0003 	stmia.w	r8, {r0, r1}
 800a8be:	4622      	mov	r2, r4
 800a8c0:	4618      	mov	r0, r3
 800a8c2:	4629      	mov	r1, r5
 800a8c4:	f005 fcee 	bl	80102a4 <GUI_MoveRect>
 800a8c8:	9801      	ldr	r0, [sp, #4]
 800a8ca:	af0a      	add	r7, sp, #40	; 0x28
 800a8cc:	4629      	mov	r1, r5
 800a8ce:	4622      	mov	r2, r4
 800a8d0:	3008      	adds	r0, #8
 800a8d2:	f005 fce7 	bl	80102a4 <GUI_MoveRect>
 800a8d6:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 800a8da:	f8d3 901c 	ldr.w	r9, [r3, #28]
 800a8de:	4638      	mov	r0, r7
 800a8e0:	f006 fd7c 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a8e4:	4622      	mov	r2, r4
 800a8e6:	4648      	mov	r0, r9
 800a8e8:	4629      	mov	r1, r5
 800a8ea:	f7ff ff98 	bl	800a81e <_MoveDescendents>
 800a8ee:	4630      	mov	r0, r6
 800a8f0:	f006 fd66 	bl	80113c0 <GUI_ALLOC_LockH>
 800a8f4:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800a8f6:	9001      	str	r0, [sp, #4]
 800a8f8:	0792      	lsls	r2, r2, #30
 800a8fa:	d50a      	bpl.n	800a912 <WM__MoveWindow+0x88>
 800a8fc:	6981      	ldr	r1, [r0, #24]
 800a8fe:	b141      	cbz	r1, 800a912 <WM__MoveWindow+0x88>
 800a900:	6a02      	ldr	r2, [r0, #32]
 800a902:	f000 fe26 	bl	800b552 <WM__InvalidateParent>
 800a906:	9b01      	ldr	r3, [sp, #4]
 800a908:	4640      	mov	r0, r8
 800a90a:	6999      	ldr	r1, [r3, #24]
 800a90c:	6a1a      	ldr	r2, [r3, #32]
 800a90e:	f000 fe20 	bl	800b552 <WM__InvalidateParent>
 800a912:	4638      	mov	r0, r7
 800a914:	f006 fd62 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a918:	2303      	movs	r3, #3
 800a91a:	9306      	str	r3, [sp, #24]
 800a91c:	4630      	mov	r0, r6
 800a91e:	ab04      	add	r3, sp, #16
 800a920:	a906      	add	r1, sp, #24
 800a922:	9309      	str	r3, [sp, #36]	; 0x24
 800a924:	9504      	str	r5, [sp, #16]
 800a926:	9405      	str	r4, [sp, #20]
 800a928:	f008 ff98 	bl	801385c <WM__SendMessage>
 800a92c:	b00b      	add	sp, #44	; 0x2c
 800a92e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a932 <WM__MoveTo>:
 800a932:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a934:	460d      	mov	r5, r1
 800a936:	4617      	mov	r7, r2
 800a938:	4606      	mov	r6, r0
 800a93a:	b190      	cbz	r0, 800a962 <WM__MoveTo+0x30>
 800a93c:	f006 fd40 	bl	80113c0 <GUI_ALLOC_LockH>
 800a940:	4604      	mov	r4, r0
 800a942:	a802      	add	r0, sp, #8
 800a944:	f9b4 2000 	ldrsh.w	r2, [r4]
 800a948:	f840 4d04 	str.w	r4, [r0, #-4]!
 800a94c:	f9b4 4002 	ldrsh.w	r4, [r4, #2]
 800a950:	1aad      	subs	r5, r5, r2
 800a952:	1b3c      	subs	r4, r7, r4
 800a954:	f006 fd42 	bl	80113dc <GUI_ALLOC_UnlockH>
 800a958:	4630      	mov	r0, r6
 800a95a:	4629      	mov	r1, r5
 800a95c:	4622      	mov	r2, r4
 800a95e:	f7ff ff94 	bl	800a88a <WM__MoveWindow>
 800a962:	b003      	add	sp, #12
 800a964:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a966 <WM_MoveWindow>:
 800a966:	f7ff bf90 	b.w	800a88a <WM__MoveWindow>

0800a96a <WM_MoveTo>:
 800a96a:	f7ff bfe2 	b.w	800a932 <WM__MoveTo>
	...

0800a970 <WM_MULTIBUF_Enable>:
 800a970:	4b05      	ldr	r3, [pc, #20]	; (800a988 <WM_MULTIBUF_Enable+0x18>)
 800a972:	681a      	ldr	r2, [r3, #0]
 800a974:	1c11      	adds	r1, r2, #0
 800a976:	bf18      	it	ne
 800a978:	2101      	movne	r1, #1
 800a97a:	b110      	cbz	r0, 800a982 <WM_MULTIBUF_Enable+0x12>
 800a97c:	4a03      	ldr	r2, [pc, #12]	; (800a98c <WM_MULTIBUF_Enable+0x1c>)
 800a97e:	601a      	str	r2, [r3, #0]
 800a980:	e000      	b.n	800a984 <WM_MULTIBUF_Enable+0x14>
 800a982:	6018      	str	r0, [r3, #0]
 800a984:	4608      	mov	r0, r1
 800a986:	4770      	bx	lr
 800a988:	2001998c 	.word	0x2001998c
 800a98c:	0801f284 	.word	0x0801f284

0800a990 <WM_IsWindow>:
 800a990:	f000 bce0 	b.w	800b354 <WM__IsWindow>

0800a994 <WM_IsVisible>:
 800a994:	b508      	push	{r3, lr}
 800a996:	b128      	cbz	r0, 800a9a4 <WM_IsVisible+0x10>
 800a998:	f006 fd08 	bl	80113ac <GUI_ALLOC_h2p>
 800a99c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800a99e:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800a9a2:	bd08      	pop	{r3, pc}
 800a9a4:	bd08      	pop	{r3, pc}

0800a9a6 <WM_IsFocussable>:
 800a9a6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a9a8:	4604      	mov	r4, r0
 800a9aa:	b908      	cbnz	r0, 800a9b0 <WM_IsFocussable+0xa>
 800a9ac:	2000      	movs	r0, #0
 800a9ae:	e011      	b.n	800a9d4 <WM_IsFocussable+0x2e>
 800a9b0:	f006 fcfc 	bl	80113ac <GUI_ALLOC_h2p>
 800a9b4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a9b6:	079a      	lsls	r2, r3, #30
 800a9b8:	d5f8      	bpl.n	800a9ac <WM_IsFocussable+0x6>
 800a9ba:	f013 0310 	ands.w	r3, r3, #16
 800a9be:	d1f5      	bne.n	800a9ac <WM_IsFocussable+0x6>
 800a9c0:	a904      	add	r1, sp, #16
 800a9c2:	9303      	str	r3, [sp, #12]
 800a9c4:	231f      	movs	r3, #31
 800a9c6:	f841 3d10 	str.w	r3, [r1, #-16]!
 800a9ca:	4620      	mov	r0, r4
 800a9cc:	4669      	mov	r1, sp
 800a9ce:	f000 fded 	bl	800b5ac <WM_SendMessage>
 800a9d2:	9803      	ldr	r0, [sp, #12]
 800a9d4:	b004      	add	sp, #16
 800a9d6:	bd10      	pop	{r4, pc}

0800a9d8 <WM_HideWindow>:
 800a9d8:	b513      	push	{r0, r1, r4, lr}
 800a9da:	b188      	cbz	r0, 800aa00 <WM_HideWindow+0x28>
 800a9dc:	f006 fcf0 	bl	80113c0 <GUI_ALLOC_LockH>
 800a9e0:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800a9e2:	ac02      	add	r4, sp, #8
 800a9e4:	0791      	lsls	r1, r2, #30
 800a9e6:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a9ea:	d506      	bpl.n	800a9fa <WM_HideWindow+0x22>
 800a9ec:	f022 0202 	bic.w	r2, r2, #2
 800a9f0:	6282      	str	r2, [r0, #40]	; 0x28
 800a9f2:	6981      	ldr	r1, [r0, #24]
 800a9f4:	6a02      	ldr	r2, [r0, #32]
 800a9f6:	f000 fdc1 	bl	800b57c <WM__InvalidateRectEx>
 800a9fa:	4620      	mov	r0, r4
 800a9fc:	f006 fcee 	bl	80113dc <GUI_ALLOC_UnlockH>
 800aa00:	b002      	add	sp, #8
 800aa02:	bd10      	pop	{r4, pc}

0800aa04 <WM_HasFocus>:
 800aa04:	4b04      	ldr	r3, [pc, #16]	; (800aa18 <WM_HasFocus+0x14>)
 800aa06:	681a      	ldr	r2, [r3, #0]
 800aa08:	4b04      	ldr	r3, [pc, #16]	; (800aa1c <WM_HasFocus+0x18>)
 800aa0a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800aa0e:	1ac3      	subs	r3, r0, r3
 800aa10:	4258      	negs	r0, r3
 800aa12:	4158      	adcs	r0, r3
 800aa14:	4770      	bx	lr
 800aa16:	bf00      	nop
 800aa18:	20019974 	.word	0x20019974
 800aa1c:	20019964 	.word	0x20019964

0800aa20 <WM_GetWindowSizeX>:
 800aa20:	b513      	push	{r0, r1, r4, lr}
 800aa22:	b908      	cbnz	r0, 800aa28 <WM_GetWindowSizeX+0x8>
 800aa24:	f000 ff8e 	bl	800b944 <WM_GetActiveWindow>
 800aa28:	f006 fcca 	bl	80113c0 <GUI_ALLOC_LockH>
 800aa2c:	ab02      	add	r3, sp, #8
 800aa2e:	f9b0 2000 	ldrsh.w	r2, [r0]
 800aa32:	f843 0d04 	str.w	r0, [r3, #-4]!
 800aa36:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800aa3a:	4618      	mov	r0, r3
 800aa3c:	1aa4      	subs	r4, r4, r2
 800aa3e:	f006 fccd 	bl	80113dc <GUI_ALLOC_UnlockH>
 800aa42:	3401      	adds	r4, #1
 800aa44:	4620      	mov	r0, r4
 800aa46:	b002      	add	sp, #8
 800aa48:	bd10      	pop	{r4, pc}

0800aa4a <WM_GetWindowSizeY>:
 800aa4a:	b513      	push	{r0, r1, r4, lr}
 800aa4c:	b908      	cbnz	r0, 800aa52 <WM_GetWindowSizeY+0x8>
 800aa4e:	f000 ff79 	bl	800b944 <WM_GetActiveWindow>
 800aa52:	f006 fcb5 	bl	80113c0 <GUI_ALLOC_LockH>
 800aa56:	ab02      	add	r3, sp, #8
 800aa58:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800aa5c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800aa60:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800aa64:	4618      	mov	r0, r3
 800aa66:	1aa4      	subs	r4, r4, r2
 800aa68:	f006 fcb8 	bl	80113dc <GUI_ALLOC_UnlockH>
 800aa6c:	3401      	adds	r4, #1
 800aa6e:	4620      	mov	r0, r4
 800aa70:	b002      	add	sp, #8
 800aa72:	bd10      	pop	{r4, pc}

0800aa74 <WM_GetParent>:
 800aa74:	b508      	push	{r3, lr}
 800aa76:	4603      	mov	r3, r0
 800aa78:	b110      	cbz	r0, 800aa80 <WM_GetParent+0xc>
 800aa7a:	f006 fc97 	bl	80113ac <GUI_ALLOC_h2p>
 800aa7e:	6983      	ldr	r3, [r0, #24]
 800aa80:	4618      	mov	r0, r3
 800aa82:	bd08      	pop	{r3, pc}

0800aa84 <WM_GetWindowOrgX>:
 800aa84:	b508      	push	{r3, lr}
 800aa86:	b120      	cbz	r0, 800aa92 <WM_GetWindowOrgX+0xe>
 800aa88:	f006 fc90 	bl	80113ac <GUI_ALLOC_h2p>
 800aa8c:	f9b0 0000 	ldrsh.w	r0, [r0]
 800aa90:	bd08      	pop	{r3, pc}
 800aa92:	bd08      	pop	{r3, pc}

0800aa94 <WM_GetWindowOrgY>:
 800aa94:	b508      	push	{r3, lr}
 800aa96:	b120      	cbz	r0, 800aaa2 <WM_GetWindowOrgY+0xe>
 800aa98:	f006 fc88 	bl	80113ac <GUI_ALLOC_h2p>
 800aa9c:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 800aaa0:	bd08      	pop	{r3, pc}
 800aaa2:	bd08      	pop	{r3, pc}

0800aaa4 <WM_GetId>:
 800aaa4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800aaa6:	4604      	mov	r4, r0
 800aaa8:	2210      	movs	r2, #16
 800aaaa:	4668      	mov	r0, sp
 800aaac:	2100      	movs	r1, #0
 800aaae:	f00e f964 	bl	8018d7a <memset>
 800aab2:	2315      	movs	r3, #21
 800aab4:	4620      	mov	r0, r4
 800aab6:	4669      	mov	r1, sp
 800aab8:	9300      	str	r3, [sp, #0]
 800aaba:	f000 fd77 	bl	800b5ac <WM_SendMessage>
 800aabe:	9803      	ldr	r0, [sp, #12]
 800aac0:	b004      	add	sp, #16
 800aac2:	bd10      	pop	{r4, pc}

0800aac4 <WM_GetFocussedWindow>:
 800aac4:	4b02      	ldr	r3, [pc, #8]	; (800aad0 <WM_GetFocussedWindow+0xc>)
 800aac6:	681a      	ldr	r2, [r3, #0]
 800aac8:	4b02      	ldr	r3, [pc, #8]	; (800aad4 <WM_GetFocussedWindow+0x10>)
 800aaca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800aace:	4770      	bx	lr
 800aad0:	20019974 	.word	0x20019974
 800aad4:	20019964 	.word	0x20019964

0800aad8 <WM_GetFirstChild>:
 800aad8:	b508      	push	{r3, lr}
 800aada:	4603      	mov	r3, r0
 800aadc:	b110      	cbz	r0, 800aae4 <WM_GetFirstChild+0xc>
 800aade:	f006 fc65 	bl	80113ac <GUI_ALLOC_h2p>
 800aae2:	69c3      	ldr	r3, [r0, #28]
 800aae4:	4618      	mov	r0, r3
 800aae6:	bd08      	pop	{r3, pc}

0800aae8 <_GetDialogItem>:
 800aae8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aaea:	460d      	mov	r5, r1
 800aaec:	f006 fc68 	bl	80113c0 <GUI_ALLOC_LockH>
 800aaf0:	ab02      	add	r3, sp, #8
 800aaf2:	69c4      	ldr	r4, [r0, #28]
 800aaf4:	f843 0d04 	str.w	r0, [r3, #-4]!
 800aaf8:	4618      	mov	r0, r3
 800aafa:	f006 fc6f 	bl	80113dc <GUI_ALLOC_UnlockH>
 800aafe:	4620      	mov	r0, r4
 800ab00:	b16c      	cbz	r4, 800ab1e <_GetDialogItem+0x36>
 800ab02:	f7ff ffcf 	bl	800aaa4 <WM_GetId>
 800ab06:	42a8      	cmp	r0, r5
 800ab08:	4620      	mov	r0, r4
 800ab0a:	d008      	beq.n	800ab1e <_GetDialogItem+0x36>
 800ab0c:	4629      	mov	r1, r5
 800ab0e:	f7ff ffeb 	bl	800aae8 <_GetDialogItem>
 800ab12:	b920      	cbnz	r0, 800ab1e <_GetDialogItem+0x36>
 800ab14:	4620      	mov	r0, r4
 800ab16:	f006 fc49 	bl	80113ac <GUI_ALLOC_h2p>
 800ab1a:	6a04      	ldr	r4, [r0, #32]
 800ab1c:	e7ef      	b.n	800aafe <_GetDialogItem+0x16>
 800ab1e:	b003      	add	sp, #12
 800ab20:	bd30      	pop	{r4, r5, pc}

0800ab22 <WM_GetDialogItem>:
 800ab22:	b108      	cbz	r0, 800ab28 <WM_GetDialogItem+0x6>
 800ab24:	f7ff bfe0 	b.w	800aae8 <_GetDialogItem>
 800ab28:	4770      	bx	lr
	...

0800ab2c <WM_GetDesktopWindowEx>:
 800ab2c:	2801      	cmp	r0, #1
 800ab2e:	bf9a      	itte	ls
 800ab30:	4b02      	ldrls	r3, [pc, #8]	; (800ab3c <WM_GetDesktopWindowEx+0x10>)
 800ab32:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 800ab36:	2000      	movhi	r0, #0
 800ab38:	4770      	bx	lr
 800ab3a:	bf00      	nop
 800ab3c:	20019954 	.word	0x20019954

0800ab40 <WM_GetDesktopWindow>:
 800ab40:	4b03      	ldr	r3, [pc, #12]	; (800ab50 <WM_GetDesktopWindow+0x10>)
 800ab42:	681b      	ldr	r3, [r3, #0]
 800ab44:	7c5a      	ldrb	r2, [r3, #17]
 800ab46:	4b03      	ldr	r3, [pc, #12]	; (800ab54 <WM_GetDesktopWindow+0x14>)
 800ab48:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800ab4c:	4770      	bx	lr
 800ab4e:	bf00      	nop
 800ab50:	2000016c 	.word	0x2000016c
 800ab54:	20019954 	.word	0x20019954

0800ab58 <WM_GetClientWindow>:
 800ab58:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ab5a:	2300      	movs	r3, #0
 800ab5c:	a904      	add	r1, sp, #16
 800ab5e:	9303      	str	r3, [sp, #12]
 800ab60:	2317      	movs	r3, #23
 800ab62:	f841 3d10 	str.w	r3, [r1, #-16]!
 800ab66:	4669      	mov	r1, sp
 800ab68:	f000 fd20 	bl	800b5ac <WM_SendMessage>
 800ab6c:	9803      	ldr	r0, [sp, #12]
 800ab6e:	b005      	add	sp, #20
 800ab70:	f85d fb04 	ldr.w	pc, [sp], #4

0800ab74 <WM__GetClientRectEx>:
 800ab74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ab76:	460d      	mov	r5, r1
 800ab78:	b158      	cbz	r0, 800ab92 <WM__GetClientRectEx+0x1e>
 800ab7a:	b151      	cbz	r1, 800ab92 <WM__GetClientRectEx+0x1e>
 800ab7c:	f006 fc20 	bl	80113c0 <GUI_ALLOC_LockH>
 800ab80:	ac02      	add	r4, sp, #8
 800ab82:	4629      	mov	r1, r5
 800ab84:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ab88:	f000 fd1f 	bl	800b5ca <WM__GetClientRectWin>
 800ab8c:	4620      	mov	r0, r4
 800ab8e:	f006 fc25 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ab92:	b003      	add	sp, #12
 800ab94:	bd30      	pop	{r4, r5, pc}

0800ab96 <WM_GetClientRectEx>:
 800ab96:	f7ff bfed 	b.w	800ab74 <WM__GetClientRectEx>
	...

0800ab9c <WM_GetClientRect>:
 800ab9c:	4b04      	ldr	r3, [pc, #16]	; (800abb0 <WM_GetClientRect+0x14>)
 800ab9e:	4601      	mov	r1, r0
 800aba0:	6818      	ldr	r0, [r3, #0]
 800aba2:	b910      	cbnz	r0, 800abaa <WM_GetClientRect+0xe>
 800aba4:	4b03      	ldr	r3, [pc, #12]	; (800abb4 <WM_GetClientRect+0x18>)
 800aba6:	681b      	ldr	r3, [r3, #0]
 800aba8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800abaa:	f7ff bfe3 	b.w	800ab74 <WM__GetClientRectEx>
 800abae:	bf00      	nop
 800abb0:	20019950 	.word	0x20019950
 800abb4:	2000016c 	.word	0x2000016c

0800abb8 <WM_GetBkColor>:
 800abb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800abba:	b140      	cbz	r0, 800abce <WM_GetBkColor+0x16>
 800abbc:	a904      	add	r1, sp, #16
 800abbe:	2322      	movs	r3, #34	; 0x22
 800abc0:	f841 3d10 	str.w	r3, [r1, #-16]!
 800abc4:	4669      	mov	r1, sp
 800abc6:	f000 fcf1 	bl	800b5ac <WM_SendMessage>
 800abca:	9803      	ldr	r0, [sp, #12]
 800abcc:	e001      	b.n	800abd2 <WM_GetBkColor+0x1a>
 800abce:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
 800abd2:	b005      	add	sp, #20
 800abd4:	f85d fb04 	ldr.w	pc, [sp], #4

0800abd8 <_cbInvalidateOne>:
 800abd8:	f000 bd3f 	b.w	800b65a <WM_InvalidateWindow>

0800abdc <WM_BringToTop>:
 800abdc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800abde:	4605      	mov	r5, r0
 800abe0:	2800      	cmp	r0, #0
 800abe2:	d032      	beq.n	800ac4a <WM_BringToTop+0x6e>
 800abe4:	f006 fbec 	bl	80113c0 <GUI_ALLOC_LockH>
 800abe8:	ac02      	add	r4, sp, #8
 800abea:	4603      	mov	r3, r0
 800abec:	f844 0d08 	str.w	r0, [r4, #-8]!
 800abf0:	6a00      	ldr	r0, [r0, #32]
 800abf2:	b908      	cbnz	r0, 800abf8 <WM_BringToTop+0x1c>
 800abf4:	4668      	mov	r0, sp
 800abf6:	e00e      	b.n	800ac16 <WM_BringToTop+0x3a>
 800abf8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800abfa:	071a      	lsls	r2, r3, #28
 800abfc:	d411      	bmi.n	800ac22 <WM_BringToTop+0x46>
 800abfe:	f006 fbdf 	bl	80113c0 <GUI_ALLOC_LockH>
 800ac02:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ac04:	ae02      	add	r6, sp, #8
 800ac06:	071b      	lsls	r3, r3, #28
 800ac08:	f846 0d04 	str.w	r0, [r6, #-4]!
 800ac0c:	d506      	bpl.n	800ac1c <WM_BringToTop+0x40>
 800ac0e:	4668      	mov	r0, sp
 800ac10:	f006 fbe4 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ac14:	4630      	mov	r0, r6
 800ac16:	f006 fbe1 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ac1a:	e016      	b.n	800ac4a <WM_BringToTop+0x6e>
 800ac1c:	4630      	mov	r0, r6
 800ac1e:	f006 fbdd 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ac22:	9b00      	ldr	r3, [sp, #0]
 800ac24:	4668      	mov	r0, sp
 800ac26:	699e      	ldr	r6, [r3, #24]
 800ac28:	f006 fbd8 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ac2c:	4628      	mov	r0, r5
 800ac2e:	f000 fb1f 	bl	800b270 <WM__RemoveWindowFromList>
 800ac32:	4631      	mov	r1, r6
 800ac34:	4628      	mov	r0, r5
 800ac36:	f000 fac9 	bl	800b1cc <WM__InsertWindowIntoList>
 800ac3a:	4628      	mov	r0, r5
 800ac3c:	f000 fd0d 	bl	800b65a <WM_InvalidateWindow>
 800ac40:	4628      	mov	r0, r5
 800ac42:	4903      	ldr	r1, [pc, #12]	; (800ac50 <WM_BringToTop+0x74>)
 800ac44:	2200      	movs	r2, #0
 800ac46:	f009 f918 	bl	8013e7a <WM_ForEachDesc>
 800ac4a:	b002      	add	sp, #8
 800ac4c:	bd70      	pop	{r4, r5, r6, pc}
 800ac4e:	bf00      	nop
 800ac50:	0800abd9 	.word	0x0800abd9

0800ac54 <WM_DetachWindow>:
 800ac54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ac56:	4604      	mov	r4, r0
 800ac58:	b1f0      	cbz	r0, 800ac98 <WM_DetachWindow+0x44>
 800ac5a:	f006 fbb1 	bl	80113c0 <GUI_ALLOC_LockH>
 800ac5e:	ab02      	add	r3, sp, #8
 800ac60:	6985      	ldr	r5, [r0, #24]
 800ac62:	f843 0d08 	str.w	r0, [r3, #-8]!
 800ac66:	4668      	mov	r0, sp
 800ac68:	f006 fbb8 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ac6c:	b1a5      	cbz	r5, 800ac98 <WM_DetachWindow+0x44>
 800ac6e:	4620      	mov	r0, r4
 800ac70:	f000 fc87 	bl	800b582 <WM__DetachWindow>
 800ac74:	4628      	mov	r0, r5
 800ac76:	f006 fba3 	bl	80113c0 <GUI_ALLOC_LockH>
 800ac7a:	4602      	mov	r2, r0
 800ac7c:	a802      	add	r0, sp, #8
 800ac7e:	8816      	ldrh	r6, [r2, #0]
 800ac80:	8855      	ldrh	r5, [r2, #2]
 800ac82:	f840 2d04 	str.w	r2, [r0, #-4]!
 800ac86:	f006 fba9 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ac8a:	b231      	sxth	r1, r6
 800ac8c:	b22a      	sxth	r2, r5
 800ac8e:	4620      	mov	r0, r4
 800ac90:	4249      	negs	r1, r1
 800ac92:	4252      	negs	r2, r2
 800ac94:	f7ff fe67 	bl	800a966 <WM_MoveWindow>
 800ac98:	b002      	add	sp, #8
 800ac9a:	bd70      	pop	{r4, r5, r6, pc}

0800ac9c <WM_AttachWindow>:
 800ac9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ac9e:	4604      	mov	r4, r0
 800aca0:	460d      	mov	r5, r1
 800aca2:	b351      	cbz	r1, 800acfa <WM_AttachWindow+0x5e>
 800aca4:	4281      	cmp	r1, r0
 800aca6:	d028      	beq.n	800acfa <WM_AttachWindow+0x5e>
 800aca8:	f006 fb8a 	bl	80113c0 <GUI_ALLOC_LockH>
 800acac:	4603      	mov	r3, r0
 800acae:	a802      	add	r0, sp, #8
 800acb0:	f840 3d08 	str.w	r3, [r0, #-8]!
 800acb4:	699b      	ldr	r3, [r3, #24]
 800acb6:	42ab      	cmp	r3, r5
 800acb8:	4668      	mov	r0, sp
 800acba:	d01c      	beq.n	800acf6 <WM_AttachWindow+0x5a>
 800acbc:	f006 fb8e 	bl	80113dc <GUI_ALLOC_UnlockH>
 800acc0:	4620      	mov	r0, r4
 800acc2:	f7ff ffc7 	bl	800ac54 <WM_DetachWindow>
 800acc6:	4629      	mov	r1, r5
 800acc8:	4620      	mov	r0, r4
 800acca:	f000 fa7f 	bl	800b1cc <WM__InsertWindowIntoList>
 800acce:	4628      	mov	r0, r5
 800acd0:	f006 fb76 	bl	80113c0 <GUI_ALLOC_LockH>
 800acd4:	ab02      	add	r3, sp, #8
 800acd6:	8806      	ldrh	r6, [r0, #0]
 800acd8:	f843 0d04 	str.w	r0, [r3, #-4]!
 800acdc:	8845      	ldrh	r5, [r0, #2]
 800acde:	4618      	mov	r0, r3
 800ace0:	f006 fb7c 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ace4:	4620      	mov	r0, r4
 800ace6:	b231      	sxth	r1, r6
 800ace8:	b22a      	sxth	r2, r5
 800acea:	f7ff fe3c 	bl	800a966 <WM_MoveWindow>
 800acee:	4620      	mov	r0, r4
 800acf0:	f000 fcb3 	bl	800b65a <WM_InvalidateWindow>
 800acf4:	e001      	b.n	800acfa <WM_AttachWindow+0x5e>
 800acf6:	f006 fb71 	bl	80113dc <GUI_ALLOC_UnlockH>
 800acfa:	b002      	add	sp, #8
 800acfc:	bd70      	pop	{r4, r5, r6, pc}

0800acfe <WM_AttachWindowAt>:
 800acfe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad00:	4604      	mov	r4, r0
 800ad02:	4617      	mov	r7, r2
 800ad04:	461e      	mov	r6, r3
 800ad06:	460d      	mov	r5, r1
 800ad08:	f7ff ffa4 	bl	800ac54 <WM_DetachWindow>
 800ad0c:	4620      	mov	r0, r4
 800ad0e:	4639      	mov	r1, r7
 800ad10:	4632      	mov	r2, r6
 800ad12:	f7ff fe2a 	bl	800a96a <WM_MoveTo>
 800ad16:	4620      	mov	r0, r4
 800ad18:	4629      	mov	r1, r5
 800ad1a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ad1e:	f7ff bfbd 	b.w	800ac9c <WM_AttachWindow>
	...

0800ad24 <_OnExit>:
 800ad24:	4a0a      	ldr	r2, [pc, #40]	; (800ad50 <_OnExit+0x2c>)
 800ad26:	490b      	ldr	r1, [pc, #44]	; (800ad54 <_OnExit+0x30>)
 800ad28:	2300      	movs	r3, #0
 800ad2a:	7013      	strb	r3, [r2, #0]
 800ad2c:	4a0a      	ldr	r2, [pc, #40]	; (800ad58 <_OnExit+0x34>)
 800ad2e:	600b      	str	r3, [r1, #0]
 800ad30:	6013      	str	r3, [r2, #0]
 800ad32:	4a0a      	ldr	r2, [pc, #40]	; (800ad5c <_OnExit+0x38>)
 800ad34:	604b      	str	r3, [r1, #4]
 800ad36:	6013      	str	r3, [r2, #0]
 800ad38:	4a09      	ldr	r2, [pc, #36]	; (800ad60 <_OnExit+0x3c>)
 800ad3a:	6013      	str	r3, [r2, #0]
 800ad3c:	6053      	str	r3, [r2, #4]
 800ad3e:	4a09      	ldr	r2, [pc, #36]	; (800ad64 <_OnExit+0x40>)
 800ad40:	6013      	str	r3, [r2, #0]
 800ad42:	4a09      	ldr	r2, [pc, #36]	; (800ad68 <_OnExit+0x44>)
 800ad44:	6013      	str	r3, [r2, #0]
 800ad46:	4a09      	ldr	r2, [pc, #36]	; (800ad6c <_OnExit+0x48>)
 800ad48:	6013      	str	r3, [r2, #0]
 800ad4a:	4a09      	ldr	r2, [pc, #36]	; (800ad70 <_OnExit+0x4c>)
 800ad4c:	6013      	str	r3, [r2, #0]
 800ad4e:	4770      	bx	lr
 800ad50:	20019468 	.word	0x20019468
 800ad54:	20019964 	.word	0x20019964
 800ad58:	20019440 	.word	0x20019440
 800ad5c:	20019988 	.word	0x20019988
 800ad60:	20019990 	.word	0x20019990
 800ad64:	2001999c 	.word	0x2001999c
 800ad68:	20019950 	.word	0x20019950
 800ad6c:	2001997c 	.word	0x2001997c
 800ad70:	2001998c 	.word	0x2001998c

0800ad74 <_Paint1>:
 800ad74:	b510      	push	{r4, lr}
 800ad76:	4604      	mov	r4, r0
 800ad78:	f006 fb18 	bl	80113ac <GUI_ALLOC_h2p>
 800ad7c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ad7e:	4a04      	ldr	r2, [pc, #16]	; (800ad90 <_Paint1+0x1c>)
 800ad80:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800ad84:	4b03      	ldr	r3, [pc, #12]	; (800ad94 <_Paint1+0x20>)
 800ad86:	4620      	mov	r0, r4
 800ad88:	bf08      	it	eq
 800ad8a:	4613      	moveq	r3, r2
 800ad8c:	4798      	blx	r3
 800ad8e:	bd10      	pop	{r4, pc}
 800ad90:	0800bbe5 	.word	0x0800bbe5
 800ad94:	0800c1b5 	.word	0x0800c1b5

0800ad98 <_Findy1>:
 800ad98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ad9a:	4605      	mov	r5, r0
 800ad9c:	b085      	sub	sp, #20
 800ad9e:	460c      	mov	r4, r1
 800ada0:	4616      	mov	r6, r2
 800ada2:	2d00      	cmp	r5, #0
 800ada4:	d04c      	beq.n	800ae40 <_Findy1+0xa8>
 800ada6:	4628      	mov	r0, r5
 800ada8:	f006 fb0a 	bl	80113c0 <GUI_ALLOC_LockH>
 800adac:	6a87      	ldr	r7, [r0, #40]	; 0x28
 800adae:	9001      	str	r0, [sp, #4]
 800adb0:	07bb      	lsls	r3, r7, #30
 800adb2:	4601      	mov	r1, r0
 800adb4:	d53d      	bpl.n	800ae32 <_Findy1+0x9a>
 800adb6:	ad02      	add	r5, sp, #8
 800adb8:	b126      	cbz	r6, 800adc4 <_Findy1+0x2c>
 800adba:	4628      	mov	r0, r5
 800adbc:	4632      	mov	r2, r6
 800adbe:	f004 f849 	bl	800ee54 <GUI__IntersectRects>
 800adc2:	e002      	b.n	800adca <_Findy1+0x32>
 800adc4:	c803      	ldmia	r0, {r0, r1}
 800adc6:	e885 0003 	stmia.w	r5, {r0, r1}
 800adca:	4620      	mov	r0, r4
 800adcc:	4629      	mov	r1, r5
 800adce:	f005 f965 	bl	801009c <GUI_RectsIntersect>
 800add2:	b370      	cbz	r0, 800ae32 <_Findy1+0x9a>
 800add4:	f017 0f01 	tst.w	r7, #1
 800add8:	9b01      	ldr	r3, [sp, #4]
 800adda:	d11e      	bne.n	800ae1a <_Findy1+0x82>
 800addc:	b13e      	cbz	r6, 800adee <_Findy1+0x56>
 800adde:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ade2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800ade6:	429a      	cmp	r2, r3
 800ade8:	bfa8      	it	ge
 800adea:	4613      	movge	r3, r2
 800adec:	e001      	b.n	800adf2 <_Findy1+0x5a>
 800adee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800adf2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800adf6:	4293      	cmp	r3, r2
 800adf8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800adfc:	dd06      	ble.n	800ae0c <_Findy1+0x74>
 800adfe:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ae02:	b219      	sxth	r1, r3
 800ae04:	428a      	cmp	r2, r1
 800ae06:	db14      	blt.n	800ae32 <_Findy1+0x9a>
 800ae08:	3b01      	subs	r3, #1
 800ae0a:	e004      	b.n	800ae16 <_Findy1+0x7e>
 800ae0c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ae10:	b219      	sxth	r1, r3
 800ae12:	428a      	cmp	r2, r1
 800ae14:	dd0d      	ble.n	800ae32 <_Findy1+0x9a>
 800ae16:	80e3      	strh	r3, [r4, #6]
 800ae18:	e00b      	b.n	800ae32 <_Findy1+0x9a>
 800ae1a:	69df      	ldr	r7, [r3, #28]
 800ae1c:	b14f      	cbz	r7, 800ae32 <_Findy1+0x9a>
 800ae1e:	4638      	mov	r0, r7
 800ae20:	4621      	mov	r1, r4
 800ae22:	462a      	mov	r2, r5
 800ae24:	f7ff ffb8 	bl	800ad98 <_Findy1>
 800ae28:	4638      	mov	r0, r7
 800ae2a:	f006 fabf 	bl	80113ac <GUI_ALLOC_h2p>
 800ae2e:	6a07      	ldr	r7, [r0, #32]
 800ae30:	e7f4      	b.n	800ae1c <_Findy1+0x84>
 800ae32:	a804      	add	r0, sp, #16
 800ae34:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800ae38:	6a1d      	ldr	r5, [r3, #32]
 800ae3a:	f006 facf 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ae3e:	e7b0      	b.n	800ada2 <_Findy1+0xa>
 800ae40:	b005      	add	sp, #20
 800ae42:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ae44 <_Findx0>:
 800ae44:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ae48:	4604      	mov	r4, r0
 800ae4a:	460f      	mov	r7, r1
 800ae4c:	4690      	mov	r8, r2
 800ae4e:	2500      	movs	r5, #0
 800ae50:	2c00      	cmp	r4, #0
 800ae52:	d037      	beq.n	800aec4 <_Findx0+0x80>
 800ae54:	4620      	mov	r0, r4
 800ae56:	f006 fab3 	bl	80113c0 <GUI_ALLOC_LockH>
 800ae5a:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800ae5c:	9001      	str	r0, [sp, #4]
 800ae5e:	07b2      	lsls	r2, r6, #30
 800ae60:	4601      	mov	r1, r0
 800ae62:	d528      	bpl.n	800aeb6 <_Findx0+0x72>
 800ae64:	ac02      	add	r4, sp, #8
 800ae66:	f1b8 0f00 	cmp.w	r8, #0
 800ae6a:	d004      	beq.n	800ae76 <_Findx0+0x32>
 800ae6c:	4620      	mov	r0, r4
 800ae6e:	4642      	mov	r2, r8
 800ae70:	f003 fff0 	bl	800ee54 <GUI__IntersectRects>
 800ae74:	e002      	b.n	800ae7c <_Findx0+0x38>
 800ae76:	c803      	ldmia	r0, {r0, r1}
 800ae78:	e884 0003 	stmia.w	r4, {r0, r1}
 800ae7c:	4638      	mov	r0, r7
 800ae7e:	4621      	mov	r1, r4
 800ae80:	f005 f90c 	bl	801009c <GUI_RectsIntersect>
 800ae84:	b1b8      	cbz	r0, 800aeb6 <_Findx0+0x72>
 800ae86:	07f3      	lsls	r3, r6, #31
 800ae88:	d405      	bmi.n	800ae96 <_Findx0+0x52>
 800ae8a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800ae8e:	3301      	adds	r3, #1
 800ae90:	803b      	strh	r3, [r7, #0]
 800ae92:	2501      	movs	r5, #1
 800ae94:	e00f      	b.n	800aeb6 <_Findx0+0x72>
 800ae96:	9b01      	ldr	r3, [sp, #4]
 800ae98:	69de      	ldr	r6, [r3, #28]
 800ae9a:	b166      	cbz	r6, 800aeb6 <_Findx0+0x72>
 800ae9c:	4630      	mov	r0, r6
 800ae9e:	4639      	mov	r1, r7
 800aea0:	4622      	mov	r2, r4
 800aea2:	f7ff ffcf 	bl	800ae44 <_Findx0>
 800aea6:	2800      	cmp	r0, #0
 800aea8:	4630      	mov	r0, r6
 800aeaa:	bf18      	it	ne
 800aeac:	2501      	movne	r5, #1
 800aeae:	f006 fa7d 	bl	80113ac <GUI_ALLOC_h2p>
 800aeb2:	6a06      	ldr	r6, [r0, #32]
 800aeb4:	e7f1      	b.n	800ae9a <_Findx0+0x56>
 800aeb6:	a804      	add	r0, sp, #16
 800aeb8:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800aebc:	6a1c      	ldr	r4, [r3, #32]
 800aebe:	f006 fa8d 	bl	80113dc <GUI_ALLOC_UnlockH>
 800aec2:	e7c5      	b.n	800ae50 <_Findx0+0xc>
 800aec4:	4628      	mov	r0, r5
 800aec6:	b004      	add	sp, #16
 800aec8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aecc <_Findx1>:
 800aecc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aece:	4604      	mov	r4, r0
 800aed0:	b085      	sub	sp, #20
 800aed2:	460e      	mov	r6, r1
 800aed4:	4617      	mov	r7, r2
 800aed6:	2c00      	cmp	r4, #0
 800aed8:	d031      	beq.n	800af3e <_Findx1+0x72>
 800aeda:	4620      	mov	r0, r4
 800aedc:	f006 fa70 	bl	80113c0 <GUI_ALLOC_LockH>
 800aee0:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800aee2:	9001      	str	r0, [sp, #4]
 800aee4:	07aa      	lsls	r2, r5, #30
 800aee6:	4601      	mov	r1, r0
 800aee8:	d522      	bpl.n	800af30 <_Findx1+0x64>
 800aeea:	ac02      	add	r4, sp, #8
 800aeec:	b127      	cbz	r7, 800aef8 <_Findx1+0x2c>
 800aeee:	4620      	mov	r0, r4
 800aef0:	463a      	mov	r2, r7
 800aef2:	f003 ffaf 	bl	800ee54 <GUI__IntersectRects>
 800aef6:	e002      	b.n	800aefe <_Findx1+0x32>
 800aef8:	c803      	ldmia	r0, {r0, r1}
 800aefa:	e884 0003 	stmia.w	r4, {r0, r1}
 800aefe:	4630      	mov	r0, r6
 800af00:	4621      	mov	r1, r4
 800af02:	f005 f8cb 	bl	801009c <GUI_RectsIntersect>
 800af06:	b198      	cbz	r0, 800af30 <_Findx1+0x64>
 800af08:	07eb      	lsls	r3, r5, #31
 800af0a:	d404      	bmi.n	800af16 <_Findx1+0x4a>
 800af0c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800af10:	3b01      	subs	r3, #1
 800af12:	80b3      	strh	r3, [r6, #4]
 800af14:	e00c      	b.n	800af30 <_Findx1+0x64>
 800af16:	9b01      	ldr	r3, [sp, #4]
 800af18:	69dd      	ldr	r5, [r3, #28]
 800af1a:	b14d      	cbz	r5, 800af30 <_Findx1+0x64>
 800af1c:	4628      	mov	r0, r5
 800af1e:	4631      	mov	r1, r6
 800af20:	4622      	mov	r2, r4
 800af22:	f7ff ffd3 	bl	800aecc <_Findx1>
 800af26:	4628      	mov	r0, r5
 800af28:	f006 fa40 	bl	80113ac <GUI_ALLOC_h2p>
 800af2c:	6a05      	ldr	r5, [r0, #32]
 800af2e:	e7f4      	b.n	800af1a <_Findx1+0x4e>
 800af30:	a804      	add	r0, sp, #16
 800af32:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800af36:	6a1c      	ldr	r4, [r3, #32]
 800af38:	f006 fa50 	bl	80113dc <GUI_ALLOC_UnlockH>
 800af3c:	e7cb      	b.n	800aed6 <_Findx1+0xa>
 800af3e:	b005      	add	sp, #20
 800af40:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800af44 <_Paint1Trans>:
 800af44:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800af48:	4d21      	ldr	r5, [pc, #132]	; (800afd0 <_Paint1Trans+0x8c>)
 800af4a:	682b      	ldr	r3, [r5, #0]
 800af4c:	4606      	mov	r6, r0
 800af4e:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800af50:	f006 fa36 	bl	80113c0 <GUI_ALLOC_LockH>
 800af54:	9000      	str	r0, [sp, #0]
 800af56:	4630      	mov	r0, r6
 800af58:	f006 fa32 	bl	80113c0 <GUI_ALLOC_LockH>
 800af5c:	ac02      	add	r4, sp, #8
 800af5e:	4601      	mov	r1, r0
 800af60:	9001      	str	r0, [sp, #4]
 800af62:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 800af66:	3008      	adds	r0, #8
 800af68:	f005 f898 	bl	801009c <GUI_RectsIntersect>
 800af6c:	4607      	mov	r7, r0
 800af6e:	b328      	cbz	r0, 800afbc <_Paint1Trans+0x78>
 800af70:	9901      	ldr	r1, [sp, #4]
 800af72:	9a00      	ldr	r2, [sp, #0]
 800af74:	682b      	ldr	r3, [r5, #0]
 800af76:	4c17      	ldr	r4, [pc, #92]	; (800afd4 <_Paint1Trans+0x90>)
 800af78:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 800af7a:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800af7e:	f101 0008 	add.w	r0, r1, #8
 800af82:	3208      	adds	r2, #8
 800af84:	f003 ff66 	bl	800ee54 <GUI__IntersectRects>
 800af88:	4668      	mov	r0, sp
 800af8a:	f006 fa27 	bl	80113dc <GUI_ALLOC_UnlockH>
 800af8e:	9a01      	ldr	r2, [sp, #4]
 800af90:	682b      	ldr	r3, [r5, #0]
 800af92:	f9b2 1000 	ldrsh.w	r1, [r2]
 800af96:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800af9a:	64d9      	str	r1, [r3, #76]	; 0x4c
 800af9c:	651a      	str	r2, [r3, #80]	; 0x50
 800af9e:	a801      	add	r0, sp, #4
 800afa0:	6026      	str	r6, [r4, #0]
 800afa2:	f006 fa1b 	bl	80113dc <GUI_ALLOC_UnlockH>
 800afa6:	4630      	mov	r0, r6
 800afa8:	f7ff fee4 	bl	800ad74 <_Paint1>
 800afac:	2300      	movs	r3, #0
 800afae:	6023      	str	r3, [r4, #0]
 800afb0:	682b      	ldr	r3, [r5, #0]
 800afb2:	651f      	str	r7, [r3, #80]	; 0x50
 800afb4:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 800afb8:	2701      	movs	r7, #1
 800afba:	e005      	b.n	800afc8 <_Paint1Trans+0x84>
 800afbc:	4668      	mov	r0, sp
 800afbe:	f006 fa0d 	bl	80113dc <GUI_ALLOC_UnlockH>
 800afc2:	a801      	add	r0, sp, #4
 800afc4:	f006 fa0a 	bl	80113dc <GUI_ALLOC_UnlockH>
 800afc8:	4638      	mov	r0, r7
 800afca:	b002      	add	sp, #8
 800afcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800afd0:	2000016c 	.word	0x2000016c
 800afd4:	20019950 	.word	0x20019950

0800afd8 <_PaintTransChildren>:
 800afd8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800afdc:	4606      	mov	r6, r0
 800afde:	f006 f9ef 	bl	80113c0 <GUI_ALLOC_LockH>
 800afe2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800afe4:	9001      	str	r0, [sp, #4]
 800afe6:	079b      	lsls	r3, r3, #30
 800afe8:	d405      	bmi.n	800aff6 <_PaintTransChildren+0x1e>
 800afea:	a801      	add	r0, sp, #4
 800afec:	f006 f9f6 	bl	80113dc <GUI_ALLOC_UnlockH>
 800aff0:	b002      	add	sp, #8
 800aff2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aff6:	69c4      	ldr	r4, [r0, #28]
 800aff8:	2c00      	cmp	r4, #0
 800affa:	d0f6      	beq.n	800afea <_PaintTransChildren+0x12>
 800affc:	4620      	mov	r0, r4
 800affe:	f006 f9df 	bl	80113c0 <GUI_ALLOC_LockH>
 800b002:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b004:	ad02      	add	r5, sp, #8
 800b006:	f003 0303 	and.w	r3, r3, #3
 800b00a:	2b03      	cmp	r3, #3
 800b00c:	f845 0d08 	str.w	r0, [r5, #-8]!
 800b010:	d137      	bne.n	800b082 <_PaintTransChildren+0xaa>
 800b012:	9901      	ldr	r1, [sp, #4]
 800b014:	3108      	adds	r1, #8
 800b016:	f005 f841 	bl	801009c <GUI_RectsIntersect>
 800b01a:	2800      	cmp	r0, #0
 800b01c:	d031      	beq.n	800b082 <_PaintTransChildren+0xaa>
 800b01e:	a802      	add	r0, sp, #8
 800b020:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800b024:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 800b028:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 800b02c:	899f      	ldrh	r7, [r3, #12]
 800b02e:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 800b032:	f006 f9d3 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b036:	4668      	mov	r0, sp
 800b038:	f006 f9d0 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b03c:	4620      	mov	r0, r4
 800b03e:	f7ff ff81 	bl	800af44 <_Paint1Trans>
 800b042:	b170      	cbz	r0, 800b062 <_PaintTransChildren+0x8a>
 800b044:	4620      	mov	r0, r4
 800b046:	f006 f9b1 	bl	80113ac <GUI_ALLOC_h2p>
 800b04a:	9000      	str	r0, [sp, #0]
 800b04c:	4620      	mov	r0, r4
 800b04e:	f7ff ffc3 	bl	800afd8 <_PaintTransChildren>
 800b052:	4620      	mov	r0, r4
 800b054:	f006 f9aa 	bl	80113ac <GUI_ALLOC_h2p>
 800b058:	9000      	str	r0, [sp, #0]
 800b05a:	4630      	mov	r0, r6
 800b05c:	f006 f9a6 	bl	80113ac <GUI_ALLOC_h2p>
 800b060:	9001      	str	r0, [sp, #4]
 800b062:	4630      	mov	r0, r6
 800b064:	f006 f9ac 	bl	80113c0 <GUI_ALLOC_LockH>
 800b068:	9001      	str	r0, [sp, #4]
 800b06a:	4620      	mov	r0, r4
 800b06c:	f006 f9a8 	bl	80113c0 <GUI_ALLOC_LockH>
 800b070:	9b01      	ldr	r3, [sp, #4]
 800b072:	9000      	str	r0, [sp, #0]
 800b074:	f8a3 9008 	strh.w	r9, [r3, #8]
 800b078:	f8a3 800a 	strh.w	r8, [r3, #10]
 800b07c:	819f      	strh	r7, [r3, #12]
 800b07e:	f8a3 a00e 	strh.w	sl, [r3, #14]
 800b082:	9b00      	ldr	r3, [sp, #0]
 800b084:	4668      	mov	r0, sp
 800b086:	6a1c      	ldr	r4, [r3, #32]
 800b088:	f006 f9a8 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b08c:	e7b4      	b.n	800aff8 <_PaintTransChildren+0x20>
	...

0800b090 <WM__PaintWinAndOverlays>:
 800b090:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b092:	4604      	mov	r4, r0
 800b094:	f006 f994 	bl	80113c0 <GUI_ALLOC_LockH>
 800b098:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800b09a:	9001      	str	r0, [sp, #4]
 800b09c:	f640 0301 	movw	r3, #2049	; 0x801
 800b0a0:	4013      	ands	r3, r2
 800b0a2:	2b01      	cmp	r3, #1
 800b0a4:	d005      	beq.n	800b0b2 <WM__PaintWinAndOverlays+0x22>
 800b0a6:	a801      	add	r0, sp, #4
 800b0a8:	f006 f998 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b0ac:	4620      	mov	r0, r4
 800b0ae:	f7ff fe61 	bl	800ad74 <_Paint1>
 800b0b2:	4b14      	ldr	r3, [pc, #80]	; (800b104 <WM__PaintWinAndOverlays+0x74>)
 800b0b4:	681b      	ldr	r3, [r3, #0]
 800b0b6:	b313      	cbz	r3, 800b0fe <WM__PaintWinAndOverlays+0x6e>
 800b0b8:	4620      	mov	r0, r4
 800b0ba:	f7ff ff8d 	bl	800afd8 <_PaintTransChildren>
 800b0be:	4620      	mov	r0, r4
 800b0c0:	f006 f974 	bl	80113ac <GUI_ALLOC_h2p>
 800b0c4:	6985      	ldr	r5, [r0, #24]
 800b0c6:	6a04      	ldr	r4, [r0, #32]
 800b0c8:	b1cd      	cbz	r5, 800b0fe <WM__PaintWinAndOverlays+0x6e>
 800b0ca:	b194      	cbz	r4, 800b0f2 <WM__PaintWinAndOverlays+0x62>
 800b0cc:	4620      	mov	r0, r4
 800b0ce:	f006 f96d 	bl	80113ac <GUI_ALLOC_h2p>
 800b0d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b0d4:	f003 0303 	and.w	r3, r3, #3
 800b0d8:	2b03      	cmp	r3, #3
 800b0da:	d102      	bne.n	800b0e2 <WM__PaintWinAndOverlays+0x52>
 800b0dc:	4620      	mov	r0, r4
 800b0de:	f7ff ff31 	bl	800af44 <_Paint1Trans>
 800b0e2:	4620      	mov	r0, r4
 800b0e4:	f7ff ff78 	bl	800afd8 <_PaintTransChildren>
 800b0e8:	4620      	mov	r0, r4
 800b0ea:	f006 f95f 	bl	80113ac <GUI_ALLOC_h2p>
 800b0ee:	6a04      	ldr	r4, [r0, #32]
 800b0f0:	e7eb      	b.n	800b0ca <WM__PaintWinAndOverlays+0x3a>
 800b0f2:	4628      	mov	r0, r5
 800b0f4:	f006 f95a 	bl	80113ac <GUI_ALLOC_h2p>
 800b0f8:	6a04      	ldr	r4, [r0, #32]
 800b0fa:	6985      	ldr	r5, [r0, #24]
 800b0fc:	e7e4      	b.n	800b0c8 <WM__PaintWinAndOverlays+0x38>
 800b0fe:	b003      	add	sp, #12
 800b100:	bd30      	pop	{r4, r5, pc}
 800b102:	bf00      	nop
 800b104:	2001999c 	.word	0x2001999c

0800b108 <_cbPaintMemDev>:
 800b108:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b10c:	4d17      	ldr	r5, [pc, #92]	; (800b16c <_cbPaintMemDev+0x64>)
 800b10e:	682b      	ldr	r3, [r5, #0]
 800b110:	4606      	mov	r6, r0
 800b112:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b114:	f006 f954 	bl	80113c0 <GUI_ALLOC_LockH>
 800b118:	682a      	ldr	r2, [r5, #0]
 800b11a:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 800b11e:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 800b122:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 800b126:	89c7      	ldrh	r7, [r0, #14]
 800b128:	ac02      	add	r4, sp, #8
 800b12a:	3208      	adds	r2, #8
 800b12c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b130:	f100 0308 	add.w	r3, r0, #8
 800b134:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b138:	e883 0003 	stmia.w	r3, {r0, r1}
 800b13c:	4620      	mov	r0, r4
 800b13e:	f006 f94d 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b142:	6830      	ldr	r0, [r6, #0]
 800b144:	f7ff ffa4 	bl	800b090 <WM__PaintWinAndOverlays>
 800b148:	682b      	ldr	r3, [r5, #0]
 800b14a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b14c:	f006 f938 	bl	80113c0 <GUI_ALLOC_LockH>
 800b150:	9001      	str	r0, [sp, #4]
 800b152:	f8a0 a008 	strh.w	sl, [r0, #8]
 800b156:	f8a0 900a 	strh.w	r9, [r0, #10]
 800b15a:	f8a0 800c 	strh.w	r8, [r0, #12]
 800b15e:	81c7      	strh	r7, [r0, #14]
 800b160:	4620      	mov	r0, r4
 800b162:	f006 f93b 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b166:	b002      	add	sp, #8
 800b168:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b16c:	2000016c 	.word	0x2000016c

0800b170 <WM__ClipAtParentBorders>:
 800b170:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b172:	4607      	mov	r7, r0
 800b174:	460d      	mov	r5, r1
 800b176:	4628      	mov	r0, r5
 800b178:	f006 f922 	bl	80113c0 <GUI_ALLOC_LockH>
 800b17c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b17e:	ac02      	add	r4, sp, #8
 800b180:	f013 0602 	ands.w	r6, r3, #2
 800b184:	4601      	mov	r1, r0
 800b186:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b18a:	d104      	bne.n	800b196 <WM__ClipAtParentBorders+0x26>
 800b18c:	4620      	mov	r0, r4
 800b18e:	f006 f925 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b192:	4630      	mov	r0, r6
 800b194:	e016      	b.n	800b1c4 <WM__ClipAtParentBorders+0x54>
 800b196:	4638      	mov	r0, r7
 800b198:	f003 fe8e 	bl	800eeb8 <GUI__IntersectRect>
 800b19c:	9b01      	ldr	r3, [sp, #4]
 800b19e:	699e      	ldr	r6, [r3, #24]
 800b1a0:	4620      	mov	r0, r4
 800b1a2:	b956      	cbnz	r6, 800b1ba <WM__ClipAtParentBorders+0x4a>
 800b1a4:	f006 f91a 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b1a8:	4b07      	ldr	r3, [pc, #28]	; (800b1c8 <WM__ClipAtParentBorders+0x58>)
 800b1aa:	681a      	ldr	r2, [r3, #0]
 800b1ac:	4295      	cmp	r5, r2
 800b1ae:	d008      	beq.n	800b1c2 <WM__ClipAtParentBorders+0x52>
 800b1b0:	6858      	ldr	r0, [r3, #4]
 800b1b2:	1a2b      	subs	r3, r5, r0
 800b1b4:	4258      	negs	r0, r3
 800b1b6:	4158      	adcs	r0, r3
 800b1b8:	e004      	b.n	800b1c4 <WM__ClipAtParentBorders+0x54>
 800b1ba:	f006 f90f 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b1be:	4635      	mov	r5, r6
 800b1c0:	e7d9      	b.n	800b176 <WM__ClipAtParentBorders+0x6>
 800b1c2:	2001      	movs	r0, #1
 800b1c4:	b003      	add	sp, #12
 800b1c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b1c8:	20019954 	.word	0x20019954

0800b1cc <WM__InsertWindowIntoList>:
 800b1cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b1ce:	4604      	mov	r4, r0
 800b1d0:	b085      	sub	sp, #20
 800b1d2:	460d      	mov	r5, r1
 800b1d4:	2900      	cmp	r1, #0
 800b1d6:	d049      	beq.n	800b26c <WM__InsertWindowIntoList+0xa0>
 800b1d8:	f006 f8f2 	bl	80113c0 <GUI_ALLOC_LockH>
 800b1dc:	2300      	movs	r3, #0
 800b1de:	6203      	str	r3, [r0, #32]
 800b1e0:	6185      	str	r5, [r0, #24]
 800b1e2:	9001      	str	r0, [sp, #4]
 800b1e4:	4628      	mov	r0, r5
 800b1e6:	f006 f8eb 	bl	80113c0 <GUI_ALLOC_LockH>
 800b1ea:	9b01      	ldr	r3, [sp, #4]
 800b1ec:	69c5      	ldr	r5, [r0, #28]
 800b1ee:	9002      	str	r0, [sp, #8]
 800b1f0:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 800b1f2:	b92d      	cbnz	r5, 800b200 <WM__InsertWindowIntoList+0x34>
 800b1f4:	61c4      	str	r4, [r0, #28]
 800b1f6:	a801      	add	r0, sp, #4
 800b1f8:	f006 f8f0 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b1fc:	a802      	add	r0, sp, #8
 800b1fe:	e033      	b.n	800b268 <WM__InsertWindowIntoList+0x9c>
 800b200:	4628      	mov	r0, r5
 800b202:	f006 f8dd 	bl	80113c0 <GUI_ALLOC_LockH>
 800b206:	ae04      	add	r6, sp, #16
 800b208:	f007 0708 	and.w	r7, r7, #8
 800b20c:	f846 0d04 	str.w	r0, [r6, #-4]!
 800b210:	b977      	cbnz	r7, 800b230 <WM__InsertWindowIntoList+0x64>
 800b212:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b214:	071a      	lsls	r2, r3, #28
 800b216:	d50b      	bpl.n	800b230 <WM__InsertWindowIntoList+0x64>
 800b218:	9b01      	ldr	r3, [sp, #4]
 800b21a:	621d      	str	r5, [r3, #32]
 800b21c:	9b02      	ldr	r3, [sp, #8]
 800b21e:	a801      	add	r0, sp, #4
 800b220:	61dc      	str	r4, [r3, #28]
 800b222:	f006 f8db 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b226:	a802      	add	r0, sp, #8
 800b228:	f006 f8d8 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b22c:	4630      	mov	r0, r6
 800b22e:	e01b      	b.n	800b268 <WM__InsertWindowIntoList+0x9c>
 800b230:	a802      	add	r0, sp, #8
 800b232:	f006 f8d3 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b236:	4630      	mov	r0, r6
 800b238:	f006 f8d0 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b23c:	4628      	mov	r0, r5
 800b23e:	f006 f8b5 	bl	80113ac <GUI_ALLOC_h2p>
 800b242:	9003      	str	r0, [sp, #12]
 800b244:	9b03      	ldr	r3, [sp, #12]
 800b246:	6a1d      	ldr	r5, [r3, #32]
 800b248:	b90d      	cbnz	r5, 800b24e <WM__InsertWindowIntoList+0x82>
 800b24a:	621c      	str	r4, [r3, #32]
 800b24c:	e00b      	b.n	800b266 <WM__InsertWindowIntoList+0x9a>
 800b24e:	4628      	mov	r0, r5
 800b250:	f006 f8ac 	bl	80113ac <GUI_ALLOC_h2p>
 800b254:	2f00      	cmp	r7, #0
 800b256:	d1f4      	bne.n	800b242 <WM__InsertWindowIntoList+0x76>
 800b258:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b25a:	071b      	lsls	r3, r3, #28
 800b25c:	d5f1      	bpl.n	800b242 <WM__InsertWindowIntoList+0x76>
 800b25e:	9b03      	ldr	r3, [sp, #12]
 800b260:	621c      	str	r4, [r3, #32]
 800b262:	9b01      	ldr	r3, [sp, #4]
 800b264:	621d      	str	r5, [r3, #32]
 800b266:	a801      	add	r0, sp, #4
 800b268:	f006 f8b8 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b26c:	b005      	add	sp, #20
 800b26e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b270 <WM__RemoveWindowFromList>:
 800b270:	b570      	push	{r4, r5, r6, lr}
 800b272:	4604      	mov	r4, r0
 800b274:	f006 f89a 	bl	80113ac <GUI_ALLOC_h2p>
 800b278:	4605      	mov	r5, r0
 800b27a:	6980      	ldr	r0, [r0, #24]
 800b27c:	b1a8      	cbz	r0, 800b2aa <WM__RemoveWindowFromList+0x3a>
 800b27e:	f006 f895 	bl	80113ac <GUI_ALLOC_h2p>
 800b282:	69c3      	ldr	r3, [r0, #28]
 800b284:	42a3      	cmp	r3, r4
 800b286:	4606      	mov	r6, r0
 800b288:	d105      	bne.n	800b296 <WM__RemoveWindowFromList+0x26>
 800b28a:	4618      	mov	r0, r3
 800b28c:	f006 f88e 	bl	80113ac <GUI_ALLOC_h2p>
 800b290:	6a03      	ldr	r3, [r0, #32]
 800b292:	61f3      	str	r3, [r6, #28]
 800b294:	bd70      	pop	{r4, r5, r6, pc}
 800b296:	b143      	cbz	r3, 800b2aa <WM__RemoveWindowFromList+0x3a>
 800b298:	4618      	mov	r0, r3
 800b29a:	f006 f887 	bl	80113ac <GUI_ALLOC_h2p>
 800b29e:	6a03      	ldr	r3, [r0, #32]
 800b2a0:	42a3      	cmp	r3, r4
 800b2a2:	d1f8      	bne.n	800b296 <WM__RemoveWindowFromList+0x26>
 800b2a4:	6a2b      	ldr	r3, [r5, #32]
 800b2a6:	6203      	str	r3, [r0, #32]
 800b2a8:	bd70      	pop	{r4, r5, r6, pc}
 800b2aa:	bd70      	pop	{r4, r5, r6, pc}

0800b2ac <WM__Client2Screen>:
 800b2ac:	4603      	mov	r3, r0
 800b2ae:	4608      	mov	r0, r1
 800b2b0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800b2b4:	f9b3 1000 	ldrsh.w	r1, [r3]
 800b2b8:	f004 bff4 	b.w	80102a4 <GUI_MoveRect>

0800b2bc <_SetClipRectUserIntersect>:
 800b2bc:	4b11      	ldr	r3, [pc, #68]	; (800b304 <_SetClipRectUserIntersect+0x48>)
 800b2be:	b530      	push	{r4, r5, lr}
 800b2c0:	681c      	ldr	r4, [r3, #0]
 800b2c2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b2c4:	b085      	sub	sp, #20
 800b2c6:	4605      	mov	r5, r0
 800b2c8:	b1ba      	cbz	r2, 800b2fa <_SetClipRectUserIntersect+0x3e>
 800b2ca:	6810      	ldr	r0, [r2, #0]
 800b2cc:	6851      	ldr	r1, [r2, #4]
 800b2ce:	ab02      	add	r3, sp, #8
 800b2d0:	c303      	stmia	r3!, {r0, r1}
 800b2d2:	4b0d      	ldr	r3, [pc, #52]	; (800b308 <_SetClipRectUserIntersect+0x4c>)
 800b2d4:	6818      	ldr	r0, [r3, #0]
 800b2d6:	b900      	cbnz	r0, 800b2da <_SetClipRectUserIntersect+0x1e>
 800b2d8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800b2da:	f006 f871 	bl	80113c0 <GUI_ALLOC_LockH>
 800b2de:	ac04      	add	r4, sp, #16
 800b2e0:	a902      	add	r1, sp, #8
 800b2e2:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800b2e6:	f7ff ffe1 	bl	800b2ac <WM__Client2Screen>
 800b2ea:	4620      	mov	r0, r4
 800b2ec:	f006 f876 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b2f0:	a802      	add	r0, sp, #8
 800b2f2:	4629      	mov	r1, r5
 800b2f4:	f003 fde0 	bl	800eeb8 <GUI__IntersectRect>
 800b2f8:	a802      	add	r0, sp, #8
 800b2fa:	f002 ffa3 	bl	800e244 <LCD_SetClipRectEx>
 800b2fe:	b005      	add	sp, #20
 800b300:	bd30      	pop	{r4, r5, pc}
 800b302:	bf00      	nop
 800b304:	2000016c 	.word	0x2000016c
 800b308:	20019950 	.word	0x20019950

0800b30c <WM__ActivateClipRect>:
 800b30c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b30e:	4b0e      	ldr	r3, [pc, #56]	; (800b348 <WM__ActivateClipRect+0x3c>)
 800b310:	681b      	ldr	r3, [r3, #0]
 800b312:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800b316:	b10a      	cbz	r2, 800b31c <WM__ActivateClipRect+0x10>
 800b318:	480c      	ldr	r0, [pc, #48]	; (800b34c <WM__ActivateClipRect+0x40>)
 800b31a:	e011      	b.n	800b340 <WM__ActivateClipRect+0x34>
 800b31c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b31e:	f006 f84f 	bl	80113c0 <GUI_ALLOC_LockH>
 800b322:	9001      	str	r0, [sp, #4]
 800b324:	c803      	ldmia	r0, {r0, r1}
 800b326:	ac02      	add	r4, sp, #8
 800b328:	e884 0003 	stmia.w	r4, {r0, r1}
 800b32c:	a801      	add	r0, sp, #4
 800b32e:	f006 f855 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b332:	4b07      	ldr	r3, [pc, #28]	; (800b350 <WM__ActivateClipRect+0x44>)
 800b334:	6819      	ldr	r1, [r3, #0]
 800b336:	b111      	cbz	r1, 800b33e <WM__ActivateClipRect+0x32>
 800b338:	4620      	mov	r0, r4
 800b33a:	f7ff ff19 	bl	800b170 <WM__ClipAtParentBorders>
 800b33e:	4620      	mov	r0, r4
 800b340:	f7ff ffbc 	bl	800b2bc <_SetClipRectUserIntersect>
 800b344:	b004      	add	sp, #16
 800b346:	bd10      	pop	{r4, pc}
 800b348:	2000016c 	.word	0x2000016c
 800b34c:	2001944c 	.word	0x2001944c
 800b350:	20019950 	.word	0x20019950

0800b354 <WM__IsWindow>:
 800b354:	4b06      	ldr	r3, [pc, #24]	; (800b370 <WM__IsWindow+0x1c>)
 800b356:	b510      	push	{r4, lr}
 800b358:	4604      	mov	r4, r0
 800b35a:	6818      	ldr	r0, [r3, #0]
 800b35c:	b128      	cbz	r0, 800b36a <WM__IsWindow+0x16>
 800b35e:	42a0      	cmp	r0, r4
 800b360:	d004      	beq.n	800b36c <WM__IsWindow+0x18>
 800b362:	f006 f823 	bl	80113ac <GUI_ALLOC_h2p>
 800b366:	6940      	ldr	r0, [r0, #20]
 800b368:	e7f8      	b.n	800b35c <WM__IsWindow+0x8>
 800b36a:	bd10      	pop	{r4, pc}
 800b36c:	2001      	movs	r0, #1
 800b36e:	bd10      	pop	{r4, pc}
 800b370:	20019970 	.word	0x20019970

0800b374 <WM__InvalidateDrawAndDescs>:
 800b374:	b513      	push	{r0, r1, r4, lr}
 800b376:	4604      	mov	r4, r0
 800b378:	b300      	cbz	r0, 800b3bc <WM__InvalidateDrawAndDescs+0x48>
 800b37a:	f006 f821 	bl	80113c0 <GUI_ALLOC_LockH>
 800b37e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800b380:	9001      	str	r0, [sp, #4]
 800b382:	0793      	lsls	r3, r2, #30
 800b384:	d517      	bpl.n	800b3b6 <WM__InvalidateDrawAndDescs+0x42>
 800b386:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b388:	b140      	cbz	r0, 800b39c <WM__InvalidateDrawAndDescs+0x28>
 800b38a:	4b0d      	ldr	r3, [pc, #52]	; (800b3c0 <WM__InvalidateDrawAndDescs+0x4c>)
 800b38c:	681b      	ldr	r3, [r3, #0]
 800b38e:	42a3      	cmp	r3, r4
 800b390:	d004      	beq.n	800b39c <WM__InvalidateDrawAndDescs+0x28>
 800b392:	f001 fdd7 	bl	800cf44 <GUI_MEMDEV_Delete>
 800b396:	9b01      	ldr	r3, [sp, #4]
 800b398:	2200      	movs	r2, #0
 800b39a:	625a      	str	r2, [r3, #36]	; 0x24
 800b39c:	4620      	mov	r0, r4
 800b39e:	f7ff fb9b 	bl	800aad8 <WM_GetFirstChild>
 800b3a2:	4604      	mov	r4, r0
 800b3a4:	b13c      	cbz	r4, 800b3b6 <WM__InvalidateDrawAndDescs+0x42>
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	f7ff ffe4 	bl	800b374 <WM__InvalidateDrawAndDescs>
 800b3ac:	4620      	mov	r0, r4
 800b3ae:	f005 fffd 	bl	80113ac <GUI_ALLOC_h2p>
 800b3b2:	6a04      	ldr	r4, [r0, #32]
 800b3b4:	e7f6      	b.n	800b3a4 <WM__InvalidateDrawAndDescs+0x30>
 800b3b6:	a801      	add	r0, sp, #4
 800b3b8:	f006 f810 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b3bc:	b002      	add	sp, #8
 800b3be:	bd10      	pop	{r4, pc}
 800b3c0:	20019998 	.word	0x20019998

0800b3c4 <WM__RectIsNZ>:
 800b3c4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800b3c8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b3cc:	429a      	cmp	r2, r3
 800b3ce:	dc08      	bgt.n	800b3e2 <WM__RectIsNZ+0x1e>
 800b3d0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b3d4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800b3d8:	429a      	cmp	r2, r3
 800b3da:	bfcc      	ite	gt
 800b3dc:	2000      	movgt	r0, #0
 800b3de:	2001      	movle	r0, #1
 800b3e0:	4770      	bx	lr
 800b3e2:	2000      	movs	r0, #0
 800b3e4:	4770      	bx	lr
	...

0800b3e8 <_Invalidate1Abs>:
 800b3e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b3ea:	b085      	sub	sp, #20
 800b3ec:	4606      	mov	r6, r0
 800b3ee:	460d      	mov	r5, r1
 800b3f0:	4617      	mov	r7, r2
 800b3f2:	f005 ffdb 	bl	80113ac <GUI_ALLOC_h2p>
 800b3f6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b3f8:	9001      	str	r0, [sp, #4]
 800b3fa:	07a3      	lsls	r3, r4, #30
 800b3fc:	d534      	bpl.n	800b468 <_Invalidate1Abs+0x80>
 800b3fe:	4628      	mov	r0, r5
 800b400:	f7ff ffe0 	bl	800b3c4 <WM__RectIsNZ>
 800b404:	2800      	cmp	r0, #0
 800b406:	d02f      	beq.n	800b468 <_Invalidate1Abs+0x80>
 800b408:	f640 0301 	movw	r3, #2049	; 0x801
 800b40c:	4023      	ands	r3, r4
 800b40e:	2b01      	cmp	r3, #1
 800b410:	d02a      	beq.n	800b468 <_Invalidate1Abs+0x80>
 800b412:	4630      	mov	r0, r6
 800b414:	f005 ffd4 	bl	80113c0 <GUI_ALLOC_LockH>
 800b418:	ac02      	add	r4, sp, #8
 800b41a:	4602      	mov	r2, r0
 800b41c:	9001      	str	r0, [sp, #4]
 800b41e:	4629      	mov	r1, r5
 800b420:	4620      	mov	r0, r4
 800b422:	f003 fd17 	bl	800ee54 <GUI__IntersectRects>
 800b426:	4620      	mov	r0, r4
 800b428:	f7ff ffcc 	bl	800b3c4 <WM__RectIsNZ>
 800b42c:	b1c8      	cbz	r0, 800b462 <_Invalidate1Abs+0x7a>
 800b42e:	9b01      	ldr	r3, [sp, #4]
 800b430:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800b432:	f244 0120 	movw	r1, #16416	; 0x4020
 800b436:	4031      	ands	r1, r6
 800b438:	f103 0508 	add.w	r5, r3, #8
 800b43c:	b129      	cbz	r1, 800b44a <_Invalidate1Abs+0x62>
 800b43e:	4628      	mov	r0, r5
 800b440:	4629      	mov	r1, r5
 800b442:	4622      	mov	r2, r4
 800b444:	f004 ff3e 	bl	80102c4 <GUI_MergeRect>
 800b448:	e00b      	b.n	800b462 <_Invalidate1Abs+0x7a>
 800b44a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800b44e:	433e      	orrs	r6, r7
 800b450:	e885 0003 	stmia.w	r5, {r0, r1}
 800b454:	629e      	str	r6, [r3, #40]	; 0x28
 800b456:	4b05      	ldr	r3, [pc, #20]	; (800b46c <_Invalidate1Abs+0x84>)
 800b458:	881a      	ldrh	r2, [r3, #0]
 800b45a:	3201      	adds	r2, #1
 800b45c:	801a      	strh	r2, [r3, #0]
 800b45e:	f003 ffab 	bl	800f3b8 <GUI_SignalEvent>
 800b462:	a801      	add	r0, sp, #4
 800b464:	f005 ffba 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b468:	b005      	add	sp, #20
 800b46a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b46c:	2001996c 	.word	0x2001996c

0800b470 <WM__Invalidate1Abs>:
 800b470:	2220      	movs	r2, #32
 800b472:	f7ff bfb9 	b.w	800b3e8 <_Invalidate1Abs>

0800b476 <WM_InvalidateWindowAndDescsEx>:
 800b476:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b478:	460f      	mov	r7, r1
 800b47a:	b085      	sub	sp, #20
 800b47c:	4615      	mov	r5, r2
 800b47e:	4606      	mov	r6, r0
 800b480:	b348      	cbz	r0, 800b4d6 <WM_InvalidateWindowAndDescsEx+0x60>
 800b482:	f005 ff9d 	bl	80113c0 <GUI_ALLOC_LockH>
 800b486:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b488:	ac04      	add	r4, sp, #16
 800b48a:	079b      	lsls	r3, r3, #30
 800b48c:	4602      	mov	r2, r0
 800b48e:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800b492:	d403      	bmi.n	800b49c <WM_InvalidateWindowAndDescsEx+0x26>
 800b494:	4620      	mov	r0, r4
 800b496:	f005 ffa1 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b49a:	e01c      	b.n	800b4d6 <WM_InvalidateWindowAndDescsEx+0x60>
 800b49c:	a802      	add	r0, sp, #8
 800b49e:	4639      	mov	r1, r7
 800b4a0:	f003 fcd8 	bl	800ee54 <GUI__IntersectRects>
 800b4a4:	2800      	cmp	r0, #0
 800b4a6:	d0f5      	beq.n	800b494 <WM_InvalidateWindowAndDescsEx+0x1e>
 800b4a8:	4620      	mov	r0, r4
 800b4aa:	f005 ff97 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b4ae:	4630      	mov	r0, r6
 800b4b0:	a902      	add	r1, sp, #8
 800b4b2:	462a      	mov	r2, r5
 800b4b4:	f7ff ff98 	bl	800b3e8 <_Invalidate1Abs>
 800b4b8:	4630      	mov	r0, r6
 800b4ba:	f7ff fb0d 	bl	800aad8 <WM_GetFirstChild>
 800b4be:	4604      	mov	r4, r0
 800b4c0:	b14c      	cbz	r4, 800b4d6 <WM_InvalidateWindowAndDescsEx+0x60>
 800b4c2:	4620      	mov	r0, r4
 800b4c4:	a902      	add	r1, sp, #8
 800b4c6:	462a      	mov	r2, r5
 800b4c8:	f7ff ffd5 	bl	800b476 <WM_InvalidateWindowAndDescsEx>
 800b4cc:	4620      	mov	r0, r4
 800b4ce:	f005 ff6d 	bl	80113ac <GUI_ALLOC_h2p>
 800b4d2:	6a04      	ldr	r4, [r0, #32]
 800b4d4:	e7f4      	b.n	800b4c0 <WM_InvalidateWindowAndDescsEx+0x4a>
 800b4d6:	b005      	add	sp, #20
 800b4d8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b4da <WM__InvalidateRect>:
 800b4da:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b4de:	4680      	mov	r8, r0
 800b4e0:	4617      	mov	r7, r2
 800b4e2:	461d      	mov	r5, r3
 800b4e4:	460c      	mov	r4, r1
 800b4e6:	2900      	cmp	r1, #0
 800b4e8:	d030      	beq.n	800b54c <WM__InvalidateRect+0x72>
 800b4ea:	4608      	mov	r0, r1
 800b4ec:	f005 ff68 	bl	80113c0 <GUI_ALLOC_LockH>
 800b4f0:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800b4f2:	9001      	str	r0, [sp, #4]
 800b4f4:	07b3      	lsls	r3, r6, #30
 800b4f6:	4602      	mov	r2, r0
 800b4f8:	d525      	bpl.n	800b546 <WM__InvalidateRect+0x6c>
 800b4fa:	a802      	add	r0, sp, #8
 800b4fc:	4641      	mov	r1, r8
 800b4fe:	f003 fca9 	bl	800ee54 <GUI__IntersectRects>
 800b502:	b300      	cbz	r0, 800b546 <WM__InvalidateRect+0x6c>
 800b504:	f640 0301 	movw	r3, #2049	; 0x801
 800b508:	4033      	ands	r3, r6
 800b50a:	2b01      	cmp	r3, #1
 800b50c:	d107      	bne.n	800b51e <WM__InvalidateRect+0x44>
 800b50e:	9b01      	ldr	r3, [sp, #4]
 800b510:	a802      	add	r0, sp, #8
 800b512:	6999      	ldr	r1, [r3, #24]
 800b514:	6a1a      	ldr	r2, [r3, #32]
 800b516:	462b      	mov	r3, r5
 800b518:	f7ff ffdf 	bl	800b4da <WM__InvalidateRect>
 800b51c:	e004      	b.n	800b528 <WM__InvalidateRect+0x4e>
 800b51e:	4620      	mov	r0, r4
 800b520:	a902      	add	r1, sp, #8
 800b522:	462a      	mov	r2, r5
 800b524:	f7ff ff60 	bl	800b3e8 <_Invalidate1Abs>
 800b528:	9b01      	ldr	r3, [sp, #4]
 800b52a:	69dc      	ldr	r4, [r3, #28]
 800b52c:	b15c      	cbz	r4, 800b546 <WM__InvalidateRect+0x6c>
 800b52e:	42bc      	cmp	r4, r7
 800b530:	d009      	beq.n	800b546 <WM__InvalidateRect+0x6c>
 800b532:	4620      	mov	r0, r4
 800b534:	a902      	add	r1, sp, #8
 800b536:	462a      	mov	r2, r5
 800b538:	f7ff ff9d 	bl	800b476 <WM_InvalidateWindowAndDescsEx>
 800b53c:	4620      	mov	r0, r4
 800b53e:	f005 ff35 	bl	80113ac <GUI_ALLOC_h2p>
 800b542:	6a04      	ldr	r4, [r0, #32]
 800b544:	e7f2      	b.n	800b52c <WM__InvalidateRect+0x52>
 800b546:	a801      	add	r0, sp, #4
 800b548:	f005 ff48 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b54c:	b004      	add	sp, #16
 800b54e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b552 <WM__InvalidateParent>:
 800b552:	b570      	push	{r4, r5, r6, lr}
 800b554:	4605      	mov	r5, r0
 800b556:	4608      	mov	r0, r1
 800b558:	460c      	mov	r4, r1
 800b55a:	4616      	mov	r6, r2
 800b55c:	f005 ff26 	bl	80113ac <GUI_ALLOC_h2p>
 800b560:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b562:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800b566:	4628      	mov	r0, r5
 800b568:	4621      	mov	r1, r4
 800b56a:	4632      	mov	r2, r6
 800b56c:	bf0c      	ite	eq
 800b56e:	2320      	moveq	r3, #32
 800b570:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 800b574:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b578:	f7ff bfaf 	b.w	800b4da <WM__InvalidateRect>

0800b57c <WM__InvalidateRectEx>:
 800b57c:	2320      	movs	r3, #32
 800b57e:	f7ff bfac 	b.w	800b4da <WM__InvalidateRect>

0800b582 <WM__DetachWindow>:
 800b582:	b513      	push	{r0, r1, r4, lr}
 800b584:	4604      	mov	r4, r0
 800b586:	f005 ff1b 	bl	80113c0 <GUI_ALLOC_LockH>
 800b58a:	6981      	ldr	r1, [r0, #24]
 800b58c:	9001      	str	r0, [sp, #4]
 800b58e:	b141      	cbz	r1, 800b5a2 <WM__DetachWindow+0x20>
 800b590:	6a02      	ldr	r2, [r0, #32]
 800b592:	f7ff fff3 	bl	800b57c <WM__InvalidateRectEx>
 800b596:	4620      	mov	r0, r4
 800b598:	f7ff fe6a 	bl	800b270 <WM__RemoveWindowFromList>
 800b59c:	9b01      	ldr	r3, [sp, #4]
 800b59e:	2200      	movs	r2, #0
 800b5a0:	619a      	str	r2, [r3, #24]
 800b5a2:	a801      	add	r0, sp, #4
 800b5a4:	f005 ff1a 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b5a8:	b002      	add	sp, #8
 800b5aa:	bd10      	pop	{r4, pc}

0800b5ac <WM_SendMessage>:
 800b5ac:	b108      	cbz	r0, 800b5b2 <WM_SendMessage+0x6>
 800b5ae:	f008 b955 	b.w	801385c <WM__SendMessage>
 800b5b2:	4770      	bx	lr

0800b5b4 <WM__SendMsgNoData>:
 800b5b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b5b6:	ab04      	add	r3, sp, #16
 800b5b8:	9001      	str	r0, [sp, #4]
 800b5ba:	f843 1d10 	str.w	r1, [r3, #-16]!
 800b5be:	4669      	mov	r1, sp
 800b5c0:	f008 f94c 	bl	801385c <WM__SendMessage>
 800b5c4:	b005      	add	sp, #20
 800b5c6:	f85d fb04 	ldr.w	pc, [sp], #4

0800b5ca <WM__GetClientRectWin>:
 800b5ca:	2300      	movs	r3, #0
 800b5cc:	800b      	strh	r3, [r1, #0]
 800b5ce:	8882      	ldrh	r2, [r0, #4]
 800b5d0:	804b      	strh	r3, [r1, #2]
 800b5d2:	8803      	ldrh	r3, [r0, #0]
 800b5d4:	1ad3      	subs	r3, r2, r3
 800b5d6:	808b      	strh	r3, [r1, #4]
 800b5d8:	88c2      	ldrh	r2, [r0, #6]
 800b5da:	8843      	ldrh	r3, [r0, #2]
 800b5dc:	1ad3      	subs	r3, r2, r3
 800b5de:	80cb      	strh	r3, [r1, #6]
 800b5e0:	4770      	bx	lr

0800b5e2 <WM_InvalidateRect>:
 800b5e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b5e4:	460f      	mov	r7, r1
 800b5e6:	b087      	sub	sp, #28
 800b5e8:	4605      	mov	r5, r0
 800b5ea:	2800      	cmp	r0, #0
 800b5ec:	d033      	beq.n	800b656 <WM_InvalidateRect+0x74>
 800b5ee:	f005 fee7 	bl	80113c0 <GUI_ALLOC_LockH>
 800b5f2:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800b5f4:	9001      	str	r0, [sp, #4]
 800b5f6:	07b2      	lsls	r2, r6, #30
 800b5f8:	d52a      	bpl.n	800b650 <WM_InvalidateRect+0x6e>
 800b5fa:	c803      	ldmia	r0, {r0, r1}
 800b5fc:	ac04      	add	r4, sp, #16
 800b5fe:	03f3      	lsls	r3, r6, #15
 800b600:	e884 0003 	stmia.w	r4, {r0, r1}
 800b604:	d502      	bpl.n	800b60c <WM_InvalidateRect+0x2a>
 800b606:	4628      	mov	r0, r5
 800b608:	f7ff feb4 	bl	800b374 <WM__InvalidateDrawAndDescs>
 800b60c:	b15f      	cbz	r7, 800b626 <WM_InvalidateRect+0x44>
 800b60e:	6838      	ldr	r0, [r7, #0]
 800b610:	6879      	ldr	r1, [r7, #4]
 800b612:	ab02      	add	r3, sp, #8
 800b614:	c303      	stmia	r3!, {r0, r1}
 800b616:	9801      	ldr	r0, [sp, #4]
 800b618:	a902      	add	r1, sp, #8
 800b61a:	f7ff fe47 	bl	800b2ac <WM__Client2Screen>
 800b61e:	4620      	mov	r0, r4
 800b620:	a902      	add	r1, sp, #8
 800b622:	f003 fc49 	bl	800eeb8 <GUI__IntersectRect>
 800b626:	4620      	mov	r0, r4
 800b628:	4629      	mov	r1, r5
 800b62a:	f7ff fda1 	bl	800b170 <WM__ClipAtParentBorders>
 800b62e:	b178      	cbz	r0, 800b650 <WM_InvalidateRect+0x6e>
 800b630:	f640 0301 	movw	r3, #2049	; 0x801
 800b634:	4033      	ands	r3, r6
 800b636:	2b01      	cmp	r3, #1
 800b638:	d106      	bne.n	800b648 <WM_InvalidateRect+0x66>
 800b63a:	9b01      	ldr	r3, [sp, #4]
 800b63c:	4620      	mov	r0, r4
 800b63e:	6999      	ldr	r1, [r3, #24]
 800b640:	6a1a      	ldr	r2, [r3, #32]
 800b642:	f7ff ff9b 	bl	800b57c <WM__InvalidateRectEx>
 800b646:	e003      	b.n	800b650 <WM_InvalidateRect+0x6e>
 800b648:	4628      	mov	r0, r5
 800b64a:	4621      	mov	r1, r4
 800b64c:	f7ff ff10 	bl	800b470 <WM__Invalidate1Abs>
 800b650:	a801      	add	r0, sp, #4
 800b652:	f005 fec3 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b656:	b007      	add	sp, #28
 800b658:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b65a <WM_InvalidateWindow>:
 800b65a:	2100      	movs	r1, #0
 800b65c:	f7ff bfc1 	b.w	800b5e2 <WM_InvalidateRect>

0800b660 <WM__GetTopLevelLayer>:
 800b660:	b510      	push	{r4, lr}
 800b662:	4604      	mov	r4, r0
 800b664:	f005 fea2 	bl	80113ac <GUI_ALLOC_h2p>
 800b668:	6980      	ldr	r0, [r0, #24]
 800b66a:	2800      	cmp	r0, #0
 800b66c:	d1f9      	bne.n	800b662 <WM__GetTopLevelLayer+0x2>
 800b66e:	4b05      	ldr	r3, [pc, #20]	; (800b684 <WM__GetTopLevelLayer+0x24>)
 800b670:	681a      	ldr	r2, [r3, #0]
 800b672:	4294      	cmp	r4, r2
 800b674:	d005      	beq.n	800b682 <WM__GetTopLevelLayer+0x22>
 800b676:	6858      	ldr	r0, [r3, #4]
 800b678:	4284      	cmp	r4, r0
 800b67a:	bf14      	ite	ne
 800b67c:	f04f 30ff 	movne.w	r0, #4294967295
 800b680:	2001      	moveq	r0, #1
 800b682:	bd10      	pop	{r4, pc}
 800b684:	20019954 	.word	0x20019954

0800b688 <WM__SelectTopLevelLayer>:
 800b688:	b508      	push	{r3, lr}
 800b68a:	f7ff ffe9 	bl	800b660 <WM__GetTopLevelLayer>
 800b68e:	2800      	cmp	r0, #0
 800b690:	db03      	blt.n	800b69a <WM__SelectTopLevelLayer+0x12>
 800b692:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b696:	f004 bccb 	b.w	8010030 <GUI_SelectLayer>
 800b69a:	bd08      	pop	{r3, pc}

0800b69c <WM_SelectWindow>:
 800b69c:	4a0d      	ldr	r2, [pc, #52]	; (800b6d4 <WM_SelectWindow+0x38>)
 800b69e:	6813      	ldr	r3, [r2, #0]
 800b6a0:	b570      	push	{r4, r5, r6, lr}
 800b6a2:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 800b6a4:	4604      	mov	r4, r0
 800b6a6:	4616      	mov	r6, r2
 800b6a8:	b908      	cbnz	r0, 800b6ae <WM_SelectWindow+0x12>
 800b6aa:	4a0b      	ldr	r2, [pc, #44]	; (800b6d8 <WM_SelectWindow+0x3c>)
 800b6ac:	6814      	ldr	r4, [r2, #0]
 800b6ae:	649c      	str	r4, [r3, #72]	; 0x48
 800b6b0:	4620      	mov	r0, r4
 800b6b2:	f7ff ffe9 	bl	800b688 <WM__SelectTopLevelLayer>
 800b6b6:	f003 f9ed 	bl	800ea94 <LCD_SetClipRectMax>
 800b6ba:	4620      	mov	r0, r4
 800b6bc:	f005 fe76 	bl	80113ac <GUI_ALLOC_h2p>
 800b6c0:	6833      	ldr	r3, [r6, #0]
 800b6c2:	f9b0 1000 	ldrsh.w	r1, [r0]
 800b6c6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b6ca:	64d9      	str	r1, [r3, #76]	; 0x4c
 800b6cc:	651a      	str	r2, [r3, #80]	; 0x50
 800b6ce:	4628      	mov	r0, r5
 800b6d0:	bd70      	pop	{r4, r5, r6, pc}
 800b6d2:	bf00      	nop
 800b6d4:	2000016c 	.word	0x2000016c
 800b6d8:	20019970 	.word	0x20019970

0800b6dc <WM_CreateWindowAsChild>:
 800b6dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6e0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800b6e2:	469b      	mov	fp, r3
 800b6e4:	4b4b      	ldr	r3, [pc, #300]	; (800b814 <WM_CreateWindowAsChild+0x138>)
 800b6e6:	4607      	mov	r7, r0
 800b6e8:	4688      	mov	r8, r1
 800b6ea:	4692      	mov	sl, r2
 800b6ec:	681e      	ldr	r6, [r3, #0]
 800b6ee:	bb65      	cbnz	r5, 800b74a <WM_CreateWindowAsChild+0x6e>
 800b6f0:	4b49      	ldr	r3, [pc, #292]	; (800b818 <WM_CreateWindowAsChild+0x13c>)
 800b6f2:	881b      	ldrh	r3, [r3, #0]
 800b6f4:	b363      	cbz	r3, 800b750 <WM_CreateWindowAsChild+0x74>
 800b6f6:	4b49      	ldr	r3, [pc, #292]	; (800b81c <WM_CreateWindowAsChild+0x140>)
 800b6f8:	681b      	ldr	r3, [r3, #0]
 800b6fa:	7c5a      	ldrb	r2, [r3, #17]
 800b6fc:	4b48      	ldr	r3, [pc, #288]	; (800b820 <WM_CreateWindowAsChild+0x144>)
 800b6fe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800b702:	1c5a      	adds	r2, r3, #1
 800b704:	d024      	beq.n	800b750 <WM_CreateWindowAsChild+0x74>
 800b706:	b31b      	cbz	r3, 800b750 <WM_CreateWindowAsChild+0x74>
 800b708:	461d      	mov	r5, r3
 800b70a:	4628      	mov	r0, r5
 800b70c:	f005 fe58 	bl	80113c0 <GUI_ALLOC_LockH>
 800b710:	f9b0 2000 	ldrsh.w	r2, [r0]
 800b714:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800b718:	9001      	str	r0, [sp, #4]
 800b71a:	4417      	add	r7, r2
 800b71c:	4498      	add	r8, r3
 800b71e:	f1ba 0f00 	cmp.w	sl, #0
 800b722:	d105      	bne.n	800b730 <WM_CreateWindowAsChild+0x54>
 800b724:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 800b728:	ebc2 0a0a 	rsb	sl, r2, sl
 800b72c:	f10a 0a01 	add.w	sl, sl, #1
 800b730:	f1bb 0f00 	cmp.w	fp, #0
 800b734:	d105      	bne.n	800b742 <WM_CreateWindowAsChild+0x66>
 800b736:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 800b73a:	ebc3 0b0b 	rsb	fp, r3, fp
 800b73e:	f10b 0b01 	add.w	fp, fp, #1
 800b742:	a801      	add	r0, sp, #4
 800b744:	f005 fe4a 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b748:	e002      	b.n	800b750 <WM_CreateWindowAsChild+0x74>
 800b74a:	1c6b      	adds	r3, r5, #1
 800b74c:	d1dd      	bne.n	800b70a <WM_CreateWindowAsChild+0x2e>
 800b74e:	2500      	movs	r5, #0
 800b750:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b752:	302c      	adds	r0, #44	; 0x2c
 800b754:	f006 f8a1 	bl	801189a <GUI_ALLOC_AllocZero>
 800b758:	4604      	mov	r4, r0
 800b75a:	2800      	cmp	r0, #0
 800b75c:	d056      	beq.n	800b80c <WM_CreateWindowAsChild+0x130>
 800b75e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b760:	431e      	orrs	r6, r3
 800b762:	4b2d      	ldr	r3, [pc, #180]	; (800b818 <WM_CreateWindowAsChild+0x13c>)
 800b764:	881a      	ldrh	r2, [r3, #0]
 800b766:	3201      	adds	r2, #1
 800b768:	801a      	strh	r2, [r3, #0]
 800b76a:	f005 fe29 	bl	80113c0 <GUI_ALLOC_LockH>
 800b76e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b770:	6103      	str	r3, [r0, #16]
 800b772:	f10d 0908 	add.w	r9, sp, #8
 800b776:	4b2b      	ldr	r3, [pc, #172]	; (800b824 <WM_CreateWindowAsChild+0x148>)
 800b778:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800b77a:	f849 0d08 	str.w	r0, [r9, #-8]!
 800b77e:	4033      	ands	r3, r6
 800b780:	8007      	strh	r7, [r0, #0]
 800b782:	f8a0 8002 	strh.w	r8, [r0, #2]
 800b786:	4457      	add	r7, sl
 800b788:	44d8      	add	r8, fp
 800b78a:	4313      	orrs	r3, r2
 800b78c:	3f01      	subs	r7, #1
 800b78e:	f108 38ff 	add.w	r8, r8, #4294967295
 800b792:	6283      	str	r3, [r0, #40]	; 0x28
 800b794:	8087      	strh	r7, [r0, #4]
 800b796:	f8a0 8006 	strh.w	r8, [r0, #6]
 800b79a:	4668      	mov	r0, sp
 800b79c:	f005 fe1e 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b7a0:	4b21      	ldr	r3, [pc, #132]	; (800b828 <WM_CreateWindowAsChild+0x14c>)
 800b7a2:	6818      	ldr	r0, [r3, #0]
 800b7a4:	b148      	cbz	r0, 800b7ba <WM_CreateWindowAsChild+0xde>
 800b7a6:	f005 fe01 	bl	80113ac <GUI_ALLOC_h2p>
 800b7aa:	4607      	mov	r7, r0
 800b7ac:	4620      	mov	r0, r4
 800b7ae:	f005 fdfd 	bl	80113ac <GUI_ALLOC_h2p>
 800b7b2:	697b      	ldr	r3, [r7, #20]
 800b7b4:	6143      	str	r3, [r0, #20]
 800b7b6:	617c      	str	r4, [r7, #20]
 800b7b8:	e000      	b.n	800b7bc <WM_CreateWindowAsChild+0xe0>
 800b7ba:	601c      	str	r4, [r3, #0]
 800b7bc:	4629      	mov	r1, r5
 800b7be:	4620      	mov	r0, r4
 800b7c0:	f7ff fd04 	bl	800b1cc <WM__InsertWindowIntoList>
 800b7c4:	06b5      	lsls	r5, r6, #26
 800b7c6:	d502      	bpl.n	800b7ce <WM_CreateWindowAsChild+0xf2>
 800b7c8:	4620      	mov	r0, r4
 800b7ca:	f7ff ff67 	bl	800b69c <WM_SelectWindow>
 800b7ce:	07f0      	lsls	r0, r6, #31
 800b7d0:	d503      	bpl.n	800b7da <WM_CreateWindowAsChild+0xfe>
 800b7d2:	4b16      	ldr	r3, [pc, #88]	; (800b82c <WM_CreateWindowAsChild+0x150>)
 800b7d4:	681a      	ldr	r2, [r3, #0]
 800b7d6:	3201      	adds	r2, #1
 800b7d8:	601a      	str	r2, [r3, #0]
 800b7da:	0671      	lsls	r1, r6, #25
 800b7dc:	d502      	bpl.n	800b7e4 <WM_CreateWindowAsChild+0x108>
 800b7de:	4620      	mov	r0, r4
 800b7e0:	f008 fb6c 	bl	8013ebc <WM_BringToBottom>
 800b7e4:	07b2      	lsls	r2, r6, #30
 800b7e6:	d50d      	bpl.n	800b804 <WM_CreateWindowAsChild+0x128>
 800b7e8:	4620      	mov	r0, r4
 800b7ea:	f005 fde9 	bl	80113c0 <GUI_ALLOC_LockH>
 800b7ee:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b7f0:	9000      	str	r0, [sp, #0]
 800b7f2:	f043 0302 	orr.w	r3, r3, #2
 800b7f6:	6283      	str	r3, [r0, #40]	; 0x28
 800b7f8:	4668      	mov	r0, sp
 800b7fa:	f005 fdef 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b7fe:	4620      	mov	r0, r4
 800b800:	f7ff ff2b 	bl	800b65a <WM_InvalidateWindow>
 800b804:	4620      	mov	r0, r4
 800b806:	2101      	movs	r1, #1
 800b808:	f7ff fed4 	bl	800b5b4 <WM__SendMsgNoData>
 800b80c:	4620      	mov	r0, r4
 800b80e:	b003      	add	sp, #12
 800b810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b814:	2001997c 	.word	0x2001997c
 800b818:	2001994c 	.word	0x2001994c
 800b81c:	2000016c 	.word	0x2000016c
 800b820:	20019954 	.word	0x20019954
 800b824:	003f3f9f 	.word	0x003f3f9f
 800b828:	20019970 	.word	0x20019970
 800b82c:	2001999c 	.word	0x2001999c

0800b830 <WM_DeleteWindow>:
 800b830:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b832:	4604      	mov	r4, r0
 800b834:	2800      	cmp	r0, #0
 800b836:	d06e      	beq.n	800b916 <WM_DeleteWindow+0xe6>
 800b838:	f7ff fd8c 	bl	800b354 <WM__IsWindow>
 800b83c:	2800      	cmp	r0, #0
 800b83e:	d06a      	beq.n	800b916 <WM_DeleteWindow+0xe6>
 800b840:	4620      	mov	r0, r4
 800b842:	f7ff ff0d 	bl	800b660 <WM__GetTopLevelLayer>
 800b846:	210b      	movs	r1, #11
 800b848:	4605      	mov	r5, r0
 800b84a:	4620      	mov	r0, r4
 800b84c:	f7ff feb2 	bl	800b5b4 <WM__SendMsgNoData>
 800b850:	4620      	mov	r0, r4
 800b852:	f7fe fce2 	bl	800a21a <WM__DeleteAssocTimer>
 800b856:	4620      	mov	r0, r4
 800b858:	f005 fdb2 	bl	80113c0 <GUI_ALLOC_LockH>
 800b85c:	9001      	str	r0, [sp, #4]
 800b85e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b860:	b108      	cbz	r0, 800b866 <WM_DeleteWindow+0x36>
 800b862:	f001 fb6f 	bl	800cf44 <GUI_MEMDEV_Delete>
 800b866:	4b2d      	ldr	r3, [pc, #180]	; (800b91c <WM_DeleteWindow+0xec>)
 800b868:	4a2d      	ldr	r2, [pc, #180]	; (800b920 <WM_DeleteWindow+0xf0>)
 800b86a:	2100      	movs	r1, #0
 800b86c:	6019      	str	r1, [r3, #0]
 800b86e:	4b2d      	ldr	r3, [pc, #180]	; (800b924 <WM_DeleteWindow+0xf4>)
 800b870:	681b      	ldr	r3, [r3, #0]
 800b872:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800b876:	42a0      	cmp	r0, r4
 800b878:	bf08      	it	eq
 800b87a:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800b87e:	4a2a      	ldr	r2, [pc, #168]	; (800b928 <WM_DeleteWindow+0xf8>)
 800b880:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800b884:	42a1      	cmp	r1, r4
 800b886:	bf04      	itt	eq
 800b888:	2100      	moveq	r1, #0
 800b88a:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800b88e:	4b27      	ldr	r3, [pc, #156]	; (800b92c <WM_DeleteWindow+0xfc>)
 800b890:	681b      	ldr	r3, [r3, #0]
 800b892:	b12b      	cbz	r3, 800b8a0 <WM_DeleteWindow+0x70>
 800b894:	685a      	ldr	r2, [r3, #4]
 800b896:	42a2      	cmp	r2, r4
 800b898:	bf04      	itt	eq
 800b89a:	2200      	moveq	r2, #0
 800b89c:	605a      	streq	r2, [r3, #4]
 800b89e:	e7f7      	b.n	800b890 <WM_DeleteWindow+0x60>
 800b8a0:	4620      	mov	r0, r4
 800b8a2:	2107      	movs	r1, #7
 800b8a4:	f7fe ff85 	bl	800a7b2 <WM_NotifyParent>
 800b8a8:	9e01      	ldr	r6, [sp, #4]
 800b8aa:	69f0      	ldr	r0, [r6, #28]
 800b8ac:	f7ff ffc0 	bl	800b830 <WM_DeleteWindow>
 800b8b0:	69f3      	ldr	r3, [r6, #28]
 800b8b2:	2b00      	cmp	r3, #0
 800b8b4:	d1f9      	bne.n	800b8aa <WM_DeleteWindow+0x7a>
 800b8b6:	4620      	mov	r0, r4
 800b8b8:	f7ff fe63 	bl	800b582 <WM__DetachWindow>
 800b8bc:	4b1c      	ldr	r3, [pc, #112]	; (800b930 <WM_DeleteWindow+0x100>)
 800b8be:	6818      	ldr	r0, [r3, #0]
 800b8c0:	b150      	cbz	r0, 800b8d8 <WM_DeleteWindow+0xa8>
 800b8c2:	f005 fd73 	bl	80113ac <GUI_ALLOC_h2p>
 800b8c6:	4606      	mov	r6, r0
 800b8c8:	6940      	ldr	r0, [r0, #20]
 800b8ca:	42a0      	cmp	r0, r4
 800b8cc:	d1f8      	bne.n	800b8c0 <WM_DeleteWindow+0x90>
 800b8ce:	4620      	mov	r0, r4
 800b8d0:	f005 fd6c 	bl	80113ac <GUI_ALLOC_h2p>
 800b8d4:	6943      	ldr	r3, [r0, #20]
 800b8d6:	6173      	str	r3, [r6, #20]
 800b8d8:	9b01      	ldr	r3, [sp, #4]
 800b8da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b8dc:	07da      	lsls	r2, r3, #31
 800b8de:	d503      	bpl.n	800b8e8 <WM_DeleteWindow+0xb8>
 800b8e0:	4a14      	ldr	r2, [pc, #80]	; (800b934 <WM_DeleteWindow+0x104>)
 800b8e2:	6811      	ldr	r1, [r2, #0]
 800b8e4:	3901      	subs	r1, #1
 800b8e6:	6011      	str	r1, [r2, #0]
 800b8e8:	069b      	lsls	r3, r3, #26
 800b8ea:	d503      	bpl.n	800b8f4 <WM_DeleteWindow+0xc4>
 800b8ec:	4b12      	ldr	r3, [pc, #72]	; (800b938 <WM_DeleteWindow+0x108>)
 800b8ee:	881a      	ldrh	r2, [r3, #0]
 800b8f0:	3a01      	subs	r2, #1
 800b8f2:	801a      	strh	r2, [r3, #0]
 800b8f4:	a801      	add	r0, sp, #4
 800b8f6:	f005 fd71 	bl	80113dc <GUI_ALLOC_UnlockH>
 800b8fa:	4b10      	ldr	r3, [pc, #64]	; (800b93c <WM_DeleteWindow+0x10c>)
 800b8fc:	881a      	ldrh	r2, [r3, #0]
 800b8fe:	4620      	mov	r0, r4
 800b900:	3a01      	subs	r2, #1
 800b902:	801a      	strh	r2, [r3, #0]
 800b904:	f005 fd96 	bl	8011434 <GUI_ALLOC_Free>
 800b908:	2d00      	cmp	r5, #0
 800b90a:	db04      	blt.n	800b916 <WM_DeleteWindow+0xe6>
 800b90c:	4b0c      	ldr	r3, [pc, #48]	; (800b940 <WM_DeleteWindow+0x110>)
 800b90e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800b912:	f7ff fec3 	bl	800b69c <WM_SelectWindow>
 800b916:	b002      	add	sp, #8
 800b918:	bd70      	pop	{r4, r5, r6, pc}
 800b91a:	bf00      	nop
 800b91c:	2001945c 	.word	0x2001945c
 800b920:	20019964 	.word	0x20019964
 800b924:	20019974 	.word	0x20019974
 800b928:	20019990 	.word	0x20019990
 800b92c:	20019988 	.word	0x20019988
 800b930:	20019970 	.word	0x20019970
 800b934:	2001999c 	.word	0x2001999c
 800b938:	2001996c 	.word	0x2001996c
 800b93c:	2001994c 	.word	0x2001994c
 800b940:	20019954 	.word	0x20019954

0800b944 <WM_GetActiveWindow>:
 800b944:	4b01      	ldr	r3, [pc, #4]	; (800b94c <WM_GetActiveWindow+0x8>)
 800b946:	681b      	ldr	r3, [r3, #0]
 800b948:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b94a:	4770      	bx	lr
 800b94c:	2000016c 	.word	0x2000016c

0800b950 <WM__GetNextIVR>:
 800b950:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b954:	4f5d      	ldr	r7, [pc, #372]	; (800bacc <WM__GetNextIVR+0x17c>)
 800b956:	683b      	ldr	r3, [r7, #0]
 800b958:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 800b95c:	2800      	cmp	r0, #0
 800b95e:	f000 80b2 	beq.w	800bac6 <WM__GetNextIVR+0x176>
 800b962:	4b5b      	ldr	r3, [pc, #364]	; (800bad0 <WM__GetNextIVR+0x180>)
 800b964:	695a      	ldr	r2, [r3, #20]
 800b966:	2a01      	cmp	r2, #1
 800b968:	461c      	mov	r4, r3
 800b96a:	dd03      	ble.n	800b974 <WM__GetNextIVR+0x24>
 800b96c:	3a01      	subs	r2, #1
 800b96e:	615a      	str	r2, [r3, #20]
 800b970:	2000      	movs	r0, #0
 800b972:	e0a8      	b.n	800bac6 <WM__GetNextIVR+0x176>
 800b974:	f104 0608 	add.w	r6, r4, #8
 800b978:	691b      	ldr	r3, [r3, #16]
 800b97a:	e896 0003 	ldmia.w	r6, {r0, r1}
 800b97e:	3301      	adds	r3, #1
 800b980:	ad02      	add	r5, sp, #8
 800b982:	6123      	str	r3, [r4, #16]
 800b984:	e885 0003 	stmia.w	r5, {r0, r1}
 800b988:	b923      	cbnz	r3, 800b994 <WM__GetNextIVR+0x44>
 800b98a:	8823      	ldrh	r3, [r4, #0]
 800b98c:	f8ad 3008 	strh.w	r3, [sp, #8]
 800b990:	8863      	ldrh	r3, [r4, #2]
 800b992:	e011      	b.n	800b9b8 <WM__GetNextIVR+0x68>
 800b994:	89a3      	ldrh	r3, [r4, #12]
 800b996:	8962      	ldrh	r2, [r4, #10]
 800b998:	f8ad 200a 	strh.w	r2, [sp, #10]
 800b99c:	3301      	adds	r3, #1
 800b99e:	b29b      	uxth	r3, r3
 800b9a0:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800b9a4:	f8ad 3008 	strh.w	r3, [sp, #8]
 800b9a8:	b21b      	sxth	r3, r3
 800b9aa:	429a      	cmp	r2, r3
 800b9ac:	da06      	bge.n	800b9bc <WM__GetNextIVR+0x6c>
 800b9ae:	8823      	ldrh	r3, [r4, #0]
 800b9b0:	f8ad 3008 	strh.w	r3, [sp, #8]
 800b9b4:	89e3      	ldrh	r3, [r4, #14]
 800b9b6:	3301      	adds	r3, #1
 800b9b8:	f8ad 300a 	strh.w	r3, [sp, #10]
 800b9bc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800b9c0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800b9c4:	f8df 8108 	ldr.w	r8, [pc, #264]	; 800bad0 <WM__GetNextIVR+0x180>
 800b9c8:	429a      	cmp	r2, r3
 800b9ca:	dd04      	ble.n	800b9d6 <WM__GetNextIVR+0x86>
 800b9cc:	6963      	ldr	r3, [r4, #20]
 800b9ce:	3b01      	subs	r3, #1
 800b9d0:	2000      	movs	r0, #0
 800b9d2:	6163      	str	r3, [r4, #20]
 800b9d4:	e077      	b.n	800bac6 <WM__GetNextIVR+0x176>
 800b9d6:	683b      	ldr	r3, [r7, #0]
 800b9d8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b9da:	f005 fcf1 	bl	80113c0 <GUI_ALLOC_LockH>
 800b9de:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800b9e2:	f9b8 3000 	ldrsh.w	r3, [r8]
 800b9e6:	9001      	str	r0, [sp, #4]
 800b9e8:	429a      	cmp	r2, r3
 800b9ea:	d11c      	bne.n	800ba26 <WM__GetNextIVR+0xd6>
 800b9ec:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800b9f0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800b9f4:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800b9f8:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b9fc:	4b33      	ldr	r3, [pc, #204]	; (800bacc <WM__GetNextIVR+0x17c>)
 800b9fe:	681b      	ldr	r3, [r3, #0]
 800ba00:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800ba02:	b15a      	cbz	r2, 800ba1c <WM__GetNextIVR+0xcc>
 800ba04:	4610      	mov	r0, r2
 800ba06:	f005 fcd1 	bl	80113ac <GUI_ALLOC_h2p>
 800ba0a:	4680      	mov	r8, r0
 800ba0c:	2200      	movs	r2, #0
 800ba0e:	6a00      	ldr	r0, [r0, #32]
 800ba10:	4629      	mov	r1, r5
 800ba12:	f7ff f9c1 	bl	800ad98 <_Findy1>
 800ba16:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800ba1a:	e7f2      	b.n	800ba02 <WM__GetNextIVR+0xb2>
 800ba1c:	9b01      	ldr	r3, [sp, #4]
 800ba1e:	4629      	mov	r1, r5
 800ba20:	69d8      	ldr	r0, [r3, #28]
 800ba22:	f7ff f9b9 	bl	800ad98 <_Findy1>
 800ba26:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ba2a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ba2e:	683b      	ldr	r3, [r7, #0]
 800ba30:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800ba32:	b16a      	cbz	r2, 800ba50 <WM__GetNextIVR+0x100>
 800ba34:	4610      	mov	r0, r2
 800ba36:	f005 fcb9 	bl	80113ac <GUI_ALLOC_h2p>
 800ba3a:	4629      	mov	r1, r5
 800ba3c:	4680      	mov	r8, r0
 800ba3e:	2200      	movs	r2, #0
 800ba40:	6a00      	ldr	r0, [r0, #32]
 800ba42:	f7ff f9ff 	bl	800ae44 <_Findx0>
 800ba46:	2800      	cmp	r0, #0
 800ba48:	d1ed      	bne.n	800ba26 <WM__GetNextIVR+0xd6>
 800ba4a:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800ba4e:	e7f0      	b.n	800ba32 <WM__GetNextIVR+0xe2>
 800ba50:	9b01      	ldr	r3, [sp, #4]
 800ba52:	4629      	mov	r1, r5
 800ba54:	69d8      	ldr	r0, [r3, #28]
 800ba56:	f7ff f9f5 	bl	800ae44 <_Findx0>
 800ba5a:	2800      	cmp	r0, #0
 800ba5c:	d1e3      	bne.n	800ba26 <WM__GetNextIVR+0xd6>
 800ba5e:	88a3      	ldrh	r3, [r4, #4]
 800ba60:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800ba64:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ba68:	b21b      	sxth	r3, r3
 800ba6a:	429a      	cmp	r2, r3
 800ba6c:	dd07      	ble.n	800ba7e <WM__GetNextIVR+0x12e>
 800ba6e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ba72:	e886 0003 	stmia.w	r6, {r0, r1}
 800ba76:	a801      	add	r0, sp, #4
 800ba78:	f005 fcb0 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ba7c:	e797      	b.n	800b9ae <WM__GetNextIVR+0x5e>
 800ba7e:	683b      	ldr	r3, [r7, #0]
 800ba80:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800ba82:	b152      	cbz	r2, 800ba9a <WM__GetNextIVR+0x14a>
 800ba84:	4610      	mov	r0, r2
 800ba86:	f005 fc91 	bl	80113ac <GUI_ALLOC_h2p>
 800ba8a:	4607      	mov	r7, r0
 800ba8c:	2200      	movs	r2, #0
 800ba8e:	6a00      	ldr	r0, [r0, #32]
 800ba90:	4629      	mov	r1, r5
 800ba92:	f7ff fa1b 	bl	800aecc <_Findx1>
 800ba96:	69ba      	ldr	r2, [r7, #24]
 800ba98:	e7f3      	b.n	800ba82 <WM__GetNextIVR+0x132>
 800ba9a:	af04      	add	r7, sp, #16
 800ba9c:	4629      	mov	r1, r5
 800ba9e:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 800baa2:	69d8      	ldr	r0, [r3, #28]
 800baa4:	f7ff fa12 	bl	800aecc <_Findx1>
 800baa8:	4638      	mov	r0, r7
 800baaa:	f005 fc97 	bl	80113dc <GUI_ALLOC_UnlockH>
 800baae:	6923      	ldr	r3, [r4, #16]
 800bab0:	f644 6220 	movw	r2, #20000	; 0x4e20
 800bab4:	4293      	cmp	r3, r2
 800bab6:	dc89      	bgt.n	800b9cc <WM__GetNextIVR+0x7c>
 800bab8:	e895 0003 	ldmia.w	r5, {r0, r1}
 800babc:	e886 0003 	stmia.w	r6, {r0, r1}
 800bac0:	f7ff fc24 	bl	800b30c <WM__ActivateClipRect>
 800bac4:	2001      	movs	r0, #1
 800bac6:	b004      	add	sp, #16
 800bac8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bacc:	2000016c 	.word	0x2000016c
 800bad0:	20019444 	.word	0x20019444

0800bad4 <WM__InitIVRSearch>:
 800bad4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bad8:	4f39      	ldr	r7, [pc, #228]	; (800bbc0 <WM__InitIVRSearch+0xec>)
 800bada:	683b      	ldr	r3, [r7, #0]
 800badc:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800bae0:	b086      	sub	sp, #24
 800bae2:	4606      	mov	r6, r0
 800bae4:	b912      	cbnz	r2, 800baec <WM__InitIVRSearch+0x18>
 800bae6:	f7ff fc11 	bl	800b30c <WM__ActivateClipRect>
 800baea:	e064      	b.n	800bbb6 <WM__InitIVRSearch+0xe2>
 800baec:	4d35      	ldr	r5, [pc, #212]	; (800bbc4 <WM__InitIVRSearch+0xf0>)
 800baee:	696a      	ldr	r2, [r5, #20]
 800baf0:	3201      	adds	r2, #1
 800baf2:	2a01      	cmp	r2, #1
 800baf4:	616a      	str	r2, [r5, #20]
 800baf6:	462c      	mov	r4, r5
 800baf8:	dc5d      	bgt.n	800bbb6 <WM__InitIVRSearch+0xe2>
 800bafa:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800bafc:	f005 fc60 	bl	80113c0 <GUI_ALLOC_LockH>
 800bb00:	f04f 32ff 	mov.w	r2, #4294967295
 800bb04:	612a      	str	r2, [r5, #16]
 800bb06:	4a30      	ldr	r2, [pc, #192]	; (800bbc8 <WM__InitIVRSearch+0xf4>)
 800bb08:	9000      	str	r0, [sp, #0]
 800bb0a:	7812      	ldrb	r2, [r2, #0]
 800bb0c:	b12a      	cbz	r2, 800bb1a <WM__InitIVRSearch+0x46>
 800bb0e:	f100 0308 	add.w	r3, r0, #8
 800bb12:	aa02      	add	r2, sp, #8
 800bb14:	e893 0003 	ldmia.w	r3, {r0, r1}
 800bb18:	e005      	b.n	800bb26 <WM__InitIVRSearch+0x52>
 800bb1a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800bb1c:	f012 0802 	ands.w	r8, r2, #2
 800bb20:	d00a      	beq.n	800bb38 <WM__InitIVRSearch+0x64>
 800bb22:	c803      	ldmia	r0, {r0, r1}
 800bb24:	aa02      	add	r2, sp, #8
 800bb26:	e882 0003 	stmia.w	r2, {r0, r1}
 800bb2a:	ad02      	add	r5, sp, #8
 800bb2c:	b166      	cbz	r6, 800bb48 <WM__InitIVRSearch+0x74>
 800bb2e:	4628      	mov	r0, r5
 800bb30:	4631      	mov	r1, r6
 800bb32:	f003 f9c1 	bl	800eeb8 <GUI__IntersectRect>
 800bb36:	e007      	b.n	800bb48 <WM__InitIVRSearch+0x74>
 800bb38:	696b      	ldr	r3, [r5, #20]
 800bb3a:	4668      	mov	r0, sp
 800bb3c:	3b01      	subs	r3, #1
 800bb3e:	616b      	str	r3, [r5, #20]
 800bb40:	f005 fc4c 	bl	80113dc <GUI_ALLOC_UnlockH>
 800bb44:	4640      	mov	r0, r8
 800bb46:	e037      	b.n	800bbb8 <WM__InitIVRSearch+0xe4>
 800bb48:	683b      	ldr	r3, [r7, #0]
 800bb4a:	4e20      	ldr	r6, [pc, #128]	; (800bbcc <WM__InitIVRSearch+0xf8>)
 800bb4c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800bb4e:	b1c2      	cbz	r2, 800bb82 <WM__InitIVRSearch+0xae>
 800bb50:	9b00      	ldr	r3, [sp, #0]
 800bb52:	6810      	ldr	r0, [r2, #0]
 800bb54:	6851      	ldr	r1, [r2, #4]
 800bb56:	9301      	str	r3, [sp, #4]
 800bb58:	ab04      	add	r3, sp, #16
 800bb5a:	c303      	stmia	r3!, {r0, r1}
 800bb5c:	6833      	ldr	r3, [r6, #0]
 800bb5e:	b133      	cbz	r3, 800bb6e <WM__InitIVRSearch+0x9a>
 800bb60:	a801      	add	r0, sp, #4
 800bb62:	f005 fc3b 	bl	80113dc <GUI_ALLOC_UnlockH>
 800bb66:	6830      	ldr	r0, [r6, #0]
 800bb68:	f005 fc2a 	bl	80113c0 <GUI_ALLOC_LockH>
 800bb6c:	9001      	str	r0, [sp, #4]
 800bb6e:	9801      	ldr	r0, [sp, #4]
 800bb70:	a904      	add	r1, sp, #16
 800bb72:	f7ff fb9b 	bl	800b2ac <WM__Client2Screen>
 800bb76:	4628      	mov	r0, r5
 800bb78:	a904      	add	r1, sp, #16
 800bb7a:	f003 f99d 	bl	800eeb8 <GUI__IntersectRect>
 800bb7e:	a801      	add	r0, sp, #4
 800bb80:	e000      	b.n	800bb84 <WM__InitIVRSearch+0xb0>
 800bb82:	4668      	mov	r0, sp
 800bb84:	f005 fc2a 	bl	80113dc <GUI_ALLOC_UnlockH>
 800bb88:	6831      	ldr	r1, [r6, #0]
 800bb8a:	b119      	cbz	r1, 800bb94 <WM__InitIVRSearch+0xc0>
 800bb8c:	4628      	mov	r0, r5
 800bb8e:	f7ff faef 	bl	800b170 <WM__ClipAtParentBorders>
 800bb92:	b128      	cbz	r0, 800bba0 <WM__InitIVRSearch+0xcc>
 800bb94:	683b      	ldr	r3, [r7, #0]
 800bb96:	4628      	mov	r0, r5
 800bb98:	6c99      	ldr	r1, [r3, #72]	; 0x48
 800bb9a:	f7ff fae9 	bl	800b170 <WM__ClipAtParentBorders>
 800bb9e:	b918      	cbnz	r0, 800bba8 <WM__InitIVRSearch+0xd4>
 800bba0:	6963      	ldr	r3, [r4, #20]
 800bba2:	3b01      	subs	r3, #1
 800bba4:	6163      	str	r3, [r4, #20]
 800bba6:	e007      	b.n	800bbb8 <WM__InitIVRSearch+0xe4>
 800bba8:	e895 0003 	ldmia.w	r5, {r0, r1}
 800bbac:	e884 0003 	stmia.w	r4, {r0, r1}
 800bbb0:	f7ff fece 	bl	800b950 <WM__GetNextIVR>
 800bbb4:	e000      	b.n	800bbb8 <WM__InitIVRSearch+0xe4>
 800bbb6:	2001      	movs	r0, #1
 800bbb8:	b006      	add	sp, #24
 800bbba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbbe:	bf00      	nop
 800bbc0:	2000016c 	.word	0x2000016c
 800bbc4:	20019444 	.word	0x20019444
 800bbc8:	20019979 	.word	0x20019979
 800bbcc:	20019950 	.word	0x20019950

0800bbd0 <WM_SetDefault>:
 800bbd0:	b508      	push	{r3, lr}
 800bbd2:	f004 f9e3 	bl	800ff9c <GL_SetDefault>
 800bbd6:	4b02      	ldr	r3, [pc, #8]	; (800bbe0 <WM_SetDefault+0x10>)
 800bbd8:	681b      	ldr	r3, [r3, #0]
 800bbda:	2200      	movs	r2, #0
 800bbdc:	645a      	str	r2, [r3, #68]	; 0x44
 800bbde:	bd08      	pop	{r3, pc}
 800bbe0:	2000016c 	.word	0x2000016c

0800bbe4 <WM__Paint1>:
 800bbe4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bbe6:	b089      	sub	sp, #36	; 0x24
 800bbe8:	4604      	mov	r4, r0
 800bbea:	f005 fbe9 	bl	80113c0 <GUI_ALLOC_LockH>
 800bbee:	6907      	ldr	r7, [r0, #16]
 800bbf0:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800bbf2:	9001      	str	r0, [sp, #4]
 800bbf4:	3008      	adds	r0, #8
 800bbf6:	c803      	ldmia	r0, {r0, r1}
 800bbf8:	ad02      	add	r5, sp, #8
 800bbfa:	e885 0003 	stmia.w	r5, {r0, r1}
 800bbfe:	a801      	add	r0, sp, #4
 800bc00:	f005 fbec 	bl	80113dc <GUI_ALLOC_UnlockH>
 800bc04:	2f00      	cmp	r7, #0
 800bc06:	d031      	beq.n	800bc6c <WM__Paint1+0x88>
 800bc08:	07b3      	lsls	r3, r6, #30
 800bc0a:	d52f      	bpl.n	800bc6c <WM__Paint1+0x88>
 800bc0c:	4620      	mov	r0, r4
 800bc0e:	212e      	movs	r1, #46	; 0x2e
 800bc10:	f7fe fce4 	bl	800a5dc <WM_SendMessageNoPara>
 800bc14:	4b16      	ldr	r3, [pc, #88]	; (800bc70 <WM__Paint1+0x8c>)
 800bc16:	781a      	ldrb	r2, [r3, #0]
 800bc18:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 800bc1c:	f102 0201 	add.w	r2, r2, #1
 800bc20:	701a      	strb	r2, [r3, #0]
 800bc22:	461e      	mov	r6, r3
 800bc24:	d00a      	beq.n	800bc3c <WM__Paint1+0x58>
 800bc26:	230f      	movs	r3, #15
 800bc28:	9405      	str	r4, [sp, #20]
 800bc2a:	9304      	str	r3, [sp, #16]
 800bc2c:	9507      	str	r5, [sp, #28]
 800bc2e:	f7ff ffcf 	bl	800bbd0 <WM_SetDefault>
 800bc32:	4620      	mov	r0, r4
 800bc34:	a904      	add	r1, sp, #16
 800bc36:	f007 fe11 	bl	801385c <WM__SendMessage>
 800bc3a:	e010      	b.n	800bc5e <WM__Paint1+0x7a>
 800bc3c:	4628      	mov	r0, r5
 800bc3e:	f7ff ff49 	bl	800bad4 <WM__InitIVRSearch>
 800bc42:	b160      	cbz	r0, 800bc5e <WM__Paint1+0x7a>
 800bc44:	230f      	movs	r3, #15
 800bc46:	9304      	str	r3, [sp, #16]
 800bc48:	9405      	str	r4, [sp, #20]
 800bc4a:	9507      	str	r5, [sp, #28]
 800bc4c:	f7ff ffc0 	bl	800bbd0 <WM_SetDefault>
 800bc50:	4620      	mov	r0, r4
 800bc52:	a904      	add	r1, sp, #16
 800bc54:	f007 fe02 	bl	801385c <WM__SendMessage>
 800bc58:	f7ff fe7a 	bl	800b950 <WM__GetNextIVR>
 800bc5c:	e7f1      	b.n	800bc42 <WM__Paint1+0x5e>
 800bc5e:	7833      	ldrb	r3, [r6, #0]
 800bc60:	4620      	mov	r0, r4
 800bc62:	3b01      	subs	r3, #1
 800bc64:	212f      	movs	r1, #47	; 0x2f
 800bc66:	7033      	strb	r3, [r6, #0]
 800bc68:	f7fe fcb8 	bl	800a5dc <WM_SendMessageNoPara>
 800bc6c:	b009      	add	sp, #36	; 0x24
 800bc6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bc70:	20019979 	.word	0x20019979

0800bc74 <WM__Paint>:
 800bc74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc76:	b089      	sub	sp, #36	; 0x24
 800bc78:	ac06      	add	r4, sp, #24
 800bc7a:	9003      	str	r0, [sp, #12]
 800bc7c:	f005 fba0 	bl	80113c0 <GUI_ALLOC_LockH>
 800bc80:	f100 0208 	add.w	r2, r0, #8
 800bc84:	4603      	mov	r3, r0
 800bc86:	9005      	str	r0, [sp, #20]
 800bc88:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bc8c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800bc8e:	699e      	ldr	r6, [r3, #24]
 800bc90:	691f      	ldr	r7, [r3, #16]
 800bc92:	e884 0003 	stmia.w	r4, {r0, r1}
 800bc96:	a805      	add	r0, sp, #20
 800bc98:	f005 fba0 	bl	80113dc <GUI_ALLOC_UnlockH>
 800bc9c:	f244 0320 	movw	r3, #16416	; 0x4020
 800bca0:	402b      	ands	r3, r5
 800bca2:	2b00      	cmp	r3, #0
 800bca4:	d034      	beq.n	800bd10 <WM__Paint+0x9c>
 800bca6:	b1bf      	cbz	r7, 800bcd8 <WM__Paint+0x64>
 800bca8:	4620      	mov	r0, r4
 800bcaa:	9903      	ldr	r1, [sp, #12]
 800bcac:	f7ff fa60 	bl	800b170 <WM__ClipAtParentBorders>
 800bcb0:	b190      	cbz	r0, 800bcd8 <WM__Paint+0x64>
 800bcb2:	9803      	ldr	r0, [sp, #12]
 800bcb4:	f7ff fcf2 	bl	800b69c <WM_SelectWindow>
 800bcb8:	0769      	lsls	r1, r5, #29
 800bcba:	d50f      	bpl.n	800bcdc <WM__Paint+0x68>
 800bcbc:	b126      	cbz	r6, 800bcc8 <WM__Paint+0x54>
 800bcbe:	f005 0501 	and.w	r5, r5, #1
 800bcc2:	f085 0501 	eor.w	r5, r5, #1
 800bcc6:	e000      	b.n	800bcca <WM__Paint+0x56>
 800bcc8:	2501      	movs	r5, #1
 800bcca:	9500      	str	r5, [sp, #0]
 800bccc:	4620      	mov	r0, r4
 800bcce:	4912      	ldr	r1, [pc, #72]	; (800bd18 <WM__Paint+0xa4>)
 800bcd0:	aa03      	add	r2, sp, #12
 800bcd2:	2300      	movs	r3, #0
 800bcd4:	f000 facc 	bl	800c270 <GUI_MEMDEV_Draw>
 800bcd8:	2400      	movs	r4, #0
 800bcda:	e003      	b.n	800bce4 <WM__Paint+0x70>
 800bcdc:	9803      	ldr	r0, [sp, #12]
 800bcde:	f7ff f9d7 	bl	800b090 <WM__PaintWinAndOverlays>
 800bce2:	2401      	movs	r4, #1
 800bce4:	9803      	ldr	r0, [sp, #12]
 800bce6:	f005 fb6b 	bl	80113c0 <GUI_ALLOC_LockH>
 800bcea:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800bcec:	9005      	str	r0, [sp, #20]
 800bcee:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 800bcf2:	f023 0320 	bic.w	r3, r3, #32
 800bcf6:	0492      	lsls	r2, r2, #18
 800bcf8:	bf48      	it	mi
 800bcfa:	f043 0304 	orrmi.w	r3, r3, #4
 800bcfe:	6283      	str	r3, [r0, #40]	; 0x28
 800bd00:	a805      	add	r0, sp, #20
 800bd02:	f005 fb6b 	bl	80113dc <GUI_ALLOC_UnlockH>
 800bd06:	4b05      	ldr	r3, [pc, #20]	; (800bd1c <WM__Paint+0xa8>)
 800bd08:	881a      	ldrh	r2, [r3, #0]
 800bd0a:	3a01      	subs	r2, #1
 800bd0c:	801a      	strh	r2, [r3, #0]
 800bd0e:	e000      	b.n	800bd12 <WM__Paint+0x9e>
 800bd10:	461c      	mov	r4, r3
 800bd12:	4620      	mov	r0, r4
 800bd14:	b009      	add	sp, #36	; 0x24
 800bd16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bd18:	0800b109 	.word	0x0800b109
 800bd1c:	2001996c 	.word	0x2001996c

0800bd20 <WM_Exec>:
 800bd20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd24:	4b4c      	ldr	r3, [pc, #304]	; (800be58 <WM_Exec+0x138>)
 800bd26:	681b      	ldr	r3, [r3, #0]
 800bd28:	b09f      	sub	sp, #124	; 0x7c
 800bd2a:	b103      	cbz	r3, 800bd2e <WM_Exec+0xe>
 800bd2c:	4798      	blx	r3
 800bd2e:	2600      	movs	r6, #0
 800bd30:	4d4a      	ldr	r5, [pc, #296]	; (800be5c <WM_Exec+0x13c>)
 800bd32:	682b      	ldr	r3, [r5, #0]
 800bd34:	b1db      	cbz	r3, 800bd6e <WM_Exec+0x4e>
 800bd36:	4b4a      	ldr	r3, [pc, #296]	; (800be60 <WM_Exec+0x140>)
 800bd38:	681c      	ldr	r4, [r3, #0]
 800bd3a:	b1bc      	cbz	r4, 800bd6c <WM_Exec+0x4c>
 800bd3c:	4620      	mov	r0, r4
 800bd3e:	f005 fb3f 	bl	80113c0 <GUI_ALLOC_LockH>
 800bd42:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800bd44:	6947      	ldr	r7, [r0, #20]
 800bd46:	ab1e      	add	r3, sp, #120	; 0x78
 800bd48:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 800bd4c:	f843 0d70 	str.w	r0, [r3, #-112]!
 800bd50:	d007      	beq.n	800bd62 <WM_Exec+0x42>
 800bd52:	4618      	mov	r0, r3
 800bd54:	f005 fb42 	bl	80113dc <GUI_ALLOC_UnlockH>
 800bd58:	4620      	mov	r0, r4
 800bd5a:	f7ff fd69 	bl	800b830 <WM_DeleteWindow>
 800bd5e:	463c      	mov	r4, r7
 800bd60:	e7eb      	b.n	800bd3a <WM_Exec+0x1a>
 800bd62:	4618      	mov	r0, r3
 800bd64:	463c      	mov	r4, r7
 800bd66:	f005 fb39 	bl	80113dc <GUI_ALLOC_UnlockH>
 800bd6a:	e7e6      	b.n	800bd3a <WM_Exec+0x1a>
 800bd6c:	602c      	str	r4, [r5, #0]
 800bd6e:	4b3d      	ldr	r3, [pc, #244]	; (800be64 <WM_Exec+0x144>)
 800bd70:	681b      	ldr	r3, [r3, #0]
 800bd72:	b103      	cbz	r3, 800bd76 <WM_Exec+0x56>
 800bd74:	4798      	blx	r3
 800bd76:	4b3c      	ldr	r3, [pc, #240]	; (800be68 <WM_Exec+0x148>)
 800bd78:	681b      	ldr	r3, [r3, #0]
 800bd7a:	b92b      	cbnz	r3, 800bd88 <WM_Exec+0x68>
 800bd7c:	4f3b      	ldr	r7, [pc, #236]	; (800be6c <WM_Exec+0x14c>)
 800bd7e:	683b      	ldr	r3, [r7, #0]
 800bd80:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800bd84:	b143      	cbz	r3, 800bd98 <WM_Exec+0x78>
 800bd86:	e003      	b.n	800bd90 <WM_Exec+0x70>
 800bd88:	4798      	blx	r3
 800bd8a:	2800      	cmp	r0, #0
 800bd8c:	d0f6      	beq.n	800bd7c <WM_Exec+0x5c>
 800bd8e:	e058      	b.n	800be42 <WM_Exec+0x122>
 800bd90:	f004 fa6c 	bl	801026c <GUI_PollKeyMsg>
 800bd94:	2800      	cmp	r0, #0
 800bd96:	d154      	bne.n	800be42 <WM_Exec+0x122>
 800bd98:	683b      	ldr	r3, [r7, #0]
 800bd9a:	f893 5054 	ldrb.w	r5, [r3, #84]	; 0x54
 800bd9e:	b14d      	cbz	r5, 800bdb4 <WM_Exec+0x94>
 800bda0:	4b33      	ldr	r3, [pc, #204]	; (800be70 <WM_Exec+0x150>)
 800bda2:	881d      	ldrh	r5, [r3, #0]
 800bda4:	b135      	cbz	r5, 800bdb4 <WM_Exec+0x94>
 800bda6:	4b33      	ldr	r3, [pc, #204]	; (800be74 <WM_Exec+0x154>)
 800bda8:	681b      	ldr	r3, [r3, #0]
 800bdaa:	2b00      	cmp	r3, #0
 800bdac:	d04b      	beq.n	800be46 <WM_Exec+0x126>
 800bdae:	681b      	ldr	r3, [r3, #0]
 800bdb0:	4798      	blx	r3
 800bdb2:	2501      	movs	r5, #1
 800bdb4:	683b      	ldr	r3, [r7, #0]
 800bdb6:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800bdba:	b913      	cbnz	r3, 800bdc2 <WM_Exec+0xa2>
 800bdbc:	2d00      	cmp	r5, #0
 800bdbe:	d137      	bne.n	800be30 <WM_Exec+0x110>
 800bdc0:	e045      	b.n	800be4e <WM_Exec+0x12e>
 800bdc2:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800be70 <WM_Exec+0x150>
 800bdc6:	f8b8 3000 	ldrh.w	r3, [r8]
 800bdca:	2b00      	cmp	r3, #0
 800bdcc:	d0f6      	beq.n	800bdbc <WM_Exec+0x9c>
 800bdce:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 800be78 <WM_Exec+0x158>
 800bdd2:	f8d9 4000 	ldr.w	r4, [r9]
 800bdd6:	b90c      	cbnz	r4, 800bddc <WM_Exec+0xbc>
 800bdd8:	4b21      	ldr	r3, [pc, #132]	; (800be60 <WM_Exec+0x140>)
 800bdda:	681c      	ldr	r4, [r3, #0]
 800bddc:	a802      	add	r0, sp, #8
 800bdde:	f004 f949 	bl	8010074 <GUI_SaveContext_W>
 800bde2:	683b      	ldr	r3, [r7, #0]
 800bde4:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 800bde8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 800bdec:	b914      	cbnz	r4, 800bdf4 <WM_Exec+0xd4>
 800bdee:	2400      	movs	r4, #0
 800bdf0:	e00d      	b.n	800be0e <WM_Exec+0xee>
 800bdf2:	b963      	cbnz	r3, 800be0e <WM_Exec+0xee>
 800bdf4:	4620      	mov	r0, r4
 800bdf6:	f7ff ff3d 	bl	800bc74 <WM__Paint>
 800bdfa:	4603      	mov	r3, r0
 800bdfc:	4620      	mov	r0, r4
 800bdfe:	9301      	str	r3, [sp, #4]
 800be00:	f005 fad4 	bl	80113ac <GUI_ALLOC_h2p>
 800be04:	6944      	ldr	r4, [r0, #20]
 800be06:	9b01      	ldr	r3, [sp, #4]
 800be08:	2c00      	cmp	r4, #0
 800be0a:	d1f2      	bne.n	800bdf2 <WM_Exec+0xd2>
 800be0c:	e7ef      	b.n	800bdee <WM_Exec+0xce>
 800be0e:	4658      	mov	r0, fp
 800be10:	f8c9 4000 	str.w	r4, [r9]
 800be14:	f004 f8e4 	bl	800ffe0 <GUI_SetColor>
 800be18:	4650      	mov	r0, sl
 800be1a:	f004 f8df 	bl	800ffdc <GUI_SetBkColor>
 800be1e:	a802      	add	r0, sp, #8
 800be20:	f004 f932 	bl	8010088 <GUI_RestoreContext>
 800be24:	f8b8 3000 	ldrh.w	r3, [r8]
 800be28:	2b00      	cmp	r3, #0
 800be2a:	d0c7      	beq.n	800bdbc <WM_Exec+0x9c>
 800be2c:	2601      	movs	r6, #1
 800be2e:	e7c1      	b.n	800bdb4 <WM_Exec+0x94>
 800be30:	4b10      	ldr	r3, [pc, #64]	; (800be74 <WM_Exec+0x154>)
 800be32:	6818      	ldr	r0, [r3, #0]
 800be34:	b110      	cbz	r0, 800be3c <WM_Exec+0x11c>
 800be36:	6843      	ldr	r3, [r0, #4]
 800be38:	4798      	blx	r3
 800be3a:	e008      	b.n	800be4e <WM_Exec+0x12e>
 800be3c:	f003 f802 	bl	800ee44 <GUI__ManageCache>
 800be40:	e005      	b.n	800be4e <WM_Exec+0x12e>
 800be42:	2601      	movs	r6, #1
 800be44:	e774      	b.n	800bd30 <WM_Exec+0x10>
 800be46:	2001      	movs	r0, #1
 800be48:	f002 fffc 	bl	800ee44 <GUI__ManageCache>
 800be4c:	e7b1      	b.n	800bdb2 <WM_Exec+0x92>
 800be4e:	4630      	mov	r0, r6
 800be50:	b01f      	add	sp, #124	; 0x7c
 800be52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be56:	bf00      	nop
 800be58:	20019960 	.word	0x20019960
 800be5c:	20019440 	.word	0x20019440
 800be60:	20019970 	.word	0x20019970
 800be64:	2001995c 	.word	0x2001995c
 800be68:	200199f8 	.word	0x200199f8
 800be6c:	2000016c 	.word	0x2000016c
 800be70:	2001996c 	.word	0x2001996c
 800be74:	2001998c 	.word	0x2001998c
 800be78:	2001945c 	.word	0x2001945c

0800be7c <WM_Activate>:
 800be7c:	4b02      	ldr	r3, [pc, #8]	; (800be88 <WM_Activate+0xc>)
 800be7e:	681b      	ldr	r3, [r3, #0]
 800be80:	2201      	movs	r2, #1
 800be82:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800be86:	4770      	bx	lr
 800be88:	2000016c 	.word	0x2000016c

0800be8c <WM_Deactivate>:
 800be8c:	4b03      	ldr	r3, [pc, #12]	; (800be9c <WM_Deactivate+0x10>)
 800be8e:	681b      	ldr	r3, [r3, #0]
 800be90:	2200      	movs	r2, #0
 800be92:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800be96:	f002 bdfd 	b.w	800ea94 <LCD_SetClipRectMax>
 800be9a:	bf00      	nop
 800be9c:	2000016c 	.word	0x2000016c

0800bea0 <WM_DefaultProc>:
 800bea0:	b510      	push	{r4, lr}
 800bea2:	4604      	mov	r4, r0
 800bea4:	6840      	ldr	r0, [r0, #4]
 800bea6:	6823      	ldr	r3, [r4, #0]
 800bea8:	68e1      	ldr	r1, [r4, #12]
 800beaa:	2b17      	cmp	r3, #23
 800beac:	d00f      	beq.n	800bece <WM_DefaultProc+0x2e>
 800beae:	dc06      	bgt.n	800bebe <WM_DefaultProc+0x1e>
 800beb0:	2b0e      	cmp	r3, #14
 800beb2:	d00e      	beq.n	800bed2 <WM_DefaultProc+0x32>
 800beb4:	2b14      	cmp	r3, #20
 800beb6:	d114      	bne.n	800bee2 <WM_DefaultProc+0x42>
 800beb8:	f7fe fe5c 	bl	800ab74 <WM__GetClientRectEx>
 800bebc:	e011      	b.n	800bee2 <WM_DefaultProc+0x42>
 800bebe:	2b22      	cmp	r3, #34	; 0x22
 800bec0:	d00c      	beq.n	800bedc <WM_DefaultProc+0x3c>
 800bec2:	2b28      	cmp	r3, #40	; 0x28
 800bec4:	d10d      	bne.n	800bee2 <WM_DefaultProc+0x42>
 800bec6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800beca:	f7ff bbc6 	b.w	800b65a <WM_InvalidateWindow>
 800bece:	60e0      	str	r0, [r4, #12]
 800bed0:	bd10      	pop	{r4, pc}
 800bed2:	4621      	mov	r1, r4
 800bed4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bed8:	f007 bf5e 	b.w	8013d98 <WM_SendToParent>
 800bedc:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800bee0:	e000      	b.n	800bee4 <WM_DefaultProc+0x44>
 800bee2:	2300      	movs	r3, #0
 800bee4:	60e3      	str	r3, [r4, #12]
 800bee6:	bd10      	pop	{r4, pc}

0800bee8 <_cbBackWin>:
 800bee8:	6803      	ldr	r3, [r0, #0]
 800beea:	2b0e      	cmp	r3, #14
 800beec:	b510      	push	{r4, lr}
 800beee:	4604      	mov	r4, r0
 800bef0:	d002      	beq.n	800bef8 <_cbBackWin+0x10>
 800bef2:	2b0f      	cmp	r3, #15
 800bef4:	d009      	beq.n	800bf0a <_cbBackWin+0x22>
 800bef6:	e020      	b.n	800bf3a <_cbBackWin+0x52>
 800bef8:	68c3      	ldr	r3, [r0, #12]
 800befa:	685a      	ldr	r2, [r3, #4]
 800befc:	2a01      	cmp	r2, #1
 800befe:	d121      	bne.n	800bf44 <_cbBackWin+0x5c>
 800bf00:	6818      	ldr	r0, [r3, #0]
 800bf02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf06:	f004 b9a9 	b.w	801025c <GUI_StoreKey>
 800bf0a:	4a0f      	ldr	r2, [pc, #60]	; (800bf48 <_cbBackWin+0x60>)
 800bf0c:	6843      	ldr	r3, [r0, #4]
 800bf0e:	6811      	ldr	r1, [r2, #0]
 800bf10:	428b      	cmp	r3, r1
 800bf12:	d006      	beq.n	800bf22 <_cbBackWin+0x3a>
 800bf14:	6852      	ldr	r2, [r2, #4]
 800bf16:	4293      	cmp	r3, r2
 800bf18:	bf14      	ite	ne
 800bf1a:	f04f 33ff 	movne.w	r3, #4294967295
 800bf1e:	2301      	moveq	r3, #1
 800bf20:	e000      	b.n	800bf24 <_cbBackWin+0x3c>
 800bf22:	2300      	movs	r3, #0
 800bf24:	4a09      	ldr	r2, [pc, #36]	; (800bf4c <_cbBackWin+0x64>)
 800bf26:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800bf2a:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800bf2e:	4298      	cmp	r0, r3
 800bf30:	d003      	beq.n	800bf3a <_cbBackWin+0x52>
 800bf32:	f004 f853 	bl	800ffdc <GUI_SetBkColor>
 800bf36:	f004 fe13 	bl	8010b60 <GUI_Clear>
 800bf3a:	4620      	mov	r0, r4
 800bf3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf40:	f7ff bfae 	b.w	800bea0 <WM_DefaultProc>
 800bf44:	bd10      	pop	{r4, pc}
 800bf46:	bf00      	nop
 800bf48:	20019954 	.word	0x20019954
 800bf4c:	20019980 	.word	0x20019980

0800bf50 <WM_Init>:
 800bf50:	b530      	push	{r4, r5, lr}
 800bf52:	4b2b      	ldr	r3, [pc, #172]	; (800c000 <WM_Init+0xb0>)
 800bf54:	7818      	ldrb	r0, [r3, #0]
 800bf56:	b085      	sub	sp, #20
 800bf58:	461d      	mov	r5, r3
 800bf5a:	2800      	cmp	r0, #0
 800bf5c:	d14d      	bne.n	800bffa <WM_Init+0xaa>
 800bf5e:	4b29      	ldr	r3, [pc, #164]	; (800c004 <WM_Init+0xb4>)
 800bf60:	6018      	str	r0, [r3, #0]
 800bf62:	4b29      	ldr	r3, [pc, #164]	; (800c008 <WM_Init+0xb8>)
 800bf64:	6018      	str	r0, [r3, #0]
 800bf66:	4b29      	ldr	r3, [pc, #164]	; (800c00c <WM_Init+0xbc>)
 800bf68:	681b      	ldr	r3, [r3, #0]
 800bf6a:	6458      	str	r0, [r3, #68]	; 0x44
 800bf6c:	4b28      	ldr	r3, [pc, #160]	; (800c010 <WM_Init+0xc0>)
 800bf6e:	8018      	strh	r0, [r3, #0]
 800bf70:	4b28      	ldr	r3, [pc, #160]	; (800c014 <WM_Init+0xc4>)
 800bf72:	4604      	mov	r4, r0
 800bf74:	8018      	strh	r0, [r3, #0]
 800bf76:	4620      	mov	r0, r4
 800bf78:	f004 fcc8 	bl	801090c <GUI_DEVICE__GetpDriver>
 800bf7c:	b1c0      	cbz	r0, 800bfb0 <WM_Init+0x60>
 800bf7e:	f04f 32ff 	mov.w	r2, #4294967295
 800bf82:	2302      	movs	r3, #2
 800bf84:	e88d 000c 	stmia.w	sp, {r2, r3}
 800bf88:	2000      	movs	r0, #0
 800bf8a:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800bf8e:	4b22      	ldr	r3, [pc, #136]	; (800c018 <WM_Init+0xc8>)
 800bf90:	9302      	str	r3, [sp, #8]
 800bf92:	9003      	str	r0, [sp, #12]
 800bf94:	4613      	mov	r3, r2
 800bf96:	4601      	mov	r1, r0
 800bf98:	f7ff fba0 	bl	800b6dc <WM_CreateWindowAsChild>
 800bf9c:	4b1f      	ldr	r3, [pc, #124]	; (800c01c <WM_Init+0xcc>)
 800bf9e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800bfa2:	4b1f      	ldr	r3, [pc, #124]	; (800c020 <WM_Init+0xd0>)
 800bfa4:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800bfa8:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800bfac:	f7ff fb55 	bl	800b65a <WM_InvalidateWindow>
 800bfb0:	3401      	adds	r4, #1
 800bfb2:	2c02      	cmp	r4, #2
 800bfb4:	d1df      	bne.n	800bf76 <WM_Init+0x26>
 800bfb6:	481b      	ldr	r0, [pc, #108]	; (800c024 <WM_Init+0xd4>)
 800bfb8:	f007 ff62 	bl	8013e80 <WM__AddCriticalHandle>
 800bfbc:	481a      	ldr	r0, [pc, #104]	; (800c028 <WM_Init+0xd8>)
 800bfbe:	f007 ff5f 	bl	8013e80 <WM__AddCriticalHandle>
 800bfc2:	481a      	ldr	r0, [pc, #104]	; (800c02c <WM_Init+0xdc>)
 800bfc4:	f007 ff5c 	bl	8013e80 <WM__AddCriticalHandle>
 800bfc8:	4819      	ldr	r0, [pc, #100]	; (800c030 <WM_Init+0xe0>)
 800bfca:	f007 ff59 	bl	8013e80 <WM__AddCriticalHandle>
 800bfce:	4819      	ldr	r0, [pc, #100]	; (800c034 <WM_Init+0xe4>)
 800bfd0:	f007 ff56 	bl	8013e80 <WM__AddCriticalHandle>
 800bfd4:	4818      	ldr	r0, [pc, #96]	; (800c038 <WM_Init+0xe8>)
 800bfd6:	f007 ff53 	bl	8013e80 <WM__AddCriticalHandle>
 800bfda:	4b10      	ldr	r3, [pc, #64]	; (800c01c <WM_Init+0xcc>)
 800bfdc:	6818      	ldr	r0, [r3, #0]
 800bfde:	f7ff fb5d 	bl	800b69c <WM_SelectWindow>
 800bfe2:	f7ff ff4b 	bl	800be7c <WM_Activate>
 800bfe6:	2301      	movs	r3, #1
 800bfe8:	702b      	strb	r3, [r5, #0]
 800bfea:	4814      	ldr	r0, [pc, #80]	; (800c03c <WM_Init+0xec>)
 800bfec:	4b14      	ldr	r3, [pc, #80]	; (800c040 <WM_Init+0xf0>)
 800bfee:	6003      	str	r3, [r0, #0]
 800bff0:	b005      	add	sp, #20
 800bff2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bff6:	f004 bdc3 	b.w	8010b80 <GUI__RegisterExit>
 800bffa:	b005      	add	sp, #20
 800bffc:	bd30      	pop	{r4, r5, pc}
 800bffe:	bf00      	nop
 800c000:	20019468 	.word	0x20019468
 800c004:	20019970 	.word	0x20019970
 800c008:	2001945c 	.word	0x2001945c
 800c00c:	2000016c 	.word	0x2000016c
 800c010:	2001996c 	.word	0x2001996c
 800c014:	2001994c 	.word	0x2001994c
 800c018:	0800bee9 	.word	0x0800bee9
 800c01c:	20019954 	.word	0x20019954
 800c020:	20019980 	.word	0x20019980
 800c024:	20019adc 	.word	0x20019adc
 800c028:	20019acc 	.word	0x20019acc
 800c02c:	20019abc 	.word	0x20019abc
 800c030:	20019ae4 	.word	0x20019ae4
 800c034:	20019ad4 	.word	0x20019ad4
 800c038:	20019ac4 	.word	0x20019ac4
 800c03c:	20019460 	.word	0x20019460
 800c040:	0800ad25 	.word	0x0800ad25

0800c044 <_CreateStaticDevice>:
 800c044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c048:	b087      	sub	sp, #28
 800c04a:	4604      	mov	r4, r0
 800c04c:	f005 f9b8 	bl	80113c0 <GUI_ALLOC_LockH>
 800c050:	af06      	add	r7, sp, #24
 800c052:	f8b0 8000 	ldrh.w	r8, [r0]
 800c056:	8886      	ldrh	r6, [r0, #4]
 800c058:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 800c05c:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 800c060:	f847 0d04 	str.w	r0, [r7, #-4]!
 800c064:	fa0f f888 	sxth.w	r8, r8
 800c068:	b236      	sxth	r6, r6
 800c06a:	ebc8 0606 	rsb	r6, r8, r6
 800c06e:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 800c072:	3601      	adds	r6, #1
 800c074:	4638      	mov	r0, r7
 800c076:	fa0f f989 	sxth.w	r9, r9
 800c07a:	fa0f f58b 	sxth.w	r5, fp
 800c07e:	f005 f9ad 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c082:	ebc9 0505 	rsb	r5, r9, r5
 800c086:	2e00      	cmp	r6, #0
 800c088:	f105 0501 	add.w	r5, r5, #1
 800c08c:	dd4d      	ble.n	800c12a <_CreateStaticDevice+0xe6>
 800c08e:	2d00      	cmp	r5, #0
 800c090:	dd4b      	ble.n	800c12a <_CreateStaticDevice+0xe6>
 800c092:	f1ba 0f00 	cmp.w	sl, #0
 800c096:	d04a      	beq.n	800c12e <_CreateStaticDevice+0xea>
 800c098:	4650      	mov	r0, sl
 800c09a:	f005 f991 	bl	80113c0 <GUI_ALLOC_LockH>
 800c09e:	ab06      	add	r3, sp, #24
 800c0a0:	8886      	ldrh	r6, [r0, #4]
 800c0a2:	f843 0d08 	str.w	r0, [r3, #-8]!
 800c0a6:	88c5      	ldrh	r5, [r0, #6]
 800c0a8:	b236      	sxth	r6, r6
 800c0aa:	4618      	mov	r0, r3
 800c0ac:	f005 f996 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c0b0:	4546      	cmp	r6, r8
 800c0b2:	d102      	bne.n	800c0ba <_CreateStaticDevice+0x76>
 800c0b4:	b22d      	sxth	r5, r5
 800c0b6:	454d      	cmp	r5, r9
 800c0b8:	d032      	beq.n	800c120 <_CreateStaticDevice+0xdc>
 800c0ba:	4650      	mov	r0, sl
 800c0bc:	4641      	mov	r1, r8
 800c0be:	464a      	mov	r2, r9
 800c0c0:	f000 f886 	bl	800c1d0 <GUI_MEMDEV_SetOrg>
 800c0c4:	e02c      	b.n	800c120 <_CreateStaticDevice+0xdc>
 800c0c6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c0c8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c0cc:	6283      	str	r3, [r0, #40]	; 0x28
 800c0ce:	4638      	mov	r0, r7
 800c0d0:	f005 f984 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c0d4:	4640      	mov	r0, r8
 800c0d6:	f000 ff93 	bl	800d000 <GUI_MEMDEV_Select>
 800c0da:	4607      	mov	r7, r0
 800c0dc:	4650      	mov	r0, sl
 800c0de:	f003 ff81 	bl	800ffe4 <GUI__AlphaPreserveTrans>
 800c0e2:	4640      	mov	r0, r8
 800c0e4:	f000 f8b4 	bl	800c250 <GUI_MEMDEV_GetDataPtr>
 800c0e8:	4b2d      	ldr	r3, [pc, #180]	; (800c1a0 <_CreateStaticDevice+0x15c>)
 800c0ea:	fb05 f206 	mul.w	r2, r5, r6
 800c0ee:	7819      	ldrb	r1, [r3, #0]
 800c0f0:	4d2c      	ldr	r5, [pc, #176]	; (800c1a4 <_CreateStaticDevice+0x160>)
 800c0f2:	4e2d      	ldr	r6, [pc, #180]	; (800c1a8 <_CreateStaticDevice+0x164>)
 800c0f4:	0092      	lsls	r2, r2, #2
 800c0f6:	f002 fdbd 	bl	800ec74 <GUI__memset>
 800c0fa:	4620      	mov	r0, r4
 800c0fc:	f8d5 8000 	ldr.w	r8, [r5]
 800c100:	6034      	str	r4, [r6, #0]
 800c102:	f7fe fcbf 	bl	800aa84 <WM_GetWindowOrgX>
 800c106:	6028      	str	r0, [r5, #0]
 800c108:	4620      	mov	r0, r4
 800c10a:	f7ff fd6b 	bl	800bbe4 <WM__Paint1>
 800c10e:	2000      	movs	r0, #0
 800c110:	f8c5 8000 	str.w	r8, [r5]
 800c114:	6030      	str	r0, [r6, #0]
 800c116:	f003 ff65 	bl	800ffe4 <GUI__AlphaPreserveTrans>
 800c11a:	4638      	mov	r0, r7
 800c11c:	f000 ff70 	bl	800d000 <GUI_MEMDEV_Select>
 800c120:	4620      	mov	r0, r4
 800c122:	f005 f943 	bl	80113ac <GUI_ALLOC_h2p>
 800c126:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c128:	e037      	b.n	800c19a <_CreateStaticDevice+0x156>
 800c12a:	2000      	movs	r0, #0
 800c12c:	e035      	b.n	800c19a <_CreateStaticDevice+0x156>
 800c12e:	f7fe fd07 	bl	800ab40 <WM_GetDesktopWindow>
 800c132:	4284      	cmp	r4, r0
 800c134:	d112      	bne.n	800c15c <_CreateStaticDevice+0x118>
 800c136:	f002 f947 	bl	800e3c8 <LCD_GetXSize>
 800c13a:	4682      	mov	sl, r0
 800c13c:	f002 f94c 	bl	800e3d8 <LCD_GetYSize>
 800c140:	4556      	cmp	r6, sl
 800c142:	dc02      	bgt.n	800c14a <_CreateStaticDevice+0x106>
 800c144:	4285      	cmp	r5, r0
 800c146:	dd09      	ble.n	800c15c <_CreateStaticDevice+0x118>
 800c148:	e000      	b.n	800c14c <_CreateStaticDevice+0x108>
 800c14a:	4656      	mov	r6, sl
 800c14c:	4285      	cmp	r5, r0
 800c14e:	bfa8      	it	ge
 800c150:	4605      	movge	r5, r0
 800c152:	4631      	mov	r1, r6
 800c154:	4620      	mov	r0, r4
 800c156:	462a      	mov	r2, r5
 800c158:	f7fe f927 	bl	800a3aa <WM_SetSize>
 800c15c:	4b13      	ldr	r3, [pc, #76]	; (800c1ac <_CreateStaticDevice+0x168>)
 800c15e:	9301      	str	r3, [sp, #4]
 800c160:	f04f 0a01 	mov.w	sl, #1
 800c164:	4b12      	ldr	r3, [pc, #72]	; (800c1b0 <_CreateStaticDevice+0x16c>)
 800c166:	9302      	str	r3, [sp, #8]
 800c168:	4640      	mov	r0, r8
 800c16a:	4649      	mov	r1, r9
 800c16c:	4632      	mov	r2, r6
 800c16e:	462b      	mov	r3, r5
 800c170:	f8cd a000 	str.w	sl, [sp]
 800c174:	f000 fe4e 	bl	800ce14 <GUI_MEMDEV__CreateFixed>
 800c178:	4680      	mov	r8, r0
 800c17a:	4620      	mov	r0, r4
 800c17c:	f005 f920 	bl	80113c0 <GUI_ALLOC_LockH>
 800c180:	9005      	str	r0, [sp, #20]
 800c182:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 800c186:	f1b8 0f00 	cmp.w	r8, #0
 800c18a:	d19c      	bne.n	800c0c6 <_CreateStaticDevice+0x82>
 800c18c:	4638      	mov	r0, r7
 800c18e:	f005 f925 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c192:	4620      	mov	r0, r4
 800c194:	f7ff fd26 	bl	800bbe4 <WM__Paint1>
 800c198:	4640      	mov	r0, r8
 800c19a:	b007      	add	sp, #28
 800c19c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c1a0:	20000134 	.word	0x20000134
 800c1a4:	200199c4 	.word	0x200199c4
 800c1a8:	20019998 	.word	0x20019998
 800c1ac:	08019948 	.word	0x08019948
 800c1b0:	0801f2ac 	.word	0x0801f2ac

0800c1b4 <GUI_MEMDEV_Paint1Static>:
 800c1b4:	b538      	push	{r3, r4, r5, lr}
 800c1b6:	4605      	mov	r5, r0
 800c1b8:	2405      	movs	r4, #5
 800c1ba:	4628      	mov	r0, r5
 800c1bc:	f7ff ff42 	bl	800c044 <_CreateStaticDevice>
 800c1c0:	b910      	cbnz	r0, 800c1c8 <GUI_MEMDEV_Paint1Static+0x14>
 800c1c2:	3c01      	subs	r4, #1
 800c1c4:	d1f9      	bne.n	800c1ba <GUI_MEMDEV_Paint1Static+0x6>
 800c1c6:	bd38      	pop	{r3, r4, r5, pc}
 800c1c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c1cc:	f008 bb84 	b.w	80148d8 <GUI_MEMDEV_Write>

0800c1d0 <GUI_MEMDEV_SetOrg>:
 800c1d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1d2:	460d      	mov	r5, r1
 800c1d4:	4614      	mov	r4, r2
 800c1d6:	b918      	cbnz	r0, 800c1e0 <GUI_MEMDEV_SetOrg+0x10>
 800c1d8:	4b11      	ldr	r3, [pc, #68]	; (800c220 <GUI_MEMDEV_SetOrg+0x50>)
 800c1da:	681b      	ldr	r3, [r3, #0]
 800c1dc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800c1de:	b1e8      	cbz	r0, 800c21c <GUI_MEMDEV_SetOrg+0x4c>
 800c1e0:	f005 f8ee 	bl	80113c0 <GUI_ALLOC_LockH>
 800c1e4:	b2a4      	uxth	r4, r4
 800c1e6:	b2ad      	uxth	r5, r5
 800c1e8:	80c4      	strh	r4, [r0, #6]
 800c1ea:	8085      	strh	r5, [r0, #4]
 800c1ec:	9000      	str	r0, [sp, #0]
 800c1ee:	f002 fc51 	bl	800ea94 <LCD_SetClipRectMax>
 800c1f2:	9b00      	ldr	r3, [sp, #0]
 800c1f4:	6958      	ldr	r0, [r3, #20]
 800c1f6:	b170      	cbz	r0, 800c216 <GUI_MEMDEV_SetOrg+0x46>
 800c1f8:	f005 f8e2 	bl	80113c0 <GUI_ALLOC_LockH>
 800c1fc:	9b00      	ldr	r3, [sp, #0]
 800c1fe:	9001      	str	r0, [sp, #4]
 800c200:	891a      	ldrh	r2, [r3, #8]
 800c202:	895b      	ldrh	r3, [r3, #10]
 800c204:	8082      	strh	r2, [r0, #4]
 800c206:	80c3      	strh	r3, [r0, #6]
 800c208:	b112      	cbz	r2, 800c210 <GUI_MEMDEV_SetOrg+0x40>
 800c20a:	b10b      	cbz	r3, 800c210 <GUI_MEMDEV_SetOrg+0x40>
 800c20c:	8005      	strh	r5, [r0, #0]
 800c20e:	8044      	strh	r4, [r0, #2]
 800c210:	a801      	add	r0, sp, #4
 800c212:	f005 f8e3 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c216:	4668      	mov	r0, sp
 800c218:	f005 f8e0 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c21c:	b003      	add	sp, #12
 800c21e:	bd30      	pop	{r4, r5, pc}
 800c220:	2000016c 	.word	0x2000016c

0800c224 <GUI_MEMDEV_GetYSize>:
 800c224:	b513      	push	{r0, r1, r4, lr}
 800c226:	b920      	cbnz	r0, 800c232 <GUI_MEMDEV_GetYSize+0xe>
 800c228:	4b08      	ldr	r3, [pc, #32]	; (800c24c <GUI_MEMDEV_GetYSize+0x28>)
 800c22a:	681b      	ldr	r3, [r3, #0]
 800c22c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800c22e:	4604      	mov	r4, r0
 800c230:	b148      	cbz	r0, 800c246 <GUI_MEMDEV_GetYSize+0x22>
 800c232:	f005 f8c5 	bl	80113c0 <GUI_ALLOC_LockH>
 800c236:	ab02      	add	r3, sp, #8
 800c238:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 800c23c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c240:	4618      	mov	r0, r3
 800c242:	f005 f8cb 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c246:	4620      	mov	r0, r4
 800c248:	b002      	add	sp, #8
 800c24a:	bd10      	pop	{r4, pc}
 800c24c:	2000016c 	.word	0x2000016c

0800c250 <GUI_MEMDEV_GetDataPtr>:
 800c250:	b513      	push	{r0, r1, r4, lr}
 800c252:	b150      	cbz	r0, 800c26a <GUI_MEMDEV_GetDataPtr+0x1a>
 800c254:	f005 f8b4 	bl	80113c0 <GUI_ALLOC_LockH>
 800c258:	4604      	mov	r4, r0
 800c25a:	a802      	add	r0, sp, #8
 800c25c:	f840 4d04 	str.w	r4, [r0, #-4]!
 800c260:	f005 f8bc 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c264:	f104 0018 	add.w	r0, r4, #24
 800c268:	e7ff      	b.n	800c26a <GUI_MEMDEV_GetDataPtr+0x1a>
 800c26a:	b002      	add	sp, #8
 800c26c:	bd10      	pop	{r4, pc}
	...

0800c270 <GUI_MEMDEV_Draw>:
 800c270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c274:	461e      	mov	r6, r3
 800c276:	b089      	sub	sp, #36	; 0x24
 800c278:	4b4e      	ldr	r3, [pc, #312]	; (800c3b4 <GUI_MEMDEV_Draw+0x144>)
 800c27a:	9204      	str	r2, [sp, #16]
 800c27c:	681a      	ldr	r2, [r3, #0]
 800c27e:	9103      	str	r1, [sp, #12]
 800c280:	7c54      	ldrb	r4, [r2, #17]
 800c282:	4a4d      	ldr	r2, [pc, #308]	; (800c3b8 <GUI_MEMDEV_Draw+0x148>)
 800c284:	5712      	ldrsb	r2, [r2, r4]
 800c286:	2a01      	cmp	r2, #1
 800c288:	4605      	mov	r5, r0
 800c28a:	469b      	mov	fp, r3
 800c28c:	4620      	mov	r0, r4
 800c28e:	dd06      	ble.n	800c29e <GUI_MEMDEV_Draw+0x2e>
 800c290:	f002 f888 	bl	800e3a4 <LCD_GetXSizeEx>
 800c294:	4607      	mov	r7, r0
 800c296:	4620      	mov	r0, r4
 800c298:	f002 f887 	bl	800e3aa <LCD_GetYSizeEx>
 800c29c:	e005      	b.n	800c2aa <GUI_MEMDEV_Draw+0x3a>
 800c29e:	f002 f887 	bl	800e3b0 <LCD_GetVXSizeEx>
 800c2a2:	4607      	mov	r7, r0
 800c2a4:	4620      	mov	r0, r4
 800c2a6:	f002 f886 	bl	800e3b6 <LCD_GetVYSizeEx>
 800c2aa:	4604      	mov	r4, r0
 800c2ac:	b325      	cbz	r5, 800c2f8 <GUI_MEMDEV_Draw+0x88>
 800c2ae:	a806      	add	r0, sp, #24
 800c2b0:	a907      	add	r1, sp, #28
 800c2b2:	f004 f8fb 	bl	80104ac <GUI_GetOrg>
 800c2b6:	9b06      	ldr	r3, [sp, #24]
 800c2b8:	f9b5 a000 	ldrsh.w	sl, [r5]
 800c2bc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c2c0:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 800c2c4:	441f      	add	r7, r3
 800c2c6:	9b07      	ldr	r3, [sp, #28]
 800c2c8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800c2cc:	3f01      	subs	r7, #1
 800c2ce:	4297      	cmp	r7, r2
 800c2d0:	bfd4      	ite	le
 800c2d2:	ebca 0707 	rsble	r7, sl, r7
 800c2d6:	ebca 0702 	rsbgt	r7, sl, r2
 800c2da:	441c      	add	r4, r3
 800c2dc:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800c2e0:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 800c2e4:	3c01      	subs	r4, #1
 800c2e6:	4294      	cmp	r4, r2
 800c2e8:	bfd4      	ite	le
 800c2ea:	ebc8 0404 	rsble	r4, r8, r4
 800c2ee:	ebc8 0402 	rsbgt	r4, r8, r2
 800c2f2:	3701      	adds	r7, #1
 800c2f4:	3401      	adds	r4, #1
 800c2f6:	e001      	b.n	800c2fc <GUI_MEMDEV_Draw+0x8c>
 800c2f8:	46a8      	mov	r8, r5
 800c2fa:	46aa      	mov	sl, r5
 800c2fc:	b906      	cbnz	r6, 800c300 <GUI_MEMDEV_Draw+0x90>
 800c2fe:	4266      	negs	r6, r4
 800c300:	2f00      	cmp	r7, #0
 800c302:	dd52      	ble.n	800c3aa <GUI_MEMDEV_Draw+0x13a>
 800c304:	2c00      	cmp	r4, #0
 800c306:	dd50      	ble.n	800c3aa <GUI_MEMDEV_Draw+0x13a>
 800c308:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c30a:	9300      	str	r3, [sp, #0]
 800c30c:	4650      	mov	r0, sl
 800c30e:	4641      	mov	r1, r8
 800c310:	463a      	mov	r2, r7
 800c312:	4633      	mov	r3, r6
 800c314:	f000 fe38 	bl	800cf88 <GUI_MEMDEV_CreateEx>
 800c318:	4605      	mov	r5, r0
 800c31a:	b920      	cbnz	r0, 800c326 <GUI_MEMDEV_Draw+0xb6>
 800c31c:	9804      	ldr	r0, [sp, #16]
 800c31e:	9b03      	ldr	r3, [sp, #12]
 800c320:	4798      	blx	r3
 800c322:	2001      	movs	r0, #1
 800c324:	e042      	b.n	800c3ac <GUI_MEMDEV_Draw+0x13c>
 800c326:	f7ff ff7d 	bl	800c224 <GUI_MEMDEV_GetYSize>
 800c32a:	42a0      	cmp	r0, r4
 800c32c:	4606      	mov	r6, r0
 800c32e:	d006      	beq.n	800c33e <GUI_MEMDEV_Draw+0xce>
 800c330:	f8db 3000 	ldr.w	r3, [fp]
 800c334:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c336:	b110      	cbz	r0, 800c33e <GUI_MEMDEV_Draw+0xce>
 800c338:	2132      	movs	r1, #50	; 0x32
 800c33a:	f007 fa7b 	bl	8013834 <WM__SendMessageNoPara>
 800c33e:	4628      	mov	r0, r5
 800c340:	f000 fe5e 	bl	800d000 <GUI_MEMDEV_Select>
 800c344:	4273      	negs	r3, r6
 800c346:	9305      	str	r3, [sp, #20]
 800c348:	46a1      	mov	r9, r4
 800c34a:	2700      	movs	r7, #0
 800c34c:	45b1      	cmp	r9, r6
 800c34e:	da03      	bge.n	800c358 <GUI_MEMDEV_Draw+0xe8>
 800c350:	4628      	mov	r0, r5
 800c352:	4649      	mov	r1, r9
 800c354:	f008 fbc0 	bl	8014ad8 <GUI_MEMDEV_ReduceYSize>
 800c358:	b147      	cbz	r7, 800c36c <GUI_MEMDEV_Draw+0xfc>
 800c35a:	4628      	mov	r0, r5
 800c35c:	4651      	mov	r1, sl
 800c35e:	eb07 0208 	add.w	r2, r7, r8
 800c362:	f7ff ff35 	bl	800c1d0 <GUI_MEMDEV_SetOrg>
 800c366:	4628      	mov	r0, r5
 800c368:	f008 fbcc 	bl	8014b04 <GUI_MEMDEV_Clear>
 800c36c:	9b03      	ldr	r3, [sp, #12]
 800c36e:	9804      	ldr	r0, [sp, #16]
 800c370:	4798      	blx	r3
 800c372:	4b12      	ldr	r3, [pc, #72]	; (800c3bc <GUI_MEMDEV_Draw+0x14c>)
 800c374:	681b      	ldr	r3, [r3, #0]
 800c376:	b10b      	cbz	r3, 800c37c <GUI_MEMDEV_Draw+0x10c>
 800c378:	2000      	movs	r0, #0
 800c37a:	4798      	blx	r3
 800c37c:	4628      	mov	r0, r5
 800c37e:	f000 feb7 	bl	800d0f0 <GUI_MEMDEV_CopyToLCD>
 800c382:	4437      	add	r7, r6
 800c384:	9b05      	ldr	r3, [sp, #20]
 800c386:	42a7      	cmp	r7, r4
 800c388:	4499      	add	r9, r3
 800c38a:	dbdf      	blt.n	800c34c <GUI_MEMDEV_Draw+0xdc>
 800c38c:	4628      	mov	r0, r5
 800c38e:	f000 fdd9 	bl	800cf44 <GUI_MEMDEV_Delete>
 800c392:	2000      	movs	r0, #0
 800c394:	f000 fe34 	bl	800d000 <GUI_MEMDEV_Select>
 800c398:	42a6      	cmp	r6, r4
 800c39a:	d006      	beq.n	800c3aa <GUI_MEMDEV_Draw+0x13a>
 800c39c:	f8db 3000 	ldr.w	r3, [fp]
 800c3a0:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c3a2:	b110      	cbz	r0, 800c3aa <GUI_MEMDEV_Draw+0x13a>
 800c3a4:	2133      	movs	r1, #51	; 0x33
 800c3a6:	f007 fa45 	bl	8013834 <WM__SendMessageNoPara>
 800c3aa:	2000      	movs	r0, #0
 800c3ac:	b009      	add	sp, #36	; 0x24
 800c3ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3b2:	bf00      	nop
 800c3b4:	2000016c 	.word	0x2000016c
 800c3b8:	200199bc 	.word	0x200199bc
 800c3bc:	2001946c 	.word	0x2001946c

0800c3c0 <_GetDevData>:
 800c3c0:	4802      	ldr	r0, [pc, #8]	; (800c3cc <_GetDevData+0xc>)
 800c3c2:	2901      	cmp	r1, #1
 800c3c4:	bf18      	it	ne
 800c3c6:	2000      	movne	r0, #0
 800c3c8:	4770      	bx	lr
 800c3ca:	bf00      	nop
 800c3cc:	08019948 	.word	0x08019948

0800c3d0 <_GetDevFunc>:
 800c3d0:	4802      	ldr	r0, [pc, #8]	; (800c3dc <_GetDevFunc+0xc>)
 800c3d2:	2916      	cmp	r1, #22
 800c3d4:	bf18      	it	ne
 800c3d6:	2000      	movne	r0, #0
 800c3d8:	4770      	bx	lr
 800c3da:	bf00      	nop
 800c3dc:	080146e9 	.word	0x080146e9

0800c3e0 <_GetDevProp>:
 800c3e0:	2908      	cmp	r1, #8
 800c3e2:	bf0c      	ite	eq
 800c3e4:	2020      	moveq	r0, #32
 800c3e6:	2000      	movne	r0, #0
 800c3e8:	4770      	bx	lr

0800c3ea <_SetOrg>:
 800c3ea:	b508      	push	{r3, lr}
 800c3ec:	6800      	ldr	r0, [r0, #0]
 800c3ee:	68c3      	ldr	r3, [r0, #12]
 800c3f0:	6a1b      	ldr	r3, [r3, #32]
 800c3f2:	4798      	blx	r3
 800c3f4:	bd08      	pop	{r3, pc}

0800c3f6 <_GetRect>:
 800c3f6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c3f8:	6880      	ldr	r0, [r0, #8]
 800c3fa:	460c      	mov	r4, r1
 800c3fc:	f004 ffe0 	bl	80113c0 <GUI_ALLOC_LockH>
 800c400:	4603      	mov	r3, r0
 800c402:	a802      	add	r0, sp, #8
 800c404:	8899      	ldrh	r1, [r3, #4]
 800c406:	88da      	ldrh	r2, [r3, #6]
 800c408:	891d      	ldrh	r5, [r3, #8]
 800c40a:	f840 3d04 	str.w	r3, [r0, #-4]!
 800c40e:	895b      	ldrh	r3, [r3, #10]
 800c410:	8021      	strh	r1, [r4, #0]
 800c412:	8062      	strh	r2, [r4, #2]
 800c414:	4429      	add	r1, r5
 800c416:	441a      	add	r2, r3
 800c418:	3901      	subs	r1, #1
 800c41a:	3a01      	subs	r2, #1
 800c41c:	80a1      	strh	r1, [r4, #4]
 800c41e:	80e2      	strh	r2, [r4, #6]
 800c420:	f004 ffdc 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c424:	b003      	add	sp, #12
 800c426:	bd30      	pop	{r4, r5, pc}

0800c428 <_XY2PTR>:
 800c428:	4b0e      	ldr	r3, [pc, #56]	; (800c464 <_XY2PTR+0x3c>)
 800c42a:	681b      	ldr	r3, [r3, #0]
 800c42c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c42e:	4605      	mov	r5, r0
 800c430:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800c432:	460e      	mov	r6, r1
 800c434:	f004 ffc4 	bl	80113c0 <GUI_ALLOC_LockH>
 800c438:	4603      	mov	r3, r0
 800c43a:	a802      	add	r0, sp, #8
 800c43c:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 800c440:	f840 3d04 	str.w	r3, [r0, #-4]!
 800c444:	f103 0118 	add.w	r1, r3, #24
 800c448:	1b36      	subs	r6, r6, r4
 800c44a:	68dc      	ldr	r4, [r3, #12]
 800c44c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800c450:	fb04 1406 	mla	r4, r4, r6, r1
 800c454:	1aed      	subs	r5, r5, r3
 800c456:	f004 ffc1 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c45a:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800c45e:	4620      	mov	r0, r4
 800c460:	b002      	add	sp, #8
 800c462:	bd70      	pop	{r4, r5, r6, pc}
 800c464:	2000016c 	.word	0x2000016c

0800c468 <_GetPixelIndex>:
 800c468:	b508      	push	{r3, lr}
 800c46a:	4608      	mov	r0, r1
 800c46c:	4611      	mov	r1, r2
 800c46e:	f7ff ffdb 	bl	800c428 <_XY2PTR>
 800c472:	6800      	ldr	r0, [r0, #0]
 800c474:	bd08      	pop	{r3, pc}
	...

0800c478 <_XorPixel>:
 800c478:	4b15      	ldr	r3, [pc, #84]	; (800c4d0 <_XorPixel+0x58>)
 800c47a:	681b      	ldr	r3, [r3, #0]
 800c47c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c47e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800c480:	4615      	mov	r5, r2
 800c482:	460e      	mov	r6, r1
 800c484:	f004 ff9c 	bl	80113c0 <GUI_ALLOC_LockH>
 800c488:	4629      	mov	r1, r5
 800c48a:	9000      	str	r0, [sp, #0]
 800c48c:	4630      	mov	r0, r6
 800c48e:	f7ff ffcb 	bl	800c428 <_XY2PTR>
 800c492:	9b00      	ldr	r3, [sp, #0]
 800c494:	681b      	ldr	r3, [r3, #0]
 800c496:	691b      	ldr	r3, [r3, #16]
 800c498:	4604      	mov	r4, r0
 800c49a:	689b      	ldr	r3, [r3, #8]
 800c49c:	4798      	blx	r3
 800c49e:	6823      	ldr	r3, [r4, #0]
 800c4a0:	4058      	eors	r0, r3
 800c4a2:	9b00      	ldr	r3, [sp, #0]
 800c4a4:	6020      	str	r0, [r4, #0]
 800c4a6:	6958      	ldr	r0, [r3, #20]
 800c4a8:	b160      	cbz	r0, 800c4c4 <_XorPixel+0x4c>
 800c4aa:	f004 ff89 	bl	80113c0 <GUI_ALLOC_LockH>
 800c4ae:	ac02      	add	r4, sp, #8
 800c4b0:	6883      	ldr	r3, [r0, #8]
 800c4b2:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c4b6:	681b      	ldr	r3, [r3, #0]
 800c4b8:	4631      	mov	r1, r6
 800c4ba:	462a      	mov	r2, r5
 800c4bc:	4798      	blx	r3
 800c4be:	4620      	mov	r0, r4
 800c4c0:	f004 ff8c 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c4c4:	4668      	mov	r0, sp
 800c4c6:	f004 ff89 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c4ca:	b002      	add	sp, #8
 800c4cc:	bd70      	pop	{r4, r5, r6, pc}
 800c4ce:	bf00      	nop
 800c4d0:	2000016c 	.word	0x2000016c

0800c4d4 <_SetPixelIndex>:
 800c4d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c4d6:	461c      	mov	r4, r3
 800c4d8:	4b10      	ldr	r3, [pc, #64]	; (800c51c <_SetPixelIndex+0x48>)
 800c4da:	681b      	ldr	r3, [r3, #0]
 800c4dc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800c4de:	460e      	mov	r6, r1
 800c4e0:	4615      	mov	r5, r2
 800c4e2:	f004 ff6d 	bl	80113c0 <GUI_ALLOC_LockH>
 800c4e6:	4629      	mov	r1, r5
 800c4e8:	9000      	str	r0, [sp, #0]
 800c4ea:	4630      	mov	r0, r6
 800c4ec:	f7ff ff9c 	bl	800c428 <_XY2PTR>
 800c4f0:	9b00      	ldr	r3, [sp, #0]
 800c4f2:	6004      	str	r4, [r0, #0]
 800c4f4:	6958      	ldr	r0, [r3, #20]
 800c4f6:	b160      	cbz	r0, 800c512 <_SetPixelIndex+0x3e>
 800c4f8:	f004 ff62 	bl	80113c0 <GUI_ALLOC_LockH>
 800c4fc:	ac02      	add	r4, sp, #8
 800c4fe:	6883      	ldr	r3, [r0, #8]
 800c500:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c504:	681b      	ldr	r3, [r3, #0]
 800c506:	4631      	mov	r1, r6
 800c508:	462a      	mov	r2, r5
 800c50a:	4798      	blx	r3
 800c50c:	4620      	mov	r0, r4
 800c50e:	f004 ff65 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c512:	4668      	mov	r0, sp
 800c514:	f004 ff62 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c518:	b002      	add	sp, #8
 800c51a:	bd70      	pop	{r4, r5, r6, pc}
 800c51c:	2000016c 	.word	0x2000016c

0800c520 <_DrawVLine>:
 800c520:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c524:	4d2c      	ldr	r5, [pc, #176]	; (800c5d8 <_DrawVLine+0xb8>)
 800c526:	461e      	mov	r6, r3
 800c528:	682b      	ldr	r3, [r5, #0]
 800c52a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800c52c:	460f      	mov	r7, r1
 800c52e:	4614      	mov	r4, r2
 800c530:	f004 ff46 	bl	80113c0 <GUI_ALLOC_LockH>
 800c534:	9000      	str	r0, [sp, #0]
 800c536:	6940      	ldr	r0, [r0, #20]
 800c538:	46a9      	mov	r9, r5
 800c53a:	b108      	cbz	r0, 800c540 <_DrawVLine+0x20>
 800c53c:	f004 ff40 	bl	80113c0 <GUI_ALLOC_LockH>
 800c540:	9001      	str	r0, [sp, #4]
 800c542:	4621      	mov	r1, r4
 800c544:	4638      	mov	r0, r7
 800c546:	f7ff ff6f 	bl	800c428 <_XY2PTR>
 800c54a:	f8d9 2000 	ldr.w	r2, [r9]
 800c54e:	9b00      	ldr	r3, [sp, #0]
 800c550:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 800c552:	7c12      	ldrb	r2, [r2, #16]
 800c554:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800c558:	f8d1 9000 	ldr.w	r9, [r1]
 800c55c:	07d2      	lsls	r2, r2, #31
 800c55e:	4605      	mov	r5, r0
 800c560:	d51f      	bpl.n	800c5a2 <_DrawVLine+0x82>
 800c562:	681b      	ldr	r3, [r3, #0]
 800c564:	691b      	ldr	r3, [r3, #16]
 800c566:	689b      	ldr	r3, [r3, #8]
 800c568:	4798      	blx	r3
 800c56a:	4680      	mov	r8, r0
 800c56c:	9801      	ldr	r0, [sp, #4]
 800c56e:	b128      	cbz	r0, 800c57c <_DrawVLine+0x5c>
 800c570:	6882      	ldr	r2, [r0, #8]
 800c572:	4639      	mov	r1, r7
 800c574:	f8d2 c000 	ldr.w	ip, [r2]
 800c578:	4622      	mov	r2, r4
 800c57a:	47e0      	blx	ip
 800c57c:	682b      	ldr	r3, [r5, #0]
 800c57e:	ea83 0308 	eor.w	r3, r3, r8
 800c582:	602b      	str	r3, [r5, #0]
 800c584:	9b00      	ldr	r3, [sp, #0]
 800c586:	3401      	adds	r4, #1
 800c588:	68db      	ldr	r3, [r3, #12]
 800c58a:	42b4      	cmp	r4, r6
 800c58c:	441d      	add	r5, r3
 800c58e:	dded      	ble.n	800c56c <_DrawVLine+0x4c>
 800c590:	4668      	mov	r0, sp
 800c592:	f004 ff23 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c596:	9b01      	ldr	r3, [sp, #4]
 800c598:	b1d3      	cbz	r3, 800c5d0 <_DrawVLine+0xb0>
 800c59a:	a801      	add	r0, sp, #4
 800c59c:	f004 ff1e 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c5a0:	e016      	b.n	800c5d0 <_DrawVLine+0xb0>
 800c5a2:	9b01      	ldr	r3, [sp, #4]
 800c5a4:	b163      	cbz	r3, 800c5c0 <_DrawVLine+0xa0>
 800c5a6:	9801      	ldr	r0, [sp, #4]
 800c5a8:	6883      	ldr	r3, [r0, #8]
 800c5aa:	4622      	mov	r2, r4
 800c5ac:	681b      	ldr	r3, [r3, #0]
 800c5ae:	4639      	mov	r1, r7
 800c5b0:	3401      	adds	r4, #1
 800c5b2:	4798      	blx	r3
 800c5b4:	42b4      	cmp	r4, r6
 800c5b6:	f8c5 9000 	str.w	r9, [r5]
 800c5ba:	4445      	add	r5, r8
 800c5bc:	ddf3      	ble.n	800c5a6 <_DrawVLine+0x86>
 800c5be:	e7e7      	b.n	800c590 <_DrawVLine+0x70>
 800c5c0:	1b34      	subs	r4, r6, r4
 800c5c2:	3401      	adds	r4, #1
 800c5c4:	3c01      	subs	r4, #1
 800c5c6:	f8c5 9000 	str.w	r9, [r5]
 800c5ca:	4445      	add	r5, r8
 800c5cc:	d1fa      	bne.n	800c5c4 <_DrawVLine+0xa4>
 800c5ce:	e7df      	b.n	800c590 <_DrawVLine+0x70>
 800c5d0:	b003      	add	sp, #12
 800c5d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c5d6:	bf00      	nop
 800c5d8:	2000016c 	.word	0x2000016c

0800c5dc <_FillRect>:
 800c5dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5e0:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 800c690 <_FillRect+0xb4>
 800c5e4:	4614      	mov	r4, r2
 800c5e6:	f8db 2000 	ldr.w	r2, [fp]
 800c5ea:	b085      	sub	sp, #20
 800c5ec:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800c5ee:	460f      	mov	r7, r1
 800c5f0:	461d      	mov	r5, r3
 800c5f2:	f004 fee5 	bl	80113c0 <GUI_ALLOC_LockH>
 800c5f6:	4621      	mov	r1, r4
 800c5f8:	9002      	str	r0, [sp, #8]
 800c5fa:	4638      	mov	r0, r7
 800c5fc:	f7ff ff14 	bl	800c428 <_XY2PTR>
 800c600:	9a02      	ldr	r2, [sp, #8]
 800c602:	f8db 3000 	ldr.w	r3, [fp]
 800c606:	f8d2 900c 	ldr.w	r9, [r2, #12]
 800c60a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c60c:	4606      	mov	r6, r0
 800c60e:	6950      	ldr	r0, [r2, #20]
 800c610:	f8d3 a000 	ldr.w	sl, [r3]
 800c614:	1bed      	subs	r5, r5, r7
 800c616:	3501      	adds	r5, #1
 800c618:	b338      	cbz	r0, 800c66a <_FillRect+0x8e>
 800c61a:	f004 fed1 	bl	80113c0 <GUI_ALLOC_LockH>
 800c61e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c620:	f10d 0810 	add.w	r8, sp, #16
 800c624:	1b13      	subs	r3, r2, r4
 800c626:	f848 0d04 	str.w	r0, [r8, #-4]!
 800c62a:	3301      	adds	r3, #1
 800c62c:	9300      	str	r3, [sp, #0]
 800c62e:	4639      	mov	r1, r7
 800c630:	4622      	mov	r2, r4
 800c632:	462b      	mov	r3, r5
 800c634:	f008 fa3a 	bl	8014aac <GUI_USAGE_AddRect>
 800c638:	4640      	mov	r0, r8
 800c63a:	f004 fecf 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c63e:	e014      	b.n	800c66a <_FillRect+0x8e>
 800c640:	f8db 3000 	ldr.w	r3, [fp]
 800c644:	7c1b      	ldrb	r3, [r3, #16]
 800c646:	07db      	lsls	r3, r3, #31
 800c648:	d513      	bpl.n	800c672 <_FillRect+0x96>
 800c64a:	9b02      	ldr	r3, [sp, #8]
 800c64c:	681b      	ldr	r3, [r3, #0]
 800c64e:	691b      	ldr	r3, [r3, #16]
 800c650:	689b      	ldr	r3, [r3, #8]
 800c652:	4798      	blx	r3
 800c654:	4632      	mov	r2, r6
 800c656:	462b      	mov	r3, r5
 800c658:	6811      	ldr	r1, [r2, #0]
 800c65a:	3b01      	subs	r3, #1
 800c65c:	ea81 0100 	eor.w	r1, r1, r0
 800c660:	f842 1b04 	str.w	r1, [r2], #4
 800c664:	d1f8      	bne.n	800c658 <_FillRect+0x7c>
 800c666:	444e      	add	r6, r9
 800c668:	3401      	adds	r4, #1
 800c66a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c66c:	429c      	cmp	r4, r3
 800c66e:	dde7      	ble.n	800c640 <_FillRect+0x64>
 800c670:	e008      	b.n	800c684 <_FillRect+0xa8>
 800c672:	2d00      	cmp	r5, #0
 800c674:	ddf7      	ble.n	800c666 <_FillRect+0x8a>
 800c676:	462b      	mov	r3, r5
 800c678:	4632      	mov	r2, r6
 800c67a:	3b01      	subs	r3, #1
 800c67c:	f842 ab04 	str.w	sl, [r2], #4
 800c680:	d1fb      	bne.n	800c67a <_FillRect+0x9e>
 800c682:	e7f0      	b.n	800c666 <_FillRect+0x8a>
 800c684:	a802      	add	r0, sp, #8
 800c686:	f004 fea9 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c68a:	b005      	add	sp, #20
 800c68c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c690:	2000016c 	.word	0x2000016c

0800c694 <_DrawHLine>:
 800c694:	b507      	push	{r0, r1, r2, lr}
 800c696:	9200      	str	r2, [sp, #0]
 800c698:	f7ff ffa0 	bl	800c5dc <_FillRect>
 800c69c:	b003      	add	sp, #12
 800c69e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800c6a4 <_DrawBitmap>:
 800c6a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6a8:	4c9d      	ldr	r4, [pc, #628]	; (800c920 <_DrawBitmap+0x27c>)
 800c6aa:	469a      	mov	sl, r3
 800c6ac:	6823      	ldr	r3, [r4, #0]
 800c6ae:	b091      	sub	sp, #68	; 0x44
 800c6b0:	4680      	mov	r8, r0
 800c6b2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800c6b4:	9207      	str	r2, [sp, #28]
 800c6b6:	460e      	mov	r6, r1
 800c6b8:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 800c6bc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800c6be:	2800      	cmp	r0, #0
 800c6c0:	f000 8387 	beq.w	800cdd2 <_DrawBitmap+0x72e>
 800c6c4:	f004 fe7c 	bl	80113c0 <GUI_ALLOC_LockH>
 800c6c8:	900e      	str	r0, [sp, #56]	; 0x38
 800c6ca:	6940      	ldr	r0, [r0, #20]
 800c6cc:	b108      	cbz	r0, 800c6d2 <_DrawBitmap+0x2e>
 800c6ce:	f004 fe77 	bl	80113c0 <GUI_ALLOC_LockH>
 800c6d2:	900f      	str	r0, [sp, #60]	; 0x3c
 800c6d4:	a810      	add	r0, sp, #64	; 0x40
 800c6d6:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800c6da:	68db      	ldr	r3, [r3, #12]
 800c6dc:	930a      	str	r3, [sp, #40]	; 0x28
 800c6de:	f004 fe7d 	bl	80113dc <GUI_ALLOC_UnlockH>
 800c6e2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800c6e4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800c6e6:	4437      	add	r7, r6
 800c6e8:	9704      	str	r7, [sp, #16]
 800c6ea:	b150      	cbz	r0, 800c702 <_DrawBitmap+0x5e>
 800c6ec:	6823      	ldr	r3, [r4, #0]
 800c6ee:	7c1b      	ldrb	r3, [r3, #16]
 800c6f0:	079c      	lsls	r4, r3, #30
 800c6f2:	d406      	bmi.n	800c702 <_DrawBitmap+0x5e>
 800c6f4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c6f6:	9700      	str	r7, [sp, #0]
 800c6f8:	9904      	ldr	r1, [sp, #16]
 800c6fa:	9a07      	ldr	r2, [sp, #28]
 800c6fc:	4653      	mov	r3, sl
 800c6fe:	f008 f9d5 	bl	8014aac <GUI_USAGE_AddRect>
 800c702:	9804      	ldr	r0, [sp, #16]
 800c704:	9907      	ldr	r1, [sp, #28]
 800c706:	f7ff fe8f 	bl	800c428 <_XY2PTR>
 800c70a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c70c:	2f17      	cmp	r7, #23
 800c70e:	4606      	mov	r6, r0
 800c710:	dd64      	ble.n	800c7dc <_DrawBitmap+0x138>
 800c712:	ea4f 078a 	mov.w	r7, sl, lsl #2
 800c716:	9706      	str	r7, [sp, #24]
 800c718:	f04f 0900 	mov.w	r9, #0
 800c71c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c71e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800c720:	45b9      	cmp	r9, r7
 800c722:	da57      	bge.n	800c7d4 <_DrawBitmap+0x130>
 800c724:	b130      	cbz	r0, 800c734 <_DrawBitmap+0x90>
 800c726:	6883      	ldr	r3, [r0, #8]
 800c728:	9a07      	ldr	r2, [sp, #28]
 800c72a:	685c      	ldr	r4, [r3, #4]
 800c72c:	9904      	ldr	r1, [sp, #16]
 800c72e:	444a      	add	r2, r9
 800c730:	4653      	mov	r3, sl
 800c732:	47a0      	blx	r4
 800c734:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800c738:	68d8      	ldr	r0, [r3, #12]
 800c73a:	b128      	cbz	r0, 800c748 <_DrawBitmap+0xa4>
 800c73c:	4630      	mov	r0, r6
 800c73e:	4659      	mov	r1, fp
 800c740:	9a06      	ldr	r2, [sp, #24]
 800c742:	f00c faf6 	bl	8018d32 <memcpy>
 800c746:	e03e      	b.n	800c7c6 <_DrawBitmap+0x122>
 800c748:	685b      	ldr	r3, [r3, #4]
 800c74a:	4798      	blx	r3
 800c74c:	0e00      	lsrs	r0, r0, #24
 800c74e:	9005      	str	r0, [sp, #20]
 800c750:	4635      	mov	r5, r6
 800c752:	4657      	mov	r7, sl
 800c754:	465c      	mov	r4, fp
 800c756:	463b      	mov	r3, r7
 800c758:	4622      	mov	r2, r4
 800c75a:	f04f 0c00 	mov.w	ip, #0
 800c75e:	f852 1b04 	ldr.w	r1, [r2], #4
 800c762:	9805      	ldr	r0, [sp, #20]
 800c764:	0e09      	lsrs	r1, r1, #24
 800c766:	4281      	cmp	r1, r0
 800c768:	9805      	ldr	r0, [sp, #20]
 800c76a:	bf08      	it	eq
 800c76c:	f10c 0c01 	addeq.w	ip, ip, #1
 800c770:	4281      	cmp	r1, r0
 800c772:	f103 33ff 	add.w	r3, r3, #4294967295
 800c776:	d014      	beq.n	800c7a2 <_DrawBitmap+0xfe>
 800c778:	f1bc 0f00 	cmp.w	ip, #0
 800c77c:	d014      	beq.n	800c7a8 <_DrawBitmap+0x104>
 800c77e:	ea4f 038c 	mov.w	r3, ip, lsl #2
 800c782:	4628      	mov	r0, r5
 800c784:	4621      	mov	r1, r4
 800c786:	461a      	mov	r2, r3
 800c788:	9303      	str	r3, [sp, #12]
 800c78a:	f8cd c008 	str.w	ip, [sp, #8]
 800c78e:	f00c fad0 	bl	8018d32 <memcpy>
 800c792:	9b03      	ldr	r3, [sp, #12]
 800c794:	f8dd c008 	ldr.w	ip, [sp, #8]
 800c798:	441d      	add	r5, r3
 800c79a:	441c      	add	r4, r3
 800c79c:	ebcc 0707 	rsb	r7, ip, r7
 800c7a0:	e00f      	b.n	800c7c2 <_DrawBitmap+0x11e>
 800c7a2:	2b00      	cmp	r3, #0
 800c7a4:	d1db      	bne.n	800c75e <_DrawBitmap+0xba>
 800c7a6:	e7e7      	b.n	800c778 <_DrawBitmap+0xd4>
 800c7a8:	6820      	ldr	r0, [r4, #0]
 800c7aa:	0e02      	lsrs	r2, r0, #24
 800c7ac:	2aff      	cmp	r2, #255	; 0xff
 800c7ae:	d005      	beq.n	800c7bc <_DrawBitmap+0x118>
 800c7b0:	43d2      	mvns	r2, r2
 800c7b2:	6829      	ldr	r1, [r5, #0]
 800c7b4:	b2d2      	uxtb	r2, r2
 800c7b6:	f002 fc58 	bl	800f06a <GUI__MixColors>
 800c7ba:	6028      	str	r0, [r5, #0]
 800c7bc:	3504      	adds	r5, #4
 800c7be:	3404      	adds	r4, #4
 800c7c0:	3f01      	subs	r7, #1
 800c7c2:	2f00      	cmp	r7, #0
 800c7c4:	d1c7      	bne.n	800c756 <_DrawBitmap+0xb2>
 800c7c6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800c7c8:	44bb      	add	fp, r7
 800c7ca:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800c7cc:	f109 0901 	add.w	r9, r9, #1
 800c7d0:	443e      	add	r6, r7
 800c7d2:	e7a3      	b.n	800c71c <_DrawBitmap+0x78>
 800c7d4:	2800      	cmp	r0, #0
 800c7d6:	f040 82f9 	bne.w	800cdcc <_DrawBitmap+0x728>
 800c7da:	e2fa      	b.n	800cdd2 <_DrawBitmap+0x72e>
 800c7dc:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c7de:	2f10      	cmp	r7, #16
 800c7e0:	d137      	bne.n	800c852 <_DrawBitmap+0x1ae>
 800c7e2:	1f06      	subs	r6, r0, #4
 800c7e4:	2500      	movs	r5, #0
 800c7e6:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c7e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800c7ea:	42bd      	cmp	r5, r7
 800c7ec:	f280 80a0 	bge.w	800c930 <_DrawBitmap+0x28c>
 800c7f0:	9f07      	ldr	r7, [sp, #28]
 800c7f2:	442f      	add	r7, r5
 800c7f4:	b13c      	cbz	r4, 800c806 <_DrawBitmap+0x162>
 800c7f6:	68a3      	ldr	r3, [r4, #8]
 800c7f8:	9904      	ldr	r1, [sp, #16]
 800c7fa:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800c7fe:	4620      	mov	r0, r4
 800c800:	463a      	mov	r2, r7
 800c802:	4653      	mov	r3, sl
 800c804:	47e0      	blx	ip
 800c806:	f1ab 0302 	sub.w	r3, fp, #2
 800c80a:	9306      	str	r3, [sp, #24]
 800c80c:	9605      	str	r6, [sp, #20]
 800c80e:	46d1      	mov	r9, sl
 800c810:	9904      	ldr	r1, [sp, #16]
 800c812:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800c816:	9a06      	ldr	r2, [sp, #24]
 800c818:	685b      	ldr	r3, [r3, #4]
 800c81a:	f832 0f02 	ldrh.w	r0, [r2, #2]!
 800c81e:	9206      	str	r2, [sp, #24]
 800c820:	4451      	add	r1, sl
 800c822:	ebc9 0101 	rsb	r1, r9, r1
 800c826:	9103      	str	r1, [sp, #12]
 800c828:	4798      	blx	r3
 800c82a:	9b05      	ldr	r3, [sp, #20]
 800c82c:	9903      	ldr	r1, [sp, #12]
 800c82e:	f843 0f04 	str.w	r0, [r3, #4]!
 800c832:	9305      	str	r3, [sp, #20]
 800c834:	b124      	cbz	r4, 800c840 <_DrawBitmap+0x19c>
 800c836:	68a3      	ldr	r3, [r4, #8]
 800c838:	4620      	mov	r0, r4
 800c83a:	681b      	ldr	r3, [r3, #0]
 800c83c:	463a      	mov	r2, r7
 800c83e:	4798      	blx	r3
 800c840:	f1b9 0901 	subs.w	r9, r9, #1
 800c844:	d1e4      	bne.n	800c810 <_DrawBitmap+0x16c>
 800c846:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800c848:	44bb      	add	fp, r7
 800c84a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800c84c:	3501      	adds	r5, #1
 800c84e:	443e      	add	r6, r7
 800c850:	e7c9      	b.n	800c7e6 <_DrawBitmap+0x142>
 800c852:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c854:	2f08      	cmp	r7, #8
 800c856:	f100 0604 	add.w	r6, r0, #4
 800c85a:	d16d      	bne.n	800c938 <_DrawBitmap+0x294>
 800c85c:	9f07      	ldr	r7, [sp, #28]
 800c85e:	9907      	ldr	r1, [sp, #28]
 800c860:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800c862:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800c864:	1a7b      	subs	r3, r7, r1
 800c866:	4293      	cmp	r3, r2
 800c868:	f1a6 0004 	sub.w	r0, r6, #4
 800c86c:	da60      	bge.n	800c930 <_DrawBitmap+0x28c>
 800c86e:	4b2c      	ldr	r3, [pc, #176]	; (800c920 <_DrawBitmap+0x27c>)
 800c870:	681b      	ldr	r3, [r3, #0]
 800c872:	7c1b      	ldrb	r3, [r3, #16]
 800c874:	b36d      	cbz	r5, 800c8d2 <_DrawBitmap+0x22e>
 800c876:	f013 0303 	ands.w	r3, r3, #3
 800c87a:	d005      	beq.n	800c888 <_DrawBitmap+0x1e4>
 800c87c:	2b02      	cmp	r3, #2
 800c87e:	d151      	bne.n	800c924 <_DrawBitmap+0x280>
 800c880:	46b1      	mov	r9, r6
 800c882:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800c886:	e01c      	b.n	800c8c2 <_DrawBitmap+0x21e>
 800c888:	f81b 2003 	ldrb.w	r2, [fp, r3]
 800c88c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800c890:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800c894:	3301      	adds	r3, #1
 800c896:	4553      	cmp	r3, sl
 800c898:	d1f6      	bne.n	800c888 <_DrawBitmap+0x1e4>
 800c89a:	e043      	b.n	800c924 <_DrawBitmap+0x280>
 800c89c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800c8a0:	f849 3c04 	str.w	r3, [r9, #-4]
 800c8a4:	b12c      	cbz	r4, 800c8b2 <_DrawBitmap+0x20e>
 800c8a6:	68a3      	ldr	r3, [r4, #8]
 800c8a8:	4620      	mov	r0, r4
 800c8aa:	681b      	ldr	r3, [r3, #0]
 800c8ac:	4641      	mov	r1, r8
 800c8ae:	463a      	mov	r2, r7
 800c8b0:	4798      	blx	r3
 800c8b2:	9b04      	ldr	r3, [sp, #16]
 800c8b4:	f108 0801 	add.w	r8, r8, #1
 800c8b8:	4453      	add	r3, sl
 800c8ba:	4543      	cmp	r3, r8
 800c8bc:	f109 0904 	add.w	r9, r9, #4
 800c8c0:	d030      	beq.n	800c924 <_DrawBitmap+0x280>
 800c8c2:	9804      	ldr	r0, [sp, #16]
 800c8c4:	ebc0 030b 	rsb	r3, r0, fp
 800c8c8:	f813 3008 	ldrb.w	r3, [r3, r8]
 800c8cc:	2b00      	cmp	r3, #0
 800c8ce:	d0f0      	beq.n	800c8b2 <_DrawBitmap+0x20e>
 800c8d0:	e7e4      	b.n	800c89c <_DrawBitmap+0x1f8>
 800c8d2:	f013 0303 	ands.w	r3, r3, #3
 800c8d6:	d005      	beq.n	800c8e4 <_DrawBitmap+0x240>
 800c8d8:	2b02      	cmp	r3, #2
 800c8da:	d123      	bne.n	800c924 <_DrawBitmap+0x280>
 800c8dc:	46b1      	mov	r9, r6
 800c8de:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800c8e2:	e015      	b.n	800c910 <_DrawBitmap+0x26c>
 800c8e4:	4659      	mov	r1, fp
 800c8e6:	4652      	mov	r2, sl
 800c8e8:	f00c fa23 	bl	8018d32 <memcpy>
 800c8ec:	e01a      	b.n	800c924 <_DrawBitmap+0x280>
 800c8ee:	f849 3c04 	str.w	r3, [r9, #-4]
 800c8f2:	b12c      	cbz	r4, 800c900 <_DrawBitmap+0x25c>
 800c8f4:	68a3      	ldr	r3, [r4, #8]
 800c8f6:	4620      	mov	r0, r4
 800c8f8:	681b      	ldr	r3, [r3, #0]
 800c8fa:	4641      	mov	r1, r8
 800c8fc:	463a      	mov	r2, r7
 800c8fe:	4798      	blx	r3
 800c900:	9b04      	ldr	r3, [sp, #16]
 800c902:	f108 0801 	add.w	r8, r8, #1
 800c906:	4453      	add	r3, sl
 800c908:	4543      	cmp	r3, r8
 800c90a:	f109 0904 	add.w	r9, r9, #4
 800c90e:	d009      	beq.n	800c924 <_DrawBitmap+0x280>
 800c910:	9904      	ldr	r1, [sp, #16]
 800c912:	ebc1 030b 	rsb	r3, r1, fp
 800c916:	f813 3008 	ldrb.w	r3, [r3, r8]
 800c91a:	2b00      	cmp	r3, #0
 800c91c:	d0f0      	beq.n	800c900 <_DrawBitmap+0x25c>
 800c91e:	e7e6      	b.n	800c8ee <_DrawBitmap+0x24a>
 800c920:	2000016c 	.word	0x2000016c
 800c924:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c926:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c928:	4493      	add	fp, r2
 800c92a:	3701      	adds	r7, #1
 800c92c:	441e      	add	r6, r3
 800c92e:	e796      	b.n	800c85e <_DrawBitmap+0x1ba>
 800c930:	2c00      	cmp	r4, #0
 800c932:	f040 824b 	bne.w	800cdcc <_DrawBitmap+0x728>
 800c936:	e24c      	b.n	800cdd2 <_DrawBitmap+0x72e>
 800c938:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800c93a:	4bb2      	ldr	r3, [pc, #712]	; (800cc04 <_DrawBitmap+0x560>)
 800c93c:	9609      	str	r6, [sp, #36]	; 0x24
 800c93e:	007f      	lsls	r7, r7, #1
 800c940:	970c      	str	r7, [sp, #48]	; 0x30
 800c942:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800c944:	00bf      	lsls	r7, r7, #2
 800c946:	970d      	str	r7, [sp, #52]	; 0x34
 800c948:	9f07      	ldr	r7, [sp, #28]
 800c94a:	9705      	str	r7, [sp, #20]
 800c94c:	2d00      	cmp	r5, #0
 800c94e:	bf08      	it	eq
 800c950:	461d      	moveq	r5, r3
 800c952:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800c954:	9807      	ldr	r0, [sp, #28]
 800c956:	1f3c      	subs	r4, r7, #4
 800c958:	9f05      	ldr	r7, [sp, #20]
 800c95a:	1a3b      	subs	r3, r7, r0
 800c95c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c95e:	42bb      	cmp	r3, r7
 800c960:	f280 8232 	bge.w	800cdc8 <_DrawBitmap+0x724>
 800c964:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c966:	2f02      	cmp	r7, #2
 800c968:	f000 80ad 	beq.w	800cac6 <_DrawBitmap+0x422>
 800c96c:	2f04      	cmp	r7, #4
 800c96e:	f000 814f 	beq.w	800cc10 <_DrawBitmap+0x56c>
 800c972:	2f01      	cmp	r7, #1
 800c974:	f040 821e 	bne.w	800cdb4 <_DrawBitmap+0x710>
 800c978:	f8df 9290 	ldr.w	r9, [pc, #656]	; 800cc0c <_DrawBitmap+0x568>
 800c97c:	f8d9 3000 	ldr.w	r3, [r9]
 800c980:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800c982:	f004 fd1d 	bl	80113c0 <GUI_ALLOC_LockH>
 800c986:	f89b 3000 	ldrb.w	r3, [fp]
 800c98a:	4a9f      	ldr	r2, [pc, #636]	; (800cc08 <_DrawBitmap+0x564>)
 800c98c:	991e      	ldr	r1, [sp, #120]	; 0x78
 800c98e:	5cd6      	ldrb	r6, [r2, r3]
 800c990:	f8d9 3000 	ldr.w	r3, [r9]
 800c994:	900e      	str	r0, [sp, #56]	; 0x38
 800c996:	7c1b      	ldrb	r3, [r3, #16]
 800c998:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800c99c:	f003 0303 	and.w	r3, r3, #3
 800c9a0:	2b02      	cmp	r3, #2
 800c9a2:	4657      	mov	r7, sl
 800c9a4:	f1c1 0808 	rsb	r8, r1, #8
 800c9a8:	fa46 f601 	asr.w	r6, r6, r1
 800c9ac:	d020      	beq.n	800c9f0 <_DrawBitmap+0x34c>
 800c9ae:	2b03      	cmp	r3, #3
 800c9b0:	d061      	beq.n	800ca76 <_DrawBitmap+0x3d2>
 800c9b2:	2b01      	cmp	r3, #1
 800c9b4:	d05f      	beq.n	800ca76 <_DrawBitmap+0x3d2>
 800c9b6:	465a      	mov	r2, fp
 800c9b8:	4547      	cmp	r7, r8
 800c9ba:	bf38      	it	cc
 800c9bc:	46b8      	movcc	r8, r7
 800c9be:	ebc8 0707 	rsb	r7, r8, r7
 800c9c2:	4643      	mov	r3, r8
 800c9c4:	4621      	mov	r1, r4
 800c9c6:	f006 0001 	and.w	r0, r6, #1
 800c9ca:	3b01      	subs	r3, #1
 800c9cc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800c9d0:	f841 0b04 	str.w	r0, [r1], #4
 800c9d4:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800c9d8:	d1f5      	bne.n	800c9c6 <_DrawBitmap+0x322>
 800c9da:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800c9de:	2f00      	cmp	r7, #0
 800c9e0:	d06d      	beq.n	800cabe <_DrawBitmap+0x41a>
 800c9e2:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800c9e6:	4988      	ldr	r1, [pc, #544]	; (800cc08 <_DrawBitmap+0x564>)
 800c9e8:	f04f 0808 	mov.w	r8, #8
 800c9ec:	5cce      	ldrb	r6, [r1, r3]
 800c9ee:	e7e3      	b.n	800c9b8 <_DrawBitmap+0x314>
 800c9f0:	686b      	ldr	r3, [r5, #4]
 800c9f2:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800c9f6:	930b      	str	r3, [sp, #44]	; 0x2c
 800c9f8:	f8cd b020 	str.w	fp, [sp, #32]
 800c9fc:	4547      	cmp	r7, r8
 800c9fe:	bf38      	it	cc
 800ca00:	46b8      	movcc	r8, r7
 800ca02:	ebc8 0707 	rsb	r7, r8, r7
 800ca06:	f1bc 0f00 	cmp.w	ip, #0
 800ca0a:	d026      	beq.n	800ca5a <_DrawBitmap+0x3b6>
 800ca0c:	b91e      	cbnz	r6, 800ca16 <_DrawBitmap+0x372>
 800ca0e:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800ca12:	44c1      	add	r9, r8
 800ca14:	e025      	b.n	800ca62 <_DrawBitmap+0x3be>
 800ca16:	07f0      	lsls	r0, r6, #31
 800ca18:	d50c      	bpl.n	800ca34 <_DrawBitmap+0x390>
 800ca1a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800ca1e:	9a05      	ldr	r2, [sp, #20]
 800ca20:	681b      	ldr	r3, [r3, #0]
 800ca22:	f8cd c008 	str.w	ip, [sp, #8]
 800ca26:	4660      	mov	r0, ip
 800ca28:	4649      	mov	r1, r9
 800ca2a:	4798      	blx	r3
 800ca2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ca2e:	f8dd c008 	ldr.w	ip, [sp, #8]
 800ca32:	6023      	str	r3, [r4, #0]
 800ca34:	f1b8 0801 	subs.w	r8, r8, #1
 800ca38:	f109 0901 	add.w	r9, r9, #1
 800ca3c:	f104 0404 	add.w	r4, r4, #4
 800ca40:	d00f      	beq.n	800ca62 <_DrawBitmap+0x3be>
 800ca42:	0876      	lsrs	r6, r6, #1
 800ca44:	e7e2      	b.n	800ca0c <_DrawBitmap+0x368>
 800ca46:	07f1      	lsls	r1, r6, #31
 800ca48:	bf44      	itt	mi
 800ca4a:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 800ca4c:	6023      	strmi	r3, [r4, #0]
 800ca4e:	f1b8 0801 	subs.w	r8, r8, #1
 800ca52:	f104 0404 	add.w	r4, r4, #4
 800ca56:	d004      	beq.n	800ca62 <_DrawBitmap+0x3be>
 800ca58:	0876      	lsrs	r6, r6, #1
 800ca5a:	2e00      	cmp	r6, #0
 800ca5c:	d1f3      	bne.n	800ca46 <_DrawBitmap+0x3a2>
 800ca5e:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800ca62:	b367      	cbz	r7, 800cabe <_DrawBitmap+0x41a>
 800ca64:	9808      	ldr	r0, [sp, #32]
 800ca66:	4a68      	ldr	r2, [pc, #416]	; (800cc08 <_DrawBitmap+0x564>)
 800ca68:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800ca6c:	9008      	str	r0, [sp, #32]
 800ca6e:	5cd6      	ldrb	r6, [r2, r3]
 800ca70:	f04f 0808 	mov.w	r8, #8
 800ca74:	e7c2      	b.n	800c9fc <_DrawBitmap+0x358>
 800ca76:	6803      	ldr	r3, [r0, #0]
 800ca78:	691b      	ldr	r3, [r3, #16]
 800ca7a:	689b      	ldr	r3, [r3, #8]
 800ca7c:	4798      	blx	r3
 800ca7e:	4659      	mov	r1, fp
 800ca80:	4547      	cmp	r7, r8
 800ca82:	bf38      	it	cc
 800ca84:	46b8      	movcc	r8, r7
 800ca86:	ebc8 0707 	rsb	r7, r8, r7
 800ca8a:	1d23      	adds	r3, r4, #4
 800ca8c:	46c6      	mov	lr, r8
 800ca8e:	07f2      	lsls	r2, r6, #31
 800ca90:	d504      	bpl.n	800ca9c <_DrawBitmap+0x3f8>
 800ca92:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800ca96:	4042      	eors	r2, r0
 800ca98:	f843 2c04 	str.w	r2, [r3, #-4]
 800ca9c:	f1be 0e01 	subs.w	lr, lr, #1
 800caa0:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800caa4:	f103 0304 	add.w	r3, r3, #4
 800caa8:	d1f1      	bne.n	800ca8e <_DrawBitmap+0x3ea>
 800caaa:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800caae:	b137      	cbz	r7, 800cabe <_DrawBitmap+0x41a>
 800cab0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800cab4:	4a54      	ldr	r2, [pc, #336]	; (800cc08 <_DrawBitmap+0x564>)
 800cab6:	f04f 0808 	mov.w	r8, #8
 800caba:	5cd6      	ldrb	r6, [r2, r3]
 800cabc:	e7e0      	b.n	800ca80 <_DrawBitmap+0x3dc>
 800cabe:	a80e      	add	r0, sp, #56	; 0x38
 800cac0:	f004 fc8c 	bl	80113dc <GUI_ALLOC_UnlockH>
 800cac4:	e176      	b.n	800cdb4 <_DrawBitmap+0x710>
 800cac6:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800cac8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800caca:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800cace:	f1c7 0604 	rsb	r6, r7, #4
 800cad2:	f89b 7000 	ldrb.w	r7, [fp]
 800cad6:	409f      	lsls	r7, r3
 800cad8:	4b4c      	ldr	r3, [pc, #304]	; (800cc0c <_DrawBitmap+0x568>)
 800cada:	681b      	ldr	r3, [r3, #0]
 800cadc:	7c1b      	ldrb	r3, [r3, #16]
 800cade:	f003 0303 	and.w	r3, r3, #3
 800cae2:	2b01      	cmp	r3, #1
 800cae4:	b2f6      	uxtb	r6, r6
 800cae6:	b2ff      	uxtb	r7, r7
 800cae8:	d066      	beq.n	800cbb8 <_DrawBitmap+0x514>
 800caea:	d308      	bcc.n	800cafe <_DrawBitmap+0x45a>
 800caec:	2b02      	cmp	r3, #2
 800caee:	f040 8161 	bne.w	800cdb4 <_DrawBitmap+0x710>
 800caf2:	9804      	ldr	r0, [sp, #16]
 800caf4:	f8cd b020 	str.w	fp, [sp, #32]
 800caf8:	46d0      	mov	r8, sl
 800cafa:	9006      	str	r0, [sp, #24]
 800cafc:	e03e      	b.n	800cb7c <_DrawBitmap+0x4d8>
 800cafe:	465a      	mov	r2, fp
 800cb00:	4653      	mov	r3, sl
 800cb02:	429e      	cmp	r6, r3
 800cb04:	bfc8      	it	gt
 800cb06:	b2de      	uxtbgt	r6, r3
 800cb08:	1b9b      	subs	r3, r3, r6
 800cb0a:	4631      	mov	r1, r6
 800cb0c:	4620      	mov	r0, r4
 800cb0e:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 800cb12:	3901      	subs	r1, #1
 800cb14:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 800cb18:	f840 cb04 	str.w	ip, [r0], #4
 800cb1c:	00bf      	lsls	r7, r7, #2
 800cb1e:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800cb22:	b2ff      	uxtb	r7, r7
 800cb24:	d1f3      	bne.n	800cb0e <_DrawBitmap+0x46a>
 800cb26:	3e01      	subs	r6, #1
 800cb28:	b2f6      	uxtb	r6, r6
 800cb2a:	3601      	adds	r6, #1
 800cb2c:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800cb30:	2b00      	cmp	r3, #0
 800cb32:	f000 813f 	beq.w	800cdb4 <_DrawBitmap+0x710>
 800cb36:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800cb3a:	2604      	movs	r6, #4
 800cb3c:	e7e1      	b.n	800cb02 <_DrawBitmap+0x45e>
 800cb3e:	9906      	ldr	r1, [sp, #24]
 800cb40:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800cb44:	4449      	add	r1, r9
 800cb46:	d122      	bne.n	800cb8e <_DrawBitmap+0x4ea>
 800cb48:	f109 0901 	add.w	r9, r9, #1
 800cb4c:	fa5f f289 	uxtb.w	r2, r9
 800cb50:	00bf      	lsls	r7, r7, #2
 800cb52:	4296      	cmp	r6, r2
 800cb54:	b2ff      	uxtb	r7, r7
 800cb56:	d1f2      	bne.n	800cb3e <_DrawBitmap+0x49a>
 800cb58:	9f06      	ldr	r7, [sp, #24]
 800cb5a:	3e01      	subs	r6, #1
 800cb5c:	b2f6      	uxtb	r6, r6
 800cb5e:	1c7b      	adds	r3, r7, #1
 800cb60:	1c72      	adds	r2, r6, #1
 800cb62:	199e      	adds	r6, r3, r6
 800cb64:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 800cb68:	9606      	str	r6, [sp, #24]
 800cb6a:	f1b8 0f00 	cmp.w	r8, #0
 800cb6e:	f000 8121 	beq.w	800cdb4 <_DrawBitmap+0x710>
 800cb72:	9b08      	ldr	r3, [sp, #32]
 800cb74:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800cb78:	9308      	str	r3, [sp, #32]
 800cb7a:	2604      	movs	r6, #4
 800cb7c:	4546      	cmp	r6, r8
 800cb7e:	bfc8      	it	gt
 800cb80:	fa5f f688 	uxtbgt.w	r6, r8
 800cb84:	ebc6 0808 	rsb	r8, r6, r8
 800cb88:	f04f 0900 	mov.w	r9, #0
 800cb8c:	e7d7      	b.n	800cb3e <_DrawBitmap+0x49a>
 800cb8e:	09ba      	lsrs	r2, r7, #6
 800cb90:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800cb94:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 800cb98:	f1bc 0f00 	cmp.w	ip, #0
 800cb9c:	d0d4      	beq.n	800cb48 <_DrawBitmap+0x4a4>
 800cb9e:	f8dc 2008 	ldr.w	r2, [ip, #8]
 800cba2:	6812      	ldr	r2, [r2, #0]
 800cba4:	920b      	str	r2, [sp, #44]	; 0x2c
 800cba6:	4660      	mov	r0, ip
 800cba8:	f8cd c008 	str.w	ip, [sp, #8]
 800cbac:	9a05      	ldr	r2, [sp, #20]
 800cbae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800cbb0:	4798      	blx	r3
 800cbb2:	f8dd c008 	ldr.w	ip, [sp, #8]
 800cbb6:	e7c7      	b.n	800cb48 <_DrawBitmap+0x4a4>
 800cbb8:	4658      	mov	r0, fp
 800cbba:	4653      	mov	r3, sl
 800cbbc:	429e      	cmp	r6, r3
 800cbbe:	bfc8      	it	gt
 800cbc0:	b2de      	uxtbgt	r6, r3
 800cbc2:	1b9b      	subs	r3, r3, r6
 800cbc4:	1d22      	adds	r2, r4, #4
 800cbc6:	46b4      	mov	ip, r6
 800cbc8:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800cbcc:	d005      	beq.n	800cbda <_DrawBitmap+0x536>
 800cbce:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800cbd2:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800cbd6:	f842 1c04 	str.w	r1, [r2, #-4]
 800cbda:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cbde:	00bf      	lsls	r7, r7, #2
 800cbe0:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800cbe4:	b2ff      	uxtb	r7, r7
 800cbe6:	f102 0204 	add.w	r2, r2, #4
 800cbea:	d1ed      	bne.n	800cbc8 <_DrawBitmap+0x524>
 800cbec:	3e01      	subs	r6, #1
 800cbee:	b2f6      	uxtb	r6, r6
 800cbf0:	3601      	adds	r6, #1
 800cbf2:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800cbf6:	2b00      	cmp	r3, #0
 800cbf8:	f000 80dc 	beq.w	800cdb4 <_DrawBitmap+0x710>
 800cbfc:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800cc00:	2604      	movs	r6, #4
 800cc02:	e7db      	b.n	800cbbc <_DrawBitmap+0x518>
 800cc04:	08019908 	.word	0x08019908
 800cc08:	0801f178 	.word	0x0801f178
 800cc0c:	2000016c 	.word	0x2000016c
 800cc10:	4a71      	ldr	r2, [pc, #452]	; (800cdd8 <_DrawBitmap+0x734>)
 800cc12:	f89b 3000 	ldrb.w	r3, [fp]
 800cc16:	6812      	ldr	r2, [r2, #0]
 800cc18:	980d      	ldr	r0, [sp, #52]	; 0x34
 800cc1a:	7c12      	ldrb	r2, [r2, #16]
 800cc1c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800cc1e:	f002 0203 	and.w	r2, r2, #3
 800cc22:	4083      	lsls	r3, r0
 800cc24:	2a01      	cmp	r2, #1
 800cc26:	b2de      	uxtb	r6, r3
 800cc28:	f000 809c 	beq.w	800cd64 <_DrawBitmap+0x6c0>
 800cc2c:	d302      	bcc.n	800cc34 <_DrawBitmap+0x590>
 800cc2e:	2a02      	cmp	r2, #2
 800cc30:	d035      	beq.n	800cc9e <_DrawBitmap+0x5fa>
 800cc32:	e0bf      	b.n	800cdb4 <_DrawBitmap+0x710>
 800cc34:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800cc36:	b15f      	cbz	r7, 800cc50 <_DrawBitmap+0x5ac>
 800cc38:	0936      	lsrs	r6, r6, #4
 800cc3a:	f10b 0201 	add.w	r2, fp, #1
 800cc3e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800cc42:	6023      	str	r3, [r4, #0]
 800cc44:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800cc48:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800cc4a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800cc4e:	e001      	b.n	800cc54 <_DrawBitmap+0x5b0>
 800cc50:	4653      	mov	r3, sl
 800cc52:	465a      	mov	r2, fp
 800cc54:	2b01      	cmp	r3, #1
 800cc56:	dd1a      	ble.n	800cc8e <_DrawBitmap+0x5ea>
 800cc58:	1058      	asrs	r0, r3, #1
 800cc5a:	f104 0108 	add.w	r1, r4, #8
 800cc5e:	f003 0301 	and.w	r3, r3, #1
 800cc62:	eb02 0800 	add.w	r8, r2, r0
 800cc66:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 800cc6a:	f006 060f 	and.w	r6, r6, #15
 800cc6e:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 800cc72:	f841 7c08 	str.w	r7, [r1, #-8]
 800cc76:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 800cc7a:	f841 6c04 	str.w	r6, [r1, #-4]
 800cc7e:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800cc82:	4542      	cmp	r2, r8
 800cc84:	f101 0108 	add.w	r1, r1, #8
 800cc88:	d1ed      	bne.n	800cc66 <_DrawBitmap+0x5c2>
 800cc8a:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 800cc8e:	2b00      	cmp	r3, #0
 800cc90:	f000 8090 	beq.w	800cdb4 <_DrawBitmap+0x710>
 800cc94:	0936      	lsrs	r6, r6, #4
 800cc96:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800cc9a:	6023      	str	r3, [r4, #0]
 800cc9c:	e08a      	b.n	800cdb4 <_DrawBitmap+0x710>
 800cc9e:	981e      	ldr	r0, [sp, #120]	; 0x78
 800cca0:	b1c0      	cbz	r0, 800ccd4 <_DrawBitmap+0x630>
 800cca2:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800cca6:	d00a      	beq.n	800ccbe <_DrawBitmap+0x61a>
 800cca8:	0936      	lsrs	r6, r6, #4
 800ccaa:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800ccae:	6023      	str	r3, [r4, #0]
 800ccb0:	b12f      	cbz	r7, 800ccbe <_DrawBitmap+0x61a>
 800ccb2:	68bb      	ldr	r3, [r7, #8]
 800ccb4:	9904      	ldr	r1, [sp, #16]
 800ccb6:	681b      	ldr	r3, [r3, #0]
 800ccb8:	9a05      	ldr	r2, [sp, #20]
 800ccba:	4638      	mov	r0, r7
 800ccbc:	4798      	blx	r3
 800ccbe:	9904      	ldr	r1, [sp, #16]
 800ccc0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800ccc2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800ccc6:	f101 0801 	add.w	r8, r1, #1
 800ccca:	f10a 3cff 	add.w	ip, sl, #4294967295
 800ccce:	f10b 0901 	add.w	r9, fp, #1
 800ccd2:	e011      	b.n	800ccf8 <_DrawBitmap+0x654>
 800ccd4:	46d4      	mov	ip, sl
 800ccd6:	46d9      	mov	r9, fp
 800ccd8:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800ccdc:	e00c      	b.n	800ccf8 <_DrawBitmap+0x654>
 800ccde:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 800cce2:	d10d      	bne.n	800cd00 <_DrawBitmap+0x65c>
 800cce4:	f016 060f 	ands.w	r6, r6, #15
 800cce8:	d11b      	bne.n	800cd22 <_DrawBitmap+0x67e>
 800ccea:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 800ccee:	3408      	adds	r4, #8
 800ccf0:	f108 0802 	add.w	r8, r8, #2
 800ccf4:	f1ac 0c02 	sub.w	ip, ip, #2
 800ccf8:	f1bc 0f01 	cmp.w	ip, #1
 800ccfc:	dcef      	bgt.n	800ccde <_DrawBitmap+0x63a>
 800ccfe:	e021      	b.n	800cd44 <_DrawBitmap+0x6a0>
 800cd00:	0933      	lsrs	r3, r6, #4
 800cd02:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800cd06:	6023      	str	r3, [r4, #0]
 800cd08:	2f00      	cmp	r7, #0
 800cd0a:	d0eb      	beq.n	800cce4 <_DrawBitmap+0x640>
 800cd0c:	68bb      	ldr	r3, [r7, #8]
 800cd0e:	9a05      	ldr	r2, [sp, #20]
 800cd10:	681b      	ldr	r3, [r3, #0]
 800cd12:	f8cd c008 	str.w	ip, [sp, #8]
 800cd16:	4638      	mov	r0, r7
 800cd18:	4641      	mov	r1, r8
 800cd1a:	4798      	blx	r3
 800cd1c:	f8dd c008 	ldr.w	ip, [sp, #8]
 800cd20:	e7e0      	b.n	800cce4 <_DrawBitmap+0x640>
 800cd22:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800cd26:	6063      	str	r3, [r4, #4]
 800cd28:	2f00      	cmp	r7, #0
 800cd2a:	d0de      	beq.n	800ccea <_DrawBitmap+0x646>
 800cd2c:	68bb      	ldr	r3, [r7, #8]
 800cd2e:	9a05      	ldr	r2, [sp, #20]
 800cd30:	681b      	ldr	r3, [r3, #0]
 800cd32:	f8cd c008 	str.w	ip, [sp, #8]
 800cd36:	4638      	mov	r0, r7
 800cd38:	f108 0101 	add.w	r1, r8, #1
 800cd3c:	4798      	blx	r3
 800cd3e:	f8dd c008 	ldr.w	ip, [sp, #8]
 800cd42:	e7d2      	b.n	800ccea <_DrawBitmap+0x646>
 800cd44:	f1bc 0f00 	cmp.w	ip, #0
 800cd48:	d034      	beq.n	800cdb4 <_DrawBitmap+0x710>
 800cd4a:	0936      	lsrs	r6, r6, #4
 800cd4c:	d032      	beq.n	800cdb4 <_DrawBitmap+0x710>
 800cd4e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800cd52:	6023      	str	r3, [r4, #0]
 800cd54:	b377      	cbz	r7, 800cdb4 <_DrawBitmap+0x710>
 800cd56:	68bb      	ldr	r3, [r7, #8]
 800cd58:	9a05      	ldr	r2, [sp, #20]
 800cd5a:	681b      	ldr	r3, [r3, #0]
 800cd5c:	4638      	mov	r0, r7
 800cd5e:	4641      	mov	r1, r8
 800cd60:	4798      	blx	r3
 800cd62:	e027      	b.n	800cdb4 <_DrawBitmap+0x710>
 800cd64:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800cd66:	f1c7 0302 	rsb	r3, r7, #2
 800cd6a:	b2db      	uxtb	r3, r3
 800cd6c:	465f      	mov	r7, fp
 800cd6e:	4652      	mov	r2, sl
 800cd70:	4293      	cmp	r3, r2
 800cd72:	bfc8      	it	gt
 800cd74:	b2d3      	uxtbgt	r3, r2
 800cd76:	1ad2      	subs	r2, r2, r3
 800cd78:	1d20      	adds	r0, r4, #4
 800cd7a:	469c      	mov	ip, r3
 800cd7c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800cd80:	d005      	beq.n	800cd8e <_DrawBitmap+0x6ea>
 800cd82:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800cd86:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800cd8a:	f840 1c04 	str.w	r1, [r0, #-4]
 800cd8e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cd92:	0136      	lsls	r6, r6, #4
 800cd94:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800cd98:	b2f6      	uxtb	r6, r6
 800cd9a:	f100 0004 	add.w	r0, r0, #4
 800cd9e:	d1ed      	bne.n	800cd7c <_DrawBitmap+0x6d8>
 800cda0:	3b01      	subs	r3, #1
 800cda2:	b2db      	uxtb	r3, r3
 800cda4:	3301      	adds	r3, #1
 800cda6:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800cdaa:	b11a      	cbz	r2, 800cdb4 <_DrawBitmap+0x710>
 800cdac:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800cdb0:	2302      	movs	r3, #2
 800cdb2:	e7dd      	b.n	800cd70 <_DrawBitmap+0x6cc>
 800cdb4:	9b05      	ldr	r3, [sp, #20]
 800cdb6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800cdb8:	3301      	adds	r3, #1
 800cdba:	44bb      	add	fp, r7
 800cdbc:	9305      	str	r3, [sp, #20]
 800cdbe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800cdc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cdc2:	443b      	add	r3, r7
 800cdc4:	9309      	str	r3, [sp, #36]	; 0x24
 800cdc6:	e5c4      	b.n	800c952 <_DrawBitmap+0x2ae>
 800cdc8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cdca:	b113      	cbz	r3, 800cdd2 <_DrawBitmap+0x72e>
 800cdcc:	a80f      	add	r0, sp, #60	; 0x3c
 800cdce:	f004 fb05 	bl	80113dc <GUI_ALLOC_UnlockH>
 800cdd2:	b011      	add	sp, #68	; 0x44
 800cdd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdd8:	2000016c 	.word	0x2000016c

0800cddc <GUI_MEMDEV__WriteToActiveAt>:
 800cddc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cde0:	460e      	mov	r6, r1
 800cde2:	4690      	mov	r8, r2
 800cde4:	4607      	mov	r7, r0
 800cde6:	f004 faeb 	bl	80113c0 <GUI_ALLOC_LockH>
 800cdea:	6803      	ldr	r3, [r0, #0]
 800cdec:	ac02      	add	r4, sp, #8
 800cdee:	68db      	ldr	r3, [r3, #12]
 800cdf0:	f844 0d04 	str.w	r0, [r4, #-4]!
 800cdf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cdf6:	2000      	movs	r0, #0
 800cdf8:	2116      	movs	r1, #22
 800cdfa:	4798      	blx	r3
 800cdfc:	4605      	mov	r5, r0
 800cdfe:	4620      	mov	r0, r4
 800ce00:	f004 faec 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ce04:	b11d      	cbz	r5, 800ce0e <GUI_MEMDEV__WriteToActiveAt+0x32>
 800ce06:	4638      	mov	r0, r7
 800ce08:	4631      	mov	r1, r6
 800ce0a:	4642      	mov	r2, r8
 800ce0c:	47a8      	blx	r5
 800ce0e:	b002      	add	sp, #8
 800ce10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ce14 <GUI_MEMDEV__CreateFixed>:
 800ce14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce18:	4e3e      	ldr	r6, [pc, #248]	; (800cf14 <GUI_MEMDEV__CreateFixed+0x100>)
 800ce1a:	b087      	sub	sp, #28
 800ce1c:	461d      	mov	r5, r3
 800ce1e:	6833      	ldr	r3, [r6, #0]
 800ce20:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800ce22:	7c5b      	ldrb	r3, [r3, #17]
 800ce24:	4683      	mov	fp, r0
 800ce26:	468a      	mov	sl, r1
 800ce28:	4690      	mov	r8, r2
 800ce2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ce2c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800ce2e:	2200      	movs	r2, #0
 800ce30:	f003 fd7e 	bl	8010930 <GUI_DEVICE_Create>
 800ce34:	4604      	mov	r4, r0
 800ce36:	2800      	cmp	r0, #0
 800ce38:	d033      	beq.n	800cea2 <GUI_MEMDEV__CreateFixed+0x8e>
 800ce3a:	6903      	ldr	r3, [r0, #16]
 800ce3c:	689b      	ldr	r3, [r3, #8]
 800ce3e:	4798      	blx	r3
 800ce40:	f001 fb67 	bl	800e512 <LCD__GetBPPDevice>
 800ce44:	fb08 f600 	mul.w	r6, r8, r0
 800ce48:	9003      	str	r0, [sp, #12]
 800ce4a:	3607      	adds	r6, #7
 800ce4c:	f004 fc80 	bl	8011750 <GUI_ALLOC_RequestSize>
 800ce50:	f017 0901 	ands.w	r9, r7, #1
 800ce54:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 800ce58:	d104      	bne.n	800ce64 <GUI_MEMDEV__CreateFixed+0x50>
 800ce5a:	2304      	movs	r3, #4
 800ce5c:	fb90 f0f3 	sdiv	r0, r0, r3
 800ce60:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800ce64:	2d00      	cmp	r5, #0
 800ce66:	dc09      	bgt.n	800ce7c <GUI_MEMDEV__CreateFixed+0x68>
 800ce68:	b11e      	cbz	r6, 800ce72 <GUI_MEMDEV__CreateFixed+0x5e>
 800ce6a:	3818      	subs	r0, #24
 800ce6c:	fbb0 f0f6 	udiv	r0, r0, r6
 800ce70:	e000      	b.n	800ce74 <GUI_MEMDEV__CreateFixed+0x60>
 800ce72:	4630      	mov	r0, r6
 800ce74:	426d      	negs	r5, r5
 800ce76:	42a8      	cmp	r0, r5
 800ce78:	bfb8      	it	lt
 800ce7a:	4605      	movlt	r5, r0
 800ce7c:	f1b9 0f00 	cmp.w	r9, #0
 800ce80:	d109      	bne.n	800ce96 <GUI_MEMDEV__CreateFixed+0x82>
 800ce82:	f8cd 9000 	str.w	r9, [sp]
 800ce86:	4658      	mov	r0, fp
 800ce88:	4651      	mov	r1, sl
 800ce8a:	4642      	mov	r2, r8
 800ce8c:	462b      	mov	r3, r5
 800ce8e:	f007 fdcd 	bl	8014a2c <GUI_USAGE_BM_Create>
 800ce92:	4607      	mov	r7, r0
 800ce94:	e000      	b.n	800ce98 <GUI_MEMDEV__CreateFixed+0x84>
 800ce96:	2700      	movs	r7, #0
 800ce98:	2d00      	cmp	r5, #0
 800ce9a:	dc04      	bgt.n	800cea6 <GUI_MEMDEV__CreateFixed+0x92>
 800ce9c:	4620      	mov	r0, r4
 800ce9e:	f003 fd45 	bl	801092c <GUI_DEVICE_Delete>
 800cea2:	2000      	movs	r0, #0
 800cea4:	e032      	b.n	800cf0c <GUI_MEMDEV__CreateFixed+0xf8>
 800cea6:	fb06 f005 	mul.w	r0, r6, r5
 800ceaa:	3018      	adds	r0, #24
 800ceac:	f1b9 0f00 	cmp.w	r9, #0
 800ceb0:	d002      	beq.n	800ceb8 <GUI_MEMDEV__CreateFixed+0xa4>
 800ceb2:	f004 fcd9 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 800ceb6:	e001      	b.n	800cebc <GUI_MEMDEV__CreateFixed+0xa8>
 800ceb8:	f004 fcef 	bl	801189a <GUI_ALLOC_AllocZero>
 800cebc:	4681      	mov	r9, r0
 800cebe:	b940      	cbnz	r0, 800ced2 <GUI_MEMDEV__CreateFixed+0xbe>
 800cec0:	4620      	mov	r0, r4
 800cec2:	f003 fd33 	bl	801092c <GUI_DEVICE_Delete>
 800cec6:	2f00      	cmp	r7, #0
 800cec8:	d0eb      	beq.n	800cea2 <GUI_MEMDEV__CreateFixed+0x8e>
 800ceca:	4638      	mov	r0, r7
 800cecc:	f004 fab2 	bl	8011434 <GUI_ALLOC_Free>
 800ced0:	e01b      	b.n	800cf0a <GUI_MEMDEV__CreateFixed+0xf6>
 800ced2:	f004 fa75 	bl	80113c0 <GUI_ALLOC_LockH>
 800ced6:	4603      	mov	r3, r0
 800ced8:	a806      	add	r0, sp, #24
 800ceda:	9a03      	ldr	r2, [sp, #12]
 800cedc:	f840 3d04 	str.w	r3, [r0, #-4]!
 800cee0:	611a      	str	r2, [r3, #16]
 800cee2:	601c      	str	r4, [r3, #0]
 800cee4:	f8a3 b004 	strh.w	fp, [r3, #4]
 800cee8:	f8a3 a006 	strh.w	sl, [r3, #6]
 800ceec:	f8a3 8008 	strh.w	r8, [r3, #8]
 800cef0:	815d      	strh	r5, [r3, #10]
 800cef2:	60de      	str	r6, [r3, #12]
 800cef4:	615f      	str	r7, [r3, #20]
 800cef6:	f004 fa71 	bl	80113dc <GUI_ALLOC_UnlockH>
 800cefa:	4a06      	ldr	r2, [pc, #24]	; (800cf14 <GUI_MEMDEV__CreateFixed+0x100>)
 800cefc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cefe:	6123      	str	r3, [r4, #16]
 800cf00:	6813      	ldr	r3, [r2, #0]
 800cf02:	f8c4 9008 	str.w	r9, [r4, #8]
 800cf06:	7c5b      	ldrb	r3, [r3, #17]
 800cf08:	61a3      	str	r3, [r4, #24]
 800cf0a:	4648      	mov	r0, r9
 800cf0c:	b007      	add	sp, #28
 800cf0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf12:	bf00      	nop
 800cf14:	2000016c 	.word	0x2000016c

0800cf18 <GUI_MEMDEV_GetBitsPerPixel>:
 800cf18:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cf1a:	4605      	mov	r5, r0
 800cf1c:	b170      	cbz	r0, 800cf3c <GUI_MEMDEV_GetBitsPerPixel+0x24>
 800cf1e:	f004 fa4f 	bl	80113c0 <GUI_ALLOC_LockH>
 800cf22:	6803      	ldr	r3, [r0, #0]
 800cf24:	ac02      	add	r4, sp, #8
 800cf26:	691b      	ldr	r3, [r3, #16]
 800cf28:	f844 0d04 	str.w	r0, [r4, #-4]!
 800cf2c:	689b      	ldr	r3, [r3, #8]
 800cf2e:	4798      	blx	r3
 800cf30:	f001 faef 	bl	800e512 <LCD__GetBPPDevice>
 800cf34:	4605      	mov	r5, r0
 800cf36:	4620      	mov	r0, r4
 800cf38:	f004 fa50 	bl	80113dc <GUI_ALLOC_UnlockH>
 800cf3c:	4628      	mov	r0, r5
 800cf3e:	b003      	add	sp, #12
 800cf40:	bd30      	pop	{r4, r5, pc}
	...

0800cf44 <GUI_MEMDEV_Delete>:
 800cf44:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cf46:	4604      	mov	r4, r0
 800cf48:	b1d0      	cbz	r0, 800cf80 <GUI_MEMDEV_Delete+0x3c>
 800cf4a:	4b0e      	ldr	r3, [pc, #56]	; (800cf84 <GUI_MEMDEV_Delete+0x40>)
 800cf4c:	681b      	ldr	r3, [r3, #0]
 800cf4e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800cf50:	4283      	cmp	r3, r0
 800cf52:	d101      	bne.n	800cf58 <GUI_MEMDEV_Delete+0x14>
 800cf54:	f003 f884 	bl	8010060 <GUI_SelectLCD>
 800cf58:	4620      	mov	r0, r4
 800cf5a:	f004 fa31 	bl	80113c0 <GUI_ALLOC_LockH>
 800cf5e:	9001      	str	r0, [sp, #4]
 800cf60:	6940      	ldr	r0, [r0, #20]
 800cf62:	b108      	cbz	r0, 800cf68 <GUI_MEMDEV_Delete+0x24>
 800cf64:	f007 fd8e 	bl	8014a84 <GUI_USAGE_DecUseCnt>
 800cf68:	ad02      	add	r5, sp, #8
 800cf6a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800cf6e:	6818      	ldr	r0, [r3, #0]
 800cf70:	f003 fcdc 	bl	801092c <GUI_DEVICE_Delete>
 800cf74:	4628      	mov	r0, r5
 800cf76:	f004 fa31 	bl	80113dc <GUI_ALLOC_UnlockH>
 800cf7a:	4620      	mov	r0, r4
 800cf7c:	f004 fa5a 	bl	8011434 <GUI_ALLOC_Free>
 800cf80:	b003      	add	sp, #12
 800cf82:	bd30      	pop	{r4, r5, pc}
 800cf84:	2000016c 	.word	0x2000016c

0800cf88 <GUI_MEMDEV_CreateEx>:
 800cf88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800cf8c:	469a      	mov	sl, r3
 800cf8e:	4b19      	ldr	r3, [pc, #100]	; (800cff4 <GUI_MEMDEV_CreateEx+0x6c>)
 800cf90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800cf92:	681b      	ldr	r3, [r3, #0]
 800cf94:	4607      	mov	r7, r0
 800cf96:	7c58      	ldrb	r0, [r3, #17]
 800cf98:	4b17      	ldr	r3, [pc, #92]	; (800cff8 <GUI_MEMDEV_CreateEx+0x70>)
 800cf9a:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800cf9e:	4688      	mov	r8, r1
 800cfa0:	4691      	mov	r9, r2
 800cfa2:	68e3      	ldr	r3, [r4, #12]
 800cfa4:	681b      	ldr	r3, [r3, #0]
 800cfa6:	2b04      	cmp	r3, #4
 800cfa8:	d006      	beq.n	800cfb8 <GUI_MEMDEV_CreateEx+0x30>
 800cfaa:	6824      	ldr	r4, [r4, #0]
 800cfac:	2c00      	cmp	r4, #0
 800cfae:	d1f8      	bne.n	800cfa2 <GUI_MEMDEV_CreateEx+0x1a>
 800cfb0:	f003 fcac 	bl	801090c <GUI_DEVICE__GetpDriver>
 800cfb4:	4604      	mov	r4, r0
 800cfb6:	b130      	cbz	r0, 800cfc6 <GUI_MEMDEV_CreateEx+0x3e>
 800cfb8:	68e3      	ldr	r3, [r4, #12]
 800cfba:	4620      	mov	r0, r4
 800cfbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cfbe:	2101      	movs	r1, #1
 800cfc0:	4798      	blx	r3
 800cfc2:	4606      	mov	r6, r0
 800cfc4:	b908      	cbnz	r0, 800cfca <GUI_MEMDEV_CreateEx+0x42>
 800cfc6:	2000      	movs	r0, #0
 800cfc8:	e010      	b.n	800cfec <GUI_MEMDEV_CreateEx+0x64>
 800cfca:	6924      	ldr	r4, [r4, #16]
 800cfcc:	68a3      	ldr	r3, [r4, #8]
 800cfce:	4798      	blx	r3
 800cfd0:	3001      	adds	r0, #1
 800cfd2:	bf04      	itt	eq
 800cfd4:	f045 0501 	orreq.w	r5, r5, #1
 800cfd8:	4c08      	ldreq	r4, [pc, #32]	; (800cffc <GUI_MEMDEV_CreateEx+0x74>)
 800cfda:	9402      	str	r4, [sp, #8]
 800cfdc:	e88d 0060 	stmia.w	sp, {r5, r6}
 800cfe0:	4638      	mov	r0, r7
 800cfe2:	4641      	mov	r1, r8
 800cfe4:	464a      	mov	r2, r9
 800cfe6:	4653      	mov	r3, sl
 800cfe8:	f7ff ff14 	bl	800ce14 <GUI_MEMDEV__CreateFixed>
 800cfec:	b004      	add	sp, #16
 800cfee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cff2:	bf00      	nop
 800cff4:	2000016c 	.word	0x2000016c
 800cff8:	200199ec 	.word	0x200199ec
 800cffc:	0801f2ac 	.word	0x0801f2ac

0800d000 <GUI_MEMDEV_Select>:
 800d000:	4b11      	ldr	r3, [pc, #68]	; (800d048 <GUI_MEMDEV_Select+0x48>)
 800d002:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d004:	681a      	ldr	r2, [r3, #0]
 800d006:	4604      	mov	r4, r0
 800d008:	6e16      	ldr	r6, [r2, #96]	; 0x60
 800d00a:	461f      	mov	r7, r3
 800d00c:	b910      	cbnz	r0, 800d014 <GUI_MEMDEV_Select+0x14>
 800d00e:	f003 f827 	bl	8010060 <GUI_SelectLCD>
 800d012:	e016      	b.n	800d042 <GUI_MEMDEV_Select+0x42>
 800d014:	b10e      	cbz	r6, 800d01a <GUI_MEMDEV_Select+0x1a>
 800d016:	f003 f823 	bl	8010060 <GUI_SelectLCD>
 800d01a:	f7fe ff37 	bl	800be8c <WM_Deactivate>
 800d01e:	4620      	mov	r0, r4
 800d020:	f004 f9ce 	bl	80113c0 <GUI_ALLOC_LockH>
 800d024:	ad02      	add	r5, sp, #8
 800d026:	683b      	ldr	r3, [r7, #0]
 800d028:	f845 0d04 	str.w	r0, [r5, #-4]!
 800d02c:	661c      	str	r4, [r3, #96]	; 0x60
 800d02e:	6800      	ldr	r0, [r0, #0]
 800d030:	f003 fcba 	bl	80109a8 <GUI_DEVICE_Link>
 800d034:	4628      	mov	r0, r5
 800d036:	f004 f9d1 	bl	80113dc <GUI_ALLOC_UnlockH>
 800d03a:	f001 f8f1 	bl	800e220 <LCD_UpdateColorIndices>
 800d03e:	f001 fd29 	bl	800ea94 <LCD_SetClipRectMax>
 800d042:	4630      	mov	r0, r6
 800d044:	b003      	add	sp, #12
 800d046:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d048:	2000016c 	.word	0x2000016c

0800d04c <GUI_MEMDEV_CopyToLCDAt>:
 800d04c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d050:	460c      	mov	r4, r1
 800d052:	b085      	sub	sp, #20
 800d054:	4615      	mov	r5, r2
 800d056:	4606      	mov	r6, r0
 800d058:	2800      	cmp	r0, #0
 800d05a:	d041      	beq.n	800d0e0 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800d05c:	2000      	movs	r0, #0
 800d05e:	f002 ff9b 	bl	800ff98 <GUI_SetDrawMode>
 800d062:	4b21      	ldr	r3, [pc, #132]	; (800d0e8 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 800d064:	681b      	ldr	r3, [r3, #0]
 800d066:	4607      	mov	r7, r0
 800d068:	4630      	mov	r0, r6
 800d06a:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 800d06e:	f004 f9a7 	bl	80113c0 <GUI_ALLOC_LockH>
 800d072:	6803      	ldr	r3, [r0, #0]
 800d074:	9001      	str	r0, [sp, #4]
 800d076:	6998      	ldr	r0, [r3, #24]
 800d078:	f002 ffda 	bl	8010030 <GUI_SelectLayer>
 800d07c:	4b1b      	ldr	r3, [pc, #108]	; (800d0ec <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 800d07e:	429c      	cmp	r4, r3
 800d080:	9b01      	ldr	r3, [sp, #4]
 800d082:	bf04      	itt	eq
 800d084:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 800d088:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 800d08c:	891a      	ldrh	r2, [r3, #8]
 800d08e:	895b      	ldrh	r3, [r3, #10]
 800d090:	f8ad 4008 	strh.w	r4, [sp, #8]
 800d094:	3a01      	subs	r2, #1
 800d096:	3b01      	subs	r3, #1
 800d098:	4422      	add	r2, r4
 800d09a:	442b      	add	r3, r5
 800d09c:	4681      	mov	r9, r0
 800d09e:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d0a2:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d0a6:	f8ad 500a 	strh.w	r5, [sp, #10]
 800d0aa:	f7fe fee7 	bl	800be7c <WM_Activate>
 800d0ae:	a801      	add	r0, sp, #4
 800d0b0:	f004 f994 	bl	80113dc <GUI_ALLOC_UnlockH>
 800d0b4:	a802      	add	r0, sp, #8
 800d0b6:	f7fe fd0d 	bl	800bad4 <WM__InitIVRSearch>
 800d0ba:	b948      	cbnz	r0, 800d0d0 <GUI_MEMDEV_CopyToLCDAt+0x84>
 800d0bc:	4648      	mov	r0, r9
 800d0be:	f002 ffb7 	bl	8010030 <GUI_SelectLayer>
 800d0c2:	4640      	mov	r0, r8
 800d0c4:	f7ff ff9c 	bl	800d000 <GUI_MEMDEV_Select>
 800d0c8:	4638      	mov	r0, r7
 800d0ca:	f002 ff65 	bl	800ff98 <GUI_SetDrawMode>
 800d0ce:	e007      	b.n	800d0e0 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800d0d0:	4630      	mov	r0, r6
 800d0d2:	4621      	mov	r1, r4
 800d0d4:	462a      	mov	r2, r5
 800d0d6:	f006 ff75 	bl	8013fc4 <GUI_MEMDEV__WriteToActiveOpaque>
 800d0da:	f7fe fc39 	bl	800b950 <WM__GetNextIVR>
 800d0de:	e7ec      	b.n	800d0ba <GUI_MEMDEV_CopyToLCDAt+0x6e>
 800d0e0:	b005      	add	sp, #20
 800d0e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d0e6:	bf00      	nop
 800d0e8:	2000016c 	.word	0x2000016c
 800d0ec:	fffff001 	.word	0xfffff001

0800d0f0 <GUI_MEMDEV_CopyToLCD>:
 800d0f0:	4901      	ldr	r1, [pc, #4]	; (800d0f8 <GUI_MEMDEV_CopyToLCD+0x8>)
 800d0f2:	460a      	mov	r2, r1
 800d0f4:	f7ff bfaa 	b.w	800d04c <GUI_MEMDEV_CopyToLCDAt>
 800d0f8:	fffff001 	.word	0xfffff001

0800d0fc <_SetPhysRAMAddr>:
 800d0fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d0fe:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800d100:	4604      	mov	r4, r0
 800d102:	460e      	mov	r6, r1
 800d104:	4615      	mov	r5, r2
 800d106:	b15b      	cbz	r3, 800d120 <_SetPhysRAMAddr+0x24>
 800d108:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800d10c:	4798      	blx	r3
 800d10e:	4631      	mov	r1, r6
 800d110:	4607      	mov	r7, r0
 800d112:	462a      	mov	r2, r5
 800d114:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800d118:	4620      	mov	r0, r4
 800d11a:	4798      	blx	r3
 800d11c:	463e      	mov	r6, r7
 800d11e:	4605      	mov	r5, r0
 800d120:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800d124:	4620      	mov	r0, r4
 800d126:	212a      	movs	r1, #42	; 0x2a
 800d128:	4798      	blx	r3
 800d12a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d12c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d130:	4431      	add	r1, r6
 800d132:	4620      	mov	r0, r4
 800d134:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d138:	4798      	blx	r3
 800d13a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d13c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d140:	b2b7      	uxth	r7, r6
 800d142:	4439      	add	r1, r7
 800d144:	4620      	mov	r0, r4
 800d146:	b2c9      	uxtb	r1, r1
 800d148:	4798      	blx	r3
 800d14a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d14c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d150:	4431      	add	r1, r6
 800d152:	4620      	mov	r0, r4
 800d154:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d158:	4798      	blx	r3
 800d15a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d15c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d160:	4439      	add	r1, r7
 800d162:	4620      	mov	r0, r4
 800d164:	b2c9      	uxtb	r1, r1
 800d166:	4798      	blx	r3
 800d168:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800d16c:	4620      	mov	r0, r4
 800d16e:	212b      	movs	r1, #43	; 0x2b
 800d170:	4798      	blx	r3
 800d172:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d174:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d178:	4429      	add	r1, r5
 800d17a:	4620      	mov	r0, r4
 800d17c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d180:	4798      	blx	r3
 800d182:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d184:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d188:	b2ae      	uxth	r6, r5
 800d18a:	4431      	add	r1, r6
 800d18c:	4620      	mov	r0, r4
 800d18e:	b2c9      	uxtb	r1, r1
 800d190:	4798      	blx	r3
 800d192:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d194:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d198:	4429      	add	r1, r5
 800d19a:	4620      	mov	r0, r4
 800d19c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d1a0:	4798      	blx	r3
 800d1a2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d1a4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d1a8:	4431      	add	r1, r6
 800d1aa:	4620      	mov	r0, r4
 800d1ac:	b2c9      	uxtb	r1, r1
 800d1ae:	4798      	blx	r3
 800d1b0:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800d1b4:	4620      	mov	r0, r4
 800d1b6:	212c      	movs	r1, #44	; 0x2c
 800d1b8:	4798      	blx	r3
 800d1ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d1bc <_SetRect>:
 800d1bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d1c0:	4698      	mov	r8, r3
 800d1c2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800d1c4:	9f08      	ldr	r7, [sp, #32]
 800d1c6:	4604      	mov	r4, r0
 800d1c8:	4689      	mov	r9, r1
 800d1ca:	4615      	mov	r5, r2
 800d1cc:	2b00      	cmp	r3, #0
 800d1ce:	d064      	beq.n	800d29a <_SetRect+0xde>
 800d1d0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800d1d4:	4798      	blx	r3
 800d1d6:	463a      	mov	r2, r7
 800d1d8:	4606      	mov	r6, r0
 800d1da:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800d1de:	4641      	mov	r1, r8
 800d1e0:	4620      	mov	r0, r4
 800d1e2:	4798      	blx	r3
 800d1e4:	462a      	mov	r2, r5
 800d1e6:	4682      	mov	sl, r0
 800d1e8:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800d1ec:	4649      	mov	r1, r9
 800d1ee:	4620      	mov	r0, r4
 800d1f0:	4798      	blx	r3
 800d1f2:	463a      	mov	r2, r7
 800d1f4:	4605      	mov	r5, r0
 800d1f6:	4641      	mov	r1, r8
 800d1f8:	4620      	mov	r0, r4
 800d1fa:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800d1fe:	4798      	blx	r3
 800d200:	45b2      	cmp	sl, r6
 800d202:	4607      	mov	r7, r0
 800d204:	db02      	blt.n	800d20c <_SetRect+0x50>
 800d206:	4653      	mov	r3, sl
 800d208:	46b2      	mov	sl, r6
 800d20a:	461e      	mov	r6, r3
 800d20c:	42af      	cmp	r7, r5
 800d20e:	db02      	blt.n	800d216 <_SetRect+0x5a>
 800d210:	463b      	mov	r3, r7
 800d212:	462f      	mov	r7, r5
 800d214:	461d      	mov	r5, r3
 800d216:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800d21a:	4620      	mov	r0, r4
 800d21c:	212a      	movs	r1, #42	; 0x2a
 800d21e:	4798      	blx	r3
 800d220:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d222:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d226:	4451      	add	r1, sl
 800d228:	4620      	mov	r0, r4
 800d22a:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d22e:	4798      	blx	r3
 800d230:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d232:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d236:	4451      	add	r1, sl
 800d238:	4620      	mov	r0, r4
 800d23a:	b2c9      	uxtb	r1, r1
 800d23c:	4798      	blx	r3
 800d23e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d240:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d244:	4431      	add	r1, r6
 800d246:	4620      	mov	r0, r4
 800d248:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d24c:	4798      	blx	r3
 800d24e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d250:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d254:	4431      	add	r1, r6
 800d256:	4620      	mov	r0, r4
 800d258:	b2c9      	uxtb	r1, r1
 800d25a:	4798      	blx	r3
 800d25c:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800d260:	4620      	mov	r0, r4
 800d262:	212b      	movs	r1, #43	; 0x2b
 800d264:	4798      	blx	r3
 800d266:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d268:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d26c:	4439      	add	r1, r7
 800d26e:	4620      	mov	r0, r4
 800d270:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d274:	4798      	blx	r3
 800d276:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d278:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d27c:	4439      	add	r1, r7
 800d27e:	4620      	mov	r0, r4
 800d280:	b2c9      	uxtb	r1, r1
 800d282:	4798      	blx	r3
 800d284:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d286:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d28a:	4429      	add	r1, r5
 800d28c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d290:	4620      	mov	r0, r4
 800d292:	4798      	blx	r3
 800d294:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d296:	4429      	add	r1, r5
 800d298:	e03f      	b.n	800d31a <_SetRect+0x15e>
 800d29a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800d29e:	212a      	movs	r1, #42	; 0x2a
 800d2a0:	4798      	blx	r3
 800d2a2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d2a4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d2a8:	4449      	add	r1, r9
 800d2aa:	4620      	mov	r0, r4
 800d2ac:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d2b0:	4798      	blx	r3
 800d2b2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d2b4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d2b8:	4449      	add	r1, r9
 800d2ba:	4620      	mov	r0, r4
 800d2bc:	b2c9      	uxtb	r1, r1
 800d2be:	4798      	blx	r3
 800d2c0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d2c2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d2c6:	4441      	add	r1, r8
 800d2c8:	4620      	mov	r0, r4
 800d2ca:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d2ce:	4798      	blx	r3
 800d2d0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d2d2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d2d6:	4441      	add	r1, r8
 800d2d8:	4620      	mov	r0, r4
 800d2da:	b2c9      	uxtb	r1, r1
 800d2dc:	4798      	blx	r3
 800d2de:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800d2e2:	4620      	mov	r0, r4
 800d2e4:	212b      	movs	r1, #43	; 0x2b
 800d2e6:	4798      	blx	r3
 800d2e8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d2ea:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d2ee:	4429      	add	r1, r5
 800d2f0:	4620      	mov	r0, r4
 800d2f2:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d2f6:	4798      	blx	r3
 800d2f8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d2fa:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d2fe:	4429      	add	r1, r5
 800d300:	4620      	mov	r0, r4
 800d302:	b2c9      	uxtb	r1, r1
 800d304:	4798      	blx	r3
 800d306:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d308:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d30c:	4439      	add	r1, r7
 800d30e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800d312:	4620      	mov	r0, r4
 800d314:	4798      	blx	r3
 800d316:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d318:	4439      	add	r1, r7
 800d31a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d31e:	4620      	mov	r0, r4
 800d320:	b2c9      	uxtb	r1, r1
 800d322:	4798      	blx	r3
 800d324:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800d328:	4620      	mov	r0, r4
 800d32a:	212c      	movs	r1, #44	; 0x2c
 800d32c:	4798      	blx	r3
 800d32e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800d334 <_SetOrientation>:
 800d334:	b513      	push	{r0, r1, r4, lr}
 800d336:	4a0d      	ldr	r2, [pc, #52]	; (800d36c <_SetOrientation+0x38>)
 800d338:	4604      	mov	r4, r0
 800d33a:	6851      	ldr	r1, [r2, #4]
 800d33c:	6810      	ldr	r0, [r2, #0]
 800d33e:	466b      	mov	r3, sp
 800d340:	c303      	stmia	r3!, {r0, r1}
 800d342:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800d346:	4620      	mov	r0, r4
 800d348:	2136      	movs	r1, #54	; 0x36
 800d34a:	4798      	blx	r3
 800d34c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d34e:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800d350:	aa02      	add	r2, sp, #8
 800d352:	4413      	add	r3, r2
 800d354:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 800d358:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 800d35c:	4319      	orrs	r1, r3
 800d35e:	4620      	mov	r0, r4
 800d360:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800d364:	b289      	uxth	r1, r1
 800d366:	4798      	blx	r3
 800d368:	b002      	add	sp, #8
 800d36a:	bd10      	pop	{r4, pc}
 800d36c:	080195a4 	.word	0x080195a4

0800d370 <_ReadPixel_16bpp_B8>:
 800d370:	b513      	push	{r0, r1, r4, lr}
 800d372:	4604      	mov	r4, r0
 800d374:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800d378:	202e      	movs	r0, #46	; 0x2e
 800d37a:	4798      	blx	r3
 800d37c:	6a21      	ldr	r1, [r4, #32]
 800d37e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800d382:	4668      	mov	r0, sp
 800d384:	3103      	adds	r1, #3
 800d386:	4798      	blx	r3
 800d388:	6a22      	ldr	r2, [r4, #32]
 800d38a:	ab00      	add	r3, sp, #0
 800d38c:	4413      	add	r3, r2
 800d38e:	f81d 2002 	ldrb.w	r2, [sp, r2]
 800d392:	7859      	ldrb	r1, [r3, #1]
 800d394:	7898      	ldrb	r0, [r3, #2]
 800d396:	08d2      	lsrs	r2, r2, #3
 800d398:	0889      	lsrs	r1, r1, #2
 800d39a:	02d2      	lsls	r2, r2, #11
 800d39c:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 800d3a0:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 800d3a4:	b002      	add	sp, #8
 800d3a6:	bd10      	pop	{r4, pc}

0800d3a8 <_ReadPixel_16bpp_B16_I>:
 800d3a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d3aa:	4604      	mov	r4, r0
 800d3ac:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800d3b0:	202e      	movs	r0, #46	; 0x2e
 800d3b2:	4798      	blx	r3
 800d3b4:	6a21      	ldr	r1, [r4, #32]
 800d3b6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800d3ba:	4668      	mov	r0, sp
 800d3bc:	3102      	adds	r1, #2
 800d3be:	4798      	blx	r3
 800d3c0:	6a23      	ldr	r3, [r4, #32]
 800d3c2:	a900      	add	r1, sp, #0
 800d3c4:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 800d3c8:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 800d3cc:	8852      	ldrh	r2, [r2, #2]
 800d3ce:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 800d3d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800d3d6:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 800d3da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 800d3de:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 800d3e2:	b004      	add	sp, #16
 800d3e4:	bd10      	pop	{r4, pc}

0800d3e6 <_SetReg_B8>:
 800d3e6:	b538      	push	{r3, r4, r5, lr}
 800d3e8:	4604      	mov	r4, r0
 800d3ea:	460d      	mov	r5, r1
 800d3ec:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800d3f0:	0a08      	lsrs	r0, r1, #8
 800d3f2:	4798      	blx	r3
 800d3f4:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800d3f8:	b2e8      	uxtb	r0, r5
 800d3fa:	4798      	blx	r3
 800d3fc:	bd38      	pop	{r3, r4, r5, pc}

0800d3fe <_SetReg_B16>:
 800d3fe:	b508      	push	{r3, lr}
 800d400:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800d404:	4608      	mov	r0, r1
 800d406:	4798      	blx	r3
 800d408:	bd08      	pop	{r3, pc}

0800d40a <_WritePara_B8>:
 800d40a:	b508      	push	{r3, lr}
 800d40c:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800d410:	b2c8      	uxtb	r0, r1
 800d412:	4798      	blx	r3
 800d414:	bd08      	pop	{r3, pc}

0800d416 <_WritePara_B16>:
 800d416:	b508      	push	{r3, lr}
 800d418:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800d41c:	4608      	mov	r0, r1
 800d41e:	4798      	blx	r3
 800d420:	bd08      	pop	{r3, pc}
	...

0800d424 <_SetInterface>:
 800d424:	2908      	cmp	r1, #8
 800d426:	d002      	beq.n	800d42e <_SetInterface+0xa>
 800d428:	2910      	cmp	r1, #16
 800d42a:	d005      	beq.n	800d438 <_SetInterface+0x14>
 800d42c:	4770      	bx	lr
 800d42e:	4b06      	ldr	r3, [pc, #24]	; (800d448 <_SetInterface+0x24>)
 800d430:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800d434:	4b05      	ldr	r3, [pc, #20]	; (800d44c <_SetInterface+0x28>)
 800d436:	e003      	b.n	800d440 <_SetInterface+0x1c>
 800d438:	4b05      	ldr	r3, [pc, #20]	; (800d450 <_SetInterface+0x2c>)
 800d43a:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800d43e:	4b05      	ldr	r3, [pc, #20]	; (800d454 <_SetInterface+0x30>)
 800d440:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 800d444:	4770      	bx	lr
 800d446:	bf00      	nop
 800d448:	0800d3e7 	.word	0x0800d3e7
 800d44c:	0800d40b 	.word	0x0800d40b
 800d450:	0800d3ff 	.word	0x0800d3ff
 800d454:	0800d417 	.word	0x0800d417

0800d458 <_ReadRect_16bpp_B8>:
 800d458:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d45a:	b085      	sub	sp, #20
 800d45c:	6884      	ldr	r4, [r0, #8]
 800d45e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800d460:	9700      	str	r7, [sp, #0]
 800d462:	1abd      	subs	r5, r7, r2
 800d464:	1a58      	subs	r0, r3, r1
 800d466:	3501      	adds	r5, #1
 800d468:	fb00 5505 	mla	r5, r0, r5, r5
 800d46c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800d470:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800d472:	4620      	mov	r0, r4
 800d474:	47b8      	blx	r7
 800d476:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800d47a:	202e      	movs	r0, #46	; 0x2e
 800d47c:	4798      	blx	r3
 800d47e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800d482:	6a21      	ldr	r1, [r4, #32]
 800d484:	a802      	add	r0, sp, #8
 800d486:	4798      	blx	r3
 800d488:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800d48c:	a802      	add	r0, sp, #8
 800d48e:	2103      	movs	r1, #3
 800d490:	4798      	blx	r3
 800d492:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800d496:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800d49a:	08db      	lsrs	r3, r3, #3
 800d49c:	0892      	lsrs	r2, r2, #2
 800d49e:	02db      	lsls	r3, r3, #11
 800d4a0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d4a4:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800d4a8:	3d01      	subs	r5, #1
 800d4aa:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 800d4ae:	f826 3b02 	strh.w	r3, [r6], #2
 800d4b2:	d1e9      	bne.n	800d488 <_ReadRect_16bpp_B8+0x30>
 800d4b4:	b005      	add	sp, #20
 800d4b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d4b8 <_ReadRect_16bpp_B16_I>:
 800d4b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d4ba:	b087      	sub	sp, #28
 800d4bc:	6884      	ldr	r4, [r0, #8]
 800d4be:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800d4c0:	9700      	str	r7, [sp, #0]
 800d4c2:	1abd      	subs	r5, r7, r2
 800d4c4:	1a58      	subs	r0, r3, r1
 800d4c6:	3501      	adds	r5, #1
 800d4c8:	fb00 5505 	mla	r5, r0, r5, r5
 800d4cc:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800d4d0:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800d4d2:	4620      	mov	r0, r4
 800d4d4:	47b8      	blx	r7
 800d4d6:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800d4da:	202e      	movs	r0, #46	; 0x2e
 800d4dc:	4798      	blx	r3
 800d4de:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800d4e2:	6a21      	ldr	r1, [r4, #32]
 800d4e4:	a802      	add	r0, sp, #8
 800d4e6:	4798      	blx	r3
 800d4e8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800d4ec:	a802      	add	r0, sp, #8
 800d4ee:	2102      	movs	r1, #2
 800d4f0:	4798      	blx	r3
 800d4f2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d4f6:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 800d4fa:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 800d4fe:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 800d502:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800d506:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 800d50a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800d50e:	3d01      	subs	r5, #1
 800d510:	f826 3b02 	strh.w	r3, [r6], #2
 800d514:	d1e8      	bne.n	800d4e8 <_ReadRect_16bpp_B16_I+0x30>
 800d516:	b007      	add	sp, #28
 800d518:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800d51c <GUIDRV_FlexColor_SetFunc66720>:
 800d51c:	b510      	push	{r4, lr}
 800d51e:	4604      	mov	r4, r0
 800d520:	f000 fda6 	bl	800e070 <GUIDRV_FlexColor__InitOnce>
 800d524:	68a3      	ldr	r3, [r4, #8]
 800d526:	4a12      	ldr	r2, [pc, #72]	; (800d570 <GUIDRV_FlexColor_SetFunc66720+0x54>)
 800d528:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 800d52c:	4a11      	ldr	r2, [pc, #68]	; (800d574 <GUIDRV_FlexColor_SetFunc66720+0x58>)
 800d52e:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 800d532:	4a11      	ldr	r2, [pc, #68]	; (800d578 <GUIDRV_FlexColor_SetFunc66720+0x5c>)
 800d534:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 800d538:	4a10      	ldr	r2, [pc, #64]	; (800d57c <GUIDRV_FlexColor_SetFunc66720+0x60>)
 800d53a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800d53e:	2200      	movs	r2, #0
 800d540:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800d544:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800d548:	4a0d      	ldr	r2, [pc, #52]	; (800d580 <GUIDRV_FlexColor_SetFunc66720+0x64>)
 800d54a:	490e      	ldr	r1, [pc, #56]	; (800d584 <GUIDRV_FlexColor_SetFunc66720+0x68>)
 800d54c:	6812      	ldr	r2, [r2, #0]
 800d54e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800d552:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 800d554:	6809      	ldr	r1, [r1, #0]
 800d556:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 800d55a:	f022 0203 	bic.w	r2, r2, #3
 800d55e:	490a      	ldr	r1, [pc, #40]	; (800d588 <GUIDRV_FlexColor_SetFunc66720+0x6c>)
 800d560:	84da      	strh	r2, [r3, #38]	; 0x26
 800d562:	4a0a      	ldr	r2, [pc, #40]	; (800d58c <GUIDRV_FlexColor_SetFunc66720+0x70>)
 800d564:	f8c3 10c8 	str.w	r1, [r3, #200]	; 0xc8
 800d568:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800d56c:	bd10      	pop	{r4, pc}
 800d56e:	bf00      	nop
 800d570:	0800d0fd 	.word	0x0800d0fd
 800d574:	0800d1bd 	.word	0x0800d1bd
 800d578:	0800d335 	.word	0x0800d335
 800d57c:	0800d371 	.word	0x0800d371
 800d580:	2000013c 	.word	0x2000013c
 800d584:	20000138 	.word	0x20000138
 800d588:	0800d459 	.word	0x0800d459
 800d58c:	0800d425 	.word	0x0800d425

0800d590 <_ReadData>:
 800d590:	b508      	push	{r3, lr}
 800d592:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 800d596:	4798      	blx	r3
 800d598:	bd08      	pop	{r3, pc}

0800d59a <_WriteData>:
 800d59a:	b508      	push	{r3, lr}
 800d59c:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800d5a0:	b288      	uxth	r0, r1
 800d5a2:	4798      	blx	r3
 800d5a4:	bd08      	pop	{r3, pc}
	...

0800d5a8 <_FillRect>:
 800d5a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5ac:	4f3d      	ldr	r7, [pc, #244]	; (800d6a4 <_FillRect+0xfc>)
 800d5ae:	6884      	ldr	r4, [r0, #8]
 800d5b0:	4682      	mov	sl, r0
 800d5b2:	6838      	ldr	r0, [r7, #0]
 800d5b4:	7c00      	ldrb	r0, [r0, #16]
 800d5b6:	f010 0f01 	tst.w	r0, #1
 800d5ba:	b085      	sub	sp, #20
 800d5bc:	460e      	mov	r6, r1
 800d5be:	4615      	mov	r5, r2
 800d5c0:	4698      	mov	r8, r3
 800d5c2:	ebc1 0903 	rsb	r9, r1, r3
 800d5c6:	d045      	beq.n	800d654 <_FillRect+0xac>
 800d5c8:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 800d5cc:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d5ce:	4285      	cmp	r5, r0
 800d5d0:	dc65      	bgt.n	800d69e <_FillRect+0xf6>
 800d5d2:	f8d4 c0c4 	ldr.w	ip, [r4, #196]	; 0xc4
 800d5d6:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800d5d8:	f1bc 0f00 	cmp.w	ip, #0
 800d5dc:	d101      	bne.n	800d5e2 <_FillRect+0x3a>
 800d5de:	46b4      	mov	ip, r6
 800d5e0:	e007      	b.n	800d5f2 <_FillRect+0x4a>
 800d5e2:	e88d 00a0 	stmia.w	sp, {r5, r7}
 800d5e6:	4650      	mov	r0, sl
 800d5e8:	4631      	mov	r1, r6
 800d5ea:	462a      	mov	r2, r5
 800d5ec:	4643      	mov	r3, r8
 800d5ee:	47e0      	blx	ip
 800d5f0:	e011      	b.n	800d616 <_FillRect+0x6e>
 800d5f2:	45c4      	cmp	ip, r8
 800d5f4:	dc0e      	bgt.n	800d614 <_FillRect+0x6c>
 800d5f6:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800d5fa:	f8cd c00c 	str.w	ip, [sp, #12]
 800d5fe:	4661      	mov	r1, ip
 800d600:	4650      	mov	r0, sl
 800d602:	462a      	mov	r2, r5
 800d604:	4798      	blx	r3
 800d606:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800d60a:	f827 0b02 	strh.w	r0, [r7], #2
 800d60e:	f10c 0c01 	add.w	ip, ip, #1
 800d612:	e7ee      	b.n	800d5f2 <_FillRect+0x4a>
 800d614:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800d616:	1ebb      	subs	r3, r7, #2
 800d618:	f109 0c01 	add.w	ip, r9, #1
 800d61c:	445f      	add	r7, fp
 800d61e:	42bb      	cmp	r3, r7
 800d620:	d005      	beq.n	800d62e <_FillRect+0x86>
 800d622:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d624:	8859      	ldrh	r1, [r3, #2]
 800d626:	404a      	eors	r2, r1
 800d628:	f823 2f02 	strh.w	r2, [r3, #2]!
 800d62c:	e7f7      	b.n	800d61e <_FillRect+0x76>
 800d62e:	9500      	str	r5, [sp, #0]
 800d630:	462a      	mov	r2, r5
 800d632:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800d636:	f8cd c00c 	str.w	ip, [sp, #12]
 800d63a:	4620      	mov	r0, r4
 800d63c:	4631      	mov	r1, r6
 800d63e:	4643      	mov	r3, r8
 800d640:	47b8      	blx	r7
 800d642:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800d646:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800d64a:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800d64c:	4661      	mov	r1, ip
 800d64e:	4798      	blx	r3
 800d650:	3501      	adds	r5, #1
 800d652:	e7bb      	b.n	800d5cc <_FillRect+0x24>
 800d654:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d656:	9000      	str	r0, [sp, #0]
 800d658:	1a85      	subs	r5, r0, r2
 800d65a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800d65e:	4620      	mov	r0, r4
 800d660:	47b0      	blx	r6
 800d662:	683b      	ldr	r3, [r7, #0]
 800d664:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 800d666:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d668:	f109 0901 	add.w	r9, r9, #1
 800d66c:	f8d3 8000 	ldr.w	r8, [r3]
 800d670:	fb05 9509 	mla	r5, r5, r9, r9
 800d674:	2301      	movs	r3, #1
 800d676:	b195      	cbz	r5, 800d69e <_FillRect+0xf6>
 800d678:	2dfa      	cmp	r5, #250	; 0xfa
 800d67a:	bf34      	ite	cc
 800d67c:	462e      	movcc	r6, r5
 800d67e:	26fa      	movcs	r6, #250	; 0xfa
 800d680:	b12b      	cbz	r3, 800d68e <_FillRect+0xe6>
 800d682:	4638      	mov	r0, r7
 800d684:	fa1f f188 	uxth.w	r1, r8
 800d688:	4632      	mov	r2, r6
 800d68a:	f001 fac5 	bl	800ec18 <GUI__memset16>
 800d68e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800d692:	4638      	mov	r0, r7
 800d694:	4631      	mov	r1, r6
 800d696:	4798      	blx	r3
 800d698:	1bad      	subs	r5, r5, r6
 800d69a:	2300      	movs	r3, #0
 800d69c:	e7eb      	b.n	800d676 <_FillRect+0xce>
 800d69e:	b005      	add	sp, #20
 800d6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6a4:	2000016c 	.word	0x2000016c

0800d6a8 <_DrawBitmap>:
 800d6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6ac:	b08d      	sub	sp, #52	; 0x34
 800d6ae:	6885      	ldr	r5, [r0, #8]
 800d6b0:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800d6b2:	9305      	str	r3, [sp, #20]
 800d6b4:	1e7b      	subs	r3, r7, #1
 800d6b6:	2b01      	cmp	r3, #1
 800d6b8:	9009      	str	r0, [sp, #36]	; 0x24
 800d6ba:	9108      	str	r1, [sp, #32]
 800d6bc:	920a      	str	r2, [sp, #40]	; 0x28
 800d6be:	950b      	str	r5, [sp, #44]	; 0x2c
 800d6c0:	d903      	bls.n	800d6ca <_DrawBitmap+0x22>
 800d6c2:	2f04      	cmp	r7, #4
 800d6c4:	d001      	beq.n	800d6ca <_DrawBitmap+0x22>
 800d6c6:	2f08      	cmp	r7, #8
 800d6c8:	d106      	bne.n	800d6d8 <_DrawBitmap+0x30>
 800d6ca:	4b8f      	ldr	r3, [pc, #572]	; (800d908 <_DrawBitmap+0x260>)
 800d6cc:	681b      	ldr	r3, [r3, #0]
 800d6ce:	7c1b      	ldrb	r3, [r3, #16]
 800d6d0:	f003 0303 	and.w	r3, r3, #3
 800d6d4:	2b02      	cmp	r3, #2
 800d6d6:	d010      	beq.n	800d6fa <_DrawBitmap+0x52>
 800d6d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d6da:	9f16      	ldr	r7, [sp, #88]	; 0x58
 800d6dc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800d6de:	9908      	ldr	r1, [sp, #32]
 800d6e0:	9b05      	ldr	r3, [sp, #20]
 800d6e2:	443a      	add	r2, r7
 800d6e4:	4429      	add	r1, r5
 800d6e6:	3a01      	subs	r2, #1
 800d6e8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800d6ea:	9200      	str	r2, [sp, #0]
 800d6ec:	440b      	add	r3, r1
 800d6ee:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 800d6f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d6f4:	4628      	mov	r0, r5
 800d6f6:	3b01      	subs	r3, #1
 800d6f8:	47a0      	blx	r4
 800d6fa:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800d6fe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800d700:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800d702:	ebc7 030b 	rsb	r3, r7, fp
 800d706:	42ab      	cmp	r3, r5
 800d708:	f280 8251 	bge.w	800dbae <_DrawBitmap+0x506>
 800d70c:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800d70e:	1e7b      	subs	r3, r7, #1
 800d710:	2b0f      	cmp	r3, #15
 800d712:	f200 8245 	bhi.w	800dba0 <_DrawBitmap+0x4f8>
 800d716:	e8df f013 	tbh	[pc, r3, lsl #1]
 800d71a:	0010      	.short	0x0010
 800d71c:	024300b7 	.word	0x024300b7
 800d720:	02430140 	.word	0x02430140
 800d724:	02430243 	.word	0x02430243
 800d728:	024301d7 	.word	0x024301d7
 800d72c:	02430243 	.word	0x02430243
 800d730:	02430243 	.word	0x02430243
 800d734:	02430243 	.word	0x02430243
 800d738:	023d      	.short	0x023d
 800d73a:	4b73      	ldr	r3, [pc, #460]	; (800d908 <_DrawBitmap+0x260>)
 800d73c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800d73e:	681b      	ldr	r3, [r3, #0]
 800d740:	68ac      	ldr	r4, [r5, #8]
 800d742:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800d744:	7c1b      	ldrb	r3, [r3, #16]
 800d746:	682f      	ldr	r7, [r5, #0]
 800d748:	686d      	ldr	r5, [r5, #4]
 800d74a:	9507      	str	r5, [sp, #28]
 800d74c:	f8dd a020 	ldr.w	sl, [sp, #32]
 800d750:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800d752:	f003 0303 	and.w	r3, r3, #3
 800d756:	2b02      	cmp	r3, #2
 800d758:	44aa      	add	sl, r5
 800d75a:	d01b      	beq.n	800d794 <_DrawBitmap+0xec>
 800d75c:	2b03      	cmp	r3, #3
 800d75e:	d06e      	beq.n	800d83e <_DrawBitmap+0x196>
 800d760:	2b01      	cmp	r3, #1
 800d762:	d06c      	beq.n	800d83e <_DrawBitmap+0x196>
 800d764:	9e05      	ldr	r6, [sp, #20]
 800d766:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 800d76a:	f898 1000 	ldrb.w	r1, [r8]
 800d76e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800d772:	2280      	movs	r2, #128	; 0x80
 800d774:	412a      	asrs	r2, r5
 800d776:	4211      	tst	r1, r2
 800d778:	bf16      	itet	ne
 800d77a:	9907      	ldrne	r1, [sp, #28]
 800d77c:	b2b8      	uxtheq	r0, r7
 800d77e:	b288      	uxthne	r0, r1
 800d780:	3501      	adds	r5, #1
 800d782:	4798      	blx	r3
 800d784:	2d08      	cmp	r5, #8
 800d786:	bf04      	itt	eq
 800d788:	f108 0801 	addeq.w	r8, r8, #1
 800d78c:	2500      	moveq	r5, #0
 800d78e:	3e01      	subs	r6, #1
 800d790:	d1eb      	bne.n	800d76a <_DrawBitmap+0xc2>
 800d792:	e205      	b.n	800dba0 <_DrawBitmap+0x4f8>
 800d794:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800d796:	9506      	str	r5, [sp, #24]
 800d798:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800d79c:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800d7a0:	f8cd a00c 	str.w	sl, [sp, #12]
 800d7a4:	2500      	movs	r5, #0
 800d7a6:	4656      	mov	r6, sl
 800d7a8:	462b      	mov	r3, r5
 800d7aa:	9f06      	ldr	r7, [sp, #24]
 800d7ac:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d7b0:	783a      	ldrb	r2, [r7, #0]
 800d7b2:	fa4c fc08 	asr.w	ip, ip, r8
 800d7b6:	ea12 0c0c 	ands.w	ip, r2, ip
 800d7ba:	d00b      	beq.n	800d7d4 <_DrawBitmap+0x12c>
 800d7bc:	b913      	cbnz	r3, 800d7c4 <_DrawBitmap+0x11c>
 800d7be:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800d7c2:	9603      	str	r6, [sp, #12]
 800d7c4:	9f07      	ldr	r7, [sp, #28]
 800d7c6:	f8a9 7000 	strh.w	r7, [r9]
 800d7ca:	3501      	adds	r5, #1
 800d7cc:	f109 0902 	add.w	r9, r9, #2
 800d7d0:	2301      	movs	r3, #1
 800d7d2:	e017      	b.n	800d804 <_DrawBitmap+0x15c>
 800d7d4:	2b01      	cmp	r3, #1
 800d7d6:	d114      	bne.n	800d802 <_DrawBitmap+0x15a>
 800d7d8:	f8cd b000 	str.w	fp, [sp]
 800d7dc:	f8cd c010 	str.w	ip, [sp, #16]
 800d7e0:	4620      	mov	r0, r4
 800d7e2:	9903      	ldr	r1, [sp, #12]
 800d7e4:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800d7e8:	465a      	mov	r2, fp
 800d7ea:	1e73      	subs	r3, r6, #1
 800d7ec:	47b8      	blx	r7
 800d7ee:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800d7f2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800d7f4:	4629      	mov	r1, r5
 800d7f6:	4798      	blx	r3
 800d7f8:	f8dd c010 	ldr.w	ip, [sp, #16]
 800d7fc:	4665      	mov	r5, ip
 800d7fe:	4663      	mov	r3, ip
 800d800:	e000      	b.n	800d804 <_DrawBitmap+0x15c>
 800d802:	4663      	mov	r3, ip
 800d804:	f108 0801 	add.w	r8, r8, #1
 800d808:	f1b8 0f08 	cmp.w	r8, #8
 800d80c:	f106 0601 	add.w	r6, r6, #1
 800d810:	d104      	bne.n	800d81c <_DrawBitmap+0x174>
 800d812:	9f06      	ldr	r7, [sp, #24]
 800d814:	3701      	adds	r7, #1
 800d816:	9706      	str	r7, [sp, #24]
 800d818:	f04f 0800 	mov.w	r8, #0
 800d81c:	9a05      	ldr	r2, [sp, #20]
 800d81e:	4452      	add	r2, sl
 800d820:	42b2      	cmp	r2, r6
 800d822:	d1c2      	bne.n	800d7aa <_DrawBitmap+0x102>
 800d824:	9f05      	ldr	r7, [sp, #20]
 800d826:	1e7b      	subs	r3, r7, #1
 800d828:	4453      	add	r3, sl
 800d82a:	2d00      	cmp	r5, #0
 800d82c:	f000 81b8 	beq.w	800dba0 <_DrawBitmap+0x4f8>
 800d830:	f8cd b000 	str.w	fp, [sp]
 800d834:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800d838:	9903      	ldr	r1, [sp, #12]
 800d83a:	4620      	mov	r0, r4
 800d83c:	e13d      	b.n	800daba <_DrawBitmap+0x412>
 800d83e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800d842:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800d844:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800d846:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800d84a:	782a      	ldrb	r2, [r5, #0]
 800d84c:	2380      	movs	r3, #128	; 0x80
 800d84e:	4133      	asrs	r3, r6
 800d850:	44d1      	add	r9, sl
 800d852:	421a      	tst	r2, r3
 800d854:	ebc8 0909 	rsb	r9, r8, r9
 800d858:	d00d      	beq.n	800d876 <_DrawBitmap+0x1ce>
 800d85a:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800d85e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d860:	4649      	mov	r1, r9
 800d862:	465a      	mov	r2, fp
 800d864:	4798      	blx	r3
 800d866:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d868:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 800d86c:	4043      	eors	r3, r0
 800d86e:	4649      	mov	r1, r9
 800d870:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d872:	465a      	mov	r2, fp
 800d874:	47b8      	blx	r7
 800d876:	3601      	adds	r6, #1
 800d878:	2e08      	cmp	r6, #8
 800d87a:	bf04      	itt	eq
 800d87c:	3501      	addeq	r5, #1
 800d87e:	2600      	moveq	r6, #0
 800d880:	f1b8 0801 	subs.w	r8, r8, #1
 800d884:	d1df      	bne.n	800d846 <_DrawBitmap+0x19e>
 800d886:	e18b      	b.n	800dba0 <_DrawBitmap+0x4f8>
 800d888:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800d88a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800d88c:	68ac      	ldr	r4, [r5, #8]
 800d88e:	2f00      	cmp	r7, #0
 800d890:	f000 8186 	beq.w	800dba0 <_DrawBitmap+0x4f8>
 800d894:	4b1c      	ldr	r3, [pc, #112]	; (800d908 <_DrawBitmap+0x260>)
 800d896:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800d898:	681b      	ldr	r3, [r3, #0]
 800d89a:	f895 a000 	ldrb.w	sl, [r5]
 800d89e:	7c1b      	ldrb	r3, [r3, #16]
 800d8a0:	f013 0303 	ands.w	r3, r3, #3
 800d8a4:	d011      	beq.n	800d8ca <_DrawBitmap+0x222>
 800d8a6:	2b02      	cmp	r3, #2
 800d8a8:	f040 817a 	bne.w	800dba0 <_DrawBitmap+0x4f8>
 800d8ac:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800d8ae:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d8b2:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800d8b4:	9703      	str	r7, [sp, #12]
 800d8b6:	44a9      	add	r9, r5
 800d8b8:	46a8      	mov	r8, r5
 800d8ba:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800d8bc:	9507      	str	r5, [sp, #28]
 800d8be:	2500      	movs	r5, #0
 800d8c0:	f8cd 9018 	str.w	r9, [sp, #24]
 800d8c4:	464e      	mov	r6, r9
 800d8c6:	462b      	mov	r3, r5
 800d8c8:	e040      	b.n	800d94c <_DrawBitmap+0x2a4>
 800d8ca:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800d8cc:	9e05      	ldr	r6, [sp, #20]
 800d8ce:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800d8d0:	f1c5 0303 	rsb	r3, r5, #3
 800d8d4:	005b      	lsls	r3, r3, #1
 800d8d6:	f1c3 0206 	rsb	r2, r3, #6
 800d8da:	21c0      	movs	r1, #192	; 0xc0
 800d8dc:	fa41 f202 	asr.w	r2, r1, r2
 800d8e0:	ea02 020a 	and.w	r2, r2, sl
 800d8e4:	40da      	lsrs	r2, r3
 800d8e6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800d8e8:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800d8ec:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800d8f0:	3501      	adds	r5, #1
 800d8f2:	4798      	blx	r3
 800d8f4:	2d04      	cmp	r5, #4
 800d8f6:	d103      	bne.n	800d900 <_DrawBitmap+0x258>
 800d8f8:	f897 a001 	ldrb.w	sl, [r7, #1]
 800d8fc:	2500      	movs	r5, #0
 800d8fe:	3701      	adds	r7, #1
 800d900:	3e01      	subs	r6, #1
 800d902:	d1e5      	bne.n	800d8d0 <_DrawBitmap+0x228>
 800d904:	e14c      	b.n	800dba0 <_DrawBitmap+0x4f8>
 800d906:	bf00      	nop
 800d908:	2000016c 	.word	0x2000016c
 800d90c:	b913      	cbnz	r3, 800d914 <_DrawBitmap+0x26c>
 800d90e:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800d910:	9703      	str	r7, [sp, #12]
 800d912:	9606      	str	r6, [sp, #24]
 800d914:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800d916:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800d91a:	9f03      	ldr	r7, [sp, #12]
 800d91c:	803b      	strh	r3, [r7, #0]
 800d91e:	3702      	adds	r7, #2
 800d920:	3501      	adds	r5, #1
 800d922:	9703      	str	r7, [sp, #12]
 800d924:	2301      	movs	r3, #1
 800d926:	f108 0801 	add.w	r8, r8, #1
 800d92a:	f1b8 0f04 	cmp.w	r8, #4
 800d92e:	f106 0601 	add.w	r6, r6, #1
 800d932:	d106      	bne.n	800d942 <_DrawBitmap+0x29a>
 800d934:	9f07      	ldr	r7, [sp, #28]
 800d936:	f897 a001 	ldrb.w	sl, [r7, #1]
 800d93a:	3701      	adds	r7, #1
 800d93c:	9707      	str	r7, [sp, #28]
 800d93e:	f04f 0800 	mov.w	r8, #0
 800d942:	9a05      	ldr	r2, [sp, #20]
 800d944:	444a      	add	r2, r9
 800d946:	42b2      	cmp	r2, r6
 800d948:	f000 80ac 	beq.w	800daa4 <_DrawBitmap+0x3fc>
 800d94c:	f1c8 0203 	rsb	r2, r8, #3
 800d950:	0052      	lsls	r2, r2, #1
 800d952:	f1c2 0106 	rsb	r1, r2, #6
 800d956:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 800d95a:	fa4c fc01 	asr.w	ip, ip, r1
 800d95e:	ea0c 0c0a 	and.w	ip, ip, sl
 800d962:	fa3c fc02 	lsrs.w	ip, ip, r2
 800d966:	d1d1      	bne.n	800d90c <_DrawBitmap+0x264>
 800d968:	2b01      	cmp	r3, #1
 800d96a:	d114      	bne.n	800d996 <_DrawBitmap+0x2ee>
 800d96c:	f8cd b000 	str.w	fp, [sp]
 800d970:	f8cd c010 	str.w	ip, [sp, #16]
 800d974:	4620      	mov	r0, r4
 800d976:	9906      	ldr	r1, [sp, #24]
 800d978:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800d97c:	465a      	mov	r2, fp
 800d97e:	1e73      	subs	r3, r6, #1
 800d980:	47b8      	blx	r7
 800d982:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800d986:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800d988:	4629      	mov	r1, r5
 800d98a:	4798      	blx	r3
 800d98c:	f8dd c010 	ldr.w	ip, [sp, #16]
 800d990:	4665      	mov	r5, ip
 800d992:	4663      	mov	r3, ip
 800d994:	e7c7      	b.n	800d926 <_DrawBitmap+0x27e>
 800d996:	4663      	mov	r3, ip
 800d998:	e7c5      	b.n	800d926 <_DrawBitmap+0x27e>
 800d99a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800d99c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800d99e:	68ac      	ldr	r4, [r5, #8]
 800d9a0:	2f00      	cmp	r7, #0
 800d9a2:	f000 80fd 	beq.w	800dba0 <_DrawBitmap+0x4f8>
 800d9a6:	4b83      	ldr	r3, [pc, #524]	; (800dbb4 <_DrawBitmap+0x50c>)
 800d9a8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800d9aa:	681b      	ldr	r3, [r3, #0]
 800d9ac:	f895 a000 	ldrb.w	sl, [r5]
 800d9b0:	7c1b      	ldrb	r3, [r3, #16]
 800d9b2:	f013 0303 	ands.w	r3, r3, #3
 800d9b6:	d011      	beq.n	800d9dc <_DrawBitmap+0x334>
 800d9b8:	2b02      	cmp	r3, #2
 800d9ba:	f040 80f1 	bne.w	800dba0 <_DrawBitmap+0x4f8>
 800d9be:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800d9c0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d9c4:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800d9c6:	9703      	str	r7, [sp, #12]
 800d9c8:	44a9      	add	r9, r5
 800d9ca:	46a8      	mov	r8, r5
 800d9cc:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800d9ce:	9507      	str	r5, [sp, #28]
 800d9d0:	2500      	movs	r5, #0
 800d9d2:	f8cd 9018 	str.w	r9, [sp, #24]
 800d9d6:	464e      	mov	r6, r9
 800d9d8:	462b      	mov	r3, r5
 800d9da:	e03c      	b.n	800da56 <_DrawBitmap+0x3ae>
 800d9dc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800d9de:	9e05      	ldr	r6, [sp, #20]
 800d9e0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800d9e2:	f1c5 0301 	rsb	r3, r5, #1
 800d9e6:	009b      	lsls	r3, r3, #2
 800d9e8:	f1c3 0204 	rsb	r2, r3, #4
 800d9ec:	21f0      	movs	r1, #240	; 0xf0
 800d9ee:	fa41 f202 	asr.w	r2, r1, r2
 800d9f2:	ea02 020a 	and.w	r2, r2, sl
 800d9f6:	40da      	lsrs	r2, r3
 800d9f8:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800d9fa:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800d9fe:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800da02:	3501      	adds	r5, #1
 800da04:	4798      	blx	r3
 800da06:	2d02      	cmp	r5, #2
 800da08:	d103      	bne.n	800da12 <_DrawBitmap+0x36a>
 800da0a:	f897 a001 	ldrb.w	sl, [r7, #1]
 800da0e:	2500      	movs	r5, #0
 800da10:	3701      	adds	r7, #1
 800da12:	3e01      	subs	r6, #1
 800da14:	d1e5      	bne.n	800d9e2 <_DrawBitmap+0x33a>
 800da16:	e0c3      	b.n	800dba0 <_DrawBitmap+0x4f8>
 800da18:	b913      	cbnz	r3, 800da20 <_DrawBitmap+0x378>
 800da1a:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800da1c:	9703      	str	r7, [sp, #12]
 800da1e:	9606      	str	r6, [sp, #24]
 800da20:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800da22:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800da26:	9f03      	ldr	r7, [sp, #12]
 800da28:	803b      	strh	r3, [r7, #0]
 800da2a:	3702      	adds	r7, #2
 800da2c:	3501      	adds	r5, #1
 800da2e:	9703      	str	r7, [sp, #12]
 800da30:	2301      	movs	r3, #1
 800da32:	f108 0801 	add.w	r8, r8, #1
 800da36:	f1b8 0f02 	cmp.w	r8, #2
 800da3a:	f106 0601 	add.w	r6, r6, #1
 800da3e:	d106      	bne.n	800da4e <_DrawBitmap+0x3a6>
 800da40:	9f07      	ldr	r7, [sp, #28]
 800da42:	f897 a001 	ldrb.w	sl, [r7, #1]
 800da46:	3701      	adds	r7, #1
 800da48:	9707      	str	r7, [sp, #28]
 800da4a:	f04f 0800 	mov.w	r8, #0
 800da4e:	9a05      	ldr	r2, [sp, #20]
 800da50:	444a      	add	r2, r9
 800da52:	42b2      	cmp	r2, r6
 800da54:	d026      	beq.n	800daa4 <_DrawBitmap+0x3fc>
 800da56:	f1c8 0201 	rsb	r2, r8, #1
 800da5a:	0092      	lsls	r2, r2, #2
 800da5c:	f1c2 0104 	rsb	r1, r2, #4
 800da60:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 800da64:	fa4c fc01 	asr.w	ip, ip, r1
 800da68:	ea0c 0c0a 	and.w	ip, ip, sl
 800da6c:	fa3c fc02 	lsrs.w	ip, ip, r2
 800da70:	d1d2      	bne.n	800da18 <_DrawBitmap+0x370>
 800da72:	2b01      	cmp	r3, #1
 800da74:	d114      	bne.n	800daa0 <_DrawBitmap+0x3f8>
 800da76:	f8cd b000 	str.w	fp, [sp]
 800da7a:	f8cd c010 	str.w	ip, [sp, #16]
 800da7e:	4620      	mov	r0, r4
 800da80:	9906      	ldr	r1, [sp, #24]
 800da82:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800da86:	465a      	mov	r2, fp
 800da88:	1e73      	subs	r3, r6, #1
 800da8a:	47b8      	blx	r7
 800da8c:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800da90:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800da92:	4629      	mov	r1, r5
 800da94:	4798      	blx	r3
 800da96:	f8dd c010 	ldr.w	ip, [sp, #16]
 800da9a:	4665      	mov	r5, ip
 800da9c:	4663      	mov	r3, ip
 800da9e:	e7c8      	b.n	800da32 <_DrawBitmap+0x38a>
 800daa0:	4663      	mov	r3, ip
 800daa2:	e7c6      	b.n	800da32 <_DrawBitmap+0x38a>
 800daa4:	9f05      	ldr	r7, [sp, #20]
 800daa6:	1e7b      	subs	r3, r7, #1
 800daa8:	444b      	add	r3, r9
 800daaa:	2d00      	cmp	r5, #0
 800daac:	d078      	beq.n	800dba0 <_DrawBitmap+0x4f8>
 800daae:	f8cd b000 	str.w	fp, [sp]
 800dab2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800dab6:	9906      	ldr	r1, [sp, #24]
 800dab8:	4620      	mov	r0, r4
 800daba:	465a      	mov	r2, fp
 800dabc:	47b0      	blx	r6
 800dabe:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800dac2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800dac4:	4629      	mov	r1, r5
 800dac6:	e06a      	b.n	800db9e <_DrawBitmap+0x4f6>
 800dac8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800daca:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800dacc:	68ac      	ldr	r4, [r5, #8]
 800dace:	2f00      	cmp	r7, #0
 800dad0:	d066      	beq.n	800dba0 <_DrawBitmap+0x4f8>
 800dad2:	4b38      	ldr	r3, [pc, #224]	; (800dbb4 <_DrawBitmap+0x50c>)
 800dad4:	681b      	ldr	r3, [r3, #0]
 800dad6:	7c1b      	ldrb	r3, [r3, #16]
 800dad8:	f013 0303 	ands.w	r3, r3, #3
 800dadc:	d009      	beq.n	800daf2 <_DrawBitmap+0x44a>
 800dade:	2b02      	cmp	r3, #2
 800dae0:	d15e      	bne.n	800dba0 <_DrawBitmap+0x4f8>
 800dae2:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800dae6:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800daea:	2600      	movs	r6, #0
 800daec:	464f      	mov	r7, r9
 800daee:	4633      	mov	r3, r6
 800daf0:	e022      	b.n	800db38 <_DrawBitmap+0x490>
 800daf2:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800daf4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800daf6:	9f05      	ldr	r7, [sp, #20]
 800daf8:	443b      	add	r3, r7
 800dafa:	1b5b      	subs	r3, r3, r5
 800dafc:	2b00      	cmp	r3, #0
 800dafe:	dd4f      	ble.n	800dba0 <_DrawBitmap+0x4f8>
 800db00:	f815 2b01 	ldrb.w	r2, [r5], #1
 800db04:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800db06:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800db0a:	f837 0022 	ldrh.w	r0, [r7, r2, lsl #2]
 800db0e:	4798      	blx	r3
 800db10:	e7f0      	b.n	800daf4 <_DrawBitmap+0x44c>
 800db12:	b913      	cbnz	r3, 800db1a <_DrawBitmap+0x472>
 800db14:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800db18:	46b9      	mov	r9, r7
 800db1a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800db1c:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 800db20:	f8a8 3000 	strh.w	r3, [r8]
 800db24:	3601      	adds	r6, #1
 800db26:	f108 0802 	add.w	r8, r8, #2
 800db2a:	2301      	movs	r3, #1
 800db2c:	9a08      	ldr	r2, [sp, #32]
 800db2e:	9d05      	ldr	r5, [sp, #20]
 800db30:	3701      	adds	r7, #1
 800db32:	442a      	add	r2, r5
 800db34:	42ba      	cmp	r2, r7
 800db36:	d01c      	beq.n	800db72 <_DrawBitmap+0x4ca>
 800db38:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800db3a:	9808      	ldr	r0, [sp, #32]
 800db3c:	1a2a      	subs	r2, r5, r0
 800db3e:	f812 a007 	ldrb.w	sl, [r2, r7]
 800db42:	f1ba 0f00 	cmp.w	sl, #0
 800db46:	d1e4      	bne.n	800db12 <_DrawBitmap+0x46a>
 800db48:	2b01      	cmp	r3, #1
 800db4a:	d110      	bne.n	800db6e <_DrawBitmap+0x4c6>
 800db4c:	f8cd b000 	str.w	fp, [sp]
 800db50:	4620      	mov	r0, r4
 800db52:	4649      	mov	r1, r9
 800db54:	465a      	mov	r2, fp
 800db56:	1e7b      	subs	r3, r7, #1
 800db58:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800db5c:	47a8      	blx	r5
 800db5e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800db62:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800db64:	4631      	mov	r1, r6
 800db66:	4798      	blx	r3
 800db68:	4656      	mov	r6, sl
 800db6a:	4653      	mov	r3, sl
 800db6c:	e7de      	b.n	800db2c <_DrawBitmap+0x484>
 800db6e:	4653      	mov	r3, sl
 800db70:	e7dc      	b.n	800db2c <_DrawBitmap+0x484>
 800db72:	9f08      	ldr	r7, [sp, #32]
 800db74:	1e6b      	subs	r3, r5, #1
 800db76:	443b      	add	r3, r7
 800db78:	b196      	cbz	r6, 800dba0 <_DrawBitmap+0x4f8>
 800db7a:	f8cd b000 	str.w	fp, [sp]
 800db7e:	4620      	mov	r0, r4
 800db80:	4649      	mov	r1, r9
 800db82:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800db86:	465a      	mov	r2, fp
 800db88:	47a8      	blx	r5
 800db8a:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800db8e:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800db90:	4631      	mov	r1, r6
 800db92:	e004      	b.n	800db9e <_DrawBitmap+0x4f6>
 800db94:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800db96:	9819      	ldr	r0, [sp, #100]	; 0x64
 800db98:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
 800db9c:	9905      	ldr	r1, [sp, #20]
 800db9e:	4798      	blx	r3
 800dba0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800dba2:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800dba4:	442f      	add	r7, r5
 800dba6:	9719      	str	r7, [sp, #100]	; 0x64
 800dba8:	f10b 0b01 	add.w	fp, fp, #1
 800dbac:	e5a7      	b.n	800d6fe <_DrawBitmap+0x56>
 800dbae:	b00d      	add	sp, #52	; 0x34
 800dbb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbb4:	2000016c 	.word	0x2000016c

0800dbb8 <GUIDRV_FlexColor_SetMode16bppC0B16>:
 800dbb8:	b510      	push	{r4, lr}
 800dbba:	4604      	mov	r4, r0
 800dbbc:	f000 fa58 	bl	800e070 <GUIDRV_FlexColor__InitOnce>
 800dbc0:	68a4      	ldr	r4, [r4, #8]
 800dbc2:	4b10      	ldr	r3, [pc, #64]	; (800dc04 <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 800dbc4:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 800dbc8:	4b0f      	ldr	r3, [pc, #60]	; (800dc08 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 800dbca:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 800dbce:	4b0f      	ldr	r3, [pc, #60]	; (800dc0c <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 800dbd0:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800dbd4:	4b0e      	ldr	r3, [pc, #56]	; (800dc10 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 800dbd6:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 800dbda:	4b0e      	ldr	r3, [pc, #56]	; (800dc14 <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 800dbdc:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800dbe0:	4b0d      	ldr	r3, [pc, #52]	; (800dc18 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 800dbe2:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 800dbe6:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
 800dbea:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 800dbee:	4620      	mov	r0, r4
 800dbf0:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800dbf4:	2110      	movs	r1, #16
 800dbf6:	4798      	blx	r3
 800dbf8:	2310      	movs	r3, #16
 800dbfa:	63a3      	str	r3, [r4, #56]	; 0x38
 800dbfc:	4b07      	ldr	r3, [pc, #28]	; (800dc1c <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 800dbfe:	6463      	str	r3, [r4, #68]	; 0x44
 800dc00:	bd10      	pop	{r4, pc}
 800dc02:	bf00      	nop
 800dc04:	0800d6a9 	.word	0x0800d6a9
 800dc08:	0800d5a9 	.word	0x0800d5a9
 800dc0c:	0800dfbf 	.word	0x0800dfbf
 800dc10:	0800df2f 	.word	0x0800df2f
 800dc14:	0800d591 	.word	0x0800d591
 800dc18:	0800d59b 	.word	0x0800d59b
 800dc1c:	0801f3f8 	.word	0x0801f3f8

0800dc20 <_Log2PhysX_X0Y0S0>:
 800dc20:	4608      	mov	r0, r1
 800dc22:	4770      	bx	lr

0800dc24 <_Log2PhysX_X1Y0S0>:
 800dc24:	6800      	ldr	r0, [r0, #0]
 800dc26:	1a40      	subs	r0, r0, r1
 800dc28:	3801      	subs	r0, #1
 800dc2a:	4770      	bx	lr

0800dc2c <_Log2PhysX_X0Y1S0>:
 800dc2c:	4608      	mov	r0, r1
 800dc2e:	4770      	bx	lr

0800dc30 <_Log2PhysX_X1Y1S0>:
 800dc30:	6800      	ldr	r0, [r0, #0]
 800dc32:	1a40      	subs	r0, r0, r1
 800dc34:	3801      	subs	r0, #1
 800dc36:	4770      	bx	lr

0800dc38 <_Log2PhysX_X0Y0S1>:
 800dc38:	4610      	mov	r0, r2
 800dc3a:	4770      	bx	lr

0800dc3c <_Log2PhysX_X1Y0S1>:
 800dc3c:	6840      	ldr	r0, [r0, #4]
 800dc3e:	1a80      	subs	r0, r0, r2
 800dc40:	3801      	subs	r0, #1
 800dc42:	4770      	bx	lr

0800dc44 <_Log2PhysX_X0Y1S1>:
 800dc44:	4610      	mov	r0, r2
 800dc46:	4770      	bx	lr

0800dc48 <_Log2PhysX_X1Y1S1>:
 800dc48:	6840      	ldr	r0, [r0, #4]
 800dc4a:	1a80      	subs	r0, r0, r2
 800dc4c:	3801      	subs	r0, #1
 800dc4e:	4770      	bx	lr

0800dc50 <_Log2PhysY_X0Y0S0>:
 800dc50:	4610      	mov	r0, r2
 800dc52:	4770      	bx	lr

0800dc54 <_Log2PhysY_X1Y0S0>:
 800dc54:	4610      	mov	r0, r2
 800dc56:	4770      	bx	lr

0800dc58 <_Log2PhysY_X0Y1S0>:
 800dc58:	6840      	ldr	r0, [r0, #4]
 800dc5a:	1a80      	subs	r0, r0, r2
 800dc5c:	3801      	subs	r0, #1
 800dc5e:	4770      	bx	lr

0800dc60 <_Log2PhysY_X1Y1S0>:
 800dc60:	6840      	ldr	r0, [r0, #4]
 800dc62:	1a80      	subs	r0, r0, r2
 800dc64:	3801      	subs	r0, #1
 800dc66:	4770      	bx	lr

0800dc68 <_Log2PhysY_X0Y0S1>:
 800dc68:	4608      	mov	r0, r1
 800dc6a:	4770      	bx	lr

0800dc6c <_Log2PhysY_X1Y0S1>:
 800dc6c:	4608      	mov	r0, r1
 800dc6e:	4770      	bx	lr

0800dc70 <_Log2PhysY_X0Y1S1>:
 800dc70:	6800      	ldr	r0, [r0, #0]
 800dc72:	1a40      	subs	r0, r0, r1
 800dc74:	3801      	subs	r0, #1
 800dc76:	4770      	bx	lr

0800dc78 <_Log2PhysY_X1Y1S1>:
 800dc78:	6800      	ldr	r0, [r0, #0]
 800dc7a:	1a40      	subs	r0, r0, r1
 800dc7c:	3801      	subs	r0, #1
 800dc7e:	4770      	bx	lr

0800dc80 <_SetPixelIndex>:
 800dc80:	b510      	push	{r4, lr}
 800dc82:	6884      	ldr	r4, [r0, #8]
 800dc84:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 800dc88:	47a0      	blx	r4
 800dc8a:	bd10      	pop	{r4, pc}

0800dc8c <_GetPixelIndex>:
 800dc8c:	b508      	push	{r3, lr}
 800dc8e:	6883      	ldr	r3, [r0, #8]
 800dc90:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800dc94:	4798      	blx	r3
 800dc96:	bd08      	pop	{r3, pc}

0800dc98 <_XorPixel>:
 800dc98:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dc9a:	4604      	mov	r4, r0
 800dc9c:	460f      	mov	r7, r1
 800dc9e:	4616      	mov	r6, r2
 800dca0:	6885      	ldr	r5, [r0, #8]
 800dca2:	f7ff fff3 	bl	800dc8c <_GetPixelIndex>
 800dca6:	9001      	str	r0, [sp, #4]
 800dca8:	f8dd e004 	ldr.w	lr, [sp, #4]
 800dcac:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800dcae:	4620      	mov	r0, r4
 800dcb0:	4639      	mov	r1, r7
 800dcb2:	4632      	mov	r2, r6
 800dcb4:	ea8e 0303 	eor.w	r3, lr, r3
 800dcb8:	f7ff ffe2 	bl	800dc80 <_SetPixelIndex>
 800dcbc:	b003      	add	sp, #12
 800dcbe:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800dcc0 <_DrawHLine>:
 800dcc0:	b513      	push	{r0, r1, r4, lr}
 800dcc2:	6884      	ldr	r4, [r0, #8]
 800dcc4:	9200      	str	r2, [sp, #0]
 800dcc6:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800dcca:	47a0      	blx	r4
 800dccc:	b002      	add	sp, #8
 800dcce:	bd10      	pop	{r4, pc}

0800dcd0 <_DrawVLine>:
 800dcd0:	b513      	push	{r0, r1, r4, lr}
 800dcd2:	6884      	ldr	r4, [r0, #8]
 800dcd4:	9300      	str	r3, [sp, #0]
 800dcd6:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800dcda:	460b      	mov	r3, r1
 800dcdc:	47a0      	blx	r4
 800dcde:	b002      	add	sp, #8
 800dce0:	bd10      	pop	{r4, pc}

0800dce2 <_FillRect>:
 800dce2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dce4:	9c06      	ldr	r4, [sp, #24]
 800dce6:	6885      	ldr	r5, [r0, #8]
 800dce8:	9400      	str	r4, [sp, #0]
 800dcea:	f8d5 40e8 	ldr.w	r4, [r5, #232]	; 0xe8
 800dcee:	47a0      	blx	r4
 800dcf0:	b003      	add	sp, #12
 800dcf2:	bd30      	pop	{r4, r5, pc}

0800dcf4 <_DrawBitmap>:
 800dcf4:	b530      	push	{r4, r5, lr}
 800dcf6:	b087      	sub	sp, #28
 800dcf8:	6885      	ldr	r5, [r0, #8]
 800dcfa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800dcfc:	9400      	str	r4, [sp, #0]
 800dcfe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800dd00:	9401      	str	r4, [sp, #4]
 800dd02:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800dd04:	9402      	str	r4, [sp, #8]
 800dd06:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800dd08:	9403      	str	r4, [sp, #12]
 800dd0a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800dd0c:	9404      	str	r4, [sp, #16]
 800dd0e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800dd10:	9405      	str	r4, [sp, #20]
 800dd12:	f8d5 40e4 	ldr.w	r4, [r5, #228]	; 0xe4
 800dd16:	47a0      	blx	r4
 800dd18:	b007      	add	sp, #28
 800dd1a:	bd30      	pop	{r4, r5, pc}

0800dd1c <_GetDevFunc_SetRect>:
 800dd1c:	4770      	bx	lr
	...

0800dd20 <_GetDevFunc_SetRectOutside>:
 800dd20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dd22:	9e07      	ldr	r6, [sp, #28]
 800dd24:	6884      	ldr	r4, [r0, #8]
 800dd26:	4d0c      	ldr	r5, [pc, #48]	; (800dd58 <_GetDevFunc_SetRectOutside+0x38>)
 800dd28:	b176      	cbz	r6, 800dd48 <_GetDevFunc_SetRectOutside+0x28>
 800dd2a:	6828      	ldr	r0, [r5, #0]
 800dd2c:	b988      	cbnz	r0, 800dd52 <_GetDevFunc_SetRectOutside+0x32>
 800dd2e:	9806      	ldr	r0, [sp, #24]
 800dd30:	9000      	str	r0, [sp, #0]
 800dd32:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800dd36:	4620      	mov	r0, r4
 800dd38:	47b0      	blx	r6
 800dd3a:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 800dd3e:	602b      	str	r3, [r5, #0]
 800dd40:	4b06      	ldr	r3, [pc, #24]	; (800dd5c <_GetDevFunc_SetRectOutside+0x3c>)
 800dd42:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800dd46:	e004      	b.n	800dd52 <_GetDevFunc_SetRectOutside+0x32>
 800dd48:	682b      	ldr	r3, [r5, #0]
 800dd4a:	b113      	cbz	r3, 800dd52 <_GetDevFunc_SetRectOutside+0x32>
 800dd4c:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800dd50:	602e      	str	r6, [r5, #0]
 800dd52:	b002      	add	sp, #8
 800dd54:	bd70      	pop	{r4, r5, r6, pc}
 800dd56:	bf00      	nop
 800dd58:	20019470 	.word	0x20019470
 800dd5c:	0800dd1d 	.word	0x0800dd1d

0800dd60 <_ReadPixelCust_16bpp>:
 800dd60:	b508      	push	{r3, lr}
 800dd62:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800dd64:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
 800dd68:	6990      	ldr	r0, [r2, #24]
 800dd6a:	4798      	blx	r3
 800dd6c:	bd08      	pop	{r3, pc}

0800dd6e <_ReadPixelCust_18bpp>:
 800dd6e:	b508      	push	{r3, lr}
 800dd70:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800dd72:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 800dd76:	6990      	ldr	r0, [r2, #24]
 800dd78:	4798      	blx	r3
 800dd7a:	bd08      	pop	{r3, pc}

0800dd7c <_ReadRectCust_16bpp>:
 800dd7c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dd80:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800dd82:	6884      	ldr	r4, [r0, #8]
 800dd84:	9500      	str	r5, [sp, #0]
 800dd86:	4617      	mov	r7, r2
 800dd88:	4620      	mov	r0, r4
 800dd8a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800dd8e:	4699      	mov	r9, r3
 800dd90:	4688      	mov	r8, r1
 800dd92:	1bed      	subs	r5, r5, r7
 800dd94:	47b0      	blx	r6
 800dd96:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800dd98:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800dd9c:	6988      	ldr	r0, [r1, #24]
 800dd9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800dda0:	ebc8 0809 	rsb	r8, r8, r9
 800dda4:	1c6a      	adds	r2, r5, #1
 800dda6:	fb08 2202 	mla	r2, r8, r2, r2
 800ddaa:	4798      	blx	r3
 800ddac:	b003      	add	sp, #12
 800ddae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800ddb2 <_ReadRectCust_18bpp>:
 800ddb2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ddb6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800ddb8:	6884      	ldr	r4, [r0, #8]
 800ddba:	9500      	str	r5, [sp, #0]
 800ddbc:	4617      	mov	r7, r2
 800ddbe:	4620      	mov	r0, r4
 800ddc0:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800ddc4:	4699      	mov	r9, r3
 800ddc6:	4688      	mov	r8, r1
 800ddc8:	1bed      	subs	r5, r5, r7
 800ddca:	47b0      	blx	r6
 800ddcc:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800ddce:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 800ddd2:	6988      	ldr	r0, [r1, #24]
 800ddd4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ddd6:	ebc8 0809 	rsb	r8, r8, r9
 800ddda:	1c6a      	adds	r2, r5, #1
 800dddc:	fb08 2202 	mla	r2, r8, r2, r2
 800dde0:	4798      	blx	r3
 800dde2:	b003      	add	sp, #12
 800dde4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800dde8 <_GetDevFunc>:
 800dde8:	3901      	subs	r1, #1
 800ddea:	2917      	cmp	r1, #23
 800ddec:	d824      	bhi.n	800de38 <_GetDevFunc+0x50>
 800ddee:	e8df f001 	tbb	[pc, r1]
 800ddf2:	2310      	.short	0x2310
 800ddf4:	23232323 	.word	0x23232323
 800ddf8:	0c232323 	.word	0x0c232323
 800ddfc:	23150e25 	.word	0x23150e25
 800de00:	23232323 	.word	0x23232323
 800de04:	1f232323 	.word	0x1f232323
 800de08:	211a      	.short	0x211a
 800de0a:	480d      	ldr	r0, [pc, #52]	; (800de40 <_GetDevFunc+0x58>)
 800de0c:	4770      	bx	lr
 800de0e:	480d      	ldr	r0, [pc, #52]	; (800de44 <_GetDevFunc+0x5c>)
 800de10:	4770      	bx	lr
 800de12:	6803      	ldr	r3, [r0, #0]
 800de14:	689b      	ldr	r3, [r3, #8]
 800de16:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 800de1a:	4770      	bx	lr
 800de1c:	6803      	ldr	r3, [r0, #0]
 800de1e:	689b      	ldr	r3, [r3, #8]
 800de20:	f8d3 00f4 	ldr.w	r0, [r3, #244]	; 0xf4
 800de24:	4770      	bx	lr
 800de26:	6803      	ldr	r3, [r0, #0]
 800de28:	689b      	ldr	r3, [r3, #8]
 800de2a:	f8d3 00f8 	ldr.w	r0, [r3, #248]	; 0xf8
 800de2e:	4770      	bx	lr
 800de30:	4805      	ldr	r0, [pc, #20]	; (800de48 <_GetDevFunc+0x60>)
 800de32:	4770      	bx	lr
 800de34:	4805      	ldr	r0, [pc, #20]	; (800de4c <_GetDevFunc+0x64>)
 800de36:	4770      	bx	lr
 800de38:	2000      	movs	r0, #0
 800de3a:	4770      	bx	lr
 800de3c:	4804      	ldr	r0, [pc, #16]	; (800de50 <_GetDevFunc+0x68>)
 800de3e:	4770      	bx	lr
 800de40:	0800e19f 	.word	0x0800e19f
 800de44:	0800e141 	.word	0x0800e141
 800de48:	0800e0a5 	.word	0x0800e0a5
 800de4c:	0800dd21 	.word	0x0800dd21
 800de50:	0800e18b 	.word	0x0800e18b

0800de54 <_GetDevProp>:
 800de54:	3901      	subs	r1, #1
 800de56:	6880      	ldr	r0, [r0, #8]
 800de58:	290d      	cmp	r1, #13
 800de5a:	d823      	bhi.n	800dea4 <_GetDevProp+0x50>
 800de5c:	e8df f001 	tbb	[pc, r1]
 800de60:	0f0d0b09 	.word	0x0f0d0b09
 800de64:	11222222 	.word	0x11222222
 800de68:	13252507 	.word	0x13252507
 800de6c:	1d18      	.short	0x1d18
 800de6e:	2000      	movs	r0, #0
 800de70:	4770      	bx	lr
 800de72:	6800      	ldr	r0, [r0, #0]
 800de74:	4770      	bx	lr
 800de76:	6840      	ldr	r0, [r0, #4]
 800de78:	4770      	bx	lr
 800de7a:	6880      	ldr	r0, [r0, #8]
 800de7c:	4770      	bx	lr
 800de7e:	68c0      	ldr	r0, [r0, #12]
 800de80:	4770      	bx	lr
 800de82:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800de84:	4770      	bx	lr
 800de86:	b188      	cbz	r0, 800deac <_GetDevProp+0x58>
 800de88:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800de8a:	f000 0001 	and.w	r0, r0, #1
 800de8e:	4770      	bx	lr
 800de90:	b160      	cbz	r0, 800deac <_GetDevProp+0x58>
 800de92:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800de94:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800de98:	4770      	bx	lr
 800de9a:	b138      	cbz	r0, 800deac <_GetDevProp+0x58>
 800de9c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800de9e:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800dea2:	4770      	bx	lr
 800dea4:	f04f 30ff 	mov.w	r0, #4294967295
 800dea8:	4770      	bx	lr
 800deaa:	2001      	movs	r0, #1
 800deac:	4770      	bx	lr

0800deae <_GetDevData>:
 800deae:	6883      	ldr	r3, [r0, #8]
 800deb0:	2901      	cmp	r1, #1
 800deb2:	bf0c      	ite	eq
 800deb4:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800deb6:	2000      	movne	r0, #0
 800deb8:	4770      	bx	lr

0800deba <_GetRect>:
 800deba:	6883      	ldr	r3, [r0, #8]
 800debc:	2200      	movs	r2, #0
 800debe:	800a      	strh	r2, [r1, #0]
 800dec0:	804a      	strh	r2, [r1, #2]
 800dec2:	681a      	ldr	r2, [r3, #0]
 800dec4:	685b      	ldr	r3, [r3, #4]
 800dec6:	3a01      	subs	r2, #1
 800dec8:	3b01      	subs	r3, #1
 800deca:	808a      	strh	r2, [r1, #4]
 800decc:	80cb      	strh	r3, [r1, #6]
 800dece:	4770      	bx	lr

0800ded0 <GUIDRV_FlexColor__SetLog2Phys>:
 800ded0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ded2:	4d10      	ldr	r5, [pc, #64]	; (800df14 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 800ded4:	462e      	mov	r6, r5
 800ded6:	4607      	mov	r7, r0
 800ded8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800deda:	b091      	sub	sp, #68	; 0x44
 800dedc:	466c      	mov	r4, sp
 800dede:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dee0:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800dee4:	3520      	adds	r5, #32
 800dee6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800deea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800deec:	ac08      	add	r4, sp, #32
 800deee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800def0:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800def4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800def8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800defa:	aa10      	add	r2, sp, #64	; 0x40
 800defc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800df00:	f853 2c40 	ldr.w	r2, [r3, #-64]
 800df04:	f8c7 2100 	str.w	r2, [r7, #256]	; 0x100
 800df08:	f853 3c20 	ldr.w	r3, [r3, #-32]
 800df0c:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800df10:	b011      	add	sp, #68	; 0x44
 800df12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df14:	080195ac 	.word	0x080195ac

0800df18 <_SetOrg>:
 800df18:	b507      	push	{r0, r1, r2, lr}
 800df1a:	6980      	ldr	r0, [r0, #24]
 800df1c:	e88d 0006 	stmia.w	sp, {r1, r2}
 800df20:	2103      	movs	r1, #3
 800df22:	466a      	mov	r2, sp
 800df24:	f7f8 ffae 	bl	8006e84 <LCD_X_DisplayDriver>
 800df28:	b003      	add	sp, #12
 800df2a:	f85d fb04 	ldr.w	pc, [sp], #4

0800df2e <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 800df2e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800df32:	6884      	ldr	r4, [r0, #8]
 800df34:	4698      	mov	r8, r3
 800df36:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800df38:	079b      	lsls	r3, r3, #30
 800df3a:	4689      	mov	r9, r1
 800df3c:	4617      	mov	r7, r2
 800df3e:	d532      	bpl.n	800dfa6 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 800df40:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800df44:	4620      	mov	r0, r4
 800df46:	4798      	blx	r3
 800df48:	f8d4 5104 	ldr.w	r5, [r4, #260]	; 0x104
 800df4c:	4606      	mov	r6, r0
 800df4e:	463a      	mov	r2, r7
 800df50:	4620      	mov	r0, r4
 800df52:	4649      	mov	r1, r9
 800df54:	47a8      	blx	r5
 800df56:	6923      	ldr	r3, [r4, #16]
 800df58:	69a2      	ldr	r2, [r4, #24]
 800df5a:	429e      	cmp	r6, r3
 800df5c:	bfac      	ite	ge
 800df5e:	2300      	movge	r3, #0
 800df60:	2301      	movlt	r3, #1
 800df62:	4296      	cmp	r6, r2
 800df64:	bfd4      	ite	le
 800df66:	461a      	movle	r2, r3
 800df68:	f043 0201 	orrgt.w	r2, r3, #1
 800df6c:	6963      	ldr	r3, [r4, #20]
 800df6e:	4298      	cmp	r0, r3
 800df70:	bfac      	ite	ge
 800df72:	4613      	movge	r3, r2
 800df74:	f042 0301 	orrlt.w	r3, r2, #1
 800df78:	4605      	mov	r5, r0
 800df7a:	b913      	cbnz	r3, 800df82 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 800df7c:	69e3      	ldr	r3, [r4, #28]
 800df7e:	4298      	cmp	r0, r3
 800df80:	dd0a      	ble.n	800df98 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 800df82:	6862      	ldr	r2, [r4, #4]
 800df84:	6823      	ldr	r3, [r4, #0]
 800df86:	3a01      	subs	r2, #1
 800df88:	9200      	str	r2, [sp, #0]
 800df8a:	2100      	movs	r1, #0
 800df8c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800df90:	4620      	mov	r0, r4
 800df92:	460a      	mov	r2, r1
 800df94:	3b01      	subs	r3, #1
 800df96:	47b8      	blx	r7
 800df98:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 800df9c:	4620      	mov	r0, r4
 800df9e:	4631      	mov	r1, r6
 800dfa0:	462a      	mov	r2, r5
 800dfa2:	47b8      	blx	r7
 800dfa4:	e003      	b.n	800dfae <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 800dfa6:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800dfaa:	4620      	mov	r0, r4
 800dfac:	47a8      	blx	r5
 800dfae:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800dfb2:	4620      	mov	r0, r4
 800dfb4:	4641      	mov	r1, r8
 800dfb6:	4798      	blx	r3
 800dfb8:	b003      	add	sp, #12
 800dfba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800dfbe <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 800dfbe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dfc0:	6884      	ldr	r4, [r0, #8]
 800dfc2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800dfc4:	079b      	lsls	r3, r3, #30
 800dfc6:	460f      	mov	r7, r1
 800dfc8:	4616      	mov	r6, r2
 800dfca:	d545      	bpl.n	800e058 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 800dfcc:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800dfd0:	4620      	mov	r0, r4
 800dfd2:	4798      	blx	r3
 800dfd4:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800dfd8:	4632      	mov	r2, r6
 800dfda:	4605      	mov	r5, r0
 800dfdc:	4639      	mov	r1, r7
 800dfde:	4620      	mov	r0, r4
 800dfe0:	4798      	blx	r3
 800dfe2:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800dfe6:	4606      	mov	r6, r0
 800dfe8:	b11b      	cbz	r3, 800dff2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 800dfea:	4620      	mov	r0, r4
 800dfec:	2101      	movs	r1, #1
 800dfee:	2200      	movs	r2, #0
 800dff0:	4798      	blx	r3
 800dff2:	6923      	ldr	r3, [r4, #16]
 800dff4:	69a2      	ldr	r2, [r4, #24]
 800dff6:	429d      	cmp	r5, r3
 800dff8:	bfac      	ite	ge
 800dffa:	2300      	movge	r3, #0
 800dffc:	2301      	movlt	r3, #1
 800dffe:	4295      	cmp	r5, r2
 800e000:	bfd4      	ite	le
 800e002:	461a      	movle	r2, r3
 800e004:	f043 0201 	orrgt.w	r2, r3, #1
 800e008:	6963      	ldr	r3, [r4, #20]
 800e00a:	429e      	cmp	r6, r3
 800e00c:	bfac      	ite	ge
 800e00e:	4613      	movge	r3, r2
 800e010:	f042 0301 	orrlt.w	r3, r2, #1
 800e014:	b913      	cbnz	r3, 800e01c <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 800e016:	69e3      	ldr	r3, [r4, #28]
 800e018:	429e      	cmp	r6, r3
 800e01a:	dd0a      	ble.n	800e032 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 800e01c:	6862      	ldr	r2, [r4, #4]
 800e01e:	6823      	ldr	r3, [r4, #0]
 800e020:	3a01      	subs	r2, #1
 800e022:	9200      	str	r2, [sp, #0]
 800e024:	2100      	movs	r1, #0
 800e026:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800e02a:	4620      	mov	r0, r4
 800e02c:	460a      	mov	r2, r1
 800e02e:	3b01      	subs	r3, #1
 800e030:	47b8      	blx	r7
 800e032:	4629      	mov	r1, r5
 800e034:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800e038:	4620      	mov	r0, r4
 800e03a:	4632      	mov	r2, r6
 800e03c:	4798      	blx	r3
 800e03e:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800e042:	4620      	mov	r0, r4
 800e044:	4798      	blx	r3
 800e046:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800e04a:	4605      	mov	r5, r0
 800e04c:	b16b      	cbz	r3, 800e06a <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800e04e:	4620      	mov	r0, r4
 800e050:	2100      	movs	r1, #0
 800e052:	2201      	movs	r2, #1
 800e054:	4798      	blx	r3
 800e056:	e008      	b.n	800e06a <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800e058:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800e05c:	4620      	mov	r0, r4
 800e05e:	4798      	blx	r3
 800e060:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800e064:	4620      	mov	r0, r4
 800e066:	4798      	blx	r3
 800e068:	4605      	mov	r5, r0
 800e06a:	4628      	mov	r0, r5
 800e06c:	b003      	add	sp, #12
 800e06e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e070 <GUIDRV_FlexColor__InitOnce>:
 800e070:	b538      	push	{r3, r4, r5, lr}
 800e072:	6885      	ldr	r5, [r0, #8]
 800e074:	4604      	mov	r4, r0
 800e076:	b995      	cbnz	r5, 800e09e <GUIDRV_FlexColor__InitOnce+0x2e>
 800e078:	f44f 70ba 	mov.w	r0, #372	; 0x174
 800e07c:	f003 faf8 	bl	8011670 <GUI_ALLOC_GetFixedBlock>
 800e080:	f44f 72ba 	mov.w	r2, #372	; 0x174
 800e084:	60a0      	str	r0, [r4, #8]
 800e086:	4629      	mov	r1, r5
 800e088:	f000 fdf4 	bl	800ec74 <GUI__memset>
 800e08c:	68a3      	ldr	r3, [r4, #8]
 800e08e:	2202      	movs	r2, #2
 800e090:	84da      	strh	r2, [r3, #38]	; 0x26
 800e092:	2201      	movs	r2, #1
 800e094:	621a      	str	r2, [r3, #32]
 800e096:	4a02      	ldr	r2, [pc, #8]	; (800e0a0 <GUIDRV_FlexColor__InitOnce+0x30>)
 800e098:	641c      	str	r4, [r3, #64]	; 0x40
 800e09a:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 800e09e:	bd38      	pop	{r3, r4, r5, pc}
 800e0a0:	0800ded1 	.word	0x0800ded1

0800e0a4 <_SetDevFunc>:
 800e0a4:	b570      	push	{r4, r5, r6, lr}
 800e0a6:	4606      	mov	r6, r0
 800e0a8:	460d      	mov	r5, r1
 800e0aa:	4614      	mov	r4, r2
 800e0ac:	f7ff ffe0 	bl	800e070 <GUIDRV_FlexColor__InitOnce>
 800e0b0:	68b3      	ldr	r3, [r6, #8]
 800e0b2:	2b00      	cmp	r3, #0
 800e0b4:	d03b      	beq.n	800e12e <_SetDevFunc+0x8a>
 800e0b6:	2d26      	cmp	r5, #38	; 0x26
 800e0b8:	d002      	beq.n	800e0c0 <_SetDevFunc+0x1c>
 800e0ba:	2d27      	cmp	r5, #39	; 0x27
 800e0bc:	d016      	beq.n	800e0ec <_SetDevFunc+0x48>
 800e0be:	bd70      	pop	{r4, r5, r6, pc}
 800e0c0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e0c2:	2a10      	cmp	r2, #16
 800e0c4:	d002      	beq.n	800e0cc <_SetDevFunc+0x28>
 800e0c6:	2a12      	cmp	r2, #18
 800e0c8:	d008      	beq.n	800e0dc <_SetDevFunc+0x38>
 800e0ca:	bd70      	pop	{r4, r5, r6, pc}
 800e0cc:	4a18      	ldr	r2, [pc, #96]	; (800e130 <_SetDevFunc+0x8c>)
 800e0ce:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 800e0d2:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800e0d6:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800e0da:	bd70      	pop	{r4, r5, r6, pc}
 800e0dc:	4a15      	ldr	r2, [pc, #84]	; (800e134 <_SetDevFunc+0x90>)
 800e0de:	f8c3 40d8 	str.w	r4, [r3, #216]	; 0xd8
 800e0e2:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800e0e6:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800e0ea:	bd70      	pop	{r4, r5, r6, pc}
 800e0ec:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e0ee:	2a10      	cmp	r2, #16
 800e0f0:	d002      	beq.n	800e0f8 <_SetDevFunc+0x54>
 800e0f2:	2a12      	cmp	r2, #18
 800e0f4:	d00e      	beq.n	800e114 <_SetDevFunc+0x70>
 800e0f6:	bd70      	pop	{r4, r5, r6, pc}
 800e0f8:	b13c      	cbz	r4, 800e10a <_SetDevFunc+0x66>
 800e0fa:	4a0f      	ldr	r2, [pc, #60]	; (800e138 <_SetDevFunc+0x94>)
 800e0fc:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 800e100:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 800e104:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800e108:	bd70      	pop	{r4, r5, r6, pc}
 800e10a:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 800e10e:	f8c3 40c4 	str.w	r4, [r3, #196]	; 0xc4
 800e112:	bd70      	pop	{r4, r5, r6, pc}
 800e114:	b13c      	cbz	r4, 800e126 <_SetDevFunc+0x82>
 800e116:	4a09      	ldr	r2, [pc, #36]	; (800e13c <_SetDevFunc+0x98>)
 800e118:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 800e11c:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800e120:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 800e124:	bd70      	pop	{r4, r5, r6, pc}
 800e126:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800e12a:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 800e12e:	bd70      	pop	{r4, r5, r6, pc}
 800e130:	0800dd61 	.word	0x0800dd61
 800e134:	0800dd6f 	.word	0x0800dd6f
 800e138:	0800dd7d 	.word	0x0800dd7d
 800e13c:	0800ddb3 	.word	0x0800ddb3

0800e140 <_GetDevFunc_Init>:
 800e140:	b538      	push	{r3, r4, r5, lr}
 800e142:	4605      	mov	r5, r0
 800e144:	f7ff ff94 	bl	800e070 <GUIDRV_FlexColor__InitOnce>
 800e148:	68ac      	ldr	r4, [r5, #8]
 800e14a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800e14e:	f003 fa8f 	bl	8011670 <GUI_ALLOC_GetFixedBlock>
 800e152:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e154:	66a0      	str	r0, [r4, #104]	; 0x68
 800e156:	3307      	adds	r3, #7
 800e158:	10d8      	asrs	r0, r3, #3
 800e15a:	6823      	ldr	r3, [r4, #0]
 800e15c:	4358      	muls	r0, r3
 800e15e:	f003 fa87 	bl	8011670 <GUI_ALLOC_GetFixedBlock>
 800e162:	2101      	movs	r1, #1
 800e164:	2200      	movs	r2, #0
 800e166:	66e0      	str	r0, [r4, #108]	; 0x6c
 800e168:	69a8      	ldr	r0, [r5, #24]
 800e16a:	f7f8 fe8b 	bl	8006e84 <LCD_X_DisplayDriver>
 800e16e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800e172:	4605      	mov	r5, r0
 800e174:	4620      	mov	r0, r4
 800e176:	4798      	blx	r3
 800e178:	4620      	mov	r0, r4
 800e17a:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800e17e:	4798      	blx	r3
 800e180:	2d00      	cmp	r5, #0
 800e182:	bfd4      	ite	le
 800e184:	2000      	movle	r0, #0
 800e186:	2001      	movgt	r0, #1
 800e188:	bd38      	pop	{r3, r4, r5, pc}

0800e18a <_GetDevFunc_SetSize>:
 800e18a:	b570      	push	{r4, r5, r6, lr}
 800e18c:	4604      	mov	r4, r0
 800e18e:	460d      	mov	r5, r1
 800e190:	4616      	mov	r6, r2
 800e192:	f7ff ff6d 	bl	800e070 <GUIDRV_FlexColor__InitOnce>
 800e196:	68a3      	ldr	r3, [r4, #8]
 800e198:	e883 0060 	stmia.w	r3, {r5, r6}
 800e19c:	bd70      	pop	{r4, r5, r6, pc}

0800e19e <_GetDevFunc_SetVSize>:
 800e19e:	b570      	push	{r4, r5, r6, lr}
 800e1a0:	4604      	mov	r4, r0
 800e1a2:	460d      	mov	r5, r1
 800e1a4:	4616      	mov	r6, r2
 800e1a6:	f7ff ff63 	bl	800e070 <GUIDRV_FlexColor__InitOnce>
 800e1aa:	68a3      	ldr	r3, [r4, #8]
 800e1ac:	609d      	str	r5, [r3, #8]
 800e1ae:	60de      	str	r6, [r3, #12]
 800e1b0:	bd70      	pop	{r4, r5, r6, pc}

0800e1b2 <GUIDRV_FlexColor_Config>:
 800e1b2:	b538      	push	{r3, r4, r5, lr}
 800e1b4:	4605      	mov	r5, r0
 800e1b6:	460c      	mov	r4, r1
 800e1b8:	f7ff ff5a 	bl	800e070 <GUIDRV_FlexColor__InitOnce>
 800e1bc:	68ab      	ldr	r3, [r5, #8]
 800e1be:	6822      	ldr	r2, [r4, #0]
 800e1c0:	62da      	str	r2, [r3, #44]	; 0x2c
 800e1c2:	6862      	ldr	r2, [r4, #4]
 800e1c4:	631a      	str	r2, [r3, #48]	; 0x30
 800e1c6:	68a2      	ldr	r2, [r4, #8]
 800e1c8:	635a      	str	r2, [r3, #52]	; 0x34
 800e1ca:	0752      	lsls	r2, r2, #29
 800e1cc:	d507      	bpl.n	800e1de <GUIDRV_FlexColor_Config+0x2c>
 800e1ce:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e1d2:	601a      	str	r2, [r3, #0]
 800e1d4:	6059      	str	r1, [r3, #4]
 800e1d6:	68da      	ldr	r2, [r3, #12]
 800e1d8:	6899      	ldr	r1, [r3, #8]
 800e1da:	60d9      	str	r1, [r3, #12]
 800e1dc:	609a      	str	r2, [r3, #8]
 800e1de:	89a2      	ldrh	r2, [r4, #12]
 800e1e0:	849a      	strh	r2, [r3, #36]	; 0x24
 800e1e2:	6922      	ldr	r2, [r4, #16]
 800e1e4:	b112      	cbz	r2, 800e1ec <GUIDRV_FlexColor_Config+0x3a>
 800e1e6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800e1ea:	621a      	str	r2, [r3, #32]
 800e1ec:	bd38      	pop	{r3, r4, r5, pc}

0800e1ee <GUIDRV_FlexColor_SetFunc>:
 800e1ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1f2:	4604      	mov	r4, r0
 800e1f4:	461f      	mov	r7, r3
 800e1f6:	4616      	mov	r6, r2
 800e1f8:	4688      	mov	r8, r1
 800e1fa:	f7ff ff39 	bl	800e070 <GUIDRV_FlexColor__InitOnce>
 800e1fe:	68a5      	ldr	r5, [r4, #8]
 800e200:	4641      	mov	r1, r8
 800e202:	2268      	movs	r2, #104	; 0x68
 800e204:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 800e208:	f00a fd93 	bl	8018d32 <memcpy>
 800e20c:	4620      	mov	r0, r4
 800e20e:	47b0      	blx	r6
 800e210:	4620      	mov	r0, r4
 800e212:	47b8      	blx	r7
 800e214:	6923      	ldr	r3, [r4, #16]
 800e216:	689b      	ldr	r3, [r3, #8]
 800e218:	4798      	blx	r3
 800e21a:	62a8      	str	r0, [r5, #40]	; 0x28
 800e21c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e220 <LCD_UpdateColorIndices>:
 800e220:	b510      	push	{r4, lr}
 800e222:	4c07      	ldr	r4, [pc, #28]	; (800e240 <LCD_UpdateColorIndices+0x20>)
 800e224:	6823      	ldr	r3, [r4, #0]
 800e226:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800e228:	f000 fc8e 	bl	800eb48 <LCD_Color2Index>
 800e22c:	f000 fcac 	bl	800eb88 <LCD_SetColorIndex>
 800e230:	6823      	ldr	r3, [r4, #0]
 800e232:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800e234:	f000 fc88 	bl	800eb48 <LCD_Color2Index>
 800e238:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e23c:	f000 bcc0 	b.w	800ebc0 <LCD_SetBkColorIndex>
 800e240:	2000016c 	.word	0x2000016c

0800e244 <LCD_SetClipRectEx>:
 800e244:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e246:	4c09      	ldr	r4, [pc, #36]	; (800e26c <LCD_SetClipRectEx+0x28>)
 800e248:	6823      	ldr	r3, [r4, #0]
 800e24a:	7c5a      	ldrb	r2, [r3, #17]
 800e24c:	4b08      	ldr	r3, [pc, #32]	; (800e270 <LCD_SetClipRectEx+0x2c>)
 800e24e:	4605      	mov	r5, r0
 800e250:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800e254:	68c2      	ldr	r2, [r0, #12]
 800e256:	4669      	mov	r1, sp
 800e258:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800e25a:	4790      	blx	r2
 800e25c:	6820      	ldr	r0, [r4, #0]
 800e25e:	4629      	mov	r1, r5
 800e260:	466a      	mov	r2, sp
 800e262:	3008      	adds	r0, #8
 800e264:	f000 fdf6 	bl	800ee54 <GUI__IntersectRects>
 800e268:	b003      	add	sp, #12
 800e26a:	bd30      	pop	{r4, r5, pc}
 800e26c:	2000016c 	.word	0x2000016c
 800e270:	200199ec 	.word	0x200199ec

0800e274 <LCD_SetVSizeEx>:
 800e274:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e276:	460d      	mov	r5, r1
 800e278:	4614      	mov	r4, r2
 800e27a:	f002 fb47 	bl	801090c <GUI_DEVICE__GetpDriver>
 800e27e:	9001      	str	r0, [sp, #4]
 800e280:	b908      	cbnz	r0, 800e286 <LCD_SetVSizeEx+0x12>
 800e282:	2001      	movs	r0, #1
 800e284:	e00c      	b.n	800e2a0 <LCD_SetVSizeEx+0x2c>
 800e286:	68c3      	ldr	r3, [r0, #12]
 800e288:	210a      	movs	r1, #10
 800e28a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e28c:	a801      	add	r0, sp, #4
 800e28e:	4798      	blx	r3
 800e290:	4603      	mov	r3, r0
 800e292:	2800      	cmp	r0, #0
 800e294:	d0f5      	beq.n	800e282 <LCD_SetVSizeEx+0xe>
 800e296:	9801      	ldr	r0, [sp, #4]
 800e298:	4629      	mov	r1, r5
 800e29a:	4622      	mov	r2, r4
 800e29c:	4798      	blx	r3
 800e29e:	2000      	movs	r0, #0
 800e2a0:	b003      	add	sp, #12
 800e2a2:	bd30      	pop	{r4, r5, pc}

0800e2a4 <LCD_SetSizeEx>:
 800e2a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e2a6:	460d      	mov	r5, r1
 800e2a8:	4614      	mov	r4, r2
 800e2aa:	f002 fb2f 	bl	801090c <GUI_DEVICE__GetpDriver>
 800e2ae:	9001      	str	r0, [sp, #4]
 800e2b0:	b908      	cbnz	r0, 800e2b6 <LCD_SetSizeEx+0x12>
 800e2b2:	2001      	movs	r0, #1
 800e2b4:	e00c      	b.n	800e2d0 <LCD_SetSizeEx+0x2c>
 800e2b6:	68c3      	ldr	r3, [r0, #12]
 800e2b8:	210b      	movs	r1, #11
 800e2ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e2bc:	a801      	add	r0, sp, #4
 800e2be:	4798      	blx	r3
 800e2c0:	4603      	mov	r3, r0
 800e2c2:	2800      	cmp	r0, #0
 800e2c4:	d0f5      	beq.n	800e2b2 <LCD_SetSizeEx+0xe>
 800e2c6:	9801      	ldr	r0, [sp, #4]
 800e2c8:	4629      	mov	r1, r5
 800e2ca:	4622      	mov	r2, r4
 800e2cc:	4798      	blx	r3
 800e2ce:	2000      	movs	r0, #0
 800e2d0:	b003      	add	sp, #12
 800e2d2:	bd30      	pop	{r4, r5, pc}

0800e2d4 <LCD_SetPosEx>:
 800e2d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e2d6:	460d      	mov	r5, r1
 800e2d8:	4614      	mov	r4, r2
 800e2da:	f002 fb17 	bl	801090c <GUI_DEVICE__GetpDriver>
 800e2de:	9001      	str	r0, [sp, #4]
 800e2e0:	b908      	cbnz	r0, 800e2e6 <LCD_SetPosEx+0x12>
 800e2e2:	2001      	movs	r0, #1
 800e2e4:	e00c      	b.n	800e300 <LCD_SetPosEx+0x2c>
 800e2e6:	68c3      	ldr	r3, [r0, #12]
 800e2e8:	2103      	movs	r1, #3
 800e2ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e2ec:	a801      	add	r0, sp, #4
 800e2ee:	4798      	blx	r3
 800e2f0:	4603      	mov	r3, r0
 800e2f2:	2800      	cmp	r0, #0
 800e2f4:	d0f5      	beq.n	800e2e2 <LCD_SetPosEx+0xe>
 800e2f6:	9801      	ldr	r0, [sp, #4]
 800e2f8:	4629      	mov	r1, r5
 800e2fa:	4622      	mov	r2, r4
 800e2fc:	4798      	blx	r3
 800e2fe:	2000      	movs	r0, #0
 800e300:	b003      	add	sp, #12
 800e302:	bd30      	pop	{r4, r5, pc}

0800e304 <LCD_SetLUTEntryEx>:
 800e304:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e306:	460d      	mov	r5, r1
 800e308:	4614      	mov	r4, r2
 800e30a:	f002 faff 	bl	801090c <GUI_DEVICE__GetpDriver>
 800e30e:	9001      	str	r0, [sp, #4]
 800e310:	b908      	cbnz	r0, 800e316 <LCD_SetLUTEntryEx+0x12>
 800e312:	2001      	movs	r0, #1
 800e314:	e00c      	b.n	800e330 <LCD_SetLUTEntryEx+0x2c>
 800e316:	68c3      	ldr	r3, [r0, #12]
 800e318:	2110      	movs	r1, #16
 800e31a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e31c:	a801      	add	r0, sp, #4
 800e31e:	4798      	blx	r3
 800e320:	4603      	mov	r3, r0
 800e322:	2800      	cmp	r0, #0
 800e324:	d0f5      	beq.n	800e312 <LCD_SetLUTEntryEx+0xe>
 800e326:	9801      	ldr	r0, [sp, #4]
 800e328:	4629      	mov	r1, r5
 800e32a:	4622      	mov	r2, r4
 800e32c:	4798      	blx	r3
 800e32e:	2000      	movs	r0, #0
 800e330:	b003      	add	sp, #12
 800e332:	bd30      	pop	{r4, r5, pc}

0800e334 <LCD_GetPosEx>:
 800e334:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e336:	460d      	mov	r5, r1
 800e338:	4614      	mov	r4, r2
 800e33a:	f002 fae7 	bl	801090c <GUI_DEVICE__GetpDriver>
 800e33e:	9001      	str	r0, [sp, #4]
 800e340:	b908      	cbnz	r0, 800e346 <LCD_GetPosEx+0x12>
 800e342:	2001      	movs	r0, #1
 800e344:	e00c      	b.n	800e360 <LCD_GetPosEx+0x2c>
 800e346:	68c3      	ldr	r3, [r0, #12]
 800e348:	2104      	movs	r1, #4
 800e34a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e34c:	a801      	add	r0, sp, #4
 800e34e:	4798      	blx	r3
 800e350:	4603      	mov	r3, r0
 800e352:	2800      	cmp	r0, #0
 800e354:	d0f5      	beq.n	800e342 <LCD_GetPosEx+0xe>
 800e356:	9801      	ldr	r0, [sp, #4]
 800e358:	4629      	mov	r1, r5
 800e35a:	4622      	mov	r2, r4
 800e35c:	4798      	blx	r3
 800e35e:	2000      	movs	r0, #0
 800e360:	b003      	add	sp, #12
 800e362:	bd30      	pop	{r4, r5, pc}

0800e364 <_GetDevProp>:
 800e364:	2801      	cmp	r0, #1
 800e366:	b510      	push	{r4, lr}
 800e368:	460c      	mov	r4, r1
 800e36a:	dc08      	bgt.n	800e37e <_GetDevProp+0x1a>
 800e36c:	f002 face 	bl	801090c <GUI_DEVICE__GetpDriver>
 800e370:	b120      	cbz	r0, 800e37c <_GetDevProp+0x18>
 800e372:	68c3      	ldr	r3, [r0, #12]
 800e374:	4621      	mov	r1, r4
 800e376:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e378:	4798      	blx	r3
 800e37a:	bd10      	pop	{r4, pc}
 800e37c:	bd10      	pop	{r4, pc}
 800e37e:	2000      	movs	r0, #0
 800e380:	bd10      	pop	{r4, pc}

0800e382 <_GetMaxValue>:
 800e382:	b538      	push	{r3, r4, r5, lr}
 800e384:	4604      	mov	r4, r0
 800e386:	4621      	mov	r1, r4
 800e388:	2001      	movs	r0, #1
 800e38a:	f7ff ffeb 	bl	800e364 <_GetDevProp>
 800e38e:	4621      	mov	r1, r4
 800e390:	4605      	mov	r5, r0
 800e392:	2000      	movs	r0, #0
 800e394:	f7ff ffe6 	bl	800e364 <_GetDevProp>
 800e398:	42a8      	cmp	r0, r5
 800e39a:	bfb8      	it	lt
 800e39c:	4628      	movlt	r0, r5
 800e39e:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800e3a2:	bd38      	pop	{r3, r4, r5, pc}

0800e3a4 <LCD_GetXSizeEx>:
 800e3a4:	2101      	movs	r1, #1
 800e3a6:	f7ff bfdd 	b.w	800e364 <_GetDevProp>

0800e3aa <LCD_GetYSizeEx>:
 800e3aa:	2102      	movs	r1, #2
 800e3ac:	f7ff bfda 	b.w	800e364 <_GetDevProp>

0800e3b0 <LCD_GetVXSizeEx>:
 800e3b0:	2103      	movs	r1, #3
 800e3b2:	f7ff bfd7 	b.w	800e364 <_GetDevProp>

0800e3b6 <LCD_GetVYSizeEx>:
 800e3b6:	2104      	movs	r1, #4
 800e3b8:	f7ff bfd4 	b.w	800e364 <_GetDevProp>

0800e3bc <LCD_GetBitsPerPixelEx>:
 800e3bc:	2108      	movs	r1, #8
 800e3be:	f7ff bfd1 	b.w	800e364 <_GetDevProp>

0800e3c2 <LCD_GetNumColorsEx>:
 800e3c2:	2109      	movs	r1, #9
 800e3c4:	f7ff bfce 	b.w	800e364 <_GetDevProp>

0800e3c8 <LCD_GetXSize>:
 800e3c8:	4b02      	ldr	r3, [pc, #8]	; (800e3d4 <LCD_GetXSize+0xc>)
 800e3ca:	681b      	ldr	r3, [r3, #0]
 800e3cc:	7c58      	ldrb	r0, [r3, #17]
 800e3ce:	f7ff bfe9 	b.w	800e3a4 <LCD_GetXSizeEx>
 800e3d2:	bf00      	nop
 800e3d4:	2000016c 	.word	0x2000016c

0800e3d8 <LCD_GetYSize>:
 800e3d8:	4b02      	ldr	r3, [pc, #8]	; (800e3e4 <LCD_GetYSize+0xc>)
 800e3da:	681b      	ldr	r3, [r3, #0]
 800e3dc:	7c58      	ldrb	r0, [r3, #17]
 800e3de:	f7ff bfe4 	b.w	800e3aa <LCD_GetYSizeEx>
 800e3e2:	bf00      	nop
 800e3e4:	2000016c 	.word	0x2000016c

0800e3e8 <LCD_GetNumColors>:
 800e3e8:	4b02      	ldr	r3, [pc, #8]	; (800e3f4 <LCD_GetNumColors+0xc>)
 800e3ea:	681b      	ldr	r3, [r3, #0]
 800e3ec:	7c58      	ldrb	r0, [r3, #17]
 800e3ee:	f7ff bfe8 	b.w	800e3c2 <LCD_GetNumColorsEx>
 800e3f2:	bf00      	nop
 800e3f4:	2000016c 	.word	0x2000016c

0800e3f8 <GUI_GetBitsPerPixelEx>:
 800e3f8:	b508      	push	{r3, lr}
 800e3fa:	4b04      	ldr	r3, [pc, #16]	; (800e40c <GUI_GetBitsPerPixelEx+0x14>)
 800e3fc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800e400:	68c3      	ldr	r3, [r0, #12]
 800e402:	2108      	movs	r1, #8
 800e404:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e406:	4798      	blx	r3
 800e408:	bd08      	pop	{r3, pc}
 800e40a:	bf00      	nop
 800e40c:	200199ec 	.word	0x200199ec

0800e410 <LCD_GetPaletteEx>:
 800e410:	b508      	push	{r3, lr}
 800e412:	f002 fa7b 	bl	801090c <GUI_DEVICE__GetpDriver>
 800e416:	b120      	cbz	r0, 800e422 <LCD_GetPaletteEx+0x12>
 800e418:	68c3      	ldr	r3, [r0, #12]
 800e41a:	2102      	movs	r1, #2
 800e41c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e41e:	4798      	blx	r3
 800e420:	bd08      	pop	{r3, pc}
 800e422:	bd08      	pop	{r3, pc}

0800e424 <LCD_GetPalette>:
 800e424:	4b02      	ldr	r3, [pc, #8]	; (800e430 <LCD_GetPalette+0xc>)
 800e426:	681b      	ldr	r3, [r3, #0]
 800e428:	7c58      	ldrb	r0, [r3, #17]
 800e42a:	f7ff bff1 	b.w	800e410 <LCD_GetPaletteEx>
 800e42e:	bf00      	nop
 800e430:	2000016c 	.word	0x2000016c

0800e434 <GUI_GetpfIndex2ColorEx>:
 800e434:	4b02      	ldr	r3, [pc, #8]	; (800e440 <GUI_GetpfIndex2ColorEx+0xc>)
 800e436:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e43a:	691b      	ldr	r3, [r3, #16]
 800e43c:	6858      	ldr	r0, [r3, #4]
 800e43e:	4770      	bx	lr
 800e440:	200199ec 	.word	0x200199ec

0800e444 <GUI_GetpfColor2IndexEx>:
 800e444:	4b02      	ldr	r3, [pc, #8]	; (800e450 <GUI_GetpfColor2IndexEx+0xc>)
 800e446:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e44a:	691b      	ldr	r3, [r3, #16]
 800e44c:	6818      	ldr	r0, [r3, #0]
 800e44e:	4770      	bx	lr
 800e450:	200199ec 	.word	0x200199ec

0800e454 <LCD_GetXSizeMax>:
 800e454:	2001      	movs	r0, #1
 800e456:	f7ff bf94 	b.w	800e382 <_GetMaxValue>

0800e45a <LCD_GetYSizeMax>:
 800e45a:	2002      	movs	r0, #2
 800e45c:	f7ff bf91 	b.w	800e382 <_GetMaxValue>

0800e460 <LCD_GetVXSizeMax>:
 800e460:	2003      	movs	r0, #3
 800e462:	f7ff bf8e 	b.w	800e382 <_GetMaxValue>
	...

0800e468 <LCD_SetDisplaySize>:
 800e468:	4b02      	ldr	r3, [pc, #8]	; (800e474 <LCD_SetDisplaySize+0xc>)
 800e46a:	6018      	str	r0, [r3, #0]
 800e46c:	4b02      	ldr	r3, [pc, #8]	; (800e478 <LCD_SetDisplaySize+0x10>)
 800e46e:	6019      	str	r1, [r3, #0]
 800e470:	4770      	bx	lr
 800e472:	bf00      	nop
 800e474:	20019478 	.word	0x20019478
 800e478:	20019474 	.word	0x20019474

0800e47c <LCD_GetXSizeDisplay>:
 800e47c:	4b01      	ldr	r3, [pc, #4]	; (800e484 <LCD_GetXSizeDisplay+0x8>)
 800e47e:	6818      	ldr	r0, [r3, #0]
 800e480:	4770      	bx	lr
 800e482:	bf00      	nop
 800e484:	20019478 	.word	0x20019478

0800e488 <LCD_GetYSizeDisplay>:
 800e488:	4b01      	ldr	r3, [pc, #4]	; (800e490 <LCD_GetYSizeDisplay+0x8>)
 800e48a:	6818      	ldr	r0, [r3, #0]
 800e48c:	4770      	bx	lr
 800e48e:	bf00      	nop
 800e490:	20019474 	.word	0x20019474

0800e494 <LCD__GetBPP>:
 800e494:	2800      	cmp	r0, #0
 800e496:	d03b      	beq.n	800e510 <LCD__GetBPP+0x7c>
 800e498:	f030 0301 	bics.w	r3, r0, #1
 800e49c:	d029      	beq.n	800e4f2 <LCD__GetBPP+0x5e>
 800e49e:	f030 0303 	bics.w	r3, r0, #3
 800e4a2:	d028      	beq.n	800e4f6 <LCD__GetBPP+0x62>
 800e4a4:	f030 0307 	bics.w	r3, r0, #7
 800e4a8:	d027      	beq.n	800e4fa <LCD__GetBPP+0x66>
 800e4aa:	f030 030f 	bics.w	r3, r0, #15
 800e4ae:	d026      	beq.n	800e4fe <LCD__GetBPP+0x6a>
 800e4b0:	f030 031f 	bics.w	r3, r0, #31
 800e4b4:	d025      	beq.n	800e502 <LCD__GetBPP+0x6e>
 800e4b6:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 800e4ba:	d024      	beq.n	800e506 <LCD__GetBPP+0x72>
 800e4bc:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 800e4c0:	f023 0301 	bic.w	r3, r3, #1
 800e4c4:	b30b      	cbz	r3, 800e50a <LCD__GetBPP+0x76>
 800e4c6:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 800e4ca:	f023 030f 	bic.w	r3, r3, #15
 800e4ce:	b1e3      	cbz	r3, 800e50a <LCD__GetBPP+0x76>
 800e4d0:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 800e4d4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800e4d8:	b1bb      	cbz	r3, 800e50a <LCD__GetBPP+0x76>
 800e4da:	0c03      	lsrs	r3, r0, #16
 800e4dc:	041b      	lsls	r3, r3, #16
 800e4de:	b1a3      	cbz	r3, 800e50a <LCD__GetBPP+0x76>
 800e4e0:	0c83      	lsrs	r3, r0, #18
 800e4e2:	049b      	lsls	r3, r3, #18
 800e4e4:	b19b      	cbz	r3, 800e50e <LCD__GetBPP+0x7a>
 800e4e6:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800e4ea:	bf0c      	ite	eq
 800e4ec:	2018      	moveq	r0, #24
 800e4ee:	2020      	movne	r0, #32
 800e4f0:	4770      	bx	lr
 800e4f2:	2001      	movs	r0, #1
 800e4f4:	4770      	bx	lr
 800e4f6:	2002      	movs	r0, #2
 800e4f8:	4770      	bx	lr
 800e4fa:	2003      	movs	r0, #3
 800e4fc:	4770      	bx	lr
 800e4fe:	2004      	movs	r0, #4
 800e500:	4770      	bx	lr
 800e502:	2005      	movs	r0, #5
 800e504:	4770      	bx	lr
 800e506:	2008      	movs	r0, #8
 800e508:	4770      	bx	lr
 800e50a:	2010      	movs	r0, #16
 800e50c:	4770      	bx	lr
 800e50e:	2012      	movs	r0, #18
 800e510:	4770      	bx	lr

0800e512 <LCD__GetBPPDevice>:
 800e512:	b508      	push	{r3, lr}
 800e514:	f7ff ffbe 	bl	800e494 <LCD__GetBPP>
 800e518:	2801      	cmp	r0, #1
 800e51a:	d00f      	beq.n	800e53c <LCD__GetBPPDevice+0x2a>
 800e51c:	1e83      	subs	r3, r0, #2
 800e51e:	2b06      	cmp	r3, #6
 800e520:	d909      	bls.n	800e536 <LCD__GetBPPDevice+0x24>
 800e522:	f1a0 0309 	sub.w	r3, r0, #9
 800e526:	2b07      	cmp	r3, #7
 800e528:	d907      	bls.n	800e53a <LCD__GetBPPDevice+0x28>
 800e52a:	3811      	subs	r0, #17
 800e52c:	2810      	cmp	r0, #16
 800e52e:	bf34      	ite	cc
 800e530:	2020      	movcc	r0, #32
 800e532:	2000      	movcs	r0, #0
 800e534:	bd08      	pop	{r3, pc}
 800e536:	2008      	movs	r0, #8
 800e538:	bd08      	pop	{r3, pc}
 800e53a:	2010      	movs	r0, #16
 800e53c:	bd08      	pop	{r3, pc}
	...

0800e540 <_SetDrawMode>:
 800e540:	b570      	push	{r4, r5, r6, lr}
 800e542:	4b08      	ldr	r3, [pc, #32]	; (800e564 <_SetDrawMode+0x24>)
 800e544:	681b      	ldr	r3, [r3, #0]
 800e546:	7c1a      	ldrb	r2, [r3, #16]
 800e548:	ea80 0102 	eor.w	r1, r0, r2
 800e54c:	0749      	lsls	r1, r1, #29
 800e54e:	d505      	bpl.n	800e55c <_SetDrawMode+0x1c>
 800e550:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800e552:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800e554:	6826      	ldr	r6, [r4, #0]
 800e556:	680d      	ldr	r5, [r1, #0]
 800e558:	6025      	str	r5, [r4, #0]
 800e55a:	600e      	str	r6, [r1, #0]
 800e55c:	7418      	strb	r0, [r3, #16]
 800e55e:	4610      	mov	r0, r2
 800e560:	bd70      	pop	{r4, r5, r6, pc}
 800e562:	bf00      	nop
 800e564:	2000016c 	.word	0x2000016c

0800e568 <LCD_SetDrawMode>:
 800e568:	b508      	push	{r3, lr}
 800e56a:	4b02      	ldr	r3, [pc, #8]	; (800e574 <LCD_SetDrawMode+0xc>)
 800e56c:	681b      	ldr	r3, [r3, #0]
 800e56e:	689b      	ldr	r3, [r3, #8]
 800e570:	4798      	blx	r3
 800e572:	bd08      	pop	{r3, pc}
 800e574:	20000140 	.word	0x20000140

0800e578 <LCD_DrawPixel>:
 800e578:	b538      	push	{r3, r4, r5, lr}
 800e57a:	4b14      	ldr	r3, [pc, #80]	; (800e5cc <LCD_DrawPixel+0x54>)
 800e57c:	681b      	ldr	r3, [r3, #0]
 800e57e:	460a      	mov	r2, r1
 800e580:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 800e584:	428a      	cmp	r2, r1
 800e586:	4604      	mov	r4, r0
 800e588:	db1e      	blt.n	800e5c8 <LCD_DrawPixel+0x50>
 800e58a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800e58e:	428a      	cmp	r2, r1
 800e590:	dc1a      	bgt.n	800e5c8 <LCD_DrawPixel+0x50>
 800e592:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 800e596:	4288      	cmp	r0, r1
 800e598:	db16      	blt.n	800e5c8 <LCD_DrawPixel+0x50>
 800e59a:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 800e59e:	4288      	cmp	r0, r1
 800e5a0:	dc12      	bgt.n	800e5c8 <LCD_DrawPixel+0x50>
 800e5a2:	7c19      	ldrb	r1, [r3, #16]
 800e5a4:	7c58      	ldrb	r0, [r3, #17]
 800e5a6:	f011 0f01 	tst.w	r1, #1
 800e5aa:	4909      	ldr	r1, [pc, #36]	; (800e5d0 <LCD_DrawPixel+0x58>)
 800e5ac:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800e5b0:	d004      	beq.n	800e5bc <LCD_DrawPixel+0x44>
 800e5b2:	68c3      	ldr	r3, [r0, #12]
 800e5b4:	4621      	mov	r1, r4
 800e5b6:	69db      	ldr	r3, [r3, #28]
 800e5b8:	4798      	blx	r3
 800e5ba:	bd38      	pop	{r3, r4, r5, pc}
 800e5bc:	68c1      	ldr	r1, [r0, #12]
 800e5be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e5c0:	698d      	ldr	r5, [r1, #24]
 800e5c2:	681b      	ldr	r3, [r3, #0]
 800e5c4:	4621      	mov	r1, r4
 800e5c6:	47a8      	blx	r5
 800e5c8:	bd38      	pop	{r3, r4, r5, pc}
 800e5ca:	bf00      	nop
 800e5cc:	2000016c 	.word	0x2000016c
 800e5d0:	200199ec 	.word	0x200199ec

0800e5d4 <LCD_DrawHLine>:
 800e5d4:	b538      	push	{r3, r4, r5, lr}
 800e5d6:	4b10      	ldr	r3, [pc, #64]	; (800e618 <LCD_DrawHLine+0x44>)
 800e5d8:	681c      	ldr	r4, [r3, #0]
 800e5da:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e5de:	4299      	cmp	r1, r3
 800e5e0:	460d      	mov	r5, r1
 800e5e2:	db17      	blt.n	800e614 <LCD_DrawHLine+0x40>
 800e5e4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800e5e8:	4299      	cmp	r1, r3
 800e5ea:	dc13      	bgt.n	800e614 <LCD_DrawHLine+0x40>
 800e5ec:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e5f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e5f4:	4288      	cmp	r0, r1
 800e5f6:	bfa8      	it	ge
 800e5f8:	4601      	movge	r1, r0
 800e5fa:	429a      	cmp	r2, r3
 800e5fc:	bfb8      	it	lt
 800e5fe:	4613      	movlt	r3, r2
 800e600:	428b      	cmp	r3, r1
 800e602:	db07      	blt.n	800e614 <LCD_DrawHLine+0x40>
 800e604:	7c60      	ldrb	r0, [r4, #17]
 800e606:	4a05      	ldr	r2, [pc, #20]	; (800e61c <LCD_DrawHLine+0x48>)
 800e608:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800e60c:	68c2      	ldr	r2, [r0, #12]
 800e60e:	6894      	ldr	r4, [r2, #8]
 800e610:	462a      	mov	r2, r5
 800e612:	47a0      	blx	r4
 800e614:	bd38      	pop	{r3, r4, r5, pc}
 800e616:	bf00      	nop
 800e618:	2000016c 	.word	0x2000016c
 800e61c:	200199ec 	.word	0x200199ec

0800e620 <LCD_DrawVLine>:
 800e620:	b538      	push	{r3, r4, r5, lr}
 800e622:	4b10      	ldr	r3, [pc, #64]	; (800e664 <LCD_DrawVLine+0x44>)
 800e624:	681c      	ldr	r4, [r3, #0]
 800e626:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e62a:	4605      	mov	r5, r0
 800e62c:	429d      	cmp	r5, r3
 800e62e:	4610      	mov	r0, r2
 800e630:	db17      	blt.n	800e662 <LCD_DrawVLine+0x42>
 800e632:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e636:	429d      	cmp	r5, r3
 800e638:	dc13      	bgt.n	800e662 <LCD_DrawVLine+0x42>
 800e63a:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800e63e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800e642:	4291      	cmp	r1, r2
 800e644:	bfa8      	it	ge
 800e646:	460a      	movge	r2, r1
 800e648:	4298      	cmp	r0, r3
 800e64a:	bfb8      	it	lt
 800e64c:	4603      	movlt	r3, r0
 800e64e:	4293      	cmp	r3, r2
 800e650:	db07      	blt.n	800e662 <LCD_DrawVLine+0x42>
 800e652:	7c60      	ldrb	r0, [r4, #17]
 800e654:	4904      	ldr	r1, [pc, #16]	; (800e668 <LCD_DrawVLine+0x48>)
 800e656:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800e65a:	68c1      	ldr	r1, [r0, #12]
 800e65c:	68cc      	ldr	r4, [r1, #12]
 800e65e:	4629      	mov	r1, r5
 800e660:	47a0      	blx	r4
 800e662:	bd38      	pop	{r3, r4, r5, pc}
 800e664:	2000016c 	.word	0x2000016c
 800e668:	200199ec 	.word	0x200199ec

0800e66c <LCD_FillRect>:
 800e66c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e66e:	460e      	mov	r6, r1
 800e670:	4912      	ldr	r1, [pc, #72]	; (800e6bc <LCD_FillRect+0x50>)
 800e672:	680c      	ldr	r4, [r1, #0]
 800e674:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e678:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800e67c:	4288      	cmp	r0, r1
 800e67e:	bfa8      	it	ge
 800e680:	4601      	movge	r1, r0
 800e682:	42aa      	cmp	r2, r5
 800e684:	bfb8      	it	lt
 800e686:	4615      	movlt	r5, r2
 800e688:	428d      	cmp	r5, r1
 800e68a:	db14      	blt.n	800e6b6 <LCD_FillRect+0x4a>
 800e68c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800e690:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800e694:	4296      	cmp	r6, r2
 800e696:	bfa8      	it	ge
 800e698:	4632      	movge	r2, r6
 800e69a:	4283      	cmp	r3, r0
 800e69c:	bfa8      	it	ge
 800e69e:	4603      	movge	r3, r0
 800e6a0:	4293      	cmp	r3, r2
 800e6a2:	db08      	blt.n	800e6b6 <LCD_FillRect+0x4a>
 800e6a4:	7c64      	ldrb	r4, [r4, #17]
 800e6a6:	4806      	ldr	r0, [pc, #24]	; (800e6c0 <LCD_FillRect+0x54>)
 800e6a8:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800e6ac:	68c4      	ldr	r4, [r0, #12]
 800e6ae:	9300      	str	r3, [sp, #0]
 800e6b0:	6924      	ldr	r4, [r4, #16]
 800e6b2:	462b      	mov	r3, r5
 800e6b4:	47a0      	blx	r4
 800e6b6:	b002      	add	sp, #8
 800e6b8:	bd70      	pop	{r4, r5, r6, pc}
 800e6ba:	bf00      	nop
 800e6bc:	2000016c 	.word	0x2000016c
 800e6c0:	200199ec 	.word	0x200199ec

0800e6c4 <LCD__DrawBitmap_1bpp>:
 800e6c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e6c8:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 800e878 <LCD__DrawBitmap_1bpp+0x1b4>
 800e6cc:	b08f      	sub	sp, #60	; 0x3c
 800e6ce:	f8dc c000 	ldr.w	ip, [ip]
 800e6d2:	9009      	str	r0, [sp, #36]	; 0x24
 800e6d4:	460e      	mov	r6, r1
 800e6d6:	4615      	mov	r5, r2
 800e6d8:	469b      	mov	fp, r3
 800e6da:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800e6dc:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 800e6e0:	f1bc 0f00 	cmp.w	ip, #0
 800e6e4:	d00d      	beq.n	800e702 <LCD__DrawBitmap_1bpp+0x3e>
 800e6e6:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800e6e8:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800e6ea:	9500      	str	r5, [sp, #0]
 800e6ec:	9601      	str	r6, [sp, #4]
 800e6ee:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800e6f0:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800e6f2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800e6f4:	9702      	str	r7, [sp, #8]
 800e6f6:	9503      	str	r5, [sp, #12]
 800e6f8:	9404      	str	r4, [sp, #16]
 800e6fa:	9605      	str	r6, [sp, #20]
 800e6fc:	f8dc 4000 	ldr.w	r4, [ip]
 800e700:	e053      	b.n	800e7aa <LCD__DrawBitmap_1bpp+0xe6>
 800e702:	9f18      	ldr	r7, [sp, #96]	; 0x60
 800e704:	9819      	ldr	r0, [sp, #100]	; 0x64
 800e706:	ea47 0300 	orr.w	r3, r7, r0
 800e70a:	2b01      	cmp	r3, #1
 800e70c:	d14f      	bne.n	800e7ae <LCD__DrawBitmap_1bpp+0xea>
 800e70e:	4b58      	ldr	r3, [pc, #352]	; (800e870 <LCD__DrawBitmap_1bpp+0x1ac>)
 800e710:	6818      	ldr	r0, [r3, #0]
 800e712:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e716:	1a51      	subs	r1, r2, r1
 800e718:	2900      	cmp	r1, #0
 800e71a:	dd08      	ble.n	800e72e <LCD__DrawBitmap_1bpp+0x6a>
 800e71c:	ebc1 030b 	rsb	r3, r1, fp
 800e720:	2b00      	cmp	r3, #0
 800e722:	f340 80a2 	ble.w	800e86a <LCD__DrawBitmap_1bpp+0x1a6>
 800e726:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800e728:	fb07 4401 	mla	r4, r7, r1, r4
 800e72c:	e001      	b.n	800e732 <LCD__DrawBitmap_1bpp+0x6e>
 800e72e:	465b      	mov	r3, fp
 800e730:	4632      	mov	r2, r6
 800e732:	445e      	add	r6, fp
 800e734:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 800e738:	3e01      	subs	r6, #1
 800e73a:	1a76      	subs	r6, r6, r1
 800e73c:	2e00      	cmp	r6, #0
 800e73e:	dd03      	ble.n	800e748 <LCD__DrawBitmap_1bpp+0x84>
 800e740:	1b9b      	subs	r3, r3, r6
 800e742:	2b00      	cmp	r3, #0
 800e744:	f340 8091 	ble.w	800e86a <LCD__DrawBitmap_1bpp+0x1a6>
 800e748:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e74a:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800e74e:	4429      	add	r1, r5
 800e750:	3901      	subs	r1, #1
 800e752:	1b89      	subs	r1, r1, r6
 800e754:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800e756:	2900      	cmp	r1, #0
 800e758:	bfc8      	it	gt
 800e75a:	ebc1 0505 	rsbgt	r5, r1, r5
 800e75e:	ebc8 0106 	rsb	r1, r8, r6
 800e762:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e766:	42b1      	cmp	r1, r6
 800e768:	da0c      	bge.n	800e784 <LCD__DrawBitmap_1bpp+0xc0>
 800e76a:	ebc1 0c06 	rsb	ip, r1, r6
 800e76e:	eb08 070c 	add.w	r7, r8, ip
 800e772:	1b8e      	subs	r6, r1, r6
 800e774:	f02c 0c07 	bic.w	ip, ip, #7
 800e778:	4435      	add	r5, r6
 800e77a:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 800e77e:	4461      	add	r1, ip
 800e780:	f007 0807 	and.w	r8, r7, #7
 800e784:	2d00      	cmp	r5, #0
 800e786:	dd70      	ble.n	800e86a <LCD__DrawBitmap_1bpp+0x1a6>
 800e788:	7c46      	ldrb	r6, [r0, #17]
 800e78a:	483a      	ldr	r0, [pc, #232]	; (800e874 <LCD__DrawBitmap_1bpp+0x1b0>)
 800e78c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800e78e:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 800e792:	68c6      	ldr	r6, [r0, #12]
 800e794:	9701      	str	r7, [sp, #4]
 800e796:	9403      	str	r4, [sp, #12]
 800e798:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800e79a:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800e79c:	9300      	str	r3, [sp, #0]
 800e79e:	9702      	str	r7, [sp, #8]
 800e7a0:	f8cd 8010 	str.w	r8, [sp, #16]
 800e7a4:	9405      	str	r4, [sp, #20]
 800e7a6:	6874      	ldr	r4, [r6, #4]
 800e7a8:	462b      	mov	r3, r5
 800e7aa:	47a0      	blx	r4
 800e7ac:	e05d      	b.n	800e86a <LCD__DrawBitmap_1bpp+0x1a6>
 800e7ae:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800e7b0:	f1c7 0708 	rsb	r7, r7, #8
 800e7b4:	970c      	str	r7, [sp, #48]	; 0x30
 800e7b6:	4667      	mov	r7, ip
 800e7b8:	45dc      	cmp	ip, fp
 800e7ba:	da56      	bge.n	800e86a <LCD__DrawBitmap_1bpp+0x1a6>
 800e7bc:	4b2c      	ldr	r3, [pc, #176]	; (800e870 <LCD__DrawBitmap_1bpp+0x1ac>)
 800e7be:	9819      	ldr	r0, [sp, #100]	; 0x64
 800e7c0:	681b      	ldr	r3, [r3, #0]
 800e7c2:	4430      	add	r0, r6
 800e7c4:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800e7c8:	900a      	str	r0, [sp, #40]	; 0x28
 800e7ca:	1e41      	subs	r1, r0, #1
 800e7cc:	4291      	cmp	r1, r2
 800e7ce:	910b      	str	r1, [sp, #44]	; 0x2c
 800e7d0:	db45      	blt.n	800e85e <LCD__DrawBitmap_1bpp+0x19a>
 800e7d2:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800e7d6:	429e      	cmp	r6, r3
 800e7d8:	dc41      	bgt.n	800e85e <LCD__DrawBitmap_1bpp+0x19a>
 800e7da:	f04f 0800 	mov.w	r8, #0
 800e7de:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800e7e2:	9408      	str	r4, [sp, #32]
 800e7e4:	46c2      	mov	sl, r8
 800e7e6:	45aa      	cmp	sl, r5
 800e7e8:	da39      	bge.n	800e85e <LCD__DrawBitmap_1bpp+0x19a>
 800e7ea:	f1b8 0f00 	cmp.w	r8, #0
 800e7ee:	d105      	bne.n	800e7fc <LCD__DrawBitmap_1bpp+0x138>
 800e7f0:	9a08      	ldr	r2, [sp, #32]
 800e7f2:	7817      	ldrb	r7, [r2, #0]
 800e7f4:	3201      	adds	r2, #1
 800e7f6:	9208      	str	r2, [sp, #32]
 800e7f8:	f04f 0808 	mov.w	r8, #8
 800e7fc:	980c      	ldr	r0, [sp, #48]	; 0x30
 800e7fe:	991a      	ldr	r1, [sp, #104]	; 0x68
 800e800:	4a1b      	ldr	r2, [pc, #108]	; (800e870 <LCD__DrawBitmap_1bpp+0x1ac>)
 800e802:	fa47 f300 	asr.w	r3, r7, r0
 800e806:	ebc1 0808 	rsb	r8, r1, r8
 800e80a:	408f      	lsls	r7, r1
 800e80c:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800e810:	b2ff      	uxtb	r7, r7
 800e812:	d103      	bne.n	800e81c <LCD__DrawBitmap_1bpp+0x158>
 800e814:	6810      	ldr	r0, [r2, #0]
 800e816:	7c00      	ldrb	r0, [r0, #16]
 800e818:	0780      	lsls	r0, r0, #30
 800e81a:	d41b      	bmi.n	800e854 <LCD__DrawBitmap_1bpp+0x190>
 800e81c:	6812      	ldr	r2, [r2, #0]
 800e81e:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800e820:	6810      	ldr	r0, [r2, #0]
 800e822:	900d      	str	r0, [sp, #52]	; 0x34
 800e824:	981d      	ldr	r0, [sp, #116]	; 0x74
 800e826:	b110      	cbz	r0, 800e82e <LCD__DrawBitmap_1bpp+0x16a>
 800e828:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800e82c:	e000      	b.n	800e830 <LCD__DrawBitmap_1bpp+0x16c>
 800e82e:	b2db      	uxtb	r3, r3
 800e830:	9918      	ldr	r1, [sp, #96]	; 0x60
 800e832:	6013      	str	r3, [r2, #0]
 800e834:	1e4a      	subs	r2, r1, #1
 800e836:	444a      	add	r2, r9
 800e838:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e83a:	f8cd c01c 	str.w	ip, [sp, #28]
 800e83e:	4648      	mov	r0, r9
 800e840:	4631      	mov	r1, r6
 800e842:	f7ff ff13 	bl	800e66c <LCD_FillRect>
 800e846:	4b0a      	ldr	r3, [pc, #40]	; (800e870 <LCD__DrawBitmap_1bpp+0x1ac>)
 800e848:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e84a:	681b      	ldr	r3, [r3, #0]
 800e84c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800e850:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e852:	601a      	str	r2, [r3, #0]
 800e854:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800e856:	f10a 0a01 	add.w	sl, sl, #1
 800e85a:	4499      	add	r9, r3
 800e85c:	e7c3      	b.n	800e7e6 <LCD__DrawBitmap_1bpp+0x122>
 800e85e:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800e860:	f10c 0c01 	add.w	ip, ip, #1
 800e864:	4434      	add	r4, r6
 800e866:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800e868:	e7a6      	b.n	800e7b8 <LCD__DrawBitmap_1bpp+0xf4>
 800e86a:	b00f      	add	sp, #60	; 0x3c
 800e86c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e870:	2000016c 	.word	0x2000016c
 800e874:	200199ec 	.word	0x200199ec
 800e878:	200199c0 	.word	0x200199c0

0800e87c <LCD_DrawBitmap>:
 800e87c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e880:	f8df c20c 	ldr.w	ip, [pc, #524]	; 800ea90 <LCD_DrawBitmap+0x214>
 800e884:	b091      	sub	sp, #68	; 0x44
 800e886:	f8dc 9000 	ldr.w	r9, [ip]
 800e88a:	9207      	str	r2, [sp, #28]
 800e88c:	4605      	mov	r5, r0
 800e88e:	4688      	mov	r8, r1
 800e890:	469b      	mov	fp, r3
 800e892:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800e894:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800e896:	f1b9 0f00 	cmp.w	r9, #0
 800e89a:	d00c      	beq.n	800e8b6 <LCD_DrawBitmap+0x3a>
 800e89c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800e89e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800e8a0:	9500      	str	r5, [sp, #0]
 800e8a2:	9701      	str	r7, [sp, #4]
 800e8a4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800e8a6:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800e8a8:	9602      	str	r6, [sp, #8]
 800e8aa:	9503      	str	r5, [sp, #12]
 800e8ac:	9404      	str	r4, [sp, #16]
 800e8ae:	9705      	str	r7, [sp, #20]
 800e8b0:	f8d9 4000 	ldr.w	r4, [r9]
 800e8b4:	e081      	b.n	800e9ba <LCD_DrawBitmap+0x13e>
 800e8b6:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800e8b8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800e8ba:	ea47 0300 	orr.w	r3, r7, r0
 800e8be:	2b01      	cmp	r3, #1
 800e8c0:	d17d      	bne.n	800e9be <LCD_DrawBitmap+0x142>
 800e8c2:	4b71      	ldr	r3, [pc, #452]	; (800ea88 <LCD_DrawBitmap+0x20c>)
 800e8c4:	6818      	ldr	r0, [r3, #0]
 800e8c6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e8ca:	1a53      	subs	r3, r2, r1
 800e8cc:	2b00      	cmp	r3, #0
 800e8ce:	dd08      	ble.n	800e8e2 <LCD_DrawBitmap+0x66>
 800e8d0:	ebc3 010b 	rsb	r1, r3, fp
 800e8d4:	2900      	cmp	r1, #0
 800e8d6:	f340 80d4 	ble.w	800ea82 <LCD_DrawBitmap+0x206>
 800e8da:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800e8dc:	fb07 4403 	mla	r4, r7, r3, r4
 800e8e0:	e001      	b.n	800e8e6 <LCD_DrawBitmap+0x6a>
 800e8e2:	4659      	mov	r1, fp
 800e8e4:	4642      	mov	r2, r8
 800e8e6:	44d8      	add	r8, fp
 800e8e8:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800e8ec:	f108 38ff 	add.w	r8, r8, #4294967295
 800e8f0:	ebc3 0808 	rsb	r8, r3, r8
 800e8f4:	f1b8 0f00 	cmp.w	r8, #0
 800e8f8:	dd04      	ble.n	800e904 <LCD_DrawBitmap+0x88>
 800e8fa:	ebc8 0101 	rsb	r1, r8, r1
 800e8fe:	2900      	cmp	r1, #0
 800e900:	f340 80bf 	ble.w	800ea82 <LCD_DrawBitmap+0x206>
 800e904:	9b07      	ldr	r3, [sp, #28]
 800e906:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 800e90a:	442b      	add	r3, r5
 800e90c:	3b01      	subs	r3, #1
 800e90e:	ebcc 0303 	rsb	r3, ip, r3
 800e912:	2b00      	cmp	r3, #0
 800e914:	dd02      	ble.n	800e91c <LCD_DrawBitmap+0xa0>
 800e916:	9f07      	ldr	r7, [sp, #28]
 800e918:	1aff      	subs	r7, r7, r3
 800e91a:	9707      	str	r7, [sp, #28]
 800e91c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800e920:	4565      	cmp	r5, ip
 800e922:	da33      	bge.n	800e98c <LCD_DrawBitmap+0x110>
 800e924:	9f07      	ldr	r7, [sp, #28]
 800e926:	ebc5 030c 	rsb	r3, r5, ip
 800e92a:	1aff      	subs	r7, r7, r3
 800e92c:	2e08      	cmp	r6, #8
 800e92e:	9707      	str	r7, [sp, #28]
 800e930:	d027      	beq.n	800e982 <LCD_DrawBitmap+0x106>
 800e932:	dc0d      	bgt.n	800e950 <LCD_DrawBitmap+0xd4>
 800e934:	2e02      	cmp	r6, #2
 800e936:	d014      	beq.n	800e962 <LCD_DrawBitmap+0xe6>
 800e938:	2e04      	cmp	r6, #4
 800e93a:	d01a      	beq.n	800e972 <LCD_DrawBitmap+0xf6>
 800e93c:	2e01      	cmp	r6, #1
 800e93e:	d126      	bne.n	800e98e <LCD_DrawBitmap+0x112>
 800e940:	f023 0c07 	bic.w	ip, r3, #7
 800e944:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800e948:	4465      	add	r5, ip
 800e94a:	f003 0307 	and.w	r3, r3, #7
 800e94e:	e01e      	b.n	800e98e <LCD_DrawBitmap+0x112>
 800e950:	2e18      	cmp	r6, #24
 800e952:	d018      	beq.n	800e986 <LCD_DrawBitmap+0x10a>
 800e954:	2e20      	cmp	r6, #32
 800e956:	d016      	beq.n	800e986 <LCD_DrawBitmap+0x10a>
 800e958:	2e10      	cmp	r6, #16
 800e95a:	d118      	bne.n	800e98e <LCD_DrawBitmap+0x112>
 800e95c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e960:	e013      	b.n	800e98a <LCD_DrawBitmap+0x10e>
 800e962:	f023 0c03 	bic.w	ip, r3, #3
 800e966:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800e96a:	4465      	add	r5, ip
 800e96c:	f003 0303 	and.w	r3, r3, #3
 800e970:	e00d      	b.n	800e98e <LCD_DrawBitmap+0x112>
 800e972:	f023 0c01 	bic.w	ip, r3, #1
 800e976:	eb04 0463 	add.w	r4, r4, r3, asr #1
 800e97a:	4465      	add	r5, ip
 800e97c:	f003 0301 	and.w	r3, r3, #1
 800e980:	e005      	b.n	800e98e <LCD_DrawBitmap+0x112>
 800e982:	441c      	add	r4, r3
 800e984:	e001      	b.n	800e98a <LCD_DrawBitmap+0x10e>
 800e986:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800e98a:	4665      	mov	r5, ip
 800e98c:	2300      	movs	r3, #0
 800e98e:	9f07      	ldr	r7, [sp, #28]
 800e990:	2f00      	cmp	r7, #0
 800e992:	dd76      	ble.n	800ea82 <LCD_DrawBitmap+0x206>
 800e994:	f890 e011 	ldrb.w	lr, [r0, #17]
 800e998:	483c      	ldr	r0, [pc, #240]	; (800ea8c <LCD_DrawBitmap+0x210>)
 800e99a:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800e99c:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 800e9a0:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 800e9a4:	9403      	str	r4, [sp, #12]
 800e9a6:	e88d 0042 	stmia.w	sp, {r1, r6}
 800e9aa:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 800e9ac:	9304      	str	r3, [sp, #16]
 800e9ae:	9702      	str	r7, [sp, #8]
 800e9b0:	9405      	str	r4, [sp, #20]
 800e9b2:	f8de 4004 	ldr.w	r4, [lr, #4]
 800e9b6:	9b07      	ldr	r3, [sp, #28]
 800e9b8:	4629      	mov	r1, r5
 800e9ba:	47a0      	blx	r4
 800e9bc:	e061      	b.n	800ea82 <LCD_DrawBitmap+0x206>
 800e9be:	f1c6 0708 	rsb	r7, r6, #8
 800e9c2:	970e      	str	r7, [sp, #56]	; 0x38
 800e9c4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800e9c8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800e9ca:	455f      	cmp	r7, fp
 800e9cc:	da59      	bge.n	800ea82 <LCD_DrawBitmap+0x206>
 800e9ce:	4b2e      	ldr	r3, [pc, #184]	; (800ea88 <LCD_DrawBitmap+0x20c>)
 800e9d0:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800e9d2:	681b      	ldr	r3, [r3, #0]
 800e9d4:	4447      	add	r7, r8
 800e9d6:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800e9da:	970c      	str	r7, [sp, #48]	; 0x30
 800e9dc:	3f01      	subs	r7, #1
 800e9de:	4297      	cmp	r7, r2
 800e9e0:	970d      	str	r7, [sp, #52]	; 0x34
 800e9e2:	db46      	blt.n	800ea72 <LCD_DrawBitmap+0x1f6>
 800e9e4:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800e9e8:	4598      	cmp	r8, r3
 800e9ea:	dc42      	bgt.n	800ea72 <LCD_DrawBitmap+0x1f6>
 800e9ec:	f04f 0a00 	mov.w	sl, #0
 800e9f0:	940b      	str	r4, [sp, #44]	; 0x2c
 800e9f2:	46ac      	mov	ip, r5
 800e9f4:	4657      	mov	r7, sl
 800e9f6:	9807      	ldr	r0, [sp, #28]
 800e9f8:	4287      	cmp	r7, r0
 800e9fa:	da3a      	bge.n	800ea72 <LCD_DrawBitmap+0x1f6>
 800e9fc:	f1ba 0f00 	cmp.w	sl, #0
 800ea00:	d106      	bne.n	800ea10 <LCD_DrawBitmap+0x194>
 800ea02:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800ea04:	f890 9000 	ldrb.w	r9, [r0]
 800ea08:	3001      	adds	r0, #1
 800ea0a:	900b      	str	r0, [sp, #44]	; 0x2c
 800ea0c:	f04f 0a08 	mov.w	sl, #8
 800ea10:	990e      	ldr	r1, [sp, #56]	; 0x38
 800ea12:	4a1d      	ldr	r2, [pc, #116]	; (800ea88 <LCD_DrawBitmap+0x20c>)
 800ea14:	fa49 f301 	asr.w	r3, r9, r1
 800ea18:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800ea1c:	fa09 f906 	lsl.w	r9, r9, r6
 800ea20:	fa5f f989 	uxtb.w	r9, r9
 800ea24:	ebc6 0a0a 	rsb	sl, r6, sl
 800ea28:	d103      	bne.n	800ea32 <LCD_DrawBitmap+0x1b6>
 800ea2a:	6810      	ldr	r0, [r2, #0]
 800ea2c:	7c00      	ldrb	r0, [r0, #16]
 800ea2e:	0780      	lsls	r0, r0, #30
 800ea30:	d41b      	bmi.n	800ea6a <LCD_DrawBitmap+0x1ee>
 800ea32:	6812      	ldr	r2, [r2, #0]
 800ea34:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800ea36:	6810      	ldr	r0, [r2, #0]
 800ea38:	900f      	str	r0, [sp, #60]	; 0x3c
 800ea3a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 800ea3c:	b110      	cbz	r0, 800ea44 <LCD_DrawBitmap+0x1c8>
 800ea3e:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800ea42:	e000      	b.n	800ea46 <LCD_DrawBitmap+0x1ca>
 800ea44:	b2db      	uxtb	r3, r3
 800ea46:	991a      	ldr	r1, [sp, #104]	; 0x68
 800ea48:	6013      	str	r3, [r2, #0]
 800ea4a:	1e4a      	subs	r2, r1, #1
 800ea4c:	4462      	add	r2, ip
 800ea4e:	4660      	mov	r0, ip
 800ea50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ea52:	f8cd c020 	str.w	ip, [sp, #32]
 800ea56:	4641      	mov	r1, r8
 800ea58:	f7ff fe08 	bl	800e66c <LCD_FillRect>
 800ea5c:	4b0a      	ldr	r3, [pc, #40]	; (800ea88 <LCD_DrawBitmap+0x20c>)
 800ea5e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ea60:	681b      	ldr	r3, [r3, #0]
 800ea62:	f8dd c020 	ldr.w	ip, [sp, #32]
 800ea66:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ea68:	601a      	str	r2, [r3, #0]
 800ea6a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800ea6c:	3701      	adds	r7, #1
 800ea6e:	449c      	add	ip, r3
 800ea70:	e7c1      	b.n	800e9f6 <LCD_DrawBitmap+0x17a>
 800ea72:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800ea74:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800ea78:	3701      	adds	r7, #1
 800ea7a:	970a      	str	r7, [sp, #40]	; 0x28
 800ea7c:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800ea7e:	443c      	add	r4, r7
 800ea80:	e7a2      	b.n	800e9c8 <LCD_DrawBitmap+0x14c>
 800ea82:	b011      	add	sp, #68	; 0x44
 800ea84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea88:	2000016c 	.word	0x2000016c
 800ea8c:	200199ec 	.word	0x200199ec
 800ea90:	200199c0 	.word	0x200199c0

0800ea94 <LCD_SetClipRectMax>:
 800ea94:	b508      	push	{r3, lr}
 800ea96:	4b05      	ldr	r3, [pc, #20]	; (800eaac <LCD_SetClipRectMax+0x18>)
 800ea98:	6819      	ldr	r1, [r3, #0]
 800ea9a:	4b05      	ldr	r3, [pc, #20]	; (800eab0 <LCD_SetClipRectMax+0x1c>)
 800ea9c:	7c4a      	ldrb	r2, [r1, #17]
 800ea9e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800eaa2:	68c3      	ldr	r3, [r0, #12]
 800eaa4:	3108      	adds	r1, #8
 800eaa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eaa8:	4798      	blx	r3
 800eaaa:	bd08      	pop	{r3, pc}
 800eaac:	2000016c 	.word	0x2000016c
 800eab0:	200199ec 	.word	0x200199ec

0800eab4 <emWin_LCD_Init>:
 800eab4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eab6:	f7ff ffed 	bl	800ea94 <LCD_SetClipRectMax>
 800eaba:	f007 f911 	bl	8015ce0 <LCD_InitColors>
 800eabe:	4604      	mov	r4, r0
 800eac0:	2800      	cmp	r0, #0
 800eac2:	d13d      	bne.n	800eb40 <emWin_LCD_Init+0x8c>
 800eac4:	4605      	mov	r5, r0
 800eac6:	4628      	mov	r0, r5
 800eac8:	f001 ff20 	bl	801090c <GUI_DEVICE__GetpDriver>
 800eacc:	9001      	str	r0, [sp, #4]
 800eace:	b148      	cbz	r0, 800eae4 <emWin_LCD_Init+0x30>
 800ead0:	68c3      	ldr	r3, [r0, #12]
 800ead2:	210c      	movs	r1, #12
 800ead4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ead6:	a801      	add	r0, sp, #4
 800ead8:	4798      	blx	r3
 800eada:	4603      	mov	r3, r0
 800eadc:	b370      	cbz	r0, 800eb3c <emWin_LCD_Init+0x88>
 800eade:	9801      	ldr	r0, [sp, #4]
 800eae0:	4798      	blx	r3
 800eae2:	4304      	orrs	r4, r0
 800eae4:	3501      	adds	r5, #1
 800eae6:	2d02      	cmp	r5, #2
 800eae8:	d1ed      	bne.n	800eac6 <emWin_LCD_Init+0x12>
 800eaea:	bb4c      	cbnz	r4, 800eb40 <emWin_LCD_Init+0x8c>
 800eaec:	f007 f914 	bl	8015d18 <LCD_InitLUT>
 800eaf0:	2401      	movs	r4, #1
 800eaf2:	4620      	mov	r0, r4
 800eaf4:	f001 ff0a 	bl	801090c <GUI_DEVICE__GetpDriver>
 800eaf8:	9001      	str	r0, [sp, #4]
 800eafa:	b1d0      	cbz	r0, 800eb32 <emWin_LCD_Init+0x7e>
 800eafc:	4620      	mov	r0, r4
 800eafe:	f001 fa97 	bl	8010030 <GUI_SelectLayer>
 800eb02:	2004      	movs	r0, #4
 800eb04:	f7ff fd30 	bl	800e568 <LCD_SetDrawMode>
 800eb08:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800eb0c:	2000      	movs	r0, #0
 800eb0e:	4601      	mov	r1, r0
 800eb10:	4613      	mov	r3, r2
 800eb12:	f7ff fdab 	bl	800e66c <LCD_FillRect>
 800eb16:	2000      	movs	r0, #0
 800eb18:	f7ff fd26 	bl	800e568 <LCD_SetDrawMode>
 800eb1c:	a802      	add	r0, sp, #8
 800eb1e:	210e      	movs	r1, #14
 800eb20:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800eb24:	68db      	ldr	r3, [r3, #12]
 800eb26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eb28:	4798      	blx	r3
 800eb2a:	4603      	mov	r3, r0
 800eb2c:	b108      	cbz	r0, 800eb32 <emWin_LCD_Init+0x7e>
 800eb2e:	9801      	ldr	r0, [sp, #4]
 800eb30:	4798      	blx	r3
 800eb32:	f114 34ff 	adds.w	r4, r4, #4294967295
 800eb36:	d2dc      	bcs.n	800eaf2 <emWin_LCD_Init+0x3e>
 800eb38:	2000      	movs	r0, #0
 800eb3a:	e002      	b.n	800eb42 <emWin_LCD_Init+0x8e>
 800eb3c:	2001      	movs	r0, #1
 800eb3e:	e000      	b.n	800eb42 <emWin_LCD_Init+0x8e>
 800eb40:	4620      	mov	r0, r4
 800eb42:	b003      	add	sp, #12
 800eb44:	bd30      	pop	{r4, r5, pc}
	...

0800eb48 <LCD_Color2Index>:
 800eb48:	b508      	push	{r3, lr}
 800eb4a:	4b05      	ldr	r3, [pc, #20]	; (800eb60 <LCD_Color2Index+0x18>)
 800eb4c:	681b      	ldr	r3, [r3, #0]
 800eb4e:	7c5a      	ldrb	r2, [r3, #17]
 800eb50:	4b04      	ldr	r3, [pc, #16]	; (800eb64 <LCD_Color2Index+0x1c>)
 800eb52:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800eb56:	691b      	ldr	r3, [r3, #16]
 800eb58:	681b      	ldr	r3, [r3, #0]
 800eb5a:	4798      	blx	r3
 800eb5c:	bd08      	pop	{r3, pc}
 800eb5e:	bf00      	nop
 800eb60:	2000016c 	.word	0x2000016c
 800eb64:	200199ec 	.word	0x200199ec

0800eb68 <LCD_Index2Color>:
 800eb68:	b508      	push	{r3, lr}
 800eb6a:	4b05      	ldr	r3, [pc, #20]	; (800eb80 <LCD_Index2Color+0x18>)
 800eb6c:	681b      	ldr	r3, [r3, #0]
 800eb6e:	7c5a      	ldrb	r2, [r3, #17]
 800eb70:	4b04      	ldr	r3, [pc, #16]	; (800eb84 <LCD_Index2Color+0x1c>)
 800eb72:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800eb76:	691b      	ldr	r3, [r3, #16]
 800eb78:	685b      	ldr	r3, [r3, #4]
 800eb7a:	4798      	blx	r3
 800eb7c:	bd08      	pop	{r3, pc}
 800eb7e:	bf00      	nop
 800eb80:	2000016c 	.word	0x2000016c
 800eb84:	200199ec 	.word	0x200199ec

0800eb88 <LCD_SetColorIndex>:
 800eb88:	4b04      	ldr	r3, [pc, #16]	; (800eb9c <LCD_SetColorIndex+0x14>)
 800eb8a:	681b      	ldr	r3, [r3, #0]
 800eb8c:	7c1a      	ldrb	r2, [r3, #16]
 800eb8e:	0752      	lsls	r2, r2, #29
 800eb90:	bf4c      	ite	mi
 800eb92:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 800eb94:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 800eb96:	6018      	str	r0, [r3, #0]
 800eb98:	4770      	bx	lr
 800eb9a:	bf00      	nop
 800eb9c:	2000016c 	.word	0x2000016c

0800eba0 <_SetColor>:
 800eba0:	b508      	push	{r3, lr}
 800eba2:	4b06      	ldr	r3, [pc, #24]	; (800ebbc <_SetColor+0x1c>)
 800eba4:	681b      	ldr	r3, [r3, #0]
 800eba6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800eba8:	4281      	cmp	r1, r0
 800ebaa:	d006      	beq.n	800ebba <_SetColor+0x1a>
 800ebac:	6318      	str	r0, [r3, #48]	; 0x30
 800ebae:	f7ff ffcb 	bl	800eb48 <LCD_Color2Index>
 800ebb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ebb6:	f7ff bfe7 	b.w	800eb88 <LCD_SetColorIndex>
 800ebba:	bd08      	pop	{r3, pc}
 800ebbc:	2000016c 	.word	0x2000016c

0800ebc0 <LCD_SetBkColorIndex>:
 800ebc0:	4b04      	ldr	r3, [pc, #16]	; (800ebd4 <LCD_SetBkColorIndex+0x14>)
 800ebc2:	681b      	ldr	r3, [r3, #0]
 800ebc4:	7c1a      	ldrb	r2, [r3, #16]
 800ebc6:	0752      	lsls	r2, r2, #29
 800ebc8:	bf4c      	ite	mi
 800ebca:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 800ebcc:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 800ebce:	6018      	str	r0, [r3, #0]
 800ebd0:	4770      	bx	lr
 800ebd2:	bf00      	nop
 800ebd4:	2000016c 	.word	0x2000016c

0800ebd8 <_SetBkColor>:
 800ebd8:	b508      	push	{r3, lr}
 800ebda:	4b06      	ldr	r3, [pc, #24]	; (800ebf4 <_SetBkColor+0x1c>)
 800ebdc:	681b      	ldr	r3, [r3, #0]
 800ebde:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800ebe0:	4281      	cmp	r1, r0
 800ebe2:	d006      	beq.n	800ebf2 <_SetBkColor+0x1a>
 800ebe4:	6358      	str	r0, [r3, #52]	; 0x34
 800ebe6:	f7ff ffaf 	bl	800eb48 <LCD_Color2Index>
 800ebea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ebee:	f7ff bfe7 	b.w	800ebc0 <LCD_SetBkColorIndex>
 800ebf2:	bd08      	pop	{r3, pc}
 800ebf4:	2000016c 	.word	0x2000016c

0800ebf8 <LCD_SetBkColor>:
 800ebf8:	b508      	push	{r3, lr}
 800ebfa:	4b02      	ldr	r3, [pc, #8]	; (800ec04 <LCD_SetBkColor+0xc>)
 800ebfc:	681b      	ldr	r3, [r3, #0]
 800ebfe:	685b      	ldr	r3, [r3, #4]
 800ec00:	4798      	blx	r3
 800ec02:	bd08      	pop	{r3, pc}
 800ec04:	20000140 	.word	0x20000140

0800ec08 <LCD_SetColor>:
 800ec08:	b508      	push	{r3, lr}
 800ec0a:	4b02      	ldr	r3, [pc, #8]	; (800ec14 <LCD_SetColor+0xc>)
 800ec0c:	681b      	ldr	r3, [r3, #0]
 800ec0e:	681b      	ldr	r3, [r3, #0]
 800ec10:	4798      	blx	r3
 800ec12:	bd08      	pop	{r3, pc}
 800ec14:	20000140 	.word	0x20000140

0800ec18 <GUI__memset16>:
 800ec18:	b570      	push	{r4, r5, r6, lr}
 800ec1a:	0784      	lsls	r4, r0, #30
 800ec1c:	d502      	bpl.n	800ec24 <GUI__memset16+0xc>
 800ec1e:	8001      	strh	r1, [r0, #0]
 800ec20:	3a01      	subs	r2, #1
 800ec22:	3002      	adds	r0, #2
 800ec24:	0855      	lsrs	r5, r2, #1
 800ec26:	462b      	mov	r3, r5
 800ec28:	b305      	cbz	r5, 800ec6c <GUI__memset16+0x54>
 800ec2a:	2d03      	cmp	r5, #3
 800ec2c:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 800ec30:	dc02      	bgt.n	800ec38 <GUI__memset16+0x20>
 800ec32:	4606      	mov	r6, r0
 800ec34:	461d      	mov	r5, r3
 800ec36:	e012      	b.n	800ec5e <GUI__memset16+0x46>
 800ec38:	4603      	mov	r3, r0
 800ec3a:	462e      	mov	r6, r5
 800ec3c:	3e04      	subs	r6, #4
 800ec3e:	2e03      	cmp	r6, #3
 800ec40:	601c      	str	r4, [r3, #0]
 800ec42:	605c      	str	r4, [r3, #4]
 800ec44:	609c      	str	r4, [r3, #8]
 800ec46:	60dc      	str	r4, [r3, #12]
 800ec48:	f103 0310 	add.w	r3, r3, #16
 800ec4c:	dcf6      	bgt.n	800ec3c <GUI__memset16+0x24>
 800ec4e:	3d04      	subs	r5, #4
 800ec50:	08ab      	lsrs	r3, r5, #2
 800ec52:	1c5e      	adds	r6, r3, #1
 800ec54:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 800ec58:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 800ec5c:	e7e9      	b.n	800ec32 <GUI__memset16+0x1a>
 800ec5e:	b11d      	cbz	r5, 800ec68 <GUI__memset16+0x50>
 800ec60:	f846 4b04 	str.w	r4, [r6], #4
 800ec64:	3d01      	subs	r5, #1
 800ec66:	e7fa      	b.n	800ec5e <GUI__memset16+0x46>
 800ec68:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ec6c:	07d3      	lsls	r3, r2, #31
 800ec6e:	bf48      	it	mi
 800ec70:	8001      	strhmi	r1, [r0, #0]
 800ec72:	bd70      	pop	{r4, r5, r6, pc}

0800ec74 <GUI__memset>:
 800ec74:	b570      	push	{r4, r5, r6, lr}
 800ec76:	b12a      	cbz	r2, 800ec84 <GUI__memset+0x10>
 800ec78:	0783      	lsls	r3, r0, #30
 800ec7a:	d003      	beq.n	800ec84 <GUI__memset+0x10>
 800ec7c:	f800 1b01 	strb.w	r1, [r0], #1
 800ec80:	3a01      	subs	r2, #1
 800ec82:	e7f8      	b.n	800ec76 <GUI__memset+0x2>
 800ec84:	0893      	lsrs	r3, r2, #2
 800ec86:	d101      	bne.n	800ec8c <GUI__memset+0x18>
 800ec88:	4402      	add	r2, r0
 800ec8a:	e017      	b.n	800ecbc <GUI__memset+0x48>
 800ec8c:	f04f 3401 	mov.w	r4, #16843009	; 0x1010101
 800ec90:	f002 0203 	and.w	r2, r2, #3
 800ec94:	434c      	muls	r4, r1
 800ec96:	2b03      	cmp	r3, #3
 800ec98:	4605      	mov	r5, r0
 800ec9a:	dd06      	ble.n	800ecaa <GUI__memset+0x36>
 800ec9c:	6004      	str	r4, [r0, #0]
 800ec9e:	6044      	str	r4, [r0, #4]
 800eca0:	6084      	str	r4, [r0, #8]
 800eca2:	60c4      	str	r4, [r0, #12]
 800eca4:	3b04      	subs	r3, #4
 800eca6:	3010      	adds	r0, #16
 800eca8:	e7f5      	b.n	800ec96 <GUI__memset+0x22>
 800ecaa:	461e      	mov	r6, r3
 800ecac:	b11b      	cbz	r3, 800ecb6 <GUI__memset+0x42>
 800ecae:	f845 4b04 	str.w	r4, [r5], #4
 800ecb2:	3b01      	subs	r3, #1
 800ecb4:	e7fa      	b.n	800ecac <GUI__memset+0x38>
 800ecb6:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 800ecba:	e7e5      	b.n	800ec88 <GUI__memset+0x14>
 800ecbc:	4290      	cmp	r0, r2
 800ecbe:	d002      	beq.n	800ecc6 <GUI__memset+0x52>
 800ecc0:	f800 1b01 	strb.w	r1, [r0], #1
 800ecc4:	e7fa      	b.n	800ecbc <GUI__memset+0x48>
 800ecc6:	bd70      	pop	{r4, r5, r6, pc}

0800ecc8 <GUI__SetText>:
 800ecc8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ecca:	6807      	ldr	r7, [r0, #0]
 800eccc:	4605      	mov	r5, r0
 800ecce:	4638      	mov	r0, r7
 800ecd0:	460e      	mov	r6, r1
 800ecd2:	f007 fa2f 	bl	8016134 <GUI__strcmp_hp>
 800ecd6:	b908      	cbnz	r0, 800ecdc <GUI__SetText+0x14>
 800ecd8:	2000      	movs	r0, #0
 800ecda:	e02e      	b.n	800ed3a <GUI__SetText+0x72>
 800ecdc:	4630      	mov	r0, r6
 800ecde:	f007 fa09 	bl	80160f4 <GUI__strlen>
 800ece2:	1c44      	adds	r4, r0, #1
 800ece4:	4638      	mov	r0, r7
 800ece6:	f002 fb99 	bl	801141c <GUI_ALLOC_GetSize>
 800ecea:	4284      	cmp	r4, r0
 800ecec:	d10f      	bne.n	800ed0e <GUI__SetText+0x46>
 800ecee:	2c00      	cmp	r4, #0
 800ecf0:	d0f2      	beq.n	800ecd8 <GUI__SetText+0x10>
 800ecf2:	4638      	mov	r0, r7
 800ecf4:	f002 fb64 	bl	80113c0 <GUI_ALLOC_LockH>
 800ecf8:	ad02      	add	r5, sp, #8
 800ecfa:	4631      	mov	r1, r6
 800ecfc:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ed00:	4622      	mov	r2, r4
 800ed02:	f00a f816 	bl	8018d32 <memcpy>
 800ed06:	4628      	mov	r0, r5
 800ed08:	f002 fb68 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ed0c:	e014      	b.n	800ed38 <GUI__SetText+0x70>
 800ed0e:	4620      	mov	r0, r4
 800ed10:	f002 fdaa 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 800ed14:	4607      	mov	r7, r0
 800ed16:	2800      	cmp	r0, #0
 800ed18:	d0de      	beq.n	800ecd8 <GUI__SetText+0x10>
 800ed1a:	f002 fb51 	bl	80113c0 <GUI_ALLOC_LockH>
 800ed1e:	ac02      	add	r4, sp, #8
 800ed20:	4631      	mov	r1, r6
 800ed22:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ed26:	f00a f851 	bl	8018dcc <strcpy>
 800ed2a:	4620      	mov	r0, r4
 800ed2c:	f002 fb56 	bl	80113dc <GUI_ALLOC_UnlockH>
 800ed30:	4628      	mov	r0, r5
 800ed32:	f002 fd9d 	bl	8011870 <GUI_ALLOC_FreePtr>
 800ed36:	602f      	str	r7, [r5, #0]
 800ed38:	2001      	movs	r0, #1
 800ed3a:	b003      	add	sp, #12
 800ed3c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ed3e <GUI__ReduceRect>:
 800ed3e:	880b      	ldrh	r3, [r1, #0]
 800ed40:	b292      	uxth	r2, r2
 800ed42:	4413      	add	r3, r2
 800ed44:	8003      	strh	r3, [r0, #0]
 800ed46:	888b      	ldrh	r3, [r1, #4]
 800ed48:	1a9b      	subs	r3, r3, r2
 800ed4a:	8083      	strh	r3, [r0, #4]
 800ed4c:	884b      	ldrh	r3, [r1, #2]
 800ed4e:	4413      	add	r3, r2
 800ed50:	8043      	strh	r3, [r0, #2]
 800ed52:	88cb      	ldrh	r3, [r1, #6]
 800ed54:	1a9a      	subs	r2, r3, r2
 800ed56:	80c2      	strh	r2, [r0, #6]
 800ed58:	4770      	bx	lr
	...

0800ed5c <GUI__ManageCacheEx>:
 800ed5c:	2801      	cmp	r0, #1
 800ed5e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ed60:	4604      	mov	r4, r0
 800ed62:	460d      	mov	r5, r1
 800ed64:	dc65      	bgt.n	800ee32 <GUI__ManageCacheEx+0xd6>
 800ed66:	4b34      	ldr	r3, [pc, #208]	; (800ee38 <GUI__ManageCacheEx+0xdc>)
 800ed68:	681b      	ldr	r3, [r3, #0]
 800ed6a:	b103      	cbz	r3, 800ed6e <GUI__ManageCacheEx+0x12>
 800ed6c:	4798      	blx	r3
 800ed6e:	2d01      	cmp	r5, #1
 800ed70:	d004      	beq.n	800ed7c <GUI__ManageCacheEx+0x20>
 800ed72:	2d02      	cmp	r5, #2
 800ed74:	d021      	beq.n	800edba <GUI__ManageCacheEx+0x5e>
 800ed76:	2d00      	cmp	r5, #0
 800ed78:	d15b      	bne.n	800ee32 <GUI__ManageCacheEx+0xd6>
 800ed7a:	e035      	b.n	800ede8 <GUI__ManageCacheEx+0x8c>
 800ed7c:	4e2f      	ldr	r6, [pc, #188]	; (800ee3c <GUI__ManageCacheEx+0xe0>)
 800ed7e:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 800ed82:	b9b7      	cbnz	r7, 800edb2 <GUI__ManageCacheEx+0x56>
 800ed84:	4620      	mov	r0, r4
 800ed86:	f001 fdc1 	bl	801090c <GUI_DEVICE__GetpDriver>
 800ed8a:	9001      	str	r0, [sp, #4]
 800ed8c:	2800      	cmp	r0, #0
 800ed8e:	d050      	beq.n	800ee32 <GUI__ManageCacheEx+0xd6>
 800ed90:	68c3      	ldr	r3, [r0, #12]
 800ed92:	210d      	movs	r1, #13
 800ed94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ed96:	a801      	add	r0, sp, #4
 800ed98:	4798      	blx	r3
 800ed9a:	4603      	mov	r3, r0
 800ed9c:	2800      	cmp	r0, #0
 800ed9e:	d048      	beq.n	800ee32 <GUI__ManageCacheEx+0xd6>
 800eda0:	9801      	ldr	r0, [sp, #4]
 800eda2:	4629      	mov	r1, r5
 800eda4:	4798      	blx	r3
 800eda6:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 800edaa:	3301      	adds	r3, #1
 800edac:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 800edb0:	e018      	b.n	800ede4 <GUI__ManageCacheEx+0x88>
 800edb2:	3701      	adds	r7, #1
 800edb4:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 800edb8:	e03b      	b.n	800ee32 <GUI__ManageCacheEx+0xd6>
 800edba:	4620      	mov	r0, r4
 800edbc:	f001 fda6 	bl	801090c <GUI_DEVICE__GetpDriver>
 800edc0:	9001      	str	r0, [sp, #4]
 800edc2:	2800      	cmp	r0, #0
 800edc4:	d035      	beq.n	800ee32 <GUI__ManageCacheEx+0xd6>
 800edc6:	68c3      	ldr	r3, [r0, #12]
 800edc8:	210d      	movs	r1, #13
 800edca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800edcc:	a801      	add	r0, sp, #4
 800edce:	4798      	blx	r3
 800edd0:	4604      	mov	r4, r0
 800edd2:	2800      	cmp	r0, #0
 800edd4:	d02d      	beq.n	800ee32 <GUI__ManageCacheEx+0xd6>
 800edd6:	4b1a      	ldr	r3, [pc, #104]	; (800ee40 <GUI__ManageCacheEx+0xe4>)
 800edd8:	681b      	ldr	r3, [r3, #0]
 800edda:	b103      	cbz	r3, 800edde <GUI__ManageCacheEx+0x82>
 800eddc:	4798      	blx	r3
 800edde:	9801      	ldr	r0, [sp, #4]
 800ede0:	2102      	movs	r1, #2
 800ede2:	47a0      	blx	r4
 800ede4:	2000      	movs	r0, #0
 800ede6:	e025      	b.n	800ee34 <GUI__ManageCacheEx+0xd8>
 800ede8:	4d14      	ldr	r5, [pc, #80]	; (800ee3c <GUI__ManageCacheEx+0xe0>)
 800edea:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800edee:	2b01      	cmp	r3, #1
 800edf0:	d001      	beq.n	800edf6 <GUI__ManageCacheEx+0x9a>
 800edf2:	2001      	movs	r0, #1
 800edf4:	e015      	b.n	800ee22 <GUI__ManageCacheEx+0xc6>
 800edf6:	4620      	mov	r0, r4
 800edf8:	f001 fd88 	bl	801090c <GUI_DEVICE__GetpDriver>
 800edfc:	9001      	str	r0, [sp, #4]
 800edfe:	2800      	cmp	r0, #0
 800ee00:	d0f7      	beq.n	800edf2 <GUI__ManageCacheEx+0x96>
 800ee02:	68c3      	ldr	r3, [r0, #12]
 800ee04:	210d      	movs	r1, #13
 800ee06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ee08:	a801      	add	r0, sp, #4
 800ee0a:	4798      	blx	r3
 800ee0c:	4606      	mov	r6, r0
 800ee0e:	2800      	cmp	r0, #0
 800ee10:	d0ef      	beq.n	800edf2 <GUI__ManageCacheEx+0x96>
 800ee12:	4b0b      	ldr	r3, [pc, #44]	; (800ee40 <GUI__ManageCacheEx+0xe4>)
 800ee14:	681b      	ldr	r3, [r3, #0]
 800ee16:	b103      	cbz	r3, 800ee1a <GUI__ManageCacheEx+0xbe>
 800ee18:	4798      	blx	r3
 800ee1a:	9801      	ldr	r0, [sp, #4]
 800ee1c:	2100      	movs	r1, #0
 800ee1e:	47b0      	blx	r6
 800ee20:	2000      	movs	r0, #0
 800ee22:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800ee26:	2b00      	cmp	r3, #0
 800ee28:	bf18      	it	ne
 800ee2a:	3b01      	subne	r3, #1
 800ee2c:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800ee30:	e000      	b.n	800ee34 <GUI__ManageCacheEx+0xd8>
 800ee32:	2001      	movs	r0, #1
 800ee34:	b003      	add	sp, #12
 800ee36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ee38:	20019488 	.word	0x20019488
 800ee3c:	20019480 	.word	0x20019480
 800ee40:	2001947c 	.word	0x2001947c

0800ee44 <GUI__ManageCache>:
 800ee44:	4b02      	ldr	r3, [pc, #8]	; (800ee50 <GUI__ManageCache+0xc>)
 800ee46:	681b      	ldr	r3, [r3, #0]
 800ee48:	4601      	mov	r1, r0
 800ee4a:	7c58      	ldrb	r0, [r3, #17]
 800ee4c:	f7ff bf86 	b.w	800ed5c <GUI__ManageCacheEx>
 800ee50:	2000016c 	.word	0x2000016c

0800ee54 <GUI__IntersectRects>:
 800ee54:	b570      	push	{r4, r5, r6, lr}
 800ee56:	f9b2 3000 	ldrsh.w	r3, [r2]
 800ee5a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ee5e:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ee62:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 800ee66:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800ee6a:	429c      	cmp	r4, r3
 800ee6c:	bfb8      	it	lt
 800ee6e:	461c      	movlt	r4, r3
 800ee70:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ee74:	429d      	cmp	r5, r3
 800ee76:	bfa8      	it	ge
 800ee78:	462b      	movge	r3, r5
 800ee7a:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 800ee7e:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800ee82:	42ae      	cmp	r6, r5
 800ee84:	bfb8      	it	lt
 800ee86:	4635      	movlt	r5, r6
 800ee88:	b2a4      	uxth	r4, r4
 800ee8a:	b2ad      	uxth	r5, r5
 800ee8c:	4291      	cmp	r1, r2
 800ee8e:	bfb8      	it	lt
 800ee90:	460a      	movlt	r2, r1
 800ee92:	8004      	strh	r4, [r0, #0]
 800ee94:	8085      	strh	r5, [r0, #4]
 800ee96:	b224      	sxth	r4, r4
 800ee98:	b22d      	sxth	r5, r5
 800ee9a:	b29b      	uxth	r3, r3
 800ee9c:	b292      	uxth	r2, r2
 800ee9e:	42a5      	cmp	r5, r4
 800eea0:	8043      	strh	r3, [r0, #2]
 800eea2:	80c2      	strh	r2, [r0, #6]
 800eea4:	db06      	blt.n	800eeb4 <GUI__IntersectRects+0x60>
 800eea6:	b210      	sxth	r0, r2
 800eea8:	b21b      	sxth	r3, r3
 800eeaa:	4298      	cmp	r0, r3
 800eeac:	bfb4      	ite	lt
 800eeae:	2000      	movlt	r0, #0
 800eeb0:	2001      	movge	r0, #1
 800eeb2:	bd70      	pop	{r4, r5, r6, pc}
 800eeb4:	2000      	movs	r0, #0
 800eeb6:	bd70      	pop	{r4, r5, r6, pc}

0800eeb8 <GUI__IntersectRect>:
 800eeb8:	880b      	ldrh	r3, [r1, #0]
 800eeba:	b510      	push	{r4, lr}
 800eebc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800eec0:	b21a      	sxth	r2, r3
 800eec2:	4294      	cmp	r4, r2
 800eec4:	bfb8      	it	lt
 800eec6:	8003      	strhlt	r3, [r0, #0]
 800eec8:	884b      	ldrh	r3, [r1, #2]
 800eeca:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800eece:	b21a      	sxth	r2, r3
 800eed0:	4294      	cmp	r4, r2
 800eed2:	bfb8      	it	lt
 800eed4:	8043      	strhlt	r3, [r0, #2]
 800eed6:	888b      	ldrh	r3, [r1, #4]
 800eed8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800eedc:	b21a      	sxth	r2, r3
 800eede:	4294      	cmp	r4, r2
 800eee0:	bfc8      	it	gt
 800eee2:	8083      	strhgt	r3, [r0, #4]
 800eee4:	88cb      	ldrh	r3, [r1, #6]
 800eee6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800eeea:	b21a      	sxth	r2, r3
 800eeec:	4291      	cmp	r1, r2
 800eeee:	bfc8      	it	gt
 800eef0:	80c3      	strhgt	r3, [r0, #6]
 800eef2:	bd10      	pop	{r4, pc}

0800eef4 <GUI__GetNumChars>:
 800eef4:	b513      	push	{r0, r1, r4, lr}
 800eef6:	9001      	str	r0, [sp, #4]
 800eef8:	b130      	cbz	r0, 800ef08 <GUI__GetNumChars+0x14>
 800eefa:	2400      	movs	r4, #0
 800eefc:	a801      	add	r0, sp, #4
 800eefe:	f000 fa83 	bl	800f408 <GUI_UC__GetCharCodeInc>
 800ef02:	b110      	cbz	r0, 800ef0a <GUI__GetNumChars+0x16>
 800ef04:	3401      	adds	r4, #1
 800ef06:	e7f9      	b.n	800eefc <GUI__GetNumChars+0x8>
 800ef08:	4604      	mov	r4, r0
 800ef0a:	4620      	mov	r0, r4
 800ef0c:	b002      	add	sp, #8
 800ef0e:	bd10      	pop	{r4, pc}

0800ef10 <_GetCursorPosX>:
 800ef10:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ef12:	4615      	mov	r5, r2
 800ef14:	9001      	str	r0, [sp, #4]
 800ef16:	2400      	movs	r4, #0
 800ef18:	b13d      	cbz	r5, 800ef2a <_GetCursorPosX+0x1a>
 800ef1a:	a801      	add	r0, sp, #4
 800ef1c:	f000 fa74 	bl	800f408 <GUI_UC__GetCharCodeInc>
 800ef20:	f002 f93a 	bl	8011198 <GUI_GetCharDistX>
 800ef24:	3d01      	subs	r5, #1
 800ef26:	4404      	add	r4, r0
 800ef28:	e7f6      	b.n	800ef18 <_GetCursorPosX+0x8>
 800ef2a:	4620      	mov	r0, r4
 800ef2c:	b003      	add	sp, #12
 800ef2e:	bd30      	pop	{r4, r5, pc}

0800ef30 <_GetCursorCharacter>:
 800ef30:	b538      	push	{r3, r4, r5, lr}
 800ef32:	4604      	mov	r4, r0
 800ef34:	b10b      	cbz	r3, 800ef3a <_GetCursorCharacter+0xa>
 800ef36:	2200      	movs	r2, #0
 800ef38:	601a      	str	r2, [r3, #0]
 800ef3a:	460d      	mov	r5, r1
 800ef3c:	b13d      	cbz	r5, 800ef4e <_GetCursorCharacter+0x1e>
 800ef3e:	4b06      	ldr	r3, [pc, #24]	; (800ef58 <_GetCursorCharacter+0x28>)
 800ef40:	681b      	ldr	r3, [r3, #0]
 800ef42:	4620      	mov	r0, r4
 800ef44:	685b      	ldr	r3, [r3, #4]
 800ef46:	4798      	blx	r3
 800ef48:	3d01      	subs	r5, #1
 800ef4a:	4404      	add	r4, r0
 800ef4c:	e7f6      	b.n	800ef3c <_GetCursorCharacter+0xc>
 800ef4e:	4620      	mov	r0, r4
 800ef50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ef54:	f000 ba40 	b.w	800f3d8 <GUI_UC_GetCharCode>
 800ef58:	200199e4 	.word	0x200199e4

0800ef5c <_GetCursorPosChar>:
 800ef5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ef60:	4607      	mov	r7, r0
 800ef62:	460d      	mov	r5, r1
 800ef64:	4690      	mov	r8, r2
 800ef66:	4604      	mov	r4, r0
 800ef68:	2600      	movs	r6, #0
 800ef6a:	3d01      	subs	r5, #1
 800ef6c:	2d00      	cmp	r5, #0
 800ef6e:	dd09      	ble.n	800ef84 <_GetCursorPosChar+0x28>
 800ef70:	4620      	mov	r0, r4
 800ef72:	f000 fa31 	bl	800f3d8 <GUI_UC_GetCharCode>
 800ef76:	4681      	mov	r9, r0
 800ef78:	f002 f90e 	bl	8011198 <GUI_GetCharDistX>
 800ef7c:	4406      	add	r6, r0
 800ef7e:	f1b9 0f00 	cmp.w	r9, #0
 800ef82:	d105      	bne.n	800ef90 <_GetCursorPosChar+0x34>
 800ef84:	4638      	mov	r0, r7
 800ef86:	1be1      	subs	r1, r4, r7
 800ef88:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ef8c:	f000 ba62 	b.w	800f454 <GUI_UC__NumBytes2NumChars>
 800ef90:	4546      	cmp	r6, r8
 800ef92:	dcf7      	bgt.n	800ef84 <_GetCursorPosChar+0x28>
 800ef94:	4620      	mov	r0, r4
 800ef96:	f000 fa17 	bl	800f3c8 <GUI_UC_GetCharSize>
 800ef9a:	4404      	add	r4, r0
 800ef9c:	e7e5      	b.n	800ef6a <_GetCursorPosChar+0xe>
	...

0800efa0 <GUI__GetCursorPosX>:
 800efa0:	b510      	push	{r4, lr}
 800efa2:	4b03      	ldr	r3, [pc, #12]	; (800efb0 <GUI__GetCursorPosX+0x10>)
 800efa4:	460c      	mov	r4, r1
 800efa6:	681b      	ldr	r3, [r3, #0]
 800efa8:	4611      	mov	r1, r2
 800efaa:	4622      	mov	r2, r4
 800efac:	4798      	blx	r3
 800efae:	bd10      	pop	{r4, pc}
 800efb0:	2000014c 	.word	0x2000014c

0800efb4 <GUI__GetCursorPosChar>:
 800efb4:	b510      	push	{r4, lr}
 800efb6:	4b03      	ldr	r3, [pc, #12]	; (800efc4 <GUI__GetCursorPosChar+0x10>)
 800efb8:	460c      	mov	r4, r1
 800efba:	681b      	ldr	r3, [r3, #0]
 800efbc:	4611      	mov	r1, r2
 800efbe:	4622      	mov	r2, r4
 800efc0:	4798      	blx	r3
 800efc2:	bd10      	pop	{r4, pc}
 800efc4:	20000144 	.word	0x20000144

0800efc8 <GUI__GetCursorCharacter>:
 800efc8:	b510      	push	{r4, lr}
 800efca:	4c02      	ldr	r4, [pc, #8]	; (800efd4 <GUI__GetCursorCharacter+0xc>)
 800efcc:	6824      	ldr	r4, [r4, #0]
 800efce:	47a0      	blx	r4
 800efd0:	bd10      	pop	{r4, pc}
 800efd2:	bf00      	nop
 800efd4:	20000148 	.word	0x20000148

0800efd8 <GUI__CalcTextRect>:
 800efd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efdc:	460c      	mov	r4, r1
 800efde:	4615      	mov	r5, r2
 800efe0:	4698      	mov	r8, r3
 800efe2:	2800      	cmp	r0, #0
 800efe4:	d03b      	beq.n	800f05e <GUI__CalcTextRect+0x86>
 800efe6:	f001 fa57 	bl	8010498 <GUI_GetStringDistX>
 800efea:	f008 0203 	and.w	r2, r8, #3
 800efee:	2a01      	cmp	r2, #1
 800eff0:	4607      	mov	r7, r0
 800eff2:	d00c      	beq.n	800f00e <GUI__CalcTextRect+0x36>
 800eff4:	2a02      	cmp	r2, #2
 800eff6:	f9b4 6000 	ldrsh.w	r6, [r4]
 800effa:	d10c      	bne.n	800f016 <GUI__CalcTextRect+0x3e>
 800effc:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f000:	1b9b      	subs	r3, r3, r6
 800f002:	3301      	adds	r3, #1
 800f004:	1a1b      	subs	r3, r3, r0
 800f006:	fb93 f2f2 	sdiv	r2, r3, r2
 800f00a:	4416      	add	r6, r2
 800f00c:	e003      	b.n	800f016 <GUI__CalcTextRect+0x3e>
 800f00e:	f9b4 6004 	ldrsh.w	r6, [r4, #4]
 800f012:	1a36      	subs	r6, r6, r0
 800f014:	3601      	adds	r6, #1
 800f016:	f008 080c 	and.w	r8, r8, #12
 800f01a:	f002 f8b5 	bl	8011188 <GUI_GetFontDistY>
 800f01e:	f1b8 0f04 	cmp.w	r8, #4
 800f022:	d00e      	beq.n	800f042 <GUI__CalcTextRect+0x6a>
 800f024:	f1b8 0f0c 	cmp.w	r8, #12
 800f028:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f02c:	d10d      	bne.n	800f04a <GUI__CalcTextRect+0x72>
 800f02e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f032:	1ad2      	subs	r2, r2, r3
 800f034:	3201      	adds	r2, #1
 800f036:	1a12      	subs	r2, r2, r0
 800f038:	2102      	movs	r1, #2
 800f03a:	fb92 f2f1 	sdiv	r2, r2, r1
 800f03e:	4413      	add	r3, r2
 800f040:	e003      	b.n	800f04a <GUI__CalcTextRect+0x72>
 800f042:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f046:	1a1b      	subs	r3, r3, r0
 800f048:	3301      	adds	r3, #1
 800f04a:	3f01      	subs	r7, #1
 800f04c:	3801      	subs	r0, #1
 800f04e:	802e      	strh	r6, [r5, #0]
 800f050:	806b      	strh	r3, [r5, #2]
 800f052:	443e      	add	r6, r7
 800f054:	4403      	add	r3, r0
 800f056:	80ae      	strh	r6, [r5, #4]
 800f058:	80eb      	strh	r3, [r5, #6]
 800f05a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f05e:	680b      	ldr	r3, [r1, #0]
 800f060:	6013      	str	r3, [r2, #0]
 800f062:	684b      	ldr	r3, [r1, #4]
 800f064:	6053      	str	r3, [r2, #4]
 800f066:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f06a <GUI__MixColors>:
 800f06a:	f001 437f 	and.w	r3, r1, #4278190080	; 0xff000000
 800f06e:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
 800f072:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f074:	d027      	beq.n	800f0c6 <GUI__MixColors+0x5c>
 800f076:	43d3      	mvns	r3, r2
 800f078:	b2db      	uxtb	r3, r3
 800f07a:	b2cd      	uxtb	r5, r1
 800f07c:	b2c6      	uxtb	r6, r0
 800f07e:	435d      	muls	r5, r3
 800f080:	fb02 5506 	mla	r5, r2, r6, r5
 800f084:	f401 467f 	and.w	r6, r1, #65280	; 0xff00
 800f088:	f400 447f 	and.w	r4, r0, #65280	; 0xff00
 800f08c:	435e      	muls	r6, r3
 800f08e:	fb02 6604 	mla	r6, r2, r4, r6
 800f092:	f401 047f 	and.w	r4, r1, #16711680	; 0xff0000
 800f096:	f400 077f 	and.w	r7, r0, #16711680	; 0xff0000
 800f09a:	435c      	muls	r4, r3
 800f09c:	0e09      	lsrs	r1, r1, #24
 800f09e:	0e00      	lsrs	r0, r0, #24
 800f0a0:	fb02 4407 	mla	r4, r2, r7, r4
 800f0a4:	434b      	muls	r3, r1
 800f0a6:	0a36      	lsrs	r6, r6, #8
 800f0a8:	fb02 3200 	mla	r2, r2, r0, r3
 800f0ac:	0a24      	lsrs	r4, r4, #8
 800f0ae:	f3c5 2307 	ubfx	r3, r5, #8, #8
 800f0b2:	f406 407f 	and.w	r0, r6, #65280	; 0xff00
 800f0b6:	4318      	orrs	r0, r3
 800f0b8:	0412      	lsls	r2, r2, #16
 800f0ba:	f404 037f 	and.w	r3, r4, #16711680	; 0xff0000
 800f0be:	4318      	orrs	r0, r3
 800f0c0:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800f0c4:	4310      	orrs	r0, r2
 800f0c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f0c8 <_OnExit>:
 800f0c8:	b570      	push	{r4, r5, r6, lr}
 800f0ca:	4c0a      	ldr	r4, [pc, #40]	; (800f0f4 <_OnExit+0x2c>)
 800f0cc:	4d0a      	ldr	r5, [pc, #40]	; (800f0f8 <_OnExit+0x30>)
 800f0ce:	6820      	ldr	r0, [r4, #0]
 800f0d0:	4e0a      	ldr	r6, [pc, #40]	; (800f0fc <_OnExit+0x34>)
 800f0d2:	f002 f961 	bl	8011398 <GUI_ALLOC_FreeFixedBlock>
 800f0d6:	6828      	ldr	r0, [r5, #0]
 800f0d8:	f002 f95e 	bl	8011398 <GUI_ALLOC_FreeFixedBlock>
 800f0dc:	6830      	ldr	r0, [r6, #0]
 800f0de:	f002 f95b 	bl	8011398 <GUI_ALLOC_FreeFixedBlock>
 800f0e2:	4a07      	ldr	r2, [pc, #28]	; (800f100 <_OnExit+0x38>)
 800f0e4:	2300      	movs	r3, #0
 800f0e6:	6013      	str	r3, [r2, #0]
 800f0e8:	4a06      	ldr	r2, [pc, #24]	; (800f104 <_OnExit+0x3c>)
 800f0ea:	6033      	str	r3, [r6, #0]
 800f0ec:	602b      	str	r3, [r5, #0]
 800f0ee:	6023      	str	r3, [r4, #0]
 800f0f0:	6013      	str	r3, [r2, #0]
 800f0f2:	bd70      	pop	{r4, r5, r6, pc}
 800f0f4:	20019490 	.word	0x20019490
 800f0f8:	2001948c 	.word	0x2001948c
 800f0fc:	20019494 	.word	0x20019494
 800f100:	20019498 	.word	0x20019498
 800f104:	200194a8 	.word	0x200194a8

0800f108 <GUI__GetAlphaBuffer>:
 800f108:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f10c:	461c      	mov	r4, r3
 800f10e:	4b28      	ldr	r3, [pc, #160]	; (800f1b0 <GUI__GetAlphaBuffer+0xa8>)
 800f110:	4617      	mov	r7, r2
 800f112:	681a      	ldr	r2, [r3, #0]
 800f114:	4606      	mov	r6, r0
 800f116:	4688      	mov	r8, r1
 800f118:	b932      	cbnz	r2, 800f128 <GUI__GetAlphaBuffer+0x20>
 800f11a:	2201      	movs	r2, #1
 800f11c:	4825      	ldr	r0, [pc, #148]	; (800f1b4 <GUI__GetAlphaBuffer+0xac>)
 800f11e:	601a      	str	r2, [r3, #0]
 800f120:	4b25      	ldr	r3, [pc, #148]	; (800f1b8 <GUI__GetAlphaBuffer+0xb0>)
 800f122:	6003      	str	r3, [r0, #0]
 800f124:	f001 fd2c 	bl	8010b80 <GUI__RegisterExit>
 800f128:	4d24      	ldr	r5, [pc, #144]	; (800f1bc <GUI__GetAlphaBuffer+0xb4>)
 800f12a:	682b      	ldr	r3, [r5, #0]
 800f12c:	b933      	cbnz	r3, 800f13c <GUI__GetAlphaBuffer+0x34>
 800f12e:	4b24      	ldr	r3, [pc, #144]	; (800f1c0 <GUI__GetAlphaBuffer+0xb8>)
 800f130:	681b      	ldr	r3, [r3, #0]
 800f132:	602b      	str	r3, [r5, #0]
 800f134:	b913      	cbnz	r3, 800f13c <GUI__GetAlphaBuffer+0x34>
 800f136:	f7ff f993 	bl	800e460 <LCD_GetVXSizeMax>
 800f13a:	6028      	str	r0, [r5, #0]
 800f13c:	b10c      	cbz	r4, 800f142 <GUI__GetAlphaBuffer+0x3a>
 800f13e:	682b      	ldr	r3, [r5, #0]
 800f140:	6023      	str	r3, [r4, #0]
 800f142:	b196      	cbz	r6, 800f16a <GUI__GetAlphaBuffer+0x62>
 800f144:	4b1f      	ldr	r3, [pc, #124]	; (800f1c4 <GUI__GetAlphaBuffer+0xbc>)
 800f146:	681a      	ldr	r2, [r3, #0]
 800f148:	4699      	mov	r9, r3
 800f14a:	2400      	movs	r4, #0
 800f14c:	b94a      	cbnz	r2, 800f162 <GUI__GetAlphaBuffer+0x5a>
 800f14e:	6828      	ldr	r0, [r5, #0]
 800f150:	0080      	lsls	r0, r0, #2
 800f152:	f002 fa8d 	bl	8011670 <GUI_ALLOC_GetFixedBlock>
 800f156:	f1d0 0401 	rsbs	r4, r0, #1
 800f15a:	f8c9 0000 	str.w	r0, [r9]
 800f15e:	bf38      	it	cc
 800f160:	2400      	movcc	r4, #0
 800f162:	f8d9 3000 	ldr.w	r3, [r9]
 800f166:	6033      	str	r3, [r6, #0]
 800f168:	e000      	b.n	800f16c <GUI__GetAlphaBuffer+0x64>
 800f16a:	4634      	mov	r4, r6
 800f16c:	f1b8 0f00 	cmp.w	r8, #0
 800f170:	d00d      	beq.n	800f18e <GUI__GetAlphaBuffer+0x86>
 800f172:	4e15      	ldr	r6, [pc, #84]	; (800f1c8 <GUI__GetAlphaBuffer+0xc0>)
 800f174:	6833      	ldr	r3, [r6, #0]
 800f176:	b93b      	cbnz	r3, 800f188 <GUI__GetAlphaBuffer+0x80>
 800f178:	6828      	ldr	r0, [r5, #0]
 800f17a:	0080      	lsls	r0, r0, #2
 800f17c:	f002 fa78 	bl	8011670 <GUI_ALLOC_GetFixedBlock>
 800f180:	2800      	cmp	r0, #0
 800f182:	6030      	str	r0, [r6, #0]
 800f184:	bf08      	it	eq
 800f186:	2401      	moveq	r4, #1
 800f188:	6833      	ldr	r3, [r6, #0]
 800f18a:	f8c8 3000 	str.w	r3, [r8]
 800f18e:	b167      	cbz	r7, 800f1aa <GUI__GetAlphaBuffer+0xa2>
 800f190:	4e0e      	ldr	r6, [pc, #56]	; (800f1cc <GUI__GetAlphaBuffer+0xc4>)
 800f192:	6833      	ldr	r3, [r6, #0]
 800f194:	b93b      	cbnz	r3, 800f1a6 <GUI__GetAlphaBuffer+0x9e>
 800f196:	6828      	ldr	r0, [r5, #0]
 800f198:	0080      	lsls	r0, r0, #2
 800f19a:	f002 fa69 	bl	8011670 <GUI_ALLOC_GetFixedBlock>
 800f19e:	2800      	cmp	r0, #0
 800f1a0:	6030      	str	r0, [r6, #0]
 800f1a2:	bf08      	it	eq
 800f1a4:	2401      	moveq	r4, #1
 800f1a6:	6833      	ldr	r3, [r6, #0]
 800f1a8:	603b      	str	r3, [r7, #0]
 800f1aa:	4620      	mov	r0, r4
 800f1ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f1b0:	200194a8 	.word	0x200194a8
 800f1b4:	200194a0 	.word	0x200194a0
 800f1b8:	0800f0c9 	.word	0x0800f0c9
 800f1bc:	20019498 	.word	0x20019498
 800f1c0:	200199f4 	.word	0x200199f4
 800f1c4:	20019490 	.word	0x20019490
 800f1c8:	2001948c 	.word	0x2001948c
 800f1cc:	20019494 	.word	0x20019494

0800f1d0 <GUI__DoAlphaBlending>:
 800f1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1d4:	b093      	sub	sp, #76	; 0x4c
 800f1d6:	2400      	movs	r4, #0
 800f1d8:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800f1da:	900b      	str	r0, [sp, #44]	; 0x2c
 800f1dc:	910c      	str	r1, [sp, #48]	; 0x30
 800f1de:	4690      	mov	r8, r2
 800f1e0:	461f      	mov	r7, r3
 800f1e2:	6034      	str	r4, [r6, #0]
 800f1e4:	a80f      	add	r0, sp, #60	; 0x3c
 800f1e6:	a910      	add	r1, sp, #64	; 0x40
 800f1e8:	4622      	mov	r2, r4
 800f1ea:	ab11      	add	r3, sp, #68	; 0x44
 800f1ec:	f7ff ff8c 	bl	800f108 <GUI__GetAlphaBuffer>
 800f1f0:	4605      	mov	r5, r0
 800f1f2:	2800      	cmp	r0, #0
 800f1f4:	f040 80c3 	bne.w	800f37e <GUI__DoAlphaBlending+0x1ae>
 800f1f8:	4c63      	ldr	r4, [pc, #396]	; (800f388 <GUI__DoAlphaBlending+0x1b8>)
 800f1fa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f1fc:	6823      	ldr	r3, [r4, #0]
 800f1fe:	7c58      	ldrb	r0, [r3, #17]
 800f200:	4b62      	ldr	r3, [pc, #392]	; (800f38c <GUI__DoAlphaBlending+0x1bc>)
 800f202:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800f206:	9307      	str	r3, [sp, #28]
 800f208:	4297      	cmp	r7, r2
 800f20a:	bfa8      	it	ge
 800f20c:	4617      	movge	r7, r2
 800f20e:	691a      	ldr	r2, [r3, #16]
 800f210:	920d      	str	r2, [sp, #52]	; 0x34
 800f212:	970a      	str	r7, [sp, #40]	; 0x28
 800f214:	f7ff f8f0 	bl	800e3f8 <GUI_GetBitsPerPixelEx>
 800f218:	6823      	ldr	r3, [r4, #0]
 800f21a:	9008      	str	r0, [sp, #32]
 800f21c:	7c58      	ldrb	r0, [r3, #17]
 800f21e:	f7ff f909 	bl	800e434 <GUI_GetpfIndex2ColorEx>
 800f222:	4b5b      	ldr	r3, [pc, #364]	; (800f390 <GUI__DoAlphaBlending+0x1c0>)
 800f224:	9004      	str	r0, [sp, #16]
 800f226:	4298      	cmp	r0, r3
 800f228:	d005      	beq.n	800f236 <GUI__DoAlphaBlending+0x66>
 800f22a:	4b5a      	ldr	r3, [pc, #360]	; (800f394 <GUI__DoAlphaBlending+0x1c4>)
 800f22c:	1ac3      	subs	r3, r0, r3
 800f22e:	bf18      	it	ne
 800f230:	2301      	movne	r3, #1
 800f232:	9306      	str	r3, [sp, #24]
 800f234:	e000      	b.n	800f238 <GUI__DoAlphaBlending+0x68>
 800f236:	9506      	str	r5, [sp, #24]
 800f238:	2500      	movs	r5, #0
 800f23a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f23c:	46ab      	mov	fp, r5
 800f23e:	4643      	mov	r3, r8
 800f240:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f242:	f853 0b04 	ldr.w	r0, [r3], #4
 800f246:	9305      	str	r3, [sp, #20]
 800f248:	4790      	blx	r2
 800f24a:	0e03      	lsrs	r3, r0, #24
 800f24c:	4681      	mov	r9, r0
 800f24e:	9309      	str	r3, [sp, #36]	; 0x24
 800f250:	f000 8085 	beq.w	800f35e <GUI__DoAlphaBlending+0x18e>
 800f254:	f1bb 0f00 	cmp.w	fp, #0
 800f258:	d13f      	bne.n	800f2da <GUI__DoAlphaBlending+0x10a>
 800f25a:	4b4b      	ldr	r3, [pc, #300]	; (800f388 <GUI__DoAlphaBlending+0x1b8>)
 800f25c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800f25e:	681b      	ldr	r3, [r3, #0]
 800f260:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f262:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800f266:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800f26a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f26c:	442f      	add	r7, r5
 800f26e:	42bb      	cmp	r3, r7
 800f270:	bfc8      	it	gt
 800f272:	ebc7 0b03 	rsbgt	fp, r7, r3
 800f276:	eb0b 0a05 	add.w	sl, fp, r5
 800f27a:	bfc8      	it	gt
 800f27c:	461f      	movgt	r7, r3
 800f27e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f280:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800f284:	4453      	add	r3, sl
 800f286:	4494      	add	ip, r2
 800f288:	9300      	str	r3, [sp, #0]
 800f28a:	9b07      	ldr	r3, [sp, #28]
 800f28c:	9301      	str	r3, [sp, #4]
 800f28e:	f10c 32ff 	add.w	r2, ip, #4294967295
 800f292:	4638      	mov	r0, r7
 800f294:	460b      	mov	r3, r1
 800f296:	f8cd c00c 	str.w	ip, [sp, #12]
 800f29a:	f006 fce7 	bl	8015c6c <GUI_ReadRectEx>
 800f29e:	9a08      	ldr	r2, [sp, #32]
 800f2a0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800f2a2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800f2a6:	2a17      	cmp	r2, #23
 800f2a8:	dc06      	bgt.n	800f2b8 <GUI__DoAlphaBlending+0xe8>
 800f2aa:	4450      	add	r0, sl
 800f2ac:	ebcb 0104 	rsb	r1, fp, r4
 800f2b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f2b2:	f006 fff3 	bl	801629c <GUI__ExpandPixelIndicesEx>
 800f2b6:	e001      	b.n	800f2bc <GUI__DoAlphaBlending+0xec>
 800f2b8:	9b06      	ldr	r3, [sp, #24]
 800f2ba:	b913      	cbnz	r3, 800f2c2 <GUI__DoAlphaBlending+0xf2>
 800f2bc:	f04f 0b01 	mov.w	fp, #1
 800f2c0:	e00b      	b.n	800f2da <GUI__DoAlphaBlending+0x10a>
 800f2c2:	ebc7 070c 	rsb	r7, r7, ip
 800f2c6:	4482      	add	sl, r0
 800f2c8:	f8da 0000 	ldr.w	r0, [sl]
 800f2cc:	9a04      	ldr	r2, [sp, #16]
 800f2ce:	4790      	blx	r2
 800f2d0:	3f01      	subs	r7, #1
 800f2d2:	f84a 0b04 	str.w	r0, [sl], #4
 800f2d6:	d1f7      	bne.n	800f2c8 <GUI__DoAlphaBlending+0xf8>
 800f2d8:	e7f0      	b.n	800f2bc <GUI__DoAlphaBlending+0xec>
 800f2da:	4b2f      	ldr	r3, [pc, #188]	; (800f398 <GUI__DoAlphaBlending+0x1c8>)
 800f2dc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800f2de:	f8d3 c000 	ldr.w	ip, [r3]
 800f2e2:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800f2e4:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 800f2e8:	f1bc 0f00 	cmp.w	ip, #0
 800f2ec:	d024      	beq.n	800f338 <GUI__DoAlphaBlending+0x168>
 800f2ee:	eb07 020a 	add.w	r2, r7, sl
 800f2f2:	4451      	add	r1, sl
 800f2f4:	9210      	str	r2, [sp, #64]	; 0x40
 800f2f6:	4623      	mov	r3, r4
 800f2f8:	910f      	str	r1, [sp, #60]	; 0x3c
 800f2fa:	4640      	mov	r0, r8
 800f2fc:	47e0      	blx	ip
 800f2fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800f300:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f302:	2300      	movs	r3, #0
 800f304:	f858 1003 	ldr.w	r1, [r8, r3]
 800f308:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 800f30c:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800f310:	58e8      	ldr	r0, [r5, r3]
 800f312:	d101      	bne.n	800f318 <GUI__DoAlphaBlending+0x148>
 800f314:	50d0      	str	r0, [r2, r3]
 800f316:	e005      	b.n	800f324 <GUI__DoAlphaBlending+0x154>
 800f318:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800f31c:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800f320:	bf08      	it	eq
 800f322:	50d1      	streq	r1, [r2, r3]
 800f324:	3c01      	subs	r4, #1
 800f326:	f103 0304 	add.w	r3, r3, #4
 800f32a:	d1eb      	bne.n	800f304 <GUI__DoAlphaBlending+0x134>
 800f32c:	6833      	ldr	r3, [r6, #0]
 800f32e:	9710      	str	r7, [sp, #64]	; 0x40
 800f330:	f043 0301 	orr.w	r3, r3, #1
 800f334:	6033      	str	r3, [r6, #0]
 800f336:	e020      	b.n	800f37a <GUI__DoAlphaBlending+0x1aa>
 800f338:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f33a:	2bff      	cmp	r3, #255	; 0xff
 800f33c:	d104      	bne.n	800f348 <GUI__DoAlphaBlending+0x178>
 800f33e:	f851 300a 	ldr.w	r3, [r1, sl]
 800f342:	f847 300a 	str.w	r3, [r7, sl]
 800f346:	e011      	b.n	800f36c <GUI__DoAlphaBlending+0x19c>
 800f348:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f34a:	f851 100a 	ldr.w	r1, [r1, sl]
 800f34e:	43da      	mvns	r2, r3
 800f350:	4648      	mov	r0, r9
 800f352:	b2d2      	uxtb	r2, r2
 800f354:	f7ff fe89 	bl	800f06a <GUI__MixColors>
 800f358:	f847 000a 	str.w	r0, [r7, sl]
 800f35c:	e002      	b.n	800f364 <GUI__DoAlphaBlending+0x194>
 800f35e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f360:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 800f364:	6833      	ldr	r3, [r6, #0]
 800f366:	f043 0301 	orr.w	r3, r3, #1
 800f36a:	6033      	str	r3, [r6, #0]
 800f36c:	3c01      	subs	r4, #1
 800f36e:	f105 0501 	add.w	r5, r5, #1
 800f372:	d002      	beq.n	800f37a <GUI__DoAlphaBlending+0x1aa>
 800f374:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800f378:	e761      	b.n	800f23e <GUI__DoAlphaBlending+0x6e>
 800f37a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800f37c:	e000      	b.n	800f380 <GUI__DoAlphaBlending+0x1b0>
 800f37e:	4620      	mov	r0, r4
 800f380:	b013      	add	sp, #76	; 0x4c
 800f382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f386:	bf00      	nop
 800f388:	2000016c 	.word	0x2000016c
 800f38c:	200199ec 	.word	0x200199ec
 800f390:	08011a03 	.word	0x08011a03
 800f394:	08011a01 	.word	0x08011a01
 800f398:	2001949c 	.word	0x2001949c

0800f39c <GUI__AllocAlphaBuffer>:
 800f39c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f39e:	b108      	cbz	r0, 800f3a4 <GUI__AllocAlphaBuffer+0x8>
 800f3a0:	aa03      	add	r2, sp, #12
 800f3a2:	e000      	b.n	800f3a6 <GUI__AllocAlphaBuffer+0xa>
 800f3a4:	4602      	mov	r2, r0
 800f3a6:	a801      	add	r0, sp, #4
 800f3a8:	a902      	add	r1, sp, #8
 800f3aa:	2300      	movs	r3, #0
 800f3ac:	f7ff feac 	bl	800f108 <GUI__GetAlphaBuffer>
 800f3b0:	b005      	add	sp, #20
 800f3b2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800f3b8 <GUI_SignalEvent>:
 800f3b8:	b508      	push	{r3, lr}
 800f3ba:	4b02      	ldr	r3, [pc, #8]	; (800f3c4 <GUI_SignalEvent+0xc>)
 800f3bc:	681b      	ldr	r3, [r3, #0]
 800f3be:	b103      	cbz	r3, 800f3c2 <GUI_SignalEvent+0xa>
 800f3c0:	4798      	blx	r3
 800f3c2:	bd08      	pop	{r3, pc}
 800f3c4:	200194ac 	.word	0x200194ac

0800f3c8 <GUI_UC_GetCharSize>:
 800f3c8:	b508      	push	{r3, lr}
 800f3ca:	4b02      	ldr	r3, [pc, #8]	; (800f3d4 <GUI_UC_GetCharSize+0xc>)
 800f3cc:	681b      	ldr	r3, [r3, #0]
 800f3ce:	685b      	ldr	r3, [r3, #4]
 800f3d0:	4798      	blx	r3
 800f3d2:	bd08      	pop	{r3, pc}
 800f3d4:	200199e4 	.word	0x200199e4

0800f3d8 <GUI_UC_GetCharCode>:
 800f3d8:	b508      	push	{r3, lr}
 800f3da:	4b02      	ldr	r3, [pc, #8]	; (800f3e4 <GUI_UC_GetCharCode+0xc>)
 800f3dc:	681b      	ldr	r3, [r3, #0]
 800f3de:	681b      	ldr	r3, [r3, #0]
 800f3e0:	4798      	blx	r3
 800f3e2:	bd08      	pop	{r3, pc}
 800f3e4:	200199e4 	.word	0x200199e4

0800f3e8 <GUI_UC_Encode>:
 800f3e8:	b508      	push	{r3, lr}
 800f3ea:	4b02      	ldr	r3, [pc, #8]	; (800f3f4 <GUI_UC_Encode+0xc>)
 800f3ec:	681b      	ldr	r3, [r3, #0]
 800f3ee:	68db      	ldr	r3, [r3, #12]
 800f3f0:	4798      	blx	r3
 800f3f2:	bd08      	pop	{r3, pc}
 800f3f4:	200199e4 	.word	0x200199e4

0800f3f8 <GUI_UC__CalcSizeOfChar>:
 800f3f8:	b508      	push	{r3, lr}
 800f3fa:	4b02      	ldr	r3, [pc, #8]	; (800f404 <GUI_UC__CalcSizeOfChar+0xc>)
 800f3fc:	681b      	ldr	r3, [r3, #0]
 800f3fe:	689b      	ldr	r3, [r3, #8]
 800f400:	4798      	blx	r3
 800f402:	bd08      	pop	{r3, pc}
 800f404:	200199e4 	.word	0x200199e4

0800f408 <GUI_UC__GetCharCodeInc>:
 800f408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f40a:	4e08      	ldr	r6, [pc, #32]	; (800f42c <GUI_UC__GetCharCodeInc+0x24>)
 800f40c:	6804      	ldr	r4, [r0, #0]
 800f40e:	6833      	ldr	r3, [r6, #0]
 800f410:	4605      	mov	r5, r0
 800f412:	681b      	ldr	r3, [r3, #0]
 800f414:	4620      	mov	r0, r4
 800f416:	4798      	blx	r3
 800f418:	6833      	ldr	r3, [r6, #0]
 800f41a:	4607      	mov	r7, r0
 800f41c:	685b      	ldr	r3, [r3, #4]
 800f41e:	4620      	mov	r0, r4
 800f420:	4798      	blx	r3
 800f422:	4420      	add	r0, r4
 800f424:	6028      	str	r0, [r5, #0]
 800f426:	4638      	mov	r0, r7
 800f428:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f42a:	bf00      	nop
 800f42c:	200199e4 	.word	0x200199e4

0800f430 <GUI_UC__NumChars2NumBytes>:
 800f430:	b570      	push	{r4, r5, r6, lr}
 800f432:	4604      	mov	r4, r0
 800f434:	460e      	mov	r6, r1
 800f436:	2500      	movs	r5, #0
 800f438:	b146      	cbz	r6, 800f44c <GUI_UC__NumChars2NumBytes+0x1c>
 800f43a:	4b05      	ldr	r3, [pc, #20]	; (800f450 <GUI_UC__NumChars2NumBytes+0x20>)
 800f43c:	681b      	ldr	r3, [r3, #0]
 800f43e:	4620      	mov	r0, r4
 800f440:	685b      	ldr	r3, [r3, #4]
 800f442:	4798      	blx	r3
 800f444:	3e01      	subs	r6, #1
 800f446:	4404      	add	r4, r0
 800f448:	4405      	add	r5, r0
 800f44a:	e7f5      	b.n	800f438 <GUI_UC__NumChars2NumBytes+0x8>
 800f44c:	4628      	mov	r0, r5
 800f44e:	bd70      	pop	{r4, r5, r6, pc}
 800f450:	200199e4 	.word	0x200199e4

0800f454 <GUI_UC__NumBytes2NumChars>:
 800f454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f456:	2400      	movs	r4, #0
 800f458:	4606      	mov	r6, r0
 800f45a:	460f      	mov	r7, r1
 800f45c:	4625      	mov	r5, r4
 800f45e:	42a7      	cmp	r7, r4
 800f460:	dd07      	ble.n	800f472 <GUI_UC__NumBytes2NumChars+0x1e>
 800f462:	4b05      	ldr	r3, [pc, #20]	; (800f478 <GUI_UC__NumBytes2NumChars+0x24>)
 800f464:	681b      	ldr	r3, [r3, #0]
 800f466:	1930      	adds	r0, r6, r4
 800f468:	685b      	ldr	r3, [r3, #4]
 800f46a:	4798      	blx	r3
 800f46c:	3501      	adds	r5, #1
 800f46e:	4404      	add	r4, r0
 800f470:	e7f5      	b.n	800f45e <GUI_UC__NumBytes2NumChars+0xa>
 800f472:	4628      	mov	r0, r5
 800f474:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f476:	bf00      	nop
 800f478:	200199e4 	.word	0x200199e4

0800f47c <_OnExit>:
 800f47c:	4a03      	ldr	r2, [pc, #12]	; (800f48c <_OnExit+0x10>)
 800f47e:	2300      	movs	r3, #0
 800f480:	6013      	str	r3, [r2, #0]
 800f482:	4a03      	ldr	r2, [pc, #12]	; (800f490 <_OnExit+0x14>)
 800f484:	6013      	str	r3, [r2, #0]
 800f486:	4a03      	ldr	r2, [pc, #12]	; (800f494 <_OnExit+0x18>)
 800f488:	6013      	str	r3, [r2, #0]
 800f48a:	4770      	bx	lr
 800f48c:	200194b0 	.word	0x200194b0
 800f490:	200194b4 	.word	0x200194b4
 800f494:	200194c0 	.word	0x200194c0

0800f498 <GUI_TIMER_Exec>:
 800f498:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f49c:	4b19      	ldr	r3, [pc, #100]	; (800f504 <GUI_TIMER_Exec+0x6c>)
 800f49e:	681f      	ldr	r7, [r3, #0]
 800f4a0:	b085      	sub	sp, #20
 800f4a2:	2500      	movs	r5, #0
 800f4a4:	4698      	mov	r8, r3
 800f4a6:	f8d8 3000 	ldr.w	r3, [r8]
 800f4aa:	4c16      	ldr	r4, [pc, #88]	; (800f504 <GUI_TIMER_Exec+0x6c>)
 800f4ac:	b333      	cbz	r3, 800f4fc <GUI_TIMER_Exec+0x64>
 800f4ae:	f000 f991 	bl	800f7d4 <GUI_GetTime>
 800f4b2:	4606      	mov	r6, r0
 800f4b4:	6820      	ldr	r0, [r4, #0]
 800f4b6:	f001 ff83 	bl	80113c0 <GUI_ALLOC_LockH>
 800f4ba:	4603      	mov	r3, r0
 800f4bc:	a804      	add	r0, sp, #16
 800f4be:	6959      	ldr	r1, [r3, #20]
 800f4c0:	f840 3d10 	str.w	r3, [r0, #-16]!
 800f4c4:	1b89      	subs	r1, r1, r6
 800f4c6:	2900      	cmp	r1, #0
 800f4c8:	dc13      	bgt.n	800f4f2 <GUI_TIMER_Exec+0x5a>
 800f4ca:	6821      	ldr	r1, [r4, #0]
 800f4cc:	9103      	str	r1, [sp, #12]
 800f4ce:	9601      	str	r6, [sp, #4]
 800f4d0:	6919      	ldr	r1, [r3, #16]
 800f4d2:	685e      	ldr	r6, [r3, #4]
 800f4d4:	9102      	str	r1, [sp, #8]
 800f4d6:	4668      	mov	r0, sp
 800f4d8:	6026      	str	r6, [r4, #0]
 800f4da:	f8d3 9000 	ldr.w	r9, [r3]
 800f4de:	f001 ff7d 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f4e2:	a801      	add	r0, sp, #4
 800f4e4:	47c8      	blx	r9
 800f4e6:	b14e      	cbz	r6, 800f4fc <GUI_TIMER_Exec+0x64>
 800f4e8:	6823      	ldr	r3, [r4, #0]
 800f4ea:	42bb      	cmp	r3, r7
 800f4ec:	d005      	beq.n	800f4fa <GUI_TIMER_Exec+0x62>
 800f4ee:	2501      	movs	r5, #1
 800f4f0:	e7d9      	b.n	800f4a6 <GUI_TIMER_Exec+0xe>
 800f4f2:	4668      	mov	r0, sp
 800f4f4:	f001 ff72 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f4f8:	e000      	b.n	800f4fc <GUI_TIMER_Exec+0x64>
 800f4fa:	2500      	movs	r5, #0
 800f4fc:	4628      	mov	r0, r5
 800f4fe:	b005      	add	sp, #20
 800f500:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f504:	200194b4 	.word	0x200194b4

0800f508 <_Link>:
 800f508:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f50a:	4c25      	ldr	r4, [pc, #148]	; (800f5a0 <_Link+0x98>)
 800f50c:	b085      	sub	sp, #20
 800f50e:	4605      	mov	r5, r0
 800f510:	f001 ff56 	bl	80113c0 <GUI_ALLOC_LockH>
 800f514:	6823      	ldr	r3, [r4, #0]
 800f516:	9001      	str	r0, [sp, #4]
 800f518:	b913      	cbnz	r3, 800f520 <_Link+0x18>
 800f51a:	6025      	str	r5, [r4, #0]
 800f51c:	6043      	str	r3, [r0, #4]
 800f51e:	e039      	b.n	800f594 <_Link+0x8c>
 800f520:	4618      	mov	r0, r3
 800f522:	f001 ff4d 	bl	80113c0 <GUI_ALLOC_LockH>
 800f526:	ab04      	add	r3, sp, #16
 800f528:	6946      	ldr	r6, [r0, #20]
 800f52a:	f843 0d10 	str.w	r0, [r3, #-16]!
 800f52e:	4668      	mov	r0, sp
 800f530:	f001 ff54 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f534:	9b01      	ldr	r3, [sp, #4]
 800f536:	695a      	ldr	r2, [r3, #20]
 800f538:	1b92      	subs	r2, r2, r6
 800f53a:	2a00      	cmp	r2, #0
 800f53c:	dc03      	bgt.n	800f546 <_Link+0x3e>
 800f53e:	6822      	ldr	r2, [r4, #0]
 800f540:	605a      	str	r2, [r3, #4]
 800f542:	6025      	str	r5, [r4, #0]
 800f544:	e026      	b.n	800f594 <_Link+0x8c>
 800f546:	6826      	ldr	r6, [r4, #0]
 800f548:	4630      	mov	r0, r6
 800f54a:	f001 ff39 	bl	80113c0 <GUI_ALLOC_LockH>
 800f54e:	ac04      	add	r4, sp, #16
 800f550:	6846      	ldr	r6, [r0, #4]
 800f552:	f844 0d08 	str.w	r0, [r4, #-8]!
 800f556:	b1be      	cbz	r6, 800f588 <_Link+0x80>
 800f558:	4630      	mov	r0, r6
 800f55a:	f001 ff31 	bl	80113c0 <GUI_ALLOC_LockH>
 800f55e:	ab04      	add	r3, sp, #16
 800f560:	6947      	ldr	r7, [r0, #20]
 800f562:	f843 0d04 	str.w	r0, [r3, #-4]!
 800f566:	4618      	mov	r0, r3
 800f568:	f001 ff38 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f56c:	9a01      	ldr	r2, [sp, #4]
 800f56e:	6953      	ldr	r3, [r2, #20]
 800f570:	1bdb      	subs	r3, r3, r7
 800f572:	2b00      	cmp	r3, #0
 800f574:	9b02      	ldr	r3, [sp, #8]
 800f576:	dc02      	bgt.n	800f57e <_Link+0x76>
 800f578:	6056      	str	r6, [r2, #4]
 800f57a:	605d      	str	r5, [r3, #4]
 800f57c:	e007      	b.n	800f58e <_Link+0x86>
 800f57e:	4620      	mov	r0, r4
 800f580:	685e      	ldr	r6, [r3, #4]
 800f582:	f001 ff2b 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f586:	e7df      	b.n	800f548 <_Link+0x40>
 800f588:	9b01      	ldr	r3, [sp, #4]
 800f58a:	605e      	str	r6, [r3, #4]
 800f58c:	6045      	str	r5, [r0, #4]
 800f58e:	4620      	mov	r0, r4
 800f590:	f001 ff24 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f594:	a801      	add	r0, sp, #4
 800f596:	f001 ff21 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f59a:	b005      	add	sp, #20
 800f59c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f59e:	bf00      	nop
 800f5a0:	200194b4 	.word	0x200194b4

0800f5a4 <_Unlink>:
 800f5a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f5a6:	4605      	mov	r5, r0
 800f5a8:	b1f0      	cbz	r0, 800f5e8 <_Unlink+0x44>
 800f5aa:	f001 ff09 	bl	80113c0 <GUI_ALLOC_LockH>
 800f5ae:	4b0f      	ldr	r3, [pc, #60]	; (800f5ec <_Unlink+0x48>)
 800f5b0:	9000      	str	r0, [sp, #0]
 800f5b2:	681c      	ldr	r4, [r3, #0]
 800f5b4:	42ac      	cmp	r4, r5
 800f5b6:	d104      	bne.n	800f5c2 <_Unlink+0x1e>
 800f5b8:	6842      	ldr	r2, [r0, #4]
 800f5ba:	601a      	str	r2, [r3, #0]
 800f5bc:	e011      	b.n	800f5e2 <_Unlink+0x3e>
 800f5be:	f001 ff0d 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f5c2:	b174      	cbz	r4, 800f5e2 <_Unlink+0x3e>
 800f5c4:	4620      	mov	r0, r4
 800f5c6:	f001 fefb 	bl	80113c0 <GUI_ALLOC_LockH>
 800f5ca:	4603      	mov	r3, r0
 800f5cc:	a802      	add	r0, sp, #8
 800f5ce:	685c      	ldr	r4, [r3, #4]
 800f5d0:	f840 3d04 	str.w	r3, [r0, #-4]!
 800f5d4:	42ac      	cmp	r4, r5
 800f5d6:	d1f2      	bne.n	800f5be <_Unlink+0x1a>
 800f5d8:	9a00      	ldr	r2, [sp, #0]
 800f5da:	6852      	ldr	r2, [r2, #4]
 800f5dc:	605a      	str	r2, [r3, #4]
 800f5de:	f001 fefd 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f5e2:	4668      	mov	r0, sp
 800f5e4:	f001 fefa 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f5e8:	b003      	add	sp, #12
 800f5ea:	bd30      	pop	{r4, r5, pc}
 800f5ec:	200194b4 	.word	0x200194b4

0800f5f0 <GUI_TIMER__GetFirstTimer>:
 800f5f0:	2300      	movs	r3, #0
 800f5f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f5f4:	6003      	str	r3, [r0, #0]
 800f5f6:	4b09      	ldr	r3, [pc, #36]	; (800f61c <GUI_TIMER__GetFirstTimer+0x2c>)
 800f5f8:	681c      	ldr	r4, [r3, #0]
 800f5fa:	4605      	mov	r5, r0
 800f5fc:	b154      	cbz	r4, 800f614 <GUI_TIMER__GetFirstTimer+0x24>
 800f5fe:	4620      	mov	r0, r4
 800f600:	f001 fede 	bl	80113c0 <GUI_ALLOC_LockH>
 800f604:	ab02      	add	r3, sp, #8
 800f606:	6902      	ldr	r2, [r0, #16]
 800f608:	f843 0d04 	str.w	r0, [r3, #-4]!
 800f60c:	602a      	str	r2, [r5, #0]
 800f60e:	4618      	mov	r0, r3
 800f610:	f001 fee4 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f614:	4620      	mov	r0, r4
 800f616:	b003      	add	sp, #12
 800f618:	bd30      	pop	{r4, r5, pc}
 800f61a:	bf00      	nop
 800f61c:	200194b0 	.word	0x200194b0

0800f620 <GUI_TIMER__GetNextTimerLin>:
 800f620:	2300      	movs	r3, #0
 800f622:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f624:	600b      	str	r3, [r1, #0]
 800f626:	460e      	mov	r6, r1
 800f628:	4604      	mov	r4, r0
 800f62a:	b190      	cbz	r0, 800f652 <GUI_TIMER__GetNextTimerLin+0x32>
 800f62c:	f001 fec8 	bl	80113c0 <GUI_ALLOC_LockH>
 800f630:	ad02      	add	r5, sp, #8
 800f632:	6884      	ldr	r4, [r0, #8]
 800f634:	f845 0d04 	str.w	r0, [r5, #-4]!
 800f638:	b144      	cbz	r4, 800f64c <GUI_TIMER__GetNextTimerLin+0x2c>
 800f63a:	4628      	mov	r0, r5
 800f63c:	f001 fece 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f640:	4620      	mov	r0, r4
 800f642:	f001 febd 	bl	80113c0 <GUI_ALLOC_LockH>
 800f646:	6903      	ldr	r3, [r0, #16]
 800f648:	9001      	str	r0, [sp, #4]
 800f64a:	6033      	str	r3, [r6, #0]
 800f64c:	4628      	mov	r0, r5
 800f64e:	f001 fec5 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f652:	4620      	mov	r0, r4
 800f654:	b002      	add	sp, #8
 800f656:	bd70      	pop	{r4, r5, r6, pc}

0800f658 <GUI_TIMER_Create>:
 800f658:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f65c:	4681      	mov	r9, r0
 800f65e:	201c      	movs	r0, #28
 800f660:	460e      	mov	r6, r1
 800f662:	4690      	mov	r8, r2
 800f664:	461f      	mov	r7, r3
 800f666:	f002 f918 	bl	801189a <GUI_ALLOC_AllocZero>
 800f66a:	4604      	mov	r4, r0
 800f66c:	2800      	cmp	r0, #0
 800f66e:	d031      	beq.n	800f6d4 <GUI_TIMER_Create+0x7c>
 800f670:	4b1a      	ldr	r3, [pc, #104]	; (800f6dc <GUI_TIMER_Create+0x84>)
 800f672:	4a1b      	ldr	r2, [pc, #108]	; (800f6e0 <GUI_TIMER_Create+0x88>)
 800f674:	601a      	str	r2, [r3, #0]
 800f676:	f001 fea3 	bl	80113c0 <GUI_ALLOC_LockH>
 800f67a:	9000      	str	r0, [sp, #0]
 800f67c:	b916      	cbnz	r6, 800f684 <GUI_TIMER_Create+0x2c>
 800f67e:	f000 f8a9 	bl	800f7d4 <GUI_GetTime>
 800f682:	4606      	mov	r6, r0
 800f684:	a802      	add	r0, sp, #8
 800f686:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 800f68a:	4668      	mov	r0, sp
 800f68c:	616e      	str	r6, [r5, #20]
 800f68e:	f8c5 9000 	str.w	r9, [r5]
 800f692:	f8c5 8010 	str.w	r8, [r5, #16]
 800f696:	81af      	strh	r7, [r5, #12]
 800f698:	f001 fea0 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f69c:	4620      	mov	r0, r4
 800f69e:	f7ff ff33 	bl	800f508 <_Link>
 800f6a2:	4b10      	ldr	r3, [pc, #64]	; (800f6e4 <GUI_TIMER_Create+0x8c>)
 800f6a4:	681a      	ldr	r2, [r3, #0]
 800f6a6:	b932      	cbnz	r2, 800f6b6 <GUI_TIMER_Create+0x5e>
 800f6a8:	2201      	movs	r2, #1
 800f6aa:	480f      	ldr	r0, [pc, #60]	; (800f6e8 <GUI_TIMER_Create+0x90>)
 800f6ac:	601a      	str	r2, [r3, #0]
 800f6ae:	4b0f      	ldr	r3, [pc, #60]	; (800f6ec <GUI_TIMER_Create+0x94>)
 800f6b0:	6003      	str	r3, [r0, #0]
 800f6b2:	f001 fa65 	bl	8010b80 <GUI__RegisterExit>
 800f6b6:	4620      	mov	r0, r4
 800f6b8:	f001 fe82 	bl	80113c0 <GUI_ALLOC_LockH>
 800f6bc:	4a0c      	ldr	r2, [pc, #48]	; (800f6f0 <GUI_TIMER_Create+0x98>)
 800f6be:	9001      	str	r0, [sp, #4]
 800f6c0:	6813      	ldr	r3, [r2, #0]
 800f6c2:	b913      	cbnz	r3, 800f6ca <GUI_TIMER_Create+0x72>
 800f6c4:	6014      	str	r4, [r2, #0]
 800f6c6:	6083      	str	r3, [r0, #8]
 800f6c8:	e001      	b.n	800f6ce <GUI_TIMER_Create+0x76>
 800f6ca:	6083      	str	r3, [r0, #8]
 800f6cc:	6014      	str	r4, [r2, #0]
 800f6ce:	a801      	add	r0, sp, #4
 800f6d0:	f001 fe84 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f6d4:	4620      	mov	r0, r4
 800f6d6:	b003      	add	sp, #12
 800f6d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f6dc:	200199d0 	.word	0x200199d0
 800f6e0:	0800f499 	.word	0x0800f499
 800f6e4:	200194c0 	.word	0x200194c0
 800f6e8:	200194b8 	.word	0x200194b8
 800f6ec:	0800f47d 	.word	0x0800f47d
 800f6f0:	200194b0 	.word	0x200194b0

0800f6f4 <GUI_TIMER_Delete>:
 800f6f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f6f6:	4604      	mov	r4, r0
 800f6f8:	b358      	cbz	r0, 800f752 <GUI_TIMER_Delete+0x5e>
 800f6fa:	4d17      	ldr	r5, [pc, #92]	; (800f758 <GUI_TIMER_Delete+0x64>)
 800f6fc:	682e      	ldr	r6, [r5, #0]
 800f6fe:	4286      	cmp	r6, r0
 800f700:	d10b      	bne.n	800f71a <GUI_TIMER_Delete+0x26>
 800f702:	f001 fe5d 	bl	80113c0 <GUI_ALLOC_LockH>
 800f706:	ab02      	add	r3, sp, #8
 800f708:	6882      	ldr	r2, [r0, #8]
 800f70a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800f70e:	602a      	str	r2, [r5, #0]
 800f710:	4618      	mov	r0, r3
 800f712:	e016      	b.n	800f742 <GUI_TIMER_Delete+0x4e>
 800f714:	4668      	mov	r0, sp
 800f716:	f001 fe61 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f71a:	4630      	mov	r0, r6
 800f71c:	f001 fe50 	bl	80113c0 <GUI_ALLOC_LockH>
 800f720:	6886      	ldr	r6, [r0, #8]
 800f722:	ad02      	add	r5, sp, #8
 800f724:	42a6      	cmp	r6, r4
 800f726:	f845 0d08 	str.w	r0, [r5, #-8]!
 800f72a:	d1f3      	bne.n	800f714 <GUI_TIMER_Delete+0x20>
 800f72c:	4620      	mov	r0, r4
 800f72e:	f001 fe47 	bl	80113c0 <GUI_ALLOC_LockH>
 800f732:	9b00      	ldr	r3, [sp, #0]
 800f734:	6882      	ldr	r2, [r0, #8]
 800f736:	9001      	str	r0, [sp, #4]
 800f738:	609a      	str	r2, [r3, #8]
 800f73a:	a801      	add	r0, sp, #4
 800f73c:	f001 fe4e 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f740:	4668      	mov	r0, sp
 800f742:	f001 fe4b 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f746:	4620      	mov	r0, r4
 800f748:	f7ff ff2c 	bl	800f5a4 <_Unlink>
 800f74c:	4620      	mov	r0, r4
 800f74e:	f001 fe71 	bl	8011434 <GUI_ALLOC_Free>
 800f752:	b002      	add	sp, #8
 800f754:	bd70      	pop	{r4, r5, r6, pc}
 800f756:	bf00      	nop
 800f758:	200194b0 	.word	0x200194b0

0800f75c <GUI_TIMER_SetPeriod>:
 800f75c:	b513      	push	{r0, r1, r4, lr}
 800f75e:	460c      	mov	r4, r1
 800f760:	b140      	cbz	r0, 800f774 <GUI_TIMER_SetPeriod+0x18>
 800f762:	f001 fe2d 	bl	80113c0 <GUI_ALLOC_LockH>
 800f766:	ab02      	add	r3, sp, #8
 800f768:	6184      	str	r4, [r0, #24]
 800f76a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800f76e:	4618      	mov	r0, r3
 800f770:	f001 fe34 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f774:	b002      	add	sp, #8
 800f776:	bd10      	pop	{r4, pc}

0800f778 <GUI_TIMER_Restart>:
 800f778:	b513      	push	{r0, r1, r4, lr}
 800f77a:	4604      	mov	r4, r0
 800f77c:	b198      	cbz	r0, 800f7a6 <GUI_TIMER_Restart+0x2e>
 800f77e:	f001 fe1f 	bl	80113c0 <GUI_ALLOC_LockH>
 800f782:	9001      	str	r0, [sp, #4]
 800f784:	f000 f826 	bl	800f7d4 <GUI_GetTime>
 800f788:	ab02      	add	r3, sp, #8
 800f78a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800f78e:	6991      	ldr	r1, [r2, #24]
 800f790:	4408      	add	r0, r1
 800f792:	6150      	str	r0, [r2, #20]
 800f794:	4618      	mov	r0, r3
 800f796:	f001 fe21 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f79a:	4620      	mov	r0, r4
 800f79c:	f7ff ff02 	bl	800f5a4 <_Unlink>
 800f7a0:	4620      	mov	r0, r4
 800f7a2:	f7ff feb1 	bl	800f508 <_Link>
 800f7a6:	b002      	add	sp, #8
 800f7a8:	bd10      	pop	{r4, pc}

0800f7aa <GUI_TIMER_GetFlag>:
 800f7aa:	b513      	push	{r0, r1, r4, lr}
 800f7ac:	460c      	mov	r4, r1
 800f7ae:	b168      	cbz	r0, 800f7cc <GUI_TIMER_GetFlag+0x22>
 800f7b0:	f001 fe06 	bl	80113c0 <GUI_ALLOC_LockH>
 800f7b4:	ab02      	add	r3, sp, #8
 800f7b6:	8982      	ldrh	r2, [r0, #12]
 800f7b8:	f843 0d04 	str.w	r0, [r3, #-4]!
 800f7bc:	4214      	tst	r4, r2
 800f7be:	4618      	mov	r0, r3
 800f7c0:	bf0c      	ite	eq
 800f7c2:	2400      	moveq	r4, #0
 800f7c4:	2401      	movne	r4, #1
 800f7c6:	f001 fe09 	bl	80113dc <GUI_ALLOC_UnlockH>
 800f7ca:	e000      	b.n	800f7ce <GUI_TIMER_GetFlag+0x24>
 800f7cc:	2401      	movs	r4, #1
 800f7ce:	4620      	mov	r0, r4
 800f7d0:	b002      	add	sp, #8
 800f7d2:	bd10      	pop	{r4, pc}

0800f7d4 <GUI_GetTime>:
 800f7d4:	f7f7 bade 	b.w	8006d94 <GUI_X_GetTime>

0800f7d8 <GUI_Delay>:
 800f7d8:	b538      	push	{r3, r4, r5, lr}
 800f7da:	4605      	mov	r5, r0
 800f7dc:	f7f7 fada 	bl	8006d94 <GUI_X_GetTime>
 800f7e0:	4405      	add	r5, r0
 800f7e2:	f7f7 fad7 	bl	8006d94 <GUI_X_GetTime>
 800f7e6:	1a2c      	subs	r4, r5, r0
 800f7e8:	2c00      	cmp	r4, #0
 800f7ea:	dd08      	ble.n	800f7fe <GUI_Delay+0x26>
 800f7ec:	f000 feb4 	bl	8010558 <GUI_Exec>
 800f7f0:	2c05      	cmp	r4, #5
 800f7f2:	bfb4      	ite	lt
 800f7f4:	4620      	movlt	r0, r4
 800f7f6:	2005      	movge	r0, #5
 800f7f8:	f7f7 fad2 	bl	8006da0 <GUI_X_Delay>
 800f7fc:	e7f1      	b.n	800f7e2 <GUI_Delay+0xa>
 800f7fe:	bd38      	pop	{r3, r4, r5, pc}

0800f800 <GUI_TOUCH_Calibrate>:
 800f800:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f802:	2801      	cmp	r0, #1
 800f804:	9c08      	ldr	r4, [sp, #32]
 800f806:	d845      	bhi.n	800f894 <GUI_TOUCH_Calibrate+0x94>
 800f808:	4d25      	ldr	r5, [pc, #148]	; (800f8a0 <GUI_TOUCH_Calibrate+0xa0>)
 800f80a:	d00c      	beq.n	800f826 <GUI_TOUCH_Calibrate+0x26>
 800f80c:	4e25      	ldr	r6, [pc, #148]	; (800f8a4 <GUI_TOUCH_Calibrate+0xa4>)
 800f80e:	e886 0006 	stmia.w	r6, {r1, r2}
 800f812:	6829      	ldr	r1, [r5, #0]
 800f814:	f001 0206 	and.w	r2, r1, #6
 800f818:	2a06      	cmp	r2, #6
 800f81a:	4a23      	ldr	r2, [pc, #140]	; (800f8a8 <GUI_TOUCH_Calibrate+0xa8>)
 800f81c:	d010      	beq.n	800f840 <GUI_TOUCH_Calibrate+0x40>
 800f81e:	f001 0105 	and.w	r1, r1, #5
 800f822:	2901      	cmp	r1, #1
 800f824:	e00b      	b.n	800f83e <GUI_TOUCH_Calibrate+0x3e>
 800f826:	4e21      	ldr	r6, [pc, #132]	; (800f8ac <GUI_TOUCH_Calibrate+0xac>)
 800f828:	e886 0006 	stmia.w	r6, {r1, r2}
 800f82c:	6829      	ldr	r1, [r5, #0]
 800f82e:	f001 0205 	and.w	r2, r1, #5
 800f832:	2a05      	cmp	r2, #5
 800f834:	4a1e      	ldr	r2, [pc, #120]	; (800f8b0 <GUI_TOUCH_Calibrate+0xb0>)
 800f836:	d003      	beq.n	800f840 <GUI_TOUCH_Calibrate+0x40>
 800f838:	f001 0106 	and.w	r1, r1, #6
 800f83c:	2902      	cmp	r1, #2
 800f83e:	d102      	bne.n	800f846 <GUI_TOUCH_Calibrate+0x46>
 800f840:	6014      	str	r4, [r2, #0]
 800f842:	6053      	str	r3, [r2, #4]
 800f844:	e001      	b.n	800f84a <GUI_TOUCH_Calibrate+0x4a>
 800f846:	e882 0018 	stmia.w	r2, {r3, r4}
 800f84a:	4b1a      	ldr	r3, [pc, #104]	; (800f8b4 <GUI_TOUCH_Calibrate+0xb4>)
 800f84c:	781a      	ldrb	r2, [r3, #0]
 800f84e:	4102      	asrs	r2, r0
 800f850:	07d2      	lsls	r2, r2, #31
 800f852:	bf44      	itt	mi
 800f854:	2200      	movmi	r2, #0
 800f856:	701a      	strbmi	r2, [r3, #0]
 800f858:	2201      	movs	r2, #1
 800f85a:	fa02 f000 	lsl.w	r0, r2, r0
 800f85e:	781a      	ldrb	r2, [r3, #0]
 800f860:	4310      	orrs	r0, r2
 800f862:	b2c0      	uxtb	r0, r0
 800f864:	2803      	cmp	r0, #3
 800f866:	7018      	strb	r0, [r3, #0]
 800f868:	d116      	bne.n	800f898 <GUI_TOUCH_Calibrate+0x98>
 800f86a:	4c13      	ldr	r4, [pc, #76]	; (800f8b8 <GUI_TOUCH_Calibrate+0xb8>)
 800f86c:	6823      	ldr	r3, [r4, #0]
 800f86e:	7c58      	ldrb	r0, [r3, #17]
 800f870:	f7fe fd98 	bl	800e3a4 <LCD_GetXSizeEx>
 800f874:	6823      	ldr	r3, [r4, #0]
 800f876:	4605      	mov	r5, r0
 800f878:	7c58      	ldrb	r0, [r3, #17]
 800f87a:	f7fe fd96 	bl	800e3aa <LCD_GetYSizeEx>
 800f87e:	4b0c      	ldr	r3, [pc, #48]	; (800f8b0 <GUI_TOUCH_Calibrate+0xb0>)
 800f880:	9002      	str	r0, [sp, #8]
 800f882:	e88d 0028 	stmia.w	sp, {r3, r5}
 800f886:	4907      	ldr	r1, [pc, #28]	; (800f8a4 <GUI_TOUCH_Calibrate+0xa4>)
 800f888:	4a08      	ldr	r2, [pc, #32]	; (800f8ac <GUI_TOUCH_Calibrate+0xac>)
 800f88a:	4b07      	ldr	r3, [pc, #28]	; (800f8a8 <GUI_TOUCH_Calibrate+0xa8>)
 800f88c:	2002      	movs	r0, #2
 800f88e:	f000 f8ff 	bl	800fa90 <GUI_TOUCH_CalcCoefficients>
 800f892:	e002      	b.n	800f89a <GUI_TOUCH_Calibrate+0x9a>
 800f894:	2001      	movs	r0, #1
 800f896:	e000      	b.n	800f89a <GUI_TOUCH_Calibrate+0x9a>
 800f898:	2000      	movs	r0, #0
 800f89a:	b004      	add	sp, #16
 800f89c:	bd70      	pop	{r4, r5, r6, pc}
 800f89e:	bf00      	nop
 800f8a0:	200194d8 	.word	0x200194d8
 800f8a4:	200194c4 	.word	0x200194c4
 800f8a8:	200194e0 	.word	0x200194e0
 800f8ac:	200194ec 	.word	0x200194ec
 800f8b0:	200194cc 	.word	0x200194cc
 800f8b4:	200194d4 	.word	0x200194d4
 800f8b8:	2000016c 	.word	0x2000016c

0800f8bc <GUI_TOUCH_Exec>:
 800f8bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8be:	4c29      	ldr	r4, [pc, #164]	; (800f964 <GUI_TOUCH_Exec+0xa8>)
 800f8c0:	4d29      	ldr	r5, [pc, #164]	; (800f968 <GUI_TOUCH_Exec+0xac>)
 800f8c2:	7823      	ldrb	r3, [r4, #0]
 800f8c4:	b087      	sub	sp, #28
 800f8c6:	4626      	mov	r6, r4
 800f8c8:	b943      	cbnz	r3, 800f8dc <GUI_TOUCH_Exec+0x20>
 800f8ca:	f7f7 fa7d 	bl	8006dc8 <GUI_TOUCH_X_MeasureY>
 800f8ce:	6028      	str	r0, [r5, #0]
 800f8d0:	f7f7 fa74 	bl	8006dbc <GUI_TOUCH_X_ActivateY>
 800f8d4:	7823      	ldrb	r3, [r4, #0]
 800f8d6:	3301      	adds	r3, #1
 800f8d8:	7023      	strb	r3, [r4, #0]
 800f8da:	e040      	b.n	800f95e <GUI_TOUCH_Exec+0xa2>
 800f8dc:	f7f7 fa70 	bl	8006dc0 <GUI_TOUCH_X_MeasureX>
 800f8e0:	4c22      	ldr	r4, [pc, #136]	; (800f96c <GUI_TOUCH_Exec+0xb0>)
 800f8e2:	6020      	str	r0, [r4, #0]
 800f8e4:	f7f7 fa68 	bl	8006db8 <GUI_TOUCH_X_ActivateX>
 800f8e8:	6823      	ldr	r3, [r4, #0]
 800f8ea:	9301      	str	r3, [sp, #4]
 800f8ec:	682b      	ldr	r3, [r5, #0]
 800f8ee:	9302      	str	r3, [sp, #8]
 800f8f0:	f007 f9f4 	bl	8016cdc <GUI_TOUCH_GetLayer>
 800f8f4:	a902      	add	r1, sp, #8
 800f8f6:	f88d 0015 	strb.w	r0, [sp, #21]
 800f8fa:	a801      	add	r0, sp, #4
 800f8fc:	f000 f88a 	bl	800fa14 <GUI_TOUCH_CalibratePoint>
 800f900:	4c1b      	ldr	r4, [pc, #108]	; (800f970 <GUI_TOUCH_Exec+0xb4>)
 800f902:	b148      	cbz	r0, 800f918 <GUI_TOUCH_Exec+0x5c>
 800f904:	7823      	ldrb	r3, [r4, #0]
 800f906:	b343      	cbz	r3, 800f95a <GUI_TOUCH_Exec+0x9e>
 800f908:	4b1a      	ldr	r3, [pc, #104]	; (800f974 <GUI_TOUCH_Exec+0xb8>)
 800f90a:	681b      	ldr	r3, [r3, #0]
 800f90c:	9303      	str	r3, [sp, #12]
 800f90e:	4b1a      	ldr	r3, [pc, #104]	; (800f978 <GUI_TOUCH_Exec+0xbc>)
 800f910:	681b      	ldr	r3, [r3, #0]
 800f912:	9304      	str	r3, [sp, #16]
 800f914:	2500      	movs	r5, #0
 800f916:	e01a      	b.n	800f94e <GUI_TOUCH_Exec+0x92>
 800f918:	4816      	ldr	r0, [pc, #88]	; (800f974 <GUI_TOUCH_Exec+0xb8>)
 800f91a:	4917      	ldr	r1, [pc, #92]	; (800f978 <GUI_TOUCH_Exec+0xbc>)
 800f91c:	f894 c000 	ldrb.w	ip, [r4]
 800f920:	9a01      	ldr	r2, [sp, #4]
 800f922:	6807      	ldr	r7, [r0, #0]
 800f924:	9b02      	ldr	r3, [sp, #8]
 800f926:	680d      	ldr	r5, [r1, #0]
 800f928:	f1bc 0f00 	cmp.w	ip, #0
 800f92c:	d00a      	beq.n	800f944 <GUI_TOUCH_Exec+0x88>
 800f92e:	1bd7      	subs	r7, r2, r7
 800f930:	1b5d      	subs	r5, r3, r5
 800f932:	2f00      	cmp	r7, #0
 800f934:	bfb8      	it	lt
 800f936:	427f      	neglt	r7, r7
 800f938:	2d00      	cmp	r5, #0
 800f93a:	bfb8      	it	lt
 800f93c:	426d      	neglt	r5, r5
 800f93e:	443d      	add	r5, r7
 800f940:	2d02      	cmp	r5, #2
 800f942:	dd0a      	ble.n	800f95a <GUI_TOUCH_Exec+0x9e>
 800f944:	6002      	str	r2, [r0, #0]
 800f946:	9203      	str	r2, [sp, #12]
 800f948:	600b      	str	r3, [r1, #0]
 800f94a:	9304      	str	r3, [sp, #16]
 800f94c:	2501      	movs	r5, #1
 800f94e:	a803      	add	r0, sp, #12
 800f950:	f88d 5014 	strb.w	r5, [sp, #20]
 800f954:	f000 fae8 	bl	800ff28 <GUI_TOUCH_StoreStateEx>
 800f958:	7025      	strb	r5, [r4, #0]
 800f95a:	2300      	movs	r3, #0
 800f95c:	7033      	strb	r3, [r6, #0]
 800f95e:	b007      	add	sp, #28
 800f960:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f962:	bf00      	nop
 800f964:	200194dd 	.word	0x200194dd
 800f968:	200194f4 	.word	0x200194f4
 800f96c:	200194e8 	.word	0x200194e8
 800f970:	200194dc 	.word	0x200194dc
 800f974:	20000158 	.word	0x20000158
 800f978:	20000154 	.word	0x20000154

0800f97c <GUI_TOUCH_TransformPoint>:
 800f97c:	b570      	push	{r4, r5, r6, lr}
 800f97e:	4b22      	ldr	r3, [pc, #136]	; (800fa08 <GUI_TOUCH_TransformPoint+0x8c>)
 800f980:	681b      	ldr	r3, [r3, #0]
 800f982:	ed2d 8b02 	vpush	{d8}
 800f986:	4606      	mov	r6, r0
 800f988:	460d      	mov	r5, r1
 800f98a:	b3c3      	cbz	r3, 800f9fe <GUI_TOUCH_TransformPoint+0x82>
 800f98c:	edd0 7a00 	vldr	s15, [r0]
 800f990:	4c1e      	ldr	r4, [pc, #120]	; (800fa0c <GUI_TOUCH_TransformPoint+0x90>)
 800f992:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 800f996:	edd1 7a00 	vldr	s15, [r1]
 800f99a:	ed94 7a01 	vldr	s14, [r4, #4]
 800f99e:	eef8 8ae7 	vcvt.f32.s32	s17, s15
 800f9a2:	edd4 7a00 	vldr	s15, [r4]
 800f9a6:	ee28 7a87 	vmul.f32	s14, s17, s14
 800f9aa:	eea7 7a88 	vfma.f32	s14, s15, s16
 800f9ae:	edd4 7a02 	vldr	s15, [r4, #8]
 800f9b2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f9b6:	ee17 0a90 	vmov	r0, s15
 800f9ba:	f7f0 fde5 	bl	8000588 <__aeabi_f2d>
 800f9be:	2200      	movs	r2, #0
 800f9c0:	4b13      	ldr	r3, [pc, #76]	; (800fa10 <GUI_TOUCH_TransformPoint+0x94>)
 800f9c2:	f7f0 fc83 	bl	80002cc <__adddf3>
 800f9c6:	f7f1 f849 	bl	8000a5c <__aeabi_d2iz>
 800f9ca:	edd4 7a04 	vldr	s15, [r4, #16]
 800f9ce:	ed94 7a03 	vldr	s14, [r4, #12]
 800f9d2:	6030      	str	r0, [r6, #0]
 800f9d4:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800f9d8:	eee7 7a08 	vfma.f32	s15, s14, s16
 800f9dc:	ed94 7a05 	vldr	s14, [r4, #20]
 800f9e0:	ee37 7a87 	vadd.f32	s14, s15, s14
 800f9e4:	ee17 0a10 	vmov	r0, s14
 800f9e8:	f7f0 fdce 	bl	8000588 <__aeabi_f2d>
 800f9ec:	2200      	movs	r2, #0
 800f9ee:	4b08      	ldr	r3, [pc, #32]	; (800fa10 <GUI_TOUCH_TransformPoint+0x94>)
 800f9f0:	f7f0 fc6c 	bl	80002cc <__adddf3>
 800f9f4:	f7f1 f832 	bl	8000a5c <__aeabi_d2iz>
 800f9f8:	6028      	str	r0, [r5, #0]
 800f9fa:	2000      	movs	r0, #0
 800f9fc:	e000      	b.n	800fa00 <GUI_TOUCH_TransformPoint+0x84>
 800f9fe:	2001      	movs	r0, #1
 800fa00:	ecbd 8b02 	vpop	{d8}
 800fa04:	bd70      	pop	{r4, r5, r6, pc}
 800fa06:	bf00      	nop
 800fa08:	20019508 	.word	0x20019508
 800fa0c:	2001950c 	.word	0x2001950c
 800fa10:	3fe00000 	.word	0x3fe00000

0800fa14 <GUI_TOUCH_CalibratePoint>:
 800fa14:	4b18      	ldr	r3, [pc, #96]	; (800fa78 <GUI_TOUCH_CalibratePoint+0x64>)
 800fa16:	6802      	ldr	r2, [r0, #0]
 800fa18:	681b      	ldr	r3, [r3, #0]
 800fa1a:	429a      	cmp	r2, r3
 800fa1c:	b570      	push	{r4, r5, r6, lr}
 800fa1e:	4605      	mov	r5, r0
 800fa20:	460c      	mov	r4, r1
 800fa22:	db27      	blt.n	800fa74 <GUI_TOUCH_CalibratePoint+0x60>
 800fa24:	4e15      	ldr	r6, [pc, #84]	; (800fa7c <GUI_TOUCH_CalibratePoint+0x68>)
 800fa26:	680b      	ldr	r3, [r1, #0]
 800fa28:	6836      	ldr	r6, [r6, #0]
 800fa2a:	42b3      	cmp	r3, r6
 800fa2c:	db22      	blt.n	800fa74 <GUI_TOUCH_CalibratePoint+0x60>
 800fa2e:	4e14      	ldr	r6, [pc, #80]	; (800fa80 <GUI_TOUCH_CalibratePoint+0x6c>)
 800fa30:	6836      	ldr	r6, [r6, #0]
 800fa32:	42b2      	cmp	r2, r6
 800fa34:	dc1e      	bgt.n	800fa74 <GUI_TOUCH_CalibratePoint+0x60>
 800fa36:	4a13      	ldr	r2, [pc, #76]	; (800fa84 <GUI_TOUCH_CalibratePoint+0x70>)
 800fa38:	6812      	ldr	r2, [r2, #0]
 800fa3a:	4293      	cmp	r3, r2
 800fa3c:	dc1a      	bgt.n	800fa74 <GUI_TOUCH_CalibratePoint+0x60>
 800fa3e:	f7ff ff9d 	bl	800f97c <GUI_TOUCH_TransformPoint>
 800fa42:	b9c0      	cbnz	r0, 800fa76 <GUI_TOUCH_CalibratePoint+0x62>
 800fa44:	682a      	ldr	r2, [r5, #0]
 800fa46:	2a00      	cmp	r2, #0
 800fa48:	da01      	bge.n	800fa4e <GUI_TOUCH_CalibratePoint+0x3a>
 800fa4a:	6028      	str	r0, [r5, #0]
 800fa4c:	e006      	b.n	800fa5c <GUI_TOUCH_CalibratePoint+0x48>
 800fa4e:	4b0e      	ldr	r3, [pc, #56]	; (800fa88 <GUI_TOUCH_CalibratePoint+0x74>)
 800fa50:	681b      	ldr	r3, [r3, #0]
 800fa52:	429a      	cmp	r2, r3
 800fa54:	bfa4      	itt	ge
 800fa56:	f103 33ff 	addge.w	r3, r3, #4294967295
 800fa5a:	602b      	strge	r3, [r5, #0]
 800fa5c:	6822      	ldr	r2, [r4, #0]
 800fa5e:	2a00      	cmp	r2, #0
 800fa60:	da01      	bge.n	800fa66 <GUI_TOUCH_CalibratePoint+0x52>
 800fa62:	2300      	movs	r3, #0
 800fa64:	e004      	b.n	800fa70 <GUI_TOUCH_CalibratePoint+0x5c>
 800fa66:	4b09      	ldr	r3, [pc, #36]	; (800fa8c <GUI_TOUCH_CalibratePoint+0x78>)
 800fa68:	681b      	ldr	r3, [r3, #0]
 800fa6a:	429a      	cmp	r2, r3
 800fa6c:	db03      	blt.n	800fa76 <GUI_TOUCH_CalibratePoint+0x62>
 800fa6e:	3b01      	subs	r3, #1
 800fa70:	6023      	str	r3, [r4, #0]
 800fa72:	bd70      	pop	{r4, r5, r6, pc}
 800fa74:	2001      	movs	r0, #1
 800fa76:	bd70      	pop	{r4, r5, r6, pc}
 800fa78:	200194f8 	.word	0x200194f8
 800fa7c:	200194fc 	.word	0x200194fc
 800fa80:	20019528 	.word	0x20019528
 800fa84:	20019524 	.word	0x20019524
 800fa88:	20019500 	.word	0x20019500
 800fa8c:	20019504 	.word	0x20019504

0800fa90 <GUI_TOUCH_CalcCoefficients>:
 800fa90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fa94:	ed2d 8b02 	vpush	{d8}
 800fa98:	f8df c3bc 	ldr.w	ip, [pc, #956]	; 800fe58 <GUI_TOUCH_CalcCoefficients+0x3c8>
 800fa9c:	b08c      	sub	sp, #48	; 0x30
 800fa9e:	2400      	movs	r4, #0
 800faa0:	2802      	cmp	r0, #2
 800faa2:	9f16      	ldr	r7, [sp, #88]	; 0x58
 800faa4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800faa6:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 800faaa:	f8cc 4000 	str.w	r4, [ip]
 800faae:	d135      	bne.n	800fb1c <GUI_TOUCH_CalcCoefficients+0x8c>
 800fab0:	c912      	ldmia	r1, {r1, r4}
 800fab2:	6818      	ldr	r0, [r3, #0]
 800fab4:	685b      	ldr	r3, [r3, #4]
 800fab6:	1a61      	subs	r1, r4, r1
 800fab8:	1a1b      	subs	r3, r3, r0
 800faba:	ee00 1a10 	vmov	s0, r1
 800fabe:	ee07 3a90 	vmov	s15, r3
 800fac2:	eeb8 7ac0 	vcvt.f32.s32	s14, s0
 800fac6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800faca:	ee05 0a10 	vmov	s10, r0
 800face:	eec7 7a27 	vdiv.f32	s15, s14, s15
 800fad2:	6850      	ldr	r0, [r2, #4]
 800fad4:	6812      	ldr	r2, [r2, #0]
 800fad6:	4bdb      	ldr	r3, [pc, #876]	; (800fe44 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800fad8:	2100      	movs	r1, #0
 800fada:	1a82      	subs	r2, r0, r2
 800fadc:	6059      	str	r1, [r3, #4]
 800fade:	60d9      	str	r1, [r3, #12]
 800fae0:	6839      	ldr	r1, [r7, #0]
 800fae2:	eeb8 7ac5 	vcvt.f32.s32	s14, s10
 800fae6:	ee06 2a10 	vmov	s12, r2
 800faea:	687a      	ldr	r2, [r7, #4]
 800faec:	edc3 7a00 	vstr	s15, [r3]
 800faf0:	ee67 7a67 	vnmul.f32	s15, s14, s15
 800faf4:	1a52      	subs	r2, r2, r1
 800faf6:	edc3 7a02 	vstr	s15, [r3, #8]
 800fafa:	ee07 2a90 	vmov	s15, r2
 800fafe:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 800fb02:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fb06:	ee06 1a90 	vmov	s13, r1
 800fb0a:	eec7 7a27 	vdiv.f32	s15, s14, s15
 800fb0e:	eeb8 7ae6 	vcvt.f32.s32	s14, s13
 800fb12:	edc3 7a04 	vstr	s15, [r3, #16]
 800fb16:	ee67 7a67 	vnmul.f32	s15, s14, s15
 800fb1a:	e144      	b.n	800fda6 <GUI_TOUCH_CalcCoefficients+0x316>
 800fb1c:	f340 8148 	ble.w	800fdb0 <GUI_TOUCH_CalcCoefficients+0x320>
 800fb20:	2803      	cmp	r0, #3
 800fb22:	d128      	bne.n	800fb76 <GUI_TOUCH_CalcCoefficients+0xe6>
 800fb24:	4620      	mov	r0, r4
 800fb26:	581d      	ldr	r5, [r3, r0]
 800fb28:	ee00 5a10 	vmov	s0, r5
 800fb2c:	583d      	ldr	r5, [r7, r0]
 800fb2e:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800fb32:	ac00      	add	r4, sp, #0
 800fb34:	ee00 5a10 	vmov	s0, r5
 800fb38:	580d      	ldr	r5, [r1, r0]
 800fb3a:	4404      	add	r4, r0
 800fb3c:	edc4 7a00 	vstr	s15, [r4]
 800fb40:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800fb44:	ac03      	add	r4, sp, #12
 800fb46:	ee00 5a10 	vmov	s0, r5
 800fb4a:	4404      	add	r4, r0
 800fb4c:	5815      	ldr	r5, [r2, r0]
 800fb4e:	edc4 7a00 	vstr	s15, [r4]
 800fb52:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800fb56:	ac0c      	add	r4, sp, #48	; 0x30
 800fb58:	4404      	add	r4, r0
 800fb5a:	ee00 5a10 	vmov	s0, r5
 800fb5e:	ed44 7a06 	vstr	s15, [r4, #-24]	; 0xffffffe8
 800fb62:	ac0c      	add	r4, sp, #48	; 0x30
 800fb64:	4404      	add	r4, r0
 800fb66:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800fb6a:	3004      	adds	r0, #4
 800fb6c:	280c      	cmp	r0, #12
 800fb6e:	ed44 7a03 	vstr	s15, [r4, #-12]
 800fb72:	d1d8      	bne.n	800fb26 <GUI_TOUCH_CalcCoefficients+0x96>
 800fb74:	e09b      	b.n	800fcae <GUI_TOUCH_CalcCoefficients+0x21e>
 800fb76:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800fb7a:	44a1      	add	r9, r4
 800fb7c:	f04f 0800 	mov.w	r8, #0
 800fb80:	f849 8c0c 	str.w	r8, [r9, #-12]
 800fb84:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800fb88:	44a1      	add	r9, r4
 800fb8a:	f849 8c18 	str.w	r8, [r9, #-24]
 800fb8e:	f10d 090c 	add.w	r9, sp, #12
 800fb92:	44a1      	add	r9, r4
 800fb94:	f8c9 8000 	str.w	r8, [r9]
 800fb98:	f10d 0900 	add.w	r9, sp, #0
 800fb9c:	44a1      	add	r9, r4
 800fb9e:	3404      	adds	r4, #4
 800fba0:	2c0c      	cmp	r4, #12
 800fba2:	f8c9 8000 	str.w	r8, [r9]
 800fba6:	d1e6      	bne.n	800fb76 <GUI_TOUCH_CalcCoefficients+0xe6>
 800fba8:	ed9d 7a02 	vldr	s14, [sp, #8]
 800fbac:	eddd 7a05 	vldr	s15, [sp, #20]
 800fbb0:	eddd 3a08 	vldr	s7, [sp, #32]
 800fbb4:	ed9d 4a0b 	vldr	s8, [sp, #44]	; 0x2c
 800fbb8:	eddd 1a00 	vldr	s3, [sp]
 800fbbc:	eddd 5a01 	vldr	s11, [sp, #4]
 800fbc0:	ed9d 2a04 	vldr	s4, [sp, #16]
 800fbc4:	eddd 2a06 	vldr	s5, [sp, #24]
 800fbc8:	ed9d 3a07 	vldr	s6, [sp, #28]
 800fbcc:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 800fbd0:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 800fbd4:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800fbd8:	2400      	movs	r4, #0
 800fbda:	591d      	ldr	r5, [r3, r4]
 800fbdc:	ee00 5a10 	vmov	s0, r5
 800fbe0:	593d      	ldr	r5, [r7, r4]
 800fbe2:	eeb8 6ac0 	vcvt.f32.s32	s12, s0
 800fbe6:	ee00 5a10 	vmov	s0, r5
 800fbea:	590d      	ldr	r5, [r1, r4]
 800fbec:	eef8 6ac0 	vcvt.f32.s32	s13, s0
 800fbf0:	ee00 5a10 	vmov	s0, r5
 800fbf4:	5915      	ldr	r5, [r2, r4]
 800fbf6:	eef8 4ac0 	vcvt.f32.s32	s9, s0
 800fbfa:	ee00 5a10 	vmov	s0, r5
 800fbfe:	eeb8 5ac0 	vcvt.f32.s32	s10, s0
 800fc02:	eee6 2a24 	vfma.f32	s5, s12, s9
 800fc06:	3404      	adds	r4, #4
 800fc08:	4544      	cmp	r4, r8
 800fc0a:	ee73 3aa4 	vadd.f32	s7, s7, s9
 800fc0e:	eea6 3aa4 	vfma.f32	s6, s13, s9
 800fc12:	eef0 4a60 	vmov.f32	s9, s1
 800fc16:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fc1a:	eee6 1a06 	vfma.f32	s3, s12, s12
 800fc1e:	eee6 5a26 	vfma.f32	s11, s12, s13
 800fc22:	eee6 4a05 	vfma.f32	s9, s12, s10
 800fc26:	eeb0 6a41 	vmov.f32	s12, s2
 800fc2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc2e:	ee34 4a05 	vadd.f32	s8, s8, s10
 800fc32:	eea6 2aa6 	vfma.f32	s4, s13, s13
 800fc36:	eea6 6a85 	vfma.f32	s12, s13, s10
 800fc3a:	d004      	beq.n	800fc46 <GUI_TOUCH_CalcCoefficients+0x1b6>
 800fc3c:	eef0 0a64 	vmov.f32	s1, s9
 800fc40:	eeb0 1a46 	vmov.f32	s2, s12
 800fc44:	e7c9      	b.n	800fbda <GUI_TOUCH_CalcCoefficients+0x14a>
 800fc46:	eec5 6aa7 	vdiv.f32	s13, s11, s15
 800fc4a:	ee05 0a10 	vmov	s10, r0
 800fc4e:	edcd 6a01 	vstr	s13, [sp, #4]
 800fc52:	eef8 6ac5 	vcvt.f32.s32	s13, s10
 800fc56:	eec1 1a87 	vdiv.f32	s3, s3, s14
 800fc5a:	eec5 5a87 	vdiv.f32	s11, s11, s14
 800fc5e:	ee82 2a27 	vdiv.f32	s4, s4, s15
 800fc62:	eec2 2a87 	vdiv.f32	s5, s5, s14
 800fc66:	ee83 3a27 	vdiv.f32	s6, s6, s15
 800fc6a:	eec4 4a87 	vdiv.f32	s9, s9, s14
 800fc6e:	ee86 6a27 	vdiv.f32	s12, s12, s15
 800fc72:	ee87 7a26 	vdiv.f32	s14, s14, s13
 800fc76:	eec7 7aa6 	vdiv.f32	s15, s15, s13
 800fc7a:	eec3 3aa6 	vdiv.f32	s7, s7, s13
 800fc7e:	eec4 6a26 	vdiv.f32	s13, s8, s13
 800fc82:	edcd 1a00 	vstr	s3, [sp]
 800fc86:	edcd 5a03 	vstr	s11, [sp, #12]
 800fc8a:	ed8d 2a04 	vstr	s4, [sp, #16]
 800fc8e:	edcd 2a06 	vstr	s5, [sp, #24]
 800fc92:	ed8d 3a07 	vstr	s6, [sp, #28]
 800fc96:	edcd 4a09 	vstr	s9, [sp, #36]	; 0x24
 800fc9a:	ed8d 6a0a 	vstr	s12, [sp, #40]	; 0x28
 800fc9e:	ed8d 7a02 	vstr	s14, [sp, #8]
 800fca2:	edcd 7a05 	vstr	s15, [sp, #20]
 800fca6:	edcd 3a08 	vstr	s7, [sp, #32]
 800fcaa:	edcd 6a0b 	vstr	s13, [sp, #44]	; 0x2c
 800fcae:	ed9d 7a02 	vldr	s14, [sp, #8]
 800fcb2:	eddd 4a05 	vldr	s9, [sp, #20]
 800fcb6:	ed9d 6a01 	vldr	s12, [sp, #4]
 800fcba:	ed9d 3a03 	vldr	s6, [sp, #12]
 800fcbe:	eddd 5a00 	vldr	s11, [sp]
 800fcc2:	eddd 2a04 	vldr	s5, [sp, #16]
 800fcc6:	ee76 6a47 	vsub.f32	s13, s12, s14
 800fcca:	ee73 1a64 	vsub.f32	s3, s6, s9
 800fcce:	ee35 2ac7 	vsub.f32	s4, s11, s14
 800fcd2:	ee32 1ae4 	vsub.f32	s2, s5, s9
 800fcd6:	ee61 7ae6 	vnmul.f32	s15, s3, s13
 800fcda:	eee2 7a01 	vfma.f32	s15, s4, s2
 800fcde:	eef5 7a40 	vcmp.f32	s15, #0.0
 800fce2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fce6:	d063      	beq.n	800fdb0 <GUI_TOUCH_CalcCoefficients+0x320>
 800fce8:	ed9d 4a08 	vldr	s8, [sp, #32]
 800fcec:	eddd 0a07 	vldr	s1, [sp, #28]
 800fcf0:	eddd 3a06 	vldr	s7, [sp, #24]
 800fcf4:	4b53      	ldr	r3, [pc, #332]	; (800fe44 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800fcf6:	ee30 8ac4 	vsub.f32	s16, s1, s8
 800fcfa:	ee33 5ac4 	vsub.f32	s10, s7, s8
 800fcfe:	ee21 0ac8 	vnmul.f32	s0, s3, s16
 800fd02:	eea5 0a01 	vfma.f32	s0, s10, s2
 800fd06:	ee26 5ac5 	vnmul.f32	s10, s13, s10
 800fd0a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800fd0e:	eea8 5a02 	vfma.f32	s10, s16, s4
 800fd12:	ed83 0a00 	vstr	s0, [r3]
 800fd16:	ee85 5a27 	vdiv.f32	s10, s10, s15
 800fd1a:	ed83 5a01 	vstr	s10, [r3, #4]
 800fd1e:	ee23 5ac7 	vnmul.f32	s10, s7, s14
 800fd22:	eea5 5a84 	vfma.f32	s10, s11, s8
 800fd26:	ee24 4a46 	vnmul.f32	s8, s8, s12
 800fd2a:	ee22 5a85 	vmul.f32	s10, s5, s10
 800fd2e:	eea7 4a20 	vfma.f32	s8, s14, s1
 800fd32:	eea3 5a04 	vfma.f32	s10, s6, s8
 800fd36:	ee20 4ae5 	vnmul.f32	s8, s1, s11
 800fd3a:	eea6 4a23 	vfma.f32	s8, s12, s7
 800fd3e:	eddd 3a0a 	vldr	s7, [sp, #40]	; 0x28
 800fd42:	eea4 5a84 	vfma.f32	s10, s9, s8
 800fd46:	ed9d 4a09 	vldr	s8, [sp, #36]	; 0x24
 800fd4a:	ee85 5a27 	vdiv.f32	s10, s10, s15
 800fd4e:	ed83 5a02 	vstr	s10, [r3, #8]
 800fd52:	ed9d 5a0b 	vldr	s10, [sp, #44]	; 0x2c
 800fd56:	ee34 0a45 	vsub.f32	s0, s8, s10
 800fd5a:	ee73 0ac5 	vsub.f32	s1, s7, s10
 800fd5e:	ee66 6ac0 	vnmul.f32	s13, s13, s0
 800fd62:	ee61 1ae0 	vnmul.f32	s3, s3, s1
 800fd66:	eee0 6a82 	vfma.f32	s13, s1, s4
 800fd6a:	eee0 1a01 	vfma.f32	s3, s0, s2
 800fd6e:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 800fd72:	eec1 1aa7 	vdiv.f32	s3, s3, s15
 800fd76:	edc3 6a04 	vstr	s13, [r3, #16]
 800fd7a:	ee64 6a47 	vnmul.f32	s13, s8, s14
 800fd7e:	edc3 1a03 	vstr	s3, [r3, #12]
 800fd82:	eee5 6a85 	vfma.f32	s13, s11, s10
 800fd86:	ee25 5a46 	vnmul.f32	s10, s10, s12
 800fd8a:	ee62 6aa6 	vmul.f32	s13, s5, s13
 800fd8e:	eea7 5a23 	vfma.f32	s10, s14, s7
 800fd92:	ee63 5ae5 	vnmul.f32	s11, s7, s11
 800fd96:	eee3 6a05 	vfma.f32	s13, s6, s10
 800fd9a:	eee6 5a04 	vfma.f32	s11, s12, s8
 800fd9e:	eee4 6aa5 	vfma.f32	s13, s9, s11
 800fda2:	eec6 7aa7 	vdiv.f32	s15, s13, s15
 800fda6:	edc3 7a05 	vstr	s15, [r3, #20]
 800fdaa:	2301      	movs	r3, #1
 800fdac:	f8cc 3000 	str.w	r3, [ip]
 800fdb0:	f8dc 0000 	ldr.w	r0, [ip]
 800fdb4:	2800      	cmp	r0, #0
 800fdb6:	f000 80a7 	beq.w	800ff08 <GUI_TOUCH_CalcCoefficients+0x478>
 800fdba:	4b23      	ldr	r3, [pc, #140]	; (800fe48 <GUI_TOUCH_CalcCoefficients+0x3b8>)
 800fdbc:	eddf 7a23 	vldr	s15, [pc, #140]	; 800fe4c <GUI_TOUCH_CalcCoefficients+0x3bc>
 800fdc0:	601e      	str	r6, [r3, #0]
 800fdc2:	4b23      	ldr	r3, [pc, #140]	; (800fe50 <GUI_TOUCH_CalcCoefficients+0x3c0>)
 800fdc4:	f8c3 a000 	str.w	sl, [r3]
 800fdc8:	4b1e      	ldr	r3, [pc, #120]	; (800fe44 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800fdca:	ed93 7a00 	vldr	s14, [r3]
 800fdce:	eeb4 7a67 	vcmp.f32	s14, s15
 800fdd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fdd6:	d012      	beq.n	800fdfe <GUI_TOUCH_CalcCoefficients+0x36e>
 800fdd8:	edd3 6a01 	vldr	s13, [r3, #4]
 800fddc:	eee6 7ae7 	vfms.f32	s15, s13, s15
 800fde0:	edd3 6a02 	vldr	s13, [r3, #8]
 800fde4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fde8:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 800fdec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fdf0:	eec7 7a87 	vdiv.f32	s15, s15, s14
 800fdf4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fdf8:	ee17 1a90 	vmov	r1, s15
 800fdfc:	e001      	b.n	800fe02 <GUI_TOUCH_CalcCoefficients+0x372>
 800fdfe:	f04f 31ff 	mov.w	r1, #4294967295
 800fe02:	edd3 7a04 	vldr	s15, [r3, #16]
 800fe06:	eddf 6a11 	vldr	s13, [pc, #68]	; 800fe4c <GUI_TOUCH_CalcCoefficients+0x3bc>
 800fe0a:	4c12      	ldr	r4, [pc, #72]	; (800fe54 <GUI_TOUCH_CalcCoefficients+0x3c4>)
 800fe0c:	4a0d      	ldr	r2, [pc, #52]	; (800fe44 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800fe0e:	6021      	str	r1, [r4, #0]
 800fe10:	eef4 7a66 	vcmp.f32	s15, s13
 800fe14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe18:	4627      	mov	r7, r4
 800fe1a:	d01f      	beq.n	800fe5c <GUI_TOUCH_CalcCoefficients+0x3cc>
 800fe1c:	ed92 6a03 	vldr	s12, [r2, #12]
 800fe20:	eee6 6a66 	vfms.f32	s13, s12, s13
 800fe24:	ed92 6a05 	vldr	s12, [r2, #20]
 800fe28:	ee76 6ac6 	vsub.f32	s13, s13, s12
 800fe2c:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800fe30:	ee76 6ac6 	vsub.f32	s13, s13, s12
 800fe34:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 800fe38:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 800fe3c:	ee16 2a90 	vmov	r2, s13
 800fe40:	e00e      	b.n	800fe60 <GUI_TOUCH_CalcCoefficients+0x3d0>
 800fe42:	bf00      	nop
 800fe44:	2001950c 	.word	0x2001950c
 800fe48:	20019500 	.word	0x20019500
 800fe4c:	00000000 	.word	0x00000000
 800fe50:	20019504 	.word	0x20019504
 800fe54:	200194f8 	.word	0x200194f8
 800fe58:	20019508 	.word	0x20019508
 800fe5c:	f04f 32ff 	mov.w	r2, #4294967295
 800fe60:	4c2e      	ldr	r4, [pc, #184]	; (800ff1c <GUI_TOUCH_CalcCoefficients+0x48c>)
 800fe62:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800fe66:	3e01      	subs	r6, #1
 800fe68:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fe6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe70:	ee05 6a90 	vmov	s11, r6
 800fe74:	6022      	str	r2, [r4, #0]
 800fe76:	ee06 aa10 	vmov	s12, sl
 800fe7a:	4626      	mov	r6, r4
 800fe7c:	d016      	beq.n	800feac <GUI_TOUCH_CalcCoefficients+0x41c>
 800fe7e:	ed93 5a01 	vldr	s10, [r3, #4]
 800fe82:	eef8 4ac6 	vcvt.f32.s32	s9, s12
 800fe86:	eef8 6ae5 	vcvt.f32.s32	s13, s11
 800fe8a:	eee4 6ac5 	vfms.f32	s13, s9, s10
 800fe8e:	ed93 5a02 	vldr	s10, [r3, #8]
 800fe92:	ee76 6ac5 	vsub.f32	s13, s13, s10
 800fe96:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 800fe9a:	ee76 6ac5 	vsub.f32	s13, s13, s10
 800fe9e:	ee86 7a87 	vdiv.f32	s14, s13, s14
 800fea2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800fea6:	ee17 4a10 	vmov	r4, s14
 800feaa:	e001      	b.n	800feb0 <GUI_TOUCH_CalcCoefficients+0x420>
 800feac:	f04f 34ff 	mov.w	r4, #4294967295
 800feb0:	4d1b      	ldr	r5, [pc, #108]	; (800ff20 <GUI_TOUCH_CalcCoefficients+0x490>)
 800feb2:	eef5 7a40 	vcmp.f32	s15, #0.0
 800feb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800feba:	602c      	str	r4, [r5, #0]
 800febc:	46ac      	mov	ip, r5
 800febe:	d016      	beq.n	800feee <GUI_TOUCH_CalcCoefficients+0x45e>
 800fec0:	edd3 6a03 	vldr	s13, [r3, #12]
 800fec4:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800fec8:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 800fecc:	eea5 7ae6 	vfms.f32	s14, s11, s13
 800fed0:	edd3 6a05 	vldr	s13, [r3, #20]
 800fed4:	ee37 7a66 	vsub.f32	s14, s14, s13
 800fed8:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 800fedc:	ee37 7a66 	vsub.f32	s14, s14, s13
 800fee0:	eec7 7a27 	vdiv.f32	s15, s14, s15
 800fee4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fee8:	ee17 3a90 	vmov	r3, s15
 800feec:	e001      	b.n	800fef2 <GUI_TOUCH_CalcCoefficients+0x462>
 800feee:	f04f 33ff 	mov.w	r3, #4294967295
 800fef2:	42a1      	cmp	r1, r4
 800fef4:	4d0b      	ldr	r5, [pc, #44]	; (800ff24 <GUI_TOUCH_CalcCoefficients+0x494>)
 800fef6:	bfc4      	itt	gt
 800fef8:	603c      	strgt	r4, [r7, #0]
 800fefa:	f8cc 1000 	strgt.w	r1, [ip]
 800fefe:	429a      	cmp	r2, r3
 800ff00:	602b      	str	r3, [r5, #0]
 800ff02:	bfc4      	itt	gt
 800ff04:	6033      	strgt	r3, [r6, #0]
 800ff06:	602a      	strgt	r2, [r5, #0]
 800ff08:	f1d0 0001 	rsbs	r0, r0, #1
 800ff0c:	bf38      	it	cc
 800ff0e:	2000      	movcc	r0, #0
 800ff10:	b00c      	add	sp, #48	; 0x30
 800ff12:	ecbd 8b02 	vpop	{d8}
 800ff16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ff1a:	bf00      	nop
 800ff1c:	200194fc 	.word	0x200194fc
 800ff20:	20019528 	.word	0x20019528
 800ff24:	20019524 	.word	0x20019524

0800ff28 <GUI_TOUCH_StoreStateEx>:
 800ff28:	b530      	push	{r4, r5, lr}
 800ff2a:	4d0f      	ldr	r5, [pc, #60]	; (800ff68 <GUI_TOUCH_StoreStateEx+0x40>)
 800ff2c:	b085      	sub	sp, #20
 800ff2e:	4629      	mov	r1, r5
 800ff30:	220c      	movs	r2, #12
 800ff32:	4604      	mov	r4, r0
 800ff34:	f008 feee 	bl	8018d14 <memcmp>
 800ff38:	b1a0      	cbz	r0, 800ff64 <GUI_TOUCH_StoreStateEx+0x3c>
 800ff3a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800ff3e:	4b0b      	ldr	r3, [pc, #44]	; (800ff6c <GUI_TOUCH_StoreStateEx+0x44>)
 800ff40:	681b      	ldr	r3, [r3, #0]
 800ff42:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800ff46:	b153      	cbz	r3, 800ff5e <GUI_TOUCH_StoreStateEx+0x36>
 800ff48:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800ff4c:	ad01      	add	r5, sp, #4
 800ff4e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800ff52:	4628      	mov	r0, r5
 800ff54:	a902      	add	r1, sp, #8
 800ff56:	4798      	blx	r3
 800ff58:	b920      	cbnz	r0, 800ff64 <GUI_TOUCH_StoreStateEx+0x3c>
 800ff5a:	4628      	mov	r0, r5
 800ff5c:	e000      	b.n	800ff60 <GUI_TOUCH_StoreStateEx+0x38>
 800ff5e:	4620      	mov	r0, r4
 800ff60:	f000 f916 	bl	8010190 <GUI_PID_StoreState>
 800ff64:	b005      	add	sp, #20
 800ff66:	bd30      	pop	{r4, r5, pc}
 800ff68:	2001952c 	.word	0x2001952c
 800ff6c:	20019538 	.word	0x20019538

0800ff70 <GUI_SetTextMode>:
 800ff70:	4b03      	ldr	r3, [pc, #12]	; (800ff80 <GUI_SetTextMode+0x10>)
 800ff72:	681b      	ldr	r3, [r3, #0]
 800ff74:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 800ff78:	8558      	strh	r0, [r3, #42]	; 0x2a
 800ff7a:	4610      	mov	r0, r2
 800ff7c:	4770      	bx	lr
 800ff7e:	bf00      	nop
 800ff80:	2000016c 	.word	0x2000016c

0800ff84 <GUI_SetFont>:
 800ff84:	4b03      	ldr	r3, [pc, #12]	; (800ff94 <GUI_SetFont+0x10>)
 800ff86:	681b      	ldr	r3, [r3, #0]
 800ff88:	69d9      	ldr	r1, [r3, #28]
 800ff8a:	b100      	cbz	r0, 800ff8e <GUI_SetFont+0xa>
 800ff8c:	61d8      	str	r0, [r3, #28]
 800ff8e:	4608      	mov	r0, r1
 800ff90:	4770      	bx	lr
 800ff92:	bf00      	nop
 800ff94:	2000016c 	.word	0x2000016c

0800ff98 <GUI_SetDrawMode>:
 800ff98:	f7fe bae6 	b.w	800e568 <LCD_SetDrawMode>

0800ff9c <GL_SetDefault>:
 800ff9c:	b508      	push	{r3, lr}
 800ff9e:	2000      	movs	r0, #0
 800ffa0:	f000 f81c 	bl	800ffdc <GUI_SetBkColor>
 800ffa4:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800ffa8:	f000 f81a 	bl	800ffe0 <GUI_SetColor>
 800ffac:	2001      	movs	r0, #1
 800ffae:	f000 f8bd 	bl	801012c <GUI_SetPenSize>
 800ffb2:	2000      	movs	r0, #0
 800ffb4:	f006 fe98 	bl	8016ce8 <GUI_SetTextAlign>
 800ffb8:	2000      	movs	r0, #0
 800ffba:	f7ff ffd9 	bl	800ff70 <GUI_SetTextMode>
 800ffbe:	2000      	movs	r0, #0
 800ffc0:	f7ff ffea 	bl	800ff98 <GUI_SetDrawMode>
 800ffc4:	4b04      	ldr	r3, [pc, #16]	; (800ffd8 <GL_SetDefault+0x3c>)
 800ffc6:	6818      	ldr	r0, [r3, #0]
 800ffc8:	f7ff ffdc 	bl	800ff84 <GUI_SetFont>
 800ffcc:	2000      	movs	r0, #0
 800ffce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ffd2:	f006 bead 	b.w	8016d30 <GUI_SetLineStyle>
 800ffd6:	bf00      	nop
 800ffd8:	20000170 	.word	0x20000170

0800ffdc <GUI_SetBkColor>:
 800ffdc:	f7fe be0c 	b.w	800ebf8 <LCD_SetBkColor>

0800ffe0 <GUI_SetColor>:
 800ffe0:	f7fe be12 	b.w	800ec08 <LCD_SetColor>

0800ffe4 <GUI__AlphaPreserveTrans>:
 800ffe4:	b510      	push	{r4, lr}
 800ffe6:	4b07      	ldr	r3, [pc, #28]	; (8010004 <GUI__AlphaPreserveTrans+0x20>)
 800ffe8:	781c      	ldrb	r4, [r3, #0]
 800ffea:	b120      	cbz	r0, 800fff6 <GUI__AlphaPreserveTrans+0x12>
 800ffec:	2201      	movs	r2, #1
 800ffee:	701a      	strb	r2, [r3, #0]
 800fff0:	f04f 30ff 	mov.w	r0, #4294967295
 800fff4:	e002      	b.n	800fffc <GUI__AlphaPreserveTrans+0x18>
 800fff6:	7018      	strb	r0, [r3, #0]
 800fff8:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800fffc:	f005 feca 	bl	8015d94 <LCD_AA_SetAndMask>
 8010000:	4620      	mov	r0, r4
 8010002:	bd10      	pop	{r4, pc}
 8010004:	200199dd 	.word	0x200199dd

08010008 <GUI_GetCursorLayer>:
 8010008:	2801      	cmp	r0, #1
 801000a:	bf9a      	itte	ls
 801000c:	4b02      	ldrls	r3, [pc, #8]	; (8010018 <GUI_GetCursorLayer+0x10>)
 801000e:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 8010012:	2000      	movhi	r0, #0
 8010014:	4770      	bx	lr
 8010016:	bf00      	nop
 8010018:	2001953c 	.word	0x2001953c

0801001c <GUI_GetLayerPosEx>:
 801001c:	b538      	push	{r3, r4, r5, lr}
 801001e:	460d      	mov	r5, r1
 8010020:	4614      	mov	r4, r2
 8010022:	f7fe f987 	bl	800e334 <LCD_GetPosEx>
 8010026:	b110      	cbz	r0, 801002e <GUI_GetLayerPosEx+0x12>
 8010028:	2300      	movs	r3, #0
 801002a:	602b      	str	r3, [r5, #0]
 801002c:	6023      	str	r3, [r4, #0]
 801002e:	bd38      	pop	{r3, r4, r5, pc}

08010030 <GUI_SelectLayer>:
 8010030:	b570      	push	{r4, r5, r6, lr}
 8010032:	4d08      	ldr	r5, [pc, #32]	; (8010054 <GUI_SelectLayer+0x24>)
 8010034:	682b      	ldr	r3, [r5, #0]
 8010036:	2801      	cmp	r0, #1
 8010038:	4604      	mov	r4, r0
 801003a:	7c5e      	ldrb	r6, [r3, #17]
 801003c:	d808      	bhi.n	8010050 <GUI_SelectLayer+0x20>
 801003e:	f000 fc65 	bl	801090c <GUI_DEVICE__GetpDriver>
 8010042:	b128      	cbz	r0, 8010050 <GUI_SelectLayer+0x20>
 8010044:	682b      	ldr	r3, [r5, #0]
 8010046:	745c      	strb	r4, [r3, #17]
 8010048:	f000 f80a 	bl	8010060 <GUI_SelectLCD>
 801004c:	4b02      	ldr	r3, [pc, #8]	; (8010058 <GUI_SelectLayer+0x28>)
 801004e:	601c      	str	r4, [r3, #0]
 8010050:	4630      	mov	r0, r6
 8010052:	bd70      	pop	{r4, r5, r6, pc}
 8010054:	2000016c 	.word	0x2000016c
 8010058:	20019974 	.word	0x20019974

0801005c <GUI_SetLayerPosEx>:
 801005c:	f7fe b93a 	b.w	800e2d4 <LCD_SetPosEx>

08010060 <GUI_SelectLCD>:
 8010060:	b508      	push	{r3, lr}
 8010062:	f005 fa75 	bl	8015550 <LCD_SelectLCD>
 8010066:	f7fe f8db 	bl	800e220 <LCD_UpdateColorIndices>
 801006a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801006e:	f7fb bf05 	b.w	800be7c <WM_Activate>
	...

08010074 <GUI_SaveContext_W>:
 8010074:	b508      	push	{r3, lr}
 8010076:	4b03      	ldr	r3, [pc, #12]	; (8010084 <GUI_SaveContext_W+0x10>)
 8010078:	2270      	movs	r2, #112	; 0x70
 801007a:	6819      	ldr	r1, [r3, #0]
 801007c:	f008 fe59 	bl	8018d32 <memcpy>
 8010080:	bd08      	pop	{r3, pc}
 8010082:	bf00      	nop
 8010084:	2000016c 	.word	0x2000016c

08010088 <GUI_RestoreContext>:
 8010088:	b508      	push	{r3, lr}
 801008a:	4b03      	ldr	r3, [pc, #12]	; (8010098 <GUI_RestoreContext+0x10>)
 801008c:	4601      	mov	r1, r0
 801008e:	2270      	movs	r2, #112	; 0x70
 8010090:	6818      	ldr	r0, [r3, #0]
 8010092:	f008 fe4e 	bl	8018d32 <memcpy>
 8010096:	bd08      	pop	{r3, pc}
 8010098:	2000016c 	.word	0x2000016c

0801009c <GUI_RectsIntersect>:
 801009c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80100a0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80100a4:	429a      	cmp	r2, r3
 80100a6:	dc14      	bgt.n	80100d2 <GUI_RectsIntersect+0x36>
 80100a8:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 80100ac:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80100b0:	429a      	cmp	r2, r3
 80100b2:	dc0e      	bgt.n	80100d2 <GUI_RectsIntersect+0x36>
 80100b4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80100b8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80100bc:	429a      	cmp	r2, r3
 80100be:	dc08      	bgt.n	80100d2 <GUI_RectsIntersect+0x36>
 80100c0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80100c4:	f9b1 2000 	ldrsh.w	r2, [r1]
 80100c8:	429a      	cmp	r2, r3
 80100ca:	bfcc      	ite	gt
 80100cc:	2000      	movgt	r0, #0
 80100ce:	2001      	movle	r0, #1
 80100d0:	4770      	bx	lr
 80100d2:	2000      	movs	r0, #0
 80100d4:	4770      	bx	lr

080100d6 <GUI_ALLOC_Realloc>:
 80100d6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80100d8:	4604      	mov	r4, r0
 80100da:	4608      	mov	r0, r1
 80100dc:	460e      	mov	r6, r1
 80100de:	f001 fbc3 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 80100e2:	4605      	mov	r5, r0
 80100e4:	b1f8      	cbz	r0, 8010126 <GUI_ALLOC_Realloc+0x50>
 80100e6:	b1f4      	cbz	r4, 8010126 <GUI_ALLOC_Realloc+0x50>
 80100e8:	4620      	mov	r0, r4
 80100ea:	f001 f997 	bl	801141c <GUI_ALLOC_GetSize>
 80100ee:	42b0      	cmp	r0, r6
 80100f0:	bfb4      	ite	lt
 80100f2:	4607      	movlt	r7, r0
 80100f4:	4637      	movge	r7, r6
 80100f6:	4628      	mov	r0, r5
 80100f8:	f001 f962 	bl	80113c0 <GUI_ALLOC_LockH>
 80100fc:	9000      	str	r0, [sp, #0]
 80100fe:	4620      	mov	r0, r4
 8010100:	f001 f95e 	bl	80113c0 <GUI_ALLOC_LockH>
 8010104:	ae02      	add	r6, sp, #8
 8010106:	4601      	mov	r1, r0
 8010108:	463a      	mov	r2, r7
 801010a:	9001      	str	r0, [sp, #4]
 801010c:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 8010110:	f008 fe0f 	bl	8018d32 <memcpy>
 8010114:	4668      	mov	r0, sp
 8010116:	f001 f961 	bl	80113dc <GUI_ALLOC_UnlockH>
 801011a:	a801      	add	r0, sp, #4
 801011c:	f001 f95e 	bl	80113dc <GUI_ALLOC_UnlockH>
 8010120:	4620      	mov	r0, r4
 8010122:	f001 f987 	bl	8011434 <GUI_ALLOC_Free>
 8010126:	4628      	mov	r0, r5
 8010128:	b003      	add	sp, #12
 801012a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801012c <GUI_SetPenSize>:
 801012c:	4b02      	ldr	r3, [pc, #8]	; (8010138 <GUI_SetPenSize+0xc>)
 801012e:	681b      	ldr	r3, [r3, #0]
 8010130:	7e1a      	ldrb	r2, [r3, #24]
 8010132:	7618      	strb	r0, [r3, #24]
 8010134:	4610      	mov	r0, r2
 8010136:	4770      	bx	lr
 8010138:	2000016c 	.word	0x2000016c

0801013c <GUI_PID_GetState>:
 801013c:	4a11      	ldr	r2, [pc, #68]	; (8010184 <GUI_PID_GetState+0x48>)
 801013e:	4912      	ldr	r1, [pc, #72]	; (8010188 <GUI_PID_GetState+0x4c>)
 8010140:	6813      	ldr	r3, [r2, #0]
 8010142:	6809      	ldr	r1, [r1, #0]
 8010144:	428b      	cmp	r3, r1
 8010146:	b570      	push	{r4, r5, r6, lr}
 8010148:	4604      	mov	r4, r0
 801014a:	4616      	mov	r6, r2
 801014c:	4d0f      	ldr	r5, [pc, #60]	; (801018c <GUI_PID_GetState+0x50>)
 801014e:	d109      	bne.n	8010164 <GUI_PID_GetState+0x28>
 8010150:	42ab      	cmp	r3, r5
 8010152:	bf06      	itte	eq
 8010154:	333c      	addeq	r3, #60	; 0x3c
 8010156:	e893 0007 	ldmiaeq.w	r3, {r0, r1, r2}
 801015a:	e913 0007 	ldmdbne	r3, {r0, r1, r2}
 801015e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8010162:	e00a      	b.n	801017a <GUI_PID_GetState+0x3e>
 8010164:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8010168:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801016c:	f105 023c 	add.w	r2, r5, #60	; 0x3c
 8010170:	4293      	cmp	r3, r2
 8010172:	bf18      	it	ne
 8010174:	f103 050c 	addne.w	r5, r3, #12
 8010178:	6035      	str	r5, [r6, #0]
 801017a:	7a20      	ldrb	r0, [r4, #8]
 801017c:	3000      	adds	r0, #0
 801017e:	bf18      	it	ne
 8010180:	2001      	movne	r0, #1
 8010182:	bd70      	pop	{r4, r5, r6, pc}
 8010184:	20000160 	.word	0x20000160
 8010188:	2000015c 	.word	0x2000015c
 801018c:	20019548 	.word	0x20019548

08010190 <GUI_PID_StoreState>:
 8010190:	4a21      	ldr	r2, [pc, #132]	; (8010218 <GUI_PID_StoreState+0x88>)
 8010192:	4922      	ldr	r1, [pc, #136]	; (801021c <GUI_PID_StoreState+0x8c>)
 8010194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010198:	6011      	str	r1, [r2, #0]
 801019a:	4f21      	ldr	r7, [pc, #132]	; (8010220 <GUI_PID_StoreState+0x90>)
 801019c:	4921      	ldr	r1, [pc, #132]	; (8010224 <GUI_PID_StoreState+0x94>)
 801019e:	683a      	ldr	r2, [r7, #0]
 80101a0:	680c      	ldr	r4, [r1, #0]
 80101a2:	4603      	mov	r3, r0
 80101a4:	4820      	ldr	r0, [pc, #128]	; (8010228 <GUI_PID_StoreState+0x98>)
 80101a6:	4294      	cmp	r4, r2
 80101a8:	468c      	mov	ip, r1
 80101aa:	f100 063c 	add.w	r6, r0, #60	; 0x3c
 80101ae:	d017      	beq.n	80101e0 <GUI_PID_StoreState+0x50>
 80101b0:	4282      	cmp	r2, r0
 80101b2:	bf14      	ite	ne
 80101b4:	f1a2 010c 	subne.w	r1, r2, #12
 80101b8:	4631      	moveq	r1, r6
 80101ba:	7a1d      	ldrb	r5, [r3, #8]
 80101bc:	f891 8008 	ldrb.w	r8, [r1, #8]
 80101c0:	45a8      	cmp	r8, r5
 80101c2:	d10d      	bne.n	80101e0 <GUI_PID_StoreState+0x50>
 80101c4:	428c      	cmp	r4, r1
 80101c6:	d00b      	beq.n	80101e0 <GUI_PID_StoreState+0x50>
 80101c8:	4281      	cmp	r1, r0
 80101ca:	bf14      	ite	ne
 80101cc:	390c      	subne	r1, #12
 80101ce:	4917      	ldreq	r1, [pc, #92]	; (801022c <GUI_PID_StoreState+0x9c>)
 80101d0:	7a09      	ldrb	r1, [r1, #8]
 80101d2:	42a9      	cmp	r1, r5
 80101d4:	d104      	bne.n	80101e0 <GUI_PID_StoreState+0x50>
 80101d6:	4282      	cmp	r2, r0
 80101d8:	bf14      	ite	ne
 80101da:	3a0c      	subne	r2, #12
 80101dc:	4a13      	ldreq	r2, [pc, #76]	; (801022c <GUI_PID_StoreState+0x9c>)
 80101de:	603a      	str	r2, [r7, #0]
 80101e0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80101e4:	683d      	ldr	r5, [r7, #0]
 80101e6:	42b5      	cmp	r5, r6
 80101e8:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80101ec:	bf0c      	ite	eq
 80101ee:	4d0e      	ldreq	r5, [pc, #56]	; (8010228 <GUI_PID_StoreState+0x98>)
 80101f0:	350c      	addne	r5, #12
 80101f2:	42ac      	cmp	r4, r5
 80101f4:	603d      	str	r5, [r7, #0]
 80101f6:	d105      	bne.n	8010204 <GUI_PID_StoreState+0x74>
 80101f8:	42b4      	cmp	r4, r6
 80101fa:	bf14      	ite	ne
 80101fc:	340c      	addne	r4, #12
 80101fe:	4c0a      	ldreq	r4, [pc, #40]	; (8010228 <GUI_PID_StoreState+0x98>)
 8010200:	f8cc 4000 	str.w	r4, [ip]
 8010204:	4a0a      	ldr	r2, [pc, #40]	; (8010230 <GUI_PID_StoreState+0xa0>)
 8010206:	6812      	ldr	r2, [r2, #0]
 8010208:	b10a      	cbz	r2, 801020e <GUI_PID_StoreState+0x7e>
 801020a:	4618      	mov	r0, r3
 801020c:	4790      	blx	r2
 801020e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010212:	f7ff b8d1 	b.w	800f3b8 <GUI_SignalEvent>
 8010216:	bf00      	nop
 8010218:	200199f8 	.word	0x200199f8
 801021c:	08013a19 	.word	0x08013a19
 8010220:	2000015c 	.word	0x2000015c
 8010224:	20000160 	.word	0x20000160
 8010228:	20019548 	.word	0x20019548
 801022c:	20019584 	.word	0x20019584
 8010230:	20019544 	.word	0x20019544

08010234 <GUI_PID_IsEmpty>:
 8010234:	4b03      	ldr	r3, [pc, #12]	; (8010244 <GUI_PID_IsEmpty+0x10>)
 8010236:	6818      	ldr	r0, [r3, #0]
 8010238:	4b03      	ldr	r3, [pc, #12]	; (8010248 <GUI_PID_IsEmpty+0x14>)
 801023a:	681b      	ldr	r3, [r3, #0]
 801023c:	1ac3      	subs	r3, r0, r3
 801023e:	4258      	negs	r0, r3
 8010240:	4158      	adcs	r0, r3
 8010242:	4770      	bx	lr
 8010244:	20000160 	.word	0x20000160
 8010248:	2000015c 	.word	0x2000015c

0801024c <GUI_GetKey>:
 801024c:	4b02      	ldr	r3, [pc, #8]	; (8010258 <GUI_GetKey+0xc>)
 801024e:	2200      	movs	r2, #0
 8010250:	6818      	ldr	r0, [r3, #0]
 8010252:	601a      	str	r2, [r3, #0]
 8010254:	4770      	bx	lr
 8010256:	bf00      	nop
 8010258:	20019590 	.word	0x20019590

0801025c <GUI_StoreKey>:
 801025c:	4b02      	ldr	r3, [pc, #8]	; (8010268 <GUI_StoreKey+0xc>)
 801025e:	681a      	ldr	r2, [r3, #0]
 8010260:	b902      	cbnz	r2, 8010264 <GUI_StoreKey+0x8>
 8010262:	6018      	str	r0, [r3, #0]
 8010264:	f7ff b8a8 	b.w	800f3b8 <GUI_SignalEvent>
 8010268:	20019590 	.word	0x20019590

0801026c <GUI_PollKeyMsg>:
 801026c:	4a0a      	ldr	r2, [pc, #40]	; (8010298 <GUI_PollKeyMsg+0x2c>)
 801026e:	490b      	ldr	r1, [pc, #44]	; (801029c <GUI_PollKeyMsg+0x30>)
 8010270:	6813      	ldr	r3, [r2, #0]
 8010272:	6809      	ldr	r1, [r1, #0]
 8010274:	428b      	cmp	r3, r1
 8010276:	b510      	push	{r4, lr}
 8010278:	d00b      	beq.n	8010292 <GUI_PollKeyMsg+0x26>
 801027a:	4c09      	ldr	r4, [pc, #36]	; (80102a0 <GUI_PollKeyMsg+0x34>)
 801027c:	42a3      	cmp	r3, r4
 801027e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010282:	bf14      	ite	ne
 8010284:	3308      	addne	r3, #8
 8010286:	3b50      	subeq	r3, #80	; 0x50
 8010288:	6013      	str	r3, [r2, #0]
 801028a:	f003 fd9d 	bl	8013dc8 <WM_OnKey>
 801028e:	2001      	movs	r0, #1
 8010290:	bd10      	pop	{r4, pc}
 8010292:	2000      	movs	r0, #0
 8010294:	bd10      	pop	{r4, pc}
 8010296:	bf00      	nop
 8010298:	20000168 	.word	0x20000168
 801029c:	20000164 	.word	0x20000164
 80102a0:	200195e4 	.word	0x200195e4

080102a4 <GUI_MoveRect>:
 80102a4:	b168      	cbz	r0, 80102c2 <GUI_MoveRect+0x1e>
 80102a6:	8803      	ldrh	r3, [r0, #0]
 80102a8:	b289      	uxth	r1, r1
 80102aa:	440b      	add	r3, r1
 80102ac:	8003      	strh	r3, [r0, #0]
 80102ae:	8883      	ldrh	r3, [r0, #4]
 80102b0:	4419      	add	r1, r3
 80102b2:	8843      	ldrh	r3, [r0, #2]
 80102b4:	8081      	strh	r1, [r0, #4]
 80102b6:	b292      	uxth	r2, r2
 80102b8:	4413      	add	r3, r2
 80102ba:	8043      	strh	r3, [r0, #2]
 80102bc:	88c3      	ldrh	r3, [r0, #6]
 80102be:	441a      	add	r2, r3
 80102c0:	80c2      	strh	r2, [r0, #6]
 80102c2:	4770      	bx	lr

080102c4 <GUI_MergeRect>:
 80102c4:	b510      	push	{r4, lr}
 80102c6:	b338      	cbz	r0, 8010318 <GUI_MergeRect+0x54>
 80102c8:	b309      	cbz	r1, 801030e <GUI_MergeRect+0x4a>
 80102ca:	b30a      	cbz	r2, 8010310 <GUI_MergeRect+0x4c>
 80102cc:	f9b1 4000 	ldrsh.w	r4, [r1]
 80102d0:	f9b2 3000 	ldrsh.w	r3, [r2]
 80102d4:	429c      	cmp	r4, r3
 80102d6:	bfb8      	it	lt
 80102d8:	4623      	movlt	r3, r4
 80102da:	8003      	strh	r3, [r0, #0]
 80102dc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80102e0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80102e4:	429c      	cmp	r4, r3
 80102e6:	bfb8      	it	lt
 80102e8:	4623      	movlt	r3, r4
 80102ea:	8043      	strh	r3, [r0, #2]
 80102ec:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 80102f0:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80102f4:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 80102f8:	429c      	cmp	r4, r3
 80102fa:	bfa8      	it	ge
 80102fc:	4623      	movge	r3, r4
 80102fe:	8083      	strh	r3, [r0, #4]
 8010300:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8010304:	4299      	cmp	r1, r3
 8010306:	bfa8      	it	ge
 8010308:	460b      	movge	r3, r1
 801030a:	80c3      	strh	r3, [r0, #6]
 801030c:	bd10      	pop	{r4, pc}
 801030e:	4611      	mov	r1, r2
 8010310:	680b      	ldr	r3, [r1, #0]
 8010312:	6003      	str	r3, [r0, #0]
 8010314:	684b      	ldr	r3, [r1, #4]
 8010316:	6043      	str	r3, [r0, #4]
 8010318:	bd10      	pop	{r4, pc}
	...

0801031c <GUI_MULTIBUF_BeginEx>:
 801031c:	4b1a      	ldr	r3, [pc, #104]	; (8010388 <GUI_MULTIBUF_BeginEx+0x6c>)
 801031e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010320:	681b      	ldr	r3, [r3, #0]
 8010322:	4a1a      	ldr	r2, [pc, #104]	; (801038c <GUI_MULTIBUF_BeginEx+0x70>)
 8010324:	2b00      	cmp	r3, #0
 8010326:	bf0c      	ite	eq
 8010328:	4603      	moveq	r3, r0
 801032a:	2300      	movne	r3, #0
 801032c:	56d2      	ldrsb	r2, [r2, r3]
 801032e:	2a01      	cmp	r2, #1
 8010330:	dd28      	ble.n	8010384 <GUI_MULTIBUF_BeginEx+0x68>
 8010332:	4c17      	ldr	r4, [pc, #92]	; (8010390 <GUI_MULTIBUF_BeginEx+0x74>)
 8010334:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 8010338:	1c4d      	adds	r5, r1, #1
 801033a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801033e:	bb09      	cbnz	r1, 8010384 <GUI_MULTIBUF_BeginEx+0x68>
 8010340:	4d14      	ldr	r5, [pc, #80]	; (8010394 <GUI_MULTIBUF_BeginEx+0x78>)
 8010342:	4915      	ldr	r1, [pc, #84]	; (8010398 <GUI_MULTIBUF_BeginEx+0x7c>)
 8010344:	f855 6023 	ldr.w	r6, [r5, r3, lsl #2]
 8010348:	f851 7023 	ldr.w	r7, [r1, r3, lsl #2]
 801034c:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
 8010350:	4910      	ldr	r1, [pc, #64]	; (8010394 <GUI_MULTIBUF_BeginEx+0x78>)
 8010352:	3401      	adds	r4, #1
 8010354:	4294      	cmp	r4, r2
 8010356:	bf08      	it	eq
 8010358:	2400      	moveq	r4, #0
 801035a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 801035e:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
 8010362:	42bc      	cmp	r4, r7
 8010364:	d0f2      	beq.n	801034c <GUI_MULTIBUF_BeginEx+0x30>
 8010366:	f000 fad1 	bl	801090c <GUI_DEVICE__GetpDriver>
 801036a:	9001      	str	r0, [sp, #4]
 801036c:	b150      	cbz	r0, 8010384 <GUI_MULTIBUF_BeginEx+0x68>
 801036e:	68c3      	ldr	r3, [r0, #12]
 8010370:	2121      	movs	r1, #33	; 0x21
 8010372:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010374:	a801      	add	r0, sp, #4
 8010376:	4798      	blx	r3
 8010378:	4603      	mov	r3, r0
 801037a:	b118      	cbz	r0, 8010384 <GUI_MULTIBUF_BeginEx+0x68>
 801037c:	9801      	ldr	r0, [sp, #4]
 801037e:	4631      	mov	r1, r6
 8010380:	4622      	mov	r2, r4
 8010382:	4798      	blx	r3
 8010384:	b003      	add	sp, #12
 8010386:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010388:	2001960c 	.word	0x2001960c
 801038c:	200199bc 	.word	0x200199bc
 8010390:	20019604 	.word	0x20019604
 8010394:	200195fc 	.word	0x200195fc
 8010398:	200195ec 	.word	0x200195ec

0801039c <GUI_MULTIBUF_Begin>:
 801039c:	4b02      	ldr	r3, [pc, #8]	; (80103a8 <GUI_MULTIBUF_Begin+0xc>)
 801039e:	681b      	ldr	r3, [r3, #0]
 80103a0:	7c58      	ldrb	r0, [r3, #17]
 80103a2:	f7ff bfbb 	b.w	801031c <GUI_MULTIBUF_BeginEx>
 80103a6:	bf00      	nop
 80103a8:	2000016c 	.word	0x2000016c

080103ac <GUI_MULTIBUF_EndEx>:
 80103ac:	4b13      	ldr	r3, [pc, #76]	; (80103fc <GUI_MULTIBUF_EndEx+0x50>)
 80103ae:	4a14      	ldr	r2, [pc, #80]	; (8010400 <GUI_MULTIBUF_EndEx+0x54>)
 80103b0:	681b      	ldr	r3, [r3, #0]
 80103b2:	b513      	push	{r0, r1, r4, lr}
 80103b4:	2b00      	cmp	r3, #0
 80103b6:	bf0c      	ite	eq
 80103b8:	4603      	moveq	r3, r0
 80103ba:	2300      	movne	r3, #0
 80103bc:	56d2      	ldrsb	r2, [r2, r3]
 80103be:	2a01      	cmp	r2, #1
 80103c0:	dd1a      	ble.n	80103f8 <GUI_MULTIBUF_EndEx+0x4c>
 80103c2:	4910      	ldr	r1, [pc, #64]	; (8010404 <GUI_MULTIBUF_EndEx+0x58>)
 80103c4:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
 80103c8:	3a01      	subs	r2, #1
 80103ca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80103ce:	b99a      	cbnz	r2, 80103f8 <GUI_MULTIBUF_EndEx+0x4c>
 80103d0:	4a0d      	ldr	r2, [pc, #52]	; (8010408 <GUI_MULTIBUF_EndEx+0x5c>)
 80103d2:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80103d6:	4a0d      	ldr	r2, [pc, #52]	; (801040c <GUI_MULTIBUF_EndEx+0x60>)
 80103d8:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 80103dc:	f000 fa96 	bl	801090c <GUI_DEVICE__GetpDriver>
 80103e0:	9001      	str	r0, [sp, #4]
 80103e2:	b148      	cbz	r0, 80103f8 <GUI_MULTIBUF_EndEx+0x4c>
 80103e4:	68c3      	ldr	r3, [r0, #12]
 80103e6:	2122      	movs	r1, #34	; 0x22
 80103e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80103ea:	a801      	add	r0, sp, #4
 80103ec:	4798      	blx	r3
 80103ee:	4603      	mov	r3, r0
 80103f0:	b110      	cbz	r0, 80103f8 <GUI_MULTIBUF_EndEx+0x4c>
 80103f2:	9801      	ldr	r0, [sp, #4]
 80103f4:	4621      	mov	r1, r4
 80103f6:	4798      	blx	r3
 80103f8:	b002      	add	sp, #8
 80103fa:	bd10      	pop	{r4, pc}
 80103fc:	2001960c 	.word	0x2001960c
 8010400:	200199bc 	.word	0x200199bc
 8010404:	20019604 	.word	0x20019604
 8010408:	200195fc 	.word	0x200195fc
 801040c:	200195f4 	.word	0x200195f4

08010410 <GUI_MULTIBUF_End>:
 8010410:	4b02      	ldr	r3, [pc, #8]	; (801041c <GUI_MULTIBUF_End+0xc>)
 8010412:	681b      	ldr	r3, [r3, #0]
 8010414:	7c58      	ldrb	r0, [r3, #17]
 8010416:	f7ff bfc9 	b.w	80103ac <GUI_MULTIBUF_EndEx>
 801041a:	bf00      	nop
 801041c:	2000016c 	.word	0x2000016c

08010420 <GUI_InvertRect>:
 8010420:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010424:	4607      	mov	r7, r0
 8010426:	2001      	movs	r0, #1
 8010428:	469a      	mov	sl, r3
 801042a:	460e      	mov	r6, r1
 801042c:	4691      	mov	r9, r2
 801042e:	f7ff fdb3 	bl	800ff98 <GUI_SetDrawMode>
 8010432:	4b12      	ldr	r3, [pc, #72]	; (801047c <GUI_InvertRect+0x5c>)
 8010434:	681c      	ldr	r4, [r3, #0]
 8010436:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8010438:	6d24      	ldr	r4, [r4, #80]	; 0x50
 801043a:	442f      	add	r7, r5
 801043c:	4426      	add	r6, r4
 801043e:	4680      	mov	r8, r0
 8010440:	444d      	add	r5, r9
 8010442:	4454      	add	r4, sl
 8010444:	4668      	mov	r0, sp
 8010446:	f8ad 7000 	strh.w	r7, [sp]
 801044a:	f8ad 5004 	strh.w	r5, [sp, #4]
 801044e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010452:	f8ad 4006 	strh.w	r4, [sp, #6]
 8010456:	f7fb fb3d 	bl	800bad4 <WM__InitIVRSearch>
 801045a:	b928      	cbnz	r0, 8010468 <GUI_InvertRect+0x48>
 801045c:	4640      	mov	r0, r8
 801045e:	f7ff fd9b 	bl	800ff98 <GUI_SetDrawMode>
 8010462:	b002      	add	sp, #8
 8010464:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010468:	4638      	mov	r0, r7
 801046a:	4631      	mov	r1, r6
 801046c:	462a      	mov	r2, r5
 801046e:	4623      	mov	r3, r4
 8010470:	f7fe f8fc 	bl	800e66c <LCD_FillRect>
 8010474:	f7fb fa6c 	bl	800b950 <WM__GetNextIVR>
 8010478:	e7ef      	b.n	801045a <GUI_InvertRect+0x3a>
 801047a:	bf00      	nop
 801047c:	2000016c 	.word	0x2000016c

08010480 <GUI_GotoXY>:
 8010480:	4b02      	ldr	r3, [pc, #8]	; (801048c <GUI_GotoXY+0xc>)
 8010482:	681b      	ldr	r3, [r3, #0]
 8010484:	8458      	strh	r0, [r3, #34]	; 0x22
 8010486:	8499      	strh	r1, [r3, #36]	; 0x24
 8010488:	2000      	movs	r0, #0
 801048a:	4770      	bx	lr
 801048c:	2000016c 	.word	0x2000016c

08010490 <GUI_GetYSizeOfFont>:
 8010490:	7e02      	ldrb	r2, [r0, #24]
 8010492:	7ec0      	ldrb	r0, [r0, #27]
 8010494:	4350      	muls	r0, r2
 8010496:	4770      	bx	lr

08010498 <GUI_GetStringDistX>:
 8010498:	b510      	push	{r4, lr}
 801049a:	4604      	mov	r4, r0
 801049c:	f7fe fd2a 	bl	800eef4 <GUI__GetNumChars>
 80104a0:	4601      	mov	r1, r0
 80104a2:	4620      	mov	r0, r4
 80104a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80104a8:	f000 bdd2 	b.w	8011050 <GUI__GetLineDistX>

080104ac <GUI_GetOrg>:
 80104ac:	4b04      	ldr	r3, [pc, #16]	; (80104c0 <GUI_GetOrg+0x14>)
 80104ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80104b2:	6003      	str	r3, [r0, #0]
 80104b4:	4b03      	ldr	r3, [pc, #12]	; (80104c4 <GUI_GetOrg+0x18>)
 80104b6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80104ba:	600b      	str	r3, [r1, #0]
 80104bc:	4770      	bx	lr
 80104be:	bf00      	nop
 80104c0:	200199d4 	.word	0x200199d4
 80104c4:	200199c8 	.word	0x200199c8

080104c8 <GUI_FillRectEx>:
 80104c8:	4603      	mov	r3, r0
 80104ca:	f9b0 0000 	ldrsh.w	r0, [r0]
 80104ce:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 80104d2:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 80104d6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80104da:	f000 b801 	b.w	80104e0 <GUI_FillRect>
	...

080104e0 <GUI_FillRect>:
 80104e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80104e2:	4c0f      	ldr	r4, [pc, #60]	; (8010520 <GUI_FillRect+0x40>)
 80104e4:	6824      	ldr	r4, [r4, #0]
 80104e6:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80104e8:	6d24      	ldr	r4, [r4, #80]	; 0x50
 80104ea:	1947      	adds	r7, r0, r5
 80104ec:	190e      	adds	r6, r1, r4
 80104ee:	4415      	add	r5, r2
 80104f0:	441c      	add	r4, r3
 80104f2:	4668      	mov	r0, sp
 80104f4:	f8ad 7000 	strh.w	r7, [sp]
 80104f8:	f8ad 5004 	strh.w	r5, [sp, #4]
 80104fc:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010500:	f8ad 4006 	strh.w	r4, [sp, #6]
 8010504:	f7fb fae6 	bl	800bad4 <WM__InitIVRSearch>
 8010508:	b140      	cbz	r0, 801051c <GUI_FillRect+0x3c>
 801050a:	4638      	mov	r0, r7
 801050c:	4631      	mov	r1, r6
 801050e:	462a      	mov	r2, r5
 8010510:	4623      	mov	r3, r4
 8010512:	f7fe f8ab 	bl	800e66c <LCD_FillRect>
 8010516:	f7fb fa1b 	bl	800b950 <WM__GetNextIVR>
 801051a:	e7f5      	b.n	8010508 <GUI_FillRect+0x28>
 801051c:	b003      	add	sp, #12
 801051e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010520:	2000016c 	.word	0x2000016c

08010524 <GUI_Exec1>:
 8010524:	4b0a      	ldr	r3, [pc, #40]	; (8010550 <GUI_Exec1+0x2c>)
 8010526:	b510      	push	{r4, lr}
 8010528:	681c      	ldr	r4, [r3, #0]
 801052a:	b11c      	cbz	r4, 8010534 <GUI_Exec1+0x10>
 801052c:	47a0      	blx	r4
 801052e:	1c04      	adds	r4, r0, #0
 8010530:	bf18      	it	ne
 8010532:	2401      	movne	r4, #1
 8010534:	f7fb fbf4 	bl	800bd20 <WM_Exec>
 8010538:	4b06      	ldr	r3, [pc, #24]	; (8010554 <GUI_Exec1+0x30>)
 801053a:	681b      	ldr	r3, [r3, #0]
 801053c:	2800      	cmp	r0, #0
 801053e:	bf18      	it	ne
 8010540:	2401      	movne	r4, #1
 8010542:	b11b      	cbz	r3, 801054c <GUI_Exec1+0x28>
 8010544:	4798      	blx	r3
 8010546:	2800      	cmp	r0, #0
 8010548:	bf18      	it	ne
 801054a:	2401      	movne	r4, #1
 801054c:	4620      	mov	r0, r4
 801054e:	bd10      	pop	{r4, pc}
 8010550:	200199d0 	.word	0x200199d0
 8010554:	200199e8 	.word	0x200199e8

08010558 <GUI_Exec>:
 8010558:	b510      	push	{r4, lr}
 801055a:	2400      	movs	r4, #0
 801055c:	f7ff ffe2 	bl	8010524 <GUI_Exec1>
 8010560:	b108      	cbz	r0, 8010566 <GUI_Exec+0xe>
 8010562:	2401      	movs	r4, #1
 8010564:	e7fa      	b.n	801055c <GUI_Exec+0x4>
 8010566:	4620      	mov	r0, r4
 8010568:	bd10      	pop	{r4, pc}
	...

0801056c <GUI_DrawVLine>:
 801056c:	4b0f      	ldr	r3, [pc, #60]	; (80105ac <GUI_DrawVLine+0x40>)
 801056e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010570:	681b      	ldr	r3, [r3, #0]
 8010572:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8010574:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8010576:	4406      	add	r6, r0
 8010578:	190d      	adds	r5, r1, r4
 801057a:	b2b3      	uxth	r3, r6
 801057c:	4414      	add	r4, r2
 801057e:	4668      	mov	r0, sp
 8010580:	f8ad 3000 	strh.w	r3, [sp]
 8010584:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010588:	f8ad 5002 	strh.w	r5, [sp, #2]
 801058c:	f8ad 4006 	strh.w	r4, [sp, #6]
 8010590:	f7fb faa0 	bl	800bad4 <WM__InitIVRSearch>
 8010594:	b138      	cbz	r0, 80105a6 <GUI_DrawVLine+0x3a>
 8010596:	4630      	mov	r0, r6
 8010598:	4629      	mov	r1, r5
 801059a:	4622      	mov	r2, r4
 801059c:	f7fe f840 	bl	800e620 <LCD_DrawVLine>
 80105a0:	f7fb f9d6 	bl	800b950 <WM__GetNextIVR>
 80105a4:	e7f6      	b.n	8010594 <GUI_DrawVLine+0x28>
 80105a6:	b002      	add	sp, #8
 80105a8:	bd70      	pop	{r4, r5, r6, pc}
 80105aa:	bf00      	nop
 80105ac:	2000016c 	.word	0x2000016c

080105b0 <GUI_DrawHLine>:
 80105b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80105b2:	4f10      	ldr	r7, [pc, #64]	; (80105f4 <GUI_DrawHLine+0x44>)
 80105b4:	683b      	ldr	r3, [r7, #0]
 80105b6:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 80105b8:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80105ba:	4405      	add	r5, r0
 80105bc:	190e      	adds	r6, r1, r4
 80105be:	b2ab      	uxth	r3, r5
 80105c0:	4414      	add	r4, r2
 80105c2:	4668      	mov	r0, sp
 80105c4:	f8ad 6000 	strh.w	r6, [sp]
 80105c8:	f8ad 4004 	strh.w	r4, [sp, #4]
 80105cc:	f8ad 3002 	strh.w	r3, [sp, #2]
 80105d0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80105d4:	f7fb fa7e 	bl	800bad4 <WM__InitIVRSearch>
 80105d8:	b148      	cbz	r0, 80105ee <GUI_DrawHLine+0x3e>
 80105da:	683b      	ldr	r3, [r7, #0]
 80105dc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80105de:	4630      	mov	r0, r6
 80105e0:	681b      	ldr	r3, [r3, #0]
 80105e2:	4629      	mov	r1, r5
 80105e4:	4622      	mov	r2, r4
 80105e6:	4798      	blx	r3
 80105e8:	f7fb f9b2 	bl	800b950 <WM__GetNextIVR>
 80105ec:	e7f4      	b.n	80105d8 <GUI_DrawHLine+0x28>
 80105ee:	b003      	add	sp, #12
 80105f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105f2:	bf00      	nop
 80105f4:	2000016c 	.word	0x2000016c

080105f8 <GUI_DrawFocusRect>:
 80105f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80105fa:	4603      	mov	r3, r0
 80105fc:	460a      	mov	r2, r1
 80105fe:	4668      	mov	r0, sp
 8010600:	4619      	mov	r1, r3
 8010602:	f7fe fb9c 	bl	800ed3e <GUI__ReduceRect>
 8010606:	4b23      	ldr	r3, [pc, #140]	; (8010694 <GUI_DrawFocusRect+0x9c>)
 8010608:	f8bd 1000 	ldrh.w	r1, [sp]
 801060c:	681b      	ldr	r3, [r3, #0]
 801060e:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 8010612:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8010616:	4411      	add	r1, r2
 8010618:	f8ad 1000 	strh.w	r1, [sp]
 801061c:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8010620:	4419      	add	r1, r3
 8010622:	f8ad 1002 	strh.w	r1, [sp, #2]
 8010626:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801062a:	440a      	add	r2, r1
 801062c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010630:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010634:	4668      	mov	r0, sp
 8010636:	4413      	add	r3, r2
 8010638:	f8ad 3006 	strh.w	r3, [sp, #6]
 801063c:	f7fb fa4a 	bl	800bad4 <WM__InitIVRSearch>
 8010640:	b328      	cbz	r0, 801068e <GUI_DrawFocusRect+0x96>
 8010642:	f9bd 5000 	ldrsh.w	r5, [sp]
 8010646:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801064a:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 801064e:	429d      	cmp	r5, r3
 8010650:	dc09      	bgt.n	8010666 <GUI_DrawFocusRect+0x6e>
 8010652:	4628      	mov	r0, r5
 8010654:	f7fd ff90 	bl	800e578 <LCD_DrawPixel>
 8010658:	4628      	mov	r0, r5
 801065a:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 801065e:	f7fd ff8b 	bl	800e578 <LCD_DrawPixel>
 8010662:	3502      	adds	r5, #2
 8010664:	e7ef      	b.n	8010646 <GUI_DrawFocusRect+0x4e>
 8010666:	460c      	mov	r4, r1
 8010668:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801066c:	429c      	cmp	r4, r3
 801066e:	dc0b      	bgt.n	8010688 <GUI_DrawFocusRect+0x90>
 8010670:	4621      	mov	r1, r4
 8010672:	f9bd 0000 	ldrsh.w	r0, [sp]
 8010676:	f7fd ff7f 	bl	800e578 <LCD_DrawPixel>
 801067a:	4621      	mov	r1, r4
 801067c:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8010680:	f7fd ff7a 	bl	800e578 <LCD_DrawPixel>
 8010684:	3402      	adds	r4, #2
 8010686:	e7ef      	b.n	8010668 <GUI_DrawFocusRect+0x70>
 8010688:	f7fb f962 	bl	800b950 <WM__GetNextIVR>
 801068c:	e7d8      	b.n	8010640 <GUI_DrawFocusRect+0x48>
 801068e:	b003      	add	sp, #12
 8010690:	bd30      	pop	{r4, r5, pc}
 8010692:	bf00      	nop
 8010694:	2000016c 	.word	0x2000016c

08010698 <GUI_WrapGetNumLines>:
 8010698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801069a:	4605      	mov	r5, r0
 801069c:	460e      	mov	r6, r1
 801069e:	4617      	mov	r7, r2
 80106a0:	2400      	movs	r4, #0
 80106a2:	4628      	mov	r0, r5
 80106a4:	4631      	mov	r1, r6
 80106a6:	463a      	mov	r2, r7
 80106a8:	f005 fdee 	bl	8016288 <GUI__WrapGetNumBytesToNextLine>
 80106ac:	b110      	cbz	r0, 80106b4 <GUI_WrapGetNumLines+0x1c>
 80106ae:	4405      	add	r5, r0
 80106b0:	3401      	adds	r4, #1
 80106b2:	e7f6      	b.n	80106a2 <GUI_WrapGetNumLines+0xa>
 80106b4:	4620      	mov	r0, r4
 80106b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080106b8 <GUI_DispStringInRectWrap>:
 80106b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106bc:	b089      	sub	sp, #36	; 0x24
 80106be:	460c      	mov	r4, r1
 80106c0:	9202      	str	r2, [sp, #8]
 80106c2:	9303      	str	r3, [sp, #12]
 80106c4:	4605      	mov	r5, r0
 80106c6:	2800      	cmp	r0, #0
 80106c8:	f000 8091 	beq.w	80107ee <GUI_DispStringInRectWrap+0x136>
 80106cc:	f8b1 a000 	ldrh.w	sl, [r1]
 80106d0:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 80106d4:	884e      	ldrh	r6, [r1, #2]
 80106d6:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 80106da:	fa0f f289 	sxth.w	r2, r9
 80106de:	fa0f f38a 	sxth.w	r3, sl
 80106e2:	1ad3      	subs	r3, r2, r3
 80106e4:	3301      	adds	r3, #1
 80106e6:	9301      	str	r3, [sp, #4]
 80106e8:	f000 fd4e 	bl	8011188 <GUI_GetFontDistY>
 80106ec:	9902      	ldr	r1, [sp, #8]
 80106ee:	f011 070c 	ands.w	r7, r1, #12
 80106f2:	4680      	mov	r8, r0
 80106f4:	d01b      	beq.n	801072e <GUI_DispStringInRectWrap+0x76>
 80106f6:	4628      	mov	r0, r5
 80106f8:	9901      	ldr	r1, [sp, #4]
 80106fa:	9a03      	ldr	r2, [sp, #12]
 80106fc:	f7ff ffcc 	bl	8010698 <GUI_WrapGetNumLines>
 8010700:	2f08      	cmp	r7, #8
 8010702:	d003      	beq.n	801070c <GUI_DispStringInRectWrap+0x54>
 8010704:	2f0c      	cmp	r7, #12
 8010706:	d006      	beq.n	8010716 <GUI_DispStringInRectWrap+0x5e>
 8010708:	2f04      	cmp	r7, #4
 801070a:	d110      	bne.n	801072e <GUI_DispStringInRectWrap+0x76>
 801070c:	f10b 0601 	add.w	r6, fp, #1
 8010710:	fb00 6618 	mls	r6, r0, r8, r6
 8010714:	e00a      	b.n	801072c <GUI_DispStringInRectWrap+0x74>
 8010716:	b232      	sxth	r2, r6
 8010718:	fa0f f38b 	sxth.w	r3, fp
 801071c:	1a9b      	subs	r3, r3, r2
 801071e:	3301      	adds	r3, #1
 8010720:	fb08 3010 	mls	r0, r8, r0, r3
 8010724:	2302      	movs	r3, #2
 8010726:	fb90 f0f3 	sdiv	r0, r0, r3
 801072a:	4406      	add	r6, r0
 801072c:	b2b6      	uxth	r6, r6
 801072e:	4620      	mov	r0, r4
 8010730:	f7f9 fe06 	bl	800a340 <WM_SetUserClipRect>
 8010734:	4607      	mov	r7, r0
 8010736:	b178      	cbz	r0, 8010758 <GUI_DispStringInRectWrap+0xa0>
 8010738:	a804      	add	r0, sp, #16
 801073a:	4621      	mov	r1, r4
 801073c:	463a      	mov	r2, r7
 801073e:	f8ad a010 	strh.w	sl, [sp, #16]
 8010742:	f8ad 6012 	strh.w	r6, [sp, #18]
 8010746:	f8ad 9014 	strh.w	r9, [sp, #20]
 801074a:	f8ad b016 	strh.w	fp, [sp, #22]
 801074e:	f7fe fb81 	bl	800ee54 <GUI__IntersectRects>
 8010752:	a804      	add	r0, sp, #16
 8010754:	f7f9 fdf4 	bl	800a340 <WM_SetUserClipRect>
 8010758:	9901      	ldr	r1, [sp, #4]
 801075a:	9a03      	ldr	r2, [sp, #12]
 801075c:	4628      	mov	r0, r5
 801075e:	f005 fd61 	bl	8016224 <GUI__WrapGetNumCharsDisp>
 8010762:	eb06 0b08 	add.w	fp, r6, r8
 8010766:	4602      	mov	r2, r0
 8010768:	fa1f fb8b 	uxth.w	fp, fp
 801076c:	f10b 33ff 	add.w	r3, fp, #4294967295
 8010770:	4611      	mov	r1, r2
 8010772:	4628      	mov	r0, r5
 8010774:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010778:	9200      	str	r2, [sp, #0]
 801077a:	f8ad a018 	strh.w	sl, [sp, #24]
 801077e:	f8ad 601a 	strh.w	r6, [sp, #26]
 8010782:	f8ad 901c 	strh.w	r9, [sp, #28]
 8010786:	f000 fc63 	bl	8011050 <GUI__GetLineDistX>
 801078a:	9902      	ldr	r1, [sp, #8]
 801078c:	9a00      	ldr	r2, [sp, #0]
 801078e:	f001 0303 	and.w	r3, r1, #3
 8010792:	2b01      	cmp	r3, #1
 8010794:	d013      	beq.n	80107be <GUI_DispStringInRectWrap+0x106>
 8010796:	2b02      	cmp	r3, #2
 8010798:	d004      	beq.n	80107a4 <GUI_DispStringInRectWrap+0xec>
 801079a:	b9ab      	cbnz	r3, 80107c8 <GUI_DispStringInRectWrap+0x110>
 801079c:	8823      	ldrh	r3, [r4, #0]
 801079e:	f8ad 3018 	strh.w	r3, [sp, #24]
 80107a2:	e011      	b.n	80107c8 <GUI_DispStringInRectWrap+0x110>
 80107a4:	8821      	ldrh	r1, [r4, #0]
 80107a6:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 80107aa:	b20e      	sxth	r6, r1
 80107ac:	ebc6 060e 	rsb	r6, r6, lr
 80107b0:	1a30      	subs	r0, r6, r0
 80107b2:	fb90 f3f3 	sdiv	r3, r0, r3
 80107b6:	4419      	add	r1, r3
 80107b8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80107bc:	e004      	b.n	80107c8 <GUI_DispStringInRectWrap+0x110>
 80107be:	88a3      	ldrh	r3, [r4, #4]
 80107c0:	3301      	adds	r3, #1
 80107c2:	1a18      	subs	r0, r3, r0
 80107c4:	f8ad 0018 	strh.w	r0, [sp, #24]
 80107c8:	4628      	mov	r0, r5
 80107ca:	4611      	mov	r1, r2
 80107cc:	aa06      	add	r2, sp, #24
 80107ce:	f000 fc6f 	bl	80110b0 <GUI__DispLine>
 80107d2:	4628      	mov	r0, r5
 80107d4:	9901      	ldr	r1, [sp, #4]
 80107d6:	9a03      	ldr	r2, [sp, #12]
 80107d8:	f005 fd56 	bl	8016288 <GUI__WrapGetNumBytesToNextLine>
 80107dc:	4405      	add	r5, r0
 80107de:	fa1f f68b 	uxth.w	r6, fp
 80107e2:	782b      	ldrb	r3, [r5, #0]
 80107e4:	2b00      	cmp	r3, #0
 80107e6:	d1b7      	bne.n	8010758 <GUI_DispStringInRectWrap+0xa0>
 80107e8:	4638      	mov	r0, r7
 80107ea:	f7f9 fda9 	bl	800a340 <WM_SetUserClipRect>
 80107ee:	b009      	add	sp, #36	; 0x24
 80107f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080107f4 <GUI_DispStringAt>:
 80107f4:	4b02      	ldr	r3, [pc, #8]	; (8010800 <GUI_DispStringAt+0xc>)
 80107f6:	681b      	ldr	r3, [r3, #0]
 80107f8:	8459      	strh	r1, [r3, #34]	; 0x22
 80107fa:	849a      	strh	r2, [r3, #36]	; 0x24
 80107fc:	f000 b802 	b.w	8010804 <GUI_DispString>
 8010800:	2000016c 	.word	0x2000016c

08010804 <GUI_DispString>:
 8010804:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010808:	4604      	mov	r4, r0
 801080a:	2800      	cmp	r0, #0
 801080c:	d079      	beq.n	8010902 <GUI_DispString+0xfe>
 801080e:	4d3e      	ldr	r5, [pc, #248]	; (8010908 <GUI_DispString+0x104>)
 8010810:	f000 fcba 	bl	8011188 <GUI_GetFontDistY>
 8010814:	682b      	ldr	r3, [r5, #0]
 8010816:	4680      	mov	r8, r0
 8010818:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 801081c:	f000 fc9c 	bl	8011158 <GUI_GetYAdjust>
 8010820:	682b      	ldr	r3, [r5, #0]
 8010822:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 8010824:	b287      	uxth	r7, r0
 8010826:	1bd2      	subs	r2, r2, r7
 8010828:	849a      	strh	r2, [r3, #36]	; 0x24
 801082a:	7823      	ldrb	r3, [r4, #0]
 801082c:	2b00      	cmp	r3, #0
 801082e:	d05d      	beq.n	80108ec <GUI_DispString+0xe8>
 8010830:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8010834:	4620      	mov	r0, r4
 8010836:	f000 fbdd 	bl	8010ff4 <GUI__GetLineNumChars>
 801083a:	4606      	mov	r6, r0
 801083c:	4631      	mov	r1, r6
 801083e:	4620      	mov	r0, r4
 8010840:	f000 fc06 	bl	8011050 <GUI__GetLineDistX>
 8010844:	682b      	ldr	r3, [r5, #0]
 8010846:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8010848:	f002 0203 	and.w	r2, r2, #3
 801084c:	2a01      	cmp	r2, #1
 801084e:	d005      	beq.n	801085c <GUI_DispString+0x58>
 8010850:	2a02      	cmp	r2, #2
 8010852:	bf14      	ite	ne
 8010854:	2200      	movne	r2, #0
 8010856:	fb90 f2f2 	sdiveq	r2, r0, r2
 801085a:	e000      	b.n	801085e <GUI_DispString+0x5a>
 801085c:	4602      	mov	r2, r0
 801085e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8010860:	1a8a      	subs	r2, r1, r2
 8010862:	b292      	uxth	r2, r2
 8010864:	b291      	uxth	r1, r2
 8010866:	8459      	strh	r1, [r3, #34]	; 0x22
 8010868:	fa1f fa80 	uxth.w	sl, r0
 801086c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 801086e:	f8ad 1000 	strh.w	r1, [sp]
 8010872:	f10a 31ff 	add.w	r1, sl, #4294967295
 8010876:	440a      	add	r2, r1
 8010878:	f8ad 3002 	strh.w	r3, [sp, #2]
 801087c:	fa1f fb88 	uxth.w	fp, r8
 8010880:	3b01      	subs	r3, #1
 8010882:	445b      	add	r3, fp
 8010884:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010888:	4620      	mov	r0, r4
 801088a:	4631      	mov	r1, r6
 801088c:	466a      	mov	r2, sp
 801088e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010892:	f000 fc0d 	bl	80110b0 <GUI__DispLine>
 8010896:	682b      	ldr	r3, [r5, #0]
 8010898:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801089c:	849a      	strh	r2, [r3, #36]	; 0x24
 801089e:	4620      	mov	r0, r4
 80108a0:	4631      	mov	r1, r6
 80108a2:	f7fe fdc5 	bl	800f430 <GUI_UC__NumChars2NumBytes>
 80108a6:	5c23      	ldrb	r3, [r4, r0]
 80108a8:	2b0a      	cmp	r3, #10
 80108aa:	eb04 0200 	add.w	r2, r4, r0
 80108ae:	d001      	beq.n	80108b4 <GUI_DispString+0xb0>
 80108b0:	2b0d      	cmp	r3, #13
 80108b2:	d112      	bne.n	80108da <GUI_DispString+0xd6>
 80108b4:	682b      	ldr	r3, [r5, #0]
 80108b6:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 80108b8:	f001 0103 	and.w	r1, r1, #3
 80108bc:	3901      	subs	r1, #1
 80108be:	2901      	cmp	r1, #1
 80108c0:	bf8a      	itet	hi
 80108c2:	8c19      	ldrhhi	r1, [r3, #32]
 80108c4:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 80108c8:	8459      	strhhi	r1, [r3, #34]	; 0x22
 80108ca:	7811      	ldrb	r1, [r2, #0]
 80108cc:	290a      	cmp	r1, #10
 80108ce:	d10b      	bne.n	80108e8 <GUI_DispString+0xe4>
 80108d0:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 80108d2:	448b      	add	fp, r1
 80108d4:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 80108d8:	e006      	b.n	80108e8 <GUI_DispString+0xe4>
 80108da:	4b0b      	ldr	r3, [pc, #44]	; (8010908 <GUI_DispString+0x104>)
 80108dc:	f8bd 0000 	ldrh.w	r0, [sp]
 80108e0:	681b      	ldr	r3, [r3, #0]
 80108e2:	4482      	add	sl, r0
 80108e4:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 80108e8:	7813      	ldrb	r3, [r2, #0]
 80108ea:	b943      	cbnz	r3, 80108fe <GUI_DispString+0xfa>
 80108ec:	682b      	ldr	r3, [r5, #0]
 80108ee:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 80108f0:	4417      	add	r7, r2
 80108f2:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80108f4:	849f      	strh	r7, [r3, #36]	; 0x24
 80108f6:	f022 0203 	bic.w	r2, r2, #3
 80108fa:	859a      	strh	r2, [r3, #44]	; 0x2c
 80108fc:	e001      	b.n	8010902 <GUI_DispString+0xfe>
 80108fe:	1c54      	adds	r4, r2, #1
 8010900:	e793      	b.n	801082a <GUI_DispString+0x26>
 8010902:	b003      	add	sp, #12
 8010904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010908:	2000016c 	.word	0x2000016c

0801090c <GUI_DEVICE__GetpDriver>:
 801090c:	2801      	cmp	r0, #1
 801090e:	dc09      	bgt.n	8010924 <GUI_DEVICE__GetpDriver+0x18>
 8010910:	4b05      	ldr	r3, [pc, #20]	; (8010928 <GUI_DEVICE__GetpDriver+0x1c>)
 8010912:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8010916:	b120      	cbz	r0, 8010922 <GUI_DEVICE__GetpDriver+0x16>
 8010918:	68c3      	ldr	r3, [r0, #12]
 801091a:	681b      	ldr	r3, [r3, #0]
 801091c:	b11b      	cbz	r3, 8010926 <GUI_DEVICE__GetpDriver+0x1a>
 801091e:	6800      	ldr	r0, [r0, #0]
 8010920:	e7f9      	b.n	8010916 <GUI_DEVICE__GetpDriver+0xa>
 8010922:	4770      	bx	lr
 8010924:	2000      	movs	r0, #0
 8010926:	4770      	bx	lr
 8010928:	200199ec 	.word	0x200199ec

0801092c <GUI_DEVICE_Delete>:
 801092c:	f000 bd34 	b.w	8011398 <GUI_ALLOC_FreeFixedBlock>

08010930 <GUI_DEVICE_Create>:
 8010930:	2b01      	cmp	r3, #1
 8010932:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010934:	4606      	mov	r6, r0
 8010936:	460d      	mov	r5, r1
 8010938:	4617      	mov	r7, r2
 801093a:	461c      	mov	r4, r3
 801093c:	dd01      	ble.n	8010942 <GUI_DEVICE_Create+0x12>
 801093e:	2000      	movs	r0, #0
 8010940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010942:	201c      	movs	r0, #28
 8010944:	f000 fe94 	bl	8011670 <GUI_ALLOC_GetFixedBlock>
 8010948:	2800      	cmp	r0, #0
 801094a:	d0f8      	beq.n	801093e <GUI_DEVICE_Create+0xe>
 801094c:	b10d      	cbz	r5, 8010952 <GUI_DEVICE_Create+0x22>
 801094e:	6105      	str	r5, [r0, #16]
 8010950:	e009      	b.n	8010966 <GUI_DEVICE_Create+0x36>
 8010952:	4b09      	ldr	r3, [pc, #36]	; (8010978 <GUI_DEVICE_Create+0x48>)
 8010954:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 8010958:	b129      	cbz	r1, 8010966 <GUI_DEVICE_Create+0x36>
 801095a:	680b      	ldr	r3, [r1, #0]
 801095c:	b10b      	cbz	r3, 8010962 <GUI_DEVICE_Create+0x32>
 801095e:	4619      	mov	r1, r3
 8010960:	e7fb      	b.n	801095a <GUI_DEVICE_Create+0x2a>
 8010962:	690b      	ldr	r3, [r1, #16]
 8010964:	6103      	str	r3, [r0, #16]
 8010966:	2300      	movs	r3, #0
 8010968:	6083      	str	r3, [r0, #8]
 801096a:	6184      	str	r4, [r0, #24]
 801096c:	8287      	strh	r7, [r0, #20]
 801096e:	60c6      	str	r6, [r0, #12]
 8010970:	6003      	str	r3, [r0, #0]
 8010972:	6043      	str	r3, [r0, #4]
 8010974:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010976:	bf00      	nop
 8010978:	200199ec 	.word	0x200199ec

0801097c <GUI_DEVICE_Unlink>:
 801097c:	4b09      	ldr	r3, [pc, #36]	; (80109a4 <GUI_DEVICE_Unlink+0x28>)
 801097e:	6982      	ldr	r2, [r0, #24]
 8010980:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8010984:	4281      	cmp	r1, r0
 8010986:	bf04      	itt	eq
 8010988:	6801      	ldreq	r1, [r0, #0]
 801098a:	f843 1022 	streq.w	r1, [r3, r2, lsl #2]
 801098e:	6843      	ldr	r3, [r0, #4]
 8010990:	b10b      	cbz	r3, 8010996 <GUI_DEVICE_Unlink+0x1a>
 8010992:	6802      	ldr	r2, [r0, #0]
 8010994:	601a      	str	r2, [r3, #0]
 8010996:	6802      	ldr	r2, [r0, #0]
 8010998:	b102      	cbz	r2, 801099c <GUI_DEVICE_Unlink+0x20>
 801099a:	6053      	str	r3, [r2, #4]
 801099c:	2300      	movs	r3, #0
 801099e:	6003      	str	r3, [r0, #0]
 80109a0:	6043      	str	r3, [r0, #4]
 80109a2:	4770      	bx	lr
 80109a4:	200199ec 	.word	0x200199ec

080109a8 <GUI_DEVICE_Link>:
 80109a8:	b570      	push	{r4, r5, r6, lr}
 80109aa:	b338      	cbz	r0, 80109fc <GUI_DEVICE_Link+0x54>
 80109ac:	6982      	ldr	r2, [r0, #24]
 80109ae:	2a01      	cmp	r2, #1
 80109b0:	dc24      	bgt.n	80109fc <GUI_DEVICE_Link+0x54>
 80109b2:	4919      	ldr	r1, [pc, #100]	; (8010a18 <GUI_DEVICE_Link+0x70>)
 80109b4:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 80109b8:	460d      	mov	r5, r1
 80109ba:	b913      	cbnz	r3, 80109c2 <GUI_DEVICE_Link+0x1a>
 80109bc:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 80109c0:	e01a      	b.n	80109f8 <GUI_DEVICE_Link+0x50>
 80109c2:	6859      	ldr	r1, [r3, #4]
 80109c4:	b109      	cbz	r1, 80109ca <GUI_DEVICE_Link+0x22>
 80109c6:	460b      	mov	r3, r1
 80109c8:	e7fb      	b.n	80109c2 <GUI_DEVICE_Link+0x1a>
 80109ca:	68c1      	ldr	r1, [r0, #12]
 80109cc:	680e      	ldr	r6, [r1, #0]
 80109ce:	68d9      	ldr	r1, [r3, #12]
 80109d0:	680c      	ldr	r4, [r1, #0]
 80109d2:	42b4      	cmp	r4, r6
 80109d4:	dd03      	ble.n	80109de <GUI_DEVICE_Link+0x36>
 80109d6:	681b      	ldr	r3, [r3, #0]
 80109d8:	2b00      	cmp	r3, #0
 80109da:	d1f8      	bne.n	80109ce <GUI_DEVICE_Link+0x26>
 80109dc:	e00e      	b.n	80109fc <GUI_DEVICE_Link+0x54>
 80109de:	d102      	bne.n	80109e6 <GUI_DEVICE_Link+0x3e>
 80109e0:	8a81      	ldrh	r1, [r0, #20]
 80109e2:	2901      	cmp	r1, #1
 80109e4:	d011      	beq.n	8010a0a <GUI_DEVICE_Link+0x62>
 80109e6:	6859      	ldr	r1, [r3, #4]
 80109e8:	b199      	cbz	r1, 8010a12 <GUI_DEVICE_Link+0x6a>
 80109ea:	6008      	str	r0, [r1, #0]
 80109ec:	6041      	str	r1, [r0, #4]
 80109ee:	6058      	str	r0, [r3, #4]
 80109f0:	4298      	cmp	r0, r3
 80109f2:	bf08      	it	eq
 80109f4:	2300      	moveq	r3, #0
 80109f6:	6003      	str	r3, [r0, #0]
 80109f8:	2000      	movs	r0, #0
 80109fa:	bd70      	pop	{r4, r5, r6, pc}
 80109fc:	2001      	movs	r0, #1
 80109fe:	bd70      	pop	{r4, r5, r6, pc}
 8010a00:	68cb      	ldr	r3, [r1, #12]
 8010a02:	681b      	ldr	r3, [r3, #0]
 8010a04:	42a3      	cmp	r3, r4
 8010a06:	460b      	mov	r3, r1
 8010a08:	dbed      	blt.n	80109e6 <GUI_DEVICE_Link+0x3e>
 8010a0a:	6819      	ldr	r1, [r3, #0]
 8010a0c:	2900      	cmp	r1, #0
 8010a0e:	d1f7      	bne.n	8010a00 <GUI_DEVICE_Link+0x58>
 8010a10:	e7e9      	b.n	80109e6 <GUI_DEVICE_Link+0x3e>
 8010a12:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 8010a16:	e7ea      	b.n	80109ee <GUI_DEVICE_Link+0x46>
 8010a18:	200199ec 	.word	0x200199ec

08010a1c <GUI_DEVICE_CreateAndLink>:
 8010a1c:	b538      	push	{r3, r4, r5, lr}
 8010a1e:	461d      	mov	r5, r3
 8010a20:	f7ff ff86 	bl	8010930 <GUI_DEVICE_Create>
 8010a24:	4604      	mov	r4, r0
 8010a26:	b148      	cbz	r0, 8010a3c <GUI_DEVICE_CreateAndLink+0x20>
 8010a28:	f7ff ffbe 	bl	80109a8 <GUI_DEVICE_Link>
 8010a2c:	68e3      	ldr	r3, [r4, #12]
 8010a2e:	681b      	ldr	r3, [r3, #0]
 8010a30:	b923      	cbnz	r3, 8010a3c <GUI_DEVICE_CreateAndLink+0x20>
 8010a32:	4b03      	ldr	r3, [pc, #12]	; (8010a40 <GUI_DEVICE_CreateAndLink+0x24>)
 8010a34:	3516      	adds	r5, #22
 8010a36:	681b      	ldr	r3, [r3, #0]
 8010a38:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 8010a3c:	4620      	mov	r0, r4
 8010a3e:	bd38      	pop	{r3, r4, r5, pc}
 8010a40:	2000016c 	.word	0x2000016c

08010a44 <_OnExit>:
 8010a44:	b510      	push	{r4, lr}
 8010a46:	4b07      	ldr	r3, [pc, #28]	; (8010a64 <_OnExit+0x20>)
 8010a48:	4807      	ldr	r0, [pc, #28]	; (8010a68 <_OnExit+0x24>)
 8010a4a:	2400      	movs	r4, #0
 8010a4c:	4621      	mov	r1, r4
 8010a4e:	2270      	movs	r2, #112	; 0x70
 8010a50:	601c      	str	r4, [r3, #0]
 8010a52:	f7fe f90f 	bl	800ec74 <GUI__memset>
 8010a56:	4621      	mov	r1, r4
 8010a58:	4804      	ldr	r0, [pc, #16]	; (8010a6c <_OnExit+0x28>)
 8010a5a:	2208      	movs	r2, #8
 8010a5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a60:	f7fe b908 	b.w	800ec74 <GUI__memset>
 8010a64:	2001968c 	.word	0x2001968c
 8010a68:	20019614 	.word	0x20019614
 8010a6c:	200199ec 	.word	0x200199ec

08010a70 <_InitContext>:
 8010a70:	b538      	push	{r3, r4, r5, lr}
 8010a72:	4d19      	ldr	r5, [pc, #100]	; (8010ad8 <_InitContext+0x68>)
 8010a74:	682b      	ldr	r3, [r5, #0]
 8010a76:	1d1a      	adds	r2, r3, #4
 8010a78:	63da      	str	r2, [r3, #60]	; 0x3c
 8010a7a:	f103 0208 	add.w	r2, r3, #8
 8010a7e:	639b      	str	r3, [r3, #56]	; 0x38
 8010a80:	641b      	str	r3, [r3, #64]	; 0x40
 8010a82:	6142      	str	r2, [r0, #20]
 8010a84:	7c5a      	ldrb	r2, [r3, #17]
 8010a86:	4b15      	ldr	r3, [pc, #84]	; (8010adc <_InitContext+0x6c>)
 8010a88:	4604      	mov	r4, r0
 8010a8a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8010a8e:	68c3      	ldr	r3, [r0, #12]
 8010a90:	f104 0108 	add.w	r1, r4, #8
 8010a94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010a96:	4798      	blx	r3
 8010a98:	4b11      	ldr	r3, [pc, #68]	; (8010ae0 <_InitContext+0x70>)
 8010a9a:	6663      	str	r3, [r4, #100]	; 0x64
 8010a9c:	4b11      	ldr	r3, [pc, #68]	; (8010ae4 <_InitContext+0x74>)
 8010a9e:	681b      	ldr	r3, [r3, #0]
 8010aa0:	61e3      	str	r3, [r4, #28]
 8010aa2:	682b      	ldr	r3, [r5, #0]
 8010aa4:	3308      	adds	r3, #8
 8010aa6:	6163      	str	r3, [r4, #20]
 8010aa8:	2301      	movs	r3, #1
 8010aaa:	7623      	strb	r3, [r4, #24]
 8010aac:	f7fa f848 	bl	800ab40 <WM_GetDesktopWindow>
 8010ab0:	2303      	movs	r3, #3
 8010ab2:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8010ab6:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8010aba:	6323      	str	r3, [r4, #48]	; 0x30
 8010abc:	6363      	str	r3, [r4, #52]	; 0x34
 8010abe:	64a0      	str	r0, [r4, #72]	; 0x48
 8010ac0:	2000      	movs	r0, #0
 8010ac2:	f7fe f899 	bl	800ebf8 <LCD_SetBkColor>
 8010ac6:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8010aca:	f7fe f89d 	bl	800ec08 <LCD_SetColor>
 8010ace:	4b06      	ldr	r3, [pc, #24]	; (8010ae8 <_InitContext+0x78>)
 8010ad0:	4a06      	ldr	r2, [pc, #24]	; (8010aec <_InitContext+0x7c>)
 8010ad2:	601a      	str	r2, [r3, #0]
 8010ad4:	bd38      	pop	{r3, r4, r5, pc}
 8010ad6:	bf00      	nop
 8010ad8:	2000016c 	.word	0x2000016c
 8010adc:	200199ec 	.word	0x200199ec
 8010ae0:	0801f28c 	.word	0x0801f28c
 8010ae4:	20000170 	.word	0x20000170
 8010ae8:	200199e4 	.word	0x200199e4
 8010aec:	0801fe90 	.word	0x0801fe90

08010af0 <GUI_SetDefaultFont>:
 8010af0:	4b01      	ldr	r3, [pc, #4]	; (8010af8 <GUI_SetDefaultFont+0x8>)
 8010af2:	6018      	str	r0, [r3, #0]
 8010af4:	4770      	bx	lr
 8010af6:	bf00      	nop
 8010af8:	20000170 	.word	0x20000170

08010afc <GUI_ClearRect>:
 8010afc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010b00:	4607      	mov	r7, r0
 8010b02:	2004      	movs	r0, #4
 8010b04:	469a      	mov	sl, r3
 8010b06:	460e      	mov	r6, r1
 8010b08:	4691      	mov	r9, r2
 8010b0a:	f7fd fd2d 	bl	800e568 <LCD_SetDrawMode>
 8010b0e:	4b13      	ldr	r3, [pc, #76]	; (8010b5c <GUI_ClearRect+0x60>)
 8010b10:	681c      	ldr	r4, [r3, #0]
 8010b12:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8010b14:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8010b16:	442f      	add	r7, r5
 8010b18:	4426      	add	r6, r4
 8010b1a:	4680      	mov	r8, r0
 8010b1c:	444d      	add	r5, r9
 8010b1e:	4454      	add	r4, sl
 8010b20:	4668      	mov	r0, sp
 8010b22:	f8ad 7000 	strh.w	r7, [sp]
 8010b26:	f8ad 5004 	strh.w	r5, [sp, #4]
 8010b2a:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010b2e:	f8ad 4006 	strh.w	r4, [sp, #6]
 8010b32:	f7fa ffcf 	bl	800bad4 <WM__InitIVRSearch>
 8010b36:	b928      	cbnz	r0, 8010b44 <GUI_ClearRect+0x48>
 8010b38:	4640      	mov	r0, r8
 8010b3a:	f7fd fd15 	bl	800e568 <LCD_SetDrawMode>
 8010b3e:	b002      	add	sp, #8
 8010b40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010b44:	4638      	mov	r0, r7
 8010b46:	4631      	mov	r1, r6
 8010b48:	462a      	mov	r2, r5
 8010b4a:	4623      	mov	r3, r4
 8010b4c:	f7fd fd8e 	bl	800e66c <LCD_FillRect>
 8010b50:	f7fa fefe 	bl	800b950 <WM__GetNextIVR>
 8010b54:	2800      	cmp	r0, #0
 8010b56:	d1f5      	bne.n	8010b44 <GUI_ClearRect+0x48>
 8010b58:	e7ee      	b.n	8010b38 <GUI_ClearRect+0x3c>
 8010b5a:	bf00      	nop
 8010b5c:	2000016c 	.word	0x2000016c

08010b60 <GUI_Clear>:
 8010b60:	b510      	push	{r4, lr}
 8010b62:	2000      	movs	r0, #0
 8010b64:	4601      	mov	r1, r0
 8010b66:	f7ff fc8b 	bl	8010480 <GUI_GotoXY>
 8010b6a:	4804      	ldr	r0, [pc, #16]	; (8010b7c <GUI_Clear+0x1c>)
 8010b6c:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8010b70:	4601      	mov	r1, r0
 8010b72:	4613      	mov	r3, r2
 8010b74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b78:	f7ff bfc0 	b.w	8010afc <GUI_ClearRect>
 8010b7c:	ffffc001 	.word	0xffffc001

08010b80 <GUI__RegisterExit>:
 8010b80:	b480      	push	{r7}
 8010b82:	b083      	sub	sp, #12
 8010b84:	af00      	add	r7, sp, #0
 8010b86:	6078      	str	r0, [r7, #4]
 8010b88:	4b05      	ldr	r3, [pc, #20]	; (8010ba0 <GUI__RegisterExit+0x20>)
 8010b8a:	681a      	ldr	r2, [r3, #0]
 8010b8c:	687b      	ldr	r3, [r7, #4]
 8010b8e:	605a      	str	r2, [r3, #4]
 8010b90:	4b03      	ldr	r3, [pc, #12]	; (8010ba0 <GUI__RegisterExit+0x20>)
 8010b92:	687a      	ldr	r2, [r7, #4]
 8010b94:	601a      	str	r2, [r3, #0]
 8010b96:	370c      	adds	r7, #12
 8010b98:	46bd      	mov	sp, r7
 8010b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b9e:	4770      	bx	lr
 8010ba0:	20019610 	.word	0x20019610

08010ba4 <GUI__Config>:
 8010ba4:	b508      	push	{r3, lr}
 8010ba6:	4b08      	ldr	r3, [pc, #32]	; (8010bc8 <GUI__Config+0x24>)
 8010ba8:	681a      	ldr	r2, [r3, #0]
 8010baa:	b962      	cbnz	r2, 8010bc6 <GUI__Config+0x22>
 8010bac:	2201      	movs	r2, #1
 8010bae:	601a      	str	r2, [r3, #0]
 8010bb0:	f7f6 f8e0 	bl	8006d74 <GUI_X_Config>
 8010bb4:	f7f6 f90c 	bl	8006dd0 <LCD_X_Config>
 8010bb8:	4804      	ldr	r0, [pc, #16]	; (8010bcc <GUI__Config+0x28>)
 8010bba:	4b05      	ldr	r3, [pc, #20]	; (8010bd0 <GUI__Config+0x2c>)
 8010bbc:	6003      	str	r3, [r0, #0]
 8010bbe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010bc2:	f7ff bfdd 	b.w	8010b80 <GUI__RegisterExit>
 8010bc6:	bd08      	pop	{r3, pc}
 8010bc8:	2001968c 	.word	0x2001968c
 8010bcc:	20019684 	.word	0x20019684
 8010bd0:	08010a45 	.word	0x08010a45

08010bd4 <GUI_Init>:
 8010bd4:	b590      	push	{r4, r7, lr}
 8010bd6:	b083      	sub	sp, #12
 8010bd8:	af00      	add	r7, sp, #0
 8010bda:	4b20      	ldr	r3, [pc, #128]	; (8010c5c <GUI_Init+0x88>)
 8010bdc:	4a1f      	ldr	r2, [pc, #124]	; (8010c5c <GUI_Init+0x88>)
 8010bde:	6812      	ldr	r2, [r2, #0]
 8010be0:	f022 0201 	bic.w	r2, r2, #1
 8010be4:	601a      	str	r2, [r3, #0]
 8010be6:	4b1e      	ldr	r3, [pc, #120]	; (8010c60 <GUI_Init+0x8c>)
 8010be8:	2201      	movs	r2, #1
 8010bea:	601a      	str	r2, [r3, #0]
 8010bec:	4b1d      	ldr	r3, [pc, #116]	; (8010c64 <GUI_Init+0x90>)
 8010bee:	4a1e      	ldr	r2, [pc, #120]	; (8010c68 <GUI_Init+0x94>)
 8010bf0:	601a      	str	r2, [r3, #0]
 8010bf2:	4b1c      	ldr	r3, [pc, #112]	; (8010c64 <GUI_Init+0x90>)
 8010bf4:	681a      	ldr	r2, [r3, #0]
 8010bf6:	4b1d      	ldr	r3, [pc, #116]	; (8010c6c <GUI_Init+0x98>)
 8010bf8:	429a      	cmp	r2, r3
 8010bfa:	d000      	beq.n	8010bfe <GUI_Init+0x2a>
 8010bfc:	e7fe      	b.n	8010bfc <GUI_Init+0x28>
 8010bfe:	f7ff ffd1 	bl	8010ba4 <GUI__Config>
 8010c02:	4b1b      	ldr	r3, [pc, #108]	; (8010c70 <GUI_Init+0x9c>)
 8010c04:	222e      	movs	r2, #46	; 0x2e
 8010c06:	701a      	strb	r2, [r3, #0]
 8010c08:	f7f6 f8d4 	bl	8006db4 <GUI_X_Init>
 8010c0c:	4819      	ldr	r0, [pc, #100]	; (8010c74 <GUI_Init+0xa0>)
 8010c0e:	f7ff ff2f 	bl	8010a70 <_InitContext>
 8010c12:	f7fd ff4f 	bl	800eab4 <emWin_LCD_Init>
 8010c16:	6078      	str	r0, [r7, #4]
 8010c18:	f7fd fc30 	bl	800e47c <LCD_GetXSizeDisplay>
 8010c1c:	4603      	mov	r3, r0
 8010c1e:	2b00      	cmp	r3, #0
 8010c20:	d004      	beq.n	8010c2c <GUI_Init+0x58>
 8010c22:	f7fd fc31 	bl	800e488 <LCD_GetYSizeDisplay>
 8010c26:	4603      	mov	r3, r0
 8010c28:	2b00      	cmp	r3, #0
 8010c2a:	d109      	bne.n	8010c40 <GUI_Init+0x6c>
 8010c2c:	f7fd fc12 	bl	800e454 <LCD_GetXSizeMax>
 8010c30:	4604      	mov	r4, r0
 8010c32:	f7fd fc12 	bl	800e45a <LCD_GetYSizeMax>
 8010c36:	4603      	mov	r3, r0
 8010c38:	4620      	mov	r0, r4
 8010c3a:	4619      	mov	r1, r3
 8010c3c:	f7fd fc14 	bl	800e468 <LCD_SetDisplaySize>
 8010c40:	2000      	movs	r0, #0
 8010c42:	2100      	movs	r1, #0
 8010c44:	f006 f85a 	bl	8016cfc <GUI_SetOrg>
 8010c48:	f7fb f982 	bl	800bf50 <WM_Init>
 8010c4c:	4b0a      	ldr	r3, [pc, #40]	; (8010c78 <GUI_Init+0xa4>)
 8010c4e:	2201      	movs	r2, #1
 8010c50:	701a      	strb	r2, [r3, #0]
 8010c52:	687b      	ldr	r3, [r7, #4]
 8010c54:	4618      	mov	r0, r3
 8010c56:	370c      	adds	r7, #12
 8010c58:	46bd      	mov	sp, r7
 8010c5a:	bd90      	pop	{r4, r7, pc}
 8010c5c:	e0002000 	.word	0xe0002000
 8010c60:	40023008 	.word	0x40023008
 8010c64:	40023000 	.word	0x40023000
 8010c68:	f407a5c2 	.word	0xf407a5c2
 8010c6c:	b5e8b5cd 	.word	0xb5e8b5cd
 8010c70:	200199be 	.word	0x200199be
 8010c74:	20019614 	.word	0x20019614
 8010c78:	200199dc 	.word	0x200199dc

08010c7c <GUIPROP__FindChar>:
 8010c7c:	b138      	cbz	r0, 8010c8e <GUIPROP__FindChar+0x12>
 8010c7e:	8803      	ldrh	r3, [r0, #0]
 8010c80:	428b      	cmp	r3, r1
 8010c82:	d802      	bhi.n	8010c8a <GUIPROP__FindChar+0xe>
 8010c84:	8843      	ldrh	r3, [r0, #2]
 8010c86:	428b      	cmp	r3, r1
 8010c88:	d201      	bcs.n	8010c8e <GUIPROP__FindChar+0x12>
 8010c8a:	6880      	ldr	r0, [r0, #8]
 8010c8c:	e7f6      	b.n	8010c7c <GUIPROP__FindChar>
 8010c8e:	4770      	bx	lr

08010c90 <GUIPROP_DispChar>:
 8010c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c94:	4c38      	ldr	r4, [pc, #224]	; (8010d78 <GUIPROP_DispChar+0xe8>)
 8010c96:	6823      	ldr	r3, [r4, #0]
 8010c98:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 8010c9c:	69db      	ldr	r3, [r3, #28]
 8010c9e:	4605      	mov	r5, r0
 8010ca0:	b089      	sub	sp, #36	; 0x24
 8010ca2:	69d8      	ldr	r0, [r3, #28]
 8010ca4:	4629      	mov	r1, r5
 8010ca6:	f7ff ffe9 	bl	8010c7c <GUIPROP__FindChar>
 8010caa:	2800      	cmp	r0, #0
 8010cac:	d061      	beq.n	8010d72 <GUIPROP_DispChar+0xe2>
 8010cae:	f8b0 8000 	ldrh.w	r8, [r0]
 8010cb2:	6847      	ldr	r7, [r0, #4]
 8010cb4:	ebc8 0805 	rsb	r8, r8, r5
 8010cb8:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 8010cbc:	4648      	mov	r0, r9
 8010cbe:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010cc2:	f7fd fc51 	bl	800e568 <LCD_SetDrawMode>
 8010cc6:	6825      	ldr	r5, [r4, #0]
 8010cc8:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 8010ccc:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 8010cd0:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 8010cd4:	f89e c01a 	ldrb.w	ip, [lr, #26]
 8010cd8:	f89e 3018 	ldrb.w	r3, [lr, #24]
 8010cdc:	9306      	str	r3, [sp, #24]
 8010cde:	4682      	mov	sl, r0
 8010ce0:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 8010ce4:	f8cd c000 	str.w	ip, [sp]
 8010ce8:	f89e e01b 	ldrb.w	lr, [lr, #27]
 8010cec:	f8cd e004 	str.w	lr, [sp, #4]
 8010cf0:	f04f 0e01 	mov.w	lr, #1
 8010cf4:	f8cd b00c 	str.w	fp, [sp, #12]
 8010cf8:	f8cd e008 	str.w	lr, [sp, #8]
 8010cfc:	6873      	ldr	r3, [r6, #4]
 8010cfe:	9304      	str	r3, [sp, #16]
 8010d00:	6bad      	ldr	r5, [r5, #56]	; 0x38
 8010d02:	9b06      	ldr	r3, [sp, #24]
 8010d04:	9505      	str	r5, [sp, #20]
 8010d06:	f7fd fdb9 	bl	800e87c <LCD_DrawBitmap>
 8010d0a:	6823      	ldr	r3, [r4, #0]
 8010d0c:	69da      	ldr	r2, [r3, #28]
 8010d0e:	f892 b019 	ldrb.w	fp, [r2, #25]
 8010d12:	7e11      	ldrb	r1, [r2, #24]
 8010d14:	458b      	cmp	fp, r1
 8010d16:	d920      	bls.n	8010d5a <GUIPROP_DispChar+0xca>
 8010d18:	f1b9 0f02 	cmp.w	r9, #2
 8010d1c:	7ed5      	ldrb	r5, [r2, #27]
 8010d1e:	d01c      	beq.n	8010d5a <GUIPROP_DispChar+0xca>
 8010d20:	9107      	str	r1, [sp, #28]
 8010d22:	f006 f828 	bl	8016d76 <GUI_GetColor>
 8010d26:	4681      	mov	r9, r0
 8010d28:	f006 f81e 	bl	8016d68 <GUI_GetBkColor>
 8010d2c:	f7ff f958 	bl	800ffe0 <GUI_SetColor>
 8010d30:	6824      	ldr	r4, [r4, #0]
 8010d32:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 8010d36:	69e2      	ldr	r2, [r4, #28]
 8010d38:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 8010d3c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8010d40:	7ed2      	ldrb	r2, [r2, #27]
 8010d42:	9907      	ldr	r1, [sp, #28]
 8010d44:	fb07 0202 	mla	r2, r7, r2, r0
 8010d48:	fb01 3105 	mla	r1, r1, r5, r3
 8010d4c:	fb0b 3305 	mla	r3, fp, r5, r3
 8010d50:	f7fd fc8c 	bl	800e66c <LCD_FillRect>
 8010d54:	4648      	mov	r0, r9
 8010d56:	f7ff f943 	bl	800ffe0 <GUI_SetColor>
 8010d5a:	4650      	mov	r0, sl
 8010d5c:	f7fd fc04 	bl	800e568 <LCD_SetDrawMode>
 8010d60:	4b05      	ldr	r3, [pc, #20]	; (8010d78 <GUIPROP_DispChar+0xe8>)
 8010d62:	681b      	ldr	r3, [r3, #0]
 8010d64:	69da      	ldr	r2, [r3, #28]
 8010d66:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8010d68:	7e90      	ldrb	r0, [r2, #26]
 8010d6a:	7872      	ldrb	r2, [r6, #1]
 8010d6c:	fb00 1202 	mla	r2, r0, r2, r1
 8010d70:	845a      	strh	r2, [r3, #34]	; 0x22
 8010d72:	b009      	add	sp, #36	; 0x24
 8010d74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d78:	2000016c 	.word	0x2000016c

08010d7c <GUIPROP_GetCharDistX>:
 8010d7c:	4b0d      	ldr	r3, [pc, #52]	; (8010db4 <GUIPROP_GetCharDistX+0x38>)
 8010d7e:	b570      	push	{r4, r5, r6, lr}
 8010d80:	681b      	ldr	r3, [r3, #0]
 8010d82:	69dd      	ldr	r5, [r3, #28]
 8010d84:	4606      	mov	r6, r0
 8010d86:	460c      	mov	r4, r1
 8010d88:	69e8      	ldr	r0, [r5, #28]
 8010d8a:	4631      	mov	r1, r6
 8010d8c:	f7ff ff76 	bl	8010c7c <GUIPROP__FindChar>
 8010d90:	b170      	cbz	r0, 8010db0 <GUIPROP_GetCharDistX+0x34>
 8010d92:	8803      	ldrh	r3, [r0, #0]
 8010d94:	6842      	ldr	r2, [r0, #4]
 8010d96:	1af6      	subs	r6, r6, r3
 8010d98:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 8010d9c:	7858      	ldrb	r0, [r3, #1]
 8010d9e:	7eab      	ldrb	r3, [r5, #26]
 8010da0:	fb10 f003 	smulbb	r0, r0, r3
 8010da4:	b124      	cbz	r4, 8010db0 <GUIPROP_GetCharDistX+0x34>
 8010da6:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 8010daa:	fb12 f303 	smulbb	r3, r2, r3
 8010dae:	6023      	str	r3, [r4, #0]
 8010db0:	bd70      	pop	{r4, r5, r6, pc}
 8010db2:	bf00      	nop
 8010db4:	2000016c 	.word	0x2000016c

08010db8 <GUIPROP_GetFontInfo>:
 8010db8:	2301      	movs	r3, #1
 8010dba:	800b      	strh	r3, [r1, #0]
 8010dbc:	4770      	bx	lr

08010dbe <GUIPROP_IsInFont>:
 8010dbe:	b508      	push	{r3, lr}
 8010dc0:	69c0      	ldr	r0, [r0, #28]
 8010dc2:	f7ff ff5b 	bl	8010c7c <GUIPROP__FindChar>
 8010dc6:	3000      	adds	r0, #0
 8010dc8:	bf18      	it	ne
 8010dca:	2001      	movne	r0, #1
 8010dcc:	bd08      	pop	{r3, pc}
	...

08010dd0 <GUIMONO_DispChar>:
 8010dd0:	4b52      	ldr	r3, [pc, #328]	; (8010f1c <GUIMONO_DispChar+0x14c>)
 8010dd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010dd6:	681b      	ldr	r3, [r3, #0]
 8010dd8:	69d9      	ldr	r1, [r3, #28]
 8010dda:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 8010ddc:	69cc      	ldr	r4, [r1, #28]
 8010dde:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 8010de0:	89a2      	ldrh	r2, [r4, #12]
 8010de2:	4290      	cmp	r0, r2
 8010de4:	b08b      	sub	sp, #44	; 0x2c
 8010de6:	d308      	bcc.n	8010dfa <GUIMONO_DispChar+0x2a>
 8010de8:	89e6      	ldrh	r6, [r4, #14]
 8010dea:	4286      	cmp	r6, r0
 8010dec:	d305      	bcc.n	8010dfa <GUIMONO_DispChar+0x2a>
 8010dee:	f8d4 9000 	ldr.w	r9, [r4]
 8010df2:	1a82      	subs	r2, r0, r2
 8010df4:	f04f 3bff 	mov.w	fp, #4294967295
 8010df8:	e015      	b.n	8010e26 <GUIMONO_DispChar+0x56>
 8010dfa:	68a2      	ldr	r2, [r4, #8]
 8010dfc:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8010e00:	2a00      	cmp	r2, #0
 8010e02:	f000 8081 	beq.w	8010f08 <GUIMONO_DispChar+0x138>
 8010e06:	8816      	ldrh	r6, [r2, #0]
 8010e08:	42b0      	cmp	r0, r6
 8010e0a:	d37d      	bcc.n	8010f08 <GUIMONO_DispChar+0x138>
 8010e0c:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 8010e10:	4584      	cmp	ip, r0
 8010e12:	d379      	bcc.n	8010f08 <GUIMONO_DispChar+0x138>
 8010e14:	6852      	ldr	r2, [r2, #4]
 8010e16:	1b80      	subs	r0, r0, r6
 8010e18:	b280      	uxth	r0, r0
 8010e1a:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 8010e1e:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 8010e22:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 8010e26:	1c50      	adds	r0, r2, #1
 8010e28:	d06e      	beq.n	8010f08 <GUIMONO_DispChar+0x138>
 8010e2a:	f891 8018 	ldrb.w	r8, [r1, #24]
 8010e2e:	7ca1      	ldrb	r1, [r4, #18]
 8010e30:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 8010e34:	7c26      	ldrb	r6, [r4, #16]
 8010e36:	9206      	str	r2, [sp, #24]
 8010e38:	fb18 f101 	smulbb	r1, r8, r1
 8010e3c:	9107      	str	r1, [sp, #28]
 8010e3e:	fa0f f18a 	sxth.w	r1, sl
 8010e42:	4608      	mov	r0, r1
 8010e44:	9108      	str	r1, [sp, #32]
 8010e46:	f7fd fb8f 	bl	800e568 <LCD_SetDrawMode>
 8010e4a:	4934      	ldr	r1, [pc, #208]	; (8010f1c <GUIMONO_DispChar+0x14c>)
 8010e4c:	9009      	str	r0, [sp, #36]	; 0x24
 8010e4e:	680b      	ldr	r3, [r1, #0]
 8010e50:	9a06      	ldr	r2, [sp, #24]
 8010e52:	69d9      	ldr	r1, [r3, #28]
 8010e54:	7e88      	ldrb	r0, [r1, #26]
 8010e56:	9000      	str	r0, [sp, #0]
 8010e58:	7ec9      	ldrb	r1, [r1, #27]
 8010e5a:	9101      	str	r1, [sp, #4]
 8010e5c:	2101      	movs	r1, #1
 8010e5e:	9102      	str	r1, [sp, #8]
 8010e60:	7ca1      	ldrb	r1, [r4, #18]
 8010e62:	9103      	str	r1, [sp, #12]
 8010e64:	9907      	ldr	r1, [sp, #28]
 8010e66:	fb01 9202 	mla	r2, r1, r2, r9
 8010e6a:	9204      	str	r2, [sp, #16]
 8010e6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010e6e:	9305      	str	r3, [sp, #20]
 8010e70:	b23f      	sxth	r7, r7
 8010e72:	b22d      	sxth	r5, r5
 8010e74:	4638      	mov	r0, r7
 8010e76:	4629      	mov	r1, r5
 8010e78:	4632      	mov	r2, r6
 8010e7a:	4643      	mov	r3, r8
 8010e7c:	f7fd fcfe 	bl	800e87c <LCD_DrawBitmap>
 8010e80:	f1bb 3fff 	cmp.w	fp, #4294967295
 8010e84:	d01b      	beq.n	8010ebe <GUIMONO_DispChar+0xee>
 8010e86:	f04a 0002 	orr.w	r0, sl, #2
 8010e8a:	b200      	sxth	r0, r0
 8010e8c:	f7fd fb6c 	bl	800e568 <LCD_SetDrawMode>
 8010e90:	4a22      	ldr	r2, [pc, #136]	; (8010f1c <GUIMONO_DispChar+0x14c>)
 8010e92:	6813      	ldr	r3, [r2, #0]
 8010e94:	69da      	ldr	r2, [r3, #28]
 8010e96:	7e91      	ldrb	r1, [r2, #26]
 8010e98:	9100      	str	r1, [sp, #0]
 8010e9a:	7ed2      	ldrb	r2, [r2, #27]
 8010e9c:	9201      	str	r2, [sp, #4]
 8010e9e:	2101      	movs	r1, #1
 8010ea0:	9102      	str	r1, [sp, #8]
 8010ea2:	9907      	ldr	r1, [sp, #28]
 8010ea4:	7ca2      	ldrb	r2, [r4, #18]
 8010ea6:	9203      	str	r2, [sp, #12]
 8010ea8:	fb01 920b 	mla	r2, r1, fp, r9
 8010eac:	9204      	str	r2, [sp, #16]
 8010eae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010eb0:	9305      	str	r3, [sp, #20]
 8010eb2:	4638      	mov	r0, r7
 8010eb4:	4629      	mov	r1, r5
 8010eb6:	4632      	mov	r2, r6
 8010eb8:	4643      	mov	r3, r8
 8010eba:	f7fd fcdf 	bl	800e87c <LCD_DrawBitmap>
 8010ebe:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8010f1c <GUIMONO_DispChar+0x14c>
 8010ec2:	f8d8 3000 	ldr.w	r3, [r8]
 8010ec6:	69db      	ldr	r3, [r3, #28]
 8010ec8:	7e5a      	ldrb	r2, [r3, #25]
 8010eca:	7e1b      	ldrb	r3, [r3, #24]
 8010ecc:	429a      	cmp	r2, r3
 8010ece:	d917      	bls.n	8010f00 <GUIMONO_DispChar+0x130>
 8010ed0:	9a08      	ldr	r2, [sp, #32]
 8010ed2:	2a02      	cmp	r2, #2
 8010ed4:	d014      	beq.n	8010f00 <GUIMONO_DispChar+0x130>
 8010ed6:	f08a 0004 	eor.w	r0, sl, #4
 8010eda:	b200      	sxth	r0, r0
 8010edc:	f7fd fb44 	bl	800e568 <LCD_SetDrawMode>
 8010ee0:	f8d8 3000 	ldr.w	r3, [r8]
 8010ee4:	69db      	ldr	r3, [r3, #28]
 8010ee6:	f893 e018 	ldrb.w	lr, [r3, #24]
 8010eea:	7ed9      	ldrb	r1, [r3, #27]
 8010eec:	7e9a      	ldrb	r2, [r3, #26]
 8010eee:	7e5b      	ldrb	r3, [r3, #25]
 8010ef0:	4638      	mov	r0, r7
 8010ef2:	fb0e 5101 	mla	r1, lr, r1, r5
 8010ef6:	fb06 7202 	mla	r2, r6, r2, r7
 8010efa:	442b      	add	r3, r5
 8010efc:	f7fd fbb6 	bl	800e66c <LCD_FillRect>
 8010f00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010f02:	b2d8      	uxtb	r0, r3
 8010f04:	f7fd fb30 	bl	800e568 <LCD_SetDrawMode>
 8010f08:	4b04      	ldr	r3, [pc, #16]	; (8010f1c <GUIMONO_DispChar+0x14c>)
 8010f0a:	7c61      	ldrb	r1, [r4, #17]
 8010f0c:	681b      	ldr	r3, [r3, #0]
 8010f0e:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 8010f10:	440a      	add	r2, r1
 8010f12:	845a      	strh	r2, [r3, #34]	; 0x22
 8010f14:	b00b      	add	sp, #44	; 0x2c
 8010f16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f1a:	bf00      	nop
 8010f1c:	2000016c 	.word	0x2000016c

08010f20 <GUIMONO_GetCharDistX>:
 8010f20:	4b04      	ldr	r3, [pc, #16]	; (8010f34 <GUIMONO_GetCharDistX+0x14>)
 8010f22:	681b      	ldr	r3, [r3, #0]
 8010f24:	69db      	ldr	r3, [r3, #28]
 8010f26:	69db      	ldr	r3, [r3, #28]
 8010f28:	b109      	cbz	r1, 8010f2e <GUIMONO_GetCharDistX+0xe>
 8010f2a:	7c1a      	ldrb	r2, [r3, #16]
 8010f2c:	600a      	str	r2, [r1, #0]
 8010f2e:	7c58      	ldrb	r0, [r3, #17]
 8010f30:	4770      	bx	lr
 8010f32:	bf00      	nop
 8010f34:	2000016c 	.word	0x2000016c

08010f38 <GUIMONO_GetFontInfo>:
 8010f38:	2302      	movs	r3, #2
 8010f3a:	800b      	strh	r3, [r1, #0]
 8010f3c:	4770      	bx	lr

08010f3e <GUIMONO_IsInFont>:
 8010f3e:	69c3      	ldr	r3, [r0, #28]
 8010f40:	899a      	ldrh	r2, [r3, #12]
 8010f42:	428a      	cmp	r2, r1
 8010f44:	d802      	bhi.n	8010f4c <GUIMONO_IsInFont+0xe>
 8010f46:	89da      	ldrh	r2, [r3, #14]
 8010f48:	428a      	cmp	r2, r1
 8010f4a:	d20f      	bcs.n	8010f6c <GUIMONO_IsInFont+0x2e>
 8010f4c:	6898      	ldr	r0, [r3, #8]
 8010f4e:	b180      	cbz	r0, 8010f72 <GUIMONO_IsInFont+0x34>
 8010f50:	8803      	ldrh	r3, [r0, #0]
 8010f52:	4299      	cmp	r1, r3
 8010f54:	d30c      	bcc.n	8010f70 <GUIMONO_IsInFont+0x32>
 8010f56:	8842      	ldrh	r2, [r0, #2]
 8010f58:	428a      	cmp	r2, r1
 8010f5a:	d309      	bcc.n	8010f70 <GUIMONO_IsInFont+0x32>
 8010f5c:	1ac9      	subs	r1, r1, r3
 8010f5e:	6842      	ldr	r2, [r0, #4]
 8010f60:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 8010f64:	43c0      	mvns	r0, r0
 8010f66:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8010f6a:	4770      	bx	lr
 8010f6c:	2001      	movs	r0, #1
 8010f6e:	4770      	bx	lr
 8010f70:	2000      	movs	r0, #0
 8010f72:	4770      	bx	lr

08010f74 <_Log2VisBuffered>:
 8010f74:	4770      	bx	lr
	...

08010f78 <_DispLine>:
 8010f78:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010f7a:	4615      	mov	r5, r2
 8010f7c:	ab02      	add	r3, sp, #8
 8010f7e:	4a1a      	ldr	r2, [pc, #104]	; (8010fe8 <_DispLine+0x70>)
 8010f80:	f843 1d08 	str.w	r1, [r3, #-8]!
 8010f84:	9001      	str	r0, [sp, #4]
 8010f86:	6812      	ldr	r2, [r2, #0]
 8010f88:	4c18      	ldr	r4, [pc, #96]	; (8010fec <_DispLine+0x74>)
 8010f8a:	4669      	mov	r1, sp
 8010f8c:	4790      	blx	r2
 8010f8e:	6823      	ldr	r3, [r4, #0]
 8010f90:	9001      	str	r0, [sp, #4]
 8010f92:	6958      	ldr	r0, [r3, #20]
 8010f94:	b958      	cbnz	r0, 8010fae <_DispLine+0x36>
 8010f96:	2001      	movs	r0, #1
 8010f98:	f7fd ff54 	bl	800ee44 <GUI__ManageCache>
 8010f9c:	6823      	ldr	r3, [r4, #0]
 8010f9e:	69db      	ldr	r3, [r3, #28]
 8010fa0:	695b      	ldr	r3, [r3, #20]
 8010fa2:	b1bb      	cbz	r3, 8010fd4 <_DispLine+0x5c>
 8010fa4:	689b      	ldr	r3, [r3, #8]
 8010fa6:	9801      	ldr	r0, [sp, #4]
 8010fa8:	9900      	ldr	r1, [sp, #0]
 8010faa:	4798      	blx	r3
 8010fac:	e017      	b.n	8010fde <_DispLine+0x66>
 8010fae:	4629      	mov	r1, r5
 8010fb0:	f7ff f874 	bl	801009c <GUI_RectsIntersect>
 8010fb4:	2800      	cmp	r0, #0
 8010fb6:	d1ee      	bne.n	8010f96 <_DispLine+0x1e>
 8010fb8:	e014      	b.n	8010fe4 <_DispLine+0x6c>
 8010fba:	a801      	add	r0, sp, #4
 8010fbc:	f7fe fa24 	bl	800f408 <GUI_UC__GetCharCodeInc>
 8010fc0:	6823      	ldr	r3, [r4, #0]
 8010fc2:	69db      	ldr	r3, [r3, #28]
 8010fc4:	681b      	ldr	r3, [r3, #0]
 8010fc6:	4605      	mov	r5, r0
 8010fc8:	4798      	blx	r3
 8010fca:	4b09      	ldr	r3, [pc, #36]	; (8010ff0 <_DispLine+0x78>)
 8010fcc:	681b      	ldr	r3, [r3, #0]
 8010fce:	b10b      	cbz	r3, 8010fd4 <_DispLine+0x5c>
 8010fd0:	4628      	mov	r0, r5
 8010fd2:	4798      	blx	r3
 8010fd4:	9b00      	ldr	r3, [sp, #0]
 8010fd6:	3b01      	subs	r3, #1
 8010fd8:	2b00      	cmp	r3, #0
 8010fda:	9300      	str	r3, [sp, #0]
 8010fdc:	daed      	bge.n	8010fba <_DispLine+0x42>
 8010fde:	2000      	movs	r0, #0
 8010fe0:	f7fd ff30 	bl	800ee44 <GUI__ManageCache>
 8010fe4:	b003      	add	sp, #12
 8010fe6:	bd30      	pop	{r4, r5, pc}
 8010fe8:	20000174 	.word	0x20000174
 8010fec:	2000016c 	.word	0x2000016c
 8010ff0:	200199d8 	.word	0x200199d8

08010ff4 <GUI__GetLineNumChars>:
 8010ff4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010ff6:	460d      	mov	r5, r1
 8010ff8:	9001      	str	r0, [sp, #4]
 8010ffa:	4604      	mov	r4, r0
 8010ffc:	b198      	cbz	r0, 8011026 <GUI__GetLineNumChars+0x32>
 8010ffe:	4b0b      	ldr	r3, [pc, #44]	; (801102c <GUI__GetLineNumChars+0x38>)
 8011000:	681b      	ldr	r3, [r3, #0]
 8011002:	69db      	ldr	r3, [r3, #28]
 8011004:	695b      	ldr	r3, [r3, #20]
 8011006:	b10b      	cbz	r3, 801100c <GUI__GetLineNumChars+0x18>
 8011008:	685b      	ldr	r3, [r3, #4]
 801100a:	b90b      	cbnz	r3, 8011010 <GUI__GetLineNumChars+0x1c>
 801100c:	2400      	movs	r4, #0
 801100e:	e008      	b.n	8011022 <GUI__GetLineNumChars+0x2e>
 8011010:	4798      	blx	r3
 8011012:	e009      	b.n	8011028 <GUI__GetLineNumChars+0x34>
 8011014:	a801      	add	r0, sp, #4
 8011016:	f7fe f9f7 	bl	800f408 <GUI_UC__GetCharCodeInc>
 801101a:	b120      	cbz	r0, 8011026 <GUI__GetLineNumChars+0x32>
 801101c:	280a      	cmp	r0, #10
 801101e:	d002      	beq.n	8011026 <GUI__GetLineNumChars+0x32>
 8011020:	3401      	adds	r4, #1
 8011022:	42ac      	cmp	r4, r5
 8011024:	dbf6      	blt.n	8011014 <GUI__GetLineNumChars+0x20>
 8011026:	4620      	mov	r0, r4
 8011028:	b003      	add	sp, #12
 801102a:	bd30      	pop	{r4, r5, pc}
 801102c:	2000016c 	.word	0x2000016c

08011030 <GUI__GetOverlap>:
 8011030:	b513      	push	{r0, r1, r4, lr}
 8011032:	a902      	add	r1, sp, #8
 8011034:	2400      	movs	r4, #0
 8011036:	f841 4d04 	str.w	r4, [r1, #-4]!
 801103a:	f000 f8b7 	bl	80111ac <GUI_GetCharDistXEx>
 801103e:	9b01      	ldr	r3, [sp, #4]
 8011040:	4283      	cmp	r3, r0
 8011042:	bfcc      	ite	gt
 8011044:	ebc0 0003 	rsbgt	r0, r0, r3
 8011048:	4620      	movle	r0, r4
 801104a:	b002      	add	sp, #8
 801104c:	bd10      	pop	{r4, pc}
	...

08011050 <GUI__GetLineDistX>:
 8011050:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011052:	4a15      	ldr	r2, [pc, #84]	; (80110a8 <GUI__GetLineDistX+0x58>)
 8011054:	9001      	str	r0, [sp, #4]
 8011056:	ab02      	add	r3, sp, #8
 8011058:	6812      	ldr	r2, [r2, #0]
 801105a:	f843 1d08 	str.w	r1, [r3, #-8]!
 801105e:	4669      	mov	r1, sp
 8011060:	4790      	blx	r2
 8011062:	9001      	str	r0, [sp, #4]
 8011064:	b1f0      	cbz	r0, 80110a4 <GUI__GetLineDistX+0x54>
 8011066:	4b11      	ldr	r3, [pc, #68]	; (80110ac <GUI__GetLineDistX+0x5c>)
 8011068:	681b      	ldr	r3, [r3, #0]
 801106a:	69db      	ldr	r3, [r3, #28]
 801106c:	695b      	ldr	r3, [r3, #20]
 801106e:	b10b      	cbz	r3, 8011074 <GUI__GetLineDistX+0x24>
 8011070:	681b      	ldr	r3, [r3, #0]
 8011072:	b913      	cbnz	r3, 801107a <GUI__GetLineDistX+0x2a>
 8011074:	2500      	movs	r5, #0
 8011076:	462c      	mov	r4, r5
 8011078:	e002      	b.n	8011080 <GUI__GetLineDistX+0x30>
 801107a:	9900      	ldr	r1, [sp, #0]
 801107c:	4798      	blx	r3
 801107e:	e011      	b.n	80110a4 <GUI__GetLineDistX+0x54>
 8011080:	9b00      	ldr	r3, [sp, #0]
 8011082:	3b01      	subs	r3, #1
 8011084:	2b00      	cmp	r3, #0
 8011086:	9300      	str	r3, [sp, #0]
 8011088:	db07      	blt.n	801109a <GUI__GetLineDistX+0x4a>
 801108a:	a801      	add	r0, sp, #4
 801108c:	f7fe f9bc 	bl	800f408 <GUI_UC__GetCharCodeInc>
 8011090:	4605      	mov	r5, r0
 8011092:	f000 f881 	bl	8011198 <GUI_GetCharDistX>
 8011096:	4404      	add	r4, r0
 8011098:	e7f2      	b.n	8011080 <GUI__GetLineDistX+0x30>
 801109a:	4628      	mov	r0, r5
 801109c:	f7ff ffc8 	bl	8011030 <GUI__GetOverlap>
 80110a0:	4420      	add	r0, r4
 80110a2:	e7ff      	b.n	80110a4 <GUI__GetLineDistX+0x54>
 80110a4:	b003      	add	sp, #12
 80110a6:	bd30      	pop	{r4, r5, pc}
 80110a8:	20000174 	.word	0x20000174
 80110ac:	2000016c 	.word	0x2000016c

080110b0 <GUI__DispLine>:
 80110b0:	4b27      	ldr	r3, [pc, #156]	; (8011150 <GUI__DispLine+0xa0>)
 80110b2:	681b      	ldr	r3, [r3, #0]
 80110b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80110b6:	4605      	mov	r5, r0
 80110b8:	460c      	mov	r4, r1
 80110ba:	b163      	cbz	r3, 80110d6 <GUI__DispLine+0x26>
 80110bc:	2000      	movs	r0, #0
 80110be:	f7fa fd09 	bl	800bad4 <WM__InitIVRSearch>
 80110c2:	2800      	cmp	r0, #0
 80110c4:	d041      	beq.n	801114a <GUI__DispLine+0x9a>
 80110c6:	4628      	mov	r0, r5
 80110c8:	4621      	mov	r1, r4
 80110ca:	466a      	mov	r2, sp
 80110cc:	f7ff ff54 	bl	8010f78 <_DispLine>
 80110d0:	f7fa fc3e 	bl	800b950 <WM__GetNextIVR>
 80110d4:	e7f5      	b.n	80110c2 <GUI__DispLine+0x12>
 80110d6:	6810      	ldr	r0, [r2, #0]
 80110d8:	6851      	ldr	r1, [r2, #4]
 80110da:	4e1e      	ldr	r6, [pc, #120]	; (8011154 <GUI__DispLine+0xa4>)
 80110dc:	466b      	mov	r3, sp
 80110de:	c303      	stmia	r3!, {r0, r1}
 80110e0:	6833      	ldr	r3, [r6, #0]
 80110e2:	f8bd 1000 	ldrh.w	r1, [sp]
 80110e6:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 80110ea:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80110ee:	4411      	add	r1, r2
 80110f0:	f8ad 1000 	strh.w	r1, [sp]
 80110f4:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 80110f8:	4419      	add	r1, r3
 80110fa:	f8ad 1002 	strh.w	r1, [sp, #2]
 80110fe:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8011102:	440a      	add	r2, r1
 8011104:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011108:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801110c:	4668      	mov	r0, sp
 801110e:	4413      	add	r3, r2
 8011110:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011114:	f7fa fcde 	bl	800bad4 <WM__InitIVRSearch>
 8011118:	6833      	ldr	r3, [r6, #0]
 801111a:	b940      	cbnz	r0, 801112e <GUI__DispLine+0x7e>
 801111c:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801111e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8011120:	1a8a      	subs	r2, r1, r2
 8011122:	845a      	strh	r2, [r3, #34]	; 0x22
 8011124:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 8011126:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8011128:	1a8a      	subs	r2, r1, r2
 801112a:	849a      	strh	r2, [r3, #36]	; 0x24
 801112c:	e00d      	b.n	801114a <GUI__DispLine+0x9a>
 801112e:	f8bd 2000 	ldrh.w	r2, [sp]
 8011132:	845a      	strh	r2, [r3, #34]	; 0x22
 8011134:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8011138:	849a      	strh	r2, [r3, #36]	; 0x24
 801113a:	4628      	mov	r0, r5
 801113c:	4621      	mov	r1, r4
 801113e:	466a      	mov	r2, sp
 8011140:	f7ff ff1a 	bl	8010f78 <_DispLine>
 8011144:	f7fa fc04 	bl	800b950 <WM__GetNextIVR>
 8011148:	e7e6      	b.n	8011118 <GUI__DispLine+0x68>
 801114a:	b002      	add	sp, #8
 801114c:	bd70      	pop	{r4, r5, r6, pc}
 801114e:	bf00      	nop
 8011150:	200199c0 	.word	0x200199c0
 8011154:	2000016c 	.word	0x2000016c

08011158 <GUI_GetYAdjust>:
 8011158:	4b0a      	ldr	r3, [pc, #40]	; (8011184 <GUI_GetYAdjust+0x2c>)
 801115a:	681b      	ldr	r3, [r3, #0]
 801115c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 801115e:	f002 020c 	and.w	r2, r2, #12
 8011162:	2a08      	cmp	r2, #8
 8011164:	d007      	beq.n	8011176 <GUI_GetYAdjust+0x1e>
 8011166:	2a0c      	cmp	r2, #12
 8011168:	d005      	beq.n	8011176 <GUI_GetYAdjust+0x1e>
 801116a:	2a04      	cmp	r2, #4
 801116c:	d107      	bne.n	801117e <GUI_GetYAdjust+0x26>
 801116e:	69db      	ldr	r3, [r3, #28]
 8011170:	7e18      	ldrb	r0, [r3, #24]
 8011172:	3801      	subs	r0, #1
 8011174:	4770      	bx	lr
 8011176:	69db      	ldr	r3, [r3, #28]
 8011178:	7e18      	ldrb	r0, [r3, #24]
 801117a:	0840      	lsrs	r0, r0, #1
 801117c:	4770      	bx	lr
 801117e:	2000      	movs	r0, #0
 8011180:	4770      	bx	lr
 8011182:	bf00      	nop
 8011184:	2000016c 	.word	0x2000016c

08011188 <GUI_GetFontDistY>:
 8011188:	4b02      	ldr	r3, [pc, #8]	; (8011194 <GUI_GetFontDistY+0xc>)
 801118a:	681b      	ldr	r3, [r3, #0]
 801118c:	69db      	ldr	r3, [r3, #28]
 801118e:	7e58      	ldrb	r0, [r3, #25]
 8011190:	4770      	bx	lr
 8011192:	bf00      	nop
 8011194:	2000016c 	.word	0x2000016c

08011198 <GUI_GetCharDistX>:
 8011198:	b508      	push	{r3, lr}
 801119a:	4b03      	ldr	r3, [pc, #12]	; (80111a8 <GUI_GetCharDistX+0x10>)
 801119c:	681b      	ldr	r3, [r3, #0]
 801119e:	69db      	ldr	r3, [r3, #28]
 80111a0:	2100      	movs	r1, #0
 80111a2:	685b      	ldr	r3, [r3, #4]
 80111a4:	4798      	blx	r3
 80111a6:	bd08      	pop	{r3, pc}
 80111a8:	2000016c 	.word	0x2000016c

080111ac <GUI_GetCharDistXEx>:
 80111ac:	b508      	push	{r3, lr}
 80111ae:	4b03      	ldr	r3, [pc, #12]	; (80111bc <GUI_GetCharDistXEx+0x10>)
 80111b0:	681b      	ldr	r3, [r3, #0]
 80111b2:	69db      	ldr	r3, [r3, #28]
 80111b4:	685b      	ldr	r3, [r3, #4]
 80111b6:	4798      	blx	r3
 80111b8:	bd08      	pop	{r3, pc}
 80111ba:	bf00      	nop
 80111bc:	2000016c 	.word	0x2000016c

080111c0 <_PushFreeBlock>:
 80111c0:	4b07      	ldr	r3, [pc, #28]	; (80111e0 <_PushFreeBlock+0x20>)
 80111c2:	685a      	ldr	r2, [r3, #4]
 80111c4:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80111c6:	3201      	adds	r2, #1
 80111c8:	b510      	push	{r4, lr}
 80111ca:	605a      	str	r2, [r3, #4]
 80111cc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80111ce:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 80111d2:	6061      	str	r1, [r4, #4]
 80111d4:	2100      	movs	r1, #0
 80111d6:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 80111da:	6258      	str	r0, [r3, #36]	; 0x24
 80111dc:	bd10      	pop	{r4, pc}
 80111de:	bf00      	nop
 80111e0:	200199fc 	.word	0x200199fc

080111e4 <_OnExit>:
 80111e4:	b538      	push	{r3, r4, r5, lr}
 80111e6:	4d0b      	ldr	r5, [pc, #44]	; (8011214 <_OnExit+0x30>)
 80111e8:	2400      	movs	r4, #0
 80111ea:	f105 0040 	add.w	r0, r5, #64	; 0x40
 80111ee:	4621      	mov	r1, r4
 80111f0:	2280      	movs	r2, #128	; 0x80
 80111f2:	f885 4028 	strb.w	r4, [r5, #40]	; 0x28
 80111f6:	f7fd fd3d 	bl	800ec74 <GUI__memset>
 80111fa:	4628      	mov	r0, r5
 80111fc:	4621      	mov	r1, r4
 80111fe:	22c0      	movs	r2, #192	; 0xc0
 8011200:	f7fd fd38 	bl	800ec74 <GUI__memset>
 8011204:	4621      	mov	r1, r4
 8011206:	4804      	ldr	r0, [pc, #16]	; (8011218 <_OnExit+0x34>)
 8011208:	220c      	movs	r2, #12
 801120a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801120e:	f7fd bd31 	b.w	800ec74 <GUI__memset>
 8011212:	bf00      	nop
 8011214:	200199fc 	.word	0x200199fc
 8011218:	20019690 	.word	0x20019690

0801121c <_RemoveFreeBlock>:
 801121c:	b510      	push	{r4, lr}
 801121e:	6842      	ldr	r2, [r0, #4]
 8011220:	230f      	movs	r3, #15
 8011222:	490d      	ldr	r1, [pc, #52]	; (8011258 <_RemoveFreeBlock+0x3c>)
 8011224:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 8011228:	6c24      	ldr	r4, [r4, #64]	; 0x40
 801122a:	42a2      	cmp	r2, r4
 801122c:	d203      	bcs.n	8011236 <_RemoveFreeBlock+0x1a>
 801122e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8011232:	d2f6      	bcs.n	8011222 <_RemoveFreeBlock+0x6>
 8011234:	bd10      	pop	{r4, pc}
 8011236:	2b0f      	cmp	r3, #15
 8011238:	d80c      	bhi.n	8011254 <_RemoveFreeBlock+0x38>
 801123a:	680c      	ldr	r4, [r1, #0]
 801123c:	1aa2      	subs	r2, r4, r2
 801123e:	600a      	str	r2, [r1, #0]
 8011240:	6882      	ldr	r2, [r0, #8]
 8011242:	68c0      	ldr	r0, [r0, #12]
 8011244:	b102      	cbz	r2, 8011248 <_RemoveFreeBlock+0x2c>
 8011246:	6050      	str	r0, [r2, #4]
 8011248:	b108      	cbz	r0, 801124e <_RemoveFreeBlock+0x32>
 801124a:	6002      	str	r2, [r0, #0]
 801124c:	bd10      	pop	{r4, pc}
 801124e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8011252:	645a      	str	r2, [r3, #68]	; 0x44
 8011254:	bd10      	pop	{r4, pc}
 8011256:	bf00      	nop
 8011258:	200199fc 	.word	0x200199fc

0801125c <_AddFreeMemory>:
 801125c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801125e:	4e26      	ldr	r6, [pc, #152]	; (80112f8 <_AddFreeMemory+0x9c>)
 8011260:	68f3      	ldr	r3, [r6, #12]
 8011262:	1e5a      	subs	r2, r3, #1
 8011264:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8011266:	4605      	mov	r5, r0
 8011268:	4413      	add	r3, r2
 801126a:	1808      	adds	r0, r1, r0
 801126c:	4298      	cmp	r0, r3
 801126e:	460c      	mov	r4, r1
 8011270:	d805      	bhi.n	801127e <_AddFreeMemory+0x22>
 8011272:	594b      	ldr	r3, [r1, r5]
 8011274:	b91b      	cbnz	r3, 801127e <_AddFreeMemory+0x22>
 8011276:	6843      	ldr	r3, [r0, #4]
 8011278:	441d      	add	r5, r3
 801127a:	f7ff ffcf 	bl	801121c <_RemoveFreeBlock>
 801127e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8011280:	429c      	cmp	r4, r3
 8011282:	d90a      	bls.n	801129a <_AddFreeMemory+0x3e>
 8011284:	f854 7c04 	ldr.w	r7, [r4, #-4]
 8011288:	1be7      	subs	r7, r4, r7
 801128a:	683b      	ldr	r3, [r7, #0]
 801128c:	b92b      	cbnz	r3, 801129a <_AddFreeMemory+0x3e>
 801128e:	687b      	ldr	r3, [r7, #4]
 8011290:	4638      	mov	r0, r7
 8011292:	441d      	add	r5, r3
 8011294:	f7ff ffc2 	bl	801121c <_RemoveFreeBlock>
 8011298:	463c      	mov	r4, r7
 801129a:	230f      	movs	r3, #15
 801129c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 80112a0:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80112a2:	4295      	cmp	r5, r2
 80112a4:	d203      	bcs.n	80112ae <_AddFreeMemory+0x52>
 80112a6:	f113 33ff 	adds.w	r3, r3, #4294967295
 80112aa:	d2f7      	bcs.n	801129c <_AddFreeMemory+0x40>
 80112ac:	e022      	b.n	80112f4 <_AddFreeMemory+0x98>
 80112ae:	2b0f      	cmp	r3, #15
 80112b0:	d820      	bhi.n	80112f4 <_AddFreeMemory+0x98>
 80112b2:	3308      	adds	r3, #8
 80112b4:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 80112b8:	1961      	adds	r1, r4, r5
 80112ba:	6852      	ldr	r2, [r2, #4]
 80112bc:	60a2      	str	r2, [r4, #8]
 80112be:	2000      	movs	r0, #0
 80112c0:	e884 0021 	stmia.w	r4, {r0, r5}
 80112c4:	6124      	str	r4, [r4, #16]
 80112c6:	f841 5c04 	str.w	r5, [r1, #-4]
 80112ca:	f104 0108 	add.w	r1, r4, #8
 80112ce:	b102      	cbz	r2, 80112d2 <_AddFreeMemory+0x76>
 80112d0:	6051      	str	r1, [r2, #4]
 80112d2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80112d6:	60e0      	str	r0, [r4, #12]
 80112d8:	6059      	str	r1, [r3, #4]
 80112da:	6833      	ldr	r3, [r6, #0]
 80112dc:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 80112e0:	4a05      	ldr	r2, [pc, #20]	; (80112f8 <_AddFreeMemory+0x9c>)
 80112e2:	442b      	add	r3, r5
 80112e4:	6033      	str	r3, [r6, #0]
 80112e6:	b929      	cbnz	r1, 80112f4 <_AddFreeMemory+0x98>
 80112e8:	68d1      	ldr	r1, [r2, #12]
 80112ea:	1acb      	subs	r3, r1, r3
 80112ec:	6891      	ldr	r1, [r2, #8]
 80112ee:	4299      	cmp	r1, r3
 80112f0:	bf38      	it	cc
 80112f2:	6093      	strcc	r3, [r2, #8]
 80112f4:	4628      	mov	r0, r5
 80112f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80112f8:	200199fc 	.word	0x200199fc

080112fc <_RemoveHoles>:
 80112fc:	4b25      	ldr	r3, [pc, #148]	; (8011394 <_RemoveHoles+0x98>)
 80112fe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011302:	68da      	ldr	r2, [r3, #12]
 8011304:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8011306:	3a01      	subs	r2, #1
 8011308:	4682      	mov	sl, r0
 801130a:	eb02 0904 	add.w	r9, r2, r4
 801130e:	469b      	mov	fp, r3
 8011310:	e894 0028 	ldmia.w	r4, {r3, r5}
 8011314:	2b00      	cmp	r3, #0
 8011316:	d133      	bne.n	8011380 <_RemoveHoles+0x84>
 8011318:	eb04 0805 	add.w	r8, r4, r5
 801131c:	45c8      	cmp	r8, r9
 801131e:	d22f      	bcs.n	8011380 <_RemoveHoles+0x84>
 8011320:	f854 c005 	ldr.w	ip, [r4, r5]
 8011324:	f8d8 6004 	ldr.w	r6, [r8, #4]
 8011328:	f1bc 0f00 	cmp.w	ip, #0
 801132c:	d028      	beq.n	8011380 <_RemoveHoles+0x84>
 801132e:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 8011332:	4f18      	ldr	r7, [pc, #96]	; (8011394 <_RemoveHoles+0x98>)
 8011334:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 8011338:	2b01      	cmp	r3, #1
 801133a:	d121      	bne.n	8011380 <_RemoveHoles+0x84>
 801133c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801133e:	4620      	mov	r0, r4
 8011340:	e88d 1008 	stmia.w	sp, {r3, ip}
 8011344:	f7ff ff6a 	bl	801121c <_RemoveFreeBlock>
 8011348:	f8d8 1000 	ldr.w	r1, [r8]
 801134c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801134e:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 8011352:	4620      	mov	r0, r4
 8011354:	6054      	str	r4, [r2, #4]
 8011356:	4641      	mov	r1, r8
 8011358:	4632      	mov	r2, r6
 801135a:	f007 fcf5 	bl	8018d48 <memmove>
 801135e:	e89d 1008 	ldmia.w	sp, {r3, ip}
 8011362:	459c      	cmp	ip, r3
 8011364:	d102      	bne.n	801136c <_RemoveHoles+0x70>
 8011366:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011368:	1b5b      	subs	r3, r3, r5
 801136a:	637b      	str	r3, [r7, #52]	; 0x34
 801136c:	4628      	mov	r0, r5
 801136e:	19a1      	adds	r1, r4, r6
 8011370:	f7ff ff74 	bl	801125c <_AddFreeMemory>
 8011374:	f1ba 0f00 	cmp.w	sl, #0
 8011378:	d001      	beq.n	801137e <_RemoveHoles+0x82>
 801137a:	4582      	cmp	sl, r0
 801137c:	d905      	bls.n	801138a <_RemoveHoles+0x8e>
 801137e:	4635      	mov	r5, r6
 8011380:	442c      	add	r4, r5
 8011382:	454c      	cmp	r4, r9
 8011384:	d3c4      	bcc.n	8011310 <_RemoveHoles+0x14>
 8011386:	2001      	movs	r0, #1
 8011388:	e000      	b.n	801138c <_RemoveHoles+0x90>
 801138a:	2000      	movs	r0, #0
 801138c:	b003      	add	sp, #12
 801138e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011392:	bf00      	nop
 8011394:	200199fc 	.word	0x200199fc

08011398 <GUI_ALLOC_FreeFixedBlock>:
 8011398:	b128      	cbz	r0, 80113a6 <GUI_ALLOC_FreeFixedBlock+0xe>
 801139a:	4a03      	ldr	r2, [pc, #12]	; (80113a8 <GUI_ALLOC_FreeFixedBlock+0x10>)
 801139c:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 801139e:	6003      	str	r3, [r0, #0]
 80113a0:	b103      	cbz	r3, 80113a4 <GUI_ALLOC_FreeFixedBlock+0xc>
 80113a2:	6058      	str	r0, [r3, #4]
 80113a4:	63d0      	str	r0, [r2, #60]	; 0x3c
 80113a6:	4770      	bx	lr
 80113a8:	200199fc 	.word	0x200199fc

080113ac <GUI_ALLOC_h2p>:
 80113ac:	b128      	cbz	r0, 80113ba <GUI_ALLOC_h2p+0xe>
 80113ae:	4b03      	ldr	r3, [pc, #12]	; (80113bc <GUI_ALLOC_h2p+0x10>)
 80113b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80113b2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80113b6:	6840      	ldr	r0, [r0, #4]
 80113b8:	3008      	adds	r0, #8
 80113ba:	4770      	bx	lr
 80113bc:	200199fc 	.word	0x200199fc

080113c0 <GUI_ALLOC_LockH>:
 80113c0:	4b05      	ldr	r3, [pc, #20]	; (80113d8 <GUI_ALLOC_LockH+0x18>)
 80113c2:	69d9      	ldr	r1, [r3, #28]
 80113c4:	3101      	adds	r1, #1
 80113c6:	61d9      	str	r1, [r3, #28]
 80113c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80113ca:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 80113ce:	3101      	adds	r1, #1
 80113d0:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 80113d4:	f7ff bfea 	b.w	80113ac <GUI_ALLOC_h2p>
 80113d8:	200199fc 	.word	0x200199fc

080113dc <GUI_ALLOC_UnlockH>:
 80113dc:	b530      	push	{r4, r5, lr}
 80113de:	6802      	ldr	r2, [r0, #0]
 80113e0:	4b09      	ldr	r3, [pc, #36]	; (8011408 <GUI_ALLOC_UnlockH+0x2c>)
 80113e2:	f852 1c08 	ldr.w	r1, [r2, #-8]
 80113e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80113e8:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 80113ec:	2c01      	cmp	r4, #1
 80113ee:	d903      	bls.n	80113f8 <GUI_ALLOC_UnlockH+0x1c>
 80113f0:	69dd      	ldr	r5, [r3, #28]
 80113f2:	b10d      	cbz	r5, 80113f8 <GUI_ALLOC_UnlockH+0x1c>
 80113f4:	3d01      	subs	r5, #1
 80113f6:	61dd      	str	r5, [r3, #28]
 80113f8:	3c01      	subs	r4, #1
 80113fa:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 80113fe:	2300      	movs	r3, #0
 8011400:	6003      	str	r3, [r0, #0]
 8011402:	4618      	mov	r0, r3
 8011404:	bd30      	pop	{r4, r5, pc}
 8011406:	bf00      	nop
 8011408:	200199fc 	.word	0x200199fc

0801140c <GUI_ALLOC_AssignMemory>:
 801140c:	4b02      	ldr	r3, [pc, #8]	; (8011418 <GUI_ALLOC_AssignMemory+0xc>)
 801140e:	f021 0103 	bic.w	r1, r1, #3
 8011412:	6018      	str	r0, [r3, #0]
 8011414:	6059      	str	r1, [r3, #4]
 8011416:	4770      	bx	lr
 8011418:	20019690 	.word	0x20019690

0801141c <GUI_ALLOC_GetSize>:
 801141c:	b130      	cbz	r0, 801142c <GUI_ALLOC_GetSize+0x10>
 801141e:	4b04      	ldr	r3, [pc, #16]	; (8011430 <GUI_ALLOC_GetSize+0x14>)
 8011420:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011422:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8011426:	6843      	ldr	r3, [r0, #4]
 8011428:	6858      	ldr	r0, [r3, #4]
 801142a:	380c      	subs	r0, #12
 801142c:	4770      	bx	lr
 801142e:	bf00      	nop
 8011430:	200199fc 	.word	0x200199fc

08011434 <GUI_ALLOC_Free>:
 8011434:	b510      	push	{r4, lr}
 8011436:	4604      	mov	r4, r0
 8011438:	b180      	cbz	r0, 801145c <GUI_ALLOC_Free+0x28>
 801143a:	4b09      	ldr	r3, [pc, #36]	; (8011460 <GUI_ALLOC_Free+0x2c>)
 801143c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801143e:	eb03 02c0 	add.w	r2, r3, r0, lsl #3
 8011442:	f813 3030 	ldrb.w	r3, [r3, r0, lsl #3]
 8011446:	2b01      	cmp	r3, #1
 8011448:	d108      	bne.n	801145c <GUI_ALLOC_Free+0x28>
 801144a:	6851      	ldr	r1, [r2, #4]
 801144c:	6848      	ldr	r0, [r1, #4]
 801144e:	f7ff ff05 	bl	801125c <_AddFreeMemory>
 8011452:	4620      	mov	r0, r4
 8011454:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011458:	f7ff beb2 	b.w	80111c0 <_PushFreeBlock>
 801145c:	bd10      	pop	{r4, pc}
 801145e:	bf00      	nop
 8011460:	200199fc 	.word	0x200199fc

08011464 <_EnlargeBlocks>:
 8011464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011468:	4c22      	ldr	r4, [pc, #136]	; (80114f4 <_EnlargeBlocks+0x90>)
 801146a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801146c:	b93b      	cbnz	r3, 801147e <_EnlargeBlocks+0x1a>
 801146e:	4b22      	ldr	r3, [pc, #136]	; (80114f8 <_EnlargeBlocks+0x94>)
 8011470:	689d      	ldr	r5, [r3, #8]
 8011472:	685b      	ldr	r3, [r3, #4]
 8011474:	3508      	adds	r5, #8
 8011476:	fbb3 f5f5 	udiv	r5, r3, r5
 801147a:	3502      	adds	r5, #2
 801147c:	e003      	b.n	8011486 <_EnlargeBlocks+0x22>
 801147e:	6923      	ldr	r3, [r4, #16]
 8011480:	1d1d      	adds	r5, r3, #4
 8011482:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 8011486:	00e8      	lsls	r0, r5, #3
 8011488:	f000 f978 	bl	801177c <_Alloc>
 801148c:	4680      	mov	r8, r0
 801148e:	b360      	cbz	r0, 80114ea <_EnlargeBlocks+0x86>
 8011490:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011492:	6922      	ldr	r2, [r4, #16]
 8011494:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8011496:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 801149a:	00d2      	lsls	r2, r2, #3
 801149c:	685e      	ldr	r6, [r3, #4]
 801149e:	3608      	adds	r6, #8
 80114a0:	4630      	mov	r0, r6
 80114a2:	f007 fc46 	bl	8018d32 <memcpy>
 80114a6:	6922      	ldr	r2, [r4, #16]
 80114a8:	6366      	str	r6, [r4, #52]	; 0x34
 80114aa:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 80114ae:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 80114b2:	3104      	adds	r1, #4
 80114b4:	4613      	mov	r3, r2
 80114b6:	1e68      	subs	r0, r5, #1
 80114b8:	4283      	cmp	r3, r0
 80114ba:	f101 0108 	add.w	r1, r1, #8
 80114be:	d203      	bcs.n	80114c8 <_EnlargeBlocks+0x64>
 80114c0:	3301      	adds	r3, #1
 80114c2:	f841 3c08 	str.w	r3, [r1, #-8]
 80114c6:	e7f6      	b.n	80114b6 <_EnlargeBlocks+0x52>
 80114c8:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80114cc:	2600      	movs	r6, #0
 80114ce:	605e      	str	r6, [r3, #4]
 80114d0:	6863      	ldr	r3, [r4, #4]
 80114d2:	6262      	str	r2, [r4, #36]	; 0x24
 80114d4:	1a9b      	subs	r3, r3, r2
 80114d6:	442b      	add	r3, r5
 80114d8:	6063      	str	r3, [r4, #4]
 80114da:	6125      	str	r5, [r4, #16]
 80114dc:	4638      	mov	r0, r7
 80114de:	b13f      	cbz	r7, 80114f0 <_EnlargeBlocks+0x8c>
 80114e0:	f7ff ffa8 	bl	8011434 <GUI_ALLOC_Free>
 80114e4:	4630      	mov	r0, r6
 80114e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114ea:	2001      	movs	r0, #1
 80114ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114f4:	200199fc 	.word	0x200199fc
 80114f8:	20019690 	.word	0x20019690

080114fc <_InitOnce>:
 80114fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80114fe:	4e58      	ldr	r6, [pc, #352]	; (8011660 <_InitOnce+0x164>)
 8011500:	f896 1028 	ldrb.w	r1, [r6, #40]	; 0x28
 8011504:	2900      	cmp	r1, #0
 8011506:	f040 80aa 	bne.w	801165e <_InitOnce+0x162>
 801150a:	4d56      	ldr	r5, [pc, #344]	; (8011664 <_InitOnce+0x168>)
 801150c:	686a      	ldr	r2, [r5, #4]
 801150e:	2301      	movs	r3, #1
 8011510:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
 8011514:	f5b2 5f20 	cmp.w	r2, #10240	; 0x2800
 8011518:	bf28      	it	cs
 801151a:	f44f 5220 	movcs.w	r2, #10240	; 0x2800
 801151e:	682b      	ldr	r3, [r5, #0]
 8011520:	0894      	lsrs	r4, r2, #2
 8011522:	2000      	movs	r0, #0
 8011524:	42a0      	cmp	r0, r4
 8011526:	d00c      	beq.n	8011542 <_InitOnce+0x46>
 8011528:	1847      	adds	r7, r0, r1
 801152a:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801152e:	fbb7 fefe 	udiv	lr, r7, lr
 8011532:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8011536:	ebce 0707 	rsb	r7, lr, r7
 801153a:	f843 7020 	str.w	r7, [r3, r0, lsl #2]
 801153e:	3001      	adds	r0, #1
 8011540:	e7f0      	b.n	8011524 <_InitOnce+0x28>
 8011542:	2000      	movs	r0, #0
 8011544:	42a0      	cmp	r0, r4
 8011546:	d016      	beq.n	8011576 <_InitOnce+0x7a>
 8011548:	1847      	adds	r7, r0, r1
 801154a:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801154e:	fbb7 fefe 	udiv	lr, r7, lr
 8011552:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8011556:	ebce 0e07 	rsb	lr, lr, r7
 801155a:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 801155e:	4577      	cmp	r7, lr
 8011560:	d007      	beq.n	8011572 <_InitOnce+0x76>
 8011562:	68aa      	ldr	r2, [r5, #8]
 8011564:	4b3f      	ldr	r3, [pc, #252]	; (8011664 <_InitOnce+0x168>)
 8011566:	2a00      	cmp	r2, #0
 8011568:	d155      	bne.n	8011616 <_InitOnce+0x11a>
 801156a:	685a      	ldr	r2, [r3, #4]
 801156c:	0892      	lsrs	r2, r2, #2
 801156e:	609a      	str	r2, [r3, #8]
 8011570:	e051      	b.n	8011616 <_InitOnce+0x11a>
 8011572:	3001      	adds	r0, #1
 8011574:	e7e6      	b.n	8011544 <_InitOnce+0x48>
 8011576:	3101      	adds	r1, #1
 8011578:	2902      	cmp	r1, #2
 801157a:	d1d2      	bne.n	8011522 <_InitOnce+0x26>
 801157c:	0854      	lsrs	r4, r2, #1
 801157e:	2100      	movs	r1, #0
 8011580:	2000      	movs	r0, #0
 8011582:	42a0      	cmp	r0, r4
 8011584:	d00c      	beq.n	80115a0 <_InitOnce+0xa4>
 8011586:	1847      	adds	r7, r0, r1
 8011588:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801158c:	fbb7 fefe 	udiv	lr, r7, lr
 8011590:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8011594:	ebce 0707 	rsb	r7, lr, r7
 8011598:	f823 7010 	strh.w	r7, [r3, r0, lsl #1]
 801159c:	3001      	adds	r0, #1
 801159e:	e7f0      	b.n	8011582 <_InitOnce+0x86>
 80115a0:	2000      	movs	r0, #0
 80115a2:	42a0      	cmp	r0, r4
 80115a4:	d00f      	beq.n	80115c6 <_InitOnce+0xca>
 80115a6:	1847      	adds	r7, r0, r1
 80115a8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 80115ac:	fbb7 fefe 	udiv	lr, r7, lr
 80115b0:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 80115b4:	ebce 0707 	rsb	r7, lr, r7
 80115b8:	f833 c010 	ldrh.w	ip, [r3, r0, lsl #1]
 80115bc:	b2bf      	uxth	r7, r7
 80115be:	45bc      	cmp	ip, r7
 80115c0:	d1cf      	bne.n	8011562 <_InitOnce+0x66>
 80115c2:	3001      	adds	r0, #1
 80115c4:	e7ed      	b.n	80115a2 <_InitOnce+0xa6>
 80115c6:	3101      	adds	r1, #1
 80115c8:	2902      	cmp	r1, #2
 80115ca:	d1d9      	bne.n	8011580 <_InitOnce+0x84>
 80115cc:	2100      	movs	r1, #0
 80115ce:	2000      	movs	r0, #0
 80115d0:	4290      	cmp	r0, r2
 80115d2:	d007      	beq.n	80115e4 <_InitOnce+0xe8>
 80115d4:	1844      	adds	r4, r0, r1
 80115d6:	27ff      	movs	r7, #255	; 0xff
 80115d8:	fbb4 f7f7 	udiv	r7, r4, r7
 80115dc:	443c      	add	r4, r7
 80115de:	541c      	strb	r4, [r3, r0]
 80115e0:	3001      	adds	r0, #1
 80115e2:	e7f5      	b.n	80115d0 <_InitOnce+0xd4>
 80115e4:	2000      	movs	r0, #0
 80115e6:	4290      	cmp	r0, r2
 80115e8:	d00b      	beq.n	8011602 <_InitOnce+0x106>
 80115ea:	1844      	adds	r4, r0, r1
 80115ec:	27ff      	movs	r7, #255	; 0xff
 80115ee:	fbb4 f7f7 	udiv	r7, r4, r7
 80115f2:	443c      	add	r4, r7
 80115f4:	5c1f      	ldrb	r7, [r3, r0]
 80115f6:	f004 04ff 	and.w	r4, r4, #255	; 0xff
 80115fa:	42a7      	cmp	r7, r4
 80115fc:	d1b1      	bne.n	8011562 <_InitOnce+0x66>
 80115fe:	3001      	adds	r0, #1
 8011600:	e7f1      	b.n	80115e6 <_InitOnce+0xea>
 8011602:	3101      	adds	r1, #1
 8011604:	2902      	cmp	r1, #2
 8011606:	d1e2      	bne.n	80115ce <_InitOnce+0xd2>
 8011608:	2100      	movs	r1, #0
 801160a:	4291      	cmp	r1, r2
 801160c:	d0a9      	beq.n	8011562 <_InitOnce+0x66>
 801160e:	2000      	movs	r0, #0
 8011610:	5458      	strb	r0, [r3, r1]
 8011612:	3101      	adds	r1, #1
 8011614:	e7f9      	b.n	801160a <_InitOnce+0x10e>
 8011616:	4814      	ldr	r0, [pc, #80]	; (8011668 <_InitOnce+0x16c>)
 8011618:	4b14      	ldr	r3, [pc, #80]	; (801166c <_InitOnce+0x170>)
 801161a:	6003      	str	r3, [r0, #0]
 801161c:	f7ff fab0 	bl	8010b80 <GUI__RegisterExit>
 8011620:	235a      	movs	r3, #90	; 0x5a
 8011622:	6233      	str	r3, [r6, #32]
 8011624:	2300      	movs	r3, #0
 8011626:	2110      	movs	r1, #16
 8011628:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 801162c:	4099      	lsls	r1, r3
 801162e:	3301      	adds	r3, #1
 8011630:	2b10      	cmp	r3, #16
 8011632:	4c0b      	ldr	r4, [pc, #44]	; (8011660 <_InitOnce+0x164>)
 8011634:	6411      	str	r1, [r2, #64]	; 0x40
 8011636:	d1f6      	bne.n	8011626 <_InitOnce+0x12a>
 8011638:	6868      	ldr	r0, [r5, #4]
 801163a:	6829      	ldr	r1, [r5, #0]
 801163c:	63a1      	str	r1, [r4, #56]	; 0x38
 801163e:	2302      	movs	r3, #2
 8011640:	6123      	str	r3, [r4, #16]
 8011642:	f1a0 0314 	sub.w	r3, r0, #20
 8011646:	440b      	add	r3, r1
 8011648:	2501      	movs	r5, #1
 801164a:	6363      	str	r3, [r4, #52]	; 0x34
 801164c:	60e0      	str	r0, [r4, #12]
 801164e:	605d      	str	r5, [r3, #4]
 8011650:	6265      	str	r5, [r4, #36]	; 0x24
 8011652:	6065      	str	r5, [r4, #4]
 8011654:	f7ff fe02 	bl	801125c <_AddFreeMemory>
 8011658:	f7ff ff04 	bl	8011464 <_EnlargeBlocks>
 801165c:	6325      	str	r5, [r4, #48]	; 0x30
 801165e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011660:	200199fc 	.word	0x200199fc
 8011664:	20019690 	.word	0x20019690
 8011668:	2001969c 	.word	0x2001969c
 801166c:	080111e5 	.word	0x080111e5

08011670 <GUI_ALLOC_GetFixedBlock>:
 8011670:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011674:	4605      	mov	r5, r0
 8011676:	4e26      	ldr	r6, [pc, #152]	; (8011710 <GUI_ALLOC_GetFixedBlock+0xa0>)
 8011678:	3503      	adds	r5, #3
 801167a:	f7ff ff3f 	bl	80114fc <_InitOnce>
 801167e:	f025 0503 	bic.w	r5, r5, #3
 8011682:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8011684:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 8011686:	3504      	adds	r5, #4
 8011688:	429d      	cmp	r5, r3
 801168a:	bf38      	it	cc
 801168c:	461d      	movcc	r5, r3
 801168e:	4614      	mov	r4, r2
 8011690:	b12c      	cbz	r4, 801169e <GUI_ALLOC_GetFixedBlock+0x2e>
 8011692:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8011696:	42ab      	cmp	r3, r5
 8011698:	d02c      	beq.n	80116f4 <GUI_ALLOC_GetFixedBlock+0x84>
 801169a:	6824      	ldr	r4, [r4, #0]
 801169c:	e7f8      	b.n	8011690 <GUI_ALLOC_GetFixedBlock+0x20>
 801169e:	68f3      	ldr	r3, [r6, #12]
 80116a0:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 80116a2:	eb02 0803 	add.w	r8, r2, r3
 80116a6:	f858 7c04 	ldr.w	r7, [r8, #-4]
 80116aa:	ebc7 0708 	rsb	r7, r7, r8
 80116ae:	683b      	ldr	r3, [r7, #0]
 80116b0:	b133      	cbz	r3, 80116c0 <GUI_ALLOC_GetFixedBlock+0x50>
 80116b2:	4620      	mov	r0, r4
 80116b4:	f7ff fe22 	bl	80112fc <_RemoveHoles>
 80116b8:	f858 7c04 	ldr.w	r7, [r8, #-4]
 80116bc:	ebc7 0708 	rsb	r7, r7, r8
 80116c0:	683b      	ldr	r3, [r7, #0]
 80116c2:	bb13      	cbnz	r3, 801170a <GUI_ALLOC_GetFixedBlock+0x9a>
 80116c4:	687b      	ldr	r3, [r7, #4]
 80116c6:	42ab      	cmp	r3, r5
 80116c8:	db1f      	blt.n	801170a <GUI_ALLOC_GetFixedBlock+0x9a>
 80116ca:	4638      	mov	r0, r7
 80116cc:	1d1c      	adds	r4, r3, #4
 80116ce:	f7ff fda5 	bl	801121c <_RemoveFreeBlock>
 80116d2:	68f3      	ldr	r3, [r6, #12]
 80116d4:	6878      	ldr	r0, [r7, #4]
 80116d6:	1b5b      	subs	r3, r3, r5
 80116d8:	60f3      	str	r3, [r6, #12]
 80116da:	6973      	ldr	r3, [r6, #20]
 80116dc:	1b64      	subs	r4, r4, r5
 80116de:	442b      	add	r3, r5
 80116e0:	1b40      	subs	r0, r0, r5
 80116e2:	443c      	add	r4, r7
 80116e4:	6173      	str	r3, [r6, #20]
 80116e6:	d002      	beq.n	80116ee <GUI_ALLOC_GetFixedBlock+0x7e>
 80116e8:	4639      	mov	r1, r7
 80116ea:	f7ff fdb7 	bl	801125c <_AddFreeMemory>
 80116ee:	f844 5c04 	str.w	r5, [r4, #-4]
 80116f2:	e00a      	b.n	801170a <GUI_ALLOC_GetFixedBlock+0x9a>
 80116f4:	6823      	ldr	r3, [r4, #0]
 80116f6:	b10b      	cbz	r3, 80116fc <GUI_ALLOC_GetFixedBlock+0x8c>
 80116f8:	6861      	ldr	r1, [r4, #4]
 80116fa:	6059      	str	r1, [r3, #4]
 80116fc:	6861      	ldr	r1, [r4, #4]
 80116fe:	b101      	cbz	r1, 8011702 <GUI_ALLOC_GetFixedBlock+0x92>
 8011700:	600b      	str	r3, [r1, #0]
 8011702:	42a2      	cmp	r2, r4
 8011704:	d101      	bne.n	801170a <GUI_ALLOC_GetFixedBlock+0x9a>
 8011706:	6823      	ldr	r3, [r4, #0]
 8011708:	63f3      	str	r3, [r6, #60]	; 0x3c
 801170a:	4620      	mov	r0, r4
 801170c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011710:	200199fc 	.word	0x200199fc

08011714 <GUI_ALLOC_GetMaxSize>:
 8011714:	b508      	push	{r3, lr}
 8011716:	f7ff fef1 	bl	80114fc <_InitOnce>
 801171a:	2200      	movs	r2, #0
 801171c:	4b0b      	ldr	r3, [pc, #44]	; (801174c <GUI_ALLOC_GetMaxSize+0x38>)
 801171e:	4413      	add	r3, r2
 8011720:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011724:	b113      	cbz	r3, 801172c <GUI_ALLOC_GetMaxSize+0x18>
 8011726:	689b      	ldr	r3, [r3, #8]
 8011728:	2000      	movs	r0, #0
 801172a:	e00b      	b.n	8011744 <GUI_ALLOC_GetMaxSize+0x30>
 801172c:	3a08      	subs	r2, #8
 801172e:	f112 0f80 	cmn.w	r2, #128	; 0x80
 8011732:	d1f3      	bne.n	801171c <GUI_ALLOC_GetMaxSize+0x8>
 8011734:	e7f8      	b.n	8011728 <GUI_ALLOC_GetMaxSize+0x14>
 8011736:	685a      	ldr	r2, [r3, #4]
 8011738:	689b      	ldr	r3, [r3, #8]
 801173a:	4290      	cmp	r0, r2
 801173c:	bf38      	it	cc
 801173e:	4610      	movcc	r0, r2
 8011740:	b113      	cbz	r3, 8011748 <GUI_ALLOC_GetMaxSize+0x34>
 8011742:	689b      	ldr	r3, [r3, #8]
 8011744:	2b00      	cmp	r3, #0
 8011746:	d1f6      	bne.n	8011736 <GUI_ALLOC_GetMaxSize+0x22>
 8011748:	380c      	subs	r0, #12
 801174a:	bd08      	pop	{r3, pc}
 801174c:	200199fc 	.word	0x200199fc

08011750 <GUI_ALLOC_RequestSize>:
 8011750:	b508      	push	{r3, lr}
 8011752:	f7ff ffdf 	bl	8011714 <GUI_ALLOC_GetMaxSize>
 8011756:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 801175a:	f04f 0364 	mov.w	r3, #100	; 0x64
 801175e:	4a06      	ldr	r2, [pc, #24]	; (8011778 <GUI_ALLOC_RequestSize+0x28>)
 8011760:	d904      	bls.n	801176c <GUI_ALLOC_RequestSize+0x1c>
 8011762:	fb90 f0f3 	sdiv	r0, r0, r3
 8011766:	6a13      	ldr	r3, [r2, #32]
 8011768:	4358      	muls	r0, r3
 801176a:	bd08      	pop	{r3, pc}
 801176c:	6a12      	ldr	r2, [r2, #32]
 801176e:	4350      	muls	r0, r2
 8011770:	fbb0 f0f3 	udiv	r0, r0, r3
 8011774:	bd08      	pop	{r3, pc}
 8011776:	bf00      	nop
 8011778:	200199fc 	.word	0x200199fc

0801177c <_Alloc>:
 801177c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011780:	4d38      	ldr	r5, [pc, #224]	; (8011864 <_Alloc+0xe8>)
 8011782:	4604      	mov	r4, r0
 8011784:	f7ff feba 	bl	80114fc <_InitOnce>
 8011788:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 801178a:	682b      	ldr	r3, [r5, #0]
 801178c:	42bc      	cmp	r4, r7
 801178e:	bf24      	itt	cs
 8011790:	1ce7      	addcs	r7, r4, #3
 8011792:	f027 0703 	biccs.w	r7, r7, #3
 8011796:	370c      	adds	r7, #12
 8011798:	429f      	cmp	r7, r3
 801179a:	4c32      	ldr	r4, [pc, #200]	; (8011864 <_Alloc+0xe8>)
 801179c:	d83e      	bhi.n	801181c <_Alloc+0xa0>
 801179e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80117a0:	6862      	ldr	r2, [r4, #4]
 80117a2:	429a      	cmp	r2, r3
 80117a4:	d90f      	bls.n	80117c6 <_Alloc+0x4a>
 80117a6:	686b      	ldr	r3, [r5, #4]
 80117a8:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 80117aa:	3b01      	subs	r3, #1
 80117ac:	606b      	str	r3, [r5, #4]
 80117ae:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80117b0:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 80117b4:	eb03 0209 	add.w	r2, r3, r9
 80117b8:	6852      	ldr	r2, [r2, #4]
 80117ba:	626a      	str	r2, [r5, #36]	; 0x24
 80117bc:	2201      	movs	r2, #1
 80117be:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 80117c2:	b956      	cbnz	r6, 80117da <_Alloc+0x5e>
 80117c4:	e02a      	b.n	801181c <_Alloc+0xa0>
 80117c6:	3b01      	subs	r3, #1
 80117c8:	6323      	str	r3, [r4, #48]	; 0x30
 80117ca:	f7ff fe4b 	bl	8011464 <_EnlargeBlocks>
 80117ce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80117d0:	3301      	adds	r3, #1
 80117d2:	6323      	str	r3, [r4, #48]	; 0x30
 80117d4:	2800      	cmp	r0, #0
 80117d6:	d0e6      	beq.n	80117a6 <_Alloc+0x2a>
 80117d8:	e020      	b.n	801181c <_Alloc+0xa0>
 80117da:	230f      	movs	r3, #15
 80117dc:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 80117e0:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80117e2:	4297      	cmp	r7, r2
 80117e4:	d20c      	bcs.n	8011800 <_Alloc+0x84>
 80117e6:	f113 33ff 	adds.w	r3, r3, #4294967295
 80117ea:	d2f7      	bcs.n	80117dc <_Alloc+0x60>
 80117ec:	e008      	b.n	8011800 <_Alloc+0x84>
 80117ee:	6894      	ldr	r4, [r2, #8]
 80117f0:	b12c      	cbz	r4, 80117fe <_Alloc+0x82>
 80117f2:	6862      	ldr	r2, [r4, #4]
 80117f4:	4297      	cmp	r7, r2
 80117f6:	d914      	bls.n	8011822 <_Alloc+0xa6>
 80117f8:	68a2      	ldr	r2, [r4, #8]
 80117fa:	2a00      	cmp	r2, #0
 80117fc:	d1f7      	bne.n	80117ee <_Alloc+0x72>
 80117fe:	3301      	adds	r3, #1
 8011800:	2b0f      	cmp	r3, #15
 8011802:	d803      	bhi.n	801180c <_Alloc+0x90>
 8011804:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8011808:	6c52      	ldr	r2, [r2, #68]	; 0x44
 801180a:	e7f6      	b.n	80117fa <_Alloc+0x7e>
 801180c:	4638      	mov	r0, r7
 801180e:	f7ff fd75 	bl	80112fc <_RemoveHoles>
 8011812:	2800      	cmp	r0, #0
 8011814:	d0e1      	beq.n	80117da <_Alloc+0x5e>
 8011816:	4630      	mov	r0, r6
 8011818:	f7ff fcd2 	bl	80111c0 <_PushFreeBlock>
 801181c:	2000      	movs	r0, #0
 801181e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011822:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8011826:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8011828:	ebc7 0208 	rsb	r2, r7, r8
 801182c:	330c      	adds	r3, #12
 801182e:	4620      	mov	r0, r4
 8011830:	429a      	cmp	r2, r3
 8011832:	bf38      	it	cc
 8011834:	4647      	movcc	r7, r8
 8011836:	f7ff fcf1 	bl	801121c <_RemoveFreeBlock>
 801183a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 801183c:	444b      	add	r3, r9
 801183e:	19e1      	adds	r1, r4, r7
 8011840:	605c      	str	r4, [r3, #4]
 8011842:	45b8      	cmp	r8, r7
 8011844:	f04f 0300 	mov.w	r3, #0
 8011848:	e884 00c0 	stmia.w	r4, {r6, r7}
 801184c:	60a3      	str	r3, [r4, #8]
 801184e:	6124      	str	r4, [r4, #16]
 8011850:	f841 7c04 	str.w	r7, [r1, #-4]
 8011854:	dd03      	ble.n	801185e <_Alloc+0xe2>
 8011856:	ebc7 0008 	rsb	r0, r7, r8
 801185a:	f7ff fcff 	bl	801125c <_AddFreeMemory>
 801185e:	4630      	mov	r0, r6
 8011860:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011864:	200199fc 	.word	0x200199fc

08011868 <GUI_ALLOC_AllocNoInit>:
 8011868:	b108      	cbz	r0, 801186e <GUI_ALLOC_AllocNoInit+0x6>
 801186a:	f7ff bf87 	b.w	801177c <_Alloc>
 801186e:	4770      	bx	lr

08011870 <GUI_ALLOC_FreePtr>:
 8011870:	b510      	push	{r4, lr}
 8011872:	4604      	mov	r4, r0
 8011874:	6800      	ldr	r0, [r0, #0]
 8011876:	f7ff fddd 	bl	8011434 <GUI_ALLOC_Free>
 801187a:	2300      	movs	r3, #0
 801187c:	6023      	str	r3, [r4, #0]
 801187e:	bd10      	pop	{r4, pc}

08011880 <GUI_ALLOC_FreePtrArray>:
 8011880:	b570      	push	{r4, r5, r6, lr}
 8011882:	4605      	mov	r5, r0
 8011884:	460e      	mov	r6, r1
 8011886:	2400      	movs	r4, #0
 8011888:	42b4      	cmp	r4, r6
 801188a:	da05      	bge.n	8011898 <GUI_ALLOC_FreePtrArray+0x18>
 801188c:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 8011890:	f7ff ffee 	bl	8011870 <GUI_ALLOC_FreePtr>
 8011894:	3401      	adds	r4, #1
 8011896:	e7f7      	b.n	8011888 <GUI_ALLOC_FreePtrArray+0x8>
 8011898:	bd70      	pop	{r4, r5, r6, pc}

0801189a <GUI_ALLOC_AllocZero>:
 801189a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801189c:	4605      	mov	r5, r0
 801189e:	f7ff ffe3 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 80118a2:	4606      	mov	r6, r0
 80118a4:	b158      	cbz	r0, 80118be <GUI_ALLOC_AllocZero+0x24>
 80118a6:	f7ff fd8b 	bl	80113c0 <GUI_ALLOC_LockH>
 80118aa:	ac02      	add	r4, sp, #8
 80118ac:	2100      	movs	r1, #0
 80118ae:	f844 0d04 	str.w	r0, [r4, #-4]!
 80118b2:	462a      	mov	r2, r5
 80118b4:	f7fd f9de 	bl	800ec74 <GUI__memset>
 80118b8:	4620      	mov	r0, r4
 80118ba:	f7ff fd8f 	bl	80113dc <GUI_ALLOC_UnlockH>
 80118be:	4630      	mov	r0, r6
 80118c0:	b002      	add	sp, #8
 80118c2:	bd70      	pop	{r4, r5, r6, pc}

080118c4 <GUI_ALLOC_AllocInit>:
 80118c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80118c6:	4605      	mov	r5, r0
 80118c8:	460c      	mov	r4, r1
 80118ca:	b909      	cbnz	r1, 80118d0 <GUI_ALLOC_AllocInit+0xc>
 80118cc:	2000      	movs	r0, #0
 80118ce:	e014      	b.n	80118fa <GUI_ALLOC_AllocInit+0x36>
 80118d0:	4608      	mov	r0, r1
 80118d2:	f7ff ffc9 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 80118d6:	4606      	mov	r6, r0
 80118d8:	2800      	cmp	r0, #0
 80118da:	d0f7      	beq.n	80118cc <GUI_ALLOC_AllocInit+0x8>
 80118dc:	f7ff fd70 	bl	80113c0 <GUI_ALLOC_LockH>
 80118e0:	4629      	mov	r1, r5
 80118e2:	9001      	str	r0, [sp, #4]
 80118e4:	4622      	mov	r2, r4
 80118e6:	b115      	cbz	r5, 80118ee <GUI_ALLOC_AllocInit+0x2a>
 80118e8:	f007 fa23 	bl	8018d32 <memcpy>
 80118ec:	e001      	b.n	80118f2 <GUI_ALLOC_AllocInit+0x2e>
 80118ee:	f7fd f9c1 	bl	800ec74 <GUI__memset>
 80118f2:	a801      	add	r0, sp, #4
 80118f4:	f7ff fd72 	bl	80113dc <GUI_ALLOC_UnlockH>
 80118f8:	4630      	mov	r0, r6
 80118fa:	b002      	add	sp, #8
 80118fc:	bd70      	pop	{r4, r5, r6, pc}
	...

08011900 <LCD_Index2Color_M565>:
 8011900:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 8011904:	4b06      	ldr	r3, [pc, #24]	; (8011920 <LCD_Index2Color_M565+0x20>)
 8011906:	f000 021f 	and.w	r2, r0, #31
 801190a:	f3c0 1045 	ubfx	r0, r0, #5, #6
 801190e:	5c9a      	ldrb	r2, [r3, r2]
 8011910:	5c5b      	ldrb	r3, [r3, r1]
 8011912:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 8011916:	4a03      	ldr	r2, [pc, #12]	; (8011924 <LCD_Index2Color_M565+0x24>)
 8011918:	5c10      	ldrb	r0, [r2, r0]
 801191a:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 801191e:	4770      	bx	lr
 8011920:	0801fc6e 	.word	0x0801fc6e
 8011924:	0801fc2e 	.word	0x0801fc2e

08011928 <_Color2Index_M565>:
 8011928:	f3c0 4107 	ubfx	r1, r0, #16, #8
 801192c:	4b06      	ldr	r3, [pc, #24]	; (8011948 <_Color2Index_M565+0x20>)
 801192e:	b2c2      	uxtb	r2, r0
 8011930:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8011934:	5c9a      	ldrb	r2, [r3, r2]
 8011936:	5c5b      	ldrb	r3, [r3, r1]
 8011938:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 801193c:	4a03      	ldr	r2, [pc, #12]	; (801194c <_Color2Index_M565+0x24>)
 801193e:	5c10      	ldrb	r0, [r2, r0]
 8011940:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 8011944:	4770      	bx	lr
 8011946:	bf00      	nop
 8011948:	0801fd8e 	.word	0x0801fd8e
 801194c:	0801fc8e 	.word	0x0801fc8e

08011950 <_GetIndexMask_M565>:
 8011950:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8011954:	4770      	bx	lr
	...

08011958 <_Color2IndexBulk>:
 8011958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801195a:	4f0f      	ldr	r7, [pc, #60]	; (8011998 <_Color2IndexBulk+0x40>)
 801195c:	683f      	ldr	r7, [r7, #0]
 801195e:	4606      	mov	r6, r0
 8011960:	460d      	mov	r5, r1
 8011962:	4614      	mov	r4, r2
 8011964:	469c      	mov	ip, r3
 8011966:	b10f      	cbz	r7, 801196c <_Color2IndexBulk+0x14>
 8011968:	47b8      	blx	r7
 801196a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801196c:	f856 2b04 	ldr.w	r2, [r6], #4
 8011970:	490a      	ldr	r1, [pc, #40]	; (801199c <_Color2IndexBulk+0x44>)
 8011972:	b2d3      	uxtb	r3, r2
 8011974:	3c01      	subs	r4, #1
 8011976:	5cc8      	ldrb	r0, [r1, r3]
 8011978:	f3c2 4307 	ubfx	r3, r2, #16, #8
 801197c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8011980:	5ccb      	ldrb	r3, [r1, r3]
 8011982:	4907      	ldr	r1, [pc, #28]	; (80119a0 <_Color2IndexBulk+0x48>)
 8011984:	5c8a      	ldrb	r2, [r1, r2]
 8011986:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 801198a:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 801198e:	802b      	strh	r3, [r5, #0]
 8011990:	4465      	add	r5, ip
 8011992:	d1eb      	bne.n	801196c <_Color2IndexBulk+0x14>
 8011994:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011996:	bf00      	nop
 8011998:	200196a8 	.word	0x200196a8
 801199c:	0801fd8e 	.word	0x0801fd8e
 80119a0:	0801fc8e 	.word	0x0801fc8e

080119a4 <_Index2ColorBulk>:
 80119a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80119a6:	4e13      	ldr	r6, [pc, #76]	; (80119f4 <_Index2ColorBulk+0x50>)
 80119a8:	6836      	ldr	r6, [r6, #0]
 80119aa:	4684      	mov	ip, r0
 80119ac:	4614      	mov	r4, r2
 80119ae:	461d      	mov	r5, r3
 80119b0:	b10e      	cbz	r6, 80119b6 <_Index2ColorBulk+0x12>
 80119b2:	47b0      	blx	r6
 80119b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119b6:	1e50      	subs	r0, r2, #1
 80119b8:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80119bc:	3a01      	subs	r2, #1
 80119be:	fb03 c000 	mla	r0, r3, r0, ip
 80119c2:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80119c6:	8802      	ldrh	r2, [r0, #0]
 80119c8:	4b0b      	ldr	r3, [pc, #44]	; (80119f8 <_Index2ColorBulk+0x54>)
 80119ca:	f002 061f 	and.w	r6, r2, #31
 80119ce:	0ad7      	lsrs	r7, r2, #11
 80119d0:	5d9e      	ldrb	r6, [r3, r6]
 80119d2:	5ddb      	ldrb	r3, [r3, r7]
 80119d4:	f3c2 1245 	ubfx	r2, r2, #5, #6
 80119d8:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 80119dc:	4e07      	ldr	r6, [pc, #28]	; (80119fc <_Index2ColorBulk+0x58>)
 80119de:	5cb2      	ldrb	r2, [r6, r2]
 80119e0:	3c01      	subs	r4, #1
 80119e2:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 80119e6:	f841 3904 	str.w	r3, [r1], #-4
 80119ea:	ebc5 0000 	rsb	r0, r5, r0
 80119ee:	d1ea      	bne.n	80119c6 <_Index2ColorBulk+0x22>
 80119f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119f2:	bf00      	nop
 80119f4:	200196a4 	.word	0x200196a4
 80119f8:	0801fc6e 	.word	0x0801fc6e
 80119fc:	0801fc2e 	.word	0x0801fc2e

08011a00 <LCD_Index2Color_888>:
 8011a00:	4770      	bx	lr

08011a02 <LCD_Index2Color_8888>:
 8011a02:	4770      	bx	lr

08011a04 <_Color2Index_8888>:
 8011a04:	4770      	bx	lr

08011a06 <_GetIndexMask_8888>:
 8011a06:	f04f 30ff 	mov.w	r0, #4294967295
 8011a0a:	4770      	bx	lr

08011a0c <_Color2IndexBulk>:
 8011a0c:	b510      	push	{r4, lr}
 8011a0e:	f850 4b04 	ldr.w	r4, [r0], #4
 8011a12:	600c      	str	r4, [r1, #0]
 8011a14:	3a01      	subs	r2, #1
 8011a16:	4419      	add	r1, r3
 8011a18:	d1f9      	bne.n	8011a0e <_Color2IndexBulk+0x2>
 8011a1a:	bd10      	pop	{r4, pc}

08011a1c <_Index2ColorBulk>:
 8011a1c:	b510      	push	{r4, lr}
 8011a1e:	6804      	ldr	r4, [r0, #0]
 8011a20:	f841 4b04 	str.w	r4, [r1], #4
 8011a24:	3a01      	subs	r2, #1
 8011a26:	4418      	add	r0, r3
 8011a28:	d1f9      	bne.n	8011a1e <_Index2ColorBulk+0x2>
 8011a2a:	bd10      	pop	{r4, pc}

08011a2c <WIDGET_SetEffect>:
 8011a2c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011a2e:	2300      	movs	r3, #0
 8011a30:	9302      	str	r3, [sp, #8]
 8011a32:	9103      	str	r1, [sp, #12]
 8011a34:	f44f 7340 	mov.w	r3, #768	; 0x300
 8011a38:	4669      	mov	r1, sp
 8011a3a:	9300      	str	r3, [sp, #0]
 8011a3c:	f7f9 fdb6 	bl	800b5ac <WM_SendMessage>
 8011a40:	b005      	add	sp, #20
 8011a42:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08011a48 <WIDGET__FillStringInRect>:
 8011a48:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8011a4c:	461e      	mov	r6, r3
 8011a4e:	4b3f      	ldr	r3, [pc, #252]	; (8011b4c <WIDGET__FillStringInRect+0x104>)
 8011a50:	681b      	ldr	r3, [r3, #0]
 8011a52:	4690      	mov	r8, r2
 8011a54:	695a      	ldr	r2, [r3, #20]
 8011a56:	4607      	mov	r7, r0
 8011a58:	460c      	mov	r4, r1
 8011a5a:	b90a      	cbnz	r2, 8011a60 <WIDGET__FillStringInRect+0x18>
 8011a5c:	bb1f      	cbnz	r7, 8011aa6 <WIDGET__FillStringInRect+0x5e>
 8011a5e:	e06f      	b.n	8011b40 <WIDGET__FillStringInRect+0xf8>
 8011a60:	6808      	ldr	r0, [r1, #0]
 8011a62:	6849      	ldr	r1, [r1, #4]
 8011a64:	466d      	mov	r5, sp
 8011a66:	c503      	stmia	r5!, {r0, r1}
 8011a68:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 8011a6c:	f8bd 0000 	ldrh.w	r0, [sp]
 8011a70:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8011a74:	4408      	add	r0, r1
 8011a76:	f8ad 0000 	strh.w	r0, [sp]
 8011a7a:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 8011a7e:	4418      	add	r0, r3
 8011a80:	f8ad 0002 	strh.w	r0, [sp, #2]
 8011a84:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 8011a88:	4401      	add	r1, r0
 8011a8a:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011a8e:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8011a92:	4610      	mov	r0, r2
 8011a94:	440b      	add	r3, r1
 8011a96:	4669      	mov	r1, sp
 8011a98:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011a9c:	f7fe fafe 	bl	801009c <GUI_RectsIntersect>
 8011aa0:	2800      	cmp	r0, #0
 8011aa2:	d050      	beq.n	8011b46 <WIDGET__FillStringInRect+0xfe>
 8011aa4:	e7da      	b.n	8011a5c <WIDGET__FillStringInRect+0x14>
 8011aa6:	783b      	ldrb	r3, [r7, #0]
 8011aa8:	2b00      	cmp	r3, #0
 8011aaa:	d049      	beq.n	8011b40 <WIDGET__FillStringInRect+0xf8>
 8011aac:	f005 f95c 	bl	8016d68 <GUI_GetBkColor>
 8011ab0:	0e00      	lsrs	r0, r0, #24
 8011ab2:	d003      	beq.n	8011abc <WIDGET__FillStringInRect+0x74>
 8011ab4:	2002      	movs	r0, #2
 8011ab6:	f7fe fa5b 	bl	800ff70 <GUI_SetTextMode>
 8011aba:	e032      	b.n	8011b22 <WIDGET__FillStringInRect+0xda>
 8011abc:	f7fe fa58 	bl	800ff70 <GUI_SetTextMode>
 8011ac0:	4641      	mov	r1, r8
 8011ac2:	4632      	mov	r2, r6
 8011ac4:	a802      	add	r0, sp, #8
 8011ac6:	f7fd f9c5 	bl	800ee54 <GUI__IntersectRects>
 8011aca:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8011ace:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011ad2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011ad6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011ada:	3b01      	subs	r3, #1
 8011adc:	f7ff f80e 	bl	8010afc <GUI_ClearRect>
 8011ae0:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8011ae4:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011ae8:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8011aec:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011af0:	3a01      	subs	r2, #1
 8011af2:	f7ff f803 	bl	8010afc <GUI_ClearRect>
 8011af6:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 8011afa:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8011afe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011b02:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011b06:	3001      	adds	r0, #1
 8011b08:	f7fe fff8 	bl	8010afc <GUI_ClearRect>
 8011b0c:	f9bd 100e 	ldrsh.w	r1, [sp, #14]
 8011b10:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011b14:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011b18:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011b1c:	3101      	adds	r1, #1
 8011b1e:	f7fe ffed 	bl	8010afc <GUI_ClearRect>
 8011b22:	4640      	mov	r0, r8
 8011b24:	f7f8 fc0c 	bl	800a340 <WM_SetUserClipRect>
 8011b28:	f9b6 1000 	ldrsh.w	r1, [r6]
 8011b2c:	f9b6 2002 	ldrsh.w	r2, [r6, #2]
 8011b30:	4604      	mov	r4, r0
 8011b32:	4638      	mov	r0, r7
 8011b34:	f7fe fe5e 	bl	80107f4 <GUI_DispStringAt>
 8011b38:	4620      	mov	r0, r4
 8011b3a:	f7f8 fc01 	bl	800a340 <WM_SetUserClipRect>
 8011b3e:	e002      	b.n	8011b46 <WIDGET__FillStringInRect+0xfe>
 8011b40:	4620      	mov	r0, r4
 8011b42:	f005 fe21 	bl	8017788 <GUI_ClearRectEx>
 8011b46:	b004      	add	sp, #16
 8011b48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b4c:	2000016c 	.word	0x2000016c

08011b50 <_DrawDownRect>:
 8011b50:	b510      	push	{r4, lr}
 8011b52:	b09c      	sub	sp, #112	; 0x70
 8011b54:	4604      	mov	r4, r0
 8011b56:	4668      	mov	r0, sp
 8011b58:	f7fe fa8c 	bl	8010074 <GUI_SaveContext_W>
 8011b5c:	4b09      	ldr	r3, [pc, #36]	; (8011b84 <_DrawDownRect+0x34>)
 8011b5e:	6818      	ldr	r0, [r3, #0]
 8011b60:	f7fd f852 	bl	800ec08 <LCD_SetColor>
 8011b64:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011b68:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011b6c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011b70:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011b74:	f005 fe14 	bl	80177a0 <GUI_DrawRect>
 8011b78:	4668      	mov	r0, sp
 8011b7a:	f7fe fa85 	bl	8010088 <GUI_RestoreContext>
 8011b7e:	b01c      	add	sp, #112	; 0x70
 8011b80:	bd10      	pop	{r4, pc}
 8011b82:	bf00      	nop
 8011b84:	200196ac 	.word	0x200196ac

08011b88 <_DrawUpRect>:
 8011b88:	b510      	push	{r4, lr}
 8011b8a:	b09c      	sub	sp, #112	; 0x70
 8011b8c:	4604      	mov	r4, r0
 8011b8e:	4668      	mov	r0, sp
 8011b90:	f7fe fa70 	bl	8010074 <GUI_SaveContext_W>
 8011b94:	4b09      	ldr	r3, [pc, #36]	; (8011bbc <_DrawUpRect+0x34>)
 8011b96:	6818      	ldr	r0, [r3, #0]
 8011b98:	f7fd f836 	bl	800ec08 <LCD_SetColor>
 8011b9c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011ba0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011ba4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011ba8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011bac:	f005 fdf8 	bl	80177a0 <GUI_DrawRect>
 8011bb0:	4668      	mov	r0, sp
 8011bb2:	f7fe fa69 	bl	8010088 <GUI_RestoreContext>
 8011bb6:	b01c      	add	sp, #112	; 0x70
 8011bb8:	bd10      	pop	{r4, pc}
 8011bba:	bf00      	nop
 8011bbc:	200196ac 	.word	0x200196ac

08011bc0 <_DrawDown>:
 8011bc0:	b507      	push	{r0, r1, r2, lr}
 8011bc2:	4668      	mov	r0, sp
 8011bc4:	f7f8 ffea 	bl	800ab9c <WM_GetClientRect>
 8011bc8:	4668      	mov	r0, sp
 8011bca:	f7ff ffc1 	bl	8011b50 <_DrawDownRect>
 8011bce:	b003      	add	sp, #12
 8011bd0:	f85d fb04 	ldr.w	pc, [sp], #4

08011bd4 <_DrawUp>:
 8011bd4:	b507      	push	{r0, r1, r2, lr}
 8011bd6:	4668      	mov	r0, sp
 8011bd8:	f7f8 ffe0 	bl	800ab9c <WM_GetClientRect>
 8011bdc:	4668      	mov	r0, sp
 8011bde:	f7ff ffd3 	bl	8011b88 <_DrawUpRect>
 8011be2:	b003      	add	sp, #12
 8011be4:	f85d fb04 	ldr.w	pc, [sp], #4

08011be8 <SLIDER_DrawSkinFlex>:
 8011be8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8011bec:	6a03      	ldr	r3, [r0, #32]
 8011bee:	4604      	mov	r4, r0
 8011bf0:	2b00      	cmp	r3, #0
 8011bf2:	f000 81d7 	beq.w	8011fa4 <SLIDER_DrawSkinFlex+0x3bc>
 8011bf6:	68da      	ldr	r2, [r3, #12]
 8011bf8:	4984      	ldr	r1, [pc, #528]	; (8011e0c <SLIDER_DrawSkinFlex+0x224>)
 8011bfa:	4d85      	ldr	r5, [pc, #532]	; (8011e10 <SLIDER_DrawSkinFlex+0x228>)
 8011bfc:	2a00      	cmp	r2, #0
 8011bfe:	bf18      	it	ne
 8011c00:	460d      	movne	r5, r1
 8011c02:	6842      	ldr	r2, [r0, #4]
 8011c04:	3a0a      	subs	r2, #10
 8011c06:	2a0a      	cmp	r2, #10
 8011c08:	f200 81cc 	bhi.w	8011fa4 <SLIDER_DrawSkinFlex+0x3bc>
 8011c0c:	e8df f012 	tbh	[pc, r2, lsl #1]
 8011c10:	01ca01b2 	.word	0x01ca01b2
 8011c14:	01ca01ca 	.word	0x01ca01ca
 8011c18:	000b01ca 	.word	0x000b01ca
 8011c1c:	01ca01ca 	.word	0x01ca01ca
 8011c20:	008001ca 	.word	0x008001ca
 8011c24:	017a      	.short	0x017a
 8011c26:	6919      	ldr	r1, [r3, #16]
 8011c28:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8011c2a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8011c2c:	2900      	cmp	r1, #0
 8011c2e:	d035      	beq.n	8011c9c <SLIDER_DrawSkinFlex+0xb4>
 8011c30:	6901      	ldr	r1, [r0, #16]
 8011c32:	6980      	ldr	r0, [r0, #24]
 8011c34:	1a46      	subs	r6, r0, r1
 8011c36:	1af6      	subs	r6, r6, r3
 8011c38:	1ab6      	subs	r6, r6, r2
 8011c3a:	2702      	movs	r7, #2
 8011c3c:	fb96 f6f7 	sdiv	r6, r6, r7
 8011c40:	440e      	add	r6, r1
 8011c42:	eb06 0802 	add.w	r8, r6, r2
 8011c46:	f108 37ff 	add.w	r7, r8, #4294967295
 8011c4a:	6928      	ldr	r0, [r5, #16]
 8011c4c:	f7fe f9c8 	bl	800ffe0 <GUI_SetColor>
 8011c50:	4631      	mov	r1, r6
 8011c52:	6960      	ldr	r0, [r4, #20]
 8011c54:	463a      	mov	r2, r7
 8011c56:	f7fe fcab 	bl	80105b0 <GUI_DrawHLine>
 8011c5a:	6961      	ldr	r1, [r4, #20]
 8011c5c:	69e2      	ldr	r2, [r4, #28]
 8011c5e:	4630      	mov	r0, r6
 8011c60:	3101      	adds	r1, #1
 8011c62:	f7fe fc83 	bl	801056c <GUI_DrawVLine>
 8011c66:	3601      	adds	r6, #1
 8011c68:	6968      	ldr	r0, [r5, #20]
 8011c6a:	f1a8 0802 	sub.w	r8, r8, #2
 8011c6e:	f7fe f9b7 	bl	800ffe0 <GUI_SetColor>
 8011c72:	69e0      	ldr	r0, [r4, #28]
 8011c74:	4631      	mov	r1, r6
 8011c76:	4642      	mov	r2, r8
 8011c78:	f7fe fc9a 	bl	80105b0 <GUI_DrawHLine>
 8011c7c:	6961      	ldr	r1, [r4, #20]
 8011c7e:	69e2      	ldr	r2, [r4, #28]
 8011c80:	3101      	adds	r1, #1
 8011c82:	4638      	mov	r0, r7
 8011c84:	f7fe fc72 	bl	801056c <GUI_DrawVLine>
 8011c88:	69a8      	ldr	r0, [r5, #24]
 8011c8a:	f7fe f9a9 	bl	800ffe0 <GUI_SetColor>
 8011c8e:	6961      	ldr	r1, [r4, #20]
 8011c90:	69e3      	ldr	r3, [r4, #28]
 8011c92:	4630      	mov	r0, r6
 8011c94:	3101      	adds	r1, #1
 8011c96:	4642      	mov	r2, r8
 8011c98:	3b01      	subs	r3, #1
 8011c9a:	e036      	b.n	8011d0a <SLIDER_DrawSkinFlex+0x122>
 8011c9c:	6941      	ldr	r1, [r0, #20]
 8011c9e:	69c0      	ldr	r0, [r0, #28]
 8011ca0:	18ce      	adds	r6, r1, r3
 8011ca2:	1a41      	subs	r1, r0, r1
 8011ca4:	1acb      	subs	r3, r1, r3
 8011ca6:	1a9b      	subs	r3, r3, r2
 8011ca8:	2702      	movs	r7, #2
 8011caa:	fb93 f3f7 	sdiv	r3, r3, r7
 8011cae:	3601      	adds	r6, #1
 8011cb0:	441e      	add	r6, r3
 8011cb2:	eb06 0802 	add.w	r8, r6, r2
 8011cb6:	f108 37ff 	add.w	r7, r8, #4294967295
 8011cba:	6928      	ldr	r0, [r5, #16]
 8011cbc:	f7fe f990 	bl	800ffe0 <GUI_SetColor>
 8011cc0:	4631      	mov	r1, r6
 8011cc2:	6920      	ldr	r0, [r4, #16]
 8011cc4:	463a      	mov	r2, r7
 8011cc6:	f7fe fc51 	bl	801056c <GUI_DrawVLine>
 8011cca:	6921      	ldr	r1, [r4, #16]
 8011ccc:	69a2      	ldr	r2, [r4, #24]
 8011cce:	4630      	mov	r0, r6
 8011cd0:	3101      	adds	r1, #1
 8011cd2:	f7fe fc6d 	bl	80105b0 <GUI_DrawHLine>
 8011cd6:	3601      	adds	r6, #1
 8011cd8:	6968      	ldr	r0, [r5, #20]
 8011cda:	f1a8 0802 	sub.w	r8, r8, #2
 8011cde:	f7fe f97f 	bl	800ffe0 <GUI_SetColor>
 8011ce2:	69a0      	ldr	r0, [r4, #24]
 8011ce4:	4631      	mov	r1, r6
 8011ce6:	4642      	mov	r2, r8
 8011ce8:	f7fe fc40 	bl	801056c <GUI_DrawVLine>
 8011cec:	6921      	ldr	r1, [r4, #16]
 8011cee:	69a2      	ldr	r2, [r4, #24]
 8011cf0:	3101      	adds	r1, #1
 8011cf2:	4638      	mov	r0, r7
 8011cf4:	f7fe fc5c 	bl	80105b0 <GUI_DrawHLine>
 8011cf8:	69a8      	ldr	r0, [r5, #24]
 8011cfa:	f7fe f971 	bl	800ffe0 <GUI_SetColor>
 8011cfe:	6920      	ldr	r0, [r4, #16]
 8011d00:	69a2      	ldr	r2, [r4, #24]
 8011d02:	3001      	adds	r0, #1
 8011d04:	4631      	mov	r1, r6
 8011d06:	3a01      	subs	r2, #1
 8011d08:	4643      	mov	r3, r8
 8011d0a:	f7fe fbe9 	bl	80104e0 <GUI_FillRect>
 8011d0e:	e149      	b.n	8011fa4 <SLIDER_DrawSkinFlex+0x3bc>
 8011d10:	681e      	ldr	r6, [r3, #0]
 8011d12:	6919      	ldr	r1, [r3, #16]
 8011d14:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8011d16:	3601      	adds	r6, #1
 8011d18:	1076      	asrs	r6, r6, #1
 8011d1a:	2900      	cmp	r1, #0
 8011d1c:	d07a      	beq.n	8011e14 <SLIDER_DrawSkinFlex+0x22c>
 8011d1e:	6983      	ldr	r3, [r0, #24]
 8011d20:	6828      	ldr	r0, [r5, #0]
 8011d22:	ebc2 0a03 	rsb	sl, r2, r3
 8011d26:	f10a 39ff 	add.w	r9, sl, #4294967295
 8011d2a:	f7fe f959 	bl	800ffe0 <GUI_SetColor>
 8011d2e:	6961      	ldr	r1, [r4, #20]
 8011d30:	ebc6 0809 	rsb	r8, r6, r9
 8011d34:	f108 0701 	add.w	r7, r8, #1
 8011d38:	198b      	adds	r3, r1, r6
 8011d3a:	4638      	mov	r0, r7
 8011d3c:	464a      	mov	r2, r9
 8011d3e:	3b01      	subs	r3, #1
 8011d40:	f005 fa5c 	bl	80171fc <GUI_DrawLine>
 8011d44:	69e1      	ldr	r1, [r4, #28]
 8011d46:	1b8b      	subs	r3, r1, r6
 8011d48:	3301      	adds	r3, #1
 8011d4a:	4638      	mov	r0, r7
 8011d4c:	464a      	mov	r2, r9
 8011d4e:	f005 fa55 	bl	80171fc <GUI_DrawLine>
 8011d52:	6960      	ldr	r0, [r4, #20]
 8011d54:	6921      	ldr	r1, [r4, #16]
 8011d56:	4642      	mov	r2, r8
 8011d58:	f7fe fc2a 	bl	80105b0 <GUI_DrawHLine>
 8011d5c:	69e0      	ldr	r0, [r4, #28]
 8011d5e:	6921      	ldr	r1, [r4, #16]
 8011d60:	4642      	mov	r2, r8
 8011d62:	f7fe fc25 	bl	80105b0 <GUI_DrawHLine>
 8011d66:	6961      	ldr	r1, [r4, #20]
 8011d68:	69e2      	ldr	r2, [r4, #28]
 8011d6a:	6920      	ldr	r0, [r4, #16]
 8011d6c:	f7fe fbfe 	bl	801056c <GUI_DrawVLine>
 8011d70:	6868      	ldr	r0, [r5, #4]
 8011d72:	f7fe f935 	bl	800ffe0 <GUI_SetColor>
 8011d76:	6961      	ldr	r1, [r4, #20]
 8011d78:	f1aa 0a02 	sub.w	sl, sl, #2
 8011d7c:	198b      	adds	r3, r1, r6
 8011d7e:	4638      	mov	r0, r7
 8011d80:	3101      	adds	r1, #1
 8011d82:	4652      	mov	r2, sl
 8011d84:	3b01      	subs	r3, #1
 8011d86:	f005 fa39 	bl	80171fc <GUI_DrawLine>
 8011d8a:	69e1      	ldr	r1, [r4, #28]
 8011d8c:	1b8b      	subs	r3, r1, r6
 8011d8e:	3301      	adds	r3, #1
 8011d90:	4638      	mov	r0, r7
 8011d92:	3901      	subs	r1, #1
 8011d94:	4652      	mov	r2, sl
 8011d96:	f005 fa31 	bl	80171fc <GUI_DrawLine>
 8011d9a:	6960      	ldr	r0, [r4, #20]
 8011d9c:	6921      	ldr	r1, [r4, #16]
 8011d9e:	3001      	adds	r0, #1
 8011da0:	3101      	adds	r1, #1
 8011da2:	4642      	mov	r2, r8
 8011da4:	f7fe fc04 	bl	80105b0 <GUI_DrawHLine>
 8011da8:	69e0      	ldr	r0, [r4, #28]
 8011daa:	6921      	ldr	r1, [r4, #16]
 8011dac:	3801      	subs	r0, #1
 8011dae:	3101      	adds	r1, #1
 8011db0:	4642      	mov	r2, r8
 8011db2:	f7fe fbfd 	bl	80105b0 <GUI_DrawHLine>
 8011db6:	6920      	ldr	r0, [r4, #16]
 8011db8:	6961      	ldr	r1, [r4, #20]
 8011dba:	69e2      	ldr	r2, [r4, #28]
 8011dbc:	3001      	adds	r0, #1
 8011dbe:	3101      	adds	r1, #1
 8011dc0:	3a01      	subs	r2, #1
 8011dc2:	f7fe fbd3 	bl	801056c <GUI_DrawVLine>
 8011dc6:	68aa      	ldr	r2, [r5, #8]
 8011dc8:	6920      	ldr	r0, [r4, #16]
 8011dca:	6961      	ldr	r1, [r4, #20]
 8011dcc:	69e3      	ldr	r3, [r4, #28]
 8011dce:	9200      	str	r2, [sp, #0]
 8011dd0:	68ea      	ldr	r2, [r5, #12]
 8011dd2:	9201      	str	r2, [sp, #4]
 8011dd4:	3002      	adds	r0, #2
 8011dd6:	3102      	adds	r1, #2
 8011dd8:	463a      	mov	r2, r7
 8011dda:	3b02      	subs	r3, #2
 8011ddc:	f005 fb4c 	bl	8017478 <GUI_DrawGradientH>
 8011de0:	68e8      	ldr	r0, [r5, #12]
 8011de2:	f7fe f8fd 	bl	800ffe0 <GUI_SetColor>
 8011de6:	2502      	movs	r5, #2
 8011de8:	1e73      	subs	r3, r6, #1
 8011dea:	429d      	cmp	r5, r3
 8011dec:	f280 80da 	bge.w	8011fa4 <SLIDER_DrawSkinFlex+0x3bc>
 8011df0:	6963      	ldr	r3, [r4, #20]
 8011df2:	4433      	add	r3, r6
 8011df4:	1b59      	subs	r1, r3, r5
 8011df6:	69e3      	ldr	r3, [r4, #28]
 8011df8:	1b9b      	subs	r3, r3, r6
 8011dfa:	195a      	adds	r2, r3, r5
 8011dfc:	ebc5 0009 	rsb	r0, r5, r9
 8011e00:	3101      	adds	r1, #1
 8011e02:	3a01      	subs	r2, #1
 8011e04:	f7fe fbb2 	bl	801056c <GUI_DrawVLine>
 8011e08:	3501      	adds	r5, #1
 8011e0a:	e7ed      	b.n	8011de8 <SLIDER_DrawSkinFlex+0x200>
 8011e0c:	20000178 	.word	0x20000178
 8011e10:	200001a4 	.word	0x200001a4
 8011e14:	6943      	ldr	r3, [r0, #20]
 8011e16:	6828      	ldr	r0, [r5, #0]
 8011e18:	eb03 0a02 	add.w	sl, r3, r2
 8011e1c:	f10a 0901 	add.w	r9, sl, #1
 8011e20:	f7fe f8de 	bl	800ffe0 <GUI_SetColor>
 8011e24:	6922      	ldr	r2, [r4, #16]
 8011e26:	eb09 0806 	add.w	r8, r9, r6
 8011e2a:	f108 37ff 	add.w	r7, r8, #4294967295
 8011e2e:	1990      	adds	r0, r2, r6
 8011e30:	3801      	subs	r0, #1
 8011e32:	4649      	mov	r1, r9
 8011e34:	463b      	mov	r3, r7
 8011e36:	f005 f9e1 	bl	80171fc <GUI_DrawLine>
 8011e3a:	69a2      	ldr	r2, [r4, #24]
 8011e3c:	1b90      	subs	r0, r2, r6
 8011e3e:	463b      	mov	r3, r7
 8011e40:	3001      	adds	r0, #1
 8011e42:	4649      	mov	r1, r9
 8011e44:	f005 f9da 	bl	80171fc <GUI_DrawLine>
 8011e48:	6920      	ldr	r0, [r4, #16]
 8011e4a:	69e2      	ldr	r2, [r4, #28]
 8011e4c:	4641      	mov	r1, r8
 8011e4e:	f7fe fb8d 	bl	801056c <GUI_DrawVLine>
 8011e52:	69a0      	ldr	r0, [r4, #24]
 8011e54:	69e2      	ldr	r2, [r4, #28]
 8011e56:	4641      	mov	r1, r8
 8011e58:	f7fe fb88 	bl	801056c <GUI_DrawVLine>
 8011e5c:	6921      	ldr	r1, [r4, #16]
 8011e5e:	69a2      	ldr	r2, [r4, #24]
 8011e60:	69e0      	ldr	r0, [r4, #28]
 8011e62:	3101      	adds	r1, #1
 8011e64:	3a01      	subs	r2, #1
 8011e66:	f7fe fba3 	bl	80105b0 <GUI_DrawHLine>
 8011e6a:	6868      	ldr	r0, [r5, #4]
 8011e6c:	f7fe f8b8 	bl	800ffe0 <GUI_SetColor>
 8011e70:	6922      	ldr	r2, [r4, #16]
 8011e72:	f10a 0a02 	add.w	sl, sl, #2
 8011e76:	1990      	adds	r0, r2, r6
 8011e78:	3801      	subs	r0, #1
 8011e7a:	4651      	mov	r1, sl
 8011e7c:	3201      	adds	r2, #1
 8011e7e:	463b      	mov	r3, r7
 8011e80:	f005 f9bc 	bl	80171fc <GUI_DrawLine>
 8011e84:	69a2      	ldr	r2, [r4, #24]
 8011e86:	1b90      	subs	r0, r2, r6
 8011e88:	463b      	mov	r3, r7
 8011e8a:	3001      	adds	r0, #1
 8011e8c:	4651      	mov	r1, sl
 8011e8e:	3a01      	subs	r2, #1
 8011e90:	f005 f9b4 	bl	80171fc <GUI_DrawLine>
 8011e94:	6920      	ldr	r0, [r4, #16]
 8011e96:	69e2      	ldr	r2, [r4, #28]
 8011e98:	3001      	adds	r0, #1
 8011e9a:	4641      	mov	r1, r8
 8011e9c:	3a01      	subs	r2, #1
 8011e9e:	f7fe fb65 	bl	801056c <GUI_DrawVLine>
 8011ea2:	69a0      	ldr	r0, [r4, #24]
 8011ea4:	69e2      	ldr	r2, [r4, #28]
 8011ea6:	3801      	subs	r0, #1
 8011ea8:	4641      	mov	r1, r8
 8011eaa:	3a01      	subs	r2, #1
 8011eac:	f7fe fb5e 	bl	801056c <GUI_DrawVLine>
 8011eb0:	69e0      	ldr	r0, [r4, #28]
 8011eb2:	6921      	ldr	r1, [r4, #16]
 8011eb4:	69a2      	ldr	r2, [r4, #24]
 8011eb6:	3801      	subs	r0, #1
 8011eb8:	3102      	adds	r1, #2
 8011eba:	3a02      	subs	r2, #2
 8011ebc:	f7fe fb78 	bl	80105b0 <GUI_DrawHLine>
 8011ec0:	68a9      	ldr	r1, [r5, #8]
 8011ec2:	6920      	ldr	r0, [r4, #16]
 8011ec4:	69a2      	ldr	r2, [r4, #24]
 8011ec6:	69e3      	ldr	r3, [r4, #28]
 8011ec8:	9100      	str	r1, [sp, #0]
 8011eca:	68e9      	ldr	r1, [r5, #12]
 8011ecc:	9101      	str	r1, [sp, #4]
 8011ece:	3002      	adds	r0, #2
 8011ed0:	4639      	mov	r1, r7
 8011ed2:	3a02      	subs	r2, #2
 8011ed4:	3b02      	subs	r3, #2
 8011ed6:	f005 fa9d 	bl	8017414 <GUI_DrawGradientV>
 8011eda:	68a8      	ldr	r0, [r5, #8]
 8011edc:	f7fe f880 	bl	800ffe0 <GUI_SetColor>
 8011ee0:	2502      	movs	r5, #2
 8011ee2:	1e73      	subs	r3, r6, #1
 8011ee4:	429d      	cmp	r5, r3
 8011ee6:	da5d      	bge.n	8011fa4 <SLIDER_DrawSkinFlex+0x3bc>
 8011ee8:	6923      	ldr	r3, [r4, #16]
 8011eea:	4433      	add	r3, r6
 8011eec:	1b59      	subs	r1, r3, r5
 8011eee:	69a3      	ldr	r3, [r4, #24]
 8011ef0:	1b9b      	subs	r3, r3, r6
 8011ef2:	195a      	adds	r2, r3, r5
 8011ef4:	eb09 0005 	add.w	r0, r9, r5
 8011ef8:	3101      	adds	r1, #1
 8011efa:	3a01      	subs	r2, #1
 8011efc:	f7fe fb58 	bl	80105b0 <GUI_DrawHLine>
 8011f00:	3501      	adds	r5, #1
 8011f02:	e7ee      	b.n	8011ee2 <SLIDER_DrawSkinFlex+0x2fa>
 8011f04:	691e      	ldr	r6, [r3, #16]
 8011f06:	69e8      	ldr	r0, [r5, #28]
 8011f08:	b1d6      	cbz	r6, 8011f40 <SLIDER_DrawSkinFlex+0x358>
 8011f0a:	f7fe f869 	bl	800ffe0 <GUI_SetColor>
 8011f0e:	6a27      	ldr	r7, [r4, #32]
 8011f10:	2600      	movs	r6, #0
 8011f12:	687b      	ldr	r3, [r7, #4]
 8011f14:	429e      	cmp	r6, r3
 8011f16:	da45      	bge.n	8011fa4 <SLIDER_DrawSkinFlex+0x3bc>
 8011f18:	6839      	ldr	r1, [r7, #0]
 8011f1a:	69a2      	ldr	r2, [r4, #24]
 8011f1c:	2002      	movs	r0, #2
 8011f1e:	fb91 f0f0 	sdiv	r0, r1, r0
 8011f22:	6961      	ldr	r1, [r4, #20]
 8011f24:	4408      	add	r0, r1
 8011f26:	68b9      	ldr	r1, [r7, #8]
 8011f28:	3b01      	subs	r3, #1
 8011f2a:	4371      	muls	r1, r6
 8011f2c:	fb91 f3f3 	sdiv	r3, r1, r3
 8011f30:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8011f32:	1a51      	subs	r1, r2, r1
 8011f34:	4418      	add	r0, r3
 8011f36:	3101      	adds	r1, #1
 8011f38:	f7fe fb3a 	bl	80105b0 <GUI_DrawHLine>
 8011f3c:	3601      	adds	r6, #1
 8011f3e:	e7e8      	b.n	8011f12 <SLIDER_DrawSkinFlex+0x32a>
 8011f40:	f7fe f84e 	bl	800ffe0 <GUI_SetColor>
 8011f44:	6a27      	ldr	r7, [r4, #32]
 8011f46:	687b      	ldr	r3, [r7, #4]
 8011f48:	429e      	cmp	r6, r3
 8011f4a:	da2b      	bge.n	8011fa4 <SLIDER_DrawSkinFlex+0x3bc>
 8011f4c:	683a      	ldr	r2, [r7, #0]
 8011f4e:	6961      	ldr	r1, [r4, #20]
 8011f50:	2002      	movs	r0, #2
 8011f52:	fb92 f0f0 	sdiv	r0, r2, r0
 8011f56:	6922      	ldr	r2, [r4, #16]
 8011f58:	4410      	add	r0, r2
 8011f5a:	68ba      	ldr	r2, [r7, #8]
 8011f5c:	3b01      	subs	r3, #1
 8011f5e:	4372      	muls	r2, r6
 8011f60:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f64:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8011f66:	440a      	add	r2, r1
 8011f68:	4418      	add	r0, r3
 8011f6a:	3a01      	subs	r2, #1
 8011f6c:	f7fe fafe 	bl	801056c <GUI_DrawVLine>
 8011f70:	3601      	adds	r6, #1
 8011f72:	e7e8      	b.n	8011f46 <SLIDER_DrawSkinFlex+0x35e>
 8011f74:	6800      	ldr	r0, [r0, #0]
 8011f76:	2101      	movs	r1, #1
 8011f78:	f7f6 f82e 	bl	8007fd8 <SLIDER_GetFlag>
 8011f7c:	b190      	cbz	r0, 8011fa4 <SLIDER_DrawSkinFlex+0x3bc>
 8011f7e:	6a28      	ldr	r0, [r5, #32]
 8011f80:	f7fe f82e 	bl	800ffe0 <GUI_SetColor>
 8011f84:	6923      	ldr	r3, [r4, #16]
 8011f86:	f8ad 3008 	strh.w	r3, [sp, #8]
 8011f8a:	6963      	ldr	r3, [r4, #20]
 8011f8c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8011f90:	69a3      	ldr	r3, [r4, #24]
 8011f92:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011f96:	a802      	add	r0, sp, #8
 8011f98:	69e3      	ldr	r3, [r4, #28]
 8011f9a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011f9e:	2100      	movs	r1, #0
 8011fa0:	f7fe fb2a 	bl	80105f8 <GUI_DrawFocusRect>
 8011fa4:	2000      	movs	r0, #0
 8011fa6:	b004      	add	sp, #16
 8011fa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08011fac <_Create>:
 8011fac:	b530      	push	{r4, r5, lr}
 8011fae:	b08b      	sub	sp, #44	; 0x2c
 8011fb0:	4605      	mov	r5, r0
 8011fb2:	f7ff fa05 	bl	80113c0 <GUI_ALLOC_LockH>
 8011fb6:	ab0a      	add	r3, sp, #40	; 0x28
 8011fb8:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8011fba:	f843 0d28 	str.w	r0, [r3, #-40]!
 8011fbe:	4668      	mov	r0, sp
 8011fc0:	f7ff fa0c 	bl	80113dc <GUI_ALLOC_UnlockH>
 8011fc4:	2300      	movs	r3, #0
 8011fc6:	9302      	str	r3, [sp, #8]
 8011fc8:	9501      	str	r5, [sp, #4]
 8011fca:	9309      	str	r3, [sp, #36]	; 0x24
 8011fcc:	a801      	add	r0, sp, #4
 8011fce:	47a0      	blx	r4
 8011fd0:	b00b      	add	sp, #44	; 0x2c
 8011fd2:	bd30      	pop	{r4, r5, pc}

08011fd4 <_Paint>:
 8011fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fd8:	b097      	sub	sp, #92	; 0x5c
 8011fda:	4607      	mov	r7, r0
 8011fdc:	f7ff f9f0 	bl	80113c0 <GUI_ALLOC_LockH>
 8011fe0:	f100 0350 	add.w	r3, r0, #80	; 0x50
 8011fe4:	e893 0168 	ldmia.w	r3, {r3, r5, r6, r8}
 8011fe8:	9309      	str	r3, [sp, #36]	; 0x24
 8011fea:	f9b0 3060 	ldrsh.w	r3, [r0, #96]	; 0x60
 8011fee:	9308      	str	r3, [sp, #32]
 8011ff0:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8011ff2:	9003      	str	r0, [sp, #12]
 8011ff4:	f3c3 2200 	ubfx	r2, r3, #8, #1
 8011ff8:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8011ffa:	920b      	str	r2, [sp, #44]	; 0x2c
 8011ffc:	a803      	add	r0, sp, #12
 8011ffe:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8012002:	f003 0301 	and.w	r3, r3, #1
 8012006:	920c      	str	r2, [sp, #48]	; 0x30
 8012008:	9301      	str	r3, [sp, #4]
 801200a:	f7ff f9e7 	bl	80113dc <GUI_ALLOC_UnlockH>
 801200e:	a904      	add	r1, sp, #16
 8012010:	4638      	mov	r0, r7
 8012012:	f7f8 fdc0 	bl	800ab96 <WM_GetClientRectEx>
 8012016:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801201a:	f9bd c016 	ldrsh.w	ip, [sp, #22]
 801201e:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8012022:	9b08      	ldr	r3, [sp, #32]
 8012024:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 8012028:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801202c:	42b5      	cmp	r5, r6
 801202e:	bf14      	ite	ne
 8012030:	ebc6 0505 	rsbne	r5, r6, r5
 8012034:	2501      	moveq	r5, #1
 8012036:	f1ba 0f00 	cmp.w	sl, #0
 801203a:	d002      	beq.n	8012042 <_Paint+0x6e>
 801203c:	ebc1 090c 	rsb	r9, r1, ip
 8012040:	e001      	b.n	8012046 <_Paint+0x72>
 8012042:	ebc2 090e 	rsb	r9, r2, lr
 8012046:	43d8      	mvns	r0, r3
 8012048:	4481      	add	r9, r0
 801204a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801204c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8012050:	2800      	cmp	r0, #0
 8012052:	da08      	bge.n	8012066 <_Paint+0x92>
 8012054:	f04f 0b05 	mov.w	fp, #5
 8012058:	1c68      	adds	r0, r5, #1
 801205a:	fb99 f9fb 	sdiv	r9, r9, fp
 801205e:	4548      	cmp	r0, r9
 8012060:	bfc8      	it	gt
 8012062:	200b      	movgt	r0, #11
 8012064:	9009      	str	r0, [sp, #36]	; 0x24
 8012066:	ebc6 0608 	rsb	r6, r6, r8
 801206a:	f1ba 0f00 	cmp.w	sl, #0
 801206e:	d003      	beq.n	8012078 <_Paint+0xa4>
 8012070:	1c48      	adds	r0, r1, #1
 8012072:	ebc1 080c 	rsb	r8, r1, ip
 8012076:	e002      	b.n	801207e <_Paint+0xaa>
 8012078:	1c50      	adds	r0, r2, #1
 801207a:	ebc2 080e 	rsb	r8, r2, lr
 801207e:	f108 38ff 	add.w	r8, r8, #4294967295
 8012082:	ebc3 0808 	rsb	r8, r3, r8
 8012086:	fb06 f608 	mul.w	r6, r6, r8
 801208a:	fb96 f6f5 	sdiv	r6, r6, r5
 801208e:	4605      	mov	r5, r0
 8012090:	4435      	add	r5, r6
 8012092:	442b      	add	r3, r5
 8012094:	1e5e      	subs	r6, r3, #1
 8012096:	ab08      	add	r3, sp, #32
 8012098:	f10e 30ff 	add.w	r0, lr, #4294967295
 801209c:	9315      	str	r3, [sp, #84]	; 0x54
 801209e:	230f      	movs	r3, #15
 80120a0:	3101      	adds	r1, #1
 80120a2:	3201      	adds	r2, #1
 80120a4:	930e      	str	r3, [sp, #56]	; 0x38
 80120a6:	9013      	str	r0, [sp, #76]	; 0x4c
 80120a8:	f10c 33ff 	add.w	r3, ip, #4294967295
 80120ac:	f8ad 001c 	strh.w	r0, [sp, #28]
 80120b0:	a806      	add	r0, sp, #24
 80120b2:	9314      	str	r3, [sp, #80]	; 0x50
 80120b4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80120b8:	9112      	str	r1, [sp, #72]	; 0x48
 80120ba:	9211      	str	r2, [sp, #68]	; 0x44
 80120bc:	f8ad 2018 	strh.w	r2, [sp, #24]
 80120c0:	f8ad 101a 	strh.w	r1, [sp, #26]
 80120c4:	970d      	str	r7, [sp, #52]	; 0x34
 80120c6:	f7f8 f93b 	bl	800a340 <WM_SetUserClipRect>
 80120ca:	a80d      	add	r0, sp, #52	; 0x34
 80120cc:	47a0      	blx	r4
 80120ce:	2000      	movs	r0, #0
 80120d0:	f7f8 f936 	bl	800a340 <WM_SetUserClipRect>
 80120d4:	2313      	movs	r3, #19
 80120d6:	930e      	str	r3, [sp, #56]	; 0x38
 80120d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80120da:	b113      	cbz	r3, 80120e2 <_Paint+0x10e>
 80120dc:	9512      	str	r5, [sp, #72]	; 0x48
 80120de:	9614      	str	r6, [sp, #80]	; 0x50
 80120e0:	e001      	b.n	80120e6 <_Paint+0x112>
 80120e2:	9511      	str	r5, [sp, #68]	; 0x44
 80120e4:	9613      	str	r6, [sp, #76]	; 0x4c
 80120e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80120e8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80120ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80120ee:	f8ad 301a 	strh.w	r3, [sp, #26]
 80120f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80120f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80120f8:	a806      	add	r0, sp, #24
 80120fa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80120fc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012100:	f7f8 f91e 	bl	800a340 <WM_SetUserClipRect>
 8012104:	a80d      	add	r0, sp, #52	; 0x34
 8012106:	47a0      	blx	r4
 8012108:	2000      	movs	r0, #0
 801210a:	f7f8 f919 	bl	800a340 <WM_SetUserClipRect>
 801210e:	2314      	movs	r3, #20
 8012110:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8012114:	930e      	str	r3, [sp, #56]	; 0x38
 8012116:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801211a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801211e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8012122:	3001      	adds	r0, #1
 8012124:	3b01      	subs	r3, #1
 8012126:	3101      	adds	r1, #1
 8012128:	3a01      	subs	r2, #1
 801212a:	9011      	str	r0, [sp, #68]	; 0x44
 801212c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8012130:	a806      	add	r0, sp, #24
 8012132:	9314      	str	r3, [sp, #80]	; 0x50
 8012134:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012138:	9112      	str	r1, [sp, #72]	; 0x48
 801213a:	9213      	str	r2, [sp, #76]	; 0x4c
 801213c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8012140:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012144:	f7f8 f8fc 	bl	800a340 <WM_SetUserClipRect>
 8012148:	a80d      	add	r0, sp, #52	; 0x34
 801214a:	47a0      	blx	r4
 801214c:	2000      	movs	r0, #0
 801214e:	f7f8 f8f7 	bl	800a340 <WM_SetUserClipRect>
 8012152:	9b01      	ldr	r3, [sp, #4]
 8012154:	b30b      	cbz	r3, 801219a <_Paint+0x1c6>
 8012156:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 801215a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801215e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8012162:	230a      	movs	r3, #10
 8012164:	930e      	str	r3, [sp, #56]	; 0x38
 8012166:	b20b      	sxth	r3, r1
 8012168:	9312      	str	r3, [sp, #72]	; 0x48
 801216a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801216e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8012172:	b21a      	sxth	r2, r3
 8012174:	9214      	str	r2, [sp, #80]	; 0x50
 8012176:	b202      	sxth	r2, r0
 8012178:	9211      	str	r2, [sp, #68]	; 0x44
 801217a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801217e:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012182:	b215      	sxth	r5, r2
 8012184:	a806      	add	r0, sp, #24
 8012186:	f8ad 301e 	strh.w	r3, [sp, #30]
 801218a:	9513      	str	r5, [sp, #76]	; 0x4c
 801218c:	f7f8 f8d8 	bl	800a340 <WM_SetUserClipRect>
 8012190:	a80d      	add	r0, sp, #52	; 0x34
 8012192:	47a0      	blx	r4
 8012194:	2000      	movs	r0, #0
 8012196:	f7f8 f8d3 	bl	800a340 <WM_SetUserClipRect>
 801219a:	b017      	add	sp, #92	; 0x5c
 801219c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080121a0 <SCROLLBAR_GetValue>:
 80121a0:	b513      	push	{r0, r1, r4, lr}
 80121a2:	4604      	mov	r4, r0
 80121a4:	b140      	cbz	r0, 80121b8 <SCROLLBAR_GetValue+0x18>
 80121a6:	f7ff f90b 	bl	80113c0 <GUI_ALLOC_LockH>
 80121aa:	ab02      	add	r3, sp, #8
 80121ac:	6d04      	ldr	r4, [r0, #80]	; 0x50
 80121ae:	f843 0d04 	str.w	r0, [r3, #-4]!
 80121b2:	4618      	mov	r0, r3
 80121b4:	f7ff f912 	bl	80113dc <GUI_ALLOC_UnlockH>
 80121b8:	4620      	mov	r0, r4
 80121ba:	b002      	add	sp, #8
 80121bc:	bd10      	pop	{r4, pc}

080121be <SCROLLBAR_Create>:
 80121be:	b530      	push	{r4, r5, lr}
 80121c0:	9c05      	ldr	r4, [sp, #20]
 80121c2:	9d04      	ldr	r5, [sp, #16]
 80121c4:	9404      	str	r4, [sp, #16]
 80121c6:	9c06      	ldr	r4, [sp, #24]
 80121c8:	9405      	str	r4, [sp, #20]
 80121ca:	9506      	str	r5, [sp, #24]
 80121cc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80121d0:	f000 b8a6 	b.w	8012320 <SCROLLBAR_CreateEx>

080121d4 <_DeleteTimer>:
 80121d4:	b507      	push	{r0, r1, r2, lr}
 80121d6:	f7ff f8f3 	bl	80113c0 <GUI_ALLOC_LockH>
 80121da:	9001      	str	r0, [sp, #4]
 80121dc:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80121de:	f7f8 f809 	bl	800a1f4 <WM_DeleteTimer>
 80121e2:	a802      	add	r0, sp, #8
 80121e4:	2200      	movs	r2, #0
 80121e6:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80121ea:	665a      	str	r2, [r3, #100]	; 0x64
 80121ec:	65da      	str	r2, [r3, #92]	; 0x5c
 80121ee:	f7ff f8f5 	bl	80113dc <GUI_ALLOC_UnlockH>
 80121f2:	b003      	add	sp, #12
 80121f4:	f85d fb04 	ldr.w	pc, [sp], #4

080121f8 <SCROLLBAR__Rect2VRect>:
 80121f8:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80121fa:	071b      	lsls	r3, r3, #28
 80121fc:	b510      	push	{r4, lr}
 80121fe:	d512      	bpl.n	8012226 <SCROLLBAR__Rect2VRect+0x2e>
 8012200:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8012204:	f9b0 3000 	ldrsh.w	r3, [r0]
 8012208:	8808      	ldrh	r0, [r1, #0]
 801220a:	884c      	ldrh	r4, [r1, #2]
 801220c:	800c      	strh	r4, [r1, #0]
 801220e:	1ad3      	subs	r3, r2, r3
 8012210:	888a      	ldrh	r2, [r1, #4]
 8012212:	88cc      	ldrh	r4, [r1, #6]
 8012214:	808c      	strh	r4, [r1, #4]
 8012216:	3301      	adds	r3, #1
 8012218:	b29b      	uxth	r3, r3
 801221a:	43c0      	mvns	r0, r0
 801221c:	43d2      	mvns	r2, r2
 801221e:	4418      	add	r0, r3
 8012220:	4413      	add	r3, r2
 8012222:	80c8      	strh	r0, [r1, #6]
 8012224:	804b      	strh	r3, [r1, #2]
 8012226:	bd10      	pop	{r4, pc}

08012228 <SCROLLBAR__InvalidatePartner>:
 8012228:	b510      	push	{r4, lr}
 801222a:	4604      	mov	r4, r0
 801222c:	f001 fe05 	bl	8013e3a <WM_GetScrollPartner>
 8012230:	f7f9 fa13 	bl	800b65a <WM_InvalidateWindow>
 8012234:	4620      	mov	r0, r4
 8012236:	f7f8 fc1d 	bl	800aa74 <WM_GetParent>
 801223a:	2125      	movs	r1, #37	; 0x25
 801223c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012240:	f7f8 b9cc 	b.w	800a5dc <WM_SendMessageNoPara>

08012244 <SCROLLBAR_CreateUser>:
 8012244:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012246:	b089      	sub	sp, #36	; 0x24
 8012248:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801224a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801224c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801224e:	b9fa      	cbnz	r2, 8012290 <SCROLLBAR_CreateUser+0x4c>
 8012250:	b9f3      	cbnz	r3, 8012290 <SCROLLBAR_CreateUser+0x4c>
 8012252:	4630      	mov	r0, r6
 8012254:	a906      	add	r1, sp, #24
 8012256:	f001 fe04 	bl	8013e62 <WM_GetInsideRectEx>
 801225a:	f014 0f08 	tst.w	r4, #8
 801225e:	4b2c      	ldr	r3, [pc, #176]	; (8012310 <SCROLLBAR_CreateUser+0xcc>)
 8012260:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 8012264:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 8012268:	d009      	beq.n	801227e <SCROLLBAR_CreateUser+0x3a>
 801226a:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 801226e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012272:	1c78      	adds	r0, r7, #1
 8012274:	ebc1 030e 	rsb	r3, r1, lr
 8012278:	1a80      	subs	r0, r0, r2
 801227a:	3301      	adds	r3, #1
 801227c:	e008      	b.n	8012290 <SCROLLBAR_CreateUser+0x4c>
 801227e:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8012282:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012286:	f10e 0101 	add.w	r1, lr, #1
 801228a:	1a3a      	subs	r2, r7, r0
 801228c:	1ac9      	subs	r1, r1, r3
 801228e:	3201      	adds	r2, #1
 8012290:	9600      	str	r6, [sp, #0]
 8012292:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8012294:	9601      	str	r6, [sp, #4]
 8012296:	4e1f      	ldr	r6, [pc, #124]	; (8012314 <SCROLLBAR_CreateUser+0xd0>)
 8012298:	9602      	str	r6, [sp, #8]
 801229a:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801229c:	363c      	adds	r6, #60	; 0x3c
 801229e:	9603      	str	r6, [sp, #12]
 80122a0:	f7f9 fa1c 	bl	800b6dc <WM_CreateWindowAsChild>
 80122a4:	4606      	mov	r6, r0
 80122a6:	2800      	cmp	r0, #0
 80122a8:	d02f      	beq.n	801230a <SCROLLBAR_CreateUser+0xc6>
 80122aa:	f7ff f889 	bl	80113c0 <GUI_ALLOC_LockH>
 80122ae:	f004 0208 	and.w	r2, r4, #8
 80122b2:	06e3      	lsls	r3, r4, #27
 80122b4:	bf48      	it	mi
 80122b6:	f042 0210 	orrmi.w	r2, r2, #16
 80122ba:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 80122be:	bf48      	it	mi
 80122c0:	b292      	uxthmi	r2, r2
 80122c2:	2b01      	cmp	r3, #1
 80122c4:	bf88      	it	hi
 80122c6:	f042 0210 	orrhi.w	r2, r2, #16
 80122ca:	4629      	mov	r1, r5
 80122cc:	9005      	str	r0, [sp, #20]
 80122ce:	f7f5 fc35 	bl	8007b3c <WIDGET__Init>
 80122d2:	4b11      	ldr	r3, [pc, #68]	; (8012318 <SCROLLBAR_CreateUser+0xd4>)
 80122d4:	af08      	add	r7, sp, #32
 80122d6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80122d8:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 80122dc:	f104 0534 	add.w	r5, r4, #52	; 0x34
 80122e0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80122e4:	2364      	movs	r3, #100	; 0x64
 80122e6:	64e3      	str	r3, [r4, #76]	; 0x4c
 80122e8:	4d0c      	ldr	r5, [pc, #48]	; (801231c <SCROLLBAR_CreateUser+0xd8>)
 80122ea:	230a      	movs	r3, #10
 80122ec:	6563      	str	r3, [r4, #84]	; 0x54
 80122ee:	2300      	movs	r3, #0
 80122f0:	6523      	str	r3, [r4, #80]	; 0x50
 80122f2:	682b      	ldr	r3, [r5, #0]
 80122f4:	6463      	str	r3, [r4, #68]	; 0x44
 80122f6:	4638      	mov	r0, r7
 80122f8:	f7ff f870 	bl	80113dc <GUI_ALLOC_UnlockH>
 80122fc:	682b      	ldr	r3, [r5, #0]
 80122fe:	4630      	mov	r0, r6
 8012300:	685b      	ldr	r3, [r3, #4]
 8012302:	4798      	blx	r3
 8012304:	4630      	mov	r0, r6
 8012306:	f7ff ff8f 	bl	8012228 <SCROLLBAR__InvalidatePartner>
 801230a:	4630      	mov	r0, r6
 801230c:	b009      	add	sp, #36	; 0x24
 801230e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012310:	200001f0 	.word	0x200001f0
 8012314:	080123c3 	.word	0x080123c3
 8012318:	200001dc 	.word	0x200001dc
 801231c:	200001ec 	.word	0x200001ec

08012320 <SCROLLBAR_CreateEx>:
 8012320:	b510      	push	{r4, lr}
 8012322:	b086      	sub	sp, #24
 8012324:	9c08      	ldr	r4, [sp, #32]
 8012326:	9400      	str	r4, [sp, #0]
 8012328:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801232a:	9401      	str	r4, [sp, #4]
 801232c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801232e:	9402      	str	r4, [sp, #8]
 8012330:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8012332:	9403      	str	r4, [sp, #12]
 8012334:	2400      	movs	r4, #0
 8012336:	9404      	str	r4, [sp, #16]
 8012338:	f7ff ff84 	bl	8012244 <SCROLLBAR_CreateUser>
 801233c:	b006      	add	sp, #24
 801233e:	bd10      	pop	{r4, pc}

08012340 <SCROLLBAR_SetValue>:
 8012340:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012342:	460c      	mov	r4, r1
 8012344:	4605      	mov	r5, r0
 8012346:	b300      	cbz	r0, 801238a <SCROLLBAR_SetValue+0x4a>
 8012348:	f7ff f83a 	bl	80113c0 <GUI_ALLOC_LockH>
 801234c:	2c00      	cmp	r4, #0
 801234e:	9001      	str	r0, [sp, #4]
 8012350:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8012352:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8012354:	db05      	blt.n	8012362 <SCROLLBAR_SetValue+0x22>
 8012356:	1a8a      	subs	r2, r1, r2
 8012358:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801235c:	4294      	cmp	r4, r2
 801235e:	dc02      	bgt.n	8012366 <SCROLLBAR_SetValue+0x26>
 8012360:	e000      	b.n	8012364 <SCROLLBAR_SetValue+0x24>
 8012362:	2400      	movs	r4, #0
 8012364:	4622      	mov	r2, r4
 8012366:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8012368:	4291      	cmp	r1, r2
 801236a:	d00b      	beq.n	8012384 <SCROLLBAR_SetValue+0x44>
 801236c:	6502      	str	r2, [r0, #80]	; 0x50
 801236e:	4628      	mov	r0, r5
 8012370:	f7f9 f973 	bl	800b65a <WM_InvalidateWindow>
 8012374:	a801      	add	r0, sp, #4
 8012376:	f7ff f831 	bl	80113dc <GUI_ALLOC_UnlockH>
 801237a:	4628      	mov	r0, r5
 801237c:	2105      	movs	r1, #5
 801237e:	f7f8 fa18 	bl	800a7b2 <WM_NotifyParent>
 8012382:	e002      	b.n	801238a <SCROLLBAR_SetValue+0x4a>
 8012384:	a801      	add	r0, sp, #4
 8012386:	f7ff f829 	bl	80113dc <GUI_ALLOC_UnlockH>
 801238a:	b003      	add	sp, #12
 801238c:	bd30      	pop	{r4, r5, pc}

0801238e <SCROLLBAR_AddValue>:
 801238e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012390:	460d      	mov	r5, r1
 8012392:	4606      	mov	r6, r0
 8012394:	b160      	cbz	r0, 80123b0 <SCROLLBAR_AddValue+0x22>
 8012396:	f7ff f813 	bl	80113c0 <GUI_ALLOC_LockH>
 801239a:	4602      	mov	r2, r0
 801239c:	a802      	add	r0, sp, #8
 801239e:	6d14      	ldr	r4, [r2, #80]	; 0x50
 80123a0:	f840 2d04 	str.w	r2, [r0, #-4]!
 80123a4:	f7ff f81a 	bl	80113dc <GUI_ALLOC_UnlockH>
 80123a8:	4630      	mov	r0, r6
 80123aa:	1961      	adds	r1, r4, r5
 80123ac:	f7ff ffc8 	bl	8012340 <SCROLLBAR_SetValue>
 80123b0:	b002      	add	sp, #8
 80123b2:	bd70      	pop	{r4, r5, r6, pc}

080123b4 <SCROLLBAR_Dec>:
 80123b4:	f04f 31ff 	mov.w	r1, #4294967295
 80123b8:	f7ff bfe9 	b.w	801238e <SCROLLBAR_AddValue>

080123bc <SCROLLBAR_Inc>:
 80123bc:	2101      	movs	r1, #1
 80123be:	f7ff bfe6 	b.w	801238e <SCROLLBAR_AddValue>

080123c2 <SCROLLBAR_Callback>:
 80123c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123c6:	6844      	ldr	r4, [r0, #4]
 80123c8:	4680      	mov	r8, r0
 80123ca:	b08f      	sub	sp, #60	; 0x3c
 80123cc:	4620      	mov	r0, r4
 80123ce:	4641      	mov	r1, r8
 80123d0:	f7f5 fbbc 	bl	8007b4c <WIDGET_HandleActive>
 80123d4:	2800      	cmp	r0, #0
 80123d6:	f000 81c0 	beq.w	801275a <SCROLLBAR_Callback+0x398>
 80123da:	f8d8 3000 	ldr.w	r3, [r8]
 80123de:	2b23      	cmp	r3, #35	; 0x23
 80123e0:	f000 8182 	beq.w	80126e8 <SCROLLBAR_Callback+0x326>
 80123e4:	dc0b      	bgt.n	80123fe <SCROLLBAR_Callback+0x3c>
 80123e6:	2b0e      	cmp	r3, #14
 80123e8:	f000 812a 	beq.w	8012640 <SCROLLBAR_Callback+0x27e>
 80123ec:	2b0f      	cmp	r3, #15
 80123ee:	d012      	beq.n	8012416 <SCROLLBAR_Callback+0x54>
 80123f0:	2b0b      	cmp	r3, #11
 80123f2:	f040 81af 	bne.w	8012754 <SCROLLBAR_Callback+0x392>
 80123f6:	4620      	mov	r0, r4
 80123f8:	f7ff ff16 	bl	8012228 <SCROLLBAR__InvalidatePartner>
 80123fc:	e1aa      	b.n	8012754 <SCROLLBAR_Callback+0x392>
 80123fe:	f240 1213 	movw	r2, #275	; 0x113
 8012402:	4293      	cmp	r3, r2
 8012404:	f000 817f 	beq.w	8012706 <SCROLLBAR_Callback+0x344>
 8012408:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 801240c:	d012      	beq.n	8012434 <SCROLLBAR_Callback+0x72>
 801240e:	2b24      	cmp	r3, #36	; 0x24
 8012410:	f040 81a0 	bne.w	8012754 <SCROLLBAR_Callback+0x392>
 8012414:	e143      	b.n	801269e <SCROLLBAR_Callback+0x2dc>
 8012416:	4620      	mov	r0, r4
 8012418:	f7fe ffd2 	bl	80113c0 <GUI_ALLOC_LockH>
 801241c:	9005      	str	r0, [sp, #20]
 801241e:	2800      	cmp	r0, #0
 8012420:	f000 819b 	beq.w	801275a <SCROLLBAR_Callback+0x398>
 8012424:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8012426:	a805      	add	r0, sp, #20
 8012428:	681d      	ldr	r5, [r3, #0]
 801242a:	f7fe ffd7 	bl	80113dc <GUI_ALLOC_UnlockH>
 801242e:	4620      	mov	r0, r4
 8012430:	47a8      	blx	r5
 8012432:	e192      	b.n	801275a <SCROLLBAR_Callback+0x398>
 8012434:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8012438:	2f00      	cmp	r7, #0
 801243a:	f000 818b 	beq.w	8012754 <SCROLLBAR_Callback+0x392>
 801243e:	7a3b      	ldrb	r3, [r7, #8]
 8012440:	4620      	mov	r0, r4
 8012442:	2b00      	cmp	r3, #0
 8012444:	f000 80d6 	beq.w	80125f4 <SCROLLBAR_Callback+0x232>
 8012448:	f7fe ffba 	bl	80113c0 <GUI_ALLOC_LockH>
 801244c:	a905      	add	r1, sp, #20
 801244e:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8012450:	9003      	str	r0, [sp, #12]
 8012452:	6d06      	ldr	r6, [r0, #80]	; 0x50
 8012454:	4620      	mov	r0, r4
 8012456:	4798      	blx	r3
 8012458:	9b03      	ldr	r3, [sp, #12]
 801245a:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 801245e:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8012460:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012462:	f01a 0f08 	tst.w	sl, #8
 8012466:	ebc5 0902 	rsb	r9, r5, r2
 801246a:	d003      	beq.n	8012474 <SCROLLBAR_Callback+0xb2>
 801246c:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012470:	603a      	str	r2, [r7, #0]
 8012472:	6079      	str	r1, [r7, #4]
 8012474:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8012476:	683f      	ldr	r7, [r7, #0]
 8012478:	2a03      	cmp	r2, #3
 801247a:	d114      	bne.n	80124a6 <SCROLLBAR_Callback+0xe4>
 801247c:	4620      	mov	r0, r4
 801247e:	f7ff fea9 	bl	80121d4 <_DeleteTimer>
 8012482:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012484:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012486:	2002      	movs	r0, #2
 8012488:	fb93 f3f0 	sdiv	r3, r3, r0
 801248c:	1aff      	subs	r7, r7, r3
 801248e:	9b06      	ldr	r3, [sp, #24]
 8012490:	1afb      	subs	r3, r7, r3
 8012492:	1e58      	subs	r0, r3, #1
 8012494:	fb00 f009 	mul.w	r0, r0, r9
 8012498:	f004 fa78 	bl	801698c <GUI__DivideRound32>
 801249c:	9b03      	ldr	r3, [sp, #12]
 801249e:	4606      	mov	r6, r0
 80124a0:	6618      	str	r0, [r3, #96]	; 0x60
 80124a2:	a803      	add	r0, sp, #12
 80124a4:	e07e      	b.n	80125a4 <SCROLLBAR_Callback+0x1e2>
 80124a6:	9806      	ldr	r0, [sp, #24]
 80124a8:	4287      	cmp	r7, r0
 80124aa:	dc0b      	bgt.n	80124c4 <SCROLLBAR_Callback+0x102>
 80124ac:	2a02      	cmp	r2, #2
 80124ae:	d039      	beq.n	8012524 <SCROLLBAR_Callback+0x162>
 80124b0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80124b2:	b113      	cbz	r3, 80124ba <SCROLLBAR_Callback+0xf8>
 80124b4:	4620      	mov	r0, r4
 80124b6:	f7ff fe8d 	bl	80121d4 <_DeleteTimer>
 80124ba:	9b03      	ldr	r3, [sp, #12]
 80124bc:	2202      	movs	r2, #2
 80124be:	3e01      	subs	r6, #1
 80124c0:	659a      	str	r2, [r3, #88]	; 0x58
 80124c2:	e02f      	b.n	8012524 <SCROLLBAR_Callback+0x162>
 80124c4:	9907      	ldr	r1, [sp, #28]
 80124c6:	428f      	cmp	r7, r1
 80124c8:	da02      	bge.n	80124d0 <SCROLLBAR_Callback+0x10e>
 80124ca:	1b76      	subs	r6, r6, r5
 80124cc:	426d      	negs	r5, r5
 80124ce:	e02f      	b.n	8012530 <SCROLLBAR_Callback+0x16e>
 80124d0:	9908      	ldr	r1, [sp, #32]
 80124d2:	428f      	cmp	r7, r1
 80124d4:	dc12      	bgt.n	80124fc <SCROLLBAR_Callback+0x13a>
 80124d6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80124d8:	2900      	cmp	r1, #0
 80124da:	dd0b      	ble.n	80124f4 <SCROLLBAR_Callback+0x132>
 80124dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80124de:	2202      	movs	r2, #2
 80124e0:	fb93 f3f2 	sdiv	r3, r3, r2
 80124e4:	1aff      	subs	r7, r7, r3
 80124e6:	1a3f      	subs	r7, r7, r0
 80124e8:	3f01      	subs	r7, #1
 80124ea:	fb07 f009 	mul.w	r0, r7, r9
 80124ee:	f004 fa4d 	bl	801698c <GUI__DivideRound32>
 80124f2:	4606      	mov	r6, r0
 80124f4:	9b03      	ldr	r3, [sp, #12]
 80124f6:	2203      	movs	r2, #3
 80124f8:	659a      	str	r2, [r3, #88]	; 0x58
 80124fa:	e016      	b.n	801252a <SCROLLBAR_Callback+0x168>
 80124fc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80124fe:	428f      	cmp	r7, r1
 8012500:	da01      	bge.n	8012506 <SCROLLBAR_Callback+0x144>
 8012502:	442e      	add	r6, r5
 8012504:	e014      	b.n	8012530 <SCROLLBAR_Callback+0x16e>
 8012506:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012508:	428f      	cmp	r7, r1
 801250a:	dc0e      	bgt.n	801252a <SCROLLBAR_Callback+0x168>
 801250c:	2a01      	cmp	r2, #1
 801250e:	d00e      	beq.n	801252e <SCROLLBAR_Callback+0x16c>
 8012510:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8012512:	b113      	cbz	r3, 801251a <SCROLLBAR_Callback+0x158>
 8012514:	4620      	mov	r0, r4
 8012516:	f7ff fe5d 	bl	80121d4 <_DeleteTimer>
 801251a:	9b03      	ldr	r3, [sp, #12]
 801251c:	2501      	movs	r5, #1
 801251e:	3601      	adds	r6, #1
 8012520:	659d      	str	r5, [r3, #88]	; 0x58
 8012522:	e005      	b.n	8012530 <SCROLLBAR_Callback+0x16e>
 8012524:	f04f 35ff 	mov.w	r5, #4294967295
 8012528:	e002      	b.n	8012530 <SCROLLBAR_Callback+0x16e>
 801252a:	2500      	movs	r5, #0
 801252c:	e000      	b.n	8012530 <SCROLLBAR_Callback+0x16e>
 801252e:	4615      	mov	r5, r2
 8012530:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8012534:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012536:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 801253a:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 801253e:	9a06      	ldr	r2, [sp, #24]
 8012540:	b171      	cbz	r1, 8012560 <SCROLLBAR_Callback+0x19e>
 8012542:	2002      	movs	r0, #2
 8012544:	fb9e f0f0 	sdiv	r0, lr, r0
 8012548:	1a38      	subs	r0, r7, r0
 801254a:	1a80      	subs	r0, r0, r2
 801254c:	3801      	subs	r0, #1
 801254e:	fb00 f009 	mul.w	r0, r0, r9
 8012552:	9301      	str	r3, [sp, #4]
 8012554:	f004 fa1a 	bl	801698c <GUI__DivideRound32>
 8012558:	9b01      	ldr	r3, [sp, #4]
 801255a:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 801255e:	e009      	b.n	8012574 <SCROLLBAR_Callback+0x1b2>
 8012560:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 8012564:	2a01      	cmp	r2, #1
 8012566:	bf04      	itt	eq
 8012568:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 801256c:	f101 31ff 	addeq.w	r1, r1, #4294967295
 8012570:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 8012574:	a803      	add	r0, sp, #12
 8012576:	9301      	str	r3, [sp, #4]
 8012578:	f7fe ff30 	bl	80113dc <GUI_ALLOC_UnlockH>
 801257c:	9b01      	ldr	r3, [sp, #4]
 801257e:	b1a5      	cbz	r5, 80125aa <SCROLLBAR_Callback+0x1e8>
 8012580:	b9bb      	cbnz	r3, 80125b2 <SCROLLBAR_Callback+0x1f0>
 8012582:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8012586:	f240 41d2 	movw	r1, #1234	; 0x4d2
 801258a:	4620      	mov	r0, r4
 801258c:	f7f7 fe6a 	bl	800a264 <WM_CreateTimer>
 8012590:	4607      	mov	r7, r0
 8012592:	4620      	mov	r0, r4
 8012594:	f7fe ff14 	bl	80113c0 <GUI_ALLOC_LockH>
 8012598:	4602      	mov	r2, r0
 801259a:	a80e      	add	r0, sp, #56	; 0x38
 801259c:	f840 2d28 	str.w	r2, [r0, #-40]!
 80125a0:	6657      	str	r7, [r2, #100]	; 0x64
 80125a2:	65d5      	str	r5, [r2, #92]	; 0x5c
 80125a4:	f7fe ff1a 	bl	80113dc <GUI_ALLOC_UnlockH>
 80125a8:	e003      	b.n	80125b2 <SCROLLBAR_Callback+0x1f0>
 80125aa:	b113      	cbz	r3, 80125b2 <SCROLLBAR_Callback+0x1f0>
 80125ac:	4620      	mov	r0, r4
 80125ae:	f7ff fe11 	bl	80121d4 <_DeleteTimer>
 80125b2:	4620      	mov	r0, r4
 80125b4:	2101      	movs	r1, #1
 80125b6:	f7f7 fff5 	bl	800a5a4 <WM_SetCapture>
 80125ba:	4620      	mov	r0, r4
 80125bc:	4631      	mov	r1, r6
 80125be:	f7ff febf 	bl	8012340 <SCROLLBAR_SetValue>
 80125c2:	f41a 7f80 	tst.w	sl, #256	; 0x100
 80125c6:	f040 80c5 	bne.w	8012754 <SCROLLBAR_Callback+0x392>
 80125ca:	4620      	mov	r0, r4
 80125cc:	f7fe fef8 	bl	80113c0 <GUI_ALLOC_LockH>
 80125d0:	ab0e      	add	r3, sp, #56	; 0x38
 80125d2:	6a85      	ldr	r5, [r0, #40]	; 0x28
 80125d4:	f843 0d28 	str.w	r0, [r3, #-40]!
 80125d8:	4618      	mov	r0, r3
 80125da:	f7fe feff 	bl	80113dc <GUI_ALLOC_UnlockH>
 80125de:	f44f 7180 	mov.w	r1, #256	; 0x100
 80125e2:	4620      	mov	r0, r4
 80125e4:	f7f5 fa7f 	bl	8007ae6 <WIDGET_OrState>
 80125e8:	07a9      	lsls	r1, r5, #30
 80125ea:	f140 80b3 	bpl.w	8012754 <SCROLLBAR_Callback+0x392>
 80125ee:	4620      	mov	r0, r4
 80125f0:	2101      	movs	r1, #1
 80125f2:	e074      	b.n	80126de <SCROLLBAR_Callback+0x31c>
 80125f4:	f7fe fee4 	bl	80113c0 <GUI_ALLOC_LockH>
 80125f8:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 80125fa:	9003      	str	r0, [sp, #12]
 80125fc:	a803      	add	r0, sp, #12
 80125fe:	f7fe feed 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012602:	05ea      	lsls	r2, r5, #23
 8012604:	f140 80a6 	bpl.w	8012754 <SCROLLBAR_Callback+0x392>
 8012608:	4620      	mov	r0, r4
 801260a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801260e:	f7f5 fa80 	bl	8007b12 <WIDGET_AndState>
 8012612:	4620      	mov	r0, r4
 8012614:	f7fe fed4 	bl	80113c0 <GUI_ALLOC_LockH>
 8012618:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 801261a:	9005      	str	r0, [sp, #20]
 801261c:	b113      	cbz	r3, 8012624 <SCROLLBAR_Callback+0x262>
 801261e:	4620      	mov	r0, r4
 8012620:	f7ff fdd8 	bl	80121d4 <_DeleteTimer>
 8012624:	a80e      	add	r0, sp, #56	; 0x38
 8012626:	2200      	movs	r2, #0
 8012628:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 801262c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 801262e:	659a      	str	r2, [r3, #88]	; 0x58
 8012630:	f7fe fed4 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012634:	07ab      	lsls	r3, r5, #30
 8012636:	f140 808d 	bpl.w	8012754 <SCROLLBAR_Callback+0x392>
 801263a:	4620      	mov	r0, r4
 801263c:	2102      	movs	r1, #2
 801263e:	e04e      	b.n	80126de <SCROLLBAR_Callback+0x31c>
 8012640:	4620      	mov	r0, r4
 8012642:	f7fe febd 	bl	80113c0 <GUI_ALLOC_LockH>
 8012646:	ab0e      	add	r3, sp, #56	; 0x38
 8012648:	6d45      	ldr	r5, [r0, #84]	; 0x54
 801264a:	f843 0d24 	str.w	r0, [r3, #-36]!
 801264e:	4618      	mov	r0, r3
 8012650:	f7fe fec4 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012654:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8012658:	6813      	ldr	r3, [r2, #0]
 801265a:	6852      	ldr	r2, [r2, #4]
 801265c:	2a00      	cmp	r2, #0
 801265e:	dd79      	ble.n	8012754 <SCROLLBAR_Callback+0x392>
 8012660:	3b10      	subs	r3, #16
 8012662:	2b12      	cmp	r3, #18
 8012664:	d876      	bhi.n	8012754 <SCROLLBAR_Callback+0x392>
 8012666:	e8df f003 	tbb	[pc, r3]
 801266a:	1616      	.short	0x1616
 801266c:	75751212 	.word	0x75751212
 8012670:	75757575 	.word	0x75757575
 8012674:	75757575 	.word	0x75757575
 8012678:	0a757575 	.word	0x0a757575
 801267c:	0d          	.byte	0x0d
 801267d:	00          	.byte	0x00
 801267e:	4620      	mov	r0, r4
 8012680:	4629      	mov	r1, r5
 8012682:	e001      	b.n	8012688 <SCROLLBAR_Callback+0x2c6>
 8012684:	4620      	mov	r0, r4
 8012686:	4269      	negs	r1, r5
 8012688:	f7ff fe81 	bl	801238e <SCROLLBAR_AddValue>
 801268c:	e062      	b.n	8012754 <SCROLLBAR_Callback+0x392>
 801268e:	4620      	mov	r0, r4
 8012690:	f7ff fe94 	bl	80123bc <SCROLLBAR_Inc>
 8012694:	e05e      	b.n	8012754 <SCROLLBAR_Callback+0x392>
 8012696:	4620      	mov	r0, r4
 8012698:	f7ff fe8c 	bl	80123b4 <SCROLLBAR_Dec>
 801269c:	e05a      	b.n	8012754 <SCROLLBAR_Callback+0x392>
 801269e:	4620      	mov	r0, r4
 80126a0:	f8d8 600c 	ldr.w	r6, [r8, #12]
 80126a4:	f7fe fe8c 	bl	80113c0 <GUI_ALLOC_LockH>
 80126a8:	ad0e      	add	r5, sp, #56	; 0x38
 80126aa:	4603      	mov	r3, r0
 80126ac:	f845 0d24 	str.w	r0, [r5, #-36]!
 80126b0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80126b2:	6830      	ldr	r0, [r6, #0]
 80126b4:	68b1      	ldr	r1, [r6, #8]
 80126b6:	4290      	cmp	r0, r2
 80126b8:	6872      	ldr	r2, [r6, #4]
 80126ba:	d105      	bne.n	80126c8 <SCROLLBAR_Callback+0x306>
 80126bc:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 80126be:	428e      	cmp	r6, r1
 80126c0:	d102      	bne.n	80126c8 <SCROLLBAR_Callback+0x306>
 80126c2:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 80126c4:	4296      	cmp	r6, r2
 80126c6:	d00d      	beq.n	80126e4 <SCROLLBAR_Callback+0x322>
 80126c8:	64d8      	str	r0, [r3, #76]	; 0x4c
 80126ca:	6559      	str	r1, [r3, #84]	; 0x54
 80126cc:	651a      	str	r2, [r3, #80]	; 0x50
 80126ce:	4620      	mov	r0, r4
 80126d0:	f7f8 ffc3 	bl	800b65a <WM_InvalidateWindow>
 80126d4:	4628      	mov	r0, r5
 80126d6:	f7fe fe81 	bl	80113dc <GUI_ALLOC_UnlockH>
 80126da:	4620      	mov	r0, r4
 80126dc:	2105      	movs	r1, #5
 80126de:	f7f8 f868 	bl	800a7b2 <WM_NotifyParent>
 80126e2:	e037      	b.n	8012754 <SCROLLBAR_Callback+0x392>
 80126e4:	4628      	mov	r0, r5
 80126e6:	e033      	b.n	8012750 <SCROLLBAR_Callback+0x38e>
 80126e8:	4620      	mov	r0, r4
 80126ea:	f7fe fe69 	bl	80113c0 <GUI_ALLOC_LockH>
 80126ee:	9005      	str	r0, [sp, #20]
 80126f0:	2800      	cmp	r0, #0
 80126f2:	d02f      	beq.n	8012754 <SCROLLBAR_Callback+0x392>
 80126f4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80126f8:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80126fa:	601a      	str	r2, [r3, #0]
 80126fc:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80126fe:	609a      	str	r2, [r3, #8]
 8012700:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8012702:	605a      	str	r2, [r3, #4]
 8012704:	e023      	b.n	801274e <SCROLLBAR_Callback+0x38c>
 8012706:	4620      	mov	r0, r4
 8012708:	f7fe fe5a 	bl	80113c0 <GUI_ALLOC_LockH>
 801270c:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 801270e:	9005      	str	r0, [sp, #20]
 8012710:	b111      	cbz	r1, 8012718 <SCROLLBAR_Callback+0x356>
 8012712:	4620      	mov	r0, r4
 8012714:	f7ff fe3b 	bl	801238e <SCROLLBAR_AddValue>
 8012718:	9b05      	ldr	r3, [sp, #20]
 801271a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 801271c:	6d19      	ldr	r1, [r3, #80]	; 0x50
 801271e:	2a00      	cmp	r2, #0
 8012720:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8012722:	dd05      	ble.n	8012730 <SCROLLBAR_Callback+0x36e>
 8012724:	4291      	cmp	r1, r2
 8012726:	bfb4      	ite	lt
 8012728:	2100      	movlt	r1, #0
 801272a:	2101      	movge	r1, #1
 801272c:	dd06      	ble.n	801273c <SCROLLBAR_Callback+0x37a>
 801272e:	e004      	b.n	801273a <SCROLLBAR_Callback+0x378>
 8012730:	4291      	cmp	r1, r2
 8012732:	bfcc      	ite	gt
 8012734:	2100      	movgt	r1, #0
 8012736:	2101      	movle	r1, #1
 8012738:	da00      	bge.n	801273c <SCROLLBAR_Callback+0x37a>
 801273a:	651a      	str	r2, [r3, #80]	; 0x50
 801273c:	b119      	cbz	r1, 8012746 <SCROLLBAR_Callback+0x384>
 801273e:	4620      	mov	r0, r4
 8012740:	f7ff fd48 	bl	80121d4 <_DeleteTimer>
 8012744:	e003      	b.n	801274e <SCROLLBAR_Callback+0x38c>
 8012746:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8012748:	2132      	movs	r1, #50	; 0x32
 801274a:	f7f7 fdbb 	bl	800a2c4 <WM_RestartTimer>
 801274e:	a805      	add	r0, sp, #20
 8012750:	f7fe fe44 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012754:	4640      	mov	r0, r8
 8012756:	f7f9 fba3 	bl	800bea0 <WM_DefaultProc>
 801275a:	b00f      	add	sp, #60	; 0x3c
 801275c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012760 <SCROLLBAR_SetNumItems>:
 8012760:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012762:	460c      	mov	r4, r1
 8012764:	4605      	mov	r5, r0
 8012766:	b160      	cbz	r0, 8012782 <SCROLLBAR_SetNumItems+0x22>
 8012768:	f7fe fe2a 	bl	80113c0 <GUI_ALLOC_LockH>
 801276c:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 801276e:	9001      	str	r0, [sp, #4]
 8012770:	42a2      	cmp	r2, r4
 8012772:	d003      	beq.n	801277c <SCROLLBAR_SetNumItems+0x1c>
 8012774:	64c4      	str	r4, [r0, #76]	; 0x4c
 8012776:	4628      	mov	r0, r5
 8012778:	f7f8 ff6f 	bl	800b65a <WM_InvalidateWindow>
 801277c:	a801      	add	r0, sp, #4
 801277e:	f7fe fe2d 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012782:	b003      	add	sp, #12
 8012784:	bd30      	pop	{r4, r5, pc}

08012786 <SCROLLBAR_SetPageSize>:
 8012786:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012788:	460c      	mov	r4, r1
 801278a:	4605      	mov	r5, r0
 801278c:	b160      	cbz	r0, 80127a8 <SCROLLBAR_SetPageSize+0x22>
 801278e:	f7fe fe17 	bl	80113c0 <GUI_ALLOC_LockH>
 8012792:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8012794:	9001      	str	r0, [sp, #4]
 8012796:	42a2      	cmp	r2, r4
 8012798:	d003      	beq.n	80127a2 <SCROLLBAR_SetPageSize+0x1c>
 801279a:	6544      	str	r4, [r0, #84]	; 0x54
 801279c:	4628      	mov	r0, r5
 801279e:	f7f8 ff5c 	bl	800b65a <WM_InvalidateWindow>
 80127a2:	a801      	add	r0, sp, #4
 80127a4:	f7fe fe1a 	bl	80113dc <GUI_ALLOC_UnlockH>
 80127a8:	b003      	add	sp, #12
 80127aa:	bd30      	pop	{r4, r5, pc}

080127ac <RADIO_DrawSkinFlex>:
 80127ac:	b530      	push	{r4, r5, lr}
 80127ae:	4604      	mov	r4, r0
 80127b0:	b089      	sub	sp, #36	; 0x24
 80127b2:	6800      	ldr	r0, [r0, #0]
 80127b4:	f7fe fe04 	bl	80113c0 <GUI_ALLOC_LockH>
 80127b8:	aa08      	add	r2, sp, #32
 80127ba:	f9b0 5060 	ldrsh.w	r5, [r0, #96]	; 0x60
 80127be:	f842 0d10 	str.w	r0, [r2, #-16]!
 80127c2:	4610      	mov	r0, r2
 80127c4:	f7fe fe0a 	bl	80113dc <GUI_ALLOC_UnlockH>
 80127c8:	68a2      	ldr	r2, [r4, #8]
 80127ca:	4b28      	ldr	r3, [pc, #160]	; (801286c <RADIO_DrawSkinFlex+0xc0>)
 80127cc:	4928      	ldr	r1, [pc, #160]	; (8012870 <RADIO_DrawSkinFlex+0xc4>)
 80127ce:	42aa      	cmp	r2, r5
 80127d0:	bf18      	it	ne
 80127d2:	460b      	movne	r3, r1
 80127d4:	6862      	ldr	r2, [r4, #4]
 80127d6:	2a0a      	cmp	r2, #10
 80127d8:	d028      	beq.n	801282c <RADIO_DrawSkinFlex+0x80>
 80127da:	dc0e      	bgt.n	80127fa <RADIO_DrawSkinFlex+0x4e>
 80127dc:	2a07      	cmp	r2, #7
 80127de:	d142      	bne.n	8012866 <RADIO_DrawSkinFlex+0xba>
 80127e0:	685a      	ldr	r2, [r3, #4]
 80127e2:	9200      	str	r2, [sp, #0]
 80127e4:	689a      	ldr	r2, [r3, #8]
 80127e6:	9201      	str	r2, [sp, #4]
 80127e8:	68da      	ldr	r2, [r3, #12]
 80127ea:	9202      	str	r2, [sp, #8]
 80127ec:	691a      	ldr	r2, [r3, #16]
 80127ee:	6920      	ldr	r0, [r4, #16]
 80127f0:	6961      	ldr	r1, [r4, #20]
 80127f2:	681b      	ldr	r3, [r3, #0]
 80127f4:	f003 ff64 	bl	80166c0 <GUI__FillTrippleArc>
 80127f8:	e035      	b.n	8012866 <RADIO_DrawSkinFlex+0xba>
 80127fa:	2a12      	cmp	r2, #18
 80127fc:	d003      	beq.n	8012806 <RADIO_DrawSkinFlex+0x5a>
 80127fe:	2a19      	cmp	r2, #25
 8012800:	d131      	bne.n	8012866 <RADIO_DrawSkinFlex+0xba>
 8012802:	6918      	ldr	r0, [r3, #16]
 8012804:	e030      	b.n	8012868 <RADIO_DrawSkinFlex+0xbc>
 8012806:	6820      	ldr	r0, [r4, #0]
 8012808:	f7fe fdda 	bl	80113c0 <GUI_ALLOC_LockH>
 801280c:	ab08      	add	r3, sp, #32
 801280e:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012810:	f843 0d08 	str.w	r0, [r3, #-8]!
 8012814:	4618      	mov	r0, r3
 8012816:	f7fe fde1 	bl	80113dc <GUI_ALLOC_UnlockH>
 801281a:	4628      	mov	r0, r5
 801281c:	f7fc f9f4 	bl	800ec08 <LCD_SetColor>
 8012820:	6a20      	ldr	r0, [r4, #32]
 8012822:	6921      	ldr	r1, [r4, #16]
 8012824:	6962      	ldr	r2, [r4, #20]
 8012826:	f7fd ffe5 	bl	80107f4 <GUI_DispStringAt>
 801282a:	e01c      	b.n	8012866 <RADIO_DrawSkinFlex+0xba>
 801282c:	6820      	ldr	r0, [r4, #0]
 801282e:	f7fe fdc7 	bl	80113c0 <GUI_ALLOC_LockH>
 8012832:	ab08      	add	r3, sp, #32
 8012834:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8012836:	f843 0d0c 	str.w	r0, [r3, #-12]!
 801283a:	4618      	mov	r0, r3
 801283c:	f7fe fdce 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012840:	6923      	ldr	r3, [r4, #16]
 8012842:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012846:	6963      	ldr	r3, [r4, #20]
 8012848:	f8ad 301a 	strh.w	r3, [sp, #26]
 801284c:	69a3      	ldr	r3, [r4, #24]
 801284e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012852:	4628      	mov	r0, r5
 8012854:	69e3      	ldr	r3, [r4, #28]
 8012856:	f8ad 301e 	strh.w	r3, [sp, #30]
 801285a:	f7fc f9d5 	bl	800ec08 <LCD_SetColor>
 801285e:	a806      	add	r0, sp, #24
 8012860:	2100      	movs	r1, #0
 8012862:	f7fd fec9 	bl	80105f8 <GUI_DrawFocusRect>
 8012866:	2000      	movs	r0, #0
 8012868:	b009      	add	sp, #36	; 0x24
 801286a:	bd30      	pop	{r4, r5, pc}
 801286c:	20000208 	.word	0x20000208
 8012870:	200001f4 	.word	0x200001f4

08012874 <_Create>:
 8012874:	b530      	push	{r4, r5, lr}
 8012876:	b08b      	sub	sp, #44	; 0x2c
 8012878:	4605      	mov	r5, r0
 801287a:	f7fe fda1 	bl	80113c0 <GUI_ALLOC_LockH>
 801287e:	ab0a      	add	r3, sp, #40	; 0x28
 8012880:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8012882:	f843 0d28 	str.w	r0, [r3, #-40]!
 8012886:	4668      	mov	r0, sp
 8012888:	6894      	ldr	r4, [r2, #8]
 801288a:	f7fe fda7 	bl	80113dc <GUI_ALLOC_UnlockH>
 801288e:	a80a      	add	r0, sp, #40	; 0x28
 8012890:	2300      	movs	r3, #0
 8012892:	9302      	str	r3, [sp, #8]
 8012894:	f840 5d24 	str.w	r5, [r0, #-36]!
 8012898:	6863      	ldr	r3, [r4, #4]
 801289a:	4798      	blx	r3
 801289c:	b00b      	add	sp, #44	; 0x2c
 801289e:	bd30      	pop	{r4, r5, pc}

080128a0 <_Paint>:
 80128a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128a4:	b099      	sub	sp, #100	; 0x64
 80128a6:	4607      	mov	r7, r0
 80128a8:	f7fe fd8a 	bl	80113c0 <GUI_ALLOC_LockH>
 80128ac:	6d83      	ldr	r3, [r0, #88]	; 0x58
 80128ae:	f8b0 2064 	ldrh.w	r2, [r0, #100]	; 0x64
 80128b2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80128b6:	9009      	str	r0, [sp, #36]	; 0x24
 80128b8:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 80128ba:	6d46      	ldr	r6, [r0, #84]	; 0x54
 80128bc:	f8b0 5062 	ldrh.w	r5, [r0, #98]	; 0x62
 80128c0:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 80128c4:	9202      	str	r2, [sp, #8]
 80128c6:	4638      	mov	r0, r7
 80128c8:	9305      	str	r3, [sp, #20]
 80128ca:	f7f5 fcd0 	bl	800826e <RADIO__GetButtonSize>
 80128ce:	1d04      	adds	r4, r0, #4
 80128d0:	a818      	add	r0, sp, #96	; 0x60
 80128d2:	f850 3d3c 	ldr.w	r3, [r0, #-60]!
 80128d6:	f9b3 2060 	ldrsh.w	r2, [r3, #96]	; 0x60
 80128da:	9206      	str	r2, [sp, #24]
 80128dc:	f893 2066 	ldrb.w	r2, [r3, #102]	; 0x66
 80128e0:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 80128e2:	9207      	str	r2, [sp, #28]
 80128e4:	f003 0301 	and.w	r3, r3, #1
 80128e8:	9303      	str	r3, [sp, #12]
 80128ea:	f7fe fd77 	bl	80113dc <GUI_ALLOC_UnlockH>
 80128ee:	a80d      	add	r0, sp, #52	; 0x34
 80128f0:	f7f8 f954 	bl	800ab9c <WM_GetClientRect>
 80128f4:	f8d9 3000 	ldr.w	r3, [r9]
 80128f8:	4638      	mov	r0, r7
 80128fa:	4798      	blx	r3
 80128fc:	2307      	movs	r3, #7
 80128fe:	9310      	str	r3, [sp, #64]	; 0x40
 8012900:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8012904:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8012908:	970f      	str	r7, [sp, #60]	; 0x3c
 801290a:	3202      	adds	r2, #2
 801290c:	3302      	adds	r3, #2
 801290e:	9213      	str	r2, [sp, #76]	; 0x4c
 8012910:	9314      	str	r3, [sp, #80]	; 0x50
 8012912:	4402      	add	r2, r0
 8012914:	4403      	add	r3, r0
 8012916:	3a01      	subs	r2, #1
 8012918:	3b01      	subs	r3, #1
 801291a:	4681      	mov	r9, r0
 801291c:	9215      	str	r2, [sp, #84]	; 0x54
 801291e:	9316      	str	r3, [sp, #88]	; 0x58
 8012920:	2700      	movs	r7, #0
 8012922:	9b02      	ldr	r3, [sp, #8]
 8012924:	429f      	cmp	r7, r3
 8012926:	da0a      	bge.n	801293e <_Paint+0x9e>
 8012928:	9711      	str	r7, [sp, #68]	; 0x44
 801292a:	a80f      	add	r0, sp, #60	; 0x3c
 801292c:	47b0      	blx	r6
 801292e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8012930:	442b      	add	r3, r5
 8012932:	9314      	str	r3, [sp, #80]	; 0x50
 8012934:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8012936:	442b      	add	r3, r5
 8012938:	9316      	str	r3, [sp, #88]	; 0x58
 801293a:	3701      	adds	r7, #1
 801293c:	e7f1      	b.n	8012922 <_Paint+0x82>
 801293e:	a90b      	add	r1, sp, #44	; 0x2c
 8012940:	4640      	mov	r0, r8
 8012942:	f004 f9fd 	bl	8016d40 <GUI_GetFontInfo>
 8012946:	4640      	mov	r0, r8
 8012948:	f7fd fb1c 	bl	800ff84 <GUI_SetFont>
 801294c:	2002      	movs	r0, #2
 801294e:	f7fd fb0f 	bl	800ff70 <GUI_SetTextMode>
 8012952:	f7fe fc19 	bl	8011188 <GUI_GetFontDistY>
 8012956:	2312      	movs	r3, #18
 8012958:	9310      	str	r3, [sp, #64]	; 0x40
 801295a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801295e:	f89d a030 	ldrb.w	sl, [sp, #48]	; 0x30
 8012962:	f89d c02e 	ldrb.w	ip, [sp, #46]	; 0x2e
 8012966:	3306      	adds	r3, #6
 8012968:	45a2      	cmp	sl, r4
 801296a:	444b      	add	r3, r9
 801296c:	bfdc      	itt	le
 801296e:	ebca 0404 	rsble	r4, sl, r4
 8012972:	2102      	movle	r1, #2
 8012974:	9313      	str	r3, [sp, #76]	; 0x4c
 8012976:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801297a:	bfd4      	ite	le
 801297c:	fb94 f4f1 	sdivle	r4, r4, r1
 8012980:	2400      	movgt	r4, #0
 8012982:	ebca 0c0c 	rsb	ip, sl, ip
 8012986:	fa5f fb8c 	uxtb.w	fp, ip
 801298a:	441c      	add	r4, r3
 801298c:	ebcb 0404 	rsb	r4, fp, r4
 8012990:	280c      	cmp	r0, #12
 8012992:	9414      	str	r4, [sp, #80]	; 0x50
 8012994:	bfd4      	ite	le
 8012996:	2202      	movle	r2, #2
 8012998:	2203      	movgt	r2, #3
 801299a:	2400      	movs	r4, #0
 801299c:	9201      	str	r2, [sp, #4]
 801299e:	4627      	mov	r7, r4
 80129a0:	9404      	str	r4, [sp, #16]
 80129a2:	46a1      	mov	r9, r4
 80129a4:	9400      	str	r4, [sp, #0]
 80129a6:	46a0      	mov	r8, r4
 80129a8:	9b02      	ldr	r3, [sp, #8]
 80129aa:	4598      	cmp	r8, r3
 80129ac:	da3e      	bge.n	8012a2c <_Paint+0x18c>
 80129ae:	9805      	ldr	r0, [sp, #20]
 80129b0:	4641      	mov	r1, r8
 80129b2:	f7f6 fc9f 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 80129b6:	900a      	str	r0, [sp, #40]	; 0x28
 80129b8:	2800      	cmp	r0, #0
 80129ba:	d02e      	beq.n	8012a1a <_Paint+0x17a>
 80129bc:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 80129c0:	f7fd fd6a 	bl	8010498 <GUI_GetStringDistX>
 80129c4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80129c6:	4408      	add	r0, r1
 80129c8:	1e81      	subs	r1, r0, #2
 80129ca:	9115      	str	r1, [sp, #84]	; 0x54
 80129cc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80129ce:	9117      	str	r1, [sp, #92]	; 0x5c
 80129d0:	a80f      	add	r0, sp, #60	; 0x3c
 80129d2:	47b0      	blx	r6
 80129d4:	a80a      	add	r0, sp, #40	; 0x28
 80129d6:	f7fe fd01 	bl	80113dc <GUI_ALLOC_UnlockH>
 80129da:	9b03      	ldr	r3, [sp, #12]
 80129dc:	b1eb      	cbz	r3, 8012a1a <_Paint+0x17a>
 80129de:	9a06      	ldr	r2, [sp, #24]
 80129e0:	4542      	cmp	r2, r8
 80129e2:	d001      	beq.n	80129e8 <_Paint+0x148>
 80129e4:	9b07      	ldr	r3, [sp, #28]
 80129e6:	b1c3      	cbz	r3, 8012a1a <_Paint+0x17a>
 80129e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80129ea:	9a01      	ldr	r2, [sp, #4]
 80129ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80129ee:	9f15      	ldr	r7, [sp, #84]	; 0x54
 80129f0:	eb04 010b 	add.w	r1, r4, fp
 80129f4:	4291      	cmp	r1, r2
 80129f6:	bfb8      	it	lt
 80129f8:	b2e1      	uxtblt	r1, r4
 80129fa:	b2a3      	uxth	r3, r4
 80129fc:	4454      	add	r4, sl
 80129fe:	bfa8      	it	ge
 8012a00:	9901      	ldrge	r1, [sp, #4]
 8012a02:	9304      	str	r3, [sp, #16]
 8012a04:	3c01      	subs	r4, #1
 8012a06:	445c      	add	r4, fp
 8012a08:	1a40      	subs	r0, r0, r1
 8012a0a:	440f      	add	r7, r1
 8012a0c:	440c      	add	r4, r1
 8012a0e:	2201      	movs	r2, #1
 8012a10:	fa1f f980 	uxth.w	r9, r0
 8012a14:	b2bf      	uxth	r7, r7
 8012a16:	b2a4      	uxth	r4, r4
 8012a18:	9200      	str	r2, [sp, #0]
 8012a1a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8012a1c:	4429      	add	r1, r5
 8012a1e:	9114      	str	r1, [sp, #80]	; 0x50
 8012a20:	9916      	ldr	r1, [sp, #88]	; 0x58
 8012a22:	4429      	add	r1, r5
 8012a24:	9116      	str	r1, [sp, #88]	; 0x58
 8012a26:	f108 0801 	add.w	r8, r8, #1
 8012a2a:	e7bd      	b.n	80129a8 <_Paint+0x108>
 8012a2c:	9b00      	ldr	r3, [sp, #0]
 8012a2e:	9a03      	ldr	r2, [sp, #12]
 8012a30:	4213      	tst	r3, r2
 8012a32:	d00d      	beq.n	8012a50 <_Paint+0x1b0>
 8012a34:	230a      	movs	r3, #10
 8012a36:	9a04      	ldr	r2, [sp, #16]
 8012a38:	9310      	str	r3, [sp, #64]	; 0x40
 8012a3a:	fa0f f389 	sxth.w	r3, r9
 8012a3e:	9313      	str	r3, [sp, #76]	; 0x4c
 8012a40:	b23f      	sxth	r7, r7
 8012a42:	b213      	sxth	r3, r2
 8012a44:	b224      	sxth	r4, r4
 8012a46:	9314      	str	r3, [sp, #80]	; 0x50
 8012a48:	9715      	str	r7, [sp, #84]	; 0x54
 8012a4a:	9416      	str	r4, [sp, #88]	; 0x58
 8012a4c:	a80f      	add	r0, sp, #60	; 0x3c
 8012a4e:	47b0      	blx	r6
 8012a50:	b019      	add	sp, #100	; 0x64
 8012a52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012a58 <MULTIPAGE_DrawSkinFlex>:
 8012a58:	b570      	push	{r4, r5, r6, lr}
 8012a5a:	6843      	ldr	r3, [r0, #4]
 8012a5c:	b086      	sub	sp, #24
 8012a5e:	4604      	mov	r4, r0
 8012a60:	b993      	cbnz	r3, 8012a88 <MULTIPAGE_DrawSkinFlex+0x30>
 8012a62:	6800      	ldr	r0, [r0, #0]
 8012a64:	f7fe fcac 	bl	80113c0 <GUI_ALLOC_LockH>
 8012a68:	4a94      	ldr	r2, [pc, #592]	; (8012cbc <MULTIPAGE_DrawSkinFlex+0x264>)
 8012a6a:	4603      	mov	r3, r0
 8012a6c:	6812      	ldr	r2, [r2, #0]
 8012a6e:	655a      	str	r2, [r3, #84]	; 0x54
 8012a70:	a806      	add	r0, sp, #24
 8012a72:	2202      	movs	r2, #2
 8012a74:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8012a78:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012a7c:	4a90      	ldr	r2, [pc, #576]	; (8012cc0 <MULTIPAGE_DrawSkinFlex+0x268>)
 8012a7e:	f840 3d0c 	str.w	r3, [r0, #-12]!
 8012a82:	675a      	str	r2, [r3, #116]	; 0x74
 8012a84:	f7fe fcaa 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012a88:	6a26      	ldr	r6, [r4, #32]
 8012a8a:	2e00      	cmp	r6, #0
 8012a8c:	f000 8113 	beq.w	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012a90:	68a2      	ldr	r2, [r4, #8]
 8012a92:	68b1      	ldr	r1, [r6, #8]
 8012a94:	428a      	cmp	r2, r1
 8012a96:	d007      	beq.n	8012aa8 <MULTIPAGE_DrawSkinFlex+0x50>
 8012a98:	7bf3      	ldrb	r3, [r6, #15]
 8012a9a:	4d8a      	ldr	r5, [pc, #552]	; (8012cc4 <MULTIPAGE_DrawSkinFlex+0x26c>)
 8012a9c:	f013 0f01 	tst.w	r3, #1
 8012aa0:	4b89      	ldr	r3, [pc, #548]	; (8012cc8 <MULTIPAGE_DrawSkinFlex+0x270>)
 8012aa2:	bf18      	it	ne
 8012aa4:	461d      	movne	r5, r3
 8012aa6:	e000      	b.n	8012aaa <MULTIPAGE_DrawSkinFlex+0x52>
 8012aa8:	4d84      	ldr	r5, [pc, #528]	; (8012cbc <MULTIPAGE_DrawSkinFlex+0x264>)
 8012aaa:	6863      	ldr	r3, [r4, #4]
 8012aac:	2b06      	cmp	r3, #6
 8012aae:	f000 80c3 	beq.w	8012c38 <MULTIPAGE_DrawSkinFlex+0x1e0>
 8012ab2:	dc02      	bgt.n	8012aba <MULTIPAGE_DrawSkinFlex+0x62>
 8012ab4:	2b05      	cmp	r3, #5
 8012ab6:	d041      	beq.n	8012b3c <MULTIPAGE_DrawSkinFlex+0xe4>
 8012ab8:	e0fd      	b.n	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012aba:	2b0b      	cmp	r3, #11
 8012abc:	d003      	beq.n	8012ac6 <MULTIPAGE_DrawSkinFlex+0x6e>
 8012abe:	2b12      	cmp	r3, #18
 8012ac0:	f000 80c4 	beq.w	8012c4c <MULTIPAGE_DrawSkinFlex+0x1f4>
 8012ac4:	e0f7      	b.n	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012ac6:	3201      	adds	r2, #1
 8012ac8:	d113      	bne.n	8012af2 <MULTIPAGE_DrawSkinFlex+0x9a>
 8012aca:	4d7c      	ldr	r5, [pc, #496]	; (8012cbc <MULTIPAGE_DrawSkinFlex+0x264>)
 8012acc:	6968      	ldr	r0, [r5, #20]
 8012ace:	f7fd fa87 	bl	800ffe0 <GUI_SetColor>
 8012ad2:	f104 0010 	add.w	r0, r4, #16
 8012ad6:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8012ad8:	f004 fe62 	bl	80177a0 <GUI_DrawRect>
 8012adc:	6828      	ldr	r0, [r5, #0]
 8012ade:	f7fd fa7f 	bl	800ffe0 <GUI_SetColor>
 8012ae2:	f104 0010 	add.w	r0, r4, #16
 8012ae6:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8012ae8:	3001      	adds	r0, #1
 8012aea:	3101      	adds	r1, #1
 8012aec:	3a01      	subs	r2, #1
 8012aee:	3b01      	subs	r3, #1
 8012af0:	e02c      	b.n	8012b4c <MULTIPAGE_DrawSkinFlex+0xf4>
 8012af2:	6968      	ldr	r0, [r5, #20]
 8012af4:	f7fd fa74 	bl	800ffe0 <GUI_SetColor>
 8012af8:	7bb3      	ldrb	r3, [r6, #14]
 8012afa:	0718      	lsls	r0, r3, #28
 8012afc:	d504      	bpl.n	8012b08 <MULTIPAGE_DrawSkinFlex+0xb0>
 8012afe:	69e0      	ldr	r0, [r4, #28]
 8012b00:	6921      	ldr	r1, [r4, #16]
 8012b02:	69a2      	ldr	r2, [r4, #24]
 8012b04:	f7fd fd54 	bl	80105b0 <GUI_DrawHLine>
 8012b08:	7bb3      	ldrb	r3, [r6, #14]
 8012b0a:	0759      	lsls	r1, r3, #29
 8012b0c:	d504      	bpl.n	8012b18 <MULTIPAGE_DrawSkinFlex+0xc0>
 8012b0e:	6960      	ldr	r0, [r4, #20]
 8012b10:	6921      	ldr	r1, [r4, #16]
 8012b12:	69a2      	ldr	r2, [r4, #24]
 8012b14:	f7fd fd4c 	bl	80105b0 <GUI_DrawHLine>
 8012b18:	7bb3      	ldrb	r3, [r6, #14]
 8012b1a:	07da      	lsls	r2, r3, #31
 8012b1c:	d504      	bpl.n	8012b28 <MULTIPAGE_DrawSkinFlex+0xd0>
 8012b1e:	6920      	ldr	r0, [r4, #16]
 8012b20:	6961      	ldr	r1, [r4, #20]
 8012b22:	69e2      	ldr	r2, [r4, #28]
 8012b24:	f7fd fd22 	bl	801056c <GUI_DrawVLine>
 8012b28:	7bb3      	ldrb	r3, [r6, #14]
 8012b2a:	079b      	lsls	r3, r3, #30
 8012b2c:	f140 80c3 	bpl.w	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012b30:	69a0      	ldr	r0, [r4, #24]
 8012b32:	6961      	ldr	r1, [r4, #20]
 8012b34:	69e2      	ldr	r2, [r4, #28]
 8012b36:	f7fd fd19 	bl	801056c <GUI_DrawVLine>
 8012b3a:	e0bc      	b.n	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012b3c:	428a      	cmp	r2, r1
 8012b3e:	d108      	bne.n	8012b52 <MULTIPAGE_DrawSkinFlex+0xfa>
 8012b40:	6828      	ldr	r0, [r5, #0]
 8012b42:	f7fd fa4d 	bl	800ffe0 <GUI_SetColor>
 8012b46:	f104 0010 	add.w	r0, r4, #16
 8012b4a:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8012b4c:	f7fd fcc8 	bl	80104e0 <GUI_FillRect>
 8012b50:	e0b1      	b.n	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012b52:	89b3      	ldrh	r3, [r6, #12]
 8012b54:	f013 0f08 	tst.w	r3, #8
 8012b58:	6873      	ldr	r3, [r6, #4]
 8012b5a:	d036      	beq.n	8012bca <MULTIPAGE_DrawSkinFlex+0x172>
 8012b5c:	f013 0f04 	tst.w	r3, #4
 8012b60:	69a2      	ldr	r2, [r4, #24]
 8012b62:	6923      	ldr	r3, [r4, #16]
 8012b64:	f04f 0602 	mov.w	r6, #2
 8012b68:	ebc3 0102 	rsb	r1, r3, r2
 8012b6c:	fb91 f1f6 	sdiv	r1, r1, r6
 8012b70:	eb03 0001 	add.w	r0, r3, r1
 8012b74:	d011      	beq.n	8012b9a <MULTIPAGE_DrawSkinFlex+0x142>
 8012b76:	68e9      	ldr	r1, [r5, #12]
 8012b78:	9100      	str	r1, [sp, #0]
 8012b7a:	6929      	ldr	r1, [r5, #16]
 8012b7c:	9101      	str	r1, [sp, #4]
 8012b7e:	3001      	adds	r0, #1
 8012b80:	69e3      	ldr	r3, [r4, #28]
 8012b82:	6961      	ldr	r1, [r4, #20]
 8012b84:	f004 fc78 	bl	8017478 <GUI_DrawGradientH>
 8012b88:	6920      	ldr	r0, [r4, #16]
 8012b8a:	69a3      	ldr	r3, [r4, #24]
 8012b8c:	1a1b      	subs	r3, r3, r0
 8012b8e:	fb93 f2f6 	sdiv	r2, r3, r6
 8012b92:	686b      	ldr	r3, [r5, #4]
 8012b94:	9300      	str	r3, [sp, #0]
 8012b96:	68ab      	ldr	r3, [r5, #8]
 8012b98:	e010      	b.n	8012bbc <MULTIPAGE_DrawSkinFlex+0x164>
 8012b9a:	68a9      	ldr	r1, [r5, #8]
 8012b9c:	9100      	str	r1, [sp, #0]
 8012b9e:	6869      	ldr	r1, [r5, #4]
 8012ba0:	9101      	str	r1, [sp, #4]
 8012ba2:	3001      	adds	r0, #1
 8012ba4:	69e3      	ldr	r3, [r4, #28]
 8012ba6:	6961      	ldr	r1, [r4, #20]
 8012ba8:	f004 fc66 	bl	8017478 <GUI_DrawGradientH>
 8012bac:	6920      	ldr	r0, [r4, #16]
 8012bae:	69a3      	ldr	r3, [r4, #24]
 8012bb0:	1a1b      	subs	r3, r3, r0
 8012bb2:	fb93 f2f6 	sdiv	r2, r3, r6
 8012bb6:	692b      	ldr	r3, [r5, #16]
 8012bb8:	9300      	str	r3, [sp, #0]
 8012bba:	68eb      	ldr	r3, [r5, #12]
 8012bbc:	9301      	str	r3, [sp, #4]
 8012bbe:	6961      	ldr	r1, [r4, #20]
 8012bc0:	69e3      	ldr	r3, [r4, #28]
 8012bc2:	4402      	add	r2, r0
 8012bc4:	f004 fc58 	bl	8017478 <GUI_DrawGradientH>
 8012bc8:	e075      	b.n	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012bca:	f013 0f04 	tst.w	r3, #4
 8012bce:	6961      	ldr	r1, [r4, #20]
 8012bd0:	69e3      	ldr	r3, [r4, #28]
 8012bd2:	f04f 0602 	mov.w	r6, #2
 8012bd6:	ebc1 0303 	rsb	r3, r1, r3
 8012bda:	fb93 f3f6 	sdiv	r3, r3, r6
 8012bde:	d012      	beq.n	8012c06 <MULTIPAGE_DrawSkinFlex+0x1ae>
 8012be0:	692a      	ldr	r2, [r5, #16]
 8012be2:	9200      	str	r2, [sp, #0]
 8012be4:	68ea      	ldr	r2, [r5, #12]
 8012be6:	9201      	str	r2, [sp, #4]
 8012be8:	440b      	add	r3, r1
 8012bea:	6920      	ldr	r0, [r4, #16]
 8012bec:	69a2      	ldr	r2, [r4, #24]
 8012bee:	f004 fc11 	bl	8017414 <GUI_DrawGradientV>
 8012bf2:	6962      	ldr	r2, [r4, #20]
 8012bf4:	69e3      	ldr	r3, [r4, #28]
 8012bf6:	68a8      	ldr	r0, [r5, #8]
 8012bf8:	9000      	str	r0, [sp, #0]
 8012bfa:	1a99      	subs	r1, r3, r2
 8012bfc:	fb91 f6f6 	sdiv	r6, r1, r6
 8012c00:	1991      	adds	r1, r2, r6
 8012c02:	6868      	ldr	r0, [r5, #4]
 8012c04:	e011      	b.n	8012c2a <MULTIPAGE_DrawSkinFlex+0x1d2>
 8012c06:	686a      	ldr	r2, [r5, #4]
 8012c08:	9200      	str	r2, [sp, #0]
 8012c0a:	68aa      	ldr	r2, [r5, #8]
 8012c0c:	9201      	str	r2, [sp, #4]
 8012c0e:	440b      	add	r3, r1
 8012c10:	6920      	ldr	r0, [r4, #16]
 8012c12:	69a2      	ldr	r2, [r4, #24]
 8012c14:	f004 fbfe 	bl	8017414 <GUI_DrawGradientV>
 8012c18:	6962      	ldr	r2, [r4, #20]
 8012c1a:	69e3      	ldr	r3, [r4, #28]
 8012c1c:	68e8      	ldr	r0, [r5, #12]
 8012c1e:	9000      	str	r0, [sp, #0]
 8012c20:	1a99      	subs	r1, r3, r2
 8012c22:	fb91 f6f6 	sdiv	r6, r1, r6
 8012c26:	6928      	ldr	r0, [r5, #16]
 8012c28:	1991      	adds	r1, r2, r6
 8012c2a:	9001      	str	r0, [sp, #4]
 8012c2c:	6920      	ldr	r0, [r4, #16]
 8012c2e:	69a2      	ldr	r2, [r4, #24]
 8012c30:	3101      	adds	r1, #1
 8012c32:	f004 fbef 	bl	8017414 <GUI_DrawGradientV>
 8012c36:	e03e      	b.n	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012c38:	6933      	ldr	r3, [r6, #16]
 8012c3a:	2b00      	cmp	r3, #0
 8012c3c:	d03b      	beq.n	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012c3e:	6818      	ldr	r0, [r3, #0]
 8012c40:	6821      	ldr	r1, [r4, #0]
 8012c42:	6922      	ldr	r2, [r4, #16]
 8012c44:	6963      	ldr	r3, [r4, #20]
 8012c46:	f7f6 fa75 	bl	8009134 <GUI_DRAW__Draw>
 8012c4a:	e034      	b.n	8012cb6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8012c4c:	6820      	ldr	r0, [r4, #0]
 8012c4e:	f7f6 fa3c 	bl	80090ca <MULTIPAGE_GetFont>
 8012c52:	f7fd f997 	bl	800ff84 <GUI_SetFont>
 8012c56:	69a8      	ldr	r0, [r5, #24]
 8012c58:	f7fd f9c2 	bl	800ffe0 <GUI_SetColor>
 8012c5c:	2002      	movs	r0, #2
 8012c5e:	f7fd f987 	bl	800ff70 <GUI_SetTextMode>
 8012c62:	6820      	ldr	r0, [r4, #0]
 8012c64:	f7fe fbac 	bl	80113c0 <GUI_ALLOC_LockH>
 8012c68:	68a1      	ldr	r1, [r4, #8]
 8012c6a:	9003      	str	r0, [sp, #12]
 8012c6c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8012c6e:	f7f6 fb41 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 8012c72:	6923      	ldr	r3, [r4, #16]
 8012c74:	f8ad 3010 	strh.w	r3, [sp, #16]
 8012c78:	6963      	ldr	r3, [r4, #20]
 8012c7a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012c7e:	69a3      	ldr	r3, [r4, #24]
 8012c80:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012c84:	69e3      	ldr	r3, [r4, #28]
 8012c86:	9002      	str	r0, [sp, #8]
 8012c88:	f110 0418 	adds.w	r4, r0, #24
 8012c8c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012c90:	d00b      	beq.n	8012caa <MULTIPAGE_DrawSkinFlex+0x252>
 8012c92:	4620      	mov	r0, r4
 8012c94:	f7ed fabc 	bl	8000210 <strlen>
 8012c98:	6832      	ldr	r2, [r6, #0]
 8012c9a:	9200      	str	r2, [sp, #0]
 8012c9c:	9a03      	ldr	r2, [sp, #12]
 8012c9e:	4603      	mov	r3, r0
 8012ca0:	a904      	add	r1, sp, #16
 8012ca2:	4620      	mov	r0, r4
 8012ca4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8012ca6:	f004 fc19 	bl	80174dc <GUI_DispStringInRectEx>
 8012caa:	a802      	add	r0, sp, #8
 8012cac:	f7fe fb96 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012cb0:	a803      	add	r0, sp, #12
 8012cb2:	f7fe fb93 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012cb6:	2000      	movs	r0, #0
 8012cb8:	b006      	add	sp, #24
 8012cba:	bd70      	pop	{r4, r5, r6, pc}
 8012cbc:	20000228 	.word	0x20000228
 8012cc0:	080133d7 	.word	0x080133d7
 8012cc4:	20000260 	.word	0x20000260
 8012cc8:	20000244 	.word	0x20000244

08012ccc <MULTIPAGE__DrawTextItemH>:
 8012ccc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8012cd0:	4604      	mov	r4, r0
 8012cd2:	4688      	mov	r8, r1
 8012cd4:	6818      	ldr	r0, [r3, #0]
 8012cd6:	6859      	ldr	r1, [r3, #4]
 8012cd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012cda:	466d      	mov	r5, sp
 8012cdc:	c503      	stmia	r5!, {r0, r1}
 8012cde:	4617      	mov	r7, r2
 8012ce0:	f8bd 2000 	ldrh.w	r2, [sp]
 8012ce4:	4413      	add	r3, r2
 8012ce6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012ce8:	b29b      	uxth	r3, r3
 8012cea:	f8ad 3000 	strh.w	r3, [sp]
 8012cee:	4413      	add	r3, r2
 8012cf0:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012cf4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012cf6:	4668      	mov	r0, sp
 8012cf8:	689b      	ldr	r3, [r3, #8]
 8012cfa:	4798      	blx	r3
 8012cfc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012cfe:	4668      	mov	r0, sp
 8012d00:	4669      	mov	r1, sp
 8012d02:	681a      	ldr	r2, [r3, #0]
 8012d04:	f7fc f81b 	bl	800ed3e <GUI__ReduceRect>
 8012d08:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8012d0c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8012d0e:	ae02      	add	r6, sp, #8
 8012d10:	42bb      	cmp	r3, r7
 8012d12:	e886 0003 	stmia.w	r6, {r0, r1}
 8012d16:	d144      	bne.n	8012da2 <MULTIPAGE__DrawTextItemH+0xd6>
 8012d18:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8012d1a:	f013 0f04 	tst.w	r3, #4
 8012d1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012d20:	681b      	ldr	r3, [r3, #0]
 8012d22:	d01d      	beq.n	8012d60 <MULTIPAGE__DrawTextItemH+0x94>
 8012d24:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012d28:	3a01      	subs	r2, #1
 8012d2a:	1ad2      	subs	r2, r2, r3
 8012d2c:	2b01      	cmp	r3, #1
 8012d2e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8012d32:	dd36      	ble.n	8012da2 <MULTIPAGE__DrawTextItemH+0xd6>
 8012d34:	4f2e      	ldr	r7, [pc, #184]	; (8012df0 <MULTIPAGE__DrawTextItemH+0x124>)
 8012d36:	6838      	ldr	r0, [r7, #0]
 8012d38:	f7fb ff66 	bl	800ec08 <LCD_SetColor>
 8012d3c:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8012d40:	f9bd 0000 	ldrsh.w	r0, [sp]
 8012d44:	1c4a      	adds	r2, r1, #1
 8012d46:	3801      	subs	r0, #1
 8012d48:	f7fd fc10 	bl	801056c <GUI_DrawVLine>
 8012d4c:	6878      	ldr	r0, [r7, #4]
 8012d4e:	f7fb ff5b 	bl	800ec08 <LCD_SetColor>
 8012d52:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8012d56:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8012d5a:	1c4a      	adds	r2, r1, #1
 8012d5c:	3001      	adds	r0, #1
 8012d5e:	e01e      	b.n	8012d9e <MULTIPAGE__DrawTextItemH+0xd2>
 8012d60:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012d64:	441a      	add	r2, r3
 8012d66:	3201      	adds	r2, #1
 8012d68:	2b01      	cmp	r3, #1
 8012d6a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012d6e:	dd18      	ble.n	8012da2 <MULTIPAGE__DrawTextItemH+0xd6>
 8012d70:	4f1f      	ldr	r7, [pc, #124]	; (8012df0 <MULTIPAGE__DrawTextItemH+0x124>)
 8012d72:	6838      	ldr	r0, [r7, #0]
 8012d74:	f7fb ff48 	bl	800ec08 <LCD_SetColor>
 8012d78:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8012d7c:	f9bd 0000 	ldrsh.w	r0, [sp]
 8012d80:	1e91      	subs	r1, r2, #2
 8012d82:	3801      	subs	r0, #1
 8012d84:	3a01      	subs	r2, #1
 8012d86:	f7fd fbf1 	bl	801056c <GUI_DrawVLine>
 8012d8a:	6878      	ldr	r0, [r7, #4]
 8012d8c:	f7fb ff3c 	bl	800ec08 <LCD_SetColor>
 8012d90:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8012d94:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8012d98:	1e91      	subs	r1, r2, #2
 8012d9a:	3001      	adds	r0, #1
 8012d9c:	3a01      	subs	r2, #1
 8012d9e:	f7fd fbe5 	bl	801056c <GUI_DrawVLine>
 8012da2:	2002      	movs	r0, #2
 8012da4:	f7fd f8e4 	bl	800ff70 <GUI_SetTextMode>
 8012da8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8012daa:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 8012dae:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8012db0:	f7fb ff2a 	bl	800ec08 <LCD_SetColor>
 8012db4:	4669      	mov	r1, sp
 8012db6:	4620      	mov	r0, r4
 8012db8:	f7f4 ff66 	bl	8007c88 <WIDGET__FillRectEx>
 8012dbc:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8012dbe:	f7fb ff1b 	bl	800ebf8 <LCD_SetBkColor>
 8012dc2:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8012dc4:	f7fb ff20 	bl	800ec08 <LCD_SetColor>
 8012dc8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012dca:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012dce:	881b      	ldrh	r3, [r3, #0]
 8012dd0:	441a      	add	r2, r3
 8012dd2:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012dd6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012dda:	4640      	mov	r0, r8
 8012ddc:	1ad3      	subs	r3, r2, r3
 8012dde:	4631      	mov	r1, r6
 8012de0:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
 8012de2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012de6:	f004 fc96 	bl	8017716 <GUI_DispStringInRect>
 8012dea:	b004      	add	sp, #16
 8012dec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012df0:	200000cc 	.word	0x200000cc

08012df4 <_IsBetween>:
 8012df4:	4291      	cmp	r1, r2
 8012df6:	dd06      	ble.n	8012e06 <_IsBetween+0x12>
 8012df8:	4288      	cmp	r0, r1
 8012dfa:	dc0b      	bgt.n	8012e14 <_IsBetween+0x20>
 8012dfc:	4290      	cmp	r0, r2
 8012dfe:	bfb4      	ite	lt
 8012e00:	2000      	movlt	r0, #0
 8012e02:	2001      	movge	r0, #1
 8012e04:	4770      	bx	lr
 8012e06:	4288      	cmp	r0, r1
 8012e08:	db04      	blt.n	8012e14 <_IsBetween+0x20>
 8012e0a:	4290      	cmp	r0, r2
 8012e0c:	bfcc      	ite	gt
 8012e0e:	2000      	movgt	r0, #0
 8012e10:	2001      	movle	r0, #1
 8012e12:	4770      	bx	lr
 8012e14:	2000      	movs	r0, #0
 8012e16:	4770      	bx	lr

08012e18 <_Create>:
 8012e18:	b530      	push	{r4, r5, lr}
 8012e1a:	b08b      	sub	sp, #44	; 0x2c
 8012e1c:	2100      	movs	r1, #0
 8012e1e:	4604      	mov	r4, r0
 8012e20:	2224      	movs	r2, #36	; 0x24
 8012e22:	a801      	add	r0, sp, #4
 8012e24:	f005 ffa9 	bl	8018d7a <memset>
 8012e28:	4620      	mov	r0, r4
 8012e2a:	f7fe fac9 	bl	80113c0 <GUI_ALLOC_LockH>
 8012e2e:	ab0a      	add	r3, sp, #40	; 0x28
 8012e30:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
 8012e32:	f843 0d28 	str.w	r0, [r3, #-40]!
 8012e36:	6895      	ldr	r5, [r2, #8]
 8012e38:	4668      	mov	r0, sp
 8012e3a:	f7fe facf 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012e3e:	2300      	movs	r3, #0
 8012e40:	9302      	str	r3, [sp, #8]
 8012e42:	9401      	str	r4, [sp, #4]
 8012e44:	682b      	ldr	r3, [r5, #0]
 8012e46:	a801      	add	r0, sp, #4
 8012e48:	4798      	blx	r3
 8012e4a:	b00b      	add	sp, #44	; 0x2c
 8012e4c:	bd30      	pop	{r4, r5, pc}

08012e4e <MULTIPAGE_SKIN__GetPagePos>:
 8012e4e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012e52:	4689      	mov	r9, r1
 8012e54:	4607      	mov	r7, r0
 8012e56:	f7fe fab3 	bl	80113c0 <GUI_ALLOC_LockH>
 8012e5a:	ae02      	add	r6, sp, #8
 8012e5c:	f890 4080 	ldrb.w	r4, [r0, #128]	; 0x80
 8012e60:	f846 0d04 	str.w	r0, [r6, #-4]!
 8012e64:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8012e66:	f7f6 f9c3 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 8012e6a:	4680      	mov	r8, r0
 8012e6c:	4630      	mov	r0, r6
 8012e6e:	f7fe fab5 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012e72:	2500      	movs	r5, #0
 8012e74:	454d      	cmp	r5, r9
 8012e76:	d006      	beq.n	8012e86 <MULTIPAGE_SKIN__GetPagePos+0x38>
 8012e78:	4629      	mov	r1, r5
 8012e7a:	4638      	mov	r0, r7
 8012e7c:	f7f5 fcd4 	bl	8008828 <MULTIPAGE__GetPageWidth>
 8012e80:	3501      	adds	r5, #1
 8012e82:	4404      	add	r4, r0
 8012e84:	e7f6      	b.n	8012e74 <MULTIPAGE_SKIN__GetPagePos+0x26>
 8012e86:	4545      	cmp	r5, r8
 8012e88:	d109      	bne.n	8012e9e <MULTIPAGE_SKIN__GetPagePos+0x50>
 8012e8a:	4638      	mov	r0, r7
 8012e8c:	f7fe fa98 	bl	80113c0 <GUI_ALLOC_LockH>
 8012e90:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
 8012e94:	9001      	str	r0, [sp, #4]
 8012e96:	4630      	mov	r0, r6
 8012e98:	441c      	add	r4, r3
 8012e9a:	f7fe fa9f 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012e9e:	4620      	mov	r0, r4
 8012ea0:	b003      	add	sp, #12
 8012ea2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08012ea8 <_Paint>:
 8012ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012eac:	b0a9      	sub	sp, #164	; 0xa4
 8012eae:	9006      	str	r0, [sp, #24]
 8012eb0:	901f      	str	r0, [sp, #124]	; 0x7c
 8012eb2:	f7fe fa85 	bl	80113c0 <GUI_ALLOC_LockH>
 8012eb6:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8012eb8:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012eba:	9209      	str	r2, [sp, #36]	; 0x24
 8012ebc:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8012ec0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8012ec2:	930c      	str	r3, [sp, #48]	; 0x30
 8012ec4:	9205      	str	r2, [sp, #20]
 8012ec6:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8012ec8:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8012eca:	9017      	str	r0, [sp, #92]	; 0x5c
 8012ecc:	6cc7      	ldr	r7, [r0, #76]	; 0x4c
 8012ece:	6c06      	ldr	r6, [r0, #64]	; 0x40
 8012ed0:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 8012ed2:	f890 8080 	ldrb.w	r8, [r0, #128]	; 0x80
 8012ed6:	f890 b081 	ldrb.w	fp, [r0, #129]	; 0x81
 8012eda:	9302      	str	r3, [sp, #8]
 8012edc:	9201      	str	r2, [sp, #4]
 8012ede:	b90c      	cbnz	r4, 8012ee4 <_Paint+0x3c>
 8012ee0:	f8d0 4088 	ldr.w	r4, [r0, #136]	; 0x88
 8012ee4:	f10d 09a0 	add.w	r9, sp, #160	; 0xa0
 8012ee8:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8012eea:	f7fd f84b 	bl	800ff84 <GUI_SetFont>
 8012eee:	f859 0d44 	ldr.w	r0, [r9, #-68]!
 8012ef2:	a918      	add	r1, sp, #96	; 0x60
 8012ef4:	f7f5 fc65 	bl	80087c2 <MULTIPAGE__CalcBorderRect>
 8012ef8:	4648      	mov	r0, r9
 8012efa:	f7fe fa6f 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012efe:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 8012f02:	9223      	str	r2, [sp, #140]	; 0x8c
 8012f04:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	; 0x62
 8012f08:	9224      	str	r2, [sp, #144]	; 0x90
 8012f0a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8012f0e:	9225      	str	r2, [sp, #148]	; 0x94
 8012f10:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	; 0x66
 8012f14:	9226      	str	r2, [sp, #152]	; 0x98
 8012f16:	ab1a      	add	r3, sp, #104	; 0x68
 8012f18:	220b      	movs	r2, #11
 8012f1a:	f04f 39ff 	mov.w	r9, #4294967295
 8012f1e:	9327      	str	r3, [sp, #156]	; 0x9c
 8012f20:	9220      	str	r2, [sp, #128]	; 0x80
 8012f22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f24:	971b      	str	r7, [sp, #108]	; 0x6c
 8012f26:	961c      	str	r6, [sp, #112]	; 0x70
 8012f28:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
 8012f2c:	f8cd 9084 	str.w	r9, [sp, #132]	; 0x84
 8012f30:	a81f      	add	r0, sp, #124	; 0x7c
 8012f32:	4798      	blx	r3
 8012f34:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012f36:	f7f6 f95b 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 8012f3a:	900d      	str	r0, [sp, #52]	; 0x34
 8012f3c:	2800      	cmp	r0, #0
 8012f3e:	f000 8230 	beq.w	80133a2 <_Paint+0x4fa>
 8012f42:	2100      	movs	r1, #0
 8012f44:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012f46:	f7f6 f9d5 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 8012f4a:	2100      	movs	r1, #0
 8012f4c:	9016      	str	r0, [sp, #88]	; 0x58
 8012f4e:	9806      	ldr	r0, [sp, #24]
 8012f50:	f7f5 fc6a 	bl	8008828 <MULTIPAGE__GetPageWidth>
 8012f54:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8012f56:	9003      	str	r0, [sp, #12]
 8012f58:	7912      	ldrb	r2, [r2, #4]
 8012f5a:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 8012f5e:	a816      	add	r0, sp, #88	; 0x58
 8012f60:	f7fe fa3c 	bl	80113dc <GUI_ALLOC_UnlockH>
 8012f64:	f005 0508 	and.w	r5, r5, #8
 8012f68:	9806      	ldr	r0, [sp, #24]
 8012f6a:	a918      	add	r1, sp, #96	; 0x60
 8012f6c:	f7f5 fca3 	bl	80088b6 <MULTIPAGE__GetTabBarRect>
 8012f70:	b2ad      	uxth	r5, r5
 8012f72:	a818      	add	r0, sp, #96	; 0x60
 8012f74:	f7f7 f9e4 	bl	800a340 <WM_SetUserClipRect>
 8012f78:	950b      	str	r5, [sp, #44]	; 0x2c
 8012f7a:	b1f5      	cbz	r5, 8012fba <_Paint+0x112>
 8012f7c:	f8bd 1062 	ldrh.w	r1, [sp, #98]	; 0x62
 8012f80:	9a03      	ldr	r2, [sp, #12]
 8012f82:	f9bd 3066 	ldrsh.w	r3, [sp, #102]	; 0x66
 8012f86:	9311      	str	r3, [sp, #68]	; 0x44
 8012f88:	eb08 0501 	add.w	r5, r8, r1
 8012f8c:	b2ad      	uxth	r5, r5
 8012f8e:	fa1f fa85 	uxth.w	sl, r5
 8012f92:	444d      	add	r5, r9
 8012f94:	b209      	sxth	r1, r1
 8012f96:	4415      	add	r5, r2
 8012f98:	f017 0f04 	tst.w	r7, #4
 8012f9c:	9110      	str	r1, [sp, #64]	; 0x40
 8012f9e:	b2ad      	uxth	r5, r5
 8012fa0:	f8bd 1060 	ldrh.w	r1, [sp, #96]	; 0x60
 8012fa4:	f8bd 0064 	ldrh.w	r0, [sp, #100]	; 0x64
 8012fa8:	d004      	beq.n	8012fb4 <_Paint+0x10c>
 8012faa:	2201      	movs	r2, #1
 8012fac:	9108      	str	r1, [sp, #32]
 8012fae:	9004      	str	r0, [sp, #16]
 8012fb0:	9207      	str	r2, [sp, #28]
 8012fb2:	e022      	b.n	8012ffa <_Paint+0x152>
 8012fb4:	9008      	str	r0, [sp, #32]
 8012fb6:	9104      	str	r1, [sp, #16]
 8012fb8:	e018      	b.n	8012fec <_Paint+0x144>
 8012fba:	f8bd 1060 	ldrh.w	r1, [sp, #96]	; 0x60
 8012fbe:	9b03      	ldr	r3, [sp, #12]
 8012fc0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8012fc4:	9211      	str	r2, [sp, #68]	; 0x44
 8012fc6:	eb08 0501 	add.w	r5, r8, r1
 8012fca:	b2ad      	uxth	r5, r5
 8012fcc:	fa1f fa85 	uxth.w	sl, r5
 8012fd0:	3d01      	subs	r5, #1
 8012fd2:	b209      	sxth	r1, r1
 8012fd4:	441d      	add	r5, r3
 8012fd6:	f017 0f04 	tst.w	r7, #4
 8012fda:	9110      	str	r1, [sp, #64]	; 0x40
 8012fdc:	b2ad      	uxth	r5, r5
 8012fde:	f8bd 0062 	ldrh.w	r0, [sp, #98]	; 0x62
 8012fe2:	f8bd 1066 	ldrh.w	r1, [sp, #102]	; 0x66
 8012fe6:	d004      	beq.n	8012ff2 <_Paint+0x14a>
 8012fe8:	9108      	str	r1, [sp, #32]
 8012fea:	9004      	str	r0, [sp, #16]
 8012fec:	f8cd 901c 	str.w	r9, [sp, #28]
 8012ff0:	e003      	b.n	8012ffa <_Paint+0x152>
 8012ff2:	2301      	movs	r3, #1
 8012ff4:	9008      	str	r0, [sp, #32]
 8012ff6:	9104      	str	r1, [sp, #16]
 8012ff8:	9307      	str	r3, [sp, #28]
 8012ffa:	9a05      	ldr	r2, [sp, #20]
 8012ffc:	b152      	cbz	r2, 8013014 <_Paint+0x16c>
 8012ffe:	4611      	mov	r1, r2
 8013000:	9806      	ldr	r0, [sp, #24]
 8013002:	f7ff ff24 	bl	8012e4e <MULTIPAGE_SKIN__GetPagePos>
 8013006:	b280      	uxth	r0, r0
 8013008:	ebc0 020a 	rsb	r2, r0, sl
 801300c:	1a2d      	subs	r5, r5, r0
 801300e:	fa1f fa82 	uxth.w	sl, r2
 8013012:	b2ad      	uxth	r5, r5
 8013014:	9b07      	ldr	r3, [sp, #28]
 8013016:	9a08      	ldr	r2, [sp, #32]
 8013018:	fb03 2b0b 	mla	fp, r3, fp, r2
 801301c:	9a01      	ldr	r2, [sp, #4]
 801301e:	2302      	movs	r3, #2
 8013020:	fb92 f2f3 	sdiv	r2, r2, r3
 8013024:	920e      	str	r2, [sp, #56]	; 0x38
 8013026:	9a04      	ldr	r2, [sp, #16]
 8013028:	b212      	sxth	r2, r2
 801302a:	4611      	mov	r1, r2
 801302c:	9201      	str	r2, [sp, #4]
 801302e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013030:	fb94 f4f3 	sdiv	r4, r4, r3
 8013034:	4411      	add	r1, r2
 8013036:	4622      	mov	r2, r4
 8013038:	440a      	add	r2, r1
 801303a:	9212      	str	r2, [sp, #72]	; 0x48
 801303c:	9a02      	ldr	r2, [sp, #8]
 801303e:	940f      	str	r4, [sp, #60]	; 0x3c
 8013040:	fb92 f3f3 	sdiv	r3, r2, r3
 8013044:	fa1f fb8b 	uxth.w	fp, fp
 8013048:	9302      	str	r3, [sp, #8]
 801304a:	425b      	negs	r3, r3
 801304c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8013050:	9313      	str	r3, [sp, #76]	; 0x4c
 8013052:	2400      	movs	r4, #0
 8013054:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013056:	429c      	cmp	r4, r3
 8013058:	f280 81a0 	bge.w	801339c <_Paint+0x4f4>
 801305c:	b1bc      	cbz	r4, 801308e <_Paint+0x1e6>
 801305e:	4621      	mov	r1, r4
 8013060:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013062:	f7f6 f947 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 8013066:	4621      	mov	r1, r4
 8013068:	9016      	str	r0, [sp, #88]	; 0x58
 801306a:	9806      	ldr	r0, [sp, #24]
 801306c:	f7f5 fbdc 	bl	8008828 <MULTIPAGE__GetPageWidth>
 8013070:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013072:	9003      	str	r0, [sp, #12]
 8013074:	791b      	ldrb	r3, [r3, #4]
 8013076:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 801307a:	b2ad      	uxth	r5, r5
 801307c:	a816      	add	r0, sp, #88	; 0x58
 801307e:	f7fe f9ad 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013082:	1c6a      	adds	r2, r5, #1
 8013084:	fa1f fa82 	uxth.w	sl, r2
 8013088:	9a03      	ldr	r2, [sp, #12]
 801308a:	4415      	add	r5, r2
 801308c:	b2ad      	uxth	r5, r5
 801308e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013090:	b22b      	sxth	r3, r5
 8013092:	4293      	cmp	r3, r2
 8013094:	f2c0 8180 	blt.w	8013398 <_Paint+0x4f0>
 8013098:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801309a:	fa0f f38a 	sxth.w	r3, sl
 801309e:	4293      	cmp	r3, r2
 80130a0:	f300 817a 	bgt.w	8013398 <_Paint+0x4f0>
 80130a4:	42b4      	cmp	r4, r6
 80130a6:	9421      	str	r4, [sp, #132]	; 0x84
 80130a8:	d114      	bne.n	80130d4 <_Paint+0x22c>
 80130aa:	b144      	cbz	r4, 80130be <_Paint+0x216>
 80130ac:	9b05      	ldr	r3, [sp, #20]
 80130ae:	429c      	cmp	r4, r3
 80130b0:	d105      	bne.n	80130be <_Paint+0x216>
 80130b2:	eb08 020a 	add.w	r2, r8, sl
 80130b6:	4445      	add	r5, r8
 80130b8:	fa1f fa82 	uxth.w	sl, r2
 80130bc:	b2ad      	uxth	r5, r5
 80130be:	ebc8 090a 	rsb	r9, r8, sl
 80130c2:	eb08 0105 	add.w	r1, r8, r5
 80130c6:	fa1f f989 	uxth.w	r9, r9
 80130ca:	b289      	uxth	r1, r1
 80130cc:	9b04      	ldr	r3, [sp, #16]
 80130ce:	f8dd b020 	ldr.w	fp, [sp, #32]
 80130d2:	e036      	b.n	8013142 <_Paint+0x29a>
 80130d4:	1c73      	adds	r3, r6, #1
 80130d6:	9a04      	ldr	r2, [sp, #16]
 80130d8:	9907      	ldr	r1, [sp, #28]
 80130da:	429c      	cmp	r4, r3
 80130dc:	ebc1 0302 	rsb	r3, r1, r2
 80130e0:	d11f      	bne.n	8013122 <_Paint+0x27a>
 80130e2:	07fa      	lsls	r2, r7, #31
 80130e4:	b29b      	uxth	r3, r3
 80130e6:	d514      	bpl.n	8013112 <_Paint+0x26a>
 80130e8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80130ea:	1e51      	subs	r1, r2, #1
 80130ec:	9a05      	ldr	r2, [sp, #20]
 80130ee:	428c      	cmp	r4, r1
 80130f0:	bf08      	it	eq
 80130f2:	ebc8 0105 	rsbeq	r1, r8, r5
 80130f6:	ebc2 0004 	rsb	r0, r2, r4
 80130fa:	bf0c      	ite	eq
 80130fc:	b289      	uxtheq	r1, r1
 80130fe:	4629      	movne	r1, r5
 8013100:	2800      	cmp	r0, #0
 8013102:	dd1b      	ble.n	801313c <_Paint+0x294>
 8013104:	eb08 090a 	add.w	r9, r8, sl
 8013108:	fa1f f989 	uxth.w	r9, r9
 801310c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8013110:	e017      	b.n	8013142 <_Paint+0x29a>
 8013112:	eb08 090a 	add.w	r9, r8, sl
 8013116:	fa1f f989 	uxth.w	r9, r9
 801311a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 801311e:	4629      	mov	r1, r5
 8013120:	e00f      	b.n	8013142 <_Paint+0x29a>
 8013122:	1e71      	subs	r1, r6, #1
 8013124:	428c      	cmp	r4, r1
 8013126:	d104      	bne.n	8013132 <_Paint+0x28a>
 8013128:	ebc8 0105 	rsb	r1, r8, r5
 801312c:	b289      	uxth	r1, r1
 801312e:	b29b      	uxth	r3, r3
 8013130:	e004      	b.n	801313c <_Paint+0x294>
 8013132:	b29b      	uxth	r3, r3
 8013134:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8013138:	4629      	mov	r1, r5
 801313a:	e001      	b.n	8013140 <_Paint+0x298>
 801313c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8013140:	46d1      	mov	r9, sl
 8013142:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013144:	200f      	movs	r0, #15
 8013146:	f88d 0076 	strb.w	r0, [sp, #118]	; 0x76
 801314a:	b209      	sxth	r1, r1
 801314c:	fa0f f089 	sxth.w	r0, r9
 8013150:	b342      	cbz	r2, 80131a4 <_Paint+0x2fc>
 8013152:	9126      	str	r1, [sp, #152]	; 0x98
 8013154:	1c71      	adds	r1, r6, #1
 8013156:	4a94      	ldr	r2, [pc, #592]	; (80133a8 <_Paint+0x500>)
 8013158:	921a      	str	r2, [sp, #104]	; 0x68
 801315a:	428c      	cmp	r4, r1
 801315c:	9024      	str	r0, [sp, #144]	; 0x90
 801315e:	d104      	bne.n	801316a <_Paint+0x2c2>
 8013160:	9a05      	ldr	r2, [sp, #20]
 8013162:	4294      	cmp	r4, r2
 8013164:	d007      	beq.n	8013176 <_Paint+0x2ce>
 8013166:	210b      	movs	r1, #11
 8013168:	e003      	b.n	8013172 <_Paint+0x2ca>
 801316a:	1e71      	subs	r1, r6, #1
 801316c:	428c      	cmp	r4, r1
 801316e:	d102      	bne.n	8013176 <_Paint+0x2ce>
 8013170:	2107      	movs	r1, #7
 8013172:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 8013176:	f017 0f04 	tst.w	r7, #4
 801317a:	f89d 1076 	ldrb.w	r1, [sp, #118]	; 0x76
 801317e:	b21b      	sxth	r3, r3
 8013180:	d007      	beq.n	8013192 <_Paint+0x2ea>
 8013182:	f021 0102 	bic.w	r1, r1, #2
 8013186:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 801318a:	fa0f f18b 	sxth.w	r1, fp
 801318e:	9123      	str	r1, [sp, #140]	; 0x8c
 8013190:	e006      	b.n	80131a0 <_Paint+0x2f8>
 8013192:	f021 0101 	bic.w	r1, r1, #1
 8013196:	9323      	str	r3, [sp, #140]	; 0x8c
 8013198:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 801319c:	fa0f f38b 	sxth.w	r3, fp
 80131a0:	9325      	str	r3, [sp, #148]	; 0x94
 80131a2:	e027      	b.n	80131f4 <_Paint+0x34c>
 80131a4:	9125      	str	r1, [sp, #148]	; 0x94
 80131a6:	1c71      	adds	r1, r6, #1
 80131a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80131aa:	921a      	str	r2, [sp, #104]	; 0x68
 80131ac:	428c      	cmp	r4, r1
 80131ae:	9023      	str	r0, [sp, #140]	; 0x8c
 80131b0:	d104      	bne.n	80131bc <_Paint+0x314>
 80131b2:	9a05      	ldr	r2, [sp, #20]
 80131b4:	4294      	cmp	r4, r2
 80131b6:	d007      	beq.n	80131c8 <_Paint+0x320>
 80131b8:	210e      	movs	r1, #14
 80131ba:	e003      	b.n	80131c4 <_Paint+0x31c>
 80131bc:	1e71      	subs	r1, r6, #1
 80131be:	428c      	cmp	r4, r1
 80131c0:	d102      	bne.n	80131c8 <_Paint+0x320>
 80131c2:	210d      	movs	r1, #13
 80131c4:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 80131c8:	f017 0f04 	tst.w	r7, #4
 80131cc:	f89d 1076 	ldrb.w	r1, [sp, #118]	; 0x76
 80131d0:	b21b      	sxth	r3, r3
 80131d2:	d007      	beq.n	80131e4 <_Paint+0x33c>
 80131d4:	f021 0104 	bic.w	r1, r1, #4
 80131d8:	9324      	str	r3, [sp, #144]	; 0x90
 80131da:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 80131de:	fa0f f38b 	sxth.w	r3, fp
 80131e2:	e006      	b.n	80131f2 <_Paint+0x34a>
 80131e4:	f021 0108 	bic.w	r1, r1, #8
 80131e8:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 80131ec:	fa0f f18b 	sxth.w	r1, fp
 80131f0:	9124      	str	r1, [sp, #144]	; 0x90
 80131f2:	9326      	str	r3, [sp, #152]	; 0x98
 80131f4:	230b      	movs	r3, #11
 80131f6:	9320      	str	r3, [sp, #128]	; 0x80
 80131f8:	a81f      	add	r0, sp, #124	; 0x7c
 80131fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80131fc:	4798      	blx	r3
 80131fe:	f89d 3076 	ldrb.w	r3, [sp, #118]	; 0x76
 8013202:	07d8      	lsls	r0, r3, #31
 8013204:	d502      	bpl.n	801320c <_Paint+0x364>
 8013206:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8013208:	3101      	adds	r1, #1
 801320a:	9123      	str	r1, [sp, #140]	; 0x8c
 801320c:	0799      	lsls	r1, r3, #30
 801320e:	d502      	bpl.n	8013216 <_Paint+0x36e>
 8013210:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013212:	3901      	subs	r1, #1
 8013214:	9125      	str	r1, [sp, #148]	; 0x94
 8013216:	075a      	lsls	r2, r3, #29
 8013218:	d502      	bpl.n	8013220 <_Paint+0x378>
 801321a:	9924      	ldr	r1, [sp, #144]	; 0x90
 801321c:	3101      	adds	r1, #1
 801321e:	9124      	str	r1, [sp, #144]	; 0x90
 8013220:	0718      	lsls	r0, r3, #28
 8013222:	d502      	bpl.n	801322a <_Paint+0x382>
 8013224:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013226:	3b01      	subs	r3, #1
 8013228:	9326      	str	r3, [sp, #152]	; 0x98
 801322a:	2305      	movs	r3, #5
 801322c:	9320      	str	r3, [sp, #128]	; 0x80
 801322e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013230:	a81f      	add	r0, sp, #124	; 0x7c
 8013232:	4790      	blx	r2
 8013234:	4621      	mov	r1, r4
 8013236:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013238:	f7f6 f85c 	bl	80092f4 <GUI_ARRAY_GetpItemLocked>
 801323c:	4621      	mov	r1, r4
 801323e:	9016      	str	r0, [sp, #88]	; 0x58
 8013240:	9806      	ldr	r0, [sp, #24]
 8013242:	f7f5 ff73 	bl	800912c <MULTIPAGE_IsPageEnabled>
 8013246:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013248:	b908      	cbnz	r0, 801324e <_Paint+0x3a6>
 801324a:	6959      	ldr	r1, [r3, #20]
 801324c:	e002      	b.n	8013254 <_Paint+0x3ac>
 801324e:	42b4      	cmp	r4, r6
 8013250:	d103      	bne.n	801325a <_Paint+0x3b2>
 8013252:	68d9      	ldr	r1, [r3, #12]
 8013254:	b109      	cbz	r1, 801325a <_Paint+0x3b2>
 8013256:	460b      	mov	r3, r1
 8013258:	e000      	b.n	801325c <_Paint+0x3b4>
 801325a:	691b      	ldr	r3, [r3, #16]
 801325c:	a816      	add	r0, sp, #88	; 0x58
 801325e:	9315      	str	r3, [sp, #84]	; 0x54
 8013260:	f7fe f8bc 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013264:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013266:	2800      	cmp	r0, #0
 8013268:	d063      	beq.n	8013332 <_Paint+0x48a>
 801326a:	f7f5 ff8e 	bl	800918a <GUI_DRAW__GetYSize>
 801326e:	4601      	mov	r1, r0
 8013270:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013272:	9100      	str	r1, [sp, #0]
 8013274:	f7f5 ff77 	bl	8009166 <GUI_DRAW__GetXSize>
 8013278:	9900      	ldr	r1, [sp, #0]
 801327a:	2900      	cmp	r1, #0
 801327c:	d059      	beq.n	8013332 <_Paint+0x48a>
 801327e:	2800      	cmp	r0, #0
 8013280:	d057      	beq.n	8013332 <_Paint+0x48a>
 8013282:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013284:	2302      	movs	r3, #2
 8013286:	fa0f fe8a 	sxth.w	lr, sl
 801328a:	b322      	cbz	r2, 80132d6 <_Paint+0x42e>
 801328c:	9a03      	ldr	r2, [sp, #12]
 801328e:	fb92 fcf3 	sdiv	ip, r2, r3
 8013292:	fb91 f1f3 	sdiv	r1, r1, r3
 8013296:	44e6      	add	lr, ip
 8013298:	ebc1 010e 	rsb	r1, r1, lr
 801329c:	9124      	str	r1, [sp, #144]	; 0x90
 801329e:	f017 0f04 	tst.w	r7, #4
 80132a2:	b229      	sxth	r1, r5
 80132a4:	9126      	str	r1, [sp, #152]	; 0x98
 80132a6:	fb90 f3f3 	sdiv	r3, r0, r3
 80132aa:	d009      	beq.n	80132c0 <_Paint+0x418>
 80132ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80132ae:	fa02 f08b 	sxtah	r0, r2, fp
 80132b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80132b4:	4410      	add	r0, r2
 80132b6:	1ac3      	subs	r3, r0, r3
 80132b8:	9323      	str	r3, [sp, #140]	; 0x8c
 80132ba:	9b01      	ldr	r3, [sp, #4]
 80132bc:	9325      	str	r3, [sp, #148]	; 0x94
 80132be:	e02e      	b.n	801331e <_Paint+0x476>
 80132c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80132c2:	fa0f f18b 	sxth.w	r1, fp
 80132c6:	1ad3      	subs	r3, r2, r3
 80132c8:	42b4      	cmp	r4, r6
 80132ca:	9323      	str	r3, [sp, #140]	; 0x8c
 80132cc:	9125      	str	r1, [sp, #148]	; 0x94
 80132ce:	d126      	bne.n	801331e <_Paint+0x476>
 80132d0:	3302      	adds	r3, #2
 80132d2:	9323      	str	r3, [sp, #140]	; 0x8c
 80132d4:	e023      	b.n	801331e <_Paint+0x476>
 80132d6:	9a03      	ldr	r2, [sp, #12]
 80132d8:	fb92 fcf3 	sdiv	ip, r2, r3
 80132dc:	fb90 f0f3 	sdiv	r0, r0, r3
 80132e0:	44e6      	add	lr, ip
 80132e2:	ebc0 000e 	rsb	r0, r0, lr
 80132e6:	9023      	str	r0, [sp, #140]	; 0x8c
 80132e8:	f017 0f04 	tst.w	r7, #4
 80132ec:	b228      	sxth	r0, r5
 80132ee:	9025      	str	r0, [sp, #148]	; 0x94
 80132f0:	fb91 f3f3 	sdiv	r3, r1, r3
 80132f4:	d00a      	beq.n	801330c <_Paint+0x464>
 80132f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80132f8:	fa0f f18b 	sxth.w	r1, fp
 80132fc:	1ad3      	subs	r3, r2, r3
 80132fe:	42b4      	cmp	r4, r6
 8013300:	9324      	str	r3, [sp, #144]	; 0x90
 8013302:	9126      	str	r1, [sp, #152]	; 0x98
 8013304:	d10b      	bne.n	801331e <_Paint+0x476>
 8013306:	3302      	adds	r3, #2
 8013308:	9324      	str	r3, [sp, #144]	; 0x90
 801330a:	e008      	b.n	801331e <_Paint+0x476>
 801330c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801330e:	fa02 f18b 	sxtah	r1, r2, fp
 8013312:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013314:	4411      	add	r1, r2
 8013316:	1acb      	subs	r3, r1, r3
 8013318:	9324      	str	r3, [sp, #144]	; 0x90
 801331a:	9b01      	ldr	r3, [sp, #4]
 801331c:	9326      	str	r3, [sp, #152]	; 0x98
 801331e:	ab15      	add	r3, sp, #84	; 0x54
 8013320:	931e      	str	r3, [sp, #120]	; 0x78
 8013322:	2306      	movs	r3, #6
 8013324:	9320      	str	r3, [sp, #128]	; 0x80
 8013326:	a81f      	add	r0, sp, #124	; 0x7c
 8013328:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801332a:	4790      	blx	r2
 801332c:	2300      	movs	r3, #0
 801332e:	931e      	str	r3, [sp, #120]	; 0x78
 8013330:	9315      	str	r3, [sp, #84]	; 0x54
 8013332:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013334:	fa0f f38b 	sxth.w	r3, fp
 8013338:	b1a2      	cbz	r2, 8013364 <_Paint+0x4bc>
 801333a:	9a02      	ldr	r2, [sp, #8]
 801333c:	b91c      	cbnz	r4, 8013346 <_Paint+0x49e>
 801333e:	b116      	cbz	r6, 8013346 <_Paint+0x49e>
 8013340:	fa02 f189 	sxtah	r1, r2, r9
 8013344:	e001      	b.n	801334a <_Paint+0x4a2>
 8013346:	fa02 f18a 	sxtah	r1, r2, sl
 801334a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801334c:	9124      	str	r1, [sp, #144]	; 0x90
 801334e:	fa02 f185 	sxtah	r1, r2, r5
 8013352:	9126      	str	r1, [sp, #152]	; 0x98
 8013354:	0779      	lsls	r1, r7, #29
 8013356:	bf4b      	itete	mi
 8013358:	9323      	strmi	r3, [sp, #140]	; 0x8c
 801335a:	9a01      	ldrpl	r2, [sp, #4]
 801335c:	9b01      	ldrmi	r3, [sp, #4]
 801335e:	9223      	strpl	r2, [sp, #140]	; 0x8c
 8013360:	9325      	str	r3, [sp, #148]	; 0x94
 8013362:	e014      	b.n	801338e <_Paint+0x4e6>
 8013364:	9a02      	ldr	r2, [sp, #8]
 8013366:	b91c      	cbnz	r4, 8013370 <_Paint+0x4c8>
 8013368:	b116      	cbz	r6, 8013370 <_Paint+0x4c8>
 801336a:	fa02 f189 	sxtah	r1, r2, r9
 801336e:	e001      	b.n	8013374 <_Paint+0x4cc>
 8013370:	fa02 f18a 	sxtah	r1, r2, sl
 8013374:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013376:	9123      	str	r1, [sp, #140]	; 0x8c
 8013378:	fa02 f185 	sxtah	r1, r2, r5
 801337c:	077a      	lsls	r2, r7, #29
 801337e:	bf4e      	itee	mi
 8013380:	9a01      	ldrmi	r2, [sp, #4]
 8013382:	9324      	strpl	r3, [sp, #144]	; 0x90
 8013384:	9b01      	ldrpl	r3, [sp, #4]
 8013386:	9125      	str	r1, [sp, #148]	; 0x94
 8013388:	bf48      	it	mi
 801338a:	9224      	strmi	r2, [sp, #144]	; 0x90
 801338c:	9326      	str	r3, [sp, #152]	; 0x98
 801338e:	2312      	movs	r3, #18
 8013390:	9320      	str	r3, [sp, #128]	; 0x80
 8013392:	a81f      	add	r0, sp, #124	; 0x7c
 8013394:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013396:	4790      	blx	r2
 8013398:	3401      	adds	r4, #1
 801339a:	e65b      	b.n	8013054 <_Paint+0x1ac>
 801339c:	2000      	movs	r0, #0
 801339e:	f7f6 ffcf 	bl	800a340 <WM_SetUserClipRect>
 80133a2:	b029      	add	sp, #164	; 0xa4
 80133a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133a8:	20000318 	.word	0x20000318

080133ac <MULTIPAGE_SKIN__GetTabBarWidth>:
 80133ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80133ae:	4606      	mov	r6, r0
 80133b0:	f7fe f806 	bl	80113c0 <GUI_ALLOC_LockH>
 80133b4:	ac02      	add	r4, sp, #8
 80133b6:	f844 0d04 	str.w	r0, [r4, #-4]!
 80133ba:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80133bc:	f7f5 ff18 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 80133c0:	4605      	mov	r5, r0
 80133c2:	4620      	mov	r0, r4
 80133c4:	f7fe f80a 	bl	80113dc <GUI_ALLOC_UnlockH>
 80133c8:	4630      	mov	r0, r6
 80133ca:	4629      	mov	r1, r5
 80133cc:	f7ff fd3f 	bl	8012e4e <MULTIPAGE_SKIN__GetPagePos>
 80133d0:	3801      	subs	r0, #1
 80133d2:	b002      	add	sp, #8
 80133d4:	bd70      	pop	{r4, r5, r6, pc}

080133d6 <MULTIPAGE_SKIN__GetTouchedPage>:
 80133d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133da:	b08b      	sub	sp, #44	; 0x2c
 80133dc:	460f      	mov	r7, r1
 80133de:	4690      	mov	r8, r2
 80133e0:	4682      	mov	sl, r0
 80133e2:	f7fd ffed 	bl	80113c0 <GUI_ALLOC_LockH>
 80133e6:	9007      	str	r0, [sp, #28]
 80133e8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80133ea:	f7f5 ff01 	bl	80091f0 <GUI_ARRAY_GetNumItems>
 80133ee:	9005      	str	r0, [sp, #20]
 80133f0:	a80a      	add	r0, sp, #40	; 0x28
 80133f2:	fa1f f888 	uxth.w	r8, r8
 80133f6:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80133fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80133fc:	f8b3 9032 	ldrh.w	r9, [r3, #50]	; 0x32
 8013400:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013402:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 8013404:	f893 6080 	ldrb.w	r6, [r3, #128]	; 0x80
 8013408:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 801340c:	9202      	str	r2, [sp, #8]
 801340e:	9303      	str	r3, [sp, #12]
 8013410:	f7fd ffe4 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013414:	4650      	mov	r0, sl
 8013416:	a908      	add	r1, sp, #32
 8013418:	f7f5 fa4d 	bl	80088b6 <MULTIPAGE__GetTabBarRect>
 801341c:	f019 0f08 	tst.w	r9, #8
 8013420:	b2b8      	uxth	r0, r7
 8013422:	f004 0404 	and.w	r4, r4, #4
 8013426:	d014      	beq.n	8013452 <MULTIPAGE_SKIN__GetTouchedPage+0x7c>
 8013428:	af0a      	add	r7, sp, #40	; 0x28
 801342a:	f8cd 8004 	str.w	r8, [sp, #4]
 801342e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013432:	f837 2d04 	ldrh.w	r2, [r7, #-4]!
 8013436:	b12c      	cbz	r4, 8013444 <MULTIPAGE_SKIN__GetTouchedPage+0x6e>
 8013438:	46b8      	mov	r8, r7
 801343a:	4619      	mov	r1, r3
 801343c:	af08      	add	r7, sp, #32
 801343e:	f10d 0422 	add.w	r4, sp, #34	; 0x22
 8013442:	e01d      	b.n	8013480 <MULTIPAGE_SKIN__GetTouchedPage+0xaa>
 8013444:	4611      	mov	r1, r2
 8013446:	f10d 0820 	add.w	r8, sp, #32
 801344a:	461a      	mov	r2, r3
 801344c:	f10d 0422 	add.w	r4, sp, #34	; 0x22
 8013450:	e00c      	b.n	801346c <MULTIPAGE_SKIN__GetTouchedPage+0x96>
 8013452:	9001      	str	r0, [sp, #4]
 8013454:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8013458:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801345c:	4640      	mov	r0, r8
 801345e:	b144      	cbz	r4, 8013472 <MULTIPAGE_SKIN__GetTouchedPage+0x9c>
 8013460:	4619      	mov	r1, r3
 8013462:	f10d 0822 	add.w	r8, sp, #34	; 0x22
 8013466:	f10d 0726 	add.w	r7, sp, #38	; 0x26
 801346a:	ac08      	add	r4, sp, #32
 801346c:	f04f 3bff 	mov.w	fp, #4294967295
 8013470:	e008      	b.n	8013484 <MULTIPAGE_SKIN__GetTouchedPage+0xae>
 8013472:	4611      	mov	r1, r2
 8013474:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 8013478:	461a      	mov	r2, r3
 801347a:	f10d 0722 	add.w	r7, sp, #34	; 0x22
 801347e:	ac08      	add	r4, sp, #32
 8013480:	f04f 0b01 	mov.w	fp, #1
 8013484:	b200      	sxth	r0, r0
 8013486:	b209      	sxth	r1, r1
 8013488:	b212      	sxth	r2, r2
 801348a:	9004      	str	r0, [sp, #16]
 801348c:	f7ff fcb2 	bl	8012df4 <_IsBetween>
 8013490:	b910      	cbnz	r0, 8013498 <MULTIPAGE_SKIN__GetTouchedPage+0xc2>
 8013492:	f04f 30ff 	mov.w	r0, #4294967295
 8013496:	e053      	b.n	8013540 <MULTIPAGE_SKIN__GetTouchedPage+0x16a>
 8013498:	f9b4 c000 	ldrsh.w	ip, [r4]
 801349c:	b10d      	cbz	r5, 80134a2 <MULTIPAGE_SKIN__GetTouchedPage+0xcc>
 801349e:	46e1      	mov	r9, ip
 80134a0:	e001      	b.n	80134a6 <MULTIPAGE_SKIN__GetTouchedPage+0xd0>
 80134a2:	eb0c 0906 	add.w	r9, ip, r6
 80134a6:	4650      	mov	r0, sl
 80134a8:	4629      	mov	r1, r5
 80134aa:	f7f5 f9bd 	bl	8008828 <MULTIPAGE__GetPageWidth>
 80134ae:	9b03      	ldr	r3, [sp, #12]
 80134b0:	4448      	add	r0, r9
 80134b2:	fb03 fb0b 	mul.w	fp, r3, fp
 80134b6:	f8cd b00c 	str.w	fp, [sp, #12]
 80134ba:	1e44      	subs	r4, r0, #1
 80134bc:	46ab      	mov	fp, r5
 80134be:	9b05      	ldr	r3, [sp, #20]
 80134c0:	459b      	cmp	fp, r3
 80134c2:	dae6      	bge.n	8013492 <MULTIPAGE_SKIN__GetTouchedPage+0xbc>
 80134c4:	45ab      	cmp	fp, r5
 80134c6:	db37      	blt.n	8013538 <MULTIPAGE_SKIN__GetTouchedPage+0x162>
 80134c8:	9b02      	ldr	r3, [sp, #8]
 80134ca:	459b      	cmp	fp, r3
 80134cc:	d10b      	bne.n	80134e6 <MULTIPAGE_SKIN__GetTouchedPage+0x110>
 80134ce:	9b01      	ldr	r3, [sp, #4]
 80134d0:	ebc6 0c09 	rsb	ip, r6, r9
 80134d4:	b218      	sxth	r0, r3
 80134d6:	19a2      	adds	r2, r4, r6
 80134d8:	4661      	mov	r1, ip
 80134da:	f1bb 0f00 	cmp.w	fp, #0
 80134de:	d120      	bne.n	8013522 <MULTIPAGE_SKIN__GetTouchedPage+0x14c>
 80134e0:	4611      	mov	r1, r2
 80134e2:	4662      	mov	r2, ip
 80134e4:	e01d      	b.n	8013522 <MULTIPAGE_SKIN__GetTouchedPage+0x14c>
 80134e6:	f9b7 1000 	ldrsh.w	r1, [r7]
 80134ea:	9b03      	ldr	r3, [sp, #12]
 80134ec:	9804      	ldr	r0, [sp, #16]
 80134ee:	f9b8 2000 	ldrsh.w	r2, [r8]
 80134f2:	4419      	add	r1, r3
 80134f4:	f7ff fc7e 	bl	8012df4 <_IsBetween>
 80134f8:	b1b0      	cbz	r0, 8013528 <MULTIPAGE_SKIN__GetTouchedPage+0x152>
 80134fa:	9b02      	ldr	r3, [sp, #8]
 80134fc:	1c5a      	adds	r2, r3, #1
 80134fe:	9b01      	ldr	r3, [sp, #4]
 8013500:	4593      	cmp	fp, r2
 8013502:	b218      	sxth	r0, r3
 8013504:	d104      	bne.n	8013510 <MULTIPAGE_SKIN__GetTouchedPage+0x13a>
 8013506:	45ab      	cmp	fp, r5
 8013508:	dd02      	ble.n	8013510 <MULTIPAGE_SKIN__GetTouchedPage+0x13a>
 801350a:	eb09 0106 	add.w	r1, r9, r6
 801350e:	e007      	b.n	8013520 <MULTIPAGE_SKIN__GetTouchedPage+0x14a>
 8013510:	9b02      	ldr	r3, [sp, #8]
 8013512:	1e5a      	subs	r2, r3, #1
 8013514:	4593      	cmp	fp, r2
 8013516:	4649      	mov	r1, r9
 8013518:	bf08      	it	eq
 801351a:	ebc6 0204 	rsbeq	r2, r6, r4
 801351e:	d000      	beq.n	8013522 <MULTIPAGE_SKIN__GetTouchedPage+0x14c>
 8013520:	4622      	mov	r2, r4
 8013522:	f7ff fc67 	bl	8012df4 <_IsBetween>
 8013526:	b950      	cbnz	r0, 801353e <MULTIPAGE_SKIN__GetTouchedPage+0x168>
 8013528:	4650      	mov	r0, sl
 801352a:	f10b 0101 	add.w	r1, fp, #1
 801352e:	f7f5 f97b 	bl	8008828 <MULTIPAGE__GetPageWidth>
 8013532:	f104 0901 	add.w	r9, r4, #1
 8013536:	4404      	add	r4, r0
 8013538:	f10b 0b01 	add.w	fp, fp, #1
 801353c:	e7bf      	b.n	80134be <MULTIPAGE_SKIN__GetTouchedPage+0xe8>
 801353e:	4658      	mov	r0, fp
 8013540:	b00b      	add	sp, #44	; 0x2c
 8013542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013548 <BUTTON_DrawSkinFlex>:
 8013548:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801354c:	6883      	ldr	r3, [r0, #8]
 801354e:	4a8a      	ldr	r2, [pc, #552]	; (8013778 <BUTTON_DrawSkinFlex+0x230>)
 8013550:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 8013554:	6843      	ldr	r3, [r0, #4]
 8013556:	2b05      	cmp	r3, #5
 8013558:	b088      	sub	sp, #32
 801355a:	4604      	mov	r4, r0
 801355c:	d00e      	beq.n	801357c <BUTTON_DrawSkinFlex+0x34>
 801355e:	dc06      	bgt.n	801356e <BUTTON_DrawSkinFlex+0x26>
 8013560:	2b00      	cmp	r3, #0
 8013562:	f040 8104 	bne.w	801376e <BUTTON_DrawSkinFlex+0x226>
 8013566:	6800      	ldr	r0, [r0, #0]
 8013568:	f7f6 fef6 	bl	800a358 <WM_SetHasTrans>
 801356c:	e0ff      	b.n	801376e <BUTTON_DrawSkinFlex+0x226>
 801356e:	2b06      	cmp	r3, #6
 8013570:	f000 8088 	beq.w	8013684 <BUTTON_DrawSkinFlex+0x13c>
 8013574:	2b12      	cmp	r3, #18
 8013576:	f000 80a9 	beq.w	80136cc <BUTTON_DrawSkinFlex+0x184>
 801357a:	e0f8      	b.n	801376e <BUTTON_DrawSkinFlex+0x226>
 801357c:	69ee      	ldr	r6, [r5, #28]
 801357e:	2e00      	cmp	r6, #0
 8013580:	d051      	beq.n	8013626 <BUTTON_DrawSkinFlex+0xde>
 8013582:	9600      	str	r6, [sp, #0]
 8013584:	682b      	ldr	r3, [r5, #0]
 8013586:	9301      	str	r3, [sp, #4]
 8013588:	686b      	ldr	r3, [r5, #4]
 801358a:	9302      	str	r3, [sp, #8]
 801358c:	68ab      	ldr	r3, [r5, #8]
 801358e:	9303      	str	r3, [sp, #12]
 8013590:	3010      	adds	r0, #16
 8013592:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8013594:	f002 ffa2 	bl	80164dc <GUI__DrawTwinArc4>
 8013598:	2600      	movs	r6, #0
 801359a:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 801359e:	f7fc fd1f 	bl	800ffe0 <GUI_SetColor>
 80135a2:	69eb      	ldr	r3, [r5, #28]
 80135a4:	6960      	ldr	r0, [r4, #20]
 80135a6:	6921      	ldr	r1, [r4, #16]
 80135a8:	69a2      	ldr	r2, [r4, #24]
 80135aa:	4430      	add	r0, r6
 80135ac:	4419      	add	r1, r3
 80135ae:	1ad2      	subs	r2, r2, r3
 80135b0:	f7fc fffe 	bl	80105b0 <GUI_DrawHLine>
 80135b4:	69eb      	ldr	r3, [r5, #28]
 80135b6:	69e0      	ldr	r0, [r4, #28]
 80135b8:	6921      	ldr	r1, [r4, #16]
 80135ba:	69a2      	ldr	r2, [r4, #24]
 80135bc:	1b80      	subs	r0, r0, r6
 80135be:	4419      	add	r1, r3
 80135c0:	1ad2      	subs	r2, r2, r3
 80135c2:	f7fc fff5 	bl	80105b0 <GUI_DrawHLine>
 80135c6:	69eb      	ldr	r3, [r5, #28]
 80135c8:	6920      	ldr	r0, [r4, #16]
 80135ca:	6961      	ldr	r1, [r4, #20]
 80135cc:	69e2      	ldr	r2, [r4, #28]
 80135ce:	4430      	add	r0, r6
 80135d0:	4419      	add	r1, r3
 80135d2:	1ad2      	subs	r2, r2, r3
 80135d4:	f7fc ffca 	bl	801056c <GUI_DrawVLine>
 80135d8:	69eb      	ldr	r3, [r5, #28]
 80135da:	69a0      	ldr	r0, [r4, #24]
 80135dc:	6961      	ldr	r1, [r4, #20]
 80135de:	69e2      	ldr	r2, [r4, #28]
 80135e0:	1b80      	subs	r0, r0, r6
 80135e2:	4419      	add	r1, r3
 80135e4:	1ad2      	subs	r2, r2, r3
 80135e6:	3601      	adds	r6, #1
 80135e8:	f7fc ffc0 	bl	801056c <GUI_DrawVLine>
 80135ec:	2e02      	cmp	r6, #2
 80135ee:	d1d4      	bne.n	801359a <BUTTON_DrawSkinFlex+0x52>
 80135f0:	68a8      	ldr	r0, [r5, #8]
 80135f2:	f7fc fcf5 	bl	800ffe0 <GUI_SetColor>
 80135f6:	69eb      	ldr	r3, [r5, #28]
 80135f8:	6920      	ldr	r0, [r4, #16]
 80135fa:	69e6      	ldr	r6, [r4, #28]
 80135fc:	6961      	ldr	r1, [r4, #20]
 80135fe:	18c2      	adds	r2, r0, r3
 8013600:	4419      	add	r1, r3
 8013602:	3002      	adds	r0, #2
 8013604:	1af3      	subs	r3, r6, r3
 8013606:	3a01      	subs	r2, #1
 8013608:	f7fc ff6a 	bl	80104e0 <GUI_FillRect>
 801360c:	69eb      	ldr	r3, [r5, #28]
 801360e:	69a2      	ldr	r2, [r4, #24]
 8013610:	69e6      	ldr	r6, [r4, #28]
 8013612:	6961      	ldr	r1, [r4, #20]
 8013614:	1ad0      	subs	r0, r2, r3
 8013616:	4419      	add	r1, r3
 8013618:	3001      	adds	r0, #1
 801361a:	1af3      	subs	r3, r6, r3
 801361c:	3a02      	subs	r2, #2
 801361e:	f7fc ff5f 	bl	80104e0 <GUI_FillRect>
 8013622:	69ee      	ldr	r6, [r5, #28]
 8013624:	e00f      	b.n	8013646 <BUTTON_DrawSkinFlex+0xfe>
 8013626:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 801362a:	f7fc fcd9 	bl	800ffe0 <GUI_SetColor>
 801362e:	f104 0010 	add.w	r0, r4, #16
 8013632:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8013634:	4430      	add	r0, r6
 8013636:	4431      	add	r1, r6
 8013638:	1b92      	subs	r2, r2, r6
 801363a:	1b9b      	subs	r3, r3, r6
 801363c:	3601      	adds	r6, #1
 801363e:	f004 f8af 	bl	80177a0 <GUI_DrawRect>
 8013642:	2e02      	cmp	r6, #2
 8013644:	d1ef      	bne.n	8013626 <BUTTON_DrawSkinFlex+0xde>
 8013646:	f104 0010 	add.w	r0, r4, #16
 801364a:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 801364c:	68ef      	ldr	r7, [r5, #12]
 801364e:	9700      	str	r7, [sp, #0]
 8013650:	692f      	ldr	r7, [r5, #16]
 8013652:	9701      	str	r7, [sp, #4]
 8013654:	440b      	add	r3, r1
 8013656:	4430      	add	r0, r6
 8013658:	1b92      	subs	r2, r2, r6
 801365a:	3102      	adds	r1, #2
 801365c:	105b      	asrs	r3, r3, #1
 801365e:	f003 fed9 	bl	8017414 <GUI_DrawGradientV>
 8013662:	69e3      	ldr	r3, [r4, #28]
 8013664:	6962      	ldr	r2, [r4, #20]
 8013666:	6920      	ldr	r0, [r4, #16]
 8013668:	441a      	add	r2, r3
 801366a:	1051      	asrs	r1, r2, #1
 801366c:	69a2      	ldr	r2, [r4, #24]
 801366e:	696c      	ldr	r4, [r5, #20]
 8013670:	9400      	str	r4, [sp, #0]
 8013672:	69ac      	ldr	r4, [r5, #24]
 8013674:	9401      	str	r4, [sp, #4]
 8013676:	4430      	add	r0, r6
 8013678:	3101      	adds	r1, #1
 801367a:	1b92      	subs	r2, r2, r6
 801367c:	3b02      	subs	r3, #2
 801367e:	f003 fec9 	bl	8017414 <GUI_DrawGradientV>
 8013682:	e074      	b.n	801376e <BUTTON_DrawSkinFlex+0x226>
 8013684:	6800      	ldr	r0, [r0, #0]
 8013686:	f7fd fe9b 	bl	80113c0 <GUI_ALLOC_LockH>
 801368a:	9004      	str	r0, [sp, #16]
 801368c:	6820      	ldr	r0, [r4, #0]
 801368e:	f7f6 fd67 	bl	800a160 <WM__IsEnabled>
 8013692:	9b04      	ldr	r3, [sp, #16]
 8013694:	b130      	cbz	r0, 80136a4 <BUTTON_DrawSkinFlex+0x15c>
 8013696:	68a2      	ldr	r2, [r4, #8]
 8013698:	b952      	cbnz	r2, 80136b0 <BUTTON_DrawSkinFlex+0x168>
 801369a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 801369c:	3200      	adds	r2, #0
 801369e:	bf18      	it	ne
 80136a0:	2201      	movne	r2, #1
 80136a2:	e006      	b.n	80136b2 <BUTTON_DrawSkinFlex+0x16a>
 80136a4:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80136a6:	2a00      	cmp	r2, #0
 80136a8:	bf0c      	ite	eq
 80136aa:	2200      	moveq	r2, #0
 80136ac:	2202      	movne	r2, #2
 80136ae:	e000      	b.n	80136b2 <BUTTON_DrawSkinFlex+0x16a>
 80136b0:	2200      	movs	r2, #0
 80136b2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80136b6:	a804      	add	r0, sp, #16
 80136b8:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 80136ba:	f7fd fe8f 	bl	80113dc <GUI_ALLOC_UnlockH>
 80136be:	2200      	movs	r2, #0
 80136c0:	4628      	mov	r0, r5
 80136c2:	6821      	ldr	r1, [r4, #0]
 80136c4:	4613      	mov	r3, r2
 80136c6:	f7f5 fd35 	bl	8009134 <GUI_DRAW__Draw>
 80136ca:	e050      	b.n	801376e <BUTTON_DrawSkinFlex+0x226>
 80136cc:	6800      	ldr	r0, [r0, #0]
 80136ce:	f7fd fe77 	bl	80113c0 <GUI_ALLOC_LockH>
 80136d2:	ae08      	add	r6, sp, #32
 80136d4:	6e87      	ldr	r7, [r0, #104]	; 0x68
 80136d6:	f846 0d10 	str.w	r0, [r6, #-16]!
 80136da:	2f00      	cmp	r7, #0
 80136dc:	d044      	beq.n	8013768 <BUTTON_DrawSkinFlex+0x220>
 80136de:	68a2      	ldr	r2, [r4, #8]
 80136e0:	f9b0 805c 	ldrsh.w	r8, [r0, #92]	; 0x5c
 80136e4:	b122      	cbz	r2, 80136f0 <BUTTON_DrawSkinFlex+0x1a8>
 80136e6:	2a03      	cmp	r2, #3
 80136e8:	bf14      	ite	ne
 80136ea:	2100      	movne	r1, #0
 80136ec:	2102      	moveq	r1, #2
 80136ee:	e000      	b.n	80136f2 <BUTTON_DrawSkinFlex+0x1aa>
 80136f0:	2101      	movs	r1, #1
 80136f2:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80136f6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80136f8:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 80136fa:	f7fc fc43 	bl	800ff84 <GUI_SetFont>
 80136fe:	4620      	mov	r0, r4
 8013700:	f7fc fc6e 	bl	800ffe0 <GUI_SetColor>
 8013704:	a806      	add	r0, sp, #24
 8013706:	f003 fb3d 	bl	8016d84 <GUI_GetClientRect>
 801370a:	8bab      	ldrh	r3, [r5, #28]
 801370c:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8013710:	441a      	add	r2, r3
 8013712:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013716:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 801371a:	1ad3      	subs	r3, r2, r3
 801371c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013720:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8013724:	3302      	adds	r3, #2
 8013726:	f8ad 301a 	strh.w	r3, [sp, #26]
 801372a:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 801372e:	3b02      	subs	r3, #2
 8013730:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013734:	9b04      	ldr	r3, [sp, #16]
 8013736:	a806      	add	r0, sp, #24
 8013738:	f9b3 105e 	ldrsh.w	r1, [r3, #94]	; 0x5e
 801373c:	f9b3 2060 	ldrsh.w	r2, [r3, #96]	; 0x60
 8013740:	f7fc fdb0 	bl	80102a4 <GUI_MoveRect>
 8013744:	4630      	mov	r0, r6
 8013746:	f7fd fe49 	bl	80113dc <GUI_ALLOC_UnlockH>
 801374a:	2002      	movs	r0, #2
 801374c:	f7fc fc10 	bl	800ff70 <GUI_SetTextMode>
 8013750:	4638      	mov	r0, r7
 8013752:	f7fd fe35 	bl	80113c0 <GUI_ALLOC_LockH>
 8013756:	ac08      	add	r4, sp, #32
 8013758:	a906      	add	r1, sp, #24
 801375a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 801375e:	4642      	mov	r2, r8
 8013760:	f003 ffd9 	bl	8017716 <GUI_DispStringInRect>
 8013764:	4620      	mov	r0, r4
 8013766:	e000      	b.n	801376a <BUTTON_DrawSkinFlex+0x222>
 8013768:	4630      	mov	r0, r6
 801376a:	f7fd fe37 	bl	80113dc <GUI_ALLOC_UnlockH>
 801376e:	2000      	movs	r0, #0
 8013770:	b008      	add	sp, #32
 8013772:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013776:	bf00      	nop
 8013778:	0801f390 	.word	0x0801f390

0801377c <_Create>:
 801377c:	b530      	push	{r4, r5, lr}
 801377e:	b08b      	sub	sp, #44	; 0x2c
 8013780:	2100      	movs	r1, #0
 8013782:	4604      	mov	r4, r0
 8013784:	2224      	movs	r2, #36	; 0x24
 8013786:	a801      	add	r0, sp, #4
 8013788:	f005 faf7 	bl	8018d7a <memset>
 801378c:	4620      	mov	r0, r4
 801378e:	f7fd fe17 	bl	80113c0 <GUI_ALLOC_LockH>
 8013792:	ab0a      	add	r3, sp, #40	; 0x28
 8013794:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8013796:	f843 0d28 	str.w	r0, [r3, #-40]!
 801379a:	6895      	ldr	r5, [r2, #8]
 801379c:	4668      	mov	r0, sp
 801379e:	f7fd fe1d 	bl	80113dc <GUI_ALLOC_UnlockH>
 80137a2:	2300      	movs	r3, #0
 80137a4:	9302      	str	r3, [sp, #8]
 80137a6:	9401      	str	r4, [sp, #4]
 80137a8:	682b      	ldr	r3, [r5, #0]
 80137aa:	a801      	add	r0, sp, #4
 80137ac:	4798      	blx	r3
 80137ae:	b00b      	add	sp, #44	; 0x2c
 80137b0:	bd30      	pop	{r4, r5, pc}

080137b2 <_Paint>:
 80137b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80137b6:	b08a      	sub	sp, #40	; 0x28
 80137b8:	4605      	mov	r5, r0
 80137ba:	f7fd fe01 	bl	80113c0 <GUI_ALLOC_LockH>
 80137be:	4603      	mov	r3, r0
 80137c0:	a80a      	add	r0, sp, #40	; 0x28
 80137c2:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 80137c4:	f840 3d28 	str.w	r3, [r0, #-40]!
 80137c8:	4668      	mov	r0, sp
 80137ca:	6d9c      	ldr	r4, [r3, #88]	; 0x58
 80137cc:	8e5f      	ldrh	r7, [r3, #50]	; 0x32
 80137ce:	f7fd fe05 	bl	80113dc <GUI_ALLOC_UnlockH>
 80137d2:	4628      	mov	r0, r5
 80137d4:	f7f7 f924 	bl	800aa20 <WM_GetWindowSizeX>
 80137d8:	4680      	mov	r8, r0
 80137da:	4628      	mov	r0, r5
 80137dc:	f7f7 f935 	bl	800aa4a <WM_GetWindowSizeY>
 80137e0:	2300      	movs	r3, #0
 80137e2:	9306      	str	r3, [sp, #24]
 80137e4:	9305      	str	r3, [sp, #20]
 80137e6:	3801      	subs	r0, #1
 80137e8:	f108 33ff 	add.w	r3, r8, #4294967295
 80137ec:	f016 0610 	ands.w	r6, r6, #16
 80137f0:	9501      	str	r5, [sp, #4]
 80137f2:	9307      	str	r3, [sp, #28]
 80137f4:	9008      	str	r0, [sp, #32]
 80137f6:	d001      	beq.n	80137fc <_Paint+0x4a>
 80137f8:	2303      	movs	r3, #3
 80137fa:	e007      	b.n	801380c <_Paint+0x5a>
 80137fc:	05fa      	lsls	r2, r7, #23
 80137fe:	d501      	bpl.n	8013804 <_Paint+0x52>
 8013800:	9603      	str	r6, [sp, #12]
 8013802:	e004      	b.n	801380e <_Paint+0x5c>
 8013804:	07fb      	lsls	r3, r7, #31
 8013806:	bf4c      	ite	mi
 8013808:	2301      	movmi	r3, #1
 801380a:	2302      	movpl	r3, #2
 801380c:	9303      	str	r3, [sp, #12]
 801380e:	2305      	movs	r3, #5
 8013810:	9302      	str	r3, [sp, #8]
 8013812:	a801      	add	r0, sp, #4
 8013814:	47a0      	blx	r4
 8013816:	2306      	movs	r3, #6
 8013818:	9302      	str	r3, [sp, #8]
 801381a:	a801      	add	r0, sp, #4
 801381c:	47a0      	blx	r4
 801381e:	2312      	movs	r3, #18
 8013820:	9302      	str	r3, [sp, #8]
 8013822:	a801      	add	r0, sp, #4
 8013824:	47a0      	blx	r4
 8013826:	230a      	movs	r3, #10
 8013828:	9302      	str	r3, [sp, #8]
 801382a:	a801      	add	r0, sp, #4
 801382c:	47a0      	blx	r4
 801382e:	b00a      	add	sp, #40	; 0x28
 8013830:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013834 <WM__SendMessageNoPara>:
 8013834:	b530      	push	{r4, r5, lr}
 8013836:	b085      	sub	sp, #20
 8013838:	4604      	mov	r4, r0
 801383a:	2210      	movs	r2, #16
 801383c:	460d      	mov	r5, r1
 801383e:	4668      	mov	r0, sp
 8013840:	2100      	movs	r1, #0
 8013842:	f005 fa9a 	bl	8018d7a <memset>
 8013846:	4620      	mov	r0, r4
 8013848:	f7fd fdb0 	bl	80113ac <GUI_ALLOC_h2p>
 801384c:	6903      	ldr	r3, [r0, #16]
 801384e:	b11b      	cbz	r3, 8013858 <WM__SendMessageNoPara+0x24>
 8013850:	9401      	str	r4, [sp, #4]
 8013852:	9500      	str	r5, [sp, #0]
 8013854:	4668      	mov	r0, sp
 8013856:	4798      	blx	r3
 8013858:	b005      	add	sp, #20
 801385a:	bd30      	pop	{r4, r5, pc}

0801385c <WM__SendMessage>:
 801385c:	b570      	push	{r4, r5, r6, lr}
 801385e:	4c0d      	ldr	r4, [pc, #52]	; (8013894 <WM__SendMessage+0x38>)
 8013860:	6823      	ldr	r3, [r4, #0]
 8013862:	2b13      	cmp	r3, #19
 8013864:	4606      	mov	r6, r0
 8013866:	460d      	mov	r5, r1
 8013868:	dc12      	bgt.n	8013890 <WM__SendMessage+0x34>
 801386a:	f7fd fd9f 	bl	80113ac <GUI_ALLOC_h2p>
 801386e:	6903      	ldr	r3, [r0, #16]
 8013870:	606e      	str	r6, [r5, #4]
 8013872:	b143      	cbz	r3, 8013886 <WM__SendMessage+0x2a>
 8013874:	6822      	ldr	r2, [r4, #0]
 8013876:	4628      	mov	r0, r5
 8013878:	3201      	adds	r2, #1
 801387a:	6022      	str	r2, [r4, #0]
 801387c:	4798      	blx	r3
 801387e:	6823      	ldr	r3, [r4, #0]
 8013880:	3b01      	subs	r3, #1
 8013882:	6023      	str	r3, [r4, #0]
 8013884:	bd70      	pop	{r4, r5, r6, pc}
 8013886:	4628      	mov	r0, r5
 8013888:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801388c:	f7f8 bb08 	b.w	800bea0 <WM_DefaultProc>
 8013890:	bd70      	pop	{r4, r5, r6, pc}
 8013892:	bf00      	nop
 8013894:	200196b0 	.word	0x200196b0

08013898 <WM__GetPrevSibling>:
 8013898:	b538      	push	{r3, r4, r5, lr}
 801389a:	4605      	mov	r5, r0
 801389c:	f000 f82e 	bl	80138fc <WM__GetFirstSibling>
 80138a0:	4604      	mov	r4, r0
 80138a2:	b154      	cbz	r4, 80138ba <WM__GetPrevSibling+0x22>
 80138a4:	42ac      	cmp	r4, r5
 80138a6:	d007      	beq.n	80138b8 <WM__GetPrevSibling+0x20>
 80138a8:	4620      	mov	r0, r4
 80138aa:	f7fd fd7f 	bl	80113ac <GUI_ALLOC_h2p>
 80138ae:	6a03      	ldr	r3, [r0, #32]
 80138b0:	42ab      	cmp	r3, r5
 80138b2:	d002      	beq.n	80138ba <WM__GetPrevSibling+0x22>
 80138b4:	461c      	mov	r4, r3
 80138b6:	e7f4      	b.n	80138a2 <WM__GetPrevSibling+0xa>
 80138b8:	2400      	movs	r4, #0
 80138ba:	4620      	mov	r0, r4
 80138bc:	bd38      	pop	{r3, r4, r5, pc}

080138be <WM__GetLastSibling>:
 80138be:	b510      	push	{r4, lr}
 80138c0:	4604      	mov	r4, r0
 80138c2:	b130      	cbz	r0, 80138d2 <WM__GetLastSibling+0x14>
 80138c4:	4620      	mov	r0, r4
 80138c6:	f7fd fd71 	bl	80113ac <GUI_ALLOC_h2p>
 80138ca:	6a03      	ldr	r3, [r0, #32]
 80138cc:	b10b      	cbz	r3, 80138d2 <WM__GetLastSibling+0x14>
 80138ce:	461c      	mov	r4, r3
 80138d0:	e7f8      	b.n	80138c4 <WM__GetLastSibling+0x6>
 80138d2:	4620      	mov	r0, r4
 80138d4:	bd10      	pop	{r4, pc}
	...

080138d8 <WM__GetFocussedChild>:
 80138d8:	b538      	push	{r3, r4, r5, lr}
 80138da:	4d06      	ldr	r5, [pc, #24]	; (80138f4 <WM__GetFocussedChild+0x1c>)
 80138dc:	4c06      	ldr	r4, [pc, #24]	; (80138f8 <WM__GetFocussedChild+0x20>)
 80138de:	682b      	ldr	r3, [r5, #0]
 80138e0:	4601      	mov	r1, r0
 80138e2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80138e6:	f7f6 fc44 	bl	800a172 <WM__IsChild>
 80138ea:	b110      	cbz	r0, 80138f2 <WM__GetFocussedChild+0x1a>
 80138ec:	682b      	ldr	r3, [r5, #0]
 80138ee:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80138f2:	bd38      	pop	{r3, r4, r5, pc}
 80138f4:	20019974 	.word	0x20019974
 80138f8:	20019964 	.word	0x20019964

080138fc <WM__GetFirstSibling>:
 80138fc:	b508      	push	{r3, lr}
 80138fe:	f7f7 f8b9 	bl	800aa74 <WM_GetParent>
 8013902:	b118      	cbz	r0, 801390c <WM__GetFirstSibling+0x10>
 8013904:	f7fd fd52 	bl	80113ac <GUI_ALLOC_h2p>
 8013908:	69c0      	ldr	r0, [r0, #28]
 801390a:	bd08      	pop	{r3, pc}
 801390c:	bd08      	pop	{r3, pc}
	...

08013910 <WM_ValidateWindow>:
 8013910:	b507      	push	{r0, r1, r2, lr}
 8013912:	b178      	cbz	r0, 8013934 <WM_ValidateWindow+0x24>
 8013914:	f7fd fd54 	bl	80113c0 <GUI_ALLOC_LockH>
 8013918:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801391a:	9001      	str	r0, [sp, #4]
 801391c:	069a      	lsls	r2, r3, #26
 801391e:	d506      	bpl.n	801392e <WM_ValidateWindow+0x1e>
 8013920:	f023 0320 	bic.w	r3, r3, #32
 8013924:	6283      	str	r3, [r0, #40]	; 0x28
 8013926:	4b05      	ldr	r3, [pc, #20]	; (801393c <WM_ValidateWindow+0x2c>)
 8013928:	881a      	ldrh	r2, [r3, #0]
 801392a:	3a01      	subs	r2, #1
 801392c:	801a      	strh	r2, [r3, #0]
 801392e:	a801      	add	r0, sp, #4
 8013930:	f7fd fd54 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013934:	b003      	add	sp, #12
 8013936:	f85d fb04 	ldr.w	pc, [sp], #4
 801393a:	bf00      	nop
 801393c:	2001996c 	.word	0x2001996c

08013940 <WM__IsInModalArea>:
 8013940:	4b12      	ldr	r3, [pc, #72]	; (801398c <WM__IsInModalArea+0x4c>)
 8013942:	681b      	ldr	r3, [r3, #0]
 8013944:	2b00      	cmp	r3, #0
 8013946:	b570      	push	{r4, r5, r6, lr}
 8013948:	4604      	mov	r4, r0
 801394a:	da0f      	bge.n	801396c <WM__IsInModalArea+0x2c>
 801394c:	4e10      	ldr	r6, [pc, #64]	; (8013990 <WM__IsInModalArea+0x50>)
 801394e:	4d11      	ldr	r5, [pc, #68]	; (8013994 <WM__IsInModalArea+0x54>)
 8013950:	6833      	ldr	r3, [r6, #0]
 8013952:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
 8013956:	4620      	mov	r0, r4
 8013958:	6859      	ldr	r1, [r3, #4]
 801395a:	f7f6 fc1e 	bl	800a19a <WM__IsAncestor>
 801395e:	6833      	ldr	r3, [r6, #0]
 8013960:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8013964:	686a      	ldr	r2, [r5, #4]
 8013966:	686b      	ldr	r3, [r5, #4]
 8013968:	b942      	cbnz	r2, 801397c <WM__IsInModalArea+0x3c>
 801396a:	e00c      	b.n	8013986 <WM__IsInModalArea+0x46>
 801396c:	4a0a      	ldr	r2, [pc, #40]	; (8013998 <WM__IsInModalArea+0x58>)
 801396e:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8013972:	f7f6 fc12 	bl	800a19a <WM__IsAncestor>
 8013976:	2800      	cmp	r0, #0
 8013978:	d1e8      	bne.n	801394c <WM__IsInModalArea+0xc>
 801397a:	bd70      	pop	{r4, r5, r6, pc}
 801397c:	b918      	cbnz	r0, 8013986 <WM__IsInModalArea+0x46>
 801397e:	1ae3      	subs	r3, r4, r3
 8013980:	4258      	negs	r0, r3
 8013982:	4158      	adcs	r0, r3
 8013984:	bd70      	pop	{r4, r5, r6, pc}
 8013986:	2001      	movs	r0, #1
 8013988:	bd70      	pop	{r4, r5, r6, pc}
 801398a:	bf00      	nop
 801398c:	20000314 	.word	0x20000314
 8013990:	20019974 	.word	0x20019974
 8013994:	20019adc 	.word	0x20019adc
 8013998:	20019954 	.word	0x20019954

0801399c <WM__SendPIDMessage>:
 801399c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801399e:	4606      	mov	r6, r0
 80139a0:	460c      	mov	r4, r1
 80139a2:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 80139a4:	b085      	sub	sp, #20
 80139a6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 80139aa:	230d      	movs	r3, #13
 80139ac:	9602      	str	r6, [sp, #8]
 80139ae:	9300      	str	r3, [sp, #0]
 80139b0:	4637      	mov	r7, r6
 80139b2:	4638      	mov	r0, r7
 80139b4:	f7f6 ffec 	bl	800a990 <WM_IsWindow>
 80139b8:	b150      	cbz	r0, 80139d0 <WM__SendPIDMessage+0x34>
 80139ba:	4638      	mov	r0, r7
 80139bc:	f7f7 f85a 	bl	800aa74 <WM_GetParent>
 80139c0:	4607      	mov	r7, r0
 80139c2:	2800      	cmp	r0, #0
 80139c4:	d0f5      	beq.n	80139b2 <WM__SendPIDMessage+0x16>
 80139c6:	4669      	mov	r1, sp
 80139c8:	9403      	str	r4, [sp, #12]
 80139ca:	f004 facc 	bl	8017f66 <WM__SendMessageIfEnabled>
 80139ce:	e7f0      	b.n	80139b2 <WM__SendPIDMessage+0x16>
 80139d0:	4630      	mov	r0, r6
 80139d2:	4621      	mov	r1, r4
 80139d4:	f004 fac7 	bl	8017f66 <WM__SendMessageIfEnabled>
 80139d8:	b005      	add	sp, #20
 80139da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080139dc <WM__SendTouchMessage>:
 80139dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80139de:	68cc      	ldr	r4, [r1, #12]
 80139e0:	4606      	mov	r6, r0
 80139e2:	460d      	mov	r5, r1
 80139e4:	b194      	cbz	r4, 8013a0c <WM__SendTouchMessage+0x30>
 80139e6:	f7fd fceb 	bl	80113c0 <GUI_ALLOC_LockH>
 80139ea:	ab02      	add	r3, sp, #8
 80139ec:	4602      	mov	r2, r0
 80139ee:	f843 0d04 	str.w	r0, [r3, #-4]!
 80139f2:	6821      	ldr	r1, [r4, #0]
 80139f4:	f9b0 0000 	ldrsh.w	r0, [r0]
 80139f8:	1a09      	subs	r1, r1, r0
 80139fa:	6021      	str	r1, [r4, #0]
 80139fc:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 8013a00:	6862      	ldr	r2, [r4, #4]
 8013a02:	1a52      	subs	r2, r2, r1
 8013a04:	6062      	str	r2, [r4, #4]
 8013a06:	4618      	mov	r0, r3
 8013a08:	f7fd fce8 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013a0c:	4630      	mov	r0, r6
 8013a0e:	4629      	mov	r1, r5
 8013a10:	f7ff ffc4 	bl	801399c <WM__SendPIDMessage>
 8013a14:	b002      	add	sp, #8
 8013a16:	bd70      	pop	{r4, r5, r6, pc}

08013a18 <WM_HandlePID>:
 8013a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a1c:	b097      	sub	sp, #92	; 0x5c
 8013a1e:	ae06      	add	r6, sp, #24
 8013a20:	f04f 080c 	mov.w	r8, #12
 8013a24:	2100      	movs	r1, #0
 8013a26:	4642      	mov	r2, r8
 8013a28:	4630      	mov	r0, r6
 8013a2a:	f005 f9a6 	bl	8018d7a <memset>
 8013a2e:	f7fc fc01 	bl	8010234 <GUI_PID_IsEmpty>
 8013a32:	b108      	cbz	r0, 8013a38 <WM_HandlePID+0x20>
 8013a34:	2000      	movs	r0, #0
 8013a36:	e1aa      	b.n	8013d8e <WM_HandlePID+0x376>
 8013a38:	ac09      	add	r4, sp, #36	; 0x24
 8013a3a:	4620      	mov	r0, r4
 8013a3c:	f7fc fb7e 	bl	801013c <GUI_PID_GetState>
 8013a40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a42:	4dad      	ldr	r5, [pc, #692]	; (8013cf8 <WM_HandlePID+0x2e0>)
 8013a44:	4fad      	ldr	r7, [pc, #692]	; (8013cfc <WM_HandlePID+0x2e4>)
 8013a46:	1c5a      	adds	r2, r3, #1
 8013a48:	d112      	bne.n	8013a70 <WM_HandlePID+0x58>
 8013a4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013a4c:	3301      	adds	r3, #1
 8013a4e:	d11e      	bne.n	8013a8e <WM_HandlePID+0x76>
 8013a50:	682b      	ldr	r3, [r5, #0]
 8013a52:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8013a56:	fb08 f803 	mul.w	r8, r8, r3
 8013a5a:	eb07 0308 	add.w	r3, r7, r8
 8013a5e:	7a19      	ldrb	r1, [r3, #8]
 8013a60:	4291      	cmp	r1, r2
 8013a62:	d0e7      	beq.n	8013a34 <WM_HandlePID+0x1c>
 8013a64:	f857 2008 	ldr.w	r2, [r7, r8]
 8013a68:	685b      	ldr	r3, [r3, #4]
 8013a6a:	9209      	str	r2, [sp, #36]	; 0x24
 8013a6c:	930a      	str	r3, [sp, #40]	; 0x28
 8013a6e:	e00e      	b.n	8013a8e <WM_HandlePID+0x76>
 8013a70:	2b00      	cmp	r3, #0
 8013a72:	db0c      	blt.n	8013a8e <WM_HandlePID+0x76>
 8013a74:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013a76:	2a00      	cmp	r2, #0
 8013a78:	db09      	blt.n	8013a8e <WM_HandlePID+0x76>
 8013a7a:	49a1      	ldr	r1, [pc, #644]	; (8013d00 <WM_HandlePID+0x2e8>)
 8013a7c:	f9b1 1000 	ldrsh.w	r1, [r1]
 8013a80:	440b      	add	r3, r1
 8013a82:	9309      	str	r3, [sp, #36]	; 0x24
 8013a84:	4b9f      	ldr	r3, [pc, #636]	; (8013d04 <WM_HandlePID+0x2ec>)
 8013a86:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013a8a:	441a      	add	r2, r3
 8013a8c:	920a      	str	r2, [sp, #40]	; 0x28
 8013a8e:	a804      	add	r0, sp, #16
 8013a90:	f000 f9f6 	bl	8013e80 <WM__AddCriticalHandle>
 8013a94:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8013a98:	2b01      	cmp	r3, #1
 8013a9a:	bf98      	it	ls
 8013a9c:	602b      	strls	r3, [r5, #0]
 8013a9e:	6828      	ldr	r0, [r5, #0]
 8013aa0:	a901      	add	r1, sp, #4
 8013aa2:	aa02      	add	r2, sp, #8
 8013aa4:	f7fc faba 	bl	801001c <GUI_GetLayerPosEx>
 8013aa8:	9b01      	ldr	r3, [sp, #4]
 8013aaa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013aac:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013aae:	1ac0      	subs	r0, r0, r3
 8013ab0:	9b02      	ldr	r3, [sp, #8]
 8013ab2:	9009      	str	r0, [sp, #36]	; 0x24
 8013ab4:	1ac9      	subs	r1, r1, r3
 8013ab6:	682b      	ldr	r3, [r5, #0]
 8013ab8:	910a      	str	r1, [sp, #40]	; 0x28
 8013aba:	220c      	movs	r2, #12
 8013abc:	435a      	muls	r2, r3
 8013abe:	18bb      	adds	r3, r7, r2
 8013ac0:	58ba      	ldr	r2, [r7, r2]
 8013ac2:	4282      	cmp	r2, r0
 8013ac4:	d108      	bne.n	8013ad8 <WM_HandlePID+0xc0>
 8013ac6:	685a      	ldr	r2, [r3, #4]
 8013ac8:	428a      	cmp	r2, r1
 8013aca:	d105      	bne.n	8013ad8 <WM_HandlePID+0xc0>
 8013acc:	7a1a      	ldrb	r2, [r3, #8]
 8013ace:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8013ad2:	429a      	cmp	r2, r3
 8013ad4:	f000 8156 	beq.w	8013d84 <WM_HandlePID+0x36c>
 8013ad8:	f89d 202d 	ldrb.w	r2, [sp, #45]	; 0x2d
 8013adc:	f003 fe20 	bl	8017720 <GUI_CURSOR_SetPositionEx>
 8013ae0:	4b89      	ldr	r3, [pc, #548]	; (8013d08 <WM_HandlePID+0x2f0>)
 8013ae2:	681b      	ldr	r3, [r3, #0]
 8013ae4:	b113      	cbz	r3, 8013aec <WM_HandlePID+0xd4>
 8013ae6:	4620      	mov	r0, r4
 8013ae8:	2100      	movs	r1, #0
 8013aea:	4798      	blx	r3
 8013aec:	682b      	ldr	r3, [r5, #0]
 8013aee:	4a87      	ldr	r2, [pc, #540]	; (8013d0c <WM_HandlePID+0x2f4>)
 8013af0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013af4:	b918      	cbnz	r0, 8013afe <WM_HandlePID+0xe6>
 8013af6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013af8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013afa:	f7f6 fdbd 	bl	800a678 <WM_Screen2hWin>
 8013afe:	4b84      	ldr	r3, [pc, #528]	; (8013d10 <WM_HandlePID+0x2f8>)
 8013b00:	9005      	str	r0, [sp, #20]
 8013b02:	681b      	ldr	r3, [r3, #0]
 8013b04:	b113      	cbz	r3, 8013b0c <WM_HandlePID+0xf4>
 8013b06:	9905      	ldr	r1, [sp, #20]
 8013b08:	4620      	mov	r0, r4
 8013b0a:	4798      	blx	r3
 8013b0c:	4981      	ldr	r1, [pc, #516]	; (8013d14 <WM_HandlePID+0x2fc>)
 8013b0e:	682b      	ldr	r3, [r5, #0]
 8013b10:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 8013cf8 <WM_HandlePID+0x2e0>
 8013b14:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8013b18:	4688      	mov	r8, r1
 8013b1a:	685a      	ldr	r2, [r3, #4]
 8013b1c:	9805      	ldr	r0, [sp, #20]
 8013b1e:	b312      	cbz	r2, 8013b66 <WM_HandlePID+0x14e>
 8013b20:	4282      	cmp	r2, r0
 8013b22:	d020      	beq.n	8013b66 <WM_HandlePID+0x14e>
 8013b24:	6858      	ldr	r0, [r3, #4]
 8013b26:	f7ff ff0b 	bl	8013940 <WM__IsInModalArea>
 8013b2a:	b1e0      	cbz	r0, 8013b66 <WM_HandlePID+0x14e>
 8013b2c:	f8d9 3000 	ldr.w	r3, [r9]
 8013b30:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8013b34:	6858      	ldr	r0, [r3, #4]
 8013b36:	f7f6 fb13 	bl	800a160 <WM__IsEnabled>
 8013b3a:	b1a0      	cbz	r0, 8013b66 <WM_HandlePID+0x14e>
 8013b3c:	2312      	movs	r3, #18
 8013b3e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8013b42:	9312      	str	r3, [sp, #72]	; 0x48
 8013b44:	f8d9 3000 	ldr.w	r3, [r9]
 8013b48:	9615      	str	r6, [sp, #84]	; 0x54
 8013b4a:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8013b4e:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8013b52:	6858      	ldr	r0, [r3, #4]
 8013b54:	a912      	add	r1, sp, #72	; 0x48
 8013b56:	f7ff ff41 	bl	80139dc <WM__SendTouchMessage>
 8013b5a:	f8d9 3000 	ldr.w	r3, [r9]
 8013b5e:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8013b62:	2200      	movs	r2, #0
 8013b64:	605a      	str	r2, [r3, #4]
 8013b66:	9805      	ldr	r0, [sp, #20]
 8013b68:	f7ff feea 	bl	8013940 <WM__IsInModalArea>
 8013b6c:	b908      	cbnz	r0, 8013b72 <WM_HandlePID+0x15a>
 8013b6e:	2600      	movs	r6, #0
 8013b70:	e0fb      	b.n	8013d6a <WM_HandlePID+0x352>
 8013b72:	682b      	ldr	r3, [r5, #0]
 8013b74:	9905      	ldr	r1, [sp, #20]
 8013b76:	f8df a180 	ldr.w	sl, [pc, #384]	; 8013cf8 <WM_HandlePID+0x2e0>
 8013b7a:	f8df 9180 	ldr.w	r9, [pc, #384]	; 8013cfc <WM_HandlePID+0x2e4>
 8013b7e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8013b82:	f04f 080c 	mov.w	r8, #12
 8013b86:	fb08 7303 	mla	r3, r8, r3, r7
 8013b8a:	6051      	str	r1, [r2, #4]
 8013b8c:	7a1a      	ldrb	r2, [r3, #8]
 8013b8e:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8013b92:	429a      	cmp	r2, r3
 8013b94:	d062      	beq.n	8013c5c <WM_HandlePID+0x244>
 8013b96:	9b05      	ldr	r3, [sp, #20]
 8013b98:	2b00      	cmp	r3, #0
 8013b9a:	d05f      	beq.n	8013c5c <WM_HandlePID+0x244>
 8013b9c:	9805      	ldr	r0, [sp, #20]
 8013b9e:	f7fd fc0f 	bl	80113c0 <GUI_ALLOC_LockH>
 8013ba2:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8013ba6:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
 8013baa:	f8da 3000 	ldr.w	r3, [sl]
 8013bae:	9003      	str	r0, [sp, #12]
 8013bb0:	fb08 9303 	mla	r3, r8, r3, r9
 8013bb4:	7a1b      	ldrb	r3, [r3, #8]
 8013bb6:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
 8013bba:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013bbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013bc0:	1a9b      	subs	r3, r3, r2
 8013bc2:	930f      	str	r3, [sp, #60]	; 0x3c
 8013bc4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013bc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013bca:	eb0d 0008 	add.w	r0, sp, r8
 8013bce:	1a9b      	subs	r3, r3, r2
 8013bd0:	9310      	str	r3, [sp, #64]	; 0x40
 8013bd2:	f7fd fc03 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013bd6:	f8da e000 	ldr.w	lr, [sl]
 8013bda:	f8df a13c 	ldr.w	sl, [pc, #316]	; 8013d18 <WM_HandlePID+0x300>
 8013bde:	ab0f      	add	r3, sp, #60	; 0x3c
 8013be0:	9315      	str	r3, [sp, #84]	; 0x54
 8013be2:	2311      	movs	r3, #17
 8013be4:	9312      	str	r3, [sp, #72]	; 0x48
 8013be6:	fb08 930e 	mla	r3, r8, lr, r9
 8013bea:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8013bee:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8013bf2:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8013bf6:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8013bfa:	721a      	strb	r2, [r3, #8]
 8013bfc:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8013c00:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013c04:	b133      	cbz	r3, 8013c14 <WM_HandlePID+0x1fc>
 8013c06:	eb0a 030e 	add.w	r3, sl, lr
 8013c0a:	f8d3 9004 	ldr.w	r9, [r3, #4]
 8013c0e:	9a05      	ldr	r2, [sp, #20]
 8013c10:	605a      	str	r2, [r3, #4]
 8013c12:	e000      	b.n	8013c16 <WM_HandlePID+0x1fe>
 8013c14:	4699      	mov	r9, r3
 8013c16:	eb0a 030e 	add.w	r3, sl, lr
 8013c1a:	a912      	add	r1, sp, #72	; 0x48
 8013c1c:	f8d3 b004 	ldr.w	fp, [r3, #4]
 8013c20:	9805      	ldr	r0, [sp, #20]
 8013c22:	f004 f9a0 	bl	8017f66 <WM__SendMessageIfEnabled>
 8013c26:	682b      	ldr	r3, [r5, #0]
 8013c28:	eb0a 02c3 	add.w	r2, sl, r3, lsl #3
 8013c2c:	6851      	ldr	r1, [r2, #4]
 8013c2e:	458b      	cmp	fp, r1
 8013c30:	bf1c      	itt	ne
 8013c32:	6852      	ldrne	r2, [r2, #4]
 8013c34:	9205      	strne	r2, [sp, #20]
 8013c36:	220c      	movs	r2, #12
 8013c38:	fb02 7303 	mla	r3, r2, r3, r7
 8013c3c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8013c40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8013c44:	f1b9 0f00 	cmp.w	r9, #0
 8013c48:	d008      	beq.n	8013c5c <WM_HandlePID+0x244>
 8013c4a:	4648      	mov	r0, r9
 8013c4c:	f7f6 fea0 	bl	800a990 <WM_IsWindow>
 8013c50:	b120      	cbz	r0, 8013c5c <WM_HandlePID+0x244>
 8013c52:	682b      	ldr	r3, [r5, #0]
 8013c54:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 8013c58:	f8c3 9004 	str.w	r9, [r3, #4]
 8013c5c:	682a      	ldr	r2, [r5, #0]
 8013c5e:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8013c62:	210c      	movs	r1, #12
 8013c64:	4351      	muls	r1, r2
 8013c66:	1878      	adds	r0, r7, r1
 8013c68:	f890 8008 	ldrb.w	r8, [r0, #8]
 8013c6c:	ea53 0808 	orrs.w	r8, r3, r8
 8013c70:	d064      	beq.n	8013d3c <WM_HandlePID+0x324>
 8013c72:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 8013d18 <WM_HandlePID+0x300>
 8013c76:	f44f 7e10 	mov.w	lr, #576	; 0x240
 8013c7a:	00d2      	lsls	r2, r2, #3
 8013c7c:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
 8013c80:	eb08 0e02 	add.w	lr, r8, r2
 8013c84:	f8de 9004 	ldr.w	r9, [lr, #4]
 8013c88:	f8dd c014 	ldr.w	ip, [sp, #20]
 8013c8c:	45e1      	cmp	r9, ip
 8013c8e:	d01c      	beq.n	8013cca <WM_HandlePID+0x2b2>
 8013c90:	f8de e004 	ldr.w	lr, [lr, #4]
 8013c94:	f1be 0f00 	cmp.w	lr, #0
 8013c98:	d017      	beq.n	8013cca <WM_HandlePID+0x2b2>
 8013c9a:	b113      	cbz	r3, 8013ca2 <WM_HandlePID+0x28a>
 8013c9c:	2300      	movs	r3, #0
 8013c9e:	9315      	str	r3, [sp, #84]	; 0x54
 8013ca0:	e009      	b.n	8013cb6 <WM_HandlePID+0x29e>
 8013ca2:	f8df e058 	ldr.w	lr, [pc, #88]	; 8013cfc <WM_HandlePID+0x2e4>
 8013ca6:	f88d 3020 	strb.w	r3, [sp, #32]
 8013caa:	f85e 1001 	ldr.w	r1, [lr, r1]
 8013cae:	9106      	str	r1, [sp, #24]
 8013cb0:	6841      	ldr	r1, [r0, #4]
 8013cb2:	9107      	str	r1, [sp, #28]
 8013cb4:	9615      	str	r6, [sp, #84]	; 0x54
 8013cb6:	4442      	add	r2, r8
 8013cb8:	a912      	add	r1, sp, #72	; 0x48
 8013cba:	6850      	ldr	r0, [r2, #4]
 8013cbc:	f7ff fe8e 	bl	80139dc <WM__SendTouchMessage>
 8013cc0:	682b      	ldr	r3, [r5, #0]
 8013cc2:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8013cc6:	2200      	movs	r2, #0
 8013cc8:	605a      	str	r2, [r3, #4]
 8013cca:	682b      	ldr	r3, [r5, #0]
 8013ccc:	f89d e02c 	ldrb.w	lr, [sp, #44]	; 0x2c
 8013cd0:	220c      	movs	r2, #12
 8013cd2:	fb02 7203 	mla	r2, r2, r3, r7
 8013cd6:	f882 e008 	strb.w	lr, [r2, #8]
 8013cda:	9a05      	ldr	r2, [sp, #20]
 8013cdc:	2a00      	cmp	r2, #0
 8013cde:	d043      	beq.n	8013d68 <WM_HandlePID+0x350>
 8013ce0:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8013ce4:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8013ce8:	f1be 0f00 	cmp.w	lr, #0
 8013cec:	d016      	beq.n	8013d1c <WM_HandlePID+0x304>
 8013cee:	9a05      	ldr	r2, [sp, #20]
 8013cf0:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8013cf4:	e01b      	b.n	8013d2e <WM_HandlePID+0x316>
 8013cf6:	bf00      	nop
 8013cf8:	20019974 	.word	0x20019974
 8013cfc:	200196bc 	.word	0x200196bc
 8013d00:	200199d4 	.word	0x200199d4
 8013d04:	200199c8 	.word	0x200199c8
 8013d08:	200196b4 	.word	0x200196b4
 8013d0c:	20019990 	.word	0x20019990
 8013d10:	200196b8 	.word	0x200196b8
 8013d14:	20019abc 	.word	0x20019abc
 8013d18:	20019acc 	.word	0x20019acc
 8013d1c:	4b1d      	ldr	r3, [pc, #116]	; (8013d94 <WM_HandlePID+0x37c>)
 8013d1e:	781b      	ldrb	r3, [r3, #0]
 8013d20:	b10b      	cbz	r3, 8013d26 <WM_HandlePID+0x30e>
 8013d22:	f7f6 fc59 	bl	800a5d8 <WM_ReleaseCapture>
 8013d26:	682b      	ldr	r3, [r5, #0]
 8013d28:	2200      	movs	r2, #0
 8013d2a:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8013d2e:	605a      	str	r2, [r3, #4]
 8013d30:	9805      	ldr	r0, [sp, #20]
 8013d32:	9615      	str	r6, [sp, #84]	; 0x54
 8013d34:	a912      	add	r1, sp, #72	; 0x48
 8013d36:	f7ff fe51 	bl	80139dc <WM__SendTouchMessage>
 8013d3a:	e015      	b.n	8013d68 <WM_HandlePID+0x350>
 8013d3c:	9b05      	ldr	r3, [sp, #20]
 8013d3e:	2b00      	cmp	r3, #0
 8013d40:	f43f af15 	beq.w	8013b6e <WM_HandlePID+0x156>
 8013d44:	9805      	ldr	r0, [sp, #20]
 8013d46:	f7f6 fa0b 	bl	800a160 <WM__IsEnabled>
 8013d4a:	2800      	cmp	r0, #0
 8013d4c:	f43f af0f 	beq.w	8013b6e <WM_HandlePID+0x156>
 8013d50:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8013d54:	2310      	movs	r3, #16
 8013d56:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8013d5a:	9805      	ldr	r0, [sp, #20]
 8013d5c:	9312      	str	r3, [sp, #72]	; 0x48
 8013d5e:	a912      	add	r1, sp, #72	; 0x48
 8013d60:	9615      	str	r6, [sp, #84]	; 0x54
 8013d62:	f7ff fe3b 	bl	80139dc <WM__SendTouchMessage>
 8013d66:	e702      	b.n	8013b6e <WM_HandlePID+0x156>
 8013d68:	2601      	movs	r6, #1
 8013d6a:	682b      	ldr	r3, [r5, #0]
 8013d6c:	220c      	movs	r2, #12
 8013d6e:	fb02 7703 	mla	r7, r2, r3, r7
 8013d72:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8013d76:	e887 0007 	stmia.w	r7, {r0, r1, r2}
 8013d7a:	4620      	mov	r0, r4
 8013d7c:	4619      	mov	r1, r3
 8013d7e:	f000 f819 	bl	8013db4 <WM_PID__SetPrevState>
 8013d82:	e000      	b.n	8013d86 <WM_HandlePID+0x36e>
 8013d84:	2600      	movs	r6, #0
 8013d86:	a804      	add	r0, sp, #16
 8013d88:	f000 f882 	bl	8013e90 <WM__RemoveCriticalHandle>
 8013d8c:	4630      	mov	r0, r6
 8013d8e:	b017      	add	sp, #92	; 0x5c
 8013d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d94:	20019978 	.word	0x20019978

08013d98 <WM_SendToParent>:
 8013d98:	b538      	push	{r3, r4, r5, lr}
 8013d9a:	4605      	mov	r5, r0
 8013d9c:	460c      	mov	r4, r1
 8013d9e:	b141      	cbz	r1, 8013db2 <WM_SendToParent+0x1a>
 8013da0:	f7f6 fe68 	bl	800aa74 <WM_GetParent>
 8013da4:	b128      	cbz	r0, 8013db2 <WM_SendToParent+0x1a>
 8013da6:	60a5      	str	r5, [r4, #8]
 8013da8:	4621      	mov	r1, r4
 8013daa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013dae:	f7ff bd55 	b.w	801385c <WM__SendMessage>
 8013db2:	bd38      	pop	{r3, r4, r5, pc}

08013db4 <WM_PID__SetPrevState>:
 8013db4:	4b03      	ldr	r3, [pc, #12]	; (8013dc4 <WM_PID__SetPrevState+0x10>)
 8013db6:	220c      	movs	r2, #12
 8013db8:	fb02 3301 	mla	r3, r2, r1, r3
 8013dbc:	c807      	ldmia	r0, {r0, r1, r2}
 8013dbe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8013dc2:	4770      	bx	lr
 8013dc4:	200196d4 	.word	0x200196d4

08013dc8 <WM_OnKey>:
 8013dc8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013dca:	4a0a      	ldr	r2, [pc, #40]	; (8013df4 <WM_OnKey+0x2c>)
 8013dcc:	4603      	mov	r3, r0
 8013dce:	6810      	ldr	r0, [r2, #0]
 8013dd0:	4a09      	ldr	r2, [pc, #36]	; (8013df8 <WM_OnKey+0x30>)
 8013dd2:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8013dd6:	b148      	cbz	r0, 8013dec <WM_OnKey+0x24>
 8013dd8:	9300      	str	r3, [sp, #0]
 8013dda:	230e      	movs	r3, #14
 8013ddc:	9101      	str	r1, [sp, #4]
 8013dde:	9302      	str	r3, [sp, #8]
 8013de0:	a902      	add	r1, sp, #8
 8013de2:	ab00      	add	r3, sp, #0
 8013de4:	9305      	str	r3, [sp, #20]
 8013de6:	f7ff fd39 	bl	801385c <WM__SendMessage>
 8013dea:	2001      	movs	r0, #1
 8013dec:	b007      	add	sp, #28
 8013dee:	f85d fb04 	ldr.w	pc, [sp], #4
 8013df2:	bf00      	nop
 8013df4:	20019974 	.word	0x20019974
 8013df8:	20019964 	.word	0x20019964

08013dfc <WM_GetWindowRect>:
 8013dfc:	b510      	push	{r4, lr}
 8013dfe:	4604      	mov	r4, r0
 8013e00:	b158      	cbz	r0, 8013e1a <WM_GetWindowRect+0x1e>
 8013e02:	4b06      	ldr	r3, [pc, #24]	; (8013e1c <WM_GetWindowRect+0x20>)
 8013e04:	6818      	ldr	r0, [r3, #0]
 8013e06:	b910      	cbnz	r0, 8013e0e <WM_GetWindowRect+0x12>
 8013e08:	4b05      	ldr	r3, [pc, #20]	; (8013e20 <WM_GetWindowRect+0x24>)
 8013e0a:	681b      	ldr	r3, [r3, #0]
 8013e0c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8013e0e:	f7fd facd 	bl	80113ac <GUI_ALLOC_h2p>
 8013e12:	4603      	mov	r3, r0
 8013e14:	cb03      	ldmia	r3!, {r0, r1}
 8013e16:	6020      	str	r0, [r4, #0]
 8013e18:	6061      	str	r1, [r4, #4]
 8013e1a:	bd10      	pop	{r4, pc}
 8013e1c:	20019950 	.word	0x20019950
 8013e20:	2000016c 	.word	0x2000016c

08013e24 <WM_GetWindowRectEx>:
 8013e24:	b510      	push	{r4, lr}
 8013e26:	460c      	mov	r4, r1
 8013e28:	b130      	cbz	r0, 8013e38 <WM_GetWindowRectEx+0x14>
 8013e2a:	b129      	cbz	r1, 8013e38 <WM_GetWindowRectEx+0x14>
 8013e2c:	f7fd fabe 	bl	80113ac <GUI_ALLOC_h2p>
 8013e30:	4603      	mov	r3, r0
 8013e32:	cb03      	ldmia	r3!, {r0, r1}
 8013e34:	6020      	str	r0, [r4, #0]
 8013e36:	6061      	str	r1, [r4, #4]
 8013e38:	bd10      	pop	{r4, pc}

08013e3a <WM_GetScrollPartner>:
 8013e3a:	b538      	push	{r3, r4, r5, lr}
 8013e3c:	4605      	mov	r5, r0
 8013e3e:	f7f6 fe31 	bl	800aaa4 <WM_GetId>
 8013e42:	28ff      	cmp	r0, #255	; 0xff
 8013e44:	4604      	mov	r4, r0
 8013e46:	d003      	beq.n	8013e50 <WM_GetScrollPartner+0x16>
 8013e48:	28fe      	cmp	r0, #254	; 0xfe
 8013e4a:	bf08      	it	eq
 8013e4c:	24ff      	moveq	r4, #255	; 0xff
 8013e4e:	e000      	b.n	8013e52 <WM_GetScrollPartner+0x18>
 8013e50:	24fe      	movs	r4, #254	; 0xfe
 8013e52:	4628      	mov	r0, r5
 8013e54:	f7f6 fe0e 	bl	800aa74 <WM_GetParent>
 8013e58:	4621      	mov	r1, r4
 8013e5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013e5e:	f7f6 be60 	b.w	800ab22 <WM_GetDialogItem>

08013e62 <WM_GetInsideRectEx>:
 8013e62:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013e64:	9103      	str	r1, [sp, #12]
 8013e66:	a904      	add	r1, sp, #16
 8013e68:	2314      	movs	r3, #20
 8013e6a:	f841 3d10 	str.w	r3, [r1, #-16]!
 8013e6e:	4669      	mov	r1, sp
 8013e70:	f7f7 fb9c 	bl	800b5ac <WM_SendMessage>
 8013e74:	b005      	add	sp, #20
 8013e76:	f85d fb04 	ldr.w	pc, [sp], #4

08013e7a <WM_ForEachDesc>:
 8013e7a:	f004 b881 	b.w	8017f80 <WM__ForEachDesc>
	...

08013e80 <WM__AddCriticalHandle>:
 8013e80:	4b02      	ldr	r3, [pc, #8]	; (8013e8c <WM__AddCriticalHandle+0xc>)
 8013e82:	681a      	ldr	r2, [r3, #0]
 8013e84:	6002      	str	r2, [r0, #0]
 8013e86:	6018      	str	r0, [r3, #0]
 8013e88:	4770      	bx	lr
 8013e8a:	bf00      	nop
 8013e8c:	20019988 	.word	0x20019988

08013e90 <WM__RemoveCriticalHandle>:
 8013e90:	4a09      	ldr	r2, [pc, #36]	; (8013eb8 <WM__RemoveCriticalHandle+0x28>)
 8013e92:	6813      	ldr	r3, [r2, #0]
 8013e94:	b510      	push	{r4, lr}
 8013e96:	4614      	mov	r4, r2
 8013e98:	b16b      	cbz	r3, 8013eb6 <WM__RemoveCriticalHandle+0x26>
 8013e9a:	2200      	movs	r2, #0
 8013e9c:	4283      	cmp	r3, r0
 8013e9e:	d105      	bne.n	8013eac <WM__RemoveCriticalHandle+0x1c>
 8013ea0:	681b      	ldr	r3, [r3, #0]
 8013ea2:	b10a      	cbz	r2, 8013ea8 <WM__RemoveCriticalHandle+0x18>
 8013ea4:	6013      	str	r3, [r2, #0]
 8013ea6:	bd10      	pop	{r4, pc}
 8013ea8:	6023      	str	r3, [r4, #0]
 8013eaa:	bd10      	pop	{r4, pc}
 8013eac:	6819      	ldr	r1, [r3, #0]
 8013eae:	b111      	cbz	r1, 8013eb6 <WM__RemoveCriticalHandle+0x26>
 8013eb0:	461a      	mov	r2, r3
 8013eb2:	460b      	mov	r3, r1
 8013eb4:	e7f2      	b.n	8013e9c <WM__RemoveCriticalHandle+0xc>
 8013eb6:	bd10      	pop	{r4, pc}
 8013eb8:	20019988 	.word	0x20019988

08013ebc <WM_BringToBottom>:
 8013ebc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ec0:	4604      	mov	r4, r0
 8013ec2:	b087      	sub	sp, #28
 8013ec4:	2800      	cmp	r0, #0
 8013ec6:	d039      	beq.n	8013f3c <WM_BringToBottom+0x80>
 8013ec8:	f7fd fa7a 	bl	80113c0 <GUI_ALLOC_LockH>
 8013ecc:	4603      	mov	r3, r0
 8013ece:	9001      	str	r0, [sp, #4]
 8013ed0:	c803      	ldmia	r0, {r0, r1}
 8013ed2:	ad04      	add	r5, sp, #16
 8013ed4:	e885 0003 	stmia.w	r5, {r0, r1}
 8013ed8:	a801      	add	r0, sp, #4
 8013eda:	6a1e      	ldr	r6, [r3, #32]
 8013edc:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 8013ee0:	f7fd fa7c 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013ee4:	4620      	mov	r0, r4
 8013ee6:	f7ff fcd7 	bl	8013898 <WM__GetPrevSibling>
 8013eea:	4607      	mov	r7, r0
 8013eec:	b330      	cbz	r0, 8013f3c <WM_BringToBottom+0x80>
 8013eee:	4620      	mov	r0, r4
 8013ef0:	f7f6 fdc0 	bl	800aa74 <WM_GetParent>
 8013ef4:	f019 0f02 	tst.w	r9, #2
 8013ef8:	4680      	mov	r8, r0
 8013efa:	d004      	beq.n	8013f06 <WM_BringToBottom+0x4a>
 8013efc:	4628      	mov	r0, r5
 8013efe:	4641      	mov	r1, r8
 8013f00:	4632      	mov	r2, r6
 8013f02:	f7f7 fb3b 	bl	800b57c <WM__InvalidateRectEx>
 8013f06:	4620      	mov	r0, r4
 8013f08:	f7fd fa5a 	bl	80113c0 <GUI_ALLOC_LockH>
 8013f0c:	9001      	str	r0, [sp, #4]
 8013f0e:	4640      	mov	r0, r8
 8013f10:	f7fd fa56 	bl	80113c0 <GUI_ALLOC_LockH>
 8013f14:	9003      	str	r0, [sp, #12]
 8013f16:	4638      	mov	r0, r7
 8013f18:	f7fd fa52 	bl	80113c0 <GUI_ALLOC_LockH>
 8013f1c:	9b03      	ldr	r3, [sp, #12]
 8013f1e:	9a01      	ldr	r2, [sp, #4]
 8013f20:	69d9      	ldr	r1, [r3, #28]
 8013f22:	6206      	str	r6, [r0, #32]
 8013f24:	9002      	str	r0, [sp, #8]
 8013f26:	6211      	str	r1, [r2, #32]
 8013f28:	a801      	add	r0, sp, #4
 8013f2a:	61dc      	str	r4, [r3, #28]
 8013f2c:	f7fd fa56 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013f30:	a803      	add	r0, sp, #12
 8013f32:	f7fd fa53 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013f36:	a802      	add	r0, sp, #8
 8013f38:	f7fd fa50 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013f3c:	b007      	add	sp, #28
 8013f3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08013f42 <_Convert16>:
 8013f42:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f46:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8013f4a:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8013f4e:	4605      	mov	r5, r0
 8013f50:	460e      	mov	r6, r1
 8013f52:	4690      	mov	r8, r2
 8013f54:	461f      	mov	r7, r3
 8013f56:	4614      	mov	r4, r2
 8013f58:	4689      	mov	r9, r1
 8013f5a:	f835 0b02 	ldrh.w	r0, [r5], #2
 8013f5e:	47d8      	blx	fp
 8013f60:	47d0      	blx	sl
 8013f62:	3c01      	subs	r4, #1
 8013f64:	f849 0b04 	str.w	r0, [r9], #4
 8013f68:	d1f7      	bne.n	8013f5a <_Convert16+0x18>
 8013f6a:	2f1f      	cmp	r7, #31
 8013f6c:	d806      	bhi.n	8013f7c <_Convert16+0x3a>
 8013f6e:	4630      	mov	r0, r6
 8013f70:	4641      	mov	r1, r8
 8013f72:	463a      	mov	r2, r7
 8013f74:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f78:	f002 bd15 	b.w	80169a6 <GUI__CompactPixelIndices>
 8013f7c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013f80 <_Convert8>:
 8013f80:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f84:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8013f88:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8013f8c:	4605      	mov	r5, r0
 8013f8e:	460e      	mov	r6, r1
 8013f90:	4690      	mov	r8, r2
 8013f92:	461f      	mov	r7, r3
 8013f94:	4689      	mov	r9, r1
 8013f96:	4604      	mov	r4, r0
 8013f98:	f814 0b01 	ldrb.w	r0, [r4], #1
 8013f9c:	47d8      	blx	fp
 8013f9e:	47d0      	blx	sl
 8013fa0:	1b2b      	subs	r3, r5, r4
 8013fa2:	4443      	add	r3, r8
 8013fa4:	f849 0b04 	str.w	r0, [r9], #4
 8013fa8:	2b00      	cmp	r3, #0
 8013faa:	d1f5      	bne.n	8013f98 <_Convert8+0x18>
 8013fac:	2f1f      	cmp	r7, #31
 8013fae:	d806      	bhi.n	8013fbe <_Convert8+0x3e>
 8013fb0:	4630      	mov	r0, r6
 8013fb2:	4641      	mov	r1, r8
 8013fb4:	463a      	mov	r2, r7
 8013fb6:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fba:	f002 bcf4 	b.w	80169a6 <GUI__CompactPixelIndices>
 8013fbe:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013fc4 <GUI_MEMDEV__WriteToActiveOpaque>:
 8013fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fc8:	b09d      	sub	sp, #116	; 0x74
 8013fca:	4606      	mov	r6, r0
 8013fcc:	910f      	str	r1, [sp, #60]	; 0x3c
 8013fce:	920d      	str	r2, [sp, #52]	; 0x34
 8013fd0:	2800      	cmp	r0, #0
 8013fd2:	f000 8386 	beq.w	80146e2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8013fd6:	f7fd f9f3 	bl	80113c0 <GUI_ALLOC_LockH>
 8013fda:	ab1c      	add	r3, sp, #112	; 0x70
 8013fdc:	6944      	ldr	r4, [r0, #20]
 8013fde:	f843 0d1c 	str.w	r0, [r3, #-28]!
 8013fe2:	4618      	mov	r0, r3
 8013fe4:	f7fd f9fa 	bl	80113dc <GUI_ALLOC_UnlockH>
 8013fe8:	4630      	mov	r0, r6
 8013fea:	f7f8 ff95 	bl	800cf18 <GUI_MEMDEV_GetBitsPerPixel>
 8013fee:	2808      	cmp	r0, #8
 8013ff0:	4601      	mov	r1, r0
 8013ff2:	dd02      	ble.n	8013ffa <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 8013ff4:	2c00      	cmp	r4, #0
 8013ff6:	f000 81c3 	beq.w	8014380 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 8013ffa:	2201      	movs	r2, #1
 8013ffc:	f04f 0800 	mov.w	r8, #0
 8014000:	4630      	mov	r0, r6
 8014002:	921b      	str	r2, [sp, #108]	; 0x6c
 8014004:	920b      	str	r2, [sp, #44]	; 0x2c
 8014006:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 801400a:	f7fd f9d9 	bl	80113c0 <GUI_ALLOC_LockH>
 801400e:	6803      	ldr	r3, [r0, #0]
 8014010:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 8014620 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 8014014:	691b      	ldr	r3, [r3, #16]
 8014016:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 801401a:	685b      	ldr	r3, [r3, #4]
 801401c:	930e      	str	r3, [sp, #56]	; 0x38
 801401e:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 8014022:	f8da 3000 	ldr.w	r3, [sl]
 8014026:	f84b 0d14 	str.w	r0, [fp, #-20]!
 801402a:	6904      	ldr	r4, [r0, #16]
 801402c:	6945      	ldr	r5, [r0, #20]
 801402e:	f8d0 900c 	ldr.w	r9, [r0, #12]
 8014032:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 8014036:	7c58      	ldrb	r0, [r3, #17]
 8014038:	9112      	str	r1, [sp, #72]	; 0x48
 801403a:	f7fa f9dd 	bl	800e3f8 <GUI_GetBitsPerPixelEx>
 801403e:	f8da 3000 	ldr.w	r3, [sl]
 8014042:	9010      	str	r0, [sp, #64]	; 0x40
 8014044:	7c58      	ldrb	r0, [r3, #17]
 8014046:	f7fa f9f5 	bl	800e434 <GUI_GetpfIndex2ColorEx>
 801404a:	4603      	mov	r3, r0
 801404c:	4658      	mov	r0, fp
 801404e:	9309      	str	r3, [sp, #36]	; 0x24
 8014050:	f7fd f9c4 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014054:	2c08      	cmp	r4, #8
 8014056:	4651      	mov	r1, sl
 8014058:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801405a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801405c:	d904      	bls.n	8014068 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 801405e:	2c10      	cmp	r4, #16
 8014060:	bf8c      	ite	hi
 8014062:	2204      	movhi	r2, #4
 8014064:	2202      	movls	r2, #2
 8014066:	e005      	b.n	8014074 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 8014068:	2c01      	cmp	r4, #1
 801406a:	d103      	bne.n	8014074 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 801406c:	9411      	str	r4, [sp, #68]	; 0x44
 801406e:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 8014072:	e000      	b.n	8014076 <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 8014074:	9211      	str	r2, [sp, #68]	; 0x44
 8014076:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014078:	4298      	cmp	r0, r3
 801407a:	f000 80e2 	beq.w	8014242 <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 801407e:	680b      	ldr	r3, [r1, #0]
 8014080:	7c58      	ldrb	r0, [r3, #17]
 8014082:	f7fa f9df 	bl	800e444 <GUI_GetpfColor2IndexEx>
 8014086:	9013      	str	r0, [sp, #76]	; 0x4c
 8014088:	00b8      	lsls	r0, r7, #2
 801408a:	f7fd fbed 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 801408e:	900c      	str	r0, [sp, #48]	; 0x30
 8014090:	2800      	cmp	r0, #0
 8014092:	f000 8326 	beq.w	80146e2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8014096:	4630      	mov	r0, r6
 8014098:	f7f8 f8da 	bl	800c250 <GUI_MEMDEV_GetDataPtr>
 801409c:	4606      	mov	r6, r0
 801409e:	2d00      	cmp	r5, #0
 80140a0:	f000 80be 	beq.w	8014220 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 80140a4:	4628      	mov	r0, r5
 80140a6:	f7fd f98b 	bl	80113c0 <GUI_ALLOC_LockH>
 80140aa:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 80140ae:	9018      	str	r0, [sp, #96]	; 0x60
 80140b0:	f04f 0a00 	mov.w	sl, #0
 80140b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80140b6:	4592      	cmp	sl, r2
 80140b8:	f280 80ae 	bge.w	8014218 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 80140bc:	9818      	ldr	r0, [sp, #96]	; 0x60
 80140be:	2300      	movs	r3, #0
 80140c0:	9319      	str	r3, [sp, #100]	; 0x64
 80140c2:	6883      	ldr	r3, [r0, #8]
 80140c4:	a919      	add	r1, sp, #100	; 0x64
 80140c6:	695b      	ldr	r3, [r3, #20]
 80140c8:	4652      	mov	r2, sl
 80140ca:	4798      	blx	r3
 80140cc:	42b8      	cmp	r0, r7
 80140ce:	4605      	mov	r5, r0
 80140d0:	d12f      	bne.n	8014132 <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 80140d2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80140d4:	f7fd f974 	bl	80113c0 <GUI_ALLOC_LockH>
 80140d8:	2c08      	cmp	r4, #8
 80140da:	4601      	mov	r1, r0
 80140dc:	9016      	str	r0, [sp, #88]	; 0x58
 80140de:	d909      	bls.n	80140f4 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 80140e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80140e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80140e4:	9200      	str	r2, [sp, #0]
 80140e6:	9301      	str	r3, [sp, #4]
 80140e8:	4630      	mov	r0, r6
 80140ea:	463a      	mov	r2, r7
 80140ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80140ee:	f7ff ff28 	bl	8013f42 <_Convert16>
 80140f2:	e008      	b.n	8014106 <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 80140f4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80140f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80140f8:	9000      	str	r0, [sp, #0]
 80140fa:	9201      	str	r2, [sp, #4]
 80140fc:	4630      	mov	r0, r6
 80140fe:	463a      	mov	r2, r7
 8014100:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014102:	f7ff ff3d 	bl	8013f80 <_Convert8>
 8014106:	2301      	movs	r3, #1
 8014108:	9810      	ldr	r0, [sp, #64]	; 0x40
 801410a:	9002      	str	r0, [sp, #8]
 801410c:	ad1c      	add	r5, sp, #112	; 0x70
 801410e:	2200      	movs	r2, #0
 8014110:	9300      	str	r3, [sp, #0]
 8014112:	9301      	str	r3, [sp, #4]
 8014114:	9203      	str	r2, [sp, #12]
 8014116:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 801411a:	9204      	str	r2, [sp, #16]
 801411c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801411e:	f8cd 8014 	str.w	r8, [sp, #20]
 8014122:	4659      	mov	r1, fp
 8014124:	463a      	mov	r2, r7
 8014126:	f7fa fba9 	bl	800e87c <LCD_DrawBitmap>
 801412a:	4628      	mov	r0, r5
 801412c:	f7fd f956 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014130:	e060      	b.n	80141f4 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 8014132:	2c01      	cmp	r4, #1
 8014134:	d15c      	bne.n	80141f0 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 8014136:	2d00      	cmp	r5, #0
 8014138:	d05c      	beq.n	80141f4 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 801413a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801413c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801413e:	f8cd 900c 	str.w	r9, [sp, #12]
 8014142:	2208      	movs	r2, #8
 8014144:	fb90 f2f2 	sdiv	r2, r0, r2
 8014148:	4432      	add	r2, r6
 801414a:	2301      	movs	r3, #1
 801414c:	9204      	str	r2, [sp, #16]
 801414e:	f000 0207 	and.w	r2, r0, #7
 8014152:	9300      	str	r3, [sp, #0]
 8014154:	4408      	add	r0, r1
 8014156:	9301      	str	r3, [sp, #4]
 8014158:	9302      	str	r3, [sp, #8]
 801415a:	9206      	str	r2, [sp, #24]
 801415c:	4659      	mov	r1, fp
 801415e:	462a      	mov	r2, r5
 8014160:	f8cd 8014 	str.w	r8, [sp, #20]
 8014164:	f7fa faae 	bl	800e6c4 <LCD__DrawBitmap_1bpp>
 8014168:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801416a:	9818      	ldr	r0, [sp, #96]	; 0x60
 801416c:	441d      	add	r5, r3
 801416e:	6883      	ldr	r3, [r0, #8]
 8014170:	9519      	str	r5, [sp, #100]	; 0x64
 8014172:	695b      	ldr	r3, [r3, #20]
 8014174:	a919      	add	r1, sp, #100	; 0x64
 8014176:	4652      	mov	r2, sl
 8014178:	4798      	blx	r3
 801417a:	4605      	mov	r5, r0
 801417c:	e7db      	b.n	8014136 <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 801417e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014180:	f7fd f91e 	bl	80113c0 <GUI_ALLOC_LockH>
 8014184:	2c08      	cmp	r4, #8
 8014186:	4601      	mov	r1, r0
 8014188:	9016      	str	r0, [sp, #88]	; 0x58
 801418a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801418c:	d938      	bls.n	8014200 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 801418e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014190:	9200      	str	r2, [sp, #0]
 8014192:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014194:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014196:	9301      	str	r3, [sp, #4]
 8014198:	fb00 6002 	mla	r0, r0, r2, r6
 801419c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801419e:	462a      	mov	r2, r5
 80141a0:	f7ff fecf 	bl	8013f42 <_Convert16>
 80141a4:	2301      	movs	r3, #1
 80141a6:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 80141aa:	9810      	ldr	r0, [sp, #64]	; 0x40
 80141ac:	9300      	str	r3, [sp, #0]
 80141ae:	2200      	movs	r2, #0
 80141b0:	9301      	str	r3, [sp, #4]
 80141b2:	9002      	str	r0, [sp, #8]
 80141b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80141b6:	9203      	str	r2, [sp, #12]
 80141b8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80141ba:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 80141be:	9204      	str	r2, [sp, #16]
 80141c0:	4408      	add	r0, r1
 80141c2:	462a      	mov	r2, r5
 80141c4:	4659      	mov	r1, fp
 80141c6:	f8cd 8014 	str.w	r8, [sp, #20]
 80141ca:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 80141ce:	f7fa fb55 	bl	800e87c <LCD_DrawBitmap>
 80141d2:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 80141d6:	4660      	mov	r0, ip
 80141d8:	f7fd f900 	bl	80113dc <GUI_ALLOC_UnlockH>
 80141dc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80141de:	9818      	ldr	r0, [sp, #96]	; 0x60
 80141e0:	441d      	add	r5, r3
 80141e2:	6883      	ldr	r3, [r0, #8]
 80141e4:	9519      	str	r5, [sp, #100]	; 0x64
 80141e6:	695b      	ldr	r3, [r3, #20]
 80141e8:	a919      	add	r1, sp, #100	; 0x64
 80141ea:	4652      	mov	r2, sl
 80141ec:	4798      	blx	r3
 80141ee:	4605      	mov	r5, r0
 80141f0:	2d00      	cmp	r5, #0
 80141f2:	d1c4      	bne.n	801417e <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 80141f4:	444e      	add	r6, r9
 80141f6:	f10a 0a01 	add.w	sl, sl, #1
 80141fa:	f10b 0b01 	add.w	fp, fp, #1
 80141fe:	e759      	b.n	80140b4 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 8014200:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014202:	9300      	str	r3, [sp, #0]
 8014204:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014206:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014208:	9201      	str	r2, [sp, #4]
 801420a:	fb00 6003 	mla	r0, r0, r3, r6
 801420e:	462a      	mov	r2, r5
 8014210:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014212:	f7ff feb5 	bl	8013f80 <_Convert8>
 8014216:	e7c5      	b.n	80141a4 <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 8014218:	a818      	add	r0, sp, #96	; 0x60
 801421a:	f7fd f8df 	bl	80113dc <GUI_ALLOC_UnlockH>
 801421e:	e00e      	b.n	801423e <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 8014220:	2301      	movs	r3, #1
 8014222:	9300      	str	r3, [sp, #0]
 8014224:	9301      	str	r3, [sp, #4]
 8014226:	9004      	str	r0, [sp, #16]
 8014228:	9402      	str	r4, [sp, #8]
 801422a:	f8cd 900c 	str.w	r9, [sp, #12]
 801422e:	f8cd 8014 	str.w	r8, [sp, #20]
 8014232:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014234:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014236:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014238:	463a      	mov	r2, r7
 801423a:	f7fa fb1f 	bl	800e87c <LCD_DrawBitmap>
 801423e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014240:	e24d      	b.n	80146de <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 8014242:	4630      	mov	r0, r6
 8014244:	f7f8 f804 	bl	800c250 <GUI_MEMDEV_GetDataPtr>
 8014248:	4606      	mov	r6, r0
 801424a:	2d00      	cmp	r5, #0
 801424c:	f000 808a 	beq.w	8014364 <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 8014250:	4628      	mov	r0, r5
 8014252:	f7fd f8b5 	bl	80113c0 <GUI_ALLOC_LockH>
 8014256:	2500      	movs	r5, #0
 8014258:	9018      	str	r0, [sp, #96]	; 0x60
 801425a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801425c:	429d      	cmp	r5, r3
 801425e:	da7d      	bge.n	801435c <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 8014260:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014262:	2300      	movs	r3, #0
 8014264:	9319      	str	r3, [sp, #100]	; 0x64
 8014266:	6883      	ldr	r3, [r0, #8]
 8014268:	a919      	add	r1, sp, #100	; 0x64
 801426a:	695b      	ldr	r3, [r3, #20]
 801426c:	462a      	mov	r2, r5
 801426e:	4798      	blx	r3
 8014270:	42b8      	cmp	r0, r7
 8014272:	4682      	mov	sl, r0
 8014274:	d124      	bne.n	80142c0 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 8014276:	46aa      	mov	sl, r5
 8014278:	9818      	ldr	r0, [sp, #96]	; 0x60
 801427a:	6883      	ldr	r3, [r0, #8]
 801427c:	f10a 0b01 	add.w	fp, sl, #1
 8014280:	695b      	ldr	r3, [r3, #20]
 8014282:	a919      	add	r1, sp, #100	; 0x64
 8014284:	465a      	mov	r2, fp
 8014286:	4798      	blx	r3
 8014288:	42b8      	cmp	r0, r7
 801428a:	d101      	bne.n	8014290 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 801428c:	46da      	mov	sl, fp
 801428e:	e7f3      	b.n	8014278 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 8014290:	ebc5 0b0a 	rsb	fp, r5, sl
 8014294:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014296:	9604      	str	r6, [sp, #16]
 8014298:	2301      	movs	r3, #1
 801429a:	f10b 0b01 	add.w	fp, fp, #1
 801429e:	9300      	str	r3, [sp, #0]
 80142a0:	9301      	str	r3, [sp, #4]
 80142a2:	4429      	add	r1, r5
 80142a4:	9402      	str	r4, [sp, #8]
 80142a6:	f8cd 900c 	str.w	r9, [sp, #12]
 80142aa:	f8cd 8014 	str.w	r8, [sp, #20]
 80142ae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80142b0:	463a      	mov	r2, r7
 80142b2:	465b      	mov	r3, fp
 80142b4:	f7fa fae2 	bl	800e87c <LCD_DrawBitmap>
 80142b8:	fb09 660b 	mla	r6, r9, fp, r6
 80142bc:	4655      	mov	r5, sl
 80142be:	e04b      	b.n	8014358 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 80142c0:	2c01      	cmp	r4, #1
 80142c2:	d127      	bne.n	8014314 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 80142c4:	f1ba 0f00 	cmp.w	sl, #0
 80142c8:	d022      	beq.n	8014310 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 80142ca:	9819      	ldr	r0, [sp, #100]	; 0x64
 80142cc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80142ce:	f8cd 900c 	str.w	r9, [sp, #12]
 80142d2:	2208      	movs	r2, #8
 80142d4:	fb90 f2f2 	sdiv	r2, r0, r2
 80142d8:	4432      	add	r2, r6
 80142da:	9204      	str	r2, [sp, #16]
 80142dc:	f000 0207 	and.w	r2, r0, #7
 80142e0:	4408      	add	r0, r1
 80142e2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80142e4:	9206      	str	r2, [sp, #24]
 80142e6:	2301      	movs	r3, #1
 80142e8:	4652      	mov	r2, sl
 80142ea:	9300      	str	r3, [sp, #0]
 80142ec:	9301      	str	r3, [sp, #4]
 80142ee:	9302      	str	r3, [sp, #8]
 80142f0:	4429      	add	r1, r5
 80142f2:	f8cd 8014 	str.w	r8, [sp, #20]
 80142f6:	f7fa f9e5 	bl	800e6c4 <LCD__DrawBitmap_1bpp>
 80142fa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80142fc:	9818      	ldr	r0, [sp, #96]	; 0x60
 80142fe:	4453      	add	r3, sl
 8014300:	9319      	str	r3, [sp, #100]	; 0x64
 8014302:	6883      	ldr	r3, [r0, #8]
 8014304:	a919      	add	r1, sp, #100	; 0x64
 8014306:	695b      	ldr	r3, [r3, #20]
 8014308:	462a      	mov	r2, r5
 801430a:	4798      	blx	r3
 801430c:	4682      	mov	sl, r0
 801430e:	e7d9      	b.n	80142c4 <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 8014310:	444e      	add	r6, r9
 8014312:	e021      	b.n	8014358 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 8014314:	f1ba 0f00 	cmp.w	sl, #0
 8014318:	d0fa      	beq.n	8014310 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 801431a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801431c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801431e:	9402      	str	r4, [sp, #8]
 8014320:	fb00 6201 	mla	r2, r0, r1, r6
 8014324:	9204      	str	r2, [sp, #16]
 8014326:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014328:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801432a:	f8cd 900c 	str.w	r9, [sp, #12]
 801432e:	2301      	movs	r3, #1
 8014330:	4410      	add	r0, r2
 8014332:	9300      	str	r3, [sp, #0]
 8014334:	4652      	mov	r2, sl
 8014336:	9301      	str	r3, [sp, #4]
 8014338:	4429      	add	r1, r5
 801433a:	f8cd 8014 	str.w	r8, [sp, #20]
 801433e:	f7fa fa9d 	bl	800e87c <LCD_DrawBitmap>
 8014342:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014344:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014346:	4453      	add	r3, sl
 8014348:	9319      	str	r3, [sp, #100]	; 0x64
 801434a:	6883      	ldr	r3, [r0, #8]
 801434c:	a919      	add	r1, sp, #100	; 0x64
 801434e:	695b      	ldr	r3, [r3, #20]
 8014350:	462a      	mov	r2, r5
 8014352:	4798      	blx	r3
 8014354:	4682      	mov	sl, r0
 8014356:	e7dd      	b.n	8014314 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 8014358:	3501      	adds	r5, #1
 801435a:	e77e      	b.n	801425a <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 801435c:	a818      	add	r0, sp, #96	; 0x60
 801435e:	f7fd f83d 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014362:	e1be      	b.n	80146e2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8014364:	2301      	movs	r3, #1
 8014366:	9300      	str	r3, [sp, #0]
 8014368:	9301      	str	r3, [sp, #4]
 801436a:	9004      	str	r0, [sp, #16]
 801436c:	9402      	str	r4, [sp, #8]
 801436e:	f8cd 900c 	str.w	r9, [sp, #12]
 8014372:	f8cd 8014 	str.w	r8, [sp, #20]
 8014376:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014378:	990d      	ldr	r1, [sp, #52]	; 0x34
 801437a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801437c:	463a      	mov	r2, r7
 801437e:	e041      	b.n	8014404 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 8014380:	4630      	mov	r0, r6
 8014382:	910a      	str	r1, [sp, #40]	; 0x28
 8014384:	f7fd f81c 	bl	80113c0 <GUI_ALLOC_LockH>
 8014388:	4682      	mov	sl, r0
 801438a:	a81c      	add	r0, sp, #112	; 0x70
 801438c:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 8014390:	f840 ad10 	str.w	sl, [r0, #-16]!
 8014394:	f8da 4000 	ldr.w	r4, [sl]
 8014398:	9210      	str	r2, [sp, #64]	; 0x40
 801439a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801439e:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 80143a2:	4c9e      	ldr	r4, [pc, #632]	; (801461c <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 80143a4:	b213      	sxth	r3, r2
 80143a6:	f8da 200c 	ldr.w	r2, [sl, #12]
 80143aa:	920b      	str	r2, [sp, #44]	; 0x2c
 80143ac:	9309      	str	r3, [sp, #36]	; 0x24
 80143ae:	f7fd f815 	bl	80113dc <GUI_ALLOC_UnlockH>
 80143b2:	f8d9 0004 	ldr.w	r0, [r9, #4]
 80143b6:	900e      	str	r0, [sp, #56]	; 0x38
 80143b8:	4899      	ldr	r0, [pc, #612]	; (8014620 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 80143ba:	6800      	ldr	r0, [r0, #0]
 80143bc:	7c40      	ldrb	r0, [r0, #17]
 80143be:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 80143c2:	6925      	ldr	r5, [r4, #16]
 80143c4:	f8d5 8000 	ldr.w	r8, [r5]
 80143c8:	f7fa f816 	bl	800e3f8 <GUI_GetBitsPerPixelEx>
 80143cc:	2808      	cmp	r0, #8
 80143ce:	fa0f fb87 	sxth.w	fp, r7
 80143d2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80143d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80143d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143d8:	d904      	bls.n	80143e4 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 80143da:	2810      	cmp	r0, #16
 80143dc:	bf8c      	ite	hi
 80143de:	2404      	movhi	r4, #4
 80143e0:	2402      	movls	r4, #2
 80143e2:	e000      	b.n	80143e6 <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 80143e4:	2401      	movs	r4, #1
 80143e6:	45a9      	cmp	r9, r5
 80143e8:	d10f      	bne.n	801440a <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 80143ea:	2001      	movs	r0, #1
 80143ec:	9203      	str	r2, [sp, #12]
 80143ee:	f10a 0218 	add.w	r2, sl, #24
 80143f2:	9000      	str	r0, [sp, #0]
 80143f4:	9001      	str	r0, [sp, #4]
 80143f6:	9102      	str	r1, [sp, #8]
 80143f8:	9204      	str	r2, [sp, #16]
 80143fa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80143fc:	990d      	ldr	r1, [sp, #52]	; 0x34
 80143fe:	2200      	movs	r2, #0
 8014400:	9205      	str	r2, [sp, #20]
 8014402:	465a      	mov	r2, fp
 8014404:	f7fa fa3a 	bl	800e87c <LCD_DrawBitmap>
 8014408:	e16b      	b.n	80146e2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 801440a:	2920      	cmp	r1, #32
 801440c:	f040 808e 	bne.w	801452c <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 8014410:	fb0b f004 	mul.w	r0, fp, r4
 8014414:	f7fd fa28 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 8014418:	900e      	str	r0, [sp, #56]	; 0x38
 801441a:	2800      	cmp	r0, #0
 801441c:	f000 8161 	beq.w	80146e2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8014420:	f7fc ffce 	bl	80113c0 <GUI_ALLOC_LockH>
 8014424:	901a      	str	r0, [sp, #104]	; 0x68
 8014426:	4630      	mov	r0, r6
 8014428:	f7fc ffca 	bl	80113c0 <GUI_ALLOC_LockH>
 801442c:	9018      	str	r0, [sp, #96]	; 0x60
 801442e:	692b      	ldr	r3, [r5, #16]
 8014430:	f100 0a18 	add.w	sl, r0, #24
 8014434:	ea4f 068b 	mov.w	r6, fp, lsl #2
 8014438:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 801443c:	2b00      	cmp	r3, #0
 801443e:	d02f      	beq.n	80144a0 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 8014440:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8014444:	2c02      	cmp	r4, #2
 8014446:	d003      	beq.n	8014450 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 8014448:	2c04      	cmp	r4, #4
 801444a:	d001      	beq.n	8014450 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 801444c:	2c01      	cmp	r4, #1
 801444e:	d106      	bne.n	801445e <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 8014450:	4650      	mov	r0, sl
 8014452:	692f      	ldr	r7, [r5, #16]
 8014454:	991a      	ldr	r1, [sp, #104]	; 0x68
 8014456:	465a      	mov	r2, fp
 8014458:	4623      	mov	r3, r4
 801445a:	47b8      	blx	r7
 801445c:	44b2      	add	sl, r6
 801445e:	2301      	movs	r3, #1
 8014460:	2200      	movs	r2, #0
 8014462:	991a      	ldr	r1, [sp, #104]	; 0x68
 8014464:	9300      	str	r3, [sp, #0]
 8014466:	9301      	str	r3, [sp, #4]
 8014468:	9203      	str	r2, [sp, #12]
 801446a:	9104      	str	r1, [sp, #16]
 801446c:	9205      	str	r2, [sp, #20]
 801446e:	4641      	mov	r1, r8
 8014470:	465a      	mov	r2, fp
 8014472:	f8cd 9008 	str.w	r9, [sp, #8]
 8014476:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014478:	f7fa fa00 	bl	800e87c <LCD_DrawBitmap>
 801447c:	9910      	ldr	r1, [sp, #64]	; 0x40
 801447e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014480:	f108 0701 	add.w	r7, r8, #1
 8014484:	fa02 f381 	sxtah	r3, r2, r1
 8014488:	42bb      	cmp	r3, r7
 801448a:	d107      	bne.n	801449c <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 801448c:	a818      	add	r0, sp, #96	; 0x60
 801448e:	f7fc ffa5 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014492:	a81a      	add	r0, sp, #104	; 0x68
 8014494:	f7fc ffa2 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014498:	980e      	ldr	r0, [sp, #56]	; 0x38
 801449a:	e120      	b.n	80146de <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 801449c:	46b8      	mov	r8, r7
 801449e:	e7d1      	b.n	8014444 <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 80144a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80144a2:	2c02      	cmp	r4, #2
 80144a4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80144a6:	d00e      	beq.n	80144c6 <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 80144a8:	2c04      	cmp	r4, #4
 80144aa:	d018      	beq.n	80144de <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 80144ac:	2c01      	cmp	r4, #1
 80144ae:	d125      	bne.n	80144fc <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 80144b0:	2300      	movs	r3, #0
 80144b2:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 80144b6:	9309      	str	r3, [sp, #36]	; 0x24
 80144b8:	47c0      	blx	r8
 80144ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144bc:	54f8      	strb	r0, [r7, r3]
 80144be:	3301      	adds	r3, #1
 80144c0:	459b      	cmp	fp, r3
 80144c2:	d1f6      	bne.n	80144b2 <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 80144c4:	e019      	b.n	80144fa <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 80144c6:	2300      	movs	r3, #0
 80144c8:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 80144cc:	9309      	str	r3, [sp, #36]	; 0x24
 80144ce:	47c0      	blx	r8
 80144d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144d2:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 80144d6:	3301      	adds	r3, #1
 80144d8:	459b      	cmp	fp, r3
 80144da:	d1f5      	bne.n	80144c8 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 80144dc:	e00d      	b.n	80144fa <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 80144de:	465a      	mov	r2, fp
 80144e0:	2300      	movs	r3, #0
 80144e2:	f85a 0003 	ldr.w	r0, [sl, r3]
 80144e6:	920b      	str	r2, [sp, #44]	; 0x2c
 80144e8:	9309      	str	r3, [sp, #36]	; 0x24
 80144ea:	47c0      	blx	r8
 80144ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80144ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144f0:	3a01      	subs	r2, #1
 80144f2:	50f8      	str	r0, [r7, r3]
 80144f4:	f103 0304 	add.w	r3, r3, #4
 80144f8:	d1f3      	bne.n	80144e2 <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 80144fa:	44b2      	add	sl, r6
 80144fc:	2301      	movs	r3, #1
 80144fe:	2200      	movs	r2, #0
 8014500:	991a      	ldr	r1, [sp, #104]	; 0x68
 8014502:	9300      	str	r3, [sp, #0]
 8014504:	9301      	str	r3, [sp, #4]
 8014506:	9203      	str	r2, [sp, #12]
 8014508:	9104      	str	r1, [sp, #16]
 801450a:	9205      	str	r2, [sp, #20]
 801450c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801450e:	f8cd 9008 	str.w	r9, [sp, #8]
 8014512:	4629      	mov	r1, r5
 8014514:	465a      	mov	r2, fp
 8014516:	f7fa f9b1 	bl	800e87c <LCD_DrawBitmap>
 801451a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801451c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801451e:	1c6f      	adds	r7, r5, #1
 8014520:	fa01 f380 	sxtah	r3, r1, r0
 8014524:	42bb      	cmp	r3, r7
 8014526:	d0b1      	beq.n	801448c <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 8014528:	463d      	mov	r5, r7
 801452a:	e7ba      	b.n	80144a2 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 801452c:	2910      	cmp	r1, #16
 801452e:	f040 80d8 	bne.w	80146e2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8014532:	fa0f fa87 	sxth.w	sl, r7
 8014536:	fb0a f004 	mul.w	r0, sl, r4
 801453a:	f7fd f995 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 801453e:	9012      	str	r0, [sp, #72]	; 0x48
 8014540:	2800      	cmp	r0, #0
 8014542:	f000 80ce 	beq.w	80146e2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8014546:	f7fc ff3b 	bl	80113c0 <GUI_ALLOC_LockH>
 801454a:	901a      	str	r0, [sp, #104]	; 0x68
 801454c:	4630      	mov	r0, r6
 801454e:	f7fc ff37 	bl	80113c0 <GUI_ALLOC_LockH>
 8014552:	9018      	str	r0, [sp, #96]	; 0x60
 8014554:	692b      	ldr	r3, [r5, #16]
 8014556:	f100 0618 	add.w	r6, r0, #24
 801455a:	b113      	cbz	r3, 8014562 <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 801455c:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8014560:	b92b      	cbnz	r3, 801456e <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 8014562:	00e2      	lsls	r2, r4, #3
 8014564:	b23f      	sxth	r7, r7
 8014566:	9211      	str	r2, [sp, #68]	; 0x44
 8014568:	007f      	lsls	r7, r7, #1
 801456a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801456c:	e088      	b.n	8014680 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 801456e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8014572:	0080      	lsls	r0, r0, #2
 8014574:	f7fd f978 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 8014578:	9011      	str	r0, [sp, #68]	; 0x44
 801457a:	b118      	cbz	r0, 8014584 <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 801457c:	f7fc ff20 	bl	80113c0 <GUI_ALLOC_LockH>
 8014580:	9019      	str	r0, [sp, #100]	; 0x64
 8014582:	e001      	b.n	8014588 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 8014584:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014586:	9319      	str	r3, [sp, #100]	; 0x64
 8014588:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801458a:	2b00      	cmp	r3, #0
 801458c:	f000 80a0 	beq.w	80146d0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8014590:	b23f      	sxth	r7, r7
 8014592:	007f      	lsls	r7, r7, #1
 8014594:	970e      	str	r7, [sp, #56]	; 0x38
 8014596:	00e7      	lsls	r7, r4, #3
 8014598:	9713      	str	r7, [sp, #76]	; 0x4c
 801459a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801459c:	970c      	str	r7, [sp, #48]	; 0x30
 801459e:	2c02      	cmp	r4, #2
 80145a0:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80145a4:	d004      	beq.n	80145b0 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 80145a6:	2c04      	cmp	r4, #4
 80145a8:	d007      	beq.n	80145ba <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 80145aa:	2c01      	cmp	r4, #1
 80145ac:	d114      	bne.n	80145d8 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 80145ae:	e004      	b.n	80145ba <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 80145b0:	4630      	mov	r0, r6
 80145b2:	9919      	ldr	r1, [sp, #100]	; 0x64
 80145b4:	4652      	mov	r2, sl
 80145b6:	4623      	mov	r3, r4
 80145b8:	e003      	b.n	80145c2 <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 80145ba:	9919      	ldr	r1, [sp, #100]	; 0x64
 80145bc:	4630      	mov	r0, r6
 80145be:	4652      	mov	r2, sl
 80145c0:	2302      	movs	r3, #2
 80145c2:	f8d9 7014 	ldr.w	r7, [r9, #20]
 80145c6:	47b8      	blx	r7
 80145c8:	692f      	ldr	r7, [r5, #16]
 80145ca:	9819      	ldr	r0, [sp, #100]	; 0x64
 80145cc:	4641      	mov	r1, r8
 80145ce:	4652      	mov	r2, sl
 80145d0:	4623      	mov	r3, r4
 80145d2:	47b8      	blx	r7
 80145d4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80145d6:	443e      	add	r6, r7
 80145d8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80145da:	991a      	ldr	r1, [sp, #104]	; 0x68
 80145dc:	9104      	str	r1, [sp, #16]
 80145de:	2301      	movs	r3, #1
 80145e0:	2200      	movs	r2, #0
 80145e2:	f107 0801 	add.w	r8, r7, #1
 80145e6:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 80145e8:	9300      	str	r3, [sp, #0]
 80145ea:	9301      	str	r3, [sp, #4]
 80145ec:	9702      	str	r7, [sp, #8]
 80145ee:	9203      	str	r2, [sp, #12]
 80145f0:	9205      	str	r2, [sp, #20]
 80145f2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80145f4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80145f6:	465a      	mov	r2, fp
 80145f8:	f7fa f940 	bl	800e87c <LCD_DrawBitmap>
 80145fc:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80145fe:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014600:	fa00 f387 	sxtah	r3, r0, r7
 8014604:	4543      	cmp	r3, r8
 8014606:	d002      	beq.n	801460e <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 8014608:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 801460c:	e7c7      	b.n	801459e <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 801460e:	a819      	add	r0, sp, #100	; 0x64
 8014610:	f7fc fee4 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014614:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014616:	f7fc ff0d 	bl	8011434 <GUI_ALLOC_Free>
 801461a:	e059      	b.n	80146d0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 801461c:	200199ec 	.word	0x200199ec
 8014620:	2000016c 	.word	0x2000016c
 8014624:	2c04      	cmp	r4, #4
 8014626:	d041      	beq.n	80146ac <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 8014628:	2c01      	cmp	r4, #1
 801462a:	d111      	bne.n	8014650 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 801462c:	464a      	mov	r2, r9
 801462e:	4631      	mov	r1, r6
 8014630:	f831 0b02 	ldrh.w	r0, [r1], #2
 8014634:	910a      	str	r1, [sp, #40]	; 0x28
 8014636:	920b      	str	r2, [sp, #44]	; 0x2c
 8014638:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801463a:	4798      	blx	r3
 801463c:	47c0      	blx	r8
 801463e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014640:	f802 0b01 	strb.w	r0, [r2], #1
 8014644:	eb09 000a 	add.w	r0, r9, sl
 8014648:	4282      	cmp	r2, r0
 801464a:	990a      	ldr	r1, [sp, #40]	; 0x28
 801464c:	d1f0      	bne.n	8014630 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 801464e:	443e      	add	r6, r7
 8014650:	2301      	movs	r3, #1
 8014652:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014654:	991a      	ldr	r1, [sp, #104]	; 0x68
 8014656:	9300      	str	r3, [sp, #0]
 8014658:	2200      	movs	r2, #0
 801465a:	9301      	str	r3, [sp, #4]
 801465c:	9002      	str	r0, [sp, #8]
 801465e:	9203      	str	r2, [sp, #12]
 8014660:	9104      	str	r1, [sp, #16]
 8014662:	9205      	str	r2, [sp, #20]
 8014664:	4629      	mov	r1, r5
 8014666:	465a      	mov	r2, fp
 8014668:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801466a:	f7fa f907 	bl	800e87c <LCD_DrawBitmap>
 801466e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8014670:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014672:	f105 0901 	add.w	r9, r5, #1
 8014676:	fa02 f381 	sxtah	r3, r2, r1
 801467a:	454b      	cmp	r3, r9
 801467c:	d028      	beq.n	80146d0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 801467e:	464d      	mov	r5, r9
 8014680:	2c02      	cmp	r4, #2
 8014682:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 8014686:	d1cd      	bne.n	8014624 <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 8014688:	464b      	mov	r3, r9
 801468a:	4631      	mov	r1, r6
 801468c:	46d9      	mov	r9, fp
 801468e:	f831 0b02 	ldrh.w	r0, [r1], #2
 8014692:	910a      	str	r1, [sp, #40]	; 0x28
 8014694:	9309      	str	r3, [sp, #36]	; 0x24
 8014696:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014698:	4790      	blx	r2
 801469a:	47c0      	blx	r8
 801469c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801469e:	990a      	ldr	r1, [sp, #40]	; 0x28
 80146a0:	f823 0b02 	strh.w	r0, [r3], #2
 80146a4:	f1b9 0901 	subs.w	r9, r9, #1
 80146a8:	d1f1      	bne.n	801468e <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 80146aa:	e7d0      	b.n	801464e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 80146ac:	464b      	mov	r3, r9
 80146ae:	4631      	mov	r1, r6
 80146b0:	46d9      	mov	r9, fp
 80146b2:	f831 0b02 	ldrh.w	r0, [r1], #2
 80146b6:	910a      	str	r1, [sp, #40]	; 0x28
 80146b8:	9309      	str	r3, [sp, #36]	; 0x24
 80146ba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80146bc:	4790      	blx	r2
 80146be:	47c0      	blx	r8
 80146c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146c2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80146c4:	f843 0b04 	str.w	r0, [r3], #4
 80146c8:	f1b9 0901 	subs.w	r9, r9, #1
 80146cc:	d1f1      	bne.n	80146b2 <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 80146ce:	e7be      	b.n	801464e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 80146d0:	a818      	add	r0, sp, #96	; 0x60
 80146d2:	f7fc fe83 	bl	80113dc <GUI_ALLOC_UnlockH>
 80146d6:	a81a      	add	r0, sp, #104	; 0x68
 80146d8:	f7fc fe80 	bl	80113dc <GUI_ALLOC_UnlockH>
 80146dc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80146de:	f7fc fea9 	bl	8011434 <GUI_ALLOC_Free>
 80146e2:	b01d      	add	sp, #116	; 0x74
 80146e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080146e8 <GUI_MEMDEV__WriteToActiveAlpha>:
 80146e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146ec:	b091      	sub	sp, #68	; 0x44
 80146ee:	460e      	mov	r6, r1
 80146f0:	4614      	mov	r4, r2
 80146f2:	900d      	str	r0, [sp, #52]	; 0x34
 80146f4:	f7fc fe64 	bl	80113c0 <GUI_ALLOC_LockH>
 80146f8:	4602      	mov	r2, r0
 80146fa:	a810      	add	r0, sp, #64	; 0x40
 80146fc:	6813      	ldr	r3, [r2, #0]
 80146fe:	4d5b      	ldr	r5, [pc, #364]	; (801486c <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 8014700:	691b      	ldr	r3, [r3, #16]
 8014702:	f840 2d08 	str.w	r2, [r0, #-8]!
 8014706:	685b      	ldr	r3, [r3, #4]
 8014708:	f8b2 b008 	ldrh.w	fp, [r2, #8]
 801470c:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 8014710:	9309      	str	r3, [sp, #36]	; 0x24
 8014712:	f7fc fe63 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014716:	682b      	ldr	r3, [r5, #0]
 8014718:	4f55      	ldr	r7, [pc, #340]	; (8014870 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 801471a:	7c5b      	ldrb	r3, [r3, #17]
 801471c:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8014720:	68c3      	ldr	r3, [r0, #12]
 8014722:	2108      	movs	r1, #8
 8014724:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014726:	4798      	blx	r3
 8014728:	682b      	ldr	r3, [r5, #0]
 801472a:	7c5b      	ldrb	r3, [r3, #17]
 801472c:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8014730:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8014734:	2817      	cmp	r0, #23
 8014736:	bf88      	it	hi
 8014738:	2020      	movhi	r0, #32
 801473a:	9008      	str	r0, [sp, #32]
 801473c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8014740:	f8d8 2000 	ldr.w	r2, [r8]
 8014744:	910a      	str	r1, [sp, #40]	; 0x28
 8014746:	2000      	movs	r0, #0
 8014748:	920b      	str	r2, [sp, #44]	; 0x2c
 801474a:	f7fa fe27 	bl	800f39c <GUI__AllocAlphaBuffer>
 801474e:	2800      	cmp	r0, #0
 8014750:	f040 8089 	bne.w	8014866 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8014754:	682a      	ldr	r2, [r5, #0]
 8014756:	fa0f f78b 	sxth.w	r7, fp
 801475a:	19f5      	adds	r5, r6, r7
 801475c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 8014760:	3d01      	subs	r5, #1
 8014762:	1aed      	subs	r5, r5, r3
 8014764:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 8014768:	2d00      	cmp	r5, #0
 801476a:	bfcc      	ite	gt
 801476c:	ebc5 0507 	rsbgt	r5, r5, r7
 8014770:	463d      	movle	r5, r7
 8014772:	42b3      	cmp	r3, r6
 8014774:	bfc3      	ittte	gt
 8014776:	ebc6 0103 	rsbgt	r1, r6, r3
 801477a:	ebc1 0505 	rsbgt	r5, r1, r5
 801477e:	461e      	movgt	r6, r3
 8014780:	2100      	movle	r1, #0
 8014782:	2d00      	cmp	r5, #0
 8014784:	dd6f      	ble.n	8014866 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8014786:	fa0f f389 	sxth.w	r3, r9
 801478a:	18e0      	adds	r0, r4, r3
 801478c:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 8014790:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 8014794:	3801      	subs	r0, #1
 8014796:	ebcc 0000 	rsb	r0, ip, r0
 801479a:	2800      	cmp	r0, #0
 801479c:	bfc8      	it	gt
 801479e:	ebc0 0303 	rsbgt	r3, r0, r3
 80147a2:	4294      	cmp	r4, r2
 80147a4:	bfbd      	ittte	lt
 80147a6:	ebc4 0a02 	rsblt	sl, r4, r2
 80147aa:	ebca 0303 	rsblt	r3, sl, r3
 80147ae:	4614      	movlt	r4, r2
 80147b0:	f04f 0a00 	movge.w	sl, #0
 80147b4:	2b00      	cmp	r3, #0
 80147b6:	dd56      	ble.n	8014866 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 80147b8:	fb07 1a0a 	mla	sl, r7, sl, r1
 80147bc:	18e3      	adds	r3, r4, r3
 80147be:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 80147c2:	930c      	str	r3, [sp, #48]	; 0x30
 80147c4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80147c6:	f7f7 fd43 	bl	800c250 <GUI_MEMDEV_GetDataPtr>
 80147ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147cc:	9300      	str	r3, [sp, #0]
 80147ce:	ab0f      	add	r3, sp, #60	; 0x3c
 80147d0:	eb00 020a 	add.w	r2, r0, sl
 80147d4:	9301      	str	r3, [sp, #4]
 80147d6:	4630      	mov	r0, r6
 80147d8:	4621      	mov	r1, r4
 80147da:	462b      	mov	r3, r5
 80147dc:	f7fa fcf8 	bl	800f1d0 <GUI__DoAlphaBlending>
 80147e0:	4681      	mov	r9, r0
 80147e2:	2800      	cmp	r0, #0
 80147e4:	d03f      	beq.n	8014866 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 80147e6:	4b23      	ldr	r3, [pc, #140]	; (8014874 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 80147e8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80147ea:	4299      	cmp	r1, r3
 80147ec:	d01e      	beq.n	801482c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 80147ee:	4629      	mov	r1, r5
 80147f0:	9a08      	ldr	r2, [sp, #32]
 80147f2:	4643      	mov	r3, r8
 80147f4:	f002 fa61 	bl	8016cba <GUI__CompactPixelIndicesEx>
 80147f8:	b9c0      	cbnz	r0, 801482c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 80147fa:	f8d8 c010 	ldr.w	ip, [r8, #16]
 80147fe:	f1bc 0f00 	cmp.w	ip, #0
 8014802:	d006      	beq.n	8014812 <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 8014804:	4648      	mov	r0, r9
 8014806:	4649      	mov	r1, r9
 8014808:	fa0f f28b 	sxth.w	r2, fp
 801480c:	2304      	movs	r3, #4
 801480e:	47e0      	blx	ip
 8014810:	e00c      	b.n	801482c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8014812:	464a      	mov	r2, r9
 8014814:	463b      	mov	r3, r7
 8014816:	6810      	ldr	r0, [r2, #0]
 8014818:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801481a:	9206      	str	r2, [sp, #24]
 801481c:	9307      	str	r3, [sp, #28]
 801481e:	4788      	blx	r1
 8014820:	9b07      	ldr	r3, [sp, #28]
 8014822:	9a06      	ldr	r2, [sp, #24]
 8014824:	3b01      	subs	r3, #1
 8014826:	f842 0b04 	str.w	r0, [r2], #4
 801482a:	d1f4      	bne.n	8014816 <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 801482c:	9a08      	ldr	r2, [sp, #32]
 801482e:	9202      	str	r2, [sp, #8]
 8014830:	2301      	movs	r3, #1
 8014832:	2200      	movs	r2, #0
 8014834:	f104 0c01 	add.w	ip, r4, #1
 8014838:	9300      	str	r3, [sp, #0]
 801483a:	9301      	str	r3, [sp, #4]
 801483c:	9203      	str	r2, [sp, #12]
 801483e:	9205      	str	r2, [sp, #20]
 8014840:	f8cd 9010 	str.w	r9, [sp, #16]
 8014844:	4630      	mov	r0, r6
 8014846:	4621      	mov	r1, r4
 8014848:	462a      	mov	r2, r5
 801484a:	f8cd c01c 	str.w	ip, [sp, #28]
 801484e:	f7fa f815 	bl	800e87c <LCD_DrawBitmap>
 8014852:	2304      	movs	r3, #4
 8014854:	fb1b aa03 	smlabb	sl, fp, r3, sl
 8014858:	f8dd c01c 	ldr.w	ip, [sp, #28]
 801485c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801485e:	459c      	cmp	ip, r3
 8014860:	d001      	beq.n	8014866 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8014862:	4664      	mov	r4, ip
 8014864:	e7ae      	b.n	80147c4 <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 8014866:	b011      	add	sp, #68	; 0x44
 8014868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801486c:	2000016c 	.word	0x2000016c
 8014870:	200199ec 	.word	0x200199ec
 8014874:	08011a03 	.word	0x08011a03

08014878 <GUI_MEMDEV_WriteAt>:
 8014878:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801487a:	460c      	mov	r4, r1
 801487c:	4615      	mov	r5, r2
 801487e:	4606      	mov	r6, r0
 8014880:	b330      	cbz	r0, 80148d0 <GUI_MEMDEV_WriteAt+0x58>
 8014882:	f7fc fd9d 	bl	80113c0 <GUI_ALLOC_LockH>
 8014886:	4a13      	ldr	r2, [pc, #76]	; (80148d4 <GUI_MEMDEV_WriteAt+0x5c>)
 8014888:	8943      	ldrh	r3, [r0, #10]
 801488a:	9001      	str	r0, [sp, #4]
 801488c:	4294      	cmp	r4, r2
 801488e:	8902      	ldrh	r2, [r0, #8]
 8014890:	bf04      	itt	eq
 8014892:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 8014896:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 801489a:	f8ad 4008 	strh.w	r4, [sp, #8]
 801489e:	3a01      	subs	r2, #1
 80148a0:	3b01      	subs	r3, #1
 80148a2:	4422      	add	r2, r4
 80148a4:	442b      	add	r3, r5
 80148a6:	a801      	add	r0, sp, #4
 80148a8:	f8ad 200c 	strh.w	r2, [sp, #12]
 80148ac:	f8ad 500a 	strh.w	r5, [sp, #10]
 80148b0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80148b4:	f7fc fd92 	bl	80113dc <GUI_ALLOC_UnlockH>
 80148b8:	a802      	add	r0, sp, #8
 80148ba:	f7f7 f90b 	bl	800bad4 <WM__InitIVRSearch>
 80148be:	b138      	cbz	r0, 80148d0 <GUI_MEMDEV_WriteAt+0x58>
 80148c0:	4630      	mov	r0, r6
 80148c2:	4621      	mov	r1, r4
 80148c4:	462a      	mov	r2, r5
 80148c6:	f7f8 fa89 	bl	800cddc <GUI_MEMDEV__WriteToActiveAt>
 80148ca:	f7f7 f841 	bl	800b950 <WM__GetNextIVR>
 80148ce:	e7f6      	b.n	80148be <GUI_MEMDEV_WriteAt+0x46>
 80148d0:	b004      	add	sp, #16
 80148d2:	bd70      	pop	{r4, r5, r6, pc}
 80148d4:	fffff001 	.word	0xfffff001

080148d8 <GUI_MEMDEV_Write>:
 80148d8:	4901      	ldr	r1, [pc, #4]	; (80148e0 <GUI_MEMDEV_Write+0x8>)
 80148da:	460a      	mov	r2, r1
 80148dc:	f7ff bfcc 	b.w	8014878 <GUI_MEMDEV_WriteAt>
 80148e0:	fffff001 	.word	0xfffff001

080148e4 <GUI_USAGE_BM_AddPixel>:
 80148e4:	4603      	mov	r3, r0
 80148e6:	b510      	push	{r4, lr}
 80148e8:	f933 4b14 	ldrsh.w	r4, [r3], #20
 80148ec:	1b09      	subs	r1, r1, r4
 80148ee:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 80148f2:	6900      	ldr	r0, [r0, #16]
 80148f4:	1b12      	subs	r2, r2, r4
 80148f6:	fb00 3302 	mla	r3, r0, r2, r3
 80148fa:	10c8      	asrs	r0, r1, #3
 80148fc:	2280      	movs	r2, #128	; 0x80
 80148fe:	f001 0107 	and.w	r1, r1, #7
 8014902:	fa42 f101 	asr.w	r1, r2, r1
 8014906:	5c1a      	ldrb	r2, [r3, r0]
 8014908:	4311      	orrs	r1, r2
 801490a:	5419      	strb	r1, [r3, r0]
 801490c:	bd10      	pop	{r4, pc}

0801490e <GUI_USAGE_BM_GetNextDirty>:
 801490e:	b570      	push	{r4, r5, r6, lr}
 8014910:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8014914:	680b      	ldr	r3, [r1, #0]
 8014916:	8886      	ldrh	r6, [r0, #4]
 8014918:	42a2      	cmp	r2, r4
 801491a:	da41      	bge.n	80149a0 <GUI_USAGE_BM_GetNextDirty+0x92>
 801491c:	b236      	sxth	r6, r6
 801491e:	42b3      	cmp	r3, r6
 8014920:	6904      	ldr	r4, [r0, #16]
 8014922:	da3d      	bge.n	80149a0 <GUI_USAGE_BM_GetNextDirty+0x92>
 8014924:	3014      	adds	r0, #20
 8014926:	fb04 0202 	mla	r2, r4, r2, r0
 801492a:	10dd      	asrs	r5, r3, #3
 801492c:	1e70      	subs	r0, r6, #1
 801492e:	1954      	adds	r4, r2, r5
 8014930:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 8014934:	5d55      	ldrb	r5, [r2, r5]
 8014936:	f003 0207 	and.w	r2, r3, #7
 801493a:	fa05 f202 	lsl.w	r2, r5, r2
 801493e:	3401      	adds	r4, #1
 8014940:	b2d2      	uxtb	r2, r2
 8014942:	b93a      	cbnz	r2, 8014954 <GUI_USAGE_BM_GetNextDirty+0x46>
 8014944:	b368      	cbz	r0, 80149a2 <GUI_USAGE_BM_GetNextDirty+0x94>
 8014946:	3308      	adds	r3, #8
 8014948:	f814 2b01 	ldrb.w	r2, [r4], #1
 801494c:	3801      	subs	r0, #1
 801494e:	f023 0307 	bic.w	r3, r3, #7
 8014952:	e7f6      	b.n	8014942 <GUI_USAGE_BM_GetNextDirty+0x34>
 8014954:	0615      	lsls	r5, r2, #24
 8014956:	d403      	bmi.n	8014960 <GUI_USAGE_BM_GetNextDirty+0x52>
 8014958:	0052      	lsls	r2, r2, #1
 801495a:	b2d2      	uxtb	r2, r2
 801495c:	3301      	adds	r3, #1
 801495e:	e7f9      	b.n	8014954 <GUI_USAGE_BM_GetNextDirty+0x46>
 8014960:	2aff      	cmp	r2, #255	; 0xff
 8014962:	461d      	mov	r5, r3
 8014964:	d005      	beq.n	8014972 <GUI_USAGE_BM_GetNextDirty+0x64>
 8014966:	0656      	lsls	r6, r2, #25
 8014968:	d504      	bpl.n	8014974 <GUI_USAGE_BM_GetNextDirty+0x66>
 801496a:	0052      	lsls	r2, r2, #1
 801496c:	b2d2      	uxtb	r2, r2
 801496e:	3301      	adds	r3, #1
 8014970:	e7f9      	b.n	8014966 <GUI_USAGE_BM_GetNextDirty+0x58>
 8014972:	3307      	adds	r3, #7
 8014974:	f003 0207 	and.w	r2, r3, #7
 8014978:	2a07      	cmp	r2, #7
 801497a:	d10d      	bne.n	8014998 <GUI_USAGE_BM_GetNextDirty+0x8a>
 801497c:	3801      	subs	r0, #1
 801497e:	d40b      	bmi.n	8014998 <GUI_USAGE_BM_GetNextDirty+0x8a>
 8014980:	f814 2b01 	ldrb.w	r2, [r4], #1
 8014984:	2aff      	cmp	r2, #255	; 0xff
 8014986:	d101      	bne.n	801498c <GUI_USAGE_BM_GetNextDirty+0x7e>
 8014988:	3308      	adds	r3, #8
 801498a:	e7f7      	b.n	801497c <GUI_USAGE_BM_GetNextDirty+0x6e>
 801498c:	0610      	lsls	r0, r2, #24
 801498e:	d503      	bpl.n	8014998 <GUI_USAGE_BM_GetNextDirty+0x8a>
 8014990:	0052      	lsls	r2, r2, #1
 8014992:	b2d2      	uxtb	r2, r2
 8014994:	3301      	adds	r3, #1
 8014996:	e7f9      	b.n	801498c <GUI_USAGE_BM_GetNextDirty+0x7e>
 8014998:	1b58      	subs	r0, r3, r5
 801499a:	600d      	str	r5, [r1, #0]
 801499c:	3001      	adds	r0, #1
 801499e:	bd70      	pop	{r4, r5, r6, pc}
 80149a0:	2000      	movs	r0, #0
 80149a2:	bd70      	pop	{r4, r5, r6, pc}

080149a4 <_GUI_USAGE_BM_Delete>:
 80149a4:	f7fc bd46 	b.w	8011434 <GUI_ALLOC_Free>

080149a8 <GUI_USAGE_BM_Clear>:
 80149a8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80149ac:	6902      	ldr	r2, [r0, #16]
 80149ae:	2100      	movs	r1, #0
 80149b0:	3014      	adds	r0, #20
 80149b2:	435a      	muls	r2, r3
 80149b4:	f004 b9e1 	b.w	8018d7a <memset>

080149b8 <GUI_USAGE_BM_AddHLine>:
 80149b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80149ba:	f9b0 4000 	ldrsh.w	r4, [r0]
 80149be:	1b09      	subs	r1, r1, r4
 80149c0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80149c4:	42a1      	cmp	r1, r4
 80149c6:	da2f      	bge.n	8014a28 <GUI_USAGE_BM_AddHLine+0x70>
 80149c8:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 80149cc:	440b      	add	r3, r1
 80149ce:	f100 0414 	add.w	r4, r0, #20
 80149d2:	3b01      	subs	r3, #1
 80149d4:	6900      	ldr	r0, [r0, #16]
 80149d6:	1b52      	subs	r2, r2, r5
 80149d8:	43de      	mvns	r6, r3
 80149da:	fb00 4202 	mla	r2, r0, r2, r4
 80149de:	f001 0707 	and.w	r7, r1, #7
 80149e2:	10cc      	asrs	r4, r1, #3
 80149e4:	f006 0607 	and.w	r6, r6, #7
 80149e8:	21ff      	movs	r1, #255	; 0xff
 80149ea:	fa41 f707 	asr.w	r7, r1, r7
 80149ee:	fa01 f606 	lsl.w	r6, r1, r6
 80149f2:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 80149f6:	eb02 0504 	add.w	r5, r2, r4
 80149fa:	b2ff      	uxtb	r7, r7
 80149fc:	b2f6      	uxtb	r6, r6
 80149fe:	5d10      	ldrb	r0, [r2, r4]
 8014a00:	d103      	bne.n	8014a0a <GUI_USAGE_BM_AddHLine+0x52>
 8014a02:	403e      	ands	r6, r7
 8014a04:	4330      	orrs	r0, r6
 8014a06:	5510      	strb	r0, [r2, r4]
 8014a08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014a0a:	4338      	orrs	r0, r7
 8014a0c:	5510      	strb	r0, [r2, r4]
 8014a0e:	1e5c      	subs	r4, r3, #1
 8014a10:	2c00      	cmp	r4, #0
 8014a12:	f105 0501 	add.w	r5, r5, #1
 8014a16:	dd04      	ble.n	8014a22 <GUI_USAGE_BM_AddHLine+0x6a>
 8014a18:	4628      	mov	r0, r5
 8014a1a:	4622      	mov	r2, r4
 8014a1c:	f004 f9ad 	bl	8018d7a <memset>
 8014a20:	4425      	add	r5, r4
 8014a22:	782b      	ldrb	r3, [r5, #0]
 8014a24:	431e      	orrs	r6, r3
 8014a26:	702e      	strb	r6, [r5, #0]
 8014a28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08014a2c <GUI_USAGE_BM_Create>:
 8014a2c:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 8014a30:	f102 060f 	add.w	r6, r2, #15
 8014a34:	1136      	asrs	r6, r6, #4
 8014a36:	0076      	lsls	r6, r6, #1
 8014a38:	4682      	mov	sl, r0
 8014a3a:	fb06 f003 	mul.w	r0, r6, r3
 8014a3e:	3014      	adds	r0, #20
 8014a40:	4689      	mov	r9, r1
 8014a42:	4690      	mov	r8, r2
 8014a44:	461f      	mov	r7, r3
 8014a46:	f7fc ff28 	bl	801189a <GUI_ALLOC_AllocZero>
 8014a4a:	4683      	mov	fp, r0
 8014a4c:	b198      	cbz	r0, 8014a76 <GUI_USAGE_BM_Create+0x4a>
 8014a4e:	f7fc fcb7 	bl	80113c0 <GUI_ALLOC_LockH>
 8014a52:	4604      	mov	r4, r0
 8014a54:	4b0a      	ldr	r3, [pc, #40]	; (8014a80 <GUI_USAGE_BM_Create+0x54>)
 8014a56:	60a3      	str	r3, [r4, #8]
 8014a58:	a802      	add	r0, sp, #8
 8014a5a:	2301      	movs	r3, #1
 8014a5c:	f840 4d04 	str.w	r4, [r0, #-4]!
 8014a60:	f8a4 8004 	strh.w	r8, [r4, #4]
 8014a64:	f8a4 a000 	strh.w	sl, [r4]
 8014a68:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014a6c:	80e7      	strh	r7, [r4, #6]
 8014a6e:	81a3      	strh	r3, [r4, #12]
 8014a70:	6126      	str	r6, [r4, #16]
 8014a72:	f7fc fcb3 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014a76:	4658      	mov	r0, fp
 8014a78:	b002      	add	sp, #8
 8014a7a:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 8014a7e:	bf00      	nop
 8014a80:	0801f3a0 	.word	0x0801f3a0

08014a84 <GUI_USAGE_DecUseCnt>:
 8014a84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014a86:	4605      	mov	r5, r0
 8014a88:	f7fc fc9a 	bl	80113c0 <GUI_ALLOC_LockH>
 8014a8c:	4602      	mov	r2, r0
 8014a8e:	a802      	add	r0, sp, #8
 8014a90:	8994      	ldrh	r4, [r2, #12]
 8014a92:	f840 2d04 	str.w	r2, [r0, #-4]!
 8014a96:	3c01      	subs	r4, #1
 8014a98:	b2a4      	uxth	r4, r4
 8014a9a:	8194      	strh	r4, [r2, #12]
 8014a9c:	f7fc fc9e 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014aa0:	b914      	cbnz	r4, 8014aa8 <GUI_USAGE_DecUseCnt+0x24>
 8014aa2:	4628      	mov	r0, r5
 8014aa4:	f7fc fcc6 	bl	8011434 <GUI_ALLOC_Free>
 8014aa8:	b003      	add	sp, #12
 8014aaa:	bd30      	pop	{r4, r5, pc}

08014aac <GUI_USAGE_AddRect>:
 8014aac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014ab0:	4605      	mov	r5, r0
 8014ab2:	4688      	mov	r8, r1
 8014ab4:	4617      	mov	r7, r2
 8014ab6:	4699      	mov	r9, r3
 8014ab8:	68a8      	ldr	r0, [r5, #8]
 8014aba:	464b      	mov	r3, r9
 8014abc:	6846      	ldr	r6, [r0, #4]
 8014abe:	4641      	mov	r1, r8
 8014ac0:	4628      	mov	r0, r5
 8014ac2:	1c54      	adds	r4, r2, #1
 8014ac4:	47b0      	blx	r6
 8014ac6:	9b08      	ldr	r3, [sp, #32]
 8014ac8:	443b      	add	r3, r7
 8014aca:	42a3      	cmp	r3, r4
 8014acc:	d001      	beq.n	8014ad2 <GUI_USAGE_AddRect+0x26>
 8014ace:	4622      	mov	r2, r4
 8014ad0:	e7f2      	b.n	8014ab8 <GUI_USAGE_AddRect+0xc>
 8014ad2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

08014ad8 <GUI_MEMDEV_ReduceYSize>:
 8014ad8:	b513      	push	{r0, r1, r4, lr}
 8014ada:	460c      	mov	r4, r1
 8014adc:	b918      	cbnz	r0, 8014ae6 <GUI_MEMDEV_ReduceYSize+0xe>
 8014ade:	4b08      	ldr	r3, [pc, #32]	; (8014b00 <GUI_MEMDEV_ReduceYSize+0x28>)
 8014ae0:	681b      	ldr	r3, [r3, #0]
 8014ae2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014ae4:	b150      	cbz	r0, 8014afc <GUI_MEMDEV_ReduceYSize+0x24>
 8014ae6:	f7fc fc6b 	bl	80113c0 <GUI_ALLOC_LockH>
 8014aea:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014aee:	9001      	str	r0, [sp, #4]
 8014af0:	429c      	cmp	r4, r3
 8014af2:	bfb8      	it	lt
 8014af4:	8144      	strhlt	r4, [r0, #10]
 8014af6:	a801      	add	r0, sp, #4
 8014af8:	f7fc fc70 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014afc:	b002      	add	sp, #8
 8014afe:	bd10      	pop	{r4, pc}
 8014b00:	2000016c 	.word	0x2000016c

08014b04 <GUI_MEMDEV_Clear>:
 8014b04:	b513      	push	{r0, r1, r4, lr}
 8014b06:	b918      	cbnz	r0, 8014b10 <GUI_MEMDEV_Clear+0xc>
 8014b08:	4b0d      	ldr	r3, [pc, #52]	; (8014b40 <GUI_MEMDEV_Clear+0x3c>)
 8014b0a:	681b      	ldr	r3, [r3, #0]
 8014b0c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014b0e:	b1a8      	cbz	r0, 8014b3c <GUI_MEMDEV_Clear+0x38>
 8014b10:	f7fc fc56 	bl	80113c0 <GUI_ALLOC_LockH>
 8014b14:	ab02      	add	r3, sp, #8
 8014b16:	6944      	ldr	r4, [r0, #20]
 8014b18:	f843 0d08 	str.w	r0, [r3, #-8]!
 8014b1c:	4668      	mov	r0, sp
 8014b1e:	f7fc fc5d 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014b22:	b15c      	cbz	r4, 8014b3c <GUI_MEMDEV_Clear+0x38>
 8014b24:	4620      	mov	r0, r4
 8014b26:	f7fc fc4b 	bl	80113c0 <GUI_ALLOC_LockH>
 8014b2a:	ac02      	add	r4, sp, #8
 8014b2c:	6883      	ldr	r3, [r0, #8]
 8014b2e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8014b32:	689b      	ldr	r3, [r3, #8]
 8014b34:	4798      	blx	r3
 8014b36:	4620      	mov	r0, r4
 8014b38:	f7fc fc50 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014b3c:	b002      	add	sp, #8
 8014b3e:	bd10      	pop	{r4, pc}
 8014b40:	2000016c 	.word	0x2000016c

08014b44 <_GetDevData>:
 8014b44:	4802      	ldr	r0, [pc, #8]	; (8014b50 <_GetDevData+0xc>)
 8014b46:	2901      	cmp	r1, #1
 8014b48:	bf18      	it	ne
 8014b4a:	2000      	movne	r0, #0
 8014b4c:	4770      	bx	lr
 8014b4e:	bf00      	nop
 8014b50:	0801f3f8 	.word	0x0801f3f8

08014b54 <_GetDevFunc>:
 8014b54:	4802      	ldr	r0, [pc, #8]	; (8014b60 <_GetDevFunc+0xc>)
 8014b56:	2916      	cmp	r1, #22
 8014b58:	bf18      	it	ne
 8014b5a:	2000      	movne	r0, #0
 8014b5c:	4770      	bx	lr
 8014b5e:	bf00      	nop
 8014b60:	08013fc5 	.word	0x08013fc5

08014b64 <_SetOrg>:
 8014b64:	6800      	ldr	r0, [r0, #0]
 8014b66:	b508      	push	{r3, lr}
 8014b68:	b110      	cbz	r0, 8014b70 <_SetOrg+0xc>
 8014b6a:	68c3      	ldr	r3, [r0, #12]
 8014b6c:	6a1b      	ldr	r3, [r3, #32]
 8014b6e:	4798      	blx	r3
 8014b70:	bd08      	pop	{r3, pc}

08014b72 <_GetDevProp>:
 8014b72:	6800      	ldr	r0, [r0, #0]
 8014b74:	b508      	push	{r3, lr}
 8014b76:	b118      	cbz	r0, 8014b80 <_GetDevProp+0xe>
 8014b78:	68c3      	ldr	r3, [r0, #12]
 8014b7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014b7c:	4798      	blx	r3
 8014b7e:	bd08      	pop	{r3, pc}
 8014b80:	f04f 30ff 	mov.w	r0, #4294967295
 8014b84:	bd08      	pop	{r3, pc}

08014b86 <_GetRect>:
 8014b86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014b88:	6880      	ldr	r0, [r0, #8]
 8014b8a:	460c      	mov	r4, r1
 8014b8c:	f7fc fc18 	bl	80113c0 <GUI_ALLOC_LockH>
 8014b90:	4603      	mov	r3, r0
 8014b92:	a802      	add	r0, sp, #8
 8014b94:	8899      	ldrh	r1, [r3, #4]
 8014b96:	88da      	ldrh	r2, [r3, #6]
 8014b98:	891d      	ldrh	r5, [r3, #8]
 8014b9a:	f840 3d04 	str.w	r3, [r0, #-4]!
 8014b9e:	895b      	ldrh	r3, [r3, #10]
 8014ba0:	8021      	strh	r1, [r4, #0]
 8014ba2:	8062      	strh	r2, [r4, #2]
 8014ba4:	4429      	add	r1, r5
 8014ba6:	441a      	add	r2, r3
 8014ba8:	3901      	subs	r1, #1
 8014baa:	3a01      	subs	r2, #1
 8014bac:	80a1      	strh	r1, [r4, #4]
 8014bae:	80e2      	strh	r2, [r4, #6]
 8014bb0:	f7fc fc14 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014bb4:	b003      	add	sp, #12
 8014bb6:	bd30      	pop	{r4, r5, pc}

08014bb8 <_XY2PTR>:
 8014bb8:	4b0e      	ldr	r3, [pc, #56]	; (8014bf4 <_XY2PTR+0x3c>)
 8014bba:	681b      	ldr	r3, [r3, #0]
 8014bbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014bbe:	4605      	mov	r5, r0
 8014bc0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014bc2:	460e      	mov	r6, r1
 8014bc4:	f7fc fbfc 	bl	80113c0 <GUI_ALLOC_LockH>
 8014bc8:	4603      	mov	r3, r0
 8014bca:	a802      	add	r0, sp, #8
 8014bcc:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8014bd0:	f840 3d04 	str.w	r3, [r0, #-4]!
 8014bd4:	f103 0118 	add.w	r1, r3, #24
 8014bd8:	1b36      	subs	r6, r6, r4
 8014bda:	68dc      	ldr	r4, [r3, #12]
 8014bdc:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8014be0:	fb04 1406 	mla	r4, r4, r6, r1
 8014be4:	1aed      	subs	r5, r5, r3
 8014be6:	f7fc fbf9 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014bea:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8014bee:	4620      	mov	r0, r4
 8014bf0:	b002      	add	sp, #8
 8014bf2:	bd70      	pop	{r4, r5, r6, pc}
 8014bf4:	2000016c 	.word	0x2000016c

08014bf8 <_GetPixelIndex>:
 8014bf8:	b508      	push	{r3, lr}
 8014bfa:	4608      	mov	r0, r1
 8014bfc:	4611      	mov	r1, r2
 8014bfe:	f7ff ffdb 	bl	8014bb8 <_XY2PTR>
 8014c02:	8800      	ldrh	r0, [r0, #0]
 8014c04:	bd08      	pop	{r3, pc}
	...

08014c08 <_XorPixel>:
 8014c08:	4b14      	ldr	r3, [pc, #80]	; (8014c5c <_XorPixel+0x54>)
 8014c0a:	681b      	ldr	r3, [r3, #0]
 8014c0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014c0e:	4607      	mov	r7, r0
 8014c10:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014c12:	4615      	mov	r5, r2
 8014c14:	460e      	mov	r6, r1
 8014c16:	f7fc fbd3 	bl	80113c0 <GUI_ALLOC_LockH>
 8014c1a:	4629      	mov	r1, r5
 8014c1c:	9000      	str	r0, [sp, #0]
 8014c1e:	4630      	mov	r0, r6
 8014c20:	f7ff ffca 	bl	8014bb8 <_XY2PTR>
 8014c24:	693b      	ldr	r3, [r7, #16]
 8014c26:	4604      	mov	r4, r0
 8014c28:	689b      	ldr	r3, [r3, #8]
 8014c2a:	4798      	blx	r3
 8014c2c:	8823      	ldrh	r3, [r4, #0]
 8014c2e:	4058      	eors	r0, r3
 8014c30:	9b00      	ldr	r3, [sp, #0]
 8014c32:	8020      	strh	r0, [r4, #0]
 8014c34:	6958      	ldr	r0, [r3, #20]
 8014c36:	b160      	cbz	r0, 8014c52 <_XorPixel+0x4a>
 8014c38:	f7fc fbc2 	bl	80113c0 <GUI_ALLOC_LockH>
 8014c3c:	ac02      	add	r4, sp, #8
 8014c3e:	6883      	ldr	r3, [r0, #8]
 8014c40:	f844 0d04 	str.w	r0, [r4, #-4]!
 8014c44:	681b      	ldr	r3, [r3, #0]
 8014c46:	4631      	mov	r1, r6
 8014c48:	462a      	mov	r2, r5
 8014c4a:	4798      	blx	r3
 8014c4c:	4620      	mov	r0, r4
 8014c4e:	f7fc fbc5 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014c52:	4668      	mov	r0, sp
 8014c54:	f7fc fbc2 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014c58:	b003      	add	sp, #12
 8014c5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014c5c:	2000016c 	.word	0x2000016c

08014c60 <_SetPixelIndex>:
 8014c60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014c62:	461c      	mov	r4, r3
 8014c64:	4b10      	ldr	r3, [pc, #64]	; (8014ca8 <_SetPixelIndex+0x48>)
 8014c66:	681b      	ldr	r3, [r3, #0]
 8014c68:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014c6a:	460e      	mov	r6, r1
 8014c6c:	4615      	mov	r5, r2
 8014c6e:	f7fc fba7 	bl	80113c0 <GUI_ALLOC_LockH>
 8014c72:	4629      	mov	r1, r5
 8014c74:	9000      	str	r0, [sp, #0]
 8014c76:	4630      	mov	r0, r6
 8014c78:	f7ff ff9e 	bl	8014bb8 <_XY2PTR>
 8014c7c:	9b00      	ldr	r3, [sp, #0]
 8014c7e:	8004      	strh	r4, [r0, #0]
 8014c80:	6958      	ldr	r0, [r3, #20]
 8014c82:	b160      	cbz	r0, 8014c9e <_SetPixelIndex+0x3e>
 8014c84:	f7fc fb9c 	bl	80113c0 <GUI_ALLOC_LockH>
 8014c88:	ac02      	add	r4, sp, #8
 8014c8a:	6883      	ldr	r3, [r0, #8]
 8014c8c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8014c90:	681b      	ldr	r3, [r3, #0]
 8014c92:	4631      	mov	r1, r6
 8014c94:	462a      	mov	r2, r5
 8014c96:	4798      	blx	r3
 8014c98:	4620      	mov	r0, r4
 8014c9a:	f7fc fb9f 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014c9e:	4668      	mov	r0, sp
 8014ca0:	f7fc fb9c 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014ca4:	b002      	add	sp, #8
 8014ca6:	bd70      	pop	{r4, r5, r6, pc}
 8014ca8:	2000016c 	.word	0x2000016c

08014cac <_DrawVLine>:
 8014cac:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8014cb0:	4d2c      	ldr	r5, [pc, #176]	; (8014d64 <_DrawVLine+0xb8>)
 8014cb2:	461e      	mov	r6, r3
 8014cb4:	682b      	ldr	r3, [r5, #0]
 8014cb6:	4681      	mov	r9, r0
 8014cb8:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014cba:	460f      	mov	r7, r1
 8014cbc:	4614      	mov	r4, r2
 8014cbe:	f7fc fb7f 	bl	80113c0 <GUI_ALLOC_LockH>
 8014cc2:	9000      	str	r0, [sp, #0]
 8014cc4:	6940      	ldr	r0, [r0, #20]
 8014cc6:	46aa      	mov	sl, r5
 8014cc8:	b108      	cbz	r0, 8014cce <_DrawVLine+0x22>
 8014cca:	f7fc fb79 	bl	80113c0 <GUI_ALLOC_LockH>
 8014cce:	9001      	str	r0, [sp, #4]
 8014cd0:	4621      	mov	r1, r4
 8014cd2:	4638      	mov	r0, r7
 8014cd4:	f7ff ff70 	bl	8014bb8 <_XY2PTR>
 8014cd8:	9b00      	ldr	r3, [sp, #0]
 8014cda:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8014cde:	f8da 3000 	ldr.w	r3, [sl]
 8014ce2:	7c1a      	ldrb	r2, [r3, #16]
 8014ce4:	07d2      	lsls	r2, r2, #31
 8014ce6:	4605      	mov	r5, r0
 8014ce8:	d51f      	bpl.n	8014d2a <_DrawVLine+0x7e>
 8014cea:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8014cee:	689b      	ldr	r3, [r3, #8]
 8014cf0:	4798      	blx	r3
 8014cf2:	fa1f f880 	uxth.w	r8, r0
 8014cf6:	9801      	ldr	r0, [sp, #4]
 8014cf8:	b120      	cbz	r0, 8014d04 <_DrawVLine+0x58>
 8014cfa:	6883      	ldr	r3, [r0, #8]
 8014cfc:	4639      	mov	r1, r7
 8014cfe:	681b      	ldr	r3, [r3, #0]
 8014d00:	4622      	mov	r2, r4
 8014d02:	4798      	blx	r3
 8014d04:	882b      	ldrh	r3, [r5, #0]
 8014d06:	ea88 0303 	eor.w	r3, r8, r3
 8014d0a:	802b      	strh	r3, [r5, #0]
 8014d0c:	9b00      	ldr	r3, [sp, #0]
 8014d0e:	3401      	adds	r4, #1
 8014d10:	68db      	ldr	r3, [r3, #12]
 8014d12:	42b4      	cmp	r4, r6
 8014d14:	441d      	add	r5, r3
 8014d16:	ddee      	ble.n	8014cf6 <_DrawVLine+0x4a>
 8014d18:	4668      	mov	r0, sp
 8014d1a:	f7fc fb5f 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014d1e:	9b01      	ldr	r3, [sp, #4]
 8014d20:	b1eb      	cbz	r3, 8014d5e <_DrawVLine+0xb2>
 8014d22:	a801      	add	r0, sp, #4
 8014d24:	f7fc fb5a 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014d28:	e019      	b.n	8014d5e <_DrawVLine+0xb2>
 8014d2a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014d2c:	f8d3 9000 	ldr.w	r9, [r3]
 8014d30:	9b01      	ldr	r3, [sp, #4]
 8014d32:	b163      	cbz	r3, 8014d4e <_DrawVLine+0xa2>
 8014d34:	9801      	ldr	r0, [sp, #4]
 8014d36:	6883      	ldr	r3, [r0, #8]
 8014d38:	4622      	mov	r2, r4
 8014d3a:	681b      	ldr	r3, [r3, #0]
 8014d3c:	4639      	mov	r1, r7
 8014d3e:	3401      	adds	r4, #1
 8014d40:	4798      	blx	r3
 8014d42:	42b4      	cmp	r4, r6
 8014d44:	f8a5 9000 	strh.w	r9, [r5]
 8014d48:	4445      	add	r5, r8
 8014d4a:	ddf3      	ble.n	8014d34 <_DrawVLine+0x88>
 8014d4c:	e7e4      	b.n	8014d18 <_DrawVLine+0x6c>
 8014d4e:	1b34      	subs	r4, r6, r4
 8014d50:	3401      	adds	r4, #1
 8014d52:	3c01      	subs	r4, #1
 8014d54:	f8a5 9000 	strh.w	r9, [r5]
 8014d58:	4445      	add	r5, r8
 8014d5a:	d1fa      	bne.n	8014d52 <_DrawVLine+0xa6>
 8014d5c:	e7dc      	b.n	8014d18 <_DrawVLine+0x6c>
 8014d5e:	b002      	add	sp, #8
 8014d60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014d64:	2000016c 	.word	0x2000016c

08014d68 <_FillRect>:
 8014d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d6c:	4f2a      	ldr	r7, [pc, #168]	; (8014e18 <_FillRect+0xb0>)
 8014d6e:	4614      	mov	r4, r2
 8014d70:	683a      	ldr	r2, [r7, #0]
 8014d72:	4698      	mov	r8, r3
 8014d74:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8014d76:	b087      	sub	sp, #28
 8014d78:	681b      	ldr	r3, [r3, #0]
 8014d7a:	9302      	str	r3, [sp, #8]
 8014d7c:	4682      	mov	sl, r0
 8014d7e:	6e10      	ldr	r0, [r2, #96]	; 0x60
 8014d80:	460e      	mov	r6, r1
 8014d82:	f7fc fb1d 	bl	80113c0 <GUI_ALLOC_LockH>
 8014d86:	4621      	mov	r1, r4
 8014d88:	9004      	str	r0, [sp, #16]
 8014d8a:	4630      	mov	r0, r6
 8014d8c:	f7ff ff14 	bl	8014bb8 <_XY2PTR>
 8014d90:	9a04      	ldr	r2, [sp, #16]
 8014d92:	4605      	mov	r5, r0
 8014d94:	6950      	ldr	r0, [r2, #20]
 8014d96:	68d3      	ldr	r3, [r2, #12]
 8014d98:	9303      	str	r3, [sp, #12]
 8014d9a:	ebc6 0908 	rsb	r9, r6, r8
 8014d9e:	f109 0801 	add.w	r8, r9, #1
 8014da2:	46bb      	mov	fp, r7
 8014da4:	b180      	cbz	r0, 8014dc8 <_FillRect+0x60>
 8014da6:	f7fc fb0b 	bl	80113c0 <GUI_ALLOC_LockH>
 8014daa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014dac:	af06      	add	r7, sp, #24
 8014dae:	1b13      	subs	r3, r2, r4
 8014db0:	f847 0d04 	str.w	r0, [r7, #-4]!
 8014db4:	3301      	adds	r3, #1
 8014db6:	9300      	str	r3, [sp, #0]
 8014db8:	4631      	mov	r1, r6
 8014dba:	4622      	mov	r2, r4
 8014dbc:	4643      	mov	r3, r8
 8014dbe:	f7ff fe75 	bl	8014aac <GUI_USAGE_AddRect>
 8014dc2:	4638      	mov	r0, r7
 8014dc4:	f7fc fb0a 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014dc8:	ea4f 0649 	mov.w	r6, r9, lsl #1
 8014dcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014dce:	429c      	cmp	r4, r3
 8014dd0:	dc1c      	bgt.n	8014e0c <_FillRect+0xa4>
 8014dd2:	f8db 3000 	ldr.w	r3, [fp]
 8014dd6:	7c1b      	ldrb	r3, [r3, #16]
 8014dd8:	07db      	lsls	r3, r3, #31
 8014dda:	d50d      	bpl.n	8014df8 <_FillRect+0x90>
 8014ddc:	f8da 3010 	ldr.w	r3, [sl, #16]
 8014de0:	689b      	ldr	r3, [r3, #8]
 8014de2:	4798      	blx	r3
 8014de4:	19aa      	adds	r2, r5, r6
 8014de6:	b280      	uxth	r0, r0
 8014de8:	1eab      	subs	r3, r5, #2
 8014dea:	8859      	ldrh	r1, [r3, #2]
 8014dec:	4041      	eors	r1, r0
 8014dee:	f823 1f02 	strh.w	r1, [r3, #2]!
 8014df2:	4293      	cmp	r3, r2
 8014df4:	d1f9      	bne.n	8014dea <_FillRect+0x82>
 8014df6:	e005      	b.n	8014e04 <_FillRect+0x9c>
 8014df8:	9b02      	ldr	r3, [sp, #8]
 8014dfa:	4628      	mov	r0, r5
 8014dfc:	b299      	uxth	r1, r3
 8014dfe:	4642      	mov	r2, r8
 8014e00:	f7f9 ff0a 	bl	800ec18 <GUI__memset16>
 8014e04:	9a03      	ldr	r2, [sp, #12]
 8014e06:	3401      	adds	r4, #1
 8014e08:	4415      	add	r5, r2
 8014e0a:	e7df      	b.n	8014dcc <_FillRect+0x64>
 8014e0c:	a804      	add	r0, sp, #16
 8014e0e:	f7fc fae5 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014e12:	b007      	add	sp, #28
 8014e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e18:	2000016c 	.word	0x2000016c

08014e1c <_DrawHLine>:
 8014e1c:	b507      	push	{r0, r1, r2, lr}
 8014e1e:	9200      	str	r2, [sp, #0]
 8014e20:	f7ff ffa2 	bl	8014d68 <_FillRect>
 8014e24:	b003      	add	sp, #12
 8014e26:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014e2c <_DrawBitmap>:
 8014e2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e30:	4c8a      	ldr	r4, [pc, #552]	; (801505c <_DrawBitmap+0x230>)
 8014e32:	b093      	sub	sp, #76	; 0x4c
 8014e34:	469b      	mov	fp, r3
 8014e36:	6823      	ldr	r3, [r4, #0]
 8014e38:	900d      	str	r0, [sp, #52]	; 0x34
 8014e3a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014e3c:	9207      	str	r2, [sp, #28]
 8014e3e:	460d      	mov	r5, r1
 8014e40:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 8014e44:	f7fc fabc 	bl	80113c0 <GUI_ALLOC_LockH>
 8014e48:	9010      	str	r0, [sp, #64]	; 0x40
 8014e4a:	6940      	ldr	r0, [r0, #20]
 8014e4c:	b108      	cbz	r0, 8014e52 <_DrawBitmap+0x26>
 8014e4e:	f7fc fab7 	bl	80113c0 <GUI_ALLOC_LockH>
 8014e52:	9011      	str	r0, [sp, #68]	; 0x44
 8014e54:	a812      	add	r0, sp, #72	; 0x48
 8014e56:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8014e5a:	68db      	ldr	r3, [r3, #12]
 8014e5c:	9308      	str	r3, [sp, #32]
 8014e5e:	f7fc fabd 	bl	80113dc <GUI_ALLOC_UnlockH>
 8014e62:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8014e64:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014e66:	442e      	add	r6, r5
 8014e68:	9604      	str	r6, [sp, #16]
 8014e6a:	b150      	cbz	r0, 8014e82 <_DrawBitmap+0x56>
 8014e6c:	6823      	ldr	r3, [r4, #0]
 8014e6e:	7c1b      	ldrb	r3, [r3, #16]
 8014e70:	0799      	lsls	r1, r3, #30
 8014e72:	d106      	bne.n	8014e82 <_DrawBitmap+0x56>
 8014e74:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8014e76:	9700      	str	r7, [sp, #0]
 8014e78:	4631      	mov	r1, r6
 8014e7a:	9a07      	ldr	r2, [sp, #28]
 8014e7c:	465b      	mov	r3, fp
 8014e7e:	f7ff fe15 	bl	8014aac <GUI_USAGE_AddRect>
 8014e82:	9804      	ldr	r0, [sp, #16]
 8014e84:	9907      	ldr	r1, [sp, #28]
 8014e86:	f7ff fe97 	bl	8014bb8 <_XY2PTR>
 8014e8a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8014e8c:	2e10      	cmp	r6, #16
 8014e8e:	4604      	mov	r4, r0
 8014e90:	d139      	bne.n	8014f06 <_DrawBitmap+0xda>
 8014e92:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014e94:	b11b      	cbz	r3, 8014e9e <_DrawBitmap+0x72>
 8014e96:	ea4f 064b 	mov.w	r6, fp, lsl #1
 8014e9a:	2500      	movs	r5, #0
 8014e9c:	e014      	b.n	8014ec8 <_DrawBitmap+0x9c>
 8014e9e:	4b70      	ldr	r3, [pc, #448]	; (8015060 <_DrawBitmap+0x234>)
 8014ea0:	681d      	ldr	r5, [r3, #0]
 8014ea2:	2d00      	cmp	r5, #0
 8014ea4:	d0f7      	beq.n	8014e96 <_DrawBitmap+0x6a>
 8014ea6:	9e08      	ldr	r6, [sp, #32]
 8014ea8:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8014eaa:	9600      	str	r6, [sp, #0]
 8014eac:	9701      	str	r7, [sp, #4]
 8014eae:	4651      	mov	r1, sl
 8014eb0:	465a      	mov	r2, fp
 8014eb2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014eb4:	47a8      	blx	r5
 8014eb6:	e345      	b.n	8015544 <_DrawBitmap+0x718>
 8014eb8:	f1ba 0f00 	cmp.w	sl, #0
 8014ebc:	d10a      	bne.n	8014ed4 <_DrawBitmap+0xa8>
 8014ebe:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8014ec0:	44ba      	add	sl, r7
 8014ec2:	9f08      	ldr	r7, [sp, #32]
 8014ec4:	3501      	adds	r5, #1
 8014ec6:	443c      	add	r4, r7
 8014ec8:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8014eca:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 8014ece:	42bd      	cmp	r5, r7
 8014ed0:	dbf2      	blt.n	8014eb8 <_DrawBitmap+0x8c>
 8014ed2:	e013      	b.n	8014efc <_DrawBitmap+0xd0>
 8014ed4:	2c00      	cmp	r4, #0
 8014ed6:	d0f2      	beq.n	8014ebe <_DrawBitmap+0x92>
 8014ed8:	4620      	mov	r0, r4
 8014eda:	4651      	mov	r1, sl
 8014edc:	4632      	mov	r2, r6
 8014ede:	f003 ff28 	bl	8018d32 <memcpy>
 8014ee2:	f1b8 0f00 	cmp.w	r8, #0
 8014ee6:	d0ea      	beq.n	8014ebe <_DrawBitmap+0x92>
 8014ee8:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8014eec:	9a07      	ldr	r2, [sp, #28]
 8014eee:	685f      	ldr	r7, [r3, #4]
 8014ef0:	9904      	ldr	r1, [sp, #16]
 8014ef2:	4640      	mov	r0, r8
 8014ef4:	442a      	add	r2, r5
 8014ef6:	465b      	mov	r3, fp
 8014ef8:	47b8      	blx	r7
 8014efa:	e7e0      	b.n	8014ebe <_DrawBitmap+0x92>
 8014efc:	f1b8 0f00 	cmp.w	r8, #0
 8014f00:	f040 831d 	bne.w	801553e <_DrawBitmap+0x712>
 8014f04:	e31e      	b.n	8015544 <_DrawBitmap+0x718>
 8014f06:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8014f08:	2e17      	cmp	r6, #23
 8014f0a:	dd38      	ble.n	8014f7e <_DrawBitmap+0x152>
 8014f0c:	2600      	movs	r6, #0
 8014f0e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8014f10:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014f12:	42be      	cmp	r6, r7
 8014f14:	f280 809d 	bge.w	8015052 <_DrawBitmap+0x226>
 8014f18:	9f07      	ldr	r7, [sp, #28]
 8014f1a:	4437      	add	r7, r6
 8014f1c:	f1ba 0f00 	cmp.w	sl, #0
 8014f20:	d027      	beq.n	8014f72 <_DrawBitmap+0x146>
 8014f22:	b334      	cbz	r4, 8014f72 <_DrawBitmap+0x146>
 8014f24:	b13d      	cbz	r5, 8014f36 <_DrawBitmap+0x10a>
 8014f26:	68ab      	ldr	r3, [r5, #8]
 8014f28:	9904      	ldr	r1, [sp, #16]
 8014f2a:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8014f2e:	4628      	mov	r0, r5
 8014f30:	463a      	mov	r2, r7
 8014f32:	465b      	mov	r3, fp
 8014f34:	47e0      	blx	ip
 8014f36:	1ea3      	subs	r3, r4, #2
 8014f38:	f1aa 0904 	sub.w	r9, sl, #4
 8014f3c:	9303      	str	r3, [sp, #12]
 8014f3e:	46d8      	mov	r8, fp
 8014f40:	9b04      	ldr	r3, [sp, #16]
 8014f42:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014f44:	445b      	add	r3, fp
 8014f46:	ebc8 0103 	rsb	r1, r8, r3
 8014f4a:	6903      	ldr	r3, [r0, #16]
 8014f4c:	f859 0f04 	ldr.w	r0, [r9, #4]!
 8014f50:	681b      	ldr	r3, [r3, #0]
 8014f52:	9102      	str	r1, [sp, #8]
 8014f54:	4798      	blx	r3
 8014f56:	9b03      	ldr	r3, [sp, #12]
 8014f58:	9902      	ldr	r1, [sp, #8]
 8014f5a:	f823 0f02 	strh.w	r0, [r3, #2]!
 8014f5e:	9303      	str	r3, [sp, #12]
 8014f60:	b125      	cbz	r5, 8014f6c <_DrawBitmap+0x140>
 8014f62:	68ab      	ldr	r3, [r5, #8]
 8014f64:	4628      	mov	r0, r5
 8014f66:	681b      	ldr	r3, [r3, #0]
 8014f68:	463a      	mov	r2, r7
 8014f6a:	4798      	blx	r3
 8014f6c:	f1b8 0801 	subs.w	r8, r8, #1
 8014f70:	d1e6      	bne.n	8014f40 <_DrawBitmap+0x114>
 8014f72:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8014f74:	44ba      	add	sl, r7
 8014f76:	9f08      	ldr	r7, [sp, #32]
 8014f78:	3601      	adds	r6, #1
 8014f7a:	443c      	add	r4, r7
 8014f7c:	e7c7      	b.n	8014f0e <_DrawBitmap+0xe2>
 8014f7e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8014f80:	2e08      	cmp	r6, #8
 8014f82:	f100 0402 	add.w	r4, r0, #2
 8014f86:	d16d      	bne.n	8015064 <_DrawBitmap+0x238>
 8014f88:	9e07      	ldr	r6, [sp, #28]
 8014f8a:	9f07      	ldr	r7, [sp, #28]
 8014f8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014f8e:	1bf3      	subs	r3, r6, r7
 8014f90:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8014f92:	42bb      	cmp	r3, r7
 8014f94:	f1a4 0002 	sub.w	r0, r4, #2
 8014f98:	da5b      	bge.n	8015052 <_DrawBitmap+0x226>
 8014f9a:	4b30      	ldr	r3, [pc, #192]	; (801505c <_DrawBitmap+0x230>)
 8014f9c:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8014f9e:	681b      	ldr	r3, [r3, #0]
 8014fa0:	7c1b      	ldrb	r3, [r3, #16]
 8014fa2:	b367      	cbz	r7, 8014ffe <_DrawBitmap+0x1d2>
 8014fa4:	f013 0303 	ands.w	r3, r3, #3
 8014fa8:	d004      	beq.n	8014fb4 <_DrawBitmap+0x188>
 8014faa:	2b02      	cmp	r3, #2
 8014fac:	d14b      	bne.n	8015046 <_DrawBitmap+0x21a>
 8014fae:	46a0      	mov	r8, r4
 8014fb0:	9f04      	ldr	r7, [sp, #16]
 8014fb2:	e01d      	b.n	8014ff0 <_DrawBitmap+0x1c4>
 8014fb4:	f81a 2003 	ldrb.w	r2, [sl, r3]
 8014fb8:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8014fba:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8014fbe:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 8014fc2:	3301      	adds	r3, #1
 8014fc4:	455b      	cmp	r3, fp
 8014fc6:	d1f5      	bne.n	8014fb4 <_DrawBitmap+0x188>
 8014fc8:	e03d      	b.n	8015046 <_DrawBitmap+0x21a>
 8014fca:	9921      	ldr	r1, [sp, #132]	; 0x84
 8014fcc:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8014fd0:	f828 3c02 	strh.w	r3, [r8, #-2]
 8014fd4:	b12d      	cbz	r5, 8014fe2 <_DrawBitmap+0x1b6>
 8014fd6:	68ab      	ldr	r3, [r5, #8]
 8014fd8:	4628      	mov	r0, r5
 8014fda:	681b      	ldr	r3, [r3, #0]
 8014fdc:	4639      	mov	r1, r7
 8014fde:	4632      	mov	r2, r6
 8014fe0:	4798      	blx	r3
 8014fe2:	9b04      	ldr	r3, [sp, #16]
 8014fe4:	3701      	adds	r7, #1
 8014fe6:	445b      	add	r3, fp
 8014fe8:	42bb      	cmp	r3, r7
 8014fea:	f108 0802 	add.w	r8, r8, #2
 8014fee:	d02a      	beq.n	8015046 <_DrawBitmap+0x21a>
 8014ff0:	9804      	ldr	r0, [sp, #16]
 8014ff2:	ebc0 030a 	rsb	r3, r0, sl
 8014ff6:	5ddb      	ldrb	r3, [r3, r7]
 8014ff8:	2b00      	cmp	r3, #0
 8014ffa:	d0f2      	beq.n	8014fe2 <_DrawBitmap+0x1b6>
 8014ffc:	e7e5      	b.n	8014fca <_DrawBitmap+0x19e>
 8014ffe:	f013 0303 	ands.w	r3, r3, #3
 8015002:	d004      	beq.n	801500e <_DrawBitmap+0x1e2>
 8015004:	2b02      	cmp	r3, #2
 8015006:	d11e      	bne.n	8015046 <_DrawBitmap+0x21a>
 8015008:	46a0      	mov	r8, r4
 801500a:	9f04      	ldr	r7, [sp, #16]
 801500c:	e014      	b.n	8015038 <_DrawBitmap+0x20c>
 801500e:	4651      	mov	r1, sl
 8015010:	465a      	mov	r2, fp
 8015012:	f003 fe8e 	bl	8018d32 <memcpy>
 8015016:	e016      	b.n	8015046 <_DrawBitmap+0x21a>
 8015018:	f828 3c02 	strh.w	r3, [r8, #-2]
 801501c:	b12d      	cbz	r5, 801502a <_DrawBitmap+0x1fe>
 801501e:	68ab      	ldr	r3, [r5, #8]
 8015020:	4628      	mov	r0, r5
 8015022:	681b      	ldr	r3, [r3, #0]
 8015024:	4639      	mov	r1, r7
 8015026:	4632      	mov	r2, r6
 8015028:	4798      	blx	r3
 801502a:	9b04      	ldr	r3, [sp, #16]
 801502c:	3701      	adds	r7, #1
 801502e:	445b      	add	r3, fp
 8015030:	42bb      	cmp	r3, r7
 8015032:	f108 0802 	add.w	r8, r8, #2
 8015036:	d006      	beq.n	8015046 <_DrawBitmap+0x21a>
 8015038:	9a04      	ldr	r2, [sp, #16]
 801503a:	ebc2 030a 	rsb	r3, r2, sl
 801503e:	5ddb      	ldrb	r3, [r3, r7]
 8015040:	2b00      	cmp	r3, #0
 8015042:	d0f2      	beq.n	801502a <_DrawBitmap+0x1fe>
 8015044:	e7e8      	b.n	8015018 <_DrawBitmap+0x1ec>
 8015046:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8015048:	44ba      	add	sl, r7
 801504a:	9f08      	ldr	r7, [sp, #32]
 801504c:	3601      	adds	r6, #1
 801504e:	443c      	add	r4, r7
 8015050:	e79b      	b.n	8014f8a <_DrawBitmap+0x15e>
 8015052:	2d00      	cmp	r5, #0
 8015054:	f040 8273 	bne.w	801553e <_DrawBitmap+0x712>
 8015058:	e274      	b.n	8015544 <_DrawBitmap+0x718>
 801505a:	bf00      	nop
 801505c:	2000016c 	.word	0x2000016c
 8015060:	200196ec 	.word	0x200196ec
 8015064:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8015066:	4bab      	ldr	r3, [pc, #684]	; (8015314 <_DrawBitmap+0x4e8>)
 8015068:	9f20      	ldr	r7, [sp, #128]	; 0x80
 801506a:	9409      	str	r4, [sp, #36]	; 0x24
 801506c:	2e00      	cmp	r6, #0
 801506e:	bf08      	it	eq
 8015070:	461e      	moveq	r6, r3
 8015072:	9621      	str	r6, [sp, #132]	; 0x84
 8015074:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8015076:	0076      	lsls	r6, r6, #1
 8015078:	960e      	str	r6, [sp, #56]	; 0x38
 801507a:	00bf      	lsls	r7, r7, #2
 801507c:	9e07      	ldr	r6, [sp, #28]
 801507e:	970f      	str	r7, [sp, #60]	; 0x3c
 8015080:	9605      	str	r6, [sp, #20]
 8015082:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015084:	9e05      	ldr	r6, [sp, #20]
 8015086:	9f07      	ldr	r7, [sp, #28]
 8015088:	1e9c      	subs	r4, r3, #2
 801508a:	1bf3      	subs	r3, r6, r7
 801508c:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 801508e:	42b3      	cmp	r3, r6
 8015090:	f280 8253 	bge.w	801553a <_DrawBitmap+0x70e>
 8015094:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8015096:	2f02      	cmp	r7, #2
 8015098:	f000 80d9 	beq.w	801524e <_DrawBitmap+0x422>
 801509c:	2f04      	cmp	r7, #4
 801509e:	f000 8178 	beq.w	8015392 <_DrawBitmap+0x566>
 80150a2:	2f01      	cmp	r7, #1
 80150a4:	f040 823f 	bne.w	8015526 <_DrawBitmap+0x6fa>
 80150a8:	f8df 9270 	ldr.w	r9, [pc, #624]	; 801531c <_DrawBitmap+0x4f0>
 80150ac:	f8d9 3000 	ldr.w	r3, [r9]
 80150b0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80150b2:	f7fc f985 	bl	80113c0 <GUI_ALLOC_LockH>
 80150b6:	f89a 3000 	ldrb.w	r3, [sl]
 80150ba:	4a97      	ldr	r2, [pc, #604]	; (8015318 <_DrawBitmap+0x4ec>)
 80150bc:	9010      	str	r0, [sp, #64]	; 0x40
 80150be:	5cd5      	ldrb	r5, [r2, r3]
 80150c0:	f8d9 3000 	ldr.w	r3, [r9]
 80150c4:	9820      	ldr	r0, [sp, #128]	; 0x80
 80150c6:	7c1b      	ldrb	r3, [r3, #16]
 80150c8:	9f11      	ldr	r7, [sp, #68]	; 0x44
 80150ca:	f003 0303 	and.w	r3, r3, #3
 80150ce:	2b02      	cmp	r3, #2
 80150d0:	465e      	mov	r6, fp
 80150d2:	f1c0 0808 	rsb	r8, r0, #8
 80150d6:	fa45 f500 	asr.w	r5, r5, r0
 80150da:	d022      	beq.n	8015122 <_DrawBitmap+0x2f6>
 80150dc:	2b03      	cmp	r3, #3
 80150de:	d062      	beq.n	80151a6 <_DrawBitmap+0x37a>
 80150e0:	2b01      	cmp	r3, #1
 80150e2:	d060      	beq.n	80151a6 <_DrawBitmap+0x37a>
 80150e4:	4652      	mov	r2, sl
 80150e6:	4546      	cmp	r6, r8
 80150e8:	bf38      	it	cc
 80150ea:	46b0      	movcc	r8, r6
 80150ec:	ebc8 0606 	rsb	r6, r8, r6
 80150f0:	4643      	mov	r3, r8
 80150f2:	4621      	mov	r1, r4
 80150f4:	f005 0001 	and.w	r0, r5, #1
 80150f8:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80150fa:	3b01      	subs	r3, #1
 80150fc:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8015100:	f821 0b02 	strh.w	r0, [r1], #2
 8015104:	ea4f 0555 	mov.w	r5, r5, lsr #1
 8015108:	d1f4      	bne.n	80150f4 <_DrawBitmap+0x2c8>
 801510a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 801510e:	2e00      	cmp	r6, #0
 8015110:	f000 8099 	beq.w	8015246 <_DrawBitmap+0x41a>
 8015114:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8015118:	497f      	ldr	r1, [pc, #508]	; (8015318 <_DrawBitmap+0x4ec>)
 801511a:	f04f 0808 	mov.w	r8, #8
 801511e:	5ccd      	ldrb	r5, [r1, r3]
 8015120:	e7e1      	b.n	80150e6 <_DrawBitmap+0x2ba>
 8015122:	9821      	ldr	r0, [sp, #132]	; 0x84
 8015124:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8015128:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 801512c:	f8cd a018 	str.w	sl, [sp, #24]
 8015130:	4546      	cmp	r6, r8
 8015132:	bf38      	it	cc
 8015134:	46b0      	movcc	r8, r6
 8015136:	ebc8 0606 	rsb	r6, r8, r6
 801513a:	b32f      	cbz	r7, 8015188 <_DrawBitmap+0x35c>
 801513c:	b91d      	cbnz	r5, 8015146 <_DrawBitmap+0x31a>
 801513e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8015142:	44c1      	add	r9, r8
 8015144:	e024      	b.n	8015190 <_DrawBitmap+0x364>
 8015146:	07ea      	lsls	r2, r5, #31
 8015148:	d50b      	bpl.n	8015162 <_DrawBitmap+0x336>
 801514a:	68bb      	ldr	r3, [r7, #8]
 801514c:	9a05      	ldr	r2, [sp, #20]
 801514e:	681b      	ldr	r3, [r3, #0]
 8015150:	f8cd c008 	str.w	ip, [sp, #8]
 8015154:	4638      	mov	r0, r7
 8015156:	4649      	mov	r1, r9
 8015158:	4798      	blx	r3
 801515a:	f8dd c008 	ldr.w	ip, [sp, #8]
 801515e:	f8a4 c000 	strh.w	ip, [r4]
 8015162:	f1b8 0801 	subs.w	r8, r8, #1
 8015166:	f109 0901 	add.w	r9, r9, #1
 801516a:	f104 0402 	add.w	r4, r4, #2
 801516e:	d00f      	beq.n	8015190 <_DrawBitmap+0x364>
 8015170:	086d      	lsrs	r5, r5, #1
 8015172:	e7e3      	b.n	801513c <_DrawBitmap+0x310>
 8015174:	07eb      	lsls	r3, r5, #31
 8015176:	bf48      	it	mi
 8015178:	f8a4 c000 	strhmi.w	ip, [r4]
 801517c:	f1b8 0801 	subs.w	r8, r8, #1
 8015180:	f104 0402 	add.w	r4, r4, #2
 8015184:	d004      	beq.n	8015190 <_DrawBitmap+0x364>
 8015186:	086d      	lsrs	r5, r5, #1
 8015188:	2d00      	cmp	r5, #0
 801518a:	d1f3      	bne.n	8015174 <_DrawBitmap+0x348>
 801518c:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8015190:	2e00      	cmp	r6, #0
 8015192:	d058      	beq.n	8015246 <_DrawBitmap+0x41a>
 8015194:	9906      	ldr	r1, [sp, #24]
 8015196:	4a60      	ldr	r2, [pc, #384]	; (8015318 <_DrawBitmap+0x4ec>)
 8015198:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 801519c:	9106      	str	r1, [sp, #24]
 801519e:	5cd5      	ldrb	r5, [r2, r3]
 80151a0:	f04f 0808 	mov.w	r8, #8
 80151a4:	e7c4      	b.n	8015130 <_DrawBitmap+0x304>
 80151a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80151a8:	6913      	ldr	r3, [r2, #16]
 80151aa:	689b      	ldr	r3, [r3, #8]
 80151ac:	4798      	blx	r3
 80151ae:	9b04      	ldr	r3, [sp, #16]
 80151b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80151b2:	b280      	uxth	r0, r0
 80151b4:	900a      	str	r0, [sp, #40]	; 0x28
 80151b6:	f10a 0901 	add.w	r9, sl, #1
 80151ba:	4546      	cmp	r6, r8
 80151bc:	bf38      	it	cc
 80151be:	46b0      	movcc	r8, r6
 80151c0:	ebc8 0606 	rsb	r6, r8, r6
 80151c4:	1ca3      	adds	r3, r4, #2
 80151c6:	b31f      	cbz	r7, 8015210 <_DrawBitmap+0x3e4>
 80151c8:	f8cd 8018 	str.w	r8, [sp, #24]
 80151cc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80151ce:	9a06      	ldr	r2, [sp, #24]
 80151d0:	4440      	add	r0, r8
 80151d2:	900c      	str	r0, [sp, #48]	; 0x30
 80151d4:	1a81      	subs	r1, r0, r2
 80151d6:	07e8      	lsls	r0, r5, #31
 80151d8:	d50d      	bpl.n	80151f6 <_DrawBitmap+0x3ca>
 80151da:	68ba      	ldr	r2, [r7, #8]
 80151dc:	4638      	mov	r0, r7
 80151de:	f8d2 c000 	ldr.w	ip, [r2]
 80151e2:	9a05      	ldr	r2, [sp, #20]
 80151e4:	9302      	str	r3, [sp, #8]
 80151e6:	47e0      	blx	ip
 80151e8:	9b02      	ldr	r3, [sp, #8]
 80151ea:	980a      	ldr	r0, [sp, #40]	; 0x28
 80151ec:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 80151f0:	4042      	eors	r2, r0
 80151f2:	f823 2c02 	strh.w	r2, [r3, #-2]
 80151f6:	9906      	ldr	r1, [sp, #24]
 80151f8:	3901      	subs	r1, #1
 80151fa:	ea4f 0555 	mov.w	r5, r5, lsr #1
 80151fe:	f103 0302 	add.w	r3, r3, #2
 8015202:	9106      	str	r1, [sp, #24]
 8015204:	d1e2      	bne.n	80151cc <_DrawBitmap+0x3a0>
 8015206:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015208:	930b      	str	r3, [sp, #44]	; 0x2c
 801520a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 801520e:	e010      	b.n	8015232 <_DrawBitmap+0x406>
 8015210:	4642      	mov	r2, r8
 8015212:	07e9      	lsls	r1, r5, #31
 8015214:	d505      	bpl.n	8015222 <_DrawBitmap+0x3f6>
 8015216:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 801521a:	980a      	ldr	r0, [sp, #40]	; 0x28
 801521c:	4041      	eors	r1, r0
 801521e:	f823 1c02 	strh.w	r1, [r3, #-2]
 8015222:	3a01      	subs	r2, #1
 8015224:	ea4f 0555 	mov.w	r5, r5, lsr #1
 8015228:	f103 0302 	add.w	r3, r3, #2
 801522c:	d1f1      	bne.n	8015212 <_DrawBitmap+0x3e6>
 801522e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8015232:	b146      	cbz	r6, 8015246 <_DrawBitmap+0x41a>
 8015234:	f899 3000 	ldrb.w	r3, [r9]
 8015238:	4a37      	ldr	r2, [pc, #220]	; (8015318 <_DrawBitmap+0x4ec>)
 801523a:	f109 0901 	add.w	r9, r9, #1
 801523e:	5cd5      	ldrb	r5, [r2, r3]
 8015240:	f04f 0808 	mov.w	r8, #8
 8015244:	e7b9      	b.n	80151ba <_DrawBitmap+0x38e>
 8015246:	a810      	add	r0, sp, #64	; 0x40
 8015248:	f7fc f8c8 	bl	80113dc <GUI_ALLOC_UnlockH>
 801524c:	e16b      	b.n	8015526 <_DrawBitmap+0x6fa>
 801524e:	4b33      	ldr	r3, [pc, #204]	; (801531c <_DrawBitmap+0x4f0>)
 8015250:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8015252:	681b      	ldr	r3, [r3, #0]
 8015254:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8015256:	7c1b      	ldrb	r3, [r3, #16]
 8015258:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 801525c:	f1c6 0504 	rsb	r5, r6, #4
 8015260:	f89a 6000 	ldrb.w	r6, [sl]
 8015264:	f003 0303 	and.w	r3, r3, #3
 8015268:	40be      	lsls	r6, r7
 801526a:	2b01      	cmp	r3, #1
 801526c:	b2ed      	uxtb	r5, r5
 801526e:	b2f6      	uxtb	r6, r6
 8015270:	d06a      	beq.n	8015348 <_DrawBitmap+0x51c>
 8015272:	d308      	bcc.n	8015286 <_DrawBitmap+0x45a>
 8015274:	2b02      	cmp	r3, #2
 8015276:	f040 8156 	bne.w	8015526 <_DrawBitmap+0x6fa>
 801527a:	f8cd a018 	str.w	sl, [sp, #24]
 801527e:	465f      	mov	r7, fp
 8015280:	f8dd c010 	ldr.w	ip, [sp, #16]
 8015284:	e03e      	b.n	8015304 <_DrawBitmap+0x4d8>
 8015286:	4652      	mov	r2, sl
 8015288:	465b      	mov	r3, fp
 801528a:	429d      	cmp	r5, r3
 801528c:	bfc8      	it	gt
 801528e:	b2dd      	uxtbgt	r5, r3
 8015290:	1b5b      	subs	r3, r3, r5
 8015292:	4629      	mov	r1, r5
 8015294:	4620      	mov	r0, r4
 8015296:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 801529a:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801529c:	3901      	subs	r1, #1
 801529e:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 80152a2:	f820 cb02 	strh.w	ip, [r0], #2
 80152a6:	00b6      	lsls	r6, r6, #2
 80152a8:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 80152ac:	b2f6      	uxtb	r6, r6
 80152ae:	d1f2      	bne.n	8015296 <_DrawBitmap+0x46a>
 80152b0:	3d01      	subs	r5, #1
 80152b2:	b2ed      	uxtb	r5, r5
 80152b4:	3501      	adds	r5, #1
 80152b6:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 80152ba:	2b00      	cmp	r3, #0
 80152bc:	f000 8133 	beq.w	8015526 <_DrawBitmap+0x6fa>
 80152c0:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 80152c4:	2504      	movs	r5, #4
 80152c6:	e7e0      	b.n	801528a <_DrawBitmap+0x45e>
 80152c8:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 80152cc:	eb08 010c 	add.w	r1, r8, ip
 80152d0:	d126      	bne.n	8015320 <_DrawBitmap+0x4f4>
 80152d2:	f108 0801 	add.w	r8, r8, #1
 80152d6:	fa5f f388 	uxtb.w	r3, r8
 80152da:	00b6      	lsls	r6, r6, #2
 80152dc:	429d      	cmp	r5, r3
 80152de:	b2f6      	uxtb	r6, r6
 80152e0:	d1f2      	bne.n	80152c8 <_DrawBitmap+0x49c>
 80152e2:	3d01      	subs	r5, #1
 80152e4:	b2ed      	uxtb	r5, r5
 80152e6:	1c6b      	adds	r3, r5, #1
 80152e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152ec:	f10c 0301 	add.w	r3, ip, #1
 80152f0:	eb03 0c05 	add.w	ip, r3, r5
 80152f4:	2f00      	cmp	r7, #0
 80152f6:	f000 8116 	beq.w	8015526 <_DrawBitmap+0x6fa>
 80152fa:	9b06      	ldr	r3, [sp, #24]
 80152fc:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8015300:	9306      	str	r3, [sp, #24]
 8015302:	2504      	movs	r5, #4
 8015304:	42bd      	cmp	r5, r7
 8015306:	bfc8      	it	gt
 8015308:	b2fd      	uxtbgt	r5, r7
 801530a:	1b7f      	subs	r7, r7, r5
 801530c:	f04f 0800 	mov.w	r8, #0
 8015310:	e7da      	b.n	80152c8 <_DrawBitmap+0x49c>
 8015312:	bf00      	nop
 8015314:	0801f3b8 	.word	0x0801f3b8
 8015318:	0801f178 	.word	0x0801f178
 801531c:	2000016c 	.word	0x2000016c
 8015320:	09b3      	lsrs	r3, r6, #6
 8015322:	9821      	ldr	r0, [sp, #132]	; 0x84
 8015324:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015328:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 801532c:	f1b9 0f00 	cmp.w	r9, #0
 8015330:	d0cf      	beq.n	80152d2 <_DrawBitmap+0x4a6>
 8015332:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8015336:	9a05      	ldr	r2, [sp, #20]
 8015338:	681b      	ldr	r3, [r3, #0]
 801533a:	f8cd c008 	str.w	ip, [sp, #8]
 801533e:	4648      	mov	r0, r9
 8015340:	4798      	blx	r3
 8015342:	f8dd c008 	ldr.w	ip, [sp, #8]
 8015346:	e7c4      	b.n	80152d2 <_DrawBitmap+0x4a6>
 8015348:	4651      	mov	r1, sl
 801534a:	465b      	mov	r3, fp
 801534c:	429d      	cmp	r5, r3
 801534e:	bfc8      	it	gt
 8015350:	b2dd      	uxtbgt	r5, r3
 8015352:	1b5b      	subs	r3, r3, r5
 8015354:	1ca2      	adds	r2, r4, #2
 8015356:	4628      	mov	r0, r5
 8015358:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 801535c:	d005      	beq.n	801536a <_DrawBitmap+0x53e>
 801535e:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 8015362:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8015366:	f822 7c02 	strh.w	r7, [r2, #-2]
 801536a:	3801      	subs	r0, #1
 801536c:	00b6      	lsls	r6, r6, #2
 801536e:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 8015372:	b2f6      	uxtb	r6, r6
 8015374:	f102 0202 	add.w	r2, r2, #2
 8015378:	d1ee      	bne.n	8015358 <_DrawBitmap+0x52c>
 801537a:	3d01      	subs	r5, #1
 801537c:	b2ed      	uxtb	r5, r5
 801537e:	3501      	adds	r5, #1
 8015380:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8015384:	2b00      	cmp	r3, #0
 8015386:	f000 80ce 	beq.w	8015526 <_DrawBitmap+0x6fa>
 801538a:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 801538e:	2504      	movs	r5, #4
 8015390:	e7dc      	b.n	801534c <_DrawBitmap+0x520>
 8015392:	4a6e      	ldr	r2, [pc, #440]	; (801554c <_DrawBitmap+0x720>)
 8015394:	f89a 3000 	ldrb.w	r3, [sl]
 8015398:	6812      	ldr	r2, [r2, #0]
 801539a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801539c:	7c12      	ldrb	r2, [r2, #16]
 801539e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80153a0:	f002 0203 	and.w	r2, r2, #3
 80153a4:	40bb      	lsls	r3, r7
 80153a6:	2a01      	cmp	r2, #1
 80153a8:	b2dd      	uxtb	r5, r3
 80153aa:	f000 8095 	beq.w	80154d8 <_DrawBitmap+0x6ac>
 80153ae:	d302      	bcc.n	80153b6 <_DrawBitmap+0x58a>
 80153b0:	2a02      	cmp	r2, #2
 80153b2:	d036      	beq.n	8015422 <_DrawBitmap+0x5f6>
 80153b4:	e0b7      	b.n	8015526 <_DrawBitmap+0x6fa>
 80153b6:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80153b8:	b166      	cbz	r6, 80153d4 <_DrawBitmap+0x5a8>
 80153ba:	092d      	lsrs	r5, r5, #4
 80153bc:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80153be:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 80153c2:	8023      	strh	r3, [r4, #0]
 80153c4:	f10a 0201 	add.w	r2, sl, #1
 80153c8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80153ca:	f89a 5001 	ldrb.w	r5, [sl, #1]
 80153ce:	f10b 33ff 	add.w	r3, fp, #4294967295
 80153d2:	e001      	b.n	80153d8 <_DrawBitmap+0x5ac>
 80153d4:	465b      	mov	r3, fp
 80153d6:	4652      	mov	r2, sl
 80153d8:	2b01      	cmp	r3, #1
 80153da:	dd19      	ble.n	8015410 <_DrawBitmap+0x5e4>
 80153dc:	1058      	asrs	r0, r3, #1
 80153de:	1d21      	adds	r1, r4, #4
 80153e0:	f003 0301 	and.w	r3, r3, #1
 80153e4:	eb02 0c00 	add.w	ip, r2, r0
 80153e8:	092f      	lsrs	r7, r5, #4
 80153ea:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80153ec:	f005 050f 	and.w	r5, r5, #15
 80153f0:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 80153f4:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 80153f8:	f821 7c04 	strh.w	r7, [r1, #-4]
 80153fc:	f821 5c02 	strh.w	r5, [r1, #-2]
 8015400:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8015404:	4562      	cmp	r2, ip
 8015406:	f101 0104 	add.w	r1, r1, #4
 801540a:	d1ed      	bne.n	80153e8 <_DrawBitmap+0x5bc>
 801540c:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 8015410:	2b00      	cmp	r3, #0
 8015412:	f000 8088 	beq.w	8015526 <_DrawBitmap+0x6fa>
 8015416:	092d      	lsrs	r5, r5, #4
 8015418:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801541a:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 801541e:	8023      	strh	r3, [r4, #0]
 8015420:	e081      	b.n	8015526 <_DrawBitmap+0x6fa>
 8015422:	9f20      	ldr	r7, [sp, #128]	; 0x80
 8015424:	b1c7      	cbz	r7, 8015458 <_DrawBitmap+0x62c>
 8015426:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 801542a:	d00b      	beq.n	8015444 <_DrawBitmap+0x618>
 801542c:	092d      	lsrs	r5, r5, #4
 801542e:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8015430:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8015434:	8023      	strh	r3, [r4, #0]
 8015436:	b12e      	cbz	r6, 8015444 <_DrawBitmap+0x618>
 8015438:	68b3      	ldr	r3, [r6, #8]
 801543a:	9904      	ldr	r1, [sp, #16]
 801543c:	681b      	ldr	r3, [r3, #0]
 801543e:	9a05      	ldr	r2, [sp, #20]
 8015440:	4630      	mov	r0, r6
 8015442:	4798      	blx	r3
 8015444:	9804      	ldr	r0, [sp, #16]
 8015446:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8015448:	f89a 5001 	ldrb.w	r5, [sl, #1]
 801544c:	1c47      	adds	r7, r0, #1
 801544e:	f10b 39ff 	add.w	r9, fp, #4294967295
 8015452:	f10a 0801 	add.w	r8, sl, #1
 8015456:	e00f      	b.n	8015478 <_DrawBitmap+0x64c>
 8015458:	46d9      	mov	r9, fp
 801545a:	46d0      	mov	r8, sl
 801545c:	9f04      	ldr	r7, [sp, #16]
 801545e:	e00b      	b.n	8015478 <_DrawBitmap+0x64c>
 8015460:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 8015464:	d10c      	bne.n	8015480 <_DrawBitmap+0x654>
 8015466:	f015 050f 	ands.w	r5, r5, #15
 801546a:	d117      	bne.n	801549c <_DrawBitmap+0x670>
 801546c:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 8015470:	3404      	adds	r4, #4
 8015472:	3702      	adds	r7, #2
 8015474:	f1a9 0902 	sub.w	r9, r9, #2
 8015478:	f1b9 0f01 	cmp.w	r9, #1
 801547c:	dcf0      	bgt.n	8015460 <_DrawBitmap+0x634>
 801547e:	e01a      	b.n	80154b6 <_DrawBitmap+0x68a>
 8015480:	092b      	lsrs	r3, r5, #4
 8015482:	9921      	ldr	r1, [sp, #132]	; 0x84
 8015484:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8015488:	8023      	strh	r3, [r4, #0]
 801548a:	2e00      	cmp	r6, #0
 801548c:	d0eb      	beq.n	8015466 <_DrawBitmap+0x63a>
 801548e:	68b3      	ldr	r3, [r6, #8]
 8015490:	9a05      	ldr	r2, [sp, #20]
 8015492:	681b      	ldr	r3, [r3, #0]
 8015494:	4630      	mov	r0, r6
 8015496:	4639      	mov	r1, r7
 8015498:	4798      	blx	r3
 801549a:	e7e4      	b.n	8015466 <_DrawBitmap+0x63a>
 801549c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801549e:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 80154a2:	8063      	strh	r3, [r4, #2]
 80154a4:	2e00      	cmp	r6, #0
 80154a6:	d0e1      	beq.n	801546c <_DrawBitmap+0x640>
 80154a8:	68b3      	ldr	r3, [r6, #8]
 80154aa:	9a05      	ldr	r2, [sp, #20]
 80154ac:	681b      	ldr	r3, [r3, #0]
 80154ae:	4630      	mov	r0, r6
 80154b0:	1c79      	adds	r1, r7, #1
 80154b2:	4798      	blx	r3
 80154b4:	e7da      	b.n	801546c <_DrawBitmap+0x640>
 80154b6:	f1b9 0f00 	cmp.w	r9, #0
 80154ba:	d034      	beq.n	8015526 <_DrawBitmap+0x6fa>
 80154bc:	092d      	lsrs	r5, r5, #4
 80154be:	d032      	beq.n	8015526 <_DrawBitmap+0x6fa>
 80154c0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80154c2:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 80154c6:	8023      	strh	r3, [r4, #0]
 80154c8:	b36e      	cbz	r6, 8015526 <_DrawBitmap+0x6fa>
 80154ca:	68b3      	ldr	r3, [r6, #8]
 80154cc:	9a05      	ldr	r2, [sp, #20]
 80154ce:	681b      	ldr	r3, [r3, #0]
 80154d0:	4630      	mov	r0, r6
 80154d2:	4639      	mov	r1, r7
 80154d4:	4798      	blx	r3
 80154d6:	e026      	b.n	8015526 <_DrawBitmap+0x6fa>
 80154d8:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80154da:	f1c6 0302 	rsb	r3, r6, #2
 80154de:	b2db      	uxtb	r3, r3
 80154e0:	4650      	mov	r0, sl
 80154e2:	465a      	mov	r2, fp
 80154e4:	4293      	cmp	r3, r2
 80154e6:	bfc8      	it	gt
 80154e8:	b2d3      	uxtbgt	r3, r2
 80154ea:	1ad2      	subs	r2, r2, r3
 80154ec:	1ca1      	adds	r1, r4, #2
 80154ee:	461e      	mov	r6, r3
 80154f0:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 80154f4:	d005      	beq.n	8015502 <_DrawBitmap+0x6d6>
 80154f6:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 80154fa:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 80154fe:	f821 7c02 	strh.w	r7, [r1, #-2]
 8015502:	3e01      	subs	r6, #1
 8015504:	012d      	lsls	r5, r5, #4
 8015506:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 801550a:	b2ed      	uxtb	r5, r5
 801550c:	f101 0102 	add.w	r1, r1, #2
 8015510:	d1ee      	bne.n	80154f0 <_DrawBitmap+0x6c4>
 8015512:	3b01      	subs	r3, #1
 8015514:	b2db      	uxtb	r3, r3
 8015516:	3301      	adds	r3, #1
 8015518:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801551c:	b11a      	cbz	r2, 8015526 <_DrawBitmap+0x6fa>
 801551e:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8015522:	2302      	movs	r3, #2
 8015524:	e7de      	b.n	80154e4 <_DrawBitmap+0x6b8>
 8015526:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8015528:	9b05      	ldr	r3, [sp, #20]
 801552a:	9e08      	ldr	r6, [sp, #32]
 801552c:	44ba      	add	sl, r7
 801552e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015530:	3301      	adds	r3, #1
 8015532:	4437      	add	r7, r6
 8015534:	9305      	str	r3, [sp, #20]
 8015536:	9709      	str	r7, [sp, #36]	; 0x24
 8015538:	e5a3      	b.n	8015082 <_DrawBitmap+0x256>
 801553a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801553c:	b113      	cbz	r3, 8015544 <_DrawBitmap+0x718>
 801553e:	a811      	add	r0, sp, #68	; 0x44
 8015540:	f7fb ff4c 	bl	80113dc <GUI_ALLOC_UnlockH>
 8015544:	b013      	add	sp, #76	; 0x4c
 8015546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801554a:	bf00      	nop
 801554c:	2000016c 	.word	0x2000016c

08015550 <LCD_SelectLCD>:
 8015550:	b510      	push	{r4, lr}
 8015552:	4b0d      	ldr	r3, [pc, #52]	; (8015588 <LCD_SelectLCD+0x38>)
 8015554:	681a      	ldr	r2, [r3, #0]
 8015556:	7c51      	ldrb	r1, [r2, #17]
 8015558:	4a0c      	ldr	r2, [pc, #48]	; (801558c <LCD_SelectLCD+0x3c>)
 801555a:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 801555e:	461c      	mov	r4, r3
 8015560:	b140      	cbz	r0, 8015574 <LCD_SelectLCD+0x24>
 8015562:	68c3      	ldr	r3, [r0, #12]
 8015564:	b113      	cbz	r3, 801556c <LCD_SelectLCD+0x1c>
 8015566:	681b      	ldr	r3, [r3, #0]
 8015568:	2b04      	cmp	r3, #4
 801556a:	d001      	beq.n	8015570 <LCD_SelectLCD+0x20>
 801556c:	6800      	ldr	r0, [r0, #0]
 801556e:	e7f7      	b.n	8015560 <LCD_SelectLCD+0x10>
 8015570:	f7fb fa04 	bl	801097c <GUI_DEVICE_Unlink>
 8015574:	6823      	ldr	r3, [r4, #0]
 8015576:	2200      	movs	r2, #0
 8015578:	661a      	str	r2, [r3, #96]	; 0x60
 801557a:	f103 0208 	add.w	r2, r3, #8
 801557e:	615a      	str	r2, [r3, #20]
 8015580:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015584:	f7f9 ba86 	b.w	800ea94 <LCD_SetClipRectMax>
 8015588:	2000016c 	.word	0x2000016c
 801558c:	200199ec 	.word	0x200199ec

08015590 <_Rect2TextRect>:
 8015590:	8803      	ldrh	r3, [r0, #0]
 8015592:	8881      	ldrh	r1, [r0, #4]
 8015594:	8842      	ldrh	r2, [r0, #2]
 8015596:	b510      	push	{r4, lr}
 8015598:	88c4      	ldrh	r4, [r0, #6]
 801559a:	441c      	add	r4, r3
 801559c:	1aa4      	subs	r4, r4, r2
 801559e:	440a      	add	r2, r1
 80155a0:	1ad3      	subs	r3, r2, r3
 80155a2:	8084      	strh	r4, [r0, #4]
 80155a4:	80c3      	strh	r3, [r0, #6]
 80155a6:	bd10      	pop	{r4, pc}

080155a8 <_TransformPoint>:
 80155a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80155aa:	460d      	mov	r5, r1
 80155ac:	4604      	mov	r4, r0
 80155ae:	2300      	movs	r3, #0
 80155b0:	4668      	mov	r0, sp
 80155b2:	9300      	str	r3, [sp, #0]
 80155b4:	9301      	str	r3, [sp, #4]
 80155b6:	f7fe fc21 	bl	8013dfc <WM_GetWindowRect>
 80155ba:	f7f8 ff05 	bl	800e3c8 <LCD_GetXSize>
 80155be:	f7f8 ff0b 	bl	800e3d8 <LCD_GetYSize>
 80155c2:	682b      	ldr	r3, [r5, #0]
 80155c4:	f9bd 1000 	ldrsh.w	r1, [sp]
 80155c8:	6822      	ldr	r2, [r4, #0]
 80155ca:	1acb      	subs	r3, r1, r3
 80155cc:	6023      	str	r3, [r4, #0]
 80155ce:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80155d2:	4413      	add	r3, r2
 80155d4:	602b      	str	r3, [r5, #0]
 80155d6:	4b08      	ldr	r3, [pc, #32]	; (80155f8 <_TransformPoint+0x50>)
 80155d8:	6821      	ldr	r1, [r4, #0]
 80155da:	f9b3 0004 	ldrsh.w	r0, [r3, #4]
 80155de:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80155e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80155e6:	4401      	add	r1, r0
 80155e8:	4411      	add	r1, r2
 80155ea:	6021      	str	r1, [r4, #0]
 80155ec:	6829      	ldr	r1, [r5, #0]
 80155ee:	440a      	add	r2, r1
 80155f0:	1ad2      	subs	r2, r2, r3
 80155f2:	602a      	str	r2, [r5, #0]
 80155f4:	b003      	add	sp, #12
 80155f6:	bd30      	pop	{r4, r5, pc}
 80155f8:	20019af0 	.word	0x20019af0

080155fc <_TransformRect>:
 80155fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80155fe:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015602:	9300      	str	r3, [sp, #0]
 8015604:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015608:	9301      	str	r3, [sp, #4]
 801560a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801560e:	9302      	str	r3, [sp, #8]
 8015610:	4604      	mov	r4, r0
 8015612:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015616:	9303      	str	r3, [sp, #12]
 8015618:	4668      	mov	r0, sp
 801561a:	a901      	add	r1, sp, #4
 801561c:	f7ff ffc4 	bl	80155a8 <_TransformPoint>
 8015620:	a802      	add	r0, sp, #8
 8015622:	a903      	add	r1, sp, #12
 8015624:	f7ff ffc0 	bl	80155a8 <_TransformPoint>
 8015628:	9b02      	ldr	r3, [sp, #8]
 801562a:	8023      	strh	r3, [r4, #0]
 801562c:	9b01      	ldr	r3, [sp, #4]
 801562e:	8063      	strh	r3, [r4, #2]
 8015630:	9b00      	ldr	r3, [sp, #0]
 8015632:	80a3      	strh	r3, [r4, #4]
 8015634:	9b03      	ldr	r3, [sp, #12]
 8015636:	80e3      	strh	r3, [r4, #6]
 8015638:	b004      	add	sp, #16
 801563a:	bd10      	pop	{r4, pc}

0801563c <_DrawBitmapCW>:
 801563c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015640:	b091      	sub	sp, #68	; 0x44
 8015642:	4693      	mov	fp, r2
 8015644:	9009      	str	r0, [sp, #36]	; 0x24
 8015646:	9108      	str	r1, [sp, #32]
 8015648:	4410      	add	r0, r2
 801564a:	4419      	add	r1, r3
 801564c:	3901      	subs	r1, #1
 801564e:	3801      	subs	r0, #1
 8015650:	910b      	str	r1, [sp, #44]	; 0x2c
 8015652:	900a      	str	r0, [sp, #40]	; 0x28
 8015654:	a908      	add	r1, sp, #32
 8015656:	a809      	add	r0, sp, #36	; 0x24
 8015658:	461d      	mov	r5, r3
 801565a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801565c:	f7ff ffa4 	bl	80155a8 <_TransformPoint>
 8015660:	a90b      	add	r1, sp, #44	; 0x2c
 8015662:	a80a      	add	r0, sp, #40	; 0x28
 8015664:	f7ff ffa0 	bl	80155a8 <_TransformPoint>
 8015668:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 801566a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801566c:	2f01      	cmp	r7, #1
 801566e:	f040 81a4 	bne.w	80159ba <_DrawBitmapCW+0x37e>
 8015672:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8015674:	2f01      	cmp	r7, #1
 8015676:	f040 81a0 	bne.w	80159ba <_DrawBitmapCW+0x37e>
 801567a:	4ba6      	ldr	r3, [pc, #664]	; (8015914 <_DrawBitmapCW+0x2d8>)
 801567c:	681a      	ldr	r2, [r3, #0]
 801567e:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 8015682:	4299      	cmp	r1, r3
 8015684:	dd07      	ble.n	8015696 <_DrawBitmapCW+0x5a>
 8015686:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8015688:	9309      	str	r3, [sp, #36]	; 0x24
 801568a:	ebc3 0901 	rsb	r9, r3, r1
 801568e:	ebc9 0505 	rsb	r5, r9, r5
 8015692:	fb07 4409 	mla	r4, r7, r9, r4
 8015696:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015698:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 801569c:	4299      	cmp	r1, r3
 801569e:	da02      	bge.n	80156a6 <_DrawBitmapCW+0x6a>
 80156a0:	930a      	str	r3, [sp, #40]	; 0x28
 80156a2:	1a5b      	subs	r3, r3, r1
 80156a4:	1aed      	subs	r5, r5, r3
 80156a6:	f9b2 300e 	ldrsh.w	r3, [r2, #14]
 80156aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80156ac:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 80156b0:	4299      	cmp	r1, r3
 80156b2:	bfc4      	itt	gt
 80156b4:	ebc3 0301 	rsbgt	r3, r3, r1
 80156b8:	ebc3 0b0b 	rsbgt	fp, r3, fp
 80156bc:	9b08      	ldr	r3, [sp, #32]
 80156be:	4293      	cmp	r3, r2
 80156c0:	da2a      	bge.n	8015718 <_DrawBitmapCW+0xdc>
 80156c2:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80156c4:	1ad6      	subs	r6, r2, r3
 80156c6:	1e79      	subs	r1, r7, #1
 80156c8:	ebc6 0b0b 	rsb	fp, r6, fp
 80156cc:	2907      	cmp	r1, #7
 80156ce:	d824      	bhi.n	801571a <_DrawBitmapCW+0xde>
 80156d0:	e8df f001 	tbb	[pc, r1]
 80156d4:	16230d04 	.word	0x16230d04
 80156d8:	1f232323 	.word	0x1f232323
 80156dc:	f026 0207 	bic.w	r2, r6, #7
 80156e0:	4413      	add	r3, r2
 80156e2:	eb04 04e6 	add.w	r4, r4, r6, asr #3
 80156e6:	9308      	str	r3, [sp, #32]
 80156e8:	f006 0607 	and.w	r6, r6, #7
 80156ec:	e015      	b.n	801571a <_DrawBitmapCW+0xde>
 80156ee:	f026 0203 	bic.w	r2, r6, #3
 80156f2:	4413      	add	r3, r2
 80156f4:	eb04 04a6 	add.w	r4, r4, r6, asr #2
 80156f8:	9308      	str	r3, [sp, #32]
 80156fa:	f006 0603 	and.w	r6, r6, #3
 80156fe:	e00c      	b.n	801571a <_DrawBitmapCW+0xde>
 8015700:	f026 0201 	bic.w	r2, r6, #1
 8015704:	4413      	add	r3, r2
 8015706:	eb04 0466 	add.w	r4, r4, r6, asr #1
 801570a:	9308      	str	r3, [sp, #32]
 801570c:	f006 0601 	and.w	r6, r6, #1
 8015710:	e003      	b.n	801571a <_DrawBitmapCW+0xde>
 8015712:	4434      	add	r4, r6
 8015714:	9208      	str	r2, [sp, #32]
 8015716:	e000      	b.n	801571a <_DrawBitmapCW+0xde>
 8015718:	2600      	movs	r6, #0
 801571a:	f1bb 0f00 	cmp.w	fp, #0
 801571e:	f340 81ab 	ble.w	8015a78 <_DrawBitmapCW+0x43c>
 8015722:	2d00      	cmp	r5, #0
 8015724:	f340 81a8 	ble.w	8015a78 <_DrawBitmapCW+0x43c>
 8015728:	9f08      	ldr	r7, [sp, #32]
 801572a:	9702      	str	r7, [sp, #8]
 801572c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801572e:	9706      	str	r7, [sp, #24]
 8015730:	1b7d      	subs	r5, r7, r5
 8015732:	9505      	str	r5, [sp, #20]
 8015734:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8015736:	1e6b      	subs	r3, r5, #1
 8015738:	2b07      	cmp	r3, #7
 801573a:	f200 8134 	bhi.w	80159a6 <_DrawBitmapCW+0x36a>
 801573e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8015742:	0008      	.short	0x0008
 8015744:	013200ae 	.word	0x013200ae
 8015748:	013200ef 	.word	0x013200ef
 801574c:	01320132 	.word	0x01320132
 8015750:	0121      	.short	0x0121
 8015752:	4b70      	ldr	r3, [pc, #448]	; (8015914 <_DrawBitmapCW+0x2d8>)
 8015754:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8015756:	681b      	ldr	r3, [r3, #0]
 8015758:	682d      	ldr	r5, [r5, #0]
 801575a:	7c1a      	ldrb	r2, [r3, #16]
 801575c:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 801575e:	9504      	str	r5, [sp, #16]
 8015760:	f002 0203 	and.w	r2, r2, #3
 8015764:	9d02      	ldr	r5, [sp, #8]
 8015766:	687f      	ldr	r7, [r7, #4]
 8015768:	9703      	str	r7, [sp, #12]
 801576a:	2a01      	cmp	r2, #1
 801576c:	4435      	add	r5, r6
 801576e:	d052      	beq.n	8015816 <_DrawBitmapCW+0x1da>
 8015770:	d307      	bcc.n	8015782 <_DrawBitmapCW+0x146>
 8015772:	2a02      	cmp	r2, #2
 8015774:	f040 8117 	bne.w	80159a6 <_DrawBitmapCW+0x36a>
 8015778:	eb05 0a0b 	add.w	sl, r5, fp
 801577c:	46b0      	mov	r8, r6
 801577e:	46a1      	mov	r9, r4
 8015780:	e034      	b.n	80157ec <_DrawBitmapCW+0x1b0>
 8015782:	eb05 0a0b 	add.w	sl, r5, fp
 8015786:	46b0      	mov	r8, r6
 8015788:	46a1      	mov	r9, r4
 801578a:	4b62      	ldr	r3, [pc, #392]	; (8015914 <_DrawBitmapCW+0x2d8>)
 801578c:	9f03      	ldr	r7, [sp, #12]
 801578e:	681b      	ldr	r3, [r3, #0]
 8015790:	9906      	ldr	r1, [sp, #24]
 8015792:	7c5a      	ldrb	r2, [r3, #17]
 8015794:	4b60      	ldr	r3, [pc, #384]	; (8015918 <_DrawBitmapCW+0x2dc>)
 8015796:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801579a:	f899 2000 	ldrb.w	r2, [r9]
 801579e:	68c3      	ldr	r3, [r0, #12]
 80157a0:	f8d3 c018 	ldr.w	ip, [r3, #24]
 80157a4:	2380      	movs	r3, #128	; 0x80
 80157a6:	fa43 f308 	asr.w	r3, r3, r8
 80157aa:	421a      	tst	r2, r3
 80157ac:	9b04      	ldr	r3, [sp, #16]
 80157ae:	462a      	mov	r2, r5
 80157b0:	bf18      	it	ne
 80157b2:	463b      	movne	r3, r7
 80157b4:	f108 0801 	add.w	r8, r8, #1
 80157b8:	47e0      	blx	ip
 80157ba:	3501      	adds	r5, #1
 80157bc:	f1b8 0f08 	cmp.w	r8, #8
 80157c0:	bf04      	itt	eq
 80157c2:	f109 0901 	addeq.w	r9, r9, #1
 80157c6:	f04f 0800 	moveq.w	r8, #0
 80157ca:	4555      	cmp	r5, sl
 80157cc:	d1dd      	bne.n	801578a <_DrawBitmapCW+0x14e>
 80157ce:	e0ea      	b.n	80159a6 <_DrawBitmapCW+0x36a>
 80157d0:	f108 0801 	add.w	r8, r8, #1
 80157d4:	f1b8 0f08 	cmp.w	r8, #8
 80157d8:	f105 0501 	add.w	r5, r5, #1
 80157dc:	bf04      	itt	eq
 80157de:	f109 0901 	addeq.w	r9, r9, #1
 80157e2:	f04f 0800 	moveq.w	r8, #0
 80157e6:	4555      	cmp	r5, sl
 80157e8:	f000 80dd 	beq.w	80159a6 <_DrawBitmapCW+0x36a>
 80157ec:	f899 2000 	ldrb.w	r2, [r9]
 80157f0:	2380      	movs	r3, #128	; 0x80
 80157f2:	fa43 f308 	asr.w	r3, r3, r8
 80157f6:	421a      	tst	r2, r3
 80157f8:	d0ea      	beq.n	80157d0 <_DrawBitmapCW+0x194>
 80157fa:	4b46      	ldr	r3, [pc, #280]	; (8015914 <_DrawBitmapCW+0x2d8>)
 80157fc:	9906      	ldr	r1, [sp, #24]
 80157fe:	681b      	ldr	r3, [r3, #0]
 8015800:	7c5a      	ldrb	r2, [r3, #17]
 8015802:	4b45      	ldr	r3, [pc, #276]	; (8015918 <_DrawBitmapCW+0x2dc>)
 8015804:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8015808:	68c3      	ldr	r3, [r0, #12]
 801580a:	462a      	mov	r2, r5
 801580c:	f8d3 c018 	ldr.w	ip, [r3, #24]
 8015810:	9b03      	ldr	r3, [sp, #12]
 8015812:	47e0      	blx	ip
 8015814:	e7dc      	b.n	80157d0 <_DrawBitmapCW+0x194>
 8015816:	7c5a      	ldrb	r2, [r3, #17]
 8015818:	4b3f      	ldr	r3, [pc, #252]	; (8015918 <_DrawBitmapCW+0x2dc>)
 801581a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801581e:	691b      	ldr	r3, [r3, #16]
 8015820:	689b      	ldr	r3, [r3, #8]
 8015822:	4798      	blx	r3
 8015824:	eb05 070b 	add.w	r7, r5, fp
 8015828:	9004      	str	r0, [sp, #16]
 801582a:	9703      	str	r7, [sp, #12]
 801582c:	46b0      	mov	r8, r6
 801582e:	46a1      	mov	r9, r4
 8015830:	f899 2000 	ldrb.w	r2, [r9]
 8015834:	2380      	movs	r3, #128	; 0x80
 8015836:	fa43 f308 	asr.w	r3, r3, r8
 801583a:	421a      	tst	r2, r3
 801583c:	d020      	beq.n	8015880 <_DrawBitmapCW+0x244>
 801583e:	f8df c0d4 	ldr.w	ip, [pc, #212]	; 8015914 <_DrawBitmapCW+0x2d8>
 8015842:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8015918 <_DrawBitmapCW+0x2dc>
 8015846:	f8dc 3000 	ldr.w	r3, [ip]
 801584a:	9906      	ldr	r1, [sp, #24]
 801584c:	7c5b      	ldrb	r3, [r3, #17]
 801584e:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8015852:	68c3      	ldr	r3, [r0, #12]
 8015854:	462a      	mov	r2, r5
 8015856:	695b      	ldr	r3, [r3, #20]
 8015858:	f8cd c000 	str.w	ip, [sp]
 801585c:	4798      	blx	r3
 801585e:	f8dd c000 	ldr.w	ip, [sp]
 8015862:	9f04      	ldr	r7, [sp, #16]
 8015864:	f8dc 3000 	ldr.w	r3, [ip]
 8015868:	7c5b      	ldrb	r3, [r3, #17]
 801586a:	f85a 2023 	ldr.w	r2, [sl, r3, lsl #2]
 801586e:	68d1      	ldr	r1, [r2, #12]
 8015870:	ea80 0307 	eor.w	r3, r0, r7
 8015874:	f8d1 c018 	ldr.w	ip, [r1, #24]
 8015878:	9906      	ldr	r1, [sp, #24]
 801587a:	4610      	mov	r0, r2
 801587c:	462a      	mov	r2, r5
 801587e:	47e0      	blx	ip
 8015880:	f108 0801 	add.w	r8, r8, #1
 8015884:	9f03      	ldr	r7, [sp, #12]
 8015886:	f1b8 0f08 	cmp.w	r8, #8
 801588a:	f105 0501 	add.w	r5, r5, #1
 801588e:	bf04      	itt	eq
 8015890:	f109 0901 	addeq.w	r9, r9, #1
 8015894:	f04f 0800 	moveq.w	r8, #0
 8015898:	42bd      	cmp	r5, r7
 801589a:	d1c9      	bne.n	8015830 <_DrawBitmapCW+0x1f4>
 801589c:	e083      	b.n	80159a6 <_DrawBitmapCW+0x36a>
 801589e:	4b1f      	ldr	r3, [pc, #124]	; (801591c <_DrawBitmapCW+0x2e0>)
 80158a0:	f894 a000 	ldrb.w	sl, [r4]
 80158a4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80158a6:	ad10      	add	r5, sp, #64	; 0x40
 80158a8:	e905 000f 	stmdb	r5, {r0, r1, r2, r3}
 80158ac:	2002      	movs	r0, #2
 80158ae:	9d02      	ldr	r5, [sp, #8]
 80158b0:	f000 fbfc 	bl	80160ac <LCD__GetPfSetPixel>
 80158b4:	4435      	add	r5, r6
 80158b6:	4603      	mov	r3, r0
 80158b8:	eb05 0c0b 	add.w	ip, r5, fp
 80158bc:	46b0      	mov	r8, r6
 80158be:	46a1      	mov	r9, r4
 80158c0:	f1c8 0203 	rsb	r2, r8, #3
 80158c4:	0052      	lsls	r2, r2, #1
 80158c6:	f1c2 0106 	rsb	r1, r2, #6
 80158ca:	20c0      	movs	r0, #192	; 0xc0
 80158cc:	fa40 f101 	asr.w	r1, r0, r1
 80158d0:	ea01 010a 	and.w	r1, r1, sl
 80158d4:	fa21 f202 	lsr.w	r2, r1, r2
 80158d8:	af10      	add	r7, sp, #64	; 0x40
 80158da:	eb07 0282 	add.w	r2, r7, r2, lsl #2
 80158de:	4629      	mov	r1, r5
 80158e0:	f812 2c10 	ldrb.w	r2, [r2, #-16]
 80158e4:	9806      	ldr	r0, [sp, #24]
 80158e6:	9301      	str	r3, [sp, #4]
 80158e8:	f8cd c000 	str.w	ip, [sp]
 80158ec:	f108 0801 	add.w	r8, r8, #1
 80158f0:	4798      	blx	r3
 80158f2:	f1b8 0f04 	cmp.w	r8, #4
 80158f6:	f105 0501 	add.w	r5, r5, #1
 80158fa:	9b01      	ldr	r3, [sp, #4]
 80158fc:	f8dd c000 	ldr.w	ip, [sp]
 8015900:	d105      	bne.n	801590e <_DrawBitmapCW+0x2d2>
 8015902:	f899 a001 	ldrb.w	sl, [r9, #1]
 8015906:	f04f 0800 	mov.w	r8, #0
 801590a:	f109 0901 	add.w	r9, r9, #1
 801590e:	4565      	cmp	r5, ip
 8015910:	d1d6      	bne.n	80158c0 <_DrawBitmapCW+0x284>
 8015912:	e048      	b.n	80159a6 <_DrawBitmapCW+0x36a>
 8015914:	2000016c 	.word	0x2000016c
 8015918:	200199ec 	.word	0x200199ec
 801591c:	080195ec 	.word	0x080195ec
 8015920:	2004      	movs	r0, #4
 8015922:	9d02      	ldr	r5, [sp, #8]
 8015924:	f894 a000 	ldrb.w	sl, [r4]
 8015928:	f000 fbc0 	bl	80160ac <LCD__GetPfSetPixel>
 801592c:	4435      	add	r5, r6
 801592e:	4603      	mov	r3, r0
 8015930:	eb05 0c0b 	add.w	ip, r5, fp
 8015934:	46b0      	mov	r8, r6
 8015936:	46a1      	mov	r9, r4
 8015938:	f1c8 0201 	rsb	r2, r8, #1
 801593c:	0092      	lsls	r2, r2, #2
 801593e:	f1c2 0104 	rsb	r1, r2, #4
 8015942:	20f0      	movs	r0, #240	; 0xf0
 8015944:	fa40 f101 	asr.w	r1, r0, r1
 8015948:	ea01 010a 	and.w	r1, r1, sl
 801594c:	fa21 f202 	lsr.w	r2, r1, r2
 8015950:	9301      	str	r3, [sp, #4]
 8015952:	4629      	mov	r1, r5
 8015954:	f8cd c000 	str.w	ip, [sp]
 8015958:	9806      	ldr	r0, [sp, #24]
 801595a:	b2d2      	uxtb	r2, r2
 801595c:	f108 0801 	add.w	r8, r8, #1
 8015960:	4798      	blx	r3
 8015962:	f1b8 0f02 	cmp.w	r8, #2
 8015966:	f105 0501 	add.w	r5, r5, #1
 801596a:	9b01      	ldr	r3, [sp, #4]
 801596c:	f8dd c000 	ldr.w	ip, [sp]
 8015970:	d105      	bne.n	801597e <_DrawBitmapCW+0x342>
 8015972:	f899 a001 	ldrb.w	sl, [r9, #1]
 8015976:	f04f 0800 	mov.w	r8, #0
 801597a:	f109 0901 	add.w	r9, r9, #1
 801597e:	4565      	cmp	r5, ip
 8015980:	d1da      	bne.n	8015938 <_DrawBitmapCW+0x2fc>
 8015982:	e010      	b.n	80159a6 <_DrawBitmapCW+0x36a>
 8015984:	2008      	movs	r0, #8
 8015986:	f000 fb91 	bl	80160ac <LCD__GetPfSetPixel>
 801598a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801598e:	9d02      	ldr	r5, [sp, #8]
 8015990:	4681      	mov	r9, r0
 8015992:	44d8      	add	r8, fp
 8015994:	9f02      	ldr	r7, [sp, #8]
 8015996:	9806      	ldr	r0, [sp, #24]
 8015998:	1be3      	subs	r3, r4, r7
 801599a:	4629      	mov	r1, r5
 801599c:	5d5a      	ldrb	r2, [r3, r5]
 801599e:	3501      	adds	r5, #1
 80159a0:	47c8      	blx	r9
 80159a2:	4545      	cmp	r5, r8
 80159a4:	d1f6      	bne.n	8015994 <_DrawBitmapCW+0x358>
 80159a6:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80159a8:	9f06      	ldr	r7, [sp, #24]
 80159aa:	442c      	add	r4, r5
 80159ac:	9d05      	ldr	r5, [sp, #20]
 80159ae:	3f01      	subs	r7, #1
 80159b0:	42af      	cmp	r7, r5
 80159b2:	9706      	str	r7, [sp, #24]
 80159b4:	f47f aebe 	bne.w	8015734 <_DrawBitmapCW+0xf8>
 80159b8:	e05e      	b.n	8015a78 <_DrawBitmapCW+0x43c>
 80159ba:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80159bc:	f1c7 0708 	rsb	r7, r7, #8
 80159c0:	9706      	str	r7, [sp, #24]
 80159c2:	2700      	movs	r7, #0
 80159c4:	4689      	mov	r9, r1
 80159c6:	46b8      	mov	r8, r7
 80159c8:	42af      	cmp	r7, r5
 80159ca:	da55      	bge.n	8015a78 <_DrawBitmapCW+0x43c>
 80159cc:	4b2c      	ldr	r3, [pc, #176]	; (8015a80 <_DrawBitmapCW+0x444>)
 80159ce:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80159d0:	681b      	ldr	r3, [r3, #0]
 80159d2:	ebc0 0009 	rsb	r0, r0, r9
 80159d6:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 80159da:	9004      	str	r0, [sp, #16]
 80159dc:	1c41      	adds	r1, r0, #1
 80159de:	4291      	cmp	r1, r2
 80159e0:	9105      	str	r1, [sp, #20]
 80159e2:	db43      	blt.n	8015a6c <_DrawBitmapCW+0x430>
 80159e4:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 80159e8:	4599      	cmp	r9, r3
 80159ea:	dc3f      	bgt.n	8015a6c <_DrawBitmapCW+0x430>
 80159ec:	2600      	movs	r6, #0
 80159ee:	f8dd a020 	ldr.w	sl, [sp, #32]
 80159f2:	9402      	str	r4, [sp, #8]
 80159f4:	46b4      	mov	ip, r6
 80159f6:	45dc      	cmp	ip, fp
 80159f8:	da38      	bge.n	8015a6c <_DrawBitmapCW+0x430>
 80159fa:	b92e      	cbnz	r6, 8015a08 <_DrawBitmapCW+0x3cc>
 80159fc:	9a02      	ldr	r2, [sp, #8]
 80159fe:	f892 8000 	ldrb.w	r8, [r2]
 8015a02:	3201      	adds	r2, #1
 8015a04:	9202      	str	r2, [sp, #8]
 8015a06:	2608      	movs	r6, #8
 8015a08:	9806      	ldr	r0, [sp, #24]
 8015a0a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8015a0c:	4a1c      	ldr	r2, [pc, #112]	; (8015a80 <_DrawBitmapCW+0x444>)
 8015a0e:	fa48 f300 	asr.w	r3, r8, r0
 8015a12:	1a76      	subs	r6, r6, r1
 8015a14:	fa08 f801 	lsl.w	r8, r8, r1
 8015a18:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8015a1c:	fa5f f888 	uxtb.w	r8, r8
 8015a20:	d103      	bne.n	8015a2a <_DrawBitmapCW+0x3ee>
 8015a22:	6810      	ldr	r0, [r2, #0]
 8015a24:	7c00      	ldrb	r0, [r0, #16]
 8015a26:	0780      	lsls	r0, r0, #30
 8015a28:	d41b      	bmi.n	8015a62 <_DrawBitmapCW+0x426>
 8015a2a:	6812      	ldr	r2, [r2, #0]
 8015a2c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8015a2e:	6810      	ldr	r0, [r2, #0]
 8015a30:	9007      	str	r0, [sp, #28]
 8015a32:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8015a34:	b110      	cbz	r0, 8015a3c <_DrawBitmapCW+0x400>
 8015a36:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8015a3a:	e000      	b.n	8015a3e <_DrawBitmapCW+0x402>
 8015a3c:	b2db      	uxtb	r3, r3
 8015a3e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8015a40:	6013      	str	r3, [r2, #0]
 8015a42:	1e4b      	subs	r3, r1, #1
 8015a44:	464a      	mov	r2, r9
 8015a46:	4453      	add	r3, sl
 8015a48:	9805      	ldr	r0, [sp, #20]
 8015a4a:	f8cd c000 	str.w	ip, [sp]
 8015a4e:	4651      	mov	r1, sl
 8015a50:	f7f8 fe0c 	bl	800e66c <LCD_FillRect>
 8015a54:	4b0a      	ldr	r3, [pc, #40]	; (8015a80 <_DrawBitmapCW+0x444>)
 8015a56:	9a07      	ldr	r2, [sp, #28]
 8015a58:	681b      	ldr	r3, [r3, #0]
 8015a5a:	f8dd c000 	ldr.w	ip, [sp]
 8015a5e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015a60:	601a      	str	r2, [r3, #0]
 8015a62:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8015a64:	f10c 0c01 	add.w	ip, ip, #1
 8015a68:	449a      	add	sl, r3
 8015a6a:	e7c4      	b.n	80159f6 <_DrawBitmapCW+0x3ba>
 8015a6c:	981d      	ldr	r0, [sp, #116]	; 0x74
 8015a6e:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8015a72:	3701      	adds	r7, #1
 8015a74:	4404      	add	r4, r0
 8015a76:	e7a7      	b.n	80159c8 <_DrawBitmapCW+0x38c>
 8015a78:	b011      	add	sp, #68	; 0x44
 8015a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a7e:	bf00      	nop
 8015a80:	2000016c 	.word	0x2000016c

08015a84 <LCD_ReadRectEx>:
 8015a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a88:	b087      	sub	sp, #28
 8015a8a:	4617      	mov	r7, r2
 8015a8c:	9304      	str	r3, [sp, #16]
 8015a8e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015a90:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015a92:	68da      	ldr	r2, [r3, #12]
 8015a94:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8015a96:	f8d2 8014 	ldr.w	r8, [r2, #20]
 8015a9a:	4606      	mov	r6, r0
 8015a9c:	460d      	mov	r5, r1
 8015a9e:	b973      	cbnz	r3, 8015abe <LCD_ReadRectEx+0x3a>
 8015aa0:	4b71      	ldr	r3, [pc, #452]	; (8015c68 <LCD_ReadRectEx+0x1e4>)
 8015aa2:	681b      	ldr	r3, [r3, #0]
 8015aa4:	7c58      	ldrb	r0, [r3, #17]
 8015aa6:	f7f8 fca7 	bl	800e3f8 <GUI_GetBitsPerPixelEx>
 8015aaa:	2808      	cmp	r0, #8
 8015aac:	4682      	mov	sl, r0
 8015aae:	dd15      	ble.n	8015adc <LCD_ReadRectEx+0x58>
 8015ab0:	2810      	cmp	r0, #16
 8015ab2:	bfcc      	ite	gt
 8015ab4:	f04f 0904 	movgt.w	r9, #4
 8015ab8:	f04f 0902 	movle.w	r9, #2
 8015abc:	e010      	b.n	8015ae0 <LCD_ReadRectEx+0x5c>
 8015abe:	a811      	add	r0, sp, #68	; 0x44
 8015ac0:	2101      	movs	r1, #1
 8015ac2:	4798      	blx	r3
 8015ac4:	4684      	mov	ip, r0
 8015ac6:	2800      	cmp	r0, #0
 8015ac8:	d0ea      	beq.n	8015aa0 <LCD_ReadRectEx+0x1c>
 8015aca:	9b04      	ldr	r3, [sp, #16]
 8015acc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015ace:	e88d 0018 	stmia.w	sp, {r3, r4}
 8015ad2:	4631      	mov	r1, r6
 8015ad4:	462a      	mov	r2, r5
 8015ad6:	463b      	mov	r3, r7
 8015ad8:	47e0      	blx	ip
 8015ada:	e0c1      	b.n	8015c60 <LCD_ReadRectEx+0x1dc>
 8015adc:	f04f 0901 	mov.w	r9, #1
 8015ae0:	f04f 0b00 	mov.w	fp, #0
 8015ae4:	9b04      	ldr	r3, [sp, #16]
 8015ae6:	429d      	cmp	r5, r3
 8015ae8:	f300 80ba 	bgt.w	8015c60 <LCD_ReadRectEx+0x1dc>
 8015aec:	f1b9 0f02 	cmp.w	r9, #2
 8015af0:	d009      	beq.n	8015b06 <LCD_ReadRectEx+0x82>
 8015af2:	f1b9 0f04 	cmp.w	r9, #4
 8015af6:	d004      	beq.n	8015b02 <LCD_ReadRectEx+0x7e>
 8015af8:	f1b9 0f01 	cmp.w	r9, #1
 8015afc:	f040 80ae 	bne.w	8015c5c <LCD_ReadRectEx+0x1d8>
 8015b00:	e003      	b.n	8015b0a <LCD_ReadRectEx+0x86>
 8015b02:	46b4      	mov	ip, r6
 8015b04:	e09b      	b.n	8015c3e <LCD_ReadRectEx+0x1ba>
 8015b06:	46b4      	mov	ip, r6
 8015b08:	e08a      	b.n	8015c20 <LCD_ReadRectEx+0x19c>
 8015b0a:	f10a 32ff 	add.w	r2, sl, #4294967295
 8015b0e:	2a07      	cmp	r2, #7
 8015b10:	f200 80a4 	bhi.w	8015c5c <LCD_ReadRectEx+0x1d8>
 8015b14:	e8df f002 	tbb	[pc, r2]
 8015b18:	0606080a 	.word	0x0606080a
 8015b1c:	04040404 	.word	0x04040404
 8015b20:	46b4      	mov	ip, r6
 8015b22:	e066      	b.n	8015bf2 <LCD_ReadRectEx+0x16e>
 8015b24:	46b4      	mov	ip, r6
 8015b26:	e047      	b.n	8015bb8 <LCD_ReadRectEx+0x134>
 8015b28:	46b4      	mov	ip, r6
 8015b2a:	e022      	b.n	8015b72 <LCD_ReadRectEx+0xee>
 8015b2c:	46b4      	mov	ip, r6
 8015b2e:	45bc      	cmp	ip, r7
 8015b30:	f300 8094 	bgt.w	8015c5c <LCD_ReadRectEx+0x1d8>
 8015b34:	4661      	mov	r1, ip
 8015b36:	462a      	mov	r2, r5
 8015b38:	f8cd c00c 	str.w	ip, [sp, #12]
 8015b3c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015b3e:	47c0      	blx	r8
 8015b40:	f1cb 0207 	rsb	r2, fp, #7
 8015b44:	fa00 f202 	lsl.w	r2, r0, r2
 8015b48:	f64f 717f 	movw	r1, #65407	; 0xff7f
 8015b4c:	7820      	ldrb	r0, [r4, #0]
 8015b4e:	fa41 f10b 	asr.w	r1, r1, fp
 8015b52:	4001      	ands	r1, r0
 8015b54:	430a      	orrs	r2, r1
 8015b56:	7022      	strb	r2, [r4, #0]
 8015b58:	f10b 0301 	add.w	r3, fp, #1
 8015b5c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015b60:	f023 0207 	bic.w	r2, r3, #7
 8015b64:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8015b68:	fa43 fb02 	asr.w	fp, r3, r2
 8015b6c:	f10c 0c01 	add.w	ip, ip, #1
 8015b70:	e7dd      	b.n	8015b2e <LCD_ReadRectEx+0xaa>
 8015b72:	45bc      	cmp	ip, r7
 8015b74:	dc72      	bgt.n	8015c5c <LCD_ReadRectEx+0x1d8>
 8015b76:	4661      	mov	r1, ip
 8015b78:	462a      	mov	r2, r5
 8015b7a:	f8cd c00c 	str.w	ip, [sp, #12]
 8015b7e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015b80:	47c0      	blx	r8
 8015b82:	ea4f 024b 	mov.w	r2, fp, lsl #1
 8015b86:	f1c2 0106 	rsb	r1, r2, #6
 8015b8a:	fa00 f101 	lsl.w	r1, r0, r1
 8015b8e:	f64f 703f 	movw	r0, #65343	; 0xff3f
 8015b92:	fa40 f202 	asr.w	r2, r0, r2
 8015b96:	7820      	ldrb	r0, [r4, #0]
 8015b98:	4002      	ands	r2, r0
 8015b9a:	4311      	orrs	r1, r2
 8015b9c:	7021      	strb	r1, [r4, #0]
 8015b9e:	f10b 0301 	add.w	r3, fp, #1
 8015ba2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015ba6:	f023 0203 	bic.w	r2, r3, #3
 8015baa:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 8015bae:	fa43 fb02 	asr.w	fp, r3, r2
 8015bb2:	f10c 0c01 	add.w	ip, ip, #1
 8015bb6:	e7dc      	b.n	8015b72 <LCD_ReadRectEx+0xee>
 8015bb8:	45bc      	cmp	ip, r7
 8015bba:	dc4f      	bgt.n	8015c5c <LCD_ReadRectEx+0x1d8>
 8015bbc:	4661      	mov	r1, ip
 8015bbe:	462a      	mov	r2, r5
 8015bc0:	f8cd c00c 	str.w	ip, [sp, #12]
 8015bc4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015bc6:	47c0      	blx	r8
 8015bc8:	ea4f 028b 	mov.w	r2, fp, lsl #2
 8015bcc:	f1c2 0104 	rsb	r1, r2, #4
 8015bd0:	fa00 f101 	lsl.w	r1, r0, r1
 8015bd4:	200f      	movs	r0, #15
 8015bd6:	fa00 f202 	lsl.w	r2, r0, r2
 8015bda:	7820      	ldrb	r0, [r4, #0]
 8015bdc:	4002      	ands	r2, r0
 8015bde:	4311      	orrs	r1, r2
 8015be0:	7021      	strb	r1, [r4, #0]
 8015be2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015be6:	445c      	add	r4, fp
 8015be8:	f10c 0c01 	add.w	ip, ip, #1
 8015bec:	f08b 0b01 	eor.w	fp, fp, #1
 8015bf0:	e7e2      	b.n	8015bb8 <LCD_ReadRectEx+0x134>
 8015bf2:	4273      	negs	r3, r6
 8015bf4:	1ba2      	subs	r2, r4, r6
 8015bf6:	45bc      	cmp	ip, r7
 8015bf8:	9305      	str	r3, [sp, #20]
 8015bfa:	4462      	add	r2, ip
 8015bfc:	dc0e      	bgt.n	8015c1c <LCD_ReadRectEx+0x198>
 8015bfe:	4661      	mov	r1, ip
 8015c00:	462a      	mov	r2, r5
 8015c02:	f8cd c00c 	str.w	ip, [sp, #12]
 8015c06:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c08:	47c0      	blx	r8
 8015c0a:	9a05      	ldr	r2, [sp, #20]
 8015c0c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015c10:	4422      	add	r2, r4
 8015c12:	f802 000c 	strb.w	r0, [r2, ip]
 8015c16:	f10c 0c01 	add.w	ip, ip, #1
 8015c1a:	e7ea      	b.n	8015bf2 <LCD_ReadRectEx+0x16e>
 8015c1c:	4614      	mov	r4, r2
 8015c1e:	e01d      	b.n	8015c5c <LCD_ReadRectEx+0x1d8>
 8015c20:	45bc      	cmp	ip, r7
 8015c22:	dc1b      	bgt.n	8015c5c <LCD_ReadRectEx+0x1d8>
 8015c24:	4661      	mov	r1, ip
 8015c26:	f8cd c00c 	str.w	ip, [sp, #12]
 8015c2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c2c:	462a      	mov	r2, r5
 8015c2e:	47c0      	blx	r8
 8015c30:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015c34:	f824 0b02 	strh.w	r0, [r4], #2
 8015c38:	f10c 0c01 	add.w	ip, ip, #1
 8015c3c:	e7f0      	b.n	8015c20 <LCD_ReadRectEx+0x19c>
 8015c3e:	45bc      	cmp	ip, r7
 8015c40:	dc0c      	bgt.n	8015c5c <LCD_ReadRectEx+0x1d8>
 8015c42:	4661      	mov	r1, ip
 8015c44:	f8cd c00c 	str.w	ip, [sp, #12]
 8015c48:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c4a:	462a      	mov	r2, r5
 8015c4c:	47c0      	blx	r8
 8015c4e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015c52:	f844 0b04 	str.w	r0, [r4], #4
 8015c56:	f10c 0c01 	add.w	ip, ip, #1
 8015c5a:	e7f0      	b.n	8015c3e <LCD_ReadRectEx+0x1ba>
 8015c5c:	3501      	adds	r5, #1
 8015c5e:	e741      	b.n	8015ae4 <LCD_ReadRectEx+0x60>
 8015c60:	b007      	add	sp, #28
 8015c62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c66:	bf00      	nop
 8015c68:	2000016c 	.word	0x2000016c

08015c6c <GUI_ReadRectEx>:
 8015c6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c6e:	4d16      	ldr	r5, [pc, #88]	; (8015cc8 <GUI_ReadRectEx+0x5c>)
 8015c70:	9e05      	ldr	r6, [sp, #20]
 8015c72:	682d      	ldr	r5, [r5, #0]
 8015c74:	9c06      	ldr	r4, [sp, #24]
 8015c76:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 8015c7a:	42b8      	cmp	r0, r7
 8015c7c:	bfb8      	it	lt
 8015c7e:	4638      	movlt	r0, r7
 8015c80:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 8015c84:	42ba      	cmp	r2, r7
 8015c86:	bfa8      	it	ge
 8015c88:	463a      	movge	r2, r7
 8015c8a:	4282      	cmp	r2, r0
 8015c8c:	db1b      	blt.n	8015cc6 <GUI_ReadRectEx+0x5a>
 8015c8e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8015c92:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 8015c96:	42b9      	cmp	r1, r7
 8015c98:	bfb8      	it	lt
 8015c9a:	4639      	movlt	r1, r7
 8015c9c:	42ab      	cmp	r3, r5
 8015c9e:	bfa8      	it	ge
 8015ca0:	462b      	movge	r3, r5
 8015ca2:	428b      	cmp	r3, r1
 8015ca4:	db0f      	blt.n	8015cc6 <GUI_ReadRectEx+0x5a>
 8015ca6:	68e5      	ldr	r5, [r4, #12]
 8015ca8:	682d      	ldr	r5, [r5, #0]
 8015caa:	f035 0704 	bics.w	r7, r5, #4
 8015cae:	d105      	bne.n	8015cbc <GUI_ReadRectEx+0x50>
 8015cb0:	9605      	str	r6, [sp, #20]
 8015cb2:	9406      	str	r4, [sp, #24]
 8015cb4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015cb8:	f7ff bee4 	b.w	8015a84 <LCD_ReadRectEx>
 8015cbc:	6825      	ldr	r5, [r4, #0]
 8015cbe:	2d00      	cmp	r5, #0
 8015cc0:	d0f6      	beq.n	8015cb0 <GUI_ReadRectEx+0x44>
 8015cc2:	462c      	mov	r4, r5
 8015cc4:	e7ef      	b.n	8015ca6 <GUI_ReadRectEx+0x3a>
 8015cc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015cc8:	2000016c 	.word	0x2000016c

08015ccc <_OnExit>:
 8015ccc:	b510      	push	{r4, lr}
 8015cce:	4c03      	ldr	r4, [pc, #12]	; (8015cdc <_OnExit+0x10>)
 8015cd0:	6820      	ldr	r0, [r4, #0]
 8015cd2:	f7fb fb61 	bl	8011398 <GUI_ALLOC_FreeFixedBlock>
 8015cd6:	2300      	movs	r3, #0
 8015cd8:	6023      	str	r3, [r4, #0]
 8015cda:	bd10      	pop	{r4, pc}
 8015cdc:	20019aec 	.word	0x20019aec

08015ce0 <LCD_InitColors>:
 8015ce0:	b538      	push	{r3, r4, r5, lr}
 8015ce2:	4d09      	ldr	r5, [pc, #36]	; (8015d08 <LCD_InitColors+0x28>)
 8015ce4:	682c      	ldr	r4, [r5, #0]
 8015ce6:	b95c      	cbnz	r4, 8015d00 <LCD_InitColors+0x20>
 8015ce8:	4b08      	ldr	r3, [pc, #32]	; (8015d0c <LCD_InitColors+0x2c>)
 8015cea:	6818      	ldr	r0, [r3, #0]
 8015cec:	0080      	lsls	r0, r0, #2
 8015cee:	f7fb fcbf 	bl	8011670 <GUI_ALLOC_GetFixedBlock>
 8015cf2:	6028      	str	r0, [r5, #0]
 8015cf4:	b130      	cbz	r0, 8015d04 <LCD_InitColors+0x24>
 8015cf6:	4806      	ldr	r0, [pc, #24]	; (8015d10 <LCD_InitColors+0x30>)
 8015cf8:	4b06      	ldr	r3, [pc, #24]	; (8015d14 <LCD_InitColors+0x34>)
 8015cfa:	6003      	str	r3, [r0, #0]
 8015cfc:	f7fa ff40 	bl	8010b80 <GUI__RegisterExit>
 8015d00:	2000      	movs	r0, #0
 8015d02:	bd38      	pop	{r3, r4, r5, pc}
 8015d04:	2001      	movs	r0, #1
 8015d06:	bd38      	pop	{r3, r4, r5, pc}
 8015d08:	20019aec 	.word	0x20019aec
 8015d0c:	20000324 	.word	0x20000324
 8015d10:	200196f0 	.word	0x200196f0
 8015d14:	08015ccd 	.word	0x08015ccd

08015d18 <LCD_InitLUT>:
 8015d18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015d1c:	f002 f9a6 	bl	801806c <LCD_GetNumLayers>
 8015d20:	2400      	movs	r4, #0
 8015d22:	4680      	mov	r8, r0
 8015d24:	4544      	cmp	r4, r8
 8015d26:	da2c      	bge.n	8015d82 <LCD_InitLUT+0x6a>
 8015d28:	4620      	mov	r0, r4
 8015d2a:	f7fa fdef 	bl	801090c <GUI_DEVICE__GetpDriver>
 8015d2e:	b330      	cbz	r0, 8015d7e <LCD_InitLUT+0x66>
 8015d30:	4e15      	ldr	r6, [pc, #84]	; (8015d88 <LCD_InitLUT+0x70>)
 8015d32:	6833      	ldr	r3, [r6, #0]
 8015d34:	4620      	mov	r0, r4
 8015d36:	f893 9011 	ldrb.w	r9, [r3, #17]
 8015d3a:	745c      	strb	r4, [r3, #17]
 8015d3c:	f7f8 fb3e 	bl	800e3bc <LCD_GetBitsPerPixelEx>
 8015d40:	2808      	cmp	r0, #8
 8015d42:	dd03      	ble.n	8015d4c <LCD_InitLUT+0x34>
 8015d44:	6833      	ldr	r3, [r6, #0]
 8015d46:	f883 9011 	strb.w	r9, [r3, #17]
 8015d4a:	e018      	b.n	8015d7e <LCD_InitLUT+0x66>
 8015d4c:	4b0f      	ldr	r3, [pc, #60]	; (8015d8c <LCD_InitLUT+0x74>)
 8015d4e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8015d52:	691a      	ldr	r2, [r3, #16]
 8015d54:	4b0e      	ldr	r3, [pc, #56]	; (8015d90 <LCD_InitLUT+0x78>)
 8015d56:	429a      	cmp	r2, r3
 8015d58:	d0f4      	beq.n	8015d44 <LCD_InitLUT+0x2c>
 8015d5a:	4620      	mov	r0, r4
 8015d5c:	f7f8 fb31 	bl	800e3c2 <LCD_GetNumColorsEx>
 8015d60:	2500      	movs	r5, #0
 8015d62:	4682      	mov	sl, r0
 8015d64:	4555      	cmp	r5, sl
 8015d66:	daed      	bge.n	8015d44 <LCD_InitLUT+0x2c>
 8015d68:	b2ef      	uxtb	r7, r5
 8015d6a:	4638      	mov	r0, r7
 8015d6c:	f7f8 fefc 	bl	800eb68 <LCD_Index2Color>
 8015d70:	4639      	mov	r1, r7
 8015d72:	4602      	mov	r2, r0
 8015d74:	4620      	mov	r0, r4
 8015d76:	f7f8 fac5 	bl	800e304 <LCD_SetLUTEntryEx>
 8015d7a:	3501      	adds	r5, #1
 8015d7c:	e7f2      	b.n	8015d64 <LCD_InitLUT+0x4c>
 8015d7e:	3401      	adds	r4, #1
 8015d80:	e7d0      	b.n	8015d24 <LCD_InitLUT+0xc>
 8015d82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015d86:	bf00      	nop
 8015d88:	2000016c 	.word	0x2000016c
 8015d8c:	200199ec 	.word	0x200199ec
 8015d90:	0801fee4 	.word	0x0801fee4

08015d94 <LCD_AA_SetAndMask>:
 8015d94:	4b02      	ldr	r3, [pc, #8]	; (8015da0 <LCD_AA_SetAndMask+0xc>)
 8015d96:	681a      	ldr	r2, [r3, #0]
 8015d98:	6018      	str	r0, [r3, #0]
 8015d9a:	4610      	mov	r0, r2
 8015d9c:	4770      	bx	lr
 8015d9e:	bf00      	nop
 8015da0:	20000328 	.word	0x20000328

08015da4 <LCD_AA_MixColors16>:
 8015da4:	b538      	push	{r3, r4, r5, lr}
 8015da6:	0e0d      	lsrs	r5, r1, #24
 8015da8:	2dff      	cmp	r5, #255	; 0xff
 8015daa:	460b      	mov	r3, r1
 8015dac:	d11e      	bne.n	8015dec <LCD_AA_MixColors16+0x48>
 8015dae:	0e01      	lsrs	r1, r0, #24
 8015db0:	d109      	bne.n	8015dc6 <LCD_AA_MixColors16+0x22>
 8015db2:	f06f 0310 	mvn.w	r3, #16
 8015db6:	4353      	muls	r3, r2
 8015db8:	4a12      	ldr	r2, [pc, #72]	; (8015e04 <LCD_AA_MixColors16+0x60>)
 8015dba:	33ff      	adds	r3, #255	; 0xff
 8015dbc:	6811      	ldr	r1, [r2, #0]
 8015dbe:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8015dc2:	400b      	ands	r3, r1
 8015dc4:	e01b      	b.n	8015dfe <LCD_AA_MixColors16+0x5a>
 8015dc6:	29fe      	cmp	r1, #254	; 0xfe
 8015dc8:	d819      	bhi.n	8015dfe <LCD_AA_MixColors16+0x5a>
 8015dca:	f06f 0310 	mvn.w	r3, #16
 8015dce:	435a      	muls	r2, r3
 8015dd0:	32ff      	adds	r2, #255	; 0xff
 8015dd2:	f1c2 03ff 	rsb	r3, r2, #255	; 0xff
 8015dd6:	434b      	muls	r3, r1
 8015dd8:	fbb3 f3f5 	udiv	r3, r3, r5
 8015ddc:	4413      	add	r3, r2
 8015dde:	4a09      	ldr	r2, [pc, #36]	; (8015e04 <LCD_AA_MixColors16+0x60>)
 8015de0:	f020 447f 	bic.w	r4, r0, #4278190080	; 0xff000000
 8015de4:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
 8015de8:	6810      	ldr	r0, [r2, #0]
 8015dea:	e007      	b.n	8015dfc <LCD_AA_MixColors16+0x58>
 8015dec:	4b06      	ldr	r3, [pc, #24]	; (8015e08 <LCD_AA_MixColors16+0x64>)
 8015dee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015df2:	681d      	ldr	r5, [r3, #0]
 8015df4:	b2d2      	uxtb	r2, r2
 8015df6:	47a8      	blx	r5
 8015df8:	4b02      	ldr	r3, [pc, #8]	; (8015e04 <LCD_AA_MixColors16+0x60>)
 8015dfa:	681b      	ldr	r3, [r3, #0]
 8015dfc:	4003      	ands	r3, r0
 8015dfe:	4618      	mov	r0, r3
 8015e00:	bd38      	pop	{r3, r4, r5, pc}
 8015e02:	bf00      	nop
 8015e04:	20000328 	.word	0x20000328
 8015e08:	20000150 	.word	0x20000150

08015e0c <LCD_SetPixelAA4_Trans>:
 8015e0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015e10:	4605      	mov	r5, r0
 8015e12:	460c      	mov	r4, r1
 8015e14:	4616      	mov	r6, r2
 8015e16:	2a00      	cmp	r2, #0
 8015e18:	d03d      	beq.n	8015e96 <LCD_SetPixelAA4_Trans+0x8a>
 8015e1a:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8015ea0 <LCD_SetPixelAA4_Trans+0x94>
 8015e1e:	f8d8 3000 	ldr.w	r3, [r8]
 8015e22:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8015e26:	4291      	cmp	r1, r2
 8015e28:	db35      	blt.n	8015e96 <LCD_SetPixelAA4_Trans+0x8a>
 8015e2a:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 8015e2e:	4291      	cmp	r1, r2
 8015e30:	dc31      	bgt.n	8015e96 <LCD_SetPixelAA4_Trans+0x8a>
 8015e32:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8015e36:	4290      	cmp	r0, r2
 8015e38:	db2d      	blt.n	8015e96 <LCD_SetPixelAA4_Trans+0x8a>
 8015e3a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015e3e:	4290      	cmp	r0, r2
 8015e40:	dc29      	bgt.n	8015e96 <LCD_SetPixelAA4_Trans+0x8a>
 8015e42:	2e0e      	cmp	r6, #14
 8015e44:	4f15      	ldr	r7, [pc, #84]	; (8015e9c <LCD_SetPixelAA4_Trans+0x90>)
 8015e46:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8015e4a:	d909      	bls.n	8015e60 <LCD_SetPixelAA4_Trans+0x54>
 8015e4c:	7c5b      	ldrb	r3, [r3, #17]
 8015e4e:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8015e52:	68c3      	ldr	r3, [r0, #12]
 8015e54:	4629      	mov	r1, r5
 8015e56:	699e      	ldr	r6, [r3, #24]
 8015e58:	f8de 3000 	ldr.w	r3, [lr]
 8015e5c:	4622      	mov	r2, r4
 8015e5e:	e019      	b.n	8015e94 <LCD_SetPixelAA4_Trans+0x88>
 8015e60:	f8de 0000 	ldr.w	r0, [lr]
 8015e64:	f7f8 fe80 	bl	800eb68 <LCD_Index2Color>
 8015e68:	4621      	mov	r1, r4
 8015e6a:	4681      	mov	r9, r0
 8015e6c:	4628      	mov	r0, r5
 8015e6e:	f002 f8c8 	bl	8018002 <LCD_GetPixelColor>
 8015e72:	4632      	mov	r2, r6
 8015e74:	4601      	mov	r1, r0
 8015e76:	4648      	mov	r0, r9
 8015e78:	f7ff ff94 	bl	8015da4 <LCD_AA_MixColors16>
 8015e7c:	f7f8 fe64 	bl	800eb48 <LCD_Color2Index>
 8015e80:	f8d8 2000 	ldr.w	r2, [r8]
 8015e84:	7c52      	ldrb	r2, [r2, #17]
 8015e86:	4603      	mov	r3, r0
 8015e88:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
 8015e8c:	68c1      	ldr	r1, [r0, #12]
 8015e8e:	4622      	mov	r2, r4
 8015e90:	698e      	ldr	r6, [r1, #24]
 8015e92:	4629      	mov	r1, r5
 8015e94:	47b0      	blx	r6
 8015e96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015e9a:	bf00      	nop
 8015e9c:	200199ec 	.word	0x200199ec
 8015ea0:	2000016c 	.word	0x2000016c

08015ea4 <LCD_SetPixelAA4_NoTrans>:
 8015ea4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015ea8:	4f27      	ldr	r7, [pc, #156]	; (8015f48 <LCD_SetPixelAA4_NoTrans+0xa4>)
 8015eaa:	683b      	ldr	r3, [r7, #0]
 8015eac:	4690      	mov	r8, r2
 8015eae:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8015eb2:	4291      	cmp	r1, r2
 8015eb4:	4605      	mov	r5, r0
 8015eb6:	460c      	mov	r4, r1
 8015eb8:	db43      	blt.n	8015f42 <LCD_SetPixelAA4_NoTrans+0x9e>
 8015eba:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 8015ebe:	4291      	cmp	r1, r2
 8015ec0:	dc3f      	bgt.n	8015f42 <LCD_SetPixelAA4_NoTrans+0x9e>
 8015ec2:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8015ec6:	4290      	cmp	r0, r2
 8015ec8:	db3b      	blt.n	8015f42 <LCD_SetPixelAA4_NoTrans+0x9e>
 8015eca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015ece:	4290      	cmp	r0, r2
 8015ed0:	dc37      	bgt.n	8015f42 <LCD_SetPixelAA4_NoTrans+0x9e>
 8015ed2:	4e1e      	ldr	r6, [pc, #120]	; (8015f4c <LCD_SetPixelAA4_NoTrans+0xa8>)
 8015ed4:	f1b8 0f00 	cmp.w	r8, #0
 8015ed8:	d109      	bne.n	8015eee <LCD_SetPixelAA4_NoTrans+0x4a>
 8015eda:	7c5a      	ldrb	r2, [r3, #17]
 8015edc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015ede:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 8015ee2:	681b      	ldr	r3, [r3, #0]
 8015ee4:	68c2      	ldr	r2, [r0, #12]
 8015ee6:	4629      	mov	r1, r5
 8015ee8:	6996      	ldr	r6, [r2, #24]
 8015eea:	4622      	mov	r2, r4
 8015eec:	e028      	b.n	8015f40 <LCD_SetPixelAA4_NoTrans+0x9c>
 8015eee:	f1b8 0f0f 	cmp.w	r8, #15
 8015ef2:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8015ef6:	d109      	bne.n	8015f0c <LCD_SetPixelAA4_NoTrans+0x68>
 8015ef8:	7c5b      	ldrb	r3, [r3, #17]
 8015efa:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 8015efe:	68c3      	ldr	r3, [r0, #12]
 8015f00:	4629      	mov	r1, r5
 8015f02:	699e      	ldr	r6, [r3, #24]
 8015f04:	f8de 3000 	ldr.w	r3, [lr]
 8015f08:	4622      	mov	r2, r4
 8015f0a:	e019      	b.n	8015f40 <LCD_SetPixelAA4_NoTrans+0x9c>
 8015f0c:	f8de 0000 	ldr.w	r0, [lr]
 8015f10:	f7f8 fe2a 	bl	800eb68 <LCD_Index2Color>
 8015f14:	683b      	ldr	r3, [r7, #0]
 8015f16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015f18:	4681      	mov	r9, r0
 8015f1a:	6818      	ldr	r0, [r3, #0]
 8015f1c:	f7f8 fe24 	bl	800eb68 <LCD_Index2Color>
 8015f20:	4642      	mov	r2, r8
 8015f22:	4601      	mov	r1, r0
 8015f24:	4648      	mov	r0, r9
 8015f26:	f7ff ff3d 	bl	8015da4 <LCD_AA_MixColors16>
 8015f2a:	f7f8 fe0d 	bl	800eb48 <LCD_Color2Index>
 8015f2e:	683a      	ldr	r2, [r7, #0]
 8015f30:	7c52      	ldrb	r2, [r2, #17]
 8015f32:	4603      	mov	r3, r0
 8015f34:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 8015f38:	68c1      	ldr	r1, [r0, #12]
 8015f3a:	4622      	mov	r2, r4
 8015f3c:	698e      	ldr	r6, [r1, #24]
 8015f3e:	4629      	mov	r1, r5
 8015f40:	47b0      	blx	r6
 8015f42:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015f46:	bf00      	nop
 8015f48:	2000016c 	.word	0x2000016c
 8015f4c:	200199ec 	.word	0x200199ec

08015f50 <LCD_AA_MixColors256>:
 8015f50:	b508      	push	{r3, lr}
 8015f52:	4b03      	ldr	r3, [pc, #12]	; (8015f60 <LCD_AA_MixColors256+0x10>)
 8015f54:	681b      	ldr	r3, [r3, #0]
 8015f56:	4798      	blx	r3
 8015f58:	4b02      	ldr	r3, [pc, #8]	; (8015f64 <LCD_AA_MixColors256+0x14>)
 8015f5a:	681b      	ldr	r3, [r3, #0]
 8015f5c:	4018      	ands	r0, r3
 8015f5e:	bd08      	pop	{r3, pc}
 8015f60:	20000150 	.word	0x20000150
 8015f64:	20000328 	.word	0x20000328

08015f68 <LCD_SetPixelAA8_Trans>:
 8015f68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015f6c:	4605      	mov	r5, r0
 8015f6e:	460c      	mov	r4, r1
 8015f70:	4616      	mov	r6, r2
 8015f72:	2a00      	cmp	r2, #0
 8015f74:	d03d      	beq.n	8015ff2 <LCD_SetPixelAA8_Trans+0x8a>
 8015f76:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8015ffc <LCD_SetPixelAA8_Trans+0x94>
 8015f7a:	f8d8 3000 	ldr.w	r3, [r8]
 8015f7e:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8015f82:	4291      	cmp	r1, r2
 8015f84:	db35      	blt.n	8015ff2 <LCD_SetPixelAA8_Trans+0x8a>
 8015f86:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 8015f8a:	4291      	cmp	r1, r2
 8015f8c:	dc31      	bgt.n	8015ff2 <LCD_SetPixelAA8_Trans+0x8a>
 8015f8e:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8015f92:	4290      	cmp	r0, r2
 8015f94:	db2d      	blt.n	8015ff2 <LCD_SetPixelAA8_Trans+0x8a>
 8015f96:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015f9a:	4290      	cmp	r0, r2
 8015f9c:	dc29      	bgt.n	8015ff2 <LCD_SetPixelAA8_Trans+0x8a>
 8015f9e:	2eff      	cmp	r6, #255	; 0xff
 8015fa0:	4f15      	ldr	r7, [pc, #84]	; (8015ff8 <LCD_SetPixelAA8_Trans+0x90>)
 8015fa2:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8015fa6:	d109      	bne.n	8015fbc <LCD_SetPixelAA8_Trans+0x54>
 8015fa8:	7c5b      	ldrb	r3, [r3, #17]
 8015faa:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8015fae:	68c3      	ldr	r3, [r0, #12]
 8015fb0:	4629      	mov	r1, r5
 8015fb2:	699e      	ldr	r6, [r3, #24]
 8015fb4:	f8de 3000 	ldr.w	r3, [lr]
 8015fb8:	4622      	mov	r2, r4
 8015fba:	e019      	b.n	8015ff0 <LCD_SetPixelAA8_Trans+0x88>
 8015fbc:	f8de 0000 	ldr.w	r0, [lr]
 8015fc0:	f7f8 fdd2 	bl	800eb68 <LCD_Index2Color>
 8015fc4:	4621      	mov	r1, r4
 8015fc6:	4681      	mov	r9, r0
 8015fc8:	4628      	mov	r0, r5
 8015fca:	f002 f81a 	bl	8018002 <LCD_GetPixelColor>
 8015fce:	4632      	mov	r2, r6
 8015fd0:	4601      	mov	r1, r0
 8015fd2:	4648      	mov	r0, r9
 8015fd4:	f7ff ffbc 	bl	8015f50 <LCD_AA_MixColors256>
 8015fd8:	f7f8 fdb6 	bl	800eb48 <LCD_Color2Index>
 8015fdc:	f8d8 2000 	ldr.w	r2, [r8]
 8015fe0:	7c52      	ldrb	r2, [r2, #17]
 8015fe2:	4603      	mov	r3, r0
 8015fe4:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
 8015fe8:	68c1      	ldr	r1, [r0, #12]
 8015fea:	4622      	mov	r2, r4
 8015fec:	698e      	ldr	r6, [r1, #24]
 8015fee:	4629      	mov	r1, r5
 8015ff0:	47b0      	blx	r6
 8015ff2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015ff6:	bf00      	nop
 8015ff8:	200199ec 	.word	0x200199ec
 8015ffc:	2000016c 	.word	0x2000016c

08016000 <LCD_SetPixelAA8_NoTrans>:
 8016000:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016004:	4f27      	ldr	r7, [pc, #156]	; (80160a4 <LCD_SetPixelAA8_NoTrans+0xa4>)
 8016006:	683b      	ldr	r3, [r7, #0]
 8016008:	4690      	mov	r8, r2
 801600a:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 801600e:	4291      	cmp	r1, r2
 8016010:	4605      	mov	r5, r0
 8016012:	460c      	mov	r4, r1
 8016014:	db43      	blt.n	801609e <LCD_SetPixelAA8_NoTrans+0x9e>
 8016016:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 801601a:	4291      	cmp	r1, r2
 801601c:	dc3f      	bgt.n	801609e <LCD_SetPixelAA8_NoTrans+0x9e>
 801601e:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8016022:	4290      	cmp	r0, r2
 8016024:	db3b      	blt.n	801609e <LCD_SetPixelAA8_NoTrans+0x9e>
 8016026:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801602a:	4290      	cmp	r0, r2
 801602c:	dc37      	bgt.n	801609e <LCD_SetPixelAA8_NoTrans+0x9e>
 801602e:	4e1e      	ldr	r6, [pc, #120]	; (80160a8 <LCD_SetPixelAA8_NoTrans+0xa8>)
 8016030:	f1b8 0f00 	cmp.w	r8, #0
 8016034:	d109      	bne.n	801604a <LCD_SetPixelAA8_NoTrans+0x4a>
 8016036:	7c5a      	ldrb	r2, [r3, #17]
 8016038:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801603a:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 801603e:	681b      	ldr	r3, [r3, #0]
 8016040:	68c2      	ldr	r2, [r0, #12]
 8016042:	4629      	mov	r1, r5
 8016044:	6996      	ldr	r6, [r2, #24]
 8016046:	4622      	mov	r2, r4
 8016048:	e028      	b.n	801609c <LCD_SetPixelAA8_NoTrans+0x9c>
 801604a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801604e:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8016052:	d109      	bne.n	8016068 <LCD_SetPixelAA8_NoTrans+0x68>
 8016054:	7c5b      	ldrb	r3, [r3, #17]
 8016056:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 801605a:	68c3      	ldr	r3, [r0, #12]
 801605c:	4629      	mov	r1, r5
 801605e:	699e      	ldr	r6, [r3, #24]
 8016060:	f8de 3000 	ldr.w	r3, [lr]
 8016064:	4622      	mov	r2, r4
 8016066:	e019      	b.n	801609c <LCD_SetPixelAA8_NoTrans+0x9c>
 8016068:	f8de 0000 	ldr.w	r0, [lr]
 801606c:	f7f8 fd7c 	bl	800eb68 <LCD_Index2Color>
 8016070:	683b      	ldr	r3, [r7, #0]
 8016072:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016074:	4681      	mov	r9, r0
 8016076:	6818      	ldr	r0, [r3, #0]
 8016078:	f7f8 fd76 	bl	800eb68 <LCD_Index2Color>
 801607c:	4642      	mov	r2, r8
 801607e:	4601      	mov	r1, r0
 8016080:	4648      	mov	r0, r9
 8016082:	f7ff ff65 	bl	8015f50 <LCD_AA_MixColors256>
 8016086:	f7f8 fd5f 	bl	800eb48 <LCD_Color2Index>
 801608a:	683a      	ldr	r2, [r7, #0]
 801608c:	7c52      	ldrb	r2, [r2, #17]
 801608e:	4603      	mov	r3, r0
 8016090:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 8016094:	68c1      	ldr	r1, [r0, #12]
 8016096:	4622      	mov	r2, r4
 8016098:	698e      	ldr	r6, [r1, #24]
 801609a:	4629      	mov	r1, r5
 801609c:	47b0      	blx	r6
 801609e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80160a2:	bf00      	nop
 80160a4:	2000016c 	.word	0x2000016c
 80160a8:	200199ec 	.word	0x200199ec

080160ac <LCD__GetPfSetPixel>:
 80160ac:	2804      	cmp	r0, #4
 80160ae:	d003      	beq.n	80160b8 <LCD__GetPfSetPixel+0xc>
 80160b0:	2808      	cmp	r0, #8
 80160b2:	d009      	beq.n	80160c8 <LCD__GetPfSetPixel+0x1c>
 80160b4:	2802      	cmp	r0, #2
 80160b6:	d111      	bne.n	80160dc <LCD__GetPfSetPixel+0x30>
 80160b8:	4b09      	ldr	r3, [pc, #36]	; (80160e0 <LCD__GetPfSetPixel+0x34>)
 80160ba:	480a      	ldr	r0, [pc, #40]	; (80160e4 <LCD__GetPfSetPixel+0x38>)
 80160bc:	681b      	ldr	r3, [r3, #0]
 80160be:	7c1b      	ldrb	r3, [r3, #16]
 80160c0:	f013 0f02 	tst.w	r3, #2
 80160c4:	4b08      	ldr	r3, [pc, #32]	; (80160e8 <LCD__GetPfSetPixel+0x3c>)
 80160c6:	e006      	b.n	80160d6 <LCD__GetPfSetPixel+0x2a>
 80160c8:	4b05      	ldr	r3, [pc, #20]	; (80160e0 <LCD__GetPfSetPixel+0x34>)
 80160ca:	4808      	ldr	r0, [pc, #32]	; (80160ec <LCD__GetPfSetPixel+0x40>)
 80160cc:	681b      	ldr	r3, [r3, #0]
 80160ce:	7c1b      	ldrb	r3, [r3, #16]
 80160d0:	f013 0f02 	tst.w	r3, #2
 80160d4:	4b06      	ldr	r3, [pc, #24]	; (80160f0 <LCD__GetPfSetPixel+0x44>)
 80160d6:	bf08      	it	eq
 80160d8:	4618      	moveq	r0, r3
 80160da:	4770      	bx	lr
 80160dc:	2000      	movs	r0, #0
 80160de:	4770      	bx	lr
 80160e0:	2000016c 	.word	0x2000016c
 80160e4:	08015e0d 	.word	0x08015e0d
 80160e8:	08015ea5 	.word	0x08015ea5
 80160ec:	08015f69 	.word	0x08015f69
 80160f0:	08016001 	.word	0x08016001

080160f4 <GUI__strlen>:
 80160f4:	f04f 33ff 	mov.w	r3, #4294967295
 80160f8:	b118      	cbz	r0, 8016102 <GUI__strlen+0xe>
 80160fa:	3301      	adds	r3, #1
 80160fc:	5cc2      	ldrb	r2, [r0, r3]
 80160fe:	2a00      	cmp	r2, #0
 8016100:	d1fb      	bne.n	80160fa <GUI__strlen+0x6>
 8016102:	4618      	mov	r0, r3
 8016104:	4770      	bx	lr
	...

08016108 <GUI__strcmp>:
 8016108:	b510      	push	{r4, lr}
 801610a:	4b09      	ldr	r3, [pc, #36]	; (8016130 <GUI__strcmp+0x28>)
 801610c:	2800      	cmp	r0, #0
 801610e:	bf08      	it	eq
 8016110:	4618      	moveq	r0, r3
 8016112:	2900      	cmp	r1, #0
 8016114:	bf08      	it	eq
 8016116:	4619      	moveq	r1, r3
 8016118:	2300      	movs	r3, #0
 801611a:	5cc4      	ldrb	r4, [r0, r3]
 801611c:	5cca      	ldrb	r2, [r1, r3]
 801611e:	42a2      	cmp	r2, r4
 8016120:	d104      	bne.n	801612c <GUI__strcmp+0x24>
 8016122:	3301      	adds	r3, #1
 8016124:	2a00      	cmp	r2, #0
 8016126:	d1f8      	bne.n	801611a <GUI__strcmp+0x12>
 8016128:	4610      	mov	r0, r2
 801612a:	bd10      	pop	{r4, pc}
 801612c:	2001      	movs	r0, #1
 801612e:	bd10      	pop	{r4, pc}
 8016130:	0801ff01 	.word	0x0801ff01

08016134 <GUI__strcmp_hp>:
 8016134:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016136:	460d      	mov	r5, r1
 8016138:	b160      	cbz	r0, 8016154 <GUI__strcmp_hp+0x20>
 801613a:	f7fb f941 	bl	80113c0 <GUI_ALLOC_LockH>
 801613e:	ac02      	add	r4, sp, #8
 8016140:	4629      	mov	r1, r5
 8016142:	f844 0d04 	str.w	r0, [r4, #-4]!
 8016146:	f7ff ffdf 	bl	8016108 <GUI__strcmp>
 801614a:	4605      	mov	r5, r0
 801614c:	4620      	mov	r0, r4
 801614e:	f7fb f945 	bl	80113dc <GUI_ALLOC_UnlockH>
 8016152:	e000      	b.n	8016156 <GUI__strcmp_hp+0x22>
 8016154:	2501      	movs	r5, #1
 8016156:	4628      	mov	r0, r5
 8016158:	b003      	add	sp, #12
 801615a:	bd30      	pop	{r4, r5, pc}

0801615c <_GetWordWrap>:
 801615c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016160:	2500      	movs	r5, #0
 8016162:	9001      	str	r0, [sp, #4]
 8016164:	468a      	mov	sl, r1
 8016166:	4691      	mov	r9, r2
 8016168:	46a8      	mov	r8, r5
 801616a:	462e      	mov	r6, r5
 801616c:	462c      	mov	r4, r5
 801616e:	462f      	mov	r7, r5
 8016170:	a801      	add	r0, sp, #4
 8016172:	f7f9 f949 	bl	800f408 <GUI_UC__GetCharCodeInc>
 8016176:	2d00      	cmp	r5, #0
 8016178:	bf08      	it	eq
 801617a:	4605      	moveq	r5, r0
 801617c:	b108      	cbz	r0, 8016182 <_GetWordWrap+0x26>
 801617e:	280a      	cmp	r0, #10
 8016180:	d10b      	bne.n	801619a <_GetWordWrap+0x3e>
 8016182:	4626      	mov	r6, r4
 8016184:	2e00      	cmp	r6, #0
 8016186:	bf18      	it	ne
 8016188:	4634      	movne	r4, r6
 801618a:	f1b9 0f00 	cmp.w	r9, #0
 801618e:	d016      	beq.n	80161be <_GetWordWrap+0x62>
 8016190:	ebc8 0707 	rsb	r7, r8, r7
 8016194:	f8c9 7000 	str.w	r7, [r9]
 8016198:	e011      	b.n	80161be <_GetWordWrap+0x62>
 801619a:	2820      	cmp	r0, #32
 801619c:	d00d      	beq.n	80161ba <_GetWordWrap+0x5e>
 801619e:	2d20      	cmp	r5, #32
 80161a0:	bf04      	itt	eq
 80161a2:	4626      	moveq	r6, r4
 80161a4:	2500      	moveq	r5, #0
 80161a6:	f7fa fff7 	bl	8011198 <GUI_GetCharDistX>
 80161aa:	4407      	add	r7, r0
 80161ac:	4557      	cmp	r7, sl
 80161ae:	4680      	mov	r8, r0
 80161b0:	dd01      	ble.n	80161b6 <_GetWordWrap+0x5a>
 80161b2:	2c00      	cmp	r4, #0
 80161b4:	d1e6      	bne.n	8016184 <_GetWordWrap+0x28>
 80161b6:	3401      	adds	r4, #1
 80161b8:	e7da      	b.n	8016170 <_GetWordWrap+0x14>
 80161ba:	4626      	mov	r6, r4
 80161bc:	e7f3      	b.n	80161a6 <_GetWordWrap+0x4a>
 80161be:	4620      	mov	r0, r4
 80161c0:	b002      	add	sp, #8
 80161c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080161c6 <_GetCharWrap>:
 80161c6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80161c8:	2400      	movs	r4, #0
 80161ca:	9001      	str	r0, [sp, #4]
 80161cc:	460e      	mov	r6, r1
 80161ce:	4625      	mov	r5, r4
 80161d0:	a801      	add	r0, sp, #4
 80161d2:	f7f9 f919 	bl	800f408 <GUI_UC__GetCharCodeInc>
 80161d6:	4607      	mov	r7, r0
 80161d8:	b148      	cbz	r0, 80161ee <_GetCharWrap+0x28>
 80161da:	f7fa ffdd 	bl	8011198 <GUI_GetCharDistX>
 80161de:	4405      	add	r5, r0
 80161e0:	b10c      	cbz	r4, 80161e6 <_GetCharWrap+0x20>
 80161e2:	42b5      	cmp	r5, r6
 80161e4:	dc03      	bgt.n	80161ee <_GetCharWrap+0x28>
 80161e6:	2f0a      	cmp	r7, #10
 80161e8:	d001      	beq.n	80161ee <_GetCharWrap+0x28>
 80161ea:	3401      	adds	r4, #1
 80161ec:	e7f0      	b.n	80161d0 <_GetCharWrap+0xa>
 80161ee:	4620      	mov	r0, r4
 80161f0:	b003      	add	sp, #12
 80161f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080161f4 <_WrapGetNumCharsDisp>:
 80161f4:	2a01      	cmp	r2, #1
 80161f6:	b510      	push	{r4, lr}
 80161f8:	d005      	beq.n	8016206 <_WrapGetNumCharsDisp+0x12>
 80161fa:	2a02      	cmp	r2, #2
 80161fc:	d108      	bne.n	8016210 <_WrapGetNumCharsDisp+0x1c>
 80161fe:	4b07      	ldr	r3, [pc, #28]	; (801621c <_WrapGetNumCharsDisp+0x28>)
 8016200:	681b      	ldr	r3, [r3, #0]
 8016202:	4798      	blx	r3
 8016204:	bd10      	pop	{r4, pc}
 8016206:	4a06      	ldr	r2, [pc, #24]	; (8016220 <_WrapGetNumCharsDisp+0x2c>)
 8016208:	6814      	ldr	r4, [r2, #0]
 801620a:	461a      	mov	r2, r3
 801620c:	47a0      	blx	r4
 801620e:	bd10      	pop	{r4, pc}
 8016210:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8016214:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016218:	f7fa beec 	b.w	8010ff4 <GUI__GetLineNumChars>
 801621c:	2000032c 	.word	0x2000032c
 8016220:	20000330 	.word	0x20000330

08016224 <GUI__WrapGetNumCharsDisp>:
 8016224:	2300      	movs	r3, #0
 8016226:	f7ff bfe5 	b.w	80161f4 <_WrapGetNumCharsDisp>

0801622a <GUI__WrapGetNumCharsToNextLine>:
 801622a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801622c:	b085      	sub	sp, #20
 801622e:	ab03      	add	r3, sp, #12
 8016230:	4617      	mov	r7, r2
 8016232:	460e      	mov	r6, r1
 8016234:	9001      	str	r0, [sp, #4]
 8016236:	f7ff ffdd 	bl	80161f4 <_WrapGetNumCharsDisp>
 801623a:	9d01      	ldr	r5, [sp, #4]
 801623c:	4604      	mov	r4, r0
 801623e:	4621      	mov	r1, r4
 8016240:	4628      	mov	r0, r5
 8016242:	f7f9 f8f5 	bl	800f430 <GUI_UC__NumChars2NumBytes>
 8016246:	4428      	add	r0, r5
 8016248:	ad04      	add	r5, sp, #16
 801624a:	f845 0d0c 	str.w	r0, [r5, #-12]!
 801624e:	4628      	mov	r0, r5
 8016250:	f7f9 f8da 	bl	800f408 <GUI_UC__GetCharCodeInc>
 8016254:	280a      	cmp	r0, #10
 8016256:	d101      	bne.n	801625c <GUI__WrapGetNumCharsToNextLine+0x32>
 8016258:	3401      	adds	r4, #1
 801625a:	e012      	b.n	8016282 <GUI__WrapGetNumCharsToNextLine+0x58>
 801625c:	2f01      	cmp	r7, #1
 801625e:	d110      	bne.n	8016282 <GUI__WrapGetNumCharsToNextLine+0x58>
 8016260:	2820      	cmp	r0, #32
 8016262:	d10e      	bne.n	8016282 <GUI__WrapGetNumCharsToNextLine+0x58>
 8016264:	f7fa ff98 	bl	8011198 <GUI_GetCharDistX>
 8016268:	4607      	mov	r7, r0
 801626a:	9b03      	ldr	r3, [sp, #12]
 801626c:	429e      	cmp	r6, r3
 801626e:	db08      	blt.n	8016282 <GUI__WrapGetNumCharsToNextLine+0x58>
 8016270:	443b      	add	r3, r7
 8016272:	4628      	mov	r0, r5
 8016274:	9303      	str	r3, [sp, #12]
 8016276:	f7f9 f8c7 	bl	800f408 <GUI_UC__GetCharCodeInc>
 801627a:	2820      	cmp	r0, #32
 801627c:	f104 0401 	add.w	r4, r4, #1
 8016280:	d0f3      	beq.n	801626a <GUI__WrapGetNumCharsToNextLine+0x40>
 8016282:	4620      	mov	r0, r4
 8016284:	b005      	add	sp, #20
 8016286:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016288 <GUI__WrapGetNumBytesToNextLine>:
 8016288:	b510      	push	{r4, lr}
 801628a:	4604      	mov	r4, r0
 801628c:	f7ff ffcd 	bl	801622a <GUI__WrapGetNumCharsToNextLine>
 8016290:	4601      	mov	r1, r0
 8016292:	4620      	mov	r0, r4
 8016294:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016298:	f7f9 b8ca 	b.w	800f430 <GUI_UC__NumChars2NumBytes>

0801629c <GUI__ExpandPixelIndicesEx>:
 801629c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80162a0:	1e0c      	subs	r4, r1, #0
 80162a2:	4605      	mov	r5, r0
 80162a4:	f340 80b3 	ble.w	801640e <GUI__ExpandPixelIndicesEx+0x172>
 80162a8:	2a08      	cmp	r2, #8
 80162aa:	685f      	ldr	r7, [r3, #4]
 80162ac:	dd04      	ble.n	80162b8 <GUI__ExpandPixelIndicesEx+0x1c>
 80162ae:	2a10      	cmp	r2, #16
 80162b0:	f340 8098 	ble.w	80163e4 <GUI__ExpandPixelIndicesEx+0x148>
 80162b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80162b8:	3a01      	subs	r2, #1
 80162ba:	2a07      	cmp	r2, #7
 80162bc:	f200 80a7 	bhi.w	801640e <GUI__ExpandPixelIndicesEx+0x172>
 80162c0:	e8df f002 	tbb	[pc, r2]
 80162c4:	58a52d04 	.word	0x58a52d04
 80162c8:	83a5a5a5 	.word	0x83a5a5a5
 80162cc:	1e66      	subs	r6, r4, #1
 80162ce:	10f2      	asrs	r2, r6, #3
 80162d0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 80162d4:	3b01      	subs	r3, #1
 80162d6:	eb05 0802 	add.w	r8, r5, r2
 80162da:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 80162de:	f006 0607 	and.w	r6, r6, #7
 80162e2:	f815 a002 	ldrb.w	sl, [r5, r2]
 80162e6:	2580      	movs	r5, #128	; 0x80
 80162e8:	4135      	asrs	r5, r6
 80162ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80162ee:	b2ed      	uxtb	r5, r5
 80162f0:	f1c6 0307 	rsb	r3, r6, #7
 80162f4:	ea0a 0005 	and.w	r0, sl, r5
 80162f8:	4118      	asrs	r0, r3
 80162fa:	47b8      	blx	r7
 80162fc:	f849 0904 	str.w	r0, [r9], #-4
 8016300:	b936      	cbnz	r6, 8016310 <GUI__ExpandPixelIndicesEx+0x74>
 8016302:	f898 a000 	ldrb.w	sl, [r8]
 8016306:	2501      	movs	r5, #1
 8016308:	f108 38ff 	add.w	r8, r8, #4294967295
 801630c:	2607      	movs	r6, #7
 801630e:	e002      	b.n	8016316 <GUI__ExpandPixelIndicesEx+0x7a>
 8016310:	006d      	lsls	r5, r5, #1
 8016312:	3e01      	subs	r6, #1
 8016314:	b2ed      	uxtb	r5, r5
 8016316:	3c01      	subs	r4, #1
 8016318:	d1ea      	bne.n	80162f0 <GUI__ExpandPixelIndicesEx+0x54>
 801631a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801631e:	1e66      	subs	r6, r4, #1
 8016320:	10b2      	asrs	r2, r6, #2
 8016322:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 8016326:	3b01      	subs	r3, #1
 8016328:	f006 0603 	and.w	r6, r6, #3
 801632c:	eb05 0802 	add.w	r8, r5, r2
 8016330:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 8016334:	f815 a002 	ldrb.w	sl, [r5, r2]
 8016338:	0073      	lsls	r3, r6, #1
 801633a:	25c0      	movs	r5, #192	; 0xc0
 801633c:	411d      	asrs	r5, r3
 801633e:	f108 38ff 	add.w	r8, r8, #4294967295
 8016342:	b2ed      	uxtb	r5, r5
 8016344:	0073      	lsls	r3, r6, #1
 8016346:	f1c3 0306 	rsb	r3, r3, #6
 801634a:	ea0a 0005 	and.w	r0, sl, r5
 801634e:	4118      	asrs	r0, r3
 8016350:	47b8      	blx	r7
 8016352:	f849 0904 	str.w	r0, [r9], #-4
 8016356:	b936      	cbnz	r6, 8016366 <GUI__ExpandPixelIndicesEx+0xca>
 8016358:	2503      	movs	r5, #3
 801635a:	f898 a000 	ldrb.w	sl, [r8]
 801635e:	462e      	mov	r6, r5
 8016360:	f108 38ff 	add.w	r8, r8, #4294967295
 8016364:	e002      	b.n	801636c <GUI__ExpandPixelIndicesEx+0xd0>
 8016366:	00ad      	lsls	r5, r5, #2
 8016368:	3e01      	subs	r6, #1
 801636a:	b2ed      	uxtb	r5, r5
 801636c:	3c01      	subs	r4, #1
 801636e:	d1e9      	bne.n	8016344 <GUI__ExpandPixelIndicesEx+0xa8>
 8016370:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016374:	1e66      	subs	r6, r4, #1
 8016376:	1072      	asrs	r2, r6, #1
 8016378:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 801637c:	3b01      	subs	r3, #1
 801637e:	f006 0601 	and.w	r6, r6, #1
 8016382:	eb05 0802 	add.w	r8, r5, r2
 8016386:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 801638a:	f815 a002 	ldrb.w	sl, [r5, r2]
 801638e:	00b3      	lsls	r3, r6, #2
 8016390:	25f0      	movs	r5, #240	; 0xf0
 8016392:	411d      	asrs	r5, r3
 8016394:	f108 38ff 	add.w	r8, r8, #4294967295
 8016398:	b2ed      	uxtb	r5, r5
 801639a:	00b3      	lsls	r3, r6, #2
 801639c:	f1c3 0304 	rsb	r3, r3, #4
 80163a0:	ea0a 0005 	and.w	r0, sl, r5
 80163a4:	4118      	asrs	r0, r3
 80163a6:	47b8      	blx	r7
 80163a8:	f849 0904 	str.w	r0, [r9], #-4
 80163ac:	b936      	cbnz	r6, 80163bc <GUI__ExpandPixelIndicesEx+0x120>
 80163ae:	f898 a000 	ldrb.w	sl, [r8]
 80163b2:	250f      	movs	r5, #15
 80163b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80163b8:	2601      	movs	r6, #1
 80163ba:	e002      	b.n	80163c2 <GUI__ExpandPixelIndicesEx+0x126>
 80163bc:	012d      	lsls	r5, r5, #4
 80163be:	b2ed      	uxtb	r5, r5
 80163c0:	2600      	movs	r6, #0
 80163c2:	3c01      	subs	r4, #1
 80163c4:	d1e9      	bne.n	801639a <GUI__ExpandPixelIndicesEx+0xfe>
 80163c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80163ca:	192e      	adds	r6, r5, r4
 80163cc:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 80163d0:	1b34      	subs	r4, r6, r4
 80163d2:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 80163d6:	47b8      	blx	r7
 80163d8:	42a6      	cmp	r6, r4
 80163da:	f845 0d04 	str.w	r0, [r5, #-4]!
 80163de:	d1f8      	bne.n	80163d2 <GUI__ExpandPixelIndicesEx+0x136>
 80163e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80163e4:	695e      	ldr	r6, [r3, #20]
 80163e6:	b12e      	cbz	r6, 80163f4 <GUI__ExpandPixelIndicesEx+0x158>
 80163e8:	4629      	mov	r1, r5
 80163ea:	4622      	mov	r2, r4
 80163ec:	2302      	movs	r3, #2
 80163ee:	47b0      	blx	r6
 80163f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80163f4:	0064      	lsls	r4, r4, #1
 80163f6:	4425      	add	r5, r4
 80163f8:	192e      	adds	r6, r5, r4
 80163fa:	1b2c      	subs	r4, r5, r4
 80163fc:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 8016400:	47b8      	blx	r7
 8016402:	42a5      	cmp	r5, r4
 8016404:	f846 0d04 	str.w	r0, [r6, #-4]!
 8016408:	d1f8      	bne.n	80163fc <GUI__ExpandPixelIndicesEx+0x160>
 801640a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801640e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016412 <_GetTwinArcPara>:
 8016412:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016416:	fb01 f901 	mul.w	r9, r1, r1
 801641a:	1e47      	subs	r7, r0, #1
 801641c:	4604      	mov	r4, r0
 801641e:	4340      	muls	r0, r0
 8016420:	ebc9 0000 	rsb	r0, r9, r0
 8016424:	460d      	mov	r5, r1
 8016426:	4692      	mov	sl, r2
 8016428:	4698      	mov	r8, r3
 801642a:	9e08      	ldr	r6, [sp, #32]
 801642c:	f001 fe3e 	bl	80180ac <GUI__sqrt32>
 8016430:	42bd      	cmp	r5, r7
 8016432:	f8ca 0000 	str.w	r0, [sl]
 8016436:	da10      	bge.n	801645a <_GetTwinArcPara+0x48>
 8016438:	fb07 f007 	mul.w	r0, r7, r7
 801643c:	ebc9 0000 	rsb	r0, r9, r0
 8016440:	f001 fe34 	bl	80180ac <GUI__sqrt32>
 8016444:	3c02      	subs	r4, #2
 8016446:	42a5      	cmp	r5, r4
 8016448:	f8c8 0000 	str.w	r0, [r8]
 801644c:	da03      	bge.n	8016456 <_GetTwinArcPara+0x44>
 801644e:	3801      	subs	r0, #1
 8016450:	6030      	str	r0, [r6, #0]
 8016452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016456:	2300      	movs	r3, #0
 8016458:	e002      	b.n	8016460 <_GetTwinArcPara+0x4e>
 801645a:	2300      	movs	r3, #0
 801645c:	f8c8 3000 	str.w	r3, [r8]
 8016460:	6033      	str	r3, [r6, #0]
 8016462:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016466 <_GetTrippleArcPara>:
 8016466:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801646a:	fb01 f801 	mul.w	r8, r1, r1
 801646e:	f100 3aff 	add.w	sl, r0, #4294967295
 8016472:	4604      	mov	r4, r0
 8016474:	4340      	muls	r0, r0
 8016476:	ebc8 0000 	rsb	r0, r8, r0
 801647a:	460d      	mov	r5, r1
 801647c:	4691      	mov	r9, r2
 801647e:	469b      	mov	fp, r3
 8016480:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016482:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016484:	f001 fe12 	bl	80180ac <GUI__sqrt32>
 8016488:	4555      	cmp	r5, sl
 801648a:	f8c9 0000 	str.w	r0, [r9]
 801648e:	da1d      	bge.n	80164cc <_GetTrippleArcPara+0x66>
 8016490:	fb0a f00a 	mul.w	r0, sl, sl
 8016494:	ebc8 0000 	rsb	r0, r8, r0
 8016498:	f001 fe08 	bl	80180ac <GUI__sqrt32>
 801649c:	f1a4 0902 	sub.w	r9, r4, #2
 80164a0:	454d      	cmp	r5, r9
 80164a2:	f8cb 0000 	str.w	r0, [fp]
 80164a6:	da0f      	bge.n	80164c8 <_GetTrippleArcPara+0x62>
 80164a8:	fb09 f009 	mul.w	r0, r9, r9
 80164ac:	ebc8 0000 	rsb	r0, r8, r0
 80164b0:	f001 fdfc 	bl	80180ac <GUI__sqrt32>
 80164b4:	3c03      	subs	r4, #3
 80164b6:	42a5      	cmp	r5, r4
 80164b8:	6038      	str	r0, [r7, #0]
 80164ba:	da03      	bge.n	80164c4 <_GetTrippleArcPara+0x5e>
 80164bc:	3801      	subs	r0, #1
 80164be:	6030      	str	r0, [r6, #0]
 80164c0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164c4:	2300      	movs	r3, #0
 80164c6:	e005      	b.n	80164d4 <_GetTrippleArcPara+0x6e>
 80164c8:	2300      	movs	r3, #0
 80164ca:	e002      	b.n	80164d2 <_GetTrippleArcPara+0x6c>
 80164cc:	2300      	movs	r3, #0
 80164ce:	f8cb 3000 	str.w	r3, [fp]
 80164d2:	603b      	str	r3, [r7, #0]
 80164d4:	6033      	str	r3, [r6, #0]
 80164d6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080164dc <GUI__DrawTwinArc4>:
 80164dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164e0:	4d76      	ldr	r5, [pc, #472]	; (80166bc <GUI__DrawTwinArc4+0x1e0>)
 80164e2:	682d      	ldr	r5, [r5, #0]
 80164e4:	6cee      	ldr	r6, [r5, #76]	; 0x4c
 80164e6:	6d2f      	ldr	r7, [r5, #80]	; 0x50
 80164e8:	b08f      	sub	sp, #60	; 0x3c
 80164ea:	4430      	add	r0, r6
 80164ec:	4439      	add	r1, r7
 80164ee:	9005      	str	r0, [sp, #20]
 80164f0:	4416      	add	r6, r2
 80164f2:	441f      	add	r7, r3
 80164f4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 80164f8:	a80c      	add	r0, sp, #48	; 0x30
 80164fa:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80164fc:	9106      	str	r1, [sp, #24]
 80164fe:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8016502:	f8ad 6034 	strh.w	r6, [sp, #52]	; 0x34
 8016506:	f8ad 7036 	strh.w	r7, [sp, #54]	; 0x36
 801650a:	f7f5 fae3 	bl	800bad4 <WM__InitIVRSearch>
 801650e:	2800      	cmp	r0, #0
 8016510:	f000 80d0 	beq.w	80166b4 <GUI__DrawTwinArc4+0x1d8>
 8016514:	2c00      	cmp	r4, #0
 8016516:	dc02      	bgt.n	801651e <GUI__DrawTwinArc4+0x42>
 8016518:	f7f5 fa1a 	bl	800b950 <WM__GetNextIVR>
 801651c:	e7f7      	b.n	801650e <GUI__DrawTwinArc4+0x32>
 801651e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8016520:	f7f9 fd5e 	bl	800ffe0 <GUI_SetColor>
 8016524:	9b06      	ldr	r3, [sp, #24]
 8016526:	4423      	add	r3, r4
 8016528:	9307      	str	r3, [sp, #28]
 801652a:	9b06      	ldr	r3, [sp, #24]
 801652c:	1e65      	subs	r5, r4, #1
 801652e:	f103 0801 	add.w	r8, r3, #1
 8016532:	2d00      	cmp	r5, #0
 8016534:	d037      	beq.n	80165a6 <GUI__DrawTwinArc4+0xca>
 8016536:	ab0b      	add	r3, sp, #44	; 0x2c
 8016538:	4629      	mov	r1, r5
 801653a:	9300      	str	r3, [sp, #0]
 801653c:	4620      	mov	r0, r4
 801653e:	aa09      	add	r2, sp, #36	; 0x24
 8016540:	ab0a      	add	r3, sp, #40	; 0x28
 8016542:	f7ff ff66 	bl	8016412 <_GetTwinArcPara>
 8016546:	9b05      	ldr	r3, [sp, #20]
 8016548:	9909      	ldr	r1, [sp, #36]	; 0x24
 801654a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801654c:	4423      	add	r3, r4
 801654e:	ebc1 0c03 	rsb	ip, r1, r3
 8016552:	ebc4 0b06 	rsb	fp, r4, r6
 8016556:	1a9b      	subs	r3, r3, r2
 8016558:	3b01      	subs	r3, #1
 801655a:	eb0b 0901 	add.w	r9, fp, r1
 801655e:	4493      	add	fp, r2
 8016560:	4660      	mov	r0, ip
 8016562:	461a      	mov	r2, r3
 8016564:	4641      	mov	r1, r8
 8016566:	f10b 0b01 	add.w	fp, fp, #1
 801656a:	9303      	str	r3, [sp, #12]
 801656c:	f8cd c010 	str.w	ip, [sp, #16]
 8016570:	f7f8 f830 	bl	800e5d4 <LCD_DrawHLine>
 8016574:	4641      	mov	r1, r8
 8016576:	4658      	mov	r0, fp
 8016578:	464a      	mov	r2, r9
 801657a:	f7f8 f82b 	bl	800e5d4 <LCD_DrawHLine>
 801657e:	ebc4 0a07 	rsb	sl, r4, r7
 8016582:	f8dd c010 	ldr.w	ip, [sp, #16]
 8016586:	9b03      	ldr	r3, [sp, #12]
 8016588:	44aa      	add	sl, r5
 801658a:	4660      	mov	r0, ip
 801658c:	461a      	mov	r2, r3
 801658e:	4651      	mov	r1, sl
 8016590:	f7f8 f820 	bl	800e5d4 <LCD_DrawHLine>
 8016594:	4658      	mov	r0, fp
 8016596:	4651      	mov	r1, sl
 8016598:	464a      	mov	r2, r9
 801659a:	f7f8 f81b 	bl	800e5d4 <LCD_DrawHLine>
 801659e:	3d01      	subs	r5, #1
 80165a0:	f108 0801 	add.w	r8, r8, #1
 80165a4:	e7c5      	b.n	8016532 <GUI__DrawTwinArc4+0x56>
 80165a6:	2c01      	cmp	r4, #1
 80165a8:	d0b6      	beq.n	8016518 <GUI__DrawTwinArc4+0x3c>
 80165aa:	981a      	ldr	r0, [sp, #104]	; 0x68
 80165ac:	f7f9 fd18 	bl	800ffe0 <GUI_SetColor>
 80165b0:	9b07      	ldr	r3, [sp, #28]
 80165b2:	f1c4 0802 	rsb	r8, r4, #2
 80165b6:	1ea5      	subs	r5, r4, #2
 80165b8:	4498      	add	r8, r3
 80165ba:	2d00      	cmp	r5, #0
 80165bc:	d037      	beq.n	801662e <GUI__DrawTwinArc4+0x152>
 80165be:	ab0b      	add	r3, sp, #44	; 0x2c
 80165c0:	4629      	mov	r1, r5
 80165c2:	9300      	str	r3, [sp, #0]
 80165c4:	4620      	mov	r0, r4
 80165c6:	aa09      	add	r2, sp, #36	; 0x24
 80165c8:	ab0a      	add	r3, sp, #40	; 0x28
 80165ca:	f7ff ff22 	bl	8016412 <_GetTwinArcPara>
 80165ce:	9b05      	ldr	r3, [sp, #20]
 80165d0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80165d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80165d4:	4423      	add	r3, r4
 80165d6:	ebc1 0c03 	rsb	ip, r1, r3
 80165da:	ebc4 0b06 	rsb	fp, r4, r6
 80165de:	1a9b      	subs	r3, r3, r2
 80165e0:	3b01      	subs	r3, #1
 80165e2:	eb0b 0901 	add.w	r9, fp, r1
 80165e6:	4493      	add	fp, r2
 80165e8:	4660      	mov	r0, ip
 80165ea:	461a      	mov	r2, r3
 80165ec:	4641      	mov	r1, r8
 80165ee:	f10b 0b01 	add.w	fp, fp, #1
 80165f2:	9303      	str	r3, [sp, #12]
 80165f4:	f8cd c010 	str.w	ip, [sp, #16]
 80165f8:	f7f7 ffec 	bl	800e5d4 <LCD_DrawHLine>
 80165fc:	4641      	mov	r1, r8
 80165fe:	4658      	mov	r0, fp
 8016600:	464a      	mov	r2, r9
 8016602:	f7f7 ffe7 	bl	800e5d4 <LCD_DrawHLine>
 8016606:	ebc4 0a07 	rsb	sl, r4, r7
 801660a:	f8dd c010 	ldr.w	ip, [sp, #16]
 801660e:	9b03      	ldr	r3, [sp, #12]
 8016610:	44aa      	add	sl, r5
 8016612:	4660      	mov	r0, ip
 8016614:	461a      	mov	r2, r3
 8016616:	4651      	mov	r1, sl
 8016618:	f7f7 ffdc 	bl	800e5d4 <LCD_DrawHLine>
 801661c:	4658      	mov	r0, fp
 801661e:	4651      	mov	r1, sl
 8016620:	464a      	mov	r2, r9
 8016622:	f7f7 ffd7 	bl	800e5d4 <LCD_DrawHLine>
 8016626:	3d01      	subs	r5, #1
 8016628:	f108 0801 	add.w	r8, r8, #1
 801662c:	e7c5      	b.n	80165ba <GUI__DrawTwinArc4+0xde>
 801662e:	2c02      	cmp	r4, #2
 8016630:	f43f af72 	beq.w	8016518 <GUI__DrawTwinArc4+0x3c>
 8016634:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8016636:	f7f9 fcd3 	bl	800ffe0 <GUI_SetColor>
 801663a:	9b07      	ldr	r3, [sp, #28]
 801663c:	f1c4 0803 	rsb	r8, r4, #3
 8016640:	1ee5      	subs	r5, r4, #3
 8016642:	4498      	add	r8, r3
 8016644:	2d00      	cmp	r5, #0
 8016646:	f43f af67 	beq.w	8016518 <GUI__DrawTwinArc4+0x3c>
 801664a:	ab0b      	add	r3, sp, #44	; 0x2c
 801664c:	4629      	mov	r1, r5
 801664e:	9300      	str	r3, [sp, #0]
 8016650:	4620      	mov	r0, r4
 8016652:	aa09      	add	r2, sp, #36	; 0x24
 8016654:	ab0a      	add	r3, sp, #40	; 0x28
 8016656:	f7ff fedc 	bl	8016412 <_GetTwinArcPara>
 801665a:	9b05      	ldr	r3, [sp, #20]
 801665c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801665e:	4423      	add	r3, r4
 8016660:	ebc2 0c03 	rsb	ip, r2, r3
 8016664:	ebc4 0b06 	rsb	fp, r4, r6
 8016668:	3b01      	subs	r3, #1
 801666a:	eb0b 0902 	add.w	r9, fp, r2
 801666e:	4660      	mov	r0, ip
 8016670:	461a      	mov	r2, r3
 8016672:	4641      	mov	r1, r8
 8016674:	f10b 0b01 	add.w	fp, fp, #1
 8016678:	9303      	str	r3, [sp, #12]
 801667a:	f8cd c010 	str.w	ip, [sp, #16]
 801667e:	f7f7 ffa9 	bl	800e5d4 <LCD_DrawHLine>
 8016682:	4641      	mov	r1, r8
 8016684:	4658      	mov	r0, fp
 8016686:	464a      	mov	r2, r9
 8016688:	f7f7 ffa4 	bl	800e5d4 <LCD_DrawHLine>
 801668c:	ebc4 0a07 	rsb	sl, r4, r7
 8016690:	f8dd c010 	ldr.w	ip, [sp, #16]
 8016694:	9b03      	ldr	r3, [sp, #12]
 8016696:	44aa      	add	sl, r5
 8016698:	4660      	mov	r0, ip
 801669a:	461a      	mov	r2, r3
 801669c:	4651      	mov	r1, sl
 801669e:	f7f7 ff99 	bl	800e5d4 <LCD_DrawHLine>
 80166a2:	4658      	mov	r0, fp
 80166a4:	4651      	mov	r1, sl
 80166a6:	464a      	mov	r2, r9
 80166a8:	f7f7 ff94 	bl	800e5d4 <LCD_DrawHLine>
 80166ac:	3d01      	subs	r5, #1
 80166ae:	f108 0801 	add.w	r8, r8, #1
 80166b2:	e7c7      	b.n	8016644 <GUI__DrawTwinArc4+0x168>
 80166b4:	b00f      	add	sp, #60	; 0x3c
 80166b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166ba:	bf00      	nop
 80166bc:	2000016c 	.word	0x2000016c

080166c0 <GUI__FillTrippleArc>:
 80166c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166c4:	b095      	sub	sp, #84	; 0x54
 80166c6:	930d      	str	r3, [sp, #52]	; 0x34
 80166c8:	4baf      	ldr	r3, [pc, #700]	; (8016988 <GUI__FillTrippleArc+0x2c8>)
 80166ca:	9205      	str	r2, [sp, #20]
 80166cc:	681b      	ldr	r3, [r3, #0]
 80166ce:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80166d0:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 80166d2:	1882      	adds	r2, r0, r2
 80166d4:	9805      	ldr	r0, [sp, #20]
 80166d6:	9206      	str	r2, [sp, #24]
 80166d8:	1e43      	subs	r3, r0, #1
 80166da:	440e      	add	r6, r1
 80166dc:	b29b      	uxth	r3, r3
 80166de:	f8ad 2048 	strh.w	r2, [sp, #72]	; 0x48
 80166e2:	a812      	add	r0, sp, #72	; 0x48
 80166e4:	441a      	add	r2, r3
 80166e6:	4433      	add	r3, r6
 80166e8:	f8ad 604a 	strh.w	r6, [sp, #74]	; 0x4a
 80166ec:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 80166f0:	f8ad 304e 	strh.w	r3, [sp, #78]	; 0x4e
 80166f4:	f7f5 f9ee 	bl	800bad4 <WM__InitIVRSearch>
 80166f8:	2800      	cmp	r0, #0
 80166fa:	f000 8141 	beq.w	8016980 <GUI__FillTrippleArc+0x2c0>
 80166fe:	9a05      	ldr	r2, [sp, #20]
 8016700:	1055      	asrs	r5, r2, #1
 8016702:	1c6b      	adds	r3, r5, #1
 8016704:	1e68      	subs	r0, r5, #1
 8016706:	1eaa      	subs	r2, r5, #2
 8016708:	1cac      	adds	r4, r5, #2
 801670a:	930a      	str	r3, [sp, #40]	; 0x28
 801670c:	900b      	str	r0, [sp, #44]	; 0x2c
 801670e:	920c      	str	r2, [sp, #48]	; 0x30
 8016710:	9b05      	ldr	r3, [sp, #20]
 8016712:	07da      	lsls	r2, r3, #31
 8016714:	f100 812f 	bmi.w	8016976 <GUI__FillTrippleArc+0x2b6>
 8016718:	2c00      	cmp	r4, #0
 801671a:	f340 812c 	ble.w	8016976 <GUI__FillTrippleArc+0x2b6>
 801671e:	9806      	ldr	r0, [sp, #24]
 8016720:	9a06      	ldr	r2, [sp, #24]
 8016722:	3801      	subs	r0, #1
 8016724:	9007      	str	r0, [sp, #28]
 8016726:	9805      	ldr	r0, [sp, #20]
 8016728:	441a      	add	r2, r3
 801672a:	1e73      	subs	r3, r6, #1
 801672c:	4418      	add	r0, r3
 801672e:	9009      	str	r0, [sp, #36]	; 0x24
 8016730:	980d      	ldr	r0, [sp, #52]	; 0x34
 8016732:	9208      	str	r2, [sp, #32]
 8016734:	f7f9 fc54 	bl	800ffe0 <GUI_SetColor>
 8016738:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801673a:	2f01      	cmp	r7, #1
 801673c:	dd48      	ble.n	80167d0 <GUI__FillTrippleArc+0x110>
 801673e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016740:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8016744:	ab10      	add	r3, sp, #64	; 0x40
 8016746:	9300      	str	r3, [sp, #0]
 8016748:	ea6f 0a05 	mvn.w	sl, r5
 801674c:	ab11      	add	r3, sp, #68	; 0x44
 801674e:	4492      	add	sl, r2
 8016750:	9301      	str	r3, [sp, #4]
 8016752:	4620      	mov	r0, r4
 8016754:	4639      	mov	r1, r7
 8016756:	aa0e      	add	r2, sp, #56	; 0x38
 8016758:	ab0f      	add	r3, sp, #60	; 0x3c
 801675a:	f7ff fe84 	bl	8016466 <_GetTrippleArcPara>
 801675e:	9808      	ldr	r0, [sp, #32]
 8016760:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8016764:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016766:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016768:	1b02      	subs	r2, r0, r4
 801676a:	44a4      	add	ip, r4
 801676c:	ebc1 090c 	rsb	r9, r1, ip
 8016770:	ebc3 0c0c 	rsb	ip, r3, ip
 8016774:	4413      	add	r3, r2
 8016776:	44b3      	add	fp, r6
 8016778:	f10c 3cff 	add.w	ip, ip, #4294967295
 801677c:	3301      	adds	r3, #1
 801677e:	ebc7 0b0b 	rsb	fp, r7, fp
 8016782:	4563      	cmp	r3, ip
 8016784:	eb02 0801 	add.w	r8, r2, r1
 8016788:	44ba      	add	sl, r7
 801678a:	4648      	mov	r0, r9
 801678c:	4659      	mov	r1, fp
 801678e:	da04      	bge.n	801679a <GUI__FillTrippleArc+0xda>
 8016790:	4642      	mov	r2, r8
 8016792:	f7f7 ff1f 	bl	800e5d4 <LCD_DrawHLine>
 8016796:	4648      	mov	r0, r9
 8016798:	e014      	b.n	80167c4 <GUI__FillTrippleArc+0x104>
 801679a:	4662      	mov	r2, ip
 801679c:	f8cd c010 	str.w	ip, [sp, #16]
 80167a0:	9303      	str	r3, [sp, #12]
 80167a2:	f7f7 ff17 	bl	800e5d4 <LCD_DrawHLine>
 80167a6:	9b03      	ldr	r3, [sp, #12]
 80167a8:	4659      	mov	r1, fp
 80167aa:	4618      	mov	r0, r3
 80167ac:	4642      	mov	r2, r8
 80167ae:	f7f7 ff11 	bl	800e5d4 <LCD_DrawHLine>
 80167b2:	f8dd c010 	ldr.w	ip, [sp, #16]
 80167b6:	4648      	mov	r0, r9
 80167b8:	4651      	mov	r1, sl
 80167ba:	4662      	mov	r2, ip
 80167bc:	f7f7 ff0a 	bl	800e5d4 <LCD_DrawHLine>
 80167c0:	9b03      	ldr	r3, [sp, #12]
 80167c2:	4618      	mov	r0, r3
 80167c4:	4651      	mov	r1, sl
 80167c6:	4642      	mov	r2, r8
 80167c8:	f7f7 ff04 	bl	800e5d4 <LCD_DrawHLine>
 80167cc:	3f01      	subs	r7, #1
 80167ce:	e7b4      	b.n	801673a <GUI__FillTrippleArc+0x7a>
 80167d0:	2c01      	cmp	r4, #1
 80167d2:	f000 80d0 	beq.w	8016976 <GUI__FillTrippleArc+0x2b6>
 80167d6:	981e      	ldr	r0, [sp, #120]	; 0x78
 80167d8:	f7f9 fc02 	bl	800ffe0 <GUI_SetColor>
 80167dc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80167de:	4437      	add	r7, r6
 80167e0:	1b7f      	subs	r7, r7, r5
 80167e2:	46a8      	mov	r8, r5
 80167e4:	f1b8 0f01 	cmp.w	r8, #1
 80167e8:	dd45      	ble.n	8016876 <GUI__FillTrippleArc+0x1b6>
 80167ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80167ec:	ab10      	add	r3, sp, #64	; 0x40
 80167ee:	9300      	str	r3, [sp, #0]
 80167f0:	ea6f 0b05 	mvn.w	fp, r5
 80167f4:	ab11      	add	r3, sp, #68	; 0x44
 80167f6:	4493      	add	fp, r2
 80167f8:	9301      	str	r3, [sp, #4]
 80167fa:	4620      	mov	r0, r4
 80167fc:	4641      	mov	r1, r8
 80167fe:	aa0e      	add	r2, sp, #56	; 0x38
 8016800:	ab0f      	add	r3, sp, #60	; 0x3c
 8016802:	f7ff fe30 	bl	8016466 <_GetTrippleArcPara>
 8016806:	9808      	ldr	r0, [sp, #32]
 8016808:	f8dd c01c 	ldr.w	ip, [sp, #28]
 801680c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801680e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016810:	1b02      	subs	r2, r0, r4
 8016812:	44a4      	add	ip, r4
 8016814:	ebc1 0a0c 	rsb	sl, r1, ip
 8016818:	ebc3 0c0c 	rsb	ip, r3, ip
 801681c:	4413      	add	r3, r2
 801681e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016822:	3301      	adds	r3, #1
 8016824:	4563      	cmp	r3, ip
 8016826:	eb02 0901 	add.w	r9, r2, r1
 801682a:	44c3      	add	fp, r8
 801682c:	4650      	mov	r0, sl
 801682e:	4639      	mov	r1, r7
 8016830:	da04      	bge.n	801683c <GUI__FillTrippleArc+0x17c>
 8016832:	464a      	mov	r2, r9
 8016834:	f7f7 fece 	bl	800e5d4 <LCD_DrawHLine>
 8016838:	4650      	mov	r0, sl
 801683a:	e014      	b.n	8016866 <GUI__FillTrippleArc+0x1a6>
 801683c:	4662      	mov	r2, ip
 801683e:	f8cd c010 	str.w	ip, [sp, #16]
 8016842:	9303      	str	r3, [sp, #12]
 8016844:	f7f7 fec6 	bl	800e5d4 <LCD_DrawHLine>
 8016848:	9b03      	ldr	r3, [sp, #12]
 801684a:	4639      	mov	r1, r7
 801684c:	4618      	mov	r0, r3
 801684e:	464a      	mov	r2, r9
 8016850:	f7f7 fec0 	bl	800e5d4 <LCD_DrawHLine>
 8016854:	f8dd c010 	ldr.w	ip, [sp, #16]
 8016858:	4650      	mov	r0, sl
 801685a:	4659      	mov	r1, fp
 801685c:	4662      	mov	r2, ip
 801685e:	f7f7 feb9 	bl	800e5d4 <LCD_DrawHLine>
 8016862:	9b03      	ldr	r3, [sp, #12]
 8016864:	4618      	mov	r0, r3
 8016866:	4659      	mov	r1, fp
 8016868:	464a      	mov	r2, r9
 801686a:	f7f7 feb3 	bl	800e5d4 <LCD_DrawHLine>
 801686e:	f108 38ff 	add.w	r8, r8, #4294967295
 8016872:	3701      	adds	r7, #1
 8016874:	e7b6      	b.n	80167e4 <GUI__FillTrippleArc+0x124>
 8016876:	2c02      	cmp	r4, #2
 8016878:	d07d      	beq.n	8016976 <GUI__FillTrippleArc+0x2b6>
 801687a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801687c:	f7f9 fbb0 	bl	800ffe0 <GUI_SetColor>
 8016880:	19a7      	adds	r7, r4, r6
 8016882:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
 8016886:	1b7f      	subs	r7, r7, r5
 8016888:	f1b8 0f01 	cmp.w	r8, #1
 801688c:	dd45      	ble.n	801691a <GUI__FillTrippleArc+0x25a>
 801688e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016890:	ab10      	add	r3, sp, #64	; 0x40
 8016892:	9300      	str	r3, [sp, #0]
 8016894:	ea6f 0b05 	mvn.w	fp, r5
 8016898:	ab11      	add	r3, sp, #68	; 0x44
 801689a:	4493      	add	fp, r2
 801689c:	9301      	str	r3, [sp, #4]
 801689e:	4620      	mov	r0, r4
 80168a0:	4641      	mov	r1, r8
 80168a2:	aa0e      	add	r2, sp, #56	; 0x38
 80168a4:	ab0f      	add	r3, sp, #60	; 0x3c
 80168a6:	f7ff fdde 	bl	8016466 <_GetTrippleArcPara>
 80168aa:	9808      	ldr	r0, [sp, #32]
 80168ac:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80168b0:	9910      	ldr	r1, [sp, #64]	; 0x40
 80168b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80168b4:	1b02      	subs	r2, r0, r4
 80168b6:	44a4      	add	ip, r4
 80168b8:	ebc1 0a0c 	rsb	sl, r1, ip
 80168bc:	ebc3 0c0c 	rsb	ip, r3, ip
 80168c0:	4413      	add	r3, r2
 80168c2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80168c6:	3301      	adds	r3, #1
 80168c8:	4563      	cmp	r3, ip
 80168ca:	eb02 0901 	add.w	r9, r2, r1
 80168ce:	44c3      	add	fp, r8
 80168d0:	4650      	mov	r0, sl
 80168d2:	4639      	mov	r1, r7
 80168d4:	da04      	bge.n	80168e0 <GUI__FillTrippleArc+0x220>
 80168d6:	464a      	mov	r2, r9
 80168d8:	f7f7 fe7c 	bl	800e5d4 <LCD_DrawHLine>
 80168dc:	4650      	mov	r0, sl
 80168de:	e014      	b.n	801690a <GUI__FillTrippleArc+0x24a>
 80168e0:	4662      	mov	r2, ip
 80168e2:	f8cd c010 	str.w	ip, [sp, #16]
 80168e6:	9303      	str	r3, [sp, #12]
 80168e8:	f7f7 fe74 	bl	800e5d4 <LCD_DrawHLine>
 80168ec:	9b03      	ldr	r3, [sp, #12]
 80168ee:	4639      	mov	r1, r7
 80168f0:	4618      	mov	r0, r3
 80168f2:	464a      	mov	r2, r9
 80168f4:	f7f7 fe6e 	bl	800e5d4 <LCD_DrawHLine>
 80168f8:	f8dd c010 	ldr.w	ip, [sp, #16]
 80168fc:	4650      	mov	r0, sl
 80168fe:	4659      	mov	r1, fp
 8016900:	4662      	mov	r2, ip
 8016902:	f7f7 fe67 	bl	800e5d4 <LCD_DrawHLine>
 8016906:	9b03      	ldr	r3, [sp, #12]
 8016908:	4618      	mov	r0, r3
 801690a:	4659      	mov	r1, fp
 801690c:	464a      	mov	r2, r9
 801690e:	f7f7 fe61 	bl	800e5d4 <LCD_DrawHLine>
 8016912:	f108 38ff 	add.w	r8, r8, #4294967295
 8016916:	3701      	adds	r7, #1
 8016918:	e7b6      	b.n	8016888 <GUI__FillTrippleArc+0x1c8>
 801691a:	2c03      	cmp	r4, #3
 801691c:	d02b      	beq.n	8016976 <GUI__FillTrippleArc+0x2b6>
 801691e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8016920:	f7f9 fb5e 	bl	800ffe0 <GUI_SetColor>
 8016924:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016926:	f106 0803 	add.w	r8, r6, #3
 801692a:	b327      	cbz	r7, 8016976 <GUI__FillTrippleArc+0x2b6>
 801692c:	ab10      	add	r3, sp, #64	; 0x40
 801692e:	9300      	str	r3, [sp, #0]
 8016930:	ab11      	add	r3, sp, #68	; 0x44
 8016932:	4639      	mov	r1, r7
 8016934:	9301      	str	r3, [sp, #4]
 8016936:	4620      	mov	r0, r4
 8016938:	aa0e      	add	r2, sp, #56	; 0x38
 801693a:	ab0f      	add	r3, sp, #60	; 0x3c
 801693c:	f7ff fd93 	bl	8016466 <_GetTrippleArcPara>
 8016940:	9a08      	ldr	r2, [sp, #32]
 8016942:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8016946:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016948:	ebc4 0902 	rsb	r9, r4, r2
 801694c:	44a2      	add	sl, r4
 801694e:	ebc3 0a0a 	rsb	sl, r3, sl
 8016952:	4499      	add	r9, r3
 8016954:	4641      	mov	r1, r8
 8016956:	4650      	mov	r0, sl
 8016958:	464a      	mov	r2, r9
 801695a:	f7f7 fe3b 	bl	800e5d4 <LCD_DrawHLine>
 801695e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016960:	43e9      	mvns	r1, r5
 8016962:	4419      	add	r1, r3
 8016964:	4439      	add	r1, r7
 8016966:	4650      	mov	r0, sl
 8016968:	464a      	mov	r2, r9
 801696a:	f7f7 fe33 	bl	800e5d4 <LCD_DrawHLine>
 801696e:	3f01      	subs	r7, #1
 8016970:	f108 0801 	add.w	r8, r8, #1
 8016974:	e7d9      	b.n	801692a <GUI__FillTrippleArc+0x26a>
 8016976:	f7f4 ffeb 	bl	800b950 <WM__GetNextIVR>
 801697a:	2800      	cmp	r0, #0
 801697c:	f47f aec8 	bne.w	8016710 <GUI__FillTrippleArc+0x50>
 8016980:	b015      	add	sp, #84	; 0x54
 8016982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016986:	bf00      	nop
 8016988:	2000016c 	.word	0x2000016c

0801698c <GUI__DivideRound32>:
 801698c:	b149      	cbz	r1, 80169a2 <GUI__DivideRound32+0x16>
 801698e:	2800      	cmp	r0, #0
 8016990:	ea4f 0361 	mov.w	r3, r1, asr #1
 8016994:	bfb4      	ite	lt
 8016996:	ebc3 0000 	rsblt	r0, r3, r0
 801699a:	18c0      	addge	r0, r0, r3
 801699c:	fb90 f0f1 	sdiv	r0, r0, r1
 80169a0:	4770      	bx	lr
 80169a2:	4608      	mov	r0, r1
 80169a4:	4770      	bx	lr

080169a6 <GUI__CompactPixelIndices>:
 80169a6:	2a08      	cmp	r2, #8
 80169a8:	b510      	push	{r4, lr}
 80169aa:	dd0e      	ble.n	80169ca <GUI__CompactPixelIndices+0x24>
 80169ac:	2a10      	cmp	r2, #16
 80169ae:	dc0a      	bgt.n	80169c6 <GUI__CompactPixelIndices+0x20>
 80169b0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80169b4:	4603      	mov	r3, r0
 80169b6:	f850 2b04 	ldr.w	r2, [r0], #4
 80169ba:	f823 2b02 	strh.w	r2, [r3], #2
 80169be:	428b      	cmp	r3, r1
 80169c0:	d1f9      	bne.n	80169b6 <GUI__CompactPixelIndices+0x10>
 80169c2:	2001      	movs	r0, #1
 80169c4:	bd10      	pop	{r4, pc}
 80169c6:	2000      	movs	r0, #0
 80169c8:	bd10      	pop	{r4, pc}
 80169ca:	2a02      	cmp	r2, #2
 80169cc:	d06d      	beq.n	8016aaa <GUI__CompactPixelIndices+0x104>
 80169ce:	2a04      	cmp	r2, #4
 80169d0:	d054      	beq.n	8016a7c <GUI__CompactPixelIndices+0xd6>
 80169d2:	2a01      	cmp	r2, #1
 80169d4:	f040 8095 	bne.w	8016b02 <GUI__CompactPixelIndices+0x15c>
 80169d8:	4604      	mov	r4, r0
 80169da:	6803      	ldr	r3, [r0, #0]
 80169dc:	2901      	cmp	r1, #1
 80169de:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 80169e2:	b2db      	uxtb	r3, r3
 80169e4:	d047      	beq.n	8016a76 <GUI__CompactPixelIndices+0xd0>
 80169e6:	6842      	ldr	r2, [r0, #4]
 80169e8:	2902      	cmp	r1, #2
 80169ea:	f002 0201 	and.w	r2, r2, #1
 80169ee:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80169f2:	d102      	bne.n	80169fa <GUI__CompactPixelIndices+0x54>
 80169f4:	f100 0208 	add.w	r2, r0, #8
 80169f8:	e03e      	b.n	8016a78 <GUI__CompactPixelIndices+0xd2>
 80169fa:	6882      	ldr	r2, [r0, #8]
 80169fc:	2903      	cmp	r1, #3
 80169fe:	f002 0201 	and.w	r2, r2, #1
 8016a02:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8016a06:	d102      	bne.n	8016a0e <GUI__CompactPixelIndices+0x68>
 8016a08:	f100 020c 	add.w	r2, r0, #12
 8016a0c:	e034      	b.n	8016a78 <GUI__CompactPixelIndices+0xd2>
 8016a0e:	68c2      	ldr	r2, [r0, #12]
 8016a10:	2904      	cmp	r1, #4
 8016a12:	f002 0201 	and.w	r2, r2, #1
 8016a16:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8016a1a:	d102      	bne.n	8016a22 <GUI__CompactPixelIndices+0x7c>
 8016a1c:	f100 0210 	add.w	r2, r0, #16
 8016a20:	e02a      	b.n	8016a78 <GUI__CompactPixelIndices+0xd2>
 8016a22:	6902      	ldr	r2, [r0, #16]
 8016a24:	2905      	cmp	r1, #5
 8016a26:	f002 0201 	and.w	r2, r2, #1
 8016a2a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8016a2e:	d102      	bne.n	8016a36 <GUI__CompactPixelIndices+0x90>
 8016a30:	f100 0214 	add.w	r2, r0, #20
 8016a34:	e020      	b.n	8016a78 <GUI__CompactPixelIndices+0xd2>
 8016a36:	6942      	ldr	r2, [r0, #20]
 8016a38:	2906      	cmp	r1, #6
 8016a3a:	f002 0201 	and.w	r2, r2, #1
 8016a3e:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8016a42:	d102      	bne.n	8016a4a <GUI__CompactPixelIndices+0xa4>
 8016a44:	f100 0218 	add.w	r2, r0, #24
 8016a48:	e016      	b.n	8016a78 <GUI__CompactPixelIndices+0xd2>
 8016a4a:	6982      	ldr	r2, [r0, #24]
 8016a4c:	3907      	subs	r1, #7
 8016a4e:	f002 0201 	and.w	r2, r2, #1
 8016a52:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 8016a56:	d102      	bne.n	8016a5e <GUI__CompactPixelIndices+0xb8>
 8016a58:	f100 021c 	add.w	r2, r0, #28
 8016a5c:	e005      	b.n	8016a6a <GUI__CompactPixelIndices+0xc4>
 8016a5e:	f100 0220 	add.w	r2, r0, #32
 8016a62:	69c0      	ldr	r0, [r0, #28]
 8016a64:	f000 0001 	and.w	r0, r0, #1
 8016a68:	4303      	orrs	r3, r0
 8016a6a:	f804 3b01 	strb.w	r3, [r4], #1
 8016a6e:	2900      	cmp	r1, #0
 8016a70:	d0a7      	beq.n	80169c2 <GUI__CompactPixelIndices+0x1c>
 8016a72:	4610      	mov	r0, r2
 8016a74:	e7b1      	b.n	80169da <GUI__CompactPixelIndices+0x34>
 8016a76:	1d02      	adds	r2, r0, #4
 8016a78:	2100      	movs	r1, #0
 8016a7a:	e7f6      	b.n	8016a6a <GUI__CompactPixelIndices+0xc4>
 8016a7c:	4602      	mov	r2, r0
 8016a7e:	6803      	ldr	r3, [r0, #0]
 8016a80:	2901      	cmp	r1, #1
 8016a82:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8016a86:	b2db      	uxtb	r3, r3
 8016a88:	d102      	bne.n	8016a90 <GUI__CompactPixelIndices+0xea>
 8016a8a:	1d04      	adds	r4, r0, #4
 8016a8c:	2100      	movs	r1, #0
 8016a8e:	e006      	b.n	8016a9e <GUI__CompactPixelIndices+0xf8>
 8016a90:	f100 0408 	add.w	r4, r0, #8
 8016a94:	6840      	ldr	r0, [r0, #4]
 8016a96:	f000 000f 	and.w	r0, r0, #15
 8016a9a:	4303      	orrs	r3, r0
 8016a9c:	3902      	subs	r1, #2
 8016a9e:	f802 3b01 	strb.w	r3, [r2], #1
 8016aa2:	2900      	cmp	r1, #0
 8016aa4:	d08d      	beq.n	80169c2 <GUI__CompactPixelIndices+0x1c>
 8016aa6:	4620      	mov	r0, r4
 8016aa8:	e7e9      	b.n	8016a7e <GUI__CompactPixelIndices+0xd8>
 8016aaa:	4604      	mov	r4, r0
 8016aac:	6803      	ldr	r3, [r0, #0]
 8016aae:	2901      	cmp	r1, #1
 8016ab0:	ea4f 1383 	mov.w	r3, r3, lsl #6
 8016ab4:	b2db      	uxtb	r3, r3
 8016ab6:	d021      	beq.n	8016afc <GUI__CompactPixelIndices+0x156>
 8016ab8:	6842      	ldr	r2, [r0, #4]
 8016aba:	2902      	cmp	r1, #2
 8016abc:	f002 0203 	and.w	r2, r2, #3
 8016ac0:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8016ac4:	d102      	bne.n	8016acc <GUI__CompactPixelIndices+0x126>
 8016ac6:	f100 0208 	add.w	r2, r0, #8
 8016aca:	e018      	b.n	8016afe <GUI__CompactPixelIndices+0x158>
 8016acc:	6882      	ldr	r2, [r0, #8]
 8016ace:	2903      	cmp	r1, #3
 8016ad0:	f002 0203 	and.w	r2, r2, #3
 8016ad4:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8016ad8:	d102      	bne.n	8016ae0 <GUI__CompactPixelIndices+0x13a>
 8016ada:	f100 020c 	add.w	r2, r0, #12
 8016ade:	e00e      	b.n	8016afe <GUI__CompactPixelIndices+0x158>
 8016ae0:	f100 0210 	add.w	r2, r0, #16
 8016ae4:	68c0      	ldr	r0, [r0, #12]
 8016ae6:	f000 0003 	and.w	r0, r0, #3
 8016aea:	4303      	orrs	r3, r0
 8016aec:	3904      	subs	r1, #4
 8016aee:	f804 3b01 	strb.w	r3, [r4], #1
 8016af2:	2900      	cmp	r1, #0
 8016af4:	f43f af65 	beq.w	80169c2 <GUI__CompactPixelIndices+0x1c>
 8016af8:	4610      	mov	r0, r2
 8016afa:	e7d7      	b.n	8016aac <GUI__CompactPixelIndices+0x106>
 8016afc:	1d02      	adds	r2, r0, #4
 8016afe:	2100      	movs	r1, #0
 8016b00:	e7f5      	b.n	8016aee <GUI__CompactPixelIndices+0x148>
 8016b02:	2300      	movs	r3, #0
 8016b04:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 8016b08:	54c2      	strb	r2, [r0, r3]
 8016b0a:	3301      	adds	r3, #1
 8016b0c:	428b      	cmp	r3, r1
 8016b0e:	d1f9      	bne.n	8016b04 <GUI__CompactPixelIndices+0x15e>
 8016b10:	e757      	b.n	80169c2 <GUI__CompactPixelIndices+0x1c>

08016b12 <GUI__ConvertColor2Index>:
 8016b12:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016b16:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8016b1a:	681e      	ldr	r6, [r3, #0]
 8016b1c:	f1b8 0f00 	cmp.w	r8, #0
 8016b20:	bf08      	it	eq
 8016b22:	4680      	moveq	r8, r0
 8016b24:	2a08      	cmp	r2, #8
 8016b26:	4604      	mov	r4, r0
 8016b28:	460d      	mov	r5, r1
 8016b2a:	dd05      	ble.n	8016b38 <GUI__ConvertColor2Index+0x26>
 8016b2c:	2a10      	cmp	r2, #16
 8016b2e:	f340 80b6 	ble.w	8016c9e <GUI__ConvertColor2Index+0x18c>
 8016b32:	2000      	movs	r0, #0
 8016b34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016b38:	3a01      	subs	r2, #1
 8016b3a:	2a07      	cmp	r2, #7
 8016b3c:	f200 80a4 	bhi.w	8016c88 <GUI__ConvertColor2Index+0x176>
 8016b40:	e8df f002 	tbb	[pc, r2]
 8016b44:	87a26111 	.word	0x87a26111
 8016b48:	92a2a2a2 	.word	0x92a2a2a2
 8016b4c:	69e0      	ldr	r0, [r4, #28]
 8016b4e:	47b0      	blx	r6
 8016b50:	4338      	orrs	r0, r7
 8016b52:	f104 0920 	add.w	r9, r4, #32
 8016b56:	b2c7      	uxtb	r7, r0
 8016b58:	3d08      	subs	r5, #8
 8016b5a:	f808 7b01 	strb.w	r7, [r8], #1
 8016b5e:	2d00      	cmp	r5, #0
 8016b60:	f000 8092 	beq.w	8016c88 <GUI__ConvertColor2Index+0x176>
 8016b64:	464c      	mov	r4, r9
 8016b66:	6820      	ldr	r0, [r4, #0]
 8016b68:	47b0      	blx	r6
 8016b6a:	2d01      	cmp	r5, #1
 8016b6c:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 8016b70:	b2c7      	uxtb	r7, r0
 8016b72:	f000 808c 	beq.w	8016c8e <GUI__ConvertColor2Index+0x17c>
 8016b76:	6860      	ldr	r0, [r4, #4]
 8016b78:	47b0      	blx	r6
 8016b7a:	2d02      	cmp	r5, #2
 8016b7c:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 8016b80:	b2c7      	uxtb	r7, r0
 8016b82:	d102      	bne.n	8016b8a <GUI__ConvertColor2Index+0x78>
 8016b84:	f104 0908 	add.w	r9, r4, #8
 8016b88:	e083      	b.n	8016c92 <GUI__ConvertColor2Index+0x180>
 8016b8a:	68a0      	ldr	r0, [r4, #8]
 8016b8c:	47b0      	blx	r6
 8016b8e:	2d03      	cmp	r5, #3
 8016b90:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 8016b94:	b2c7      	uxtb	r7, r0
 8016b96:	d102      	bne.n	8016b9e <GUI__ConvertColor2Index+0x8c>
 8016b98:	f104 090c 	add.w	r9, r4, #12
 8016b9c:	e079      	b.n	8016c92 <GUI__ConvertColor2Index+0x180>
 8016b9e:	68e0      	ldr	r0, [r4, #12]
 8016ba0:	47b0      	blx	r6
 8016ba2:	2d04      	cmp	r5, #4
 8016ba4:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 8016ba8:	b2c7      	uxtb	r7, r0
 8016baa:	d102      	bne.n	8016bb2 <GUI__ConvertColor2Index+0xa0>
 8016bac:	f104 0910 	add.w	r9, r4, #16
 8016bb0:	e06f      	b.n	8016c92 <GUI__ConvertColor2Index+0x180>
 8016bb2:	6920      	ldr	r0, [r4, #16]
 8016bb4:	47b0      	blx	r6
 8016bb6:	2d05      	cmp	r5, #5
 8016bb8:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 8016bbc:	b2c7      	uxtb	r7, r0
 8016bbe:	d102      	bne.n	8016bc6 <GUI__ConvertColor2Index+0xb4>
 8016bc0:	f104 0914 	add.w	r9, r4, #20
 8016bc4:	e065      	b.n	8016c92 <GUI__ConvertColor2Index+0x180>
 8016bc6:	6960      	ldr	r0, [r4, #20]
 8016bc8:	47b0      	blx	r6
 8016bca:	2d06      	cmp	r5, #6
 8016bcc:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 8016bd0:	b2c7      	uxtb	r7, r0
 8016bd2:	d102      	bne.n	8016bda <GUI__ConvertColor2Index+0xc8>
 8016bd4:	f104 0918 	add.w	r9, r4, #24
 8016bd8:	e05b      	b.n	8016c92 <GUI__ConvertColor2Index+0x180>
 8016bda:	69a0      	ldr	r0, [r4, #24]
 8016bdc:	47b0      	blx	r6
 8016bde:	2d07      	cmp	r5, #7
 8016be0:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 8016be4:	b2c7      	uxtb	r7, r0
 8016be6:	d1b1      	bne.n	8016b4c <GUI__ConvertColor2Index+0x3a>
 8016be8:	f104 091c 	add.w	r9, r4, #28
 8016bec:	e051      	b.n	8016c92 <GUI__ConvertColor2Index+0x180>
 8016bee:	68e0      	ldr	r0, [r4, #12]
 8016bf0:	47b0      	blx	r6
 8016bf2:	4338      	orrs	r0, r7
 8016bf4:	f104 0910 	add.w	r9, r4, #16
 8016bf8:	b2c7      	uxtb	r7, r0
 8016bfa:	3d04      	subs	r5, #4
 8016bfc:	f808 7b01 	strb.w	r7, [r8], #1
 8016c00:	2d00      	cmp	r5, #0
 8016c02:	d041      	beq.n	8016c88 <GUI__ConvertColor2Index+0x176>
 8016c04:	464c      	mov	r4, r9
 8016c06:	6820      	ldr	r0, [r4, #0]
 8016c08:	47b0      	blx	r6
 8016c0a:	2d01      	cmp	r5, #1
 8016c0c:	ea4f 1080 	mov.w	r0, r0, lsl #6
 8016c10:	b2c7      	uxtb	r7, r0
 8016c12:	d040      	beq.n	8016c96 <GUI__ConvertColor2Index+0x184>
 8016c14:	6860      	ldr	r0, [r4, #4]
 8016c16:	47b0      	blx	r6
 8016c18:	2d02      	cmp	r5, #2
 8016c1a:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 8016c1e:	b2c7      	uxtb	r7, r0
 8016c20:	d102      	bne.n	8016c28 <GUI__ConvertColor2Index+0x116>
 8016c22:	f104 0908 	add.w	r9, r4, #8
 8016c26:	e038      	b.n	8016c9a <GUI__ConvertColor2Index+0x188>
 8016c28:	68a0      	ldr	r0, [r4, #8]
 8016c2a:	47b0      	blx	r6
 8016c2c:	2d03      	cmp	r5, #3
 8016c2e:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 8016c32:	b2c7      	uxtb	r7, r0
 8016c34:	d1db      	bne.n	8016bee <GUI__ConvertColor2Index+0xdc>
 8016c36:	f104 090c 	add.w	r9, r4, #12
 8016c3a:	e02e      	b.n	8016c9a <GUI__ConvertColor2Index+0x188>
 8016c3c:	6860      	ldr	r0, [r4, #4]
 8016c3e:	47b0      	blx	r6
 8016c40:	4338      	orrs	r0, r7
 8016c42:	f104 0908 	add.w	r9, r4, #8
 8016c46:	b2c7      	uxtb	r7, r0
 8016c48:	3d02      	subs	r5, #2
 8016c4a:	f808 7b01 	strb.w	r7, [r8], #1
 8016c4e:	b1dd      	cbz	r5, 8016c88 <GUI__ConvertColor2Index+0x176>
 8016c50:	464c      	mov	r4, r9
 8016c52:	6820      	ldr	r0, [r4, #0]
 8016c54:	47b0      	blx	r6
 8016c56:	2d01      	cmp	r5, #1
 8016c58:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8016c5c:	b2c7      	uxtb	r7, r0
 8016c5e:	d1ed      	bne.n	8016c3c <GUI__ConvertColor2Index+0x12a>
 8016c60:	f104 0904 	add.w	r9, r4, #4
 8016c64:	2500      	movs	r5, #0
 8016c66:	e7f0      	b.n	8016c4a <GUI__ConvertColor2Index+0x138>
 8016c68:	691f      	ldr	r7, [r3, #16]
 8016c6a:	b12f      	cbz	r7, 8016c78 <GUI__ConvertColor2Index+0x166>
 8016c6c:	4620      	mov	r0, r4
 8016c6e:	4641      	mov	r1, r8
 8016c70:	462a      	mov	r2, r5
 8016c72:	2301      	movs	r3, #1
 8016c74:	47b8      	blx	r7
 8016c76:	e007      	b.n	8016c88 <GUI__ConvertColor2Index+0x176>
 8016c78:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 8016c7c:	47b0      	blx	r6
 8016c7e:	f808 0007 	strb.w	r0, [r8, r7]
 8016c82:	3701      	adds	r7, #1
 8016c84:	42bd      	cmp	r5, r7
 8016c86:	d1f7      	bne.n	8016c78 <GUI__ConvertColor2Index+0x166>
 8016c88:	2001      	movs	r0, #1
 8016c8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016c8e:	f104 0904 	add.w	r9, r4, #4
 8016c92:	2500      	movs	r5, #0
 8016c94:	e761      	b.n	8016b5a <GUI__ConvertColor2Index+0x48>
 8016c96:	f104 0904 	add.w	r9, r4, #4
 8016c9a:	2500      	movs	r5, #0
 8016c9c:	e7ae      	b.n	8016bfc <GUI__ConvertColor2Index+0xea>
 8016c9e:	691f      	ldr	r7, [r3, #16]
 8016ca0:	b11f      	cbz	r7, 8016caa <GUI__ConvertColor2Index+0x198>
 8016ca2:	4641      	mov	r1, r8
 8016ca4:	462a      	mov	r2, r5
 8016ca6:	2302      	movs	r3, #2
 8016ca8:	e7e4      	b.n	8016c74 <GUI__ConvertColor2Index+0x162>
 8016caa:	f854 0b04 	ldr.w	r0, [r4], #4
 8016cae:	47b0      	blx	r6
 8016cb0:	3d01      	subs	r5, #1
 8016cb2:	f828 0b02 	strh.w	r0, [r8], #2
 8016cb6:	d1f8      	bne.n	8016caa <GUI__ConvertColor2Index+0x198>
 8016cb8:	e7e6      	b.n	8016c88 <GUI__ConvertColor2Index+0x176>

08016cba <GUI__CompactPixelIndicesEx>:
 8016cba:	b513      	push	{r0, r1, r4, lr}
 8016cbc:	2400      	movs	r4, #0
 8016cbe:	9400      	str	r4, [sp, #0]
 8016cc0:	f7ff ff27 	bl	8016b12 <GUI__ConvertColor2Index>
 8016cc4:	b002      	add	sp, #8
 8016cc6:	bd10      	pop	{r4, pc}

08016cc8 <_GetCharCode>:
 8016cc8:	7800      	ldrb	r0, [r0, #0]
 8016cca:	4770      	bx	lr

08016ccc <_GetCharSize>:
 8016ccc:	2001      	movs	r0, #1
 8016cce:	4770      	bx	lr

08016cd0 <_CalcSizeOfChar>:
 8016cd0:	2001      	movs	r0, #1
 8016cd2:	4770      	bx	lr

08016cd4 <_Encode>:
 8016cd4:	7001      	strb	r1, [r0, #0]
 8016cd6:	2001      	movs	r0, #1
 8016cd8:	4770      	bx	lr
	...

08016cdc <GUI_TOUCH_GetLayer>:
 8016cdc:	4b01      	ldr	r3, [pc, #4]	; (8016ce4 <GUI_TOUCH_GetLayer+0x8>)
 8016cde:	7a58      	ldrb	r0, [r3, #9]
 8016ce0:	4770      	bx	lr
 8016ce2:	bf00      	nop
 8016ce4:	200196f8 	.word	0x200196f8

08016ce8 <GUI_SetTextAlign>:
 8016ce8:	4b03      	ldr	r3, [pc, #12]	; (8016cf8 <GUI_SetTextAlign+0x10>)
 8016cea:	681b      	ldr	r3, [r3, #0]
 8016cec:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 8016cf0:	8598      	strh	r0, [r3, #44]	; 0x2c
 8016cf2:	4610      	mov	r0, r2
 8016cf4:	4770      	bx	lr
 8016cf6:	bf00      	nop
 8016cf8:	2000016c 	.word	0x2000016c

08016cfc <GUI_SetOrg>:
 8016cfc:	460a      	mov	r2, r1
 8016cfe:	4908      	ldr	r1, [pc, #32]	; (8016d20 <GUI_SetOrg+0x24>)
 8016d00:	b510      	push	{r4, lr}
 8016d02:	8008      	strh	r0, [r1, #0]
 8016d04:	4907      	ldr	r1, [pc, #28]	; (8016d24 <GUI_SetOrg+0x28>)
 8016d06:	800a      	strh	r2, [r1, #0]
 8016d08:	4907      	ldr	r1, [pc, #28]	; (8016d28 <GUI_SetOrg+0x2c>)
 8016d0a:	6809      	ldr	r1, [r1, #0]
 8016d0c:	4603      	mov	r3, r0
 8016d0e:	7c48      	ldrb	r0, [r1, #17]
 8016d10:	4906      	ldr	r1, [pc, #24]	; (8016d2c <GUI_SetOrg+0x30>)
 8016d12:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8016d16:	68c1      	ldr	r1, [r0, #12]
 8016d18:	6a0c      	ldr	r4, [r1, #32]
 8016d1a:	4619      	mov	r1, r3
 8016d1c:	47a0      	blx	r4
 8016d1e:	bd10      	pop	{r4, pc}
 8016d20:	200199d4 	.word	0x200199d4
 8016d24:	200199c8 	.word	0x200199c8
 8016d28:	2000016c 	.word	0x2000016c
 8016d2c:	200199ec 	.word	0x200199ec

08016d30 <GUI_SetLineStyle>:
 8016d30:	4b02      	ldr	r3, [pc, #8]	; (8016d3c <GUI_SetLineStyle+0xc>)
 8016d32:	681b      	ldr	r3, [r3, #0]
 8016d34:	7e9a      	ldrb	r2, [r3, #26]
 8016d36:	7698      	strb	r0, [r3, #26]
 8016d38:	4610      	mov	r0, r2
 8016d3a:	4770      	bx	lr
 8016d3c:	2000016c 	.word	0x2000016c

08016d40 <GUI_GetFontInfo>:
 8016d40:	b508      	push	{r3, lr}
 8016d42:	b910      	cbnz	r0, 8016d4a <GUI_GetFontInfo+0xa>
 8016d44:	4b07      	ldr	r3, [pc, #28]	; (8016d64 <GUI_GetFontInfo+0x24>)
 8016d46:	681b      	ldr	r3, [r3, #0]
 8016d48:	69d8      	ldr	r0, [r3, #28]
 8016d4a:	f890 3020 	ldrb.w	r3, [r0, #32]
 8016d4e:	708b      	strb	r3, [r1, #2]
 8016d50:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8016d54:	710b      	strb	r3, [r1, #4]
 8016d56:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 8016d5a:	70cb      	strb	r3, [r1, #3]
 8016d5c:	6883      	ldr	r3, [r0, #8]
 8016d5e:	4798      	blx	r3
 8016d60:	bd08      	pop	{r3, pc}
 8016d62:	bf00      	nop
 8016d64:	2000016c 	.word	0x2000016c

08016d68 <GUI_GetBkColor>:
 8016d68:	b508      	push	{r3, lr}
 8016d6a:	f001 f98f 	bl	801808c <LCD_GetBkColorIndex>
 8016d6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016d72:	f7f7 bef9 	b.w	800eb68 <LCD_Index2Color>

08016d76 <GUI_GetColor>:
 8016d76:	b508      	push	{r3, lr}
 8016d78:	f001 f990 	bl	801809c <LCD_GetColorIndex>
 8016d7c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016d80:	f7f7 bef2 	b.w	800eb68 <LCD_Index2Color>

08016d84 <GUI_GetClientRect>:
 8016d84:	b108      	cbz	r0, 8016d8a <GUI_GetClientRect+0x6>
 8016d86:	f7f3 bf09 	b.w	800ab9c <WM_GetClientRect>
 8016d8a:	4770      	bx	lr

08016d8c <_SetLineColor>:
 8016d8c:	4b1e      	ldr	r3, [pc, #120]	; (8016e08 <_SetLineColor+0x7c>)
 8016d8e:	681b      	ldr	r3, [r3, #0]
 8016d90:	7e9b      	ldrb	r3, [r3, #26]
 8016d92:	3b01      	subs	r3, #1
 8016d94:	2b03      	cmp	r3, #3
 8016d96:	d832      	bhi.n	8016dfe <_SetLineColor+0x72>
 8016d98:	e8df f003 	tbb	[pc, r3]
 8016d9c:	221a0d02 	.word	0x221a0d02
 8016da0:	4b1a      	ldr	r3, [pc, #104]	; (8016e0c <_SetLineColor+0x80>)
 8016da2:	3006      	adds	r0, #6
 8016da4:	4003      	ands	r3, r0
 8016da6:	2b00      	cmp	r3, #0
 8016da8:	da03      	bge.n	8016db2 <_SetLineColor+0x26>
 8016daa:	3b01      	subs	r3, #1
 8016dac:	f063 030f 	orn	r3, r3, #15
 8016db0:	3301      	adds	r3, #1
 8016db2:	2b0b      	cmp	r3, #11
 8016db4:	e008      	b.n	8016dc8 <_SetLineColor+0x3c>
 8016db6:	4b16      	ldr	r3, [pc, #88]	; (8016e10 <_SetLineColor+0x84>)
 8016db8:	4003      	ands	r3, r0
 8016dba:	2b00      	cmp	r3, #0
 8016dbc:	da03      	bge.n	8016dc6 <_SetLineColor+0x3a>
 8016dbe:	3b01      	subs	r3, #1
 8016dc0:	f063 0303 	orn	r3, r3, #3
 8016dc4:	3301      	adds	r3, #1
 8016dc6:	2b01      	cmp	r3, #1
 8016dc8:	bfcc      	ite	gt
 8016dca:	2000      	movgt	r0, #0
 8016dcc:	2001      	movle	r0, #1
 8016dce:	4770      	bx	lr
 8016dd0:	2314      	movs	r3, #20
 8016dd2:	fb90 f2f3 	sdiv	r2, r0, r3
 8016dd6:	fb03 0012 	mls	r0, r3, r2, r0
 8016dda:	280b      	cmp	r0, #11
 8016ddc:	dc09      	bgt.n	8016df2 <_SetLineColor+0x66>
 8016dde:	e010      	b.n	8016e02 <_SetLineColor+0x76>
 8016de0:	2318      	movs	r3, #24
 8016de2:	fb90 f2f3 	sdiv	r2, r0, r3
 8016de6:	fb03 0012 	mls	r0, r3, r2, r0
 8016dea:	280b      	cmp	r0, #11
 8016dec:	dd09      	ble.n	8016e02 <_SetLineColor+0x76>
 8016dee:	f020 0004 	bic.w	r0, r0, #4
 8016df2:	3810      	subs	r0, #16
 8016df4:	2801      	cmp	r0, #1
 8016df6:	bf8c      	ite	hi
 8016df8:	2000      	movhi	r0, #0
 8016dfa:	2001      	movls	r0, #1
 8016dfc:	4770      	bx	lr
 8016dfe:	2000      	movs	r0, #0
 8016e00:	4770      	bx	lr
 8016e02:	2001      	movs	r0, #1
 8016e04:	4770      	bx	lr
 8016e06:	bf00      	nop
 8016e08:	2000016c 	.word	0x2000016c
 8016e0c:	8000000f 	.word	0x8000000f
 8016e10:	80000003 	.word	0x80000003

08016e14 <GUI_sin>:
 8016e14:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8016e18:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8016e1c:	bfc6      	itte	gt
 8016e1e:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 8016e22:	2101      	movgt	r1, #1
 8016e24:	2100      	movle	r1, #0
 8016e26:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8016e2a:	bfc8      	it	gt
 8016e2c:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 8016e30:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 8016e34:	b510      	push	{r4, lr}
 8016e36:	1182      	asrs	r2, r0, #6
 8016e38:	4c0b      	ldr	r4, [pc, #44]	; (8016e68 <GUI_sin+0x54>)
 8016e3a:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8016e3e:	b29b      	uxth	r3, r3
 8016e40:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 8016e44:	2b40      	cmp	r3, #64	; 0x40
 8016e46:	fb00 f003 	mul.w	r0, r0, r3
 8016e4a:	d008      	beq.n	8016e5e <GUI_sin+0x4a>
 8016e4c:	2a10      	cmp	r2, #16
 8016e4e:	d006      	beq.n	8016e5e <GUI_sin+0x4a>
 8016e50:	3201      	adds	r2, #1
 8016e52:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8016e56:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 8016e5a:	fb03 0002 	mla	r0, r3, r2, r0
 8016e5e:	3020      	adds	r0, #32
 8016e60:	0980      	lsrs	r0, r0, #6
 8016e62:	b101      	cbz	r1, 8016e66 <GUI_sin+0x52>
 8016e64:	4240      	negs	r0, r0
 8016e66:	bd10      	pop	{r4, pc}
 8016e68:	0801fea0 	.word	0x0801fea0

08016e6c <GUI_cos>:
 8016e6c:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8016e70:	f7ff bfd0 	b.w	8016e14 <GUI_sin>

08016e74 <GL_DrawLine1Ex>:
 8016e74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e78:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8016e7c:	1a17      	subs	r7, r2, r0
 8016e7e:	1a5c      	subs	r4, r3, r1
 8016e80:	ea54 0c07 	orrs.w	ip, r4, r7
 8016e84:	4605      	mov	r5, r0
 8016e86:	460e      	mov	r6, r1
 8016e88:	f8d8 b000 	ldr.w	fp, [r8]
 8016e8c:	d104      	bne.n	8016e98 <GL_DrawLine1Ex+0x24>
 8016e8e:	b003      	add	sp, #12
 8016e90:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e94:	f001 be54 	b.w	8018b40 <GL_DrawPoint>
 8016e98:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 8016e9c:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 8016ea0:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8016ea4:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8016ea8:	4288      	cmp	r0, r1
 8016eaa:	db04      	blt.n	8016eb6 <GL_DrawLine1Ex+0x42>
 8016eac:	4621      	mov	r1, r4
 8016eae:	463c      	mov	r4, r7
 8016eb0:	460f      	mov	r7, r1
 8016eb2:	2100      	movs	r1, #0
 8016eb4:	e006      	b.n	8016ec4 <GL_DrawLine1Ex+0x50>
 8016eb6:	4611      	mov	r1, r2
 8016eb8:	461a      	mov	r2, r3
 8016eba:	460b      	mov	r3, r1
 8016ebc:	4629      	mov	r1, r5
 8016ebe:	4635      	mov	r5, r6
 8016ec0:	460e      	mov	r6, r1
 8016ec2:	2101      	movs	r1, #1
 8016ec4:	9100      	str	r1, [sp, #0]
 8016ec6:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8016eca:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8016ece:	428c      	cmp	r4, r1
 8016ed0:	d008      	beq.n	8016ee4 <GL_DrawLine1Ex+0x70>
 8016ed2:	461e      	mov	r6, r3
 8016ed4:	462b      	mov	r3, r5
 8016ed6:	4264      	negs	r4, r4
 8016ed8:	4615      	mov	r5, r2
 8016eda:	427f      	negs	r7, r7
 8016edc:	461a      	mov	r2, r3
 8016ede:	f04f 3aff 	mov.w	sl, #4294967295
 8016ee2:	e001      	b.n	8016ee8 <GL_DrawLine1Ex+0x74>
 8016ee4:	f04f 0a01 	mov.w	sl, #1
 8016ee8:	2f00      	cmp	r7, #0
 8016eea:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8017034 <GL_DrawLine1Ex+0x1c0>
 8016eee:	d13e      	bne.n	8016f6e <GL_DrawLine1Ex+0xfa>
 8016ef0:	9b00      	ldr	r3, [sp, #0]
 8016ef2:	b1d3      	cbz	r3, 8016f2a <GL_DrawLine1Ex+0xb6>
 8016ef4:	f8d9 3000 	ldr.w	r3, [r9]
 8016ef8:	7e9b      	ldrb	r3, [r3, #26]
 8016efa:	b98b      	cbnz	r3, 8016f20 <GL_DrawLine1Ex+0xac>
 8016efc:	4630      	mov	r0, r6
 8016efe:	4629      	mov	r1, r5
 8016f00:	b003      	add	sp, #12
 8016f02:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f06:	f7f7 bb8b 	b.w	800e620 <LCD_DrawVLine>
 8016f0a:	f7ff ff3f 	bl	8016d8c <_SetLineColor>
 8016f0e:	b930      	cbnz	r0, 8016f1e <GL_DrawLine1Ex+0xaa>
 8016f10:	f8d9 3000 	ldr.w	r3, [r9]
 8016f14:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8016f16:	4630      	mov	r0, r6
 8016f18:	685b      	ldr	r3, [r3, #4]
 8016f1a:	1979      	adds	r1, r7, r5
 8016f1c:	4798      	blx	r3
 8016f1e:	3701      	adds	r7, #1
 8016f20:	42a7      	cmp	r7, r4
 8016f22:	eb07 000b 	add.w	r0, r7, fp
 8016f26:	ddf0      	ble.n	8016f0a <GL_DrawLine1Ex+0x96>
 8016f28:	e01d      	b.n	8016f66 <GL_DrawLine1Ex+0xf2>
 8016f2a:	f8d9 3000 	ldr.w	r3, [r9]
 8016f2e:	7e99      	ldrb	r1, [r3, #26]
 8016f30:	b111      	cbz	r1, 8016f38 <GL_DrawLine1Ex+0xc4>
 8016f32:	f8dd a000 	ldr.w	sl, [sp]
 8016f36:	e012      	b.n	8016f5e <GL_DrawLine1Ex+0xea>
 8016f38:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8016f3a:	4628      	mov	r0, r5
 8016f3c:	681b      	ldr	r3, [r3, #0]
 8016f3e:	4631      	mov	r1, r6
 8016f40:	4798      	blx	r3
 8016f42:	e074      	b.n	801702e <GL_DrawLine1Ex+0x1ba>
 8016f44:	f7ff ff22 	bl	8016d8c <_SetLineColor>
 8016f48:	b938      	cbnz	r0, 8016f5a <GL_DrawLine1Ex+0xe6>
 8016f4a:	f8d9 3000 	ldr.w	r3, [r9]
 8016f4e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8016f50:	eb0a 0005 	add.w	r0, sl, r5
 8016f54:	685b      	ldr	r3, [r3, #4]
 8016f56:	4631      	mov	r1, r6
 8016f58:	4798      	blx	r3
 8016f5a:	f10a 0a01 	add.w	sl, sl, #1
 8016f5e:	45a2      	cmp	sl, r4
 8016f60:	eb0a 000b 	add.w	r0, sl, fp
 8016f64:	ddee      	ble.n	8016f44 <GL_DrawLine1Ex+0xd0>
 8016f66:	3801      	subs	r0, #1
 8016f68:	f8c8 0000 	str.w	r0, [r8]
 8016f6c:	e05f      	b.n	801702e <GL_DrawLine1Ex+0x1ba>
 8016f6e:	f8d9 1000 	ldr.w	r1, [r9]
 8016f72:	f04f 0202 	mov.w	r2, #2
 8016f76:	7e89      	ldrb	r1, [r1, #26]
 8016f78:	fb94 f2f2 	sdiv	r2, r4, r2
 8016f7c:	bfb8      	it	lt
 8016f7e:	4252      	neglt	r2, r2
 8016f80:	b9d9      	cbnz	r1, 8016fba <GL_DrawLine1Ex+0x146>
 8016f82:	4693      	mov	fp, r2
 8016f84:	46a8      	mov	r8, r5
 8016f86:	ebc5 0308 	rsb	r3, r5, r8
 8016f8a:	42a3      	cmp	r3, r4
 8016f8c:	dc4f      	bgt.n	801702e <GL_DrawLine1Ex+0x1ba>
 8016f8e:	9b00      	ldr	r3, [sp, #0]
 8016f90:	fb9b f1f4 	sdiv	r1, fp, r4
 8016f94:	4431      	add	r1, r6
 8016f96:	b92b      	cbnz	r3, 8016fa4 <GL_DrawLine1Ex+0x130>
 8016f98:	f8d9 3000 	ldr.w	r3, [r9]
 8016f9c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8016f9e:	4640      	mov	r0, r8
 8016fa0:	685b      	ldr	r3, [r3, #4]
 8016fa2:	e005      	b.n	8016fb0 <GL_DrawLine1Ex+0x13c>
 8016fa4:	f8d9 3000 	ldr.w	r3, [r9]
 8016fa8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8016faa:	685b      	ldr	r3, [r3, #4]
 8016fac:	4608      	mov	r0, r1
 8016fae:	4641      	mov	r1, r8
 8016fb0:	4798      	blx	r3
 8016fb2:	f108 0801 	add.w	r8, r8, #1
 8016fb6:	44bb      	add	fp, r7
 8016fb8:	e7e5      	b.n	8016f86 <GL_DrawLine1Ex+0x112>
 8016fba:	f1ba 3fff 	cmp.w	sl, #4294967295
 8016fbe:	bf04      	itt	eq
 8016fc0:	eb04 010b 	addeq.w	r1, r4, fp
 8016fc4:	f8c8 1000 	streq.w	r1, [r8]
 8016fc8:	9201      	str	r2, [sp, #4]
 8016fca:	46ab      	mov	fp, r5
 8016fcc:	ebc5 010b 	rsb	r1, r5, fp
 8016fd0:	42a1      	cmp	r1, r4
 8016fd2:	f8d8 0000 	ldr.w	r0, [r8]
 8016fd6:	dc1e      	bgt.n	8017016 <GL_DrawLine1Ex+0x1a2>
 8016fd8:	4450      	add	r0, sl
 8016fda:	f8c8 0000 	str.w	r0, [r8]
 8016fde:	f7ff fed5 	bl	8016d8c <_SetLineColor>
 8016fe2:	b980      	cbnz	r0, 8017006 <GL_DrawLine1Ex+0x192>
 8016fe4:	f8dd c004 	ldr.w	ip, [sp, #4]
 8016fe8:	f8d9 0000 	ldr.w	r0, [r9]
 8016fec:	9b00      	ldr	r3, [sp, #0]
 8016fee:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8016ff0:	fb9c f1f4 	sdiv	r1, ip, r4
 8016ff4:	4431      	add	r1, r6
 8016ff6:	b913      	cbnz	r3, 8016ffe <GL_DrawLine1Ex+0x18a>
 8016ff8:	6843      	ldr	r3, [r0, #4]
 8016ffa:	4658      	mov	r0, fp
 8016ffc:	e002      	b.n	8017004 <GL_DrawLine1Ex+0x190>
 8016ffe:	6843      	ldr	r3, [r0, #4]
 8017000:	4608      	mov	r0, r1
 8017002:	4659      	mov	r1, fp
 8017004:	4798      	blx	r3
 8017006:	f8dd c004 	ldr.w	ip, [sp, #4]
 801700a:	44bc      	add	ip, r7
 801700c:	f10b 0b01 	add.w	fp, fp, #1
 8017010:	f8cd c004 	str.w	ip, [sp, #4]
 8017014:	e7da      	b.n	8016fcc <GL_DrawLine1Ex+0x158>
 8017016:	f1ba 3fff 	cmp.w	sl, #4294967295
 801701a:	bf04      	itt	eq
 801701c:	1824      	addeq	r4, r4, r0
 801701e:	f8c8 4000 	streq.w	r4, [r8]
 8017022:	f8d8 2000 	ldr.w	r2, [r8]
 8017026:	ebca 0302 	rsb	r3, sl, r2
 801702a:	f8c8 3000 	str.w	r3, [r8]
 801702e:	b003      	add	sp, #12
 8017030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017034:	2000016c 	.word	0x2000016c

08017038 <GL_DrawLineEx>:
 8017038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801703c:	4d67      	ldr	r5, [pc, #412]	; (80171dc <GL_DrawLineEx+0x1a4>)
 801703e:	682c      	ldr	r4, [r5, #0]
 8017040:	f894 b018 	ldrb.w	fp, [r4, #24]
 8017044:	f1bb 0f01 	cmp.w	fp, #1
 8017048:	b087      	sub	sp, #28
 801704a:	4681      	mov	r9, r0
 801704c:	4688      	mov	r8, r1
 801704e:	4617      	mov	r7, r2
 8017050:	461e      	mov	r6, r3
 8017052:	46aa      	mov	sl, r5
 8017054:	d104      	bne.n	8017060 <GL_DrawLineEx+0x28>
 8017056:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017058:	9400      	str	r4, [sp, #0]
 801705a:	f7ff ff0b 	bl	8016e74 <GL_DrawLine1Ex>
 801705e:	e0ba      	b.n	80171d6 <GL_DrawLineEx+0x19e>
 8017060:	1a84      	subs	r4, r0, r2
 8017062:	1acd      	subs	r5, r1, r3
 8017064:	ea54 0305 	orrs.w	r3, r4, r5
 8017068:	f000 80b5 	beq.w	80171d6 <GL_DrawLineEx+0x19e>
 801706c:	2c00      	cmp	r4, #0
 801706e:	bfba      	itte	lt
 8017070:	4264      	neglt	r4, r4
 8017072:	2301      	movlt	r3, #1
 8017074:	2300      	movge	r3, #0
 8017076:	2d00      	cmp	r5, #0
 8017078:	bfbc      	itt	lt
 801707a:	426d      	neglt	r5, r5
 801707c:	f043 0302 	orrlt.w	r3, r3, #2
 8017080:	42a5      	cmp	r5, r4
 8017082:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017086:	dd04      	ble.n	8017092 <GL_DrawLineEx+0x5a>
 8017088:	4622      	mov	r2, r4
 801708a:	f043 0304 	orr.w	r3, r3, #4
 801708e:	462c      	mov	r4, r5
 8017090:	4615      	mov	r5, r2
 8017092:	2202      	movs	r2, #2
 8017094:	fb94 f2f2 	sdiv	r2, r4, r2
 8017098:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 801709c:	fb95 f4f4 	sdiv	r4, r5, r4
 80170a0:	11a1      	asrs	r1, r4, #6
 80170a2:	4a4f      	ldr	r2, [pc, #316]	; (80171e0 <GL_DrawLineEx+0x1a8>)
 80170a4:	f3c4 0483 	ubfx	r4, r4, #2, #4
 80170a8:	f1c4 0510 	rsb	r5, r4, #16
 80170ac:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 80170b0:	2d10      	cmp	r5, #16
 80170b2:	fb05 f000 	mul.w	r0, r5, r0
 80170b6:	d004      	beq.n	80170c2 <GL_DrawLineEx+0x8a>
 80170b8:	3101      	adds	r1, #1
 80170ba:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 80170be:	fb04 0002 	mla	r0, r4, r2, r0
 80170c2:	2210      	movs	r2, #16
 80170c4:	3008      	adds	r0, #8
 80170c6:	fb90 f0f2 	sdiv	r0, r0, r2
 80170ca:	0759      	lsls	r1, r3, #29
 80170cc:	bf48      	it	mi
 80170ce:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 80170d2:	07da      	lsls	r2, r3, #31
 80170d4:	bf48      	it	mi
 80170d6:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 80170da:	079b      	lsls	r3, r3, #30
 80170dc:	bf48      	it	mi
 80170de:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 80170e2:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 80170e6:	4628      	mov	r0, r5
 80170e8:	f7ff fec0 	bl	8016e6c <GUI_cos>
 80170ec:	fb00 f40b 	mul.w	r4, r0, fp
 80170f0:	4628      	mov	r0, r5
 80170f2:	f7ff fe8f 	bl	8016e14 <GUI_sin>
 80170f6:	2c00      	cmp	r4, #0
 80170f8:	fb00 f00b 	mul.w	r0, r0, fp
 80170fc:	da04      	bge.n	8017108 <GL_DrawLineEx+0xd0>
 80170fe:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 8017102:	129b      	asrs	r3, r3, #10
 8017104:	425b      	negs	r3, r3
 8017106:	e002      	b.n	801710e <GL_DrawLineEx+0xd6>
 8017108:	f504 7300 	add.w	r3, r4, #512	; 0x200
 801710c:	129b      	asrs	r3, r3, #10
 801710e:	2800      	cmp	r0, #0
 8017110:	da06      	bge.n	8017120 <GL_DrawLineEx+0xe8>
 8017112:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 8017116:	ea4f 2bab 	mov.w	fp, fp, asr #10
 801711a:	f1cb 0b00 	rsb	fp, fp, #0
 801711e:	e003      	b.n	8017128 <GL_DrawLineEx+0xf0>
 8017120:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 8017124:	ea4f 2bab 	mov.w	fp, fp, asr #10
 8017128:	2b00      	cmp	r3, #0
 801712a:	dd03      	ble.n	8017134 <GL_DrawLineEx+0xfc>
 801712c:	1c58      	adds	r0, r3, #1
 801712e:	1040      	asrs	r0, r0, #1
 8017130:	105b      	asrs	r3, r3, #1
 8017132:	e005      	b.n	8017140 <GL_DrawLineEx+0x108>
 8017134:	2202      	movs	r2, #2
 8017136:	fb93 f0f2 	sdiv	r0, r3, r2
 801713a:	3b01      	subs	r3, #1
 801713c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017140:	f1bb 0f00 	cmp.w	fp, #0
 8017144:	dd05      	ble.n	8017152 <GL_DrawLineEx+0x11a>
 8017146:	f10b 0201 	add.w	r2, fp, #1
 801714a:	1052      	asrs	r2, r2, #1
 801714c:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 8017150:	e006      	b.n	8017160 <GL_DrawLineEx+0x128>
 8017152:	2102      	movs	r1, #2
 8017154:	fb9b f2f1 	sdiv	r2, fp, r1
 8017158:	f10b 3bff 	add.w	fp, fp, #4294967295
 801715c:	fb9b fbf1 	sdiv	fp, fp, r1
 8017160:	b280      	uxth	r0, r0
 8017162:	fa1f f489 	uxth.w	r4, r9
 8017166:	1901      	adds	r1, r0, r4
 8017168:	b292      	uxth	r2, r2
 801716a:	f8ad 1008 	strh.w	r1, [sp, #8]
 801716e:	fa1f fb8b 	uxth.w	fp, fp
 8017172:	fa1f f188 	uxth.w	r1, r8
 8017176:	1855      	adds	r5, r2, r1
 8017178:	ebcb 0101 	rsb	r1, fp, r1
 801717c:	b29b      	uxth	r3, r3
 801717e:	f8ad 100e 	strh.w	r1, [sp, #14]
 8017182:	b2b9      	uxth	r1, r7
 8017184:	1ae4      	subs	r4, r4, r3
 8017186:	1acb      	subs	r3, r1, r3
 8017188:	f8ad 3010 	strh.w	r3, [sp, #16]
 801718c:	b2b3      	uxth	r3, r6
 801718e:	4401      	add	r1, r0
 8017190:	ebcb 0b03 	rsb	fp, fp, r3
 8017194:	4413      	add	r3, r2
 8017196:	2200      	movs	r2, #0
 8017198:	f8ad 1014 	strh.w	r1, [sp, #20]
 801719c:	f8ad 3016 	strh.w	r3, [sp, #22]
 80171a0:	a802      	add	r0, sp, #8
 80171a2:	4613      	mov	r3, r2
 80171a4:	2104      	movs	r1, #4
 80171a6:	f8ad 500a 	strh.w	r5, [sp, #10]
 80171aa:	f8ad 400c 	strh.w	r4, [sp, #12]
 80171ae:	f8ad b012 	strh.w	fp, [sp, #18]
 80171b2:	f001 fbe3 	bl	801897c <GL_FillPolygon>
 80171b6:	f8da 3000 	ldr.w	r3, [sl]
 80171ba:	7e5b      	ldrb	r3, [r3, #25]
 80171bc:	b91b      	cbnz	r3, 80171c6 <GL_DrawLineEx+0x18e>
 80171be:	4648      	mov	r0, r9
 80171c0:	4641      	mov	r1, r8
 80171c2:	f001 fcbd 	bl	8018b40 <GL_DrawPoint>
 80171c6:	f8da 3000 	ldr.w	r3, [sl]
 80171ca:	7e5b      	ldrb	r3, [r3, #25]
 80171cc:	b91b      	cbnz	r3, 80171d6 <GL_DrawLineEx+0x19e>
 80171ce:	4638      	mov	r0, r7
 80171d0:	4631      	mov	r1, r6
 80171d2:	f001 fcb5 	bl	8018b40 <GL_DrawPoint>
 80171d6:	b007      	add	sp, #28
 80171d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171dc:	2000016c 	.word	0x2000016c
 80171e0:	0801fec2 	.word	0x0801fec2

080171e4 <GL_DrawLine>:
 80171e4:	b530      	push	{r4, r5, lr}
 80171e6:	b085      	sub	sp, #20
 80171e8:	ac04      	add	r4, sp, #16
 80171ea:	2500      	movs	r5, #0
 80171ec:	f844 5d04 	str.w	r5, [r4, #-4]!
 80171f0:	9400      	str	r4, [sp, #0]
 80171f2:	f7ff ff21 	bl	8017038 <GL_DrawLineEx>
 80171f6:	b005      	add	sp, #20
 80171f8:	bd30      	pop	{r4, r5, pc}
	...

080171fc <GUI_DrawLine>:
 80171fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017200:	461e      	mov	r6, r3
 8017202:	4b0c      	ldr	r3, [pc, #48]	; (8017234 <GUI_DrawLine+0x38>)
 8017204:	681c      	ldr	r4, [r3, #0]
 8017206:	4681      	mov	r9, r0
 8017208:	2000      	movs	r0, #0
 801720a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 801720c:	6d24      	ldr	r4, [r4, #80]	; 0x50
 801720e:	4688      	mov	r8, r1
 8017210:	4617      	mov	r7, r2
 8017212:	f7f4 fc5f 	bl	800bad4 <WM__InitIVRSearch>
 8017216:	b150      	cbz	r0, 801722e <GUI_DrawLine+0x32>
 8017218:	eb09 0005 	add.w	r0, r9, r5
 801721c:	eb08 0104 	add.w	r1, r8, r4
 8017220:	197a      	adds	r2, r7, r5
 8017222:	1933      	adds	r3, r6, r4
 8017224:	f7ff ffde 	bl	80171e4 <GL_DrawLine>
 8017228:	f7f4 fb92 	bl	800b950 <WM__GetNextIVR>
 801722c:	e7f3      	b.n	8017216 <GUI_DrawLine+0x1a>
 801722e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017232:	bf00      	nop
 8017234:	2000016c 	.word	0x2000016c

08017238 <_DrawGradient>:
 8017238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801723c:	b091      	sub	sp, #68	; 0x44
 801723e:	4605      	mov	r5, r0
 8017240:	4689      	mov	r9, r1
 8017242:	981c      	ldr	r0, [sp, #112]	; 0x70
 8017244:	991d      	ldr	r1, [sp, #116]	; 0x74
 8017246:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
 801724a:	9002      	str	r0, [sp, #8]
 801724c:	4614      	mov	r4, r2
 801724e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8017250:	9200      	str	r2, [sp, #0]
 8017252:	461e      	mov	r6, r3
 8017254:	9101      	str	r1, [sp, #4]
 8017256:	f7ff fd8e 	bl	8016d76 <GUI_GetColor>
 801725a:	9a00      	ldr	r2, [sp, #0]
 801725c:	900b      	str	r0, [sp, #44]	; 0x2c
 801725e:	4542      	cmp	r2, r8
 8017260:	d109      	bne.n	8017276 <_DrawGradient+0x3e>
 8017262:	4610      	mov	r0, r2
 8017264:	f7f7 fcd0 	bl	800ec08 <LCD_SetColor>
 8017268:	9a01      	ldr	r2, [sp, #4]
 801726a:	b112      	cbz	r2, 8017272 <_DrawGradient+0x3a>
 801726c:	4628      	mov	r0, r5
 801726e:	4649      	mov	r1, r9
 8017270:	e0b5      	b.n	80173de <_DrawGradient+0x1a6>
 8017272:	4648      	mov	r0, r9
 8017274:	e0b9      	b.n	80173ea <_DrawGradient+0x1b2>
 8017276:	fa5f fc82 	uxtb.w	ip, r2
 801727a:	f8cd c018 	str.w	ip, [sp, #24]
 801727e:	f3c2 2c07 	ubfx	ip, r2, #8, #8
 8017282:	f8cd c01c 	str.w	ip, [sp, #28]
 8017286:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801728a:	f8cd c020 	str.w	ip, [sp, #32]
 801728e:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8017292:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 8017296:	f8dd c018 	ldr.w	ip, [sp, #24]
 801729a:	fa5f f388 	uxtb.w	r3, r8
 801729e:	ebcc 0303 	rsb	r3, ip, r3
 80172a2:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80172a6:	930d      	str	r3, [sp, #52]	; 0x34
 80172a8:	f3c8 2307 	ubfx	r3, r8, #8, #8
 80172ac:	ebcc 0303 	rsb	r3, ip, r3
 80172b0:	f8dd c020 	ldr.w	ip, [sp, #32]
 80172b4:	930c      	str	r3, [sp, #48]	; 0x30
 80172b6:	f3c8 4307 	ubfx	r3, r8, #16, #8
 80172ba:	ebcc 0303 	rsb	r3, ip, r3
 80172be:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 80172c2:	930e      	str	r3, [sp, #56]	; 0x38
 80172c4:	ebcc 6818 	rsb	r8, ip, r8, lsr #24
 80172c8:	ebb6 0709 	subs.w	r7, r6, r9
 80172cc:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 80172d0:	f04f 0800 	mov.w	r8, #0
 80172d4:	bf08      	it	eq
 80172d6:	2701      	moveq	r7, #1
 80172d8:	f109 33ff 	add.w	r3, r9, #4294967295
 80172dc:	f8cd 8010 	str.w	r8, [sp, #16]
 80172e0:	f8cd 800c 	str.w	r8, [sp, #12]
 80172e4:	f8cd 8014 	str.w	r8, [sp, #20]
 80172e8:	f04f 0a01 	mov.w	sl, #1
 80172ec:	f103 0b01 	add.w	fp, r3, #1
 80172f0:	45b3      	cmp	fp, r6
 80172f2:	dc68      	bgt.n	80173c6 <_DrawGradient+0x18e>
 80172f4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 80172f8:	fb98 f1f7 	sdiv	r1, r8, r7
 80172fc:	4461      	add	r1, ip
 80172fe:	f8dd c010 	ldr.w	ip, [sp, #16]
 8017302:	fb9c f0f7 	sdiv	r0, ip, r7
 8017306:	f8dd c020 	ldr.w	ip, [sp, #32]
 801730a:	4460      	add	r0, ip
 801730c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017310:	fb9c fef7 	sdiv	lr, ip, r7
 8017314:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8017318:	b2c0      	uxtb	r0, r0
 801731a:	44e6      	add	lr, ip
 801731c:	f8dd c014 	ldr.w	ip, [sp, #20]
 8017320:	0400      	lsls	r0, r0, #16
 8017322:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
 8017326:	fb9c f1f7 	sdiv	r1, ip, r7
 801732a:	f8dd c018 	ldr.w	ip, [sp, #24]
 801732e:	4461      	add	r1, ip
 8017330:	fa5f fe8e 	uxtb.w	lr, lr
 8017334:	b2c9      	uxtb	r1, r1
 8017336:	ea41 210e 	orr.w	r1, r1, lr, lsl #8
 801733a:	4301      	orrs	r1, r0
 801733c:	45cb      	cmp	fp, r9
 801733e:	910a      	str	r1, [sp, #40]	; 0x28
 8017340:	dd26      	ble.n	8017390 <_DrawGradient+0x158>
 8017342:	4291      	cmp	r1, r2
 8017344:	d102      	bne.n	801734c <_DrawGradient+0x114>
 8017346:	f10a 0a01 	add.w	sl, sl, #1
 801734a:	e021      	b.n	8017390 <_DrawGradient+0x158>
 801734c:	4610      	mov	r0, r2
 801734e:	9300      	str	r3, [sp, #0]
 8017350:	f7f7 fc5a 	bl	800ec08 <LCD_SetColor>
 8017354:	f1ba 0f01 	cmp.w	sl, #1
 8017358:	9b00      	ldr	r3, [sp, #0]
 801735a:	d00f      	beq.n	801737c <_DrawGradient+0x144>
 801735c:	9801      	ldr	r0, [sp, #4]
 801735e:	ebca 010b 	rsb	r1, sl, fp
 8017362:	b110      	cbz	r0, 801736a <_DrawGradient+0x132>
 8017364:	4628      	mov	r0, r5
 8017366:	4622      	mov	r2, r4
 8017368:	e003      	b.n	8017372 <_DrawGradient+0x13a>
 801736a:	4608      	mov	r0, r1
 801736c:	461a      	mov	r2, r3
 801736e:	4629      	mov	r1, r5
 8017370:	4623      	mov	r3, r4
 8017372:	f7f7 f97b 	bl	800e66c <LCD_FillRect>
 8017376:	f04f 0a01 	mov.w	sl, #1
 801737a:	e009      	b.n	8017390 <_DrawGradient+0x158>
 801737c:	9901      	ldr	r1, [sp, #4]
 801737e:	b111      	cbz	r1, 8017386 <_DrawGradient+0x14e>
 8017380:	4628      	mov	r0, r5
 8017382:	4619      	mov	r1, r3
 8017384:	e001      	b.n	801738a <_DrawGradient+0x152>
 8017386:	4618      	mov	r0, r3
 8017388:	4629      	mov	r1, r5
 801738a:	4622      	mov	r2, r4
 801738c:	9b02      	ldr	r3, [sp, #8]
 801738e:	4798      	blx	r3
 8017390:	f8dd c014 	ldr.w	ip, [sp, #20]
 8017394:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8017398:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801739a:	44f4      	add	ip, lr
 801739c:	f8cd c014 	str.w	ip, [sp, #20]
 80173a0:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 80173a4:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80173a8:	44f4      	add	ip, lr
 80173aa:	f8cd c00c 	str.w	ip, [sp, #12]
 80173ae:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 80173b2:	f8dd c010 	ldr.w	ip, [sp, #16]
 80173b6:	44f4      	add	ip, lr
 80173b8:	f8cd c010 	str.w	ip, [sp, #16]
 80173bc:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 80173c0:	465b      	mov	r3, fp
 80173c2:	44e0      	add	r8, ip
 80173c4:	e792      	b.n	80172ec <_DrawGradient+0xb4>
 80173c6:	4610      	mov	r0, r2
 80173c8:	f7f7 fc1e 	bl	800ec08 <LCD_SetColor>
 80173cc:	f1ba 0f01 	cmp.w	sl, #1
 80173d0:	d00f      	beq.n	80173f2 <_DrawGradient+0x1ba>
 80173d2:	9801      	ldr	r0, [sp, #4]
 80173d4:	ebca 0106 	rsb	r1, sl, r6
 80173d8:	b130      	cbz	r0, 80173e8 <_DrawGradient+0x1b0>
 80173da:	4628      	mov	r0, r5
 80173dc:	3101      	adds	r1, #1
 80173de:	4622      	mov	r2, r4
 80173e0:	4633      	mov	r3, r6
 80173e2:	f7f7 f943 	bl	800e66c <LCD_FillRect>
 80173e6:	e00e      	b.n	8017406 <_DrawGradient+0x1ce>
 80173e8:	1c48      	adds	r0, r1, #1
 80173ea:	4629      	mov	r1, r5
 80173ec:	4632      	mov	r2, r6
 80173ee:	4623      	mov	r3, r4
 80173f0:	e7f7      	b.n	80173e2 <_DrawGradient+0x1aa>
 80173f2:	9901      	ldr	r1, [sp, #4]
 80173f4:	b111      	cbz	r1, 80173fc <_DrawGradient+0x1c4>
 80173f6:	4628      	mov	r0, r5
 80173f8:	4631      	mov	r1, r6
 80173fa:	e001      	b.n	8017400 <_DrawGradient+0x1c8>
 80173fc:	4630      	mov	r0, r6
 80173fe:	4629      	mov	r1, r5
 8017400:	4622      	mov	r2, r4
 8017402:	9b02      	ldr	r3, [sp, #8]
 8017404:	4798      	blx	r3
 8017406:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017408:	b011      	add	sp, #68	; 0x44
 801740a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801740e:	f7f7 bbfb 	b.w	800ec08 <LCD_SetColor>
	...

08017414 <GUI_DrawGradientV>:
 8017414:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017418:	4c15      	ldr	r4, [pc, #84]	; (8017470 <GUI_DrawGradientV+0x5c>)
 801741a:	6824      	ldr	r4, [r4, #0]
 801741c:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 801741e:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8017420:	b087      	sub	sp, #28
 8017422:	eb00 0905 	add.w	r9, r0, r5
 8017426:	eb01 0804 	add.w	r8, r1, r4
 801742a:	4415      	add	r5, r2
 801742c:	441c      	add	r4, r3
 801742e:	a804      	add	r0, sp, #16
 8017430:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8017432:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017434:	f8ad 9010 	strh.w	r9, [sp, #16]
 8017438:	f8ad 5014 	strh.w	r5, [sp, #20]
 801743c:	f8ad 8012 	strh.w	r8, [sp, #18]
 8017440:	f8ad 4016 	strh.w	r4, [sp, #22]
 8017444:	f7f4 fb46 	bl	800bad4 <WM__InitIVRSearch>
 8017448:	b170      	cbz	r0, 8017468 <GUI_DrawGradientV+0x54>
 801744a:	4b0a      	ldr	r3, [pc, #40]	; (8017474 <GUI_DrawGradientV+0x60>)
 801744c:	9302      	str	r3, [sp, #8]
 801744e:	2301      	movs	r3, #1
 8017450:	9303      	str	r3, [sp, #12]
 8017452:	4648      	mov	r0, r9
 8017454:	4641      	mov	r1, r8
 8017456:	462a      	mov	r2, r5
 8017458:	4623      	mov	r3, r4
 801745a:	9700      	str	r7, [sp, #0]
 801745c:	9601      	str	r6, [sp, #4]
 801745e:	f7ff feeb 	bl	8017238 <_DrawGradient>
 8017462:	f7f4 fa75 	bl	800b950 <WM__GetNextIVR>
 8017466:	e7ef      	b.n	8017448 <GUI_DrawGradientV+0x34>
 8017468:	b007      	add	sp, #28
 801746a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801746e:	bf00      	nop
 8017470:	2000016c 	.word	0x2000016c
 8017474:	0800e5d5 	.word	0x0800e5d5

08017478 <GUI_DrawGradientH>:
 8017478:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801747c:	4c15      	ldr	r4, [pc, #84]	; (80174d4 <GUI_DrawGradientH+0x5c>)
 801747e:	6825      	ldr	r5, [r4, #0]
 8017480:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 8017482:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 8017484:	b087      	sub	sp, #28
 8017486:	eb00 0804 	add.w	r8, r0, r4
 801748a:	eb01 0905 	add.w	r9, r1, r5
 801748e:	4414      	add	r4, r2
 8017490:	441d      	add	r5, r3
 8017492:	a804      	add	r0, sp, #16
 8017494:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8017496:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017498:	f8ad 8010 	strh.w	r8, [sp, #16]
 801749c:	f8ad 4014 	strh.w	r4, [sp, #20]
 80174a0:	f8ad 9012 	strh.w	r9, [sp, #18]
 80174a4:	f8ad 5016 	strh.w	r5, [sp, #22]
 80174a8:	f7f4 fb14 	bl	800bad4 <WM__InitIVRSearch>
 80174ac:	b170      	cbz	r0, 80174cc <GUI_DrawGradientH+0x54>
 80174ae:	4b0a      	ldr	r3, [pc, #40]	; (80174d8 <GUI_DrawGradientH+0x60>)
 80174b0:	9302      	str	r3, [sp, #8]
 80174b2:	2300      	movs	r3, #0
 80174b4:	9303      	str	r3, [sp, #12]
 80174b6:	4648      	mov	r0, r9
 80174b8:	4641      	mov	r1, r8
 80174ba:	462a      	mov	r2, r5
 80174bc:	4623      	mov	r3, r4
 80174be:	9700      	str	r7, [sp, #0]
 80174c0:	9601      	str	r6, [sp, #4]
 80174c2:	f7ff feb9 	bl	8017238 <_DrawGradient>
 80174c6:	f7f4 fa43 	bl	800b950 <WM__GetNextIVR>
 80174ca:	e7ef      	b.n	80174ac <GUI_DrawGradientH+0x34>
 80174cc:	b007      	add	sp, #28
 80174ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80174d2:	bf00      	nop
 80174d4:	2000016c 	.word	0x2000016c
 80174d8:	0800e621 	.word	0x0800e621

080174dc <GUI_DispStringInRectEx>:
 80174dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174e0:	b085      	sub	sp, #20
 80174e2:	4681      	mov	r9, r0
 80174e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80174e6:	460c      	mov	r4, r1
 80174e8:	4690      	mov	r8, r2
 80174ea:	461f      	mov	r7, r3
 80174ec:	b915      	cbnz	r5, 80174f4 <GUI_DispStringInRectEx+0x18>
 80174ee:	f000 f8ef 	bl	80176d0 <GUI_DispStringInRectMax>
 80174f2:	e03d      	b.n	8017570 <GUI_DispStringInRectEx+0x94>
 80174f4:	b919      	cbnz	r1, 80174fe <GUI_DispStringInRectEx+0x22>
 80174f6:	9102      	str	r1, [sp, #8]
 80174f8:	9103      	str	r1, [sp, #12]
 80174fa:	460d      	mov	r5, r1
 80174fc:	e015      	b.n	801752a <GUI_DispStringInRectEx+0x4e>
 80174fe:	6808      	ldr	r0, [r1, #0]
 8017500:	6849      	ldr	r1, [r1, #4]
 8017502:	4b1d      	ldr	r3, [pc, #116]	; (8017578 <GUI_DispStringInRectEx+0x9c>)
 8017504:	ad02      	add	r5, sp, #8
 8017506:	c503      	stmia	r5!, {r0, r1}
 8017508:	ad02      	add	r5, sp, #8
 801750a:	cd03      	ldmia	r5!, {r0, r1}
 801750c:	6018      	str	r0, [r3, #0]
 801750e:	4620      	mov	r0, r4
 8017510:	6059      	str	r1, [r3, #4]
 8017512:	f7f2 ff15 	bl	800a340 <WM_SetUserClipRect>
 8017516:	4605      	mov	r5, r0
 8017518:	b138      	cbz	r0, 801752a <GUI_DispStringInRectEx+0x4e>
 801751a:	4668      	mov	r0, sp
 801751c:	4621      	mov	r1, r4
 801751e:	462a      	mov	r2, r5
 8017520:	f7f7 fc98 	bl	800ee54 <GUI__IntersectRects>
 8017524:	4668      	mov	r0, sp
 8017526:	f7f2 ff0b 	bl	800a340 <WM_SetUserClipRect>
 801752a:	4c14      	ldr	r4, [pc, #80]	; (801757c <GUI_DispStringInRectEx+0xa0>)
 801752c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801752e:	f8df a050 	ldr.w	sl, [pc, #80]	; 8017580 <GUI_DispStringInRectEx+0xa4>
 8017532:	6823      	ldr	r3, [r4, #0]
 8017534:	f8da b000 	ldr.w	fp, [sl]
 8017538:	f8ca 2000 	str.w	r2, [sl]
 801753c:	2600      	movs	r6, #0
 801753e:	615e      	str	r6, [r3, #20]
 8017540:	a802      	add	r0, sp, #8
 8017542:	6853      	ldr	r3, [r2, #4]
 8017544:	4798      	blx	r3
 8017546:	4642      	mov	r2, r8
 8017548:	463b      	mov	r3, r7
 801754a:	4648      	mov	r0, r9
 801754c:	a902      	add	r1, sp, #8
 801754e:	f000 f819 	bl	8017584 <GUI__DispStringInRect>
 8017552:	4628      	mov	r0, r5
 8017554:	f7f2 fef4 	bl	800a340 <WM_SetUserClipRect>
 8017558:	4652      	mov	r2, sl
 801755a:	6823      	ldr	r3, [r4, #0]
 801755c:	f1bb 0f00 	cmp.w	fp, #0
 8017560:	d001      	beq.n	8017566 <GUI_DispStringInRectEx+0x8a>
 8017562:	615e      	str	r6, [r3, #20]
 8017564:	e002      	b.n	801756c <GUI_DispStringInRectEx+0x90>
 8017566:	f103 0108 	add.w	r1, r3, #8
 801756a:	6159      	str	r1, [r3, #20]
 801756c:	f8c2 b000 	str.w	fp, [r2]
 8017570:	b005      	add	sp, #20
 8017572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017576:	bf00      	nop
 8017578:	20019af0 	.word	0x20019af0
 801757c:	2000016c 	.word	0x2000016c
 8017580:	200199c0 	.word	0x200199c0

08017584 <GUI__DispStringInRect>:
 8017584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017588:	b087      	sub	sp, #28
 801758a:	460c      	mov	r4, r1
 801758c:	9001      	str	r0, [sp, #4]
 801758e:	4691      	mov	r9, r2
 8017590:	461d      	mov	r5, r3
 8017592:	f7f9 fdf9 	bl	8011188 <GUI_GetFontDistY>
 8017596:	9f01      	ldr	r7, [sp, #4]
 8017598:	4680      	mov	r8, r0
 801759a:	b124      	cbz	r4, 80175a6 <GUI__DispStringInRect+0x22>
 801759c:	6820      	ldr	r0, [r4, #0]
 801759e:	6861      	ldr	r1, [r4, #4]
 80175a0:	ab04      	add	r3, sp, #16
 80175a2:	c303      	stmia	r3!, {r0, r1}
 80175a4:	e002      	b.n	80175ac <GUI__DispStringInRect+0x28>
 80175a6:	a804      	add	r0, sp, #16
 80175a8:	f7ff fbec 	bl	8016d84 <GUI_GetClientRect>
 80175ac:	f019 0a0c 	ands.w	sl, r9, #12
 80175b0:	d002      	beq.n	80175b8 <GUI__DispStringInRect+0x34>
 80175b2:	462c      	mov	r4, r5
 80175b4:	2600      	movs	r6, #0
 80175b6:	e016      	b.n	80175e6 <GUI__DispStringInRect+0x62>
 80175b8:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 80175bc:	e032      	b.n	8017624 <GUI__DispStringInRect+0xa0>
 80175be:	4621      	mov	r1, r4
 80175c0:	9801      	ldr	r0, [sp, #4]
 80175c2:	f7f9 fd17 	bl	8010ff4 <GUI__GetLineNumChars>
 80175c6:	f8dd b004 	ldr.w	fp, [sp, #4]
 80175ca:	4601      	mov	r1, r0
 80175cc:	1a24      	subs	r4, r4, r0
 80175ce:	4658      	mov	r0, fp
 80175d0:	f7f7 ff2e 	bl	800f430 <GUI_UC__NumChars2NumBytes>
 80175d4:	eb0b 0300 	add.w	r3, fp, r0
 80175d8:	a806      	add	r0, sp, #24
 80175da:	3601      	adds	r6, #1
 80175dc:	f840 3d14 	str.w	r3, [r0, #-20]!
 80175e0:	f000 fd77 	bl	80180d2 <GUI__HandleEOLine>
 80175e4:	b908      	cbnz	r0, 80175ea <GUI__DispStringInRect+0x66>
 80175e6:	2c00      	cmp	r4, #0
 80175e8:	d1e9      	bne.n	80175be <GUI__DispStringInRect+0x3a>
 80175ea:	f1ba 0f08 	cmp.w	sl, #8
 80175ee:	d005      	beq.n	80175fc <GUI__DispStringInRect+0x78>
 80175f0:	f1ba 0f0c 	cmp.w	sl, #12
 80175f4:	d008      	beq.n	8017608 <GUI__DispStringInRect+0x84>
 80175f6:	f1ba 0f04 	cmp.w	sl, #4
 80175fa:	d112      	bne.n	8017622 <GUI__DispStringInRect+0x9e>
 80175fc:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8017600:	fb08 4416 	mls	r4, r8, r6, r4
 8017604:	3401      	adds	r4, #1
 8017606:	e00d      	b.n	8017624 <GUI__DispStringInRect+0xa0>
 8017608:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801760c:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8017610:	1ae4      	subs	r4, r4, r3
 8017612:	3401      	adds	r4, #1
 8017614:	fb08 4416 	mls	r4, r8, r6, r4
 8017618:	2202      	movs	r2, #2
 801761a:	fb94 f4f2 	sdiv	r4, r4, r2
 801761e:	441c      	add	r4, r3
 8017620:	e000      	b.n	8017624 <GUI__DispStringInRect+0xa0>
 8017622:	2400      	movs	r4, #0
 8017624:	9701      	str	r7, [sp, #4]
 8017626:	2600      	movs	r6, #0
 8017628:	2d00      	cmp	r5, #0
 801762a:	d04b      	beq.n	80176c4 <GUI__DispStringInRect+0x140>
 801762c:	4629      	mov	r1, r5
 801762e:	9801      	ldr	r0, [sp, #4]
 8017630:	f7f9 fce0 	bl	8010ff4 <GUI__GetLineNumChars>
 8017634:	4607      	mov	r7, r0
 8017636:	1a2d      	subs	r5, r5, r0
 8017638:	4639      	mov	r1, r7
 801763a:	9801      	ldr	r0, [sp, #4]
 801763c:	f7f9 fd08 	bl	8011050 <GUI__GetLineDistX>
 8017640:	f009 0303 	and.w	r3, r9, #3
 8017644:	2b01      	cmp	r3, #1
 8017646:	d00f      	beq.n	8017668 <GUI__DispStringInRect+0xe4>
 8017648:	2b02      	cmp	r3, #2
 801764a:	d003      	beq.n	8017654 <GUI__DispStringInRect+0xd0>
 801764c:	b983      	cbnz	r3, 8017670 <GUI__DispStringInRect+0xec>
 801764e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 8017652:	e00d      	b.n	8017670 <GUI__DispStringInRect+0xec>
 8017654:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017658:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 801765c:	1ab6      	subs	r6, r6, r2
 801765e:	1a36      	subs	r6, r6, r0
 8017660:	fb96 f6f3 	sdiv	r6, r6, r3
 8017664:	4416      	add	r6, r2
 8017666:	e003      	b.n	8017670 <GUI__DispStringInRect+0xec>
 8017668:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 801766c:	1a36      	subs	r6, r6, r0
 801766e:	3601      	adds	r6, #1
 8017670:	4b16      	ldr	r3, [pc, #88]	; (80176cc <GUI__DispStringInRect+0x148>)
 8017672:	6819      	ldr	r1, [r3, #0]
 8017674:	3801      	subs	r0, #1
 8017676:	b2a3      	uxth	r3, r4
 8017678:	b2b2      	uxth	r2, r6
 801767a:	848b      	strh	r3, [r1, #36]	; 0x24
 801767c:	4430      	add	r0, r6
 801767e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017682:	f108 33ff 	add.w	r3, r8, #4294967295
 8017686:	4423      	add	r3, r4
 8017688:	844a      	strh	r2, [r1, #34]	; 0x22
 801768a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801768e:	4639      	mov	r1, r7
 8017690:	aa02      	add	r2, sp, #8
 8017692:	f8ad 000c 	strh.w	r0, [sp, #12]
 8017696:	9801      	ldr	r0, [sp, #4]
 8017698:	f8ad 300e 	strh.w	r3, [sp, #14]
 801769c:	f7f9 fd08 	bl	80110b0 <GUI__DispLine>
 80176a0:	f8dd a004 	ldr.w	sl, [sp, #4]
 80176a4:	4639      	mov	r1, r7
 80176a6:	4650      	mov	r0, sl
 80176a8:	f7f7 fec2 	bl	800f430 <GUI_UC__NumChars2NumBytes>
 80176ac:	af06      	add	r7, sp, #24
 80176ae:	4450      	add	r0, sl
 80176b0:	f847 0d14 	str.w	r0, [r7, #-20]!
 80176b4:	f7f9 fd68 	bl	8011188 <GUI_GetFontDistY>
 80176b8:	4404      	add	r4, r0
 80176ba:	4638      	mov	r0, r7
 80176bc:	f000 fd09 	bl	80180d2 <GUI__HandleEOLine>
 80176c0:	2800      	cmp	r0, #0
 80176c2:	d0b1      	beq.n	8017628 <GUI__DispStringInRect+0xa4>
 80176c4:	b007      	add	sp, #28
 80176c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176ca:	bf00      	nop
 80176cc:	2000016c 	.word	0x2000016c

080176d0 <GUI_DispStringInRectMax>:
 80176d0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80176d4:	460c      	mov	r4, r1
 80176d6:	4690      	mov	r8, r2
 80176d8:	461f      	mov	r7, r3
 80176da:	4606      	mov	r6, r0
 80176dc:	b1c0      	cbz	r0, 8017710 <GUI_DispStringInRectMax+0x40>
 80176de:	b169      	cbz	r1, 80176fc <GUI_DispStringInRectMax+0x2c>
 80176e0:	4608      	mov	r0, r1
 80176e2:	f7f2 fe2d 	bl	800a340 <WM_SetUserClipRect>
 80176e6:	4605      	mov	r5, r0
 80176e8:	b148      	cbz	r0, 80176fe <GUI_DispStringInRectMax+0x2e>
 80176ea:	4668      	mov	r0, sp
 80176ec:	4621      	mov	r1, r4
 80176ee:	462a      	mov	r2, r5
 80176f0:	f7f7 fbb0 	bl	800ee54 <GUI__IntersectRects>
 80176f4:	4668      	mov	r0, sp
 80176f6:	f7f2 fe23 	bl	800a340 <WM_SetUserClipRect>
 80176fa:	e000      	b.n	80176fe <GUI_DispStringInRectMax+0x2e>
 80176fc:	460d      	mov	r5, r1
 80176fe:	4630      	mov	r0, r6
 8017700:	4621      	mov	r1, r4
 8017702:	4642      	mov	r2, r8
 8017704:	463b      	mov	r3, r7
 8017706:	f7ff ff3d 	bl	8017584 <GUI__DispStringInRect>
 801770a:	4628      	mov	r0, r5
 801770c:	f7f2 fe18 	bl	800a340 <WM_SetUserClipRect>
 8017710:	b002      	add	sp, #8
 8017712:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017716 <GUI_DispStringInRect>:
 8017716:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801771a:	f7ff bfd9 	b.w	80176d0 <GUI_DispStringInRectMax>
	...

08017720 <GUI_CURSOR_SetPositionEx>:
 8017720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017722:	4606      	mov	r6, r0
 8017724:	4610      	mov	r0, r2
 8017726:	460d      	mov	r5, r1
 8017728:	4614      	mov	r4, r2
 801772a:	f7f8 fc6d 	bl	8010008 <GUI_GetCursorLayer>
 801772e:	4f15      	ldr	r7, [pc, #84]	; (8017784 <GUI_CURSOR_SetPositionEx+0x64>)
 8017730:	2314      	movs	r3, #20
 8017732:	b148      	cbz	r0, 8017748 <GUI_CURSOR_SetPositionEx+0x28>
 8017734:	435c      	muls	r4, r3
 8017736:	593b      	ldr	r3, [r7, r4]
 8017738:	6859      	ldr	r1, [r3, #4]
 801773a:	689a      	ldr	r2, [r3, #8]
 801773c:	1a71      	subs	r1, r6, r1
 801773e:	1aaa      	subs	r2, r5, r2
 8017740:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8017744:	f7f8 bc8a 	b.w	801005c <GUI_SetLayerPosEx>
 8017748:	fb03 7304 	mla	r3, r3, r4, r7
 801774c:	f103 0208 	add.w	r2, r3, #8
 8017750:	689b      	ldr	r3, [r3, #8]
 8017752:	42b3      	cmp	r3, r6
 8017754:	d102      	bne.n	801775c <GUI_CURSOR_SetPositionEx+0x3c>
 8017756:	6853      	ldr	r3, [r2, #4]
 8017758:	42ab      	cmp	r3, r5
 801775a:	d011      	beq.n	8017780 <GUI_CURSOR_SetPositionEx+0x60>
 801775c:	2314      	movs	r3, #20
 801775e:	4363      	muls	r3, r4
 8017760:	18fa      	adds	r2, r7, r3
 8017762:	6910      	ldr	r0, [r2, #16]
 8017764:	b138      	cbz	r0, 8017776 <GUI_CURSOR_SetPositionEx+0x56>
 8017766:	4a07      	ldr	r2, [pc, #28]	; (8017784 <GUI_CURSOR_SetPositionEx+0x64>)
 8017768:	58d3      	ldr	r3, [r2, r3]
 801776a:	6859      	ldr	r1, [r3, #4]
 801776c:	689a      	ldr	r2, [r3, #8]
 801776e:	1a71      	subs	r1, r6, r1
 8017770:	1aaa      	subs	r2, r5, r2
 8017772:	f000 fe0f 	bl	8018394 <GUI_SPRITE_SetPosition>
 8017776:	2314      	movs	r3, #20
 8017778:	fb03 7404 	mla	r4, r3, r4, r7
 801777c:	60a6      	str	r6, [r4, #8]
 801777e:	60e5      	str	r5, [r4, #12]
 8017780:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017782:	bf00      	nop
 8017784:	20019704 	.word	0x20019704

08017788 <GUI_ClearRectEx>:
 8017788:	4603      	mov	r3, r0
 801778a:	f9b0 0000 	ldrsh.w	r0, [r0]
 801778e:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 8017792:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8017796:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 801779a:	f7f9 b9af 	b.w	8010afc <GUI_ClearRect>
	...

080177a0 <GUI_DrawRect>:
 80177a0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80177a4:	4c1e      	ldr	r4, [pc, #120]	; (8017820 <GUI_DrawRect+0x80>)
 80177a6:	f8d4 e000 	ldr.w	lr, [r4]
 80177aa:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 80177ae:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 80177b2:	1905      	adds	r5, r0, r4
 80177b4:	4414      	add	r4, r2
 80177b6:	f89e 2018 	ldrb.w	r2, [lr, #24]
 80177ba:	3a01      	subs	r2, #1
 80177bc:	b292      	uxth	r2, r2
 80177be:	198f      	adds	r7, r1, r6
 80177c0:	441e      	add	r6, r3
 80177c2:	1aab      	subs	r3, r5, r2
 80177c4:	f8ad 3000 	strh.w	r3, [sp]
 80177c8:	1913      	adds	r3, r2, r4
 80177ca:	f8ad 3004 	strh.w	r3, [sp, #4]
 80177ce:	4668      	mov	r0, sp
 80177d0:	1abb      	subs	r3, r7, r2
 80177d2:	4432      	add	r2, r6
 80177d4:	f8ad 3002 	strh.w	r3, [sp, #2]
 80177d8:	f8ad 2006 	strh.w	r2, [sp, #6]
 80177dc:	f7f4 f97a 	bl	800bad4 <WM__InitIVRSearch>
 80177e0:	b1d0      	cbz	r0, 8017818 <GUI_DrawRect+0x78>
 80177e2:	4628      	mov	r0, r5
 80177e4:	4639      	mov	r1, r7
 80177e6:	4622      	mov	r2, r4
 80177e8:	f7f6 fef4 	bl	800e5d4 <LCD_DrawHLine>
 80177ec:	f107 0901 	add.w	r9, r7, #1
 80177f0:	4628      	mov	r0, r5
 80177f2:	4631      	mov	r1, r6
 80177f4:	4622      	mov	r2, r4
 80177f6:	f106 38ff 	add.w	r8, r6, #4294967295
 80177fa:	f7f6 feeb 	bl	800e5d4 <LCD_DrawHLine>
 80177fe:	4628      	mov	r0, r5
 8017800:	4649      	mov	r1, r9
 8017802:	4642      	mov	r2, r8
 8017804:	f7f6 ff0c 	bl	800e620 <LCD_DrawVLine>
 8017808:	4620      	mov	r0, r4
 801780a:	4649      	mov	r1, r9
 801780c:	4642      	mov	r2, r8
 801780e:	f7f6 ff07 	bl	800e620 <LCD_DrawVLine>
 8017812:	f7f4 f89d 	bl	800b950 <WM__GetNextIVR>
 8017816:	e7e3      	b.n	80177e0 <GUI_DrawRect+0x40>
 8017818:	b003      	add	sp, #12
 801781a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801781e:	bf00      	nop
 8017820:	2000016c 	.word	0x2000016c

08017824 <_GetIndexMask_0>:
 8017824:	b508      	push	{r3, lr}
 8017826:	f7f6 fddf 	bl	800e3e8 <LCD_GetNumColors>
 801782a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801782e:	d010      	beq.n	8017852 <_GetIndexMask_0+0x2e>
 8017830:	287f      	cmp	r0, #127	; 0x7f
 8017832:	d810      	bhi.n	8017856 <_GetIndexMask_0+0x32>
 8017834:	283f      	cmp	r0, #63	; 0x3f
 8017836:	d810      	bhi.n	801785a <_GetIndexMask_0+0x36>
 8017838:	281f      	cmp	r0, #31
 801783a:	d810      	bhi.n	801785e <_GetIndexMask_0+0x3a>
 801783c:	280f      	cmp	r0, #15
 801783e:	d810      	bhi.n	8017862 <_GetIndexMask_0+0x3e>
 8017840:	2807      	cmp	r0, #7
 8017842:	d810      	bhi.n	8017866 <_GetIndexMask_0+0x42>
 8017844:	2803      	cmp	r0, #3
 8017846:	d810      	bhi.n	801786a <_GetIndexMask_0+0x46>
 8017848:	2801      	cmp	r0, #1
 801784a:	bf94      	ite	ls
 801784c:	2000      	movls	r0, #0
 801784e:	2001      	movhi	r0, #1
 8017850:	e00c      	b.n	801786c <_GetIndexMask_0+0x48>
 8017852:	2008      	movs	r0, #8
 8017854:	e00a      	b.n	801786c <_GetIndexMask_0+0x48>
 8017856:	2007      	movs	r0, #7
 8017858:	e008      	b.n	801786c <_GetIndexMask_0+0x48>
 801785a:	2006      	movs	r0, #6
 801785c:	e006      	b.n	801786c <_GetIndexMask_0+0x48>
 801785e:	2005      	movs	r0, #5
 8017860:	e004      	b.n	801786c <_GetIndexMask_0+0x48>
 8017862:	2004      	movs	r0, #4
 8017864:	e002      	b.n	801786c <_GetIndexMask_0+0x48>
 8017866:	2003      	movs	r0, #3
 8017868:	e000      	b.n	801786c <_GetIndexMask_0+0x48>
 801786a:	2002      	movs	r0, #2
 801786c:	2301      	movs	r3, #1
 801786e:	fa03 f000 	lsl.w	r0, r3, r0
 8017872:	3801      	subs	r0, #1
 8017874:	bd08      	pop	{r3, pc}

08017876 <_Index2Color_0>:
 8017876:	b538      	push	{r3, r4, r5, lr}
 8017878:	4604      	mov	r4, r0
 801787a:	f7f6 fdb5 	bl	800e3e8 <LCD_GetNumColors>
 801787e:	4605      	mov	r5, r0
 8017880:	f7f6 fdd0 	bl	800e424 <LCD_GetPalette>
 8017884:	42ac      	cmp	r4, r5
 8017886:	d203      	bcs.n	8017890 <_Index2Color_0+0x1a>
 8017888:	b118      	cbz	r0, 8017892 <_Index2Color_0+0x1c>
 801788a:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 801788e:	bd38      	pop	{r3, r4, r5, pc}
 8017890:	2000      	movs	r0, #0
 8017892:	bd38      	pop	{r3, r4, r5, pc}

08017894 <_Color2Index_0>:
 8017894:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017898:	4681      	mov	r9, r0
 801789a:	f7f6 fda5 	bl	800e3e8 <LCD_GetNumColors>
 801789e:	4680      	mov	r8, r0
 80178a0:	f7f6 fdc0 	bl	800e424 <LCD_GetPalette>
 80178a4:	4606      	mov	r6, r0
 80178a6:	b1d8      	cbz	r0, 80178e0 <_Color2Index_0+0x4c>
 80178a8:	2300      	movs	r3, #0
 80178aa:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 80178ae:	4591      	cmp	r9, r2
 80178b0:	d01a      	beq.n	80178e8 <_Color2Index_0+0x54>
 80178b2:	3301      	adds	r3, #1
 80178b4:	4543      	cmp	r3, r8
 80178b6:	dbf8      	blt.n	80178aa <_Color2Index_0+0x16>
 80178b8:	2500      	movs	r5, #0
 80178ba:	f06f 477f 	mvn.w	r7, #4278190080	; 0xff000000
 80178be:	462c      	mov	r4, r5
 80178c0:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 80178c4:	4648      	mov	r0, r9
 80178c6:	f001 f9d3 	bl	8018c70 <GUI_CalcColorDist>
 80178ca:	42b8      	cmp	r0, r7
 80178cc:	bf38      	it	cc
 80178ce:	4625      	movcc	r5, r4
 80178d0:	f104 0401 	add.w	r4, r4, #1
 80178d4:	bf28      	it	cs
 80178d6:	4638      	movcs	r0, r7
 80178d8:	4544      	cmp	r4, r8
 80178da:	da02      	bge.n	80178e2 <_Color2Index_0+0x4e>
 80178dc:	4607      	mov	r7, r0
 80178de:	e7ef      	b.n	80178c0 <_Color2Index_0+0x2c>
 80178e0:	4605      	mov	r5, r0
 80178e2:	4628      	mov	r0, r5
 80178e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80178e8:	4618      	mov	r0, r3
 80178ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080178ee <_GetArrowPara>:
 80178ee:	b510      	push	{r4, lr}
 80178f0:	b121      	cbz	r1, 80178fc <_GetArrowPara+0xe>
 80178f2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80178f6:	f9b0 1000 	ldrsh.w	r1, [r0]
 80178fa:	e003      	b.n	8017904 <_GetArrowPara+0x16>
 80178fc:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8017900:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8017904:	1a61      	subs	r1, r4, r1
 8017906:	3101      	adds	r1, #1
 8017908:	1f0c      	subs	r4, r1, #4
 801790a:	2003      	movs	r0, #3
 801790c:	fb94 f0f0 	sdiv	r0, r4, r0
 8017910:	6010      	str	r0, [r2, #0]
 8017912:	1a08      	subs	r0, r1, r0
 8017914:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 8017918:	3901      	subs	r1, #1
 801791a:	6019      	str	r1, [r3, #0]
 801791c:	bd10      	pop	{r4, pc}

0801791e <_DrawGraspH>:
 801791e:	b570      	push	{r4, r5, r6, lr}
 8017920:	f9b0 3000 	ldrsh.w	r3, [r0]
 8017924:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8017928:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 801792c:	441e      	add	r6, r3
 801792e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8017932:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8017934:	1b5c      	subs	r4, r3, r5
 8017936:	3403      	adds	r4, #3
 8017938:	10a4      	asrs	r4, r4, #2
 801793a:	4425      	add	r5, r4
 801793c:	1076      	asrs	r6, r6, #1
 801793e:	1b1c      	subs	r4, r3, r4
 8017940:	f7f8 fb4e 	bl	800ffe0 <GUI_SetColor>
 8017944:	4630      	mov	r0, r6
 8017946:	4629      	mov	r1, r5
 8017948:	4622      	mov	r2, r4
 801794a:	f7f8 fe0f 	bl	801056c <GUI_DrawVLine>
 801794e:	1cb0      	adds	r0, r6, #2
 8017950:	4629      	mov	r1, r5
 8017952:	4622      	mov	r2, r4
 8017954:	f7f8 fe0a 	bl	801056c <GUI_DrawVLine>
 8017958:	1d30      	adds	r0, r6, #4
 801795a:	4629      	mov	r1, r5
 801795c:	4622      	mov	r2, r4
 801795e:	f7f8 fe05 	bl	801056c <GUI_DrawVLine>
 8017962:	1eb0      	subs	r0, r6, #2
 8017964:	4629      	mov	r1, r5
 8017966:	4622      	mov	r2, r4
 8017968:	f7f8 fe00 	bl	801056c <GUI_DrawVLine>
 801796c:	1f30      	subs	r0, r6, #4
 801796e:	4629      	mov	r1, r5
 8017970:	4622      	mov	r2, r4
 8017972:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017976:	f7f8 bdf9 	b.w	801056c <GUI_DrawVLine>

0801797a <_DrawGraspV>:
 801797a:	b570      	push	{r4, r5, r6, lr}
 801797c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8017980:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 8017984:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017988:	441e      	add	r6, r3
 801798a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801798e:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8017990:	1b5c      	subs	r4, r3, r5
 8017992:	3403      	adds	r4, #3
 8017994:	10a4      	asrs	r4, r4, #2
 8017996:	4425      	add	r5, r4
 8017998:	1076      	asrs	r6, r6, #1
 801799a:	1b1c      	subs	r4, r3, r4
 801799c:	f7f8 fb20 	bl	800ffe0 <GUI_SetColor>
 80179a0:	4630      	mov	r0, r6
 80179a2:	4629      	mov	r1, r5
 80179a4:	4622      	mov	r2, r4
 80179a6:	f7f8 fe03 	bl	80105b0 <GUI_DrawHLine>
 80179aa:	1cb0      	adds	r0, r6, #2
 80179ac:	4629      	mov	r1, r5
 80179ae:	4622      	mov	r2, r4
 80179b0:	f7f8 fdfe 	bl	80105b0 <GUI_DrawHLine>
 80179b4:	1d30      	adds	r0, r6, #4
 80179b6:	4629      	mov	r1, r5
 80179b8:	4622      	mov	r2, r4
 80179ba:	f7f8 fdf9 	bl	80105b0 <GUI_DrawHLine>
 80179be:	1eb0      	subs	r0, r6, #2
 80179c0:	4629      	mov	r1, r5
 80179c2:	4622      	mov	r2, r4
 80179c4:	f7f8 fdf4 	bl	80105b0 <GUI_DrawHLine>
 80179c8:	1f30      	subs	r0, r6, #4
 80179ca:	4629      	mov	r1, r5
 80179cc:	4622      	mov	r2, r4
 80179ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80179d2:	f7f8 bded 	b.w	80105b0 <GUI_DrawHLine>

080179d6 <_DrawFrame>:
 80179d6:	b538      	push	{r3, r4, r5, lr}
 80179d8:	4604      	mov	r4, r0
 80179da:	6808      	ldr	r0, [r1, #0]
 80179dc:	460d      	mov	r5, r1
 80179de:	f7f8 faff 	bl	800ffe0 <GUI_SetColor>
 80179e2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80179e6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80179ea:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80179ee:	3101      	adds	r1, #1
 80179f0:	3a01      	subs	r2, #1
 80179f2:	f7f8 fddd 	bl	80105b0 <GUI_DrawHLine>
 80179f6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80179fa:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80179fe:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8017a02:	3101      	adds	r1, #1
 8017a04:	3a01      	subs	r2, #1
 8017a06:	f7f8 fdd3 	bl	80105b0 <GUI_DrawHLine>
 8017a0a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017a0e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017a12:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017a16:	3101      	adds	r1, #1
 8017a18:	3a01      	subs	r2, #1
 8017a1a:	f7f8 fda7 	bl	801056c <GUI_DrawVLine>
 8017a1e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017a22:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017a26:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017a2a:	3101      	adds	r1, #1
 8017a2c:	3a01      	subs	r2, #1
 8017a2e:	f7f8 fd9d 	bl	801056c <GUI_DrawVLine>
 8017a32:	6868      	ldr	r0, [r5, #4]
 8017a34:	f7f8 fad4 	bl	800ffe0 <GUI_SetColor>
 8017a38:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8017a3c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017a40:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017a44:	3001      	adds	r0, #1
 8017a46:	3101      	adds	r1, #1
 8017a48:	3a01      	subs	r2, #1
 8017a4a:	f7f8 fdb1 	bl	80105b0 <GUI_DrawHLine>
 8017a4e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8017a52:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017a56:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017a5a:	3801      	subs	r0, #1
 8017a5c:	3101      	adds	r1, #1
 8017a5e:	3a01      	subs	r2, #1
 8017a60:	f7f8 fda6 	bl	80105b0 <GUI_DrawHLine>
 8017a64:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017a68:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017a6c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017a70:	3001      	adds	r0, #1
 8017a72:	3102      	adds	r1, #2
 8017a74:	3a02      	subs	r2, #2
 8017a76:	f7f8 fd79 	bl	801056c <GUI_DrawVLine>
 8017a7a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017a7e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017a82:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017a86:	3102      	adds	r1, #2
 8017a88:	3a02      	subs	r2, #2
 8017a8a:	3801      	subs	r0, #1
 8017a8c:	f7f8 fd6e 	bl	801056c <GUI_DrawVLine>
 8017a90:	68a8      	ldr	r0, [r5, #8]
 8017a92:	f7f8 faa5 	bl	800ffe0 <GUI_SetColor>
 8017a96:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017a9a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017a9e:	f001 f863 	bl	8018b68 <GUI_DrawPixel>
 8017aa2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017aa6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017aaa:	f001 f85d 	bl	8018b68 <GUI_DrawPixel>
 8017aae:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017ab2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017ab6:	f001 f857 	bl	8018b68 <GUI_DrawPixel>
 8017aba:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017abe:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017ac2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8017ac6:	f001 b84f 	b.w	8018b68 <GUI_DrawPixel>

08017aca <_DrawBackgroundH>:
 8017aca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017acc:	4604      	mov	r4, r0
 8017ace:	460d      	mov	r5, r1
 8017ad0:	f7ff ff81 	bl	80179d6 <_DrawFrame>
 8017ad4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017ad8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017adc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017ae0:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017ae4:	68ee      	ldr	r6, [r5, #12]
 8017ae6:	9600      	str	r6, [sp, #0]
 8017ae8:	440b      	add	r3, r1
 8017aea:	692e      	ldr	r6, [r5, #16]
 8017aec:	9601      	str	r6, [sp, #4]
 8017aee:	3002      	adds	r0, #2
 8017af0:	3102      	adds	r1, #2
 8017af2:	3a02      	subs	r2, #2
 8017af4:	105b      	asrs	r3, r3, #1
 8017af6:	f7ff fc8d 	bl	8017414 <GUI_DrawGradientV>
 8017afa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017afe:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017b02:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017b06:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017b0a:	696c      	ldr	r4, [r5, #20]
 8017b0c:	9400      	str	r4, [sp, #0]
 8017b0e:	4419      	add	r1, r3
 8017b10:	69ac      	ldr	r4, [r5, #24]
 8017b12:	9401      	str	r4, [sp, #4]
 8017b14:	1049      	asrs	r1, r1, #1
 8017b16:	3002      	adds	r0, #2
 8017b18:	3101      	adds	r1, #1
 8017b1a:	3a02      	subs	r2, #2
 8017b1c:	3b02      	subs	r3, #2
 8017b1e:	f7ff fc79 	bl	8017414 <GUI_DrawGradientV>
 8017b22:	b002      	add	sp, #8
 8017b24:	bd70      	pop	{r4, r5, r6, pc}

08017b26 <_DrawBackgroundV>:
 8017b26:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017b28:	4604      	mov	r4, r0
 8017b2a:	460d      	mov	r5, r1
 8017b2c:	f7ff ff53 	bl	80179d6 <_DrawFrame>
 8017b30:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017b34:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017b38:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017b3c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017b40:	68ee      	ldr	r6, [r5, #12]
 8017b42:	9600      	str	r6, [sp, #0]
 8017b44:	4402      	add	r2, r0
 8017b46:	692e      	ldr	r6, [r5, #16]
 8017b48:	9601      	str	r6, [sp, #4]
 8017b4a:	3002      	adds	r0, #2
 8017b4c:	3102      	adds	r1, #2
 8017b4e:	1052      	asrs	r2, r2, #1
 8017b50:	3b02      	subs	r3, #2
 8017b52:	f7ff fc91 	bl	8017478 <GUI_DrawGradientH>
 8017b56:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017b5a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017b5e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017b62:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017b66:	696c      	ldr	r4, [r5, #20]
 8017b68:	9400      	str	r4, [sp, #0]
 8017b6a:	4410      	add	r0, r2
 8017b6c:	69ac      	ldr	r4, [r5, #24]
 8017b6e:	9401      	str	r4, [sp, #4]
 8017b70:	1040      	asrs	r0, r0, #1
 8017b72:	3001      	adds	r0, #1
 8017b74:	3102      	adds	r1, #2
 8017b76:	3a02      	subs	r2, #2
 8017b78:	3b02      	subs	r3, #2
 8017b7a:	f7ff fc7d 	bl	8017478 <GUI_DrawGradientH>
 8017b7e:	b002      	add	sp, #8
 8017b80:	bd70      	pop	{r4, r5, r6, pc}
	...

08017b84 <SCROLLBAR_DrawSkinFlex>:
 8017b84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017b88:	4604      	mov	r4, r0
 8017b8a:	b08b      	sub	sp, #44	; 0x2c
 8017b8c:	6800      	ldr	r0, [r0, #0]
 8017b8e:	f7f9 fc17 	bl	80113c0 <GUI_ALLOC_LockH>
 8017b92:	4607      	mov	r7, r0
 8017b94:	a80a      	add	r0, sp, #40	; 0x28
 8017b96:	ae06      	add	r6, sp, #24
 8017b98:	f840 7d1c 	str.w	r7, [r0, #-28]!
 8017b9c:	f7f9 fc1e 	bl	80113dc <GUI_ALLOC_UnlockH>
 8017ba0:	6923      	ldr	r3, [r4, #16]
 8017ba2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017ba6:	6963      	ldr	r3, [r4, #20]
 8017ba8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017bac:	69a3      	ldr	r3, [r4, #24]
 8017bae:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017bb2:	69e3      	ldr	r3, [r4, #28]
 8017bb4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017bb8:	6a25      	ldr	r5, [r4, #32]
 8017bba:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017bbe:	682b      	ldr	r3, [r5, #0]
 8017bc0:	f10d 0820 	add.w	r8, sp, #32
 8017bc4:	e888 0003 	stmia.w	r8, {r0, r1}
 8017bc8:	b153      	cbz	r3, 8017be0 <SCROLLBAR_DrawSkinFlex+0x5c>
 8017bca:	4638      	mov	r0, r7
 8017bcc:	4631      	mov	r1, r6
 8017bce:	4632      	mov	r2, r6
 8017bd0:	f7ef ff29 	bl	8007a26 <WIDGET__RotateRect90>
 8017bd4:	f8df 913c 	ldr.w	r9, [pc, #316]	; 8017d14 <SCROLLBAR_DrawSkinFlex+0x190>
 8017bd8:	f8df c13c 	ldr.w	ip, [pc, #316]	; 8017d18 <SCROLLBAR_DrawSkinFlex+0x194>
 8017bdc:	4b49      	ldr	r3, [pc, #292]	; (8017d04 <SCROLLBAR_DrawSkinFlex+0x180>)
 8017bde:	e004      	b.n	8017bea <SCROLLBAR_DrawSkinFlex+0x66>
 8017be0:	f8df 9138 	ldr.w	r9, [pc, #312]	; 8017d1c <SCROLLBAR_DrawSkinFlex+0x198>
 8017be4:	f8df c138 	ldr.w	ip, [pc, #312]	; 8017d20 <SCROLLBAR_DrawSkinFlex+0x19c>
 8017be8:	4b47      	ldr	r3, [pc, #284]	; (8017d08 <SCROLLBAR_DrawSkinFlex+0x184>)
 8017bea:	6862      	ldr	r2, [r4, #4]
 8017bec:	3a08      	subs	r2, #8
 8017bee:	2a11      	cmp	r2, #17
 8017bf0:	f200 8083 	bhi.w	8017cfa <SCROLLBAR_DrawSkinFlex+0x176>
 8017bf4:	e8df f002 	tbb	[pc, r2]
 8017bf8:	81815f13 	.word	0x81815f13
 8017bfc:	81818134 	.word	0x81818134
 8017c00:	43813434 	.word	0x43813434
 8017c04:	81818181 	.word	0x81818181
 8017c08:	0981      	.short	0x0981
 8017c0a:	682b      	ldr	r3, [r5, #0]
 8017c0c:	b113      	cbz	r3, 8017c14 <SCROLLBAR_DrawSkinFlex+0x90>
 8017c0e:	69a0      	ldr	r0, [r4, #24]
 8017c10:	6923      	ldr	r3, [r4, #16]
 8017c12:	e001      	b.n	8017c18 <SCROLLBAR_DrawSkinFlex+0x94>
 8017c14:	69e0      	ldr	r0, [r4, #28]
 8017c16:	6963      	ldr	r3, [r4, #20]
 8017c18:	1ac0      	subs	r0, r0, r3
 8017c1a:	3001      	adds	r0, #1
 8017c1c:	e06e      	b.n	8017cfc <SCROLLBAR_DrawSkinFlex+0x178>
 8017c1e:	686a      	ldr	r2, [r5, #4]
 8017c20:	493a      	ldr	r1, [pc, #232]	; (8017d0c <SCROLLBAR_DrawSkinFlex+0x188>)
 8017c22:	4c3b      	ldr	r4, [pc, #236]	; (8017d10 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8017c24:	2a02      	cmp	r2, #2
 8017c26:	bf08      	it	eq
 8017c28:	460c      	moveq	r4, r1
 8017c2a:	4630      	mov	r0, r6
 8017c2c:	4621      	mov	r1, r4
 8017c2e:	4798      	blx	r3
 8017c30:	6829      	ldr	r1, [r5, #0]
 8017c32:	aa04      	add	r2, sp, #16
 8017c34:	ab05      	add	r3, sp, #20
 8017c36:	4640      	mov	r0, r8
 8017c38:	f7ff fe59 	bl	80178ee <_GetArrowPara>
 8017c3c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8017c3e:	f7f8 f9cf 	bl	800ffe0 <GUI_SetColor>
 8017c42:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8017c46:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 8017c4a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8017c4e:	1ad2      	subs	r2, r2, r3
 8017c50:	f04f 33ff 	mov.w	r3, #4294967295
 8017c54:	9300      	str	r3, [sp, #0]
 8017c56:	9b05      	ldr	r3, [sp, #20]
 8017c58:	3201      	adds	r2, #1
 8017c5a:	4638      	mov	r0, r7
 8017c5c:	4419      	add	r1, r3
 8017c5e:	e048      	b.n	8017cf2 <SCROLLBAR_DrawSkinFlex+0x16e>
 8017c60:	4c2b      	ldr	r4, [pc, #172]	; (8017d10 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8017c62:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8017c66:	69e5      	ldr	r5, [r4, #28]
 8017c68:	9500      	str	r5, [sp, #0]
 8017c6a:	6a24      	ldr	r4, [r4, #32]
 8017c6c:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8017c70:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8017c74:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8017c78:	9401      	str	r4, [sp, #4]
 8017c7a:	47e0      	blx	ip
 8017c7c:	e03d      	b.n	8017cfa <SCROLLBAR_DrawSkinFlex+0x176>
 8017c7e:	686a      	ldr	r2, [r5, #4]
 8017c80:	4922      	ldr	r1, [pc, #136]	; (8017d0c <SCROLLBAR_DrawSkinFlex+0x188>)
 8017c82:	4c23      	ldr	r4, [pc, #140]	; (8017d10 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8017c84:	2a03      	cmp	r2, #3
 8017c86:	bf08      	it	eq
 8017c88:	460c      	moveq	r4, r1
 8017c8a:	4630      	mov	r0, r6
 8017c8c:	4621      	mov	r1, r4
 8017c8e:	4798      	blx	r3
 8017c90:	682b      	ldr	r3, [r5, #0]
 8017c92:	b123      	cbz	r3, 8017c9e <SCROLLBAR_DrawSkinFlex+0x11a>
 8017c94:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 8017c98:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8017c9c:	e003      	b.n	8017ca6 <SCROLLBAR_DrawSkinFlex+0x122>
 8017c9e:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8017ca2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017ca6:	1ad3      	subs	r3, r2, r3
 8017ca8:	3301      	adds	r3, #1
 8017caa:	2b0e      	cmp	r3, #14
 8017cac:	dd25      	ble.n	8017cfa <SCROLLBAR_DrawSkinFlex+0x176>
 8017cae:	4630      	mov	r0, r6
 8017cb0:	4621      	mov	r1, r4
 8017cb2:	47c8      	blx	r9
 8017cb4:	e021      	b.n	8017cfa <SCROLLBAR_DrawSkinFlex+0x176>
 8017cb6:	686a      	ldr	r2, [r5, #4]
 8017cb8:	4914      	ldr	r1, [pc, #80]	; (8017d0c <SCROLLBAR_DrawSkinFlex+0x188>)
 8017cba:	4c15      	ldr	r4, [pc, #84]	; (8017d10 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8017cbc:	2a01      	cmp	r2, #1
 8017cbe:	bf08      	it	eq
 8017cc0:	460c      	moveq	r4, r1
 8017cc2:	4630      	mov	r0, r6
 8017cc4:	4621      	mov	r1, r4
 8017cc6:	4798      	blx	r3
 8017cc8:	6829      	ldr	r1, [r5, #0]
 8017cca:	aa04      	add	r2, sp, #16
 8017ccc:	ab05      	add	r3, sp, #20
 8017cce:	4640      	mov	r0, r8
 8017cd0:	f7ff fe0d 	bl	80178ee <_GetArrowPara>
 8017cd4:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8017cd6:	f7f8 f983 	bl	800ffe0 <GUI_SetColor>
 8017cda:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8017cde:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 8017ce2:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 8017ce6:	1ad2      	subs	r2, r2, r3
 8017ce8:	2301      	movs	r3, #1
 8017cea:	9300      	str	r3, [sp, #0]
 8017cec:	9b05      	ldr	r3, [sp, #20]
 8017cee:	4638      	mov	r0, r7
 8017cf0:	1ac9      	subs	r1, r1, r3
 8017cf2:	1052      	asrs	r2, r2, #1
 8017cf4:	9b04      	ldr	r3, [sp, #16]
 8017cf6:	f7ef ffd6 	bl	8007ca6 <WIDGET__DrawTriangle>
 8017cfa:	2000      	movs	r0, #0
 8017cfc:	b00b      	add	sp, #44	; 0x2c
 8017cfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017d02:	bf00      	nop
 8017d04:	08017b27 	.word	0x08017b27
 8017d08:	08017acb 	.word	0x08017acb
 8017d0c:	20000334 	.word	0x20000334
 8017d10:	20000360 	.word	0x20000360
 8017d14:	0801797b 	.word	0x0801797b
 8017d18:	08017479 	.word	0x08017479
 8017d1c:	0801791f 	.word	0x0801791f
 8017d20:	08017415 	.word	0x08017415

08017d24 <_Create>:
 8017d24:	b530      	push	{r4, r5, lr}
 8017d26:	b08d      	sub	sp, #52	; 0x34
 8017d28:	4605      	mov	r5, r0
 8017d2a:	f7f9 fb49 	bl	80113c0 <GUI_ALLOC_LockH>
 8017d2e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8017d30:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8017d32:	9000      	str	r0, [sp, #0]
 8017d34:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8017d38:	9301      	str	r3, [sp, #4]
 8017d3a:	4b07      	ldr	r3, [pc, #28]	; (8017d58 <_Create+0x34>)
 8017d3c:	6483      	str	r3, [r0, #72]	; 0x48
 8017d3e:	4668      	mov	r0, sp
 8017d40:	f7f9 fb4c 	bl	80113dc <GUI_ALLOC_UnlockH>
 8017d44:	2300      	movs	r3, #0
 8017d46:	9304      	str	r3, [sp, #16]
 8017d48:	ab01      	add	r3, sp, #4
 8017d4a:	9503      	str	r5, [sp, #12]
 8017d4c:	930b      	str	r3, [sp, #44]	; 0x2c
 8017d4e:	a803      	add	r0, sp, #12
 8017d50:	47a0      	blx	r4
 8017d52:	b00d      	add	sp, #52	; 0x34
 8017d54:	bd30      	pop	{r4, r5, pc}
 8017d56:	bf00      	nop
 8017d58:	08017d5d 	.word	0x08017d5d

08017d5c <_CalcPositions>:
 8017d5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017d60:	b090      	sub	sp, #64	; 0x40
 8017d62:	4605      	mov	r5, r0
 8017d64:	460c      	mov	r4, r1
 8017d66:	f7f9 fb2b 	bl	80113c0 <GUI_ALLOC_LockH>
 8017d6a:	4603      	mov	r3, r0
 8017d6c:	9000      	str	r0, [sp, #0]
 8017d6e:	c803      	ldmia	r0, {r0, r1}
 8017d70:	ae03      	add	r6, sp, #12
 8017d72:	e886 0003 	stmia.w	r6, {r0, r1}
 8017d76:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 8017d78:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8017d7c:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8017d80:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8017d84:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8017d88:	920e      	str	r2, [sp, #56]	; 0x38
 8017d8a:	f000 0008 	and.w	r0, r0, #8
 8017d8e:	2800      	cmp	r0, #0
 8017d90:	bf0c      	ite	eq
 8017d92:	4608      	moveq	r0, r1
 8017d94:	4610      	movne	r0, r2
 8017d96:	61a0      	str	r0, [r4, #24]
 8017d98:	bf0c      	ite	eq
 8017d9a:	2000      	moveq	r0, #0
 8017d9c:	2001      	movne	r0, #1
 8017d9e:	aa01      	add	r2, sp, #4
 8017da0:	9001      	str	r0, [sp, #4]
 8017da2:	2019      	movs	r0, #25
 8017da4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017da6:	9008      	str	r0, [sp, #32]
 8017da8:	9507      	str	r5, [sp, #28]
 8017daa:	920f      	str	r2, [sp, #60]	; 0x3c
 8017dac:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8017db0:	970c      	str	r7, [sp, #48]	; 0x30
 8017db2:	910d      	str	r1, [sp, #52]	; 0x34
 8017db4:	a807      	add	r0, sp, #28
 8017db6:	4798      	blx	r3
 8017db8:	9b00      	ldr	r3, [sp, #0]
 8017dba:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 8017dbe:	2aff      	cmp	r2, #255	; 0xff
 8017dc0:	4605      	mov	r5, r0
 8017dc2:	d111      	bne.n	8017de8 <_CalcPositions+0x8c>
 8017dc4:	6998      	ldr	r0, [r3, #24]
 8017dc6:	f000 f917 	bl	8017ff8 <WM_GetScrollbarV>
 8017dca:	b168      	cbz	r0, 8017de8 <_CalcPositions+0x8c>
 8017dcc:	a905      	add	r1, sp, #20
 8017dce:	f7fc f829 	bl	8013e24 <WM_GetWindowRectEx>
 8017dd2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017dd6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017dda:	429a      	cmp	r2, r3
 8017ddc:	d104      	bne.n	8017de8 <_CalcPositions+0x8c>
 8017dde:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8017de2:	3b01      	subs	r3, #1
 8017de4:	f8ad 3010 	strh.w	r3, [sp, #16]
 8017de8:	9b00      	ldr	r3, [sp, #0]
 8017dea:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 8017dee:	2afe      	cmp	r2, #254	; 0xfe
 8017df0:	d111      	bne.n	8017e16 <_CalcPositions+0xba>
 8017df2:	6998      	ldr	r0, [r3, #24]
 8017df4:	f000 f8fb 	bl	8017fee <WM_GetScrollbarH>
 8017df8:	b168      	cbz	r0, 8017e16 <_CalcPositions+0xba>
 8017dfa:	a905      	add	r1, sp, #20
 8017dfc:	f7fc f812 	bl	8013e24 <WM_GetWindowRectEx>
 8017e00:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8017e04:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8017e08:	429a      	cmp	r2, r3
 8017e0a:	d104      	bne.n	8017e16 <_CalcPositions+0xba>
 8017e0c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8017e10:	3b01      	subs	r3, #1
 8017e12:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017e16:	427a      	negs	r2, r7
 8017e18:	4630      	mov	r0, r6
 8017e1a:	f1c8 0100 	rsb	r1, r8, #0
 8017e1e:	f7f8 fa41 	bl	80102a4 <GUI_MoveRect>
 8017e22:	9800      	ldr	r0, [sp, #0]
 8017e24:	4631      	mov	r1, r6
 8017e26:	f7fa f9e7 	bl	80121f8 <SCROLLBAR__Rect2VRect>
 8017e2a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017e2e:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 8017e32:	9b00      	ldr	r3, [sp, #0]
 8017e34:	ebc2 0a0a 	rsb	sl, r2, sl
 8017e38:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 8017e3c:	6d58      	ldr	r0, [r3, #84]	; 0x54
 8017e3e:	f10a 0601 	add.w	r6, sl, #1
 8017e42:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 8017e46:	4649      	mov	r1, r9
 8017e48:	4370      	muls	r0, r6
 8017e4a:	f7fe fd9f 	bl	801698c <GUI__DivideRound32>
 8017e4e:	4b17      	ldr	r3, [pc, #92]	; (8017eac <_CalcPositions+0x150>)
 8017e50:	f8c4 a014 	str.w	sl, [r4, #20]
 8017e54:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017e58:	1c5a      	adds	r2, r3, #1
 8017e5a:	4282      	cmp	r2, r0
 8017e5c:	bfa8      	it	ge
 8017e5e:	1c98      	addge	r0, r3, #2
 8017e60:	42b0      	cmp	r0, r6
 8017e62:	bfb4      	ite	lt
 8017e64:	4607      	movlt	r7, r0
 8017e66:	4637      	movge	r7, r6
 8017e68:	ebc7 0806 	rsb	r8, r7, r6
 8017e6c:	442e      	add	r6, r5
 8017e6e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017e72:	6126      	str	r6, [r4, #16]
 8017e74:	ae10      	add	r6, sp, #64	; 0x40
 8017e76:	6023      	str	r3, [r4, #0]
 8017e78:	1e6b      	subs	r3, r5, #1
 8017e7a:	6063      	str	r3, [r4, #4]
 8017e7c:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 8017e80:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8017e82:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8017e84:	fb00 f008 	mul.w	r0, r0, r8
 8017e88:	ebc1 0109 	rsb	r1, r1, r9
 8017e8c:	f7fe fd7e 	bl	801698c <GUI__DivideRound32>
 8017e90:	4428      	add	r0, r5
 8017e92:	19c5      	adds	r5, r0, r7
 8017e94:	3d01      	subs	r5, #1
 8017e96:	60a0      	str	r0, [r4, #8]
 8017e98:	60e5      	str	r5, [r4, #12]
 8017e9a:	f8c4 801c 	str.w	r8, [r4, #28]
 8017e9e:	6227      	str	r7, [r4, #32]
 8017ea0:	4668      	mov	r0, sp
 8017ea2:	f7f9 fa9b 	bl	80113dc <GUI_ALLOC_UnlockH>
 8017ea6:	b010      	add	sp, #64	; 0x40
 8017ea8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017eac:	200001f2 	.word	0x200001f2

08017eb0 <_Paint>:
 8017eb0:	b570      	push	{r4, r5, r6, lr}
 8017eb2:	b098      	sub	sp, #96	; 0x60
 8017eb4:	4606      	mov	r6, r0
 8017eb6:	f7f9 fa83 	bl	80113c0 <GUI_ALLOC_LockH>
 8017eba:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8017ebc:	9305      	str	r3, [sp, #20]
 8017ebe:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8017ec0:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8017ec2:	9001      	str	r0, [sp, #4]
 8017ec4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8017ec8:	a906      	add	r1, sp, #24
 8017eca:	4605      	mov	r5, r0
 8017ecc:	4630      	mov	r0, r6
 8017ece:	9304      	str	r3, [sp, #16]
 8017ed0:	f7ff ff44 	bl	8017d5c <_CalcPositions>
 8017ed4:	a801      	add	r0, sp, #4
 8017ed6:	f7f9 fa81 	bl	80113dc <GUI_ALLOC_UnlockH>
 8017eda:	a902      	add	r1, sp, #8
 8017edc:	4628      	mov	r0, r5
 8017ede:	f7ef fdb4 	bl	8007a4a <WIDGET__GetClientRect>
 8017ee2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017ee6:	9314      	str	r3, [sp, #80]	; 0x50
 8017ee8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017eec:	9316      	str	r3, [sp, #88]	; 0x58
 8017eee:	ab04      	add	r3, sp, #16
 8017ef0:	9317      	str	r3, [sp, #92]	; 0x5c
 8017ef2:	2308      	movs	r3, #8
 8017ef4:	9310      	str	r3, [sp, #64]	; 0x40
 8017ef6:	9b06      	ldr	r3, [sp, #24]
 8017ef8:	9313      	str	r3, [sp, #76]	; 0x4c
 8017efa:	9b07      	ldr	r3, [sp, #28]
 8017efc:	9315      	str	r3, [sp, #84]	; 0x54
 8017efe:	960f      	str	r6, [sp, #60]	; 0x3c
 8017f00:	a80f      	add	r0, sp, #60	; 0x3c
 8017f02:	47a0      	blx	r4
 8017f04:	2310      	movs	r3, #16
 8017f06:	9310      	str	r3, [sp, #64]	; 0x40
 8017f08:	9b07      	ldr	r3, [sp, #28]
 8017f0a:	3301      	adds	r3, #1
 8017f0c:	9313      	str	r3, [sp, #76]	; 0x4c
 8017f0e:	9b08      	ldr	r3, [sp, #32]
 8017f10:	3b01      	subs	r3, #1
 8017f12:	9315      	str	r3, [sp, #84]	; 0x54
 8017f14:	a80f      	add	r0, sp, #60	; 0x3c
 8017f16:	47a0      	blx	r4
 8017f18:	2311      	movs	r3, #17
 8017f1a:	9310      	str	r3, [sp, #64]	; 0x40
 8017f1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f1e:	3301      	adds	r3, #1
 8017f20:	9313      	str	r3, [sp, #76]	; 0x4c
 8017f22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f24:	3b01      	subs	r3, #1
 8017f26:	9315      	str	r3, [sp, #84]	; 0x54
 8017f28:	a80f      	add	r0, sp, #60	; 0x3c
 8017f2a:	47a0      	blx	r4
 8017f2c:	2313      	movs	r3, #19
 8017f2e:	9310      	str	r3, [sp, #64]	; 0x40
 8017f30:	9b08      	ldr	r3, [sp, #32]
 8017f32:	9313      	str	r3, [sp, #76]	; 0x4c
 8017f34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f36:	9315      	str	r3, [sp, #84]	; 0x54
 8017f38:	a80f      	add	r0, sp, #60	; 0x3c
 8017f3a:	47a0      	blx	r4
 8017f3c:	2309      	movs	r3, #9
 8017f3e:	9310      	str	r3, [sp, #64]	; 0x40
 8017f40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f42:	9313      	str	r3, [sp, #76]	; 0x4c
 8017f44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017f46:	9315      	str	r3, [sp, #84]	; 0x54
 8017f48:	a80f      	add	r0, sp, #60	; 0x3c
 8017f4a:	47a0      	blx	r4
 8017f4c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017f4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017f50:	429a      	cmp	r2, r3
 8017f52:	d006      	beq.n	8017f62 <_Paint+0xb2>
 8017f54:	210c      	movs	r1, #12
 8017f56:	3201      	adds	r2, #1
 8017f58:	9110      	str	r1, [sp, #64]	; 0x40
 8017f5a:	9213      	str	r2, [sp, #76]	; 0x4c
 8017f5c:	9315      	str	r3, [sp, #84]	; 0x54
 8017f5e:	a80f      	add	r0, sp, #60	; 0x3c
 8017f60:	47a0      	blx	r4
 8017f62:	b018      	add	sp, #96	; 0x60
 8017f64:	bd70      	pop	{r4, r5, r6, pc}

08017f66 <WM__SendMessageIfEnabled>:
 8017f66:	b538      	push	{r3, r4, r5, lr}
 8017f68:	4604      	mov	r4, r0
 8017f6a:	460d      	mov	r5, r1
 8017f6c:	f7f2 f8f8 	bl	800a160 <WM__IsEnabled>
 8017f70:	b128      	cbz	r0, 8017f7e <WM__SendMessageIfEnabled+0x18>
 8017f72:	4620      	mov	r0, r4
 8017f74:	4629      	mov	r1, r5
 8017f76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8017f7a:	f7fb bc6f 	b.w	801385c <WM__SendMessage>
 8017f7e:	bd38      	pop	{r3, r4, r5, pc}

08017f80 <WM__ForEachDesc>:
 8017f80:	b570      	push	{r4, r5, r6, lr}
 8017f82:	460d      	mov	r5, r1
 8017f84:	4616      	mov	r6, r2
 8017f86:	f7f9 fa11 	bl	80113ac <GUI_ALLOC_h2p>
 8017f8a:	69c4      	ldr	r4, [r0, #28]
 8017f8c:	b164      	cbz	r4, 8017fa8 <WM__ForEachDesc+0x28>
 8017f8e:	4620      	mov	r0, r4
 8017f90:	4631      	mov	r1, r6
 8017f92:	47a8      	blx	r5
 8017f94:	4620      	mov	r0, r4
 8017f96:	4629      	mov	r1, r5
 8017f98:	4632      	mov	r2, r6
 8017f9a:	f7ff fff1 	bl	8017f80 <WM__ForEachDesc>
 8017f9e:	4620      	mov	r0, r4
 8017fa0:	f7f9 fa04 	bl	80113ac <GUI_ALLOC_h2p>
 8017fa4:	6a04      	ldr	r4, [r0, #32]
 8017fa6:	e7f1      	b.n	8017f8c <WM__ForEachDesc+0xc>
 8017fa8:	bd70      	pop	{r4, r5, r6, pc}

08017faa <_GetDialogItem>:
 8017faa:	b570      	push	{r4, r5, r6, lr}
 8017fac:	4606      	mov	r6, r0
 8017fae:	460d      	mov	r5, r1
 8017fb0:	f7f9 f9fc 	bl	80113ac <GUI_ALLOC_h2p>
 8017fb4:	69c4      	ldr	r4, [r0, #28]
 8017fb6:	b14c      	cbz	r4, 8017fcc <_GetDialogItem+0x22>
 8017fb8:	4620      	mov	r0, r4
 8017fba:	f7f2 fd73 	bl	800aaa4 <WM_GetId>
 8017fbe:	42a8      	cmp	r0, r5
 8017fc0:	4620      	mov	r0, r4
 8017fc2:	d013      	beq.n	8017fec <_GetDialogItem+0x42>
 8017fc4:	f7f9 f9f2 	bl	80113ac <GUI_ALLOC_h2p>
 8017fc8:	6a04      	ldr	r4, [r0, #32]
 8017fca:	e7f4      	b.n	8017fb6 <_GetDialogItem+0xc>
 8017fcc:	4630      	mov	r0, r6
 8017fce:	f7f9 f9ed 	bl	80113ac <GUI_ALLOC_h2p>
 8017fd2:	69c4      	ldr	r4, [r0, #28]
 8017fd4:	4620      	mov	r0, r4
 8017fd6:	b144      	cbz	r4, 8017fea <_GetDialogItem+0x40>
 8017fd8:	4629      	mov	r1, r5
 8017fda:	f7ff ffe6 	bl	8017faa <_GetDialogItem>
 8017fde:	b928      	cbnz	r0, 8017fec <_GetDialogItem+0x42>
 8017fe0:	4620      	mov	r0, r4
 8017fe2:	f7f9 f9e3 	bl	80113ac <GUI_ALLOC_h2p>
 8017fe6:	6a04      	ldr	r4, [r0, #32]
 8017fe8:	e7f4      	b.n	8017fd4 <_GetDialogItem+0x2a>
 8017fea:	bd70      	pop	{r4, r5, r6, pc}
 8017fec:	bd70      	pop	{r4, r5, r6, pc}

08017fee <WM_GetScrollbarH>:
 8017fee:	b110      	cbz	r0, 8017ff6 <WM_GetScrollbarH+0x8>
 8017ff0:	21ff      	movs	r1, #255	; 0xff
 8017ff2:	f7ff bfda 	b.w	8017faa <_GetDialogItem>
 8017ff6:	4770      	bx	lr

08017ff8 <WM_GetScrollbarV>:
 8017ff8:	b110      	cbz	r0, 8018000 <WM_GetScrollbarV+0x8>
 8017ffa:	21fe      	movs	r1, #254	; 0xfe
 8017ffc:	f7ff bfd5 	b.w	8017faa <_GetDialogItem>
 8018000:	4770      	bx	lr

08018002 <LCD_GetPixelColor>:
 8018002:	b508      	push	{r3, lr}
 8018004:	f000 f804 	bl	8018010 <LCD_GetPixelIndex>
 8018008:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801800c:	f7f6 bdac 	b.w	800eb68 <LCD_Index2Color>

08018010 <LCD_GetPixelIndex>:
 8018010:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8018012:	4f14      	ldr	r7, [pc, #80]	; (8018064 <LCD_GetPixelIndex+0x54>)
 8018014:	4e14      	ldr	r6, [pc, #80]	; (8018068 <LCD_GetPixelIndex+0x58>)
 8018016:	683b      	ldr	r3, [r7, #0]
 8018018:	7c5b      	ldrb	r3, [r3, #17]
 801801a:	4605      	mov	r5, r0
 801801c:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 8018020:	68c3      	ldr	r3, [r0, #12]
 8018022:	460c      	mov	r4, r1
 8018024:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018026:	4669      	mov	r1, sp
 8018028:	4798      	blx	r3
 801802a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801802e:	429d      	cmp	r5, r3
 8018030:	db15      	blt.n	801805e <LCD_GetPixelIndex+0x4e>
 8018032:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8018036:	429d      	cmp	r5, r3
 8018038:	dc11      	bgt.n	801805e <LCD_GetPixelIndex+0x4e>
 801803a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801803e:	429c      	cmp	r4, r3
 8018040:	db0d      	blt.n	801805e <LCD_GetPixelIndex+0x4e>
 8018042:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8018046:	429c      	cmp	r4, r3
 8018048:	dc09      	bgt.n	801805e <LCD_GetPixelIndex+0x4e>
 801804a:	683b      	ldr	r3, [r7, #0]
 801804c:	7c5b      	ldrb	r3, [r3, #17]
 801804e:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 8018052:	68c3      	ldr	r3, [r0, #12]
 8018054:	4629      	mov	r1, r5
 8018056:	695b      	ldr	r3, [r3, #20]
 8018058:	4622      	mov	r2, r4
 801805a:	4798      	blx	r3
 801805c:	e000      	b.n	8018060 <LCD_GetPixelIndex+0x50>
 801805e:	2000      	movs	r0, #0
 8018060:	b003      	add	sp, #12
 8018062:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018064:	2000016c 	.word	0x2000016c
 8018068:	200199ec 	.word	0x200199ec

0801806c <LCD_GetNumLayers>:
 801806c:	b510      	push	{r4, lr}
 801806e:	2000      	movs	r0, #0
 8018070:	f7f8 fc4c 	bl	801090c <GUI_DEVICE__GetpDriver>
 8018074:	1c04      	adds	r4, r0, #0
 8018076:	f04f 0001 	mov.w	r0, #1
 801807a:	bf18      	it	ne
 801807c:	2401      	movne	r4, #1
 801807e:	f7f8 fc45 	bl	801090c <GUI_DEVICE__GetpDriver>
 8018082:	b100      	cbz	r0, 8018086 <LCD_GetNumLayers+0x1a>
 8018084:	3401      	adds	r4, #1
 8018086:	4620      	mov	r0, r4
 8018088:	bd10      	pop	{r4, pc}
	...

0801808c <LCD_GetBkColorIndex>:
 801808c:	4b02      	ldr	r3, [pc, #8]	; (8018098 <LCD_GetBkColorIndex+0xc>)
 801808e:	681b      	ldr	r3, [r3, #0]
 8018090:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018092:	6818      	ldr	r0, [r3, #0]
 8018094:	4770      	bx	lr
 8018096:	bf00      	nop
 8018098:	2000016c 	.word	0x2000016c

0801809c <LCD_GetColorIndex>:
 801809c:	4b02      	ldr	r3, [pc, #8]	; (80180a8 <LCD_GetColorIndex+0xc>)
 801809e:	681b      	ldr	r3, [r3, #0]
 80180a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80180a2:	6818      	ldr	r0, [r3, #0]
 80180a4:	4770      	bx	lr
 80180a6:	bf00      	nop
 80180a8:	2000016c 	.word	0x2000016c

080180ac <GUI__sqrt32>:
 80180ac:	b510      	push	{r4, lr}
 80180ae:	2110      	movs	r1, #16
 80180b0:	2300      	movs	r3, #0
 80180b2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80180b6:	189c      	adds	r4, r3, r2
 80180b8:	4284      	cmp	r4, r0
 80180ba:	bf9c      	itt	ls
 80180bc:	18a3      	addls	r3, r4, r2
 80180be:	ebc4 0000 	rsbls	r0, r4, r0
 80180c2:	3901      	subs	r1, #1
 80180c4:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80180c8:	ea4f 0292 	mov.w	r2, r2, lsr #2
 80180cc:	d1f3      	bne.n	80180b6 <GUI__sqrt32+0xa>
 80180ce:	4618      	mov	r0, r3
 80180d0:	bd10      	pop	{r4, pc}

080180d2 <GUI__HandleEOLine>:
 80180d2:	6803      	ldr	r3, [r0, #0]
 80180d4:	781a      	ldrb	r2, [r3, #0]
 80180d6:	b122      	cbz	r2, 80180e2 <GUI__HandleEOLine+0x10>
 80180d8:	2a0a      	cmp	r2, #10
 80180da:	d104      	bne.n	80180e6 <GUI__HandleEOLine+0x14>
 80180dc:	3301      	adds	r3, #1
 80180de:	6003      	str	r3, [r0, #0]
 80180e0:	e001      	b.n	80180e6 <GUI__HandleEOLine+0x14>
 80180e2:	2001      	movs	r0, #1
 80180e4:	4770      	bx	lr
 80180e6:	2000      	movs	r0, #0
 80180e8:	4770      	bx	lr

080180ea <_CreateBuffer>:
 80180ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80180ec:	6943      	ldr	r3, [r0, #20]
 80180ee:	4605      	mov	r5, r0
 80180f0:	8818      	ldrh	r0, [r3, #0]
 80180f2:	300d      	adds	r0, #13
 80180f4:	0080      	lsls	r0, r0, #2
 80180f6:	460e      	mov	r6, r1
 80180f8:	f7f9 fbb6 	bl	8011868 <GUI_ALLOC_AllocNoInit>
 80180fc:	4607      	mov	r7, r0
 80180fe:	b908      	cbnz	r0, 8018104 <_CreateBuffer+0x1a>
 8018100:	2000      	movs	r0, #0
 8018102:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018104:	f7f9 f95c 	bl	80113c0 <GUI_ALLOC_LockH>
 8018108:	682b      	ldr	r3, [r5, #0]
 801810a:	4604      	mov	r4, r0
 801810c:	6998      	ldr	r0, [r3, #24]
 801810e:	f7f8 fbfd 	bl	801090c <GUI_DEVICE__GetpDriver>
 8018112:	2800      	cmp	r0, #0
 8018114:	d0f4      	beq.n	8018100 <_CreateBuffer+0x16>
 8018116:	68c3      	ldr	r3, [r0, #12]
 8018118:	2108      	movs	r1, #8
 801811a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801811c:	4798      	blx	r3
 801811e:	2802      	cmp	r0, #2
 8018120:	dd0b      	ble.n	801813a <_CreateBuffer+0x50>
 8018122:	2804      	cmp	r0, #4
 8018124:	dd06      	ble.n	8018134 <_CreateBuffer+0x4a>
 8018126:	2808      	cmp	r0, #8
 8018128:	dd06      	ble.n	8018138 <_CreateBuffer+0x4e>
 801812a:	2811      	cmp	r0, #17
 801812c:	bfb4      	ite	lt
 801812e:	2010      	movlt	r0, #16
 8018130:	2020      	movge	r0, #32
 8018132:	e002      	b.n	801813a <_CreateBuffer+0x50>
 8018134:	2004      	movs	r0, #4
 8018136:	e000      	b.n	801813a <_CreateBuffer+0x50>
 8018138:	2008      	movs	r0, #8
 801813a:	2808      	cmp	r0, #8
 801813c:	61a0      	str	r0, [r4, #24]
 801813e:	dd04      	ble.n	801814a <_CreateBuffer+0x60>
 8018140:	2810      	cmp	r0, #16
 8018142:	bfcc      	ite	gt
 8018144:	2304      	movgt	r3, #4
 8018146:	2302      	movle	r3, #2
 8018148:	e000      	b.n	801814c <_CreateBuffer+0x62>
 801814a:	2301      	movs	r3, #1
 801814c:	696a      	ldr	r2, [r5, #20]
 801814e:	6123      	str	r3, [r4, #16]
 8018150:	8812      	ldrh	r2, [r2, #0]
 8018152:	61e2      	str	r2, [r4, #28]
 8018154:	4353      	muls	r3, r2
 8018156:	6163      	str	r3, [r4, #20]
 8018158:	f7f9 fadc 	bl	8011714 <GUI_ALLOC_GetMaxSize>
 801815c:	6963      	ldr	r3, [r4, #20]
 801815e:	f884 6030 	strb.w	r6, [r4, #48]	; 0x30
 8018162:	4283      	cmp	r3, r0
 8018164:	f04f 0200 	mov.w	r2, #0
 8018168:	bfc8      	it	gt
 801816a:	6160      	strgt	r0, [r4, #20]
 801816c:	2e01      	cmp	r6, #1
 801816e:	60e2      	str	r2, [r4, #12]
 8018170:	bf18      	it	ne
 8018172:	69e2      	ldrne	r2, [r4, #28]
 8018174:	60a7      	str	r7, [r4, #8]
 8018176:	bf18      	it	ne
 8018178:	f102 4280 	addne.w	r2, r2, #1073741824	; 0x40000000
 801817c:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8018180:	bf18      	it	ne
 8018182:	f102 32ff 	addne.w	r2, r2, #4294967295
 8018186:	6023      	str	r3, [r4, #0]
 8018188:	bf18      	it	ne
 801818a:	eb03 0382 	addne.w	r3, r3, r2, lsl #2
 801818e:	6063      	str	r3, [r4, #4]
 8018190:	4620      	mov	r0, r4
 8018192:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018194 <_GetBkIndex.isra.0>:
 8018194:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018198:	f9b3 8004 	ldrsh.w	r8, [r3, #4]
 801819c:	4540      	cmp	r0, r8
 801819e:	4606      	mov	r6, r0
 80181a0:	460d      	mov	r5, r1
 80181a2:	4691      	mov	r9, r2
 80181a4:	461c      	mov	r4, r3
 80181a6:	da04      	bge.n	80181b2 <_GetBkIndex.isra.0+0x1e>
 80181a8:	f8d9 0000 	ldr.w	r0, [r9]
 80181ac:	bb28      	cbnz	r0, 80181fa <_GetBkIndex.isra.0+0x66>
 80181ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80181b2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80181b6:	4298      	cmp	r0, r3
 80181b8:	dcf6      	bgt.n	80181a8 <_GetBkIndex.isra.0+0x14>
 80181ba:	f9b4 7006 	ldrsh.w	r7, [r4, #6]
 80181be:	42b9      	cmp	r1, r7
 80181c0:	dbf2      	blt.n	80181a8 <_GetBkIndex.isra.0+0x14>
 80181c2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80181c6:	4299      	cmp	r1, r3
 80181c8:	dcee      	bgt.n	80181a8 <_GetBkIndex.isra.0+0x14>
 80181ca:	ebc8 0800 	rsb	r8, r8, r0
 80181ce:	1bcf      	subs	r7, r1, r7
 80181d0:	6960      	ldr	r0, [r4, #20]
 80181d2:	4641      	mov	r1, r8
 80181d4:	463a      	mov	r2, r7
 80181d6:	f000 fba3 	bl	8018920 <GUI_GetBitmapPixelIndex>
 80181da:	2800      	cmp	r0, #0
 80181dc:	d0e4      	beq.n	80181a8 <_GetBkIndex.isra.0+0x14>
 80181de:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80181e2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80181e6:	1a8a      	subs	r2, r1, r2
 80181e8:	fb02 7707 	mla	r7, r2, r7, r7
 80181ec:	f104 0320 	add.w	r3, r4, #32
 80181f0:	44b8      	add	r8, r7
 80181f2:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 80181f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80181fa:	68c3      	ldr	r3, [r0, #12]
 80181fc:	4631      	mov	r1, r6
 80181fe:	695b      	ldr	r3, [r3, #20]
 8018200:	462a      	mov	r2, r5
 8018202:	4798      	blx	r3
 8018204:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08018208 <_GetBkIndexAlpha.isra.2>:
 8018208:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801820c:	f9b3 6004 	ldrsh.w	r6, [r3, #4]
 8018210:	42b0      	cmp	r0, r6
 8018212:	4680      	mov	r8, r0
 8018214:	460f      	mov	r7, r1
 8018216:	4691      	mov	r9, r2
 8018218:	461d      	mov	r5, r3
 801821a:	db14      	blt.n	8018246 <_GetBkIndexAlpha.isra.2+0x3e>
 801821c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018220:	4298      	cmp	r0, r3
 8018222:	dc10      	bgt.n	8018246 <_GetBkIndexAlpha.isra.2+0x3e>
 8018224:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
 8018228:	42a1      	cmp	r1, r4
 801822a:	db0c      	blt.n	8018246 <_GetBkIndexAlpha.isra.2+0x3e>
 801822c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8018230:	4299      	cmp	r1, r3
 8018232:	dc08      	bgt.n	8018246 <_GetBkIndexAlpha.isra.2+0x3e>
 8018234:	1b86      	subs	r6, r0, r6
 8018236:	6968      	ldr	r0, [r5, #20]
 8018238:	1b0c      	subs	r4, r1, r4
 801823a:	b130      	cbz	r0, 801824a <_GetBkIndexAlpha.isra.2+0x42>
 801823c:	4631      	mov	r1, r6
 801823e:	4622      	mov	r2, r4
 8018240:	f000 fb6e 	bl	8018920 <GUI_GetBitmapPixelIndex>
 8018244:	e003      	b.n	801824e <_GetBkIndexAlpha.isra.2+0x46>
 8018246:	2400      	movs	r4, #0
 8018248:	4626      	mov	r6, r4
 801824a:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 801824e:	0e00      	lsrs	r0, r0, #24
 8018250:	28ff      	cmp	r0, #255	; 0xff
 8018252:	d109      	bne.n	8018268 <_GetBkIndexAlpha.isra.2+0x60>
 8018254:	f8d9 0000 	ldr.w	r0, [r9]
 8018258:	b190      	cbz	r0, 8018280 <_GetBkIndexAlpha.isra.2+0x78>
 801825a:	68c3      	ldr	r3, [r0, #12]
 801825c:	4641      	mov	r1, r8
 801825e:	695b      	ldr	r3, [r3, #20]
 8018260:	463a      	mov	r2, r7
 8018262:	4798      	blx	r3
 8018264:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018268:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 801826c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8018270:	1a8a      	subs	r2, r1, r2
 8018272:	fb02 4404 	mla	r4, r2, r4, r4
 8018276:	f105 0320 	add.w	r3, r5, #32
 801827a:	4426      	add	r6, r4
 801827c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8018280:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08018284 <_GetDeviceRect>:
 8018284:	b538      	push	{r3, r4, r5, lr}
 8018286:	4a0c      	ldr	r2, [pc, #48]	; (80182b8 <_GetDeviceRect+0x34>)
 8018288:	6983      	ldr	r3, [r0, #24]
 801828a:	56d2      	ldrsb	r2, [r2, r3]
 801828c:	2a01      	cmp	r2, #1
 801828e:	4605      	mov	r5, r0
 8018290:	460c      	mov	r4, r1
 8018292:	dd0d      	ble.n	80182b0 <_GetDeviceRect+0x2c>
 8018294:	2200      	movs	r2, #0
 8018296:	804a      	strh	r2, [r1, #2]
 8018298:	800a      	strh	r2, [r1, #0]
 801829a:	4618      	mov	r0, r3
 801829c:	f7f6 f882 	bl	800e3a4 <LCD_GetXSizeEx>
 80182a0:	3801      	subs	r0, #1
 80182a2:	80a0      	strh	r0, [r4, #4]
 80182a4:	69a8      	ldr	r0, [r5, #24]
 80182a6:	f7f6 f880 	bl	800e3aa <LCD_GetYSizeEx>
 80182aa:	3801      	subs	r0, #1
 80182ac:	80e0      	strh	r0, [r4, #6]
 80182ae:	bd38      	pop	{r3, r4, r5, pc}
 80182b0:	68c3      	ldr	r3, [r0, #12]
 80182b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80182b4:	4798      	blx	r3
 80182b6:	bd38      	pop	{r3, r4, r5, pc}
 80182b8:	200199bc 	.word	0x200199bc

080182bc <_FlushBuffer.isra.5>:
 80182bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80182be:	460c      	mov	r4, r1
 80182c0:	68c9      	ldr	r1, [r1, #12]
 80182c2:	b087      	sub	sp, #28
 80182c4:	2900      	cmp	r1, #0
 80182c6:	d030      	beq.n	801832a <_FlushBuffer.isra.5+0x6e>
 80182c8:	f994 3030 	ldrsb.w	r3, [r4, #48]	; 0x30
 80182cc:	6822      	ldr	r2, [r4, #0]
 80182ce:	2b01      	cmp	r3, #1
 80182d0:	d103      	bne.n	80182da <_FlushBuffer.isra.5+0x1e>
 80182d2:	4615      	mov	r5, r2
 80182d4:	6062      	str	r2, [r4, #4]
 80182d6:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 80182d8:	e009      	b.n	80182ee <_FlushBuffer.isra.5+0x32>
 80182da:	69e3      	ldr	r3, [r4, #28]
 80182dc:	6865      	ldr	r5, [r4, #4]
 80182de:	6a27      	ldr	r7, [r4, #32]
 80182e0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80182e4:	3b01      	subs	r3, #1
 80182e6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80182ea:	3504      	adds	r5, #4
 80182ec:	6063      	str	r3, [r4, #4]
 80182ee:	6806      	ldr	r6, [r0, #0]
 80182f0:	b1b6      	cbz	r6, 8018320 <_FlushBuffer.isra.5+0x64>
 80182f2:	69a2      	ldr	r2, [r4, #24]
 80182f4:	4628      	mov	r0, r5
 80182f6:	f7fe fb56 	bl	80169a6 <GUI__CompactPixelIndices>
 80182fa:	2301      	movs	r3, #1
 80182fc:	68f2      	ldr	r2, [r6, #12]
 80182fe:	9300      	str	r3, [sp, #0]
 8018300:	69a3      	ldr	r3, [r4, #24]
 8018302:	9301      	str	r3, [sp, #4]
 8018304:	9503      	str	r5, [sp, #12]
 8018306:	6963      	ldr	r3, [r4, #20]
 8018308:	9302      	str	r3, [sp, #8]
 801830a:	2500      	movs	r5, #0
 801830c:	9504      	str	r5, [sp, #16]
 801830e:	9505      	str	r5, [sp, #20]
 8018310:	f8d2 c004 	ldr.w	ip, [r2, #4]
 8018314:	68e3      	ldr	r3, [r4, #12]
 8018316:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8018318:	4630      	mov	r0, r6
 801831a:	4639      	mov	r1, r7
 801831c:	47e0      	blx	ip
 801831e:	e000      	b.n	8018322 <_FlushBuffer.isra.5+0x66>
 8018320:	2501      	movs	r5, #1
 8018322:	2300      	movs	r3, #0
 8018324:	60e3      	str	r3, [r4, #12]
 8018326:	b2e8      	uxtb	r0, r5
 8018328:	e000      	b.n	801832c <_FlushBuffer.isra.5+0x70>
 801832a:	4608      	mov	r0, r1
 801832c:	b007      	add	sp, #28
 801832e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018330 <_SetBkIndexBuffered>:
 8018330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018332:	9c06      	ldr	r4, [sp, #24]
 8018334:	460d      	mov	r5, r1
 8018336:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8018338:	428d      	cmp	r5, r1
 801833a:	4606      	mov	r6, r0
 801833c:	4617      	mov	r7, r2
 801833e:	d105      	bne.n	801834c <_SetBkIndexBuffered+0x1c>
 8018340:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 8018344:	6a21      	ldr	r1, [r4, #32]
 8018346:	4411      	add	r1, r2
 8018348:	4288      	cmp	r0, r1
 801834a:	d003      	beq.n	8018354 <_SetBkIndexBuffered+0x24>
 801834c:	4618      	mov	r0, r3
 801834e:	4621      	mov	r1, r4
 8018350:	f7ff ffb4 	bl	80182bc <_FlushBuffer.isra.5>
 8018354:	6863      	ldr	r3, [r4, #4]
 8018356:	601f      	str	r7, [r3, #0]
 8018358:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 801835c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8018360:	6063      	str	r3, [r4, #4]
 8018362:	68e3      	ldr	r3, [r4, #12]
 8018364:	b90b      	cbnz	r3, 801836a <_SetBkIndexBuffered+0x3a>
 8018366:	62a6      	str	r6, [r4, #40]	; 0x28
 8018368:	62e5      	str	r5, [r4, #44]	; 0x2c
 801836a:	3301      	adds	r3, #1
 801836c:	60e3      	str	r3, [r4, #12]
 801836e:	6226      	str	r6, [r4, #32]
 8018370:	6265      	str	r5, [r4, #36]	; 0x24
 8018372:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018374 <_ReleaseBuffer.isra.6>:
 8018374:	b513      	push	{r0, r1, r4, lr}
 8018376:	9101      	str	r1, [sp, #4]
 8018378:	f7ff ffa0 	bl	80182bc <_FlushBuffer.isra.5>
 801837c:	a802      	add	r0, sp, #8
 801837e:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8018382:	6894      	ldr	r4, [r2, #8]
 8018384:	f7f9 f82a 	bl	80113dc <GUI_ALLOC_UnlockH>
 8018388:	4620      	mov	r0, r4
 801838a:	f7f9 f853 	bl	8011434 <GUI_ALLOC_Free>
 801838e:	b002      	add	sp, #8
 8018390:	bd10      	pop	{r4, pc}
	...

08018394 <GUI_SPRITE_SetPosition>:
 8018394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018398:	b0a7      	sub	sp, #156	; 0x9c
 801839a:	9116      	str	r1, [sp, #88]	; 0x58
 801839c:	9217      	str	r2, [sp, #92]	; 0x5c
 801839e:	2800      	cmp	r0, #0
 80183a0:	f000 8275 	beq.w	801888e <GUI_SPRITE_SetPosition+0x4fa>
 80183a4:	f7f9 f80c 	bl	80113c0 <GUI_ALLOC_LockH>
 80183a8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80183aa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80183ae:	6801      	ldr	r1, [r0, #0]
 80183b0:	9023      	str	r0, [sp, #140]	; 0x8c
 80183b2:	429a      	cmp	r2, r3
 80183b4:	9106      	str	r1, [sp, #24]
 80183b6:	d106      	bne.n	80183c6 <GUI_SPRITE_SetPosition+0x32>
 80183b8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80183bc:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 80183c0:	459e      	cmp	lr, r3
 80183c2:	f000 8239 	beq.w	8018838 <GUI_SPRITE_SetPosition+0x4a4>
 80183c6:	2000      	movs	r0, #0
 80183c8:	f7f4 fe1a 	bl	800d000 <GUI_MEMDEV_Select>
 80183cc:	4ba0      	ldr	r3, [pc, #640]	; (8018650 <GUI_SPRITE_SetPosition+0x2bc>)
 80183ce:	9906      	ldr	r1, [sp, #24]
 80183d0:	681b      	ldr	r3, [r3, #0]
 80183d2:	6989      	ldr	r1, [r1, #24]
 80183d4:	7c5a      	ldrb	r2, [r3, #17]
 80183d6:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 80183d8:	9108      	str	r1, [sp, #32]
 80183da:	4291      	cmp	r1, r2
 80183dc:	bf18      	it	ne
 80183de:	7459      	strbne	r1, [r3, #17]
 80183e0:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80183e4:	9310      	str	r3, [sp, #64]	; 0x40
 80183e6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80183ea:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80183ee:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 80183f2:	921a      	str	r2, [sp, #104]	; 0x68
 80183f4:	ebce 0303 	rsb	r3, lr, r3
 80183f8:	1c59      	adds	r1, r3, #1
 80183fa:	9307      	str	r3, [sp, #28]
 80183fc:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8018400:	901f      	str	r0, [sp, #124]	; 0x7c
 8018402:	1b9b      	subs	r3, r3, r6
 8018404:	1c5a      	adds	r2, r3, #1
 8018406:	930e      	str	r3, [sp, #56]	; 0x38
 8018408:	8a2b      	ldrh	r3, [r5, #16]
 801840a:	910d      	str	r1, [sp, #52]	; 0x34
 801840c:	079b      	lsls	r3, r3, #30
 801840e:	921e      	str	r2, [sp, #120]	; 0x78
 8018410:	f140 81f7 	bpl.w	8018802 <GUI_SPRITE_SetPosition+0x46e>
 8018414:	9916      	ldr	r1, [sp, #88]	; 0x58
 8018416:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8018418:	696b      	ldr	r3, [r5, #20]
 801841a:	9311      	str	r3, [sp, #68]	; 0x44
 801841c:	ebce 0a01 	rsb	sl, lr, r1
 8018420:	f1ba 0f00 	cmp.w	sl, #0
 8018424:	ebc6 0902 	rsb	r9, r6, r2
 8018428:	dc0c      	bgt.n	8018444 <GUI_SPRITE_SetPosition+0xb0>
 801842a:	9b07      	ldr	r3, [sp, #28]
 801842c:	930a      	str	r3, [sp, #40]	; 0x28
 801842e:	469e      	mov	lr, r3
 8018430:	f04f 32ff 	mov.w	r2, #4294967295
 8018434:	44d6      	add	lr, sl
 8018436:	2100      	movs	r1, #0
 8018438:	f8cd e01c 	str.w	lr, [sp, #28]
 801843c:	911c      	str	r1, [sp, #112]	; 0x70
 801843e:	9214      	str	r2, [sp, #80]	; 0x50
 8018440:	9204      	str	r2, [sp, #16]
 8018442:	e009      	b.n	8018458 <GUI_SPRITE_SetPosition+0xc4>
 8018444:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018446:	f8cd a070 	str.w	sl, [sp, #112]	; 0x70
 801844a:	f04f 0e01 	mov.w	lr, #1
 801844e:	2100      	movs	r1, #0
 8018450:	9314      	str	r3, [sp, #80]	; 0x50
 8018452:	f8cd e010 	str.w	lr, [sp, #16]
 8018456:	910a      	str	r1, [sp, #40]	; 0x28
 8018458:	f1b9 0f00 	cmp.w	r9, #0
 801845c:	dc0c      	bgt.n	8018478 <GUI_SPRITE_SetPosition+0xe4>
 801845e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018460:	4622      	mov	r2, r4
 8018462:	f04f 3eff 	mov.w	lr, #4294967295
 8018466:	444a      	add	r2, r9
 8018468:	2300      	movs	r3, #0
 801846a:	920e      	str	r2, [sp, #56]	; 0x38
 801846c:	931b      	str	r3, [sp, #108]	; 0x6c
 801846e:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
 8018472:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
 8018476:	e006      	b.n	8018486 <GUI_SPRITE_SetPosition+0xf2>
 8018478:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801847a:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
 801847e:	2301      	movs	r3, #1
 8018480:	9215      	str	r2, [sp, #84]	; 0x54
 8018482:	9309      	str	r3, [sp, #36]	; 0x24
 8018484:	2400      	movs	r4, #0
 8018486:	9806      	ldr	r0, [sp, #24]
 8018488:	a924      	add	r1, sp, #144	; 0x90
 801848a:	f7ff fefb 	bl	8018284 <_GetDeviceRect>
 801848e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8018490:	9904      	ldr	r1, [sp, #16]
 8018492:	f7ff fe2a 	bl	80180ea <_CreateBuffer>
 8018496:	9012      	str	r0, [sp, #72]	; 0x48
 8018498:	2800      	cmp	r0, #0
 801849a:	f000 81b2 	beq.w	8018802 <GUI_SPRITE_SetPosition+0x46e>
 801849e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80184a0:	9904      	ldr	r1, [sp, #16]
 80184a2:	f7ff fe22 	bl	80180ea <_CreateBuffer>
 80184a6:	9013      	str	r0, [sp, #76]	; 0x4c
 80184a8:	2800      	cmp	r0, #0
 80184aa:	f000 81a5 	beq.w	80187f8 <GUI_SPRITE_SetPosition+0x464>
 80184ae:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80184b0:	68d8      	ldr	r0, [r3, #12]
 80184b2:	4426      	add	r6, r4
 80184b4:	b990      	cbnz	r0, 80184dc <GUI_SPRITE_SetPosition+0x148>
 80184b6:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 80184ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 80184bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80184be:	9019      	str	r0, [sp, #100]	; 0x64
 80184c0:	ea4f 038e 	mov.w	r3, lr, lsl #2
 80184c4:	434b      	muls	r3, r1
 80184c6:	9321      	str	r3, [sp, #132]	; 0x84
 80184c8:	fb0e 2304 	mla	r3, lr, r4, r2
 80184cc:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80184d0:	930c      	str	r3, [sp, #48]	; 0x30
 80184d2:	9b04      	ldr	r3, [sp, #16]
 80184d4:	009b      	lsls	r3, r3, #2
 80184d6:	444e      	add	r6, r9
 80184d8:	9320      	str	r3, [sp, #128]	; 0x80
 80184da:	e0db      	b.n	8018694 <GUI_SPRITE_SetPosition+0x300>
 80184dc:	f7f8 ff70 	bl	80113c0 <GUI_ALLOC_LockH>
 80184e0:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 80184e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80184e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80184e8:	9022      	str	r0, [sp, #136]	; 0x88
 80184ea:	ea4f 038e 	mov.w	r3, lr, lsl #2
 80184ee:	434b      	muls	r3, r1
 80184f0:	9319      	str	r3, [sp, #100]	; 0x64
 80184f2:	fb0e 2304 	mla	r3, lr, r4, r2
 80184f6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80184fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80184fc:	9b04      	ldr	r3, [sp, #16]
 80184fe:	009b      	lsls	r3, r3, #2
 8018500:	444e      	add	r6, r9
 8018502:	931d      	str	r3, [sp, #116]	; 0x74
 8018504:	9915      	ldr	r1, [sp, #84]	; 0x54
 8018506:	428c      	cmp	r4, r1
 8018508:	f000 809e 	beq.w	8018648 <GUI_SPRITE_SetPosition+0x2b4>
 801850c:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8018510:	4574      	cmp	r4, lr
 8018512:	db05      	blt.n	8018520 <GUI_SPRITE_SetPosition+0x18c>
 8018514:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018516:	428c      	cmp	r4, r1
 8018518:	bfcc      	ite	gt
 801851a:	2300      	movgt	r3, #0
 801851c:	2301      	movle	r3, #1
 801851e:	e000      	b.n	8018522 <GUI_SPRITE_SetPosition+0x18e>
 8018520:	2300      	movs	r3, #0
 8018522:	b2db      	uxtb	r3, r3
 8018524:	9318      	str	r3, [sp, #96]	; 0x60
 8018526:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8018528:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801852a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801852c:	9105      	str	r1, [sp, #20]
 801852e:	ebc9 0206 	rsb	r2, r9, r6
 8018532:	441f      	add	r7, r3
 8018534:	920c      	str	r2, [sp, #48]	; 0x30
 8018536:	4457      	add	r7, sl
 8018538:	461d      	mov	r5, r3
 801853a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801853c:	428d      	cmp	r5, r1
 801853e:	d07a      	beq.n	8018636 <GUI_SPRITE_SetPosition+0x2a2>
 8018540:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018542:	4629      	mov	r1, r5
 8018544:	4622      	mov	r2, r4
 8018546:	f000 f9eb 	bl	8018920 <GUI_GetBitmapPixelIndex>
 801854a:	900f      	str	r0, [sp, #60]	; 0x3c
 801854c:	2800      	cmp	r0, #0
 801854e:	d069      	beq.n	8018624 <GUI_SPRITE_SetPosition+0x290>
 8018550:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8018552:	4295      	cmp	r5, r2
 8018554:	ebca 0c07 	rsb	ip, sl, r7
 8018558:	db07      	blt.n	801856a <GUI_SPRITE_SetPosition+0x1d6>
 801855a:	9b07      	ldr	r3, [sp, #28]
 801855c:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8018560:	429d      	cmp	r5, r3
 8018562:	bfc8      	it	gt
 8018564:	f04f 0b00 	movgt.w	fp, #0
 8018568:	e001      	b.n	801856e <GUI_SPRITE_SetPosition+0x1da>
 801856a:	f04f 0b00 	mov.w	fp, #0
 801856e:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8018572:	429f      	cmp	r7, r3
 8018574:	fa5f fb8b 	uxtb.w	fp, fp
 8018578:	db17      	blt.n	80185aa <GUI_SPRITE_SetPosition+0x216>
 801857a:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 801857e:	429e      	cmp	r6, r3
 8018580:	db13      	blt.n	80185aa <GUI_SPRITE_SetPosition+0x216>
 8018582:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8018586:	429f      	cmp	r7, r3
 8018588:	dc0f      	bgt.n	80185aa <GUI_SPRITE_SetPosition+0x216>
 801858a:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 801858e:	429e      	cmp	r6, r3
 8018590:	dc0b      	bgt.n	80185aa <GUI_SPRITE_SetPosition+0x216>
 8018592:	4638      	mov	r0, r7
 8018594:	4631      	mov	r1, r6
 8018596:	9a06      	ldr	r2, [sp, #24]
 8018598:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801859a:	f8cd c00c 	str.w	ip, [sp, #12]
 801859e:	f7ff fdf9 	bl	8018194 <_GetBkIndex.isra.0>
 80185a2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80185a6:	4680      	mov	r8, r0
 80185a8:	e001      	b.n	80185ae <GUI_SPRITE_SetPosition+0x21a>
 80185aa:	f04f 0800 	mov.w	r8, #0
 80185ae:	f1bb 0f00 	cmp.w	fp, #0
 80185b2:	d00d      	beq.n	80185d0 <GUI_SPRITE_SetPosition+0x23c>
 80185b4:	ebb5 010a 	subs.w	r1, r5, sl
 80185b8:	d415      	bmi.n	80185e6 <GUI_SPRITE_SetPosition+0x252>
 80185ba:	ebb4 0209 	subs.w	r2, r4, r9
 80185be:	d412      	bmi.n	80185e6 <GUI_SPRITE_SetPosition+0x252>
 80185c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80185c2:	f8cd c00c 	str.w	ip, [sp, #12]
 80185c6:	f000 f9ab 	bl	8018920 <GUI_GetBitmapPixelIndex>
 80185ca:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80185ce:	b950      	cbnz	r0, 80185e6 <GUI_SPRITE_SetPosition+0x252>
 80185d0:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 80185d4:	459c      	cmp	ip, r3
 80185d6:	db06      	blt.n	80185e6 <GUI_SPRITE_SetPosition+0x252>
 80185d8:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 80185dc:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 80185e0:	459e      	cmp	lr, r3
 80185e2:	f280 812d 	bge.w	8018840 <GUI_SPRITE_SetPosition+0x4ac>
 80185e6:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 80185ea:	429f      	cmp	r7, r3
 80185ec:	db17      	blt.n	801861e <GUI_SPRITE_SetPosition+0x28a>
 80185ee:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 80185f2:	429e      	cmp	r6, r3
 80185f4:	db13      	blt.n	801861e <GUI_SPRITE_SetPosition+0x28a>
 80185f6:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 80185fa:	429f      	cmp	r7, r3
 80185fc:	dc0f      	bgt.n	801861e <GUI_SPRITE_SetPosition+0x28a>
 80185fe:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8018602:	429e      	cmp	r6, r3
 8018604:	dc0b      	bgt.n	801861e <GUI_SPRITE_SetPosition+0x28a>
 8018606:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018608:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801860a:	f8dd e03c 	ldr.w	lr, [sp, #60]	; 0x3c
 801860e:	9100      	str	r1, [sp, #0]
 8018610:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 8018614:	9b06      	ldr	r3, [sp, #24]
 8018616:	4638      	mov	r0, r7
 8018618:	4631      	mov	r1, r6
 801861a:	f7ff fe89 	bl	8018330 <_SetBkIndexBuffered>
 801861e:	9905      	ldr	r1, [sp, #20]
 8018620:	f8c1 8020 	str.w	r8, [r1, #32]
 8018624:	9b05      	ldr	r3, [sp, #20]
 8018626:	f8dd e074 	ldr.w	lr, [sp, #116]	; 0x74
 801862a:	9a04      	ldr	r2, [sp, #16]
 801862c:	4473      	add	r3, lr
 801862e:	4415      	add	r5, r2
 8018630:	9305      	str	r3, [sp, #20]
 8018632:	4417      	add	r7, r2
 8018634:	e781      	b.n	801853a <GUI_SPRITE_SetPosition+0x1a6>
 8018636:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018638:	f8dd e064 	ldr.w	lr, [sp, #100]	; 0x64
 801863c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801863e:	4473      	add	r3, lr
 8018640:	4414      	add	r4, r2
 8018642:	930b      	str	r3, [sp, #44]	; 0x2c
 8018644:	4416      	add	r6, r2
 8018646:	e75d      	b.n	8018504 <GUI_SPRITE_SetPosition+0x170>
 8018648:	a822      	add	r0, sp, #136	; 0x88
 801864a:	f7f8 fec7 	bl	80113dc <GUI_ALLOC_UnlockH>
 801864e:	e0ce      	b.n	80187ee <GUI_SPRITE_SetPosition+0x45a>
 8018650:	2000016c 	.word	0x2000016c
 8018654:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8018656:	4294      	cmp	r4, r2
 8018658:	db20      	blt.n	801869c <GUI_SPRITE_SetPosition+0x308>
 801865a:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 801865e:	4574      	cmp	r4, lr
 8018660:	bfcc      	ite	gt
 8018662:	2300      	movgt	r3, #0
 8018664:	2301      	movle	r3, #1
 8018666:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018668:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801866a:	b2db      	uxtb	r3, r3
 801866c:	931d      	str	r3, [sp, #116]	; 0x74
 801866e:	ebc9 0106 	rsb	r1, r9, r6
 8018672:	4417      	add	r7, r2
 8018674:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018676:	910f      	str	r1, [sp, #60]	; 0x3c
 8018678:	4457      	add	r7, sl
 801867a:	9305      	str	r3, [sp, #20]
 801867c:	4615      	mov	r5, r2
 801867e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8018680:	428d      	cmp	r5, r1
 8018682:	d10d      	bne.n	80186a0 <GUI_SPRITE_SetPosition+0x30c>
 8018684:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018686:	f8dd e084 	ldr.w	lr, [sp, #132]	; 0x84
 801868a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801868c:	4473      	add	r3, lr
 801868e:	4414      	add	r4, r2
 8018690:	930c      	str	r3, [sp, #48]	; 0x30
 8018692:	4416      	add	r6, r2
 8018694:	9915      	ldr	r1, [sp, #84]	; 0x54
 8018696:	428c      	cmp	r4, r1
 8018698:	d1dc      	bne.n	8018654 <GUI_SPRITE_SetPosition+0x2c0>
 801869a:	e0a8      	b.n	80187ee <GUI_SPRITE_SetPosition+0x45a>
 801869c:	2300      	movs	r3, #0
 801869e:	e7e2      	b.n	8018666 <GUI_SPRITE_SetPosition+0x2d2>
 80186a0:	4629      	mov	r1, r5
 80186a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80186a4:	4622      	mov	r2, r4
 80186a6:	f000 f93b 	bl	8018920 <GUI_GetBitmapPixelIndex>
 80186aa:	0e01      	lsrs	r1, r0, #24
 80186ac:	29ff      	cmp	r1, #255	; 0xff
 80186ae:	9018      	str	r0, [sp, #96]	; 0x60
 80186b0:	910b      	str	r1, [sp, #44]	; 0x2c
 80186b2:	f000 8093 	beq.w	80187dc <GUI_SPRITE_SetPosition+0x448>
 80186b6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80186b8:	4295      	cmp	r5, r2
 80186ba:	ebca 0c07 	rsb	ip, sl, r7
 80186be:	db07      	blt.n	80186d0 <GUI_SPRITE_SetPosition+0x33c>
 80186c0:	9b07      	ldr	r3, [sp, #28]
 80186c2:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 80186c6:	429d      	cmp	r5, r3
 80186c8:	bfc8      	it	gt
 80186ca:	f04f 0b00 	movgt.w	fp, #0
 80186ce:	e001      	b.n	80186d4 <GUI_SPRITE_SetPosition+0x340>
 80186d0:	f04f 0b00 	mov.w	fp, #0
 80186d4:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 80186d8:	429f      	cmp	r7, r3
 80186da:	fa5f fb8b 	uxtb.w	fp, fp
 80186de:	db22      	blt.n	8018726 <GUI_SPRITE_SetPosition+0x392>
 80186e0:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 80186e4:	429e      	cmp	r6, r3
 80186e6:	db1e      	blt.n	8018726 <GUI_SPRITE_SetPosition+0x392>
 80186e8:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 80186ec:	429f      	cmp	r7, r3
 80186ee:	dc1a      	bgt.n	8018726 <GUI_SPRITE_SetPosition+0x392>
 80186f0:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 80186f4:	429e      	cmp	r6, r3
 80186f6:	dc16      	bgt.n	8018726 <GUI_SPRITE_SetPosition+0x392>
 80186f8:	4631      	mov	r1, r6
 80186fa:	9a06      	ldr	r2, [sp, #24]
 80186fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80186fe:	f8cd c00c 	str.w	ip, [sp, #12]
 8018702:	4638      	mov	r0, r7
 8018704:	f7ff fd80 	bl	8018208 <_GetBkIndexAlpha.isra.2>
 8018708:	f8dd e020 	ldr.w	lr, [sp, #32]
 801870c:	4b61      	ldr	r3, [pc, #388]	; (8018894 <GUI_SPRITE_SetPosition+0x500>)
 801870e:	f853 302e 	ldr.w	r3, [r3, lr, lsl #2]
 8018712:	691b      	ldr	r3, [r3, #16]
 8018714:	4680      	mov	r8, r0
 8018716:	685b      	ldr	r3, [r3, #4]
 8018718:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 801871c:	4798      	blx	r3
 801871e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8018722:	9019      	str	r0, [sp, #100]	; 0x64
 8018724:	e001      	b.n	801872a <GUI_SPRITE_SetPosition+0x396>
 8018726:	f04f 0800 	mov.w	r8, #0
 801872a:	f1bb 0f00 	cmp.w	fp, #0
 801872e:	d00f      	beq.n	8018750 <GUI_SPRITE_SetPosition+0x3bc>
 8018730:	ebb5 010a 	subs.w	r1, r5, sl
 8018734:	d416      	bmi.n	8018764 <GUI_SPRITE_SetPosition+0x3d0>
 8018736:	ebb4 0209 	subs.w	r2, r4, r9
 801873a:	d413      	bmi.n	8018764 <GUI_SPRITE_SetPosition+0x3d0>
 801873c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801873e:	f8cd c00c 	str.w	ip, [sp, #12]
 8018742:	f000 f8ed 	bl	8018920 <GUI_GetBitmapPixelIndex>
 8018746:	0e00      	lsrs	r0, r0, #24
 8018748:	28ff      	cmp	r0, #255	; 0xff
 801874a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 801874e:	d109      	bne.n	8018764 <GUI_SPRITE_SetPosition+0x3d0>
 8018750:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8018754:	459c      	cmp	ip, r3
 8018756:	db05      	blt.n	8018764 <GUI_SPRITE_SetPosition+0x3d0>
 8018758:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 801875c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801875e:	4299      	cmp	r1, r3
 8018760:	f280 8082 	bge.w	8018868 <GUI_SPRITE_SetPosition+0x4d4>
 8018764:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8018768:	429f      	cmp	r7, r3
 801876a:	db34      	blt.n	80187d6 <GUI_SPRITE_SetPosition+0x442>
 801876c:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8018770:	429e      	cmp	r6, r3
 8018772:	db30      	blt.n	80187d6 <GUI_SPRITE_SetPosition+0x442>
 8018774:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8018778:	429f      	cmp	r7, r3
 801877a:	dc2c      	bgt.n	80187d6 <GUI_SPRITE_SetPosition+0x442>
 801877c:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8018780:	429e      	cmp	r6, r3
 8018782:	dc28      	bgt.n	80187d6 <GUI_SPRITE_SetPosition+0x442>
 8018784:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018788:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801878a:	f8df b108 	ldr.w	fp, [pc, #264]	; 8018894 <GUI_SPRITE_SetPosition+0x500>
 801878e:	f02e 407f 	bic.w	r0, lr, #4278190080	; 0xff000000
 8018792:	b191      	cbz	r1, 80187ba <GUI_SPRITE_SetPosition+0x426>
 8018794:	9a08      	ldr	r2, [sp, #32]
 8018796:	f85b 3022 	ldr.w	r3, [fp, r2, lsl #2]
 801879a:	691b      	ldr	r3, [r3, #16]
 801879c:	685b      	ldr	r3, [r3, #4]
 801879e:	4798      	blx	r3
 80187a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80187a2:	9919      	ldr	r1, [sp, #100]	; 0x64
 80187a4:	43da      	mvns	r2, r3
 80187a6:	b2d2      	uxtb	r2, r2
 80187a8:	f7f6 fc5f 	bl	800f06a <GUI__MixColors>
 80187ac:	f8dd e020 	ldr.w	lr, [sp, #32]
 80187b0:	f85b 302e 	ldr.w	r3, [fp, lr, lsl #2]
 80187b4:	691b      	ldr	r3, [r3, #16]
 80187b6:	681b      	ldr	r3, [r3, #0]
 80187b8:	e004      	b.n	80187c4 <GUI_SPRITE_SetPosition+0x430>
 80187ba:	9908      	ldr	r1, [sp, #32]
 80187bc:	f85b 3021 	ldr.w	r3, [fp, r1, lsl #2]
 80187c0:	691b      	ldr	r3, [r3, #16]
 80187c2:	685b      	ldr	r3, [r3, #4]
 80187c4:	4798      	blx	r3
 80187c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80187c8:	9300      	str	r3, [sp, #0]
 80187ca:	4602      	mov	r2, r0
 80187cc:	4631      	mov	r1, r6
 80187ce:	4638      	mov	r0, r7
 80187d0:	9b06      	ldr	r3, [sp, #24]
 80187d2:	f7ff fdad 	bl	8018330 <_SetBkIndexBuffered>
 80187d6:	9905      	ldr	r1, [sp, #20]
 80187d8:	f8c1 8020 	str.w	r8, [r1, #32]
 80187dc:	9b05      	ldr	r3, [sp, #20]
 80187de:	f8dd e080 	ldr.w	lr, [sp, #128]	; 0x80
 80187e2:	9a04      	ldr	r2, [sp, #16]
 80187e4:	4473      	add	r3, lr
 80187e6:	4415      	add	r5, r2
 80187e8:	9305      	str	r3, [sp, #20]
 80187ea:	4417      	add	r7, r2
 80187ec:	e747      	b.n	801867e <GUI_SPRITE_SetPosition+0x2ea>
 80187ee:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80187f0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80187f2:	6818      	ldr	r0, [r3, #0]
 80187f4:	f7ff fdbe 	bl	8018374 <_ReleaseBuffer.isra.6>
 80187f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80187fa:	9912      	ldr	r1, [sp, #72]	; 0x48
 80187fc:	6818      	ldr	r0, [r3, #0]
 80187fe:	f7ff fdb9 	bl	8018374 <_ReleaseBuffer.isra.6>
 8018802:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018804:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018806:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018808:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 801880c:	809a      	strh	r2, [r3, #4]
 801880e:	440a      	add	r2, r1
 8018810:	3a01      	subs	r2, #1
 8018812:	f8a3 e006 	strh.w	lr, [r3, #6]
 8018816:	811a      	strh	r2, [r3, #8]
 8018818:	f10e 32ff 	add.w	r2, lr, #4294967295
 801881c:	f8dd e078 	ldr.w	lr, [sp, #120]	; 0x78
 8018820:	9908      	ldr	r1, [sp, #32]
 8018822:	4472      	add	r2, lr
 8018824:	815a      	strh	r2, [r3, #10]
 8018826:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8018828:	4291      	cmp	r1, r2
 801882a:	d002      	beq.n	8018832 <GUI_SPRITE_SetPosition+0x49e>
 801882c:	4b1a      	ldr	r3, [pc, #104]	; (8018898 <GUI_SPRITE_SetPosition+0x504>)
 801882e:	681b      	ldr	r3, [r3, #0]
 8018830:	745a      	strb	r2, [r3, #17]
 8018832:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8018834:	f7f4 fbe4 	bl	800d000 <GUI_MEMDEV_Select>
 8018838:	a823      	add	r0, sp, #140	; 0x8c
 801883a:	f7f8 fdcf 	bl	80113dc <GUI_ALLOC_UnlockH>
 801883e:	e026      	b.n	801888e <GUI_SPRITE_SetPosition+0x4fa>
 8018840:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8018844:	459c      	cmp	ip, r3
 8018846:	f73f aece 	bgt.w	80185e6 <GUI_SPRITE_SetPosition+0x252>
 801884a:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 801884e:	459e      	cmp	lr, r3
 8018850:	f73f aec9 	bgt.w	80185e6 <GUI_SPRITE_SetPosition+0x252>
 8018854:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8018856:	9b05      	ldr	r3, [sp, #20]
 8018858:	9100      	str	r1, [sp, #0]
 801885a:	6a1a      	ldr	r2, [r3, #32]
 801885c:	9b06      	ldr	r3, [sp, #24]
 801885e:	4660      	mov	r0, ip
 8018860:	4671      	mov	r1, lr
 8018862:	f7ff fd65 	bl	8018330 <_SetBkIndexBuffered>
 8018866:	e6be      	b.n	80185e6 <GUI_SPRITE_SetPosition+0x252>
 8018868:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 801886c:	459c      	cmp	ip, r3
 801886e:	f73f af79 	bgt.w	8018764 <GUI_SPRITE_SetPosition+0x3d0>
 8018872:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8018876:	4299      	cmp	r1, r3
 8018878:	f73f af74 	bgt.w	8018764 <GUI_SPRITE_SetPosition+0x3d0>
 801887c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801887e:	9b05      	ldr	r3, [sp, #20]
 8018880:	9200      	str	r2, [sp, #0]
 8018882:	6a1a      	ldr	r2, [r3, #32]
 8018884:	9b06      	ldr	r3, [sp, #24]
 8018886:	4660      	mov	r0, ip
 8018888:	f7ff fd52 	bl	8018330 <_SetBkIndexBuffered>
 801888c:	e76a      	b.n	8018764 <GUI_SPRITE_SetPosition+0x3d0>
 801888e:	b027      	add	sp, #156	; 0x9c
 8018890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018894:	200199ec 	.word	0x200199ec
 8018898:	2000016c 	.word	0x2000016c

0801889c <GUI_GetBitmapPixelIndexEx>:
 801889c:	b510      	push	{r4, lr}
 801889e:	2804      	cmp	r0, #4
 80188a0:	9c02      	ldr	r4, [sp, #8]
 80188a2:	d025      	beq.n	80188f0 <GUI_GetBitmapPixelIndexEx+0x54>
 80188a4:	dc0f      	bgt.n	80188c6 <GUI_GetBitmapPixelIndexEx+0x2a>
 80188a6:	2801      	cmp	r0, #1
 80188a8:	d017      	beq.n	80188da <GUI_GetBitmapPixelIndexEx+0x3e>
 80188aa:	2802      	cmp	r0, #2
 80188ac:	d136      	bne.n	801891c <GUI_GetBitmapPixelIndexEx+0x80>
 80188ae:	0898      	lsrs	r0, r3, #2
 80188b0:	fb04 2101 	mla	r1, r4, r1, r2
 80188b4:	ea6f 0343 	mvn.w	r3, r3, lsl #1
 80188b8:	5c08      	ldrb	r0, [r1, r0]
 80188ba:	f003 0306 	and.w	r3, r3, #6
 80188be:	40d8      	lsrs	r0, r3
 80188c0:	f000 0003 	and.w	r0, r0, #3
 80188c4:	bd10      	pop	{r4, pc}
 80188c6:	2810      	cmp	r0, #16
 80188c8:	d01c      	beq.n	8018904 <GUI_GetBitmapPixelIndexEx+0x68>
 80188ca:	2820      	cmp	r0, #32
 80188cc:	d020      	beq.n	8018910 <GUI_GetBitmapPixelIndexEx+0x74>
 80188ce:	2808      	cmp	r0, #8
 80188d0:	d124      	bne.n	801891c <GUI_GetBitmapPixelIndexEx+0x80>
 80188d2:	fb04 2101 	mla	r1, r4, r1, r2
 80188d6:	5cc8      	ldrb	r0, [r1, r3]
 80188d8:	bd10      	pop	{r4, pc}
 80188da:	08d8      	lsrs	r0, r3, #3
 80188dc:	fb04 2101 	mla	r1, r4, r1, r2
 80188e0:	43db      	mvns	r3, r3
 80188e2:	5c08      	ldrb	r0, [r1, r0]
 80188e4:	f003 0307 	and.w	r3, r3, #7
 80188e8:	40d8      	lsrs	r0, r3
 80188ea:	f000 0001 	and.w	r0, r0, #1
 80188ee:	bd10      	pop	{r4, pc}
 80188f0:	0858      	lsrs	r0, r3, #1
 80188f2:	fb04 2101 	mla	r1, r4, r1, r2
 80188f6:	07db      	lsls	r3, r3, #31
 80188f8:	5c08      	ldrb	r0, [r1, r0]
 80188fa:	bf4c      	ite	mi
 80188fc:	f000 000f 	andmi.w	r0, r0, #15
 8018900:	0900      	lsrpl	r0, r0, #4
 8018902:	bd10      	pop	{r4, pc}
 8018904:	1049      	asrs	r1, r1, #1
 8018906:	fb04 3301 	mla	r3, r4, r1, r3
 801890a:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
 801890e:	bd10      	pop	{r4, pc}
 8018910:	1089      	asrs	r1, r1, #2
 8018912:	fb04 3301 	mla	r3, r4, r1, r3
 8018916:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801891a:	bd10      	pop	{r4, pc}
 801891c:	2000      	movs	r0, #0
 801891e:	bd10      	pop	{r4, pc}

08018920 <GUI_GetBitmapPixelIndex>:
 8018920:	b513      	push	{r0, r1, r4, lr}
 8018922:	460b      	mov	r3, r1
 8018924:	4604      	mov	r4, r0
 8018926:	b130      	cbz	r0, 8018936 <GUI_GetBitmapPixelIndex+0x16>
 8018928:	88c0      	ldrh	r0, [r0, #6]
 801892a:	88a1      	ldrh	r1, [r4, #4]
 801892c:	9200      	str	r2, [sp, #0]
 801892e:	68a2      	ldr	r2, [r4, #8]
 8018930:	f7ff ffb4 	bl	801889c <GUI_GetBitmapPixelIndexEx>
 8018934:	e7ff      	b.n	8018936 <GUI_GetBitmapPixelIndex+0x16>
 8018936:	b002      	add	sp, #8
 8018938:	bd10      	pop	{r4, pc}
	...

0801893c <_Add>:
 801893c:	4a0d      	ldr	r2, [pc, #52]	; (8018974 <_Add+0x38>)
 801893e:	6813      	ldr	r3, [r2, #0]
 8018940:	2b0b      	cmp	r3, #11
 8018942:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018944:	4615      	mov	r5, r2
 8018946:	dc14      	bgt.n	8018972 <_Add+0x36>
 8018948:	4c0b      	ldr	r4, [pc, #44]	; (8018978 <_Add+0x3c>)
 801894a:	461a      	mov	r2, r3
 801894c:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 8018950:	4626      	mov	r6, r4
 8018952:	b152      	cbz	r2, 801896a <_Add+0x2e>
 8018954:	f831 4d02 	ldrh.w	r4, [r1, #-2]!
 8018958:	fa0f fc84 	sxth.w	ip, r4
 801895c:	4584      	cmp	ip, r0
 801895e:	f102 37ff 	add.w	r7, r2, #4294967295
 8018962:	db02      	blt.n	801896a <_Add+0x2e>
 8018964:	804c      	strh	r4, [r1, #2]
 8018966:	463a      	mov	r2, r7
 8018968:	e7f3      	b.n	8018952 <_Add+0x16>
 801896a:	3301      	adds	r3, #1
 801896c:	f826 0012 	strh.w	r0, [r6, r2, lsl #1]
 8018970:	602b      	str	r3, [r5, #0]
 8018972:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018974:	2001972c 	.word	0x2001972c
 8018978:	20019730 	.word	0x20019730

0801897c <GL_FillPolygon>:
 801897c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018980:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 8018b3c <GL_FillPolygon+0x1c0>
 8018984:	9101      	str	r1, [sp, #4]
 8018986:	4692      	mov	sl, r2
 8018988:	4606      	mov	r6, r0
 801898a:	f643 74ff 	movw	r4, #16383	; 0x3fff
 801898e:	2200      	movs	r2, #0
 8018990:	9901      	ldr	r1, [sp, #4]
 8018992:	428a      	cmp	r2, r1
 8018994:	da0b      	bge.n	80189ae <GL_FillPolygon+0x32>
 8018996:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 801899a:	3201      	adds	r2, #1
 801899c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80189a0:	428c      	cmp	r4, r1
 80189a2:	bfa8      	it	ge
 80189a4:	460c      	movge	r4, r1
 80189a6:	4589      	cmp	r9, r1
 80189a8:	bfb8      	it	lt
 80189aa:	4689      	movlt	r9, r1
 80189ac:	e7f0      	b.n	8018990 <GL_FillPolygon+0x14>
 80189ae:	4960      	ldr	r1, [pc, #384]	; (8018b30 <GL_FillPolygon+0x1b4>)
 80189b0:	680a      	ldr	r2, [r1, #0]
 80189b2:	6952      	ldr	r2, [r2, #20]
 80189b4:	468b      	mov	fp, r1
 80189b6:	b15a      	cbz	r2, 80189d0 <GL_FillPolygon+0x54>
 80189b8:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 80189bc:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 80189c0:	1ac9      	subs	r1, r1, r3
 80189c2:	1ad2      	subs	r2, r2, r3
 80189c4:	4589      	cmp	r9, r1
 80189c6:	bfa8      	it	ge
 80189c8:	4689      	movge	r9, r1
 80189ca:	4294      	cmp	r4, r2
 80189cc:	bfb8      	it	lt
 80189ce:	4614      	movlt	r4, r2
 80189d0:	eb04 0803 	add.w	r8, r4, r3
 80189d4:	454c      	cmp	r4, r9
 80189d6:	f300 80a7 	bgt.w	8018b28 <GL_FillPolygon+0x1ac>
 80189da:	4b56      	ldr	r3, [pc, #344]	; (8018b34 <GL_FillPolygon+0x1b8>)
 80189dc:	2700      	movs	r7, #0
 80189de:	601f      	str	r7, [r3, #0]
 80189e0:	4635      	mov	r5, r6
 80189e2:	9901      	ldr	r1, [sp, #4]
 80189e4:	428f      	cmp	r7, r1
 80189e6:	da55      	bge.n	8018a94 <GL_FillPolygon+0x118>
 80189e8:	9b01      	ldr	r3, [sp, #4]
 80189ea:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80189ee:	1e59      	subs	r1, r3, #1
 80189f0:	428f      	cmp	r7, r1
 80189f2:	bfb4      	ite	lt
 80189f4:	f107 0c01 	addlt.w	ip, r7, #1
 80189f8:	f04f 0c00 	movge.w	ip, #0
 80189fc:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8018a00:	eb06 030c 	add.w	r3, r6, ip
 8018a04:	42a2      	cmp	r2, r4
 8018a06:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8018a0a:	d136      	bne.n	8018a7a <GL_FillPolygon+0xfe>
 8018a0c:	42a3      	cmp	r3, r4
 8018a0e:	d002      	beq.n	8018a16 <GL_FillPolygon+0x9a>
 8018a10:	463a      	mov	r2, r7
 8018a12:	2000      	movs	r0, #0
 8018a14:	e01b      	b.n	8018a4e <GL_FillPolygon+0xd2>
 8018a16:	f9b5 e000 	ldrsh.w	lr, [r5]
 8018a1a:	f936 200c 	ldrsh.w	r2, [r6, ip]
 8018a1e:	f8db 3000 	ldr.w	r3, [fp]
 8018a22:	44d6      	add	lr, sl
 8018a24:	4452      	add	r2, sl
 8018a26:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018a28:	4596      	cmp	lr, r2
 8018a2a:	681b      	ldr	r3, [r3, #0]
 8018a2c:	da02      	bge.n	8018a34 <GL_FillPolygon+0xb8>
 8018a2e:	4670      	mov	r0, lr
 8018a30:	4641      	mov	r1, r8
 8018a32:	e020      	b.n	8018a76 <GL_FillPolygon+0xfa>
 8018a34:	4610      	mov	r0, r2
 8018a36:	4641      	mov	r1, r8
 8018a38:	4672      	mov	r2, lr
 8018a3a:	e01c      	b.n	8018a76 <GL_FillPolygon+0xfa>
 8018a3c:	b152      	cbz	r2, 8018a54 <GL_FillPolygon+0xd8>
 8018a3e:	3a01      	subs	r2, #1
 8018a40:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 8018a44:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 8018a48:	45a4      	cmp	ip, r4
 8018a4a:	d105      	bne.n	8018a58 <GL_FillPolygon+0xdc>
 8018a4c:	3001      	adds	r0, #1
 8018a4e:	4288      	cmp	r0, r1
 8018a50:	dbf4      	blt.n	8018a3c <GL_FillPolygon+0xc0>
 8018a52:	e01c      	b.n	8018a8e <GL_FillPolygon+0x112>
 8018a54:	460a      	mov	r2, r1
 8018a56:	e7f3      	b.n	8018a40 <GL_FillPolygon+0xc4>
 8018a58:	ebc4 0c0c 	rsb	ip, r4, ip
 8018a5c:	1b1b      	subs	r3, r3, r4
 8018a5e:	ea9c 0f03 	teq	ip, r3
 8018a62:	f9b5 0000 	ldrsh.w	r0, [r5]
 8018a66:	d44d      	bmi.n	8018b04 <GL_FillPolygon+0x188>
 8018a68:	f8db 3000 	ldr.w	r3, [fp]
 8018a6c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018a6e:	4450      	add	r0, sl
 8018a70:	681b      	ldr	r3, [r3, #0]
 8018a72:	4641      	mov	r1, r8
 8018a74:	4602      	mov	r2, r0
 8018a76:	4798      	blx	r3
 8018a78:	e009      	b.n	8018a8e <GL_FillPolygon+0x112>
 8018a7a:	42a3      	cmp	r3, r4
 8018a7c:	d007      	beq.n	8018a8e <GL_FillPolygon+0x112>
 8018a7e:	db44      	blt.n	8018b0a <GL_FillPolygon+0x18e>
 8018a80:	42a2      	cmp	r2, r4
 8018a82:	dd27      	ble.n	8018ad4 <GL_FillPolygon+0x158>
 8018a84:	42a3      	cmp	r3, r4
 8018a86:	dd42      	ble.n	8018b0e <GL_FillPolygon+0x192>
 8018a88:	e001      	b.n	8018a8e <GL_FillPolygon+0x112>
 8018a8a:	42a3      	cmp	r3, r4
 8018a8c:	dd49      	ble.n	8018b22 <GL_FillPolygon+0x1a6>
 8018a8e:	3701      	adds	r7, #1
 8018a90:	3504      	adds	r5, #4
 8018a92:	e7a6      	b.n	80189e2 <GL_FillPolygon+0x66>
 8018a94:	2500      	movs	r5, #0
 8018a96:	4628      	mov	r0, r5
 8018a98:	462f      	mov	r7, r5
 8018a9a:	4b26      	ldr	r3, [pc, #152]	; (8018b34 <GL_FillPolygon+0x1b8>)
 8018a9c:	681b      	ldr	r3, [r3, #0]
 8018a9e:	429f      	cmp	r7, r3
 8018aa0:	da14      	bge.n	8018acc <GL_FillPolygon+0x150>
 8018aa2:	4b25      	ldr	r3, [pc, #148]	; (8018b38 <GL_FillPolygon+0x1bc>)
 8018aa4:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 8018aa8:	b15d      	cbz	r5, 8018ac2 <GL_FillPolygon+0x146>
 8018aaa:	f8db 2000 	ldr.w	r2, [fp]
 8018aae:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8018ab0:	4450      	add	r0, sl
 8018ab2:	f8d2 c000 	ldr.w	ip, [r2]
 8018ab6:	9300      	str	r3, [sp, #0]
 8018ab8:	eb0a 0203 	add.w	r2, sl, r3
 8018abc:	4641      	mov	r1, r8
 8018abe:	47e0      	blx	ip
 8018ac0:	9b00      	ldr	r3, [sp, #0]
 8018ac2:	f085 0501 	eor.w	r5, r5, #1
 8018ac6:	3701      	adds	r7, #1
 8018ac8:	4618      	mov	r0, r3
 8018aca:	e7e6      	b.n	8018a9a <GL_FillPolygon+0x11e>
 8018acc:	3401      	adds	r4, #1
 8018ace:	f108 0801 	add.w	r8, r8, #1
 8018ad2:	e77f      	b.n	80189d4 <GL_FillPolygon+0x58>
 8018ad4:	429a      	cmp	r2, r3
 8018ad6:	dcd8      	bgt.n	8018a8a <GL_FillPolygon+0x10e>
 8018ad8:	f9b5 1000 	ldrsh.w	r1, [r5]
 8018adc:	f936 000c 	ldrsh.w	r0, [r6, ip]
 8018ae0:	ebc2 0e04 	rsb	lr, r2, r4
 8018ae4:	1a40      	subs	r0, r0, r1
 8018ae6:	fb0e f000 	mul.w	r0, lr, r0
 8018aea:	2800      	cmp	r0, #0
 8018aec:	ebc2 0303 	rsb	r3, r2, r3
 8018af0:	bfdb      	ittet	le
 8018af2:	105a      	asrle	r2, r3, #1
 8018af4:	f1c2 0201 	rsble	r2, r2, #1
 8018af8:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 8018afc:	1880      	addle	r0, r0, r2
 8018afe:	fb90 f0f3 	sdiv	r0, r0, r3
 8018b02:	4408      	add	r0, r1
 8018b04:	f7ff ff1a 	bl	801893c <_Add>
 8018b08:	e7c1      	b.n	8018a8e <GL_FillPolygon+0x112>
 8018b0a:	42a2      	cmp	r2, r4
 8018b0c:	dbbf      	blt.n	8018a8e <GL_FillPolygon+0x112>
 8018b0e:	429a      	cmp	r2, r3
 8018b10:	ddbd      	ble.n	8018a8e <GL_FillPolygon+0x112>
 8018b12:	4696      	mov	lr, r2
 8018b14:	f936 100c 	ldrsh.w	r1, [r6, ip]
 8018b18:	f9b5 0000 	ldrsh.w	r0, [r5]
 8018b1c:	461a      	mov	r2, r3
 8018b1e:	4673      	mov	r3, lr
 8018b20:	e7de      	b.n	8018ae0 <GL_FillPolygon+0x164>
 8018b22:	42a2      	cmp	r2, r4
 8018b24:	daf5      	bge.n	8018b12 <GL_FillPolygon+0x196>
 8018b26:	e7b2      	b.n	8018a8e <GL_FillPolygon+0x112>
 8018b28:	b003      	add	sp, #12
 8018b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b2e:	bf00      	nop
 8018b30:	2000016c 	.word	0x2000016c
 8018b34:	2001972c 	.word	0x2001972c
 8018b38:	20019730 	.word	0x20019730
 8018b3c:	ffffc001 	.word	0xffffc001

08018b40 <GL_DrawPoint>:
 8018b40:	b508      	push	{r3, lr}
 8018b42:	4b08      	ldr	r3, [pc, #32]	; (8018b64 <GL_DrawPoint+0x24>)
 8018b44:	681b      	ldr	r3, [r3, #0]
 8018b46:	7e1a      	ldrb	r2, [r3, #24]
 8018b48:	2a01      	cmp	r2, #1
 8018b4a:	d103      	bne.n	8018b54 <GL_DrawPoint+0x14>
 8018b4c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018b4e:	685b      	ldr	r3, [r3, #4]
 8018b50:	4798      	blx	r3
 8018b52:	bd08      	pop	{r3, pc}
 8018b54:	2302      	movs	r3, #2
 8018b56:	3a01      	subs	r2, #1
 8018b58:	fb92 f2f3 	sdiv	r2, r2, r3
 8018b5c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8018b60:	f000 b824 	b.w	8018bac <GL_FillCircle>
 8018b64:	2000016c 	.word	0x2000016c

08018b68 <GUI_DrawPixel>:
 8018b68:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018b6a:	4e0f      	ldr	r6, [pc, #60]	; (8018ba8 <GUI_DrawPixel+0x40>)
 8018b6c:	6833      	ldr	r3, [r6, #0]
 8018b6e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8018b70:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8018b72:	4405      	add	r5, r0
 8018b74:	b2ab      	uxth	r3, r5
 8018b76:	440c      	add	r4, r1
 8018b78:	f8ad 3004 	strh.w	r3, [sp, #4]
 8018b7c:	f8ad 3000 	strh.w	r3, [sp]
 8018b80:	4668      	mov	r0, sp
 8018b82:	b2a3      	uxth	r3, r4
 8018b84:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018b88:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018b8c:	f7f2 ffa2 	bl	800bad4 <WM__InitIVRSearch>
 8018b90:	b140      	cbz	r0, 8018ba4 <GUI_DrawPixel+0x3c>
 8018b92:	6833      	ldr	r3, [r6, #0]
 8018b94:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018b96:	4628      	mov	r0, r5
 8018b98:	685b      	ldr	r3, [r3, #4]
 8018b9a:	4621      	mov	r1, r4
 8018b9c:	4798      	blx	r3
 8018b9e:	f7f2 fed7 	bl	800b950 <WM__GetNextIVR>
 8018ba2:	e7f5      	b.n	8018b90 <GUI_DrawPixel+0x28>
 8018ba4:	b002      	add	sp, #8
 8018ba6:	bd70      	pop	{r4, r5, r6, pc}
 8018ba8:	2000016c 	.word	0x2000016c

08018bac <GL_FillCircle>:
 8018bac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bb0:	f240 29c3 	movw	r9, #707	; 0x2c3
 8018bb4:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 8018c6c <GL_FillCircle+0xc0>
 8018bb8:	fb09 f902 	mul.w	r9, r9, r2
 8018bbc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8018bc0:	fb99 f9f3 	sdiv	r9, r9, r3
 8018bc4:	f8d8 3000 	ldr.w	r3, [r8]
 8018bc8:	f04f 0b02 	mov.w	fp, #2
 8018bcc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018bce:	4606      	mov	r6, r0
 8018bd0:	fb92 fbfb 	sdiv	fp, r2, fp
 8018bd4:	1a80      	subs	r0, r0, r2
 8018bd6:	4614      	mov	r4, r2
 8018bd8:	fb02 bb02 	mla	fp, r2, r2, fp
 8018bdc:	681b      	ldr	r3, [r3, #0]
 8018bde:	18b2      	adds	r2, r6, r2
 8018be0:	460f      	mov	r7, r1
 8018be2:	4798      	blx	r3
 8018be4:	f109 0901 	add.w	r9, r9, #1
 8018be8:	2501      	movs	r5, #1
 8018bea:	454d      	cmp	r5, r9
 8018bec:	dc3a      	bgt.n	8018c64 <GL_FillCircle+0xb8>
 8018bee:	fb04 f304 	mul.w	r3, r4, r4
 8018bf2:	fb05 3305 	mla	r3, r5, r5, r3
 8018bf6:	455b      	cmp	r3, fp
 8018bf8:	dd1b      	ble.n	8018c32 <GL_FillCircle+0x86>
 8018bfa:	454c      	cmp	r4, r9
 8018bfc:	dd18      	ble.n	8018c30 <GL_FillCircle+0x84>
 8018bfe:	f8d8 2000 	ldr.w	r2, [r8]
 8018c02:	1c73      	adds	r3, r6, #1
 8018c04:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8018c06:	f106 3aff 	add.w	sl, r6, #4294967295
 8018c0a:	1b5b      	subs	r3, r3, r5
 8018c0c:	44aa      	add	sl, r5
 8018c0e:	f8d2 c000 	ldr.w	ip, [r2]
 8018c12:	9301      	str	r3, [sp, #4]
 8018c14:	4618      	mov	r0, r3
 8018c16:	1939      	adds	r1, r7, r4
 8018c18:	4652      	mov	r2, sl
 8018c1a:	47e0      	blx	ip
 8018c1c:	f8d8 2000 	ldr.w	r2, [r8]
 8018c20:	9b01      	ldr	r3, [sp, #4]
 8018c22:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8018c24:	4618      	mov	r0, r3
 8018c26:	f8d2 c000 	ldr.w	ip, [r2]
 8018c2a:	1b39      	subs	r1, r7, r4
 8018c2c:	4652      	mov	r2, sl
 8018c2e:	47e0      	blx	ip
 8018c30:	3c01      	subs	r4, #1
 8018c32:	f8d8 2000 	ldr.w	r2, [r8]
 8018c36:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8018c38:	1b33      	subs	r3, r6, r4
 8018c3a:	eb06 0a04 	add.w	sl, r6, r4
 8018c3e:	f8d2 c000 	ldr.w	ip, [r2]
 8018c42:	9301      	str	r3, [sp, #4]
 8018c44:	4618      	mov	r0, r3
 8018c46:	19e9      	adds	r1, r5, r7
 8018c48:	4652      	mov	r2, sl
 8018c4a:	47e0      	blx	ip
 8018c4c:	f8d8 2000 	ldr.w	r2, [r8]
 8018c50:	9b01      	ldr	r3, [sp, #4]
 8018c52:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8018c54:	1b79      	subs	r1, r7, r5
 8018c56:	f8d2 c000 	ldr.w	ip, [r2]
 8018c5a:	4618      	mov	r0, r3
 8018c5c:	4652      	mov	r2, sl
 8018c5e:	47e0      	blx	ip
 8018c60:	3501      	adds	r5, #1
 8018c62:	e7c2      	b.n	8018bea <GL_FillCircle+0x3e>
 8018c64:	b003      	add	sp, #12
 8018c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c6a:	bf00      	nop
 8018c6c:	2000016c 	.word	0x2000016c

08018c70 <GUI_CalcColorDist>:
 8018c70:	b2cb      	uxtb	r3, r1
 8018c72:	b2c2      	uxtb	r2, r0
 8018c74:	1ad2      	subs	r2, r2, r3
 8018c76:	b292      	uxth	r2, r2
 8018c78:	b293      	uxth	r3, r2
 8018c7a:	b530      	push	{r4, r5, lr}
 8018c7c:	041c      	lsls	r4, r3, #16
 8018c7e:	bf48      	it	mi
 8018c80:	4253      	negmi	r3, r2
 8018c82:	f3c1 2507 	ubfx	r5, r1, #8, #8
 8018c86:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8018c8a:	ebc5 0202 	rsb	r2, r5, r2
 8018c8e:	bf48      	it	mi
 8018c90:	b29b      	uxthmi	r3, r3
 8018c92:	b292      	uxth	r2, r2
 8018c94:	0c09      	lsrs	r1, r1, #16
 8018c96:	fb13 f403 	smulbb	r4, r3, r3
 8018c9a:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 8018c9e:	b293      	uxth	r3, r2
 8018ca0:	041d      	lsls	r5, r3, #16
 8018ca2:	b289      	uxth	r1, r1
 8018ca4:	b288      	uxth	r0, r1
 8018ca6:	bf44      	itt	mi
 8018ca8:	4253      	negmi	r3, r2
 8018caa:	b29b      	uxthmi	r3, r3
 8018cac:	0402      	lsls	r2, r0, #16
 8018cae:	bf48      	it	mi
 8018cb0:	4248      	negmi	r0, r1
 8018cb2:	fb13 4303 	smlabb	r3, r3, r3, r4
 8018cb6:	bf48      	it	mi
 8018cb8:	b280      	uxthmi	r0, r0
 8018cba:	fb00 3000 	mla	r0, r0, r0, r3
 8018cbe:	bd30      	pop	{r4, r5, pc}

08018cc0 <__errno>:
 8018cc0:	4b01      	ldr	r3, [pc, #4]	; (8018cc8 <__errno+0x8>)
 8018cc2:	6818      	ldr	r0, [r3, #0]
 8018cc4:	4770      	bx	lr
 8018cc6:	bf00      	nop
 8018cc8:	20000398 	.word	0x20000398

08018ccc <__libc_init_array>:
 8018ccc:	b570      	push	{r4, r5, r6, lr}
 8018cce:	4e0d      	ldr	r6, [pc, #52]	; (8018d04 <__libc_init_array+0x38>)
 8018cd0:	4c0d      	ldr	r4, [pc, #52]	; (8018d08 <__libc_init_array+0x3c>)
 8018cd2:	1ba4      	subs	r4, r4, r6
 8018cd4:	10a4      	asrs	r4, r4, #2
 8018cd6:	2500      	movs	r5, #0
 8018cd8:	42a5      	cmp	r5, r4
 8018cda:	d109      	bne.n	8018cf0 <__libc_init_array+0x24>
 8018cdc:	4e0b      	ldr	r6, [pc, #44]	; (8018d0c <__libc_init_array+0x40>)
 8018cde:	4c0c      	ldr	r4, [pc, #48]	; (8018d10 <__libc_init_array+0x44>)
 8018ce0:	f000 fc54 	bl	801958c <_init>
 8018ce4:	1ba4      	subs	r4, r4, r6
 8018ce6:	10a4      	asrs	r4, r4, #2
 8018ce8:	2500      	movs	r5, #0
 8018cea:	42a5      	cmp	r5, r4
 8018cec:	d105      	bne.n	8018cfa <__libc_init_array+0x2e>
 8018cee:	bd70      	pop	{r4, r5, r6, pc}
 8018cf0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8018cf4:	4798      	blx	r3
 8018cf6:	3501      	adds	r5, #1
 8018cf8:	e7ee      	b.n	8018cd8 <__libc_init_array+0xc>
 8018cfa:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8018cfe:	4798      	blx	r3
 8018d00:	3501      	adds	r5, #1
 8018d02:	e7f2      	b.n	8018cea <__libc_init_array+0x1e>
 8018d04:	0801ff38 	.word	0x0801ff38
 8018d08:	0801ff38 	.word	0x0801ff38
 8018d0c:	0801ff38 	.word	0x0801ff38
 8018d10:	0801ff3c 	.word	0x0801ff3c

08018d14 <memcmp>:
 8018d14:	b530      	push	{r4, r5, lr}
 8018d16:	2400      	movs	r4, #0
 8018d18:	42a2      	cmp	r2, r4
 8018d1a:	d101      	bne.n	8018d20 <memcmp+0xc>
 8018d1c:	2000      	movs	r0, #0
 8018d1e:	e007      	b.n	8018d30 <memcmp+0x1c>
 8018d20:	5d03      	ldrb	r3, [r0, r4]
 8018d22:	3401      	adds	r4, #1
 8018d24:	190d      	adds	r5, r1, r4
 8018d26:	f815 5c01 	ldrb.w	r5, [r5, #-1]
 8018d2a:	42ab      	cmp	r3, r5
 8018d2c:	d0f4      	beq.n	8018d18 <memcmp+0x4>
 8018d2e:	1b58      	subs	r0, r3, r5
 8018d30:	bd30      	pop	{r4, r5, pc}

08018d32 <memcpy>:
 8018d32:	b510      	push	{r4, lr}
 8018d34:	1e43      	subs	r3, r0, #1
 8018d36:	440a      	add	r2, r1
 8018d38:	4291      	cmp	r1, r2
 8018d3a:	d100      	bne.n	8018d3e <memcpy+0xc>
 8018d3c:	bd10      	pop	{r4, pc}
 8018d3e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8018d42:	f803 4f01 	strb.w	r4, [r3, #1]!
 8018d46:	e7f7      	b.n	8018d38 <memcpy+0x6>

08018d48 <memmove>:
 8018d48:	4288      	cmp	r0, r1
 8018d4a:	b510      	push	{r4, lr}
 8018d4c:	eb01 0302 	add.w	r3, r1, r2
 8018d50:	d807      	bhi.n	8018d62 <memmove+0x1a>
 8018d52:	1e42      	subs	r2, r0, #1
 8018d54:	4299      	cmp	r1, r3
 8018d56:	d00a      	beq.n	8018d6e <memmove+0x26>
 8018d58:	f811 4b01 	ldrb.w	r4, [r1], #1
 8018d5c:	f802 4f01 	strb.w	r4, [r2, #1]!
 8018d60:	e7f8      	b.n	8018d54 <memmove+0xc>
 8018d62:	4283      	cmp	r3, r0
 8018d64:	d9f5      	bls.n	8018d52 <memmove+0xa>
 8018d66:	1881      	adds	r1, r0, r2
 8018d68:	1ad2      	subs	r2, r2, r3
 8018d6a:	42d3      	cmn	r3, r2
 8018d6c:	d100      	bne.n	8018d70 <memmove+0x28>
 8018d6e:	bd10      	pop	{r4, pc}
 8018d70:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8018d74:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8018d78:	e7f7      	b.n	8018d6a <memmove+0x22>

08018d7a <memset>:
 8018d7a:	4402      	add	r2, r0
 8018d7c:	4603      	mov	r3, r0
 8018d7e:	4293      	cmp	r3, r2
 8018d80:	d100      	bne.n	8018d84 <memset+0xa>
 8018d82:	4770      	bx	lr
 8018d84:	f803 1b01 	strb.w	r1, [r3], #1
 8018d88:	e7f9      	b.n	8018d7e <memset+0x4>
	...

08018d8c <siprintf>:
 8018d8c:	b40e      	push	{r1, r2, r3}
 8018d8e:	b500      	push	{lr}
 8018d90:	b09c      	sub	sp, #112	; 0x70
 8018d92:	ab1d      	add	r3, sp, #116	; 0x74
 8018d94:	9002      	str	r0, [sp, #8]
 8018d96:	9006      	str	r0, [sp, #24]
 8018d98:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8018d9c:	4809      	ldr	r0, [pc, #36]	; (8018dc4 <siprintf+0x38>)
 8018d9e:	9107      	str	r1, [sp, #28]
 8018da0:	9104      	str	r1, [sp, #16]
 8018da2:	4909      	ldr	r1, [pc, #36]	; (8018dc8 <siprintf+0x3c>)
 8018da4:	f853 2b04 	ldr.w	r2, [r3], #4
 8018da8:	9105      	str	r1, [sp, #20]
 8018daa:	6800      	ldr	r0, [r0, #0]
 8018dac:	9301      	str	r3, [sp, #4]
 8018dae:	a902      	add	r1, sp, #8
 8018db0:	f000 f884 	bl	8018ebc <_svfiprintf_r>
 8018db4:	9b02      	ldr	r3, [sp, #8]
 8018db6:	2200      	movs	r2, #0
 8018db8:	701a      	strb	r2, [r3, #0]
 8018dba:	b01c      	add	sp, #112	; 0x70
 8018dbc:	f85d eb04 	ldr.w	lr, [sp], #4
 8018dc0:	b003      	add	sp, #12
 8018dc2:	4770      	bx	lr
 8018dc4:	20000398 	.word	0x20000398
 8018dc8:	ffff0208 	.word	0xffff0208

08018dcc <strcpy>:
 8018dcc:	4603      	mov	r3, r0
 8018dce:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018dd2:	f803 2b01 	strb.w	r2, [r3], #1
 8018dd6:	2a00      	cmp	r2, #0
 8018dd8:	d1f9      	bne.n	8018dce <strcpy+0x2>
 8018dda:	4770      	bx	lr

08018ddc <strncpy>:
 8018ddc:	b570      	push	{r4, r5, r6, lr}
 8018dde:	3901      	subs	r1, #1
 8018de0:	4604      	mov	r4, r0
 8018de2:	b902      	cbnz	r2, 8018de6 <strncpy+0xa>
 8018de4:	bd70      	pop	{r4, r5, r6, pc}
 8018de6:	4623      	mov	r3, r4
 8018de8:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8018dec:	f803 5b01 	strb.w	r5, [r3], #1
 8018df0:	1e56      	subs	r6, r2, #1
 8018df2:	b92d      	cbnz	r5, 8018e00 <strncpy+0x24>
 8018df4:	4414      	add	r4, r2
 8018df6:	42a3      	cmp	r3, r4
 8018df8:	d0f4      	beq.n	8018de4 <strncpy+0x8>
 8018dfa:	f803 5b01 	strb.w	r5, [r3], #1
 8018dfe:	e7fa      	b.n	8018df6 <strncpy+0x1a>
 8018e00:	461c      	mov	r4, r3
 8018e02:	4632      	mov	r2, r6
 8018e04:	e7ed      	b.n	8018de2 <strncpy+0x6>

08018e06 <__ssputs_r>:
 8018e06:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018e0a:	688e      	ldr	r6, [r1, #8]
 8018e0c:	429e      	cmp	r6, r3
 8018e0e:	4682      	mov	sl, r0
 8018e10:	460c      	mov	r4, r1
 8018e12:	4690      	mov	r8, r2
 8018e14:	4699      	mov	r9, r3
 8018e16:	d837      	bhi.n	8018e88 <__ssputs_r+0x82>
 8018e18:	898a      	ldrh	r2, [r1, #12]
 8018e1a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8018e1e:	d031      	beq.n	8018e84 <__ssputs_r+0x7e>
 8018e20:	6825      	ldr	r5, [r4, #0]
 8018e22:	6909      	ldr	r1, [r1, #16]
 8018e24:	1a6f      	subs	r7, r5, r1
 8018e26:	6965      	ldr	r5, [r4, #20]
 8018e28:	2302      	movs	r3, #2
 8018e2a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018e2e:	fb95 f5f3 	sdiv	r5, r5, r3
 8018e32:	f109 0301 	add.w	r3, r9, #1
 8018e36:	443b      	add	r3, r7
 8018e38:	429d      	cmp	r5, r3
 8018e3a:	bf38      	it	cc
 8018e3c:	461d      	movcc	r5, r3
 8018e3e:	0553      	lsls	r3, r2, #21
 8018e40:	d530      	bpl.n	8018ea4 <__ssputs_r+0x9e>
 8018e42:	4629      	mov	r1, r5
 8018e44:	f000 fb08 	bl	8019458 <_malloc_r>
 8018e48:	4606      	mov	r6, r0
 8018e4a:	b950      	cbnz	r0, 8018e62 <__ssputs_r+0x5c>
 8018e4c:	230c      	movs	r3, #12
 8018e4e:	f8ca 3000 	str.w	r3, [sl]
 8018e52:	89a3      	ldrh	r3, [r4, #12]
 8018e54:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8018e58:	81a3      	strh	r3, [r4, #12]
 8018e5a:	f04f 30ff 	mov.w	r0, #4294967295
 8018e5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018e62:	463a      	mov	r2, r7
 8018e64:	6921      	ldr	r1, [r4, #16]
 8018e66:	f7ff ff64 	bl	8018d32 <memcpy>
 8018e6a:	89a3      	ldrh	r3, [r4, #12]
 8018e6c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8018e70:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8018e74:	81a3      	strh	r3, [r4, #12]
 8018e76:	6126      	str	r6, [r4, #16]
 8018e78:	6165      	str	r5, [r4, #20]
 8018e7a:	443e      	add	r6, r7
 8018e7c:	1bed      	subs	r5, r5, r7
 8018e7e:	6026      	str	r6, [r4, #0]
 8018e80:	60a5      	str	r5, [r4, #8]
 8018e82:	464e      	mov	r6, r9
 8018e84:	454e      	cmp	r6, r9
 8018e86:	d900      	bls.n	8018e8a <__ssputs_r+0x84>
 8018e88:	464e      	mov	r6, r9
 8018e8a:	4632      	mov	r2, r6
 8018e8c:	4641      	mov	r1, r8
 8018e8e:	6820      	ldr	r0, [r4, #0]
 8018e90:	f7ff ff5a 	bl	8018d48 <memmove>
 8018e94:	68a3      	ldr	r3, [r4, #8]
 8018e96:	1b9b      	subs	r3, r3, r6
 8018e98:	60a3      	str	r3, [r4, #8]
 8018e9a:	6823      	ldr	r3, [r4, #0]
 8018e9c:	441e      	add	r6, r3
 8018e9e:	6026      	str	r6, [r4, #0]
 8018ea0:	2000      	movs	r0, #0
 8018ea2:	e7dc      	b.n	8018e5e <__ssputs_r+0x58>
 8018ea4:	462a      	mov	r2, r5
 8018ea6:	f000 fb31 	bl	801950c <_realloc_r>
 8018eaa:	4606      	mov	r6, r0
 8018eac:	2800      	cmp	r0, #0
 8018eae:	d1e2      	bne.n	8018e76 <__ssputs_r+0x70>
 8018eb0:	6921      	ldr	r1, [r4, #16]
 8018eb2:	4650      	mov	r0, sl
 8018eb4:	f000 fa82 	bl	80193bc <_free_r>
 8018eb8:	e7c8      	b.n	8018e4c <__ssputs_r+0x46>
	...

08018ebc <_svfiprintf_r>:
 8018ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ec0:	461d      	mov	r5, r3
 8018ec2:	898b      	ldrh	r3, [r1, #12]
 8018ec4:	061f      	lsls	r7, r3, #24
 8018ec6:	b09d      	sub	sp, #116	; 0x74
 8018ec8:	4680      	mov	r8, r0
 8018eca:	460c      	mov	r4, r1
 8018ecc:	4616      	mov	r6, r2
 8018ece:	d50f      	bpl.n	8018ef0 <_svfiprintf_r+0x34>
 8018ed0:	690b      	ldr	r3, [r1, #16]
 8018ed2:	b96b      	cbnz	r3, 8018ef0 <_svfiprintf_r+0x34>
 8018ed4:	2140      	movs	r1, #64	; 0x40
 8018ed6:	f000 fabf 	bl	8019458 <_malloc_r>
 8018eda:	6020      	str	r0, [r4, #0]
 8018edc:	6120      	str	r0, [r4, #16]
 8018ede:	b928      	cbnz	r0, 8018eec <_svfiprintf_r+0x30>
 8018ee0:	230c      	movs	r3, #12
 8018ee2:	f8c8 3000 	str.w	r3, [r8]
 8018ee6:	f04f 30ff 	mov.w	r0, #4294967295
 8018eea:	e0c8      	b.n	801907e <_svfiprintf_r+0x1c2>
 8018eec:	2340      	movs	r3, #64	; 0x40
 8018eee:	6163      	str	r3, [r4, #20]
 8018ef0:	2300      	movs	r3, #0
 8018ef2:	9309      	str	r3, [sp, #36]	; 0x24
 8018ef4:	2320      	movs	r3, #32
 8018ef6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8018efa:	2330      	movs	r3, #48	; 0x30
 8018efc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8018f00:	9503      	str	r5, [sp, #12]
 8018f02:	f04f 0b01 	mov.w	fp, #1
 8018f06:	4637      	mov	r7, r6
 8018f08:	463d      	mov	r5, r7
 8018f0a:	f815 3b01 	ldrb.w	r3, [r5], #1
 8018f0e:	b10b      	cbz	r3, 8018f14 <_svfiprintf_r+0x58>
 8018f10:	2b25      	cmp	r3, #37	; 0x25
 8018f12:	d13e      	bne.n	8018f92 <_svfiprintf_r+0xd6>
 8018f14:	ebb7 0a06 	subs.w	sl, r7, r6
 8018f18:	d00b      	beq.n	8018f32 <_svfiprintf_r+0x76>
 8018f1a:	4653      	mov	r3, sl
 8018f1c:	4632      	mov	r2, r6
 8018f1e:	4621      	mov	r1, r4
 8018f20:	4640      	mov	r0, r8
 8018f22:	f7ff ff70 	bl	8018e06 <__ssputs_r>
 8018f26:	3001      	adds	r0, #1
 8018f28:	f000 80a4 	beq.w	8019074 <_svfiprintf_r+0x1b8>
 8018f2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f2e:	4453      	add	r3, sl
 8018f30:	9309      	str	r3, [sp, #36]	; 0x24
 8018f32:	783b      	ldrb	r3, [r7, #0]
 8018f34:	2b00      	cmp	r3, #0
 8018f36:	f000 809d 	beq.w	8019074 <_svfiprintf_r+0x1b8>
 8018f3a:	2300      	movs	r3, #0
 8018f3c:	f04f 32ff 	mov.w	r2, #4294967295
 8018f40:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8018f44:	9304      	str	r3, [sp, #16]
 8018f46:	9307      	str	r3, [sp, #28]
 8018f48:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8018f4c:	931a      	str	r3, [sp, #104]	; 0x68
 8018f4e:	462f      	mov	r7, r5
 8018f50:	2205      	movs	r2, #5
 8018f52:	f817 1b01 	ldrb.w	r1, [r7], #1
 8018f56:	4850      	ldr	r0, [pc, #320]	; (8019098 <_svfiprintf_r+0x1dc>)
 8018f58:	f7e7 f962 	bl	8000220 <memchr>
 8018f5c:	9b04      	ldr	r3, [sp, #16]
 8018f5e:	b9d0      	cbnz	r0, 8018f96 <_svfiprintf_r+0xda>
 8018f60:	06d9      	lsls	r1, r3, #27
 8018f62:	bf44      	itt	mi
 8018f64:	2220      	movmi	r2, #32
 8018f66:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8018f6a:	071a      	lsls	r2, r3, #28
 8018f6c:	bf44      	itt	mi
 8018f6e:	222b      	movmi	r2, #43	; 0x2b
 8018f70:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8018f74:	782a      	ldrb	r2, [r5, #0]
 8018f76:	2a2a      	cmp	r2, #42	; 0x2a
 8018f78:	d015      	beq.n	8018fa6 <_svfiprintf_r+0xea>
 8018f7a:	9a07      	ldr	r2, [sp, #28]
 8018f7c:	462f      	mov	r7, r5
 8018f7e:	2000      	movs	r0, #0
 8018f80:	250a      	movs	r5, #10
 8018f82:	4639      	mov	r1, r7
 8018f84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8018f88:	3b30      	subs	r3, #48	; 0x30
 8018f8a:	2b09      	cmp	r3, #9
 8018f8c:	d94d      	bls.n	801902a <_svfiprintf_r+0x16e>
 8018f8e:	b1b8      	cbz	r0, 8018fc0 <_svfiprintf_r+0x104>
 8018f90:	e00f      	b.n	8018fb2 <_svfiprintf_r+0xf6>
 8018f92:	462f      	mov	r7, r5
 8018f94:	e7b8      	b.n	8018f08 <_svfiprintf_r+0x4c>
 8018f96:	4a40      	ldr	r2, [pc, #256]	; (8019098 <_svfiprintf_r+0x1dc>)
 8018f98:	1a80      	subs	r0, r0, r2
 8018f9a:	fa0b f000 	lsl.w	r0, fp, r0
 8018f9e:	4318      	orrs	r0, r3
 8018fa0:	9004      	str	r0, [sp, #16]
 8018fa2:	463d      	mov	r5, r7
 8018fa4:	e7d3      	b.n	8018f4e <_svfiprintf_r+0x92>
 8018fa6:	9a03      	ldr	r2, [sp, #12]
 8018fa8:	1d11      	adds	r1, r2, #4
 8018faa:	6812      	ldr	r2, [r2, #0]
 8018fac:	9103      	str	r1, [sp, #12]
 8018fae:	2a00      	cmp	r2, #0
 8018fb0:	db01      	blt.n	8018fb6 <_svfiprintf_r+0xfa>
 8018fb2:	9207      	str	r2, [sp, #28]
 8018fb4:	e004      	b.n	8018fc0 <_svfiprintf_r+0x104>
 8018fb6:	4252      	negs	r2, r2
 8018fb8:	f043 0302 	orr.w	r3, r3, #2
 8018fbc:	9207      	str	r2, [sp, #28]
 8018fbe:	9304      	str	r3, [sp, #16]
 8018fc0:	783b      	ldrb	r3, [r7, #0]
 8018fc2:	2b2e      	cmp	r3, #46	; 0x2e
 8018fc4:	d10c      	bne.n	8018fe0 <_svfiprintf_r+0x124>
 8018fc6:	787b      	ldrb	r3, [r7, #1]
 8018fc8:	2b2a      	cmp	r3, #42	; 0x2a
 8018fca:	d133      	bne.n	8019034 <_svfiprintf_r+0x178>
 8018fcc:	9b03      	ldr	r3, [sp, #12]
 8018fce:	1d1a      	adds	r2, r3, #4
 8018fd0:	681b      	ldr	r3, [r3, #0]
 8018fd2:	9203      	str	r2, [sp, #12]
 8018fd4:	2b00      	cmp	r3, #0
 8018fd6:	bfb8      	it	lt
 8018fd8:	f04f 33ff 	movlt.w	r3, #4294967295
 8018fdc:	3702      	adds	r7, #2
 8018fde:	9305      	str	r3, [sp, #20]
 8018fe0:	4d2e      	ldr	r5, [pc, #184]	; (801909c <_svfiprintf_r+0x1e0>)
 8018fe2:	7839      	ldrb	r1, [r7, #0]
 8018fe4:	2203      	movs	r2, #3
 8018fe6:	4628      	mov	r0, r5
 8018fe8:	f7e7 f91a 	bl	8000220 <memchr>
 8018fec:	b138      	cbz	r0, 8018ffe <_svfiprintf_r+0x142>
 8018fee:	2340      	movs	r3, #64	; 0x40
 8018ff0:	1b40      	subs	r0, r0, r5
 8018ff2:	fa03 f000 	lsl.w	r0, r3, r0
 8018ff6:	9b04      	ldr	r3, [sp, #16]
 8018ff8:	4303      	orrs	r3, r0
 8018ffa:	3701      	adds	r7, #1
 8018ffc:	9304      	str	r3, [sp, #16]
 8018ffe:	7839      	ldrb	r1, [r7, #0]
 8019000:	4827      	ldr	r0, [pc, #156]	; (80190a0 <_svfiprintf_r+0x1e4>)
 8019002:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8019006:	2206      	movs	r2, #6
 8019008:	1c7e      	adds	r6, r7, #1
 801900a:	f7e7 f909 	bl	8000220 <memchr>
 801900e:	2800      	cmp	r0, #0
 8019010:	d038      	beq.n	8019084 <_svfiprintf_r+0x1c8>
 8019012:	4b24      	ldr	r3, [pc, #144]	; (80190a4 <_svfiprintf_r+0x1e8>)
 8019014:	bb13      	cbnz	r3, 801905c <_svfiprintf_r+0x1a0>
 8019016:	9b03      	ldr	r3, [sp, #12]
 8019018:	3307      	adds	r3, #7
 801901a:	f023 0307 	bic.w	r3, r3, #7
 801901e:	3308      	adds	r3, #8
 8019020:	9303      	str	r3, [sp, #12]
 8019022:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019024:	444b      	add	r3, r9
 8019026:	9309      	str	r3, [sp, #36]	; 0x24
 8019028:	e76d      	b.n	8018f06 <_svfiprintf_r+0x4a>
 801902a:	fb05 3202 	mla	r2, r5, r2, r3
 801902e:	2001      	movs	r0, #1
 8019030:	460f      	mov	r7, r1
 8019032:	e7a6      	b.n	8018f82 <_svfiprintf_r+0xc6>
 8019034:	2300      	movs	r3, #0
 8019036:	3701      	adds	r7, #1
 8019038:	9305      	str	r3, [sp, #20]
 801903a:	4619      	mov	r1, r3
 801903c:	250a      	movs	r5, #10
 801903e:	4638      	mov	r0, r7
 8019040:	f810 2b01 	ldrb.w	r2, [r0], #1
 8019044:	3a30      	subs	r2, #48	; 0x30
 8019046:	2a09      	cmp	r2, #9
 8019048:	d903      	bls.n	8019052 <_svfiprintf_r+0x196>
 801904a:	2b00      	cmp	r3, #0
 801904c:	d0c8      	beq.n	8018fe0 <_svfiprintf_r+0x124>
 801904e:	9105      	str	r1, [sp, #20]
 8019050:	e7c6      	b.n	8018fe0 <_svfiprintf_r+0x124>
 8019052:	fb05 2101 	mla	r1, r5, r1, r2
 8019056:	2301      	movs	r3, #1
 8019058:	4607      	mov	r7, r0
 801905a:	e7f0      	b.n	801903e <_svfiprintf_r+0x182>
 801905c:	ab03      	add	r3, sp, #12
 801905e:	9300      	str	r3, [sp, #0]
 8019060:	4622      	mov	r2, r4
 8019062:	4b11      	ldr	r3, [pc, #68]	; (80190a8 <_svfiprintf_r+0x1ec>)
 8019064:	a904      	add	r1, sp, #16
 8019066:	4640      	mov	r0, r8
 8019068:	f3af 8000 	nop.w
 801906c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8019070:	4681      	mov	r9, r0
 8019072:	d1d6      	bne.n	8019022 <_svfiprintf_r+0x166>
 8019074:	89a3      	ldrh	r3, [r4, #12]
 8019076:	065b      	lsls	r3, r3, #25
 8019078:	f53f af35 	bmi.w	8018ee6 <_svfiprintf_r+0x2a>
 801907c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801907e:	b01d      	add	sp, #116	; 0x74
 8019080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019084:	ab03      	add	r3, sp, #12
 8019086:	9300      	str	r3, [sp, #0]
 8019088:	4622      	mov	r2, r4
 801908a:	4b07      	ldr	r3, [pc, #28]	; (80190a8 <_svfiprintf_r+0x1ec>)
 801908c:	a904      	add	r1, sp, #16
 801908e:	4640      	mov	r0, r8
 8019090:	f000 f882 	bl	8019198 <_printf_i>
 8019094:	e7ea      	b.n	801906c <_svfiprintf_r+0x1b0>
 8019096:	bf00      	nop
 8019098:	0801fefc 	.word	0x0801fefc
 801909c:	0801ff02 	.word	0x0801ff02
 80190a0:	0801ff06 	.word	0x0801ff06
 80190a4:	00000000 	.word	0x00000000
 80190a8:	08018e07 	.word	0x08018e07

080190ac <_printf_common>:
 80190ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80190b0:	4691      	mov	r9, r2
 80190b2:	461f      	mov	r7, r3
 80190b4:	688a      	ldr	r2, [r1, #8]
 80190b6:	690b      	ldr	r3, [r1, #16]
 80190b8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80190bc:	4293      	cmp	r3, r2
 80190be:	bfb8      	it	lt
 80190c0:	4613      	movlt	r3, r2
 80190c2:	f8c9 3000 	str.w	r3, [r9]
 80190c6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80190ca:	4606      	mov	r6, r0
 80190cc:	460c      	mov	r4, r1
 80190ce:	b112      	cbz	r2, 80190d6 <_printf_common+0x2a>
 80190d0:	3301      	adds	r3, #1
 80190d2:	f8c9 3000 	str.w	r3, [r9]
 80190d6:	6823      	ldr	r3, [r4, #0]
 80190d8:	0699      	lsls	r1, r3, #26
 80190da:	bf42      	ittt	mi
 80190dc:	f8d9 3000 	ldrmi.w	r3, [r9]
 80190e0:	3302      	addmi	r3, #2
 80190e2:	f8c9 3000 	strmi.w	r3, [r9]
 80190e6:	6825      	ldr	r5, [r4, #0]
 80190e8:	f015 0506 	ands.w	r5, r5, #6
 80190ec:	d107      	bne.n	80190fe <_printf_common+0x52>
 80190ee:	f104 0a19 	add.w	sl, r4, #25
 80190f2:	68e3      	ldr	r3, [r4, #12]
 80190f4:	f8d9 2000 	ldr.w	r2, [r9]
 80190f8:	1a9b      	subs	r3, r3, r2
 80190fa:	42ab      	cmp	r3, r5
 80190fc:	dc28      	bgt.n	8019150 <_printf_common+0xa4>
 80190fe:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8019102:	6822      	ldr	r2, [r4, #0]
 8019104:	3300      	adds	r3, #0
 8019106:	bf18      	it	ne
 8019108:	2301      	movne	r3, #1
 801910a:	0692      	lsls	r2, r2, #26
 801910c:	d42d      	bmi.n	801916a <_printf_common+0xbe>
 801910e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8019112:	4639      	mov	r1, r7
 8019114:	4630      	mov	r0, r6
 8019116:	47c0      	blx	r8
 8019118:	3001      	adds	r0, #1
 801911a:	d020      	beq.n	801915e <_printf_common+0xb2>
 801911c:	6823      	ldr	r3, [r4, #0]
 801911e:	68e5      	ldr	r5, [r4, #12]
 8019120:	f8d9 2000 	ldr.w	r2, [r9]
 8019124:	f003 0306 	and.w	r3, r3, #6
 8019128:	2b04      	cmp	r3, #4
 801912a:	bf08      	it	eq
 801912c:	1aad      	subeq	r5, r5, r2
 801912e:	68a3      	ldr	r3, [r4, #8]
 8019130:	6922      	ldr	r2, [r4, #16]
 8019132:	bf0c      	ite	eq
 8019134:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8019138:	2500      	movne	r5, #0
 801913a:	4293      	cmp	r3, r2
 801913c:	bfc4      	itt	gt
 801913e:	1a9b      	subgt	r3, r3, r2
 8019140:	18ed      	addgt	r5, r5, r3
 8019142:	f04f 0900 	mov.w	r9, #0
 8019146:	341a      	adds	r4, #26
 8019148:	454d      	cmp	r5, r9
 801914a:	d11a      	bne.n	8019182 <_printf_common+0xd6>
 801914c:	2000      	movs	r0, #0
 801914e:	e008      	b.n	8019162 <_printf_common+0xb6>
 8019150:	2301      	movs	r3, #1
 8019152:	4652      	mov	r2, sl
 8019154:	4639      	mov	r1, r7
 8019156:	4630      	mov	r0, r6
 8019158:	47c0      	blx	r8
 801915a:	3001      	adds	r0, #1
 801915c:	d103      	bne.n	8019166 <_printf_common+0xba>
 801915e:	f04f 30ff 	mov.w	r0, #4294967295
 8019162:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019166:	3501      	adds	r5, #1
 8019168:	e7c3      	b.n	80190f2 <_printf_common+0x46>
 801916a:	18e1      	adds	r1, r4, r3
 801916c:	1c5a      	adds	r2, r3, #1
 801916e:	2030      	movs	r0, #48	; 0x30
 8019170:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8019174:	4422      	add	r2, r4
 8019176:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801917a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801917e:	3302      	adds	r3, #2
 8019180:	e7c5      	b.n	801910e <_printf_common+0x62>
 8019182:	2301      	movs	r3, #1
 8019184:	4622      	mov	r2, r4
 8019186:	4639      	mov	r1, r7
 8019188:	4630      	mov	r0, r6
 801918a:	47c0      	blx	r8
 801918c:	3001      	adds	r0, #1
 801918e:	d0e6      	beq.n	801915e <_printf_common+0xb2>
 8019190:	f109 0901 	add.w	r9, r9, #1
 8019194:	e7d8      	b.n	8019148 <_printf_common+0x9c>
	...

08019198 <_printf_i>:
 8019198:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801919c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80191a0:	460c      	mov	r4, r1
 80191a2:	7e09      	ldrb	r1, [r1, #24]
 80191a4:	b085      	sub	sp, #20
 80191a6:	296e      	cmp	r1, #110	; 0x6e
 80191a8:	4617      	mov	r7, r2
 80191aa:	4606      	mov	r6, r0
 80191ac:	4698      	mov	r8, r3
 80191ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80191b0:	f000 80b3 	beq.w	801931a <_printf_i+0x182>
 80191b4:	d822      	bhi.n	80191fc <_printf_i+0x64>
 80191b6:	2963      	cmp	r1, #99	; 0x63
 80191b8:	d036      	beq.n	8019228 <_printf_i+0x90>
 80191ba:	d80a      	bhi.n	80191d2 <_printf_i+0x3a>
 80191bc:	2900      	cmp	r1, #0
 80191be:	f000 80b9 	beq.w	8019334 <_printf_i+0x19c>
 80191c2:	2958      	cmp	r1, #88	; 0x58
 80191c4:	f000 8083 	beq.w	80192ce <_printf_i+0x136>
 80191c8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80191cc:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80191d0:	e032      	b.n	8019238 <_printf_i+0xa0>
 80191d2:	2964      	cmp	r1, #100	; 0x64
 80191d4:	d001      	beq.n	80191da <_printf_i+0x42>
 80191d6:	2969      	cmp	r1, #105	; 0x69
 80191d8:	d1f6      	bne.n	80191c8 <_printf_i+0x30>
 80191da:	6820      	ldr	r0, [r4, #0]
 80191dc:	6813      	ldr	r3, [r2, #0]
 80191de:	0605      	lsls	r5, r0, #24
 80191e0:	f103 0104 	add.w	r1, r3, #4
 80191e4:	d52a      	bpl.n	801923c <_printf_i+0xa4>
 80191e6:	681b      	ldr	r3, [r3, #0]
 80191e8:	6011      	str	r1, [r2, #0]
 80191ea:	2b00      	cmp	r3, #0
 80191ec:	da03      	bge.n	80191f6 <_printf_i+0x5e>
 80191ee:	222d      	movs	r2, #45	; 0x2d
 80191f0:	425b      	negs	r3, r3
 80191f2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80191f6:	486f      	ldr	r0, [pc, #444]	; (80193b4 <_printf_i+0x21c>)
 80191f8:	220a      	movs	r2, #10
 80191fa:	e039      	b.n	8019270 <_printf_i+0xd8>
 80191fc:	2973      	cmp	r1, #115	; 0x73
 80191fe:	f000 809d 	beq.w	801933c <_printf_i+0x1a4>
 8019202:	d808      	bhi.n	8019216 <_printf_i+0x7e>
 8019204:	296f      	cmp	r1, #111	; 0x6f
 8019206:	d020      	beq.n	801924a <_printf_i+0xb2>
 8019208:	2970      	cmp	r1, #112	; 0x70
 801920a:	d1dd      	bne.n	80191c8 <_printf_i+0x30>
 801920c:	6823      	ldr	r3, [r4, #0]
 801920e:	f043 0320 	orr.w	r3, r3, #32
 8019212:	6023      	str	r3, [r4, #0]
 8019214:	e003      	b.n	801921e <_printf_i+0x86>
 8019216:	2975      	cmp	r1, #117	; 0x75
 8019218:	d017      	beq.n	801924a <_printf_i+0xb2>
 801921a:	2978      	cmp	r1, #120	; 0x78
 801921c:	d1d4      	bne.n	80191c8 <_printf_i+0x30>
 801921e:	2378      	movs	r3, #120	; 0x78
 8019220:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8019224:	4864      	ldr	r0, [pc, #400]	; (80193b8 <_printf_i+0x220>)
 8019226:	e055      	b.n	80192d4 <_printf_i+0x13c>
 8019228:	6813      	ldr	r3, [r2, #0]
 801922a:	1d19      	adds	r1, r3, #4
 801922c:	681b      	ldr	r3, [r3, #0]
 801922e:	6011      	str	r1, [r2, #0]
 8019230:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8019234:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8019238:	2301      	movs	r3, #1
 801923a:	e08c      	b.n	8019356 <_printf_i+0x1be>
 801923c:	681b      	ldr	r3, [r3, #0]
 801923e:	6011      	str	r1, [r2, #0]
 8019240:	f010 0f40 	tst.w	r0, #64	; 0x40
 8019244:	bf18      	it	ne
 8019246:	b21b      	sxthne	r3, r3
 8019248:	e7cf      	b.n	80191ea <_printf_i+0x52>
 801924a:	6813      	ldr	r3, [r2, #0]
 801924c:	6825      	ldr	r5, [r4, #0]
 801924e:	1d18      	adds	r0, r3, #4
 8019250:	6010      	str	r0, [r2, #0]
 8019252:	0628      	lsls	r0, r5, #24
 8019254:	d501      	bpl.n	801925a <_printf_i+0xc2>
 8019256:	681b      	ldr	r3, [r3, #0]
 8019258:	e002      	b.n	8019260 <_printf_i+0xc8>
 801925a:	0668      	lsls	r0, r5, #25
 801925c:	d5fb      	bpl.n	8019256 <_printf_i+0xbe>
 801925e:	881b      	ldrh	r3, [r3, #0]
 8019260:	4854      	ldr	r0, [pc, #336]	; (80193b4 <_printf_i+0x21c>)
 8019262:	296f      	cmp	r1, #111	; 0x6f
 8019264:	bf14      	ite	ne
 8019266:	220a      	movne	r2, #10
 8019268:	2208      	moveq	r2, #8
 801926a:	2100      	movs	r1, #0
 801926c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8019270:	6865      	ldr	r5, [r4, #4]
 8019272:	60a5      	str	r5, [r4, #8]
 8019274:	2d00      	cmp	r5, #0
 8019276:	f2c0 8095 	blt.w	80193a4 <_printf_i+0x20c>
 801927a:	6821      	ldr	r1, [r4, #0]
 801927c:	f021 0104 	bic.w	r1, r1, #4
 8019280:	6021      	str	r1, [r4, #0]
 8019282:	2b00      	cmp	r3, #0
 8019284:	d13d      	bne.n	8019302 <_printf_i+0x16a>
 8019286:	2d00      	cmp	r5, #0
 8019288:	f040 808e 	bne.w	80193a8 <_printf_i+0x210>
 801928c:	4665      	mov	r5, ip
 801928e:	2a08      	cmp	r2, #8
 8019290:	d10b      	bne.n	80192aa <_printf_i+0x112>
 8019292:	6823      	ldr	r3, [r4, #0]
 8019294:	07db      	lsls	r3, r3, #31
 8019296:	d508      	bpl.n	80192aa <_printf_i+0x112>
 8019298:	6923      	ldr	r3, [r4, #16]
 801929a:	6862      	ldr	r2, [r4, #4]
 801929c:	429a      	cmp	r2, r3
 801929e:	bfde      	ittt	le
 80192a0:	2330      	movle	r3, #48	; 0x30
 80192a2:	f805 3c01 	strble.w	r3, [r5, #-1]
 80192a6:	f105 35ff 	addle.w	r5, r5, #4294967295
 80192aa:	ebac 0305 	sub.w	r3, ip, r5
 80192ae:	6123      	str	r3, [r4, #16]
 80192b0:	f8cd 8000 	str.w	r8, [sp]
 80192b4:	463b      	mov	r3, r7
 80192b6:	aa03      	add	r2, sp, #12
 80192b8:	4621      	mov	r1, r4
 80192ba:	4630      	mov	r0, r6
 80192bc:	f7ff fef6 	bl	80190ac <_printf_common>
 80192c0:	3001      	adds	r0, #1
 80192c2:	d14d      	bne.n	8019360 <_printf_i+0x1c8>
 80192c4:	f04f 30ff 	mov.w	r0, #4294967295
 80192c8:	b005      	add	sp, #20
 80192ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80192ce:	4839      	ldr	r0, [pc, #228]	; (80193b4 <_printf_i+0x21c>)
 80192d0:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80192d4:	6813      	ldr	r3, [r2, #0]
 80192d6:	6821      	ldr	r1, [r4, #0]
 80192d8:	1d1d      	adds	r5, r3, #4
 80192da:	681b      	ldr	r3, [r3, #0]
 80192dc:	6015      	str	r5, [r2, #0]
 80192de:	060a      	lsls	r2, r1, #24
 80192e0:	d50b      	bpl.n	80192fa <_printf_i+0x162>
 80192e2:	07ca      	lsls	r2, r1, #31
 80192e4:	bf44      	itt	mi
 80192e6:	f041 0120 	orrmi.w	r1, r1, #32
 80192ea:	6021      	strmi	r1, [r4, #0]
 80192ec:	b91b      	cbnz	r3, 80192f6 <_printf_i+0x15e>
 80192ee:	6822      	ldr	r2, [r4, #0]
 80192f0:	f022 0220 	bic.w	r2, r2, #32
 80192f4:	6022      	str	r2, [r4, #0]
 80192f6:	2210      	movs	r2, #16
 80192f8:	e7b7      	b.n	801926a <_printf_i+0xd2>
 80192fa:	064d      	lsls	r5, r1, #25
 80192fc:	bf48      	it	mi
 80192fe:	b29b      	uxthmi	r3, r3
 8019300:	e7ef      	b.n	80192e2 <_printf_i+0x14a>
 8019302:	4665      	mov	r5, ip
 8019304:	fbb3 f1f2 	udiv	r1, r3, r2
 8019308:	fb02 3311 	mls	r3, r2, r1, r3
 801930c:	5cc3      	ldrb	r3, [r0, r3]
 801930e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8019312:	460b      	mov	r3, r1
 8019314:	2900      	cmp	r1, #0
 8019316:	d1f5      	bne.n	8019304 <_printf_i+0x16c>
 8019318:	e7b9      	b.n	801928e <_printf_i+0xf6>
 801931a:	6813      	ldr	r3, [r2, #0]
 801931c:	6825      	ldr	r5, [r4, #0]
 801931e:	6961      	ldr	r1, [r4, #20]
 8019320:	1d18      	adds	r0, r3, #4
 8019322:	6010      	str	r0, [r2, #0]
 8019324:	0628      	lsls	r0, r5, #24
 8019326:	681b      	ldr	r3, [r3, #0]
 8019328:	d501      	bpl.n	801932e <_printf_i+0x196>
 801932a:	6019      	str	r1, [r3, #0]
 801932c:	e002      	b.n	8019334 <_printf_i+0x19c>
 801932e:	066a      	lsls	r2, r5, #25
 8019330:	d5fb      	bpl.n	801932a <_printf_i+0x192>
 8019332:	8019      	strh	r1, [r3, #0]
 8019334:	2300      	movs	r3, #0
 8019336:	6123      	str	r3, [r4, #16]
 8019338:	4665      	mov	r5, ip
 801933a:	e7b9      	b.n	80192b0 <_printf_i+0x118>
 801933c:	6813      	ldr	r3, [r2, #0]
 801933e:	1d19      	adds	r1, r3, #4
 8019340:	6011      	str	r1, [r2, #0]
 8019342:	681d      	ldr	r5, [r3, #0]
 8019344:	6862      	ldr	r2, [r4, #4]
 8019346:	2100      	movs	r1, #0
 8019348:	4628      	mov	r0, r5
 801934a:	f7e6 ff69 	bl	8000220 <memchr>
 801934e:	b108      	cbz	r0, 8019354 <_printf_i+0x1bc>
 8019350:	1b40      	subs	r0, r0, r5
 8019352:	6060      	str	r0, [r4, #4]
 8019354:	6863      	ldr	r3, [r4, #4]
 8019356:	6123      	str	r3, [r4, #16]
 8019358:	2300      	movs	r3, #0
 801935a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801935e:	e7a7      	b.n	80192b0 <_printf_i+0x118>
 8019360:	6923      	ldr	r3, [r4, #16]
 8019362:	462a      	mov	r2, r5
 8019364:	4639      	mov	r1, r7
 8019366:	4630      	mov	r0, r6
 8019368:	47c0      	blx	r8
 801936a:	3001      	adds	r0, #1
 801936c:	d0aa      	beq.n	80192c4 <_printf_i+0x12c>
 801936e:	6823      	ldr	r3, [r4, #0]
 8019370:	079b      	lsls	r3, r3, #30
 8019372:	d413      	bmi.n	801939c <_printf_i+0x204>
 8019374:	68e0      	ldr	r0, [r4, #12]
 8019376:	9b03      	ldr	r3, [sp, #12]
 8019378:	4298      	cmp	r0, r3
 801937a:	bfb8      	it	lt
 801937c:	4618      	movlt	r0, r3
 801937e:	e7a3      	b.n	80192c8 <_printf_i+0x130>
 8019380:	2301      	movs	r3, #1
 8019382:	464a      	mov	r2, r9
 8019384:	4639      	mov	r1, r7
 8019386:	4630      	mov	r0, r6
 8019388:	47c0      	blx	r8
 801938a:	3001      	adds	r0, #1
 801938c:	d09a      	beq.n	80192c4 <_printf_i+0x12c>
 801938e:	3501      	adds	r5, #1
 8019390:	68e3      	ldr	r3, [r4, #12]
 8019392:	9a03      	ldr	r2, [sp, #12]
 8019394:	1a9b      	subs	r3, r3, r2
 8019396:	42ab      	cmp	r3, r5
 8019398:	dcf2      	bgt.n	8019380 <_printf_i+0x1e8>
 801939a:	e7eb      	b.n	8019374 <_printf_i+0x1dc>
 801939c:	2500      	movs	r5, #0
 801939e:	f104 0919 	add.w	r9, r4, #25
 80193a2:	e7f5      	b.n	8019390 <_printf_i+0x1f8>
 80193a4:	2b00      	cmp	r3, #0
 80193a6:	d1ac      	bne.n	8019302 <_printf_i+0x16a>
 80193a8:	7803      	ldrb	r3, [r0, #0]
 80193aa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80193ae:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80193b2:	e76c      	b.n	801928e <_printf_i+0xf6>
 80193b4:	0801ff0d 	.word	0x0801ff0d
 80193b8:	0801ff1e 	.word	0x0801ff1e

080193bc <_free_r>:
 80193bc:	b538      	push	{r3, r4, r5, lr}
 80193be:	4605      	mov	r5, r0
 80193c0:	2900      	cmp	r1, #0
 80193c2:	d045      	beq.n	8019450 <_free_r+0x94>
 80193c4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80193c8:	1f0c      	subs	r4, r1, #4
 80193ca:	2b00      	cmp	r3, #0
 80193cc:	bfb8      	it	lt
 80193ce:	18e4      	addlt	r4, r4, r3
 80193d0:	f000 f8d2 	bl	8019578 <__malloc_lock>
 80193d4:	4a1f      	ldr	r2, [pc, #124]	; (8019454 <_free_r+0x98>)
 80193d6:	6813      	ldr	r3, [r2, #0]
 80193d8:	4610      	mov	r0, r2
 80193da:	b933      	cbnz	r3, 80193ea <_free_r+0x2e>
 80193dc:	6063      	str	r3, [r4, #4]
 80193de:	6014      	str	r4, [r2, #0]
 80193e0:	4628      	mov	r0, r5
 80193e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80193e6:	f000 b8c8 	b.w	801957a <__malloc_unlock>
 80193ea:	42a3      	cmp	r3, r4
 80193ec:	d90c      	bls.n	8019408 <_free_r+0x4c>
 80193ee:	6821      	ldr	r1, [r4, #0]
 80193f0:	1862      	adds	r2, r4, r1
 80193f2:	4293      	cmp	r3, r2
 80193f4:	bf04      	itt	eq
 80193f6:	681a      	ldreq	r2, [r3, #0]
 80193f8:	685b      	ldreq	r3, [r3, #4]
 80193fa:	6063      	str	r3, [r4, #4]
 80193fc:	bf04      	itt	eq
 80193fe:	1852      	addeq	r2, r2, r1
 8019400:	6022      	streq	r2, [r4, #0]
 8019402:	6004      	str	r4, [r0, #0]
 8019404:	e7ec      	b.n	80193e0 <_free_r+0x24>
 8019406:	4613      	mov	r3, r2
 8019408:	685a      	ldr	r2, [r3, #4]
 801940a:	b10a      	cbz	r2, 8019410 <_free_r+0x54>
 801940c:	42a2      	cmp	r2, r4
 801940e:	d9fa      	bls.n	8019406 <_free_r+0x4a>
 8019410:	6819      	ldr	r1, [r3, #0]
 8019412:	1858      	adds	r0, r3, r1
 8019414:	42a0      	cmp	r0, r4
 8019416:	d10b      	bne.n	8019430 <_free_r+0x74>
 8019418:	6820      	ldr	r0, [r4, #0]
 801941a:	4401      	add	r1, r0
 801941c:	1858      	adds	r0, r3, r1
 801941e:	4282      	cmp	r2, r0
 8019420:	6019      	str	r1, [r3, #0]
 8019422:	d1dd      	bne.n	80193e0 <_free_r+0x24>
 8019424:	6810      	ldr	r0, [r2, #0]
 8019426:	6852      	ldr	r2, [r2, #4]
 8019428:	605a      	str	r2, [r3, #4]
 801942a:	4401      	add	r1, r0
 801942c:	6019      	str	r1, [r3, #0]
 801942e:	e7d7      	b.n	80193e0 <_free_r+0x24>
 8019430:	d902      	bls.n	8019438 <_free_r+0x7c>
 8019432:	230c      	movs	r3, #12
 8019434:	602b      	str	r3, [r5, #0]
 8019436:	e7d3      	b.n	80193e0 <_free_r+0x24>
 8019438:	6820      	ldr	r0, [r4, #0]
 801943a:	1821      	adds	r1, r4, r0
 801943c:	428a      	cmp	r2, r1
 801943e:	bf04      	itt	eq
 8019440:	6811      	ldreq	r1, [r2, #0]
 8019442:	6852      	ldreq	r2, [r2, #4]
 8019444:	6062      	str	r2, [r4, #4]
 8019446:	bf04      	itt	eq
 8019448:	1809      	addeq	r1, r1, r0
 801944a:	6021      	streq	r1, [r4, #0]
 801944c:	605c      	str	r4, [r3, #4]
 801944e:	e7c7      	b.n	80193e0 <_free_r+0x24>
 8019450:	bd38      	pop	{r3, r4, r5, pc}
 8019452:	bf00      	nop
 8019454:	20019748 	.word	0x20019748

08019458 <_malloc_r>:
 8019458:	b570      	push	{r4, r5, r6, lr}
 801945a:	1ccd      	adds	r5, r1, #3
 801945c:	f025 0503 	bic.w	r5, r5, #3
 8019460:	3508      	adds	r5, #8
 8019462:	2d0c      	cmp	r5, #12
 8019464:	bf38      	it	cc
 8019466:	250c      	movcc	r5, #12
 8019468:	2d00      	cmp	r5, #0
 801946a:	4606      	mov	r6, r0
 801946c:	db01      	blt.n	8019472 <_malloc_r+0x1a>
 801946e:	42a9      	cmp	r1, r5
 8019470:	d903      	bls.n	801947a <_malloc_r+0x22>
 8019472:	230c      	movs	r3, #12
 8019474:	6033      	str	r3, [r6, #0]
 8019476:	2000      	movs	r0, #0
 8019478:	bd70      	pop	{r4, r5, r6, pc}
 801947a:	f000 f87d 	bl	8019578 <__malloc_lock>
 801947e:	4a21      	ldr	r2, [pc, #132]	; (8019504 <_malloc_r+0xac>)
 8019480:	6814      	ldr	r4, [r2, #0]
 8019482:	4621      	mov	r1, r4
 8019484:	b991      	cbnz	r1, 80194ac <_malloc_r+0x54>
 8019486:	4c20      	ldr	r4, [pc, #128]	; (8019508 <_malloc_r+0xb0>)
 8019488:	6823      	ldr	r3, [r4, #0]
 801948a:	b91b      	cbnz	r3, 8019494 <_malloc_r+0x3c>
 801948c:	4630      	mov	r0, r6
 801948e:	f000 f863 	bl	8019558 <_sbrk_r>
 8019492:	6020      	str	r0, [r4, #0]
 8019494:	4629      	mov	r1, r5
 8019496:	4630      	mov	r0, r6
 8019498:	f000 f85e 	bl	8019558 <_sbrk_r>
 801949c:	1c43      	adds	r3, r0, #1
 801949e:	d124      	bne.n	80194ea <_malloc_r+0x92>
 80194a0:	230c      	movs	r3, #12
 80194a2:	6033      	str	r3, [r6, #0]
 80194a4:	4630      	mov	r0, r6
 80194a6:	f000 f868 	bl	801957a <__malloc_unlock>
 80194aa:	e7e4      	b.n	8019476 <_malloc_r+0x1e>
 80194ac:	680b      	ldr	r3, [r1, #0]
 80194ae:	1b5b      	subs	r3, r3, r5
 80194b0:	d418      	bmi.n	80194e4 <_malloc_r+0x8c>
 80194b2:	2b0b      	cmp	r3, #11
 80194b4:	d90f      	bls.n	80194d6 <_malloc_r+0x7e>
 80194b6:	600b      	str	r3, [r1, #0]
 80194b8:	50cd      	str	r5, [r1, r3]
 80194ba:	18cc      	adds	r4, r1, r3
 80194bc:	4630      	mov	r0, r6
 80194be:	f000 f85c 	bl	801957a <__malloc_unlock>
 80194c2:	f104 000b 	add.w	r0, r4, #11
 80194c6:	1d23      	adds	r3, r4, #4
 80194c8:	f020 0007 	bic.w	r0, r0, #7
 80194cc:	1ac3      	subs	r3, r0, r3
 80194ce:	d0d3      	beq.n	8019478 <_malloc_r+0x20>
 80194d0:	425a      	negs	r2, r3
 80194d2:	50e2      	str	r2, [r4, r3]
 80194d4:	e7d0      	b.n	8019478 <_malloc_r+0x20>
 80194d6:	428c      	cmp	r4, r1
 80194d8:	684b      	ldr	r3, [r1, #4]
 80194da:	bf16      	itet	ne
 80194dc:	6063      	strne	r3, [r4, #4]
 80194de:	6013      	streq	r3, [r2, #0]
 80194e0:	460c      	movne	r4, r1
 80194e2:	e7eb      	b.n	80194bc <_malloc_r+0x64>
 80194e4:	460c      	mov	r4, r1
 80194e6:	6849      	ldr	r1, [r1, #4]
 80194e8:	e7cc      	b.n	8019484 <_malloc_r+0x2c>
 80194ea:	1cc4      	adds	r4, r0, #3
 80194ec:	f024 0403 	bic.w	r4, r4, #3
 80194f0:	42a0      	cmp	r0, r4
 80194f2:	d005      	beq.n	8019500 <_malloc_r+0xa8>
 80194f4:	1a21      	subs	r1, r4, r0
 80194f6:	4630      	mov	r0, r6
 80194f8:	f000 f82e 	bl	8019558 <_sbrk_r>
 80194fc:	3001      	adds	r0, #1
 80194fe:	d0cf      	beq.n	80194a0 <_malloc_r+0x48>
 8019500:	6025      	str	r5, [r4, #0]
 8019502:	e7db      	b.n	80194bc <_malloc_r+0x64>
 8019504:	20019748 	.word	0x20019748
 8019508:	2001974c 	.word	0x2001974c

0801950c <_realloc_r>:
 801950c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801950e:	4607      	mov	r7, r0
 8019510:	4614      	mov	r4, r2
 8019512:	460e      	mov	r6, r1
 8019514:	b921      	cbnz	r1, 8019520 <_realloc_r+0x14>
 8019516:	4611      	mov	r1, r2
 8019518:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801951c:	f7ff bf9c 	b.w	8019458 <_malloc_r>
 8019520:	b922      	cbnz	r2, 801952c <_realloc_r+0x20>
 8019522:	f7ff ff4b 	bl	80193bc <_free_r>
 8019526:	4625      	mov	r5, r4
 8019528:	4628      	mov	r0, r5
 801952a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801952c:	f000 f826 	bl	801957c <_malloc_usable_size_r>
 8019530:	42a0      	cmp	r0, r4
 8019532:	d20f      	bcs.n	8019554 <_realloc_r+0x48>
 8019534:	4621      	mov	r1, r4
 8019536:	4638      	mov	r0, r7
 8019538:	f7ff ff8e 	bl	8019458 <_malloc_r>
 801953c:	4605      	mov	r5, r0
 801953e:	2800      	cmp	r0, #0
 8019540:	d0f2      	beq.n	8019528 <_realloc_r+0x1c>
 8019542:	4631      	mov	r1, r6
 8019544:	4622      	mov	r2, r4
 8019546:	f7ff fbf4 	bl	8018d32 <memcpy>
 801954a:	4631      	mov	r1, r6
 801954c:	4638      	mov	r0, r7
 801954e:	f7ff ff35 	bl	80193bc <_free_r>
 8019552:	e7e9      	b.n	8019528 <_realloc_r+0x1c>
 8019554:	4635      	mov	r5, r6
 8019556:	e7e7      	b.n	8019528 <_realloc_r+0x1c>

08019558 <_sbrk_r>:
 8019558:	b538      	push	{r3, r4, r5, lr}
 801955a:	4c06      	ldr	r4, [pc, #24]	; (8019574 <_sbrk_r+0x1c>)
 801955c:	2300      	movs	r3, #0
 801955e:	4605      	mov	r5, r0
 8019560:	4608      	mov	r0, r1
 8019562:	6023      	str	r3, [r4, #0]
 8019564:	f7ed ff36 	bl	80073d4 <_sbrk>
 8019568:	1c43      	adds	r3, r0, #1
 801956a:	d102      	bne.n	8019572 <_sbrk_r+0x1a>
 801956c:	6823      	ldr	r3, [r4, #0]
 801956e:	b103      	cbz	r3, 8019572 <_sbrk_r+0x1a>
 8019570:	602b      	str	r3, [r5, #0]
 8019572:	bd38      	pop	{r3, r4, r5, pc}
 8019574:	20019af8 	.word	0x20019af8

08019578 <__malloc_lock>:
 8019578:	4770      	bx	lr

0801957a <__malloc_unlock>:
 801957a:	4770      	bx	lr

0801957c <_malloc_usable_size_r>:
 801957c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8019580:	1f18      	subs	r0, r3, #4
 8019582:	2b00      	cmp	r3, #0
 8019584:	bfbc      	itt	lt
 8019586:	580b      	ldrlt	r3, [r1, r0]
 8019588:	18c0      	addlt	r0, r0, r3
 801958a:	4770      	bx	lr

0801958c <_init>:
 801958c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801958e:	bf00      	nop
 8019590:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8019592:	bc08      	pop	{r3}
 8019594:	469e      	mov	lr, r3
 8019596:	4770      	bx	lr

08019598 <_fini>:
 8019598:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801959a:	bf00      	nop
 801959c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801959e:	bc08      	pop	{r3}
 80195a0:	469e      	mov	lr, r3
 80195a2:	4770      	bx	lr
