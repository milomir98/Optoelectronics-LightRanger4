
LightRanger4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001b0f4  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000069a8  0801b2c4  0801b2c4  0002b2c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08021c6c  08021c6c  000403fc  2**0
                  CONTENTS
  4 .ARM          00000008  08021c6c  08021c6c  00031c6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08021c74  08021c74  000403fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08021c74  08021c74  00031c74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08021c78  08021c78  00031c78  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000003fc  20000000  08021c7c  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000199b4  200003fc  08022078  000403fc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20019db0  08022078  00049db0  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000403fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0004c7a8  00000000  00000000  0004042a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00005f36  00000000  00000000  0008cbd2  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000291ba  00000000  00000000  00092b08  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00001930  00000000  00000000  000bbcc8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00006e88  00000000  00000000  000bd5f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  00032584  00000000  00000000  000c4480  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   0001fb3d  00000000  00000000  000f6a04  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    0012b638  00000000  00000000  00116541  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      000000fd  00000000  00000000  00241b79  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00005f60  00000000  00000000  00241c78  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200003fc 	.word	0x200003fc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0801b2ac 	.word	0x0801b2ac

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000400 	.word	0x20000400
 800020c:	0801b2ac 	.word	0x0801b2ac

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__aeabi_d2iz>:
 8000a5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a60:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a64:	d215      	bcs.n	8000a92 <__aeabi_d2iz+0x36>
 8000a66:	d511      	bpl.n	8000a8c <__aeabi_d2iz+0x30>
 8000a68:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a6c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a70:	d912      	bls.n	8000a98 <__aeabi_d2iz+0x3c>
 8000a72:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a76:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a7a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a82:	fa23 f002 	lsr.w	r0, r3, r2
 8000a86:	bf18      	it	ne
 8000a88:	4240      	negne	r0, r0
 8000a8a:	4770      	bx	lr
 8000a8c:	f04f 0000 	mov.w	r0, #0
 8000a90:	4770      	bx	lr
 8000a92:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a96:	d105      	bne.n	8000aa4 <__aeabi_d2iz+0x48>
 8000a98:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a9c:	bf08      	it	eq
 8000a9e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000aa2:	4770      	bx	lr
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	bf00      	nop

08000aac <__aeabi_d2f>:
 8000aac:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ab0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ab4:	bf24      	itt	cs
 8000ab6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000aba:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000abe:	d90d      	bls.n	8000adc <__aeabi_d2f+0x30>
 8000ac0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ac4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ac8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000acc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000ad0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ad4:	bf08      	it	eq
 8000ad6:	f020 0001 	biceq.w	r0, r0, #1
 8000ada:	4770      	bx	lr
 8000adc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000ae0:	d121      	bne.n	8000b26 <__aeabi_d2f+0x7a>
 8000ae2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000ae6:	bfbc      	itt	lt
 8000ae8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000aec:	4770      	bxlt	lr
 8000aee:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000af2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000af6:	f1c2 0218 	rsb	r2, r2, #24
 8000afa:	f1c2 0c20 	rsb	ip, r2, #32
 8000afe:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b02:	fa20 f002 	lsr.w	r0, r0, r2
 8000b06:	bf18      	it	ne
 8000b08:	f040 0001 	orrne.w	r0, r0, #1
 8000b0c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b10:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b14:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b18:	ea40 000c 	orr.w	r0, r0, ip
 8000b1c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b20:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b24:	e7cc      	b.n	8000ac0 <__aeabi_d2f+0x14>
 8000b26:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b2a:	d107      	bne.n	8000b3c <__aeabi_d2f+0x90>
 8000b2c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b30:	bf1e      	ittt	ne
 8000b32:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b36:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b3a:	4770      	bxne	lr
 8000b3c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b40:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b44:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b48:	4770      	bx	lr
 8000b4a:	bf00      	nop

08000b4c <__aeabi_uldivmod>:
 8000b4c:	b953      	cbnz	r3, 8000b64 <__aeabi_uldivmod+0x18>
 8000b4e:	b94a      	cbnz	r2, 8000b64 <__aeabi_uldivmod+0x18>
 8000b50:	2900      	cmp	r1, #0
 8000b52:	bf08      	it	eq
 8000b54:	2800      	cmpeq	r0, #0
 8000b56:	bf1c      	itt	ne
 8000b58:	f04f 31ff 	movne.w	r1, #4294967295
 8000b5c:	f04f 30ff 	movne.w	r0, #4294967295
 8000b60:	f000 b972 	b.w	8000e48 <__aeabi_idiv0>
 8000b64:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b68:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b6c:	f000 f806 	bl	8000b7c <__udivmoddi4>
 8000b70:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b78:	b004      	add	sp, #16
 8000b7a:	4770      	bx	lr

08000b7c <__udivmoddi4>:
 8000b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b80:	9e08      	ldr	r6, [sp, #32]
 8000b82:	4604      	mov	r4, r0
 8000b84:	4688      	mov	r8, r1
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	d14b      	bne.n	8000c22 <__udivmoddi4+0xa6>
 8000b8a:	428a      	cmp	r2, r1
 8000b8c:	4615      	mov	r5, r2
 8000b8e:	d967      	bls.n	8000c60 <__udivmoddi4+0xe4>
 8000b90:	fab2 f282 	clz	r2, r2
 8000b94:	b14a      	cbz	r2, 8000baa <__udivmoddi4+0x2e>
 8000b96:	f1c2 0720 	rsb	r7, r2, #32
 8000b9a:	fa01 f302 	lsl.w	r3, r1, r2
 8000b9e:	fa20 f707 	lsr.w	r7, r0, r7
 8000ba2:	4095      	lsls	r5, r2
 8000ba4:	ea47 0803 	orr.w	r8, r7, r3
 8000ba8:	4094      	lsls	r4, r2
 8000baa:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000bae:	0c23      	lsrs	r3, r4, #16
 8000bb0:	fbb8 f7fe 	udiv	r7, r8, lr
 8000bb4:	fa1f fc85 	uxth.w	ip, r5
 8000bb8:	fb0e 8817 	mls	r8, lr, r7, r8
 8000bbc:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bc0:	fb07 f10c 	mul.w	r1, r7, ip
 8000bc4:	4299      	cmp	r1, r3
 8000bc6:	d909      	bls.n	8000bdc <__udivmoddi4+0x60>
 8000bc8:	18eb      	adds	r3, r5, r3
 8000bca:	f107 30ff 	add.w	r0, r7, #4294967295
 8000bce:	f080 811b 	bcs.w	8000e08 <__udivmoddi4+0x28c>
 8000bd2:	4299      	cmp	r1, r3
 8000bd4:	f240 8118 	bls.w	8000e08 <__udivmoddi4+0x28c>
 8000bd8:	3f02      	subs	r7, #2
 8000bda:	442b      	add	r3, r5
 8000bdc:	1a5b      	subs	r3, r3, r1
 8000bde:	b2a4      	uxth	r4, r4
 8000be0:	fbb3 f0fe 	udiv	r0, r3, lr
 8000be4:	fb0e 3310 	mls	r3, lr, r0, r3
 8000be8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000bec:	fb00 fc0c 	mul.w	ip, r0, ip
 8000bf0:	45a4      	cmp	ip, r4
 8000bf2:	d909      	bls.n	8000c08 <__udivmoddi4+0x8c>
 8000bf4:	192c      	adds	r4, r5, r4
 8000bf6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000bfa:	f080 8107 	bcs.w	8000e0c <__udivmoddi4+0x290>
 8000bfe:	45a4      	cmp	ip, r4
 8000c00:	f240 8104 	bls.w	8000e0c <__udivmoddi4+0x290>
 8000c04:	3802      	subs	r0, #2
 8000c06:	442c      	add	r4, r5
 8000c08:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000c0c:	eba4 040c 	sub.w	r4, r4, ip
 8000c10:	2700      	movs	r7, #0
 8000c12:	b11e      	cbz	r6, 8000c1c <__udivmoddi4+0xa0>
 8000c14:	40d4      	lsrs	r4, r2
 8000c16:	2300      	movs	r3, #0
 8000c18:	e9c6 4300 	strd	r4, r3, [r6]
 8000c1c:	4639      	mov	r1, r7
 8000c1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c22:	428b      	cmp	r3, r1
 8000c24:	d909      	bls.n	8000c3a <__udivmoddi4+0xbe>
 8000c26:	2e00      	cmp	r6, #0
 8000c28:	f000 80eb 	beq.w	8000e02 <__udivmoddi4+0x286>
 8000c2c:	2700      	movs	r7, #0
 8000c2e:	e9c6 0100 	strd	r0, r1, [r6]
 8000c32:	4638      	mov	r0, r7
 8000c34:	4639      	mov	r1, r7
 8000c36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c3a:	fab3 f783 	clz	r7, r3
 8000c3e:	2f00      	cmp	r7, #0
 8000c40:	d147      	bne.n	8000cd2 <__udivmoddi4+0x156>
 8000c42:	428b      	cmp	r3, r1
 8000c44:	d302      	bcc.n	8000c4c <__udivmoddi4+0xd0>
 8000c46:	4282      	cmp	r2, r0
 8000c48:	f200 80fa 	bhi.w	8000e40 <__udivmoddi4+0x2c4>
 8000c4c:	1a84      	subs	r4, r0, r2
 8000c4e:	eb61 0303 	sbc.w	r3, r1, r3
 8000c52:	2001      	movs	r0, #1
 8000c54:	4698      	mov	r8, r3
 8000c56:	2e00      	cmp	r6, #0
 8000c58:	d0e0      	beq.n	8000c1c <__udivmoddi4+0xa0>
 8000c5a:	e9c6 4800 	strd	r4, r8, [r6]
 8000c5e:	e7dd      	b.n	8000c1c <__udivmoddi4+0xa0>
 8000c60:	b902      	cbnz	r2, 8000c64 <__udivmoddi4+0xe8>
 8000c62:	deff      	udf	#255	; 0xff
 8000c64:	fab2 f282 	clz	r2, r2
 8000c68:	2a00      	cmp	r2, #0
 8000c6a:	f040 808f 	bne.w	8000d8c <__udivmoddi4+0x210>
 8000c6e:	1b49      	subs	r1, r1, r5
 8000c70:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c74:	fa1f f885 	uxth.w	r8, r5
 8000c78:	2701      	movs	r7, #1
 8000c7a:	fbb1 fcfe 	udiv	ip, r1, lr
 8000c7e:	0c23      	lsrs	r3, r4, #16
 8000c80:	fb0e 111c 	mls	r1, lr, ip, r1
 8000c84:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c88:	fb08 f10c 	mul.w	r1, r8, ip
 8000c8c:	4299      	cmp	r1, r3
 8000c8e:	d907      	bls.n	8000ca0 <__udivmoddi4+0x124>
 8000c90:	18eb      	adds	r3, r5, r3
 8000c92:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000c96:	d202      	bcs.n	8000c9e <__udivmoddi4+0x122>
 8000c98:	4299      	cmp	r1, r3
 8000c9a:	f200 80cd 	bhi.w	8000e38 <__udivmoddi4+0x2bc>
 8000c9e:	4684      	mov	ip, r0
 8000ca0:	1a59      	subs	r1, r3, r1
 8000ca2:	b2a3      	uxth	r3, r4
 8000ca4:	fbb1 f0fe 	udiv	r0, r1, lr
 8000ca8:	fb0e 1410 	mls	r4, lr, r0, r1
 8000cac:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000cb0:	fb08 f800 	mul.w	r8, r8, r0
 8000cb4:	45a0      	cmp	r8, r4
 8000cb6:	d907      	bls.n	8000cc8 <__udivmoddi4+0x14c>
 8000cb8:	192c      	adds	r4, r5, r4
 8000cba:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cbe:	d202      	bcs.n	8000cc6 <__udivmoddi4+0x14a>
 8000cc0:	45a0      	cmp	r8, r4
 8000cc2:	f200 80b6 	bhi.w	8000e32 <__udivmoddi4+0x2b6>
 8000cc6:	4618      	mov	r0, r3
 8000cc8:	eba4 0408 	sub.w	r4, r4, r8
 8000ccc:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000cd0:	e79f      	b.n	8000c12 <__udivmoddi4+0x96>
 8000cd2:	f1c7 0c20 	rsb	ip, r7, #32
 8000cd6:	40bb      	lsls	r3, r7
 8000cd8:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000cdc:	ea4e 0e03 	orr.w	lr, lr, r3
 8000ce0:	fa01 f407 	lsl.w	r4, r1, r7
 8000ce4:	fa20 f50c 	lsr.w	r5, r0, ip
 8000ce8:	fa21 f30c 	lsr.w	r3, r1, ip
 8000cec:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000cf0:	4325      	orrs	r5, r4
 8000cf2:	fbb3 f9f8 	udiv	r9, r3, r8
 8000cf6:	0c2c      	lsrs	r4, r5, #16
 8000cf8:	fb08 3319 	mls	r3, r8, r9, r3
 8000cfc:	fa1f fa8e 	uxth.w	sl, lr
 8000d00:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000d04:	fb09 f40a 	mul.w	r4, r9, sl
 8000d08:	429c      	cmp	r4, r3
 8000d0a:	fa02 f207 	lsl.w	r2, r2, r7
 8000d0e:	fa00 f107 	lsl.w	r1, r0, r7
 8000d12:	d90b      	bls.n	8000d2c <__udivmoddi4+0x1b0>
 8000d14:	eb1e 0303 	adds.w	r3, lr, r3
 8000d18:	f109 30ff 	add.w	r0, r9, #4294967295
 8000d1c:	f080 8087 	bcs.w	8000e2e <__udivmoddi4+0x2b2>
 8000d20:	429c      	cmp	r4, r3
 8000d22:	f240 8084 	bls.w	8000e2e <__udivmoddi4+0x2b2>
 8000d26:	f1a9 0902 	sub.w	r9, r9, #2
 8000d2a:	4473      	add	r3, lr
 8000d2c:	1b1b      	subs	r3, r3, r4
 8000d2e:	b2ad      	uxth	r5, r5
 8000d30:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d34:	fb08 3310 	mls	r3, r8, r0, r3
 8000d38:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000d3c:	fb00 fa0a 	mul.w	sl, r0, sl
 8000d40:	45a2      	cmp	sl, r4
 8000d42:	d908      	bls.n	8000d56 <__udivmoddi4+0x1da>
 8000d44:	eb1e 0404 	adds.w	r4, lr, r4
 8000d48:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d4c:	d26b      	bcs.n	8000e26 <__udivmoddi4+0x2aa>
 8000d4e:	45a2      	cmp	sl, r4
 8000d50:	d969      	bls.n	8000e26 <__udivmoddi4+0x2aa>
 8000d52:	3802      	subs	r0, #2
 8000d54:	4474      	add	r4, lr
 8000d56:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000d5a:	fba0 8902 	umull	r8, r9, r0, r2
 8000d5e:	eba4 040a 	sub.w	r4, r4, sl
 8000d62:	454c      	cmp	r4, r9
 8000d64:	46c2      	mov	sl, r8
 8000d66:	464b      	mov	r3, r9
 8000d68:	d354      	bcc.n	8000e14 <__udivmoddi4+0x298>
 8000d6a:	d051      	beq.n	8000e10 <__udivmoddi4+0x294>
 8000d6c:	2e00      	cmp	r6, #0
 8000d6e:	d069      	beq.n	8000e44 <__udivmoddi4+0x2c8>
 8000d70:	ebb1 050a 	subs.w	r5, r1, sl
 8000d74:	eb64 0403 	sbc.w	r4, r4, r3
 8000d78:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000d7c:	40fd      	lsrs	r5, r7
 8000d7e:	40fc      	lsrs	r4, r7
 8000d80:	ea4c 0505 	orr.w	r5, ip, r5
 8000d84:	e9c6 5400 	strd	r5, r4, [r6]
 8000d88:	2700      	movs	r7, #0
 8000d8a:	e747      	b.n	8000c1c <__udivmoddi4+0xa0>
 8000d8c:	f1c2 0320 	rsb	r3, r2, #32
 8000d90:	fa20 f703 	lsr.w	r7, r0, r3
 8000d94:	4095      	lsls	r5, r2
 8000d96:	fa01 f002 	lsl.w	r0, r1, r2
 8000d9a:	fa21 f303 	lsr.w	r3, r1, r3
 8000d9e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000da2:	4338      	orrs	r0, r7
 8000da4:	0c01      	lsrs	r1, r0, #16
 8000da6:	fbb3 f7fe 	udiv	r7, r3, lr
 8000daa:	fa1f f885 	uxth.w	r8, r5
 8000dae:	fb0e 3317 	mls	r3, lr, r7, r3
 8000db2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000db6:	fb07 f308 	mul.w	r3, r7, r8
 8000dba:	428b      	cmp	r3, r1
 8000dbc:	fa04 f402 	lsl.w	r4, r4, r2
 8000dc0:	d907      	bls.n	8000dd2 <__udivmoddi4+0x256>
 8000dc2:	1869      	adds	r1, r5, r1
 8000dc4:	f107 3cff 	add.w	ip, r7, #4294967295
 8000dc8:	d22f      	bcs.n	8000e2a <__udivmoddi4+0x2ae>
 8000dca:	428b      	cmp	r3, r1
 8000dcc:	d92d      	bls.n	8000e2a <__udivmoddi4+0x2ae>
 8000dce:	3f02      	subs	r7, #2
 8000dd0:	4429      	add	r1, r5
 8000dd2:	1acb      	subs	r3, r1, r3
 8000dd4:	b281      	uxth	r1, r0
 8000dd6:	fbb3 f0fe 	udiv	r0, r3, lr
 8000dda:	fb0e 3310 	mls	r3, lr, r0, r3
 8000dde:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000de2:	fb00 f308 	mul.w	r3, r0, r8
 8000de6:	428b      	cmp	r3, r1
 8000de8:	d907      	bls.n	8000dfa <__udivmoddi4+0x27e>
 8000dea:	1869      	adds	r1, r5, r1
 8000dec:	f100 3cff 	add.w	ip, r0, #4294967295
 8000df0:	d217      	bcs.n	8000e22 <__udivmoddi4+0x2a6>
 8000df2:	428b      	cmp	r3, r1
 8000df4:	d915      	bls.n	8000e22 <__udivmoddi4+0x2a6>
 8000df6:	3802      	subs	r0, #2
 8000df8:	4429      	add	r1, r5
 8000dfa:	1ac9      	subs	r1, r1, r3
 8000dfc:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000e00:	e73b      	b.n	8000c7a <__udivmoddi4+0xfe>
 8000e02:	4637      	mov	r7, r6
 8000e04:	4630      	mov	r0, r6
 8000e06:	e709      	b.n	8000c1c <__udivmoddi4+0xa0>
 8000e08:	4607      	mov	r7, r0
 8000e0a:	e6e7      	b.n	8000bdc <__udivmoddi4+0x60>
 8000e0c:	4618      	mov	r0, r3
 8000e0e:	e6fb      	b.n	8000c08 <__udivmoddi4+0x8c>
 8000e10:	4541      	cmp	r1, r8
 8000e12:	d2ab      	bcs.n	8000d6c <__udivmoddi4+0x1f0>
 8000e14:	ebb8 0a02 	subs.w	sl, r8, r2
 8000e18:	eb69 020e 	sbc.w	r2, r9, lr
 8000e1c:	3801      	subs	r0, #1
 8000e1e:	4613      	mov	r3, r2
 8000e20:	e7a4      	b.n	8000d6c <__udivmoddi4+0x1f0>
 8000e22:	4660      	mov	r0, ip
 8000e24:	e7e9      	b.n	8000dfa <__udivmoddi4+0x27e>
 8000e26:	4618      	mov	r0, r3
 8000e28:	e795      	b.n	8000d56 <__udivmoddi4+0x1da>
 8000e2a:	4667      	mov	r7, ip
 8000e2c:	e7d1      	b.n	8000dd2 <__udivmoddi4+0x256>
 8000e2e:	4681      	mov	r9, r0
 8000e30:	e77c      	b.n	8000d2c <__udivmoddi4+0x1b0>
 8000e32:	3802      	subs	r0, #2
 8000e34:	442c      	add	r4, r5
 8000e36:	e747      	b.n	8000cc8 <__udivmoddi4+0x14c>
 8000e38:	f1ac 0c02 	sub.w	ip, ip, #2
 8000e3c:	442b      	add	r3, r5
 8000e3e:	e72f      	b.n	8000ca0 <__udivmoddi4+0x124>
 8000e40:	4638      	mov	r0, r7
 8000e42:	e708      	b.n	8000c56 <__udivmoddi4+0xda>
 8000e44:	4637      	mov	r7, r6
 8000e46:	e6e9      	b.n	8000c1c <__udivmoddi4+0xa0>

08000e48 <__aeabi_idiv0>:
 8000e48:	4770      	bx	lr
 8000e4a:	bf00      	nop

08000e4c <HAL_InitTick>:
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000e4c:	4a0e      	ldr	r2, [pc, #56]	; (8000e88 <HAL_InitTick+0x3c>)
 8000e4e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000e52:	490e      	ldr	r1, [pc, #56]	; (8000e8c <HAL_InitTick+0x40>)
 8000e54:	7812      	ldrb	r2, [r2, #0]
 8000e56:	fbb3 f3f2 	udiv	r3, r3, r2
{
 8000e5a:	b510      	push	{r4, lr}
 8000e5c:	4604      	mov	r4, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000e5e:	6808      	ldr	r0, [r1, #0]
 8000e60:	fbb0 f0f3 	udiv	r0, r0, r3
 8000e64:	f000 fb12 	bl	800148c <HAL_SYSTICK_Config>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000e68:	b908      	cbnz	r0, 8000e6e <HAL_InitTick+0x22>
 8000e6a:	2c0f      	cmp	r4, #15
 8000e6c:	d901      	bls.n	8000e72 <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 8000e6e:	2001      	movs	r0, #1
  }

  /* Return function status */
  return HAL_OK;
}
 8000e70:	bd10      	pop	{r4, pc}
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000e72:	2200      	movs	r2, #0
 8000e74:	4621      	mov	r1, r4
 8000e76:	f04f 30ff 	mov.w	r0, #4294967295
 8000e7a:	f000 fac3 	bl	8001404 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8000e7e:	4b04      	ldr	r3, [pc, #16]	; (8000e90 <HAL_InitTick+0x44>)
 8000e80:	2000      	movs	r0, #0
 8000e82:	601c      	str	r4, [r3, #0]
}
 8000e84:	bd10      	pop	{r4, pc}
 8000e86:	bf00      	nop
 8000e88:	20000000 	.word	0x20000000
 8000e8c:	20000038 	.word	0x20000038
 8000e90:	20000004 	.word	0x20000004

08000e94 <HAL_Init>:
{
 8000e94:	b508      	push	{r3, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000e96:	2003      	movs	r0, #3
 8000e98:	f000 faa0 	bl	80013dc <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8000e9c:	2000      	movs	r0, #0
 8000e9e:	f7ff ffd5 	bl	8000e4c <HAL_InitTick>
  HAL_MspInit();
 8000ea2:	f007 ffcf 	bl	8008e44 <HAL_MspInit>
}
 8000ea6:	2000      	movs	r0, #0
 8000ea8:	bd08      	pop	{r3, pc}
 8000eaa:	bf00      	nop

08000eac <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8000eac:	4a03      	ldr	r2, [pc, #12]	; (8000ebc <HAL_IncTick+0x10>)
 8000eae:	4b04      	ldr	r3, [pc, #16]	; (8000ec0 <HAL_IncTick+0x14>)
 8000eb0:	6811      	ldr	r1, [r2, #0]
 8000eb2:	781b      	ldrb	r3, [r3, #0]
 8000eb4:	440b      	add	r3, r1
 8000eb6:	6013      	str	r3, [r2, #0]
}
 8000eb8:	4770      	bx	lr
 8000eba:	bf00      	nop
 8000ebc:	20019748 	.word	0x20019748
 8000ec0:	20000000 	.word	0x20000000

08000ec4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8000ec4:	4b01      	ldr	r3, [pc, #4]	; (8000ecc <HAL_GetTick+0x8>)
 8000ec6:	6818      	ldr	r0, [r3, #0]
}
 8000ec8:	4770      	bx	lr
 8000eca:	bf00      	nop
 8000ecc:	20019748 	.word	0x20019748

08000ed0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000ed0:	b538      	push	{r3, r4, r5, lr}
 8000ed2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8000ed4:	f7ff fff6 	bl	8000ec4 <HAL_GetTick>
 8000ed8:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000eda:	1c63      	adds	r3, r4, #1
 8000edc:	d002      	beq.n	8000ee4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8000ede:	4b04      	ldr	r3, [pc, #16]	; (8000ef0 <HAL_Delay+0x20>)
 8000ee0:	781b      	ldrb	r3, [r3, #0]
 8000ee2:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8000ee4:	f7ff ffee 	bl	8000ec4 <HAL_GetTick>
 8000ee8:	1b40      	subs	r0, r0, r5
 8000eea:	42a0      	cmp	r0, r4
 8000eec:	d3fa      	bcc.n	8000ee4 <HAL_Delay+0x14>
  {
  }
}
 8000eee:	bd38      	pop	{r3, r4, r5, pc}
 8000ef0:	20000000 	.word	0x20000000

08000ef4 <HAL_ADC_Init>:
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8000ef4:	2800      	cmp	r0, #0
 8000ef6:	f000 8092 	beq.w	800101e <HAL_ADC_Init+0x12a>
{
 8000efa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if(hadc->State == HAL_ADC_STATE_RESET)
 8000efc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8000efe:	4604      	mov	r4, r0
 8000f00:	2d00      	cmp	r5, #0
 8000f02:	f000 8082 	beq.w	800100a <HAL_ADC_Init+0x116>
    hadc->Lock = HAL_UNLOCKED;
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8000f06:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f08:	06db      	lsls	r3, r3, #27
 8000f0a:	d504      	bpl.n	8000f16 <HAL_ADC_Init+0x22>
  {
    tmp_hal_status = HAL_ERROR;
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8000f0c:	2300      	movs	r3, #0
    tmp_hal_status = HAL_ERROR;
 8000f0e:	2001      	movs	r0, #1
  __HAL_UNLOCK(hadc);
 8000f10:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
}
 8000f14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ADC_STATE_CLR_SET(hadc->State,
 8000f16:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f18:	4a4e      	ldr	r2, [pc, #312]	; (8001054 <HAL_ADC_Init+0x160>)
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
  /* Set ADC parameters */
  /* Set the ADC clock prescaler */
  ADC->CCR &= ~(ADC_CCR_ADCPRE);
 8000f1a:	494f      	ldr	r1, [pc, #316]	; (8001058 <HAL_ADC_Init+0x164>)
    ADC_STATE_CLR_SET(hadc->State,
 8000f1c:	401a      	ands	r2, r3
  ADC->CCR |=  hadc->Init.ClockPrescaler;
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8000f1e:	6823      	ldr	r3, [r4, #0]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8000f20:	4d4e      	ldr	r5, [pc, #312]	; (800105c <HAL_ADC_Init+0x168>)
    ADC_STATE_CLR_SET(hadc->State,
 8000f22:	f042 0202 	orr.w	r2, r2, #2
 8000f26:	6422      	str	r2, [r4, #64]	; 0x40
  ADC->CCR &= ~(ADC_CCR_ADCPRE);
 8000f28:	684a      	ldr	r2, [r1, #4]
 8000f2a:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000f2e:	604a      	str	r2, [r1, #4]
  ADC->CCR |=  hadc->Init.ClockPrescaler;
 8000f30:	684a      	ldr	r2, [r1, #4]
 8000f32:	6860      	ldr	r0, [r4, #4]
 8000f34:	4302      	orrs	r2, r0
 8000f36:	604a      	str	r2, [r1, #4]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8000f38:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8000f3a:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8000f3c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8000f40:	f8d4 c008 	ldr.w	ip, [r4, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8000f44:	68e7      	ldr	r7, [r4, #12]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8000f46:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8000f48:	6858      	ldr	r0, [r3, #4]
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8000f4a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8000f4c:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8000f50:	42ae      	cmp	r6, r5
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8000f52:	6058      	str	r0, [r3, #4]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8000f54:	6858      	ldr	r0, [r3, #4]
 8000f56:	f020 7040 	bic.w	r0, r0, #50331648	; 0x3000000
 8000f5a:	6058      	str	r0, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8000f5c:	6859      	ldr	r1, [r3, #4]
 8000f5e:	ea41 010c 	orr.w	r1, r1, ip
 8000f62:	6059      	str	r1, [r3, #4]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8000f64:	6899      	ldr	r1, [r3, #8]
 8000f66:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 8000f6a:	6099      	str	r1, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8000f6c:	689a      	ldr	r2, [r3, #8]
 8000f6e:	ea42 0207 	orr.w	r2, r2, r7
 8000f72:	609a      	str	r2, [r3, #8]
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8000f74:	d055      	beq.n	8001022 <HAL_ADC_Init+0x12e>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8000f76:	6899      	ldr	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8000f78:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8000f7a:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8000f7e:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8000f80:	689a      	ldr	r2, [r3, #8]
 8000f82:	4316      	orrs	r6, r2
 8000f84:	609e      	str	r6, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8000f86:	6899      	ldr	r1, [r3, #8]
 8000f88:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
 8000f8c:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8000f8e:	689a      	ldr	r2, [r3, #8]
 8000f90:	4302      	orrs	r2, r0
 8000f92:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8000f94:	6899      	ldr	r1, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8000f96:	69a5      	ldr	r5, [r4, #24]
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8000f98:	f021 0102 	bic.w	r1, r1, #2
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8000f9c:	f894 0020 	ldrb.w	r0, [r4, #32]
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8000fa0:	6099      	str	r1, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8000fa2:	689a      	ldr	r2, [r3, #8]
 8000fa4:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8000fa8:	609a      	str	r2, [r3, #8]
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8000faa:	2800      	cmp	r0, #0
 8000fac:	d142      	bne.n	8001034 <HAL_ADC_Init+0x140>
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8000fae:	685a      	ldr	r2, [r3, #4]
 8000fb0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8000fb4:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8000fb6:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
    ADC_CLEAR_ERRORCODE(hadc);
 8000fb8:	2600      	movs	r6, #0
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8000fba:	69e5      	ldr	r5, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8000fbc:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8000fc0:	f894 c030 	ldrb.w	ip, [r4, #48]	; 0x30
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8000fc4:	1e6a      	subs	r2, r5, #1
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8000fc6:	6967      	ldr	r7, [r4, #20]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8000fc8:	62d8      	str	r0, [r3, #44]	; 0x2c
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8000fca:	4630      	mov	r0, r6
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8000fcc:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8000fce:	ea45 5502 	orr.w	r5, r5, r2, lsl #20
 8000fd2:	62dd      	str	r5, [r3, #44]	; 0x2c
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8000fd4:	689d      	ldr	r5, [r3, #8]
 8000fd6:	f425 7500 	bic.w	r5, r5, #512	; 0x200
 8000fda:	609d      	str	r5, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8000fdc:	6899      	ldr	r1, [r3, #8]
 8000fde:	ea41 214c 	orr.w	r1, r1, ip, lsl #9
 8000fe2:	6099      	str	r1, [r3, #8]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8000fe4:	6899      	ldr	r1, [r3, #8]
 8000fe6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8000fea:	6099      	str	r1, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8000fec:	689a      	ldr	r2, [r3, #8]
 8000fee:	ea42 2287 	orr.w	r2, r2, r7, lsl #10
 8000ff2:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8000ff4:	6466      	str	r6, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8000ff6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000ff8:	f023 0303 	bic.w	r3, r3, #3
 8000ffc:	f043 0301 	orr.w	r3, r3, #1
 8001000:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8001002:	2300      	movs	r3, #0
 8001004:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8001008:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    HAL_ADC_MspInit(hadc);
 800100a:	f007 ff33 	bl	8008e74 <HAL_ADC_MspInit>
    ADC_CLEAR_ERRORCODE(hadc);
 800100e:	6465      	str	r5, [r4, #68]	; 0x44
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8001010:	6c23      	ldr	r3, [r4, #64]	; 0x40
    hadc->Lock = HAL_UNLOCKED;
 8001012:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8001016:	06db      	lsls	r3, r3, #27
 8001018:	f53f af78 	bmi.w	8000f0c <HAL_ADC_Init+0x18>
 800101c:	e77b      	b.n	8000f16 <HAL_ADC_Init+0x22>
    return HAL_ERROR;
 800101e:	2001      	movs	r0, #1
}
 8001020:	4770      	bx	lr
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8001022:	689a      	ldr	r2, [r3, #8]
 8001024:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001028:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800102a:	689a      	ldr	r2, [r3, #8]
 800102c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8001030:	609a      	str	r2, [r3, #8]
 8001032:	e7af      	b.n	8000f94 <HAL_ADC_Init+0xa0>
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8001034:	6858      	ldr	r0, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8001036:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8001038:	f440 6000 	orr.w	r0, r0, #2048	; 0x800
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800103c:	1e51      	subs	r1, r2, #1
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800103e:	6058      	str	r0, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8001040:	685a      	ldr	r2, [r3, #4]
 8001042:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8001046:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8001048:	685a      	ldr	r2, [r3, #4]
 800104a:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
 800104e:	605a      	str	r2, [r3, #4]
 8001050:	e7b1      	b.n	8000fb6 <HAL_ADC_Init+0xc2>
 8001052:	bf00      	nop
 8001054:	ffffeefd 	.word	0xffffeefd
 8001058:	40012300 	.word	0x40012300
 800105c:	0f000001 	.word	0x0f000001

08001060 <HAL_ADC_Start_DMA>:
{
 8001060:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001062:	4604      	mov	r4, r0
 8001064:	b083      	sub	sp, #12
  __IO uint32_t counter = 0;
 8001066:	2000      	movs	r0, #0
  __HAL_LOCK(hadc);
 8001068:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
  __IO uint32_t counter = 0;
 800106c:	9001      	str	r0, [sp, #4]
  __HAL_LOCK(hadc);
 800106e:	2b01      	cmp	r3, #1
 8001070:	f000 8089 	beq.w	8001186 <HAL_ADC_Start_DMA+0x126>
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8001074:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hadc);
 8001076:	2001      	movs	r0, #1
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8001078:	68ab      	ldr	r3, [r5, #8]
  __HAL_LOCK(hadc);
 800107a:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800107e:	07de      	lsls	r6, r3, #31
 8001080:	d414      	bmi.n	80010ac <HAL_ADC_Start_DMA+0x4c>
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 8001082:	4b47      	ldr	r3, [pc, #284]	; (80011a0 <HAL_ADC_Start_DMA+0x140>)
 8001084:	4e47      	ldr	r6, [pc, #284]	; (80011a4 <HAL_ADC_Start_DMA+0x144>)
 8001086:	6818      	ldr	r0, [r3, #0]
    __HAL_ADC_ENABLE(hadc);
 8001088:	68ab      	ldr	r3, [r5, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 800108a:	fba6 6000 	umull	r6, r0, r6, r0
    __HAL_ADC_ENABLE(hadc);
 800108e:	f043 0301 	orr.w	r3, r3, #1
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 8001092:	0c80      	lsrs	r0, r0, #18
    __HAL_ADC_ENABLE(hadc);
 8001094:	60ab      	str	r3, [r5, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 8001096:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800109a:	9001      	str	r0, [sp, #4]
    while(counter != 0)
 800109c:	9b01      	ldr	r3, [sp, #4]
 800109e:	b12b      	cbz	r3, 80010ac <HAL_ADC_Start_DMA+0x4c>
      counter--;
 80010a0:	9801      	ldr	r0, [sp, #4]
 80010a2:	3801      	subs	r0, #1
 80010a4:	9001      	str	r0, [sp, #4]
    while(counter != 0)
 80010a6:	9801      	ldr	r0, [sp, #4]
 80010a8:	2800      	cmp	r0, #0
 80010aa:	d1f9      	bne.n	80010a0 <HAL_ADC_Start_DMA+0x40>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80010ac:	68a8      	ldr	r0, [r5, #8]
    ADC_STATE_CLR_SET(hadc->State,
 80010ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80010b0:	f010 0001 	ands.w	r0, r0, #1
 80010b4:	d044      	beq.n	8001140 <HAL_ADC_Start_DMA+0xe0>
    ADC_STATE_CLR_SET(hadc->State,
 80010b6:	483c      	ldr	r0, [pc, #240]	; (80011a8 <HAL_ADC_Start_DMA+0x148>)
 80010b8:	4018      	ands	r0, r3
 80010ba:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80010be:	6420      	str	r0, [r4, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 80010c0:	686b      	ldr	r3, [r5, #4]
 80010c2:	0558      	lsls	r0, r3, #21
 80010c4:	d505      	bpl.n	80010d2 <HAL_ADC_Start_DMA+0x72>
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 80010c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010c8:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80010cc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80010d0:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80010d2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010d4:	f413 5380 	ands.w	r3, r3, #4096	; 0x1000
 80010d8:	d047      	beq.n	800116a <HAL_ADC_Start_DMA+0x10a>
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 80010da:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80010dc:	f023 0306 	bic.w	r3, r3, #6
 80010e0:	6463      	str	r3, [r4, #68]	; 0x44
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 80010e2:	6ba7      	ldr	r7, [r4, #56]	; 0x38
 80010e4:	4613      	mov	r3, r2
 80010e6:	f8df e0d8 	ldr.w	lr, [pc, #216]	; 80011c0 <HAL_ADC_Start_DMA+0x160>
 80010ea:	460a      	mov	r2, r1
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 80010ec:	f06f 0c22 	mvn.w	ip, #34	; 0x22
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 80010f0:	482e      	ldr	r0, [pc, #184]	; (80011ac <HAL_ADC_Start_DMA+0x14c>)
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 80010f2:	492f      	ldr	r1, [pc, #188]	; (80011b0 <HAL_ADC_Start_DMA+0x150>)
    __HAL_UNLOCK(hadc);   
 80010f4:	2600      	movs	r6, #0
 80010f6:	f884 603c 	strb.w	r6, [r4, #60]	; 0x3c
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 80010fa:	64f9      	str	r1, [r7, #76]	; 0x4c
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 80010fc:	f105 014c 	add.w	r1, r5, #76	; 0x4c
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8001100:	e9c7 e00f 	strd	lr, r0, [r7, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8001104:	f8c5 c000 	str.w	ip, [r5]
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8001108:	4638      	mov	r0, r7
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 800110a:	686f      	ldr	r7, [r5, #4]
 800110c:	f047 6780 	orr.w	r7, r7, #67108864	; 0x4000000
 8001110:	606f      	str	r7, [r5, #4]
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8001112:	68af      	ldr	r7, [r5, #8]
 8001114:	f447 7780 	orr.w	r7, r7, #256	; 0x100
 8001118:	60af      	str	r7, [r5, #8]
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 800111a:	f000 fa6f 	bl	80015fc <HAL_DMA_Start_IT>
    if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 800111e:	4b25      	ldr	r3, [pc, #148]	; (80011b4 <HAL_ADC_Start_DMA+0x154>)
      if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 8001120:	6822      	ldr	r2, [r4, #0]
    if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 8001122:	6858      	ldr	r0, [r3, #4]
 8001124:	f010 001f 	ands.w	r0, r0, #31
 8001128:	d113      	bne.n	8001152 <HAL_ADC_Start_DMA+0xf2>
      if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 800112a:	6893      	ldr	r3, [r2, #8]
 800112c:	f013 5340 	ands.w	r3, r3, #805306368	; 0x30000000
 8001130:	d10d      	bne.n	800114e <HAL_ADC_Start_DMA+0xee>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001132:	6891      	ldr	r1, [r2, #8]
  return HAL_OK;
 8001134:	4618      	mov	r0, r3
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001136:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 800113a:	6091      	str	r1, [r2, #8]
}
 800113c:	b003      	add	sp, #12
 800113e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8001140:	f043 0310 	orr.w	r3, r3, #16
 8001144:	6423      	str	r3, [r4, #64]	; 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8001146:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001148:	f043 0301 	orr.w	r3, r3, #1
 800114c:	6463      	str	r3, [r4, #68]	; 0x44
}
 800114e:	b003      	add	sp, #12
 8001150:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8001152:	4919      	ldr	r1, [pc, #100]	; (80011b8 <HAL_ADC_Start_DMA+0x158>)
 8001154:	428a      	cmp	r2, r1
 8001156:	d00a      	beq.n	800116e <HAL_ADC_Start_DMA+0x10e>
      if( HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI_4) )
 8001158:	685b      	ldr	r3, [r3, #4]
        if((hadc->Instance == ADC3) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800115a:	06db      	lsls	r3, r3, #27
 800115c:	d402      	bmi.n	8001164 <HAL_ADC_Start_DMA+0x104>
 800115e:	4917      	ldr	r1, [pc, #92]	; (80011bc <HAL_ADC_Start_DMA+0x15c>)
 8001160:	428a      	cmp	r2, r1
 8001162:	d013      	beq.n	800118c <HAL_ADC_Start_DMA+0x12c>
  return HAL_OK;
 8001164:	2000      	movs	r0, #0
}
 8001166:	b003      	add	sp, #12
 8001168:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ADC_CLEAR_ERRORCODE(hadc);
 800116a:	6463      	str	r3, [r4, #68]	; 0x44
 800116c:	e7b9      	b.n	80010e2 <HAL_ADC_Start_DMA+0x82>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800116e:	6893      	ldr	r3, [r2, #8]
 8001170:	f013 5f40 	tst.w	r3, #805306368	; 0x30000000
 8001174:	d103      	bne.n	800117e <HAL_ADC_Start_DMA+0x11e>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001176:	6893      	ldr	r3, [r2, #8]
 8001178:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800117c:	6093      	str	r3, [r2, #8]
      if( HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI_4) )
 800117e:	4b0d      	ldr	r3, [pc, #52]	; (80011b4 <HAL_ADC_Start_DMA+0x154>)
  return HAL_OK;
 8001180:	2000      	movs	r0, #0
      if( HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI_4) )
 8001182:	685b      	ldr	r3, [r3, #4]
 8001184:	e7e3      	b.n	800114e <HAL_ADC_Start_DMA+0xee>
  __HAL_LOCK(hadc);
 8001186:	2002      	movs	r0, #2
}
 8001188:	b003      	add	sp, #12
 800118a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if((hadc->Instance == ADC3) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800118c:	6888      	ldr	r0, [r1, #8]
 800118e:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8001192:	d1e7      	bne.n	8001164 <HAL_ADC_Start_DMA+0x104>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001194:	688b      	ldr	r3, [r1, #8]
 8001196:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800119a:	608b      	str	r3, [r1, #8]
 800119c:	e7d7      	b.n	800114e <HAL_ADC_Start_DMA+0xee>
 800119e:	bf00      	nop
 80011a0:	20000038 	.word	0x20000038
 80011a4:	431bde83 	.word	0x431bde83
 80011a8:	fffff8fe 	.word	0xfffff8fe
 80011ac:	080011c9 	.word	0x080011c9
 80011b0:	080011d9 	.word	0x080011d9
 80011b4:	40012300 	.word	0x40012300
 80011b8:	40012000 	.word	0x40012000
 80011bc:	40012200 	.word	0x40012200
 80011c0:	080011f1 	.word	0x080011f1

080011c4 <HAL_ADC_ConvHalfCpltCallback>:
 80011c4:	4770      	bx	lr
 80011c6:	bf00      	nop

080011c8 <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
{
 80011c8:	b508      	push	{r3, lr}
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
   /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 80011ca:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80011cc:	f7ff fffa 	bl	80011c4 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80011d0:	bd08      	pop	{r3, pc}
 80011d2:	bf00      	nop

080011d4 <HAL_ADC_ErrorCallback>:
 80011d4:	4770      	bx	lr
 80011d6:	bf00      	nop

080011d8 <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
{
 80011d8:	b508      	push	{r3, lr}
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  hadc->State= HAL_ADC_STATE_ERROR_DMA;
 80011da:	2240      	movs	r2, #64	; 0x40
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 80011dc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  hadc->State= HAL_ADC_STATE_ERROR_DMA;
 80011de:	641a      	str	r2, [r3, #64]	; 0x40
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 80011e0:	4618      	mov	r0, r3
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 80011e2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80011e4:	f042 0204 	orr.w	r2, r2, #4
 80011e8:	645a      	str	r2, [r3, #68]	; 0x44
  HAL_ADC_ErrorCallback(hadc);
 80011ea:	f7ff fff3 	bl	80011d4 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80011ee:	bd08      	pop	{r3, pc}

080011f0 <ADC_DMAConvCplt>:
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 80011f0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 80011f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80011f4:	f012 0f50 	tst.w	r2, #80	; 0x50
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80011f8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 80011fa:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 80011fc:	d123      	bne.n	8001246 <ADC_DMAConvCplt+0x56>
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80011fe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001202:	6819      	ldr	r1, [r3, #0]
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8001204:	641a      	str	r2, [r3, #64]	; 0x40
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001206:	688a      	ldr	r2, [r1, #8]
 8001208:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 800120c:	d117      	bne.n	800123e <ADC_DMAConvCplt+0x4e>
 800120e:	699a      	ldr	r2, [r3, #24]
 8001210:	b9aa      	cbnz	r2, 800123e <ADC_DMAConvCplt+0x4e>
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 8001212:	6aca      	ldr	r2, [r1, #44]	; 0x2c
       (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8001214:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 8001218:	d002      	beq.n	8001220 <ADC_DMAConvCplt+0x30>
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800121a:	688a      	ldr	r2, [r1, #8]
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 800121c:	0550      	lsls	r0, r2, #21
 800121e:	d40e      	bmi.n	800123e <ADC_DMAConvCplt+0x4e>
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8001220:	684a      	ldr	r2, [r1, #4]
 8001222:	f022 0220 	bic.w	r2, r2, #32
 8001226:	604a      	str	r2, [r1, #4]
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8001228:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800122a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800122e:	641a      	str	r2, [r3, #64]	; 0x40
      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8001230:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001232:	04d1      	lsls	r1, r2, #19
 8001234:	d403      	bmi.n	800123e <ADC_DMAConvCplt+0x4e>
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8001236:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001238:	f042 0201 	orr.w	r2, r2, #1
 800123c:	641a      	str	r2, [r3, #64]	; 0x40
    HAL_ADC_ConvCpltCallback(hadc);
 800123e:	4618      	mov	r0, r3
 8001240:	f007 fb72 	bl	8008928 <HAL_ADC_ConvCpltCallback>
}
 8001244:	bd10      	pop	{r4, pc}
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 8001246:	06d2      	lsls	r2, r2, #27
 8001248:	d404      	bmi.n	8001254 <ADC_DMAConvCplt+0x64>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 800124a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
}
 800124c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hadc->DMA_Handle->XferErrorCallback(hdma);
 8001250:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001252:	4718      	bx	r3
      HAL_ADC_ErrorCallback(hadc);
 8001254:	4618      	mov	r0, r3
 8001256:	f7ff ffbd 	bl	80011d4 <HAL_ADC_ErrorCallback>
}
 800125a:	bd10      	pop	{r4, pc}

0800125c <HAL_ADC_ConfigChannel>:
  __HAL_LOCK(hadc);
 800125c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
  __IO uint32_t counter = 0;
 8001260:	2200      	movs	r2, #0
{
 8001262:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hadc);
 8001264:	2b01      	cmp	r3, #1
{
 8001266:	b083      	sub	sp, #12
  __IO uint32_t counter = 0;
 8001268:	9201      	str	r2, [sp, #4]
  __HAL_LOCK(hadc);
 800126a:	f000 809d 	beq.w	80013a8 <HAL_ADC_ConfigChannel+0x14c>
  if ((sConfig->Channel > ADC_CHANNEL_9) && (sConfig->Channel != ADC_INTERNAL_NONE))
 800126e:	680e      	ldr	r6, [r1, #0]
  __HAL_LOCK(hadc);
 8001270:	2201      	movs	r2, #1
 8001272:	6803      	ldr	r3, [r0, #0]
 8001274:	b2b7      	uxth	r7, r6
  if ((sConfig->Channel > ADC_CHANNEL_9) && (sConfig->Channel != ADC_INTERNAL_NONE))
 8001276:	2e09      	cmp	r6, #9
  __HAL_LOCK(hadc);
 8001278:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 800127c:	eb07 0547 	add.w	r5, r7, r7, lsl #1
 8001280:	688a      	ldr	r2, [r1, #8]
  if ((sConfig->Channel > ADC_CHANNEL_9) && (sConfig->Channel != ADC_INTERNAL_NONE))
 8001282:	d92f      	bls.n	80012e4 <HAL_ADC_ConfigChannel+0x88>
 8001284:	f1b6 4f00 	cmp.w	r6, #2147483648	; 0x80000000
 8001288:	d02c      	beq.n	80012e4 <HAL_ADC_ConfigChannel+0x88>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800128a:	3d1e      	subs	r5, #30
 800128c:	f04f 0c07 	mov.w	ip, #7
 8001290:	68dc      	ldr	r4, [r3, #12]
 8001292:	fa0c fc05 	lsl.w	ip, ip, r5
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8001296:	f8df e138 	ldr.w	lr, [pc, #312]	; 80013d0 <HAL_ADC_ConfigChannel+0x174>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800129a:	ea24 040c 	bic.w	r4, r4, ip
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800129e:	4576      	cmp	r6, lr
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80012a0:	60dc      	str	r4, [r3, #12]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 80012a2:	f000 8084 	beq.w	80013ae <HAL_ADC_ConfigChannel+0x152>
      hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80012a6:	fa02 f505 	lsl.w	r5, r2, r5
 80012aa:	68da      	ldr	r2, [r3, #12]
 80012ac:	4315      	orrs	r5, r2
 80012ae:	60dd      	str	r5, [r3, #12]
  if (sConfig->Rank < 7)
 80012b0:	6849      	ldr	r1, [r1, #4]
 80012b2:	2906      	cmp	r1, #6
 80012b4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 80012b8:	d826      	bhi.n	8001308 <HAL_ADC_ConfigChannel+0xac>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80012ba:	3a05      	subs	r2, #5
 80012bc:	241f      	movs	r4, #31
 80012be:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80012c0:	4094      	lsls	r4, r2
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80012c2:	fa07 f202 	lsl.w	r2, r7, r2
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80012c6:	ea21 0104 	bic.w	r1, r1, r4
 80012ca:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80012cc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80012ce:	430a      	orrs	r2, r1
 80012d0:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_INTERNAL_NONE))
 80012d2:	4a3e      	ldr	r2, [pc, #248]	; (80013cc <HAL_ADC_ConfigChannel+0x170>)
 80012d4:	4293      	cmp	r3, r2
 80012d6:	d029      	beq.n	800132c <HAL_ADC_ConfigChannel+0xd0>
  __HAL_UNLOCK(hadc);
 80012d8:	2300      	movs	r3, #0
 80012da:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80012de:	4618      	mov	r0, r3
}
 80012e0:	b003      	add	sp, #12
 80012e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80012e4:	f04f 0c07 	mov.w	ip, #7
 80012e8:	691c      	ldr	r4, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80012ea:	40aa      	lsls	r2, r5
  if (sConfig->Rank < 7)
 80012ec:	6849      	ldr	r1, [r1, #4]
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80012ee:	fa0c f505 	lsl.w	r5, ip, r5
  if (sConfig->Rank < 7)
 80012f2:	2906      	cmp	r1, #6
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80012f4:	ea24 0505 	bic.w	r5, r4, r5
 80012f8:	611d      	str	r5, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80012fa:	691d      	ldr	r5, [r3, #16]
 80012fc:	ea45 0502 	orr.w	r5, r5, r2
 8001300:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8001304:	611d      	str	r5, [r3, #16]
  if (sConfig->Rank < 7)
 8001306:	d9d8      	bls.n	80012ba <HAL_ADC_ConfigChannel+0x5e>
  else if (sConfig->Rank < 13)
 8001308:	290c      	cmp	r1, #12
 800130a:	d838      	bhi.n	800137e <HAL_ADC_ConfigChannel+0x122>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800130c:	f1a2 0423 	sub.w	r4, r2, #35	; 0x23
 8001310:	251f      	movs	r5, #31
 8001312:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001314:	40a5      	lsls	r5, r4
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8001316:	fa07 f204 	lsl.w	r2, r7, r4
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800131a:	ea21 0105 	bic.w	r1, r1, r5
 800131e:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8001320:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8001322:	4314      	orrs	r4, r2
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_INTERNAL_NONE))
 8001324:	4a29      	ldr	r2, [pc, #164]	; (80013cc <HAL_ADC_ConfigChannel+0x170>)
 8001326:	4293      	cmp	r3, r2
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8001328:	631c      	str	r4, [r3, #48]	; 0x30
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_INTERNAL_NONE))
 800132a:	d1d5      	bne.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
 800132c:	f1b6 4f00 	cmp.w	r6, #2147483648	; 0x80000000
 8001330:	d033      	beq.n	800139a <HAL_ADC_ConfigChannel+0x13e>
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8001332:	2e12      	cmp	r6, #18
 8001334:	d040      	beq.n	80013b8 <HAL_ADC_ConfigChannel+0x15c>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8001336:	4b26      	ldr	r3, [pc, #152]	; (80013d0 <HAL_ADC_ConfigChannel+0x174>)
 8001338:	429e      	cmp	r6, r3
 800133a:	d143      	bne.n	80013c4 <HAL_ADC_ConfigChannel+0x168>
    ADC->CCR |= ADC_CCR_TSVREFE;
 800133c:	4a25      	ldr	r2, [pc, #148]	; (80013d4 <HAL_ADC_ConfigChannel+0x178>)
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800133e:	4924      	ldr	r1, [pc, #144]	; (80013d0 <HAL_ADC_ConfigChannel+0x174>)
    ADC->CCR |= ADC_CCR_TSVREFE;
 8001340:	6853      	ldr	r3, [r2, #4]
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8001342:	428e      	cmp	r6, r1
    ADC->CCR |= ADC_CCR_TSVREFE;
 8001344:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001348:	6053      	str	r3, [r2, #4]
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800134a:	d1c5      	bne.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000));
 800134c:	f102 7246 	add.w	r2, r2, #51904512	; 0x3180000
 8001350:	4b21      	ldr	r3, [pc, #132]	; (80013d8 <HAL_ADC_ConfigChannel+0x17c>)
 8001352:	f502 322e 	add.w	r2, r2, #178176	; 0x2b800
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	f202 3283 	addw	r2, r2, #899	; 0x383
 800135c:	fba2 2303 	umull	r2, r3, r2, r3
 8001360:	0c9b      	lsrs	r3, r3, #18
 8001362:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001366:	005b      	lsls	r3, r3, #1
 8001368:	9301      	str	r3, [sp, #4]
      while(counter != 0)
 800136a:	9b01      	ldr	r3, [sp, #4]
 800136c:	2b00      	cmp	r3, #0
 800136e:	d0b3      	beq.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
        counter--;
 8001370:	9b01      	ldr	r3, [sp, #4]
 8001372:	3b01      	subs	r3, #1
 8001374:	9301      	str	r3, [sp, #4]
      while(counter != 0)
 8001376:	9b01      	ldr	r3, [sp, #4]
 8001378:	2b00      	cmp	r3, #0
 800137a:	d1f9      	bne.n	8001370 <HAL_ADC_ConfigChannel+0x114>
 800137c:	e7ac      	b.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800137e:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 8001382:	251f      	movs	r5, #31
 8001384:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8001386:	408d      	lsls	r5, r1
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8001388:	fa07 f201 	lsl.w	r2, r7, r1
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800138c:	ea24 0405 	bic.w	r4, r4, r5
 8001390:	62dc      	str	r4, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8001392:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001394:	430a      	orrs	r2, r1
 8001396:	62da      	str	r2, [r3, #44]	; 0x2c
 8001398:	e79b      	b.n	80012d2 <HAL_ADC_ConfigChannel+0x76>
    ADC->CCR &= ~(ADC_CCR_VBATE | ADC_CCR_TSVREFE);
 800139a:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 800139e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80013a2:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 80013a6:	e797      	b.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
  __HAL_LOCK(hadc);
 80013a8:	2002      	movs	r0, #2
}
 80013aa:	b003      	add	sp, #12
 80013ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
      hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, ADC_CHANNEL_18);
 80013ae:	68dd      	ldr	r5, [r3, #12]
 80013b0:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80013b4:	60dd      	str	r5, [r3, #12]
 80013b6:	e77b      	b.n	80012b0 <HAL_ADC_ConfigChannel+0x54>
    ADC->CCR |= ADC_CCR_VBATE;
 80013b8:	4a06      	ldr	r2, [pc, #24]	; (80013d4 <HAL_ADC_ConfigChannel+0x178>)
 80013ba:	6853      	ldr	r3, [r2, #4]
 80013bc:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80013c0:	6053      	str	r3, [r2, #4]
 80013c2:	e789      	b.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 80013c4:	2e11      	cmp	r6, #17
 80013c6:	d0b9      	beq.n	800133c <HAL_ADC_ConfigChannel+0xe0>
 80013c8:	e786      	b.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
 80013ca:	bf00      	nop
 80013cc:	40012000 	.word	0x40012000
 80013d0:	10000012 	.word	0x10000012
 80013d4:	40012300 	.word	0x40012300
 80013d8:	20000038 	.word	0x20000038

080013dc <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80013dc:	4907      	ldr	r1, [pc, #28]	; (80013fc <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80013de:	0200      	lsls	r0, r0, #8
 80013e0:	4b07      	ldr	r3, [pc, #28]	; (8001400 <HAL_NVIC_SetPriorityGrouping+0x24>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80013e2:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80013e4:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80013e8:	b410      	push	{r4}
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80013ea:	f64f 04ff 	movw	r4, #63743	; 0xf8ff
 80013ee:	4022      	ands	r2, r4
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80013f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80013f4:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80013f6:	4318      	orrs	r0, r3
  SCB->AIRCR =  reg_value;
 80013f8:	60c8      	str	r0, [r1, #12]
 80013fa:	4770      	bx	lr
 80013fc:	e000ed00 	.word	0xe000ed00
 8001400:	05fa0000 	.word	0x05fa0000

08001404 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001404:	4b17      	ldr	r3, [pc, #92]	; (8001464 <HAL_NVIC_SetPriority+0x60>)
 8001406:	68db      	ldr	r3, [r3, #12]
 8001408:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800140c:	b430      	push	{r4, r5}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800140e:	f1c3 0507 	rsb	r5, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001412:	1d1c      	adds	r4, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001414:	2d04      	cmp	r5, #4
 8001416:	bf28      	it	cs
 8001418:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800141a:	2c06      	cmp	r4, #6
 800141c:	d918      	bls.n	8001450 <HAL_NVIC_SetPriority+0x4c>
 800141e:	3b03      	subs	r3, #3
 8001420:	f04f 34ff 	mov.w	r4, #4294967295
 8001424:	409c      	lsls	r4, r3
 8001426:	ea22 0404 	bic.w	r4, r2, r4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800142a:	f04f 32ff 	mov.w	r2, #4294967295
  if ((int32_t)(IRQn) >= 0)
 800142e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001430:	fa02 f205 	lsl.w	r2, r2, r5
 8001434:	ea21 0102 	bic.w	r1, r1, r2
 8001438:	fa01 f203 	lsl.w	r2, r1, r3
 800143c:	ea42 0204 	orr.w	r2, r2, r4
 8001440:	ea4f 1202 	mov.w	r2, r2, lsl #4
 8001444:	b2d2      	uxtb	r2, r2
  if ((int32_t)(IRQn) >= 0)
 8001446:	db06      	blt.n	8001456 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001448:	4b07      	ldr	r3, [pc, #28]	; (8001468 <HAL_NVIC_SetPriority+0x64>)
 800144a:	541a      	strb	r2, [r3, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800144c:	bc30      	pop	{r4, r5}
 800144e:	4770      	bx	lr
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001450:	2400      	movs	r4, #0
 8001452:	4623      	mov	r3, r4
 8001454:	e7e9      	b.n	800142a <HAL_NVIC_SetPriority+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001456:	f000 000f 	and.w	r0, r0, #15
 800145a:	4b04      	ldr	r3, [pc, #16]	; (800146c <HAL_NVIC_SetPriority+0x68>)
 800145c:	541a      	strb	r2, [r3, r0]
 800145e:	bc30      	pop	{r4, r5}
 8001460:	4770      	bx	lr
 8001462:	bf00      	nop
 8001464:	e000ed00 	.word	0xe000ed00
 8001468:	e000e400 	.word	0xe000e400
 800146c:	e000ed14 	.word	0xe000ed14

08001470 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8001470:	2800      	cmp	r0, #0
 8001472:	db07      	blt.n	8001484 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001474:	f000 011f 	and.w	r1, r0, #31
 8001478:	2301      	movs	r3, #1
 800147a:	0940      	lsrs	r0, r0, #5
 800147c:	4a02      	ldr	r2, [pc, #8]	; (8001488 <HAL_NVIC_EnableIRQ+0x18>)
 800147e:	408b      	lsls	r3, r1
 8001480:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8001484:	4770      	bx	lr
 8001486:	bf00      	nop
 8001488:	e000e100 	.word	0xe000e100

0800148c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800148c:	3801      	subs	r0, #1
 800148e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8001492:	d20d      	bcs.n	80014b0 <HAL_SYSTICK_Config+0x24>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001494:	4b07      	ldr	r3, [pc, #28]	; (80014b4 <HAL_SYSTICK_Config+0x28>)
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001496:	2200      	movs	r2, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001498:	2107      	movs	r1, #7
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800149a:	b430      	push	{r4, r5}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800149c:	25f0      	movs	r5, #240	; 0xf0
 800149e:	4c06      	ldr	r4, [pc, #24]	; (80014b8 <HAL_SYSTICK_Config+0x2c>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80014a0:	6058      	str	r0, [r3, #4]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80014a2:	4610      	mov	r0, r2
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80014a4:	f884 5023 	strb.w	r5, [r4, #35]	; 0x23
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80014a8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80014aa:	6019      	str	r1, [r3, #0]
   return SysTick_Config(TicksNumb);
}
 80014ac:	bc30      	pop	{r4, r5}
 80014ae:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80014b0:	2001      	movs	r0, #1
 80014b2:	4770      	bx	lr
 80014b4:	e000e010 	.word	0xe000e010
 80014b8:	e000ed00 	.word	0xe000ed00

080014bc <HAL_SYSTICK_IRQHandler>:
/**
  * @brief  This function handles SYSTICK interrupt request.
  * @retval None
  */
void HAL_SYSTICK_IRQHandler(void)
{
 80014bc:	b508      	push	{r3, lr}
  HAL_SYSTICK_Callback();
 80014be:	f007 fa2b 	bl	8008918 <HAL_SYSTICK_Callback>
}
 80014c2:	bd08      	pop	{r3, pc}

080014c4 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80014c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014c6:	4604      	mov	r4, r0
  uint32_t tmp = 0U;
  uint32_t tickstart = HAL_GetTick();
 80014c8:	f7ff fcfc 	bl	8000ec4 <HAL_GetTick>
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 80014cc:	2c00      	cmp	r4, #0
 80014ce:	d053      	beq.n	8001578 <HAL_DMA_Init+0xb4>
  
  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 80014d0:	2202      	movs	r2, #2
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80014d2:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hdma);
 80014d4:	2100      	movs	r1, #0
 80014d6:	4605      	mov	r5, r0
  hdma->State = HAL_DMA_STATE_BUSY;
 80014d8:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 80014dc:	681a      	ldr	r2, [r3, #0]
  __HAL_UNLOCK(hdma);
 80014de:	f884 1034 	strb.w	r1, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 80014e2:	f022 0201 	bic.w	r2, r2, #1
 80014e6:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80014e8:	e005      	b.n	80014f6 <HAL_DMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80014ea:	f7ff fceb 	bl	8000ec4 <HAL_GetTick>
 80014ee:	1b40      	subs	r0, r0, r5
 80014f0:	2805      	cmp	r0, #5
 80014f2:	d83a      	bhi.n	800156a <HAL_DMA_Init+0xa6>
 80014f4:	6823      	ldr	r3, [r4, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80014f6:	681a      	ldr	r2, [r3, #0]
 80014f8:	07d1      	lsls	r1, r2, #31
 80014fa:	d4f6      	bmi.n	80014ea <HAL_DMA_Init+0x26>
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80014fc:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8001500:	68e1      	ldr	r1, [r4, #12]
 8001502:	4302      	orrs	r2, r0
  tmp = hdma->Instance->CR;
 8001504:	681f      	ldr	r7, [r3, #0]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8001506:	e9d4 0504 	ldrd	r0, r5, [r4, #16]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800150a:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800150c:	4302      	orrs	r2, r0
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
          hdma->Init.Mode                | hdma->Init.Priority;
 800150e:	6a20      	ldr	r0, [r4, #32]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8001510:	e9d4 6106 	ldrd	r6, r1, [r4, #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8001514:	432a      	orrs	r2, r5
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8001516:	4d35      	ldr	r5, [pc, #212]	; (80015ec <HAL_DMA_Init+0x128>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8001518:	4332      	orrs	r2, r6
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800151a:	403d      	ands	r5, r7
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800151c:	430a      	orrs	r2, r1

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800151e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hdma->Init.Mode                | hdma->Init.Priority;
 8001520:	4302      	orrs	r2, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8001522:	2904      	cmp	r1, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8001524:	ea42 0205 	orr.w	r2, r2, r5
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8001528:	d028      	beq.n	800157c <HAL_DMA_Init+0xb8>
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 800152a:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800152c:	695a      	ldr	r2, [r3, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800152e:	f022 0207 	bic.w	r2, r2, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8001532:	4311      	orrs	r1, r2
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8001534:	b2da      	uxtb	r2, r3
 8001536:	4d2e      	ldr	r5, [pc, #184]	; (80015f0 <HAL_DMA_Init+0x12c>)
  hdma->Instance->FCR = tmp;
 8001538:	6159      	str	r1, [r3, #20]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800153a:	3a10      	subs	r2, #16
 800153c:	492d      	ldr	r1, [pc, #180]	; (80015f4 <HAL_DMA_Init+0x130>)
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800153e:	482e      	ldr	r0, [pc, #184]	; (80015f8 <HAL_DMA_Init+0x134>)
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8001540:	fba5 5202 	umull	r5, r2, r5, r2
 8001544:	4019      	ands	r1, r3
  hdma->State = HAL_DMA_STATE_READY;
 8001546:	2501      	movs	r5, #1
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8001548:	0913      	lsrs	r3, r2, #4
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800154a:	2200      	movs	r2, #0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800154c:	5cc0      	ldrb	r0, [r0, r3]
  
  if (stream_number > 3U)
 800154e:	2b03      	cmp	r3, #3
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001550:	f04f 033f 	mov.w	r3, #63	; 0x3f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8001554:	bf88      	it	hi
 8001556:	3104      	addhi	r1, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8001558:	65e0      	str	r0, [r4, #92]	; 0x5c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800155a:	4083      	lsls	r3, r0
  return HAL_OK;
 800155c:	4610      	mov	r0, r2
 800155e:	65a1      	str	r1, [r4, #88]	; 0x58
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001560:	608b      	str	r3, [r1, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8001562:	6562      	str	r2, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8001564:	f884 5035 	strb.w	r5, [r4, #53]	; 0x35
}
 8001568:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800156a:	2303      	movs	r3, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800156c:	2220      	movs	r2, #32
      return HAL_TIMEOUT;
 800156e:	4618      	mov	r0, r3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001570:	6562      	str	r2, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8001572:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 8001576:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
 8001578:	2001      	movs	r0, #1
}
 800157a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800157c:	e9d4 510b 	ldrd	r5, r1, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8001580:	6aa7      	ldr	r7, [r4, #40]	; 0x28
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8001582:	ea45 0001 	orr.w	r0, r5, r1
    tmp |= hdma->Init.FIFOThreshold;
 8001586:	f047 0104 	orr.w	r1, r7, #4
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800158a:	4302      	orrs	r2, r0
  hdma->Instance->CR = tmp;  
 800158c:	601a      	str	r2, [r3, #0]
  tmp = hdma->Instance->FCR;
 800158e:	695a      	ldr	r2, [r3, #20]
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8001590:	f022 0207 	bic.w	r2, r2, #7
    tmp |= hdma->Init.FIFOThreshold;
 8001594:	4311      	orrs	r1, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8001596:	2d00      	cmp	r5, #0
 8001598:	d0cc      	beq.n	8001534 <HAL_DMA_Init+0x70>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800159a:	b17e      	cbz	r6, 80015bc <HAL_DMA_Init+0xf8>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800159c:	f5b6 5f00 	cmp.w	r6, #8192	; 0x2000
 80015a0:	d016      	beq.n	80015d0 <HAL_DMA_Init+0x10c>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 80015a2:	2f02      	cmp	r7, #2
 80015a4:	d903      	bls.n	80015ae <HAL_DMA_Init+0xea>
 80015a6:	2f03      	cmp	r7, #3
 80015a8:	d1c4      	bne.n	8001534 <HAL_DMA_Init+0x70>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80015aa:	01ea      	lsls	r2, r5, #7
 80015ac:	d5c2      	bpl.n	8001534 <HAL_DMA_Init+0x70>
        hdma->State = HAL_DMA_STATE_READY;
 80015ae:	2301      	movs	r3, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80015b0:	2240      	movs	r2, #64	; 0x40
        return HAL_ERROR; 
 80015b2:	4618      	mov	r0, r3
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80015b4:	6562      	str	r2, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 80015b6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 80015ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (tmp)
 80015bc:	2f01      	cmp	r7, #1
 80015be:	d003      	beq.n	80015c8 <HAL_DMA_Init+0x104>
 80015c0:	d3f3      	bcc.n	80015aa <HAL_DMA_Init+0xe6>
 80015c2:	2f02      	cmp	r7, #2
 80015c4:	d1b6      	bne.n	8001534 <HAL_DMA_Init+0x70>
 80015c6:	e7f0      	b.n	80015aa <HAL_DMA_Init+0xe6>
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80015c8:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 80015cc:	d1b2      	bne.n	8001534 <HAL_DMA_Init+0x70>
 80015ce:	e7ee      	b.n	80015ae <HAL_DMA_Init+0xea>
    switch (tmp)
 80015d0:	2f03      	cmp	r7, #3
 80015d2:	d8af      	bhi.n	8001534 <HAL_DMA_Init+0x70>
 80015d4:	a201      	add	r2, pc, #4	; (adr r2, 80015dc <HAL_DMA_Init+0x118>)
 80015d6:	f852 f027 	ldr.w	pc, [r2, r7, lsl #2]
 80015da:	bf00      	nop
 80015dc:	080015af 	.word	0x080015af
 80015e0:	080015ab 	.word	0x080015ab
 80015e4:	080015af 	.word	0x080015af
 80015e8:	080015c9 	.word	0x080015c9
 80015ec:	f010803f 	.word	0xf010803f
 80015f0:	aaaaaaab 	.word	0xaaaaaaab
 80015f4:	fffffc00 	.word	0xfffffc00
 80015f8:	0801b31c 	.word	0x0801b31c

080015fc <HAL_DMA_Start_IT>:
{
 80015fc:	b4f0      	push	{r4, r5, r6, r7}
  __HAL_LOCK(hdma);
 80015fe:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8001602:	2c01      	cmp	r4, #1
 8001604:	d038      	beq.n	8001678 <HAL_DMA_Start_IT+0x7c>
 8001606:	2501      	movs	r5, #1
  if(HAL_DMA_STATE_READY == hdma->State)
 8001608:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800160c:	6d86      	ldr	r6, [r0, #88]	; 0x58
  if(HAL_DMA_STATE_READY == hdma->State)
 800160e:	42ac      	cmp	r4, r5
  __HAL_LOCK(hdma);
 8001610:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 8001614:	d129      	bne.n	800166a <HAL_DMA_Start_IT+0x6e>
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8001616:	6804      	ldr	r4, [r0, #0]
    hdma->State = HAL_DMA_STATE_BUSY;
 8001618:	2702      	movs	r7, #2
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800161a:	2500      	movs	r5, #0
    hdma->State = HAL_DMA_STATE_BUSY;
 800161c:	f880 7035 	strb.w	r7, [r0, #53]	; 0x35
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8001620:	6545      	str	r5, [r0, #84]	; 0x54
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8001622:	6887      	ldr	r7, [r0, #8]
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8001624:	6825      	ldr	r5, [r4, #0]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8001626:	2f40      	cmp	r7, #64	; 0x40
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8001628:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 800162c:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 800162e:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8001630:	d026      	beq.n	8001680 <HAL_DMA_Start_IT+0x84>
    hdma->Instance->PAR = SrcAddress;
 8001632:	60a1      	str	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 8001634:	60e2      	str	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001636:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8001638:	233f      	movs	r3, #63	; 0x3f
    if(hdma->XferHalfCpltCallback != NULL)
 800163a:	6c02      	ldr	r2, [r0, #64]	; 0x40
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800163c:	408b      	lsls	r3, r1
 800163e:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8001640:	6823      	ldr	r3, [r4, #0]
 8001642:	f043 0316 	orr.w	r3, r3, #22
 8001646:	6023      	str	r3, [r4, #0]
    hdma->Instance->FCR |= DMA_IT_FE;
 8001648:	6963      	ldr	r3, [r4, #20]
 800164a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800164e:	6163      	str	r3, [r4, #20]
    if(hdma->XferHalfCpltCallback != NULL)
 8001650:	b11a      	cbz	r2, 800165a <HAL_DMA_Start_IT+0x5e>
      hdma->Instance->CR  |= DMA_IT_HT;
 8001652:	6823      	ldr	r3, [r4, #0]
 8001654:	f043 0308 	orr.w	r3, r3, #8
 8001658:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 800165a:	6822      	ldr	r2, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800165c:	2300      	movs	r3, #0
    __HAL_DMA_ENABLE(hdma);
 800165e:	f042 0201 	orr.w	r2, r2, #1
}
 8001662:	4618      	mov	r0, r3
    __HAL_DMA_ENABLE(hdma);
 8001664:	6022      	str	r2, [r4, #0]
}
 8001666:	bcf0      	pop	{r4, r5, r6, r7}
 8001668:	4770      	bx	lr
    __HAL_UNLOCK(hdma);	  
 800166a:	2200      	movs	r2, #0
    status = HAL_BUSY;
 800166c:	2302      	movs	r3, #2
    __HAL_UNLOCK(hdma);	  
 800166e:	f880 2034 	strb.w	r2, [r0, #52]	; 0x34
}
 8001672:	4618      	mov	r0, r3
 8001674:	bcf0      	pop	{r4, r5, r6, r7}
 8001676:	4770      	bx	lr
  __HAL_LOCK(hdma);
 8001678:	2302      	movs	r3, #2
}
 800167a:	bcf0      	pop	{r4, r5, r6, r7}
 800167c:	4618      	mov	r0, r3
 800167e:	4770      	bx	lr
    hdma->Instance->PAR = DstAddress;
 8001680:	60a2      	str	r2, [r4, #8]
    hdma->Instance->M0AR = SrcAddress;
 8001682:	60e1      	str	r1, [r4, #12]
 8001684:	e7d7      	b.n	8001636 <HAL_DMA_Start_IT+0x3a>
 8001686:	bf00      	nop

08001688 <HAL_DMA_Abort>:
{
 8001688:	b570      	push	{r4, r5, r6, lr}
 800168a:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800168c:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800168e:	f7ff fc19 	bl	8000ec4 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001692:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8001696:	2b02      	cmp	r3, #2
 8001698:	d006      	beq.n	80016a8 <HAL_DMA_Abort+0x20>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800169a:	2280      	movs	r2, #128	; 0x80
    __HAL_UNLOCK(hdma);
 800169c:	2300      	movs	r3, #0
    return HAL_ERROR;
 800169e:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80016a0:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 80016a2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
}
 80016a6:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80016a8:	6823      	ldr	r3, [r4, #0]
 80016aa:	4605      	mov	r5, r0
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80016ac:	6c21      	ldr	r1, [r4, #64]	; 0x40
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80016ae:	681a      	ldr	r2, [r3, #0]
 80016b0:	f022 0216 	bic.w	r2, r2, #22
 80016b4:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80016b6:	695a      	ldr	r2, [r3, #20]
 80016b8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80016bc:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80016be:	b339      	cbz	r1, 8001710 <HAL_DMA_Abort+0x88>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 80016c0:	681a      	ldr	r2, [r3, #0]
 80016c2:	f022 0208 	bic.w	r2, r2, #8
 80016c6:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 80016c8:	681a      	ldr	r2, [r3, #0]
 80016ca:	f022 0201 	bic.w	r2, r2, #1
 80016ce:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80016d0:	e005      	b.n	80016de <HAL_DMA_Abort+0x56>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80016d2:	f7ff fbf7 	bl	8000ec4 <HAL_GetTick>
 80016d6:	1b40      	subs	r0, r0, r5
 80016d8:	2805      	cmp	r0, #5
 80016da:	d80f      	bhi.n	80016fc <HAL_DMA_Abort+0x74>
 80016dc:	6823      	ldr	r3, [r4, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	f013 0301 	ands.w	r3, r3, #1
 80016e4:	d1f5      	bne.n	80016d2 <HAL_DMA_Abort+0x4a>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80016e6:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 80016e8:	223f      	movs	r2, #63	; 0x3f
  return HAL_OK;
 80016ea:	4618      	mov	r0, r3
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80016ec:	408a      	lsls	r2, r1
    hdma->State = HAL_DMA_STATE_READY;
 80016ee:	2101      	movs	r1, #1
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80016f0:	60b2      	str	r2, [r6, #8]
    __HAL_UNLOCK(hdma);
 80016f2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    hdma->State = HAL_DMA_STATE_READY;
 80016f6:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
}
 80016fa:	bd70      	pop	{r4, r5, r6, pc}
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80016fc:	2303      	movs	r3, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80016fe:	2120      	movs	r1, #32
        __HAL_UNLOCK(hdma);
 8001700:	2200      	movs	r2, #0
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001702:	6561      	str	r1, [r4, #84]	; 0x54
        return HAL_TIMEOUT;
 8001704:	4618      	mov	r0, r3
        __HAL_UNLOCK(hdma);
 8001706:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800170a:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 800170e:	bd70      	pop	{r4, r5, r6, pc}
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001710:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8001712:	2a00      	cmp	r2, #0
 8001714:	d1d4      	bne.n	80016c0 <HAL_DMA_Abort+0x38>
 8001716:	e7d7      	b.n	80016c8 <HAL_DMA_Abort+0x40>

08001718 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001718:	f890 2035 	ldrb.w	r2, [r0, #53]	; 0x35
{
 800171c:	4603      	mov	r3, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800171e:	2a02      	cmp	r2, #2
 8001720:	d003      	beq.n	800172a <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001722:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
 8001724:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001726:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8001728:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 800172a:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800172c:	2105      	movs	r1, #5
  return HAL_OK;
 800172e:	2000      	movs	r0, #0
    hdma->State = HAL_DMA_STATE_ABORT;
 8001730:	f883 1035 	strb.w	r1, [r3, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8001734:	6813      	ldr	r3, [r2, #0]
 8001736:	f023 0301 	bic.w	r3, r3, #1
 800173a:	6013      	str	r3, [r2, #0]
}
 800173c:	4770      	bx	lr
 800173e:	bf00      	nop

08001740 <HAL_DMA_IRQHandler>:
{
 8001740:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001742:	4604      	mov	r4, r0
 8001744:	b083      	sub	sp, #12
  __IO uint32_t count = 0;
 8001746:	2000      	movs	r0, #0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8001748:	2208      	movs	r2, #8
  uint32_t timeout = SystemCoreClock / 9600;
 800174a:	4966      	ldr	r1, [pc, #408]	; (80018e4 <HAL_DMA_IRQHandler+0x1a4>)
  __IO uint32_t count = 0;
 800174c:	9001      	str	r0, [sp, #4]
  uint32_t timeout = SystemCoreClock / 9600;
 800174e:	680e      	ldr	r6, [r1, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8001750:	e9d4 7316 	ldrd	r7, r3, [r4, #88]	; 0x58
 8001754:	409a      	lsls	r2, r3
  tmpisr = regs->ISR;
 8001756:	683d      	ldr	r5, [r7, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8001758:	422a      	tst	r2, r5
 800175a:	d003      	beq.n	8001764 <HAL_DMA_IRQHandler+0x24>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 800175c:	6821      	ldr	r1, [r4, #0]
 800175e:	6808      	ldr	r0, [r1, #0]
 8001760:	0740      	lsls	r0, r0, #29
 8001762:	d459      	bmi.n	8001818 <HAL_DMA_IRQHandler+0xd8>
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8001764:	2201      	movs	r2, #1
 8001766:	409a      	lsls	r2, r3
 8001768:	422a      	tst	r2, r5
 800176a:	d003      	beq.n	8001774 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 800176c:	6821      	ldr	r1, [r4, #0]
 800176e:	6949      	ldr	r1, [r1, #20]
 8001770:	0608      	lsls	r0, r1, #24
 8001772:	d474      	bmi.n	800185e <HAL_DMA_IRQHandler+0x11e>
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8001774:	2204      	movs	r2, #4
 8001776:	409a      	lsls	r2, r3
 8001778:	422a      	tst	r2, r5
 800177a:	d003      	beq.n	8001784 <HAL_DMA_IRQHandler+0x44>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800177c:	6821      	ldr	r1, [r4, #0]
 800177e:	6809      	ldr	r1, [r1, #0]
 8001780:	0789      	lsls	r1, r1, #30
 8001782:	d466      	bmi.n	8001852 <HAL_DMA_IRQHandler+0x112>
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8001784:	2210      	movs	r2, #16
 8001786:	409a      	lsls	r2, r3
 8001788:	422a      	tst	r2, r5
 800178a:	d003      	beq.n	8001794 <HAL_DMA_IRQHandler+0x54>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 800178c:	6821      	ldr	r1, [r4, #0]
 800178e:	6808      	ldr	r0, [r1, #0]
 8001790:	0700      	lsls	r0, r0, #28
 8001792:	d44b      	bmi.n	800182c <HAL_DMA_IRQHandler+0xec>
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8001794:	2220      	movs	r2, #32
 8001796:	409a      	lsls	r2, r3
 8001798:	422a      	tst	r2, r5
 800179a:	d014      	beq.n	80017c6 <HAL_DMA_IRQHandler+0x86>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 800179c:	6821      	ldr	r1, [r4, #0]
 800179e:	6808      	ldr	r0, [r1, #0]
 80017a0:	06c0      	lsls	r0, r0, #27
 80017a2:	d510      	bpl.n	80017c6 <HAL_DMA_IRQHandler+0x86>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 80017a4:	60ba      	str	r2, [r7, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 80017a6:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 80017aa:	2a05      	cmp	r2, #5
 80017ac:	d063      	beq.n	8001876 <HAL_DMA_IRQHandler+0x136>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80017ae:	680b      	ldr	r3, [r1, #0]
 80017b0:	f413 2f80 	tst.w	r3, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80017b4:	680b      	ldr	r3, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80017b6:	d07e      	beq.n	80018b6 <HAL_DMA_IRQHandler+0x176>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80017b8:	0319      	lsls	r1, r3, #12
 80017ba:	f140 8089 	bpl.w	80018d0 <HAL_DMA_IRQHandler+0x190>
        if(hdma->XferCpltCallback != NULL)
 80017be:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80017c0:	b10b      	cbz	r3, 80017c6 <HAL_DMA_IRQHandler+0x86>
          hdma->XferCpltCallback(hdma);
 80017c2:	4620      	mov	r0, r4
 80017c4:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80017c6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80017c8:	b323      	cbz	r3, 8001814 <HAL_DMA_IRQHandler+0xd4>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 80017ca:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80017cc:	07da      	lsls	r2, r3, #31
 80017ce:	d51a      	bpl.n	8001806 <HAL_DMA_IRQHandler+0xc6>
      __HAL_DMA_DISABLE(hdma);
 80017d0:	6822      	ldr	r2, [r4, #0]
      hdma->State = HAL_DMA_STATE_ABORT;
 80017d2:	2105      	movs	r1, #5
  uint32_t timeout = SystemCoreClock / 9600;
 80017d4:	4b44      	ldr	r3, [pc, #272]	; (80018e8 <HAL_DMA_IRQHandler+0x1a8>)
      hdma->State = HAL_DMA_STATE_ABORT;
 80017d6:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
  uint32_t timeout = SystemCoreClock / 9600;
 80017da:	fba3 3606 	umull	r3, r6, r3, r6
      __HAL_DMA_DISABLE(hdma);
 80017de:	6813      	ldr	r3, [r2, #0]
 80017e0:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600;
 80017e4:	0ab6      	lsrs	r6, r6, #10
      __HAL_DMA_DISABLE(hdma);
 80017e6:	6013      	str	r3, [r2, #0]
 80017e8:	e002      	b.n	80017f0 <HAL_DMA_IRQHandler+0xb0>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 80017ea:	6813      	ldr	r3, [r2, #0]
 80017ec:	07db      	lsls	r3, r3, #31
 80017ee:	d504      	bpl.n	80017fa <HAL_DMA_IRQHandler+0xba>
        if (++count > timeout)
 80017f0:	9b01      	ldr	r3, [sp, #4]
 80017f2:	3301      	adds	r3, #1
 80017f4:	42b3      	cmp	r3, r6
 80017f6:	9301      	str	r3, [sp, #4]
 80017f8:	d9f7      	bls.n	80017ea <HAL_DMA_IRQHandler+0xaa>
      __HAL_UNLOCK(hdma);
 80017fa:	2200      	movs	r2, #0
      hdma->State = HAL_DMA_STATE_READY;
 80017fc:	2301      	movs	r3, #1
      __HAL_UNLOCK(hdma);
 80017fe:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
      hdma->State = HAL_DMA_STATE_READY;
 8001802:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    if(hdma->XferErrorCallback != NULL)
 8001806:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8001808:	b123      	cbz	r3, 8001814 <HAL_DMA_IRQHandler+0xd4>
      hdma->XferErrorCallback(hdma);
 800180a:	4620      	mov	r0, r4
}
 800180c:	b003      	add	sp, #12
 800180e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 8001812:	4718      	bx	r3
}
 8001814:	b003      	add	sp, #12
 8001816:	bdf0      	pop	{r4, r5, r6, r7, pc}
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8001818:	6808      	ldr	r0, [r1, #0]
 800181a:	f020 0004 	bic.w	r0, r0, #4
 800181e:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8001820:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8001822:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8001824:	f042 0201 	orr.w	r2, r2, #1
 8001828:	6562      	str	r2, [r4, #84]	; 0x54
 800182a:	e79b      	b.n	8001764 <HAL_DMA_IRQHandler+0x24>
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 800182c:	60ba      	str	r2, [r7, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800182e:	680a      	ldr	r2, [r1, #0]
 8001830:	f412 2f80 	tst.w	r2, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8001834:	680a      	ldr	r2, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8001836:	d118      	bne.n	800186a <HAL_DMA_IRQHandler+0x12a>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8001838:	05d2      	lsls	r2, r2, #23
 800183a:	d403      	bmi.n	8001844 <HAL_DMA_IRQHandler+0x104>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800183c:	680a      	ldr	r2, [r1, #0]
 800183e:	f022 0208 	bic.w	r2, r2, #8
 8001842:	600a      	str	r2, [r1, #0]
        if(hdma->XferHalfCpltCallback != NULL)
 8001844:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8001846:	2a00      	cmp	r2, #0
 8001848:	d0a4      	beq.n	8001794 <HAL_DMA_IRQHandler+0x54>
          hdma->XferHalfCpltCallback(hdma);
 800184a:	4620      	mov	r0, r4
 800184c:	4790      	blx	r2
 800184e:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8001850:	e7a0      	b.n	8001794 <HAL_DMA_IRQHandler+0x54>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8001852:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8001854:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8001856:	f042 0204 	orr.w	r2, r2, #4
 800185a:	6562      	str	r2, [r4, #84]	; 0x54
 800185c:	e792      	b.n	8001784 <HAL_DMA_IRQHandler+0x44>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 800185e:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8001860:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8001862:	f042 0202 	orr.w	r2, r2, #2
 8001866:	6562      	str	r2, [r4, #84]	; 0x54
 8001868:	e784      	b.n	8001774 <HAL_DMA_IRQHandler+0x34>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800186a:	0311      	lsls	r1, r2, #12
 800186c:	d5ea      	bpl.n	8001844 <HAL_DMA_IRQHandler+0x104>
          if(hdma->XferM1HalfCpltCallback != NULL)
 800186e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8001870:	2a00      	cmp	r2, #0
 8001872:	d1ea      	bne.n	800184a <HAL_DMA_IRQHandler+0x10a>
 8001874:	e78e      	b.n	8001794 <HAL_DMA_IRQHandler+0x54>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8001876:	680a      	ldr	r2, [r1, #0]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001878:	6c20      	ldr	r0, [r4, #64]	; 0x40
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800187a:	f022 0216 	bic.w	r2, r2, #22
 800187e:	600a      	str	r2, [r1, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8001880:	694a      	ldr	r2, [r1, #20]
 8001882:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001886:	614a      	str	r2, [r1, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001888:	b338      	cbz	r0, 80018da <HAL_DMA_IRQHandler+0x19a>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800188a:	680a      	ldr	r2, [r1, #0]
 800188c:	f022 0208 	bic.w	r2, r2, #8
 8001890:	600a      	str	r2, [r1, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001892:	223f      	movs	r2, #63	; 0x3f
        __HAL_UNLOCK(hdma);
 8001894:	2000      	movs	r0, #0
        hdma->State = HAL_DMA_STATE_READY;
 8001896:	2101      	movs	r1, #1
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001898:	fa02 f303 	lsl.w	r3, r2, r3
        if(hdma->XferAbortCallback != NULL)
 800189c:	6d22      	ldr	r2, [r4, #80]	; 0x50
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800189e:	60bb      	str	r3, [r7, #8]
        __HAL_UNLOCK(hdma);
 80018a0:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_READY;
 80018a4:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
        if(hdma->XferAbortCallback != NULL)
 80018a8:	2a00      	cmp	r2, #0
 80018aa:	d0b3      	beq.n	8001814 <HAL_DMA_IRQHandler+0xd4>
          hdma->XferAbortCallback(hdma);
 80018ac:	4620      	mov	r0, r4
}
 80018ae:	b003      	add	sp, #12
 80018b0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
          hdma->XferAbortCallback(hdma);
 80018b4:	4710      	bx	r2
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80018b6:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 80018ba:	d180      	bne.n	80017be <HAL_DMA_IRQHandler+0x7e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80018bc:	680a      	ldr	r2, [r1, #0]
          hdma->State = HAL_DMA_STATE_READY;
 80018be:	2001      	movs	r0, #1
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80018c0:	f022 0210 	bic.w	r2, r2, #16
 80018c4:	600a      	str	r2, [r1, #0]
          __HAL_UNLOCK(hdma);
 80018c6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
          hdma->State = HAL_DMA_STATE_READY;
 80018ca:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
 80018ce:	e776      	b.n	80017be <HAL_DMA_IRQHandler+0x7e>
          if(hdma->XferM1CpltCallback != NULL)
 80018d0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80018d2:	2b00      	cmp	r3, #0
 80018d4:	f47f af75 	bne.w	80017c2 <HAL_DMA_IRQHandler+0x82>
 80018d8:	e775      	b.n	80017c6 <HAL_DMA_IRQHandler+0x86>
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80018da:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80018dc:	2a00      	cmp	r2, #0
 80018de:	d1d4      	bne.n	800188a <HAL_DMA_IRQHandler+0x14a>
 80018e0:	e7d7      	b.n	8001892 <HAL_DMA_IRQHandler+0x152>
 80018e2:	bf00      	nop
 80018e4:	20000038 	.word	0x20000038
 80018e8:	1b4e81b5 	.word	0x1b4e81b5

080018ec <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80018ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80018f0:	4688      	mov	r8, r1
 80018f2:	b083      	sub	sp, #12
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 80018f4:	2400      	movs	r4, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80018f6:	f8d1 9000 	ldr.w	r9, [r1]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80018fa:	f8df e1f8 	ldr.w	lr, [pc, #504]	; 8001af4 <HAL_GPIO_Init+0x208>
 80018fe:	e003      	b.n	8001908 <HAL_GPIO_Init+0x1c>
  for(position = 0; position < GPIO_NUMBER; position++)
 8001900:	3401      	adds	r4, #1
 8001902:	2c10      	cmp	r4, #16
 8001904:	f000 80b6 	beq.w	8001a74 <HAL_GPIO_Init+0x188>
    ioposition = ((uint32_t)0x01) << position;
 8001908:	2301      	movs	r3, #1
 800190a:	40a3      	lsls	r3, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800190c:	ea09 0203 	and.w	r2, r9, r3
    if(iocurrent == ioposition)
 8001910:	4293      	cmp	r3, r2
 8001912:	d1f5      	bne.n	8001900 <HAL_GPIO_Init+0x14>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001914:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8001918:	0067      	lsls	r7, r4, #1
 800191a:	2103      	movs	r1, #3
 800191c:	f025 0c10 	bic.w	ip, r5, #16
 8001920:	40b9      	lsls	r1, r7
 8001922:	f10c 33ff 	add.w	r3, ip, #4294967295
 8001926:	43c9      	mvns	r1, r1
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001928:	2b01      	cmp	r3, #1
 800192a:	d810      	bhi.n	800194e <HAL_GPIO_Init+0x62>
        temp = GPIOx->OSPEEDR; 
 800192c:	6886      	ldr	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800192e:	f3c5 1300 	ubfx	r3, r5, #4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8001932:	ea06 0a01 	and.w	sl, r6, r1
        temp |= (GPIO_Init->Speed << (position * 2));
 8001936:	f8d8 600c 	ldr.w	r6, [r8, #12]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800193a:	40a3      	lsls	r3, r4
        temp |= (GPIO_Init->Speed << (position * 2));
 800193c:	40be      	lsls	r6, r7
 800193e:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
 8001942:	6086      	str	r6, [r0, #8]
        temp = GPIOx->OTYPER;
 8001944:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001946:	ea26 0602 	bic.w	r6, r6, r2
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800194a:	4333      	orrs	r3, r6
        GPIOx->OTYPER = temp;
 800194c:	6043      	str	r3, [r0, #4]
      temp = GPIOx->PUPDR;
 800194e:	68c3      	ldr	r3, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001950:	f1bc 0f02 	cmp.w	ip, #2
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8001954:	f8d8 6008 	ldr.w	r6, [r8, #8]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8001958:	ea03 0301 	and.w	r3, r3, r1
      temp |= ((GPIO_Init->Pull) << (position * 2));
 800195c:	fa06 f607 	lsl.w	r6, r6, r7
 8001960:	ea46 0603 	orr.w	r6, r6, r3
      GPIOx->PUPDR = temp;
 8001964:	60c6      	str	r6, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001966:	d115      	bne.n	8001994 <HAL_GPIO_Init+0xa8>
        temp = GPIOx->AFR[position >> 3];
 8001968:	08e3      	lsrs	r3, r4, #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800196a:	f004 0c07 	and.w	ip, r4, #7
 800196e:	f04f 0b0f 	mov.w	fp, #15
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8001972:	f8d8 6010 	ldr.w	r6, [r8, #16]
 8001976:	eb00 0383 	add.w	r3, r0, r3, lsl #2
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800197a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp = GPIOx->AFR[position >> 3];
 800197e:	f8d3 a020 	ldr.w	sl, [r3, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8001982:	fa0b fb0c 	lsl.w	fp, fp, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8001986:	fa06 f60c 	lsl.w	r6, r6, ip
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800198a:	ea2a 0a0b 	bic.w	sl, sl, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800198e:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3] = temp;
 8001992:	621e      	str	r6, [r3, #32]
      temp = GPIOx->MODER;
 8001994:	6806      	ldr	r6, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8001996:	f005 0303 	and.w	r3, r5, #3
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 800199a:	4031      	ands	r1, r6
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 800199c:	40bb      	lsls	r3, r7
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800199e:	00ef      	lsls	r7, r5, #3
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80019a0:	ea43 0301 	orr.w	r3, r3, r1
      GPIOx->MODER = temp;
 80019a4:	6003      	str	r3, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80019a6:	d5ab      	bpl.n	8001900 <HAL_GPIO_Init+0x14>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019a8:	4b48      	ldr	r3, [pc, #288]	; (8001acc <HAL_GPIO_Init+0x1e0>)
 80019aa:	f024 0603 	bic.w	r6, r4, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019ae:	f04f 0c0f 	mov.w	ip, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019b2:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80019b4:	4619      	mov	r1, r3
 80019b6:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019ba:	f004 0303 	and.w	r3, r4, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019be:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80019c2:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019c6:	009b      	lsls	r3, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019c8:	644f      	str	r7, [r1, #68]	; 0x44
 80019ca:	6c4f      	ldr	r7, [r1, #68]	; 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019cc:	fa0c f103 	lsl.w	r1, ip, r3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019d0:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80019d4:	9701      	str	r7, [sp, #4]
 80019d6:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 80019d8:	68b7      	ldr	r7, [r6, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019da:	ea27 0101 	bic.w	r1, r7, r1
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80019de:	4f3c      	ldr	r7, [pc, #240]	; (8001ad0 <HAL_GPIO_Init+0x1e4>)
 80019e0:	42b8      	cmp	r0, r7
 80019e2:	d020      	beq.n	8001a26 <HAL_GPIO_Init+0x13a>
 80019e4:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80019e8:	42b8      	cmp	r0, r7
 80019ea:	d046      	beq.n	8001a7a <HAL_GPIO_Init+0x18e>
 80019ec:	4f39      	ldr	r7, [pc, #228]	; (8001ad4 <HAL_GPIO_Init+0x1e8>)
 80019ee:	42b8      	cmp	r0, r7
 80019f0:	d048      	beq.n	8001a84 <HAL_GPIO_Init+0x198>
 80019f2:	4f39      	ldr	r7, [pc, #228]	; (8001ad8 <HAL_GPIO_Init+0x1ec>)
 80019f4:	42b8      	cmp	r0, r7
 80019f6:	d04a      	beq.n	8001a8e <HAL_GPIO_Init+0x1a2>
 80019f8:	4f38      	ldr	r7, [pc, #224]	; (8001adc <HAL_GPIO_Init+0x1f0>)
 80019fa:	42b8      	cmp	r0, r7
 80019fc:	d04c      	beq.n	8001a98 <HAL_GPIO_Init+0x1ac>
 80019fe:	4f38      	ldr	r7, [pc, #224]	; (8001ae0 <HAL_GPIO_Init+0x1f4>)
 8001a00:	42b8      	cmp	r0, r7
 8001a02:	d053      	beq.n	8001aac <HAL_GPIO_Init+0x1c0>
 8001a04:	4f37      	ldr	r7, [pc, #220]	; (8001ae4 <HAL_GPIO_Init+0x1f8>)
 8001a06:	42b8      	cmp	r0, r7
 8001a08:	d055      	beq.n	8001ab6 <HAL_GPIO_Init+0x1ca>
 8001a0a:	4f37      	ldr	r7, [pc, #220]	; (8001ae8 <HAL_GPIO_Init+0x1fc>)
 8001a0c:	42b8      	cmp	r0, r7
 8001a0e:	d048      	beq.n	8001aa2 <HAL_GPIO_Init+0x1b6>
 8001a10:	4f36      	ldr	r7, [pc, #216]	; (8001aec <HAL_GPIO_Init+0x200>)
 8001a12:	42b8      	cmp	r0, r7
 8001a14:	d054      	beq.n	8001ac0 <HAL_GPIO_Init+0x1d4>
 8001a16:	4f36      	ldr	r7, [pc, #216]	; (8001af0 <HAL_GPIO_Init+0x204>)
 8001a18:	42b8      	cmp	r0, r7
 8001a1a:	bf0c      	ite	eq
 8001a1c:	2709      	moveq	r7, #9
 8001a1e:	270a      	movne	r7, #10
 8001a20:	fa07 f303 	lsl.w	r3, r7, r3
 8001a24:	4319      	orrs	r1, r3
        SYSCFG->EXTICR[position >> 2] = temp;
 8001a26:	60b1      	str	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8001a28:	43d1      	mvns	r1, r2
        temp = EXTI->IMR;
 8001a2a:	f8de 3000 	ldr.w	r3, [lr]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001a2e:	03ee      	lsls	r6, r5, #15
  for(position = 0; position < GPIO_NUMBER; position++)
 8001a30:	f104 0401 	add.w	r4, r4, #1
        temp &= ~((uint32_t)iocurrent);
 8001a34:	bf54      	ite	pl
 8001a36:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 8001a38:	4313      	orrmi	r3, r2
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001a3a:	03af      	lsls	r7, r5, #14
        EXTI->IMR = temp;
 8001a3c:	f8ce 3000 	str.w	r3, [lr]
        temp = EXTI->EMR;
 8001a40:	f8de 3004 	ldr.w	r3, [lr, #4]
        temp &= ~((uint32_t)iocurrent);
 8001a44:	bf54      	ite	pl
 8001a46:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 8001a48:	4313      	orrmi	r3, r2
        EXTI->EMR = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001a4a:	02ee      	lsls	r6, r5, #11
        EXTI->EMR = temp;
 8001a4c:	f8ce 3004 	str.w	r3, [lr, #4]
        temp = EXTI->RTSR;
 8001a50:	f8de 3008 	ldr.w	r3, [lr, #8]
        temp &= ~((uint32_t)iocurrent);
 8001a54:	bf54      	ite	pl
 8001a56:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 8001a58:	4313      	orrmi	r3, r2
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001a5a:	02ad      	lsls	r5, r5, #10
        EXTI->RTSR = temp;
 8001a5c:	f8ce 3008 	str.w	r3, [lr, #8]
        temp = EXTI->FTSR;
 8001a60:	f8de 300c 	ldr.w	r3, [lr, #12]
        temp &= ~((uint32_t)iocurrent);
 8001a64:	bf54      	ite	pl
 8001a66:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 8001a68:	4313      	orrmi	r3, r2
  for(position = 0; position < GPIO_NUMBER; position++)
 8001a6a:	2c10      	cmp	r4, #16
        }
        EXTI->FTSR = temp;
 8001a6c:	f8ce 300c 	str.w	r3, [lr, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 8001a70:	f47f af4a 	bne.w	8001908 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001a74:	b003      	add	sp, #12
 8001a76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001a7a:	2701      	movs	r7, #1
 8001a7c:	fa07 f303 	lsl.w	r3, r7, r3
 8001a80:	4319      	orrs	r1, r3
 8001a82:	e7d0      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001a84:	2702      	movs	r7, #2
 8001a86:	fa07 f303 	lsl.w	r3, r7, r3
 8001a8a:	4319      	orrs	r1, r3
 8001a8c:	e7cb      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001a8e:	2703      	movs	r7, #3
 8001a90:	fa07 f303 	lsl.w	r3, r7, r3
 8001a94:	4319      	orrs	r1, r3
 8001a96:	e7c6      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001a98:	2704      	movs	r7, #4
 8001a9a:	fa07 f303 	lsl.w	r3, r7, r3
 8001a9e:	4319      	orrs	r1, r3
 8001aa0:	e7c1      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001aa2:	2707      	movs	r7, #7
 8001aa4:	fa07 f303 	lsl.w	r3, r7, r3
 8001aa8:	4319      	orrs	r1, r3
 8001aaa:	e7bc      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001aac:	2705      	movs	r7, #5
 8001aae:	fa07 f303 	lsl.w	r3, r7, r3
 8001ab2:	4319      	orrs	r1, r3
 8001ab4:	e7b7      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001ab6:	2706      	movs	r7, #6
 8001ab8:	fa07 f303 	lsl.w	r3, r7, r3
 8001abc:	4319      	orrs	r1, r3
 8001abe:	e7b2      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001ac0:	2708      	movs	r7, #8
 8001ac2:	fa07 f303 	lsl.w	r3, r7, r3
 8001ac6:	4319      	orrs	r1, r3
 8001ac8:	e7ad      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001aca:	bf00      	nop
 8001acc:	40023800 	.word	0x40023800
 8001ad0:	40020000 	.word	0x40020000
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020c00 	.word	0x40020c00
 8001adc:	40021000 	.word	0x40021000
 8001ae0:	40021400 	.word	0x40021400
 8001ae4:	40021800 	.word	0x40021800
 8001ae8:	40021c00 	.word	0x40021c00
 8001aec:	40022000 	.word	0x40022000
 8001af0:	40022400 	.word	0x40022400
 8001af4:	40013c00 	.word	0x40013c00

08001af8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001af8:	b902      	cbnz	r2, 8001afc <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8001afa:	0409      	lsls	r1, r1, #16
 8001afc:	6181      	str	r1, [r0, #24]
  }
}
 8001afe:	4770      	bx	lr

08001b00 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8001b00:	b570      	push	{r4, r5, r6, lr}
 8001b02:	4604      	mov	r4, r0
 8001b04:	460d      	mov	r5, r1
 8001b06:	4616      	mov	r6, r2
 8001b08:	1c6a      	adds	r2, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8001b0a:	6823      	ldr	r3, [r4, #0]
 8001b0c:	d12c      	bne.n	8001b68 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8001b0e:	699a      	ldr	r2, [r3, #24]
 8001b10:	0790      	lsls	r0, r2, #30
 8001b12:	d427      	bmi.n	8001b64 <I2C_WaitOnTXISFlagUntilTimeout+0x64>
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001b14:	699a      	ldr	r2, [r3, #24]
 8001b16:	06d1      	lsls	r1, r2, #27
 8001b18:	d5f9      	bpl.n	8001b0e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
  {
    /* Wait until STOP Flag is reset */
    /* AutoEnd should be initiate after AF */
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001b1a:	699a      	ldr	r2, [r3, #24]
 8001b1c:	0691      	lsls	r1, r2, #26
 8001b1e:	d5fc      	bpl.n	8001b1a <I2C_WaitOnTXISFlagUntilTimeout+0x1a>

    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001b20:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001b22:	2110      	movs	r1, #16
 8001b24:	61d9      	str	r1, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001b26:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8001b28:	699a      	ldr	r2, [r3, #24]
 8001b2a:	0790      	lsls	r0, r2, #30
 8001b2c:	d501      	bpl.n	8001b32 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    hi2c->Instance->TXDR = 0x00U;
 8001b2e:	2200      	movs	r2, #0
 8001b30:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8001b32:	699a      	ldr	r2, [r3, #24]
 8001b34:	07d1      	lsls	r1, r2, #31
 8001b36:	d403      	bmi.n	8001b40 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8001b38:	699a      	ldr	r2, [r3, #24]
 8001b3a:	f042 0201 	orr.w	r2, r2, #1
 8001b3e:	619a      	str	r2, [r3, #24]

    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8001b40:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001b42:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
 8001b44:	4e1b      	ldr	r6, [pc, #108]	; (8001bb4 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>)
    hi2c->State = HAL_I2C_STATE_READY;
 8001b46:	2520      	movs	r5, #32
      return HAL_ERROR;
 8001b48:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8001b4a:	4032      	ands	r2, r6
 8001b4c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001b4e:	6c63      	ldr	r3, [r4, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8001b50:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001b54:	f043 0304 	orr.w	r3, r3, #4
 8001b58:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8001b5a:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001b5e:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 8001b62:	bd70      	pop	{r4, r5, r6, pc}
  return HAL_OK;
 8001b64:	2000      	movs	r0, #0
}
 8001b66:	bd70      	pop	{r4, r5, r6, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8001b68:	699a      	ldr	r2, [r3, #24]
 8001b6a:	0792      	lsls	r2, r2, #30
 8001b6c:	d4fa      	bmi.n	8001b64 <I2C_WaitOnTXISFlagUntilTimeout+0x64>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001b6e:	699a      	ldr	r2, [r3, #24]
 8001b70:	06d0      	lsls	r0, r2, #27
 8001b72:	d41b      	bmi.n	8001bac <I2C_WaitOnTXISFlagUntilTimeout+0xac>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001b74:	f7ff f9a6 	bl	8000ec4 <HAL_GetTick>
 8001b78:	1b80      	subs	r0, r0, r6
 8001b7a:	42a8      	cmp	r0, r5
 8001b7c:	d801      	bhi.n	8001b82 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
 8001b7e:	2d00      	cmp	r5, #0
 8001b80:	d1c2      	bne.n	8001b08 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001b82:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001b84:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001b86:	2200      	movs	r2, #0
        __HAL_UNLOCK(hi2c);
 8001b88:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001b8a:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001b8c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001b90:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001b92:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001b96:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
 8001b9a:	bd70      	pop	{r4, r5, r6, pc}
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001b9c:	f7ff f992 	bl	8000ec4 <HAL_GetTick>
 8001ba0:	1b80      	subs	r0, r0, r6
 8001ba2:	4285      	cmp	r5, r0
 8001ba4:	d3ed      	bcc.n	8001b82 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
 8001ba6:	2d00      	cmp	r5, #0
 8001ba8:	d0eb      	beq.n	8001b82 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
 8001baa:	6823      	ldr	r3, [r4, #0]
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001bac:	699a      	ldr	r2, [r3, #24]
 8001bae:	0692      	lsls	r2, r2, #26
 8001bb0:	d5f4      	bpl.n	8001b9c <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
 8001bb2:	e7b5      	b.n	8001b20 <I2C_WaitOnTXISFlagUntilTimeout+0x20>
 8001bb4:	fe00e800 	.word	0xfe00e800

08001bb8 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8001bb8:	b570      	push	{r4, r5, r6, lr}
 8001bba:	4604      	mov	r4, r0
 8001bbc:	460d      	mov	r5, r1
 8001bbe:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001bc0:	6823      	ldr	r3, [r4, #0]
 8001bc2:	699a      	ldr	r2, [r3, #24]
 8001bc4:	0692      	lsls	r2, r2, #26
 8001bc6:	d449      	bmi.n	8001c5c <I2C_WaitOnSTOPFlagUntilTimeout+0xa4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001bc8:	699a      	ldr	r2, [r3, #24]
 8001bca:	06d2      	lsls	r2, r2, #27
 8001bcc:	d526      	bpl.n	8001c1c <I2C_WaitOnSTOPFlagUntilTimeout+0x64>
 8001bce:	1c68      	adds	r0, r5, #1
 8001bd0:	d138      	bne.n	8001c44 <I2C_WaitOnSTOPFlagUntilTimeout+0x8c>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001bd2:	699a      	ldr	r2, [r3, #24]
 8001bd4:	0691      	lsls	r1, r2, #26
 8001bd6:	d5fc      	bpl.n	8001bd2 <I2C_WaitOnSTOPFlagUntilTimeout+0x1a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001bd8:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001bda:	2110      	movs	r1, #16
 8001bdc:	61d9      	str	r1, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001bde:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8001be0:	699a      	ldr	r2, [r3, #24]
 8001be2:	0790      	lsls	r0, r2, #30
 8001be4:	d501      	bpl.n	8001bea <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    hi2c->Instance->TXDR = 0x00U;
 8001be6:	2200      	movs	r2, #0
 8001be8:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8001bea:	699a      	ldr	r2, [r3, #24]
 8001bec:	07d1      	lsls	r1, r2, #31
 8001bee:	d403      	bmi.n	8001bf8 <I2C_WaitOnSTOPFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8001bf0:	699a      	ldr	r2, [r3, #24]
 8001bf2:	f042 0201 	orr.w	r2, r2, #1
 8001bf6:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
 8001bf8:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001bfa:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
 8001bfc:	4e18      	ldr	r6, [pc, #96]	; (8001c60 <I2C_WaitOnSTOPFlagUntilTimeout+0xa8>)
    hi2c->State = HAL_I2C_STATE_READY;
 8001bfe:	2520      	movs	r5, #32
      return HAL_ERROR;
 8001c00:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8001c02:	4032      	ands	r2, r6
 8001c04:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001c06:	6c63      	ldr	r3, [r4, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
 8001c08:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001c0c:	f043 0304 	orr.w	r3, r3, #4
 8001c10:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8001c12:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001c16:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 8001c1a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001c1c:	f7ff f952 	bl	8000ec4 <HAL_GetTick>
 8001c20:	1b80      	subs	r0, r0, r6
 8001c22:	42a8      	cmp	r0, r5
 8001c24:	d801      	bhi.n	8001c2a <I2C_WaitOnSTOPFlagUntilTimeout+0x72>
 8001c26:	2d00      	cmp	r5, #0
 8001c28:	d1ca      	bne.n	8001bc0 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001c2a:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001c2c:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001c2e:	2200      	movs	r2, #0
        __HAL_UNLOCK(hi2c);
 8001c30:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001c32:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001c34:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001c38:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001c3a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001c3e:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
 8001c42:	bd70      	pop	{r4, r5, r6, pc}
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001c44:	699a      	ldr	r2, [r3, #24]
 8001c46:	0692      	lsls	r2, r2, #26
 8001c48:	d4c6      	bmi.n	8001bd8 <I2C_WaitOnSTOPFlagUntilTimeout+0x20>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001c4a:	f7ff f93b 	bl	8000ec4 <HAL_GetTick>
 8001c4e:	1b80      	subs	r0, r0, r6
 8001c50:	4285      	cmp	r5, r0
 8001c52:	d3ea      	bcc.n	8001c2a <I2C_WaitOnSTOPFlagUntilTimeout+0x72>
 8001c54:	2d00      	cmp	r5, #0
 8001c56:	d0e8      	beq.n	8001c2a <I2C_WaitOnSTOPFlagUntilTimeout+0x72>
 8001c58:	6823      	ldr	r3, [r4, #0]
 8001c5a:	e7b8      	b.n	8001bce <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
 8001c5c:	2000      	movs	r0, #0
}
 8001c5e:	bd70      	pop	{r4, r5, r6, pc}
 8001c60:	fe00e800 	.word	0xfe00e800

08001c64 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8001c64:	2800      	cmp	r0, #0
 8001c66:	d04d      	beq.n	8001d04 <HAL_I2C_Init+0xa0>
{
 8001c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8001c6a:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8001c6e:	4604      	mov	r4, r0
 8001c70:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001c74:	2b00      	cmp	r3, #0
 8001c76:	d040      	beq.n	8001cfa <HAL_I2C_Init+0x96>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8001c78:	2124      	movs	r1, #36	; 0x24
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001c7a:	68e5      	ldr	r5, [r4, #12]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001c7c:	e9d4 3200 	ldrd	r3, r2, [r4]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8001c80:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001c84:	2d01      	cmp	r5, #1
  __HAL_I2C_DISABLE(hi2c);
 8001c86:	6818      	ldr	r0, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001c88:	f022 6170 	bic.w	r1, r2, #251658240	; 0xf000000
 8001c8c:	68a2      	ldr	r2, [r4, #8]
  __HAL_I2C_DISABLE(hi2c);
 8001c8e:	f020 0001 	bic.w	r0, r0, #1
 8001c92:	6018      	str	r0, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001c94:	6119      	str	r1, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8001c96:	6899      	ldr	r1, [r3, #8]
 8001c98:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
 8001c9c:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001c9e:	d028      	beq.n	8001cf2 <HAL_I2C_Init+0x8e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8001ca0:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8001ca4:	2d02      	cmp	r5, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8001ca6:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8001ca8:	d102      	bne.n	8001cb0 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8001caa:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001cae:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001cb0:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001cb2:	2100      	movs	r1, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001cb4:	4814      	ldr	r0, [pc, #80]	; (8001d08 <HAL_I2C_Init+0xa4>)
  hi2c->State = HAL_I2C_STATE_READY;
 8001cb6:	2720      	movs	r7, #32
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cb8:	69a6      	ldr	r6, [r4, #24]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001cba:	4310      	orrs	r0, r2
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cbc:	e9d4 2504 	ldrd	r2, r5, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001cc0:	6058      	str	r0, [r3, #4]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cc2:	432a      	orrs	r2, r5
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8001cc4:	68d8      	ldr	r0, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001cc6:	69e5      	ldr	r5, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cc8:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001ccc:	6a26      	ldr	r6, [r4, #32]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8001cce:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001cd2:	4335      	orrs	r5, r6
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8001cd4:	60d8      	str	r0, [r3, #12]
  return HAL_OK;
 8001cd6:	4608      	mov	r0, r1
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cd8:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001cda:	601d      	str	r5, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8001cdc:	681a      	ldr	r2, [r3, #0]
 8001cde:	f042 0201 	orr.w	r2, r2, #1
 8001ce2:	601a      	str	r2, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001ce4:	6461      	str	r1, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8001ce6:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8001cea:	6321      	str	r1, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8001cec:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 8001cf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8001cf2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001cf6:	609a      	str	r2, [r3, #8]
 8001cf8:	e7da      	b.n	8001cb0 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
 8001cfa:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 8001cfe:	f007 f911 	bl	8008f24 <HAL_I2C_MspInit>
 8001d02:	e7b9      	b.n	8001c78 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
 8001d04:	2001      	movs	r0, #1
}
 8001d06:	4770      	bx	lr
 8001d08:	02008000 	.word	0x02008000

08001d0c <HAL_I2C_Master_Transmit>:
{
 8001d0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001d10:	f890 4041 	ldrb.w	r4, [r0, #65]	; 0x41
{
 8001d14:	9e08      	ldr	r6, [sp, #32]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001d16:	2c20      	cmp	r4, #32
 8001d18:	d16f      	bne.n	8001dfa <HAL_I2C_Master_Transmit+0xee>
    __HAL_LOCK(hi2c);
 8001d1a:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8001d1e:	2c01      	cmp	r4, #1
 8001d20:	d06b      	beq.n	8001dfa <HAL_I2C_Master_Transmit+0xee>
 8001d22:	4698      	mov	r8, r3
 8001d24:	2301      	movs	r3, #1
 8001d26:	4691      	mov	r9, r2
 8001d28:	460f      	mov	r7, r1
 8001d2a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8001d2e:	4604      	mov	r4, r0
    tickstart = HAL_GetTick();
 8001d30:	f7ff f8c8 	bl	8000ec4 <HAL_GetTick>
 8001d34:	4605      	mov	r5, r0
 8001d36:	e004      	b.n	8001d42 <HAL_I2C_Master_Transmit+0x36>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001d38:	f7ff f8c4 	bl	8000ec4 <HAL_GetTick>
 8001d3c:	1b40      	subs	r0, r0, r5
 8001d3e:	2819      	cmp	r0, #25
 8001d40:	d875      	bhi.n	8001e2e <HAL_I2C_Master_Transmit+0x122>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001d42:	6823      	ldr	r3, [r4, #0]
 8001d44:	6998      	ldr	r0, [r3, #24]
 8001d46:	f410 4000 	ands.w	r0, r0, #32768	; 0x8000
 8001d4a:	d1f5      	bne.n	8001d38 <HAL_I2C_Master_Transmit+0x2c>
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001d4c:	2210      	movs	r2, #16
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8001d4e:	2121      	movs	r1, #33	; 0x21
    hi2c->pBuffPtr  = pData;
 8001d50:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 8001d54:	f3c7 0709 	ubfx	r7, r7, #0, #10
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8001d58:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001d5c:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001d60:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->XferCount = Size;
 8001d62:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001d66:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8001d68:	6360      	str	r0, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001d6a:	2aff      	cmp	r2, #255	; 0xff
 8001d6c:	d848      	bhi.n	8001e00 <HAL_I2C_Master_Transmit+0xf4>
      hi2c->XferSize = hi2c->XferCount;
 8001d6e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2,
 8001d70:	4a48      	ldr	r2, [pc, #288]	; (8001e94 <HAL_I2C_Master_Transmit+0x188>)
      hi2c->XferSize = hi2c->XferCount;
 8001d72:	b289      	uxth	r1, r1
  MODIFY_REG(hi2c->Instance->CR2,
 8001d74:	6858      	ldr	r0, [r3, #4]
 8001d76:	433a      	orrs	r2, r7
 8001d78:	f8df e124 	ldr.w	lr, [pc, #292]	; 8001ea0 <HAL_I2C_Master_Transmit+0x194>
 8001d7c:	fa5f fc81 	uxtb.w	ip, r1
      hi2c->XferSize = hi2c->XferCount;
 8001d80:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001d82:	ea00 010e 	and.w	r1, r0, lr
 8001d86:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8001d8a:	430a      	orrs	r2, r1
 8001d8c:	605a      	str	r2, [r3, #4]
 8001d8e:	f8df 8114 	ldr.w	r8, [pc, #276]	; 8001ea4 <HAL_I2C_Master_Transmit+0x198>
 8001d92:	f8df 9114 	ldr.w	r9, [pc, #276]	; 8001ea8 <HAL_I2C_Master_Transmit+0x19c>
 8001d96:	ea47 0808 	orr.w	r8, r7, r8
    while (hi2c->XferCount > 0U)
 8001d9a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001d9c:	462a      	mov	r2, r5
 8001d9e:	4631      	mov	r1, r6
 8001da0:	4620      	mov	r0, r4
    while (hi2c->XferCount > 0U)
 8001da2:	b29b      	uxth	r3, r3
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	d062      	beq.n	8001e6e <HAL_I2C_Master_Transmit+0x162>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001da8:	f7ff feaa 	bl	8001b00 <I2C_WaitOnTXISFlagUntilTimeout>
 8001dac:	2800      	cmp	r0, #0
 8001dae:	d15b      	bne.n	8001e68 <HAL_I2C_Master_Transmit+0x15c>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8001db0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001db2:	6821      	ldr	r1, [r4, #0]
 8001db4:	f810 2b01 	ldrb.w	r2, [r0], #1
      hi2c->XferSize--;
 8001db8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8001dba:	628a      	str	r2, [r1, #40]	; 0x28
      hi2c->XferCount--;
 8001dbc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8001dbe:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 8001dc0:	6260      	str	r0, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8001dc2:	3a01      	subs	r2, #1
      hi2c->XferSize--;
 8001dc4:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
 8001dc6:	b292      	uxth	r2, r2
      hi2c->XferSize--;
 8001dc8:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8001dca:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8001dcc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001dce:	b292      	uxth	r2, r2
 8001dd0:	2a00      	cmp	r2, #0
 8001dd2:	d0e2      	beq.n	8001d9a <HAL_I2C_Master_Transmit+0x8e>
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d1e0      	bne.n	8001d9a <HAL_I2C_Master_Transmit+0x8e>
 8001dd8:	1c70      	adds	r0, r6, #1
 8001dda:	d11d      	bne.n	8001e18 <HAL_I2C_Master_Transmit+0x10c>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001ddc:	698b      	ldr	r3, [r1, #24]
 8001dde:	061a      	lsls	r2, r3, #24
 8001de0:	d5fc      	bpl.n	8001ddc <HAL_I2C_Master_Transmit+0xd0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001de2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001de4:	2bff      	cmp	r3, #255	; 0xff
 8001de6:	d930      	bls.n	8001e4a <HAL_I2C_Master_Transmit+0x13e>
  MODIFY_REG(hi2c->Instance->CR2,
 8001de8:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8001dea:	22ff      	movs	r2, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8001dec:	ea03 0309 	and.w	r3, r3, r9
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8001df0:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001df2:	ea43 0308 	orr.w	r3, r3, r8
 8001df6:	604b      	str	r3, [r1, #4]
 8001df8:	e7cf      	b.n	8001d9a <HAL_I2C_Master_Transmit+0x8e>
    return HAL_BUSY;
 8001dfa:	2002      	movs	r0, #2
}
 8001dfc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  MODIFY_REG(hi2c->Instance->CR2,
 8001e00:	685a      	ldr	r2, [r3, #4]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001e02:	20ff      	movs	r0, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8001e04:	f8df c098 	ldr.w	ip, [pc, #152]	; 8001ea0 <HAL_I2C_Master_Transmit+0x194>
 8001e08:	4923      	ldr	r1, [pc, #140]	; (8001e98 <HAL_I2C_Master_Transmit+0x18c>)
 8001e0a:	ea02 020c 	and.w	r2, r2, ip
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001e0e:	8520      	strh	r0, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001e10:	4339      	orrs	r1, r7
 8001e12:	430a      	orrs	r2, r1
 8001e14:	605a      	str	r2, [r3, #4]
 8001e16:	e7ba      	b.n	8001d8e <HAL_I2C_Master_Transmit+0x82>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001e18:	698b      	ldr	r3, [r1, #24]
 8001e1a:	061b      	lsls	r3, r3, #24
 8001e1c:	d4e1      	bmi.n	8001de2 <HAL_I2C_Master_Transmit+0xd6>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001e1e:	f7ff f851 	bl	8000ec4 <HAL_GetTick>
 8001e22:	1b40      	subs	r0, r0, r5
 8001e24:	4286      	cmp	r6, r0
 8001e26:	d302      	bcc.n	8001e2e <HAL_I2C_Master_Transmit+0x122>
 8001e28:	b10e      	cbz	r6, 8001e2e <HAL_I2C_Master_Transmit+0x122>
 8001e2a:	6821      	ldr	r1, [r4, #0]
 8001e2c:	e7d4      	b.n	8001dd8 <HAL_I2C_Master_Transmit+0xcc>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001e2e:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001e30:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001e32:	2200      	movs	r2, #0
          return HAL_ERROR;
 8001e34:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001e36:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001e38:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001e3c:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001e3e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001e42:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
 8001e46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
          hi2c->XferSize = hi2c->XferCount;
 8001e4a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 8001e4c:	f047 7300 	orr.w	r3, r7, #33554432	; 0x2000000
 8001e50:	6848      	ldr	r0, [r1, #4]
          hi2c->XferSize = hi2c->XferCount;
 8001e52:	b292      	uxth	r2, r2
  MODIFY_REG(hi2c->Instance->CR2,
 8001e54:	ea00 0009 	and.w	r0, r0, r9
 8001e58:	fa5f fc82 	uxtb.w	ip, r2
          hi2c->XferSize = hi2c->XferCount;
 8001e5c:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001e5e:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 8001e62:	4303      	orrs	r3, r0
 8001e64:	604b      	str	r3, [r1, #4]
 8001e66:	e798      	b.n	8001d9a <HAL_I2C_Master_Transmit+0x8e>
        return HAL_ERROR;
 8001e68:	2001      	movs	r0, #1
}
 8001e6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001e6e:	f7ff fea3 	bl	8001bb8 <I2C_WaitOnSTOPFlagUntilTimeout>
 8001e72:	2800      	cmp	r0, #0
 8001e74:	d1f8      	bne.n	8001e68 <HAL_I2C_Master_Transmit+0x15c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001e76:	6823      	ldr	r3, [r4, #0]
 8001e78:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
 8001e7a:	4d08      	ldr	r5, [pc, #32]	; (8001e9c <HAL_I2C_Master_Transmit+0x190>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001e7c:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8001e7e:	685a      	ldr	r2, [r3, #4]
 8001e80:	402a      	ands	r2, r5
 8001e82:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8001e84:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8001e88:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8001e8c:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8001e90:	e7b4      	b.n	8001dfc <HAL_I2C_Master_Transmit+0xf0>
 8001e92:	bf00      	nop
 8001e94:	82002000 	.word	0x82002000
 8001e98:	81ff2000 	.word	0x81ff2000
 8001e9c:	fe00e800 	.word	0xfe00e800
 8001ea0:	fc009800 	.word	0xfc009800
 8001ea4:	01ff0000 	.word	0x01ff0000
 8001ea8:	fc009c00 	.word	0xfc009c00

08001eac <HAL_I2C_Master_Receive>:
{
 8001eac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001eb0:	f890 4041 	ldrb.w	r4, [r0, #65]	; 0x41
{
 8001eb4:	9d08      	ldr	r5, [sp, #32]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001eb6:	2c20      	cmp	r4, #32
 8001eb8:	d17f      	bne.n	8001fba <HAL_I2C_Master_Receive+0x10e>
    __HAL_LOCK(hi2c);
 8001eba:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8001ebe:	2c01      	cmp	r4, #1
 8001ec0:	d07b      	beq.n	8001fba <HAL_I2C_Master_Receive+0x10e>
 8001ec2:	4698      	mov	r8, r3
 8001ec4:	2301      	movs	r3, #1
 8001ec6:	4691      	mov	r9, r2
 8001ec8:	460f      	mov	r7, r1
 8001eca:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8001ece:	4604      	mov	r4, r0
    tickstart = HAL_GetTick();
 8001ed0:	f7fe fff8 	bl	8000ec4 <HAL_GetTick>
 8001ed4:	4606      	mov	r6, r0
 8001ed6:	e004      	b.n	8001ee2 <HAL_I2C_Master_Receive+0x36>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001ed8:	f7fe fff4 	bl	8000ec4 <HAL_GetTick>
 8001edc:	1b80      	subs	r0, r0, r6
 8001ede:	2819      	cmp	r0, #25
 8001ee0:	d878      	bhi.n	8001fd4 <HAL_I2C_Master_Receive+0x128>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001ee2:	6823      	ldr	r3, [r4, #0]
 8001ee4:	6998      	ldr	r0, [r3, #24]
 8001ee6:	f410 4000 	ands.w	r0, r0, #32768	; 0x8000
 8001eea:	d1f5      	bne.n	8001ed8 <HAL_I2C_Master_Receive+0x2c>
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001eec:	2210      	movs	r2, #16
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8001eee:	2122      	movs	r1, #34	; 0x22
    hi2c->pBuffPtr  = pData;
 8001ef0:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 8001ef4:	f3c7 0709 	ubfx	r7, r7, #0, #10
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8001ef8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001efc:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001f00:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->XferCount = Size;
 8001f02:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001f06:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8001f08:	6360      	str	r0, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001f0a:	2aff      	cmp	r2, #255	; 0xff
 8001f0c:	d86f      	bhi.n	8001fee <HAL_I2C_Master_Receive+0x142>
      hi2c->XferSize = hi2c->XferCount;
 8001f0e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 8001f10:	4a7c      	ldr	r2, [pc, #496]	; (8002104 <HAL_I2C_Master_Receive+0x258>)
      hi2c->XferSize = hi2c->XferCount;
 8001f12:	b289      	uxth	r1, r1
  MODIFY_REG(hi2c->Instance->CR2,
 8001f14:	6858      	ldr	r0, [r3, #4]
 8001f16:	433a      	orrs	r2, r7
 8001f18:	f8df e1f4 	ldr.w	lr, [pc, #500]	; 8002110 <HAL_I2C_Master_Receive+0x264>
 8001f1c:	fa5f fc81 	uxtb.w	ip, r1
      hi2c->XferSize = hi2c->XferCount;
 8001f20:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001f22:	ea00 010e 	and.w	r1, r0, lr
 8001f26:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8001f2a:	430a      	orrs	r2, r1
 8001f2c:	605a      	str	r2, [r3, #4]
 8001f2e:	f8df 81e4 	ldr.w	r8, [pc, #484]	; 8002114 <HAL_I2C_Master_Receive+0x268>
 8001f32:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 8002118 <HAL_I2C_Master_Receive+0x26c>
 8001f36:	ea47 0808 	orr.w	r8, r7, r8
    while (hi2c->XferCount > 0U)
 8001f3a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001f3c:	b29b      	uxth	r3, r3
 8001f3e:	b96b      	cbnz	r3, 8001f5c <HAL_I2C_Master_Receive+0xb0>
 8001f40:	e099      	b.n	8002076 <HAL_I2C_Master_Receive+0x1ca>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8001f42:	699a      	ldr	r2, [r3, #24]
 8001f44:	0690      	lsls	r0, r2, #26
 8001f46:	f100 80b6 	bmi.w	80020b6 <HAL_I2C_Master_Receive+0x20a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001f4a:	f7fe ffbb 	bl	8000ec4 <HAL_GetTick>
 8001f4e:	1b80      	subs	r0, r0, r6
 8001f50:	4285      	cmp	r5, r0
 8001f52:	f0c0 80a5 	bcc.w	80020a0 <HAL_I2C_Master_Receive+0x1f4>
 8001f56:	2d00      	cmp	r5, #0
 8001f58:	f000 80a2 	beq.w	80020a0 <HAL_I2C_Master_Receive+0x1f4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8001f5c:	6823      	ldr	r3, [r4, #0]
 8001f5e:	699a      	ldr	r2, [r3, #24]
 8001f60:	0752      	lsls	r2, r2, #29
 8001f62:	d45c      	bmi.n	800201e <HAL_I2C_Master_Receive+0x172>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001f64:	699a      	ldr	r2, [r3, #24]
 8001f66:	06d0      	lsls	r0, r2, #27
 8001f68:	d5eb      	bpl.n	8001f42 <HAL_I2C_Master_Receive+0x96>
 8001f6a:	1c69      	adds	r1, r5, #1
 8001f6c:	d14b      	bne.n	8002006 <HAL_I2C_Master_Receive+0x15a>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001f6e:	699a      	ldr	r2, [r3, #24]
 8001f70:	0692      	lsls	r2, r2, #26
 8001f72:	d5fc      	bpl.n	8001f6e <HAL_I2C_Master_Receive+0xc2>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001f74:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001f76:	2110      	movs	r1, #16
 8001f78:	61d9      	str	r1, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001f7a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8001f7c:	699a      	ldr	r2, [r3, #24]
 8001f7e:	0796      	lsls	r6, r2, #30
 8001f80:	d501      	bpl.n	8001f86 <HAL_I2C_Master_Receive+0xda>
    hi2c->Instance->TXDR = 0x00U;
 8001f82:	2200      	movs	r2, #0
 8001f84:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8001f86:	699a      	ldr	r2, [r3, #24]
 8001f88:	07d5      	lsls	r5, r2, #31
 8001f8a:	d403      	bmi.n	8001f94 <HAL_I2C_Master_Receive+0xe8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8001f8c:	699a      	ldr	r2, [r3, #24]
 8001f8e:	f042 0201 	orr.w	r2, r2, #1
 8001f92:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
 8001f94:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001f96:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
 8001f98:	4e5b      	ldr	r6, [pc, #364]	; (8002108 <HAL_I2C_Master_Receive+0x25c>)
    hi2c->State = HAL_I2C_STATE_READY;
 8001f9a:	2520      	movs	r5, #32
        return HAL_ERROR;
 8001f9c:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8001f9e:	4032      	ands	r2, r6
 8001fa0:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001fa2:	6c63      	ldr	r3, [r4, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
 8001fa4:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001fa8:	f043 0304 	orr.w	r3, r3, #4
 8001fac:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8001fae:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001fb2:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 8001fb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    return HAL_BUSY;
 8001fba:	2002      	movs	r0, #2
}
 8001fbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001fc0:	6993      	ldr	r3, [r2, #24]
 8001fc2:	061b      	lsls	r3, r3, #24
 8001fc4:	d447      	bmi.n	8002056 <HAL_I2C_Master_Receive+0x1aa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001fc6:	f7fe ff7d 	bl	8000ec4 <HAL_GetTick>
 8001fca:	1b80      	subs	r0, r0, r6
 8001fcc:	4285      	cmp	r5, r0
 8001fce:	d301      	bcc.n	8001fd4 <HAL_I2C_Master_Receive+0x128>
 8001fd0:	2d00      	cmp	r5, #0
 8001fd2:	d13a      	bne.n	800204a <HAL_I2C_Master_Receive+0x19e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001fd4:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001fd6:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001fd8:	2200      	movs	r2, #0
          return HAL_ERROR;
 8001fda:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001fdc:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001fde:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001fe2:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001fe4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001fe8:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8001fec:	e7e6      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
  MODIFY_REG(hi2c->Instance->CR2,
 8001fee:	685a      	ldr	r2, [r3, #4]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001ff0:	20ff      	movs	r0, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8001ff2:	f8df c11c 	ldr.w	ip, [pc, #284]	; 8002110 <HAL_I2C_Master_Receive+0x264>
 8001ff6:	4945      	ldr	r1, [pc, #276]	; (800210c <HAL_I2C_Master_Receive+0x260>)
 8001ff8:	ea02 020c 	and.w	r2, r2, ip
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001ffc:	8520      	strh	r0, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001ffe:	4339      	orrs	r1, r7
 8002000:	430a      	orrs	r2, r1
 8002002:	605a      	str	r2, [r3, #4]
 8002004:	e793      	b.n	8001f2e <HAL_I2C_Master_Receive+0x82>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8002006:	699a      	ldr	r2, [r3, #24]
 8002008:	0697      	lsls	r7, r2, #26
 800200a:	d4b3      	bmi.n	8001f74 <HAL_I2C_Master_Receive+0xc8>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800200c:	f7fe ff5a 	bl	8000ec4 <HAL_GetTick>
 8002010:	1b80      	subs	r0, r0, r6
 8002012:	4285      	cmp	r5, r0
 8002014:	d3de      	bcc.n	8001fd4 <HAL_I2C_Master_Receive+0x128>
 8002016:	2d00      	cmp	r5, #0
 8002018:	d0dc      	beq.n	8001fd4 <HAL_I2C_Master_Receive+0x128>
 800201a:	6823      	ldr	r3, [r4, #0]
 800201c:	e7a5      	b.n	8001f6a <HAL_I2C_Master_Receive+0xbe>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 800201e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002020:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002022:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
 8002024:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8002026:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8002028:	3901      	subs	r1, #1
      hi2c->pBuffPtr++;
 800202a:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800202c:	3b01      	subs	r3, #1
      hi2c->XferCount--;
 800202e:	b289      	uxth	r1, r1
      hi2c->pBuffPtr++;
 8002030:	3201      	adds	r2, #1
      hi2c->XferSize--;
 8002032:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
 8002034:	8561      	strh	r1, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8002036:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8002038:	8523      	strh	r3, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800203a:	b289      	uxth	r1, r1
      hi2c->pBuffPtr++;
 800203c:	6262      	str	r2, [r4, #36]	; 0x24
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800203e:	2b00      	cmp	r3, #0
 8002040:	f47f af7b 	bne.w	8001f3a <HAL_I2C_Master_Receive+0x8e>
 8002044:	2900      	cmp	r1, #0
 8002046:	f43f af78 	beq.w	8001f3a <HAL_I2C_Master_Receive+0x8e>
 800204a:	1c68      	adds	r0, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800204c:	6822      	ldr	r2, [r4, #0]
 800204e:	d1b7      	bne.n	8001fc0 <HAL_I2C_Master_Receive+0x114>
 8002050:	6993      	ldr	r3, [r2, #24]
 8002052:	0619      	lsls	r1, r3, #24
 8002054:	d5fc      	bpl.n	8002050 <HAL_I2C_Master_Receive+0x1a4>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8002056:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002058:	2bff      	cmp	r3, #255	; 0xff
 800205a:	d942      	bls.n	80020e2 <HAL_I2C_Master_Receive+0x236>
  MODIFY_REG(hi2c->Instance->CR2,
 800205c:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800205e:	21ff      	movs	r1, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8002060:	ea03 0309 	and.w	r3, r3, r9
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8002064:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8002066:	ea43 0308 	orr.w	r3, r3, r8
 800206a:	6053      	str	r3, [r2, #4]
    while (hi2c->XferCount > 0U)
 800206c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800206e:	b29b      	uxth	r3, r3
 8002070:	2b00      	cmp	r3, #0
 8002072:	f47f af73 	bne.w	8001f5c <HAL_I2C_Master_Receive+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002076:	4632      	mov	r2, r6
 8002078:	4629      	mov	r1, r5
 800207a:	4620      	mov	r0, r4
 800207c:	f7ff fd9c 	bl	8001bb8 <I2C_WaitOnSTOPFlagUntilTimeout>
 8002080:	2800      	cmp	r0, #0
 8002082:	d13d      	bne.n	8002100 <HAL_I2C_Master_Receive+0x254>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002084:	6823      	ldr	r3, [r4, #0]
 8002086:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
 8002088:	4d1f      	ldr	r5, [pc, #124]	; (8002108 <HAL_I2C_Master_Receive+0x25c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800208a:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 800208c:	685a      	ldr	r2, [r3, #4]
 800208e:	402a      	ands	r2, r5
 8002090:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8002092:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8002096:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800209a:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 800209e:	e78d      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80020a0:	6c63      	ldr	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 80020a2:	2220      	movs	r2, #32
      __HAL_UNLOCK(hi2c);
 80020a4:	2100      	movs	r1, #0
        return HAL_ERROR;
 80020a6:	2001      	movs	r0, #1
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80020a8:	4313      	orrs	r3, r2
      __HAL_UNLOCK(hi2c);
 80020aa:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80020ae:	6463      	str	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 80020b0:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
 80020b4:	e782      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
 80020b6:	699a      	ldr	r2, [r3, #24]
 80020b8:	0751      	lsls	r1, r2, #29
 80020ba:	d502      	bpl.n	80020c2 <HAL_I2C_Master_Receive+0x216>
 80020bc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80020be:	2a00      	cmp	r2, #0
 80020c0:	d1ad      	bne.n	800201e <HAL_I2C_Master_Receive+0x172>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80020c2:	2520      	movs	r5, #32
        I2C_RESET_CR2(hi2c);
 80020c4:	4e10      	ldr	r6, [pc, #64]	; (8002108 <HAL_I2C_Master_Receive+0x25c>)
        hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80020c6:	2200      	movs	r2, #0
        return HAL_ERROR;
 80020c8:	2001      	movs	r0, #1
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80020ca:	61dd      	str	r5, [r3, #28]
        I2C_RESET_CR2(hi2c);
 80020cc:	6859      	ldr	r1, [r3, #4]
 80020ce:	4031      	ands	r1, r6
 80020d0:	6059      	str	r1, [r3, #4]
        hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80020d2:	6462      	str	r2, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 80020d4:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->State = HAL_I2C_STATE_READY;
 80020d8:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80020dc:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 80020e0:	e76c      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
          hi2c->XferSize = hi2c->XferCount;
 80020e2:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 80020e4:	f047 7300 	orr.w	r3, r7, #33554432	; 0x2000000
 80020e8:	6850      	ldr	r0, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
 80020ea:	b289      	uxth	r1, r1
  MODIFY_REG(hi2c->Instance->CR2,
 80020ec:	ea00 0009 	and.w	r0, r0, r9
 80020f0:	fa5f fc81 	uxtb.w	ip, r1
          hi2c->XferSize = hi2c->XferCount;
 80020f4:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 80020f6:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 80020fa:	4303      	orrs	r3, r0
 80020fc:	6053      	str	r3, [r2, #4]
 80020fe:	e71c      	b.n	8001f3a <HAL_I2C_Master_Receive+0x8e>
      return HAL_ERROR;
 8002100:	2001      	movs	r0, #1
 8002102:	e75b      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
 8002104:	82002400 	.word	0x82002400
 8002108:	fe00e800 	.word	0xfe00e800
 800210c:	81ff2400 	.word	0x81ff2400
 8002110:	fc009800 	.word	0xfc009800
 8002114:	01ff0000 	.word	0x01ff0000
 8002118:	fc009c00 	.word	0xfc009c00

0800211c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800211c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8002120:	b2db      	uxtb	r3, r3
 8002122:	2b20      	cmp	r3, #32
{
 8002124:	b470      	push	{r4, r5, r6}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002126:	d11f      	bne.n	8002168 <HAL_I2CEx_ConfigAnalogFilter+0x4c>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8002128:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
 800212c:	2a01      	cmp	r2, #1
 800212e:	d01b      	beq.n	8002168 <HAL_I2CEx_ConfigAnalogFilter+0x4c>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8002130:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002132:	2424      	movs	r4, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8002134:	2600      	movs	r6, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002136:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
 800213a:	6815      	ldr	r5, [r2, #0]

    return HAL_OK;
 800213c:	4634      	mov	r4, r6
    __HAL_I2C_DISABLE(hi2c);
 800213e:	f025 0501 	bic.w	r5, r5, #1
 8002142:	6015      	str	r5, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8002144:	6815      	ldr	r5, [r2, #0]
 8002146:	f425 5580 	bic.w	r5, r5, #4096	; 0x1000
 800214a:	6015      	str	r5, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
 800214c:	6815      	ldr	r5, [r2, #0]
 800214e:	4329      	orrs	r1, r5
 8002150:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8002152:	6811      	ldr	r1, [r2, #0]
 8002154:	f041 0101 	orr.w	r1, r1, #1
 8002158:	6011      	str	r1, [r2, #0]
    __HAL_UNLOCK(hi2c);
 800215a:	f880 6040 	strb.w	r6, [r0, #64]	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 800215e:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  }
  else
  {
    return HAL_BUSY;
  }
}
 8002162:	4620      	mov	r0, r4
 8002164:	bc70      	pop	{r4, r5, r6}
 8002166:	4770      	bx	lr
    return HAL_BUSY;
 8002168:	2402      	movs	r4, #2
}
 800216a:	4620      	mov	r0, r4
 800216c:	bc70      	pop	{r4, r5, r6}
 800216e:	4770      	bx	lr

08002170 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8002170:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8002174:	b2db      	uxtb	r3, r3
 8002176:	2b20      	cmp	r3, #32
{
 8002178:	b470      	push	{r4, r5, r6}
  if (hi2c->State == HAL_I2C_STATE_READY)
 800217a:	d11e      	bne.n	80021ba <HAL_I2CEx_ConfigDigitalFilter+0x4a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800217c:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
 8002180:	2a01      	cmp	r2, #1
 8002182:	d01a      	beq.n	80021ba <HAL_I2CEx_ConfigDigitalFilter+0x4a>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8002184:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002186:	2424      	movs	r4, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8002188:	2600      	movs	r6, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
 800218a:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
 800218e:	6814      	ldr	r4, [r2, #0]

    return HAL_OK;
 8002190:	4635      	mov	r5, r6
    __HAL_I2C_DISABLE(hi2c);
 8002192:	f024 0401 	bic.w	r4, r4, #1
 8002196:	6014      	str	r4, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
 8002198:	6814      	ldr	r4, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
 800219a:	f424 6470 	bic.w	r4, r4, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
 800219e:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
    hi2c->Instance->CR1 = tmpreg;
 80021a2:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 80021a4:	6811      	ldr	r1, [r2, #0]
 80021a6:	f041 0101 	orr.w	r1, r1, #1
 80021aa:	6011      	str	r1, [r2, #0]
    __HAL_UNLOCK(hi2c);
 80021ac:	f880 6040 	strb.w	r6, [r0, #64]	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 80021b0:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  }
  else
  {
    return HAL_BUSY;
  }
}
 80021b4:	4628      	mov	r0, r5
 80021b6:	bc70      	pop	{r4, r5, r6}
 80021b8:	4770      	bx	lr
    return HAL_BUSY;
 80021ba:	2502      	movs	r5, #2
}
 80021bc:	4628      	mov	r0, r5
 80021be:	bc70      	pop	{r4, r5, r6}
 80021c0:	4770      	bx	lr
 80021c2:	bf00      	nop

080021c4 <HAL_PWR_EnableBkUpAccess>:
  * @retval None
  */
void HAL_PWR_EnableBkUpAccess(void)
{
  /* Enable access to RTC and backup registers */
  SET_BIT(PWR->CR1, PWR_CR1_DBP);
 80021c4:	4a02      	ldr	r2, [pc, #8]	; (80021d0 <HAL_PWR_EnableBkUpAccess+0xc>)
 80021c6:	6813      	ldr	r3, [r2, #0]
 80021c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80021cc:	6013      	str	r3, [r2, #0]
}
 80021ce:	4770      	bx	lr
 80021d0:	40007000 	.word	0x40007000

080021d4 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 80021d4:	4a1b      	ldr	r2, [pc, #108]	; (8002244 <HAL_PWREx_EnableOverDrive+0x70>)
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80021d6:	4b1c      	ldr	r3, [pc, #112]	; (8002248 <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80021d8:	6c11      	ldr	r1, [r2, #64]	; 0x40
 80021da:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
{
 80021de:	b530      	push	{r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 80021e0:	6411      	str	r1, [r2, #64]	; 0x40
{
 80021e2:	b083      	sub	sp, #12
  __HAL_RCC_PWR_CLK_ENABLE();
 80021e4:	6c12      	ldr	r2, [r2, #64]	; 0x40

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80021e6:	461c      	mov	r4, r3
  __HAL_RCC_PWR_CLK_ENABLE();
 80021e8:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80021ec:	9201      	str	r2, [sp, #4]
 80021ee:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80021f0:	681a      	ldr	r2, [r3, #0]
 80021f2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80021f6:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 80021f8:	f7fe fe64 	bl	8000ec4 <HAL_GetTick>
 80021fc:	4605      	mov	r5, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80021fe:	e005      	b.n	800220c <HAL_PWREx_EnableOverDrive+0x38>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002200:	f7fe fe60 	bl	8000ec4 <HAL_GetTick>
 8002204:	1b40      	subs	r0, r0, r5
 8002206:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800220a:	d817      	bhi.n	800223c <HAL_PWREx_EnableOverDrive+0x68>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800220c:	6863      	ldr	r3, [r4, #4]
 800220e:	03da      	lsls	r2, r3, #15
 8002210:	d5f6      	bpl.n	8002200 <HAL_PWREx_EnableOverDrive+0x2c>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8002212:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002214:	4d0c      	ldr	r5, [pc, #48]	; (8002248 <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8002216:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800221a:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 800221c:	f7fe fe52 	bl	8000ec4 <HAL_GetTick>
 8002220:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002222:	e005      	b.n	8002230 <HAL_PWREx_EnableOverDrive+0x5c>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002224:	f7fe fe4e 	bl	8000ec4 <HAL_GetTick>
 8002228:	1b00      	subs	r0, r0, r4
 800222a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800222e:	d805      	bhi.n	800223c <HAL_PWREx_EnableOverDrive+0x68>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002230:	686b      	ldr	r3, [r5, #4]
 8002232:	039b      	lsls	r3, r3, #14
 8002234:	d5f6      	bpl.n	8002224 <HAL_PWREx_EnableOverDrive+0x50>
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8002236:	2000      	movs	r0, #0
}
 8002238:	b003      	add	sp, #12
 800223a:	bd30      	pop	{r4, r5, pc}
      return HAL_TIMEOUT;
 800223c:	2003      	movs	r0, #3
}
 800223e:	b003      	add	sp, #12
 8002240:	bd30      	pop	{r4, r5, pc}
 8002242:	bf00      	nop
 8002244:	40023800 	.word	0x40023800
 8002248:	40007000 	.word	0x40007000

0800224c <HAL_RCC_OscConfig>:
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800224c:	2800      	cmp	r0, #0
 800224e:	f000 814c 	beq.w	80024ea <HAL_RCC_OscConfig+0x29e>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002252:	6803      	ldr	r3, [r0, #0]
{
 8002254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002258:	07dd      	lsls	r5, r3, #31
{
 800225a:	b082      	sub	sp, #8
 800225c:	4604      	mov	r4, r0
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800225e:	d535      	bpl.n	80022cc <HAL_RCC_OscConfig+0x80>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8002260:	49ac      	ldr	r1, [pc, #688]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002262:	688a      	ldr	r2, [r1, #8]
 8002264:	f002 020c 	and.w	r2, r2, #12
 8002268:	2a04      	cmp	r2, #4
 800226a:	f000 80ff 	beq.w	800246c <HAL_RCC_OscConfig+0x220>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800226e:	688a      	ldr	r2, [r1, #8]
 8002270:	f002 020c 	and.w	r2, r2, #12
 8002274:	2a08      	cmp	r2, #8
 8002276:	f000 80f5 	beq.w	8002464 <HAL_RCC_OscConfig+0x218>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800227a:	6863      	ldr	r3, [r4, #4]
 800227c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002280:	d010      	beq.n	80022a4 <HAL_RCC_OscConfig+0x58>
 8002282:	2b00      	cmp	r3, #0
 8002284:	f000 811a 	beq.w	80024bc <HAL_RCC_OscConfig+0x270>
 8002288:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800228c:	4ba1      	ldr	r3, [pc, #644]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 800228e:	681a      	ldr	r2, [r3, #0]
 8002290:	f000 8164 	beq.w	800255c <HAL_RCC_OscConfig+0x310>
 8002294:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002298:	601a      	str	r2, [r3, #0]
 800229a:	681a      	ldr	r2, [r3, #0]
 800229c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80022a0:	601a      	str	r2, [r3, #0]
 80022a2:	e004      	b.n	80022ae <HAL_RCC_OscConfig+0x62>
 80022a4:	4a9b      	ldr	r2, [pc, #620]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80022a6:	6813      	ldr	r3, [r2, #0]
 80022a8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80022ac:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80022ae:	f7fe fe09 	bl	8000ec4 <HAL_GetTick>

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80022b2:	4d98      	ldr	r5, [pc, #608]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
        tickstart = HAL_GetTick();
 80022b4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80022b6:	e005      	b.n	80022c4 <HAL_RCC_OscConfig+0x78>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80022b8:	f7fe fe04 	bl	8000ec4 <HAL_GetTick>
 80022bc:	1b80      	subs	r0, r0, r6
 80022be:	2864      	cmp	r0, #100	; 0x64
 80022c0:	f200 80ef 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80022c4:	682b      	ldr	r3, [r5, #0]
 80022c6:	039a      	lsls	r2, r3, #14
 80022c8:	d5f6      	bpl.n	80022b8 <HAL_RCC_OscConfig+0x6c>
 80022ca:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80022cc:	079f      	lsls	r7, r3, #30
 80022ce:	d442      	bmi.n	8002356 <HAL_RCC_OscConfig+0x10a>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80022d0:	071a      	lsls	r2, r3, #28
 80022d2:	d517      	bpl.n	8002304 <HAL_RCC_OscConfig+0xb8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80022d4:	6963      	ldr	r3, [r4, #20]
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	f000 80b1 	beq.w	800243e <HAL_RCC_OscConfig+0x1f2>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80022dc:	4b8d      	ldr	r3, [pc, #564]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80022de:	6f5a      	ldr	r2, [r3, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80022e0:	461d      	mov	r5, r3
      __HAL_RCC_LSI_ENABLE();
 80022e2:	f042 0201 	orr.w	r2, r2, #1
 80022e6:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
 80022e8:	f7fe fdec 	bl	8000ec4 <HAL_GetTick>
 80022ec:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80022ee:	e005      	b.n	80022fc <HAL_RCC_OscConfig+0xb0>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80022f0:	f7fe fde8 	bl	8000ec4 <HAL_GetTick>
 80022f4:	1b80      	subs	r0, r0, r6
 80022f6:	2802      	cmp	r0, #2
 80022f8:	f200 80d3 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80022fc:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80022fe:	079b      	lsls	r3, r3, #30
 8002300:	d5f6      	bpl.n	80022f0 <HAL_RCC_OscConfig+0xa4>
 8002302:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002304:	075d      	lsls	r5, r3, #29
 8002306:	d56b      	bpl.n	80023e0 <HAL_RCC_OscConfig+0x194>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002308:	4b82      	ldr	r3, [pc, #520]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 800230a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800230c:	00d0      	lsls	r0, r2, #3
 800230e:	f100 80ee 	bmi.w	80024ee <HAL_RCC_OscConfig+0x2a2>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 8002312:	6c1a      	ldr	r2, [r3, #64]	; 0x40
      pwrclkchanged = SET;
 8002314:	2501      	movs	r5, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8002316:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800231a:	641a      	str	r2, [r3, #64]	; 0x40
 800231c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800231e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002322:	9301      	str	r3, [sp, #4]
 8002324:	9b01      	ldr	r3, [sp, #4]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002326:	4b7c      	ldr	r3, [pc, #496]	; (8002518 <HAL_RCC_OscConfig+0x2cc>)
 8002328:	681a      	ldr	r2, [r3, #0]
 800232a:	05d1      	lsls	r1, r2, #23
 800232c:	f140 80a8 	bpl.w	8002480 <HAL_RCC_OscConfig+0x234>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002330:	68a3      	ldr	r3, [r4, #8]
 8002332:	2b01      	cmp	r3, #1
 8002334:	d039      	beq.n	80023aa <HAL_RCC_OscConfig+0x15e>
 8002336:	2b00      	cmp	r3, #0
 8002338:	f000 80db 	beq.w	80024f2 <HAL_RCC_OscConfig+0x2a6>
 800233c:	2b05      	cmp	r3, #5
 800233e:	4b75      	ldr	r3, [pc, #468]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002340:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002342:	f000 8113 	beq.w	800256c <HAL_RCC_OscConfig+0x320>
 8002346:	f022 0201 	bic.w	r2, r2, #1
 800234a:	671a      	str	r2, [r3, #112]	; 0x70
 800234c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800234e:	f022 0204 	bic.w	r2, r2, #4
 8002352:	671a      	str	r2, [r3, #112]	; 0x70
 8002354:	e02e      	b.n	80023b4 <HAL_RCC_OscConfig+0x168>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002356:	4a6f      	ldr	r2, [pc, #444]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002358:	6891      	ldr	r1, [r2, #8]
 800235a:	f011 0f0c 	tst.w	r1, #12
 800235e:	d063      	beq.n	8002428 <HAL_RCC_OscConfig+0x1dc>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8002360:	6891      	ldr	r1, [r2, #8]
 8002362:	f001 010c 	and.w	r1, r1, #12
 8002366:	2908      	cmp	r1, #8
 8002368:	d05b      	beq.n	8002422 <HAL_RCC_OscConfig+0x1d6>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800236a:	68e3      	ldr	r3, [r4, #12]
 800236c:	2b00      	cmp	r3, #0
 800236e:	f000 80e1 	beq.w	8002534 <HAL_RCC_OscConfig+0x2e8>
        __HAL_RCC_HSI_ENABLE();
 8002372:	4b68      	ldr	r3, [pc, #416]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002374:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002376:	461d      	mov	r5, r3
        __HAL_RCC_HSI_ENABLE();
 8002378:	f042 0201 	orr.w	r2, r2, #1
 800237c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800237e:	f7fe fda1 	bl	8000ec4 <HAL_GetTick>
 8002382:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002384:	e005      	b.n	8002392 <HAL_RCC_OscConfig+0x146>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002386:	f7fe fd9d 	bl	8000ec4 <HAL_GetTick>
 800238a:	1b80      	subs	r0, r0, r6
 800238c:	2802      	cmp	r0, #2
 800238e:	f200 8088 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002392:	682b      	ldr	r3, [r5, #0]
 8002394:	0798      	lsls	r0, r3, #30
 8002396:	d5f6      	bpl.n	8002386 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002398:	682b      	ldr	r3, [r5, #0]
 800239a:	6922      	ldr	r2, [r4, #16]
 800239c:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80023a0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80023a4:	602b      	str	r3, [r5, #0]
 80023a6:	6823      	ldr	r3, [r4, #0]
 80023a8:	e792      	b.n	80022d0 <HAL_RCC_OscConfig+0x84>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80023aa:	4a5a      	ldr	r2, [pc, #360]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80023ac:	6f13      	ldr	r3, [r2, #112]	; 0x70
 80023ae:	f043 0301 	orr.w	r3, r3, #1
 80023b2:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80023b4:	f7fe fd86 	bl	8000ec4 <HAL_GetTick>

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80023b8:	4e56      	ldr	r6, [pc, #344]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
      tickstart = HAL_GetTick();
 80023ba:	4680      	mov	r8, r0
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80023bc:	f241 3788 	movw	r7, #5000	; 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80023c0:	e005      	b.n	80023ce <HAL_RCC_OscConfig+0x182>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80023c2:	f7fe fd7f 	bl	8000ec4 <HAL_GetTick>
 80023c6:	eba0 0008 	sub.w	r0, r0, r8
 80023ca:	42b8      	cmp	r0, r7
 80023cc:	d869      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80023ce:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80023d0:	079b      	lsls	r3, r3, #30
 80023d2:	d5f6      	bpl.n	80023c2 <HAL_RCC_OscConfig+0x176>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 80023d4:	b125      	cbz	r5, 80023e0 <HAL_RCC_OscConfig+0x194>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80023d6:	4a4f      	ldr	r2, [pc, #316]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80023d8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80023da:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80023de:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80023e0:	69a0      	ldr	r0, [r4, #24]
 80023e2:	b1d0      	cbz	r0, 800241a <HAL_RCC_OscConfig+0x1ce>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80023e4:	4b4b      	ldr	r3, [pc, #300]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80023e6:	689a      	ldr	r2, [r3, #8]
 80023e8:	f002 020c 	and.w	r2, r2, #12
 80023ec:	2a08      	cmp	r2, #8
 80023ee:	f000 80c5 	beq.w	800257c <HAL_RCC_OscConfig+0x330>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80023f2:	2802      	cmp	r0, #2
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80023f4:	681a      	ldr	r2, [r3, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80023f6:	f000 80eb 	beq.w	80025d0 <HAL_RCC_OscConfig+0x384>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80023fa:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80023fe:	461c      	mov	r4, r3
        __HAL_RCC_PLL_DISABLE();
 8002400:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8002402:	f7fe fd5f 	bl	8000ec4 <HAL_GetTick>
 8002406:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002408:	e004      	b.n	8002414 <HAL_RCC_OscConfig+0x1c8>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800240a:	f7fe fd5b 	bl	8000ec4 <HAL_GetTick>
 800240e:	1b40      	subs	r0, r0, r5
 8002410:	2802      	cmp	r0, #2
 8002412:	d846      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002414:	6823      	ldr	r3, [r4, #0]
 8002416:	019b      	lsls	r3, r3, #6
 8002418:	d4f7      	bmi.n	800240a <HAL_RCC_OscConfig+0x1be>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 800241a:	2000      	movs	r0, #0
}
 800241c:	b002      	add	sp, #8
 800241e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8002422:	6852      	ldr	r2, [r2, #4]
 8002424:	0256      	lsls	r6, r2, #9
 8002426:	d4a0      	bmi.n	800236a <HAL_RCC_OscConfig+0x11e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002428:	4a3a      	ldr	r2, [pc, #232]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 800242a:	6812      	ldr	r2, [r2, #0]
 800242c:	0795      	lsls	r5, r2, #30
 800242e:	d53c      	bpl.n	80024aa <HAL_RCC_OscConfig+0x25e>
 8002430:	68e2      	ldr	r2, [r4, #12]
 8002432:	2a01      	cmp	r2, #1
 8002434:	d039      	beq.n	80024aa <HAL_RCC_OscConfig+0x25e>
        return HAL_ERROR;
 8002436:	2001      	movs	r0, #1
}
 8002438:	b002      	add	sp, #8
 800243a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800243e:	4b35      	ldr	r3, [pc, #212]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002440:	6f5a      	ldr	r2, [r3, #116]	; 0x74
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002442:	461d      	mov	r5, r3
      __HAL_RCC_LSI_DISABLE();
 8002444:	f022 0201 	bic.w	r2, r2, #1
 8002448:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
 800244a:	f7fe fd3b 	bl	8000ec4 <HAL_GetTick>
 800244e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002450:	e004      	b.n	800245c <HAL_RCC_OscConfig+0x210>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8002452:	f7fe fd37 	bl	8000ec4 <HAL_GetTick>
 8002456:	1b80      	subs	r0, r0, r6
 8002458:	2802      	cmp	r0, #2
 800245a:	d822      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800245c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800245e:	079f      	lsls	r7, r3, #30
 8002460:	d4f7      	bmi.n	8002452 <HAL_RCC_OscConfig+0x206>
 8002462:	e74e      	b.n	8002302 <HAL_RCC_OscConfig+0xb6>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8002464:	684a      	ldr	r2, [r1, #4]
 8002466:	0250      	lsls	r0, r2, #9
 8002468:	f57f af07 	bpl.w	800227a <HAL_RCC_OscConfig+0x2e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800246c:	4a29      	ldr	r2, [pc, #164]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 800246e:	6812      	ldr	r2, [r2, #0]
 8002470:	0391      	lsls	r1, r2, #14
 8002472:	f57f af2b 	bpl.w	80022cc <HAL_RCC_OscConfig+0x80>
 8002476:	6862      	ldr	r2, [r4, #4]
 8002478:	2a00      	cmp	r2, #0
 800247a:	f47f af27 	bne.w	80022cc <HAL_RCC_OscConfig+0x80>
 800247e:	e7da      	b.n	8002436 <HAL_RCC_OscConfig+0x1ea>
      PWR->CR1 |= PWR_CR1_DBP;
 8002480:	681a      	ldr	r2, [r3, #0]
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002482:	461e      	mov	r6, r3
      PWR->CR1 |= PWR_CR1_DBP;
 8002484:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002488:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800248a:	f7fe fd1b 	bl	8000ec4 <HAL_GetTick>
 800248e:	4607      	mov	r7, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002490:	6833      	ldr	r3, [r6, #0]
 8002492:	05da      	lsls	r2, r3, #23
 8002494:	f53f af4c 	bmi.w	8002330 <HAL_RCC_OscConfig+0xe4>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002498:	f7fe fd14 	bl	8000ec4 <HAL_GetTick>
 800249c:	1bc0      	subs	r0, r0, r7
 800249e:	2864      	cmp	r0, #100	; 0x64
 80024a0:	d9f6      	bls.n	8002490 <HAL_RCC_OscConfig+0x244>
            return HAL_TIMEOUT;
 80024a2:	2003      	movs	r0, #3
}
 80024a4:	b002      	add	sp, #8
 80024a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80024aa:	491a      	ldr	r1, [pc, #104]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80024ac:	6920      	ldr	r0, [r4, #16]
 80024ae:	680a      	ldr	r2, [r1, #0]
 80024b0:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 80024b4:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 80024b8:	600a      	str	r2, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80024ba:	e709      	b.n	80022d0 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80024bc:	4b15      	ldr	r3, [pc, #84]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80024be:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80024c0:	461d      	mov	r5, r3
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80024c2:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80024c6:	601a      	str	r2, [r3, #0]
 80024c8:	681a      	ldr	r2, [r3, #0]
 80024ca:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80024ce:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80024d0:	f7fe fcf8 	bl	8000ec4 <HAL_GetTick>
 80024d4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80024d6:	e004      	b.n	80024e2 <HAL_RCC_OscConfig+0x296>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80024d8:	f7fe fcf4 	bl	8000ec4 <HAL_GetTick>
 80024dc:	1b80      	subs	r0, r0, r6
 80024de:	2864      	cmp	r0, #100	; 0x64
 80024e0:	d8df      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80024e2:	682b      	ldr	r3, [r5, #0]
 80024e4:	039b      	lsls	r3, r3, #14
 80024e6:	d4f7      	bmi.n	80024d8 <HAL_RCC_OscConfig+0x28c>
 80024e8:	e6ef      	b.n	80022ca <HAL_RCC_OscConfig+0x7e>
    return HAL_ERROR;
 80024ea:	2001      	movs	r0, #1
}
 80024ec:	4770      	bx	lr
  FlagStatus pwrclkchanged = RESET;
 80024ee:	2500      	movs	r5, #0
 80024f0:	e719      	b.n	8002326 <HAL_RCC_OscConfig+0xda>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80024f2:	4b08      	ldr	r3, [pc, #32]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80024f4:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80024f8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80024fa:	461e      	mov	r6, r3
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80024fc:	f022 0201 	bic.w	r2, r2, #1
 8002500:	671a      	str	r2, [r3, #112]	; 0x70
 8002502:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002504:	f022 0204 	bic.w	r2, r2, #4
 8002508:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
 800250a:	f7fe fcdb 	bl	8000ec4 <HAL_GetTick>
 800250e:	4607      	mov	r7, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002510:	e009      	b.n	8002526 <HAL_RCC_OscConfig+0x2da>
 8002512:	bf00      	nop
 8002514:	40023800 	.word	0x40023800
 8002518:	40007000 	.word	0x40007000
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800251c:	f7fe fcd2 	bl	8000ec4 <HAL_GetTick>
 8002520:	1bc0      	subs	r0, r0, r7
 8002522:	4540      	cmp	r0, r8
 8002524:	d8bd      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002526:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8002528:	0798      	lsls	r0, r3, #30
 800252a:	d4f7      	bmi.n	800251c <HAL_RCC_OscConfig+0x2d0>
    if (pwrclkchanged == SET)
 800252c:	2d00      	cmp	r5, #0
 800252e:	f43f af57 	beq.w	80023e0 <HAL_RCC_OscConfig+0x194>
 8002532:	e750      	b.n	80023d6 <HAL_RCC_OscConfig+0x18a>
        __HAL_RCC_HSI_DISABLE();
 8002534:	4b41      	ldr	r3, [pc, #260]	; (800263c <HAL_RCC_OscConfig+0x3f0>)
 8002536:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002538:	461d      	mov	r5, r3
        __HAL_RCC_HSI_DISABLE();
 800253a:	f022 0201 	bic.w	r2, r2, #1
 800253e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8002540:	f7fe fcc0 	bl	8000ec4 <HAL_GetTick>
 8002544:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002546:	e004      	b.n	8002552 <HAL_RCC_OscConfig+0x306>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002548:	f7fe fcbc 	bl	8000ec4 <HAL_GetTick>
 800254c:	1b80      	subs	r0, r0, r6
 800254e:	2802      	cmp	r0, #2
 8002550:	d8a7      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002552:	682b      	ldr	r3, [r5, #0]
 8002554:	0799      	lsls	r1, r3, #30
 8002556:	d4f7      	bmi.n	8002548 <HAL_RCC_OscConfig+0x2fc>
 8002558:	6823      	ldr	r3, [r4, #0]
 800255a:	e6b9      	b.n	80022d0 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800255c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8002560:	601a      	str	r2, [r3, #0]
 8002562:	681a      	ldr	r2, [r3, #0]
 8002564:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002568:	601a      	str	r2, [r3, #0]
 800256a:	e6a0      	b.n	80022ae <HAL_RCC_OscConfig+0x62>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800256c:	f042 0204 	orr.w	r2, r2, #4
 8002570:	671a      	str	r2, [r3, #112]	; 0x70
 8002572:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002574:	f042 0201 	orr.w	r2, r2, #1
 8002578:	671a      	str	r2, [r3, #112]	; 0x70
 800257a:	e71b      	b.n	80023b4 <HAL_RCC_OscConfig+0x168>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800257c:	2801      	cmp	r0, #1
      pll_config = RCC->PLLCFGR;
 800257e:	685a      	ldr	r2, [r3, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8002580:	f43f af5a 	beq.w	8002438 <HAL_RCC_OscConfig+0x1ec>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002584:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8002588:	69e1      	ldr	r1, [r4, #28]
 800258a:	428b      	cmp	r3, r1
 800258c:	f47f af53 	bne.w	8002436 <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8002590:	f002 033f 	and.w	r3, r2, #63	; 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002594:	6a21      	ldr	r1, [r4, #32]
 8002596:	428b      	cmp	r3, r1
 8002598:	f47f af4d 	bne.w	8002436 <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800259c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80025a0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80025a2:	4013      	ands	r3, r2
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80025a4:	ebb3 1f81 	cmp.w	r3, r1, lsl #6
 80025a8:	f47f af45 	bne.w	8002436 <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80025ac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80025ae:	f402 3140 	and.w	r1, r2, #196608	; 0x30000
 80025b2:	085b      	lsrs	r3, r3, #1
 80025b4:	3b01      	subs	r3, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80025b6:	ebb1 4f03 	cmp.w	r1, r3, lsl #16
 80025ba:	f47f af3c 	bne.w	8002436 <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80025be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80025c0:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80025c4:	ebb2 6f03 	cmp.w	r2, r3, lsl #24
    return HAL_ERROR;
 80025c8:	bf14      	ite	ne
 80025ca:	2001      	movne	r0, #1
 80025cc:	2000      	moveq	r0, #0
 80025ce:	e733      	b.n	8002438 <HAL_RCC_OscConfig+0x1ec>
        __HAL_RCC_PLL_DISABLE();
 80025d0:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80025d4:	461d      	mov	r5, r3
        __HAL_RCC_PLL_DISABLE();
 80025d6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80025d8:	f7fe fc74 	bl	8000ec4 <HAL_GetTick>
 80025dc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80025de:	e005      	b.n	80025ec <HAL_RCC_OscConfig+0x3a0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80025e0:	f7fe fc70 	bl	8000ec4 <HAL_GetTick>
 80025e4:	1b80      	subs	r0, r0, r6
 80025e6:	2802      	cmp	r0, #2
 80025e8:	f63f af5b 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80025ec:	682b      	ldr	r3, [r5, #0]
 80025ee:	0199      	lsls	r1, r3, #6
 80025f0:	d4f6      	bmi.n	80025e0 <HAL_RCC_OscConfig+0x394>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80025f2:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80025f6:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80025f8:	4313      	orrs	r3, r2
 80025fa:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 80025fe:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002602:	4c0e      	ldr	r4, [pc, #56]	; (800263c <HAL_RCC_OscConfig+0x3f0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002604:	0852      	lsrs	r2, r2, #1
 8002606:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800260a:	3a01      	subs	r2, #1
 800260c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8002610:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002614:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8002616:	682b      	ldr	r3, [r5, #0]
 8002618:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800261c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800261e:	f7fe fc51 	bl	8000ec4 <HAL_GetTick>
 8002622:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002624:	e005      	b.n	8002632 <HAL_RCC_OscConfig+0x3e6>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8002626:	f7fe fc4d 	bl	8000ec4 <HAL_GetTick>
 800262a:	1b40      	subs	r0, r0, r5
 800262c:	2802      	cmp	r0, #2
 800262e:	f63f af38 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002632:	6823      	ldr	r3, [r4, #0]
 8002634:	019a      	lsls	r2, r3, #6
 8002636:	d5f6      	bpl.n	8002626 <HAL_RCC_OscConfig+0x3da>
 8002638:	e6ef      	b.n	800241a <HAL_RCC_OscConfig+0x1ce>
 800263a:	bf00      	nop
 800263c:	40023800 	.word	0x40023800

08002640 <HAL_RCC_ClockConfig>:
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
  uint32_t tickstart = 0;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8002640:	b178      	cbz	r0, 8002662 <HAL_RCC_ClockConfig+0x22>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8002642:	4a5e      	ldr	r2, [pc, #376]	; (80027bc <HAL_RCC_ClockConfig+0x17c>)
 8002644:	6813      	ldr	r3, [r2, #0]
 8002646:	f003 030f 	and.w	r3, r3, #15
 800264a:	428b      	cmp	r3, r1
 800264c:	d20b      	bcs.n	8002666 <HAL_RCC_ClockConfig+0x26>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800264e:	6813      	ldr	r3, [r2, #0]
 8002650:	f023 030f 	bic.w	r3, r3, #15
 8002654:	430b      	orrs	r3, r1
 8002656:	6013      	str	r3, [r2, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8002658:	6813      	ldr	r3, [r2, #0]
 800265a:	f003 030f 	and.w	r3, r3, #15
 800265e:	428b      	cmp	r3, r1
 8002660:	d001      	beq.n	8002666 <HAL_RCC_ClockConfig+0x26>
    return HAL_ERROR;
 8002662:	2001      	movs	r0, #1

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);

  return HAL_OK;
}
 8002664:	4770      	bx	lr
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002666:	6803      	ldr	r3, [r0, #0]
{
 8002668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800266c:	079d      	lsls	r5, r3, #30
 800266e:	d514      	bpl.n	800269a <HAL_RCC_ClockConfig+0x5a>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002670:	075c      	lsls	r4, r3, #29
 8002672:	d504      	bpl.n	800267e <HAL_RCC_ClockConfig+0x3e>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8002674:	4c52      	ldr	r4, [pc, #328]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002676:	68a2      	ldr	r2, [r4, #8]
 8002678:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800267c:	60a2      	str	r2, [r4, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800267e:	071a      	lsls	r2, r3, #28
 8002680:	d504      	bpl.n	800268c <HAL_RCC_ClockConfig+0x4c>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8002682:	4c4f      	ldr	r4, [pc, #316]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002684:	68a2      	ldr	r2, [r4, #8]
 8002686:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800268a:	60a2      	str	r2, [r4, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800268c:	4c4c      	ldr	r4, [pc, #304]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 800268e:	6885      	ldr	r5, [r0, #8]
 8002690:	68a2      	ldr	r2, [r4, #8]
 8002692:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8002696:	432a      	orrs	r2, r5
 8002698:	60a2      	str	r2, [r4, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800269a:	07df      	lsls	r7, r3, #31
 800269c:	4604      	mov	r4, r0
 800269e:	460d      	mov	r5, r1
 80026a0:	d521      	bpl.n	80026e6 <HAL_RCC_ClockConfig+0xa6>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80026a2:	6842      	ldr	r2, [r0, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80026a4:	4b46      	ldr	r3, [pc, #280]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80026a6:	2a01      	cmp	r2, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80026a8:	681b      	ldr	r3, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80026aa:	d063      	beq.n	8002774 <HAL_RCC_ClockConfig+0x134>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80026ac:	2a02      	cmp	r2, #2
 80026ae:	d079      	beq.n	80027a4 <HAL_RCC_ClockConfig+0x164>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80026b0:	0799      	lsls	r1, r3, #30
 80026b2:	d528      	bpl.n	8002706 <HAL_RCC_ClockConfig+0xc6>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80026b4:	4942      	ldr	r1, [pc, #264]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80026b6:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80026ba:	688b      	ldr	r3, [r1, #8]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80026bc:	460e      	mov	r6, r1
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80026be:	f023 0303 	bic.w	r3, r3, #3
 80026c2:	4313      	orrs	r3, r2
 80026c4:	608b      	str	r3, [r1, #8]
    tickstart = HAL_GetTick();
 80026c6:	f7fe fbfd 	bl	8000ec4 <HAL_GetTick>
 80026ca:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80026cc:	e004      	b.n	80026d8 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80026ce:	f7fe fbf9 	bl	8000ec4 <HAL_GetTick>
 80026d2:	1bc0      	subs	r0, r0, r7
 80026d4:	4540      	cmp	r0, r8
 80026d6:	d863      	bhi.n	80027a0 <HAL_RCC_ClockConfig+0x160>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80026d8:	68b3      	ldr	r3, [r6, #8]
 80026da:	6862      	ldr	r2, [r4, #4]
 80026dc:	f003 030c 	and.w	r3, r3, #12
 80026e0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80026e4:	d1f3      	bne.n	80026ce <HAL_RCC_ClockConfig+0x8e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80026e6:	4a35      	ldr	r2, [pc, #212]	; (80027bc <HAL_RCC_ClockConfig+0x17c>)
 80026e8:	6813      	ldr	r3, [r2, #0]
 80026ea:	f003 030f 	and.w	r3, r3, #15
 80026ee:	42ab      	cmp	r3, r5
 80026f0:	d90c      	bls.n	800270c <HAL_RCC_ClockConfig+0xcc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80026f2:	6813      	ldr	r3, [r2, #0]
 80026f4:	f023 030f 	bic.w	r3, r3, #15
 80026f8:	432b      	orrs	r3, r5
 80026fa:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80026fc:	6813      	ldr	r3, [r2, #0]
 80026fe:	f003 030f 	and.w	r3, r3, #15
 8002702:	42ab      	cmp	r3, r5
 8002704:	d002      	beq.n	800270c <HAL_RCC_ClockConfig+0xcc>
    return HAL_ERROR;
 8002706:	2001      	movs	r0, #1
}
 8002708:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800270c:	6823      	ldr	r3, [r4, #0]
 800270e:	075a      	lsls	r2, r3, #29
 8002710:	d506      	bpl.n	8002720 <HAL_RCC_ClockConfig+0xe0>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002712:	492b      	ldr	r1, [pc, #172]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002714:	68e0      	ldr	r0, [r4, #12]
 8002716:	688a      	ldr	r2, [r1, #8]
 8002718:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800271c:	4302      	orrs	r2, r0
 800271e:	608a      	str	r2, [r1, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002720:	071b      	lsls	r3, r3, #28
 8002722:	d507      	bpl.n	8002734 <HAL_RCC_ClockConfig+0xf4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8002724:	4a26      	ldr	r2, [pc, #152]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002726:	6921      	ldr	r1, [r4, #16]
 8002728:	6893      	ldr	r3, [r2, #8]
 800272a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800272e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8002732:	6093      	str	r3, [r2, #8]
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002734:	4922      	ldr	r1, [pc, #136]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002736:	688b      	ldr	r3, [r1, #8]
 8002738:	f003 030c 	and.w	r3, r3, #12
 800273c:	2b04      	cmp	r3, #4
 800273e:	d01c      	beq.n	800277a <HAL_RCC_ClockConfig+0x13a>
 8002740:	2b08      	cmp	r3, #8
 8002742:	d12b      	bne.n	800279c <HAL_RCC_ClockConfig+0x15c>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002744:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8002746:	684b      	ldr	r3, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002748:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800274c:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 800274e:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
 8002752:	d12a      	bne.n	80027aa <HAL_RCC_ClockConfig+0x16a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002754:	481b      	ldr	r0, [pc, #108]	; (80027c4 <HAL_RCC_ClockConfig+0x184>)
 8002756:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800275a:	fba1 0100 	umull	r0, r1, r1, r0
 800275e:	f7fe f9f5 	bl	8000b4c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8002762:	4b17      	ldr	r3, [pc, #92]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002764:	685b      	ldr	r3, [r3, #4]
 8002766:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800276a:	3301      	adds	r3, #1
 800276c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800276e:	fbb0 f3f3 	udiv	r3, r0, r3
 8002772:	e003      	b.n	800277c <HAL_RCC_ClockConfig+0x13c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002774:	039e      	lsls	r6, r3, #14
 8002776:	d49d      	bmi.n	80026b4 <HAL_RCC_ClockConfig+0x74>
 8002778:	e7c5      	b.n	8002706 <HAL_RCC_ClockConfig+0xc6>
      sysclockfreq = HSE_VALUE;
 800277a:	4b13      	ldr	r3, [pc, #76]	; (80027c8 <HAL_RCC_ClockConfig+0x188>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800277c:	4a10      	ldr	r2, [pc, #64]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 800277e:	4c13      	ldr	r4, [pc, #76]	; (80027cc <HAL_RCC_ClockConfig+0x18c>)
 8002780:	6892      	ldr	r2, [r2, #8]
  HAL_InitTick(uwTickPrio);
 8002782:	4813      	ldr	r0, [pc, #76]	; (80027d0 <HAL_RCC_ClockConfig+0x190>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8002784:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8002788:	4912      	ldr	r1, [pc, #72]	; (80027d4 <HAL_RCC_ClockConfig+0x194>)
  HAL_InitTick(uwTickPrio);
 800278a:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800278c:	5ca2      	ldrb	r2, [r4, r2]
 800278e:	40d3      	lsrs	r3, r2
 8002790:	600b      	str	r3, [r1, #0]
  HAL_InitTick(uwTickPrio);
 8002792:	f7fe fb5b 	bl	8000e4c <HAL_InitTick>
  return HAL_OK;
 8002796:	2000      	movs	r0, #0
}
 8002798:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      sysclockfreq = HSI_VALUE;
 800279c:	4b09      	ldr	r3, [pc, #36]	; (80027c4 <HAL_RCC_ClockConfig+0x184>)
 800279e:	e7ed      	b.n	800277c <HAL_RCC_ClockConfig+0x13c>
        return HAL_TIMEOUT;
 80027a0:	2003      	movs	r0, #3
 80027a2:	e7b1      	b.n	8002708 <HAL_RCC_ClockConfig+0xc8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80027a4:	0198      	lsls	r0, r3, #6
 80027a6:	d485      	bmi.n	80026b4 <HAL_RCC_ClockConfig+0x74>
 80027a8:	e7ad      	b.n	8002706 <HAL_RCC_ClockConfig+0xc6>
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80027aa:	4807      	ldr	r0, [pc, #28]	; (80027c8 <HAL_RCC_ClockConfig+0x188>)
 80027ac:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80027b0:	2300      	movs	r3, #0
 80027b2:	fba1 0100 	umull	r0, r1, r1, r0
 80027b6:	f7fe f9c9 	bl	8000b4c <__aeabi_uldivmod>
 80027ba:	e7d2      	b.n	8002762 <HAL_RCC_ClockConfig+0x122>
 80027bc:	40023c00 	.word	0x40023c00
 80027c0:	40023800 	.word	0x40023800
 80027c4:	00f42400 	.word	0x00f42400
 80027c8:	017d7840 	.word	0x017d7840
 80027cc:	0801b354 	.word	0x0801b354
 80027d0:	20000004 	.word	0x20000004
 80027d4:	20000038 	.word	0x20000038

080027d8 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80027d8:	4916      	ldr	r1, [pc, #88]	; (8002834 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 80027da:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80027dc:	688b      	ldr	r3, [r1, #8]
 80027de:	f003 030c 	and.w	r3, r3, #12
 80027e2:	2b04      	cmp	r3, #4
 80027e4:	d01b      	beq.n	800281e <HAL_RCC_GetSysClockFreq+0x46>
 80027e6:	2b08      	cmp	r3, #8
 80027e8:	d117      	bne.n	800281a <HAL_RCC_GetSysClockFreq+0x42>
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80027ea:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80027ec:	684b      	ldr	r3, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80027ee:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80027f2:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80027f4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
 80027f8:	d113      	bne.n	8002822 <HAL_RCC_GetSysClockFreq+0x4a>
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80027fa:	480f      	ldr	r0, [pc, #60]	; (8002838 <HAL_RCC_GetSysClockFreq+0x60>)
 80027fc:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8002800:	fba1 0100 	umull	r0, r1, r1, r0
 8002804:	f7fe f9a2 	bl	8000b4c <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8002808:	4b0a      	ldr	r3, [pc, #40]	; (8002834 <HAL_RCC_GetSysClockFreq+0x5c>)
 800280a:	685b      	ldr	r3, [r3, #4]
 800280c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8002810:	3301      	adds	r3, #1
 8002812:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco / pllp;
 8002814:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8002818:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800281a:	4807      	ldr	r0, [pc, #28]	; (8002838 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800281c:	bd08      	pop	{r3, pc}
      sysclockfreq = HSE_VALUE;
 800281e:	4807      	ldr	r0, [pc, #28]	; (800283c <HAL_RCC_GetSysClockFreq+0x64>)
}
 8002820:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002822:	4806      	ldr	r0, [pc, #24]	; (800283c <HAL_RCC_GetSysClockFreq+0x64>)
 8002824:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8002828:	2300      	movs	r3, #0
 800282a:	fba1 0100 	umull	r0, r1, r1, r0
 800282e:	f7fe f98d 	bl	8000b4c <__aeabi_uldivmod>
 8002832:	e7e9      	b.n	8002808 <HAL_RCC_GetSysClockFreq+0x30>
 8002834:	40023800 	.word	0x40023800
 8002838:	00f42400 	.word	0x00f42400
 800283c:	017d7840 	.word	0x017d7840

08002840 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8002840:	4b04      	ldr	r3, [pc, #16]	; (8002854 <HAL_RCC_GetPCLK1Freq+0x14>)
 8002842:	4a05      	ldr	r2, [pc, #20]	; (8002858 <HAL_RCC_GetPCLK1Freq+0x18>)
 8002844:	689b      	ldr	r3, [r3, #8]
  return SystemCoreClock;
 8002846:	4905      	ldr	r1, [pc, #20]	; (800285c <HAL_RCC_GetPCLK1Freq+0x1c>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8002848:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800284c:	6808      	ldr	r0, [r1, #0]
 800284e:	5cd3      	ldrb	r3, [r2, r3]
}
 8002850:	40d8      	lsrs	r0, r3
 8002852:	4770      	bx	lr
 8002854:	40023800 	.word	0x40023800
 8002858:	0801b364 	.word	0x0801b364
 800285c:	20000038 	.word	0x20000038

08002860 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8002860:	4b04      	ldr	r3, [pc, #16]	; (8002874 <HAL_RCC_GetPCLK2Freq+0x14>)
 8002862:	4a05      	ldr	r2, [pc, #20]	; (8002878 <HAL_RCC_GetPCLK2Freq+0x18>)
 8002864:	689b      	ldr	r3, [r3, #8]
  return SystemCoreClock;
 8002866:	4905      	ldr	r1, [pc, #20]	; (800287c <HAL_RCC_GetPCLK2Freq+0x1c>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8002868:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800286c:	6808      	ldr	r0, [r1, #0]
 800286e:	5cd3      	ldrb	r3, [r2, r3]
}
 8002870:	40d8      	lsrs	r0, r3
 8002872:	4770      	bx	lr
 8002874:	40023800 	.word	0x40023800
 8002878:	0801b364 	.word	0x0801b364
 800287c:	20000038 	.word	0x20000038

08002880 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8002880:	6803      	ldr	r3, [r0, #0]
{
 8002882:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8002886:	f013 0601 	ands.w	r6, r3, #1
{
 800288a:	b083      	sub	sp, #12
 800288c:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800288e:	d00b      	beq.n	80028a8 <HAL_RCCEx_PeriphCLKConfig+0x28>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8002890:	4ab6      	ldr	r2, [pc, #728]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002892:	6891      	ldr	r1, [r2, #8]
 8002894:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 8002898:	6091      	str	r1, [r2, #8]
 800289a:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800289c:	6891      	ldr	r1, [r2, #8]
 800289e:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 80028a0:	fab6 f686 	clz	r6, r6
 80028a4:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80028a6:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 80028a8:	f413 2500 	ands.w	r5, r3, #524288	; 0x80000
 80028ac:	d010      	beq.n	80028d0 <HAL_RCCEx_PeriphCLKConfig+0x50>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80028ae:	49af      	ldr	r1, [pc, #700]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80028b0:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 80028b2:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 80028b6:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80028ba:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 80028be:	ea42 0205 	orr.w	r2, r2, r5
 80028c2:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 80028c6:	f000 821a 	beq.w	8002cfe <HAL_RCCEx_PeriphCLKConfig+0x47e>
    {
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 80028ca:	fab5 f585 	clz	r5, r5
 80028ce:	096d      	lsrs	r5, r5, #5
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 80028d0:	02d9      	lsls	r1, r3, #11
 80028d2:	d510      	bpl.n	80028f6 <HAL_RCCEx_PeriphCLKConfig+0x76>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 80028d4:	48a5      	ldr	r0, [pc, #660]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80028d6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80028d8:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 80028dc:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 80028e0:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80028e4:	ea42 0201 	orr.w	r2, r2, r1
 80028e8:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 80028ec:	f000 820a 	beq.w	8002d04 <HAL_RCCEx_PeriphCLKConfig+0x484>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 80028f0:	2900      	cmp	r1, #0
 80028f2:	bf08      	it	eq
 80028f4:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 80028f6:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 80028fa:	bf18      	it	ne
 80028fc:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80028fe:	069a      	lsls	r2, r3, #26
 8002900:	f100 81b7 	bmi.w	8002c72 <HAL_RCCEx_PeriphCLKConfig+0x3f2>
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8002904:	06d9      	lsls	r1, r3, #27
 8002906:	d50c      	bpl.n	8002922 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8002908:	4a98      	ldr	r2, [pc, #608]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800290a:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 800290e:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 8002912:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
 8002916:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 800291a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800291c:	4301      	orrs	r1, r0
 800291e:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8002922:	045a      	lsls	r2, r3, #17
 8002924:	d508      	bpl.n	8002938 <HAL_RCCEx_PeriphCLKConfig+0xb8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8002926:	4991      	ldr	r1, [pc, #580]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002928:	6e60      	ldr	r0, [r4, #100]	; 0x64
 800292a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800292e:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8002932:	4302      	orrs	r2, r0
 8002934:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8002938:	041f      	lsls	r7, r3, #16
 800293a:	d508      	bpl.n	800294e <HAL_RCCEx_PeriphCLKConfig+0xce>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 800293c:	498b      	ldr	r1, [pc, #556]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800293e:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8002940:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002944:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8002948:	4302      	orrs	r2, r0
 800294a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 800294e:	03d8      	lsls	r0, r3, #15
 8002950:	d508      	bpl.n	8002964 <HAL_RCCEx_PeriphCLKConfig+0xe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8002952:	4986      	ldr	r1, [pc, #536]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002954:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8002956:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800295a:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 800295e:	4302      	orrs	r2, r0
 8002960:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8002964:	0399      	lsls	r1, r3, #14
 8002966:	d508      	bpl.n	800297a <HAL_RCCEx_PeriphCLKConfig+0xfa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8002968:	4980      	ldr	r1, [pc, #512]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800296a:	6f20      	ldr	r0, [r4, #112]	; 0x70
 800296c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002970:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8002974:	4302      	orrs	r2, r0
 8002976:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800297a:	065a      	lsls	r2, r3, #25
 800297c:	d508      	bpl.n	8002990 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800297e:	497b      	ldr	r1, [pc, #492]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002980:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002982:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002986:	f022 0203 	bic.w	r2, r2, #3
 800298a:	4302      	orrs	r2, r0
 800298c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8002990:	061f      	lsls	r7, r3, #24
 8002992:	d508      	bpl.n	80029a6 <HAL_RCCEx_PeriphCLKConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8002994:	4975      	ldr	r1, [pc, #468]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002996:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8002998:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800299c:	f022 020c 	bic.w	r2, r2, #12
 80029a0:	4302      	orrs	r2, r0
 80029a2:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 80029a6:	05d8      	lsls	r0, r3, #23
 80029a8:	d508      	bpl.n	80029bc <HAL_RCCEx_PeriphCLKConfig+0x13c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 80029aa:	4970      	ldr	r1, [pc, #448]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80029ac:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80029ae:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80029b2:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 80029b6:	4302      	orrs	r2, r0
 80029b8:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 80029bc:	0599      	lsls	r1, r3, #22
 80029be:	d508      	bpl.n	80029d2 <HAL_RCCEx_PeriphCLKConfig+0x152>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 80029c0:	496a      	ldr	r1, [pc, #424]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80029c2:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80029c4:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80029c8:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 80029cc:	4302      	orrs	r2, r0
 80029ce:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80029d2:	055a      	lsls	r2, r3, #21
 80029d4:	d508      	bpl.n	80029e8 <HAL_RCCEx_PeriphCLKConfig+0x168>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 80029d6:	4965      	ldr	r1, [pc, #404]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80029d8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80029da:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80029de:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80029e2:	4302      	orrs	r2, r0
 80029e4:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80029e8:	051f      	lsls	r7, r3, #20
 80029ea:	d508      	bpl.n	80029fe <HAL_RCCEx_PeriphCLKConfig+0x17e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 80029ec:	495f      	ldr	r1, [pc, #380]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80029ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80029f0:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80029f4:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 80029f8:	4302      	orrs	r2, r0
 80029fa:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 80029fe:	04d8      	lsls	r0, r3, #19
 8002a00:	d508      	bpl.n	8002a14 <HAL_RCCEx_PeriphCLKConfig+0x194>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8002a02:	495a      	ldr	r1, [pc, #360]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a04:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8002a06:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002a0a:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8002a0e:	4302      	orrs	r2, r0
 8002a10:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8002a14:	0499      	lsls	r1, r3, #18
 8002a16:	d508      	bpl.n	8002a2a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8002a18:	4954      	ldr	r1, [pc, #336]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a1a:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8002a1c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002a20:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8002a24:	4302      	orrs	r2, r0
 8002a26:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8002a2a:	025a      	lsls	r2, r3, #9
 8002a2c:	d508      	bpl.n	8002a40 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8002a2e:	494f      	ldr	r1, [pc, #316]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a30:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8002a32:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002a36:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 8002a3a:	4302      	orrs	r2, r0
 8002a3c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8002a40:	029f      	lsls	r7, r3, #10
 8002a42:	d50c      	bpl.n	8002a5e <HAL_RCCEx_PeriphCLKConfig+0x1de>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002a44:	4949      	ldr	r1, [pc, #292]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a46:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 8002a48:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8002a4c:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002a50:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
      pllsaiused = 1;
 8002a54:	bf08      	it	eq
 8002a56:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002a58:	4302      	orrs	r2, r0
 8002a5a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 8002a5e:	f013 0f08 	tst.w	r3, #8
 8002a62:	bf18      	it	ne
 8002a64:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8002a66:	0358      	lsls	r0, r3, #13
 8002a68:	d508      	bpl.n	8002a7c <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8002a6a:	4940      	ldr	r1, [pc, #256]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a6c:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8002a6e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002a72:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8002a76:	4302      	orrs	r2, r0
 8002a78:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8002a7c:	0219      	lsls	r1, r3, #8
 8002a7e:	f100 80ed 	bmi.w	8002c5c <HAL_RCCEx_PeriphCLKConfig+0x3dc>
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8002a82:	2e01      	cmp	r6, #1
 8002a84:	d001      	beq.n	8002a8a <HAL_RCCEx_PeriphCLKConfig+0x20a>
 8002a86:	019a      	lsls	r2, r3, #6
 8002a88:	d560      	bpl.n	8002b4c <HAL_RCCEx_PeriphCLKConfig+0x2cc>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8002a8a:	4b38      	ldr	r3, [pc, #224]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a8c:	681a      	ldr	r2, [r3, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8002a8e:	461e      	mov	r6, r3
    __HAL_RCC_PLLI2S_DISABLE();
 8002a90:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 8002a94:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002a96:	f7fe fa15 	bl	8000ec4 <HAL_GetTick>
 8002a9a:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8002a9c:	e005      	b.n	8002aaa <HAL_RCCEx_PeriphCLKConfig+0x22a>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8002a9e:	f7fe fa11 	bl	8000ec4 <HAL_GetTick>
 8002aa2:	1bc0      	subs	r0, r0, r7
 8002aa4:	2864      	cmp	r0, #100	; 0x64
 8002aa6:	f200 80d5 	bhi.w	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8002aaa:	6833      	ldr	r3, [r6, #0]
 8002aac:	011b      	lsls	r3, r3, #4
 8002aae:	d4f6      	bmi.n	8002a9e <HAL_RCCEx_PeriphCLKConfig+0x21e>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8002ab0:	6823      	ldr	r3, [r4, #0]
 8002ab2:	07df      	lsls	r7, r3, #31
 8002ab4:	d512      	bpl.n	8002adc <HAL_RCCEx_PeriphCLKConfig+0x25c>
 8002ab6:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8002ab8:	b982      	cbnz	r2, 8002adc <HAL_RCCEx_PeriphCLKConfig+0x25c>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8002aba:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8002abe:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8002ac2:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8002ac6:	6860      	ldr	r0, [r4, #4]
 8002ac8:	f007 6770 	and.w	r7, r7, #251658240	; 0xf000000
 8002acc:	68a1      	ldr	r1, [r4, #8]
 8002ace:	433a      	orrs	r2, r7
 8002ad0:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002ad4:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
 8002ad8:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8002adc:	031e      	lsls	r6, r3, #12
 8002ade:	d504      	bpl.n	8002aea <HAL_RCCEx_PeriphCLKConfig+0x26a>
 8002ae0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8002ae2:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 8002ae6:	f000 811e 	beq.w	8002d26 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 8002aea:	02d8      	lsls	r0, r3, #11
 8002aec:	d504      	bpl.n	8002af8 <HAL_RCCEx_PeriphCLKConfig+0x278>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8002aee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8002af0:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 8002af4:	f000 8117 	beq.w	8002d26 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8002af8:	01d9      	lsls	r1, r3, #7
 8002afa:	d511      	bpl.n	8002b20 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8002afc:	4e1b      	ldr	r6, [pc, #108]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8002afe:	6860      	ldr	r0, [r4, #4]
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8002b00:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8002b04:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8002b08:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8002b0c:	6921      	ldr	r1, [r4, #16]
 8002b0e:	f007 47e0 	and.w	r7, r7, #1879048192	; 0x70000000
 8002b12:	433a      	orrs	r2, r7
 8002b14:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002b18:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002b1c:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8002b20:	019a      	lsls	r2, r3, #6
 8002b22:	f100 80f1 	bmi.w	8002d08 <HAL_RCCEx_PeriphCLKConfig+0x488>
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8002b26:	4b11      	ldr	r3, [pc, #68]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002b28:	681a      	ldr	r2, [r3, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002b2a:	461e      	mov	r6, r3
    __HAL_RCC_PLLI2S_ENABLE();
 8002b2c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002b30:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002b32:	f7fe f9c7 	bl	8000ec4 <HAL_GetTick>
 8002b36:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002b38:	e005      	b.n	8002b46 <HAL_RCCEx_PeriphCLKConfig+0x2c6>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8002b3a:	f7fe f9c3 	bl	8000ec4 <HAL_GetTick>
 8002b3e:	1bc0      	subs	r0, r0, r7
 8002b40:	2864      	cmp	r0, #100	; 0x64
 8002b42:	f200 8087 	bhi.w	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002b46:	6833      	ldr	r3, [r6, #0]
 8002b48:	011b      	lsls	r3, r3, #4
 8002b4a:	d5f6      	bpl.n	8002b3a <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8002b4c:	2d01      	cmp	r5, #1
 8002b4e:	d003      	beq.n	8002b58 <HAL_RCCEx_PeriphCLKConfig+0x2d8>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8002b50:	2000      	movs	r0, #0
}
 8002b52:	b003      	add	sp, #12
 8002b54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 8002b58:	4b04      	ldr	r3, [pc, #16]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002b5a:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002b5c:	461d      	mov	r5, r3
    __HAL_RCC_PLLSAI_DISABLE();
 8002b5e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002b62:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002b64:	f7fe f9ae 	bl	8000ec4 <HAL_GetTick>
 8002b68:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002b6a:	e006      	b.n	8002b7a <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 8002b6c:	40023800 	.word	0x40023800
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8002b70:	f7fe f9a8 	bl	8000ec4 <HAL_GetTick>
 8002b74:	1b80      	subs	r0, r0, r6
 8002b76:	2864      	cmp	r0, #100	; 0x64
 8002b78:	d86c      	bhi.n	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002b7a:	682b      	ldr	r3, [r5, #0]
 8002b7c:	009f      	lsls	r7, r3, #2
 8002b7e:	d4f7      	bmi.n	8002b70 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8002b80:	6823      	ldr	r3, [r4, #0]
 8002b82:	031d      	lsls	r5, r3, #12
 8002b84:	d501      	bpl.n	8002b8a <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8002b86:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8002b88:	b11a      	cbz	r2, 8002b92 <HAL_RCCEx_PeriphCLKConfig+0x312>
 8002b8a:	02d8      	lsls	r0, r3, #11
 8002b8c:	d51d      	bpl.n	8002bca <HAL_RCCEx_PeriphCLKConfig+0x34a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8002b8e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8002b90:	b9da      	cbnz	r2, 8002bca <HAL_RCCEx_PeriphCLKConfig+0x34a>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8002b92:	4982      	ldr	r1, [pc, #520]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8002b94:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8002b96:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8002b9a:	f8d1 6088 	ldr.w	r6, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8002b9e:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8002ba2:	69a0      	ldr	r0, [r4, #24]
 8002ba4:	f006 46e0 	and.w	r6, r6, #1879048192	; 0x70000000
 8002ba8:	4332      	orrs	r2, r6
 8002baa:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 8002bae:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8002bb2:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8002bb6:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 8002bba:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8002bbc:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8002bc0:	3801      	subs	r0, #1
 8002bc2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8002bc6:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8002bca:	0299      	lsls	r1, r3, #10
 8002bcc:	d515      	bpl.n	8002bfa <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8002bce:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8002bd0:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
 8002bd4:	d111      	bne.n	8002bfa <HAL_RCCEx_PeriphCLKConfig+0x37a>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002bd6:	4971      	ldr	r1, [pc, #452]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8002bd8:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002bda:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8002bde:	f8d1 6088 	ldr.w	r6, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8002be2:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8002be6:	6a20      	ldr	r0, [r4, #32]
 8002be8:	f006 46e0 	and.w	r6, r6, #1879048192	; 0x70000000
 8002bec:	4332      	orrs	r2, r6
 8002bee:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 8002bf2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8002bf6:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8002bfa:	071a      	lsls	r2, r3, #28
 8002bfc:	d519      	bpl.n	8002c32 <HAL_RCCEx_PeriphCLKConfig+0x3b2>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002bfe:	4a67      	ldr	r2, [pc, #412]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8002c00:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002c02:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8002c06:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8002c0a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8002c0e:	69e0      	ldr	r0, [r4, #28]
 8002c10:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002c14:	430b      	orrs	r3, r1
 8002c16:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8002c1a:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8002c1e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8002c22:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8002c26:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002c28:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8002c2c:	430b      	orrs	r3, r1
 8002c2e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 8002c32:	4b5a      	ldr	r3, [pc, #360]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002c34:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8002c36:	461c      	mov	r4, r3
    __HAL_RCC_PLLSAI_ENABLE();
 8002c38:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8002c3c:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002c3e:	f7fe f941 	bl	8000ec4 <HAL_GetTick>
 8002c42:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8002c44:	6823      	ldr	r3, [r4, #0]
 8002c46:	009b      	lsls	r3, r3, #2
 8002c48:	d482      	bmi.n	8002b50 <HAL_RCCEx_PeriphCLKConfig+0x2d0>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8002c4a:	f7fe f93b 	bl	8000ec4 <HAL_GetTick>
 8002c4e:	1b40      	subs	r0, r0, r5
 8002c50:	2864      	cmp	r0, #100	; 0x64
 8002c52:	d9f7      	bls.n	8002c44 <HAL_RCCEx_PeriphCLKConfig+0x3c4>
        return HAL_TIMEOUT;
 8002c54:	2003      	movs	r0, #3
}
 8002c56:	b003      	add	sp, #12
 8002c58:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8002c5c:	494f      	ldr	r1, [pc, #316]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002c5e:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 8002c62:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002c66:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002c6a:	4302      	orrs	r2, r0
 8002c6c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
 8002c70:	e707      	b.n	8002a82 <HAL_RCCEx_PeriphCLKConfig+0x202>
    __HAL_RCC_PWR_CLK_ENABLE();
 8002c72:	4a4a      	ldr	r2, [pc, #296]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
    PWR->CR1 |= PWR_CR1_DBP;
 8002c74:	4b4a      	ldr	r3, [pc, #296]	; (8002da0 <HAL_RCCEx_PeriphCLKConfig+0x520>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8002c76:	6c11      	ldr	r1, [r2, #64]	; 0x40
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8002c78:	461f      	mov	r7, r3
    __HAL_RCC_PWR_CLK_ENABLE();
 8002c7a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8002c7e:	6411      	str	r1, [r2, #64]	; 0x40
 8002c80:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8002c82:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8002c86:	9201      	str	r2, [sp, #4]
 8002c88:	9a01      	ldr	r2, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8002c8a:	681a      	ldr	r2, [r3, #0]
 8002c8c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002c90:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002c92:	f7fe f917 	bl	8000ec4 <HAL_GetTick>
 8002c96:	4680      	mov	r8, r0
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8002c98:	e005      	b.n	8002ca6 <HAL_RCCEx_PeriphCLKConfig+0x426>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002c9a:	f7fe f913 	bl	8000ec4 <HAL_GetTick>
 8002c9e:	eba0 0008 	sub.w	r0, r0, r8
 8002ca2:	2864      	cmp	r0, #100	; 0x64
 8002ca4:	d8d6      	bhi.n	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8002ca6:	683b      	ldr	r3, [r7, #0]
 8002ca8:	05db      	lsls	r3, r3, #23
 8002caa:	d5f6      	bpl.n	8002c9a <HAL_RCCEx_PeriphCLKConfig+0x41a>
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8002cac:	4a3b      	ldr	r2, [pc, #236]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002cae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002cb0:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8002cb2:	f403 7040 	and.w	r0, r3, #768	; 0x300
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8002cb6:	f411 7140 	ands.w	r1, r1, #768	; 0x300
 8002cba:	d010      	beq.n	8002cde <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8002cbc:	4281      	cmp	r1, r0
 8002cbe:	d00e      	beq.n	8002cde <HAL_RCCEx_PeriphCLKConfig+0x45e>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8002cc0:	6f11      	ldr	r1, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8002cc2:	6f17      	ldr	r7, [r2, #112]	; 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8002cc4:	f421 7140 	bic.w	r1, r1, #768	; 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 8002cc8:	f447 3780 	orr.w	r7, r7, #65536	; 0x10000
 8002ccc:	6717      	str	r7, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8002cce:	6f17      	ldr	r7, [r2, #112]	; 0x70
 8002cd0:	f427 3780 	bic.w	r7, r7, #65536	; 0x10000
 8002cd4:	6717      	str	r7, [r2, #112]	; 0x70
      RCC->BDCR = tmpreg0;
 8002cd6:	6711      	str	r1, [r2, #112]	; 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8002cd8:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8002cda:	07cf      	lsls	r7, r1, #31
 8002cdc:	d448      	bmi.n	8002d70 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8002cde:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
 8002ce2:	d03c      	beq.n	8002d5e <HAL_RCCEx_PeriphCLKConfig+0x4de>
 8002ce4:	492d      	ldr	r1, [pc, #180]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002ce6:	688a      	ldr	r2, [r1, #8]
 8002ce8:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 8002cec:	608a      	str	r2, [r1, #8]
 8002cee:	4a2b      	ldr	r2, [pc, #172]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002cf0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002cf4:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8002cf6:	430b      	orrs	r3, r1
 8002cf8:	6713      	str	r3, [r2, #112]	; 0x70
 8002cfa:	6823      	ldr	r3, [r4, #0]
 8002cfc:	e602      	b.n	8002904 <HAL_RCCEx_PeriphCLKConfig+0x84>
  uint32_t pllsaiused = 0;
 8002cfe:	2500      	movs	r5, #0
      plli2sused = 1;
 8002d00:	2601      	movs	r6, #1
 8002d02:	e5e5      	b.n	80028d0 <HAL_RCCEx_PeriphCLKConfig+0x50>
      plli2sused = 1;
 8002d04:	2601      	movs	r6, #1
 8002d06:	e5f6      	b.n	80028f6 <HAL_RCCEx_PeriphCLKConfig+0x76>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8002d08:	6923      	ldr	r3, [r4, #16]
 8002d0a:	6862      	ldr	r2, [r4, #4]
 8002d0c:	041b      	lsls	r3, r3, #16
 8002d0e:	e9d4 1002 	ldrd	r1, r0, [r4, #8]
 8002d12:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8002d16:	4a21      	ldr	r2, [pc, #132]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002d18:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8002d1c:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8002d20:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8002d24:	e6ff      	b.n	8002b26 <HAL_RCCEx_PeriphCLKConfig+0x2a6>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8002d26:	4e1d      	ldr	r6, [pc, #116]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8002d28:	6860      	ldr	r0, [r4, #4]
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8002d2a:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8002d2e:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8002d32:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8002d36:	68e1      	ldr	r1, [r4, #12]
 8002d38:	f007 47e0 	and.w	r7, r7, #1879048192	; 0x70000000
 8002d3c:	433a      	orrs	r2, r7
 8002d3e:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002d42:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8002d46:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8002d4a:	f8d6 108c 	ldr.w	r1, [r6, #140]	; 0x8c
 8002d4e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002d50:	f021 011f 	bic.w	r1, r1, #31
 8002d54:	3a01      	subs	r2, #1
 8002d56:	430a      	orrs	r2, r1
 8002d58:	f8c6 208c 	str.w	r2, [r6, #140]	; 0x8c
 8002d5c:	e6cc      	b.n	8002af8 <HAL_RCCEx_PeriphCLKConfig+0x278>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8002d5e:	480f      	ldr	r0, [pc, #60]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002d60:	4910      	ldr	r1, [pc, #64]	; (8002da4 <HAL_RCCEx_PeriphCLKConfig+0x524>)
 8002d62:	6882      	ldr	r2, [r0, #8]
 8002d64:	4019      	ands	r1, r3
 8002d66:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 8002d6a:	430a      	orrs	r2, r1
 8002d6c:	6082      	str	r2, [r0, #8]
 8002d6e:	e7be      	b.n	8002cee <HAL_RCCEx_PeriphCLKConfig+0x46e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002d70:	4617      	mov	r7, r2
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002d72:	f241 3888 	movw	r8, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8002d76:	f7fe f8a5 	bl	8000ec4 <HAL_GetTick>
 8002d7a:	4681      	mov	r9, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002d7c:	e006      	b.n	8002d8c <HAL_RCCEx_PeriphCLKConfig+0x50c>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002d7e:	f7fe f8a1 	bl	8000ec4 <HAL_GetTick>
 8002d82:	eba0 0009 	sub.w	r0, r0, r9
 8002d86:	4540      	cmp	r0, r8
 8002d88:	f63f af64 	bhi.w	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002d8c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002d8e:	0798      	lsls	r0, r3, #30
 8002d90:	d5f5      	bpl.n	8002d7e <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 8002d92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002d94:	f403 7040 	and.w	r0, r3, #768	; 0x300
 8002d98:	e7a1      	b.n	8002cde <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8002d9a:	bf00      	nop
 8002d9c:	40023800 	.word	0x40023800
 8002da0:	40007000 	.word	0x40007000
 8002da4:	0ffffcff 	.word	0x0ffffcff

08002da8 <HAL_RTC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
{
  /* Check the RTC peripheral state */
  if(hrtc == NULL)
 8002da8:	2800      	cmp	r0, #0
 8002daa:	d066      	beq.n	8002e7a <HAL_RTC_Init+0xd2>
{
 8002dac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    {
      hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
    }
  }
#else
  if(hrtc->State == HAL_RTC_STATE_RESET)
 8002dae:	7f43      	ldrb	r3, [r0, #29]
 8002db0:	4604      	mov	r4, r0
 8002db2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	d043      	beq.n	8002e42 <HAL_RTC_Init+0x9a>

  /* Set RTC state */
  hrtc->State = HAL_RTC_STATE_BUSY;

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8002dba:	6823      	ldr	r3, [r4, #0]
 8002dbc:	2253      	movs	r2, #83	; 0x53
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002dbe:	2002      	movs	r0, #2
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8002dc0:	21ca      	movs	r1, #202	; 0xca
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002dc2:	7760      	strb	r0, [r4, #29]
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8002dc4:	6259      	str	r1, [r3, #36]	; 0x24
 8002dc6:	625a      	str	r2, [r3, #36]	; 0x24
HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
{
  uint32_t tickstart = 0;

  /* Check if the Initialization mode is set */
  if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8002dc8:	68da      	ldr	r2, [r3, #12]
 8002dca:	0655      	lsls	r5, r2, #25
 8002dcc:	d527      	bpl.n	8002e1e <HAL_RTC_Init+0x76>
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8002dce:	6898      	ldr	r0, [r3, #8]
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002dd0:	6925      	ldr	r5, [r4, #16]
 8002dd2:	6862      	ldr	r2, [r4, #4]
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8002dd4:	492a      	ldr	r1, [pc, #168]	; (8002e80 <HAL_RTC_Init+0xd8>)
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002dd6:	432a      	orrs	r2, r5
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8002dd8:	4001      	ands	r1, r0
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002dda:	6960      	ldr	r0, [r4, #20]
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8002ddc:	6099      	str	r1, [r3, #8]
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002dde:	4302      	orrs	r2, r0
 8002de0:	689d      	ldr	r5, [r3, #8]
    hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16);
 8002de2:	e9d4 1002 	ldrd	r1, r0, [r4, #8]
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002de6:	432a      	orrs	r2, r5
 8002de8:	609a      	str	r2, [r3, #8]
    hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 8002dea:	6118      	str	r0, [r3, #16]
    hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16);
 8002dec:	691a      	ldr	r2, [r3, #16]
 8002dee:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002df2:	611a      	str	r2, [r3, #16]
    hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 8002df4:	68da      	ldr	r2, [r3, #12]
 8002df6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002dfa:	60da      	str	r2, [r3, #12]
    if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 8002dfc:	689a      	ldr	r2, [r3, #8]
 8002dfe:	0691      	lsls	r1, r2, #26
 8002e00:	d523      	bpl.n	8002e4a <HAL_RTC_Init+0xa2>
    hrtc->Instance->OR &= (uint32_t)~RTC_OR_ALARMTYPE;
 8002e02:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002e04:	26ff      	movs	r6, #255	; 0xff
    hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType);
 8002e06:	69a7      	ldr	r7, [r4, #24]
    hrtc->State = HAL_RTC_STATE_READY;
 8002e08:	2501      	movs	r5, #1
    hrtc->Instance->OR &= (uint32_t)~RTC_OR_ALARMTYPE;
 8002e0a:	f021 0108 	bic.w	r1, r1, #8
    return HAL_OK;
 8002e0e:	2000      	movs	r0, #0
    hrtc->Instance->OR &= (uint32_t)~RTC_OR_ALARMTYPE;
 8002e10:	64d9      	str	r1, [r3, #76]	; 0x4c
    hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType);
 8002e12:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002e14:	433a      	orrs	r2, r7
 8002e16:	64da      	str	r2, [r3, #76]	; 0x4c
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002e18:	625e      	str	r6, [r3, #36]	; 0x24
    hrtc->State = HAL_RTC_STATE_READY;
 8002e1a:	7765      	strb	r5, [r4, #29]
}
 8002e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  {
    /* Set the Initialization mode */
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 8002e1e:	f04f 32ff 	mov.w	r2, #4294967295
 8002e22:	60da      	str	r2, [r3, #12]

    /* Get tick */
    tickstart = HAL_GetTick();
 8002e24:	f7fe f84e 	bl	8000ec4 <HAL_GetTick>
 8002e28:	4605      	mov	r5, r0
 8002e2a:	e005      	b.n	8002e38 <HAL_RTC_Init+0x90>

    /* Wait till RTC is in INIT state and if Time out is reached exit */
    while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
    {
      if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 8002e2c:	f7fe f84a 	bl	8000ec4 <HAL_GetTick>
 8002e30:	1b40      	subs	r0, r0, r5
 8002e32:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002e36:	d819      	bhi.n	8002e6c <HAL_RTC_Init+0xc4>
    while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8002e38:	6823      	ldr	r3, [r4, #0]
 8002e3a:	68da      	ldr	r2, [r3, #12]
 8002e3c:	0650      	lsls	r0, r2, #25
 8002e3e:	d5f5      	bpl.n	8002e2c <HAL_RTC_Init+0x84>
 8002e40:	e7c5      	b.n	8002dce <HAL_RTC_Init+0x26>
    hrtc->Lock = HAL_UNLOCKED;
 8002e42:	7702      	strb	r2, [r0, #28]
    HAL_RTC_MspInit(hrtc);
 8002e44:	f006 f8ce 	bl	8008fe4 <HAL_RTC_MspInit>
 8002e48:	e7b7      	b.n	8002dba <HAL_RTC_Init+0x12>
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 8002e4a:	68da      	ldr	r2, [r3, #12]
 8002e4c:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002e50:	60da      	str	r2, [r3, #12]
    tickstart = HAL_GetTick();
 8002e52:	f7fe f837 	bl	8000ec4 <HAL_GetTick>
 8002e56:	4605      	mov	r5, r0
  while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 8002e58:	6823      	ldr	r3, [r4, #0]
 8002e5a:	68da      	ldr	r2, [r3, #12]
 8002e5c:	0692      	lsls	r2, r2, #26
 8002e5e:	d4d0      	bmi.n	8002e02 <HAL_RTC_Init+0x5a>
    if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 8002e60:	f7fe f830 	bl	8000ec4 <HAL_GetTick>
 8002e64:	1b40      	subs	r0, r0, r5
 8002e66:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002e6a:	d9f5      	bls.n	8002e58 <HAL_RTC_Init+0xb0>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002e6c:	6822      	ldr	r2, [r4, #0]
 8002e6e:	21ff      	movs	r1, #255	; 0xff
        hrtc->State = HAL_RTC_STATE_ERROR;
 8002e70:	2304      	movs	r3, #4
        return HAL_ERROR;
 8002e72:	2001      	movs	r0, #1
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002e74:	6251      	str	r1, [r2, #36]	; 0x24
        hrtc->State = HAL_RTC_STATE_ERROR;
 8002e76:	7763      	strb	r3, [r4, #29]
}
 8002e78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     return HAL_ERROR;
 8002e7a:	2001      	movs	r0, #1
}
 8002e7c:	4770      	bx	lr
 8002e7e:	bf00      	nop
 8002e80:	ff8fffbf 	.word	0xff8fffbf

08002e84 <HAL_RTC_SetTime>:
{
 8002e84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(hrtc);
 8002e88:	7f03      	ldrb	r3, [r0, #28]
 8002e8a:	2b01      	cmp	r3, #1
 8002e8c:	f000 808c 	beq.w	8002fa8 <HAL_RTC_SetTime+0x124>
 8002e90:	460d      	mov	r5, r1
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002e92:	2302      	movs	r3, #2
  __HAL_LOCK(hrtc);
 8002e94:	2101      	movs	r1, #1
 8002e96:	6806      	ldr	r6, [r0, #0]
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002e98:	7743      	strb	r3, [r0, #29]
 8002e9a:	4604      	mov	r4, r0
  __HAL_LOCK(hrtc);
 8002e9c:	7701      	strb	r1, [r0, #28]
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 8002e9e:	68b7      	ldr	r7, [r6, #8]
  if(Format == RTC_FORMAT_BIN)
 8002ea0:	2a00      	cmp	r2, #0
 8002ea2:	d030      	beq.n	8002f06 <HAL_RTC_SetTime+0x82>
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 8002ea4:	f017 0740 	ands.w	r7, r7, #64	; 0x40
 8002ea8:	d07a      	beq.n	8002fa0 <HAL_RTC_SetTime+0x11c>
 8002eaa:	7b2f      	ldrb	r7, [r5, #12]
 8002eac:	043f      	lsls	r7, r7, #16
              ((uint32_t)(sTime->Minutes) << 8) | \
 8002eae:	7868      	ldrb	r0, [r5, #1]
    tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 8002eb0:	782a      	ldrb	r2, [r5, #0]
              ((uint32_t)(sTime->Minutes) << 8) | \
 8002eb2:	0200      	lsls	r0, r0, #8
              ((uint32_t)sTime->Seconds) | \
 8002eb4:	78ab      	ldrb	r3, [r5, #2]
    tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 8002eb6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
              ((uint32_t)(sTime->Minutes) << 8) | \
 8002eba:	4318      	orrs	r0, r3
    tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 8002ebc:	4307      	orrs	r7, r0
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8002ebe:	22ca      	movs	r2, #202	; 0xca
 8002ec0:	2353      	movs	r3, #83	; 0x53
 8002ec2:	6272      	str	r2, [r6, #36]	; 0x24
 8002ec4:	6273      	str	r3, [r6, #36]	; 0x24
  if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8002ec6:	68f3      	ldr	r3, [r6, #12]
 8002ec8:	065a      	lsls	r2, r3, #25
 8002eca:	d54d      	bpl.n	8002f68 <HAL_RTC_SetTime+0xe4>
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 8002ecc:	4a46      	ldr	r2, [pc, #280]	; (8002fe8 <HAL_RTC_SetTime+0x164>)
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8002ece:	692b      	ldr	r3, [r5, #16]
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 8002ed0:	403a      	ands	r2, r7
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8002ed2:	6969      	ldr	r1, [r5, #20]
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 8002ed4:	6032      	str	r2, [r6, #0]
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8002ed6:	430b      	orrs	r3, r1
    hrtc->Instance->CR &= (uint32_t)~RTC_CR_BKP;
 8002ed8:	68b2      	ldr	r2, [r6, #8]
 8002eda:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002ede:	60b2      	str	r2, [r6, #8]
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8002ee0:	68b2      	ldr	r2, [r6, #8]
 8002ee2:	4313      	orrs	r3, r2
 8002ee4:	60b3      	str	r3, [r6, #8]
    hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 8002ee6:	68f3      	ldr	r3, [r6, #12]
 8002ee8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002eec:	60f3      	str	r3, [r6, #12]
    if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 8002eee:	68b3      	ldr	r3, [r6, #8]
 8002ef0:	069b      	lsls	r3, r3, #26
 8002ef2:	d55c      	bpl.n	8002fae <HAL_RTC_SetTime+0x12a>
   __HAL_UNLOCK(hrtc);
 8002ef4:	2300      	movs	r3, #0
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002ef6:	21ff      	movs	r1, #255	; 0xff
   hrtc->State = HAL_RTC_STATE_READY;
 8002ef8:	2201      	movs	r2, #1
   return HAL_OK;
 8002efa:	4618      	mov	r0, r3
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002efc:	6271      	str	r1, [r6, #36]	; 0x24
   hrtc->State = HAL_RTC_STATE_READY;
 8002efe:	7762      	strb	r2, [r4, #29]
   __HAL_UNLOCK(hrtc);
 8002f00:	7723      	strb	r3, [r4, #28]
}
 8002f02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 8002f06:	f017 0740 	ands.w	r7, r7, #64	; 0x40
 8002f0a:	d04b      	beq.n	8002fa4 <HAL_RTC_SetTime+0x120>
 8002f0c:	7b2f      	ldrb	r7, [r5, #12]
 8002f0e:	043f      	lsls	r7, r7, #16
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f10:	782b      	ldrb	r3, [r5, #0]
  * @param  Value Byte to be converted
  * @retval Converted byte
  */
uint8_t RTC_ByteToBcd2(uint8_t Value)
{
  uint32_t bcdhigh = 0;
 8002f12:	2100      	movs	r1, #0

  while(Value >= 10)
 8002f14:	2b09      	cmp	r3, #9
 8002f16:	d906      	bls.n	8002f26 <HAL_RTC_SetTime+0xa2>
  {
    bcdhigh++;
    Value -= 10;
 8002f18:	3b0a      	subs	r3, #10
    bcdhigh++;
 8002f1a:	3101      	adds	r1, #1
    Value -= 10;
 8002f1c:	b2db      	uxtb	r3, r3
  while(Value >= 10)
 8002f1e:	2b09      	cmp	r3, #9
 8002f20:	d8fa      	bhi.n	8002f18 <HAL_RTC_SetTime+0x94>
 8002f22:	0109      	lsls	r1, r1, #4
 8002f24:	b2c9      	uxtb	r1, r1
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f26:	4319      	orrs	r1, r3
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 8002f28:	786b      	ldrb	r3, [r5, #1]
  uint32_t bcdhigh = 0;
 8002f2a:	2000      	movs	r0, #0
  while(Value >= 10)
 8002f2c:	2b09      	cmp	r3, #9
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f2e:	ea4f 4101 	mov.w	r1, r1, lsl #16
  while(Value >= 10)
 8002f32:	d906      	bls.n	8002f42 <HAL_RTC_SetTime+0xbe>
    Value -= 10;
 8002f34:	3b0a      	subs	r3, #10
    bcdhigh++;
 8002f36:	3001      	adds	r0, #1
    Value -= 10;
 8002f38:	b2db      	uxtb	r3, r3
  while(Value >= 10)
 8002f3a:	2b09      	cmp	r3, #9
 8002f3c:	d8fa      	bhi.n	8002f34 <HAL_RTC_SetTime+0xb0>
 8002f3e:	0100      	lsls	r0, r0, #4
 8002f40:	b2c0      	uxtb	r0, r0
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 8002f42:	4303      	orrs	r3, r0
                        ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 8002f44:	78a8      	ldrb	r0, [r5, #2]
  while(Value >= 10)
 8002f46:	2809      	cmp	r0, #9
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 8002f48:	ea4f 2303 	mov.w	r3, r3, lsl #8
  while(Value >= 10)
 8002f4c:	d949      	bls.n	8002fe2 <HAL_RTC_SetTime+0x15e>
    Value -= 10;
 8002f4e:	380a      	subs	r0, #10
    bcdhigh++;
 8002f50:	3201      	adds	r2, #1
    Value -= 10;
 8002f52:	b2c0      	uxtb	r0, r0
  while(Value >= 10)
 8002f54:	2809      	cmp	r0, #9
 8002f56:	d8fa      	bhi.n	8002f4e <HAL_RTC_SetTime+0xca>
 8002f58:	0112      	lsls	r2, r2, #4
 8002f5a:	b2d2      	uxtb	r2, r2
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f5c:	430f      	orrs	r7, r1
                        ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 8002f5e:	4310      	orrs	r0, r2
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f60:	433b      	orrs	r3, r7
 8002f62:	ea43 0700 	orr.w	r7, r3, r0
 8002f66:	e7aa      	b.n	8002ebe <HAL_RTC_SetTime+0x3a>
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 8002f68:	f04f 33ff 	mov.w	r3, #4294967295
 8002f6c:	60f3      	str	r3, [r6, #12]
    tickstart = HAL_GetTick();
 8002f6e:	f7fd ffa9 	bl	8000ec4 <HAL_GetTick>
 8002f72:	4681      	mov	r9, r0
    while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8002f74:	6826      	ldr	r6, [r4, #0]
 8002f76:	68f3      	ldr	r3, [r6, #12]
 8002f78:	f013 0840 	ands.w	r8, r3, #64	; 0x40
 8002f7c:	d1a6      	bne.n	8002ecc <HAL_RTC_SetTime+0x48>
      if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 8002f7e:	f7fd ffa1 	bl	8000ec4 <HAL_GetTick>
 8002f82:	eba0 0009 	sub.w	r0, r0, r9
 8002f86:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002f8a:	d9f3      	bls.n	8002f74 <HAL_RTC_SetTime+0xf0>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002f8c:	6822      	ldr	r2, [r4, #0]
 8002f8e:	21ff      	movs	r1, #255	; 0xff
    hrtc->State = HAL_RTC_STATE_ERROR;
 8002f90:	2304      	movs	r3, #4
    return HAL_ERROR;
 8002f92:	2001      	movs	r0, #1
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002f94:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_UNLOCK(hrtc);
 8002f96:	f884 801c 	strb.w	r8, [r4, #28]
    hrtc->State = HAL_RTC_STATE_ERROR;
 8002f9a:	7763      	strb	r3, [r4, #29]
}
 8002f9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      sTime->TimeFormat = 0x00;
 8002fa0:	732f      	strb	r7, [r5, #12]
 8002fa2:	e784      	b.n	8002eae <HAL_RTC_SetTime+0x2a>
      sTime->TimeFormat = 0x00;
 8002fa4:	732f      	strb	r7, [r5, #12]
 8002fa6:	e7b3      	b.n	8002f10 <HAL_RTC_SetTime+0x8c>
  __HAL_LOCK(hrtc);
 8002fa8:	2002      	movs	r0, #2
}
 8002faa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 8002fae:	68f3      	ldr	r3, [r6, #12]
 8002fb0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002fb4:	60f3      	str	r3, [r6, #12]
    tickstart = HAL_GetTick();
 8002fb6:	f7fd ff85 	bl	8000ec4 <HAL_GetTick>
 8002fba:	4607      	mov	r7, r0
  while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 8002fbc:	6826      	ldr	r6, [r4, #0]
 8002fbe:	68f5      	ldr	r5, [r6, #12]
 8002fc0:	f015 0520 	ands.w	r5, r5, #32
 8002fc4:	d196      	bne.n	8002ef4 <HAL_RTC_SetTime+0x70>
    if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 8002fc6:	f7fd ff7d 	bl	8000ec4 <HAL_GetTick>
 8002fca:	1bc0      	subs	r0, r0, r7
 8002fcc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002fd0:	d9f4      	bls.n	8002fbc <HAL_RTC_SetTime+0x138>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002fd2:	6822      	ldr	r2, [r4, #0]
 8002fd4:	21ff      	movs	r1, #255	; 0xff
        hrtc->State = HAL_RTC_STATE_ERROR;
 8002fd6:	2304      	movs	r3, #4
        return HAL_ERROR;
 8002fd8:	2001      	movs	r0, #1
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002fda:	6251      	str	r1, [r2, #36]	; 0x24
        __HAL_UNLOCK(hrtc);
 8002fdc:	7725      	strb	r5, [r4, #28]
        hrtc->State = HAL_RTC_STATE_ERROR;
 8002fde:	7763      	strb	r3, [r4, #29]
        return HAL_ERROR;
 8002fe0:	e78f      	b.n	8002f02 <HAL_RTC_SetTime+0x7e>
  while(Value >= 10)
 8002fe2:	2200      	movs	r2, #0
 8002fe4:	e7ba      	b.n	8002f5c <HAL_RTC_SetTime+0xd8>
 8002fe6:	bf00      	nop
 8002fe8:	007f7f7f 	.word	0x007f7f7f

08002fec <HAL_RTC_SetDate>:
{
 8002fec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 __HAL_LOCK(hrtc);
 8002fee:	7f03      	ldrb	r3, [r0, #28]
 8002ff0:	2b01      	cmp	r3, #1
 8002ff2:	d074      	beq.n	80030de <HAL_RTC_SetDate+0xf2>
 8002ff4:	4605      	mov	r5, r0
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002ff6:	2302      	movs	r3, #2
 __HAL_LOCK(hrtc);
 8002ff8:	2001      	movs	r0, #1
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002ffa:	776b      	strb	r3, [r5, #29]
 __HAL_LOCK(hrtc);
 8002ffc:	7728      	strb	r0, [r5, #28]
 8002ffe:	780e      	ldrb	r6, [r1, #0]
 8003000:	78cb      	ldrb	r3, [r1, #3]
 8003002:	0376      	lsls	r6, r6, #13
 8003004:	7848      	ldrb	r0, [r1, #1]
 8003006:	788c      	ldrb	r4, [r1, #2]
  if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 8003008:	bb8a      	cbnz	r2, 800306e <HAL_RTC_SetDate+0x82>
 800300a:	06c7      	lsls	r7, r0, #27
 800300c:	d504      	bpl.n	8003018 <HAL_RTC_SetDate+0x2c>
    sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 800300e:	f020 0010 	bic.w	r0, r0, #16
 8003012:	300a      	adds	r0, #10
 8003014:	b2c0      	uxtb	r0, r0
 8003016:	7048      	strb	r0, [r1, #1]
  while(Value >= 10)
 8003018:	2b09      	cmp	r3, #9
  uint32_t bcdhigh = 0;
 800301a:	f04f 0100 	mov.w	r1, #0
  while(Value >= 10)
 800301e:	d906      	bls.n	800302e <HAL_RTC_SetDate+0x42>
    Value -= 10;
 8003020:	3b0a      	subs	r3, #10
    bcdhigh++;
 8003022:	3101      	adds	r1, #1
    Value -= 10;
 8003024:	b2db      	uxtb	r3, r3
  while(Value >= 10)
 8003026:	2b09      	cmp	r3, #9
 8003028:	d8fa      	bhi.n	8003020 <HAL_RTC_SetDate+0x34>
 800302a:	0109      	lsls	r1, r1, #4
 800302c:	b2c9      	uxtb	r1, r1
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 800302e:	430b      	orrs	r3, r1
  while(Value >= 10)
 8003030:	2809      	cmp	r0, #9
  uint32_t bcdhigh = 0;
 8003032:	f04f 0100 	mov.w	r1, #0
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 8003036:	ea4f 4303 	mov.w	r3, r3, lsl #16
  while(Value >= 10)
 800303a:	d906      	bls.n	800304a <HAL_RTC_SetDate+0x5e>
    Value -= 10;
 800303c:	380a      	subs	r0, #10
    bcdhigh++;
 800303e:	3101      	adds	r1, #1
    Value -= 10;
 8003040:	b2c0      	uxtb	r0, r0
  while(Value >= 10)
 8003042:	2809      	cmp	r0, #9
 8003044:	d8fa      	bhi.n	800303c <HAL_RTC_SetDate+0x50>
 8003046:	0109      	lsls	r1, r1, #4
 8003048:	b2c9      	uxtb	r1, r1
                 ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 800304a:	4308      	orrs	r0, r1
  while(Value >= 10)
 800304c:	2c09      	cmp	r4, #9
                 ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 800304e:	ea4f 2100 	mov.w	r1, r0, lsl #8
  while(Value >= 10)
 8003052:	d960      	bls.n	8003116 <HAL_RTC_SetDate+0x12a>
    Value -= 10;
 8003054:	3c0a      	subs	r4, #10
    bcdhigh++;
 8003056:	3201      	adds	r2, #1
    Value -= 10;
 8003058:	b2e4      	uxtb	r4, r4
  while(Value >= 10)
 800305a:	2c09      	cmp	r4, #9
 800305c:	d8fa      	bhi.n	8003054 <HAL_RTC_SetDate+0x68>
 800305e:	0112      	lsls	r2, r2, #4
 8003060:	b2d0      	uxtb	r0, r2
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 8003062:	431e      	orrs	r6, r3
                 ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 8003064:	4304      	orrs	r4, r0
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 8003066:	ea46 0001 	orr.w	r0, r6, r1
 800306a:	4304      	orrs	r4, r0
 800306c:	e004      	b.n	8003078 <HAL_RTC_SetDate+0x8c>
    datetmpreg = ((((uint32_t)sDate->Year) << 16) | \
 800306e:	ea46 4303 	orr.w	r3, r6, r3, lsl #16
 8003072:	431c      	orrs	r4, r3
 8003074:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8003078:	682b      	ldr	r3, [r5, #0]
 800307a:	21ca      	movs	r1, #202	; 0xca
 800307c:	2253      	movs	r2, #83	; 0x53
 800307e:	6259      	str	r1, [r3, #36]	; 0x24
 8003080:	625a      	str	r2, [r3, #36]	; 0x24
  if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8003082:	68da      	ldr	r2, [r3, #12]
 8003084:	0651      	lsls	r1, r2, #25
 8003086:	d511      	bpl.n	80030ac <HAL_RTC_SetDate+0xc0>
    hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 8003088:	4a24      	ldr	r2, [pc, #144]	; (800311c <HAL_RTC_SetDate+0x130>)
 800308a:	4022      	ands	r2, r4
 800308c:	605a      	str	r2, [r3, #4]
    hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 800308e:	68da      	ldr	r2, [r3, #12]
 8003090:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003094:	60da      	str	r2, [r3, #12]
    if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 8003096:	689a      	ldr	r2, [r3, #8]
 8003098:	0692      	lsls	r2, r2, #26
 800309a:	d522      	bpl.n	80030e2 <HAL_RTC_SetDate+0xf6>
    __HAL_UNLOCK(hrtc);
 800309c:	2200      	movs	r2, #0
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800309e:	20ff      	movs	r0, #255	; 0xff
    hrtc->State = HAL_RTC_STATE_READY ;
 80030a0:	2101      	movs	r1, #1
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80030a2:	6258      	str	r0, [r3, #36]	; 0x24
    return HAL_OK;
 80030a4:	4610      	mov	r0, r2
    hrtc->State = HAL_RTC_STATE_READY ;
 80030a6:	7769      	strb	r1, [r5, #29]
    __HAL_UNLOCK(hrtc);
 80030a8:	772a      	strb	r2, [r5, #28]
}
 80030aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 80030ac:	f04f 32ff 	mov.w	r2, #4294967295
 80030b0:	60da      	str	r2, [r3, #12]
    tickstart = HAL_GetTick();
 80030b2:	f7fd ff07 	bl	8000ec4 <HAL_GetTick>
 80030b6:	4606      	mov	r6, r0
    while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 80030b8:	682b      	ldr	r3, [r5, #0]
 80030ba:	68df      	ldr	r7, [r3, #12]
 80030bc:	f017 0740 	ands.w	r7, r7, #64	; 0x40
 80030c0:	d1e2      	bne.n	8003088 <HAL_RTC_SetDate+0x9c>
      if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 80030c2:	f7fd feff 	bl	8000ec4 <HAL_GetTick>
 80030c6:	1b80      	subs	r0, r0, r6
 80030c8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80030cc:	d9f4      	bls.n	80030b8 <HAL_RTC_SetDate+0xcc>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80030ce:	682a      	ldr	r2, [r5, #0]
 80030d0:	21ff      	movs	r1, #255	; 0xff
    hrtc->State = HAL_RTC_STATE_ERROR;
 80030d2:	2304      	movs	r3, #4
    return HAL_ERROR;
 80030d4:	2001      	movs	r0, #1
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80030d6:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_UNLOCK(hrtc);
 80030d8:	772f      	strb	r7, [r5, #28]
    hrtc->State = HAL_RTC_STATE_ERROR;
 80030da:	776b      	strb	r3, [r5, #29]
}
 80030dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 __HAL_LOCK(hrtc);
 80030de:	2002      	movs	r0, #2
}
 80030e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 80030e2:	68da      	ldr	r2, [r3, #12]
 80030e4:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80030e8:	60da      	str	r2, [r3, #12]
    tickstart = HAL_GetTick();
 80030ea:	f7fd feeb 	bl	8000ec4 <HAL_GetTick>
 80030ee:	4606      	mov	r6, r0
  while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 80030f0:	682b      	ldr	r3, [r5, #0]
 80030f2:	68dc      	ldr	r4, [r3, #12]
 80030f4:	f014 0420 	ands.w	r4, r4, #32
 80030f8:	d1d0      	bne.n	800309c <HAL_RTC_SetDate+0xb0>
    if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 80030fa:	f7fd fee3 	bl	8000ec4 <HAL_GetTick>
 80030fe:	1b80      	subs	r0, r0, r6
 8003100:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003104:	d9f4      	bls.n	80030f0 <HAL_RTC_SetDate+0x104>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8003106:	682a      	ldr	r2, [r5, #0]
 8003108:	21ff      	movs	r1, #255	; 0xff
        hrtc->State = HAL_RTC_STATE_ERROR;
 800310a:	2304      	movs	r3, #4
        return HAL_ERROR;
 800310c:	2001      	movs	r0, #1
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800310e:	6251      	str	r1, [r2, #36]	; 0x24
        __HAL_UNLOCK(hrtc);
 8003110:	772c      	strb	r4, [r5, #28]
        hrtc->State = HAL_RTC_STATE_ERROR;
 8003112:	776b      	strb	r3, [r5, #29]
}
 8003114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  while(Value >= 10)
 8003116:	2000      	movs	r0, #0
 8003118:	e7a3      	b.n	8003062 <HAL_RTC_SetDate+0x76>
 800311a:	bf00      	nop
 800311c:	00ffff3f 	.word	0x00ffff3f

08003120 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8003120:	2800      	cmp	r0, #0
 8003122:	d07b      	beq.n	800321c <HAL_TIM_Base_Init+0xfc>
{
 8003124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8003126:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800312a:	4604      	mov	r4, r0
 800312c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003130:	2b00      	cmp	r3, #0
 8003132:	d03b      	beq.n	80031ac <HAL_TIM_Base_Init+0x8c>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8003134:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8003136:	2002      	movs	r0, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8003138:	4e41      	ldr	r6, [pc, #260]	; (8003240 <HAL_TIM_Base_Init+0x120>)
 800313a:	4f42      	ldr	r7, [pc, #264]	; (8003244 <HAL_TIM_Base_Init+0x124>)
 800313c:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8003140:	eba2 0606 	sub.w	r6, r2, r6
  htim->State = HAL_TIM_STATE_BUSY;
 8003144:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
 8003148:	eba2 0707 	sub.w	r7, r2, r7
  tmpcr1 = TIMx->CR1;
 800314c:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800314e:	fab6 f686 	clz	r6, r6
 8003152:	fab7 f787 	clz	r7, r7
 8003156:	ea4f 1656 	mov.w	r6, r6, lsr #5
 800315a:	ea4f 1757 	mov.w	r7, r7, lsr #5
 800315e:	d02a      	beq.n	80031b6 <HAL_TIM_Base_Init+0x96>
 8003160:	bb4e      	cbnz	r6, 80031b6 <HAL_TIM_Base_Init+0x96>
 8003162:	4939      	ldr	r1, [pc, #228]	; (8003248 <HAL_TIM_Base_Init+0x128>)
 8003164:	428a      	cmp	r2, r1
 8003166:	d05b      	beq.n	8003220 <HAL_TIM_Base_Init+0x100>
 8003168:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800316c:	428a      	cmp	r2, r1
 800316e:	d057      	beq.n	8003220 <HAL_TIM_Base_Init+0x100>
 8003170:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8003174:	428a      	cmp	r2, r1
 8003176:	d058      	beq.n	800322a <HAL_TIM_Base_Init+0x10a>
 8003178:	2f00      	cmp	r7, #0
 800317a:	d156      	bne.n	800322a <HAL_TIM_Base_Init+0x10a>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800317c:	4933      	ldr	r1, [pc, #204]	; (800324c <HAL_TIM_Base_Init+0x12c>)
 800317e:	428a      	cmp	r2, r1
 8003180:	d01e      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 8003182:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8003186:	428a      	cmp	r2, r1
 8003188:	d01a      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 800318a:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800318e:	428a      	cmp	r2, r1
 8003190:	d016      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 8003192:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 8003196:	428a      	cmp	r2, r1
 8003198:	d012      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 800319a:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800319e:	428a      	cmp	r2, r1
 80031a0:	d00e      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 80031a2:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80031a6:	428a      	cmp	r2, r1
 80031a8:	d10e      	bne.n	80031c8 <HAL_TIM_Base_Init+0xa8>
 80031aa:	e009      	b.n	80031c0 <HAL_TIM_Base_Init+0xa0>
    htim->Lock = HAL_UNLOCKED;
 80031ac:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80031b0:	f005 ff26 	bl	8009000 <HAL_TIM_Base_MspInit>
 80031b4:	e7be      	b.n	8003134 <HAL_TIM_Base_Init+0x14>
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80031b6:	f023 0570 	bic.w	r5, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80031ba:	68a0      	ldr	r0, [r4, #8]
 80031bc:	ea45 0300 	orr.w	r3, r5, r0
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80031c0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80031c4:	6920      	ldr	r0, [r4, #16]
 80031c6:	4303      	orrs	r3, r0
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80031c8:	69a1      	ldr	r1, [r4, #24]
 80031ca:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80031ce:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80031d0:	430b      	orrs	r3, r1

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80031d2:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 80031d4:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 80031d6:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 80031d8:	6291      	str	r1, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80031da:	b9e6      	cbnz	r6, 8003216 <HAL_TIM_Base_Init+0xf6>
 80031dc:	b9df      	cbnz	r7, 8003216 <HAL_TIM_Base_Init+0xf6>
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80031de:	2301      	movs	r3, #1
  return HAL_OK;
 80031e0:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
 80031e2:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80031e4:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80031e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80031ec:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80031f0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80031f4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 80031f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80031fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8003200:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8003204:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003208:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 800320c:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 8003210:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8003214:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    TIMx->RCR = Structure->RepetitionCounter;
 8003216:	6963      	ldr	r3, [r4, #20]
 8003218:	6313      	str	r3, [r2, #48]	; 0x30
 800321a:	e7e0      	b.n	80031de <HAL_TIM_Base_Init+0xbe>
    return HAL_ERROR;
 800321c:	2001      	movs	r0, #1
}
 800321e:	4770      	bx	lr
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8003220:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8003224:	68a1      	ldr	r1, [r4, #8]
 8003226:	430b      	orrs	r3, r1
 8003228:	e7ca      	b.n	80031c0 <HAL_TIM_Base_Init+0xa0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800322a:	4909      	ldr	r1, [pc, #36]	; (8003250 <HAL_TIM_Base_Init+0x130>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800322c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8003230:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003232:	428a      	cmp	r2, r1
    tmpcr1 |= Structure->CounterMode;
 8003234:	ea43 0300 	orr.w	r3, r3, r0
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003238:	d0c2      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 800323a:	2f00      	cmp	r7, #0
 800323c:	d1c0      	bne.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 800323e:	e79d      	b.n	800317c <HAL_TIM_Base_Init+0x5c>
 8003240:	40010000 	.word	0x40010000
 8003244:	40010400 	.word	0x40010400
 8003248:	40000400 	.word	0x40000400
 800324c:	40014000 	.word	0x40014000
 8003250:	40000c00 	.word	0x40000c00

08003254 <HAL_TIM_PWM_MspInit>:
 8003254:	4770      	bx	lr
 8003256:	bf00      	nop

08003258 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 8003258:	2800      	cmp	r0, #0
 800325a:	d07b      	beq.n	8003354 <HAL_TIM_PWM_Init+0xfc>
{
 800325c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800325e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8003262:	4604      	mov	r4, r0
 8003264:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003268:	2b00      	cmp	r3, #0
 800326a:	d03b      	beq.n	80032e4 <HAL_TIM_PWM_Init+0x8c>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800326c:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800326e:	2002      	movs	r0, #2
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8003270:	4e41      	ldr	r6, [pc, #260]	; (8003378 <HAL_TIM_PWM_Init+0x120>)
 8003272:	4f42      	ldr	r7, [pc, #264]	; (800337c <HAL_TIM_PWM_Init+0x124>)
 8003274:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8003278:	eba2 0606 	sub.w	r6, r2, r6
  htim->State = HAL_TIM_STATE_BUSY;
 800327c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
 8003280:	eba2 0707 	sub.w	r7, r2, r7
  tmpcr1 = TIMx->CR1;
 8003284:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8003286:	fab6 f686 	clz	r6, r6
 800328a:	fab7 f787 	clz	r7, r7
 800328e:	ea4f 1656 	mov.w	r6, r6, lsr #5
 8003292:	ea4f 1757 	mov.w	r7, r7, lsr #5
 8003296:	d02a      	beq.n	80032ee <HAL_TIM_PWM_Init+0x96>
 8003298:	bb4e      	cbnz	r6, 80032ee <HAL_TIM_PWM_Init+0x96>
 800329a:	4939      	ldr	r1, [pc, #228]	; (8003380 <HAL_TIM_PWM_Init+0x128>)
 800329c:	428a      	cmp	r2, r1
 800329e:	d05b      	beq.n	8003358 <HAL_TIM_PWM_Init+0x100>
 80032a0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032a4:	428a      	cmp	r2, r1
 80032a6:	d057      	beq.n	8003358 <HAL_TIM_PWM_Init+0x100>
 80032a8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032ac:	428a      	cmp	r2, r1
 80032ae:	d058      	beq.n	8003362 <HAL_TIM_PWM_Init+0x10a>
 80032b0:	2f00      	cmp	r7, #0
 80032b2:	d156      	bne.n	8003362 <HAL_TIM_PWM_Init+0x10a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80032b4:	4933      	ldr	r1, [pc, #204]	; (8003384 <HAL_TIM_PWM_Init+0x12c>)
 80032b6:	428a      	cmp	r2, r1
 80032b8:	d01e      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032ba:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032be:	428a      	cmp	r2, r1
 80032c0:	d01a      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032c2:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032c6:	428a      	cmp	r2, r1
 80032c8:	d016      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032ca:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 80032ce:	428a      	cmp	r2, r1
 80032d0:	d012      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032d2:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032d6:	428a      	cmp	r2, r1
 80032d8:	d00e      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032da:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032de:	428a      	cmp	r2, r1
 80032e0:	d10e      	bne.n	8003300 <HAL_TIM_PWM_Init+0xa8>
 80032e2:	e009      	b.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
    htim->Lock = HAL_UNLOCKED;
 80032e4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 80032e8:	f7ff ffb4 	bl	8003254 <HAL_TIM_PWM_MspInit>
 80032ec:	e7be      	b.n	800326c <HAL_TIM_PWM_Init+0x14>
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80032ee:	f023 0570 	bic.w	r5, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80032f2:	68a0      	ldr	r0, [r4, #8]
 80032f4:	ea45 0300 	orr.w	r3, r5, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 80032f8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80032fc:	6920      	ldr	r0, [r4, #16]
 80032fe:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8003300:	69a1      	ldr	r1, [r4, #24]
 8003302:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 8003306:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8003308:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800330a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800330c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800330e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8003310:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8003312:	b9e6      	cbnz	r6, 800334e <HAL_TIM_PWM_Init+0xf6>
 8003314:	b9df      	cbnz	r7, 800334e <HAL_TIM_PWM_Init+0xf6>
  TIMx->EGR = TIM_EGR_UG;
 8003316:	2301      	movs	r3, #1
  return HAL_OK;
 8003318:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
 800331a:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800331c:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8003320:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8003324:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8003328:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800332c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8003330:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003334:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8003338:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800333c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003340:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8003344:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 8003348:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800334c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    TIMx->RCR = Structure->RepetitionCounter;
 800334e:	6963      	ldr	r3, [r4, #20]
 8003350:	6313      	str	r3, [r2, #48]	; 0x30
 8003352:	e7e0      	b.n	8003316 <HAL_TIM_PWM_Init+0xbe>
    return HAL_ERROR;
 8003354:	2001      	movs	r0, #1
}
 8003356:	4770      	bx	lr
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8003358:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800335c:	68a1      	ldr	r1, [r4, #8]
 800335e:	430b      	orrs	r3, r1
 8003360:	e7ca      	b.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003362:	4909      	ldr	r1, [pc, #36]	; (8003388 <HAL_TIM_PWM_Init+0x130>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8003364:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8003368:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800336a:	428a      	cmp	r2, r1
    tmpcr1 |= Structure->CounterMode;
 800336c:	ea43 0300 	orr.w	r3, r3, r0
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003370:	d0c2      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 8003372:	2f00      	cmp	r7, #0
 8003374:	d1c0      	bne.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 8003376:	e79d      	b.n	80032b4 <HAL_TIM_PWM_Init+0x5c>
 8003378:	40010000 	.word	0x40010000
 800337c:	40010400 	.word	0x40010400
 8003380:	40000400 	.word	0x40000400
 8003384:	40014000 	.word	0x40014000
 8003388:	40000c00 	.word	0x40000c00

0800338c <HAL_TIM_PWM_Start>:
 800338c:	2900      	cmp	r1, #0
 800338e:	d14b      	bne.n	8003428 <HAL_TIM_PWM_Start+0x9c>
 8003390:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 8003394:	2b01      	cmp	r3, #1
 8003396:	d15b      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 8003398:	2302      	movs	r3, #2
 800339a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800339e:	6803      	ldr	r3, [r0, #0]
 80033a0:	2201      	movs	r2, #1
 80033a2:	f001 011f 	and.w	r1, r1, #31
 80033a6:	6a18      	ldr	r0, [r3, #32]
 80033a8:	fa02 f101 	lsl.w	r1, r2, r1
 80033ac:	ea20 0001 	bic.w	r0, r0, r1
 80033b0:	b410      	push	{r4}
 80033b2:	6218      	str	r0, [r3, #32]
 80033b4:	4c3e      	ldr	r4, [pc, #248]	; (80034b0 <HAL_TIM_PWM_Start+0x124>)
 80033b6:	6a1a      	ldr	r2, [r3, #32]
 80033b8:	42a3      	cmp	r3, r4
 80033ba:	ea41 0102 	orr.w	r1, r1, r2
 80033be:	6219      	str	r1, [r3, #32]
 80033c0:	d048      	beq.n	8003454 <HAL_TIM_PWM_Start+0xc8>
 80033c2:	4a3c      	ldr	r2, [pc, #240]	; (80034b4 <HAL_TIM_PWM_Start+0x128>)
 80033c4:	4293      	cmp	r3, r2
 80033c6:	d045      	beq.n	8003454 <HAL_TIM_PWM_Start+0xc8>
 80033c8:	4a3b      	ldr	r2, [pc, #236]	; (80034b8 <HAL_TIM_PWM_Start+0x12c>)
 80033ca:	4c3c      	ldr	r4, [pc, #240]	; (80034bc <HAL_TIM_PWM_Start+0x130>)
 80033cc:	4293      	cmp	r3, r2
 80033ce:	bf18      	it	ne
 80033d0:	f1b3 4f80 	cmpne.w	r3, #1073741824	; 0x40000000
 80033d4:	483a      	ldr	r0, [pc, #232]	; (80034c0 <HAL_TIM_PWM_Start+0x134>)
 80033d6:	493b      	ldr	r1, [pc, #236]	; (80034c4 <HAL_TIM_PWM_Start+0x138>)
 80033d8:	bf0c      	ite	eq
 80033da:	2201      	moveq	r2, #1
 80033dc:	2200      	movne	r2, #0
 80033de:	42a3      	cmp	r3, r4
 80033e0:	bf08      	it	eq
 80033e2:	f042 0201 	orreq.w	r2, r2, #1
 80033e6:	4283      	cmp	r3, r0
 80033e8:	bf08      	it	eq
 80033ea:	f042 0201 	orreq.w	r2, r2, #1
 80033ee:	428b      	cmp	r3, r1
 80033f0:	bf08      	it	eq
 80033f2:	f042 0201 	orreq.w	r2, r2, #1
 80033f6:	b93a      	cbnz	r2, 8003408 <HAL_TIM_PWM_Start+0x7c>
 80033f8:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
 80033fc:	1a18      	subs	r0, r3, r0
 80033fe:	fab0 f080 	clz	r0, r0
 8003402:	0940      	lsrs	r0, r0, #5
 8003404:	2800      	cmp	r0, #0
 8003406:	d046      	beq.n	8003496 <HAL_TIM_PWM_Start+0x10a>
 8003408:	6899      	ldr	r1, [r3, #8]
 800340a:	4a2f      	ldr	r2, [pc, #188]	; (80034c8 <HAL_TIM_PWM_Start+0x13c>)
 800340c:	400a      	ands	r2, r1
 800340e:	2a06      	cmp	r2, #6
 8003410:	d029      	beq.n	8003466 <HAL_TIM_PWM_Start+0xda>
 8003412:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003416:	d026      	beq.n	8003466 <HAL_TIM_PWM_Start+0xda>
 8003418:	681a      	ldr	r2, [r3, #0]
 800341a:	2000      	movs	r0, #0
 800341c:	f042 0201 	orr.w	r2, r2, #1
 8003420:	601a      	str	r2, [r3, #0]
 8003422:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003426:	4770      	bx	lr
 8003428:	2904      	cmp	r1, #4
 800342a:	d020      	beq.n	800346e <HAL_TIM_PWM_Start+0xe2>
 800342c:	2908      	cmp	r1, #8
 800342e:	d026      	beq.n	800347e <HAL_TIM_PWM_Start+0xf2>
 8003430:	290c      	cmp	r1, #12
 8003432:	d009      	beq.n	8003448 <HAL_TIM_PWM_Start+0xbc>
 8003434:	2910      	cmp	r1, #16
 8003436:	d033      	beq.n	80034a0 <HAL_TIM_PWM_Start+0x114>
 8003438:	f890 3043 	ldrb.w	r3, [r0, #67]	; 0x43
 800343c:	2b01      	cmp	r3, #1
 800343e:	d107      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 8003440:	2302      	movs	r3, #2
 8003442:	f880 3043 	strb.w	r3, [r0, #67]	; 0x43
 8003446:	e7aa      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 8003448:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800344c:	2b01      	cmp	r3, #1
 800344e:	d01e      	beq.n	800348e <HAL_TIM_PWM_Start+0x102>
 8003450:	2001      	movs	r0, #1
 8003452:	4770      	bx	lr
 8003454:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003456:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800345a:	645a      	str	r2, [r3, #68]	; 0x44
 800345c:	4a1a      	ldr	r2, [pc, #104]	; (80034c8 <HAL_TIM_PWM_Start+0x13c>)
 800345e:	6899      	ldr	r1, [r3, #8]
 8003460:	400a      	ands	r2, r1
 8003462:	2a06      	cmp	r2, #6
 8003464:	d1d5      	bne.n	8003412 <HAL_TIM_PWM_Start+0x86>
 8003466:	2000      	movs	r0, #0
 8003468:	f85d 4b04 	ldr.w	r4, [sp], #4
 800346c:	4770      	bx	lr
 800346e:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 8003472:	2b01      	cmp	r3, #1
 8003474:	d1ec      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 8003476:	2302      	movs	r3, #2
 8003478:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800347c:	e78f      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 800347e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8003482:	2b01      	cmp	r3, #1
 8003484:	d1e4      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 8003486:	2302      	movs	r3, #2
 8003488:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800348c:	e787      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 800348e:	2302      	movs	r3, #2
 8003490:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 8003494:	e783      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 8003496:	681a      	ldr	r2, [r3, #0]
 8003498:	f042 0201 	orr.w	r2, r2, #1
 800349c:	601a      	str	r2, [r3, #0]
 800349e:	e7c0      	b.n	8003422 <HAL_TIM_PWM_Start+0x96>
 80034a0:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
 80034a4:	2b01      	cmp	r3, #1
 80034a6:	d1d3      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 80034a8:	2302      	movs	r3, #2
 80034aa:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
 80034ae:	e776      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 80034b0:	40010000 	.word	0x40010000
 80034b4:	40010400 	.word	0x40010400
 80034b8:	40000400 	.word	0x40000400
 80034bc:	40000800 	.word	0x40000800
 80034c0:	40000c00 	.word	0x40000c00
 80034c4:	40014000 	.word	0x40014000
 80034c8:	00010007 	.word	0x00010007

080034cc <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 80034cc:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80034d0:	2b01      	cmp	r3, #1
 80034d2:	f000 8153 	beq.w	800377c <HAL_TIM_PWM_ConfigChannel+0x2b0>
 80034d6:	2301      	movs	r3, #1
{
 80034d8:	b4f0      	push	{r4, r5, r6, r7}
  __HAL_LOCK(htim);
 80034da:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 80034de:	2a14      	cmp	r2, #20
 80034e0:	d843      	bhi.n	800356a <HAL_TIM_PWM_ConfigChannel+0x9e>
 80034e2:	e8df f012 	tbh	[pc, r2, lsl #1]
 80034e6:	0015      	.short	0x0015
 80034e8:	00420042 	.word	0x00420042
 80034ec:	007d0042 	.word	0x007d0042
 80034f0:	00420042 	.word	0x00420042
 80034f4:	00e60042 	.word	0x00e60042
 80034f8:	00420042 	.word	0x00420042
 80034fc:	00b10042 	.word	0x00b10042
 8003500:	00420042 	.word	0x00420042
 8003504:	01190042 	.word	0x01190042
 8003508:	00420042 	.word	0x00420042
 800350c:	00480042 	.word	0x00480042
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8003510:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8003512:	f8d1 c008 	ldr.w	ip, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003516:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= OC_Config->OCMode;
 8003518:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800351a:	f025 0501 	bic.w	r5, r5, #1
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800351e:	4cb0      	ldr	r4, [pc, #704]	; (80037e0 <HAL_TIM_PWM_ConfigChannel+0x314>)
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003520:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 8003522:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 8003524:	685e      	ldr	r6, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 8003526:	699d      	ldr	r5, [r3, #24]
  tmpccer &= ~TIM_CCER_CC1P;
 8003528:	f022 0202 	bic.w	r2, r2, #2
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800352c:	402c      	ands	r4, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800352e:	4dad      	ldr	r5, [pc, #692]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccer |= OC_Config->OCPolarity;
 8003530:	ea42 020c 	orr.w	r2, r2, ip
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8003534:	42ab      	cmp	r3, r5
  tmpccmrx |= OC_Config->OCMode;
 8003536:	ea44 0407 	orr.w	r4, r4, r7
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800353a:	f000 812d 	beq.w	8003798 <HAL_TIM_PWM_ConfigChannel+0x2cc>
 800353e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8003542:	42ab      	cmp	r3, r5
 8003544:	f000 8128 	beq.w	8003798 <HAL_TIM_PWM_ConfigChannel+0x2cc>

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8003548:	684d      	ldr	r5, [r1, #4]
  TIMx->CR2 = tmpcr2;
 800354a:	605e      	str	r6, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800354c:	619c      	str	r4, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800354e:	635d      	str	r5, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8003550:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8003552:	699c      	ldr	r4, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8003554:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8003556:	f044 0408 	orr.w	r4, r4, #8
 800355a:	619c      	str	r4, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800355c:	6999      	ldr	r1, [r3, #24]
 800355e:	f021 0104 	bic.w	r1, r1, #4
 8003562:	6199      	str	r1, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8003564:	699a      	ldr	r2, [r3, #24]
 8003566:	432a      	orrs	r2, r5
 8003568:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800356a:	2300      	movs	r3, #0
}
 800356c:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 800356e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8003572:	4618      	mov	r0, r3
}
 8003574:	4770      	bx	lr
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 8003576:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8003578:	688e      	ldr	r6, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC6E;
 800357a:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800357c:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC6E;
 800357e:	f425 1580 	bic.w	r5, r5, #1048576	; 0x100000
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 8003582:	4c99      	ldr	r4, [pc, #612]	; (80037e8 <HAL_TIM_PWM_ConfigChannel+0x31c>)
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8003584:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 8003586:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 8003588:	685d      	ldr	r5, [r3, #4]
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 800358a:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  tmpccmrx = TIMx->CCMR3;
 800358e:	f8d3 c054 	ldr.w	ip, [r3, #84]	; 0x54
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8003592:	ea42 5206 	orr.w	r2, r2, r6, lsl #20

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003596:	4e93      	ldr	r6, [pc, #588]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 8003598:	ea0c 0404 	and.w	r4, ip, r4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800359c:	42b3      	cmp	r3, r6
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800359e:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80035a2:	f000 80ed 	beq.w	8003780 <HAL_TIM_PWM_ConfigChannel+0x2b4>
 80035a6:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80035aa:	42b3      	cmp	r3, r6
 80035ac:	f000 80e8 	beq.w	8003780 <HAL_TIM_PWM_ConfigChannel+0x2b4>

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 80035b0:	684e      	ldr	r6, [r1, #4]
  TIMx->CR2 = tmpcr2;
 80035b2:	605d      	str	r5, [r3, #4]
  TIMx->CCMR3 = tmpccmrx;
 80035b4:	655c      	str	r4, [r3, #84]	; 0x54
  TIMx->CCR6 = OC_Config->Pulse;
 80035b6:	65de      	str	r6, [r3, #92]	; 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80035b8:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 80035ba:	6d5c      	ldr	r4, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 80035bc:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 80035be:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 80035c2:	655c      	str	r4, [r3, #84]	; 0x54
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 80035c4:	6d59      	ldr	r1, [r3, #84]	; 0x54
 80035c6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80035ca:	6559      	str	r1, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 80035cc:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80035ce:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80035d2:	655a      	str	r2, [r3, #84]	; 0x54
  __HAL_UNLOCK(htim);
 80035d4:	2300      	movs	r3, #0
}
 80035d6:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 80035d8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80035dc:	4618      	mov	r0, r3
}
 80035de:	4770      	bx	lr
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80035e0:	6803      	ldr	r3, [r0, #0]
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80035e2:	f8d1 c008 	ldr.w	ip, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80035e6:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80035e8:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80035ea:	f025 0510 	bic.w	r5, r5, #16
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80035ee:	4c7f      	ldr	r4, [pc, #508]	; (80037ec <HAL_TIM_PWM_ConfigChannel+0x320>)
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80035f0:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 80035f2:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 80035f4:	685e      	ldr	r6, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 80035f6:	699d      	ldr	r5, [r3, #24]
  tmpccer &= ~TIM_CCER_CC2P;
 80035f8:	f022 0220 	bic.w	r2, r2, #32
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80035fc:	402c      	ands	r4, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 80035fe:	4d79      	ldr	r5, [pc, #484]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8003600:	ea42 120c 	orr.w	r2, r2, ip, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8003604:	42ab      	cmp	r3, r5
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8003606:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800360a:	f000 80d9 	beq.w	80037c0 <HAL_TIM_PWM_ConfigChannel+0x2f4>
 800360e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8003612:	42ab      	cmp	r3, r5
 8003614:	f000 80d4 	beq.w	80037c0 <HAL_TIM_PWM_ConfigChannel+0x2f4>
  TIMx->CCR2 = OC_Config->Pulse;
 8003618:	684d      	ldr	r5, [r1, #4]
  TIMx->CR2 = tmpcr2;
 800361a:	605e      	str	r6, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800361c:	619c      	str	r4, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800361e:	639d      	str	r5, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 8003620:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8003622:	699c      	ldr	r4, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8003624:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8003626:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 800362a:	619c      	str	r4, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800362c:	6999      	ldr	r1, [r3, #24]
 800362e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8003632:	6199      	str	r1, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8003634:	699a      	ldr	r2, [r3, #24]
 8003636:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800363a:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800363c:	2300      	movs	r3, #0
}
 800363e:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 8003640:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8003644:	4618      	mov	r0, r3
}
 8003646:	4770      	bx	lr
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8003648:	6803      	ldr	r3, [r0, #0]
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800364a:	688e      	ldr	r6, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800364c:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800364e:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8003650:	f425 5580 	bic.w	r5, r5, #4096	; 0x1000
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8003654:	4c65      	ldr	r4, [pc, #404]	; (80037ec <HAL_TIM_PWM_ConfigChannel+0x320>)
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8003656:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 8003658:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800365a:	685d      	ldr	r5, [r3, #4]
  tmpccer &= ~TIM_CCER_CC4P;
 800365c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccmrx = TIMx->CCMR2;
 8003660:	f8d3 c01c 	ldr.w	ip, [r3, #28]
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8003664:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003668:	4e5e      	ldr	r6, [pc, #376]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800366a:	ea0c 0404 	and.w	r4, ip, r4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800366e:	42b3      	cmp	r3, r6
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8003670:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003674:	f000 809e 	beq.w	80037b4 <HAL_TIM_PWM_ConfigChannel+0x2e8>
 8003678:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800367c:	42b3      	cmp	r3, r6
 800367e:	f000 8099 	beq.w	80037b4 <HAL_TIM_PWM_ConfigChannel+0x2e8>
  TIMx->CCR4 = OC_Config->Pulse;
 8003682:	684e      	ldr	r6, [r1, #4]
  TIMx->CR2 = tmpcr2;
 8003684:	605d      	str	r5, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 8003686:	61dc      	str	r4, [r3, #28]
  TIMx->CCR4 = OC_Config->Pulse;
 8003688:	641e      	str	r6, [r3, #64]	; 0x40
  TIMx->CCER = tmpccer;
 800368a:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800368c:	69dc      	ldr	r4, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800368e:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8003690:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 8003694:	61dc      	str	r4, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8003696:	69d9      	ldr	r1, [r3, #28]
 8003698:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800369c:	61d9      	str	r1, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800369e:	69da      	ldr	r2, [r3, #28]
 80036a0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80036a4:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 80036a6:	2300      	movs	r3, #0
}
 80036a8:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 80036aa:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80036ae:	4618      	mov	r0, r3
}
 80036b0:	4770      	bx	lr
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80036b2:	6803      	ldr	r3, [r0, #0]
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80036b4:	f8d1 c008 	ldr.w	ip, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80036b8:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= OC_Config->OCMode;
 80036ba:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80036bc:	f425 7580 	bic.w	r5, r5, #256	; 0x100
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80036c0:	4c47      	ldr	r4, [pc, #284]	; (80037e0 <HAL_TIM_PWM_ConfigChannel+0x314>)
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80036c2:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 80036c4:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 80036c6:	685e      	ldr	r6, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 80036c8:	69dd      	ldr	r5, [r3, #28]
  tmpccer &= ~TIM_CCER_CC3P;
 80036ca:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80036ce:	402c      	ands	r4, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80036d0:	4d44      	ldr	r5, [pc, #272]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80036d2:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80036d6:	42ab      	cmp	r3, r5
  tmpccmrx |= OC_Config->OCMode;
 80036d8:	ea44 0407 	orr.w	r4, r4, r7
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80036dc:	f000 808a 	beq.w	80037f4 <HAL_TIM_PWM_ConfigChannel+0x328>
 80036e0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80036e4:	42ab      	cmp	r3, r5
 80036e6:	f000 8085 	beq.w	80037f4 <HAL_TIM_PWM_ConfigChannel+0x328>
  TIMx->CCR3 = OC_Config->Pulse;
 80036ea:	684d      	ldr	r5, [r1, #4]
  TIMx->CR2 = tmpcr2;
 80036ec:	605e      	str	r6, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 80036ee:	61dc      	str	r4, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 80036f0:	63dd      	str	r5, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 80036f2:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80036f4:	69dc      	ldr	r4, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80036f6:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80036f8:	f044 0408 	orr.w	r4, r4, #8
 80036fc:	61dc      	str	r4, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80036fe:	69d9      	ldr	r1, [r3, #28]
 8003700:	f021 0104 	bic.w	r1, r1, #4
 8003704:	61d9      	str	r1, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8003706:	69da      	ldr	r2, [r3, #28]
 8003708:	432a      	orrs	r2, r5
 800370a:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800370c:	2300      	movs	r3, #0
}
 800370e:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 8003710:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8003714:	4618      	mov	r0, r3
}
 8003716:	4770      	bx	lr
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 8003718:	6803      	ldr	r3, [r0, #0]
  tmpccer |= (OC_Config->OCPolarity << 16U);
 800371a:	688e      	ldr	r6, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC5E;
 800371c:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= OC_Config->OCMode;
 800371e:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8003720:	f425 3580 	bic.w	r5, r5, #65536	; 0x10000
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8003724:	4c32      	ldr	r4, [pc, #200]	; (80037f0 <HAL_TIM_PWM_ConfigChannel+0x324>)
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8003726:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 8003728:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800372a:	685d      	ldr	r5, [r3, #4]
  tmpccer &= ~TIM_CCER_CC5P;
 800372c:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  tmpccmrx = TIMx->CCMR3;
 8003730:	f8d3 c054 	ldr.w	ip, [r3, #84]	; 0x54
  tmpccer |= (OC_Config->OCPolarity << 16U);
 8003734:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003738:	4e2a      	ldr	r6, [pc, #168]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 800373a:	ea0c 0404 	and.w	r4, ip, r4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800373e:	42b3      	cmp	r3, r6
  tmpccmrx |= OC_Config->OCMode;
 8003740:	ea44 0407 	orr.w	r4, r4, r7
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003744:	d022      	beq.n	800378c <HAL_TIM_PWM_ConfigChannel+0x2c0>
 8003746:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800374a:	42b3      	cmp	r3, r6
 800374c:	d01e      	beq.n	800378c <HAL_TIM_PWM_ConfigChannel+0x2c0>
  TIMx->CCR5 = OC_Config->Pulse;
 800374e:	684e      	ldr	r6, [r1, #4]
  TIMx->CR2 = tmpcr2;
 8003750:	605d      	str	r5, [r3, #4]
  TIMx->CCMR3 = tmpccmrx;
 8003752:	655c      	str	r4, [r3, #84]	; 0x54
  TIMx->CCR5 = OC_Config->Pulse;
 8003754:	659e      	str	r6, [r3, #88]	; 0x58
  TIMx->CCER = tmpccer;
 8003756:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 8003758:	6d5c      	ldr	r4, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 800375a:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 800375c:	f044 0408 	orr.w	r4, r4, #8
 8003760:	655c      	str	r4, [r3, #84]	; 0x54
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 8003762:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8003764:	f021 0104 	bic.w	r1, r1, #4
 8003768:	6559      	str	r1, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 800376a:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800376c:	432a      	orrs	r2, r5
 800376e:	655a      	str	r2, [r3, #84]	; 0x54
  __HAL_UNLOCK(htim);
 8003770:	2300      	movs	r3, #0
}
 8003772:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 8003774:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8003778:	4618      	mov	r0, r3
}
 800377a:	4770      	bx	lr
  __HAL_LOCK(htim);
 800377c:	2002      	movs	r0, #2
}
 800377e:	4770      	bx	lr
    tmpcr2 &= ~TIM_CR2_OIS6;
 8003780:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 8003784:	694e      	ldr	r6, [r1, #20]
 8003786:	ea45 2586 	orr.w	r5, r5, r6, lsl #10
 800378a:	e711      	b.n	80035b0 <HAL_TIM_PWM_ConfigChannel+0xe4>
    tmpcr2 &= ~TIM_CR2_OIS5;
 800378c:	f425 3580 	bic.w	r5, r5, #65536	; 0x10000
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 8003790:	694e      	ldr	r6, [r1, #20]
 8003792:	ea45 2506 	orr.w	r5, r5, r6, lsl #8
 8003796:	e7da      	b.n	800374e <HAL_TIM_PWM_ConfigChannel+0x282>
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8003798:	f426 7c40 	bic.w	ip, r6, #768	; 0x300
    tmpccer &= ~TIM_CCER_CC1NP;
 800379c:	f022 0208 	bic.w	r2, r2, #8
    tmpcr2 |= OC_Config->OCNIdleState;
 80037a0:	698e      	ldr	r6, [r1, #24]
    tmpccer |= OC_Config->OCNPolarity;
 80037a2:	68cf      	ldr	r7, [r1, #12]
    tmpcr2 |= OC_Config->OCNIdleState;
 80037a4:	694d      	ldr	r5, [r1, #20]
    tmpccer |= OC_Config->OCNPolarity;
 80037a6:	433a      	orrs	r2, r7
    tmpcr2 |= OC_Config->OCNIdleState;
 80037a8:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC1NE;
 80037aa:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 80037ae:	ea45 060c 	orr.w	r6, r5, ip
 80037b2:	e6c9      	b.n	8003548 <HAL_TIM_PWM_ConfigChannel+0x7c>
    tmpcr2 &= ~TIM_CR2_OIS4;
 80037b4:	f425 4580 	bic.w	r5, r5, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 80037b8:	694e      	ldr	r6, [r1, #20]
 80037ba:	ea45 1586 	orr.w	r5, r5, r6, lsl #6
 80037be:	e760      	b.n	8003682 <HAL_TIM_PWM_ConfigChannel+0x1b6>
    tmpcr2 &= ~TIM_CR2_OIS2N;
 80037c0:	f426 6c40 	bic.w	ip, r6, #3072	; 0xc00
    tmpccer &= ~TIM_CCER_CC2NP;
 80037c4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80037c8:	698e      	ldr	r6, [r1, #24]
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80037ca:	68cf      	ldr	r7, [r1, #12]
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 80037cc:	694d      	ldr	r5, [r1, #20]
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80037ce:	ea42 1207 	orr.w	r2, r2, r7, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80037d2:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC2NE;
 80037d4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80037d8:	ea4c 0685 	orr.w	r6, ip, r5, lsl #2
 80037dc:	e71c      	b.n	8003618 <HAL_TIM_PWM_ConfigChannel+0x14c>
 80037de:	bf00      	nop
 80037e0:	fffeff8c 	.word	0xfffeff8c
 80037e4:	40010000 	.word	0x40010000
 80037e8:	feff8fff 	.word	0xfeff8fff
 80037ec:	feff8cff 	.word	0xfeff8cff
 80037f0:	fffeff8f 	.word	0xfffeff8f
    tmpcr2 &= ~TIM_CR2_OIS3N;
 80037f4:	f426 5c40 	bic.w	ip, r6, #12288	; 0x3000
    tmpccer &= ~TIM_CCER_CC3NP;
 80037f8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80037fc:	698e      	ldr	r6, [r1, #24]
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80037fe:	68cf      	ldr	r7, [r1, #12]
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8003800:	694d      	ldr	r5, [r1, #20]
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8003802:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8003806:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC3NE;
 8003808:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800380c:	ea4c 1605 	orr.w	r6, ip, r5, lsl #4
 8003810:	e76b      	b.n	80036ea <HAL_TIM_PWM_ConfigChannel+0x21e>
 8003812:	bf00      	nop

08003814 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 8003814:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8003818:	2b01      	cmp	r3, #1
 800381a:	d05b      	beq.n	80038d4 <HAL_TIM_ConfigClockSource+0xc0>
 800381c:	4602      	mov	r2, r0
  htim->State = HAL_TIM_STATE_BUSY;
 800381e:	2002      	movs	r0, #2
  tmpsmcr = htim->Instance->SMCR;
 8003820:	6813      	ldr	r3, [r2, #0]
{
 8003822:	b470      	push	{r4, r5, r6}
  htim->State = HAL_TIM_STATE_BUSY;
 8003824:	f882 003d 	strb.w	r0, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 8003828:	2501      	movs	r5, #1
  tmpsmcr = htim->Instance->SMCR;
 800382a:	6898      	ldr	r0, [r3, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800382c:	4c4c      	ldr	r4, [pc, #304]	; (8003960 <HAL_TIM_ConfigClockSource+0x14c>)
  __HAL_LOCK(htim);
 800382e:	f882 503c 	strb.w	r5, [r2, #60]	; 0x3c
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003832:	4004      	ands	r4, r0
  switch (sClockSourceConfig->ClockSource)
 8003834:	6808      	ldr	r0, [r1, #0]
 8003836:	2840      	cmp	r0, #64	; 0x40
  htim->Instance->SMCR = tmpsmcr;
 8003838:	609c      	str	r4, [r3, #8]
  switch (sClockSourceConfig->ClockSource)
 800383a:	d076      	beq.n	800392a <HAL_TIM_ConfigClockSource+0x116>
 800383c:	d94c      	bls.n	80038d8 <HAL_TIM_ConfigClockSource+0xc4>
 800383e:	2860      	cmp	r0, #96	; 0x60
 8003840:	d02f      	beq.n	80038a2 <HAL_TIM_ConfigClockSource+0x8e>
 8003842:	d958      	bls.n	80038f6 <HAL_TIM_ConfigClockSource+0xe2>
 8003844:	2870      	cmp	r0, #112	; 0x70
 8003846:	d01b      	beq.n	8003880 <HAL_TIM_ConfigClockSource+0x6c>
 8003848:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800384c:	d10f      	bne.n	800386e <HAL_TIM_ConfigClockSource+0x5a>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800384e:	68cc      	ldr	r4, [r1, #12]
 8003850:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 8003854:	ea40 0105 	orr.w	r1, r0, r5
  tmpsmcr = TIMx->SMCR;
 8003858:	6898      	ldr	r0, [r3, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800385a:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800385e:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003862:	4301      	orrs	r1, r0

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8003864:	6099      	str	r1, [r3, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8003866:	6899      	ldr	r1, [r3, #8]
 8003868:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800386c:	6099      	str	r1, [r3, #8]
  __HAL_UNLOCK(htim);
 800386e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 8003870:	2101      	movs	r1, #1
  return HAL_OK;
 8003872:	4618      	mov	r0, r3
  htim->State = HAL_TIM_STATE_READY;
 8003874:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8003878:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800387c:	bc70      	pop	{r4, r5, r6}
 800387e:	4770      	bx	lr
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003880:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 8003884:	68cc      	ldr	r4, [r1, #12]
 8003886:	ea40 0105 	orr.w	r1, r0, r5
  tmpsmcr = TIMx->SMCR;
 800388a:	6898      	ldr	r0, [r3, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800388c:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003890:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003894:	4301      	orrs	r1, r0
  TIMx->SMCR = tmpsmcr;
 8003896:	6099      	str	r1, [r3, #8]
      tmpsmcr = htim->Instance->SMCR;
 8003898:	6899      	ldr	r1, [r3, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800389a:	f041 0177 	orr.w	r1, r1, #119	; 0x77
      htim->Instance->SMCR = tmpsmcr;
 800389e:	6099      	str	r1, [r3, #8]
      break;
 80038a0:	e7e5      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80038a2:	6a1c      	ldr	r4, [r3, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 80038a4:	684d      	ldr	r5, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80038a6:	f024 0410 	bic.w	r4, r4, #16
      TIM_TI2_ConfigInputStage(htim->Instance,
 80038aa:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80038ac:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80038ae:	6998      	ldr	r0, [r3, #24]
  tmpccer = TIMx->CCER;
 80038b0:	6a19      	ldr	r1, [r3, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80038b2:	f420 4070 	bic.w	r0, r0, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80038b6:	f021 01a0 	bic.w	r1, r1, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80038ba:	ea40 3006 	orr.w	r0, r0, r6, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 80038be:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 80038c2:	6198      	str	r0, [r3, #24]
  TIMx->CCER = tmpccer;
 80038c4:	6219      	str	r1, [r3, #32]
  tmpsmcr = TIMx->SMCR;
 80038c6:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80038c8:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80038cc:	f041 0167 	orr.w	r1, r1, #103	; 0x67
  TIMx->SMCR = tmpsmcr;
 80038d0:	6099      	str	r1, [r3, #8]
 80038d2:	e7cc      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  __HAL_LOCK(htim);
 80038d4:	2002      	movs	r0, #2
}
 80038d6:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 80038d8:	2810      	cmp	r0, #16
 80038da:	d004      	beq.n	80038e6 <HAL_TIM_ConfigClockSource+0xd2>
 80038dc:	d93d      	bls.n	800395a <HAL_TIM_ConfigClockSource+0x146>
 80038de:	2820      	cmp	r0, #32
 80038e0:	d001      	beq.n	80038e6 <HAL_TIM_ConfigClockSource+0xd2>
 80038e2:	2830      	cmp	r0, #48	; 0x30
 80038e4:	d1c3      	bne.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  tmpsmcr = TIMx->SMCR;
 80038e6:	6899      	ldr	r1, [r3, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80038e8:	f040 0007 	orr.w	r0, r0, #7
  tmpsmcr &= ~TIM_SMCR_TS;
 80038ec:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80038f0:	4308      	orrs	r0, r1
  TIMx->SMCR = tmpsmcr;
 80038f2:	6098      	str	r0, [r3, #8]
 80038f4:	e7bb      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  switch (sClockSourceConfig->ClockSource)
 80038f6:	2850      	cmp	r0, #80	; 0x50
 80038f8:	d1b9      	bne.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  tmpccer = TIMx->CCER;
 80038fa:	6a1d      	ldr	r5, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80038fc:	6a1c      	ldr	r4, [r3, #32]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80038fe:	6848      	ldr	r0, [r1, #4]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003900:	f025 050a 	bic.w	r5, r5, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003904:	f024 0401 	bic.w	r4, r4, #1
      TIM_TI1_ConfigInputStage(htim->Instance,
 8003908:	68ce      	ldr	r6, [r1, #12]
  tmpccer |= TIM_ICPolarity;
 800390a:	4328      	orrs	r0, r5
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800390c:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800390e:	6999      	ldr	r1, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003910:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003914:	ea41 1106 	orr.w	r1, r1, r6, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 8003918:	6199      	str	r1, [r3, #24]
  TIMx->CCER = tmpccer;
 800391a:	6218      	str	r0, [r3, #32]
  tmpsmcr = TIMx->SMCR;
 800391c:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800391e:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8003922:	f041 0157 	orr.w	r1, r1, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 8003926:	6099      	str	r1, [r3, #8]
 8003928:	e7a1      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  tmpccer = TIMx->CCER;
 800392a:	6a1d      	ldr	r5, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800392c:	6a1c      	ldr	r4, [r3, #32]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800392e:	6848      	ldr	r0, [r1, #4]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003930:	f025 050a 	bic.w	r5, r5, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003934:	f024 0401 	bic.w	r4, r4, #1
      TIM_TI1_ConfigInputStage(htim->Instance,
 8003938:	68ce      	ldr	r6, [r1, #12]
  tmpccer |= TIM_ICPolarity;
 800393a:	4328      	orrs	r0, r5
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800393c:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800393e:	6999      	ldr	r1, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003940:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003944:	ea41 1106 	orr.w	r1, r1, r6, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 8003948:	6199      	str	r1, [r3, #24]
  TIMx->CCER = tmpccer;
 800394a:	6218      	str	r0, [r3, #32]
  tmpsmcr = TIMx->SMCR;
 800394c:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800394e:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8003952:	f041 0147 	orr.w	r1, r1, #71	; 0x47
  TIMx->SMCR = tmpsmcr;
 8003956:	6099      	str	r1, [r3, #8]
 8003958:	e789      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  switch (sClockSourceConfig->ClockSource)
 800395a:	2800      	cmp	r0, #0
 800395c:	d0c3      	beq.n	80038e6 <HAL_TIM_ConfigClockSource+0xd2>
 800395e:	e786      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
 8003960:	fffe0088 	.word	0xfffe0088

08003964 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8003964:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8003968:	2b01      	cmp	r3, #1
 800396a:	d04b      	beq.n	8003a04 <HAL_TIMEx_MasterConfigSynchronization+0xa0>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800396c:	6803      	ldr	r3, [r0, #0]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800396e:	4a27      	ldr	r2, [pc, #156]	; (8003a0c <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
{
 8003970:	b4f0      	push	{r4, r5, r6, r7}
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8003972:	4e27      	ldr	r6, [pc, #156]	; (8003a10 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
  htim->State = HAL_TIM_STATE_BUSY;
 8003974:	2502      	movs	r5, #2
  __HAL_LOCK(htim);
 8003976:	2401      	movs	r4, #1
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8003978:	4293      	cmp	r3, r2
 800397a:	bf18      	it	ne
 800397c:	42b3      	cmpne	r3, r6
  htim->State = HAL_TIM_STATE_BUSY;
 800397e:	f880 503d 	strb.w	r5, [r0, #61]	; 0x3d
  __HAL_LOCK(htim);
 8003982:	f880 403c 	strb.w	r4, [r0, #60]	; 0x3c
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8003986:	bf08      	it	eq
 8003988:	2601      	moveq	r6, #1
  tmpcr2 = htim->Instance->CR2;
 800398a:	685c      	ldr	r4, [r3, #4]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800398c:	bf18      	it	ne
 800398e:	2600      	movne	r6, #0
  tmpsmcr = htim->Instance->SMCR;
 8003990:	689d      	ldr	r5, [r3, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8003992:	d103      	bne.n	800399c <HAL_TIMEx_MasterConfigSynchronization+0x38>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 8003994:	f424 0470 	bic.w	r4, r4, #15728640	; 0xf00000
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8003998:	684a      	ldr	r2, [r1, #4]
 800399a:	4314      	orrs	r4, r2
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800399c:	4a1d      	ldr	r2, [pc, #116]	; (8003a14 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
  tmpcr2 &= ~TIM_CR2_MMS;
 800399e:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80039a2:	680f      	ldr	r7, [r1, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80039a4:	4293      	cmp	r3, r2
 80039a6:	bf18      	it	ne
 80039a8:	f1b3 4f80 	cmpne.w	r3, #1073741824	; 0x40000000
 80039ac:	f8df c070 	ldr.w	ip, [pc, #112]	; 8003a20 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80039b0:	ea44 0407 	orr.w	r4, r4, r7
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80039b4:	4f18      	ldr	r7, [pc, #96]	; (8003a18 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80039b6:	bf0c      	ite	eq
 80039b8:	2201      	moveq	r2, #1
 80039ba:	2200      	movne	r2, #0
  htim->Instance->CR2 = tmpcr2;
 80039bc:	605c      	str	r4, [r3, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80039be:	4563      	cmp	r3, ip
 80039c0:	bf08      	it	eq
 80039c2:	f042 0201 	orreq.w	r2, r2, #1
 80039c6:	4c15      	ldr	r4, [pc, #84]	; (8003a1c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 80039c8:	42bb      	cmp	r3, r7
 80039ca:	bf08      	it	eq
 80039cc:	f042 0201 	orreq.w	r2, r2, #1
 80039d0:	f507 379a 	add.w	r7, r7, #78848	; 0x13400
 80039d4:	42bb      	cmp	r3, r7
 80039d6:	bf08      	it	eq
 80039d8:	f042 0201 	orreq.w	r2, r2, #1
 80039dc:	42a3      	cmp	r3, r4
 80039de:	bf08      	it	eq
 80039e0:	f042 0201 	orreq.w	r2, r2, #1
 80039e4:	b902      	cbnz	r2, 80039e8 <HAL_TIMEx_MasterConfigSynchronization+0x84>
 80039e6:	b126      	cbz	r6, 80039f2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80039e8:	688a      	ldr	r2, [r1, #8]
    tmpsmcr &= ~TIM_SMCR_MSM;
 80039ea:	f025 0580 	bic.w	r5, r5, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80039ee:	4315      	orrs	r5, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 80039f0:	609d      	str	r5, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 80039f2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 80039f4:	2201      	movs	r2, #1
  __HAL_UNLOCK(htim);
 80039f6:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_READY;
 80039fa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

  return HAL_OK;
}
 80039fe:	4618      	mov	r0, r3
 8003a00:	bcf0      	pop	{r4, r5, r6, r7}
 8003a02:	4770      	bx	lr
  __HAL_LOCK(htim);
 8003a04:	2202      	movs	r2, #2
}
 8003a06:	4610      	mov	r0, r2
 8003a08:	4770      	bx	lr
 8003a0a:	bf00      	nop
 8003a0c:	40010400 	.word	0x40010400
 8003a10:	40010000 	.word	0x40010000
 8003a14:	40000400 	.word	0x40000400
 8003a18:	40000c00 	.word	0x40000c00
 8003a1c:	40001800 	.word	0x40001800
 8003a20:	40000800 	.word	0x40000800

08003a24 <HAL_UART_TxCpltCallback>:
 8003a24:	4770      	bx	lr
 8003a26:	bf00      	nop

08003a28 <HAL_UART_ErrorCallback>:
 8003a28:	4770      	bx	lr
 8003a2a:	bf00      	nop

08003a2c <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8003a2c:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
  huart->RxXferCount = 0U;
 8003a2e:	2200      	movs	r2, #0
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8003a30:	6b83      	ldr	r3, [r0, #56]	; 0x38
  huart->RxXferCount = 0U;
 8003a32:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8003a36:	4618      	mov	r0, r3
  huart->TxXferCount = 0U;
 8003a38:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
  HAL_UART_ErrorCallback(huart);
 8003a3c:	f7ff fff4 	bl	8003a28 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8003a40:	bd08      	pop	{r3, pc}
 8003a42:	bf00      	nop

08003a44 <HAL_UARTEx_RxEventCallback>:
}
 8003a44:	4770      	bx	lr
 8003a46:	bf00      	nop

08003a48 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8003a48:	6803      	ldr	r3, [r0, #0]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 8003a4a:	f640 010f 	movw	r1, #2063	; 0x80f
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8003a4e:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
 8003a50:	420a      	tst	r2, r1
{
 8003a52:	b570      	push	{r4, r5, r6, lr}
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8003a54:	681e      	ldr	r6, [r3, #0]
{
 8003a56:	4604      	mov	r4, r0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8003a58:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 8003a5a:	d068      	beq.n	8003b2e <HAL_UART_IRQHandler+0xe6>
      && (((cr3its & USART_CR3_EIE) != 0U)
 8003a5c:	f015 0501 	ands.w	r5, r5, #1
 8003a60:	d06c      	beq.n	8003b3c <HAL_UART_IRQHandler+0xf4>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8003a62:	07d1      	lsls	r1, r2, #31
 8003a64:	d509      	bpl.n	8003a7a <HAL_UART_IRQHandler+0x32>
 8003a66:	05f0      	lsls	r0, r6, #23
 8003a68:	d507      	bpl.n	8003a7a <HAL_UART_IRQHandler+0x32>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8003a6a:	2101      	movs	r1, #1
 8003a6c:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8003a6e:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003a72:	f041 0101 	orr.w	r1, r1, #1
 8003a76:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003a7a:	0791      	lsls	r1, r2, #30
 8003a7c:	f100 80b9 	bmi.w	8003bf2 <HAL_UART_IRQHandler+0x1aa>
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003a80:	0751      	lsls	r1, r2, #29
 8003a82:	d502      	bpl.n	8003a8a <HAL_UART_IRQHandler+0x42>
 8003a84:	2d00      	cmp	r5, #0
 8003a86:	f040 80c2 	bne.w	8003c0e <HAL_UART_IRQHandler+0x1c6>
    if (((isrflags & USART_ISR_ORE) != 0U)
 8003a8a:	0710      	lsls	r0, r2, #28
 8003a8c:	d505      	bpl.n	8003a9a <HAL_UART_IRQHandler+0x52>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8003a8e:	06b1      	lsls	r1, r6, #26
 8003a90:	f100 80c6 	bmi.w	8003c20 <HAL_UART_IRQHandler+0x1d8>
 8003a94:	2d00      	cmp	r5, #0
 8003a96:	f040 80c3 	bne.w	8003c20 <HAL_UART_IRQHandler+0x1d8>
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 8003a9a:	0515      	lsls	r5, r2, #20
 8003a9c:	d50a      	bpl.n	8003ab4 <HAL_UART_IRQHandler+0x6c>
 8003a9e:	0170      	lsls	r0, r6, #5
 8003aa0:	d508      	bpl.n	8003ab4 <HAL_UART_IRQHandler+0x6c>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003aa2:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003aa6:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 8003aa8:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003aac:	f041 0120 	orr.w	r1, r1, #32
 8003ab0:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8003ab4:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003ab8:	2900      	cmp	r1, #0
 8003aba:	d03e      	beq.n	8003b3a <HAL_UART_IRQHandler+0xf2>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 8003abc:	0691      	lsls	r1, r2, #26
 8003abe:	d502      	bpl.n	8003ac6 <HAL_UART_IRQHandler+0x7e>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8003ac0:	06b2      	lsls	r2, r6, #26
 8003ac2:	f100 80ba 	bmi.w	8003c3a <HAL_UART_IRQHandler+0x1f2>
      errorcode = huart->ErrorCode;
 8003ac6:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8003aca:	6899      	ldr	r1, [r3, #8]
 8003acc:	064e      	lsls	r6, r1, #25
 8003ace:	d403      	bmi.n	8003ad8 <HAL_UART_IRQHandler+0x90>
 8003ad0:	f015 0528 	ands.w	r5, r5, #40	; 0x28
 8003ad4:	f000 80b9 	beq.w	8003c4a <HAL_UART_IRQHandler+0x202>
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003ad8:	681a      	ldr	r2, [r3, #0]
 8003ada:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8003ade:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003ae0:	689a      	ldr	r2, [r3, #8]
 8003ae2:	f022 0201 	bic.w	r2, r2, #1
 8003ae6:	609a      	str	r2, [r3, #8]
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003ae8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8003aea:	2a01      	cmp	r2, #1
 8003aec:	d103      	bne.n	8003af6 <HAL_UART_IRQHandler+0xae>
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003aee:	681a      	ldr	r2, [r3, #0]
 8003af0:	f022 0210 	bic.w	r2, r2, #16
 8003af4:	601a      	str	r2, [r3, #0]
  huart->RxState = HAL_UART_STATE_READY;
 8003af6:	2120      	movs	r1, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003af8:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
 8003afa:	67e1      	str	r1, [r4, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003afc:	6622      	str	r2, [r4, #96]	; 0x60
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8003afe:	6899      	ldr	r1, [r3, #8]
  huart->RxISR = NULL;
 8003b00:	6662      	str	r2, [r4, #100]	; 0x64
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8003b02:	064d      	lsls	r5, r1, #25
 8003b04:	f140 8095 	bpl.w	8003c32 <HAL_UART_IRQHandler+0x1ea>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8003b08:	689a      	ldr	r2, [r3, #8]
          if (huart->hdmarx != NULL)
 8003b0a:	6f21      	ldr	r1, [r4, #112]	; 0x70
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8003b0c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003b10:	609a      	str	r2, [r3, #8]
          if (huart->hdmarx != NULL)
 8003b12:	2900      	cmp	r1, #0
 8003b14:	f000 808d 	beq.w	8003c32 <HAL_UART_IRQHandler+0x1ea>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8003b18:	4b60      	ldr	r3, [pc, #384]	; (8003c9c <HAL_UART_IRQHandler+0x254>)
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8003b1a:	4608      	mov	r0, r1
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8003b1c:	650b      	str	r3, [r1, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8003b1e:	f7fd fdfb 	bl	8001718 <HAL_DMA_Abort_IT>
 8003b22:	b150      	cbz	r0, 8003b3a <HAL_UART_IRQHandler+0xf2>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8003b24:	6f20      	ldr	r0, [r4, #112]	; 0x70
}
 8003b26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8003b2a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8003b2c:	4718      	bx	r3
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8003b2e:	0691      	lsls	r1, r2, #26
 8003b30:	d507      	bpl.n	8003b42 <HAL_UART_IRQHandler+0xfa>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8003b32:	06b5      	lsls	r5, r6, #26
 8003b34:	d505      	bpl.n	8003b42 <HAL_UART_IRQHandler+0xfa>
      if (huart->RxISR != NULL)
 8003b36:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8003b38:	b9f3      	cbnz	r3, 8003b78 <HAL_UART_IRQHandler+0x130>
}
 8003b3a:	bd70      	pop	{r4, r5, r6, pc}
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8003b3c:	4958      	ldr	r1, [pc, #352]	; (8003ca0 <HAL_UART_IRQHandler+0x258>)
 8003b3e:	420e      	tst	r6, r1
 8003b40:	d18f      	bne.n	8003a62 <HAL_UART_IRQHandler+0x1a>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003b42:	6e21      	ldr	r1, [r4, #96]	; 0x60
 8003b44:	2901      	cmp	r1, #1
 8003b46:	d01a      	beq.n	8003b7e <HAL_UART_IRQHandler+0x136>
  if (((isrflags & USART_ISR_TXE) != 0U)
 8003b48:	0615      	lsls	r5, r2, #24
 8003b4a:	d40f      	bmi.n	8003b6c <HAL_UART_IRQHandler+0x124>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 8003b4c:	0651      	lsls	r1, r2, #25
 8003b4e:	d5f4      	bpl.n	8003b3a <HAL_UART_IRQHandler+0xf2>
 8003b50:	0672      	lsls	r2, r6, #25
 8003b52:	d5f2      	bpl.n	8003b3a <HAL_UART_IRQHandler+0xf2>
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8003b54:	681a      	ldr	r2, [r3, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8003b56:	2520      	movs	r5, #32

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 8003b58:	2100      	movs	r1, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8003b5a:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8003b5c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003b60:	601a      	str	r2, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
 8003b62:	67a5      	str	r5, [r4, #120]	; 0x78
  huart->TxISR = NULL;
 8003b64:	66a1      	str	r1, [r4, #104]	; 0x68
  HAL_UART_TxCpltCallback(huart);
 8003b66:	f7ff ff5d 	bl	8003a24 <HAL_UART_TxCpltCallback>
}
 8003b6a:	bd70      	pop	{r4, r5, r6, pc}
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 8003b6c:	0630      	lsls	r0, r6, #24
 8003b6e:	d5ed      	bpl.n	8003b4c <HAL_UART_IRQHandler+0x104>
    if (huart->TxISR != NULL)
 8003b70:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	d0e1      	beq.n	8003b3a <HAL_UART_IRQHandler+0xf2>
      huart->TxISR(huart);
 8003b76:	4620      	mov	r0, r4
}
 8003b78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
 8003b7c:	4718      	bx	r3
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8003b7e:	06d0      	lsls	r0, r2, #27
 8003b80:	d5e2      	bpl.n	8003b48 <HAL_UART_IRQHandler+0x100>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8003b82:	06f1      	lsls	r1, r6, #27
 8003b84:	d5e0      	bpl.n	8003b48 <HAL_UART_IRQHandler+0x100>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8003b86:	2210      	movs	r2, #16
 8003b88:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8003b8a:	689a      	ldr	r2, [r3, #8]
 8003b8c:	f012 0240 	ands.w	r2, r2, #64	; 0x40
 8003b90:	d061      	beq.n	8003c56 <HAL_UART_IRQHandler+0x20e>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8003b92:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8003b94:	6802      	ldr	r2, [r0, #0]
 8003b96:	6852      	ldr	r2, [r2, #4]
 8003b98:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8003b9a:	2a00      	cmp	r2, #0
 8003b9c:	d0cd      	beq.n	8003b3a <HAL_UART_IRQHandler+0xf2>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8003b9e:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
 8003ba2:	4291      	cmp	r1, r2
 8003ba4:	d9c9      	bls.n	8003b3a <HAL_UART_IRQHandler+0xf2>
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8003ba6:	69c5      	ldr	r5, [r0, #28]
        huart->RxXferCount = nb_remaining_rx_data;
 8003ba8:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8003bac:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8003bb0:	d017      	beq.n	8003be2 <HAL_UART_IRQHandler+0x19a>
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8003bb2:	681a      	ldr	r2, [r3, #0]
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003bb4:	2100      	movs	r1, #0
          huart->RxState = HAL_UART_STATE_READY;
 8003bb6:	2520      	movs	r5, #32
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8003bb8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003bbc:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003bbe:	689a      	ldr	r2, [r3, #8]
 8003bc0:	f022 0201 	bic.w	r2, r2, #1
 8003bc4:	609a      	str	r2, [r3, #8]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8003bc6:	689a      	ldr	r2, [r3, #8]
 8003bc8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003bcc:	609a      	str	r2, [r3, #8]
          huart->RxState = HAL_UART_STATE_READY;
 8003bce:	67e5      	str	r5, [r4, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003bd0:	6621      	str	r1, [r4, #96]	; 0x60
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003bd2:	681a      	ldr	r2, [r3, #0]
 8003bd4:	f022 0210 	bic.w	r2, r2, #16
 8003bd8:	601a      	str	r2, [r3, #0]
          (void)HAL_DMA_Abort(huart->hdmarx);
 8003bda:	f7fd fd55 	bl	8001688 <HAL_DMA_Abort>
 8003bde:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8003be2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8003be6:	4620      	mov	r0, r4
 8003be8:	1ac9      	subs	r1, r1, r3
 8003bea:	b289      	uxth	r1, r1
 8003bec:	f7ff ff2a 	bl	8003a44 <HAL_UARTEx_RxEventCallback>
}
 8003bf0:	bd70      	pop	{r4, r5, r6, pc}
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003bf2:	2d00      	cmp	r5, #0
 8003bf4:	f43f af49 	beq.w	8003a8a <HAL_UART_IRQHandler+0x42>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8003bf8:	2102      	movs	r1, #2
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003bfa:	0750      	lsls	r0, r2, #29
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8003bfc:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8003bfe:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003c02:	f041 0104 	orr.w	r1, r1, #4
 8003c06:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003c0a:	f57f af3e 	bpl.w	8003a8a <HAL_UART_IRQHandler+0x42>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8003c0e:	2104      	movs	r1, #4
 8003c10:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8003c12:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003c16:	f041 0102 	orr.w	r1, r1, #2
 8003c1a:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
 8003c1e:	e734      	b.n	8003a8a <HAL_UART_IRQHandler+0x42>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8003c20:	2108      	movs	r1, #8
 8003c22:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8003c24:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003c28:	f041 0108 	orr.w	r1, r1, #8
 8003c2c:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
 8003c30:	e733      	b.n	8003a9a <HAL_UART_IRQHandler+0x52>
            HAL_UART_ErrorCallback(huart);
 8003c32:	4620      	mov	r0, r4
 8003c34:	f7ff fef8 	bl	8003a28 <HAL_UART_ErrorCallback>
}
 8003c38:	bd70      	pop	{r4, r5, r6, pc}
        if (huart->RxISR != NULL)
 8003c3a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003c3c:	2a00      	cmp	r2, #0
 8003c3e:	f43f af42 	beq.w	8003ac6 <HAL_UART_IRQHandler+0x7e>
          huart->RxISR(huart);
 8003c42:	4620      	mov	r0, r4
 8003c44:	4790      	blx	r2
 8003c46:	6823      	ldr	r3, [r4, #0]
 8003c48:	e73d      	b.n	8003ac6 <HAL_UART_IRQHandler+0x7e>
        HAL_UART_ErrorCallback(huart);
 8003c4a:	4620      	mov	r0, r4
 8003c4c:	f7ff feec 	bl	8003a28 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003c50:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
}
 8003c54:	bd70      	pop	{r4, r5, r6, pc}
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8003c56:	f8b4 505a 	ldrh.w	r5, [r4, #90]	; 0x5a
 8003c5a:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
      if ((huart->RxXferCount > 0U)
 8003c5e:	f8b4 005a 	ldrh.w	r0, [r4, #90]	; 0x5a
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8003c62:	1b49      	subs	r1, r1, r5
      if ((huart->RxXferCount > 0U)
 8003c64:	b280      	uxth	r0, r0
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8003c66:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 8003c68:	2800      	cmp	r0, #0
 8003c6a:	f43f af66 	beq.w	8003b3a <HAL_UART_IRQHandler+0xf2>
 8003c6e:	2900      	cmp	r1, #0
 8003c70:	f43f af63 	beq.w	8003b3a <HAL_UART_IRQHandler+0xf2>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003c74:	681d      	ldr	r5, [r3, #0]
        huart->RxState = HAL_UART_STATE_READY;
 8003c76:	2620      	movs	r6, #32
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8003c78:	4620      	mov	r0, r4
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003c7a:	f425 7590 	bic.w	r5, r5, #288	; 0x120
 8003c7e:	601d      	str	r5, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003c80:	689d      	ldr	r5, [r3, #8]
 8003c82:	f025 0501 	bic.w	r5, r5, #1
 8003c86:	609d      	str	r5, [r3, #8]
        huart->RxState = HAL_UART_STATE_READY;
 8003c88:	67e6      	str	r6, [r4, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003c8a:	6622      	str	r2, [r4, #96]	; 0x60
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003c8c:	681d      	ldr	r5, [r3, #0]
        huart->RxISR = NULL;
 8003c8e:	6662      	str	r2, [r4, #100]	; 0x64
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003c90:	f025 0510 	bic.w	r5, r5, #16
 8003c94:	601d      	str	r5, [r3, #0]
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8003c96:	f7ff fed5 	bl	8003a44 <HAL_UARTEx_RxEventCallback>
}
 8003c9a:	bd70      	pop	{r4, r5, r6, pc}
 8003c9c:	08003a2d 	.word	0x08003a2d
 8003ca0:	04000120 	.word	0x04000120

08003ca4 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003ca4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8003ca6:	07da      	lsls	r2, r3, #31
{
 8003ca8:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003caa:	d506      	bpl.n	8003cba <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8003cac:	6801      	ldr	r1, [r0, #0]
 8003cae:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8003cb0:	684a      	ldr	r2, [r1, #4]
 8003cb2:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003cb6:	4322      	orrs	r2, r4
 8003cb8:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8003cba:	079c      	lsls	r4, r3, #30
 8003cbc:	d506      	bpl.n	8003ccc <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8003cbe:	6801      	ldr	r1, [r0, #0]
 8003cc0:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8003cc2:	684a      	ldr	r2, [r1, #4]
 8003cc4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8003cc8:	4322      	orrs	r2, r4
 8003cca:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8003ccc:	0759      	lsls	r1, r3, #29
 8003cce:	d506      	bpl.n	8003cde <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8003cd0:	6801      	ldr	r1, [r0, #0]
 8003cd2:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8003cd4:	684a      	ldr	r2, [r1, #4]
 8003cd6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003cda:	4322      	orrs	r2, r4
 8003cdc:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8003cde:	071a      	lsls	r2, r3, #28
 8003ce0:	d506      	bpl.n	8003cf0 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8003ce2:	6801      	ldr	r1, [r0, #0]
 8003ce4:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8003ce6:	684a      	ldr	r2, [r1, #4]
 8003ce8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003cec:	4322      	orrs	r2, r4
 8003cee:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8003cf0:	06dc      	lsls	r4, r3, #27
 8003cf2:	d506      	bpl.n	8003d02 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8003cf4:	6801      	ldr	r1, [r0, #0]
 8003cf6:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8003cf8:	688a      	ldr	r2, [r1, #8]
 8003cfa:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003cfe:	4322      	orrs	r2, r4
 8003d00:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8003d02:	0699      	lsls	r1, r3, #26
 8003d04:	d506      	bpl.n	8003d14 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8003d06:	6801      	ldr	r1, [r0, #0]
 8003d08:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003d0a:	688a      	ldr	r2, [r1, #8]
 8003d0c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003d10:	4322      	orrs	r2, r4
 8003d12:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8003d14:	065a      	lsls	r2, r3, #25
 8003d16:	d50a      	bpl.n	8003d2e <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003d18:	6801      	ldr	r1, [r0, #0]
 8003d1a:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8003d1c:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8003d1e:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003d22:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8003d26:	ea42 0204 	orr.w	r2, r2, r4
 8003d2a:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8003d2c:	d00b      	beq.n	8003d46 <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8003d2e:	061b      	lsls	r3, r3, #24
 8003d30:	d506      	bpl.n	8003d40 <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8003d32:	6802      	ldr	r2, [r0, #0]
 8003d34:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8003d36:	6853      	ldr	r3, [r2, #4]
 8003d38:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8003d3c:	430b      	orrs	r3, r1
 8003d3e:	6053      	str	r3, [r2, #4]
}
 8003d40:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003d44:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8003d46:	684a      	ldr	r2, [r1, #4]
 8003d48:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8003d4a:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8003d4e:	4322      	orrs	r2, r4
 8003d50:	604a      	str	r2, [r1, #4]
 8003d52:	e7ec      	b.n	8003d2e <UART_AdvFeatureConfig+0x8a>

08003d54 <HAL_UART_Init>:
  if (huart == NULL)
 8003d54:	2800      	cmp	r0, #0
 8003d56:	d04f      	beq.n	8003df8 <HAL_UART_Init+0xa4>
  if (huart->gState == HAL_UART_STATE_RESET)
 8003d58:	6f83      	ldr	r3, [r0, #120]	; 0x78
{
 8003d5a:	b570      	push	{r4, r5, r6, lr}
 8003d5c:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d045      	beq.n	8003dee <HAL_UART_Init+0x9a>
  __HAL_UART_DISABLE(huart);
 8003d62:	6823      	ldr	r3, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8003d64:	2124      	movs	r1, #36	; 0x24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d66:	6920      	ldr	r0, [r4, #16]
  huart->gState = HAL_UART_STATE_BUSY;
 8003d68:	67a1      	str	r1, [r4, #120]	; 0x78
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d6a:	68a2      	ldr	r2, [r4, #8]
  __HAL_UART_DISABLE(huart);
 8003d6c:	6819      	ldr	r1, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d6e:	4302      	orrs	r2, r0
 8003d70:	6960      	ldr	r0, [r4, #20]
  __HAL_UART_DISABLE(huart);
 8003d72:	f021 0101 	bic.w	r1, r1, #1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d76:	4dba      	ldr	r5, [pc, #744]	; (8004060 <HAL_UART_Init+0x30c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d78:	4302      	orrs	r2, r0
 8003d7a:	69e0      	ldr	r0, [r4, #28]
  __HAL_UART_DISABLE(huart);
 8003d7c:	6019      	str	r1, [r3, #0]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d7e:	6819      	ldr	r1, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d80:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003d82:	68e6      	ldr	r6, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d84:	400d      	ands	r5, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8003d86:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d88:	432a      	orrs	r2, r5
  tmpreg |= huart->Init.OneBitSampling;
 8003d8a:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d8c:	601a      	str	r2, [r3, #0]
  tmpreg |= huart->Init.OneBitSampling;
 8003d8e:	ea41 0205 	orr.w	r2, r1, r5
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003d92:	6859      	ldr	r1, [r3, #4]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003d94:	4db3      	ldr	r5, [pc, #716]	; (8004064 <HAL_UART_Init+0x310>)
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003d96:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003d9a:	42ab      	cmp	r3, r5
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003d9c:	ea41 0106 	orr.w	r1, r1, r6
 8003da0:	6059      	str	r1, [r3, #4]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8003da2:	6899      	ldr	r1, [r3, #8]
 8003da4:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 8003da8:	ea42 0201 	orr.w	r2, r2, r1
 8003dac:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003dae:	d025      	beq.n	8003dfc <HAL_UART_Init+0xa8>
 8003db0:	4aad      	ldr	r2, [pc, #692]	; (8004068 <HAL_UART_Init+0x314>)
 8003db2:	4293      	cmp	r3, r2
 8003db4:	d044      	beq.n	8003e40 <HAL_UART_Init+0xec>
 8003db6:	4aad      	ldr	r2, [pc, #692]	; (800406c <HAL_UART_Init+0x318>)
 8003db8:	4293      	cmp	r3, r2
 8003dba:	f000 80e9 	beq.w	8003f90 <HAL_UART_Init+0x23c>
 8003dbe:	4aac      	ldr	r2, [pc, #688]	; (8004070 <HAL_UART_Init+0x31c>)
 8003dc0:	4293      	cmp	r3, r2
 8003dc2:	d045      	beq.n	8003e50 <HAL_UART_Init+0xfc>
 8003dc4:	4aab      	ldr	r2, [pc, #684]	; (8004074 <HAL_UART_Init+0x320>)
 8003dc6:	4293      	cmp	r3, r2
 8003dc8:	f000 80f1 	beq.w	8003fae <HAL_UART_Init+0x25a>
 8003dcc:	4aaa      	ldr	r2, [pc, #680]	; (8004078 <HAL_UART_Init+0x324>)
 8003dce:	4293      	cmp	r3, r2
 8003dd0:	f000 8171 	beq.w	80040b6 <HAL_UART_Init+0x362>
 8003dd4:	4aa9      	ldr	r2, [pc, #676]	; (800407c <HAL_UART_Init+0x328>)
 8003dd6:	4293      	cmp	r3, r2
 8003dd8:	f000 8180 	beq.w	80040dc <HAL_UART_Init+0x388>
 8003ddc:	4aa8      	ldr	r2, [pc, #672]	; (8004080 <HAL_UART_Init+0x32c>)
 8003dde:	4293      	cmp	r3, r2
 8003de0:	f000 812d 	beq.w	800403e <HAL_UART_Init+0x2ea>
  huart->RxISR = NULL;
 8003de4:	2300      	movs	r3, #0
    return HAL_ERROR;
 8003de6:	2001      	movs	r0, #1
  huart->TxISR = NULL;
 8003de8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
}
 8003dec:	bd70      	pop	{r4, r5, r6, pc}
    huart->Lock = HAL_UNLOCKED;
 8003dee:	f880 3074 	strb.w	r3, [r0, #116]	; 0x74
    HAL_UART_MspInit(huart);
 8003df2:	f005 f943 	bl	800907c <HAL_UART_MspInit>
 8003df6:	e7b4      	b.n	8003d62 <HAL_UART_Init+0xe>
    return HAL_ERROR;
 8003df8:	2001      	movs	r0, #1
}
 8003dfa:	4770      	bx	lr
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003dfc:	4ba1      	ldr	r3, [pc, #644]	; (8004084 <HAL_UART_Init+0x330>)
 8003dfe:	4aa2      	ldr	r2, [pc, #648]	; (8004088 <HAL_UART_Init+0x334>)
 8003e00:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003e04:	f003 0303 	and.w	r3, r3, #3
 8003e08:	5cd3      	ldrb	r3, [r2, r3]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003e0a:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003e0e:	d030      	beq.n	8003e72 <HAL_UART_Init+0x11e>
    switch (clocksource)
 8003e10:	2b08      	cmp	r3, #8
 8003e12:	d8e7      	bhi.n	8003de4 <HAL_UART_Init+0x90>
 8003e14:	a201      	add	r2, pc, #4	; (adr r2, 8003e1c <HAL_UART_Init+0xc8>)
 8003e16:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e1a:	bf00      	nop
 8003e1c:	08003f75 	.word	0x08003f75
 8003e20:	08003ead 	.word	0x08003ead
 8003e24:	08003fab 	.word	0x08003fab
 8003e28:	08003de5 	.word	0x08003de5
 8003e2c:	08003fc5 	.word	0x08003fc5
 8003e30:	08003de5 	.word	0x08003de5
 8003e34:	08003de5 	.word	0x08003de5
 8003e38:	08003de5 	.word	0x08003de5
 8003e3c:	08003fcb 	.word	0x08003fcb
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003e40:	4b90      	ldr	r3, [pc, #576]	; (8004084 <HAL_UART_Init+0x330>)
 8003e42:	4a92      	ldr	r2, [pc, #584]	; (800408c <HAL_UART_Init+0x338>)
 8003e44:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003e48:	f003 030c 	and.w	r3, r3, #12
 8003e4c:	5cd3      	ldrb	r3, [r2, r3]
 8003e4e:	e7dc      	b.n	8003e0a <HAL_UART_Init+0xb6>
 8003e50:	4b8c      	ldr	r3, [pc, #560]	; (8004084 <HAL_UART_Init+0x330>)
 8003e52:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003e56:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8003e5a:	2b40      	cmp	r3, #64	; 0x40
 8003e5c:	f000 80af 	beq.w	8003fbe <HAL_UART_Init+0x26a>
 8003e60:	f240 8082 	bls.w	8003f68 <HAL_UART_Init+0x214>
 8003e64:	2b80      	cmp	r3, #128	; 0x80
 8003e66:	f000 809d 	beq.w	8003fa4 <HAL_UART_Init+0x250>
 8003e6a:	2bc0      	cmp	r3, #192	; 0xc0
 8003e6c:	f000 80b8 	beq.w	8003fe0 <HAL_UART_Init+0x28c>
 8003e70:	e7b8      	b.n	8003de4 <HAL_UART_Init+0x90>
    switch (clocksource)
 8003e72:	2b08      	cmp	r3, #8
 8003e74:	d8b6      	bhi.n	8003de4 <HAL_UART_Init+0x90>
 8003e76:	a201      	add	r2, pc, #4	; (adr r2, 8003e7c <HAL_UART_Init+0x128>)
 8003e78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e7c:	08004039 	.word	0x08004039
 8003e80:	08004023 	.word	0x08004023
 8003e84:	08004035 	.word	0x08004035
 8003e88:	08003de5 	.word	0x08003de5
 8003e8c:	0800402f 	.word	0x0800402f
 8003e90:	08003de5 	.word	0x08003de5
 8003e94:	08003de5 	.word	0x08003de5
 8003e98:	08003de5 	.word	0x08003de5
 8003e9c:	08003fe7 	.word	0x08003fe7
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d19f      	bne.n	8003de4 <HAL_UART_Init+0x90>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003ea4:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003ea8:	f000 80bb 	beq.w	8004022 <HAL_UART_Init+0x2ce>
        pclk = HAL_RCC_GetPCLK2Freq();
 8003eac:	f7fe fcd8 	bl	8002860 <HAL_RCC_GetPCLK2Freq>
    if (pclk != 0U)
 8003eb0:	2800      	cmp	r0, #0
 8003eb2:	d063      	beq.n	8003f7c <HAL_UART_Init+0x228>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8003eb4:	6863      	ldr	r3, [r4, #4]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003eb6:	f64f 72ef 	movw	r2, #65519	; 0xffef
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8003eba:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8003ebe:	fbb0 f0f3 	udiv	r0, r0, r3
 8003ec2:	b280      	uxth	r0, r0
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003ec4:	f1a0 0310 	sub.w	r3, r0, #16
 8003ec8:	4293      	cmp	r3, r2
 8003eca:	d88b      	bhi.n	8003de4 <HAL_UART_Init+0x90>
        huart->Instance->BRR = usartdiv;
 8003ecc:	6822      	ldr	r2, [r4, #0]
  huart->RxISR = NULL;
 8003ece:	2300      	movs	r3, #0
        huart->Instance->BRR = usartdiv;
 8003ed0:	60d0      	str	r0, [r2, #12]
  huart->TxISR = NULL;
 8003ed2:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003ed6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d155      	bne.n	8003f88 <HAL_UART_Init+0x234>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003edc:	6823      	ldr	r3, [r4, #0]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003ede:	2100      	movs	r1, #0
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003ee0:	685a      	ldr	r2, [r3, #4]
 8003ee2:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003ee6:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8003ee8:	689a      	ldr	r2, [r3, #8]
 8003eea:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003eee:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8003ef0:	681a      	ldr	r2, [r3, #0]
 8003ef2:	f042 0201 	orr.w	r2, r2, #1
 8003ef6:	601a      	str	r2, [r3, #0]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003ef8:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
  tickstart = HAL_GetTick();
 8003efc:	f7fc ffe2 	bl	8000ec4 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003f00:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8003f02:	4606      	mov	r6, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003f04:	681a      	ldr	r2, [r3, #0]
 8003f06:	0710      	lsls	r0, r2, #28
 8003f08:	d408      	bmi.n	8003f1c <HAL_UART_Init+0x1c8>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003f0a:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
 8003f0c:	2220      	movs	r2, #32
  return HAL_OK;
 8003f0e:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
 8003f10:	67a2      	str	r2, [r4, #120]	; 0x78
  __HAL_UNLOCK(huart);
 8003f12:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
 8003f16:	67e2      	str	r2, [r4, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003f18:	6623      	str	r3, [r4, #96]	; 0x60
}
 8003f1a:	bd70      	pop	{r4, r5, r6, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8003f1c:	69dd      	ldr	r5, [r3, #28]
 8003f1e:	f415 1500 	ands.w	r5, r5, #2097152	; 0x200000
 8003f22:	d1f2      	bne.n	8003f0a <HAL_UART_Init+0x1b6>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003f24:	f7fc ffce 	bl	8000ec4 <HAL_GetTick>
 8003f28:	1b80      	subs	r0, r0, r6
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003f2a:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003f2c:	f1b0 7f00 	cmp.w	r0, #33554432	; 0x2000000
 8003f30:	f080 80b2 	bcs.w	8004098 <HAL_UART_Init+0x344>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8003f34:	681a      	ldr	r2, [r3, #0]
 8003f36:	0751      	lsls	r1, r2, #29
 8003f38:	d5f0      	bpl.n	8003f1c <HAL_UART_Init+0x1c8>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8003f3a:	69da      	ldr	r2, [r3, #28]
 8003f3c:	0512      	lsls	r2, r2, #20
 8003f3e:	d5ed      	bpl.n	8003f1c <HAL_UART_Init+0x1c8>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003f40:	f44f 6100 	mov.w	r1, #2048	; 0x800
          huart->gState = HAL_UART_STATE_READY;
 8003f44:	2220      	movs	r2, #32
      return HAL_TIMEOUT;
 8003f46:	2003      	movs	r0, #3
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003f48:	6219      	str	r1, [r3, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003f4a:	6819      	ldr	r1, [r3, #0]
 8003f4c:	f421 71d0 	bic.w	r1, r1, #416	; 0x1a0
 8003f50:	6019      	str	r1, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003f52:	6899      	ldr	r1, [r3, #8]
 8003f54:	f021 0101 	bic.w	r1, r1, #1
 8003f58:	6099      	str	r1, [r3, #8]
          huart->gState = HAL_UART_STATE_READY;
 8003f5a:	67a2      	str	r2, [r4, #120]	; 0x78
          __HAL_UNLOCK(huart);
 8003f5c:	f884 5074 	strb.w	r5, [r4, #116]	; 0x74
          huart->RxState = HAL_UART_STATE_READY;
 8003f60:	67e2      	str	r2, [r4, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8003f62:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
}
 8003f66:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	f47f af3b 	bne.w	8003de4 <HAL_UART_Init+0x90>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003f6e:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003f72:	d061      	beq.n	8004038 <HAL_UART_Init+0x2e4>
        pclk = HAL_RCC_GetPCLK1Freq();
 8003f74:	f7fe fc64 	bl	8002840 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8003f78:	2800      	cmp	r0, #0
 8003f7a:	d19b      	bne.n	8003eb4 <HAL_UART_Init+0x160>
  huart->RxISR = NULL;
 8003f7c:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8003f7e:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003f82:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003f84:	2b00      	cmp	r3, #0
 8003f86:	d0a9      	beq.n	8003edc <HAL_UART_Init+0x188>
    UART_AdvFeatureConfig(huart);
 8003f88:	4620      	mov	r0, r4
 8003f8a:	f7ff fe8b 	bl	8003ca4 <UART_AdvFeatureConfig>
 8003f8e:	e7a5      	b.n	8003edc <HAL_UART_Init+0x188>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003f90:	4b3c      	ldr	r3, [pc, #240]	; (8004084 <HAL_UART_Init+0x330>)
 8003f92:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003f96:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8003f9a:	2b10      	cmp	r3, #16
 8003f9c:	d00f      	beq.n	8003fbe <HAL_UART_Init+0x26a>
 8003f9e:	d9e3      	bls.n	8003f68 <HAL_UART_Init+0x214>
 8003fa0:	2b20      	cmp	r3, #32
 8003fa2:	d13b      	bne.n	800401c <HAL_UART_Init+0x2c8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003fa4:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003fa8:	d044      	beq.n	8004034 <HAL_UART_Init+0x2e0>
        pclk = (uint32_t) HSI_VALUE;
 8003faa:	4839      	ldr	r0, [pc, #228]	; (8004090 <HAL_UART_Init+0x33c>)
 8003fac:	e782      	b.n	8003eb4 <HAL_UART_Init+0x160>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003fae:	4b35      	ldr	r3, [pc, #212]	; (8004084 <HAL_UART_Init+0x330>)
 8003fb0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003fb4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003fb8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003fbc:	d108      	bne.n	8003fd0 <HAL_UART_Init+0x27c>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003fbe:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003fc2:	d034      	beq.n	800402e <HAL_UART_Init+0x2da>
        pclk = HAL_RCC_GetSysClockFreq();
 8003fc4:	f7fe fc08 	bl	80027d8 <HAL_RCC_GetSysClockFreq>
 8003fc8:	e772      	b.n	8003eb0 <HAL_UART_Init+0x15c>
        pclk = (uint32_t) LSE_VALUE;
 8003fca:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8003fce:	e771      	b.n	8003eb4 <HAL_UART_Init+0x160>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003fd0:	d9ca      	bls.n	8003f68 <HAL_UART_Init+0x214>
 8003fd2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003fd6:	d0e5      	beq.n	8003fa4 <HAL_UART_Init+0x250>
 8003fd8:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8003fdc:	f47f af02 	bne.w	8003de4 <HAL_UART_Init+0x90>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003fe0:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003fe4:	d1f1      	bne.n	8003fca <HAL_UART_Init+0x276>
 8003fe6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8003fea:	6862      	ldr	r2, [r4, #4]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003fec:	f64f 71ef 	movw	r1, #65519	; 0xffef
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8003ff0:	eb03 0352 	add.w	r3, r3, r2, lsr #1
 8003ff4:	fbb3 f3f2 	udiv	r3, r3, r2
 8003ff8:	b29a      	uxth	r2, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003ffa:	f1a2 0010 	sub.w	r0, r2, #16
 8003ffe:	4288      	cmp	r0, r1
 8004000:	f63f aef0 	bhi.w	8003de4 <HAL_UART_Init+0x90>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004004:	f023 030f 	bic.w	r3, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8004008:	f3c2 0242 	ubfx	r2, r2, #1, #3
        huart->Instance->BRR = brrtemp;
 800400c:	6820      	ldr	r0, [r4, #0]
  huart->RxISR = NULL;
 800400e:	2100      	movs	r1, #0
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004010:	b29b      	uxth	r3, r3
        huart->Instance->BRR = brrtemp;
 8004012:	4313      	orrs	r3, r2
 8004014:	60c3      	str	r3, [r0, #12]
  huart->TxISR = NULL;
 8004016:	e9c4 1119 	strd	r1, r1, [r4, #100]	; 0x64
 800401a:	e75c      	b.n	8003ed6 <HAL_UART_Init+0x182>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800401c:	2b30      	cmp	r3, #48	; 0x30
 800401e:	d0df      	beq.n	8003fe0 <HAL_UART_Init+0x28c>
 8004020:	e6e0      	b.n	8003de4 <HAL_UART_Init+0x90>
        pclk = HAL_RCC_GetPCLK2Freq();
 8004022:	f7fe fc1d 	bl	8002860 <HAL_RCC_GetPCLK2Freq>
    if (pclk != 0U)
 8004026:	2800      	cmp	r0, #0
 8004028:	d0a8      	beq.n	8003f7c <HAL_UART_Init+0x228>
 800402a:	0043      	lsls	r3, r0, #1
 800402c:	e7dd      	b.n	8003fea <HAL_UART_Init+0x296>
        pclk = HAL_RCC_GetSysClockFreq();
 800402e:	f7fe fbd3 	bl	80027d8 <HAL_RCC_GetSysClockFreq>
 8004032:	e7f8      	b.n	8004026 <HAL_UART_Init+0x2d2>
    switch (clocksource)
 8004034:	4b17      	ldr	r3, [pc, #92]	; (8004094 <HAL_UART_Init+0x340>)
 8004036:	e7d8      	b.n	8003fea <HAL_UART_Init+0x296>
        pclk = HAL_RCC_GetPCLK1Freq();
 8004038:	f7fe fc02 	bl	8002840 <HAL_RCC_GetPCLK1Freq>
 800403c:	e7f3      	b.n	8004026 <HAL_UART_Init+0x2d2>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800403e:	4b11      	ldr	r3, [pc, #68]	; (8004084 <HAL_UART_Init+0x330>)
 8004040:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004044:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8004048:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800404c:	d0b7      	beq.n	8003fbe <HAL_UART_Init+0x26a>
 800404e:	d98b      	bls.n	8003f68 <HAL_UART_Init+0x214>
 8004050:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004054:	d0a6      	beq.n	8003fa4 <HAL_UART_Init+0x250>
 8004056:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 800405a:	d0c1      	beq.n	8003fe0 <HAL_UART_Init+0x28c>
 800405c:	e6c2      	b.n	8003de4 <HAL_UART_Init+0x90>
 800405e:	bf00      	nop
 8004060:	efff69f3 	.word	0xefff69f3
 8004064:	40011000 	.word	0x40011000
 8004068:	40004400 	.word	0x40004400
 800406c:	40004800 	.word	0x40004800
 8004070:	40004c00 	.word	0x40004c00
 8004074:	40005000 	.word	0x40005000
 8004078:	40011400 	.word	0x40011400
 800407c:	40007800 	.word	0x40007800
 8004080:	40007c00 	.word	0x40007c00
 8004084:	40023800 	.word	0x40023800
 8004088:	0801b324 	.word	0x0801b324
 800408c:	0801b328 	.word	0x0801b328
 8004090:	00f42400 	.word	0x00f42400
 8004094:	01e84800 	.word	0x01e84800
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8004098:	681a      	ldr	r2, [r3, #0]
        huart->gState = HAL_UART_STATE_READY;
 800409a:	2120      	movs	r1, #32
      return HAL_TIMEOUT;
 800409c:	2003      	movs	r0, #3
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800409e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80040a2:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80040a4:	689a      	ldr	r2, [r3, #8]
 80040a6:	f022 0201 	bic.w	r2, r2, #1
 80040aa:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 80040ac:	67a1      	str	r1, [r4, #120]	; 0x78
        __HAL_UNLOCK(huart);
 80040ae:	f884 5074 	strb.w	r5, [r4, #116]	; 0x74
        huart->RxState = HAL_UART_STATE_READY;
 80040b2:	67e1      	str	r1, [r4, #124]	; 0x7c
}
 80040b4:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 80040b6:	4b13      	ldr	r3, [pc, #76]	; (8004104 <HAL_UART_Init+0x3b0>)
 80040b8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80040bc:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80040c0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80040c4:	f43f af7b 	beq.w	8003fbe <HAL_UART_Init+0x26a>
 80040c8:	f67f aeea 	bls.w	8003ea0 <HAL_UART_Init+0x14c>
 80040cc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80040d0:	f43f af68 	beq.w	8003fa4 <HAL_UART_Init+0x250>
 80040d4:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80040d8:	d082      	beq.n	8003fe0 <HAL_UART_Init+0x28c>
 80040da:	e683      	b.n	8003de4 <HAL_UART_Init+0x90>
 80040dc:	4b09      	ldr	r3, [pc, #36]	; (8004104 <HAL_UART_Init+0x3b0>)
 80040de:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80040e2:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 80040e6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80040ea:	f43f af68 	beq.w	8003fbe <HAL_UART_Init+0x26a>
 80040ee:	f67f af3b 	bls.w	8003f68 <HAL_UART_Init+0x214>
 80040f2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80040f6:	f43f af55 	beq.w	8003fa4 <HAL_UART_Init+0x250>
 80040fa:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80040fe:	f43f af6f 	beq.w	8003fe0 <HAL_UART_Init+0x28c>
 8004102:	e66f      	b.n	8003de4 <HAL_UART_Init+0x90>
 8004104:	40023800 	.word	0x40023800

08004108 <Init_LCD_GPIO>:
//=============================================================================
void Init_LCD_GPIO(void)
{
	  GPIO_InitTypeDef GPIO_InitStruct;

	  __HAL_RCC_CRC_CLK_ENABLE();
 8004108:	4b37      	ldr	r3, [pc, #220]	; (80041e8 <Init_LCD_GPIO+0xe0>)
	  __HAL_RCC_GPIOE_CLK_ENABLE();
	  __HAL_RCC_GPIOF_CLK_ENABLE();
	  __HAL_RCC_GPIOG_CLK_ENABLE();


	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 800410a:	2200      	movs	r2, #0
 800410c:	f44f 4178 	mov.w	r1, #63488	; 0xf800
{
 8004110:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	  __HAL_RCC_CRC_CLK_ENABLE();
 8004114:	6b1d      	ldr	r5, [r3, #48]	; 0x30
{
 8004116:	b08b      	sub	sp, #44	; 0x2c
	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 8004118:	4c34      	ldr	r4, [pc, #208]	; (80041ec <Init_LCD_GPIO+0xe4>)
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);

	  GPIO_InitStruct.Pin = GCMD;
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800411a:	4616      	mov	r6, r2
	  __HAL_RCC_CRC_CLK_ENABLE();
 800411c:	f445 5580 	orr.w	r5, r5, #4096	; 0x1000
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
 8004120:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 80041f0 <Init_LCD_GPIO+0xe8>
	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 8004124:	4620      	mov	r0, r4
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);
 8004126:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 80041f4 <Init_LCD_GPIO+0xec>
	  __HAL_RCC_CRC_CLK_ENABLE();
 800412a:	631d      	str	r5, [r3, #48]	; 0x30
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800412c:	2701      	movs	r7, #1
	  __HAL_RCC_CRC_CLK_ENABLE();
 800412e:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 8004130:	f405 5580 	and.w	r5, r5, #4096	; 0x1000
 8004134:	9501      	str	r5, [sp, #4]
 8004136:	9d01      	ldr	r5, [sp, #4]
	  __HAL_RCC_GPIOE_CLK_ENABLE();
 8004138:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 800413a:	f045 0510 	orr.w	r5, r5, #16
 800413e:	631d      	str	r5, [r3, #48]	; 0x30
 8004140:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 8004142:	f005 0510 	and.w	r5, r5, #16
 8004146:	9502      	str	r5, [sp, #8]
 8004148:	9d02      	ldr	r5, [sp, #8]
	  __HAL_RCC_GPIOF_CLK_ENABLE();
 800414a:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 800414c:	f045 0520 	orr.w	r5, r5, #32
 8004150:	631d      	str	r5, [r3, #48]	; 0x30
 8004152:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 8004154:	f005 0520 	and.w	r5, r5, #32
 8004158:	9503      	str	r5, [sp, #12]
 800415a:	9d03      	ldr	r5, [sp, #12]
	  __HAL_RCC_GPIOG_CLK_ENABLE();
 800415c:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 800415e:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 8004162:	631d      	str	r5, [r3, #48]	; 0x30
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004164:	2503      	movs	r5, #3
	  __HAL_RCC_GPIOG_CLK_ENABLE();
 8004166:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004168:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800416c:	9304      	str	r3, [sp, #16]
 800416e:	9b04      	ldr	r3, [sp, #16]
	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 8004170:	f7fd fcc2 	bl	8001af8 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
 8004174:	4648      	mov	r0, r9
 8004176:	4632      	mov	r2, r6
 8004178:	21ff      	movs	r1, #255	; 0xff
 800417a:	f7fd fcbd 	bl	8001af8 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);
 800417e:	4632      	mov	r2, r6
 8004180:	4640      	mov	r0, r8
 8004182:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8004186:	f7fd fcb7 	bl	8001af8 <HAL_GPIO_WritePin>
	  GPIO_InitStruct.Pin = GCMD;
 800418a:	f44f 4378 	mov.w	r3, #63488	; 0xf800
	  HAL_GPIO_Init(GDISP_CMD_PORT, &GPIO_InitStruct);
 800418e:	4620      	mov	r0, r4
 8004190:	a905      	add	r1, sp, #20
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004192:	e9cd 3705 	strd	r3, r7, [sp, #20]
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004196:	e9cd 6507 	strd	r6, r5, [sp, #28]
	  HAL_GPIO_Init(GDISP_CMD_PORT, &GPIO_InitStruct);
 800419a:	f7fd fba7 	bl	80018ec <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_LO;
 800419e:	23ff      	movs	r3, #255	; 0xff
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
	  HAL_GPIO_Init(GDISP_DATA_LO_PORT, &GPIO_InitStruct);
 80041a0:	4648      	mov	r0, r9
 80041a2:	a905      	add	r1, sp, #20
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80041a4:	9508      	str	r5, [sp, #32]
	  GPIO_InitStruct.Pin = GDATA_LO;
 80041a6:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80041a8:	e9cd 7606 	strd	r7, r6, [sp, #24]
	  HAL_GPIO_Init(GDISP_DATA_LO_PORT, &GPIO_InitStruct);
 80041ac:	f7fd fb9e 	bl	80018ec <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_HI;
 80041b0:	f44f 437f 	mov.w	r3, #65280	; 0xff00
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
	  HAL_GPIO_Init(GDISP_DATA_HI_PORT, &GPIO_InitStruct);
 80041b4:	a905      	add	r1, sp, #20
 80041b6:	4640      	mov	r0, r8
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80041b8:	9508      	str	r5, [sp, #32]

	  SET_CS; SET_WR; SET_RD; SET_DC; SET_RST;
 80041ba:	f44f 5500 	mov.w	r5, #8192	; 0x2000
	  GPIO_InitStruct.Pin = GDATA_HI;
 80041be:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80041c0:	e9cd 7606 	strd	r7, r6, [sp, #24]
	  HAL_GPIO_Init(GDISP_DATA_HI_PORT, &GPIO_InitStruct);
 80041c4:	f7fd fb92 	bl	80018ec <HAL_GPIO_Init>
	  SET_CS; SET_WR; SET_RD; SET_DC; SET_RST;
 80041c8:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80041cc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80041d0:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80041d4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80041d8:	61a5      	str	r5, [r4, #24]
 80041da:	61a0      	str	r0, [r4, #24]
 80041dc:	61a1      	str	r1, [r4, #24]
 80041de:	61a2      	str	r2, [r4, #24]
 80041e0:	61a3      	str	r3, [r4, #24]
}
 80041e2:	b00b      	add	sp, #44	; 0x2c
 80041e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80041e8:	40023800 	.word	0x40023800
 80041ec:	40021400 	.word	0x40021400
 80041f0:	40021800 	.word	0x40021800
 80041f4:	40021000 	.word	0x40021000

080041f8 <SSD1963_WriteCommand>:
//=============================================================================
// Write command to display
//=============================================================================
void SSD1963_WriteCommand(uint16_t Data)
{
	uint16_t _Data=~Data;
 80041f8:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80041fa:	4911      	ldr	r1, [pc, #68]	; (8004240 <SSD1963_WriteCommand+0x48>)

	CLR_CS;
 80041fc:	4a11      	ldr	r2, [pc, #68]	; (8004244 <SSD1963_WriteCommand+0x4c>)
	CLR_DC;
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80041fe:	041b      	lsls	r3, r3, #16
{
 8004200:	b470      	push	{r4, r5, r6}
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004202:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004206:	b2c4      	uxtb	r4, r0
 8004208:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800420c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004210:	618d      	str	r5, [r1, #24]
	CLR_CS;
 8004212:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004216:	4323      	orrs	r3, r4
 8004218:	4c0b      	ldr	r4, [pc, #44]	; (8004248 <SSD1963_WriteCommand+0x50>)
	CLR_CS;
 800421a:	6195      	str	r5, [r2, #24]
	CLR_DC;
 800421c:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
 8004220:	6195      	str	r5, [r2, #24]
	writeStrobe;
 8004222:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004226:	61a3      	str	r3, [r4, #24]
	writeStrobe;
 8004228:	f44f 6400 	mov.w	r4, #2048	; 0x800
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800422c:	694e      	ldr	r6, [r1, #20]
	SET_CS;
 800422e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004232:	4330      	orrs	r0, r6
 8004234:	6148      	str	r0, [r1, #20]
	writeStrobe;
 8004236:	6195      	str	r5, [r2, #24]
 8004238:	6194      	str	r4, [r2, #24]
	SET_CS;
 800423a:	6193      	str	r3, [r2, #24]
}
 800423c:	bc70      	pop	{r4, r5, r6}
 800423e:	4770      	bx	lr
 8004240:	40021000 	.word	0x40021000
 8004244:	40021400 	.word	0x40021400
 8004248:	40021800 	.word	0x40021800

0800424c <SSD1963_WriteData>:
// Write data to display
//=============================================================================

void SSD1963_WriteData(uint16_t Data)
{
	uint16_t _Data=~Data;
 800424c:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800424e:	4911      	ldr	r1, [pc, #68]	; (8004294 <SSD1963_WriteData+0x48>)

	CLR_CS;
 8004250:	4a11      	ldr	r2, [pc, #68]	; (8004298 <SSD1963_WriteData+0x4c>)
	SET_DC;
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004252:	041b      	lsls	r3, r3, #16
{
 8004254:	b470      	push	{r4, r5, r6}
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004256:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800425a:	b2c4      	uxtb	r4, r0
 800425c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004260:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004264:	618d      	str	r5, [r1, #24]
	CLR_CS;
 8004266:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800426a:	4323      	orrs	r3, r4
 800426c:	4c0b      	ldr	r4, [pc, #44]	; (800429c <SSD1963_WriteData+0x50>)
	CLR_CS;
 800426e:	6195      	str	r5, [r2, #24]
	SET_DC;
 8004270:	f44f 4500 	mov.w	r5, #32768	; 0x8000
 8004274:	6195      	str	r5, [r2, #24]
	writeStrobe;
 8004276:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800427a:	61a3      	str	r3, [r4, #24]
	writeStrobe;
 800427c:	f44f 6400 	mov.w	r4, #2048	; 0x800
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004280:	694e      	ldr	r6, [r1, #20]
	SET_CS;
 8004282:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004286:	4330      	orrs	r0, r6
 8004288:	6148      	str	r0, [r1, #20]
	writeStrobe;
 800428a:	6195      	str	r5, [r2, #24]
 800428c:	6194      	str	r4, [r2, #24]
	SET_CS;
 800428e:	6193      	str	r3, [r2, #24]

}
 8004290:	bc70      	pop	{r4, r5, r6}
 8004292:	4770      	bx	lr
 8004294:	40021000 	.word	0x40021000
 8004298:	40021400 	.word	0x40021400
 800429c:	40021800 	.word	0x40021800

080042a0 <SSD1963_WriteDataMultiple>:
//=============================================================================
// Write multiple data to display
//=============================================================================
void SSD1963_WriteDataMultiple(uint16_t * Data, int NumItems)
{
  while (NumItems)
 80042a0:	b399      	cbz	r1, 800430a <SSD1963_WriteDataMultiple+0x6a>
 80042a2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
	writeStrobe;
 80042a6:	f04f 6c00 	mov.w	ip, #134217728	; 0x8000000
{
 80042aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80042ae:	4d17      	ldr	r5, [pc, #92]	; (800430c <SSD1963_WriteDataMultiple+0x6c>)
 80042b0:	f04f 4a7f 	mov.w	sl, #4278190080	; 0xff000000
	CLR_CS;
 80042b4:	4c16      	ldr	r4, [pc, #88]	; (8004310 <SSD1963_WriteDataMultiple+0x70>)
 80042b6:	f04f 5900 	mov.w	r9, #536870912	; 0x20000000
	SET_DC;
 80042ba:	f44f 4800 	mov.w	r8, #32768	; 0x8000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80042be:	f8df e054 	ldr.w	lr, [pc, #84]	; 8004314 <SSD1963_WriteDataMultiple+0x74>
	writeStrobe;
 80042c2:	f44f 6700 	mov.w	r7, #2048	; 0x800
	SET_CS;
 80042c6:	f44f 5600 	mov.w	r6, #8192	; 0x2000
  {
	  SSD1963_WriteData(*Data);
 80042ca:	f830 3b02 	ldrh.w	r3, [r0], #2
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80042ce:	f8c5 a018 	str.w	sl, [r5, #24]
	uint16_t _Data=~Data;
 80042d2:	43da      	mvns	r2, r3
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80042d4:	fa5f fb83 	uxtb.w	fp, r3
	CLR_CS;
 80042d8:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80042dc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80042e0:	0412      	lsls	r2, r2, #16
	SET_DC;
 80042e2:	f8c4 8018 	str.w	r8, [r4, #24]
  while (NumItems)
 80042e6:	4288      	cmp	r0, r1
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80042e8:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 80042ec:	ea42 020b 	orr.w	r2, r2, fp
 80042f0:	f8ce 2018 	str.w	r2, [lr, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80042f4:	696a      	ldr	r2, [r5, #20]
 80042f6:	ea43 0302 	orr.w	r3, r3, r2
 80042fa:	616b      	str	r3, [r5, #20]
	writeStrobe;
 80042fc:	f8c4 c018 	str.w	ip, [r4, #24]
 8004300:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004302:	61a6      	str	r6, [r4, #24]
  while (NumItems)
 8004304:	d1e1      	bne.n	80042ca <SSD1963_WriteDataMultiple+0x2a>
	  Data++;
	  NumItems--;
  }
}
 8004306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800430a:	4770      	bx	lr
 800430c:	40021000 	.word	0x40021000
 8004310:	40021400 	.word	0x40021400
 8004314:	40021800 	.word	0x40021800

08004318 <SSD1963_Init>:
//=============================================================================
// Display initialization
//=============================================================================

void SSD1963_Init (void)
{
 8004318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	CLR_RST;  // reset
 800431c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004320:	4cbd      	ldr	r4, [pc, #756]	; (8004618 <SSD1963_Init+0x300>)
{
 8004322:	b083      	sub	sp, #12
	HAL_Delay(500);
 8004324:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
	CLR_RST;  // reset
 8004328:	61a3      	str	r3, [r4, #24]
	SET_RST;
 800432a:	f44f 4680 	mov.w	r6, #16384	; 0x4000
	HAL_Delay(500);
 800432e:	f7fc fdcf 	bl	8000ed0 <HAL_Delay>
	CLR_CS;
 8004332:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
	writeStrobe;
 8004336:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
	HAL_Delay(100);
 800433a:	2064      	movs	r0, #100	; 0x64
	CLR_CS;
 800433c:	9201      	str	r2, [sp, #4]
	CLR_DC;
 800433e:	f04f 4a00 	mov.w	sl, #2147483648	; 0x80000000
	writeStrobe;
 8004342:	9300      	str	r3, [sp, #0]
 8004344:	f44f 6700 	mov.w	r7, #2048	; 0x800
	SET_RST;
 8004348:	61a6      	str	r6, [r4, #24]
	SET_CS;
 800434a:	f44f 5600 	mov.w	r6, #8192	; 0x2000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800434e:	4db3      	ldr	r5, [pc, #716]	; (800461c <SSD1963_Init+0x304>)
	HAL_Delay(100);
 8004350:	f7fc fdbe 	bl	8000ed0 <HAL_Delay>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004354:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004358:	f8df 82d4 	ldr.w	r8, [pc, #724]	; 8004630 <SSD1963_Init+0x318>
	CLR_CS;
 800435c:	9a01      	ldr	r2, [sp, #4]

	SSD1963_WriteCommand(SSD1963_SOFT_RESET);
	HAL_Delay(10);
 800435e:	200a      	movs	r0, #10
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004360:	61ab      	str	r3, [r5, #24]
	SET_DC;
 8004362:	f44f 4900 	mov.w	r9, #32768	; 0x8000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004366:	4bae      	ldr	r3, [pc, #696]	; (8004620 <SSD1963_Init+0x308>)
	CLR_CS;
 8004368:	61a2      	str	r2, [r4, #24]
 800436a:	9201      	str	r2, [sp, #4]
	CLR_DC;
 800436c:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004370:	f8c8 3018 	str.w	r3, [r8, #24]
	writeStrobe;
 8004374:	9b00      	ldr	r3, [sp, #0]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004376:	f8d5 c014 	ldr.w	ip, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800437a:	f8df b2b8 	ldr.w	fp, [pc, #696]	; 8004634 <SSD1963_Init+0x31c>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800437e:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8004382:	61a3      	str	r3, [r4, #24]
 8004384:	9300      	str	r3, [sp, #0]
 8004386:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004388:	61a6      	str	r6, [r4, #24]
	HAL_Delay(10);
 800438a:	f7fc fda1 	bl	8000ed0 <HAL_Delay>
	CLR_CS;
 800438e:	9a01      	ldr	r2, [sp, #4]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004390:	f8df e2a4 	ldr.w	lr, [pc, #676]	; 8004638 <SSD1963_Init+0x320>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004394:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004398:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800439c:	f8df c29c 	ldr.w	ip, [pc, #668]	; 800463c <SSD1963_Init+0x324>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80043a0:	61ab      	str	r3, [r5, #24]
	SSD1963_WriteData(4);  	// dummy

	SSD1963_WriteCommand(SSD1963_SET_PLL);
	SSD1963_WriteData(0x0001);

	HAL_Delay(100);
 80043a2:	2064      	movs	r0, #100	; 0x64
	CLR_CS;
 80043a4:	61a2      	str	r2, [r4, #24]
	writeStrobe;
 80043a6:	9b00      	ldr	r3, [sp, #0]
	CLR_DC;
 80043a8:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043ac:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80043b0:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80043b4:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80043b8:	61a3      	str	r3, [r4, #24]
 80043ba:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80043bc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80043be:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80043c0:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80043c2:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043c6:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80043ca:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80043ce:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80043d2:	61a3      	str	r3, [r4, #24]
 80043d4:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80043d6:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80043d8:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80043da:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80043dc:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043e0:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80043e4:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80043e8:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80043ec:	61a3      	str	r3, [r4, #24]
 80043ee:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80043f0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80043f2:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043f4:	498b      	ldr	r1, [pc, #556]	; (8004624 <SSD1963_Init+0x30c>)
	CLR_CS;
 80043f6:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80043f8:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043fc:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004400:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004404:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004408:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800440c:	61a3      	str	r3, [r4, #24]
 800440e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004410:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004412:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004414:	4984      	ldr	r1, [pc, #528]	; (8004628 <SSD1963_Init+0x310>)
	CLR_CS;
 8004416:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 8004418:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800441c:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004420:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004424:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004428:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800442c:	61a3      	str	r3, [r4, #24]
 800442e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004430:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004432:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004434:	61a2      	str	r2, [r4, #24]
 8004436:	9201      	str	r2, [sp, #4]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004438:	4a79      	ldr	r2, [pc, #484]	; (8004620 <SSD1963_Init+0x308>)
	SET_DC;
 800443a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800443e:	f8c8 2018 	str.w	r2, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004442:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004446:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800444a:	61a3      	str	r3, [r4, #24]
 800444c:	9300      	str	r3, [sp, #0]
 800444e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004450:	61a6      	str	r6, [r4, #24]
	HAL_Delay(100);
 8004452:	f7fc fd3d 	bl	8000ed0 <HAL_Delay>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004456:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	CLR_CS;
 800445a:	9a01      	ldr	r2, [sp, #4]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800445c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004460:	61ab      	str	r3, [r5, #24]
	SSD1963_WriteData(0x0000);
	SSD1963_WriteData(0x0000);

	SSD1963_WriteCommand(SSD1963_SET_DISPLAY_ON);//SET display on

	HAL_Delay(10);
 8004462:	200a      	movs	r0, #10
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004464:	4b70      	ldr	r3, [pc, #448]	; (8004628 <SSD1963_Init+0x310>)
	CLR_CS;
 8004466:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 8004468:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800446c:	f8c8 3018 	str.w	r3, [r8, #24]
	writeStrobe;
 8004470:	9b00      	ldr	r3, [sp, #0]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004472:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004476:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800447a:	61a3      	str	r3, [r4, #24]
 800447c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800447e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004480:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004482:	496a      	ldr	r1, [pc, #424]	; (800462c <SSD1963_Init+0x314>)
	CLR_CS;
 8004484:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004486:	f8df c1b8 	ldr.w	ip, [pc, #440]	; 8004640 <SSD1963_Init+0x328>
	SET_DC;
 800448a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800448e:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004492:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004496:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800449a:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800449e:	61a3      	str	r3, [r4, #24]
 80044a0:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80044a2:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80044a4:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80044a6:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80044a8:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044ac:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044b0:	f8df c190 	ldr.w	ip, [pc, #400]	; 8004644 <SSD1963_Init+0x32c>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80044b4:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80044b8:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80044bc:	61a3      	str	r3, [r4, #24]
 80044be:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80044c0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80044c2:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80044c4:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80044c6:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044ca:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80044ce:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80044d2:	f8c5 c014 	str.w	ip, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044d6:	f44f 0c7f 	mov.w	ip, #16711680	; 0xff0000
	writeStrobe;
 80044da:	61a3      	str	r3, [r4, #24]
 80044dc:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80044de:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80044e0:	61a9      	str	r1, [r5, #24]
 80044e2:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 80044e6:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80044e8:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044ec:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80044f0:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80044f4:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80044f8:	61a3      	str	r3, [r4, #24]
 80044fa:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80044fc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80044fe:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004500:	4947      	ldr	r1, [pc, #284]	; (8004620 <SSD1963_Init+0x308>)
	CLR_CS;
 8004502:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004504:	f8df c140 	ldr.w	ip, [pc, #320]	; 8004648 <SSD1963_Init+0x330>
	SET_DC;
 8004508:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800450c:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004510:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004514:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004518:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800451c:	61a3      	str	r3, [r4, #24]
 800451e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004520:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004522:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004524:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004526:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800452a:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800452e:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004532:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8004536:	61a3      	str	r3, [r4, #24]
 8004538:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800453a:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800453c:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800453e:	4938      	ldr	r1, [pc, #224]	; (8004620 <SSD1963_Init+0x308>)
	CLR_CS;
 8004540:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004542:	f8df c108 	ldr.w	ip, [pc, #264]	; 800464c <SSD1963_Init+0x334>
	SET_DC;
 8004546:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800454a:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800454e:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004552:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004556:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800455a:	61a3      	str	r3, [r4, #24]
 800455c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800455e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004560:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004562:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004564:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004568:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800456c:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004570:	f8c5 c014 	str.w	ip, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004574:	f44f 0c7f 	mov.w	ip, #16711680	; 0xff0000
	writeStrobe;
 8004578:	61a3      	str	r3, [r4, #24]
 800457a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800457c:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800457e:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004580:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8004584:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004586:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800458a:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800458e:	f8df c0c0 	ldr.w	ip, [pc, #192]	; 8004650 <SSD1963_Init+0x338>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004592:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004596:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800459a:	61a3      	str	r3, [r4, #24]
 800459c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800459e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045a0:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80045a2:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80045a4:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045a8:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80045ac:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80045b0:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80045b4:	61a3      	str	r3, [r4, #24]
 80045b6:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80045b8:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045ba:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045bc:	491b      	ldr	r1, [pc, #108]	; (800462c <SSD1963_Init+0x314>)
	CLR_CS;
 80045be:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045c0:	f8df c090 	ldr.w	ip, [pc, #144]	; 8004654 <SSD1963_Init+0x33c>
	SET_DC;
 80045c4:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045c8:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045cc:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80045d0:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80045d4:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80045d8:	61a3      	str	r3, [r4, #24]
 80045da:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80045dc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045de:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80045e0:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80045e2:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045e6:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80045ea:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045ee:	f8df c068 	ldr.w	ip, [pc, #104]	; 8004658 <SSD1963_Init+0x340>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80045f2:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80045f6:	61a3      	str	r3, [r4, #24]
 80045f8:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80045fa:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045fc:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045fe:	4908      	ldr	r1, [pc, #32]	; (8004620 <SSD1963_Init+0x308>)
	CLR_CS;
 8004600:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004602:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004606:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800460a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800460e:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004612:	f8c5 e014 	str.w	lr, [r5, #20]
 8004616:	e021      	b.n	800465c <SSD1963_Init+0x344>
 8004618:	40021400 	.word	0x40021400
 800461c:	40021000 	.word	0x40021000
 8004620:	00fe0001 	.word	0x00fe0001
 8004624:	00fb0004 	.word	0x00fb0004
 8004628:	001f00e0 	.word	0x001f00e0
 800462c:	00fc0003 	.word	0x00fc0003
 8004630:	40021800 	.word	0x40021800
 8004634:	00fd0002 	.word	0x00fd0002
 8004638:	001d00e2 	.word	0x001d00e2
 800463c:	00e2001d 	.word	0x00e2001d
 8004640:	004f00b0 	.word	0x004f00b0
 8004644:	00df0020 	.word	0x00df0020
 8004648:	002000df 	.word	0x002000df
 800464c:	00f0000f 	.word	0x00f0000f
 8004650:	000f00f0 	.word	0x000f00f0
 8004654:	001900e6 	.word	0x001900e6
 8004658:	008a0075 	.word	0x008a0075
	writeStrobe;
 800465c:	61a3      	str	r3, [r4, #24]
 800465e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004660:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004662:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004664:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004666:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800466a:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800466e:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004672:	f8df c344 	ldr.w	ip, [pc, #836]	; 80049b8 <SSD1963_Init+0x6a0>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004676:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800467a:	61a3      	str	r3, [r4, #24]
 800467c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800467e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004680:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004682:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004684:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004688:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800468c:	f8df c32c 	ldr.w	ip, [pc, #812]	; 80049bc <SSD1963_Init+0x6a4>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004690:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004694:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8004698:	61a3      	str	r3, [r4, #24]
 800469a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800469c:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800469e:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80046a0:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80046a2:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046a6:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046aa:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046ae:	f8df c310 	ldr.w	ip, [pc, #784]	; 80049c0 <SSD1963_Init+0x6a8>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046b2:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80046b6:	61a3      	str	r3, [r4, #24]
 80046b8:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80046ba:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80046bc:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80046be:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80046c0:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046c4:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046c8:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80046cc:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80046d0:	61a3      	str	r3, [r4, #24]
 80046d2:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80046d4:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80046d6:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80046d8:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80046da:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046de:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046e2:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046e6:	f8df c2dc 	ldr.w	ip, [pc, #732]	; 80049c4 <SSD1963_Init+0x6ac>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046ea:	f8c5 e014 	str.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046ee:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
	writeStrobe;
 80046f2:	61a3      	str	r3, [r4, #24]
 80046f4:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80046f6:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80046f8:	61a9      	str	r1, [r5, #24]
 80046fa:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 80046fe:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004700:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004704:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004708:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800470c:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8004710:	61a3      	str	r3, [r4, #24]
 8004712:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004714:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004716:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004718:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800471a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800471e:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004722:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004726:	f8df c2a0 	ldr.w	ip, [pc, #672]	; 80049c8 <SSD1963_Init+0x6b0>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800472a:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800472e:	61a3      	str	r3, [r4, #24]
 8004730:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004732:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004734:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004736:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004738:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800473c:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004740:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004744:	f8df e284 	ldr.w	lr, [pc, #644]	; 80049cc <SSD1963_Init+0x6b4>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004748:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800474c:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8004750:	61a3      	str	r3, [r4, #24]
 8004752:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004754:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004756:	61a9      	str	r1, [r5, #24]
 8004758:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 800475c:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800475e:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004762:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004766:	f8d5 b014 	ldr.w	fp, [r5, #20]
 800476a:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800476e:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8004772:	61a3      	str	r3, [r4, #24]
 8004774:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004776:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004778:	61a9      	str	r1, [r5, #24]
 800477a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 800477e:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004780:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004784:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004788:	f8d5 b014 	ldr.w	fp, [r5, #20]
 800478c:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004790:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8004794:	61a3      	str	r3, [r4, #24]
 8004796:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004798:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800479a:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800479c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 80047a0:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80047a2:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047a6:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80047aa:	f8d5 b014 	ldr.w	fp, [r5, #20]
 80047ae:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 80047b2:	61a3      	str	r3, [r4, #24]
 80047b4:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80047b6:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80047b8:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80047ba:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80047bc:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047c0:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80047c4:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047c8:	f8df c204 	ldr.w	ip, [pc, #516]	; 80049d0 <SSD1963_Init+0x6b8>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80047cc:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 80047d0:	61a3      	str	r3, [r4, #24]
 80047d2:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80047d4:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80047d6:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047d8:	4973      	ldr	r1, [pc, #460]	; (80049a8 <SSD1963_Init+0x690>)
	CLR_CS;
 80047da:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80047dc:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047e0:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80047e4:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80047e8:	f8d5 b014 	ldr.w	fp, [r5, #20]
 80047ec:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 80047f0:	61a3      	str	r3, [r4, #24]
 80047f2:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80047f4:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80047f6:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80047f8:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80047fa:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047fe:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004802:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004806:	f8df e1cc 	ldr.w	lr, [pc, #460]	; 80049d4 <SSD1963_Init+0x6bc>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800480a:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800480e:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8004812:	61a3      	str	r3, [r4, #24]
 8004814:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004816:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004818:	61a9      	str	r1, [r5, #24]
 800481a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 800481e:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004820:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004824:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004828:	f8d5 b014 	ldr.w	fp, [r5, #20]
 800482c:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 8004830:	61a3      	str	r3, [r4, #24]
 8004832:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004834:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004836:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004838:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800483a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800483e:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004842:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004846:	f8df c190 	ldr.w	ip, [pc, #400]	; 80049d8 <SSD1963_Init+0x6c0>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800484a:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 800484e:	61a3      	str	r3, [r4, #24]
 8004850:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004852:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004854:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004856:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004858:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800485c:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004860:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004864:	f8c5 e014 	str.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004868:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
	writeStrobe;
 800486c:	61a3      	str	r3, [r4, #24]
 800486e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004870:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004872:	61a9      	str	r1, [r5, #24]
 8004874:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8004878:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800487a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800487e:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004882:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004886:	f8c5 e014 	str.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800488a:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
	writeStrobe;
 800488e:	61a3      	str	r3, [r4, #24]
 8004890:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004892:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004894:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004896:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 800489a:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800489c:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048a0:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80048a4:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80048a8:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80048ac:	61a3      	str	r3, [r4, #24]
 80048ae:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80048b0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048b2:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80048b4:	61a2      	str	r2, [r4, #24]
 80048b6:	9201      	str	r2, [sp, #4]
	CLR_DC;
 80048b8:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048bc:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80048c0:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80048c4:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80048c8:	61a3      	str	r3, [r4, #24]
 80048ca:	9300      	str	r3, [sp, #0]
 80048cc:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80048ce:	61a6      	str	r6, [r4, #24]
	HAL_Delay(10);
 80048d0:	f7fc fafe 	bl	8000ed0 <HAL_Delay>
	CLR_CS;
 80048d4:	9a01      	ldr	r2, [sp, #4]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048d6:	4835      	ldr	r0, [pc, #212]	; (80049ac <SSD1963_Init+0x694>)
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048d8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048dc:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048e0:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 80049dc <SSD1963_Init+0x6c4>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048e4:	61ab      	str	r3, [r5, #24]
	CLR_CS;
 80048e6:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80048e8:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048ec:	f8c8 0018 	str.w	r0, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80048f0:	6968      	ldr	r0, [r5, #20]
	writeStrobe;
 80048f2:	9b00      	ldr	r3, [sp, #0]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80048f4:	6168      	str	r0, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048f6:	482e      	ldr	r0, [pc, #184]	; (80049b0 <SSD1963_Init+0x698>)
	writeStrobe;
 80048f8:	61a3      	str	r3, [r4, #24]
 80048fa:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80048fc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048fe:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004900:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004902:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004906:	f8c8 0018 	str.w	r0, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800490a:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800490e:	4829      	ldr	r0, [pc, #164]	; (80049b4 <SSD1963_Init+0x69c>)
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004910:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8004914:	61a3      	str	r3, [r4, #24]
 8004916:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004918:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800491a:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800491c:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800491e:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004922:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004926:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800492a:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800492e:	61a3      	str	r3, [r4, #24]
 8004930:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004932:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004934:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004936:	491c      	ldr	r1, [pc, #112]	; (80049a8 <SSD1963_Init+0x690>)
	CLR_CS;
 8004938:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800493a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800493e:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004942:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004946:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800494a:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800494e:	61a3      	str	r3, [r4, #24]
 8004950:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004952:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004954:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004956:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004958:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800495c:	f8c8 0018 	str.w	r0, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004960:	6968      	ldr	r0, [r5, #20]
 8004962:	6168      	str	r0, [r5, #20]
	writeStrobe;
 8004964:	61a3      	str	r3, [r4, #24]
 8004966:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004968:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800496a:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800496c:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
	CLR_CS;
 8004970:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004972:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004976:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800497a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800497e:	6968      	ldr	r0, [r5, #20]
 8004980:	6168      	str	r0, [r5, #20]
	writeStrobe;
 8004982:	61a3      	str	r3, [r4, #24]
 8004984:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004986:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004988:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800498a:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800498c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
	SET_DC;
 8004990:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004994:	f8c8 2018 	str.w	r2, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004998:	696a      	ldr	r2, [r5, #20]
 800499a:	616a      	str	r2, [r5, #20]
	writeStrobe;
 800499c:	61a3      	str	r3, [r4, #24]
 800499e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80049a0:	61a6      	str	r6, [r4, #24]
	SSD1963_WriteData(0x0040); 					// brightness level 0x00 - 0xFF
	SSD1963_WriteData(0x0000); 					// minimum brightness level =  0x00 - 0xFF
	SSD1963_WriteData(0x0000);					// brightness prescalar 0x0 - 0xF


}
 80049a2:	b003      	add	sp, #12
 80049a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80049a8:	00fe0001 	.word	0x00fe0001
 80049ac:	004100be 	.word	0x004100be
 80049b0:	00fb0004 	.word	0x00fb0004
 80049b4:	00bf0040 	.word	0x00bf0040
 80049b8:	001200ed 	.word	0x001200ed
 80049bc:	004b00b4 	.word	0x004b00b4
 80049c0:	00eb0014 	.word	0x00eb0014
 80049c4:	00d3002c 	.word	0x00d3002c
 80049c8:	004900b6 	.word	0x004900b6
 80049cc:	00e1001e 	.word	0x00e1001e
 80049d0:	00f3000c 	.word	0x00f3000c
 80049d4:	00f90006 	.word	0x00f90006
 80049d8:	00d60029 	.word	0x00d60029
 80049dc:	003f00c0 	.word	0x003f00c0

080049e0 <Init_TOUCH_GPIO>:

I2C_HandleTypeDef hi2c;


void Init_TOUCH_GPIO(I2C_HandleTypeDef i2c_handle)
{
 80049e0:	b084      	sub	sp, #16
 80049e2:	b508      	push	{r3, lr}
 80049e4:	f10d 0c08 	add.w	ip, sp, #8
 80049e8:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	hi2c=i2c_handle;
 80049ec:	224c      	movs	r2, #76	; 0x4c
 80049ee:	4661      	mov	r1, ip
 80049f0:	4803      	ldr	r0, [pc, #12]	; (8004a00 <Init_TOUCH_GPIO+0x20>)
 80049f2:	f016 f82e 	bl	801aa52 <memcpy>
}
 80049f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80049fa:	b004      	add	sp, #16
 80049fc:	4770      	bx	lr
 80049fe:	bf00      	nop
 8004a00:	2001974c 	.word	0x2001974c

08004a04 <STMPE610_Init>:

	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
}

void STMPE610_Init(void)
{
 8004a04:	b570      	push	{r4, r5, r6, lr}
 8004a06:	b084      	sub	sp, #16
	txbuf[0]=reg;
 8004a08:	f240 2303 	movw	r3, #515	; 0x203
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a0c:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004a10:	4d81      	ldr	r5, [pc, #516]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a12:	ac04      	add	r4, sp, #16
 8004a14:	f824 3d04 	strh.w	r3, [r4, #-4]!
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a18:	9600      	str	r6, [sp, #0]
 8004a1a:	2302      	movs	r3, #2
 8004a1c:	4622      	mov	r2, r4
 8004a1e:	2188      	movs	r1, #136	; 0x88
 8004a20:	4628      	mov	r0, r5
 8004a22:	f7fd f973 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004a26:	2800      	cmp	r0, #0
 8004a28:	d1f6      	bne.n	8004a18 <STMPE610_Init+0x14>
	STMPE610_Write(STMPE610_REG_SYS_CTRL1, 0x02);		// Software chip reset
	HAL_Delay(10);
 8004a2a:	200a      	movs	r0, #10
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a2c:	f44f 5640 	mov.w	r6, #12288	; 0x3000
	HAL_Delay(10);
 8004a30:	f7fc fa4e 	bl	8000ed0 <HAL_Delay>
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a34:	4d78      	ldr	r5, [pc, #480]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a36:	f240 4304 	movw	r3, #1028	; 0x404
 8004a3a:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a3e:	9600      	str	r6, [sp, #0]
 8004a40:	2302      	movs	r3, #2
 8004a42:	4622      	mov	r2, r4
 8004a44:	2188      	movs	r1, #136	; 0x88
 8004a46:	4628      	mov	r0, r5
 8004a48:	f7fd f960 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004a4c:	2800      	cmp	r0, #0
 8004a4e:	d1f6      	bne.n	8004a3e <STMPE610_Init+0x3a>
	txbuf[0]=reg;
 8004a50:	f240 330a 	movw	r3, #778	; 0x30a
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a54:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004a58:	4d6f      	ldr	r5, [pc, #444]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a5a:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a5e:	9600      	str	r6, [sp, #0]
 8004a60:	2302      	movs	r3, #2
 8004a62:	4622      	mov	r2, r4
 8004a64:	2188      	movs	r1, #136	; 0x88
 8004a66:	4628      	mov	r0, r5
 8004a68:	f7fd f950 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004a6c:	2800      	cmp	r0, #0
 8004a6e:	d1f6      	bne.n	8004a5e <STMPE610_Init+0x5a>
	txbuf[0]=reg;
 8004a70:	f644 0320 	movw	r3, #18464	; 0x4820
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a74:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004a78:	4d67      	ldr	r5, [pc, #412]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a7a:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a7e:	9600      	str	r6, [sp, #0]
 8004a80:	2302      	movs	r3, #2
 8004a82:	4622      	mov	r2, r4
 8004a84:	2188      	movs	r1, #136	; 0x88
 8004a86:	4628      	mov	r0, r5
 8004a88:	f7fd f940 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004a8c:	2800      	cmp	r0, #0
 8004a8e:	d1f6      	bne.n	8004a7e <STMPE610_Init+0x7a>
	
	STMPE610_Write(STMPE610_REG_SYS_CTRL2, 0x04);		// Temperature sensor clock off, GPIO clock off, touch clock on, ADC clock on
	STMPE610_Write(STMPE610_REG_INT_EN, 0x03);			// Interrupt on INT pin when there is a sample or a touch transition.
	//STMPE610_write_reg(STMPE610_REG_INT_EN, 0x00);						// Don't Interrupt on INT pin
	STMPE610_Write(STMPE610_REG_ADC_CTRL1, 0x48);		// ADC conversion time = 80 clock ticks, 12-bit ADC, internal voltage refernce
	HAL_Delay(2);
 8004a90:	2002      	movs	r0, #2
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a92:	f44f 5640 	mov.w	r6, #12288	; 0x3000
	HAL_Delay(2);
 8004a96:	f7fc fa1b 	bl	8000ed0 <HAL_Delay>
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a9a:	4d5f      	ldr	r5, [pc, #380]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a9c:	f240 1321 	movw	r3, #289	; 0x121
 8004aa0:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004aa4:	9600      	str	r6, [sp, #0]
 8004aa6:	2302      	movs	r3, #2
 8004aa8:	4622      	mov	r2, r4
 8004aaa:	2188      	movs	r1, #136	; 0x88
 8004aac:	4628      	mov	r0, r5
 8004aae:	f7fd f92d 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004ab2:	2800      	cmp	r0, #0
 8004ab4:	d1f6      	bne.n	8004aa4 <STMPE610_Init+0xa0>
	txbuf[0]=reg;
 8004ab6:	2317      	movs	r3, #23
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ab8:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004abc:	4d56      	ldr	r5, [pc, #344]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004abe:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ac2:	9600      	str	r6, [sp, #0]
 8004ac4:	2302      	movs	r3, #2
 8004ac6:	4622      	mov	r2, r4
 8004ac8:	2188      	movs	r1, #136	; 0x88
 8004aca:	4628      	mov	r0, r5
 8004acc:	f7fd f91e 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004ad0:	2800      	cmp	r0, #0
 8004ad2:	d1f6      	bne.n	8004ac2 <STMPE610_Init+0xbe>
	txbuf[0]=reg;
 8004ad4:	f24a 3341 	movw	r3, #41793	; 0xa341
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ad8:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004adc:	4d4e      	ldr	r5, [pc, #312]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004ade:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ae2:	9600      	str	r6, [sp, #0]
 8004ae4:	2302      	movs	r3, #2
 8004ae6:	4622      	mov	r2, r4
 8004ae8:	2188      	movs	r1, #136	; 0x88
 8004aea:	4628      	mov	r0, r5
 8004aec:	f7fd f90e 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004af0:	2800      	cmp	r0, #0
 8004af2:	d1f6      	bne.n	8004ae2 <STMPE610_Init+0xde>
	txbuf[0]=reg;
 8004af4:	f44f 73a5 	mov.w	r3, #330	; 0x14a
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004af8:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004afc:	4d46      	ldr	r5, [pc, #280]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004afe:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b02:	9600      	str	r6, [sp, #0]
 8004b04:	2302      	movs	r3, #2
 8004b06:	4622      	mov	r2, r4
 8004b08:	2188      	movs	r1, #136	; 0x88
 8004b0a:	4628      	mov	r0, r5
 8004b0c:	f7fd f8fe 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b10:	2800      	cmp	r0, #0
 8004b12:	d1f6      	bne.n	8004b02 <STMPE610_Init+0xfe>
	txbuf[0]=reg;
 8004b14:	f240 134b 	movw	r3, #331	; 0x14b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b18:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b1c:	4d3e      	ldr	r5, [pc, #248]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b1e:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b22:	9600      	str	r6, [sp, #0]
 8004b24:	2302      	movs	r3, #2
 8004b26:	4622      	mov	r2, r4
 8004b28:	2188      	movs	r1, #136	; 0x88
 8004b2a:	4628      	mov	r0, r5
 8004b2c:	f7fd f8ee 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b30:	2800      	cmp	r0, #0
 8004b32:	d1f6      	bne.n	8004b22 <STMPE610_Init+0x11e>
	txbuf[0]=reg;
 8004b34:	234b      	movs	r3, #75	; 0x4b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b36:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b3a:	4d37      	ldr	r5, [pc, #220]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b3c:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b40:	9600      	str	r6, [sp, #0]
 8004b42:	2302      	movs	r3, #2
 8004b44:	4622      	mov	r2, r4
 8004b46:	2188      	movs	r1, #136	; 0x88
 8004b48:	4628      	mov	r0, r5
 8004b4a:	f7fd f8df 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b4e:	2800      	cmp	r0, #0
 8004b50:	d1f6      	bne.n	8004b40 <STMPE610_Init+0x13c>
	txbuf[0]=reg;
 8004b52:	f240 7356 	movw	r3, #1878	; 0x756
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b56:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b5a:	4d2f      	ldr	r5, [pc, #188]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b5c:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b60:	9600      	str	r6, [sp, #0]
 8004b62:	2302      	movs	r3, #2
 8004b64:	4622      	mov	r2, r4
 8004b66:	2188      	movs	r1, #136	; 0x88
 8004b68:	4628      	mov	r0, r5
 8004b6a:	f7fd f8cf 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b6e:	2800      	cmp	r0, #0
 8004b70:	d1f6      	bne.n	8004b60 <STMPE610_Init+0x15c>
	txbuf[0]=reg;
 8004b72:	f44f 73ac 	mov.w	r3, #344	; 0x158
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b76:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b7a:	4d27      	ldr	r5, [pc, #156]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b7c:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b80:	9600      	str	r6, [sp, #0]
 8004b82:	2302      	movs	r3, #2
 8004b84:	4622      	mov	r2, r4
 8004b86:	2188      	movs	r1, #136	; 0x88
 8004b88:	4628      	mov	r0, r5
 8004b8a:	f7fd f8bf 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b8e:	2800      	cmp	r0, #0
 8004b90:	d1f6      	bne.n	8004b80 <STMPE610_Init+0x17c>
	txbuf[0]=reg;
 8004b92:	f44f 5341 	mov.w	r3, #12352	; 0x3040
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b96:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b9a:	4d1f      	ldr	r5, [pc, #124]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b9c:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ba0:	9600      	str	r6, [sp, #0]
 8004ba2:	2302      	movs	r3, #2
 8004ba4:	4622      	mov	r2, r4
 8004ba6:	2188      	movs	r1, #136	; 0x88
 8004ba8:	4628      	mov	r0, r5
 8004baa:	f7fd f8af 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004bae:	2800      	cmp	r0, #0
 8004bb0:	d1f6      	bne.n	8004ba0 <STMPE610_Init+0x19c>
	txbuf[0]=reg;
 8004bb2:	f44f 5345 	mov.w	r3, #12608	; 0x3140
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004bb6:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004bba:	4d17      	ldr	r5, [pc, #92]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004bbc:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004bc0:	9600      	str	r6, [sp, #0]
 8004bc2:	2302      	movs	r3, #2
 8004bc4:	4622      	mov	r2, r4
 8004bc6:	2188      	movs	r1, #136	; 0x88
 8004bc8:	4628      	mov	r0, r5
 8004bca:	f7fd f89f 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004bce:	2800      	cmp	r0, #0
 8004bd0:	d1f6      	bne.n	8004bc0 <STMPE610_Init+0x1bc>
	txbuf[0]=reg;
 8004bd2:	f64f 730b 	movw	r3, #65291	; 0xff0b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004bd6:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004bda:	4d0f      	ldr	r5, [pc, #60]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004bdc:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004be0:	9600      	str	r6, [sp, #0]
 8004be2:	2302      	movs	r3, #2
 8004be4:	4622      	mov	r2, r4
 8004be6:	2188      	movs	r1, #136	; 0x88
 8004be8:	4628      	mov	r0, r5
 8004bea:	f7fd f88f 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004bee:	2800      	cmp	r0, #0
 8004bf0:	d1f6      	bne.n	8004be0 <STMPE610_Init+0x1dc>
	txbuf[0]=reg;
 8004bf2:	f240 1309 	movw	r3, #265	; 0x109
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004bf6:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004bfa:	4d07      	ldr	r5, [pc, #28]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004bfc:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004c00:	9600      	str	r6, [sp, #0]
 8004c02:	2302      	movs	r3, #2
 8004c04:	4622      	mov	r2, r4
 8004c06:	2188      	movs	r1, #136	; 0x88
 8004c08:	4628      	mov	r0, r5
 8004c0a:	f7fd f87f 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004c0e:	2800      	cmp	r0, #0
 8004c10:	d1f6      	bne.n	8004c00 <STMPE610_Init+0x1fc>
	//STMPE610_write_reg(STMPE610_REG_TSC_CTRL, 0x32);						// X&Y, 16 reading window
	//STMPE610_write_reg(TMPE610_REG_TSC_CTRL, 0x33);						// X&Y, 16 reading window, TSC enable

	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);		// Clear all interrupts
	STMPE610_Write(STMPE610_REG_INT_CTRL, 0x01);		// Level interrupt, enable interrupts
}
 8004c12:	b004      	add	sp, #16
 8004c14:	bd70      	pop	{r4, r5, r6, pc}
 8004c16:	bf00      	nop
 8004c18:	2001974c 	.word	0x2001974c

08004c1c <STMPE610_read_xyz>:

uint8_t STMPE610_read_xyz(void)
{
 8004c1c:	b570      	push	{r4, r5, r6, lr}
 8004c1e:	224b      	movs	r2, #75	; 0x4b
 8004c20:	b086      	sub	sp, #24
	rxbuf[0] = 0;
 8004c22:	2300      	movs	r3, #0
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004c24:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004c28:	4c80      	ldr	r4, [pc, #512]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004c2a:	f88d 200d 	strb.w	r2, [sp, #13]
	rxbuf[0] = 0;
 8004c2e:	f88d 3014 	strb.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004c32:	9500      	str	r5, [sp, #0]
 8004c34:	2301      	movs	r3, #1
 8004c36:	f10d 020d 	add.w	r2, sp, #13
 8004c3a:	2188      	movs	r1, #136	; 0x88
 8004c3c:	4620      	mov	r0, r4
 8004c3e:	f7fd f865 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004c42:	2800      	cmp	r0, #0
 8004c44:	d1f5      	bne.n	8004c32 <STMPE610_read_xyz+0x16>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 8004c46:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004c4a:	4c78      	ldr	r4, [pc, #480]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004c4c:	9500      	str	r5, [sp, #0]
 8004c4e:	2301      	movs	r3, #1
 8004c50:	aa05      	add	r2, sp, #20
 8004c52:	2188      	movs	r1, #136	; 0x88
 8004c54:	4620      	mov	r0, r4
 8004c56:	f7fd f929 	bl	8001eac <HAL_I2C_Master_Receive>
 8004c5a:	2800      	cmp	r0, #0
 8004c5c:	d1f6      	bne.n	8004c4c <STMPE610_read_xyz+0x30>
	return rxbuf[0];
 8004c5e:	f89d 3014 	ldrb.w	r3, [sp, #20]
	uint8_t	status;

	// Is there something in the fifo
	status = STMPE610_ReadByte(STMPE610_REG_FIFO_STA);
	if ((status & 0x20))
 8004c62:	f013 0320 	ands.w	r3, r3, #32
 8004c66:	d03c      	beq.n	8004ce2 <STMPE610_read_xyz+0xc6>
	txbuf[0]=reg;
 8004c68:	f64f 730b 	movw	r3, #65291	; 0xff0b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004c6c:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004c70:	4c6e      	ldr	r4, [pc, #440]	; (8004e2c <STMPE610_read_xyz+0x210>)
	txbuf[0]=reg;
 8004c72:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004c76:	9500      	str	r5, [sp, #0]
 8004c78:	2302      	movs	r3, #2
 8004c7a:	aa05      	add	r2, sp, #20
 8004c7c:	2188      	movs	r1, #136	; 0x88
 8004c7e:	4620      	mov	r0, r4
 8004c80:	f7fd f844 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004c84:	2800      	cmp	r0, #0
 8004c86:	d1f6      	bne.n	8004c76 <STMPE610_read_xyz+0x5a>
 8004c88:	2340      	movs	r3, #64	; 0x40
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004c8a:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004c8e:	4c67      	ldr	r4, [pc, #412]	; (8004e2c <STMPE610_read_xyz+0x210>)
	rxbuf[0] = 0;
 8004c90:	f88d 0010 	strb.w	r0, [sp, #16]
 8004c94:	f88d 3014 	strb.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004c98:	9500      	str	r5, [sp, #0]
 8004c9a:	2301      	movs	r3, #1
 8004c9c:	aa05      	add	r2, sp, #20
 8004c9e:	2188      	movs	r1, #136	; 0x88
 8004ca0:	4620      	mov	r0, r4
 8004ca2:	f7fd f833 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004ca6:	2800      	cmp	r0, #0
 8004ca8:	d1f6      	bne.n	8004c98 <STMPE610_read_xyz+0x7c>
 8004caa:	ac04      	add	r4, sp, #16
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 8004cac:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004cb0:	4d5e      	ldr	r5, [pc, #376]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004cb2:	9600      	str	r6, [sp, #0]
 8004cb4:	2301      	movs	r3, #1
 8004cb6:	4622      	mov	r2, r4
 8004cb8:	2188      	movs	r1, #136	; 0x88
 8004cba:	4628      	mov	r0, r5
 8004cbc:	f7fd f8f6 	bl	8001eac <HAL_I2C_Master_Receive>
 8004cc0:	2800      	cmp	r0, #0
 8004cc2:	d1f6      	bne.n	8004cb2 <STMPE610_read_xyz+0x96>
	{
		STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);
		if (!(STMPE610_ReadByte(STMPE610_REG_TSC_CTRL) & 0x80))
 8004cc4:	f99d 3010 	ldrsb.w	r3, [sp, #16]
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	f2c0 80ab 	blt.w	8004e24 <STMPE610_read_xyz+0x208>
		{
			x=0;
 8004cce:	4c58      	ldr	r4, [pc, #352]	; (8004e30 <STMPE610_read_xyz+0x214>)
			y=0;
			z=0;
	//		UART8_printf("true");
			return TRUE;
 8004cd0:	2301      	movs	r3, #1
			y=0;
 8004cd2:	4958      	ldr	r1, [pc, #352]	; (8004e34 <STMPE610_read_xyz+0x218>)
			z=0;
 8004cd4:	4a58      	ldr	r2, [pc, #352]	; (8004e38 <STMPE610_read_xyz+0x21c>)
			x=0;
 8004cd6:	8020      	strh	r0, [r4, #0]
			y=0;
 8004cd8:	8008      	strh	r0, [r1, #0]
			z=0;
 8004cda:	8010      	strh	r0, [r2, #0]
	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x00);		// FIFO reset disable
	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);


	return TRUE;
}
 8004cdc:	4618      	mov	r0, r3
 8004cde:	b006      	add	sp, #24
 8004ce0:	bd70      	pop	{r4, r5, r6, pc}
 8004ce2:	224d      	movs	r2, #77	; 0x4d
 8004ce4:	ac04      	add	r4, sp, #16
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8004ce6:	f242 7610 	movw	r6, #10000	; 0x2710
 8004cea:	4d50      	ldr	r5, [pc, #320]	; (8004e2c <STMPE610_read_xyz+0x210>)
	rxbuf[0] = 0;
 8004cec:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004cf0:	f88d 2010 	strb.w	r2, [sp, #16]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8004cf4:	9600      	str	r6, [sp, #0]
 8004cf6:	2301      	movs	r3, #1
 8004cf8:	4622      	mov	r2, r4
 8004cfa:	2188      	movs	r1, #136	; 0x88
 8004cfc:	4628      	mov	r0, r5
 8004cfe:	f7fd f805 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004d02:	2800      	cmp	r0, #0
 8004d04:	d1f6      	bne.n	8004cf4 <STMPE610_read_xyz+0xd8>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 2, 10000) != HAL_OK);
 8004d06:	f242 7510 	movw	r5, #10000	; 0x2710
 8004d0a:	4c48      	ldr	r4, [pc, #288]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004d0c:	9500      	str	r5, [sp, #0]
 8004d0e:	2302      	movs	r3, #2
 8004d10:	aa05      	add	r2, sp, #20
 8004d12:	2188      	movs	r1, #136	; 0x88
 8004d14:	4620      	mov	r0, r4
 8004d16:	f7fd f8c9 	bl	8001eac <HAL_I2C_Master_Receive>
 8004d1a:	2800      	cmp	r0, #0
 8004d1c:	d1f6      	bne.n	8004d0c <STMPE610_read_xyz+0xf0>
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8004d1e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8004d22:	214f      	movs	r1, #79	; 0x4f
 8004d24:	f89d 3015 	ldrb.w	r3, [sp, #21]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8004d28:	f242 7510 	movw	r5, #10000	; 0x2710
 8004d2c:	4c3f      	ldr	r4, [pc, #252]	; (8004e2c <STMPE610_read_xyz+0x210>)
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8004d2e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	x = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_X);
 8004d32:	4a3f      	ldr	r2, [pc, #252]	; (8004e30 <STMPE610_read_xyz+0x214>)
	rxbuf[0] = 0;
 8004d34:	f8ad 0014 	strh.w	r0, [sp, #20]
 8004d38:	f88d 100f 	strb.w	r1, [sp, #15]
	x = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_X);
 8004d3c:	8013      	strh	r3, [r2, #0]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8004d3e:	9500      	str	r5, [sp, #0]
 8004d40:	2301      	movs	r3, #1
 8004d42:	f10d 020f 	add.w	r2, sp, #15
 8004d46:	2188      	movs	r1, #136	; 0x88
 8004d48:	4620      	mov	r0, r4
 8004d4a:	f7fc ffdf 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004d4e:	2800      	cmp	r0, #0
 8004d50:	d1f5      	bne.n	8004d3e <STMPE610_read_xyz+0x122>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 2, 10000) != HAL_OK);
 8004d52:	f242 7510 	movw	r5, #10000	; 0x2710
 8004d56:	4c35      	ldr	r4, [pc, #212]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004d58:	9500      	str	r5, [sp, #0]
 8004d5a:	2302      	movs	r3, #2
 8004d5c:	aa05      	add	r2, sp, #20
 8004d5e:	2188      	movs	r1, #136	; 0x88
 8004d60:	4620      	mov	r0, r4
 8004d62:	f7fd f8a3 	bl	8001eac <HAL_I2C_Master_Receive>
 8004d66:	2800      	cmp	r0, #0
 8004d68:	d1f6      	bne.n	8004d58 <STMPE610_read_xyz+0x13c>
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8004d6a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8004d6e:	2151      	movs	r1, #81	; 0x51
 8004d70:	f89d 3015 	ldrb.w	r3, [sp, #21]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004d74:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004d78:	4c2c      	ldr	r4, [pc, #176]	; (8004e2c <STMPE610_read_xyz+0x210>)
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8004d7a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	y = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_Y);
 8004d7e:	4a2d      	ldr	r2, [pc, #180]	; (8004e34 <STMPE610_read_xyz+0x218>)
	rxbuf[0] = 0;
 8004d80:	f88d 0014 	strb.w	r0, [sp, #20]
 8004d84:	f88d 100e 	strb.w	r1, [sp, #14]
	y = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_Y);
 8004d88:	8013      	strh	r3, [r2, #0]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004d8a:	9500      	str	r5, [sp, #0]
 8004d8c:	2301      	movs	r3, #1
 8004d8e:	f10d 020e 	add.w	r2, sp, #14
 8004d92:	2188      	movs	r1, #136	; 0x88
 8004d94:	4620      	mov	r0, r4
 8004d96:	f7fc ffb9 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004d9a:	2800      	cmp	r0, #0
 8004d9c:	d1f5      	bne.n	8004d8a <STMPE610_read_xyz+0x16e>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 8004d9e:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004da2:	4c22      	ldr	r4, [pc, #136]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004da4:	9500      	str	r5, [sp, #0]
 8004da6:	2301      	movs	r3, #1
 8004da8:	aa05      	add	r2, sp, #20
 8004daa:	2188      	movs	r1, #136	; 0x88
 8004dac:	4620      	mov	r0, r4
 8004dae:	f7fd f87d 	bl	8001eac <HAL_I2C_Master_Receive>
 8004db2:	2800      	cmp	r0, #0
 8004db4:	d1f6      	bne.n	8004da4 <STMPE610_read_xyz+0x188>
	return rxbuf[0];
 8004db6:	f89d 1014 	ldrb.w	r1, [sp, #20]
	txbuf[0]=reg;
 8004dba:	f240 134b 	movw	r3, #331	; 0x14b
	z = STMPE610_ReadByte(STMPE610_REG_TSC_DATA_Z);
 8004dbe:	4a1e      	ldr	r2, [pc, #120]	; (8004e38 <STMPE610_read_xyz+0x21c>)
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004dc0:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004dc4:	4c19      	ldr	r4, [pc, #100]	; (8004e2c <STMPE610_read_xyz+0x210>)
	z = STMPE610_ReadByte(STMPE610_REG_TSC_DATA_Z);
 8004dc6:	8011      	strh	r1, [r2, #0]
	txbuf[0]=reg;
 8004dc8:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004dcc:	9500      	str	r5, [sp, #0]
 8004dce:	2302      	movs	r3, #2
 8004dd0:	aa05      	add	r2, sp, #20
 8004dd2:	2188      	movs	r1, #136	; 0x88
 8004dd4:	4620      	mov	r0, r4
 8004dd6:	f7fc ff99 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004dda:	2800      	cmp	r0, #0
 8004ddc:	d1f6      	bne.n	8004dcc <STMPE610_read_xyz+0x1b0>
	txbuf[0]=reg;
 8004dde:	234b      	movs	r3, #75	; 0x4b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004de0:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004de4:	4c11      	ldr	r4, [pc, #68]	; (8004e2c <STMPE610_read_xyz+0x210>)
	txbuf[0]=reg;
 8004de6:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004dea:	9500      	str	r5, [sp, #0]
 8004dec:	2302      	movs	r3, #2
 8004dee:	aa05      	add	r2, sp, #20
 8004df0:	2188      	movs	r1, #136	; 0x88
 8004df2:	4620      	mov	r0, r4
 8004df4:	f7fc ff8a 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004df8:	2800      	cmp	r0, #0
 8004dfa:	d1f6      	bne.n	8004dea <STMPE610_read_xyz+0x1ce>
	txbuf[0]=reg;
 8004dfc:	f64f 730b 	movw	r3, #65291	; 0xff0b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004e00:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004e04:	4c09      	ldr	r4, [pc, #36]	; (8004e2c <STMPE610_read_xyz+0x210>)
	txbuf[0]=reg;
 8004e06:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004e0a:	9500      	str	r5, [sp, #0]
 8004e0c:	2302      	movs	r3, #2
 8004e0e:	aa05      	add	r2, sp, #20
 8004e10:	2188      	movs	r1, #136	; 0x88
 8004e12:	4620      	mov	r0, r4
 8004e14:	f7fc ff7a 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004e18:	2800      	cmp	r0, #0
 8004e1a:	d1f6      	bne.n	8004e0a <STMPE610_read_xyz+0x1ee>
	return TRUE;
 8004e1c:	2301      	movs	r3, #1
}
 8004e1e:	4618      	mov	r0, r3
 8004e20:	b006      	add	sp, #24
 8004e22:	bd70      	pop	{r4, r5, r6, pc}
		return FALSE;
 8004e24:	4603      	mov	r3, r0
}
 8004e26:	4618      	mov	r0, r3
 8004e28:	b006      	add	sp, #24
 8004e2a:	bd70      	pop	{r4, r5, r6, pc}
 8004e2c:	2001974c 	.word	0x2001974c
 8004e30:	20000418 	.word	0x20000418
 8004e34:	2000041a 	.word	0x2000041a
 8004e38:	2000041c 	.word	0x2000041c
 8004e3c:	00000000 	.word	0x00000000

08004e40 <STMPE610_GetX_TOUCH>:

uint16_t STMPE610_GetX_TOUCH(void)
{
 8004e40:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)x;
 8004e42:	4b13      	ldr	r3, [pc, #76]	; (8004e90 <STMPE610_GetX_TOUCH+0x50>)
	pom=480.0*(pom-GUI_TOUCH_AD_LEFT)/(GUI_TOUCH_AD_RIGHT-GUI_TOUCH_AD_LEFT);
 8004e44:	ed9f 7a13 	vldr	s14, [pc, #76]	; 8004e94 <STMPE610_GetX_TOUCH+0x54>
	pom=(float)x;
 8004e48:	881b      	ldrh	r3, [r3, #0]
 8004e4a:	ee07 3a90 	vmov	s15, r3
 8004e4e:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=480.0*(pom-GUI_TOUCH_AD_LEFT)/(GUI_TOUCH_AD_RIGHT-GUI_TOUCH_AD_LEFT);
 8004e52:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004e56:	ee17 0a90 	vmov	r0, s15
 8004e5a:	f7fb fb95 	bl	8000588 <__aeabi_f2d>
 8004e5e:	2200      	movs	r2, #0
 8004e60:	4b0d      	ldr	r3, [pc, #52]	; (8004e98 <STMPE610_GetX_TOUCH+0x58>)
 8004e62:	f7fb fbe9 	bl	8000638 <__aeabi_dmul>
 8004e66:	a308      	add	r3, pc, #32	; (adr r3, 8004e88 <STMPE610_GetX_TOUCH+0x48>)
 8004e68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e6c:	f7fb fd0e 	bl	800088c <__aeabi_ddiv>
 8004e70:	f7fb fe1c 	bl	8000aac <__aeabi_d2f>
	return (uint16_t)pom;
 8004e74:	ee07 0a90 	vmov	s15, r0
 8004e78:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 8004e7c:	ee17 3a90 	vmov	r3, s15
 8004e80:	b298      	uxth	r0, r3
 8004e82:	bd08      	pop	{r3, pc}
 8004e84:	f3af 8000 	nop.w
 8004e88:	00000000 	.word	0x00000000
 8004e8c:	40adc400 	.word	0x40adc400
 8004e90:	20000418 	.word	0x20000418
 8004e94:	43120000 	.word	0x43120000
 8004e98:	407e0000 	.word	0x407e0000
 8004e9c:	00000000 	.word	0x00000000

08004ea0 <STMPE610_GetY_TOUCH>:
uint16_t STMPE610_GetY_TOUCH(void)
{
 8004ea0:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)y;
 8004ea2:	4b13      	ldr	r3, [pc, #76]	; (8004ef0 <STMPE610_GetY_TOUCH+0x50>)
	pom=272.0*(pom-GUI_TOUCH_AD_TOP)/(GUI_TOUCH_AD_BOTTOM-GUI_TOUCH_AD_TOP);
 8004ea4:	ed9f 7a13 	vldr	s14, [pc, #76]	; 8004ef4 <STMPE610_GetY_TOUCH+0x54>
	pom=(float)y;
 8004ea8:	881b      	ldrh	r3, [r3, #0]
 8004eaa:	ee07 3a90 	vmov	s15, r3
 8004eae:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=272.0*(pom-GUI_TOUCH_AD_TOP)/(GUI_TOUCH_AD_BOTTOM-GUI_TOUCH_AD_TOP);
 8004eb2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004eb6:	ee17 0a90 	vmov	r0, s15
 8004eba:	f7fb fb65 	bl	8000588 <__aeabi_f2d>
 8004ebe:	2200      	movs	r2, #0
 8004ec0:	4b0d      	ldr	r3, [pc, #52]	; (8004ef8 <STMPE610_GetY_TOUCH+0x58>)
 8004ec2:	f7fb fbb9 	bl	8000638 <__aeabi_dmul>
 8004ec6:	a308      	add	r3, pc, #32	; (adr r3, 8004ee8 <STMPE610_GetY_TOUCH+0x48>)
 8004ec8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ecc:	f7fb fcde 	bl	800088c <__aeabi_ddiv>
 8004ed0:	f7fb fdec 	bl	8000aac <__aeabi_d2f>
	return (uint16_t)pom;
 8004ed4:	ee07 0a90 	vmov	s15, r0
 8004ed8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 8004edc:	ee17 3a90 	vmov	r3, s15
 8004ee0:	b298      	uxth	r0, r3
 8004ee2:	bd08      	pop	{r3, pc}
 8004ee4:	f3af 8000 	nop.w
 8004ee8:	00000000 	.word	0x00000000
 8004eec:	40abea00 	.word	0x40abea00
 8004ef0:	2000041a 	.word	0x2000041a
 8004ef4:	43870000 	.word	0x43870000
 8004ef8:	40710000 	.word	0x40710000

08004efc <STMPE610_GetX_TOUCH_RAW>:
	return (uint16_t)pom;
}

uint16_t STMPE610_GetX_TOUCH_RAW(void)
{
	return x;
 8004efc:	4b01      	ldr	r3, [pc, #4]	; (8004f04 <STMPE610_GetX_TOUCH_RAW+0x8>)
}
 8004efe:	8818      	ldrh	r0, [r3, #0]
 8004f00:	4770      	bx	lr
 8004f02:	bf00      	nop
 8004f04:	20000418 	.word	0x20000418

08004f08 <STMPE610_GetY_TOUCH_RAW>:
uint16_t STMPE610_GetY_TOUCH_RAW(void)
{
	return y;
 8004f08:	4b01      	ldr	r3, [pc, #4]	; (8004f10 <STMPE610_GetY_TOUCH_RAW+0x8>)
}
 8004f0a:	8818      	ldrh	r0, [r3, #0]
 8004f0c:	4770      	bx	lr
 8004f0e:	bf00      	nop
 8004f10:	2000041a 	.word	0x2000041a

08004f14 <VL53L1_LoadPatch>:

/* End Group PAL IRQ Triggered events Functions */


static VL53L1_Error VL53L1_LoadPatch(VL53L1_DEV Dev)
{
 8004f14:	b570      	push	{r4, r5, r6, lr}
	uint8_t comms_buffer[256];
	uint32_t patch_power;
	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE)
		status = VL53L1_WrByte(
 8004f16:	2200      	movs	r2, #0
{
 8004f18:	b0c0      	sub	sp, #256	; 0x100
		status = VL53L1_WrByte(
 8004f1a:	2185      	movs	r1, #133	; 0x85
{
 8004f1c:	4605      	mov	r5, r0
		status = VL53L1_WrByte(
 8004f1e:	f003 fb73 	bl	8008608 <VL53L1_WrByte>
				Dev,
				VL53L1_FIRMWARE__ENABLE,
				0x00);
	/* Force GO1 on */
	if (status == VL53L1_ERROR_NONE)
 8004f22:	4604      	mov	r4, r0
 8004f24:	b110      	cbz	r0, 8004f2c <VL53L1_LoadPatch+0x18>
				0x01);

	LOG_FUNCTION_END(status);

	return status;
}
 8004f26:	4620      	mov	r0, r4
 8004f28:	b040      	add	sp, #256	; 0x100
 8004f2a:	bd70      	pop	{r4, r5, r6, pc}
		VL53L1_enable_powerforce(Dev);
 8004f2c:	4628      	mov	r0, r5
 8004f2e:	f002 fcef 	bl	8007910 <VL53L1_enable_powerforce>
	patch_tuning = BDTable[VL53L1_TUNING_PHASECAL_PATCH_POWER];
 8004f32:	4b2a      	ldr	r3, [pc, #168]	; (8004fdc <VL53L1_LoadPatch+0xc8>)
 8004f34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f36:	3b01      	subs	r3, #1
 8004f38:	2b02      	cmp	r3, #2
 8004f3a:	d802      	bhi.n	8004f42 <VL53L1_LoadPatch+0x2e>
 8004f3c:	4a28      	ldr	r2, [pc, #160]	; (8004fe0 <VL53L1_LoadPatch+0xcc>)
 8004f3e:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
		comms_buffer[0] = 0x29;
 8004f42:	4828      	ldr	r0, [pc, #160]	; (8004fe4 <VL53L1_LoadPatch+0xd0>)
		comms_buffer[4] = 0x28;
 8004f44:	2628      	movs	r6, #40	; 0x28
		status = VL53L1_WriteMulti(
 8004f46:	2306      	movs	r3, #6
 8004f48:	466a      	mov	r2, sp
		comms_buffer[0] = 0x29;
 8004f4a:	9000      	str	r0, [sp, #0]
		status = VL53L1_WriteMulti(
 8004f4c:	f240 4176 	movw	r1, #1142	; 0x476
 8004f50:	4628      	mov	r0, r5
		comms_buffer[5] = patch_power;
 8004f52:	f88d 4005 	strb.w	r4, [sp, #5]
		comms_buffer[4] = 0x28;
 8004f56:	f88d 6004 	strb.w	r6, [sp, #4]
		status = VL53L1_WriteMulti(
 8004f5a:	f003 fafd 	bl	8008558 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE) {
 8004f5e:	4604      	mov	r4, r0
 8004f60:	2800      	cmp	r0, #0
 8004f62:	d1e0      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		comms_buffer[0] = 0x03;
 8004f64:	4820      	ldr	r0, [pc, #128]	; (8004fe8 <VL53L1_LoadPatch+0xd4>)
 8004f66:	f642 1407 	movw	r4, #10503	; 0x2907
		status = VL53L1_WriteMulti(
 8004f6a:	2306      	movs	r3, #6
 8004f6c:	466a      	mov	r2, sp
		comms_buffer[0] = 0x03;
 8004f6e:	9000      	str	r0, [sp, #0]
		status = VL53L1_WriteMulti(
 8004f70:	f240 4196 	movw	r1, #1174	; 0x496
 8004f74:	4628      	mov	r0, r5
		comms_buffer[0] = 0x03;
 8004f76:	f8ad 4004 	strh.w	r4, [sp, #4]
		status = VL53L1_WriteMulti(
 8004f7a:	f003 faed 	bl	8008558 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE) {
 8004f7e:	4604      	mov	r4, r0
 8004f80:	2800      	cmp	r0, #0
 8004f82:	d1d0      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		comms_buffer[0] = 0x00;
 8004f84:	f44f 66e0 	mov.w	r6, #1792	; 0x700
		status = VL53L1_WriteMulti(
 8004f88:	2302      	movs	r3, #2
 8004f8a:	466a      	mov	r2, sp
 8004f8c:	f240 4172 	movw	r1, #1138	; 0x472
 8004f90:	4628      	mov	r0, r5
		comms_buffer[0] = 0x00;
 8004f92:	f8ad 6000 	strh.w	r6, [sp]
		status = VL53L1_WriteMulti(
 8004f96:	f003 fadf 	bl	8008558 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE) {
 8004f9a:	4604      	mov	r4, r0
 8004f9c:	2800      	cmp	r0, #0
 8004f9e:	d1c2      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		status = VL53L1_WriteMulti(
 8004fa0:	466a      	mov	r2, sp
 8004fa2:	2302      	movs	r3, #2
 8004fa4:	f240 4174 	movw	r1, #1140	; 0x474
 8004fa8:	4628      	mov	r0, r5
		comms_buffer[0] = 0x00;
 8004faa:	f8ad 6000 	strh.w	r6, [sp]
		status = VL53L1_WriteMulti(
 8004fae:	f003 fad3 	bl	8008558 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE)
 8004fb2:	4604      	mov	r4, r0
 8004fb4:	2800      	cmp	r0, #0
 8004fb6:	d1b6      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		status = VL53L1_WrByte(
 8004fb8:	2201      	movs	r2, #1
 8004fba:	f44f 618e 	mov.w	r1, #1136	; 0x470
 8004fbe:	4628      	mov	r0, r5
 8004fc0:	f003 fb22 	bl	8008608 <VL53L1_WrByte>
	if (status == VL53L1_ERROR_NONE)
 8004fc4:	4604      	mov	r4, r0
 8004fc6:	2800      	cmp	r0, #0
 8004fc8:	d1ad      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		status = VL53L1_WrByte(
 8004fca:	4628      	mov	r0, r5
 8004fcc:	2201      	movs	r2, #1
 8004fce:	2185      	movs	r1, #133	; 0x85
 8004fd0:	f003 fb1a 	bl	8008608 <VL53L1_WrByte>
 8004fd4:	4604      	mov	r4, r0
}
 8004fd6:	4620      	mov	r0, r4
 8004fd8:	b040      	add	sp, #256	; 0x100
 8004fda:	bd70      	pop	{r4, r5, r6, pc}
 8004fdc:	20000008 	.word	0x20000008
 8004fe0:	0801b338 	.word	0x0801b338
 8004fe4:	400ec929 	.word	0x400ec929
 8004fe8:	6f036d03 	.word	0x6f036d03

08004fec <VL53L1_DataInit>:
{
 8004fec:	b570      	push	{r4, r5, r6, lr}
		Status = VL53L1_data_init(Dev, 1);
 8004fee:	2101      	movs	r1, #1
{
 8004ff0:	4604      	mov	r4, r0
		Status = VL53L1_data_init(Dev, 1);
 8004ff2:	f000 fafd 	bl	80055f0 <VL53L1_data_init>
	if (Status == VL53L1_ERROR_NONE)
 8004ff6:	4606      	mov	r6, r0
 8004ff8:	b9a0      	cbnz	r0, 8005024 <VL53L1_DataInit+0x38>
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_WAIT_STATICINIT);
 8004ffa:	2501      	movs	r5, #1
		tmpuint16 = VL53L1_FIXPOINT1616TOFIXPOINT142(value);
 8004ffc:	f8d4 1388 	ldr.w	r1, [r4, #904]	; 0x388
		VL53L1_set_lite_sigma_threshold(Dev, tmpuint16);
 8005000:	4620      	mov	r0, r4
 8005002:	f3c1 318f 	ubfx	r1, r1, #14, #16
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_WAIT_STATICINIT);
 8005006:	f884 5378 	strb.w	r5, [r4, #888]	; 0x378
		VL53L1_set_lite_sigma_threshold(Dev, tmpuint16);
 800500a:	f000 fdcf 	bl	8005bac <VL53L1_set_lite_sigma_threshold>
		tmpuint16 = VL53L1_FIXPOINT1616TOFIXPOINT97(value);
 800500e:	f8d4 138c 	ldr.w	r1, [r4, #908]	; 0x38c
		VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8005012:	f884 5384 	strb.w	r5, [r4, #900]	; 0x384
		VL53L1_set_lite_min_count_rate(Dev, tmpuint16);
 8005016:	4620      	mov	r0, r4
 8005018:	f3c1 214f 	ubfx	r1, r1, #9, #16
 800501c:	f000 fdd0 	bl	8005bc0 <VL53L1_set_lite_min_count_rate>
		VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8005020:	f884 5385 	strb.w	r5, [r4, #901]	; 0x385
}
 8005024:	4630      	mov	r0, r6
 8005026:	bd70      	pop	{r4, r5, r6, pc}

08005028 <VL53L1_WaitDeviceBooted>:
	Status = VL53L1_poll_for_boot_completion(Dev,
 8005028:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800502c:	f003 ba64 	b.w	80084f8 <VL53L1_poll_for_boot_completion>

08005030 <VL53L1_SetMeasurementTimingBudgetMicroSeconds>:
	if (MeasurementTimingBudgetMicroSeconds > 10000000)
 8005030:	4a47      	ldr	r2, [pc, #284]	; (8005150 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x120>)
	uint8_t Mm1Enabled = 0;
 8005032:	2300      	movs	r3, #0
{
 8005034:	b570      	push	{r4, r5, r6, lr}
	if (MeasurementTimingBudgetMicroSeconds > 10000000)
 8005036:	4291      	cmp	r1, r2
{
 8005038:	b086      	sub	sp, #24
	uint8_t Mm1Enabled = 0;
 800503a:	f88d 3006 	strb.w	r3, [sp, #6]
	uint8_t Mm2Enabled = 0;
 800503e:	f88d 3007 	strb.w	r3, [sp, #7]
	uint32_t PhaseCalTimeoutUs = 0;
 8005042:	9304      	str	r3, [sp, #16]
	uint32_t MmTimeoutUs = 0;
 8005044:	e9cd 3302 	strd	r3, r3, [sp, #8]
	if (MeasurementTimingBudgetMicroSeconds > 10000000)
 8005048:	d903      	bls.n	8005052 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x22>
			Status = VL53L1_ERROR_MODE_NOT_SUPPORTED;
 800504a:	f06f 0003 	mvn.w	r0, #3
}
 800504e:	b006      	add	sp, #24
 8005050:	bd70      	pop	{r4, r5, r6, pc}
 8005052:	460d      	mov	r5, r1
	Status = VL53L1_get_sequence_config_bit(Dev,
 8005054:	f10d 0206 	add.w	r2, sp, #6
 8005058:	2105      	movs	r1, #5
 800505a:	4604      	mov	r4, r0
 800505c:	f000 fc5a 	bl	8005914 <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE) {
 8005060:	2800      	cmp	r0, #0
 8005062:	d1f4      	bne.n	800504e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
	Status = VL53L1_get_sequence_config_bit(Dev,
 8005064:	f10d 0207 	add.w	r2, sp, #7
 8005068:	2106      	movs	r1, #6
 800506a:	4620      	mov	r0, r4
 800506c:	f000 fc52 	bl	8005914 <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE)
 8005070:	2800      	cmp	r0, #0
 8005072:	d1ec      	bne.n	800504e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
		Status = VL53L1_get_timeouts_us(Dev,
 8005074:	ab02      	add	r3, sp, #8
 8005076:	aa03      	add	r2, sp, #12
 8005078:	a904      	add	r1, sp, #16
 800507a:	4620      	mov	r0, r4
 800507c:	f000 fc14 	bl	80058a8 <VL53L1_get_timeouts_us>
	if (Status == VL53L1_ERROR_NONE) {
 8005080:	2800      	cmp	r0, #0
 8005082:	d1e4      	bne.n	800504e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
		switch (PresetMode) {
 8005084:	f894 337c 	ldrb.w	r3, [r4, #892]	; 0x37c
 8005088:	2b04      	cmp	r3, #4
 800508a:	d040      	beq.n	800510e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xde>
 800508c:	2b08      	cmp	r3, #8
 800508e:	d02a      	beq.n	80050e6 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xb6>
 8005090:	2b03      	cmp	r3, #3
 8005092:	d005      	beq.n	80050a0 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x70>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 8005094:	2d00      	cmp	r5, #0
 8005096:	d0d8      	beq.n	800504a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
			Status = VL53L1_ERROR_MODE_NOT_SUPPORTED;
 8005098:	f06f 0007 	mvn.w	r0, #7
}
 800509c:	b006      	add	sp, #24
 800509e:	bd70      	pop	{r4, r5, r6, pc}
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 80050a0:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80050a4:	2b01      	cmp	r3, #1
 80050a6:	d04a      	beq.n	800513e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x10e>
 80050a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80050ac:	2b01      	cmp	r3, #1
 80050ae:	d046      	beq.n	800513e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x10e>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 80050b0:	f245 4360 	movw	r3, #21600	; 0x5460
 80050b4:	429d      	cmp	r5, r3
 80050b6:	d9c8      	bls.n	800504a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 80050b8:	4b26      	ldr	r3, [pc, #152]	; (8005154 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x124>)
			divisor = 2;
 80050ba:	2602      	movs	r6, #2
			FDAMaxTimingBudgetUs *= 2;
 80050bc:	4a26      	ldr	r2, [pc, #152]	; (8005158 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x128>)
					- TimingGuard);
 80050be:	442b      	add	r3, r5
			if (TimingBudget > FDAMaxTimingBudgetUs)
 80050c0:	4293      	cmp	r3, r2
 80050c2:	d8c2      	bhi.n	800504a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
				Status = VL53L1_set_timeouts_us(
 80050c4:	9a03      	ldr	r2, [sp, #12]
 80050c6:	4620      	mov	r0, r4
 80050c8:	9904      	ldr	r1, [sp, #16]
				TimingBudget /= divisor;
 80050ca:	fbb3 f6f6 	udiv	r6, r3, r6
				Status = VL53L1_set_timeouts_us(
 80050ce:	4633      	mov	r3, r6
				TimingBudget /= divisor;
 80050d0:	9602      	str	r6, [sp, #8]
				Status = VL53L1_set_timeouts_us(
 80050d2:	f000 fbcf 	bl	8005874 <VL53L1_set_timeouts_us>
			if (Status == VL53L1_ERROR_NONE)
 80050d6:	2800      	cmp	r0, #0
 80050d8:	d1b9      	bne.n	800504e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
				VL53L1DevDataSet(Dev,
 80050da:	9b02      	ldr	r3, [sp, #8]
		VL53L1DevDataSet(Dev,
 80050dc:	f8c4 5380 	str.w	r5, [r4, #896]	; 0x380
				VL53L1DevDataSet(Dev,
 80050e0:	6123      	str	r3, [r4, #16]
}
 80050e2:	b006      	add	sp, #24
 80050e4:	bd70      	pop	{r4, r5, r6, pc}
			VL53L1_get_tuning_parm(Dev,
 80050e6:	aa05      	add	r2, sp, #20
 80050e8:	f248 0136 	movw	r1, #32822	; 0x8036
 80050ec:	4620      	mov	r0, r4
 80050ee:	f001 f8a1 	bl	8006234 <VL53L1_get_tuning_parm>
			if (vhv_loops > 0) {
 80050f2:	9a05      	ldr	r2, [sp, #20]
 80050f4:	2a00      	cmp	r2, #0
 80050f6:	dd27      	ble.n	8005148 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x118>
				vhv += vhv_loops *
 80050f8:	23f5      	movs	r3, #245	; 0xf5
 80050fa:	fb03 f302 	mul.w	r3, r3, r2
 80050fe:	f603 63d1 	addw	r3, r3, #3793	; 0xed1
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 8005102:	429d      	cmp	r5, r3
 8005104:	d9a1      	bls.n	800504a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 8005106:	1aeb      	subs	r3, r5, r3
			FDAMaxTimingBudgetUs *= 2;
 8005108:	4a13      	ldr	r2, [pc, #76]	; (8005158 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x128>)
			divisor = 2;
 800510a:	2602      	movs	r6, #2
 800510c:	e7d8      	b.n	80050c0 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x90>
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 800510e:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8005112:	2b01      	cmp	r3, #1
 8005114:	d00b      	beq.n	800512e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xfe>
 8005116:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800511a:	2b01      	cmp	r3, #1
 800511c:	d007      	beq.n	800512e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xfe>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 800511e:	f5b5 7f7a 	cmp.w	r5, #1000	; 0x3e8
 8005122:	d992      	bls.n	800504a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 8005124:	f5a5 737a 	sub.w	r3, r5, #1000	; 0x3e8
	uint32_t FDAMaxTimingBudgetUs = FDA_MAX_TIMING_BUDGET_US;
 8005128:	4a0c      	ldr	r2, [pc, #48]	; (800515c <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x12c>)
		divisor = 1;
 800512a:	2601      	movs	r6, #1
 800512c:	e7c8      	b.n	80050c0 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x90>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 800512e:	f241 3388 	movw	r3, #5000	; 0x1388
 8005132:	429d      	cmp	r5, r3
 8005134:	d989      	bls.n	800504a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 8005136:	1aeb      	subs	r3, r5, r3
	uint32_t FDAMaxTimingBudgetUs = FDA_MAX_TIMING_BUDGET_US;
 8005138:	4a08      	ldr	r2, [pc, #32]	; (800515c <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x12c>)
		divisor = 1;
 800513a:	2601      	movs	r6, #1
 800513c:	e7c0      	b.n	80050c0 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x90>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 800513e:	f246 73e8 	movw	r3, #26600	; 0x67e8
 8005142:	429d      	cmp	r5, r3
 8005144:	d981      	bls.n	800504a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
 8005146:	e7de      	b.n	8005106 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xd6>
 8005148:	f640 63d1 	movw	r3, #3793	; 0xed1
 800514c:	e7d9      	b.n	8005102 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xd2>
 800514e:	bf00      	nop
 8005150:	00989680 	.word	0x00989680
 8005154:	ffffaba0 	.word	0xffffaba0
 8005158:	0010c8e0 	.word	0x0010c8e0
 800515c:	00086470 	.word	0x00086470

08005160 <VL53L1_StaticInit>:
	VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_IDLE);
 8005160:	2203      	movs	r2, #3
	VL53L1DevDataSet(Dev, LLData.measurement_mode, measurement_mode);
 8005162:	2320      	movs	r3, #32
{
 8005164:	b530      	push	{r4, r5, lr}
 8005166:	b089      	sub	sp, #36	; 0x24
	VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_IDLE);
 8005168:	f880 2378 	strb.w	r2, [r0, #888]	; 0x378
	VL53L1DevDataSet(Dev, LLData.measurement_mode, measurement_mode);
 800516c:	7083      	strb	r3, [r0, #2]
{
 800516e:	4604      	mov	r4, r0
	Status = VL53L1_low_power_auto_data_init(Dev);
 8005170:	f002 fce2 	bl	8007b38 <VL53L1_low_power_auto_data_init>
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8005174:	aa07      	add	r2, sp, #28
 8005176:	ab06      	add	r3, sp, #24
	uint16_t dss_config__target_total_rate_mcps = 0;
 8005178:	2500      	movs	r5, #0
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 800517a:	4620      	mov	r0, r4
 800517c:	2126      	movs	r1, #38	; 0x26
	uint16_t dss_config__target_total_rate_mcps = 0;
 800517e:	f8ad 5012 	strh.w	r5, [sp, #18]
	uint32_t lld_range_config_timeout_us = 0;
 8005182:	9507      	str	r5, [sp, #28]
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8005184:	e9cd 3200 	strd	r3, r2, [sp]
 8005188:	ab05      	add	r3, sp, #20
 800518a:	f10d 0212 	add.w	r2, sp, #18
	uint32_t mm_config_timeout_us = 0;
 800518e:	e9cd 5505 	strd	r5, r5, [sp, #20]
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8005192:	f000 fbd7 	bl	8005944 <VL53L1_get_preset_mode_timing_cfg>
	if (Status == VL53L1_ERROR_NONE)
 8005196:	b120      	cbz	r0, 80051a2 <VL53L1_StaticInit+0x42>
	VL53L1DevDataSet(Dev, CurrentParameters.PresetMode,
 8005198:	2308      	movs	r3, #8
 800519a:	f884 337c 	strb.w	r3, [r4, #892]	; 0x37c
}
 800519e:	b009      	add	sp, #36	; 0x24
 80051a0:	bd30      	pop	{r4, r5, pc}
		Status = VL53L1_set_preset_mode(
 80051a2:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 80051a6:	9807      	ldr	r0, [sp, #28]
 80051a8:	9b05      	ldr	r3, [sp, #20]
 80051aa:	2126      	movs	r1, #38	; 0x26
 80051ac:	9502      	str	r5, [sp, #8]
 80051ae:	9d06      	ldr	r5, [sp, #24]
 80051b0:	9001      	str	r0, [sp, #4]
 80051b2:	4620      	mov	r0, r4
 80051b4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80051b8:	9500      	str	r5, [sp, #0]
 80051ba:	f000 fc17 	bl	80059ec <VL53L1_set_preset_mode>
	if (Status == VL53L1_ERROR_NONE)
 80051be:	2800      	cmp	r0, #0
 80051c0:	d1ea      	bne.n	8005198 <VL53L1_StaticInit+0x38>
		VL53L1DevDataSet(Dev, LLData.measurement_mode,
 80051c2:	2240      	movs	r2, #64	; 0x40
		VL53L1DevDataSet(Dev, CurrentParameters.PresetMode, PresetMode);
 80051c4:	2308      	movs	r3, #8
			Status = VL53L1_SetMeasurementTimingBudgetMicroSeconds(
 80051c6:	f24a 0128 	movw	r1, #41000	; 0xa028
 80051ca:	4620      	mov	r0, r4
		VL53L1DevDataSet(Dev, LLData.measurement_mode,
 80051cc:	70a2      	strb	r2, [r4, #2]
		VL53L1DevDataSet(Dev, CurrentParameters.PresetMode, PresetMode);
 80051ce:	f884 337c 	strb.w	r3, [r4, #892]	; 0x37c
			Status = VL53L1_SetMeasurementTimingBudgetMicroSeconds(
 80051d2:	f7ff ff2d 	bl	8005030 <VL53L1_SetMeasurementTimingBudgetMicroSeconds>
	if (Status == VL53L1_ERROR_NONE) {
 80051d6:	2800      	cmp	r0, #0
 80051d8:	d1de      	bne.n	8005198 <VL53L1_StaticInit+0x38>
	Status = VL53L1_set_inter_measurement_period_ms(Dev,
 80051da:	f44f 6185 	mov.w	r1, #1064	; 0x428
 80051de:	4620      	mov	r0, r4
 80051e0:	f000 fb2c 	bl	800583c <VL53L1_set_inter_measurement_period_ms>
	VL53L1DevDataSet(Dev, CurrentParameters.PresetMode,
 80051e4:	2308      	movs	r3, #8
 80051e6:	f884 337c 	strb.w	r3, [r4, #892]	; 0x37c
}
 80051ea:	b009      	add	sp, #36	; 0x24
 80051ec:	bd30      	pop	{r4, r5, pc}
 80051ee:	bf00      	nop

080051f0 <VL53L1_StartMeasurement>:
{
 80051f0:	b5f0      	push	{r4, r5, r6, r7, lr}
	DeviceMeasurementMode = VL53L1DevDataGet(Dev, LLData.measurement_mode);
 80051f2:	7885      	ldrb	r5, [r0, #2]
{
 80051f4:	b087      	sub	sp, #28
 80051f6:	4604      	mov	r4, r0
	if (DeviceMeasurementMode != VL53L1_DEVICEMEASUREMENTMODE_TIMED)
 80051f8:	2d40      	cmp	r5, #64	; 0x40
 80051fa:	d137      	bne.n	800526c <VL53L1_StartMeasurement+0x7c>
	switch (CurrPalState) {
 80051fc:	f890 3378 	ldrb.w	r3, [r0, #888]	; 0x378
 8005200:	2b05      	cmp	r3, #5
 8005202:	d82c      	bhi.n	800525e <VL53L1_StartMeasurement+0x6e>
 8005204:	2b04      	cmp	r3, #4
 8005206:	d23b      	bcs.n	8005280 <VL53L1_StartMeasurement+0x90>
 8005208:	2b02      	cmp	r3, #2
 800520a:	d939      	bls.n	8005280 <VL53L1_StartMeasurement+0x90>
	uint8_t Mm1Enabled = 0;
 800520c:	2300      	movs	r3, #0
	Status = VL53L1_get_sequence_config_bit(Dev,
 800520e:	f10d 0206 	add.w	r2, sp, #6
 8005212:	2105      	movs	r1, #5
	uint8_t Mm1Enabled = 0;
 8005214:	f88d 3006 	strb.w	r3, [sp, #6]
	uint8_t Mm2Enabled = 0;
 8005218:	f88d 3007 	strb.w	r3, [sp, #7]
	uint32_t PhaseCalTimeoutUs = 0;
 800521c:	9304      	str	r3, [sp, #16]
	uint32_t  RangeTimeoutUs = 0;
 800521e:	e9cd 3302 	strd	r3, r3, [sp, #8]
	Status = VL53L1_get_sequence_config_bit(Dev,
 8005222:	f000 fb77 	bl	8005914 <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE)
 8005226:	b370      	cbz	r0, 8005286 <VL53L1_StartMeasurement+0x96>
		switch (PresetMode) {
 8005228:	2604      	movs	r6, #4
 800522a:	af05      	add	r7, sp, #20
	Status = VL53L1_get_inter_measurement_period_ms(Dev, &adjustedIMP);
 800522c:	4639      	mov	r1, r7
 800522e:	4620      	mov	r0, r4
 8005230:	f000 fb12 	bl	8005858 <VL53L1_get_inter_measurement_period_ms>
	adjustedIMP -= (adjustedIMP * 64) / 1000;
 8005234:	9b05      	ldr	r3, [sp, #20]
 8005236:	4947      	ldr	r1, [pc, #284]	; (8005354 <VL53L1_StartMeasurement+0x164>)
 8005238:	019a      	lsls	r2, r3, #6
 800523a:	fba1 1202 	umull	r1, r2, r1, r2
 800523e:	eba3 1392 	sub.w	r3, r3, r2, lsr #6
		if (IMPms < MTBus + TIMED_MODE_TIMING_GUARD_MILLISECONDS)
 8005242:	42b3      	cmp	r3, r6
 8005244:	f0c0 8083 	bcc.w	800534e <VL53L1_StartMeasurement+0x15e>
		Status = VL53L1_init_and_start_range(
 8005248:	4629      	mov	r1, r5
 800524a:	2206      	movs	r2, #6
 800524c:	4620      	mov	r0, r4
 800524e:	f000 fcbb 	bl	8005bc8 <VL53L1_init_and_start_range>
	if (Status == VL53L1_ERROR_NONE)
 8005252:	b948      	cbnz	r0, 8005268 <VL53L1_StartMeasurement+0x78>
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_RUNNING);
 8005254:	2304      	movs	r3, #4
 8005256:	f884 3378 	strb.w	r3, [r4, #888]	; 0x378
}
 800525a:	b007      	add	sp, #28
 800525c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	switch (CurrPalState) {
 800525e:	3b62      	subs	r3, #98	; 0x62
 8005260:	2b01      	cmp	r3, #1
 8005262:	d90d      	bls.n	8005280 <VL53L1_StartMeasurement+0x90>
		Status = VL53L1_ERROR_UNDEFINED;
 8005264:	f06f 0002 	mvn.w	r0, #2
}
 8005268:	b007      	add	sp, #28
 800526a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		VL53L1_LoadPatch(Dev);
 800526c:	f7ff fe52 	bl	8004f14 <VL53L1_LoadPatch>
	switch (CurrPalState) {
 8005270:	f894 3378 	ldrb.w	r3, [r4, #888]	; 0x378
 8005274:	2b05      	cmp	r3, #5
 8005276:	d8f2      	bhi.n	800525e <VL53L1_StartMeasurement+0x6e>
 8005278:	2b04      	cmp	r3, #4
 800527a:	d201      	bcs.n	8005280 <VL53L1_StartMeasurement+0x90>
 800527c:	2b02      	cmp	r3, #2
 800527e:	d8e3      	bhi.n	8005248 <VL53L1_StartMeasurement+0x58>
		Status = VL53L1_ERROR_INVALID_COMMAND;
 8005280:	f06f 000d 	mvn.w	r0, #13
 8005284:	e7f0      	b.n	8005268 <VL53L1_StartMeasurement+0x78>
	Status = VL53L1_get_sequence_config_bit(Dev,
 8005286:	f10d 0207 	add.w	r2, sp, #7
 800528a:	2106      	movs	r1, #6
 800528c:	4620      	mov	r0, r4
 800528e:	f000 fb41 	bl	8005914 <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE)
 8005292:	2800      	cmp	r0, #0
 8005294:	d1c8      	bne.n	8005228 <VL53L1_StartMeasurement+0x38>
		Status = VL53L1_get_timeouts_us(Dev,
 8005296:	ab03      	add	r3, sp, #12
 8005298:	aa02      	add	r2, sp, #8
 800529a:	a904      	add	r1, sp, #16
 800529c:	4620      	mov	r0, r4
 800529e:	f000 fb03 	bl	80058a8 <VL53L1_get_timeouts_us>
	if (Status == VL53L1_ERROR_NONE) {
 80052a2:	2800      	cmp	r0, #0
 80052a4:	d1c0      	bne.n	8005228 <VL53L1_StartMeasurement+0x38>
		switch (PresetMode) {
 80052a6:	f894 337c 	ldrb.w	r3, [r4, #892]	; 0x37c
 80052aa:	2b04      	cmp	r3, #4
 80052ac:	d030      	beq.n	8005310 <VL53L1_StartMeasurement+0x120>
 80052ae:	2b08      	cmp	r3, #8
 80052b0:	d015      	beq.n	80052de <VL53L1_StartMeasurement+0xee>
 80052b2:	2b03      	cmp	r3, #3
 80052b4:	d1b8      	bne.n	8005228 <VL53L1_StartMeasurement+0x38>
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 80052b6:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80052ba:	9a03      	ldr	r2, [sp, #12]
 80052bc:	2b01      	cmp	r3, #1
 80052be:	d039      	beq.n	8005334 <VL53L1_StartMeasurement+0x144>
 80052c0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80052c4:	2b01      	cmp	r3, #1
 80052c6:	d035      	beq.n	8005334 <VL53L1_StartMeasurement+0x144>
				MeasTimingBdg = 2 * RangeTimeoutUs + 21600;
 80052c8:	f642 2330 	movw	r3, #10800	; 0x2a30
 80052cc:	4413      	add	r3, r2
 80052ce:	4921      	ldr	r1, [pc, #132]	; (8005354 <VL53L1_StartMeasurement+0x164>)
 80052d0:	af05      	add	r7, sp, #20
 80052d2:	005e      	lsls	r6, r3, #1
 80052d4:	fba1 3606 	umull	r3, r6, r1, r6
 80052d8:	09b6      	lsrs	r6, r6, #6
 80052da:	3604      	adds	r6, #4
 80052dc:	e7a6      	b.n	800522c <VL53L1_StartMeasurement+0x3c>
			VL53L1_get_tuning_parm(Dev,
 80052de:	af05      	add	r7, sp, #20
 80052e0:	f248 0136 	movw	r1, #32822	; 0x8036
 80052e4:	4620      	mov	r0, r4
				vhv += vhv_loops *
 80052e6:	26f5      	movs	r6, #245	; 0xf5
			VL53L1_get_tuning_parm(Dev,
 80052e8:	463a      	mov	r2, r7
 80052ea:	f000 ffa3 	bl	8006234 <VL53L1_get_tuning_parm>
			if (vhv_loops > 0) {
 80052ee:	9b05      	ldr	r3, [sp, #20]
 80052f0:	2b00      	cmp	r3, #0
 80052f2:	dd02      	ble.n	80052fa <VL53L1_StartMeasurement+0x10a>
				vhv += vhv_loops *
 80052f4:	fb06 f603 	mul.w	r6, r6, r3
 80052f8:	36f5      	adds	r6, #245	; 0xf5
			MeasTimingBdg = 2 * RangeTimeoutUs + TimingGuard;
 80052fa:	9a03      	ldr	r2, [sp, #12]
 80052fc:	4b15      	ldr	r3, [pc, #84]	; (8005354 <VL53L1_StartMeasurement+0x164>)
 80052fe:	eb06 0642 	add.w	r6, r6, r2, lsl #1
 8005302:	f606 56dc 	addw	r6, r6, #3548	; 0xddc
 8005306:	fba3 3606 	umull	r3, r6, r3, r6
 800530a:	09b6      	lsrs	r6, r6, #6
 800530c:	3604      	adds	r6, #4
 800530e:	e78d      	b.n	800522c <VL53L1_StartMeasurement+0x3c>
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 8005310:	f89d 2006 	ldrb.w	r2, [sp, #6]
 8005314:	9b03      	ldr	r3, [sp, #12]
 8005316:	2a01      	cmp	r2, #1
 8005318:	d00f      	beq.n	800533a <VL53L1_StartMeasurement+0x14a>
 800531a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800531e:	2a01      	cmp	r2, #1
 8005320:	d00b      	beq.n	800533a <VL53L1_StartMeasurement+0x14a>
				MeasTimingBdg = RangeTimeoutUs + 1000;
 8005322:	f503 767a 	add.w	r6, r3, #1000	; 0x3e8
 8005326:	4b0b      	ldr	r3, [pc, #44]	; (8005354 <VL53L1_StartMeasurement+0x164>)
 8005328:	af05      	add	r7, sp, #20
 800532a:	fba3 3606 	umull	r3, r6, r3, r6
 800532e:	09b6      	lsrs	r6, r6, #6
 8005330:	3604      	adds	r6, #4
 8005332:	e77b      	b.n	800522c <VL53L1_StartMeasurement+0x3c>
				MeasTimingBdg = 2 * RangeTimeoutUs + 26600;
 8005334:	f243 33f4 	movw	r3, #13300	; 0x33f4
 8005338:	e7c8      	b.n	80052cc <VL53L1_StartMeasurement+0xdc>
				MeasTimingBdg = RangeTimeoutUs + 5000;
 800533a:	f241 3288 	movw	r2, #5000	; 0x1388
 800533e:	4e05      	ldr	r6, [pc, #20]	; (8005354 <VL53L1_StartMeasurement+0x164>)
 8005340:	af05      	add	r7, sp, #20
 8005342:	441a      	add	r2, r3
 8005344:	fba6 3602 	umull	r3, r6, r6, r2
 8005348:	09b6      	lsrs	r6, r6, #6
 800534a:	3604      	adds	r6, #4
 800534c:	e76e      	b.n	800522c <VL53L1_StartMeasurement+0x3c>
			Status = VL53L1_ERROR_INVALID_PARAMS;
 800534e:	f06f 0003 	mvn.w	r0, #3
	return Status;
 8005352:	e789      	b.n	8005268 <VL53L1_StartMeasurement+0x78>
 8005354:	10624dd3 	.word	0x10624dd3

08005358 <VL53L1_WaitMeasurementDataReady>:
	Status = VL53L1_poll_for_range_completion(Dev,
 8005358:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 800535c:	f003 b8ec 	b.w	8008538 <VL53L1_poll_for_range_completion>

08005360 <VL53L1_GetRangingMeasurementData>:
{
 8005360:	b5f0      	push	{r4, r5, r6, r7, lr}
	memset(pRangingMeasurementData, 0xFF,
 8005362:	f04f 33ff 	mov.w	r3, #4294967295
{
 8005366:	460c      	mov	r4, r1
 8005368:	b0a3      	sub	sp, #140	; 0x8c
	Status = VL53L1_get_device_results(
 800536a:	2102      	movs	r1, #2
	memset(pRangingMeasurementData, 0xFF,
 800536c:	6023      	str	r3, [r4, #0]
{
 800536e:	4605      	mov	r5, r0
	Status = VL53L1_get_device_results(
 8005370:	aa01      	add	r2, sp, #4
	memset(pRangingMeasurementData, 0xFF,
 8005372:	6063      	str	r3, [r4, #4]
 8005374:	60a3      	str	r3, [r4, #8]
 8005376:	60e3      	str	r3, [r4, #12]
 8005378:	6123      	str	r3, [r4, #16]
 800537a:	6163      	str	r3, [r4, #20]
 800537c:	61a3      	str	r3, [r4, #24]
	Status = VL53L1_get_device_results(
 800537e:	f000 fe0b 	bl	8005f98 <VL53L1_get_device_results>
	if (Status == VL53L1_ERROR_NONE) {
 8005382:	b108      	cbz	r0, 8005388 <VL53L1_GetRangingMeasurementData+0x28>
}
 8005384:	b023      	add	sp, #140	; 0x8c
 8005386:	bdf0      	pop	{r4, r5, r6, r7, pc}
	FilteredRangeStatus = presults_data->range_status & 0x1F;
 8005388:	f89d 6046 	ldrb.w	r6, [sp, #70]	; 0x46
		pRangingMeasurementData->StreamCount = presults->stream_count;
 800538c:	f89d 2006 	ldrb.w	r2, [sp, #6]
	FilteredRangeStatus = presults_data->range_status & 0x1F;
 8005390:	f006 061f 	and.w	r6, r6, #31
	pRangeData->TimeStamp = presults_data->time_stamp;
 8005394:	9b03      	ldr	r3, [sp, #12]
		pRangingMeasurementData->StreamCount = presults->stream_count;
 8005396:	7122      	strb	r2, [r4, #4]
	else if (FilteredRangeStatus == VL53L1_DEVICEERROR_PHASECONSISTENCY)
 8005398:	2e07      	cmp	r6, #7
	pRangeData->TimeStamp = presults_data->time_stamp;
 800539a:	6023      	str	r3, [r4, #0]
		Status = SetSimpleData(Dev, 1,
 800539c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80053a0:	f9bd 0044 	ldrsh.w	r0, [sp, #68]	; 0x44
 80053a4:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
	else if (FilteredRangeStatus == VL53L1_DEVICEERROR_PHASECONSISTENCY)
 80053a8:	d01d      	beq.n	80053e6 <VL53L1_GetRangingMeasurementData+0x86>
		if (presults_data->median_range_mm < SRL)
 80053aa:	f5b0 7f96 	cmp.w	r0, #300	; 0x12c
 80053ae:	db7c      	blt.n	80054aa <VL53L1_GetRangingMeasurementData+0x14a>
			RAS = LRAP * presults_data->median_range_mm;
 80053b0:	f641 139a 	movw	r3, #6554	; 0x199a
 80053b4:	fb10 fc03 	smulbb	ip, r0, r3
 80053b8:	ea4f 0e5c 	mov.w	lr, ip, lsr #1
			partial = (GGm * presults_data->sigma_mm);
 80053bc:	4b54      	ldr	r3, [pc, #336]	; (8005510 <VL53L1_GetRangingMeasurementData+0x1b0>)
			if (partial <= GI)
 80053be:	4955      	ldr	r1, [pc, #340]	; (8005514 <VL53L1_GetRangingMeasurementData+0x1b4>)
			partial = partial + (RAS >> 1);
 80053c0:	fb03 e307 	mla	r3, r3, r7, lr
			partial = partial / RAS;
 80053c4:	fbb3 f3fc 	udiv	r3, r3, ip
			partial = partial * 65536;
 80053c8:	041b      	lsls	r3, r3, #16
			if (partial <= GI)
 80053ca:	428b      	cmp	r3, r1
 80053cc:	d80b      	bhi.n	80053e6 <VL53L1_GetRangingMeasurementData+0x86>
				SRQL = GI - partial;
 80053ce:	1acb      	subs	r3, r1, r3
		finalvalue = (uint8_t)(SRQL >> 16);
 80053d0:	0c1b      	lsrs	r3, r3, #16
		returnvalue = MAX(50, MIN(100, finalvalue));
 80053d2:	2b32      	cmp	r3, #50	; 0x32
		finalvalue = (uint8_t)(SRQL >> 16);
 80053d4:	fa5f fc83 	uxtb.w	ip, r3
		returnvalue = MAX(50, MIN(100, finalvalue));
 80053d8:	d905      	bls.n	80053e6 <VL53L1_GetRangingMeasurementData+0x86>
 80053da:	f1bc 0f64 	cmp.w	ip, #100	; 0x64
 80053de:	bf28      	it	cs
 80053e0:	f04f 0c64 	movcs.w	ip, #100	; 0x64
 80053e4:	e001      	b.n	80053ea <VL53L1_GetRangingMeasurementData+0x8a>
		returnvalue = 50;
 80053e6:	f04f 0c32 	mov.w	ip, #50	; 0x32
	SignalRate = VL53L1_FIXPOINT97TOFIXPOINT1616(
 80053ea:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
	TempFix1616 = VL53L1_FIXPOINT97TOFIXPOINT1616(
 80053ee:	027f      	lsls	r7, r7, #9
	AmbientRate = VL53L1_FIXPOINT97TOFIXPOINT1616(
 80053f0:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
	switch (device_status) {
 80053f4:	3a01      	subs	r2, #1
	SignalRate = VL53L1_FIXPOINT97TOFIXPOINT1616(
 80053f6:	025b      	lsls	r3, r3, #9
	pRangeData->RangeMilliMeter = presults_data->median_range_mm;
 80053f8:	8320      	strh	r0, [r4, #24]
	AmbientRate = VL53L1_FIXPOINT97TOFIXPOINT1616(
 80053fa:	0249      	lsls	r1, r1, #9
	pRangeData->RangeFractionalPart = 0;
 80053fc:	2000      	movs	r0, #0
	pRangeData->SigmaMilliMeter = TempFix1616;
 80053fe:	6167      	str	r7, [r4, #20]
	pRangeData->RangeQualityLevel = ComputeRQL(active_results,
 8005400:	f884 c005 	strb.w	ip, [r4, #5]
	pRangeData->RangeFractionalPart = 0;
 8005404:	76a0      	strb	r0, [r4, #26]
	pRangeData->AmbientRateRtnMegaCps = AmbientRate;
 8005406:	e9c4 3102 	strd	r3, r1, [r4, #8]
	pRangeData->EffectiveSpadRtnCount =
 800540a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 800540e:	8221      	strh	r1, [r4, #16]
	switch (device_status) {
 8005410:	2a10      	cmp	r2, #16
 8005412:	d84f      	bhi.n	80054b4 <VL53L1_GetRangingMeasurementData+0x154>
 8005414:	e8df f002 	tbb	[pc, r2]
 8005418:	4e464646 	.word	0x4e464646
 800541c:	4e4e4e4e 	.word	0x4e4e4e4e
 8005420:	4e4e4e4e 	.word	0x4e4e4e4e
 8005424:	4e4e4e09 	.word	0x4e4e4e09
 8005428:	46          	.byte	0x46
 8005429:	00          	.byte	0x00
		pRangeData->RangeStatus = VL53L1_RANGESTATUS_MIN_RANGE_FAIL;
 800542a:	220d      	movs	r2, #13
 800542c:	76e2      	strb	r2, [r4, #27]
	VL53L1_SETARRAYPARAMETERFIELD(Dev,
 800542e:	f8c5 3394 	str.w	r3, [r5, #916]	; 0x394
		Status = VL53L1_get_lite_sigma_threshold(Dev, &SigmaThresh);
 8005432:	4628      	mov	r0, r5
	VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8005434:	f8c5 7390 	str.w	r7, [r5, #912]	; 0x390
		Status = VL53L1_get_lite_sigma_threshold(Dev, &SigmaThresh);
 8005438:	f10d 0102 	add.w	r1, sp, #2
 800543c:	f000 fbb0 	bl	8005ba0 <VL53L1_get_lite_sigma_threshold>
 8005440:	f1a6 0306 	sub.w	r3, r6, #6
 8005444:	fab3 f383 	clz	r3, r3
 8005448:	095b      	lsrs	r3, r3, #5
	if (Status == VL53L1_ERROR_NONE) {
 800544a:	2800      	cmp	r0, #0
 800544c:	d142      	bne.n	80054d4 <VL53L1_GetRangingMeasurementData+0x174>
		TempFix1616 = VL53L1_FIXPOINT142TOFIXPOINT1616(SigmaThresh);
 800544e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
		if (TempFix1616 == 0) {
 8005452:	0391      	lsls	r1, r2, #14
 8005454:	2a00      	cmp	r2, #0
 8005456:	d04c      	beq.n	80054f2 <VL53L1_GetRangingMeasurementData+0x192>
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8005458:	2201      	movs	r2, #1
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 800545a:	f8c5 1388 	str.w	r1, [r5, #904]	; 0x388
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 800545e:	f885 2384 	strb.w	r2, [r5, #900]	; 0x384
 8005462:	f1a6 0604 	sub.w	r6, r6, #4
	VL53L1_SETARRAYPARAMETERFIELD(Dev, LimitChecksStatus,
 8005466:	f885 3386 	strb.w	r3, [r5, #902]	; 0x386
		Status = VL53L1_get_lite_min_count_rate(Dev, &MinCountRate);
 800546a:	f10d 0102 	add.w	r1, sp, #2
 800546e:	4628      	mov	r0, r5
 8005470:	fab6 f686 	clz	r6, r6
 8005474:	f000 fb9e 	bl	8005bb4 <VL53L1_get_lite_min_count_rate>
 8005478:	0976      	lsrs	r6, r6, #5
	if (Status == VL53L1_ERROR_NONE) {
 800547a:	bb18      	cbnz	r0, 80054c4 <VL53L1_GetRangingMeasurementData+0x164>
		TempFix1616 = VL53L1_FIXPOINT97TOFIXPOINT1616(MinCountRate);
 800547c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
		if (TempFix1616 == 0) {
 8005480:	025a      	lsls	r2, r3, #9
 8005482:	b393      	cbz	r3, 80054ea <VL53L1_GetRangingMeasurementData+0x18a>
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8005484:	2301      	movs	r3, #1
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8005486:	f8c5 238c 	str.w	r2, [r5, #908]	; 0x38c
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 800548a:	f885 3385 	strb.w	r3, [r5, #901]	; 0x385
	VL53L1_SETARRAYPARAMETERFIELD(Dev, LimitChecksStatus,
 800548e:	f885 6387 	strb.w	r6, [r5, #903]	; 0x387
	if ((pRangeData->RangeStatus == VL53L1_RANGESTATUS_RANGE_VALID) &&
 8005492:	7ee3      	ldrb	r3, [r4, #27]
	Range = pRangeData->RangeMilliMeter;
 8005494:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
	if ((pRangeData->RangeStatus == VL53L1_RANGESTATUS_RANGE_VALID) &&
 8005498:	b90b      	cbnz	r3, 800549e <VL53L1_GetRangingMeasurementData+0x13e>
 800549a:	2a00      	cmp	r2, #0
 800549c:	db2d      	blt.n	80054fa <VL53L1_GetRangingMeasurementData+0x19a>
		Status = SetSimpleData(Dev, 1,
 800549e:	2000      	movs	r0, #0
}
 80054a0:	b023      	add	sp, #140	; 0x8c
 80054a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
		pRangeData->RangeStatus = VL53L1_RANGESTATUS_HARDWARE_FAIL;
 80054a4:	2205      	movs	r2, #5
 80054a6:	76e2      	strb	r2, [r4, #27]
 80054a8:	e7c1      	b.n	800542e <VL53L1_GetRangingMeasurementData+0xce>
		if (presults_data->median_range_mm < SRL)
 80054aa:	f44f 2e70 	mov.w	lr, #983040	; 0xf0000
			RAS = SRAS * 65536;
 80054ae:	f44f 1cf0 	mov.w	ip, #1966080	; 0x1e0000
 80054b2:	e783      	b.n	80053bc <VL53L1_GetRangingMeasurementData+0x5c>
 80054b4:	1f32      	subs	r2, r6, #4
 80054b6:	b2d2      	uxtb	r2, r2
 80054b8:	2a0f      	cmp	r2, #15
 80054ba:	d813      	bhi.n	80054e4 <VL53L1_GetRangingMeasurementData+0x184>
 80054bc:	4916      	ldr	r1, [pc, #88]	; (8005518 <VL53L1_GetRangingMeasurementData+0x1b8>)
 80054be:	5c8a      	ldrb	r2, [r1, r2]
			pRangeData->RangeStatus =
 80054c0:	76e2      	strb	r2, [r4, #27]
 80054c2:	e7b4      	b.n	800542e <VL53L1_GetRangingMeasurementData+0xce>
 80054c4:	f895 3385 	ldrb.w	r3, [r5, #901]	; 0x385
 80054c8:	2b01      	cmp	r3, #1
 80054ca:	bf14      	ite	ne
 80054cc:	2600      	movne	r6, #0
 80054ce:	f006 0601 	andeq.w	r6, r6, #1
 80054d2:	e7dc      	b.n	800548e <VL53L1_GetRangingMeasurementData+0x12e>
 80054d4:	f895 2384 	ldrb.w	r2, [r5, #900]	; 0x384
 80054d8:	2a01      	cmp	r2, #1
 80054da:	bf14      	ite	ne
 80054dc:	2300      	movne	r3, #0
 80054de:	f003 0301 	andeq.w	r3, r3, #1
 80054e2:	e7be      	b.n	8005462 <VL53L1_GetRangingMeasurementData+0x102>
	default:
 80054e4:	22ff      	movs	r2, #255	; 0xff
			pRangeData->RangeStatus =
 80054e6:	76e2      	strb	r2, [r4, #27]
 80054e8:	e7a1      	b.n	800542e <VL53L1_GetRangingMeasurementData+0xce>
			VL53L1_SETARRAYPARAMETERFIELD(Dev,
 80054ea:	f885 2385 	strb.w	r2, [r5, #901]	; 0x385
 80054ee:	4616      	mov	r6, r2
 80054f0:	e7cd      	b.n	800548e <VL53L1_GetRangingMeasurementData+0x12e>
 80054f2:	f885 1384 	strb.w	r1, [r5, #900]	; 0x384
 80054f6:	460b      	mov	r3, r1
 80054f8:	e7b3      	b.n	8005462 <VL53L1_GetRangingMeasurementData+0x102>
		if (Range < BDTable[VL53L1_TUNING_PROXY_MIN])
 80054fa:	4b08      	ldr	r3, [pc, #32]	; (800551c <VL53L1_GetRangingMeasurementData+0x1bc>)
 80054fc:	685b      	ldr	r3, [r3, #4]
 80054fe:	429a      	cmp	r2, r3
 8005500:	db02      	blt.n	8005508 <VL53L1_GetRangingMeasurementData+0x1a8>
			pRangeData->RangeMilliMeter = 0;
 8005502:	2000      	movs	r0, #0
 8005504:	8320      	strh	r0, [r4, #24]
 8005506:	e73d      	b.n	8005384 <VL53L1_GetRangingMeasurementData+0x24>
			pRangeData->RangeStatus =
 8005508:	230e      	movs	r3, #14
		Status = SetSimpleData(Dev, 1,
 800550a:	2000      	movs	r0, #0
			pRangeData->RangeStatus =
 800550c:	76e3      	strb	r3, [r4, #27]
 800550e:	e739      	b.n	8005384 <VL53L1_GetRangingMeasurementData+0x24>
 8005510:	0030cccd 	.word	0x0030cccd
 8005514:	0075b333 	.word	0x0075b333
 8005518:	0801b344 	.word	0x0801b344
 800551c:	20000008 	.word	0x20000008

08005520 <VL53L1_read_p2p_data>:
}


VL53L1_Error VL53L1_read_p2p_data(
	VL53L1_DEV        Dev)
{
 8005520:	b570      	push	{r4, r5, r6, lr}
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE)
		status = VL53L1_get_static_nvm_managed(
 8005522:	f500 71ac 	add.w	r1, r0, #344	; 0x158
{
 8005526:	b082      	sub	sp, #8
 8005528:	4604      	mov	r4, r0
		status = VL53L1_get_static_nvm_managed(
 800552a:	f002 fb8f 	bl	8007c4c <VL53L1_get_static_nvm_managed>
						Dev,
						&(pdev->stat_nvm));

	if (status == VL53L1_ERROR_NONE)
 800552e:	4605      	mov	r5, r0
 8005530:	b1a0      	cbz	r0, 800555c <VL53L1_read_p2p_data+0x3c>

	/*
	 * Check if there a sensible value for osc_measured__fast_osc__frequency
	 */

	if (pdev->stat_nvm.osc_measured__fast_osc__frequency < 0x1000) {
 8005532:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
 8005536:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800553a:	d331      	bcc.n	80055a0 <VL53L1_read_p2p_data+0x80>

	/* catch parts where the optical centre is
	 * no programmed in to the NVM
	 */

	if (pdev->optical_centre.x_centre == 0 &&
 800553c:	f8b4 30a2 	ldrh.w	r3, [r4, #162]	; 0xa2
 8005540:	b94b      	cbnz	r3, 8005556 <VL53L1_read_p2p_data+0x36>
		pdev->optical_centre.y_centre == 0) {
		pdev->optical_centre.x_centre =
				pdev->mm_roi.x_centre << 4;
 8005542:	f894 209e 	ldrb.w	r2, [r4, #158]	; 0x9e
		pdev->optical_centre.y_centre =
				pdev->mm_roi.y_centre << 4;
 8005546:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
				pdev->mm_roi.x_centre << 4;
 800554a:	0112      	lsls	r2, r2, #4
				pdev->mm_roi.y_centre << 4;
 800554c:	011b      	lsls	r3, r3, #4
		pdev->optical_centre.x_centre =
 800554e:	f884 20a2 	strb.w	r2, [r4, #162]	; 0xa2
		pdev->optical_centre.y_centre =
 8005552:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8005556:	4628      	mov	r0, r5
 8005558:	b002      	add	sp, #8
 800555a:	bd70      	pop	{r4, r5, r6, pc}
		status = VL53L1_get_customer_nvm_managed(
 800555c:	f104 0142 	add.w	r1, r4, #66	; 0x42
 8005560:	4620      	mov	r0, r4
 8005562:	f002 fbff 	bl	8007d64 <VL53L1_get_customer_nvm_managed>
	if (status == VL53L1_ERROR_NONE) {
 8005566:	4605      	mov	r5, r0
 8005568:	2800      	cmp	r0, #0
 800556a:	d1e2      	bne.n	8005532 <VL53L1_read_p2p_data+0x12>
		status = VL53L1_get_nvm_copy_data(
 800556c:	f504 76fd 	add.w	r6, r4, #506	; 0x1fa
 8005570:	4620      	mov	r0, r4
 8005572:	4631      	mov	r1, r6
 8005574:	f002 ff42 	bl	80083fc <VL53L1_get_nvm_copy_data>
		if (status == VL53L1_ERROR_NONE)
 8005578:	4605      	mov	r5, r0
 800557a:	2800      	cmp	r0, #0
 800557c:	d1d9      	bne.n	8005532 <VL53L1_read_p2p_data+0x12>
			VL53L1_copy_rtn_good_spads_to_buffer(
 800557e:	4630      	mov	r0, r6
 8005580:	f104 01f0 	add.w	r1, r4, #240	; 0xf0
 8005584:	f002 f8fe 	bl	8007784 <VL53L1_copy_rtn_good_spads_to_buffer>
		status =
 8005588:	f504 722d 	add.w	r2, r4, #692	; 0x2b4
 800558c:	21de      	movs	r1, #222	; 0xde
 800558e:	4620      	mov	r0, r4
 8005590:	f003 f856 	bl	8008640 <VL53L1_RdWord>
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency < 0x1000) {
 8005594:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
		status =
 8005598:	4605      	mov	r5, r0
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency < 0x1000) {
 800559a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800559e:	d203      	bcs.n	80055a8 <VL53L1_read_p2p_data+0x88>
		pdev->stat_nvm.osc_measured__fast_osc__frequency = 0xBCCC;
 80055a0:	f64b 43cc 	movw	r3, #48332	; 0xbccc
 80055a4:	f8a4 315e 	strh.w	r3, [r4, #350]	; 0x15e
	if (status == VL53L1_ERROR_NONE)
 80055a8:	2d00      	cmp	r5, #0
 80055aa:	d1c7      	bne.n	800553c <VL53L1_read_p2p_data+0x1c>
	uint8_t  xy_size = 0;

	LOG_FUNCTION_START("");

	/* convert SPAD number into (row,col) location */
	VL53L1_decode_row_col(
 80055ac:	f10d 0206 	add.w	r2, sp, #6
 80055b0:	f10d 0107 	add.w	r1, sp, #7
 80055b4:	f894 022a 	ldrb.w	r0, [r4, #554]	; 0x22a
	uint8_t  x       = 0;
 80055b8:	f88d 5006 	strb.w	r5, [sp, #6]
	uint8_t  y       = 0;
 80055bc:	f88d 5007 	strb.w	r5, [sp, #7]
	VL53L1_decode_row_col(
 80055c0:	f002 fb02 	bl	8007bc8 <VL53L1_decode_row_col>
			pdev->nvm_copy_data.roi_config__mode_roi_centre_spad,
			&y,
			&x);

	pmm_roi->x_centre = x;
 80055c4:	f89d 2006 	ldrb.w	r2, [sp, #6]
 80055c8:	462b      	mov	r3, r5
 80055ca:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80055ce:	f362 0307 	bfi	r3, r2, #0, #8
	 * versus the API sense
	 *
	 * MS Nibble = height
	 * LS Nibble = width
	 */
	xy_size = pdev->nvm_copy_data.roi_config__mode_roi_xy_size;
 80055d2:	f894 222b 	ldrb.w	r2, [r4, #555]	; 0x22b
	pmm_roi->x_centre = x;
 80055d6:	f361 230f 	bfi	r3, r1, #8, #8

	pmm_roi->height = xy_size >> 4;
	pmm_roi->width  = xy_size & 0x0F;
 80055da:	f002 010f 	and.w	r1, r2, #15
	pmm_roi->height = xy_size >> 4;
 80055de:	0912      	lsrs	r2, r2, #4
	pmm_roi->x_centre = x;
 80055e0:	f361 4317 	bfi	r3, r1, #16, #8
 80055e4:	f362 631f 	bfi	r3, r2, #24, #8
 80055e8:	f8c4 309e 	str.w	r3, [r4, #158]	; 0x9e
 80055ec:	e7a6      	b.n	800553c <VL53L1_read_p2p_data+0x1c>
 80055ee:	bf00      	nop

080055f0 <VL53L1_data_init>:
{
 80055f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055f4:	460d      	mov	r5, r1
 80055f6:	b08b      	sub	sp, #44	; 0x2c
	VL53L1_init_ll_driver_state(
 80055f8:	2162      	movs	r1, #98	; 0x62
{
 80055fa:	4604      	mov	r4, r0
	VL53L1_init_ll_driver_state(
 80055fc:	f001 fffc 	bl	80075f8 <VL53L1_init_ll_driver_state>
	pdev->wait_method             = VL53L1_WAIT_METHOD_BLOCKING;
 8005600:	f04f 2301 	mov.w	r3, #16777472	; 0x1000100
	pdev->offset_correction_mode  =
 8005604:	2001      	movs	r0, #1
	pdev->phasecal_config_timeout_us  =  1000;
 8005606:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	pdev->mm_config_timeout_us        =  2000;
 800560a:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
	pdev->wait_method             = VL53L1_WAIT_METHOD_BLOCKING;
 800560e:	6023      	str	r3, [r4, #0]
	pdev->range_config_timeout_us     = 13000;
 8005610:	f243 23c8 	movw	r3, #13000	; 0x32c8
	pdev->offset_correction_mode  =
 8005614:	7120      	strb	r0, [r4, #4]
	pdev->phasecal_config_timeout_us  =  1000;
 8005616:	60a1      	str	r1, [r4, #8]
	pdev->inter_measurement_period_ms =   100;
 8005618:	2064      	movs	r0, #100	; 0x64
	pdev->dss_config__target_total_rate_mcps = 0x0A00;
 800561a:	f44f 6120 	mov.w	r1, #2560	; 0xa00
	pdev->mm_config_timeout_us        =  2000;
 800561e:	60e2      	str	r2, [r4, #12]
	pdev->range_config_timeout_us     = 13000;
 8005620:	6123      	str	r3, [r4, #16]
	pdev->debug_mode                  =  0x00;
 8005622:	2200      	movs	r2, #0
	pdev->gain_cal.standard_ranging_gain_factor =
 8005624:	f240 73db 	movw	r3, #2011	; 0x7db
	pdev->inter_measurement_period_ms =   100;
 8005628:	6160      	str	r0, [r4, #20]
	pdev->dss_config__target_total_rate_mcps = 0x0A00;
 800562a:	8321      	strh	r1, [r4, #24]
	VL53L1_init_version(Dev);
 800562c:	4620      	mov	r0, r4
	pdev->debug_mode                  =  0x00;
 800562e:	f884 2021 	strb.w	r2, [r4, #33]	; 0x21
	pdev->gain_cal.standard_ranging_gain_factor =
 8005632:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
	VL53L1_init_version(Dev);
 8005636:	f001 ffd5 	bl	80075e4 <VL53L1_init_version>
	if (read_p2p_data > 0 && status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
 800563a:	b115      	cbz	r5, 8005642 <VL53L1_data_init+0x52>
			status = VL53L1_read_p2p_data(Dev);
 800563c:	4620      	mov	r0, r4
 800563e:	f7ff ff6f 	bl	8005520 <VL53L1_read_p2p_data>
	status =
 8005642:	f504 7088 	add.w	r0, r4, #272	; 0x110
		VL53L1_init_tuning_parm_storage_struct(
 8005646:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
	status =
 800564a:	f000 ff57 	bl	80064fc <VL53L1_init_refspadchar_config_struct>
	status =
 800564e:	f504 7090 	add.w	r0, r4, #288	; 0x120
 8005652:	f000 ff67 	bl	8006524 <VL53L1_init_ssc_config_struct>
	status =
 8005656:	f504 7196 	add.w	r1, r4, #300	; 0x12c
 800565a:	f104 0042 	add.w	r0, r4, #66	; 0x42

	VL53L1_Error  status = VL53L1_ERROR_NONE;
	VL53L1_LLDriverData_t *pdev =
			VL53L1DevStructGetLLDriverHandle(Dev);

	VL53L1_static_config_t        *pstatic       = &(pdev->stat_cfg);
 800565e:	f504 7bb2 	add.w	fp, r4, #356	; 0x164
	status =
 8005662:	f000 ff6b 	bl	800653c <VL53L1_init_xtalk_config_struct>
	status =
 8005666:	f504 70a2 	add.w	r0, r4, #324	; 0x144
 800566a:	f000 ff89 	bl	8006580 <VL53L1_init_offset_cal_config_struct>
	status =
 800566e:	4628      	mov	r0, r5
 8005670:	f000 ff9a 	bl	80065a8 <VL53L1_init_tuning_parm_storage_struct>
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound =
			(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 8005674:	f894 3160 	ldrb.w	r3, [r4, #352]	; 0x160
	VL53L1_init_ll_driver_state(
 8005678:	2103      	movs	r1, #3
		status = VL53L1_set_preset_mode(
 800567a:	68a2      	ldr	r2, [r4, #8]
 800567c:	f894 8001 	ldrb.w	r8, [r4, #1]
	VL53L1_init_ll_driver_state(
 8005680:	4620      	mov	r0, r4
			(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 8005682:	400b      	ands	r3, r1
		status = VL53L1_set_preset_mode(
 8005684:	9207      	str	r2, [sp, #28]
 8005686:	68e2      	ldr	r2, [r4, #12]
	VL53L1_general_config_t       *pgeneral      = &(pdev->gen_cfg);
 8005688:	f504 76c2 	add.w	r6, r4, #388	; 0x184
			(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 800568c:	3b80      	subs	r3, #128	; 0x80
		status = VL53L1_set_preset_mode(
 800568e:	f8b4 9018 	ldrh.w	r9, [r4, #24]
 8005692:	9208      	str	r2, [sp, #32]
	VL53L1_timing_config_t        *ptiming       = &(pdev->tim_cfg);
 8005694:	f504 77ce 	add.w	r7, r4, #412	; 0x19c
	pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound =
 8005698:	f884 3160 	strb.w	r3, [r4, #352]	; 0x160
	VL53L1_dynamic_config_t       *pdynamic      = &(pdev->dyn_cfg);
 800569c:	f504 73da 	add.w	r3, r4, #436	; 0x1b4
	VL53L1_system_control_t       *psystem       = &(pdev->sys_ctrl);
 80056a0:	f504 7ae4 	add.w	sl, r4, #456	; 0x1c8
	VL53L1_dynamic_config_t       *pdynamic      = &(pdev->dyn_cfg);
 80056a4:	9305      	str	r3, [sp, #20]
		status = VL53L1_set_preset_mode(
 80056a6:	6923      	ldr	r3, [r4, #16]
 80056a8:	9309      	str	r3, [sp, #36]	; 0x24
 80056aa:	6963      	ldr	r3, [r4, #20]
 80056ac:	9306      	str	r3, [sp, #24]
	VL53L1_init_ll_driver_state(
 80056ae:	f001 ffa3 	bl	80075f8 <VL53L1_init_ll_driver_state>
	switch (device_preset_mode) {
 80056b2:	f108 32ff 	add.w	r2, r8, #4294967295
	VL53L1_low_power_auto_data_t  *plpadata      =
 80056b6:	f504 7139 	add.w	r1, r4, #740	; 0x2e4
	switch (device_preset_mode) {
 80056ba:	9b05      	ldr	r3, [sp, #20]
 80056bc:	2a25      	cmp	r2, #37	; 0x25
 80056be:	f200 80b7 	bhi.w	8005830 <VL53L1_data_init+0x240>
 80056c2:	e8df f002 	tbb	[pc, r2]
 80056c6:	4e45      	.short	0x4e45
 80056c8:	72696057 	.word	0x72696057
 80056cc:	b5b5847b 	.word	0xb5b5847b
 80056d0:	b5b5b5b5 	.word	0xb5b5b5b5
 80056d4:	968db5b5 	.word	0x968db5b5
 80056d8:	b5b5b5b5 	.word	0xb5b5b5b5
 80056dc:	b5b5b5b5 	.word	0xb5b5b5b5
 80056e0:	b5b5b5b5 	.word	0xb5b5b5b5
 80056e4:	b5b5b5b5 	.word	0xb5b5b5b5
 80056e8:	13aa9fb5 	.word	0x13aa9fb5
		status = VL53L1_preset_mode_low_power_auto_long_ranging(
 80056ec:	e9cd 5101 	strd	r5, r1, [sp, #4]
 80056f0:	4658      	mov	r0, fp
 80056f2:	f8cd a000 	str.w	sl, [sp]
 80056f6:	463a      	mov	r2, r7
 80056f8:	4631      	mov	r1, r6
 80056fa:	f001 fda5 	bl	8007248 <VL53L1_preset_mode_low_power_auto_long_ranging>
 80056fe:	4605      	mov	r5, r0
	if (status == VL53L1_ERROR_NONE) {
 8005700:	b9fd      	cbnz	r5, 8005742 <VL53L1_data_init+0x152>
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8005702:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
		pstatic->dss_config__target_total_rate_mcps =
 8005706:	f8a4 9164 	strh.w	r9, [r4, #356]	; 0x164
		pdev->dss_config__target_total_rate_mcps    =
 800570a:	f8a4 9018 	strh.w	r9, [r4, #24]
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 800570e:	2b00      	cmp	r3, #0
 8005710:	f000 8091 	beq.w	8005836 <VL53L1_data_init+0x246>
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8005714:	9a08      	ldr	r2, [sp, #32]
		pdev->phasecal_config_timeout_us = phasecal_config_timeout_us;
 8005716:	9807      	ldr	r0, [sp, #28]
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8005718:	60e2      	str	r2, [r4, #12]
		status =
 800571a:	4611      	mov	r1, r2
		pdev->range_config_timeout_us    = range_config_timeout_us;
 800571c:	9a09      	ldr	r2, [sp, #36]	; 0x24
		pdev->phasecal_config_timeout_us = phasecal_config_timeout_us;
 800571e:	60a0      	str	r0, [r4, #8]
		pdev->range_config_timeout_us    = range_config_timeout_us;
 8005720:	6122      	str	r2, [r4, #16]
		status =
 8005722:	e9cd 6700 	strd	r6, r7, [sp]
 8005726:	f002 f953 	bl	80079d0 <VL53L1_calc_timeout_register_values>
	if (status == VL53L1_ERROR_NONE)
 800572a:	4605      	mov	r5, r0
 800572c:	b948      	cbnz	r0, 8005742 <VL53L1_data_init+0x152>
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 800572e:	f8b4 32b4 	ldrh.w	r3, [r4, #692]	; 0x2b4
 8005732:	2b00      	cmp	r3, #0
 8005734:	d07f      	beq.n	8005836 <VL53L1_data_init+0x246>
			inter_measurement_period_ms *
 8005736:	9a06      	ldr	r2, [sp, #24]
 8005738:	fb02 f303 	mul.w	r3, r2, r3
		pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 800573c:	6162      	str	r2, [r4, #20]
		pdev->tim_cfg.system__intermeasurement_period = \
 800573e:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
	VL53L1_low_power_auto_data_init(
 8005742:	4620      	mov	r0, r4
 8005744:	f002 f9f8 	bl	8007b38 <VL53L1_low_power_auto_data_init>
}
 8005748:	4628      	mov	r0, r5
 800574a:	b00b      	add	sp, #44	; 0x2c
 800574c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status = VL53L1_preset_mode_standard_ranging(
 8005750:	e9cd a500 	strd	sl, r5, [sp]
 8005754:	4658      	mov	r0, fp
 8005756:	463a      	mov	r2, r7
 8005758:	4631      	mov	r1, r6
 800575a:	f000 ff6f 	bl	800663c <VL53L1_preset_mode_standard_ranging>
 800575e:	4605      	mov	r5, r0
 8005760:	e7ce      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_short_range(
 8005762:	e9cd a500 	strd	sl, r5, [sp]
 8005766:	4658      	mov	r0, fp
 8005768:	463a      	mov	r2, r7
 800576a:	4631      	mov	r1, r6
 800576c:	f000 fffa 	bl	8006764 <VL53L1_preset_mode_standard_ranging_short_range>
 8005770:	4605      	mov	r5, r0
 8005772:	e7c5      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_long_range(
 8005774:	e9cd a500 	strd	sl, r5, [sp]
 8005778:	4658      	mov	r0, fp
 800577a:	463a      	mov	r2, r7
 800577c:	4631      	mov	r1, r6
 800577e:	f001 f885 	bl	800688c <VL53L1_preset_mode_standard_ranging_long_range>
 8005782:	4605      	mov	r5, r0
 8005784:	e7bc      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_mm1_cal(
 8005786:	e9cd a500 	strd	sl, r5, [sp]
 800578a:	4658      	mov	r0, fp
 800578c:	463a      	mov	r2, r7
 800578e:	4631      	mov	r1, r6
 8005790:	f001 f910 	bl	80069b4 <VL53L1_preset_mode_standard_ranging_mm1_cal>
 8005794:	4605      	mov	r5, r0
 8005796:	e7b3      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_mm2_cal(
 8005798:	e9cd a500 	strd	sl, r5, [sp]
 800579c:	4658      	mov	r0, fp
 800579e:	463a      	mov	r2, r7
 80057a0:	4631      	mov	r1, r6
 80057a2:	f001 f99d 	bl	8006ae0 <VL53L1_preset_mode_standard_ranging_mm2_cal>
 80057a6:	4605      	mov	r5, r0
 80057a8:	e7aa      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_timed_ranging(
 80057aa:	e9cd a500 	strd	sl, r5, [sp]
 80057ae:	4658      	mov	r0, fp
 80057b0:	463a      	mov	r2, r7
 80057b2:	4631      	mov	r1, r6
 80057b4:	f001 fa2a 	bl	8006c0c <VL53L1_preset_mode_timed_ranging>
 80057b8:	4605      	mov	r5, r0
 80057ba:	e7a1      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_timed_ranging_short_range(
 80057bc:	e9cd a500 	strd	sl, r5, [sp]
 80057c0:	4658      	mov	r0, fp
 80057c2:	463a      	mov	r2, r7
 80057c4:	4631      	mov	r1, r6
 80057c6:	f001 fabf 	bl	8006d48 <VL53L1_preset_mode_timed_ranging_short_range>
 80057ca:	4605      	mov	r5, r0
 80057cc:	e798      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_timed_ranging_long_range(
 80057ce:	e9cd a500 	strd	sl, r5, [sp]
 80057d2:	4658      	mov	r0, fp
 80057d4:	463a      	mov	r2, r7
 80057d6:	4631      	mov	r1, r6
 80057d8:	f001 fb56 	bl	8006e88 <VL53L1_preset_mode_timed_ranging_long_range>
 80057dc:	4605      	mov	r5, r0
 80057de:	e78f      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_olt(
 80057e0:	e9cd a500 	strd	sl, r5, [sp]
 80057e4:	4658      	mov	r0, fp
 80057e6:	463a      	mov	r2, r7
 80057e8:	4631      	mov	r1, r6
 80057ea:	f001 fe67 	bl	80074bc <VL53L1_preset_mode_olt>
 80057ee:	4605      	mov	r5, r0
 80057f0:	e786      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_singleshot_ranging(
 80057f2:	e9cd a500 	strd	sl, r5, [sp]
 80057f6:	4658      	mov	r0, fp
 80057f8:	463a      	mov	r2, r7
 80057fa:	4631      	mov	r1, r6
 80057fc:	f001 fdc2 	bl	8007384 <VL53L1_preset_mode_singleshot_ranging>
 8005800:	4605      	mov	r5, r0
 8005802:	e77d      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_low_power_auto_short_ranging(
 8005804:	e9cd 5101 	strd	r5, r1, [sp, #4]
 8005808:	4658      	mov	r0, fp
 800580a:	f8cd a000 	str.w	sl, [sp]
 800580e:	463a      	mov	r2, r7
 8005810:	4631      	mov	r1, r6
 8005812:	f001 fc79 	bl	8007108 <VL53L1_preset_mode_low_power_auto_short_ranging>
 8005816:	4605      	mov	r5, r0
 8005818:	e772      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_low_power_auto_ranging(
 800581a:	e9cd 5101 	strd	r5, r1, [sp, #4]
 800581e:	4658      	mov	r0, fp
 8005820:	f8cd a000 	str.w	sl, [sp]
 8005824:	463a      	mov	r2, r7
 8005826:	4631      	mov	r1, r6
 8005828:	f001 fbca 	bl	8006fc0 <VL53L1_preset_mode_low_power_auto_ranging>
 800582c:	4605      	mov	r5, r0
 800582e:	e767      	b.n	8005700 <VL53L1_data_init+0x110>
		status = VL53L1_ERROR_INVALID_PARAMS;
 8005830:	f06f 0503 	mvn.w	r5, #3
 8005834:	e785      	b.n	8005742 <VL53L1_data_init+0x152>
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8005836:	f06f 050e 	mvn.w	r5, #14
 800583a:	e782      	b.n	8005742 <VL53L1_data_init+0x152>

0800583c <VL53L1_set_inter_measurement_period_ms>:
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 800583c:	f8b0 32b4 	ldrh.w	r3, [r0, #692]	; 0x2b4
{
 8005840:	4602      	mov	r2, r0
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8005842:	b133      	cbz	r3, 8005852 <VL53L1_set_inter_measurement_period_ms+0x16>
			inter_measurement_period_ms *
 8005844:	fb01 f303 	mul.w	r3, r1, r3
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005848:	2000      	movs	r0, #0
		pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 800584a:	6151      	str	r1, [r2, #20]
		pdev->tim_cfg.system__intermeasurement_period = \
 800584c:	f8c2 31ac 	str.w	r3, [r2, #428]	; 0x1ac
 8005850:	4770      	bx	lr
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8005852:	f06f 000e 	mvn.w	r0, #14
}
 8005856:	4770      	bx	lr

08005858 <VL53L1_get_inter_measurement_period_ms>:
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8005858:	f8b0 22b4 	ldrh.w	r2, [r0, #692]	; 0x2b4
 800585c:	b132      	cbz	r2, 800586c <VL53L1_get_inter_measurement_period_ms+0x14>
			pdev->tim_cfg.system__intermeasurement_period /
 800585e:	f8d0 31ac 	ldr.w	r3, [r0, #428]	; 0x1ac
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005862:	2000      	movs	r0, #0
			pdev->tim_cfg.system__intermeasurement_period /
 8005864:	fbb3 f3f2 	udiv	r3, r3, r2
		*pinter_measurement_period_ms = \
 8005868:	600b      	str	r3, [r1, #0]
 800586a:	4770      	bx	lr
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 800586c:	f06f 000e 	mvn.w	r0, #14
}
 8005870:	4770      	bx	lr
 8005872:	bf00      	nop

08005874 <VL53L1_set_timeouts_us>:
{
 8005874:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005876:	461d      	mov	r5, r3
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8005878:	f8b0 315e 	ldrh.w	r3, [r0, #350]	; 0x15e
{
 800587c:	b083      	sub	sp, #12
 800587e:	4604      	mov	r4, r0
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8005880:	b17b      	cbz	r3, 80058a2 <VL53L1_set_timeouts_us+0x2e>
 8005882:	4608      	mov	r0, r1
			VL53L1_calc_timeout_register_values(
 8005884:	f504 77ce 	add.w	r7, r4, #412	; 0x19c
 8005888:	f504 76c2 	add.w	r6, r4, #388	; 0x184
 800588c:	4611      	mov	r1, r2
		pdev->range_config_timeout_us    = range_config_timeout_us;
 800588e:	6125      	str	r5, [r4, #16]
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8005890:	e9c4 0202 	strd	r0, r2, [r4, #8]
		status =
 8005894:	462a      	mov	r2, r5
 8005896:	e9cd 6700 	strd	r6, r7, [sp]
 800589a:	f002 f899 	bl	80079d0 <VL53L1_calc_timeout_register_values>
}
 800589e:	b003      	add	sp, #12
 80058a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 80058a2:	f06f 000e 	mvn.w	r0, #14
 80058a6:	e7fa      	b.n	800589e <VL53L1_set_timeouts_us+0x2a>

080058a8 <VL53L1_get_timeouts_us>:
{
 80058a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80058ac:	4604      	mov	r4, r0
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 80058ae:	f8b0 015e 	ldrh.w	r0, [r0, #350]	; 0x15e
 80058b2:	b360      	cbz	r0, 800590e <VL53L1_get_timeouts_us+0x66>
 80058b4:	460f      	mov	r7, r1
		macro_period_us =
 80058b6:	f894 11a2 	ldrb.w	r1, [r4, #418]	; 0x1a2
 80058ba:	4616      	mov	r6, r2
 80058bc:	461d      	mov	r5, r3
 80058be:	f002 f82d 	bl	800791c <VL53L1_calc_macro_period_us>
 80058c2:	4680      	mov	r8, r0
			VL53L1_calc_timeout_us(
 80058c4:	4601      	mov	r1, r0
 80058c6:	f894 018b 	ldrb.w	r0, [r4, #395]	; 0x18b
 80058ca:	f002 f867 	bl	800799c <VL53L1_calc_timeout_us>
		*pphasecal_config_timeout_us =
 80058ce:	6038      	str	r0, [r7, #0]
		timeout_encoded =
 80058d0:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
			VL53L1_calc_decoded_timeout_us(
 80058d4:	4641      	mov	r1, r8
			(uint16_t)pdev->tim_cfg.mm_config__timeout_macrop_a_lo;
 80058d6:	f894 019d 	ldrb.w	r0, [r4, #413]	; 0x19d
		timeout_encoded = (timeout_encoded << 8) +
 80058da:	eb00 2003 	add.w	r0, r0, r3, lsl #8
			VL53L1_calc_decoded_timeout_us(
 80058de:	b280      	uxth	r0, r0
 80058e0:	f002 f866 	bl	80079b0 <VL53L1_calc_decoded_timeout_us>
		*pmm_config_timeout_us =
 80058e4:	6030      	str	r0, [r6, #0]
		timeout_encoded =
 80058e6:	f894 31a0 	ldrb.w	r3, [r4, #416]	; 0x1a0
			VL53L1_calc_decoded_timeout_us(
 80058ea:	4641      	mov	r1, r8
			(uint16_t)pdev->tim_cfg.range_config__timeout_macrop_a_lo;
 80058ec:	f894 01a1 	ldrb.w	r0, [r4, #417]	; 0x1a1
		timeout_encoded = (timeout_encoded << 8) +
 80058f0:	eb00 2003 	add.w	r0, r0, r3, lsl #8
			VL53L1_calc_decoded_timeout_us(
 80058f4:	b280      	uxth	r0, r0
 80058f6:	f002 f85b 	bl	80079b0 <VL53L1_calc_decoded_timeout_us>
		*prange_config_timeout_us =
 80058fa:	6028      	str	r0, [r5, #0]
		pdev->phasecal_config_timeout_us = *pphasecal_config_timeout_us;
 80058fc:	683b      	ldr	r3, [r7, #0]
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80058fe:	2000      	movs	r0, #0
		pdev->phasecal_config_timeout_us = *pphasecal_config_timeout_us;
 8005900:	60a3      	str	r3, [r4, #8]
		pdev->mm_config_timeout_us       = *pmm_config_timeout_us;
 8005902:	6833      	ldr	r3, [r6, #0]
 8005904:	60e3      	str	r3, [r4, #12]
		pdev->range_config_timeout_us    = *prange_config_timeout_us;
 8005906:	682b      	ldr	r3, [r5, #0]
 8005908:	6123      	str	r3, [r4, #16]
}
 800590a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 800590e:	f06f 000e 	mvn.w	r0, #14
 8005912:	e7fa      	b.n	800590a <VL53L1_get_timeouts_us+0x62>

08005914 <VL53L1_get_sequence_config_bit>:
	if (bit_id <= VL53L1_DEVICESEQUENCECONFIG_RANGE) {
 8005914:	2907      	cmp	r1, #7
 8005916:	d812      	bhi.n	800593e <VL53L1_get_sequence_config_bit+0x2a>
 8005918:	f890 31c5 	ldrb.w	r3, [r0, #453]	; 0x1c5
		if (bit_id > 0) {
 800591c:	b151      	cbz	r1, 8005934 <VL53L1_get_sequence_config_bit+0x20>
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800591e:	2000      	movs	r0, #0
{
 8005920:	b410      	push	{r4}
			bit_mask  = 0x01 << bit_id;
 8005922:	2401      	movs	r4, #1
 8005924:	408c      	lsls	r4, r1
			*pvalue  = *pvalue >> bit_id;
 8005926:	4023      	ands	r3, r4
}
 8005928:	f85d 4b04 	ldr.w	r4, [sp], #4
			*pvalue  = *pvalue >> bit_id;
 800592c:	fa43 f101 	asr.w	r1, r3, r1
 8005930:	7011      	strb	r1, [r2, #0]
}
 8005932:	4770      	bx	lr
		*pvalue =
 8005934:	f003 0301 	and.w	r3, r3, #1
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005938:	4608      	mov	r0, r1
		*pvalue =
 800593a:	7013      	strb	r3, [r2, #0]
 800593c:	4770      	bx	lr
		status = VL53L1_ERROR_INVALID_PARAMS;
 800593e:	f06f 0003 	mvn.w	r0, #3
}
 8005942:	4770      	bx	lr

08005944 <VL53L1_get_preset_mode_timing_cfg>:
	switch (device_preset_mode) {
 8005944:	3901      	subs	r1, #1
{
 8005946:	b430      	push	{r4, r5}
	switch (device_preset_mode) {
 8005948:	2925      	cmp	r1, #37	; 0x25
 800594a:	d84a      	bhi.n	80059e2 <VL53L1_get_preset_mode_timing_cfg+0x9e>
 800594c:	e8df f001 	tbb	[pc, r1]
 8005950:	37373737 	.word	0x37373737
 8005954:	25252537 	.word	0x25252537
 8005958:	49494949 	.word	0x49494949
 800595c:	49494949 	.word	0x49494949
 8005960:	49492537 	.word	0x49492537
 8005964:	49494949 	.word	0x49494949
 8005968:	49494949 	.word	0x49494949
 800596c:	49494949 	.word	0x49494949
 8005970:	13494949 	.word	0x13494949
 8005974:	1313      	.short	0x1313
				pdev->tuning_parms.tp_dss_target_timed_mcps;
 8005976:	f8b0 50cc 	ldrh.w	r5, [r0, #204]	; 0xcc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800597a:	2100      	movs	r1, #0
				pdev->tuning_parms.tp_phasecal_timeout_timed_us;
 800597c:	f8d0 40d4 	ldr.w	r4, [r0, #212]	; 0xd4
		*pdss_config__target_total_rate_mcps =
 8005980:	8015      	strh	r5, [r2, #0]
		*pphasecal_config_timeout_us =
 8005982:	601c      	str	r4, [r3, #0]
		*pmm_config_timeout_us =
 8005984:	9a02      	ldr	r2, [sp, #8]
				pdev->tuning_parms.tp_mm_timeout_lpa_us;
 8005986:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
		*pmm_config_timeout_us =
 800598a:	6013      	str	r3, [r2, #0]
		*prange_config_timeout_us =
 800598c:	9a03      	ldr	r2, [sp, #12]
				pdev->tuning_parms.tp_range_timeout_lpa_us;
 800598e:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
}
 8005992:	4608      	mov	r0, r1
		*prange_config_timeout_us =
 8005994:	6013      	str	r3, [r2, #0]
}
 8005996:	bc30      	pop	{r4, r5}
 8005998:	4770      	bx	lr
				pdev->tuning_parms.tp_dss_target_timed_mcps;
 800599a:	f8b0 50cc 	ldrh.w	r5, [r0, #204]	; 0xcc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800599e:	2100      	movs	r1, #0
				pdev->tuning_parms.tp_phasecal_timeout_timed_us;
 80059a0:	f8d0 40d4 	ldr.w	r4, [r0, #212]	; 0xd4
		*pdss_config__target_total_rate_mcps =
 80059a4:	8015      	strh	r5, [r2, #0]
		*pphasecal_config_timeout_us =
 80059a6:	601c      	str	r4, [r3, #0]
		*pmm_config_timeout_us =
 80059a8:	9a02      	ldr	r2, [sp, #8]
				pdev->tuning_parms.tp_mm_timeout_timed_us;
 80059aa:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
		*pmm_config_timeout_us =
 80059ae:	6013      	str	r3, [r2, #0]
		*prange_config_timeout_us =
 80059b0:	9a03      	ldr	r2, [sp, #12]
				pdev->tuning_parms.tp_range_timeout_timed_us;
 80059b2:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
}
 80059b6:	4608      	mov	r0, r1
		*prange_config_timeout_us =
 80059b8:	6013      	str	r3, [r2, #0]
}
 80059ba:	bc30      	pop	{r4, r5}
 80059bc:	4770      	bx	lr
				pdev->tuning_parms.tp_dss_target_lite_mcps;
 80059be:	f8b0 50ca 	ldrh.w	r5, [r0, #202]	; 0xca
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80059c2:	2100      	movs	r1, #0
				pdev->tuning_parms.tp_phasecal_timeout_lite_us;
 80059c4:	f8d0 40d0 	ldr.w	r4, [r0, #208]	; 0xd0
		*pdss_config__target_total_rate_mcps =
 80059c8:	8015      	strh	r5, [r2, #0]
		*pphasecal_config_timeout_us =
 80059ca:	601c      	str	r4, [r3, #0]
		*pmm_config_timeout_us =
 80059cc:	9a02      	ldr	r2, [sp, #8]
				pdev->tuning_parms.tp_mm_timeout_lite_us;
 80059ce:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
		*pmm_config_timeout_us =
 80059d2:	6013      	str	r3, [r2, #0]
		*prange_config_timeout_us =
 80059d4:	9a03      	ldr	r2, [sp, #12]
				pdev->tuning_parms.tp_range_timeout_lite_us;
 80059d6:	f8d0 30e4 	ldr.w	r3, [r0, #228]	; 0xe4
}
 80059da:	4608      	mov	r0, r1
		*prange_config_timeout_us =
 80059dc:	6013      	str	r3, [r2, #0]
}
 80059de:	bc30      	pop	{r4, r5}
 80059e0:	4770      	bx	lr
		status = VL53L1_ERROR_INVALID_PARAMS;
 80059e2:	f06f 0103 	mvn.w	r1, #3
}
 80059e6:	bc30      	pop	{r4, r5}
 80059e8:	4608      	mov	r0, r1
 80059ea:	4770      	bx	lr

080059ec <VL53L1_set_preset_mode>:
{
 80059ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059f0:	b085      	sub	sp, #20
 80059f2:	4699      	mov	r9, r3
 80059f4:	460d      	mov	r5, r1
 80059f6:	4604      	mov	r4, r0
	pdev->mm_config_timeout_us        = mm_config_timeout_us;
 80059f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
	VL53L1_init_ll_driver_state(
 80059fa:	2103      	movs	r1, #3
	pdev->preset_mode                 = device_preset_mode;
 80059fc:	7045      	strb	r5, [r0, #1]
	switch (device_preset_mode) {
 80059fe:	3d01      	subs	r5, #1
	pdev->mm_config_timeout_us        = mm_config_timeout_us;
 8005a00:	60c3      	str	r3, [r0, #12]
{
 8005a02:	4692      	mov	sl, r2
	pdev->range_config_timeout_us     = range_config_timeout_us;
 8005a04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
	VL53L1_static_config_t        *pstatic       = &(pdev->stat_cfg);
 8005a06:	f500 7bb2 	add.w	fp, r0, #356	; 0x164
	VL53L1_general_config_t       *pgeneral      = &(pdev->gen_cfg);
 8005a0a:	f500 77c2 	add.w	r7, r0, #388	; 0x184
	VL53L1_timing_config_t        *ptiming       = &(pdev->tim_cfg);
 8005a0e:	f500 78ce 	add.w	r8, r0, #412	; 0x19c
	pdev->range_config_timeout_us     = range_config_timeout_us;
 8005a12:	6103      	str	r3, [r0, #16]
	VL53L1_dynamic_config_t       *pdynamic      = &(pdev->dyn_cfg);
 8005a14:	f500 76da 	add.w	r6, r0, #436	; 0x1b4
	pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 8005a18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005a1a:	6143      	str	r3, [r0, #20]
	VL53L1_init_ll_driver_state(
 8005a1c:	f001 fdec 	bl	80075f8 <VL53L1_init_ll_driver_state>
	VL53L1_system_control_t       *psystem       = &(pdev->sys_ctrl);
 8005a20:	f504 72e4 	add.w	r2, r4, #456	; 0x1c8
	VL53L1_tuning_parm_storage_t  *ptuning_parms = &(pdev->tuning_parms);
 8005a24:	f104 01a4 	add.w	r1, r4, #164	; 0xa4
	VL53L1_low_power_auto_data_t  *plpadata      =
 8005a28:	f504 7039 	add.w	r0, r4, #740	; 0x2e4
	switch (device_preset_mode) {
 8005a2c:	2d25      	cmp	r5, #37	; 0x25
 8005a2e:	f200 80b1 	bhi.w	8005b94 <VL53L1_set_preset_mode+0x1a8>
 8005a32:	e8df f005 	tbb	[pc, r5]
 8005a36:	4a41      	.short	0x4a41
 8005a38:	6e655c53 	.word	0x6e655c53
 8005a3c:	afaf8077 	.word	0xafaf8077
 8005a40:	afafafaf 	.word	0xafafafaf
 8005a44:	9289afaf 	.word	0x9289afaf
 8005a48:	afafafaf 	.word	0xafafafaf
 8005a4c:	afafafaf 	.word	0xafafafaf
 8005a50:	afafafaf 	.word	0xafafafaf
 8005a54:	afafafaf 	.word	0xafafafaf
 8005a58:	13a59baf 	.word	0x13a59baf
		status = VL53L1_preset_mode_low_power_auto_long_ranging(
 8005a5c:	9002      	str	r0, [sp, #8]
 8005a5e:	4633      	mov	r3, r6
 8005a60:	9101      	str	r1, [sp, #4]
 8005a62:	4658      	mov	r0, fp
 8005a64:	9200      	str	r2, [sp, #0]
 8005a66:	4639      	mov	r1, r7
 8005a68:	4642      	mov	r2, r8
 8005a6a:	f001 fbed 	bl	8007248 <VL53L1_preset_mode_low_power_auto_long_ranging>
	if (status == VL53L1_ERROR_NONE) {
 8005a6e:	bb00      	cbnz	r0, 8005ab2 <VL53L1_set_preset_mode+0xc6>
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8005a70:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
		pstatic->dss_config__target_total_rate_mcps =
 8005a74:	f8a4 a164 	strh.w	sl, [r4, #356]	; 0x164
		pdev->dss_config__target_total_rate_mcps    =
 8005a78:	f8a4 a018 	strh.w	sl, [r4, #24]
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8005a7c:	2b00      	cmp	r3, #0
 8005a7e:	f000 808c 	beq.w	8005b9a <VL53L1_set_preset_mode+0x1ae>
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8005a82:	9a0e      	ldr	r2, [sp, #56]	; 0x38
		status =
 8005a84:	4648      	mov	r0, r9
		pdev->phasecal_config_timeout_us = phasecal_config_timeout_us;
 8005a86:	f8c4 9008 	str.w	r9, [r4, #8]
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8005a8a:	60e2      	str	r2, [r4, #12]
		status =
 8005a8c:	4611      	mov	r1, r2
		pdev->range_config_timeout_us    = range_config_timeout_us;
 8005a8e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005a90:	6122      	str	r2, [r4, #16]
		status =
 8005a92:	f8cd 8004 	str.w	r8, [sp, #4]
 8005a96:	9700      	str	r7, [sp, #0]
 8005a98:	f001 ff9a 	bl	80079d0 <VL53L1_calc_timeout_register_values>
	if (status == VL53L1_ERROR_NONE)
 8005a9c:	b948      	cbnz	r0, 8005ab2 <VL53L1_set_preset_mode+0xc6>
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8005a9e:	f8b4 32b4 	ldrh.w	r3, [r4, #692]	; 0x2b4
 8005aa2:	2b00      	cmp	r3, #0
 8005aa4:	d079      	beq.n	8005b9a <VL53L1_set_preset_mode+0x1ae>
			inter_measurement_period_ms *
 8005aa6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005aa8:	fb02 f303 	mul.w	r3, r2, r3
		pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 8005aac:	6162      	str	r2, [r4, #20]
		pdev->tim_cfg.system__intermeasurement_period = \
 8005aae:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
}
 8005ab2:	b005      	add	sp, #20
 8005ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status = VL53L1_preset_mode_standard_ranging(
 8005ab8:	9101      	str	r1, [sp, #4]
 8005aba:	4633      	mov	r3, r6
 8005abc:	9200      	str	r2, [sp, #0]
 8005abe:	4658      	mov	r0, fp
 8005ac0:	4642      	mov	r2, r8
 8005ac2:	4639      	mov	r1, r7
 8005ac4:	f000 fdba 	bl	800663c <VL53L1_preset_mode_standard_ranging>
		break;
 8005ac8:	e7d1      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_short_range(
 8005aca:	9101      	str	r1, [sp, #4]
 8005acc:	4633      	mov	r3, r6
 8005ace:	9200      	str	r2, [sp, #0]
 8005ad0:	4658      	mov	r0, fp
 8005ad2:	4642      	mov	r2, r8
 8005ad4:	4639      	mov	r1, r7
 8005ad6:	f000 fe45 	bl	8006764 <VL53L1_preset_mode_standard_ranging_short_range>
		break;
 8005ada:	e7c8      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_long_range(
 8005adc:	9101      	str	r1, [sp, #4]
 8005ade:	4633      	mov	r3, r6
 8005ae0:	9200      	str	r2, [sp, #0]
 8005ae2:	4658      	mov	r0, fp
 8005ae4:	4642      	mov	r2, r8
 8005ae6:	4639      	mov	r1, r7
 8005ae8:	f000 fed0 	bl	800688c <VL53L1_preset_mode_standard_ranging_long_range>
		break;
 8005aec:	e7bf      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_mm1_cal(
 8005aee:	9101      	str	r1, [sp, #4]
 8005af0:	4633      	mov	r3, r6
 8005af2:	9200      	str	r2, [sp, #0]
 8005af4:	4658      	mov	r0, fp
 8005af6:	4642      	mov	r2, r8
 8005af8:	4639      	mov	r1, r7
 8005afa:	f000 ff5b 	bl	80069b4 <VL53L1_preset_mode_standard_ranging_mm1_cal>
		break;
 8005afe:	e7b6      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_mm2_cal(
 8005b00:	9101      	str	r1, [sp, #4]
 8005b02:	4633      	mov	r3, r6
 8005b04:	9200      	str	r2, [sp, #0]
 8005b06:	4658      	mov	r0, fp
 8005b08:	4642      	mov	r2, r8
 8005b0a:	4639      	mov	r1, r7
 8005b0c:	f000 ffe8 	bl	8006ae0 <VL53L1_preset_mode_standard_ranging_mm2_cal>
		break;
 8005b10:	e7ad      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_timed_ranging(
 8005b12:	9101      	str	r1, [sp, #4]
 8005b14:	4633      	mov	r3, r6
 8005b16:	9200      	str	r2, [sp, #0]
 8005b18:	4658      	mov	r0, fp
 8005b1a:	4642      	mov	r2, r8
 8005b1c:	4639      	mov	r1, r7
 8005b1e:	f001 f875 	bl	8006c0c <VL53L1_preset_mode_timed_ranging>
		break;
 8005b22:	e7a4      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_timed_ranging_short_range(
 8005b24:	9101      	str	r1, [sp, #4]
 8005b26:	4633      	mov	r3, r6
 8005b28:	9200      	str	r2, [sp, #0]
 8005b2a:	4658      	mov	r0, fp
 8005b2c:	4642      	mov	r2, r8
 8005b2e:	4639      	mov	r1, r7
 8005b30:	f001 f90a 	bl	8006d48 <VL53L1_preset_mode_timed_ranging_short_range>
		break;
 8005b34:	e79b      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_timed_ranging_long_range(
 8005b36:	9101      	str	r1, [sp, #4]
 8005b38:	4633      	mov	r3, r6
 8005b3a:	9200      	str	r2, [sp, #0]
 8005b3c:	4658      	mov	r0, fp
 8005b3e:	4642      	mov	r2, r8
 8005b40:	4639      	mov	r1, r7
 8005b42:	f001 f9a1 	bl	8006e88 <VL53L1_preset_mode_timed_ranging_long_range>
		break;
 8005b46:	e792      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_olt(
 8005b48:	9101      	str	r1, [sp, #4]
 8005b4a:	4633      	mov	r3, r6
 8005b4c:	9200      	str	r2, [sp, #0]
 8005b4e:	4658      	mov	r0, fp
 8005b50:	4642      	mov	r2, r8
 8005b52:	4639      	mov	r1, r7
 8005b54:	f001 fcb2 	bl	80074bc <VL53L1_preset_mode_olt>
		break;
 8005b58:	e789      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_singleshot_ranging(
 8005b5a:	9101      	str	r1, [sp, #4]
 8005b5c:	4633      	mov	r3, r6
 8005b5e:	9200      	str	r2, [sp, #0]
 8005b60:	4658      	mov	r0, fp
 8005b62:	4642      	mov	r2, r8
 8005b64:	4639      	mov	r1, r7
 8005b66:	f001 fc0d 	bl	8007384 <VL53L1_preset_mode_singleshot_ranging>
		break;
 8005b6a:	e780      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_low_power_auto_short_ranging(
 8005b6c:	9002      	str	r0, [sp, #8]
 8005b6e:	4633      	mov	r3, r6
 8005b70:	9101      	str	r1, [sp, #4]
 8005b72:	4658      	mov	r0, fp
 8005b74:	9200      	str	r2, [sp, #0]
 8005b76:	4639      	mov	r1, r7
 8005b78:	4642      	mov	r2, r8
 8005b7a:	f001 fac5 	bl	8007108 <VL53L1_preset_mode_low_power_auto_short_ranging>
		break;
 8005b7e:	e776      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_low_power_auto_ranging(
 8005b80:	9002      	str	r0, [sp, #8]
 8005b82:	4633      	mov	r3, r6
 8005b84:	9101      	str	r1, [sp, #4]
 8005b86:	4658      	mov	r0, fp
 8005b88:	9200      	str	r2, [sp, #0]
 8005b8a:	4639      	mov	r1, r7
 8005b8c:	4642      	mov	r2, r8
 8005b8e:	f001 fa17 	bl	8006fc0 <VL53L1_preset_mode_low_power_auto_ranging>
		break;
 8005b92:	e76c      	b.n	8005a6e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_ERROR_INVALID_PARAMS;
 8005b94:	f06f 0003 	mvn.w	r0, #3
 8005b98:	e78b      	b.n	8005ab2 <VL53L1_set_preset_mode+0xc6>
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8005b9a:	f06f 000e 	mvn.w	r0, #14
 8005b9e:	e788      	b.n	8005ab2 <VL53L1_set_preset_mode+0xc6>

08005ba0 <VL53L1_get_lite_sigma_threshold>:
			pdev->tim_cfg.range_config__sigma_thresh;
 8005ba0:	f8b0 31a6 	ldrh.w	r3, [r0, #422]	; 0x1a6
}
 8005ba4:	2000      	movs	r0, #0
	*plite_sigma =
 8005ba6:	800b      	strh	r3, [r1, #0]
}
 8005ba8:	4770      	bx	lr
 8005baa:	bf00      	nop

08005bac <VL53L1_set_lite_sigma_threshold>:
	pdev->tim_cfg.range_config__sigma_thresh = lite_sigma;
 8005bac:	f8a0 11a6 	strh.w	r1, [r0, #422]	; 0x1a6
}
 8005bb0:	2000      	movs	r0, #0
 8005bb2:	4770      	bx	lr

08005bb4 <VL53L1_get_lite_min_count_rate>:
			pdev->tim_cfg.range_config__min_count_rate_rtn_limit_mcps;
 8005bb4:	f8b0 31a8 	ldrh.w	r3, [r0, #424]	; 0x1a8
}
 8005bb8:	2000      	movs	r0, #0
	*plite_mincountrate =
 8005bba:	800b      	strh	r3, [r1, #0]
}
 8005bbc:	4770      	bx	lr
 8005bbe:	bf00      	nop

08005bc0 <VL53L1_set_lite_min_count_rate>:
	pdev->tim_cfg.range_config__min_count_rate_rtn_limit_mcps =
 8005bc0:	f8a0 11a8 	strh.w	r1, [r0, #424]	; 0x1a8
}
 8005bc4:	2000      	movs	r0, #0
 8005bc6:	4770      	bx	lr

08005bc8 <VL53L1_init_and_start_range>:

VL53L1_Error VL53L1_init_and_start_range(
	VL53L1_DEV                     Dev,
	uint8_t                        measurement_mode,
	VL53L1_DeviceConfigLevel       device_config_level)
{
 8005bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005bcc:	4604      	mov	r4, r0
	pdev->measurement_mode = measurement_mode;

	/* Merge measurement mode with mode_start */

	psystem->system__mode_start =
		(psystem->system__mode_start &
 8005bce:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
{
 8005bd2:	4616      	mov	r6, r2
		VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK) |
		measurement_mode;

	/* copy in rit from xtalk config */

	pdev->stat_cfg.algo__range_ignore_threshold_mcps =
 8005bd4:	f8b0 0142 	ldrh.w	r0, [r0, #322]	; 0x142
		(psystem->system__mode_start &
 8005bd8:	f003 030f 	and.w	r3, r3, #15
	/* Start Patch_LowPowerAutoMode */

	/* doing this ensures stop_range followed by a get_device_results does
	 * not mess up the counters */

	if (pdev->low_power_auto_data.low_power_auto_range_count == 0xFF) {
 8005bdc:	f894 22e6 	ldrb.w	r2, [r4, #742]	; 0x2e6
	pdev->measurement_mode = measurement_mode;
 8005be0:	70a1      	strb	r1, [r4, #2]
{
 8005be2:	b0c9      	sub	sp, #292	; 0x124
		VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK) |
 8005be4:	4319      	orrs	r1, r3
	if (pdev->low_power_auto_data.low_power_auto_range_count == 0xFF) {
 8005be6:	2aff      	cmp	r2, #255	; 0xff
	pdev->stat_cfg.algo__range_ignore_threshold_mcps =
 8005be8:	f8a4 017c 	strh.w	r0, [r4, #380]	; 0x17c
	psystem->system__mode_start =
 8005bec:	f884 11cc 	strb.w	r1, [r4, #460]	; 0x1cc
	if (pdev->low_power_auto_data.low_power_auto_range_count == 0xFF) {
 8005bf0:	d102      	bne.n	8005bf8 <VL53L1_init_and_start_range+0x30>
		pdev->low_power_auto_data.low_power_auto_range_count = 0x0;
 8005bf2:	2300      	movs	r3, #0
 8005bf4:	f884 32e6 	strb.w	r3, [r4, #742]	; 0x2e6
	}

	/* For Presence. Override threshold config */
	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8005bf8:	f8d4 22e4 	ldr.w	r2, [r4, #740]	; 0x2e4
 8005bfc:	4bbf      	ldr	r3, [pc, #764]	; (8005efc <VL53L1_init_and_start_range+0x334>)
 8005bfe:	4013      	ands	r3, r2
 8005c00:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005c04:	d00e      	beq.n	8005c24 <VL53L1_init_and_start_range+0x5c>
			device_config_level =
				VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS;
		}
	}

	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8005c06:	4abe      	ldr	r2, [pc, #760]	; (8005f00 <VL53L1_init_and_start_range+0x338>)
 8005c08:	4293      	cmp	r3, r2
 8005c0a:	d03e      	beq.n	8005c8a <VL53L1_init_and_start_range+0xc2>

	/*
	 * Determine Initial I2C index
	 */

	switch (device_config_level) {
 8005c0c:	1e73      	subs	r3, r6, #1
 8005c0e:	2b05      	cmp	r3, #5
 8005c10:	f200 8178 	bhi.w	8005f04 <VL53L1_init_and_start_range+0x33c>
 8005c14:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005c18:	01260109 	.word	0x01260109
 8005c1c:	00f00141 	.word	0x00f00141
 8005c20:	015a01a8 	.word	0x015a01a8
		if ((pdev->dyn_cfg.system__sequence_config & (
 8005c24:	f894 31c5 	ldrb.w	r3, [r4, #453]	; 0x1c5
		pdev->gen_cfg.system__interrupt_config_gpio = 1 << 5;
 8005c28:	2220      	movs	r2, #32
			pdev->gen_cfg.system__interrupt_config_gpio;
 8005c2a:	f894 1186 	ldrb.w	r1, [r4, #390]	; 0x186
		if ((pdev->dyn_cfg.system__sequence_config & (
 8005c2e:	f013 0f60 	tst.w	r3, #96	; 0x60
		pdev->gen_cfg.system__interrupt_config_gpio = 1 << 5;
 8005c32:	f884 2186 	strb.w	r2, [r4, #390]	; 0x186
		pdev->low_power_auto_data.saved_interrupt_config =
 8005c36:	f884 12e7 	strb.w	r1, [r4, #743]	; 0x2e7
		if ((pdev->dyn_cfg.system__sequence_config & (
 8005c3a:	f000 80d8 	beq.w	8005dee <VL53L1_init_and_start_range+0x226>
			pdev->customer.algo__part_to_part_range_offset_mm = 0x0;
 8005c3e:	2200      	movs	r2, #0
 8005c40:	f8d4 02e4 	ldr.w	r0, [r4, #740]	; 0x2e4
		if (device_config_level <
 8005c44:	2e04      	cmp	r6, #4
 8005c46:	4bad      	ldr	r3, [pc, #692]	; (8005efc <VL53L1_init_and_start_range+0x334>)
 8005c48:	f8a4 2054 	strh.w	r2, [r4, #84]	; 0x54
 8005c4c:	ea03 0300 	and.w	r3, r3, r0
 8005c50:	d8d9      	bhi.n	8005c06 <VL53L1_init_and_start_range+0x3e>
	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8005c52:	4aab      	ldr	r2, [pc, #684]	; (8005f00 <VL53L1_init_and_start_range+0x338>)
 8005c54:	4293      	cmp	r3, r2
 8005c56:	d01a      	beq.n	8005c8e <VL53L1_init_and_start_range+0xc6>
 8005c58:	234d      	movs	r3, #77	; 0x4d
 8005c5a:	2037      	movs	r0, #55	; 0x37
 8005c5c:	f64f 76f4 	movw	r6, #65524	; 0xfff4
 8005c60:	2501      	movs	r5, #1
 8005c62:	9307      	str	r3, [sp, #28]
 8005c64:	2317      	movs	r3, #23
 8005c66:	f04f 0b64 	mov.w	fp, #100	; 0x64
 8005c6a:	9500      	str	r5, [sp, #0]
 8005c6c:	9306      	str	r3, [sp, #24]
 8005c6e:	2300      	movs	r3, #0
 8005c70:	46a9      	mov	r9, r5
 8005c72:	46aa      	mov	sl, r5
 8005c74:	46a8      	mov	r8, r5
 8005c76:	277b      	movs	r7, #123	; 0x7b
 8005c78:	e9cd 3004 	strd	r3, r0, [sp, #16]
 8005c7c:	2376      	movs	r3, #118	; 0x76
 8005c7e:	e9cd 6302 	strd	r6, r3, [sp, #8]
	case VL53L1_DEVICECONFIGLEVEL_FULL:
		i2c_index = VL53L1_STATIC_NVM_MANAGED_I2C_INDEX;
		break;
	case VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS:
		i2c_index = VL53L1_CUSTOMER_NVM_MANAGED_I2C_INDEX;
 8005c82:	230d      	movs	r3, #13
	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8005c84:	2605      	movs	r6, #5
		i2c_index = VL53L1_CUSTOMER_NVM_MANAGED_I2C_INDEX;
 8005c86:	9301      	str	r3, [sp, #4]
 8005c88:	e01a      	b.n	8005cc0 <VL53L1_init_and_start_range+0xf8>
 8005c8a:	f894 12e7 	ldrb.w	r1, [r4, #743]	; 0x2e7
		pdev->gen_cfg.system__interrupt_config_gpio =
 8005c8e:	2359      	movs	r3, #89	; 0x59
 8005c90:	f04f 0e23 	mov.w	lr, #35	; 0x23
 8005c94:	2501      	movs	r5, #1
 8005c96:	f884 1186 	strb.w	r1, [r4, #390]	; 0x186
 8005c9a:	9307      	str	r3, [sp, #28]
 8005c9c:	2343      	movs	r3, #67	; 0x43
 8005c9e:	2100      	movs	r1, #0
 8005ca0:	f04f 0b70 	mov.w	fp, #112	; 0x70
 8005ca4:	46a9      	mov	r9, r5
 8005ca6:	46aa      	mov	sl, r5
 8005ca8:	46a8      	mov	r8, r5
 8005caa:	2787      	movs	r7, #135	; 0x87
		device_config_level = VL53L1_DEVICECONFIGLEVEL_FULL;
 8005cac:	2606      	movs	r6, #6
		pdev->gen_cfg.system__interrupt_config_gpio =
 8005cae:	9500      	str	r5, [sp, #0]
		i2c_index = VL53L1_STATIC_NVM_MANAGED_I2C_INDEX;
 8005cb0:	9501      	str	r5, [sp, #4]
		pdev->gen_cfg.system__interrupt_config_gpio =
 8005cb2:	e9cd 3e05 	strd	r3, lr, [sp, #20]
 8005cb6:	230c      	movs	r3, #12
 8005cb8:	9304      	str	r3, [sp, #16]
 8005cba:	2382      	movs	r3, #130	; 0x82
 8005cbc:	e9cd 1302 	strd	r1, r3, [sp, #8]

	/* Initialize buffer */

	pbuffer = &buffer[0];
	for (i = 0 ; i < i2c_buffer_size_bytes ; i++) {
		*pbuffer++ = 0;
 8005cc0:	1e7a      	subs	r2, r7, #1
 8005cc2:	2100      	movs	r1, #0
 8005cc4:	a808      	add	r0, sp, #32
 8005cc6:	b292      	uxth	r2, r2
 8005cc8:	3201      	adds	r2, #1
 8005cca:	f014 fee6 	bl	801aa9a <memset>
	}

	/* Build I2C buffer */

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_FULL &&
 8005cce:	2e05      	cmp	r6, #5
 8005cd0:	d87a      	bhi.n	8005dc8 <VL53L1_init_and_start_range+0x200>
 8005cd2:	2201      	movs	r2, #1
	VL53L1_Error status = VL53L1_ERROR_NONE;
 8005cd4:	2000      	movs	r0, #0
				pstatic_nvm,
				VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS &&
 8005cd6:	f1b8 0f00 	cmp.w	r8, #0
 8005cda:	d14a      	bne.n	8005d72 <VL53L1_init_and_start_range+0x1aa>
				pcustomer_nvm,
				VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_STATIC_ONWARDS &&
 8005cdc:	f1ba 0f00 	cmp.w	sl, #0
 8005ce0:	d00c      	beq.n	8005cfc <VL53L1_init_and_start_range+0x134>
 8005ce2:	b15a      	cbz	r2, 8005cfc <VL53L1_init_and_start_range+0x134>
		status == VL53L1_ERROR_NONE) {

		i2c_buffer_offset_bytes = \
			VL53L1_STATIC_CONFIG_I2C_INDEX - i2c_index;

		status =
 8005ce4:	9b06      	ldr	r3, [sp, #24]
 8005ce6:	aa08      	add	r2, sp, #32
 8005ce8:	2120      	movs	r1, #32
 8005cea:	f504 70b2 	add.w	r0, r4, #356	; 0x164
 8005cee:	4413      	add	r3, r2
 8005cf0:	461a      	mov	r2, r3
 8005cf2:	f002 f889 	bl	8007e08 <VL53L1_i2c_encode_static_config>
 8005cf6:	fab0 f280 	clz	r2, r0
 8005cfa:	0952      	lsrs	r2, r2, #5
				pstatic,
				VL53L1_STATIC_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_GENERAL_ONWARDS &&
 8005cfc:	f1b9 0f00 	cmp.w	r9, #0
 8005d00:	d00c      	beq.n	8005d1c <VL53L1_init_and_start_range+0x154>
 8005d02:	b15a      	cbz	r2, 8005d1c <VL53L1_init_and_start_range+0x154>
		status == VL53L1_ERROR_NONE) {

		i2c_buffer_offset_bytes =
				VL53L1_GENERAL_CONFIG_I2C_INDEX - i2c_index;

		status =
 8005d04:	9b05      	ldr	r3, [sp, #20]
 8005d06:	aa08      	add	r2, sp, #32
 8005d08:	2116      	movs	r1, #22
 8005d0a:	f504 70c2 	add.w	r0, r4, #388	; 0x184
 8005d0e:	4413      	add	r3, r2
 8005d10:	461a      	mov	r2, r3
 8005d12:	f002 f8e7 	bl	8007ee4 <VL53L1_i2c_encode_general_config>
 8005d16:	fab0 f280 	clz	r2, r0
 8005d1a:	0952      	lsrs	r2, r2, #5
				pgeneral,
				VL53L1_GENERAL_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_TIMING_ONWARDS &&
 8005d1c:	9b00      	ldr	r3, [sp, #0]
 8005d1e:	b163      	cbz	r3, 8005d3a <VL53L1_init_and_start_range+0x172>
 8005d20:	b15a      	cbz	r2, 8005d3a <VL53L1_init_and_start_range+0x172>
		status == VL53L1_ERROR_NONE) {

		i2c_buffer_offset_bytes = \
				VL53L1_TIMING_CONFIG_I2C_INDEX - i2c_index;

		status =
 8005d22:	9b07      	ldr	r3, [sp, #28]
 8005d24:	aa08      	add	r2, sp, #32
 8005d26:	2117      	movs	r1, #23
 8005d28:	f504 70ce 	add.w	r0, r4, #412	; 0x19c
 8005d2c:	4413      	add	r3, r2
 8005d2e:	461a      	mov	r2, r3
 8005d30:	f002 f91e 	bl	8007f70 <VL53L1_i2c_encode_timing_config>
 8005d34:	fab0 f280 	clz	r2, r0
 8005d38:	0952      	lsrs	r2, r2, #5
				ptiming,
				VL53L1_TIMING_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_DYNAMIC_ONWARDS &&
 8005d3a:	b1b5      	cbz	r5, 8005d6a <VL53L1_init_and_start_range+0x1a2>
 8005d3c:	b1aa      	cbz	r2, 8005d6a <VL53L1_init_and_start_range+0x1a2>

		i2c_buffer_offset_bytes = \
			VL53L1_DYNAMIC_CONFIG_I2C_INDEX - i2c_index;

		/* If in back to back mode, use GPH ID from cfg_state */
		if ((psystem->system__mode_start &
 8005d3e:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8005d42:	069b      	lsls	r3, r3, #26
 8005d44:	d509      	bpl.n	8005d5a <VL53L1_init_and_start_range+0x192>
			VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK) ==
			VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK) {
			pdynamic->system__grouped_parameter_hold_0 = pstate->cfg_gph_id | 0x01;
 8005d46:	f894 202e 	ldrb.w	r2, [r4, #46]	; 0x2e
 8005d4a:	f042 0301 	orr.w	r3, r2, #1
			pdynamic->system__grouped_parameter_hold_1 = pstate->cfg_gph_id | 0x01;
			pdynamic->system__grouped_parameter_hold   = pstate->cfg_gph_id;
 8005d4e:	f884 21c6 	strb.w	r2, [r4, #454]	; 0x1c6
			pdynamic->system__grouped_parameter_hold_0 = pstate->cfg_gph_id | 0x01;
 8005d52:	f884 31b4 	strb.w	r3, [r4, #436]	; 0x1b4
			pdynamic->system__grouped_parameter_hold_1 = pstate->cfg_gph_id | 0x01;
 8005d56:	f884 31c0 	strb.w	r3, [r4, #448]	; 0x1c0
		}
		status =
 8005d5a:	ab08      	add	r3, sp, #32
 8005d5c:	2112      	movs	r1, #18
 8005d5e:	f504 70da 	add.w	r0, r4, #436	; 0x1b4
 8005d62:	eb03 020b 	add.w	r2, r3, fp
 8005d66:	f002 f947 	bl	8007ff8 <VL53L1_i2c_encode_dynamic_config>
				pdynamic,
				VL53L1_DYNAMIC_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (status == VL53L1_ERROR_NONE) {
 8005d6a:	b178      	cbz	r0, 8005d8c <VL53L1_init_and_start_range+0x1c4>
		status = VL53L1_update_ll_driver_cfg_state(Dev);

	LOG_FUNCTION_END(status);

	return status;
}
 8005d6c:	b049      	add	sp, #292	; 0x124
 8005d6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status =
 8005d72:	9b04      	ldr	r3, [sp, #16]
 8005d74:	aa08      	add	r2, sp, #32
 8005d76:	2117      	movs	r1, #23
 8005d78:	f104 0042 	add.w	r0, r4, #66	; 0x42
 8005d7c:	4413      	add	r3, r2
 8005d7e:	461a      	mov	r2, r3
 8005d80:	f001 ff9e 	bl	8007cc0 <VL53L1_i2c_encode_customer_nvm_managed>
 8005d84:	fab0 f280 	clz	r2, r0
 8005d88:	0952      	lsrs	r2, r2, #5
 8005d8a:	e7a7      	b.n	8005cdc <VL53L1_init_and_start_range+0x114>
		status =
 8005d8c:	aa08      	add	r2, sp, #32
 8005d8e:	9b03      	ldr	r3, [sp, #12]
 8005d90:	2105      	movs	r1, #5
 8005d92:	f504 70e4 	add.w	r0, r4, #456	; 0x1c8
 8005d96:	4413      	add	r3, r2
 8005d98:	461a      	mov	r2, r3
 8005d9a:	f002 f96f 	bl	800807c <VL53L1_i2c_encode_system_control>
	if (status == VL53L1_ERROR_NONE) {
 8005d9e:	2800      	cmp	r0, #0
 8005da0:	d1e4      	bne.n	8005d6c <VL53L1_init_and_start_range+0x1a4>
		status =
 8005da2:	463b      	mov	r3, r7
 8005da4:	aa08      	add	r2, sp, #32
 8005da6:	9901      	ldr	r1, [sp, #4]
 8005da8:	4620      	mov	r0, r4
 8005daa:	f002 fbd5 	bl	8008558 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE)
 8005dae:	2800      	cmp	r0, #0
 8005db0:	d1dc      	bne.n	8005d6c <VL53L1_init_and_start_range+0x1a4>
		status = VL53L1_update_ll_driver_rd_state(Dev);
 8005db2:	4620      	mov	r0, r4
 8005db4:	f001 fc34 	bl	8007620 <VL53L1_update_ll_driver_rd_state>
	if (status == VL53L1_ERROR_NONE)
 8005db8:	2800      	cmp	r0, #0
 8005dba:	d1d7      	bne.n	8005d6c <VL53L1_init_and_start_range+0x1a4>
		status = VL53L1_update_ll_driver_cfg_state(Dev);
 8005dbc:	4620      	mov	r0, r4
 8005dbe:	f001 fcab 	bl	8007718 <VL53L1_update_ll_driver_cfg_state>
}
 8005dc2:	b049      	add	sp, #292	; 0x124
 8005dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status =
 8005dc8:	9b02      	ldr	r3, [sp, #8]
 8005dca:	aa08      	add	r2, sp, #32
 8005dcc:	210b      	movs	r1, #11
 8005dce:	f504 70ac 	add.w	r0, r4, #344	; 0x158
 8005dd2:	4413      	add	r3, r2
 8005dd4:	461a      	mov	r2, r3
 8005dd6:	f001 ff0b 	bl	8007bf0 <VL53L1_i2c_encode_static_nvm_managed>
 8005dda:	fab0 f280 	clz	r2, r0
 8005dde:	0952      	lsrs	r2, r2, #5
 8005de0:	ea08 0802 	and.w	r8, r8, r2
	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS &&
 8005de4:	f1b8 0f00 	cmp.w	r8, #0
 8005de8:	f43f af78 	beq.w	8005cdc <VL53L1_init_and_start_range+0x114>
 8005dec:	e7c1      	b.n	8005d72 <VL53L1_init_and_start_range+0x1aa>
				pdev->customer.mm_config__outer_offset_mm * 4;
 8005dee:	f8b4 2058 	ldrh.w	r2, [r4, #88]	; 0x58
 8005df2:	0092      	lsls	r2, r2, #2
 8005df4:	b212      	sxth	r2, r2
 8005df6:	e723      	b.n	8005c40 <VL53L1_init_and_start_range+0x78>
	switch (device_config_level) {
 8005df8:	2300      	movs	r3, #0
 8005dfa:	2236      	movs	r2, #54	; 0x36
 8005dfc:	f64f 71dd 	movw	r1, #65501	; 0xffdd
 8005e00:	2501      	movs	r5, #1
 8005e02:	9306      	str	r3, [sp, #24]
 8005e04:	4698      	mov	r8, r3
 8005e06:	9207      	str	r2, [sp, #28]
 8005e08:	f64f 73e9 	movw	r3, #65513	; 0xffe9
 8005e0c:	2220      	movs	r2, #32
 8005e0e:	f04f 0b4d 	mov.w	fp, #77	; 0x4d
 8005e12:	9500      	str	r5, [sp, #0]
 8005e14:	46a9      	mov	r9, r5
 8005e16:	46aa      	mov	sl, r5
 8005e18:	2764      	movs	r7, #100	; 0x64
 8005e1a:	e9cd 3204 	strd	r3, r2, [sp, #16]
 8005e1e:	235f      	movs	r3, #95	; 0x5f
 8005e20:	e9cd 1302 	strd	r1, r3, [sp, #8]
		i2c_index = VL53L1_STATIC_CONFIG_I2C_INDEX;
 8005e24:	2324      	movs	r3, #36	; 0x24
 8005e26:	9301      	str	r3, [sp, #4]
 8005e28:	e74a      	b.n	8005cc0 <VL53L1_init_and_start_range+0xf8>
		break;
 8005e2a:	f64f 73b3 	movw	r3, #65459	; 0xffb3
 8005e2e:	f64f 7ee9 	movw	lr, #65513	; 0xffe9
 8005e32:	f64f 7190 	movw	r1, #65424	; 0xff90
 8005e36:	f04f 0b00 	mov.w	fp, #0
 8005e3a:	2717      	movs	r7, #23
 8005e3c:	2501      	movs	r5, #1
 8005e3e:	f8cd b000 	str.w	fp, [sp]
 8005e42:	46d9      	mov	r9, fp
 8005e44:	46da      	mov	sl, fp
 8005e46:	46d8      	mov	r8, fp
 8005e48:	e9cd 3e06 	strd	r3, lr, [sp, #24]
 8005e4c:	f64f 73d3 	movw	r3, #65491	; 0xffd3
 8005e50:	9305      	str	r3, [sp, #20]
 8005e52:	f64f 739c 	movw	r3, #65436	; 0xff9c
 8005e56:	9304      	str	r3, [sp, #16]
 8005e58:	2312      	movs	r3, #18
 8005e5a:	e9cd 1302 	strd	r1, r3, [sp, #8]
		i2c_index = VL53L1_DYNAMIC_CONFIG_I2C_INDEX;
 8005e5e:	2371      	movs	r3, #113	; 0x71
 8005e60:	9301      	str	r3, [sp, #4]
		break;
 8005e62:	e72d      	b.n	8005cc0 <VL53L1_init_and_start_range+0xf8>
		break;
 8005e64:	2300      	movs	r3, #0
 8005e66:	f64f 70ea 	movw	r0, #65514	; 0xffea
 8005e6a:	f64f 77a7 	movw	r7, #65447	; 0xffa7
 8005e6e:	2501      	movs	r5, #1
 8005e70:	4699      	mov	r9, r3
 8005e72:	9307      	str	r3, [sp, #28]
 8005e74:	4698      	mov	r8, r3
 8005e76:	f64f 73b3 	movw	r3, #65459	; 0xffb3
 8005e7a:	f64f 72ca 	movw	r2, #65482	; 0xffca
 8005e7e:	f04f 0b17 	mov.w	fp, #23
 8005e82:	46ca      	mov	sl, r9
 8005e84:	9500      	str	r5, [sp, #0]
 8005e86:	9206      	str	r2, [sp, #24]
 8005e88:	e9cd 3004 	strd	r3, r0, [sp, #16]
 8005e8c:	2329      	movs	r3, #41	; 0x29
 8005e8e:	e9cd 7302 	strd	r7, r3, [sp, #8]
		i2c_index = VL53L1_TIMING_CONFIG_I2C_INDEX;
 8005e92:	235a      	movs	r3, #90	; 0x5a
		break;
 8005e94:	272e      	movs	r7, #46	; 0x2e
		i2c_index = VL53L1_TIMING_CONFIG_I2C_INDEX;
 8005e96:	9301      	str	r3, [sp, #4]
		break;
 8005e98:	e712      	b.n	8005cc0 <VL53L1_init_and_start_range+0xf8>
		break;
 8005e9a:	2300      	movs	r3, #0
 8005e9c:	2216      	movs	r2, #22
 8005e9e:	2501      	movs	r5, #1
 8005ea0:	2744      	movs	r7, #68	; 0x44
 8005ea2:	9305      	str	r3, [sp, #20]
 8005ea4:	469a      	mov	sl, r3
 8005ea6:	4698      	mov	r8, r3
 8005ea8:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 8005eac:	9207      	str	r2, [sp, #28]
 8005eae:	f64f 72bd 	movw	r2, #65469	; 0xffbd
 8005eb2:	9306      	str	r3, [sp, #24]
 8005eb4:	f64f 73c9 	movw	r3, #65481	; 0xffc9
 8005eb8:	46a9      	mov	r9, r5
 8005eba:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
 8005ebe:	9304      	str	r3, [sp, #16]
 8005ec0:	233f      	movs	r3, #63	; 0x3f
 8005ec2:	e9cd 5700 	strd	r5, r7, [sp]
 8005ec6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8005eca:	e6f9      	b.n	8005cc0 <VL53L1_init_and_start_range+0xf8>
	switch (device_config_level) {
 8005ecc:	2359      	movs	r3, #89	; 0x59
 8005ece:	2743      	movs	r7, #67	; 0x43
 8005ed0:	2501      	movs	r5, #1
 8005ed2:	f04f 0c00 	mov.w	ip, #0
 8005ed6:	9307      	str	r3, [sp, #28]
 8005ed8:	2323      	movs	r3, #35	; 0x23
 8005eda:	f04f 0b70 	mov.w	fp, #112	; 0x70
 8005ede:	9500      	str	r5, [sp, #0]
 8005ee0:	9306      	str	r3, [sp, #24]
 8005ee2:	230c      	movs	r3, #12
 8005ee4:	46a9      	mov	r9, r5
 8005ee6:	46aa      	mov	sl, r5
 8005ee8:	46a8      	mov	r8, r5
		i2c_index = VL53L1_STATIC_NVM_MANAGED_I2C_INDEX;
 8005eea:	9501      	str	r5, [sp, #4]
	switch (device_config_level) {
 8005eec:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8005ef0:	2382      	movs	r3, #130	; 0x82
 8005ef2:	2787      	movs	r7, #135	; 0x87
 8005ef4:	e9cd c302 	strd	ip, r3, [sp, #8]
 8005ef8:	e6e2      	b.n	8005cc0 <VL53L1_init_and_start_range+0xf8>
 8005efa:	bf00      	nop
 8005efc:	00ffff00 	.word	0x00ffff00
 8005f00:	00010100 	.word	0x00010100
 8005f04:	2e04      	cmp	r6, #4
		break;
 8005f06:	f64f 70a1 	movw	r0, #65441	; 0xffa1
 8005f0a:	f64f 7c7e 	movw	ip, #65406	; 0xff7e
 8005f0e:	f64f 7bee 	movw	fp, #65518	; 0xffee
 8005f12:	bf94      	ite	ls
 8005f14:	f04f 0800 	movls.w	r8, #0
 8005f18:	f04f 0801 	movhi.w	r8, #1
 8005f1c:	2e03      	cmp	r6, #3
 8005f1e:	f04f 0705 	mov.w	r7, #5
 8005f22:	bf94      	ite	ls
 8005f24:	f04f 0a00 	movls.w	sl, #0
 8005f28:	f04f 0a01 	movhi.w	sl, #1
 8005f2c:	2e02      	cmp	r6, #2
 8005f2e:	bf94      	ite	ls
 8005f30:	f04f 0900 	movls.w	r9, #0
 8005f34:	f04f 0901 	movhi.w	r9, #1
 8005f38:	2e01      	cmp	r6, #1
 8005f3a:	bf94      	ite	ls
 8005f3c:	2300      	movls	r3, #0
 8005f3e:	2301      	movhi	r3, #1
 8005f40:	1c35      	adds	r5, r6, #0
 8005f42:	9300      	str	r3, [sp, #0]
 8005f44:	f64f 73d7 	movw	r3, #65495	; 0xffd7
 8005f48:	bf18      	it	ne
 8005f4a:	2501      	movne	r5, #1
 8005f4c:	9307      	str	r3, [sp, #28]
 8005f4e:	f64f 73c1 	movw	r3, #65473	; 0xffc1
 8005f52:	e9cd 3005 	strd	r3, r0, [sp, #20]
 8005f56:	f64f 738a 	movw	r3, #65418	; 0xff8a
 8005f5a:	9304      	str	r3, [sp, #16]
 8005f5c:	2300      	movs	r3, #0
 8005f5e:	e9cd c302 	strd	ip, r3, [sp, #8]
		i2c_index = VL53L1_SYSTEM_CONTROL_I2C_INDEX;
 8005f62:	2383      	movs	r3, #131	; 0x83
 8005f64:	9301      	str	r3, [sp, #4]
		break;
 8005f66:	e6ab      	b.n	8005cc0 <VL53L1_init_and_start_range+0xf8>
	switch (device_config_level) {
 8005f68:	234d      	movs	r3, #77	; 0x4d
 8005f6a:	2137      	movs	r1, #55	; 0x37
 8005f6c:	f64f 70f4 	movw	r0, #65524	; 0xfff4
 8005f70:	2501      	movs	r5, #1
 8005f72:	9307      	str	r3, [sp, #28]
 8005f74:	2317      	movs	r3, #23
 8005f76:	f04f 0b64 	mov.w	fp, #100	; 0x64
 8005f7a:	9500      	str	r5, [sp, #0]
 8005f7c:	9306      	str	r3, [sp, #24]
 8005f7e:	2300      	movs	r3, #0
 8005f80:	46a9      	mov	r9, r5
 8005f82:	46aa      	mov	sl, r5
 8005f84:	46a8      	mov	r8, r5
 8005f86:	277b      	movs	r7, #123	; 0x7b
 8005f88:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8005f8c:	2376      	movs	r3, #118	; 0x76
 8005f8e:	e9cd 0302 	strd	r0, r3, [sp, #8]
		i2c_index = VL53L1_CUSTOMER_NVM_MANAGED_I2C_INDEX;
 8005f92:	230d      	movs	r3, #13
 8005f94:	9301      	str	r3, [sp, #4]
 8005f96:	e693      	b.n	8005cc0 <VL53L1_init_and_start_range+0xf8>

08005f98 <VL53L1_get_device_results>:

	LOG_FUNCTION_START("");

	/* Determine multi byte read transaction size */

	switch (device_results_level) {
 8005f98:	2901      	cmp	r1, #1

VL53L1_Error VL53L1_get_device_results(
	VL53L1_DEV                    Dev,
	VL53L1_DeviceResultsLevel     device_results_level,
	VL53L1_range_results_t       *prange_results)
{
 8005f9a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005f9e:	460e      	mov	r6, r1
 8005fa0:	b0c1      	sub	sp, #260	; 0x104
 8005fa2:	4604      	mov	r4, r0
 8005fa4:	4690      	mov	r8, r2
	VL53L1_LLDriverData_t *pdev =
			VL53L1DevStructGetLLDriverHandle(Dev);
	VL53L1_LLDriverResults_t *pres =
			VL53L1DevStructGetLLResultsHandle(Dev);

	VL53L1_range_results_t   *presults = &(pres->range_results);
 8005fa6:	f500 773d 	add.w	r7, r0, #756	; 0x2f4
	switch (device_results_level) {
 8005faa:	f000 810c 	beq.w	80061c6 <VL53L1_get_device_results+0x22e>
 8005fae:	2902      	cmp	r1, #2
		status =
 8005fb0:	46e9      	mov	r9, sp
 8005fb2:	f04f 0188 	mov.w	r1, #136	; 0x88
 8005fb6:	bf0c      	ite	eq
 8005fb8:	2386      	moveq	r3, #134	; 0x86
 8005fba:	232c      	movne	r3, #44	; 0x2c
 8005fbc:	464a      	mov	r2, r9
 8005fbe:	f002 faf3 	bl	80085a8 <VL53L1_ReadMulti>
	if (device_results_level >= VL53L1_DEVICERESULTSLEVEL_FULL &&
 8005fc2:	2e01      	cmp	r6, #1
		status == VL53L1_ERROR_NONE) {
 8005fc4:	fab0 f380 	clz	r3, r0
 8005fc8:	4605      	mov	r5, r0
 8005fca:	ea4f 1353 	mov.w	r3, r3, lsr #5
	if (device_results_level >= VL53L1_DEVICERESULTSLEVEL_FULL &&
 8005fce:	d90b      	bls.n	8005fe8 <VL53L1_get_device_results+0x50>
 8005fd0:	b153      	cbz	r3, 8005fe8 <VL53L1_get_device_results+0x50>
		status =
 8005fd2:	f504 722b 	add.w	r2, r4, #684	; 0x2ac
 8005fd6:	f10d 014e 	add.w	r1, sp, #78	; 0x4e
 8005fda:	2038      	movs	r0, #56	; 0x38
 8005fdc:	f002 f934 	bl	8008248 <VL53L1_i2c_decode_debug_results>
 8005fe0:	fab0 f380 	clz	r3, r0
 8005fe4:	4605      	mov	r5, r0
 8005fe6:	095b      	lsrs	r3, r3, #5
	if (device_results_level >= VL53L1_DEVICERESULTSLEVEL_UPTO_CORE &&
 8005fe8:	b106      	cbz	r6, 8005fec <VL53L1_get_device_results+0x54>
 8005fea:	b98b      	cbnz	r3, 8006010 <VL53L1_get_device_results+0x78>
	if (status == VL53L1_ERROR_NONE) {
 8005fec:	b1cd      	cbz	r5, 8006022 <VL53L1_get_device_results+0x8a>
 8005fee:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
	presults->rd_device_state  = pdev->ll_state.rd_device_state;

	/* copy internal structure to supplied output pointer */

	memcpy(
 8005ff2:	4639      	mov	r1, r7
 8005ff4:	f894 0030 	ldrb.w	r0, [r4, #48]	; 0x30
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 8005ff8:	f884 22f4 	strb.w	r2, [r4, #756]	; 0x2f4
	memcpy(
 8005ffc:	2284      	movs	r2, #132	; 0x84
	presults->rd_device_state  = pdev->ll_state.rd_device_state;
 8005ffe:	f884 02f5 	strb.w	r0, [r4, #757]	; 0x2f5
	memcpy(
 8006002:	4640      	mov	r0, r8
 8006004:	f014 fd25 	bl	801aa52 <memcpy>
#endif

	LOG_FUNCTION_END(status);

	return status;
}
 8006008:	4628      	mov	r0, r5
 800600a:	b041      	add	sp, #260	; 0x104
 800600c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		status =
 8006010:	f504 7222 	add.w	r2, r4, #648	; 0x288
 8006014:	a90b      	add	r1, sp, #44	; 0x2c
 8006016:	2021      	movs	r0, #33	; 0x21
 8006018:	f002 f8da 	bl	80081d0 <VL53L1_i2c_decode_core_results>
 800601c:	4605      	mov	r5, r0
	if (status == VL53L1_ERROR_NONE) {
 800601e:	2d00      	cmp	r5, #0
 8006020:	d1e5      	bne.n	8005fee <VL53L1_get_device_results+0x56>
		status =
 8006022:	4649      	mov	r1, r9
 8006024:	f504 72e7 	add.w	r2, r4, #462	; 0x1ce
 8006028:	202c      	movs	r0, #44	; 0x2c
 800602a:	f002 f841 	bl	80080b0 <VL53L1_i2c_decode_system_results>
	if (status == VL53L1_ERROR_NONE)
 800602e:	4605      	mov	r5, r0
 8006030:	2800      	cmp	r0, #0
 8006032:	d1dc      	bne.n	8005fee <VL53L1_get_device_results+0x56>

	LOG_FUNCTION_START("");

	/* copy results */

	presults->stream_count    = psys->result__stream_count;
 8006034:	f894 61d1 	ldrb.w	r6, [r4, #465]	; 0x1d1
 8006038:	f894 21cf 	ldrb.w	r2, [r4, #463]	; 0x1cf

	pdata = &(presults->data[0]);

	for (i = 0 ; i < 2 ; i++) {

		pdata->range_id     = i;
 800603c:	f884 02f8 	strb.w	r0, [r4, #760]	; 0x2f8
		pdata->time_stamp   = 0;
 8006040:	f8c4 02fc 	str.w	r0, [r4, #764]	; 0x2fc
 8006044:	f002 021f 	and.w	r2, r2, #31
	presults->stream_count    = psys->result__stream_count;
 8006048:	f884 62f6 	strb.w	r6, [r4, #758]	; 0x2f6
		VL53L1_copy_sys_and_core_results_to_range_results(
 800604c:	f8b4 509c 	ldrh.w	r5, [r4, #156]	; 0x9c

		if ((psys->result__stream_count == 0) &&
 8006050:	2e00      	cmp	r6, #0
 8006052:	f000 80c3 	beq.w	80061dc <VL53L1_get_device_results+0x244>

		switch (i) {

		case 0:

			if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM1)
 8006056:	f894 31d0 	ldrb.w	r3, [r4, #464]	; 0x1d0
		if ((psys->result__stream_count == 0) &&
 800605a:	4611      	mov	r1, r2
			if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM1)
 800605c:	2b07      	cmp	r3, #7
 800605e:	f884 1336 	strb.w	r1, [r4, #822]	; 0x336
 8006062:	f000 80c6 	beq.w	80061f2 <VL53L1_get_device_results+0x25a>
				pdata->actual_effective_spads =
					psys->result__mm_inner_actual_effective_spads_sd0;
			else if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM2)
 8006066:	2b08      	cmp	r3, #8
				pdata->actual_effective_spads =
						psys->result__mm_outer_actual_effective_spads_sd0;
			else
				pdata->actual_effective_spads =
 8006068:	bf14      	ite	ne
 800606a:	f8b4 31d2 	ldrhne.w	r3, [r4, #466]	; 0x1d2
				pdata->actual_effective_spads =
 800606e:	f8b4 31e2 	ldrheq.w	r3, [r4, #482]	; 0x1e2
 8006072:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
			/* End Patch_SigmaEstimateAccuracyImprovement */

			pdata->median_phase =
				psys->result__phase_sd0;

			range_mm =
 8006076:	f8b4 11dc 	ldrh.w	r1, [r4, #476]	; 0x1dc
			pdata->sigma_mm = (uint16_t)tmpu32;
 800607a:	f64f 73ff 	movw	r3, #65535	; 0xffff
			tmpu32 = ((uint32_t)psys->result__sigma_sd0 << 5);
 800607e:	f8b4 01d8 	ldrh.w	r0, [r4, #472]	; 0x1d8
				(int32_t)psys->result__final_crosstalk_corrected_range_mm_sd0;

			/* apply correction gain */
			range_mm *= gain_factor;
 8006082:	fb01 f105 	mul.w	r1, r1, r5
			pdata->peak_signal_count_rate_mcps =
 8006086:	f8b4 e1de 	ldrh.w	lr, [r4, #478]	; 0x1de
			tmpu32 = ((uint32_t)psys->result__sigma_sd0 << 5);
 800608a:	0140      	lsls	r0, r0, #5
			pdata->avg_signal_count_rate_mcps =
 800608c:	f8b4 c1e4 	ldrh.w	ip, [r4, #484]	; 0x1e4
			range_mm += 0x0400;
 8006090:	f501 6180 	add.w	r1, r1, #1024	; 0x400
			pdata->peak_signal_count_rate_mcps =
 8006094:	f8a4 e324 	strh.w	lr, [r4, #804]	; 0x324
			pdata->sigma_mm = (uint16_t)tmpu32;
 8006098:	4298      	cmp	r0, r3
			pdata->avg_signal_count_rate_mcps =
 800609a:	f8a4 c326 	strh.w	ip, [r4, #806]	; 0x326
			range_mm /= 0x0800;
 800609e:	ea4f 21e1 	mov.w	r1, r1, asr #11
			pdata->sigma_mm = (uint16_t)tmpu32;
 80060a2:	bf28      	it	cs
 80060a4:	4618      	movcs	r0, r3
		pdata->range_id     = i;
 80060a6:	2301      	movs	r3, #1

			pdata->median_range_mm = (int16_t)range_mm;
 80060a8:	f8a4 1334 	strh.w	r1, [r4, #820]	; 0x334
		pdata->range_id     = i;
 80060ac:	f884 3338 	strb.w	r3, [r4, #824]	; 0x338
			pdata->ambient_count_rate_mcps =
 80060b0:	f8b4 11d6 	ldrh.w	r1, [r4, #470]	; 0x1d6
			pdata->median_phase =
 80060b4:	f8b4 31da 	ldrh.w	r3, [r4, #474]	; 0x1da
			pdata->ambient_count_rate_mcps =
 80060b8:	f8a4 1328 	strh.w	r1, [r4, #808]	; 0x328
			pdata->median_phase =
 80060bc:	f8a4 3332 	strh.w	r3, [r4, #818]	; 0x332

			pdata->ranging_total_events =
 80060c0:	f8d4 128c 	ldr.w	r1, [r4, #652]	; 0x28c
				pcore->result_core__ranging_total_events_sd0;
			pdata->signal_total_events =
 80060c4:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
			pdata->sigma_mm = (uint16_t)tmpu32;
 80060c8:	f8a4 0330 	strh.w	r0, [r4, #816]	; 0x330
		pdata->time_stamp   = 0;
 80060cc:	2000      	movs	r0, #0
			pdata->ranging_total_events =
 80060ce:	f8c4 131c 	str.w	r1, [r4, #796]	; 0x31c
			pdata->signal_total_events =
 80060d2:	f8c4 3320 	str.w	r3, [r4, #800]	; 0x320
				pcore->result_core__signal_total_events_sd0;
			pdata->total_periods_elapsed =
 80060d6:	f8d4 1294 	ldr.w	r1, [r4, #660]	; 0x294
				pcore->result_core__total_periods_elapsed_sd0;
			pdata->ambient_window_events =
 80060da:	f8d4 3288 	ldr.w	r3, [r4, #648]	; 0x288
			pdata->total_periods_elapsed =
 80060de:	f8c4 130c 	str.w	r1, [r4, #780]	; 0x30c
			pdata->ambient_window_events =
 80060e2:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
		pdata->time_stamp   = 0;
 80060e6:	f8c4 033c 	str.w	r0, [r4, #828]	; 0x33c
		if ((psys->result__stream_count == 0) &&
 80060ea:	2e00      	cmp	r6, #0
 80060ec:	f040 8086 	bne.w	80061fc <VL53L1_get_device_results+0x264>
 80060f0:	2a09      	cmp	r2, #9
 80060f2:	bf14      	ite	ne
 80060f4:	4611      	movne	r1, r2
 80060f6:	2113      	moveq	r1, #19
			/* End Patch_SigmaEstimateAccuracyImprovement */

			pdata->median_phase =
				psys->result__phase_sd1;

			range_mm =
 80060f8:	f8b4 31f0 	ldrh.w	r3, [r4, #496]	; 0x1f0
			pdata->avg_signal_count_rate_mcps =
 80060fc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8006100:	f884 1376 	strb.w	r1, [r4, #886]	; 0x376
				(int32_t)psys->result__final_crosstalk_corrected_range_mm_sd1;

			/* apply correction gain */
			range_mm *= gain_factor;
 8006104:	fb03 f305 	mul.w	r3, r3, r5
			tmpu32 = ((uint32_t)psys->result__sigma_sd1 << 5);
 8006108:	f8b4 11ec 	ldrh.w	r1, [r4, #492]	; 0x1ec
			pdata->avg_signal_count_rate_mcps =
 800610c:	f8a4 0366 	strh.w	r0, [r4, #870]	; 0x366
			tmpu32 = ((uint32_t)psys->result__sigma_sd1 << 5);
 8006110:	0149      	lsls	r1, r1, #5
			range_mm += 0x0400;
 8006112:	f503 6380 	add.w	r3, r3, #1024	; 0x400
			pdata->actual_effective_spads =
 8006116:	f8b4 51e6 	ldrh.w	r5, [r4, #486]	; 0x1e6
			pdata->sigma_mm = (uint16_t)tmpu32;
 800611a:	4281      	cmp	r1, r0
			range_mm /= 0x0800;
 800611c:	ea4f 23e3 	mov.w	r3, r3, asr #11
			pdata->actual_effective_spads =
 8006120:	f8a4 5348 	strh.w	r5, [r4, #840]	; 0x348
			pdata->sigma_mm = (uint16_t)tmpu32;
 8006124:	bf28      	it	cs
 8006126:	4601      	movcs	r1, r0

			pdata->median_range_mm = (int16_t)range_mm;
 8006128:	f8a4 3374 	strh.w	r3, [r4, #884]	; 0x374
			pdata->peak_signal_count_rate_mcps =
 800612c:	f8b4 31e8 	ldrh.w	r3, [r4, #488]	; 0x1e8

	/* Update Global Device Status for results
	 * - Default to no update
	 */

	presults->device_status = VL53L1_DEVICEERROR_NOUPDATE;
 8006130:	2000      	movs	r0, #0
			pdata->sigma_mm = (uint16_t)tmpu32;
 8006132:	f8a4 1370 	strh.w	r1, [r4, #880]	; 0x370
 8006136:	2a11      	cmp	r2, #17
			pdata->ambient_count_rate_mcps =
 8006138:	f8b4 11ea 	ldrh.w	r1, [r4, #490]	; 0x1ea
			pdata->peak_signal_count_rate_mcps =
 800613c:	f8a4 3364 	strh.w	r3, [r4, #868]	; 0x364
			pdata->median_phase =
 8006140:	f8b4 31ee 	ldrh.w	r3, [r4, #494]	; 0x1ee
			pdata->ambient_count_rate_mcps =
 8006144:	f8a4 1368 	strh.w	r1, [r4, #872]	; 0x368
			pdata->median_phase =
 8006148:	f8a4 3372 	strh.w	r3, [r4, #882]	; 0x372
			pdata->ranging_total_events =
 800614c:	f8d4 129c 	ldr.w	r1, [r4, #668]	; 0x29c
			pdata->signal_total_events =
 8006150:	f8d4 32a0 	ldr.w	r3, [r4, #672]	; 0x2a0
			pdata->ranging_total_events =
 8006154:	f8c4 135c 	str.w	r1, [r4, #860]	; 0x35c
			pdata->signal_total_events =
 8006158:	f8c4 3360 	str.w	r3, [r4, #864]	; 0x360
			pdata->total_periods_elapsed  =
 800615c:	f8d4 12a4 	ldr.w	r1, [r4, #676]	; 0x2a4
			pdata->ambient_window_events =
 8006160:	f8d4 3298 	ldr.w	r3, [r4, #664]	; 0x298
			pdata->total_periods_elapsed  =
 8006164:	f8c4 134c 	str.w	r1, [r4, #844]	; 0x34c
			pdata->ambient_window_events =
 8006168:	f8c4 3358 	str.w	r3, [r4, #856]	; 0x358
	presults->device_status = VL53L1_DEVICEERROR_NOUPDATE;
 800616c:	f884 02f7 	strb.w	r0, [r4, #759]	; 0x2f7
 8006170:	f894 12e5 	ldrb.w	r1, [r4, #741]	; 0x2e5
 8006174:	d808      	bhi.n	8006188 <VL53L1_get_device_results+0x1f0>
 8006176:	2301      	movs	r3, #1
 8006178:	4d2d      	ldr	r5, [pc, #180]	; (8006230 <VL53L1_get_device_results+0x298>)
 800617a:	4093      	lsls	r3, r2
 800617c:	422b      	tst	r3, r5
 800617e:	d003      	beq.n	8006188 <VL53L1_get_device_results+0x1f0>
	case VL53L1_DEVICEERROR_VCSELWATCHDOGTESTFAILURE:
	case VL53L1_DEVICEERROR_NOVHVVALUEFOUND:
	case VL53L1_DEVICEERROR_USERROICLIP:
	case VL53L1_DEVICEERROR_MULTCLIPFAIL:

		presults->device_status = (psys->result__range_status &
 8006180:	f884 22f7 	strb.w	r2, [r4, #759]	; 0x2f7
				VL53L1_RANGE_STATUS__RANGE_STATUS_MASK);

		presults->data[0].range_status = VL53L1_DEVICEERROR_NOUPDATE;
 8006184:	f884 0336 	strb.w	r0, [r4, #822]	; 0x336
	if (pdev->low_power_auto_data.is_low_power_auto_mode == 1) {
 8006188:	2901      	cmp	r1, #1
 800618a:	d107      	bne.n	800619c <VL53L1_get_device_results+0x204>
			(pdev->low_power_auto_data.low_power_auto_range_count == 0)) {
 800618c:	f894 32e6 	ldrb.w	r3, [r4, #742]	; 0x2e6
		if ((status == VL53L1_ERROR_NONE) &&
 8006190:	b3b3      	cbz	r3, 8006200 <VL53L1_get_device_results+0x268>
		} else if ((status == VL53L1_ERROR_NONE) &&
 8006192:	2b01      	cmp	r3, #1
 8006194:	d102      	bne.n	800619c <VL53L1_get_device_results+0x204>
			pdev->low_power_auto_data.low_power_auto_range_count = 2;
 8006196:	2302      	movs	r3, #2
 8006198:	f884 32e6 	strb.w	r3, [r4, #742]	; 0x2e6
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 800619c:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
	memcpy(
 80061a0:	4639      	mov	r1, r7
	presults->rd_device_state  = pdev->ll_state.rd_device_state;
 80061a2:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
	memcpy(
 80061a6:	4640      	mov	r0, r8
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 80061a8:	f884 22f4 	strb.w	r2, [r4, #756]	; 0x2f4
	memcpy(
 80061ac:	2284      	movs	r2, #132	; 0x84
	presults->rd_device_state  = pdev->ll_state.rd_device_state;
 80061ae:	f884 32f5 	strb.w	r3, [r4, #757]	; 0x2f5
	memcpy(
 80061b2:	f014 fc4e 	bl	801aa52 <memcpy>
		status = VL53L1_check_ll_driver_rd_state(Dev);
 80061b6:	4620      	mov	r0, r4
 80061b8:	f001 fa80 	bl	80076bc <VL53L1_check_ll_driver_rd_state>
 80061bc:	4605      	mov	r5, r0
}
 80061be:	4628      	mov	r0, r5
 80061c0:	b041      	add	sp, #260	; 0x104
 80061c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		status =
 80061c6:	46e9      	mov	r9, sp
 80061c8:	234d      	movs	r3, #77	; 0x4d
 80061ca:	2188      	movs	r1, #136	; 0x88
 80061cc:	464a      	mov	r2, r9
 80061ce:	f002 f9eb 	bl	80085a8 <VL53L1_ReadMulti>
 80061d2:	fab0 f380 	clz	r3, r0
 80061d6:	4605      	mov	r5, r0
 80061d8:	095b      	lsrs	r3, r3, #5
 80061da:	e705      	b.n	8005fe8 <VL53L1_get_device_results+0x50>
		if ((psys->result__stream_count == 0) &&
 80061dc:	2a09      	cmp	r2, #9
			if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM1)
 80061de:	f894 31d0 	ldrb.w	r3, [r4, #464]	; 0x1d0
		if ((psys->result__stream_count == 0) &&
 80061e2:	bf14      	ite	ne
 80061e4:	4611      	movne	r1, r2
 80061e6:	2113      	moveq	r1, #19
			if (psys->result__report_status == VL53L1_DEVICEREPORTSTATUS_MM1)
 80061e8:	2b07      	cmp	r3, #7
 80061ea:	f884 1336 	strb.w	r1, [r4, #822]	; 0x336
 80061ee:	f47f af3a 	bne.w	8006066 <VL53L1_get_device_results+0xce>
				pdata->actual_effective_spads =
 80061f2:	f8b4 31e0 	ldrh.w	r3, [r4, #480]	; 0x1e0
 80061f6:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80061fa:	e73c      	b.n	8006076 <VL53L1_get_device_results+0xde>
		if ((psys->result__stream_count == 0) &&
 80061fc:	4611      	mov	r1, r2
 80061fe:	e77b      	b.n	80060f8 <VL53L1_get_device_results+0x160>
			status = VL53L1_low_power_auto_setup_manual_calibration(
 8006200:	4620      	mov	r0, r4
			pdev->low_power_auto_data.low_power_auto_range_count = 1;
 8006202:	2601      	movs	r6, #1
			status = VL53L1_low_power_auto_setup_manual_calibration(
 8006204:	f001 fcb2 	bl	8007b6c <VL53L1_low_power_auto_setup_manual_calibration>
 8006208:	f894 2030 	ldrb.w	r2, [r4, #48]	; 0x30
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 800620c:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
			status = VL53L1_low_power_auto_setup_manual_calibration(
 8006210:	4605      	mov	r5, r0
	presults->rd_device_state  = pdev->ll_state.rd_device_state;
 8006212:	f884 22f5 	strb.w	r2, [r4, #757]	; 0x2f5
	memcpy(
 8006216:	4639      	mov	r1, r7
 8006218:	4640      	mov	r0, r8
			pdev->low_power_auto_data.low_power_auto_range_count = 1;
 800621a:	f884 62e6 	strb.w	r6, [r4, #742]	; 0x2e6
	memcpy(
 800621e:	2284      	movs	r2, #132	; 0x84
	presults->cfg_device_state = pdev->ll_state.cfg_device_state;
 8006220:	f884 32f4 	strb.w	r3, [r4, #756]	; 0x2f4
	memcpy(
 8006224:	f014 fc15 	bl	801aa52 <memcpy>
	if (status == VL53L1_ERROR_NONE)
 8006228:	2d00      	cmp	r5, #0
 800622a:	d0c4      	beq.n	80061b6 <VL53L1_get_device_results+0x21e>
 800622c:	e6ec      	b.n	8006008 <VL53L1_get_device_results+0x70>
 800622e:	bf00      	nop
 8006230:	0002200e 	.word	0x0002200e

08006234 <VL53L1_get_tuning_parm>:

	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	switch (tuning_parm_key) {
 8006234:	f5a1 4100 	sub.w	r1, r1, #32768	; 0x8000
 8006238:	2938      	cmp	r1, #56	; 0x38
 800623a:	f200 8158 	bhi.w	80064ee <VL53L1_get_tuning_parm+0x2ba>
 800623e:	e8df f011 	tbh	[pc, r1, lsl #1]
 8006242:	0151      	.short	0x0151
 8006244:	0147014c 	.word	0x0147014c
 8006248:	013d0142 	.word	0x013d0142
 800624c:	01330138 	.word	0x01330138
 8006250:	0129012e 	.word	0x0129012e
 8006254:	011f0124 	.word	0x011f0124
 8006258:	0115011a 	.word	0x0115011a
 800625c:	010b0110 	.word	0x010b0110
 8006260:	01010106 	.word	0x01010106
 8006264:	00f700fc 	.word	0x00f700fc
 8006268:	00ed00f2 	.word	0x00ed00f2
 800626c:	00e300e8 	.word	0x00e300e8
 8006270:	00d900de 	.word	0x00d900de
 8006274:	00cf00d4 	.word	0x00cf00d4
 8006278:	00c500ca 	.word	0x00c500ca
 800627c:	00bb00c0 	.word	0x00bb00c0
 8006280:	00b100b6 	.word	0x00b100b6
 8006284:	00a700ac 	.word	0x00a700ac
 8006288:	009d00a2 	.word	0x009d00a2
 800628c:	00930098 	.word	0x00930098
 8006290:	0089008e 	.word	0x0089008e
 8006294:	007f0084 	.word	0x007f0084
 8006298:	0075007a 	.word	0x0075007a
 800629c:	006b0070 	.word	0x006b0070
 80062a0:	00610066 	.word	0x00610066
 80062a4:	0057005c 	.word	0x0057005c
 80062a8:	004d0052 	.word	0x004d0052
 80062ac:	00430048 	.word	0x00430048
 80062b0:	0039003e 	.word	0x0039003e
	case VL53L1_TUNINGPARM_LOWPOWERAUTO_MM_CONFIG_TIMEOUT_US:
		*ptuning_parm_value =
				(int32_t)pdev->tuning_parms.tp_mm_timeout_lpa_us;
	break;
	case VL53L1_TUNINGPARM_LOWPOWERAUTO_RANGE_CONFIG_TIMEOUT_US:
		*ptuning_parm_value =
 80062b4:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80062b8:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80062ba:	6013      	str	r3, [r2, #0]
				(int32_t)pdev->tuning_parms.tp_range_timeout_lpa_us;
	break;
 80062bc:	4770      	bx	lr
		*ptuning_parm_value =
 80062be:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80062c2:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80062c4:	6013      	str	r3, [r2, #0]
	break;
 80062c6:	4770      	bx	lr
				(int32_t)pdev->low_power_auto_data.vhv_loop_bound;
 80062c8:	f890 32e4 	ldrb.w	r3, [r0, #740]	; 0x2e4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80062cc:	2000      	movs	r0, #0
				(int32_t)pdev->low_power_auto_data.vhv_loop_bound;
 80062ce:	6013      	str	r3, [r2, #0]
	break;
 80062d0:	4770      	bx	lr
		*ptuning_parm_value =
 80062d2:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80062d6:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80062d8:	6013      	str	r3, [r2, #0]
	break;
 80062da:	4770      	bx	lr
		*ptuning_parm_value =
 80062dc:	f8d0 30e4 	ldr.w	r3, [r0, #228]	; 0xe4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80062e0:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80062e2:	6013      	str	r3, [r2, #0]
	break;
 80062e4:	4770      	bx	lr
		*ptuning_parm_value =
 80062e6:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80062ea:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80062ec:	6013      	str	r3, [r2, #0]
	break;
 80062ee:	4770      	bx	lr
		*ptuning_parm_value =
 80062f0:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80062f4:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80062f6:	6013      	str	r3, [r2, #0]
	break;
 80062f8:	4770      	bx	lr
		*ptuning_parm_value =
 80062fa:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80062fe:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8006300:	6013      	str	r3, [r2, #0]
	break;
 8006302:	4770      	bx	lr
		*ptuning_parm_value =
 8006304:	f8d0 30d0 	ldr.w	r3, [r0, #208]	; 0xd0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006308:	2000      	movs	r0, #0
		*ptuning_parm_value =
 800630a:	6013      	str	r3, [r2, #0]
	break;
 800630c:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_dss_target_timed_mcps;
 800630e:	f8b0 30cc 	ldrh.w	r3, [r0, #204]	; 0xcc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006312:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_dss_target_timed_mcps;
 8006314:	6013      	str	r3, [r2, #0]
	break;
 8006316:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_dss_target_lite_mcps;
 8006318:	f8b0 30ca 	ldrh.w	r3, [r0, #202]	; 0xca
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800631c:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_dss_target_lite_mcps;
 800631e:	6013      	str	r3, [r2, #0]
	break;
 8006320:	4770      	bx	lr
				(int32_t)pdev->ssc_cfg.rate_limit_mcps;
 8006322:	f8b0 3128 	ldrh.w	r3, [r0, #296]	; 0x128
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006326:	2000      	movs	r0, #0
				(int32_t)pdev->ssc_cfg.rate_limit_mcps;
 8006328:	6013      	str	r3, [r2, #0]
	break;
 800632a:	4770      	bx	lr
				(int32_t)pdev->ssc_cfg.vcsel_start;
 800632c:	f890 3122 	ldrb.w	r3, [r0, #290]	; 0x122
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006330:	2000      	movs	r0, #0
				(int32_t)pdev->ssc_cfg.vcsel_start;
 8006332:	6013      	str	r3, [r2, #0]
	break;
 8006334:	4770      	bx	lr
				(int32_t)pdev->ssc_cfg.vcsel_period;
 8006336:	f890 3121 	ldrb.w	r3, [r0, #289]	; 0x121
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800633a:	2000      	movs	r0, #0
				(int32_t)pdev->ssc_cfg.vcsel_period;
 800633c:	6013      	str	r3, [r2, #0]
	break;
 800633e:	4770      	bx	lr
				(int32_t)pdev->offsetcal_cfg.mm2_num_of_samples;
 8006340:	f890 3156 	ldrb.w	r3, [r0, #342]	; 0x156
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006344:	2000      	movs	r0, #0
				(int32_t)pdev->offsetcal_cfg.mm2_num_of_samples;
 8006346:	6013      	str	r3, [r2, #0]
	break;
 8006348:	4770      	bx	lr
			(int32_t)pdev->offsetcal_cfg.mm1_num_of_samples;
 800634a:	f890 3155 	ldrb.w	r3, [r0, #341]	; 0x155
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800634e:	2000      	movs	r0, #0
			(int32_t)pdev->offsetcal_cfg.mm1_num_of_samples;
 8006350:	6013      	str	r3, [r2, #0]
	break;
 8006352:	4770      	bx	lr
				(int32_t)pdev->offsetcal_cfg.pre_num_of_samples;
 8006354:	f890 3154 	ldrb.w	r3, [r0, #340]	; 0x154
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006358:	2000      	movs	r0, #0
				(int32_t)pdev->offsetcal_cfg.pre_num_of_samples;
 800635a:	6013      	str	r3, [r2, #0]
	break;
 800635c:	4770      	bx	lr
		*ptuning_parm_value =
 800635e:	f8d0 314c 	ldr.w	r3, [r0, #332]	; 0x14c
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006362:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8006364:	6013      	str	r3, [r2, #0]
	break;
 8006366:	4770      	bx	lr
		*ptuning_parm_value =
 8006368:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800636c:	2000      	movs	r0, #0
		*ptuning_parm_value =
 800636e:	6013      	str	r3, [r2, #0]
	break;
 8006370:	4770      	bx	lr
		*ptuning_parm_value =
 8006372:	f8d0 3148 	ldr.w	r3, [r0, #328]	; 0x148
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006376:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8006378:	6013      	str	r3, [r2, #0]
	break;
 800637a:	4770      	bx	lr
				(int32_t)pdev->offsetcal_cfg.dss_config__target_total_rate_mcps;;
 800637c:	f8b0 3144 	ldrh.w	r3, [r0, #324]	; 0x144
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006380:	2000      	movs	r0, #0
				(int32_t)pdev->offsetcal_cfg.dss_config__target_total_rate_mcps;;
 8006382:	6013      	str	r3, [r2, #0]
	break;
 8006384:	4770      	bx	lr
				(int32_t)pdev->refspadchar.max_count_rate_limit_mcps;
 8006386:	f8b0 311c 	ldrh.w	r3, [r0, #284]	; 0x11c
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800638a:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.max_count_rate_limit_mcps;
 800638c:	6013      	str	r3, [r2, #0]
	break;
 800638e:	4770      	bx	lr
				(int32_t)pdev->refspadchar.min_count_rate_limit_mcps;
 8006390:	f8b0 311a 	ldrh.w	r3, [r0, #282]	; 0x11a
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006394:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.min_count_rate_limit_mcps;
 8006396:	6013      	str	r3, [r2, #0]
	break;
 8006398:	4770      	bx	lr
				(int32_t)pdev->refspadchar.target_count_rate_mcps;
 800639a:	f8b0 3118 	ldrh.w	r3, [r0, #280]	; 0x118
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800639e:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.target_count_rate_mcps;
 80063a0:	6013      	str	r3, [r2, #0]
	break;
 80063a2:	4770      	bx	lr
		*ptuning_parm_value =
 80063a4:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80063a8:	2000      	movs	r0, #0
		*ptuning_parm_value =
 80063aa:	6013      	str	r3, [r2, #0]
	break;
 80063ac:	4770      	bx	lr
				(int32_t)pdev->refspadchar.vcsel_period;
 80063ae:	f890 3111 	ldrb.w	r3, [r0, #273]	; 0x111
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80063b2:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.vcsel_period;
 80063b4:	6013      	str	r3, [r2, #0]
	break;
 80063b6:	4770      	bx	lr
				(int32_t)pdev->refspadchar.device_test_mode;
 80063b8:	f890 3110 	ldrb.w	r3, [r0, #272]	; 0x110
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80063bc:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.device_test_mode;
 80063be:	6013      	str	r3, [r2, #0]
	break;
 80063c0:	4770      	bx	lr
				(int32_t)pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound;
 80063c2:	f890 3160 	ldrb.w	r3, [r0, #352]	; 0x160
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80063c6:	2000      	movs	r0, #0
				(int32_t)pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound;
 80063c8:	6013      	str	r3, [r2, #0]
	break;
 80063ca:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_timed_seed_cfg;
 80063cc:	f890 30c6 	ldrb.w	r3, [r0, #198]	; 0xc6
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80063d0:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_timed_seed_cfg;
 80063d2:	6013      	str	r3, [r2, #0]
	break;
 80063d4:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_short;
 80063d6:	f890 30af 	ldrb.w	r3, [r0, #175]	; 0xaf
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80063da:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_short;
 80063dc:	6013      	str	r3, [r2, #0]
	break;
 80063de:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_med;
 80063e0:	f890 30ae 	ldrb.w	r3, [r0, #174]	; 0xae
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80063e4:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_med;
 80063e6:	6013      	str	r3, [r2, #0]
	break;
 80063e8:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_long;
 80063ea:	f890 30ad 	ldrb.w	r3, [r0, #173]	; 0xad
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80063ee:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_long;
 80063f0:	6013      	str	r3, [r2, #0]
	break;
 80063f2:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_short;
 80063f4:	f890 30ac 	ldrb.w	r3, [r0, #172]	; 0xac
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80063f8:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_short;
 80063fa:	6013      	str	r3, [r2, #0]
	break;
 80063fc:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_med;
 80063fe:	f890 30ab 	ldrb.w	r3, [r0, #171]	; 0xab
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006402:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_med;
 8006404:	6013      	str	r3, [r2, #0]
	break;
 8006406:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_long;
 8006408:	f890 30aa 	ldrb.w	r3, [r0, #170]	; 0xaa
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800640c:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_long;
 800640e:	6013      	str	r3, [r2, #0]
	break;
 8006410:	4770      	bx	lr
				(int32_t)pdev->xtalk_cfg.lite_mode_crosstalk_margin_kcps;
 8006412:	f9b0 313e 	ldrsh.w	r3, [r0, #318]	; 0x13e
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006416:	2000      	movs	r0, #0
				(int32_t)pdev->xtalk_cfg.lite_mode_crosstalk_margin_kcps;
 8006418:	6013      	str	r3, [r2, #0]
	break;
 800641a:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_first_order_select;
 800641c:	f890 30c8 	ldrb.w	r3, [r0, #200]	; 0xc8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006420:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_first_order_select;
 8006422:	6013      	str	r3, [r2, #0]
	break;
 8006424:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_quantifier;
 8006426:	f890 30c7 	ldrb.w	r3, [r0, #199]	; 0xc7
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800642a:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_quantifier;
 800642c:	6013      	str	r3, [r2, #0]
	break;
 800642e:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_seed_cfg ;
 8006430:	f890 30c5 	ldrb.w	r3, [r0, #197]	; 0xc5
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006434:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_seed_cfg ;
 8006436:	6013      	str	r3, [r2, #0]
	break;
 8006438:	4770      	bx	lr
				(int32_t)pdev->xtalk_cfg.crosstalk_range_ignore_threshold_mult;
 800643a:	f890 3140 	ldrb.w	r3, [r0, #320]	; 0x140
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800643e:	2000      	movs	r0, #0
				(int32_t)pdev->xtalk_cfg.crosstalk_range_ignore_threshold_mult;
 8006440:	6013      	str	r3, [r2, #0]
	break;
 8006442:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_sigma_ref_mm;
 8006444:	f890 30c4 	ldrb.w	r3, [r0, #196]	; 0xc4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006448:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_sigma_ref_mm;
 800644a:	6013      	str	r3, [r2, #0]
	break;
 800644c:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_amb_width_ns;
 800644e:	f890 30c3 	ldrb.w	r3, [r0, #195]	; 0xc3
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006452:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_amb_width_ns;
 8006454:	6013      	str	r3, [r2, #0]
	break;
 8006456:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_pulse_width_ns;
 8006458:	f890 30c2 	ldrb.w	r3, [r0, #194]	; 0xc2
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800645c:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_pulse_width_ns;
 800645e:	6013      	str	r3, [r2, #0]
	break;
 8006460:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_short_min_count_rate_rtn_mcps;
 8006462:	f8b0 30c0 	ldrh.w	r3, [r0, #192]	; 0xc0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006466:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_short_min_count_rate_rtn_mcps;
 8006468:	6013      	str	r3, [r2, #0]
	break;
 800646a:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_med_min_count_rate_rtn_mcps;
 800646c:	f8b0 30be 	ldrh.w	r3, [r0, #190]	; 0xbe
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006470:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_med_min_count_rate_rtn_mcps;
 8006472:	6013      	str	r3, [r2, #0]
	break;
 8006474:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_long_min_count_rate_rtn_mcps;
 8006476:	f8b0 30bc 	ldrh.w	r3, [r0, #188]	; 0xbc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800647a:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_long_min_count_rate_rtn_mcps;
 800647c:	6013      	str	r3, [r2, #0]
	break;
 800647e:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_short_sigma_thresh_mm;
 8006480:	f8b0 30ba 	ldrh.w	r3, [r0, #186]	; 0xba
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006484:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_short_sigma_thresh_mm;
 8006486:	6013      	str	r3, [r2, #0]
	break;
 8006488:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_med_sigma_thresh_mm;
 800648a:	f8b0 30b8 	ldrh.w	r3, [r0, #184]	; 0xb8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800648e:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_med_sigma_thresh_mm;
 8006490:	6013      	str	r3, [r2, #0]
	break;
 8006492:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_long_sigma_thresh_mm;
 8006494:	f8b0 30b6 	ldrh.w	r3, [r0, #182]	; 0xb6
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006498:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_long_sigma_thresh_mm;
 800649a:	6013      	str	r3, [r2, #0]
	break;
 800649c:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_min_clip;
 800649e:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80064a2:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_min_clip;
 80064a4:	6013      	str	r3, [r2, #0]
	break;
 80064a6:	4770      	bx	lr
				(int32_t)pdev->gain_cal.standard_ranging_gain_factor;
 80064a8:	f8b0 309c 	ldrh.w	r3, [r0, #156]	; 0x9c
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80064ac:	2000      	movs	r0, #0
				(int32_t)pdev->gain_cal.standard_ranging_gain_factor;
 80064ae:	6013      	str	r3, [r2, #0]
	break;
 80064b0:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_cal_repeat_rate;
 80064b2:	f8b0 30b2 	ldrh.w	r3, [r0, #178]	; 0xb2
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80064b6:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_cal_repeat_rate;
 80064b8:	6013      	str	r3, [r2, #0]
	break;
 80064ba:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_phasecal_target;
 80064bc:	f890 30b1 	ldrb.w	r3, [r0, #177]	; 0xb1
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80064c0:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_phasecal_target;
 80064c2:	6013      	str	r3, [r2, #0]
	break;
 80064c4:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_consistency_lite_phase_tolerance;
 80064c6:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80064ca:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_consistency_lite_phase_tolerance;
 80064cc:	6013      	str	r3, [r2, #0]
	break;
 80064ce:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_tuning_parm_lld_version;
 80064d0:	f8b0 30a8 	ldrh.w	r3, [r0, #168]	; 0xa8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80064d4:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_tuning_parm_lld_version;
 80064d6:	6013      	str	r3, [r2, #0]
	break;
 80064d8:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_tuning_parm_key_table_version;
 80064da:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80064de:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_tuning_parm_key_table_version;
 80064e0:	6013      	str	r3, [r2, #0]
	break;
 80064e2:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_tuning_parm_version;
 80064e4:	f8b0 30a4 	ldrh.w	r3, [r0, #164]	; 0xa4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80064e8:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_tuning_parm_version;
 80064ea:	6013      	str	r3, [r2, #0]
	break;
 80064ec:	4770      	bx	lr


	default:
		*ptuning_parm_value = 0x7FFFFFFF;
 80064ee:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
		status = VL53L1_ERROR_INVALID_PARAMS;
 80064f2:	f06f 0003 	mvn.w	r0, #3
		*ptuning_parm_value = 0x7FFFFFFF;
 80064f6:	6013      	str	r3, [r2, #0]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 80064f8:	4770      	bx	lr
 80064fa:	bf00      	nop

080064fc <VL53L1_init_refspadchar_config_struct>:


#ifndef VL53L1_NOCALIB
VL53L1_Error VL53L1_init_refspadchar_config_struct(
	VL53L1_refspadchar_config_t   *pdata)
{
 80064fc:	b410      	push	{r4}
 80064fe:	4603      	mov	r3, r0
	 * target_count_rate_mcps    = 0x0A00 - 9.7 -> 20.0 Mcps
	 * min_count_rate_limit_mcps = 0x0500 - 9.7 -> 10.0 Mcps
	 * max_count_rate_limit_mcps = 0x1400 - 9.7 -> 40.0 Mcps
	 */

	pdata->device_test_mode =
 8006500:	f640 3408 	movw	r4, #2824	; 0xb08
			VL53L1_TUNINGPARM_REFSPADCHAR_DEVICE_TEST_MODE_DEFAULT;
	pdata->vcsel_period              =
			VL53L1_TUNINGPARM_REFSPADCHAR_VCSEL_PERIOD_DEFAULT;
	pdata->timeout_us                =
 8006504:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
			VL53L1_TUNINGPARM_REFSPADCHAR_PHASECAL_TIMEOUT_US_DEFAULT;
	pdata->target_count_rate_mcps    =
 8006508:	4905      	ldr	r1, [pc, #20]	; (8006520 <VL53L1_init_refspadchar_config_struct+0x24>)
			VL53L1_TUNINGPARM_REFSPADCHAR_TARGET_COUNT_RATE_MCPS_DEFAULT;
	pdata->min_count_rate_limit_mcps =
			VL53L1_TUNINGPARM_REFSPADCHAR_MIN_COUNTRATE_LIMIT_MCPS_DEFAULT;
	pdata->max_count_rate_limit_mcps =
 800650a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
	pdata->device_test_mode =
 800650e:	801c      	strh	r4, [r3, #0]
	pdata->timeout_us                =
 8006510:	6058      	str	r0, [r3, #4]
			VL53L1_TUNINGPARM_REFSPADCHAR_MAX_COUNTRATE_LIMIT_MCPS_DEFAULT;

	LOG_FUNCTION_END(status);

	return status;
}
 8006512:	2000      	movs	r0, #0
	pdata->target_count_rate_mcps    =
 8006514:	6099      	str	r1, [r3, #8]
	pdata->max_count_rate_limit_mcps =
 8006516:	819a      	strh	r2, [r3, #12]
}
 8006518:	f85d 4b04 	ldr.w	r4, [sp], #4
 800651c:	4770      	bx	lr
 800651e:	bf00      	nop
 8006520:	05000a00 	.word	0x05000a00

08006524 <VL53L1_init_ssc_config_struct>:


#ifndef VL53L1_NOCALIB
VL53L1_Error VL53L1_init_ssc_config_struct(
	VL53L1_ssc_config_t   *pdata)
{
 8006524:	4603      	mov	r3, r0

	/* VCSEL pulse width */
	pdata->vcsel_width  = 0x02;

	/* SSC timeout [us] */
	pdata->timeout_us   = 36000;
 8006526:	f648 41a0 	movw	r1, #36000	; 0x8ca0
	pdata->array_select = VL53L1_DEVICESSCARRAY_RTN;
 800652a:	4803      	ldr	r0, [pc, #12]	; (8006538 <VL53L1_init_ssc_config_struct+0x14>)

	/* SSC rate limit [Mcps]
	 * - 9.7 for VCSEL ON
	 * - 1.15 for VCSEL OFF
	 */
	pdata->rate_limit_mcps =
 800652c:	220c      	movs	r2, #12
	pdata->timeout_us   = 36000;
 800652e:	6059      	str	r1, [r3, #4]
	pdata->array_select = VL53L1_DEVICESSCARRAY_RTN;
 8006530:	6018      	str	r0, [r3, #0]
			VL53L1_TUNINGPARM_SPADMAP_RATE_LIMIT_MCPS_DEFAULT;

	LOG_FUNCTION_END(status);

	return status;
}
 8006532:	2000      	movs	r0, #0
	pdata->rate_limit_mcps =
 8006534:	811a      	strh	r2, [r3, #8]
}
 8006536:	4770      	bx	lr
 8006538:	020f1200 	.word	0x020f1200

0800653c <VL53L1_init_xtalk_config_struct>:


VL53L1_Error VL53L1_init_xtalk_config_struct(
	VL53L1_customer_nvm_managed_t *pnvm,
	VL53L1_xtalk_config_t   *pdata)
{
 800653c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	pdata->algo__crosstalk_compensation_plane_offset_kcps      =
		pnvm->algo__crosstalk_compensation_plane_offset_kcps;
	pdata->algo__crosstalk_compensation_x_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_x_plane_gradient_kcps;
	pdata->algo__crosstalk_compensation_y_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_y_plane_gradient_kcps;
 800653e:	f9b0 200e 	ldrsh.w	r2, [r0, #14]
	pdata->nvm_default__crosstalk_compensation_x_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_x_plane_gradient_kcps;
	pdata->nvm_default__crosstalk_compensation_y_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_y_plane_gradient_kcps;

	pdata->lite_mode_crosstalk_margin_kcps                     =
 8006542:	2700      	movs	r7, #0
		pnvm->algo__crosstalk_compensation_plane_offset_kcps;
 8006544:	8943      	ldrh	r3, [r0, #10]
			VL53L1_TUNINGPARM_LITE_XTALK_MARGIN_KCPS_DEFAULT;

	/* Default for Range Ignore Threshold Mult = 2.0 */

	pdata->crosstalk_range_ignore_threshold_mult =
 8006546:	2640      	movs	r6, #64	; 0x40
		pnvm->algo__crosstalk_compensation_x_plane_gradient_kcps;
 8006548:	f9b0 500c 	ldrsh.w	r5, [r0, #12]
 800654c:	68c4      	ldr	r4, [r0, #12]
	pdata->nvm_default__crosstalk_compensation_plane_offset_kcps      =
 800654e:	608b      	str	r3, [r1, #8]
	pdata->nvm_default__crosstalk_compensation_x_plane_gradient_kcps  =
 8006550:	818d      	strh	r5, [r1, #12]
	pdata->nvm_default__crosstalk_compensation_y_plane_gradient_kcps  =
 8006552:	81ca      	strh	r2, [r1, #14]
	pdata->lite_mode_crosstalk_margin_kcps                     =
 8006554:	824f      	strh	r7, [r1, #18]
	pdata->crosstalk_range_ignore_threshold_mult =
 8006556:	750e      	strb	r6, [r1, #20]
	pdata->algo__crosstalk_compensation_x_plane_gradient_kcps  =
 8006558:	e9c1 3400 	strd	r3, r4, [r1]
			VL53L1_TUNINGPARM_LITE_RIT_MULT_DEFAULT;

	if ((pdata->algo__crosstalk_compensation_plane_offset_kcps == 0x00)
 800655c:	b923      	cbnz	r3, 8006568 <VL53L1_init_xtalk_config_struct+0x2c>
		&& (pdata->algo__crosstalk_compensation_x_plane_gradient_kcps == 0x00)
		&& (pdata->algo__crosstalk_compensation_y_plane_gradient_kcps == 0x00))
 800655e:	b91c      	cbnz	r4, 8006568 <VL53L1_init_xtalk_config_struct+0x2c>
 8006560:	740c      	strb	r4, [r1, #16]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006562:	2000      	movs	r0, #0
		pdata->crosstalk_range_ignore_threshold_rate_mcps = 0;
 8006564:	82cc      	strh	r4, [r1, #22]
}
 8006566:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006568:	2001      	movs	r0, #1
 800656a:	460c      	mov	r4, r1
 800656c:	7408      	strb	r0, [r1, #16]
			VL53L1_calc_range_ignore_threshold(
 800656e:	4629      	mov	r1, r5
 8006570:	4618      	mov	r0, r3
 8006572:	2340      	movs	r3, #64	; 0x40
 8006574:	f001 f9e2 	bl	800793c <VL53L1_calc_range_ignore_threshold>
		pdata->crosstalk_range_ignore_threshold_rate_mcps =
 8006578:	82e0      	strh	r0, [r4, #22]
}
 800657a:	2000      	movs	r0, #0
 800657c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800657e:	bf00      	nop

08006580 <VL53L1_init_offset_cal_config_struct>:

#ifndef VL53L1_NOCALIB
VL53L1_Error VL53L1_init_offset_cal_config_struct(
	VL53L1_offsetcal_config_t   *pdata)
{
 8006580:	b430      	push	{r4, r5}
 8006582:	4603      	mov	r3, r0
	/* Preset Timeout and DSS defaults */

	pdata->dss_config__target_total_rate_mcps          =
			VL53L1_TUNINGPARM_OFFSET_CAL_DSS_RATE_MCPS_DEFAULT;
	/* 20.0 Mcps */
	pdata->phasecal_config_timeout_us                  =
 8006584:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
	pdata->dss_config__target_total_rate_mcps          =
 8006588:	f44f 6020 	mov.w	r0, #2560	; 0xa00
			VL53L1_TUNINGPARM_OFFSET_CAL_PHASECAL_TIMEOUT_US_DEFAULT;
	/* 1000 us */
	pdata->range_config_timeout_us                     =
			VL53L1_TUNINGPARM_OFFSET_CAL_RANGE_TIMEOUT_US_DEFAULT;
	/* 13000 us */
	pdata->mm_config_timeout_us                        =
 800658c:	f642 0408 	movw	r4, #10248	; 0x2808

	/* Init number of averaged samples */

	pdata->pre_num_of_samples                          =
			VL53L1_TUNINGPARM_OFFSET_CAL_PRE_SAMPLES_DEFAULT;
	pdata->mm1_num_of_samples                          =
 8006590:	2109      	movs	r1, #9
	pdata->phasecal_config_timeout_us                  =
 8006592:	f243 22c8 	movw	r2, #13000	; 0x32c8
	pdata->dss_config__target_total_rate_mcps          =
 8006596:	8018      	strh	r0, [r3, #0]
			VL53L1_TUNINGPARM_OFFSET_CAL_MM2_SAMPLES_DEFAULT;

	LOG_FUNCTION_END(status);

	return status;
}
 8006598:	2000      	movs	r0, #0
	pdata->phasecal_config_timeout_us                  =
 800659a:	605d      	str	r5, [r3, #4]
	pdata->mm_config_timeout_us                        =
 800659c:	821c      	strh	r4, [r3, #16]
	pdata->mm1_num_of_samples                          =
 800659e:	7499      	strb	r1, [r3, #18]
	pdata->range_config_timeout_us                     =
 80065a0:	e9c3 2202 	strd	r2, r2, [r3, #8]
}
 80065a4:	bc30      	pop	{r4, r5}
 80065a6:	4770      	bx	lr

080065a8 <VL53L1_init_tuning_parm_storage_struct>:
#endif

VL53L1_Error VL53L1_init_tuning_parm_storage_struct(
	VL53L1_tuning_parm_storage_t   *pdata)
{
 80065a8:	b4f0      	push	{r4, r5, r6, r7}
 80065aa:	4603      	mov	r3, r0
	 *
	 * - Custom overwrite possible from vl53l1_set_tuning_parms()
	 * - via tuning file input
	 */

	pdata->tp_tuning_parm_version              =
 80065ac:	4c1e      	ldr	r4, [pc, #120]	; (8006628 <VL53L1_init_tuning_parm_storage_struct+0x80>)
 80065ae:	481f      	ldr	r0, [pc, #124]	; (800662c <VL53L1_init_tuning_parm_storage_struct+0x84>)
			VL53L1_TUNINGPARM_VERSION_DEFAULT;
	pdata->tp_tuning_parm_key_table_version    =
			VL53L1_TUNINGPARM_KEY_TABLE_VERSION_DEFAULT;
	pdata->tp_tuning_parm_lld_version          =
			VL53L1_TUNINGPARM_LLD_VERSION_DEFAULT;
	pdata->tp_init_phase_rtn_lite_long         =
 80065b0:	f242 1102 	movw	r1, #8450	; 0x2102
	pdata->tp_tuning_parm_version              =
 80065b4:	605c      	str	r4, [r3, #4]
			VL53L1_TUNINGPARM_PHASECAL_TARGET_DEFAULT;
	pdata->tp_cal_repeat_rate                  =
			VL53L1_TUNINGPARM_LITE_CAL_REPEAT_RATE_DEFAULT;
	pdata->tp_lite_min_clip                    =
			VL53L1_TUNINGPARM_LITE_MIN_CLIP_MM_DEFAULT;
	pdata->tp_lite_long_sigma_thresh_mm        =
 80065b6:	f04f 16c0 	mov.w	r6, #12583104	; 0xc000c0
 80065ba:	4c1d      	ldr	r4, [pc, #116]	; (8006630 <VL53L1_init_tuning_parm_storage_struct+0x88>)
			VL53L1_TUNINGPARM_LITE_SIGMA_REF_MM_DEFAULT;
	pdata->tp_lite_seed_cfg                      =
			VL53L1_TUNINGPARM_LITE_SEED_CONFIG_DEFAULT;
	pdata->tp_timed_seed_cfg                     =
			VL53L1_TUNINGPARM_TIMED_SEED_CONFIG_DEFAULT;
	pdata->tp_lite_quantifier                    =
 80065bc:	2502      	movs	r5, #2
	pdata->tp_init_phase_rtn_lite_long         =
 80065be:	4a1d      	ldr	r2, [pc, #116]	; (8006634 <VL53L1_init_tuning_parm_storage_struct+0x8c>)
			VL53L1_TUNINGPARM_LITE_DSS_CONFIG_TARGET_TOTAL_RATE_MCPS_DEFAULT;
	pdata->tp_dss_target_timed_mcps              =
			VL53L1_TUNINGPARM_TIMED_DSS_CONFIG_TARGET_TOTAL_RATE_MCPS_DEFAULT;
	pdata->tp_phasecal_timeout_lite_us           =
			VL53L1_TUNINGPARM_LITE_PHASECAL_CONFIG_TIMEOUT_US;
	pdata->tp_phasecal_timeout_timed_us          =
 80065c0:	f44f 777a 	mov.w	r7, #1000	; 0x3e8
	pdata->tp_lite_long_sigma_thresh_mm        =
 80065c4:	f8c3 4012 	str.w	r4, [r3, #18]
 80065c8:	f5a4 0428 	sub.w	r4, r4, #11010048	; 0xa80000
	pdata->tp_init_phase_rtn_lite_long         =
 80065cc:	609a      	str	r2, [r3, #8]
	pdata->tp_dss_target_lite_mcps               =
 80065ce:	f04f 220a 	mov.w	r2, #167774720	; 0xa000a00
	pdata->tp_init_phase_rtn_lite_long         =
 80065d2:	60d9      	str	r1, [r3, #12]
	pdata->tp_phasecal_timeout_lite_us           =
 80065d4:	f248 0130 	movw	r1, #32816	; 0x8030
	pdata->tp_tuning_parm_version              =
 80065d8:	6018      	str	r0, [r3, #0]
	pdata->tp_timed_seed_cfg                     =
 80065da:	2001      	movs	r0, #1
	pdata->tp_lite_long_sigma_thresh_mm        =
 80065dc:	f8c3 4016 	str.w	r4, [r3, #22]
	pdata->tp_lite_sigma_est_pulse_width_ns      =
 80065e0:	4c15      	ldr	r4, [pc, #84]	; (8006638 <VL53L1_init_tuning_parm_storage_struct+0x90>)
	pdata->tp_timed_seed_cfg                     =
 80065e2:	f883 0022 	strb.w	r0, [r3, #34]	; 0x22
			VL53L1_TUNINGPARM_LITE_MM_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_mm_timeout_timed_us                =
			VL53L1_TUNINGPARM_TIMED_MM_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_range_timeout_lite_us              =
			VL53L1_TUNINGPARM_LITE_RANGE_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_range_timeout_timed_us             =
 80065e6:	f243 20c8 	movw	r0, #13000	; 0x32c8
	pdata->tp_lite_quantifier                    =
 80065ea:	f883 5023 	strb.w	r5, [r3, #35]	; 0x23
			VL53L1_TUNINGPARM_TIMED_RANGE_CONFIG_TIMEOUT_US_DEFAULT;

	/* Added for Patch_LowPowerAutoMode */

	pdata->tp_mm_timeout_lpa_us =
 80065ee:	f44f 752f 	mov.w	r5, #700	; 0x2bc
	pdata->tp_lite_sigma_est_pulse_width_ns      =
 80065f2:	f8c3 401e 	str.w	r4, [r3, #30]
			VL53L1_TUNINGPARM_LOWPOWERAUTO_MM_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_range_timeout_lpa_us =
 80065f6:	f44f 54fa 	mov.w	r4, #8000	; 0x1f40
	pdata->tp_lite_long_sigma_thresh_mm        =
 80065fa:	f8c3 601a 	str.w	r6, [r3, #26]
	pdata->tp_range_timeout_lite_us              =
 80065fe:	f24f 6618 	movw	r6, #63000	; 0xf618
	pdata->tp_dss_target_lite_mcps               =
 8006602:	f8c3 2026 	str.w	r2, [r3, #38]	; 0x26
	pdata->tp_cal_repeat_rate                  =
 8006606:	2200      	movs	r2, #0
	pdata->tp_phasecal_timeout_lite_us           =
 8006608:	62d9      	str	r1, [r3, #44]	; 0x2c
	pdata->tp_mm_timeout_lite_us                 =
 800660a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
	pdata->tp_phasecal_timeout_timed_us          =
 800660e:	631f      	str	r7, [r3, #48]	; 0x30
	pdata->tp_mm_timeout_lpa_us =
 8006610:	63dd      	str	r5, [r3, #60]	; 0x3c
	pdata->tp_range_timeout_lpa_us =
 8006612:	649c      	str	r4, [r3, #72]	; 0x48
	pdata->tp_cal_repeat_rate                  =
 8006614:	741a      	strb	r2, [r3, #16]
	pdata->tp_lite_first_order_select            =
 8006616:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
	pdata->tp_range_timeout_timed_us             =
 800661a:	e9c3 6010 	strd	r6, r0, [r3, #64]	; 0x40
	pdata->tp_mm_timeout_timed_us                =
 800661e:	e9c3 110d 	strd	r1, r1, [r3, #52]	; 0x34


	LOG_FUNCTION_END(status);

	return status;
}
 8006622:	4610      	mov	r0, r2
 8006624:	bcf0      	pop	{r4, r5, r6, r7}
 8006626:	4770      	bx	lr
 8006628:	0a0e8041 	.word	0x0a0e8041
 800662c:	80018003 	.word	0x80018003
 8006630:	01680168 	.word	0x01680168
 8006634:	060a0e06 	.word	0x060a0e06
 8006638:	02011008 	.word	0x02011008

0800663c <VL53L1_preset_mode_standard_ranging>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 800663c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006640:	9d08      	ldr	r5, [sp, #32]

	/* Static Configuration */

	/* dss_config__target_total_rate_mcps = 20.0 Mcps 9.7 fp */
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
	pstatic->debug__ctrl                                      = 0x00;
 8006642:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006644:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006648:	f8df c114 	ldr.w	ip, [pc, #276]	; 8006760 <VL53L1_preset_mode_standard_ranging+0x124>
 800664c:	4f3f      	ldr	r7, [pc, #252]	; (800674c <VL53L1_preset_mode_standard_ranging+0x110>)
	pstatic->sigma_estimator__effective_ambient_width_ns      =
			ptuning_parms->tp_lite_sigma_est_amb_width_ns;
	pstatic->sigma_estimator__sigma_ref_mm                    =
			ptuning_parms->tp_lite_sigma_ref_mm;
	/* Minimum allowable value of 1 - 0 disables the feature */
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800664e:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8006650:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;

	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;

	/* set RIT distance to 20 mm */
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006654:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006658:	f8c0 700e 	str.w	r7, [r0, #14]
			ptuning_parms->tp_consistency_lite_phase_tolerance;
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
	pstatic->sd_config__reset_stages_msb                      = 0x00;
	pstatic->sd_config__reset_stages_lsb                      = 0x00;

	pgeneral->gph_config__stream_count_update_value           = 0x00;
 800665c:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006660:	f8c0 4002 	str.w	r4, [r0, #2]
 8006664:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006668:	f8a0 e000 	strh.w	lr, [r0]
	 * 0 - disables
	 * 12-bit value -> 4095 max
	 */
	pgeneral->cal_config__repeat_rate                         =
			ptuning_parms->tp_cal_repeat_rate;
	pgeneral->global_config__vcsel_width                      = 0x02;
 800666c:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006670:	f895 801e 	ldrb.w	r8, [r5, #30]
 8006674:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006678:	f895 801f 	ldrb.w	r8, [r5, #31]
 800667c:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006680:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006684:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006686:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006688:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 800668a:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800668e:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006692:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006694:	f895 8010 	ldrb.w	r8, [r5, #16]
 8006698:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 800669c:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80066a0:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80066a2:	f880 801c 	strb.w	r8, [r0, #28]
			VL53L1_DEVICEDSSMODE__TARGET_RATE;
	/* format for threshold high and low is 9.7 fp */
	pgeneral->system__thresh_rate_high                        = 0x0000;
	pgeneral->system__thresh_rate_low                         = 0x0000;
	/* The format for manual effective spads is 8.8 -> 0x8C00 = 140.00 */
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80066a6:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80066aa:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80066ac:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__min_spads_limit                     = 0x01;

	/* Timing Configuration */

	/* Default timing of 2ms */
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80066ae:	f640 10f5 	movw	r0, #2549	; 0x9f5
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80066b2:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 80066b4:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80066b6:	f8a1 e006 	strh.w	lr, [r1, #6]

	/* Phase limit register formats = 5.3
	 * low   = 0x08 ->  1.0
	 * high  = 0x78 -> 15.0 -> 3.0m
	 */
	ptiming->range_config__valid_phase_low                    = 0x08;
 80066ba:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 80066be:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 80066c0:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 80066c2:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 80066c4:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80066c6:	4f22      	ldr	r7, [pc, #136]	; (8006750 <VL53L1_preset_mode_standard_ranging+0x114>)
	pgeneral->dss_config__roi_mode_control =
 80066c8:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80066ca:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 80066ce:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80066d0:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80066d4:	4f1f      	ldr	r7, [pc, #124]	; (8006754 <VL53L1_preset_mode_standard_ranging+0x118>)
 80066d6:	4920      	ldr	r1, [pc, #128]	; (8006758 <VL53L1_preset_mode_standard_ranging+0x11c>)
 80066d8:	8110      	strh	r0, [r2, #8]
	ptiming->range_config__valid_phase_high                   = 0x78;
 80066da:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80066dc:	6011      	str	r1, [r2, #0]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
	pdynamic->system__seed_config =
			ptuning_parms->tp_lite_seed_cfg;

	/* Timing A */
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 80066de:	f640 110b 	movw	r1, #2315	; 0x90b
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80066e2:	6057      	str	r7, [r2, #4]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 80066e4:	f8b5 801a 	ldrh.w	r8, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 80066e8:	f8b5 9014 	ldrh.w	r9, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 80066ec:	f8a2 800c 	strh.w	r8, [r2, #12]

	/* Below defaults will be overwritten by zone_cfg
	 * Spad no = 199 (0xC7)
	 * Spad no =  63 (0x3F)
	 */
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80066f0:	f04f 08c7 	mov.w	r8, #199	; 0xc7
	ptiming->range_config__sigma_thresh                       =
 80066f4:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__valid_phase_low                    = 0x08;
 80066f8:	f882 e00e 	strb.w	lr, [r2, #14]
	/* 16x16 ROI */
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;


	pdynamic->system__sequence_config                          = \
 80066fc:	f04f 0edb 	mov.w	lr, #219	; 0xdb
	ptiming->range_config__valid_phase_high                   = 0x78;
 8006700:	73d0      	strb	r0, [r2, #15]
			VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK;

	LOG_FUNCTION_END(status);

	return status;
}
 8006702:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8006704:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8006706:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006708:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 800670a:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 800670e:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8006710:	f895 2021 	ldrb.w	r2, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006714:	8119      	strh	r1, [r3, #8]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006716:	2102      	movs	r1, #2
	pdynamic->system__seed_config =
 8006718:	71da      	strb	r2, [r3, #7]
	pdynamic->sd_config__initial_phase_sd0                     =
 800671a:	79ea      	ldrb	r2, [r5, #7]
 800671c:	729a      	strb	r2, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 800671e:	7aaa      	ldrb	r2, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006720:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006722:	72da      	strb	r2, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8006724:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
	psystem->system__stream_count_ctrl                         = 0x00;
 8006728:	4a0c      	ldr	r2, [pc, #48]	; (800675c <VL53L1_preset_mode_standard_ranging+0x120>)
	pdynamic->sd_config__first_order_select =
 800672a:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 800672c:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006730:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 8006734:	739c      	strb	r4, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006736:	f883 800f 	strb.w	r8, [r3, #15]
	pdynamic->system__sequence_config                          = \
 800673a:	f883 e011 	strb.w	lr, [r3, #17]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 800673e:	7499      	strb	r1, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006740:	9b07      	ldr	r3, [sp, #28]
 8006742:	f8c3 2001 	str.w	r2, [r3, #1]
}
 8006746:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800674a:	bf00      	nop
 800674c:	00080200 	.word	0x00080200
 8006750:	01ff3800 	.word	0x01ff3800
 8006754:	010bcc01 	.word	0x010bcc01
 8006758:	20001a00 	.word	0x20001a00
 800675c:	21010100 	.word	0x21010100
 8006760:	02110000 	.word	0x02110000

08006764 <VL53L1_preset_mode_standard_ranging_short_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006764:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006768:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 800676a:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 800676c:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006770:	f8df c114 	ldr.w	ip, [pc, #276]	; 8006888 <VL53L1_preset_mode_standard_ranging_short_range+0x124>
 8006774:	4f40      	ldr	r7, [pc, #256]	; (8006878 <VL53L1_preset_mode_standard_ranging_short_range+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006776:	2601      	movs	r6, #1
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006778:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 800677c:	f04f 6e32 	mov.w	lr, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006780:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006784:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006788:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 800678c:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8006790:	f8c0 4002 	str.w	r4, [r0, #2]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006794:	f04f 09c7 	mov.w	r9, #199	; 0xc7
	pstatic->debug__ctrl                                      = 0x00;
 8006798:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 800679c:	f895 801e 	ldrb.w	r8, [r5, #30]
 80067a0:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80067a4:	f895 801f 	ldrb.w	r8, [r5, #31]
 80067a8:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80067ac:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 80067b0:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 80067b2:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80067b4:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80067b6:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80067b8:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80067bc:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_min_clip                             =
 80067c0:	f895 8010 	ldrb.w	r8, [r5, #16]
 80067c4:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80067c8:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80067cc:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80067ce:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80067d2:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80067d6:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80067d8:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80067da:	f8c1 e000 	str.w	lr, [r1]
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 80067de:	f64c 4e01 	movw	lr, #52225	; 0xcc01
	pgeneral->cal_config__repeat_rate                         =
 80067e2:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80067e4:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 80067e6:	8088      	strh	r0, [r1, #4]
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 80067e8:	20f5      	movs	r0, #245	; 0xf5
	pgeneral->phasecal_config__target                         =
 80067ea:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 80067ec:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 80067ee:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80067f0:	4f22      	ldr	r7, [pc, #136]	; (800687c <VL53L1_preset_mode_standard_ranging_short_range+0x118>)
	pgeneral->dss_config__roi_mode_control =
 80067f2:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80067f4:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 80067f8:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80067fa:	f8a1 8010 	strh.w	r8, [r1, #16]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 80067fe:	f04f 0802 	mov.w	r8, #2
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006802:	491f      	ldr	r1, [pc, #124]	; (8006880 <VL53L1_preset_mode_standard_ranging_short_range+0x11c>)
	ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 8006804:	71d6      	strb	r6, [r2, #7]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006806:	6011      	str	r1, [r2, #0]
	pdynamic->system__sequence_config                          = \
 8006808:	21db      	movs	r1, #219	; 0xdb
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 800680a:	f8a2 e004 	strh.w	lr, [r2, #4]
		 * min_count_rate_rtn_limit_mcps = 0x0080 ->  9.7fp ->  1.0 Mcps
		 * valid_phase_low               = 0x08 -> 5.3fp -> 1.0
		 * valid_phase_high              = 0x38 -> 5.3fp -> 7.0 -> 1.4m
		 */

		ptiming->range_config__vcsel_period_a                = 0x07;
 800680e:	f04f 0e07 	mov.w	lr, #7
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 8006812:	7210      	strb	r0, [r2, #8]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006814:	4620      	mov	r0, r4
	ptiming->system__fractional_enable                        = 0x00;
 8006816:	7514      	strb	r4, [r2, #20]
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8006818:	6114      	str	r4, [r2, #16]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 800681a:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 800681c:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006820:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8006822:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006826:	731e      	strb	r6, [r3, #12]
		ptiming->range_config__vcsel_period_b                = 0x05;
 8006828:	2605      	movs	r6, #5
	pdynamic->system__seed_config =
 800682a:	71dc      	strb	r4, [r3, #7]
	pdynamic->sd_config__first_order_select =
 800682c:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
	psystem->system__stream_count_ctrl                         = 0x00;
 8006830:	4f14      	ldr	r7, [pc, #80]	; (8006884 <VL53L1_preset_mode_standard_ranging_short_range+0x120>)
	pdynamic->sd_config__first_order_select =
 8006832:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006834:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->system__sequence_config                          = \
 8006838:	7459      	strb	r1, [r3, #17]
	psystem->system__stream_count_ctrl                         = 0x00;
 800683a:	9907      	ldr	r1, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 800683c:	f883 c010 	strb.w	ip, [r3, #16]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8006840:	f240 5c07 	movw	ip, #1287	; 0x507
	pdynamic->sd_config__quantifier         =
 8006844:	739c      	strb	r4, [r3, #14]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006846:	f643 0408 	movw	r4, #14344	; 0x3808
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800684a:	f883 900f 	strb.w	r9, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 800684e:	f883 8012 	strb.w	r8, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006852:	f8c1 7001 	str.w	r7, [r1, #1]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8006856:	f882 e006 	strb.w	lr, [r2, #6]
		ptiming->range_config__vcsel_period_b                = 0x05;
 800685a:	7256      	strb	r6, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 800685c:	8aef      	ldrh	r7, [r5, #22]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 800685e:	8bae      	ldrh	r6, [r5, #28]
		ptiming->range_config__sigma_thresh                  =
 8006860:	8157      	strh	r7, [r2, #10]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006862:	8196      	strh	r6, [r2, #12]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006864:	81d4      	strh	r4, [r2, #14]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8006866:	f8a3 c008 	strh.w	ip, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 800686a:	7a2a      	ldrb	r2, [r5, #8]
 800686c:	729a      	strb	r2, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 800686e:	7aea      	ldrb	r2, [r5, #11]
 8006870:	72da      	strb	r2, [r3, #11]
}
 8006872:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006876:	bf00      	nop
 8006878:	00080200 	.word	0x00080200
 800687c:	01ff3800 	.word	0x01ff3800
 8006880:	20001a00 	.word	0x20001a00
 8006884:	21010100 	.word	0x21010100
 8006888:	02110000 	.word	0x02110000

0800688c <VL53L1_preset_mode_standard_ranging_long_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 800688c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006890:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8006892:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006894:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006898:	f8df c114 	ldr.w	ip, [pc, #276]	; 80069b0 <VL53L1_preset_mode_standard_ranging_long_range+0x124>
 800689c:	4f40      	ldr	r7, [pc, #256]	; (80069a0 <VL53L1_preset_mode_standard_ranging_long_range+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800689e:	2601      	movs	r6, #1
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80068a0:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80068a4:	f04f 6e32 	mov.w	lr, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80068a8:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80068ac:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 80068b0:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80068b4:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 80068b8:	f8c0 4002 	str.w	r4, [r0, #2]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80068bc:	f04f 09c7 	mov.w	r9, #199	; 0xc7
	pstatic->debug__ctrl                                      = 0x00;
 80068c0:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80068c4:	f895 801e 	ldrb.w	r8, [r5, #30]
 80068c8:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80068cc:	f895 801f 	ldrb.w	r8, [r5, #31]
 80068d0:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80068d4:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 80068d8:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 80068da:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80068dc:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80068de:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80068e0:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80068e4:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_min_clip                             =
 80068e8:	f895 8010 	ldrb.w	r8, [r5, #16]
 80068ec:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80068f0:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80068f4:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80068f6:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80068fa:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80068fe:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006900:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006902:	f8c1 e000 	str.w	lr, [r1]
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 8006906:	f64c 4e01 	movw	lr, #52225	; 0xcc01
	pgeneral->cal_config__repeat_rate                         =
 800690a:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 800690c:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 800690e:	8088      	strh	r0, [r1, #4]
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 8006910:	20f5      	movs	r0, #245	; 0xf5
	pgeneral->phasecal_config__target                         =
 8006912:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006914:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006916:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006918:	4f22      	ldr	r7, [pc, #136]	; (80069a4 <VL53L1_preset_mode_standard_ranging_long_range+0x118>)
	pgeneral->dss_config__roi_mode_control =
 800691a:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800691c:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006920:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006922:	f8a1 8010 	strh.w	r8, [r1, #16]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006926:	f04f 0802 	mov.w	r8, #2
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800692a:	491f      	ldr	r1, [pc, #124]	; (80069a8 <VL53L1_preset_mode_standard_ranging_long_range+0x11c>)
	ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 800692c:	71d6      	strb	r6, [r2, #7]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800692e:	6011      	str	r1, [r2, #0]
	pdynamic->system__sequence_config                          = \
 8006930:	21db      	movs	r1, #219	; 0xdb
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 8006932:	f8a2 e004 	strh.w	lr, [r2, #4]
		 * min_count_rate_rtn_limit_mcps = 0x0080 ->  9.7fp ->  1.0 Mcps
		 * valid_phase_low               = 0x08 -> 5.3fp ->  1.0
		 * valid_phase_high              = 0xB8 -> 5.3fp -> 23.0 -> 4.6m
		 */

		ptiming->range_config__vcsel_period_a                = 0x0F;
 8006936:	f04f 0e0f 	mov.w	lr, #15
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 800693a:	7210      	strb	r0, [r2, #8]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 800693c:	4620      	mov	r0, r4
	ptiming->system__fractional_enable                        = 0x00;
 800693e:	7514      	strb	r4, [r2, #20]
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8006940:	6114      	str	r4, [r2, #16]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006942:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006944:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006948:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 800694a:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 800694e:	731e      	strb	r6, [r3, #12]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8006950:	260d      	movs	r6, #13
	pdynamic->system__seed_config =
 8006952:	71dc      	strb	r4, [r3, #7]
	pdynamic->sd_config__first_order_select =
 8006954:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
	psystem->system__stream_count_ctrl                         = 0x00;
 8006958:	4f14      	ldr	r7, [pc, #80]	; (80069ac <VL53L1_preset_mode_standard_ranging_long_range+0x120>)
	pdynamic->sd_config__first_order_select =
 800695a:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 800695c:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->system__sequence_config                          = \
 8006960:	7459      	strb	r1, [r3, #17]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006962:	9907      	ldr	r1, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006964:	f883 c010 	strb.w	ip, [r3, #16]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8006968:	f640 5c0f 	movw	ip, #3343	; 0xd0f
	pdynamic->sd_config__quantifier         =
 800696c:	739c      	strb	r4, [r3, #14]
		ptiming->range_config__valid_phase_low               = 0x08;
 800696e:	f64b 0408 	movw	r4, #47112	; 0xb808
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006972:	f883 900f 	strb.w	r9, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006976:	f883 8012 	strb.w	r8, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 800697a:	f8c1 7001 	str.w	r7, [r1, #1]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 800697e:	f882 e006 	strb.w	lr, [r2, #6]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8006982:	7256      	strb	r6, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8006984:	8a6f      	ldrh	r7, [r5, #18]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006986:	8b2e      	ldrh	r6, [r5, #24]
		ptiming->range_config__sigma_thresh                  =
 8006988:	8157      	strh	r7, [r2, #10]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 800698a:	8196      	strh	r6, [r2, #12]
		ptiming->range_config__valid_phase_low               = 0x08;
 800698c:	81d4      	strh	r4, [r2, #14]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 800698e:	f8a3 c008 	strh.w	ip, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 8006992:	79aa      	ldrb	r2, [r5, #6]
 8006994:	729a      	strb	r2, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8006996:	7a6a      	ldrb	r2, [r5, #9]
 8006998:	72da      	strb	r2, [r3, #11]
}
 800699a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800699e:	bf00      	nop
 80069a0:	00080200 	.word	0x00080200
 80069a4:	01ff3800 	.word	0x01ff3800
 80069a8:	20001a00 	.word	0x20001a00
 80069ac:	21010100 	.word	0x21010100
 80069b0:	02110000 	.word	0x02110000

080069b4 <VL53L1_preset_mode_standard_ranging_mm1_cal>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 80069b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80069b8:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 80069ba:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80069bc:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 80069c0:	f8df c118 	ldr.w	ip, [pc, #280]	; 8006adc <VL53L1_preset_mode_standard_ranging_mm1_cal+0x128>
 80069c4:	4f40      	ldr	r7, [pc, #256]	; (8006ac8 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80069c6:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 80069c8:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80069cc:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 80069d0:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80069d4:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80069d8:	f8c0 4002 	str.w	r4, [r0, #2]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80069dc:	f640 19f5 	movw	r9, #2549	; 0x9f5
	pstatic->debug__ctrl                                      = 0x00;
 80069e0:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80069e4:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80069e8:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80069ec:	f895 801e 	ldrb.w	r8, [r5, #30]
 80069f0:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80069f4:	f895 801f 	ldrb.w	r8, [r5, #31]
 80069f8:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80069fc:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006a00:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006a02:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006a04:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006a06:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006a0a:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006a0e:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006a10:	f895 8010 	ldrb.w	r8, [r5, #16]
 8006a14:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006a18:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006a1c:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8006a1e:	f880 801c 	strb.w	r8, [r0, #28]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006a22:	f640 180b 	movw	r8, #2315	; 0x90b
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006a26:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006a28:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006a2a:	f44f 400c 	mov.w	r0, #35840	; 0x8c00
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006a2e:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8006a30:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006a32:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006a36:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 8006a3a:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8006a3c:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006a3e:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006a40:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006a42:	4f22      	ldr	r7, [pc, #136]	; (8006acc <VL53L1_preset_mode_standard_ranging_mm1_cal+0x118>)
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006a44:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006a46:	f8c1 7012 	str.w	r7, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006a4a:	4f21      	ldr	r7, [pc, #132]	; (8006ad0 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x11c>)
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006a4c:	8208      	strh	r0, [r1, #16]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8006a4e:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006a50:	6017      	str	r7, [r2, #0]
 8006a52:	4f20      	ldr	r7, [pc, #128]	; (8006ad4 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x120>)
 8006a54:	f8a2 9008 	strh.w	r9, [r2, #8]
 8006a58:	6057      	str	r7, [r2, #4]
	ptiming->range_config__sigma_thresh                       =
 8006a5a:	f8b5 9014 	ldrh.w	r9, [r5, #20]
 8006a5e:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8006a62:	f8b5 901a 	ldrh.w	r9, [r5, #26]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006a66:	f882 e00e 	strb.w	lr, [r2, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006a6a:	f04f 0ec7 	mov.w	lr, #199	; 0xc7
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8006a6e:	f8a2 900c 	strh.w	r9, [r2, #12]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8006a72:	73d0      	strb	r0, [r2, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006a74:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8006a76:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8006a78:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006a7a:	2202      	movs	r2, #2
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006a7c:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006a7e:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006a82:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8006a84:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006a88:	f8a3 8008 	strh.w	r8, [r3, #8]
	pdynamic->system__seed_config =
 8006a8c:	71dc      	strb	r4, [r3, #7]
		pdynamic->system__sequence_config  = \
 8006a8e:	243b      	movs	r4, #59	; 0x3b
	pdynamic->sd_config__initial_phase_sd0                     =
 8006a90:	f895 8007 	ldrb.w	r8, [r5, #7]
 8006a94:	f883 800a 	strb.w	r8, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006a98:	f895 800a 	ldrb.w	r8, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006a9c:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006a9e:	f883 800b 	strb.w	r8, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8006aa2:	f895 6024 	ldrb.w	r6, [r5, #36]	; 0x24
 8006aa6:	735e      	strb	r6, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006aa8:	f895 6023 	ldrb.w	r6, [r5, #35]	; 0x23
	psystem->system__stream_count_ctrl                         = 0x00;
 8006aac:	4d0a      	ldr	r5, [pc, #40]	; (8006ad8 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x124>)
	pdynamic->sd_config__quantifier         =
 8006aae:	739e      	strb	r6, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006ab0:	9e07      	ldr	r6, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006ab2:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006ab6:	f883 e00f 	strb.w	lr, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006aba:	749a      	strb	r2, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006abc:	f8c6 5001 	str.w	r5, [r6, #1]
		pgeneral->dss_config__roi_mode_control =
 8006ac0:	728a      	strb	r2, [r1, #10]
		pdynamic->system__sequence_config  = \
 8006ac2:	745c      	strb	r4, [r3, #17]
}
 8006ac4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006ac8:	00080200 	.word	0x00080200
 8006acc:	01ff3800 	.word	0x01ff3800
 8006ad0:	20001a00 	.word	0x20001a00
 8006ad4:	010bcc01 	.word	0x010bcc01
 8006ad8:	21010100 	.word	0x21010100
 8006adc:	02110000 	.word	0x02110000

08006ae0 <VL53L1_preset_mode_standard_ranging_mm2_cal>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006ae0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006ae4:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8006ae6:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006ae8:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006aec:	f8df c118 	ldr.w	ip, [pc, #280]	; 8006c08 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x128>
 8006af0:	4f40      	ldr	r7, [pc, #256]	; (8006bf4 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006af2:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8006af4:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006af8:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006afc:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006b00:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006b04:	f8c0 4002 	str.w	r4, [r0, #2]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006b08:	f640 19f5 	movw	r9, #2549	; 0x9f5
	pstatic->debug__ctrl                                      = 0x00;
 8006b0c:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006b10:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006b14:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006b18:	f895 801e 	ldrb.w	r8, [r5, #30]
 8006b1c:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006b20:	f895 801f 	ldrb.w	r8, [r5, #31]
 8006b24:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006b28:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006b2c:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006b2e:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006b30:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006b32:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006b36:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006b3a:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006b3c:	f895 8010 	ldrb.w	r8, [r5, #16]
 8006b40:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006b44:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006b48:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8006b4a:	f880 801c 	strb.w	r8, [r0, #28]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006b4e:	f640 180b 	movw	r8, #2315	; 0x90b
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006b52:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006b54:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006b56:	f44f 400c 	mov.w	r0, #35840	; 0x8c00
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006b5a:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8006b5c:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006b5e:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006b62:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 8006b66:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8006b68:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006b6a:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006b6c:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006b6e:	4f22      	ldr	r7, [pc, #136]	; (8006bf8 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x118>)
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006b70:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006b72:	f8c1 7012 	str.w	r7, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006b76:	4f21      	ldr	r7, [pc, #132]	; (8006bfc <VL53L1_preset_mode_standard_ranging_mm2_cal+0x11c>)
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006b78:	8208      	strh	r0, [r1, #16]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8006b7a:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006b7c:	6017      	str	r7, [r2, #0]
 8006b7e:	4f20      	ldr	r7, [pc, #128]	; (8006c00 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x120>)
 8006b80:	f8a2 9008 	strh.w	r9, [r2, #8]
 8006b84:	6057      	str	r7, [r2, #4]
	ptiming->range_config__sigma_thresh                       =
 8006b86:	f8b5 9014 	ldrh.w	r9, [r5, #20]
 8006b8a:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8006b8e:	f8b5 901a 	ldrh.w	r9, [r5, #26]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006b92:	f882 e00e 	strb.w	lr, [r2, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006b96:	f04f 0ec7 	mov.w	lr, #199	; 0xc7
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8006b9a:	f8a2 900c 	strh.w	r9, [r2, #12]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8006b9e:	73d0      	strb	r0, [r2, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006ba0:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8006ba2:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8006ba4:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006ba6:	2202      	movs	r2, #2
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006ba8:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006baa:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006bae:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8006bb0:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006bb4:	f8a3 8008 	strh.w	r8, [r3, #8]
	pdynamic->system__seed_config =
 8006bb8:	71dc      	strb	r4, [r3, #7]
		pdynamic->system__sequence_config  = \
 8006bba:	245b      	movs	r4, #91	; 0x5b
	pdynamic->sd_config__initial_phase_sd0                     =
 8006bbc:	f895 8007 	ldrb.w	r8, [r5, #7]
 8006bc0:	f883 800a 	strb.w	r8, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006bc4:	f895 800a 	ldrb.w	r8, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006bc8:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006bca:	f883 800b 	strb.w	r8, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8006bce:	f895 6024 	ldrb.w	r6, [r5, #36]	; 0x24
 8006bd2:	735e      	strb	r6, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006bd4:	f895 6023 	ldrb.w	r6, [r5, #35]	; 0x23
	psystem->system__stream_count_ctrl                         = 0x00;
 8006bd8:	4d0a      	ldr	r5, [pc, #40]	; (8006c04 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x124>)
	pdynamic->sd_config__quantifier         =
 8006bda:	739e      	strb	r6, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006bdc:	9e07      	ldr	r6, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006bde:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006be2:	f883 e00f 	strb.w	lr, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006be6:	749a      	strb	r2, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006be8:	f8c6 5001 	str.w	r5, [r6, #1]
		pgeneral->dss_config__roi_mode_control =
 8006bec:	728a      	strb	r2, [r1, #10]
		pdynamic->system__sequence_config  = \
 8006bee:	745c      	strb	r4, [r3, #17]
}
 8006bf0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006bf4:	00080200 	.word	0x00080200
 8006bf8:	01ff3800 	.word	0x01ff3800
 8006bfc:	20001a00 	.word	0x20001a00
 8006c00:	010bcc01 	.word	0x010bcc01
 8006c04:	21010100 	.word	0x21010100
 8006c08:	02110000 	.word	0x02110000

08006c0c <VL53L1_preset_mode_timed_ranging>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006c0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006c10:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8006c12:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006c14:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006c18:	f8df c120 	ldr.w	ip, [pc, #288]	; 8006d3c <VL53L1_preset_mode_timed_ranging+0x130>
 8006c1c:	4f46      	ldr	r7, [pc, #280]	; (8006d38 <VL53L1_preset_mode_timed_ranging+0x12c>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006c1e:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8006c20:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006c24:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006c28:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006c2c:	f04f 6832 	mov.w	r8, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006c30:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006c34:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8006c38:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006c3c:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006c40:	f895 e01e 	ldrb.w	lr, [r5, #30]
 8006c44:	f880 e012 	strb.w	lr, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006c48:	f895 e01f 	ldrb.w	lr, [r5, #31]
 8006c4c:	f880 e013 	strb.w	lr, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006c50:	f895 e020 	ldrb.w	lr, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006c54:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006c56:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006c58:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006c5a:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006c5c:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006c60:	f880 e014 	strb.w	lr, [r0, #20]
	pstatic->algo__range_min_clip                             =
 8006c64:	f895 e010 	ldrb.w	lr, [r5, #16]
 8006c68:	f880 e01b 	strb.w	lr, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006c6c:	f895 e00c 	ldrb.w	lr, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006c70:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8006c72:	f880 e01c 	strb.w	lr, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006c76:	f44f 4e0c 	mov.w	lr, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006c7a:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006c7c:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006c7e:	f8c1 8000 	str.w	r8, [r1]
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 8006c82:	f04f 080b 	mov.w	r8, #11
	pgeneral->cal_config__repeat_rate                         =
 8006c86:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006c88:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8006c8a:	8088      	strh	r0, [r1, #4]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8006c8c:	2009      	movs	r0, #9
	pgeneral->phasecal_config__target                         =
 8006c8e:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006c90:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006c92:	720f      	strb	r7, [r1, #8]
{
 8006c94:	9f07      	ldr	r7, [sp, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006c96:	f8a1 e010 	strh.w	lr, [r1, #16]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006c9a:	f8df e0a4 	ldr.w	lr, [pc, #164]	; 8006d40 <VL53L1_preset_mode_timed_ranging+0x134>
	pgeneral->dss_config__roi_mode_control =
 8006c9e:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006ca0:	f8c1 e012 	str.w	lr, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006ca4:	f8df e09c 	ldr.w	lr, [pc, #156]	; 8006d44 <VL53L1_preset_mode_timed_ranging+0x138>
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006ca8:	60cc      	str	r4, [r1, #12]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006caa:	f647 0108 	movw	r1, #30728	; 0x7808
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006cae:	f8c2 e000 	str.w	lr, [r2]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006cb2:	f640 1e0b 	movw	lr, #2315	; 0x90b
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 8006cb6:	f882 8006 	strb.w	r8, [r2, #6]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8006cba:	7250      	strb	r0, [r2, #9]
	ptiming->range_config__sigma_thresh                       =
 8006cbc:	f8b5 8014 	ldrh.w	r8, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8006cc0:	8b68      	ldrh	r0, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 8006cc2:	f8a2 800a 	strh.w	r8, [r2, #10]

		/* Disable GPH  */
		pdynamic->system__grouped_parameter_hold = 0x00;

		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8006cc6:	f44f 4831 	mov.w	r8, #45312	; 0xb100
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8006cca:	8190      	strh	r0, [r2, #12]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006ccc:	20c7      	movs	r0, #199	; 0xc7
	ptiming->system__fractional_enable                        = 0x00;
 8006cce:	7514      	strb	r4, [r2, #20]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006cd0:	81d1      	strh	r1, [r2, #14]
	pdynamic->system__sequence_config                          = \
 8006cd2:	21db      	movs	r1, #219	; 0xdb
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006cd4:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006cd6:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006cda:	719c      	strb	r4, [r3, #6]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006cdc:	f8a3 e008 	strh.w	lr, [r3, #8]
	pdynamic->sd_config__initial_phase_sd0                     =
 8006ce0:	f895 e007 	ldrb.w	lr, [r5, #7]
 8006ce4:	f883 e00a 	strb.w	lr, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006ce8:	f895 e00a 	ldrb.w	lr, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006cec:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006cee:	f883 e00b 	strb.w	lr, [r3, #11]
		ptiming->range_config__timeout_macrop_a_lo                = 0xB1;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 8006cf2:	f04f 0ed4 	mov.w	lr, #212	; 0xd4
	pdynamic->sd_config__first_order_select =
 8006cf6:	f895 9024 	ldrb.w	r9, [r5, #36]	; 0x24
 8006cfa:	f883 900d 	strb.w	r9, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006cfe:	f895 9023 	ldrb.w	r9, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006d02:	f883 c010 	strb.w	ip, [r3, #16]

		/* Timing Configuration */

		ptiming->system__intermeasurement_period = 0x00000600;
 8006d06:	f44f 6cc0 	mov.w	ip, #1536	; 0x600
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006d0a:	73d8      	strb	r0, [r3, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006d0c:	4620      	mov	r0, r4
	pdynamic->system__sequence_config                          = \
 8006d0e:	7459      	strb	r1, [r3, #17]
		psystem->system__mode_start =
 8006d10:	2140      	movs	r1, #64	; 0x40
	pdynamic->sd_config__quantifier         =
 8006d12:	f883 900e 	strb.w	r9, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006d16:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 8006d18:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 8006d1a:	70fe      	strb	r6, [r7, #3]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8006d1c:	749c      	strb	r4, [r3, #18]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8006d1e:	f8a2 8004 	strh.w	r8, [r2, #4]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 8006d22:	71d4      	strb	r4, [r2, #7]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 8006d24:	f882 e008 	strb.w	lr, [r2, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006d28:	f8c2 c010 	str.w	ip, [r2, #16]
		pdynamic->system__seed_config =
 8006d2c:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 8006d30:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start =
 8006d32:	7139      	strb	r1, [r7, #4]
}
 8006d34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006d38:	00080200 	.word	0x00080200
 8006d3c:	02110000 	.word	0x02110000
 8006d40:	01ff3800 	.word	0x01ff3800
 8006d44:	20001a00 	.word	0x20001a00

08006d48 <VL53L1_preset_mode_timed_ranging_short_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006d48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006d4c:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8006d4e:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006d50:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006d54:	f8df c124 	ldr.w	ip, [pc, #292]	; 8006e7c <VL53L1_preset_mode_timed_ranging_short_range+0x134>
 8006d58:	4f47      	ldr	r7, [pc, #284]	; (8006e78 <VL53L1_preset_mode_timed_ranging_short_range+0x130>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006d5a:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8006d5c:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006d60:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006d64:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006d68:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006d6c:	f8c0 4002 	str.w	r4, [r0, #2]
 8006d70:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006d74:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006d78:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006d7c:	f895 801e 	ldrb.w	r8, [r5, #30]
 8006d80:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006d84:	f895 801f 	ldrb.w	r8, [r5, #31]
 8006d88:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006d8c:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006d90:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006d92:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006d94:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006d96:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006d9a:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006d9e:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006da0:	f895 8010 	ldrb.w	r8, [r5, #16]
 8006da4:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006da8:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006dac:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8006dae:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006db2:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006db6:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006db8:	77c4      	strb	r4, [r0, #31]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006dba:	20c7      	movs	r0, #199	; 0xc7
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006dbc:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8006dbe:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006dc0:	f8a1 e006 	strh.w	lr, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8006dc4:	808f      	strh	r7, [r1, #4]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006dc6:	f8df e0b8 	ldr.w	lr, [pc, #184]	; 8006e80 <VL53L1_preset_mode_timed_ranging_short_range+0x138>
	pgeneral->phasecal_config__target                         =
 8006dca:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006dcc:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006dce:	720f      	strb	r7, [r1, #8]
{
 8006dd0:	9f07      	ldr	r7, [sp, #28]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006dd2:	f8c1 e012 	str.w	lr, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006dd6:	f8df e0ac 	ldr.w	lr, [pc, #172]	; 8006e84 <VL53L1_preset_mode_timed_ranging_short_range+0x13c>
	pgeneral->dss_config__roi_mode_control =
 8006dda:	728e      	strb	r6, [r1, #10]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006ddc:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006dde:	f8a1 8010 	strh.w	r8, [r1, #16]
	pdynamic->system__sequence_config                          = \
 8006de2:	21db      	movs	r1, #219	; 0xdb
	ptiming->system__fractional_enable                        = 0x00;
 8006de4:	7514      	strb	r4, [r2, #20]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8006de6:	f04f 0807 	mov.w	r8, #7
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006dea:	f8c2 e000 	str.w	lr, [r2]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006dee:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006df0:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006df4:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006df6:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__first_order_select =
 8006df8:	f895 e024 	ldrb.w	lr, [r5, #36]	; 0x24
 8006dfc:	f883 e00d 	strb.w	lr, [r3, #13]
		ptiming->range_config__vcsel_period_b                = 0x05;
 8006e00:	f04f 0e05 	mov.w	lr, #5
	pdynamic->sd_config__quantifier         =
 8006e04:	f895 9023 	ldrb.w	r9, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006e08:	73d8      	strb	r0, [r3, #15]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006e0a:	f643 0008 	movw	r0, #14344	; 0x3808
	pdynamic->system__sequence_config                          = \
 8006e0e:	7459      	strb	r1, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8006e10:	f240 5107 	movw	r1, #1287	; 0x507
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006e14:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 8006e18:	f883 900e 	strb.w	r9, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006e1c:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 8006e1e:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 8006e20:	70fe      	strb	r6, [r7, #3]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8006e22:	f882 8006 	strb.w	r8, [r2, #6]


		/* Timing Configuration */

		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 8006e26:	f248 4801 	movw	r8, #33793	; 0x8401
		ptiming->range_config__vcsel_period_b                = 0x05;
 8006e2a:	f882 e009 	strb.w	lr, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8006e2e:	f8b5 e016 	ldrh.w	lr, [r5, #22]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006e32:	f8b5 c01c 	ldrh.w	ip, [r5, #28]
		ptiming->range_config__sigma_thresh                  =
 8006e36:	f8a2 e00a 	strh.w	lr, [r2, #10]
		ptiming->range_config__timeout_macrop_a_lo                = 0x84;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x01;
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006e3a:	f04f 0eb1 	mov.w	lr, #177	; 0xb1
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006e3e:	f8a2 c00c 	strh.w	ip, [r2, #12]

		ptiming->system__intermeasurement_period = 0x00000600;
 8006e42:	f44f 6cc0 	mov.w	ip, #1536	; 0x600
		ptiming->range_config__valid_phase_low               = 0x08;
 8006e46:	81d0      	strh	r0, [r2, #14]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8006e48:	8119      	strh	r1, [r3, #8]
				ptuning_parms->tp_timed_seed_cfg;

		/* System control */

		/* Configure Timed/Psuedo-solo mode */
		psystem->system__mode_start =
 8006e4a:	2140      	movs	r1, #64	; 0x40
		pdynamic->sd_config__initial_phase_sd0               =
 8006e4c:	7a28      	ldrb	r0, [r5, #8]
 8006e4e:	7298      	strb	r0, [r3, #10]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006e50:	4620      	mov	r0, r4
		pdynamic->sd_config__initial_phase_sd1               =
 8006e52:	f895 900b 	ldrb.w	r9, [r5, #11]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8006e56:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 8006e58:	f883 900b 	strb.w	r9, [r3, #11]
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 8006e5c:	f8a2 8004 	strh.w	r8, [r2, #4]
		ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 8006e60:	71d6      	strb	r6, [r2, #7]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006e62:	f882 e008 	strb.w	lr, [r2, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006e66:	f8c2 c010 	str.w	ip, [r2, #16]
		pdynamic->system__seed_config =
 8006e6a:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 8006e6e:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start =
 8006e70:	7139      	strb	r1, [r7, #4]
}
 8006e72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006e76:	bf00      	nop
 8006e78:	00080200 	.word	0x00080200
 8006e7c:	02110000 	.word	0x02110000
 8006e80:	01ff3800 	.word	0x01ff3800
 8006e84:	20001a00 	.word	0x20001a00

08006e88 <VL53L1_preset_mode_timed_ranging_long_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006e88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006e8c:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8006e8e:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006e90:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006e94:	f8df c124 	ldr.w	ip, [pc, #292]	; 8006fbc <VL53L1_preset_mode_timed_ranging_long_range+0x134>
 8006e98:	4f45      	ldr	r7, [pc, #276]	; (8006fb0 <VL53L1_preset_mode_timed_ranging_long_range+0x128>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006e9a:	2601      	movs	r6, #1
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006e9c:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006ea0:	f04f 6e32 	mov.w	lr, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006ea4:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006ea8:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006eac:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006eb0:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8006eb4:	f8c0 4002 	str.w	r4, [r0, #2]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 8006eb8:	f04f 090f 	mov.w	r9, #15
	pstatic->debug__ctrl                                      = 0x00;
 8006ebc:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006ec0:	f895 801e 	ldrb.w	r8, [r5, #30]
 8006ec4:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006ec8:	f895 801f 	ldrb.w	r8, [r5, #31]
 8006ecc:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006ed0:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006ed4:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006ed6:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006ed8:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006eda:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006edc:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006ee0:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_min_clip                             =
 8006ee4:	f895 8010 	ldrb.w	r8, [r5, #16]
 8006ee8:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006eec:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006ef0:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8006ef2:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006ef6:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006efa:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006efc:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006efe:	f8c1 e000 	str.w	lr, [r1]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006f02:	f04f 0ec7 	mov.w	lr, #199	; 0xc7
	pgeneral->cal_config__repeat_rate                         =
 8006f06:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006f08:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8006f0a:	8088      	strh	r0, [r1, #4]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006f0c:	4829      	ldr	r0, [pc, #164]	; (8006fb4 <VL53L1_preset_mode_timed_ranging_long_range+0x12c>)
	pgeneral->phasecal_config__target                         =
 8006f0e:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006f10:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006f12:	720f      	strb	r7, [r1, #8]
{
 8006f14:	9f07      	ldr	r7, [sp, #28]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006f16:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006f18:	f8c1 0012 	str.w	r0, [r1, #18]
	pdynamic->system__sequence_config                          = \
 8006f1c:	20db      	movs	r0, #219	; 0xdb
	pgeneral->dss_config__roi_mode_control =
 8006f1e:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006f20:	f8a1 8010 	strh.w	r8, [r1, #16]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8006f24:	f04f 080d 	mov.w	r8, #13
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006f28:	4923      	ldr	r1, [pc, #140]	; (8006fb8 <VL53L1_preset_mode_timed_ranging_long_range+0x130>)
	ptiming->system__fractional_enable                        = 0x00;
 8006f2a:	7514      	strb	r4, [r2, #20]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006f2c:	6011      	str	r1, [r2, #0]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006f2e:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006f30:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006f34:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006f36:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__first_order_select =
 8006f38:	f895 1024 	ldrb.w	r1, [r5, #36]	; 0x24
 8006f3c:	7359      	strb	r1, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006f3e:	f895 1023 	ldrb.w	r1, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006f42:	f883 c010 	strb.w	ip, [r3, #16]
		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
		ptiming->range_config__timeout_macrop_a_lo                = 0x97;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006f46:	f04f 0cb1 	mov.w	ip, #177	; 0xb1
	pdynamic->sd_config__quantifier         =
 8006f4a:	7399      	strb	r1, [r3, #14]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006f4c:	f64b 0108 	movw	r1, #47112	; 0xb808
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006f50:	f883 e00f 	strb.w	lr, [r3, #15]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8006f54:	f44f 4e17 	mov.w	lr, #38656	; 0x9700
	pdynamic->system__sequence_config                          = \
 8006f58:	7458      	strb	r0, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8006f5a:	f640 500f 	movw	r0, #3343	; 0xd0f
	psystem->system__stream_count_ctrl                         = 0x00;
 8006f5e:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 8006f60:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 8006f62:	70fe      	strb	r6, [r7, #3]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 8006f64:	f882 9006 	strb.w	r9, [r2, #6]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8006f68:	f882 8009 	strb.w	r8, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8006f6c:	f8b5 8012 	ldrh.w	r8, [r5, #18]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006f70:	8b2e      	ldrh	r6, [r5, #24]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006f72:	81d1      	strh	r1, [r2, #14]
				ptuning_parms->tp_timed_seed_cfg;

		/* System control */

		/* Configure Timed/Psuedo-solo mode */
		psystem->system__mode_start =
 8006f74:	2140      	movs	r1, #64	; 0x40
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006f76:	8196      	strh	r6, [r2, #12]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006f78:	f44f 66c0 	mov.w	r6, #1536	; 0x600
		ptiming->range_config__sigma_thresh                  =
 8006f7c:	f8a2 800a 	strh.w	r8, [r2, #10]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8006f80:	8118      	strh	r0, [r3, #8]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006f82:	4620      	mov	r0, r4
		pdynamic->sd_config__initial_phase_sd0               =
 8006f84:	f895 8006 	ldrb.w	r8, [r5, #6]
 8006f88:	f883 800a 	strb.w	r8, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8006f8c:	f895 8009 	ldrb.w	r8, [r5, #9]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8006f90:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 8006f92:	f883 800b 	strb.w	r8, [r3, #11]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8006f96:	f8a2 e004 	strh.w	lr, [r2, #4]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 8006f9a:	71d4      	strb	r4, [r2, #7]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006f9c:	f882 c008 	strb.w	ip, [r2, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006fa0:	6116      	str	r6, [r2, #16]
		pdynamic->system__seed_config =
 8006fa2:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 8006fa6:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start =
 8006fa8:	7139      	strb	r1, [r7, #4]
}
 8006faa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006fae:	bf00      	nop
 8006fb0:	00080200 	.word	0x00080200
 8006fb4:	01ff3800 	.word	0x01ff3800
 8006fb8:	20001a00 	.word	0x20001a00
 8006fbc:	02110000 	.word	0x02110000

08006fc0 <VL53L1_preset_mode_low_power_auto_ranging>:
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms,
	VL53L1_low_power_auto_data_t *plpadata)
{
 8006fc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fc4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	pstatic->debug__ctrl                                      = 0x00;
 8006fc6:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006fc8:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006fcc:	f8df c134 	ldr.w	ip, [pc, #308]	; 8007104 <VL53L1_preset_mode_low_power_auto_ranging+0x144>
 8006fd0:	4e49      	ldr	r6, [pc, #292]	; (80070f8 <VL53L1_preset_mode_low_power_auto_ranging+0x138>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006fd2:	2701      	movs	r7, #1
	pstatic->debug__ctrl                                      = 0x00;
 8006fd4:	f8c0 c00a 	str.w	ip, [r0, #10]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006fd8:	f04f 6932 	mov.w	r9, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006fdc:	f8c0 600e 	str.w	r6, [r0, #14]
{
 8006fe0:	4616      	mov	r6, r2
	pstatic->debug__ctrl                                      = 0x00;
 8006fe2:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006fe6:	f640 5c02 	movw	ip, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8006fea:	f8c0 4006 	str.w	r4, [r0, #6]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006fee:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006ff2:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006ff6:	f04f 0eff 	mov.w	lr, #255	; 0xff
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006ffa:	7faa      	ldrb	r2, [r5, #30]
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 8006ffc:	f04f 0a0b 	mov.w	sl, #11
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8007000:	f04f 0bc7 	mov.w	fp, #199	; 0xc7
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8007004:	7482      	strb	r2, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8007006:	7fea      	ldrb	r2, [r5, #31]
 8007008:	74c2      	strb	r2, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800700a:	f895 2020 	ldrb.w	r2, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 800700e:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8007010:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8007012:	7547      	strb	r7, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8007014:	f880 e01a 	strb.w	lr, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8007018:	7502      	strb	r2, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 800701a:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 800701c:	7c2a      	ldrb	r2, [r5, #16]
 800701e:	76c2      	strb	r2, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8007020:	7b2a      	ldrb	r2, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8007022:	7744      	strb	r4, [r0, #29]
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8007024:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8007026:	77c4      	strb	r4, [r0, #31]
	pstatic->algo__consistency_check__tolerance               =
 8007028:	7702      	strb	r2, [r0, #28]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 800702a:	f8c1 9000 	str.w	r9, [r1]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 800702e:	f04f 0909 	mov.w	r9, #9
	pgeneral->cal_config__repeat_rate                         =
 8007032:	89ea      	ldrh	r2, [r5, #14]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8007034:	4831      	ldr	r0, [pc, #196]	; (80070fc <VL53L1_preset_mode_low_power_auto_ranging+0x13c>)
	pgeneral->global_config__vcsel_width                      = 0x02;
 8007036:	f8a1 c006 	strh.w	ip, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 800703a:	808a      	strh	r2, [r1, #4]
	pgeneral->phasecal_config__target                         =
 800703c:	7b6a      	ldrb	r2, [r5, #13]
{
 800703e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
	pgeneral->phasecal_config__target                         =
 8007042:	720a      	strb	r2, [r1, #8]
{
 8007044:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
	pgeneral->phasecal_config__override                       = 0x00;
 8007046:	724c      	strb	r4, [r1, #9]
	pgeneral->dss_config__roi_mode_control =
 8007048:	728f      	strb	r7, [r1, #10]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 800704a:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800704c:	f8c1 0012 	str.w	r0, [r1, #18]
					ptuning_parms);

	/* now setup the low power auto mode */

	if (status == VL53L1_ERROR_NONE) {
		status = VL53L1_config_low_power_auto_mode(
 8007050:	4608      	mov	r0, r1
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8007052:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8007056:	f647 0808 	movw	r8, #30728	; 0x7808
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800705a:	4929      	ldr	r1, [pc, #164]	; (8007100 <VL53L1_preset_mode_low_power_auto_ranging+0x140>)
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 800705c:	f886 a006 	strb.w	sl, [r6, #6]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8007060:	6031      	str	r1, [r6, #0]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8007062:	f640 110b 	movw	r1, #2315	; 0x90b
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8007066:	f886 9009 	strb.w	r9, [r6, #9]
	ptiming->range_config__sigma_thresh                       =
 800706a:	f8b5 a014 	ldrh.w	sl, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 800706e:	f8b5 901a 	ldrh.w	r9, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 8007072:	f8a6 a00a 	strh.w	sl, [r6, #10]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8007076:	f44f 4a31 	mov.w	sl, #45312	; 0xb100
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 800707a:	f8a6 900c 	strh.w	r9, [r6, #12]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 800707e:	f04f 09d4 	mov.w	r9, #212	; 0xd4
	ptiming->system__fractional_enable                        = 0x00;
 8007082:	7534      	strb	r4, [r6, #20]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8007084:	f8a6 800e 	strh.w	r8, [r6, #14]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8007088:	701f      	strb	r7, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 800708a:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 800708e:	719c      	strb	r4, [r3, #6]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8007090:	8119      	strh	r1, [r3, #8]
	pdynamic->system__sequence_config                          = \
 8007092:	21db      	movs	r1, #219	; 0xdb
	pdynamic->sd_config__initial_phase_sd0                     =
 8007094:	f895 8007 	ldrb.w	r8, [r5, #7]
 8007098:	f883 800a 	strb.w	r8, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 800709c:	f895 800a 	ldrb.w	r8, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80070a0:	731f      	strb	r7, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 80070a2:	f883 800b 	strb.w	r8, [r3, #11]
	pdynamic->sd_config__first_order_select =
 80070a6:	f895 8024 	ldrb.w	r8, [r5, #36]	; 0x24
 80070aa:	f883 800d 	strb.w	r8, [r3, #13]
	pdynamic->sd_config__quantifier         =
 80070ae:	f895 8023 	ldrb.w	r8, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80070b2:	f883 e010 	strb.w	lr, [r3, #16]
		psystem->system__mode_start =
 80070b6:	f04f 0e40 	mov.w	lr, #64	; 0x40
	pdynamic->sd_config__quantifier         =
 80070ba:	f883 800e 	strb.w	r8, [r3, #14]
		ptiming->system__intermeasurement_period = 0x00000600;
 80070be:	f44f 68c0 	mov.w	r8, #1536	; 0x600
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80070c2:	f883 b00f 	strb.w	fp, [r3, #15]
	pdynamic->system__sequence_config                          = \
 80070c6:	7459      	strb	r1, [r3, #17]
		status = VL53L1_config_low_power_auto_mode(
 80070c8:	4619      	mov	r1, r3
	psystem->system__stream_count_ctrl                         = 0x00;
 80070ca:	f88c 4001 	strb.w	r4, [ip, #1]
	psystem->firmware__enable                                  = 0x01;
 80070ce:	f88c 7002 	strb.w	r7, [ip, #2]
	psystem->system__interrupt_clear                           = \
 80070d2:	f88c 7003 	strb.w	r7, [ip, #3]
		pdynamic->system__grouped_parameter_hold = 0x00;
 80070d6:	749c      	strb	r4, [r3, #18]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 80070d8:	71f4      	strb	r4, [r6, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 80070da:	f8a6 a004 	strh.w	sl, [r6, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 80070de:	f886 9008 	strb.w	r9, [r6, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 80070e2:	f8c6 8010 	str.w	r8, [r6, #16]
		pdynamic->system__seed_config =
 80070e6:	f895 4022 	ldrb.w	r4, [r5, #34]	; 0x22
 80070ea:	71dc      	strb	r4, [r3, #7]
		psystem->system__mode_start =
 80070ec:	f88c e004 	strb.w	lr, [ip, #4]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 80070f0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		status = VL53L1_config_low_power_auto_mode(
 80070f4:	f000 bd30 	b.w	8007b58 <VL53L1_config_low_power_auto_mode>
 80070f8:	00080200 	.word	0x00080200
 80070fc:	01ff3800 	.word	0x01ff3800
 8007100:	20001a00 	.word	0x20001a00
 8007104:	02110000 	.word	0x02110000

08007108 <VL53L1_preset_mode_low_power_auto_short_ranging>:
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms,
	VL53L1_low_power_auto_data_t *plpadata)
{
 8007108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800710c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	pstatic->debug__ctrl                                      = 0x00;
 800710e:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8007110:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8007114:	f8df c12c 	ldr.w	ip, [pc, #300]	; 8007244 <VL53L1_preset_mode_low_power_auto_short_ranging+0x13c>
 8007118:	4e47      	ldr	r6, [pc, #284]	; (8007238 <VL53L1_preset_mode_low_power_auto_short_ranging+0x130>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800711a:	2701      	movs	r7, #1
	pstatic->debug__ctrl                                      = 0x00;
 800711c:	f8c0 c00a 	str.w	ip, [r0, #10]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8007120:	f04f 6932 	mov.w	r9, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8007124:	f8c0 600e 	str.w	r6, [r0, #14]
{
 8007128:	4616      	mov	r6, r2
	pstatic->debug__ctrl                                      = 0x00;
 800712a:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 800712e:	f640 5c02 	movw	ip, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8007132:	f8c0 4006 	str.w	r4, [r0, #6]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8007136:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 800713a:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 800713e:	f04f 0eff 	mov.w	lr, #255	; 0xff
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8007142:	7faa      	ldrb	r2, [r5, #30]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8007144:	f04f 0ac7 	mov.w	sl, #199	; 0xc7
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8007148:	7482      	strb	r2, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 800714a:	7fea      	ldrb	r2, [r5, #31]
 800714c:	74c2      	strb	r2, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800714e:	f895 2020 	ldrb.w	r2, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8007152:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8007154:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8007156:	7547      	strb	r7, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8007158:	f880 e01a 	strb.w	lr, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800715c:	7502      	strb	r2, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 800715e:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8007160:	7c2a      	ldrb	r2, [r5, #16]
 8007162:	76c2      	strb	r2, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8007164:	7b2a      	ldrb	r2, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8007166:	7744      	strb	r4, [r0, #29]
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8007168:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 800716a:	77c4      	strb	r4, [r0, #31]
	pstatic->algo__consistency_check__tolerance               =
 800716c:	7702      	strb	r2, [r0, #28]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 800716e:	f8c1 9000 	str.w	r9, [r1]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8007172:	f04f 0907 	mov.w	r9, #7
	pgeneral->cal_config__repeat_rate                         =
 8007176:	89ea      	ldrh	r2, [r5, #14]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8007178:	4830      	ldr	r0, [pc, #192]	; (800723c <VL53L1_preset_mode_low_power_auto_short_ranging+0x134>)
	pgeneral->global_config__vcsel_width                      = 0x02;
 800717a:	f8a1 c006 	strh.w	ip, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 800717e:	808a      	strh	r2, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8007180:	7b6a      	ldrb	r2, [r5, #13]
{
 8007182:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
	pgeneral->phasecal_config__target                         =
 8007186:	720a      	strb	r2, [r1, #8]
{
 8007188:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
	pgeneral->phasecal_config__override                       = 0x00;
 800718a:	724c      	strb	r4, [r1, #9]
	pgeneral->dss_config__roi_mode_control =
 800718c:	728f      	strb	r7, [r1, #10]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 800718e:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8007190:	f8c1 0012 	str.w	r0, [r1, #18]
					ptuning_parms);

	/* now setup the low power auto mode */

	if (status == VL53L1_ERROR_NONE) {
		status = VL53L1_config_low_power_auto_mode(
 8007194:	4608      	mov	r0, r1
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8007196:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800719a:	4929      	ldr	r1, [pc, #164]	; (8007240 <VL53L1_preset_mode_low_power_auto_short_ranging+0x138>)
	ptiming->system__fractional_enable                        = 0x00;
 800719c:	7534      	strb	r4, [r6, #20]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800719e:	6031      	str	r1, [r6, #0]
	pdynamic->system__sequence_config                          = \
 80071a0:	21db      	movs	r1, #219	; 0xdb
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 80071a2:	701f      	strb	r7, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 80071a4:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 80071a8:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80071aa:	731f      	strb	r7, [r3, #12]
	pdynamic->sd_config__first_order_select =
 80071ac:	f895 8024 	ldrb.w	r8, [r5, #36]	; 0x24
 80071b0:	f883 800d 	strb.w	r8, [r3, #13]
		ptiming->range_config__vcsel_period_b                = 0x05;
 80071b4:	f04f 0805 	mov.w	r8, #5
	pdynamic->sd_config__quantifier         =
 80071b8:	f895 b023 	ldrb.w	fp, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80071bc:	f883 e010 	strb.w	lr, [r3, #16]
		ptiming->range_config__valid_phase_low               = 0x08;
 80071c0:	f643 0e08 	movw	lr, #14344	; 0x3808
	pdynamic->sd_config__quantifier         =
 80071c4:	f883 b00e 	strb.w	fp, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80071c8:	f883 a00f 	strb.w	sl, [r3, #15]
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 80071cc:	f248 4a01 	movw	sl, #33793	; 0x8401
	pdynamic->system__sequence_config                          = \
 80071d0:	7459      	strb	r1, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 80071d2:	f240 5107 	movw	r1, #1287	; 0x507
	psystem->system__stream_count_ctrl                         = 0x00;
 80071d6:	f88c 4001 	strb.w	r4, [ip, #1]
	psystem->firmware__enable                                  = 0x01;
 80071da:	f88c 7002 	strb.w	r7, [ip, #2]
	psystem->system__interrupt_clear                           = \
 80071de:	f88c 7003 	strb.w	r7, [ip, #3]
		ptiming->range_config__vcsel_period_a                = 0x07;
 80071e2:	f886 9006 	strb.w	r9, [r6, #6]
		ptiming->range_config__vcsel_period_b                = 0x05;
 80071e6:	f886 8009 	strb.w	r8, [r6, #9]
		ptiming->range_config__sigma_thresh                  =
 80071ea:	f8b5 9016 	ldrh.w	r9, [r5, #22]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 80071ee:	f8b5 801c 	ldrh.w	r8, [r5, #28]
		ptiming->range_config__sigma_thresh                  =
 80071f2:	f8a6 900a 	strh.w	r9, [r6, #10]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 80071f6:	f04f 09b1 	mov.w	r9, #177	; 0xb1
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 80071fa:	f8a6 800c 	strh.w	r8, [r6, #12]
		ptiming->system__intermeasurement_period = 0x00000600;
 80071fe:	f44f 68c0 	mov.w	r8, #1536	; 0x600
		ptiming->range_config__valid_phase_low               = 0x08;
 8007202:	f8a6 e00e 	strh.w	lr, [r6, #14]
		psystem->system__mode_start =
 8007206:	f04f 0e40 	mov.w	lr, #64	; 0x40
		pdynamic->sd_config__woi_sd0                         = 0x07;
 800720a:	8119      	strh	r1, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 800720c:	7a29      	ldrb	r1, [r5, #8]
 800720e:	7299      	strb	r1, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8007210:	7ae9      	ldrb	r1, [r5, #11]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8007212:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 8007214:	72d9      	strb	r1, [r3, #11]
		status = VL53L1_config_low_power_auto_mode(
 8007216:	4619      	mov	r1, r3
		ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 8007218:	71f7      	strb	r7, [r6, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 800721a:	f8a6 a004 	strh.w	sl, [r6, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 800721e:	f886 9008 	strb.w	r9, [r6, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8007222:	f8c6 8010 	str.w	r8, [r6, #16]
		pdynamic->system__seed_config =
 8007226:	f895 4022 	ldrb.w	r4, [r5, #34]	; 0x22
 800722a:	71dc      	strb	r4, [r3, #7]
		psystem->system__mode_start =
 800722c:	f88c e004 	strb.w	lr, [ip, #4]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8007230:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		status = VL53L1_config_low_power_auto_mode(
 8007234:	f000 bc90 	b.w	8007b58 <VL53L1_config_low_power_auto_mode>
 8007238:	00080200 	.word	0x00080200
 800723c:	01ff3800 	.word	0x01ff3800
 8007240:	20001a00 	.word	0x20001a00
 8007244:	02110000 	.word	0x02110000

08007248 <VL53L1_preset_mode_low_power_auto_long_ranging>:
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms,
	VL53L1_low_power_auto_data_t *plpadata)
{
 8007248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800724c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	pstatic->debug__ctrl                                      = 0x00;
 800724e:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8007250:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8007254:	f8df c128 	ldr.w	ip, [pc, #296]	; 8007380 <VL53L1_preset_mode_low_power_auto_long_ranging+0x138>
 8007258:	4e46      	ldr	r6, [pc, #280]	; (8007374 <VL53L1_preset_mode_low_power_auto_long_ranging+0x12c>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800725a:	2701      	movs	r7, #1
	pstatic->debug__ctrl                                      = 0x00;
 800725c:	f8c0 c00a 	str.w	ip, [r0, #10]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8007260:	f04f 6932 	mov.w	r9, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8007264:	f8c0 600e 	str.w	r6, [r0, #14]
{
 8007268:	4616      	mov	r6, r2
	pstatic->debug__ctrl                                      = 0x00;
 800726a:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 800726e:	f640 5c02 	movw	ip, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8007272:	f8c0 4006 	str.w	r4, [r0, #6]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8007276:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 800727a:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 800727e:	f04f 0eff 	mov.w	lr, #255	; 0xff
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8007282:	7faa      	ldrb	r2, [r5, #30]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8007284:	f04f 0ac7 	mov.w	sl, #199	; 0xc7
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8007288:	7482      	strb	r2, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 800728a:	7fea      	ldrb	r2, [r5, #31]
 800728c:	74c2      	strb	r2, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800728e:	f895 2020 	ldrb.w	r2, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8007292:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8007294:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8007296:	7547      	strb	r7, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8007298:	f880 e01a 	strb.w	lr, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800729c:	7502      	strb	r2, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 800729e:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 80072a0:	7c2a      	ldrb	r2, [r5, #16]
 80072a2:	76c2      	strb	r2, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80072a4:	7b2a      	ldrb	r2, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80072a6:	7744      	strb	r4, [r0, #29]
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80072a8:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80072aa:	77c4      	strb	r4, [r0, #31]
	pstatic->algo__consistency_check__tolerance               =
 80072ac:	7702      	strb	r2, [r0, #28]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80072ae:	f8c1 9000 	str.w	r9, [r1]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 80072b2:	f04f 090f 	mov.w	r9, #15
	pgeneral->cal_config__repeat_rate                         =
 80072b6:	89ea      	ldrh	r2, [r5, #14]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80072b8:	482f      	ldr	r0, [pc, #188]	; (8007378 <VL53L1_preset_mode_low_power_auto_long_ranging+0x130>)
	pgeneral->global_config__vcsel_width                      = 0x02;
 80072ba:	f8a1 c006 	strh.w	ip, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 80072be:	808a      	strh	r2, [r1, #4]
	pgeneral->phasecal_config__target                         =
 80072c0:	7b6a      	ldrb	r2, [r5, #13]
{
 80072c2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
	pgeneral->phasecal_config__target                         =
 80072c6:	720a      	strb	r2, [r1, #8]
{
 80072c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
	pgeneral->phasecal_config__override                       = 0x00;
 80072ca:	724c      	strb	r4, [r1, #9]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 80072cc:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80072ce:	f8c1 0012 	str.w	r0, [r1, #18]
					ptuning_parms);

	/* now setup the low power auto mode */

	if (status == VL53L1_ERROR_NONE) {
		status = VL53L1_config_low_power_auto_mode(
 80072d2:	4608      	mov	r0, r1
	pgeneral->dss_config__roi_mode_control =
 80072d4:	728f      	strb	r7, [r1, #10]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80072d6:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80072da:	4928      	ldr	r1, [pc, #160]	; (800737c <VL53L1_preset_mode_low_power_auto_long_ranging+0x134>)
	ptiming->system__fractional_enable                        = 0x00;
 80072dc:	7534      	strb	r4, [r6, #20]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80072de:	6031      	str	r1, [r6, #0]
	pdynamic->system__sequence_config                          = \
 80072e0:	21db      	movs	r1, #219	; 0xdb
	pdynamic->system__thresh_high                              = 0x0000;
 80072e2:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 80072e6:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 80072e8:	701f      	strb	r7, [r3, #0]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80072ea:	731f      	strb	r7, [r3, #12]
	pdynamic->sd_config__first_order_select =
 80072ec:	f895 8024 	ldrb.w	r8, [r5, #36]	; 0x24
 80072f0:	f883 800d 	strb.w	r8, [r3, #13]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 80072f4:	f04f 080d 	mov.w	r8, #13
	pdynamic->sd_config__quantifier         =
 80072f8:	f895 b023 	ldrb.w	fp, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80072fc:	f883 e010 	strb.w	lr, [r3, #16]
		ptiming->range_config__valid_phase_low               = 0x08;
 8007300:	f64b 0e08 	movw	lr, #47112	; 0xb808
	pdynamic->sd_config__quantifier         =
 8007304:	f883 b00e 	strb.w	fp, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8007308:	f883 a00f 	strb.w	sl, [r3, #15]
	pdynamic->system__sequence_config                          = \
 800730c:	7459      	strb	r1, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 800730e:	f640 510f 	movw	r1, #3343	; 0xd0f
	psystem->system__stream_count_ctrl                         = 0x00;
 8007312:	f88c 4001 	strb.w	r4, [ip, #1]
	psystem->firmware__enable                                  = 0x01;
 8007316:	f88c 7002 	strb.w	r7, [ip, #2]
	psystem->system__interrupt_clear                           = \
 800731a:	f88c 7003 	strb.w	r7, [ip, #3]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 800731e:	f886 9006 	strb.w	r9, [r6, #6]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8007322:	f44f 4917 	mov.w	r9, #38656	; 0x9700
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8007326:	f886 8009 	strb.w	r8, [r6, #9]
		ptiming->range_config__sigma_thresh                  =
 800732a:	f8b5 8012 	ldrh.w	r8, [r5, #18]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 800732e:	8b2f      	ldrh	r7, [r5, #24]
		ptiming->range_config__sigma_thresh                  =
 8007330:	f8a6 800a 	strh.w	r8, [r6, #10]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8007334:	f04f 08b1 	mov.w	r8, #177	; 0xb1
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8007338:	81b7      	strh	r7, [r6, #12]
		psystem->system__mode_start =
 800733a:	2740      	movs	r7, #64	; 0x40
		ptiming->range_config__valid_phase_low               = 0x08;
 800733c:	f8a6 e00e 	strh.w	lr, [r6, #14]
		ptiming->system__intermeasurement_period = 0x00000600;
 8007340:	f44f 6ec0 	mov.w	lr, #1536	; 0x600
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8007344:	8119      	strh	r1, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 8007346:	79a9      	ldrb	r1, [r5, #6]
 8007348:	7299      	strb	r1, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 800734a:	7a69      	ldrb	r1, [r5, #9]
		pdynamic->system__grouped_parameter_hold = 0x00;
 800734c:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 800734e:	72d9      	strb	r1, [r3, #11]
		status = VL53L1_config_low_power_auto_mode(
 8007350:	4619      	mov	r1, r3
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 8007352:	71f4      	strb	r4, [r6, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8007354:	f8a6 9004 	strh.w	r9, [r6, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8007358:	f886 8008 	strb.w	r8, [r6, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 800735c:	f8c6 e010 	str.w	lr, [r6, #16]
		pdynamic->system__seed_config =
 8007360:	f895 4022 	ldrb.w	r4, [r5, #34]	; 0x22
 8007364:	71dc      	strb	r4, [r3, #7]
		psystem->system__mode_start =
 8007366:	f88c 7004 	strb.w	r7, [ip, #4]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 800736a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		status = VL53L1_config_low_power_auto_mode(
 800736e:	f000 bbf3 	b.w	8007b58 <VL53L1_config_low_power_auto_mode>
 8007372:	bf00      	nop
 8007374:	00080200 	.word	0x00080200
 8007378:	01ff3800 	.word	0x01ff3800
 800737c:	20001a00 	.word	0x20001a00
 8007380:	02110000 	.word	0x02110000

08007384 <VL53L1_preset_mode_singleshot_ranging>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8007384:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007388:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 800738a:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 800738c:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8007390:	f8df c124 	ldr.w	ip, [pc, #292]	; 80074b8 <VL53L1_preset_mode_singleshot_ranging+0x134>
 8007394:	4f45      	ldr	r7, [pc, #276]	; (80074ac <VL53L1_preset_mode_singleshot_ranging+0x128>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8007396:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8007398:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 800739c:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 80073a0:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80073a4:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80073a8:	f8c0 4002 	str.w	r4, [r0, #2]
 80073ac:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80073b0:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80073b4:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80073b8:	f895 801e 	ldrb.w	r8, [r5, #30]
 80073bc:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80073c0:	f895 801f 	ldrb.w	r8, [r5, #31]
 80073c4:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80073c8:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 80073cc:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 80073ce:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80073d0:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80073d2:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80073d6:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80073da:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 80073dc:	f895 8010 	ldrb.w	r8, [r5, #16]
 80073e0:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80073e4:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80073e8:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80073ea:	f880 801c 	strb.w	r8, [r0, #28]
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 80073ee:	f04f 080b 	mov.w	r8, #11
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80073f2:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80073f4:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80073f6:	f44f 400c 	mov.w	r0, #35840	; 0x8c00
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80073fa:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 80073fc:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80073fe:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8007402:	f04f 0e09 	mov.w	lr, #9
	pgeneral->cal_config__repeat_rate                         =
 8007406:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8007408:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 800740a:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 800740c:	720f      	strb	r7, [r1, #8]
{
 800740e:	9f07      	ldr	r7, [sp, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8007410:	8208      	strh	r0, [r1, #16]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8007412:	4827      	ldr	r0, [pc, #156]	; (80074b0 <VL53L1_preset_mode_singleshot_ranging+0x12c>)
	pgeneral->dss_config__roi_mode_control =
 8007414:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8007416:	f8c1 0012 	str.w	r0, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800741a:	4826      	ldr	r0, [pc, #152]	; (80074b4 <VL53L1_preset_mode_singleshot_ranging+0x130>)
	pgeneral->system__thresh_rate_high                        = 0x0000;
 800741c:	60cc      	str	r4, [r1, #12]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800741e:	2108      	movs	r1, #8
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8007420:	6010      	str	r0, [r2, #0]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8007422:	2078      	movs	r0, #120	; 0x78
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8007424:	f882 e009 	strb.w	lr, [r2, #9]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8007428:	f640 1e0b 	movw	lr, #2315	; 0x90b
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 800742c:	f882 8006 	strb.w	r8, [r2, #6]
	ptiming->range_config__sigma_thresh                       =
 8007430:	f8b5 9014 	ldrh.w	r9, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8007434:	f8b5 801a 	ldrh.w	r8, [r5, #26]
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8007438:	6114      	str	r4, [r2, #16]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 800743a:	f8a2 800c 	strh.w	r8, [r2, #12]
		pdynamic->system__grouped_parameter_hold = 0x00;

		/* Timing Configuration */

		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 800743e:	f44f 4831 	mov.w	r8, #45312	; 0xb100
	ptiming->system__fractional_enable                        = 0x00;
 8007442:	7514      	strb	r4, [r2, #20]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8007444:	7391      	strb	r1, [r2, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8007446:	21c7      	movs	r1, #199	; 0xc7
	ptiming->range_config__valid_phase_high                   = 0x78;
 8007448:	73d0      	strb	r0, [r2, #15]
	pdynamic->system__sequence_config                          = \
 800744a:	20db      	movs	r0, #219	; 0xdb
	ptiming->range_config__sigma_thresh                       =
 800744c:	f8a2 900a 	strh.w	r9, [r2, #10]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8007450:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8007452:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8007456:	719c      	strb	r4, [r3, #6]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8007458:	f8a3 e008 	strh.w	lr, [r3, #8]
	pdynamic->sd_config__initial_phase_sd0                     =
 800745c:	f895 e007 	ldrb.w	lr, [r5, #7]
 8007460:	f883 e00a 	strb.w	lr, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8007464:	f895 e00a 	ldrb.w	lr, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8007468:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 800746a:	f883 e00b 	strb.w	lr, [r3, #11]
		ptiming->range_config__timeout_macrop_a_lo                = 0xB1;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 800746e:	f04f 0ed4 	mov.w	lr, #212	; 0xd4
	pdynamic->sd_config__first_order_select =
 8007472:	f895 9024 	ldrb.w	r9, [r5, #36]	; 0x24
 8007476:	f883 900d 	strb.w	r9, [r3, #13]
	pdynamic->sd_config__quantifier         =
 800747a:	f895 9023 	ldrb.w	r9, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800747e:	73d9      	strb	r1, [r3, #15]
				ptuning_parms->tp_timed_seed_cfg;

		/* System control */

		/* Configure Timed/Psuedo-solo mode */
		psystem->system__mode_start = \
 8007480:	2110      	movs	r1, #16
	pdynamic->system__sequence_config                          = \
 8007482:	7458      	strb	r0, [r3, #17]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8007484:	4620      	mov	r0, r4
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8007486:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 800748a:	f883 900e 	strb.w	r9, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 800748e:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 8007490:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 8007492:	70fe      	strb	r6, [r7, #3]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8007494:	749c      	strb	r4, [r3, #18]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 8007496:	71d4      	strb	r4, [r2, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8007498:	f8a2 8004 	strh.w	r8, [r2, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 800749c:	f882 e008 	strb.w	lr, [r2, #8]
		pdynamic->system__seed_config =
 80074a0:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 80074a4:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start = \
 80074a6:	7139      	strb	r1, [r7, #4]
}
 80074a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80074ac:	00080200 	.word	0x00080200
 80074b0:	01ff3800 	.word	0x01ff3800
 80074b4:	20001a00 	.word	0x20001a00
 80074b8:	02110000 	.word	0x02110000

080074bc <VL53L1_preset_mode_olt>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 80074bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80074c0:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 80074c2:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80074c4:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 80074c8:	f8df c114 	ldr.w	ip, [pc, #276]	; 80075e0 <VL53L1_preset_mode_olt+0x124>
 80074cc:	4f3f      	ldr	r7, [pc, #252]	; (80075cc <VL53L1_preset_mode_olt+0x110>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80074ce:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 80074d0:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80074d4:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 80074d8:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80074dc:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80074e0:	f8c0 4002 	str.w	r4, [r0, #2]
 80074e4:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80074e8:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80074ec:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80074f0:	f895 801e 	ldrb.w	r8, [r5, #30]
 80074f4:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80074f8:	f895 801f 	ldrb.w	r8, [r5, #31]
 80074fc:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8007500:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8007504:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8007506:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8007508:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 800750a:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800750e:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8007512:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8007514:	f895 8010 	ldrb.w	r8, [r5, #16]
 8007518:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 800751c:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8007520:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8007522:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8007526:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 800752a:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 800752c:	77c4      	strb	r4, [r0, #31]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800752e:	f640 10f5 	movw	r0, #2549	; 0x9f5
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8007532:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8007534:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8007536:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800753a:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 800753e:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8007540:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8007542:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8007544:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8007546:	4f22      	ldr	r7, [pc, #136]	; (80075d0 <VL53L1_preset_mode_olt+0x114>)
	pgeneral->dss_config__roi_mode_control =
 8007548:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800754a:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 800754e:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8007550:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8007554:	4f1f      	ldr	r7, [pc, #124]	; (80075d4 <VL53L1_preset_mode_olt+0x118>)
 8007556:	4920      	ldr	r1, [pc, #128]	; (80075d8 <VL53L1_preset_mode_olt+0x11c>)
 8007558:	8110      	strh	r0, [r2, #8]
	ptiming->range_config__valid_phase_high                   = 0x78;
 800755a:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800755c:	6011      	str	r1, [r2, #0]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 800755e:	f640 110b 	movw	r1, #2315	; 0x90b
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8007562:	6057      	str	r7, [r2, #4]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8007564:	f8b5 801a 	ldrh.w	r8, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 8007568:	f8b5 9014 	ldrh.w	r9, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 800756c:	f8a2 800c 	strh.w	r8, [r2, #12]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8007570:	f04f 08c7 	mov.w	r8, #199	; 0xc7
	ptiming->range_config__sigma_thresh                       =
 8007574:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8007578:	f882 e00e 	strb.w	lr, [r2, #14]
	pdynamic->system__sequence_config                          = \
 800757c:	f04f 0edb 	mov.w	lr, #219	; 0xdb
	ptiming->range_config__valid_phase_high                   = 0x78;
 8007580:	73d0      	strb	r0, [r2, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8007582:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8007584:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8007586:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8007588:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 800758a:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 800758e:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8007590:	f895 2021 	ldrb.w	r2, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8007594:	8119      	strh	r1, [r3, #8]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8007596:	2102      	movs	r1, #2
	pdynamic->system__seed_config =
 8007598:	71da      	strb	r2, [r3, #7]
	pdynamic->sd_config__initial_phase_sd0                     =
 800759a:	79ea      	ldrb	r2, [r5, #7]
 800759c:	729a      	strb	r2, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 800759e:	7aaa      	ldrb	r2, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80075a0:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 80075a2:	72da      	strb	r2, [r3, #11]
	pdynamic->sd_config__first_order_select =
 80075a4:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
		psystem->system__stream_count_ctrl  = 0x01;
 80075a8:	4a0c      	ldr	r2, [pc, #48]	; (80075dc <VL53L1_preset_mode_olt+0x120>)
	pdynamic->sd_config__first_order_select =
 80075aa:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 80075ac:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80075b0:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 80075b4:	739c      	strb	r4, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80075b6:	f883 800f 	strb.w	r8, [r3, #15]
	pdynamic->system__sequence_config                          = \
 80075ba:	f883 e011 	strb.w	lr, [r3, #17]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 80075be:	7499      	strb	r1, [r3, #18]
		psystem->system__stream_count_ctrl  = 0x01;
 80075c0:	9b07      	ldr	r3, [sp, #28]
 80075c2:	f8c3 2001 	str.w	r2, [r3, #1]
}
 80075c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80075ca:	bf00      	nop
 80075cc:	00080200 	.word	0x00080200
 80075d0:	01ff3800 	.word	0x01ff3800
 80075d4:	010bcc01 	.word	0x010bcc01
 80075d8:	20001a00 	.word	0x20001a00
 80075dc:	21010101 	.word	0x21010101
 80075e0:	02110000 	.word	0x02110000

080075e4 <VL53L1_init_version>:
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	pdev->version.ll_major    = VL53L1_LL_API_IMPLEMENTATION_VER_MAJOR;
	pdev->version.ll_minor    = VL53L1_LL_API_IMPLEMENTATION_VER_MINOR;
	pdev->version.ll_build    = VL53L1_LL_API_IMPLEMENTATION_VER_SUB;
	pdev->version.ll_revision = VL53L1_LL_API_IMPLEMENTATION_VER_REVISION;
 80075e4:	f640 018e 	movw	r1, #2190	; 0x88e
 80075e8:	f240 2201 	movw	r2, #513	; 0x201
	pdev->version.ll_minor    = VL53L1_LL_API_IMPLEMENTATION_VER_MINOR;
 80075ec:	230d      	movs	r3, #13
	pdev->version.ll_revision = VL53L1_LL_API_IMPLEMENTATION_VER_REVISION;
 80075ee:	6241      	str	r1, [r0, #36]	; 0x24
 80075f0:	8502      	strh	r2, [r0, #40]	; 0x28
	pdev->version.ll_minor    = VL53L1_LL_API_IMPLEMENTATION_VER_MINOR;
 80075f2:	f880 302a 	strb.w	r3, [r0, #42]	; 0x2a
}
 80075f6:	4770      	bx	lr

080075f8 <VL53L1_init_ll_driver_state>:

	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);
	VL53L1_ll_driver_state_t *pstate = &(pdev->ll_state);

	pstate->cfg_device_state  = device_state;
	pstate->cfg_stream_count  = 0;
 80075f8:	2300      	movs	r3, #0
	pstate->cfg_gph_id        = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 80075fa:	2202      	movs	r2, #2
	pstate->cfg_device_state  = device_state;
 80075fc:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
	pstate->cfg_timing_status = 0;

	pstate->rd_device_state   = device_state;
 8007600:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
	pstate->cfg_stream_count  = 0;
 8007604:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
	pstate->cfg_timing_status = 0;
 8007608:	f880 302f 	strb.w	r3, [r0, #47]	; 0x2f
	pstate->rd_stream_count   = 0;
 800760c:	f880 3031 	strb.w	r3, [r0, #49]	; 0x31
	pstate->rd_gph_id         = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
	pstate->rd_timing_status  = 0;
 8007610:	f880 3033 	strb.w	r3, [r0, #51]	; 0x33
	pstate->cfg_gph_id        = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007614:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
	pstate->rd_gph_id         = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007618:	f880 2032 	strb.w	r2, [r0, #50]	; 0x32

}
 800761c:	4770      	bx	lr
 800761e:	bf00      	nop

08007620 <VL53L1_update_ll_driver_rd_state>:

#ifdef VL53L1_LOGGING
	VL53L1_print_ll_driver_state(pstate);
#endif

	if ((pdev->sys_ctrl.system__mode_start &
 8007620:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
 8007624:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8007628:	d017      	beq.n	800765a <VL53L1_update_ll_driver_rd_state+0x3a>

		/*
		 * implement read stream count
		 */

		if (pstate->rd_stream_count == 0xFF) {
 800762a:	f890 3031 	ldrb.w	r3, [r0, #49]	; 0x31
 800762e:	2bff      	cmp	r3, #255	; 0xff
 8007630:	d017      	beq.n	8007662 <VL53L1_update_ll_driver_rd_state+0x42>
			pstate->rd_stream_count = 0x80;
		} else {
			pstate->rd_stream_count++;
 8007632:	3301      	adds	r3, #1
 8007634:	b2db      	uxtb	r3, r3

		/*
		 * Toggle grouped parameter hold ID
		 */

		pstate->rd_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007636:	f890 1032 	ldrb.w	r1, [r0, #50]	; 0x32

		/* Ok now ranging  */

		switch (pstate->rd_device_state) {
 800763a:	f890 2030 	ldrb.w	r2, [r0, #48]	; 0x30
		pstate->rd_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 800763e:	f081 0102 	eor.w	r1, r1, #2
 8007642:	f880 3031 	strb.w	r3, [r0, #49]	; 0x31
		switch (pstate->rd_device_state) {
 8007646:	1ed3      	subs	r3, r2, #3
		pstate->rd_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007648:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
		switch (pstate->rd_device_state) {
 800764c:	2b05      	cmp	r3, #5
 800764e:	d804      	bhi.n	800765a <VL53L1_update_ll_driver_rd_state+0x3a>
 8007650:	e8df f003 	tbb	[pc, r3]
 8007654:	19030321 	.word	0x19030321
 8007658:	0914      	.short	0x0914

		break;

		default:

			pstate->rd_device_state  =
 800765a:	4b17      	ldr	r3, [pc, #92]	; (80076b8 <VL53L1_update_ll_driver_rd_state+0x98>)
 800765c:	6303      	str	r3, [r0, #48]	; 0x30
#endif

	LOG_FUNCTION_END(status);

	return status;
}
 800765e:	2000      	movs	r0, #0
 8007660:	4770      	bx	lr
			pstate->rd_stream_count = 0x80;
 8007662:	2380      	movs	r3, #128	; 0x80
 8007664:	e7e7      	b.n	8007636 <VL53L1_update_ll_driver_rd_state+0x16>
			pstate->rd_timing_status ^= 0x01;
 8007666:	f890 3033 	ldrb.w	r3, [r0, #51]	; 0x33
			pstate->rd_device_state =
 800766a:	2208      	movs	r2, #8
			pstate->rd_timing_status ^= 0x01;
 800766c:	f083 0301 	eor.w	r3, r3, #1
			pstate->rd_device_state =
 8007670:	f880 2030 	strb.w	r2, [r0, #48]	; 0x30
			pstate->rd_timing_status ^= 0x01;
 8007674:	f880 3033 	strb.w	r3, [r0, #51]	; 0x33
}
 8007678:	2000      	movs	r0, #0
 800767a:	4770      	bx	lr
			pstate->rd_device_state =
 800767c:	2308      	movs	r3, #8
 800767e:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
}
 8007682:	2000      	movs	r0, #0
 8007684:	4770      	bx	lr
			pstate->rd_stream_count = 0;
 8007686:	2200      	movs	r2, #0
			pstate->rd_device_state =
 8007688:	2308      	movs	r3, #8
			pstate->rd_stream_count = 0;
 800768a:	f880 2031 	strb.w	r2, [r0, #49]	; 0x31
			pstate->rd_device_state =
 800768e:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
}
 8007692:	2000      	movs	r0, #0
 8007694:	4770      	bx	lr
			if ((pdev->dyn_cfg.system__grouped_parameter_hold &
 8007696:	f890 21c6 	ldrb.w	r2, [r0, #454]	; 0x1c6
			pstate->rd_stream_count  = 0;
 800769a:	2300      	movs	r3, #0
			if ((pdev->dyn_cfg.system__grouped_parameter_hold &
 800769c:	f012 0f02 	tst.w	r2, #2
			pstate->rd_stream_count  = 0;
 80076a0:	f880 3031 	strb.w	r3, [r0, #49]	; 0x31
			pstate->rd_timing_status = 0;
 80076a4:	f880 3033 	strb.w	r3, [r0, #51]	; 0x33
				pstate->rd_device_state =
 80076a8:	bf14      	ite	ne
 80076aa:	2306      	movne	r3, #6
 80076ac:	2308      	moveq	r3, #8
 80076ae:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
}
 80076b2:	2000      	movs	r0, #0
 80076b4:	4770      	bx	lr
 80076b6:	bf00      	nop
 80076b8:	00020003 	.word	0x00020003

080076bc <VL53L1_check_ll_driver_rd_state>:
	device_gph_id = (psys_results->result__interrupt_status &
		VL53L1_INTERRUPT_STATUS__GPH_ID_INT_STATUS_MASK) >> 4;

	/* only apply checks in back to back mode */

	if ((pdev->sys_ctrl.system__mode_start &
 80076bc:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
 80076c0:	f013 0320 	ands.w	r3, r3, #32
 80076c4:	d01d      	beq.n	8007702 <VL53L1_check_ll_driver_rd_state+0x46>
		 *
		 * In theory the stream count should zero for the GPH interrupt
		 * but that is not the case after at abort ....
		 */

		if (pstate->rd_device_state ==
 80076c6:	f890 2030 	ldrb.w	r2, [r0, #48]	; 0x30
			psys_results->result__range_status &
 80076ca:	f890 31cf 	ldrb.w	r3, [r0, #463]	; 0x1cf
		if (pstate->rd_device_state ==
 80076ce:	2a06      	cmp	r2, #6
 80076d0:	d019      	beq.n	8007706 <VL53L1_check_ll_driver_rd_state+0x4a>
{
 80076d2:	b410      	push	{r4}
		VL53L1_INTERRUPT_STATUS__GPH_ID_INT_STATUS_MASK) >> 4;
 80076d4:	f890 31ce 	ldrb.w	r3, [r0, #462]	; 0x1ce
			if (device_range_status !=
				VL53L1_DEVICEERROR_GPHSTREAMCOUNT0READY) {
				status = VL53L1_ERROR_GPH_SYNC_CHECK_FAIL;
			}
		} else {
			if (pstate->rd_stream_count != device_stream_count) {
 80076d8:	f890 4031 	ldrb.w	r4, [r0, #49]	; 0x31
 80076dc:	f890 11d1 	ldrb.w	r1, [r0, #465]	; 0x1d1
		VL53L1_INTERRUPT_STATUS__GPH_ID_INT_STATUS_MASK) >> 4;
 80076e0:	111b      	asrs	r3, r3, #4

		/*
		 * Check Read state GPH ID
		 */

		if (pstate->rd_gph_id != device_gph_id) {
 80076e2:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
			if (pstate->rd_stream_count != device_stream_count) {
 80076e6:	428c      	cmp	r4, r1
		if (pstate->rd_gph_id != device_gph_id) {
 80076e8:	f003 0302 	and.w	r3, r3, #2
	} /* if back to back */

	LOG_FUNCTION_END(status);

	return status;
}
 80076ec:	f85d 4b04 	ldr.w	r4, [sp], #4
				status = VL53L1_ERROR_STREAM_COUNT_CHECK_FAIL;
 80076f0:	bf14      	ite	ne
 80076f2:	f06f 0011 	mvnne.w	r0, #17
 80076f6:	2000      	moveq	r0, #0
		if (pstate->rd_gph_id != device_gph_id) {
 80076f8:	429a      	cmp	r2, r3
			status = VL53L1_ERROR_GPH_ID_CHECK_FAIL;
 80076fa:	bf18      	it	ne
 80076fc:	f06f 0012 	mvnne.w	r0, #18
}
 8007700:	4770      	bx	lr
	VL53L1_Error         status = VL53L1_ERROR_NONE;
 8007702:	4618      	mov	r0, r3
}
 8007704:	4770      	bx	lr
			if (device_range_status !=
 8007706:	f003 031f 	and.w	r3, r3, #31
 800770a:	2b12      	cmp	r3, #18
				status = VL53L1_ERROR_GPH_SYNC_CHECK_FAIL;
 800770c:	bf0c      	ite	eq
 800770e:	2000      	moveq	r0, #0
 8007710:	f06f 0010 	mvnne.w	r0, #16
 8007714:	4770      	bx	lr
 8007716:	bf00      	nop

08007718 <VL53L1_update_ll_driver_cfg_state>:
	VL53L1_print_ll_driver_state(pstate);
#endif

	/* if top bits of mode start reset are zero then in standby state */

	if ((pdev->sys_ctrl.system__mode_start &
 8007718:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
 800771c:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8007720:	d013      	beq.n	800774a <VL53L1_update_ll_driver_cfg_state+0x32>

		/*
		 * implement configuration stream count
		 */

		if (pstate->cfg_stream_count == 0xFF) {
 8007722:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8007726:	2bff      	cmp	r3, #255	; 0xff
 8007728:	d013      	beq.n	8007752 <VL53L1_update_ll_driver_cfg_state+0x3a>
			pstate->cfg_stream_count = 0x80;
		} else {
			pstate->cfg_stream_count++;
 800772a:	3301      	adds	r3, #1
 800772c:	b2db      	uxtb	r3, r3

		/*
		 * Toggle grouped parameter hold ID
		 */

		pstate->cfg_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 800772e:	f890 202e 	ldrb.w	r2, [r0, #46]	; 0x2e

		/*
		 * Implement configuration state machine
		 */

		switch (pstate->cfg_device_state) {
 8007732:	f890 102c 	ldrb.w	r1, [r0, #44]	; 0x2c
		pstate->cfg_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007736:	f082 0202 	eor.w	r2, r2, #2
 800773a:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
		switch (pstate->cfg_device_state) {
 800773e:	2903      	cmp	r1, #3
		pstate->cfg_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007740:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
		switch (pstate->cfg_device_state) {
 8007744:	d00f      	beq.n	8007766 <VL53L1_update_ll_driver_cfg_state+0x4e>
 8007746:	2904      	cmp	r1, #4
 8007748:	d005      	beq.n	8007756 <VL53L1_update_ll_driver_cfg_state+0x3e>

		break;

		default:

			pstate->cfg_device_state = VL53L1_DEVICESTATE_SW_STANDBY;
 800774a:	4b0d      	ldr	r3, [pc, #52]	; (8007780 <VL53L1_update_ll_driver_cfg_state+0x68>)
 800774c:	62c3      	str	r3, [r0, #44]	; 0x2c
#endif

	LOG_FUNCTION_END(status);

	return status;
}
 800774e:	2000      	movs	r0, #0
 8007750:	4770      	bx	lr
			pstate->cfg_stream_count = 0x80;
 8007752:	2380      	movs	r3, #128	; 0x80
 8007754:	e7eb      	b.n	800772e <VL53L1_update_ll_driver_cfg_state+0x16>
			pstate->cfg_timing_status ^= 0x01;
 8007756:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800775a:	f083 0301 	eor.w	r3, r3, #1
 800775e:	f880 302f 	strb.w	r3, [r0, #47]	; 0x2f
}
 8007762:	2000      	movs	r0, #0
 8007764:	4770      	bx	lr
			pstate->cfg_timing_status ^= 0x01;
 8007766:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
			pstate->cfg_stream_count = 1;
 800776a:	2101      	movs	r1, #1
			pstate->cfg_device_state = VL53L1_DEVICESTATE_RANGING_DSS_AUTO;
 800776c:	2204      	movs	r2, #4
			pstate->cfg_timing_status ^= 0x01;
 800776e:	404b      	eors	r3, r1
			pstate->cfg_stream_count = 1;
 8007770:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
			pstate->cfg_device_state = VL53L1_DEVICESTATE_RANGING_DSS_AUTO;
 8007774:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
			pstate->cfg_timing_status ^= 0x01;
 8007778:	f880 302f 	strb.w	r3, [r0, #47]	; 0x2f
}
 800777c:	2000      	movs	r0, #0
 800777e:	4770      	bx	lr
 8007780:	00020003 	.word	0x00020003

08007784 <VL53L1_copy_rtn_good_spads_to_buffer>:
{
	/*
	 * Convenience function to copy return SPAD enables to buffer
	 */

	*(pbuffer +  0) = pdata->global_config__spad_enables_rtn_0;
 8007784:	7c03      	ldrb	r3, [r0, #16]
 8007786:	700b      	strb	r3, [r1, #0]
	*(pbuffer +  1) = pdata->global_config__spad_enables_rtn_1;
 8007788:	7c43      	ldrb	r3, [r0, #17]
 800778a:	704b      	strb	r3, [r1, #1]
	*(pbuffer +  2) = pdata->global_config__spad_enables_rtn_2;
 800778c:	7c83      	ldrb	r3, [r0, #18]
 800778e:	708b      	strb	r3, [r1, #2]
	*(pbuffer +  3) = pdata->global_config__spad_enables_rtn_3;
 8007790:	7cc3      	ldrb	r3, [r0, #19]
 8007792:	70cb      	strb	r3, [r1, #3]
	*(pbuffer +  4) = pdata->global_config__spad_enables_rtn_4;
 8007794:	7d03      	ldrb	r3, [r0, #20]
 8007796:	710b      	strb	r3, [r1, #4]
	*(pbuffer +  5) = pdata->global_config__spad_enables_rtn_5;
 8007798:	7d43      	ldrb	r3, [r0, #21]
 800779a:	714b      	strb	r3, [r1, #5]
	*(pbuffer +  6) = pdata->global_config__spad_enables_rtn_6;
 800779c:	7d83      	ldrb	r3, [r0, #22]
 800779e:	718b      	strb	r3, [r1, #6]
	*(pbuffer +  7) = pdata->global_config__spad_enables_rtn_7;
 80077a0:	7dc3      	ldrb	r3, [r0, #23]
 80077a2:	71cb      	strb	r3, [r1, #7]
	*(pbuffer +  8) = pdata->global_config__spad_enables_rtn_8;
 80077a4:	7e03      	ldrb	r3, [r0, #24]
 80077a6:	720b      	strb	r3, [r1, #8]
	*(pbuffer +  9) = pdata->global_config__spad_enables_rtn_9;
 80077a8:	7e43      	ldrb	r3, [r0, #25]
 80077aa:	724b      	strb	r3, [r1, #9]
	*(pbuffer + 10) = pdata->global_config__spad_enables_rtn_10;
 80077ac:	7e83      	ldrb	r3, [r0, #26]
 80077ae:	728b      	strb	r3, [r1, #10]
	*(pbuffer + 11) = pdata->global_config__spad_enables_rtn_11;
 80077b0:	7ec3      	ldrb	r3, [r0, #27]
 80077b2:	72cb      	strb	r3, [r1, #11]
	*(pbuffer + 12) = pdata->global_config__spad_enables_rtn_12;
 80077b4:	7f03      	ldrb	r3, [r0, #28]
 80077b6:	730b      	strb	r3, [r1, #12]
	*(pbuffer + 13) = pdata->global_config__spad_enables_rtn_13;
 80077b8:	7f43      	ldrb	r3, [r0, #29]
 80077ba:	734b      	strb	r3, [r1, #13]
	*(pbuffer + 14) = pdata->global_config__spad_enables_rtn_14;
 80077bc:	7f83      	ldrb	r3, [r0, #30]
 80077be:	738b      	strb	r3, [r1, #14]
	*(pbuffer + 15) = pdata->global_config__spad_enables_rtn_15;
 80077c0:	7fc3      	ldrb	r3, [r0, #31]
 80077c2:	73cb      	strb	r3, [r1, #15]
	*(pbuffer + 16) = pdata->global_config__spad_enables_rtn_16;
 80077c4:	f890 3020 	ldrb.w	r3, [r0, #32]
 80077c8:	740b      	strb	r3, [r1, #16]
	*(pbuffer + 17) = pdata->global_config__spad_enables_rtn_17;
 80077ca:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 80077ce:	744b      	strb	r3, [r1, #17]
	*(pbuffer + 18) = pdata->global_config__spad_enables_rtn_18;
 80077d0:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80077d4:	748b      	strb	r3, [r1, #18]
	*(pbuffer + 19) = pdata->global_config__spad_enables_rtn_19;
 80077d6:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80077da:	74cb      	strb	r3, [r1, #19]
	*(pbuffer + 20) = pdata->global_config__spad_enables_rtn_20;
 80077dc:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80077e0:	750b      	strb	r3, [r1, #20]
	*(pbuffer + 21) = pdata->global_config__spad_enables_rtn_21;
 80077e2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80077e6:	754b      	strb	r3, [r1, #21]
	*(pbuffer + 22) = pdata->global_config__spad_enables_rtn_22;
 80077e8:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 80077ec:	758b      	strb	r3, [r1, #22]
	*(pbuffer + 23) = pdata->global_config__spad_enables_rtn_23;
 80077ee:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 80077f2:	75cb      	strb	r3, [r1, #23]
	*(pbuffer + 24) = pdata->global_config__spad_enables_rtn_24;
 80077f4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80077f8:	760b      	strb	r3, [r1, #24]
	*(pbuffer + 25) = pdata->global_config__spad_enables_rtn_25;
 80077fa:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
 80077fe:	764b      	strb	r3, [r1, #25]
	*(pbuffer + 26) = pdata->global_config__spad_enables_rtn_26;
 8007800:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
 8007804:	768b      	strb	r3, [r1, #26]
	*(pbuffer + 27) = pdata->global_config__spad_enables_rtn_27;
 8007806:	f890 302b 	ldrb.w	r3, [r0, #43]	; 0x2b
 800780a:	76cb      	strb	r3, [r1, #27]
	*(pbuffer + 28) = pdata->global_config__spad_enables_rtn_28;
 800780c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007810:	770b      	strb	r3, [r1, #28]
	*(pbuffer + 29) = pdata->global_config__spad_enables_rtn_29;
 8007812:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8007816:	774b      	strb	r3, [r1, #29]
	*(pbuffer + 30) = pdata->global_config__spad_enables_rtn_30;
 8007818:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800781c:	778b      	strb	r3, [r1, #30]
	*(pbuffer + 31) = pdata->global_config__spad_enables_rtn_31;
 800781e:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 8007822:	77cb      	strb	r3, [r1, #31]
}
 8007824:	4770      	bx	lr
 8007826:	bf00      	nop

08007828 <VL53L1_i2c_encode_uint16_t>:
	uint16_t   i    = 0;
	uint16_t   data = 0;

	data =  ip_value;

	for (i = 0; i < count ; i++) {
 8007828:	b179      	cbz	r1, 800784a <VL53L1_i2c_encode_uint16_t+0x22>
 800782a:	1e53      	subs	r3, r2, #1
 800782c:	440a      	add	r2, r1
{
 800782e:	b410      	push	{r4}
 8007830:	1e4c      	subs	r4, r1, #1
 8007832:	4419      	add	r1, r3
 8007834:	b2a3      	uxth	r3, r4
 8007836:	1ac9      	subs	r1, r1, r3
		pbuffer[count-i-1] = (uint8_t)(data & 0x00FF);
 8007838:	f802 0d01 	strb.w	r0, [r2, #-1]!
	for (i = 0; i < count ; i++) {
 800783c:	4291      	cmp	r1, r2
		data = data >> 8;
 800783e:	ea4f 2010 	mov.w	r0, r0, lsr #8
	for (i = 0; i < count ; i++) {
 8007842:	d1f9      	bne.n	8007838 <VL53L1_i2c_encode_uint16_t+0x10>
	}
}
 8007844:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007848:	4770      	bx	lr
 800784a:	4770      	bx	lr

0800784c <VL53L1_i2c_decode_uint16_t>:
	 * (MS byte first order)
	 */

	uint16_t   value = 0x00;

	while (count-- > 0) {
 800784c:	1e43      	subs	r3, r0, #1
 800784e:	b29b      	uxth	r3, r3
 8007850:	b148      	cbz	r0, 8007866 <VL53L1_i2c_decode_uint16_t+0x1a>
 8007852:	3301      	adds	r3, #1
	uint16_t   value = 0x00;
 8007854:	2000      	movs	r0, #0
 8007856:	440b      	add	r3, r1
		value = (value << 8) | (uint16_t)*pbuffer++;
 8007858:	f811 2b01 	ldrb.w	r2, [r1], #1
 800785c:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
	while (count-- > 0) {
 8007860:	4299      	cmp	r1, r3
		value = (value << 8) | (uint16_t)*pbuffer++;
 8007862:	b280      	uxth	r0, r0
	while (count-- > 0) {
 8007864:	d1f8      	bne.n	8007858 <VL53L1_i2c_decode_uint16_t+0xc>
	}

	return value;
}
 8007866:	4770      	bx	lr

08007868 <VL53L1_i2c_encode_int16_t>:
	uint16_t   i    = 0;
	int16_t    data = 0;

	data =  ip_value;

	for (i = 0; i < count ; i++) {
 8007868:	b179      	cbz	r1, 800788a <VL53L1_i2c_encode_int16_t+0x22>
 800786a:	1e53      	subs	r3, r2, #1
 800786c:	440a      	add	r2, r1
{
 800786e:	b410      	push	{r4}
 8007870:	1e4c      	subs	r4, r1, #1
 8007872:	4419      	add	r1, r3
 8007874:	b2a3      	uxth	r3, r4
 8007876:	1ac9      	subs	r1, r1, r3
		pbuffer[count-i-1] = (uint8_t)(data & 0x00FF);
 8007878:	f802 0d01 	strb.w	r0, [r2, #-1]!
	for (i = 0; i < count ; i++) {
 800787c:	4291      	cmp	r1, r2
		data = data >> 8;
 800787e:	ea4f 2020 	mov.w	r0, r0, asr #8
	for (i = 0; i < count ; i++) {
 8007882:	d1f9      	bne.n	8007878 <VL53L1_i2c_encode_int16_t+0x10>
	}
}
 8007884:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007888:	4770      	bx	lr
 800788a:	4770      	bx	lr

0800788c <VL53L1_i2c_decode_int16_t>:
	 */

	int16_t    value = 0x00;

	/* implement sign extension */
	if (*pbuffer >= 0x80) {
 800788c:	f991 3000 	ldrsb.w	r3, [r1]
		value = 0xFFFF;
	}

	while (count-- > 0) {
 8007890:	1e42      	subs	r2, r0, #1
	if (*pbuffer >= 0x80) {
 8007892:	17db      	asrs	r3, r3, #31
	while (count-- > 0) {
 8007894:	b292      	uxth	r2, r2
	if (*pbuffer >= 0x80) {
 8007896:	b21b      	sxth	r3, r3
	while (count-- > 0) {
 8007898:	b140      	cbz	r0, 80078ac <VL53L1_i2c_decode_int16_t+0x20>
 800789a:	3201      	adds	r2, #1
 800789c:	440a      	add	r2, r1
		value = (value << 8) | (int16_t)*pbuffer++;
 800789e:	f811 0b01 	ldrb.w	r0, [r1], #1
 80078a2:	b25b      	sxtb	r3, r3
	while (count-- > 0) {
 80078a4:	4291      	cmp	r1, r2
		value = (value << 8) | (int16_t)*pbuffer++;
 80078a6:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
	while (count-- > 0) {
 80078aa:	d1f8      	bne.n	800789e <VL53L1_i2c_decode_int16_t+0x12>
	}

	return value;
}
 80078ac:	4618      	mov	r0, r3
 80078ae:	4770      	bx	lr

080078b0 <VL53L1_i2c_encode_uint32_t>:
	uint16_t   i    = 0;
	uint32_t   data = 0;

	data =  ip_value;

	for (i = 0; i < count ; i++) {
 80078b0:	b179      	cbz	r1, 80078d2 <VL53L1_i2c_encode_uint32_t+0x22>
 80078b2:	1e53      	subs	r3, r2, #1
 80078b4:	440a      	add	r2, r1
{
 80078b6:	b410      	push	{r4}
 80078b8:	1e4c      	subs	r4, r1, #1
 80078ba:	4419      	add	r1, r3
 80078bc:	b2a3      	uxth	r3, r4
 80078be:	1ac9      	subs	r1, r1, r3
		pbuffer[count-i-1] = (uint8_t)(data & 0x00FF);
 80078c0:	f802 0d01 	strb.w	r0, [r2, #-1]!
	for (i = 0; i < count ; i++) {
 80078c4:	4291      	cmp	r1, r2
		data = data >> 8;
 80078c6:	ea4f 2010 	mov.w	r0, r0, lsr #8
	for (i = 0; i < count ; i++) {
 80078ca:	d1f9      	bne.n	80078c0 <VL53L1_i2c_encode_uint32_t+0x10>
	}
}
 80078cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80078d0:	4770      	bx	lr
 80078d2:	4770      	bx	lr

080078d4 <VL53L1_i2c_decode_uint32_t>:
	 * (MS byte first order)
	 */

	uint32_t   value = 0x00;

	while (count-- > 0) {
 80078d4:	1e43      	subs	r3, r0, #1
 80078d6:	b29b      	uxth	r3, r3
 80078d8:	b140      	cbz	r0, 80078ec <VL53L1_i2c_decode_uint32_t+0x18>
 80078da:	3301      	adds	r3, #1
	uint32_t   value = 0x00;
 80078dc:	2000      	movs	r0, #0
 80078de:	440b      	add	r3, r1
		value = (value << 8) | (uint32_t)*pbuffer++;
 80078e0:	f811 2b01 	ldrb.w	r2, [r1], #1
	while (count-- > 0) {
 80078e4:	4299      	cmp	r1, r3
		value = (value << 8) | (uint32_t)*pbuffer++;
 80078e6:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
	while (count-- > 0) {
 80078ea:	d1f9      	bne.n	80078e0 <VL53L1_i2c_decode_uint32_t+0xc>
	}

	return value;
}
 80078ec:	4770      	bx	lr
 80078ee:	bf00      	nop

080078f0 <VL53L1_i2c_decode_int32_t>:
	/* implement sign extension */
	if (*pbuffer >= 0x80) {
		value = 0xFFFFFFFF;
	}

	while (count-- > 0) {
 80078f0:	1e42      	subs	r2, r0, #1
	if (*pbuffer >= 0x80) {
 80078f2:	f991 3000 	ldrsb.w	r3, [r1]
	while (count-- > 0) {
 80078f6:	b292      	uxth	r2, r2
	if (*pbuffer >= 0x80) {
 80078f8:	17db      	asrs	r3, r3, #31
	while (count-- > 0) {
 80078fa:	b138      	cbz	r0, 800790c <VL53L1_i2c_decode_int32_t+0x1c>
 80078fc:	3201      	adds	r2, #1
 80078fe:	440a      	add	r2, r1
		value = (value << 8) | (int32_t)*pbuffer++;
 8007900:	f811 0b01 	ldrb.w	r0, [r1], #1
	while (count-- > 0) {
 8007904:	4291      	cmp	r1, r2
		value = (value << 8) | (int32_t)*pbuffer++;
 8007906:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
	while (count-- > 0) {
 800790a:	d1f9      	bne.n	8007900 <VL53L1_i2c_decode_int32_t+0x10>
	}

	return value;
}
 800790c:	4618      	mov	r0, r3
 800790e:	4770      	bx	lr

08007910 <VL53L1_enable_powerforce>:
	 */

	VL53L1_Error status       = VL53L1_ERROR_NONE;
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	pdev->sys_ctrl.power_management__go1_power_force = value;
 8007910:	2201      	movs	r2, #1

	status = VL53L1_WrByte(
 8007912:	2183      	movs	r1, #131	; 0x83
	pdev->sys_ctrl.power_management__go1_power_force = value;
 8007914:	f880 21c8 	strb.w	r2, [r0, #456]	; 0x1c8
	status = VL53L1_WrByte(
 8007918:	f000 be76 	b.w	8008608 <VL53L1_WrByte>

0800791c <VL53L1_calc_macro_period_us>:
#endif

uint32_t VL53L1_calc_macro_period_us(
	uint16_t  fast_osc_frequency,
	uint8_t   vcsel_period)
{
 800791c:	b538      	push	{r3, r4, r5, lr}
 800791e:	460d      	mov	r5, r1

	/*  Calculate PLL period in [us] from the  fast_osc_frequency
	 *  Fast osc frequency fixed point format = unsigned 4.12
	 */

	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8007920:	f000 f946 	bl	8007bb0 <VL53L1_calc_pll_period_us>
 8007924:	4604      	mov	r4, r0

	/*  VCSEL period
	 *  - the real VCSEL period in PLL clocks = 2*(VCSEL_PERIOD+1)
	 */

	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8007926:	4628      	mov	r0, r5
	 *  Max bits (24 - 6) + 12 = 30-bits usage
	 *
	 *  Downshift by 6 before multiplying by the VCSEL Period
	 */

	macro_period_us =
 8007928:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 800792c:	f000 f946 	bl	8007bbc <VL53L1_decode_vcsel_period>
	macro_period_us =
 8007930:	0224      	lsls	r4, r4, #8
			(uint32_t)VL53L1_MACRO_PERIOD_VCSEL_PERIODS *
			pll_period_us;
	macro_period_us = macro_period_us >> 6;
 8007932:	09a4      	lsrs	r4, r4, #6

	macro_period_us = macro_period_us * (uint32_t)vcsel_period_pclks;
 8007934:	fb04 f000 	mul.w	r0, r4, r0
#endif

	LOG_FUNCTION_END(0);

	return macro_period_us;
}
 8007938:	0980      	lsrs	r0, r0, #6
 800793a:	bd38      	pop	{r3, r4, r5, pc}

0800793c <VL53L1_calc_range_ignore_threshold>:

	LOG_FUNCTION_START("");

	/* Shift central_rate to .13 fractional for simple addition */

	central_rate_int = ((int32_t)central_rate * (1 << 4)) / (1000);
 800793c:	0100      	lsls	r0, r0, #4

	if (x_gradient < 0) {
 800793e:	2900      	cmp	r1, #0
{
 8007940:	b410      	push	{r4}
	central_rate_int = ((int32_t)central_rate * (1 << 4)) / (1000);
 8007942:	4c15      	ldr	r4, [pc, #84]	; (8007998 <VL53L1_calc_range_ignore_threshold+0x5c>)
 8007944:	fb84 c400 	smull	ip, r4, r4, r0
 8007948:	ea4f 70e0 	mov.w	r0, r0, asr #31
 800794c:	ebc0 10a4 	rsb	r0, r0, r4, asr #6
	if (x_gradient < 0) {
 8007950:	db1e      	blt.n	8007990 <VL53L1_calc_range_ignore_threshold+0x54>
 8007952:	2100      	movs	r1, #0
		x_gradient_int = x_gradient * -1;
	}

	if (y_gradient < 0) {
 8007954:	2a00      	cmp	r2, #0
 8007956:	da02      	bge.n	800795e <VL53L1_calc_range_ignore_threshold+0x22>
		y_gradient_int = y_gradient * -1;
 8007958:	4252      	negs	r2, r2
 800795a:	fa01 f182 	sxtah	r1, r1, r2

	/* Calculate full rate per spad - worst case from measured xtalk */
	/* Generated here from .11 fractional kcps */
	/* Additional factor of 4 applied to bring fractional precision to .13 */

	range_ignore_thresh_int = (8 * x_gradient_int * 4) + (8 * y_gradient_int * 4);
 800795e:	0149      	lsls	r1, r1, #5

	/* Convert Kcps to Mcps */

	range_ignore_thresh_int = range_ignore_thresh_int / 1000;
 8007960:	4c0d      	ldr	r4, [pc, #52]	; (8007998 <VL53L1_calc_range_ignore_threshold+0x5c>)
 8007962:	17ca      	asrs	r2, r1, #31
 8007964:	fb84 4101 	smull	r4, r1, r4, r1
#endif

	LOG_FUNCTION_END(0);

	return range_ignore_thresh_kcps;
}
 8007968:	f85d 4b04 	ldr.w	r4, [sp], #4
	range_ignore_thresh_int = range_ignore_thresh_int / 1000;
 800796c:	ebc2 11a1 	rsb	r1, r2, r1, asr #6
	range_ignore_thresh_int = range_ignore_thresh_int + central_rate_int;
 8007970:	4408      	add	r0, r1
	range_ignore_thresh_int = (int32_t)rate_mult * range_ignore_thresh_int;
 8007972:	fb00 f303 	mul.w	r3, r0, r3
	range_ignore_thresh_int = (range_ignore_thresh_int + (1<<4)) / (1<<5);
 8007976:	f113 0010 	adds.w	r0, r3, #16
 800797a:	bf48      	it	mi
 800797c:	f103 002f 	addmi.w	r0, r3, #47	; 0x2f
	return range_ignore_thresh_kcps;
 8007980:	f64f 73ff 	movw	r3, #65535	; 0xffff
	range_ignore_thresh_int = (range_ignore_thresh_int + (1<<4)) / (1<<5);
 8007984:	1140      	asrs	r0, r0, #5
	return range_ignore_thresh_kcps;
 8007986:	4298      	cmp	r0, r3
 8007988:	bfa8      	it	ge
 800798a:	4618      	movge	r0, r3
}
 800798c:	b280      	uxth	r0, r0
 800798e:	4770      	bx	lr
		x_gradient_int = x_gradient * -1;
 8007990:	4249      	negs	r1, r1
 8007992:	b209      	sxth	r1, r1
 8007994:	e7de      	b.n	8007954 <VL53L1_calc_range_ignore_threshold+0x18>
 8007996:	bf00      	nop
 8007998:	10624dd3 	.word	0x10624dd3

0800799c <VL53L1_calc_timeout_us>:
	uint64_t tmp            = 0;

	LOG_FUNCTION_START("");

	tmp  = (uint64_t)timeout_mclks * (uint64_t)macro_period_us;
	tmp += 0x00800;
 800799c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80079a0:	2300      	movs	r3, #0
 80079a2:	fbe1 2300 	umlal	r2, r3, r1, r0
	tmp  = tmp >> 12;
 80079a6:	0b10      	lsrs	r0, r2, #12
#endif

	LOG_FUNCTION_END(0);

	return timeout_us;
}
 80079a8:	ea40 5003 	orr.w	r0, r0, r3, lsl #20
 80079ac:	4770      	bx	lr
 80079ae:	bf00      	nop

080079b0 <VL53L1_calc_decoded_timeout_us>:
	 * format (LSByte * 2^MSByte) + 1
	 */

	uint32_t timeout_macro_clks = 0;

	timeout_macro_clks = ((uint32_t) (encoded_timeout & 0x00FF)
 80079b0:	b2c3      	uxtb	r3, r0
			<< (uint32_t) ((encoded_timeout & 0xFF00) >> 8)) + 1;
 80079b2:	0a00      	lsrs	r0, r0, #8
 80079b4:	fa03 f000 	lsl.w	r0, r3, r0
{
 80079b8:	b430      	push	{r4, r5}
	timeout_macro_clks = ((uint32_t) (encoded_timeout & 0x00FF)
 80079ba:	3001      	adds	r0, #1
	tmp += 0x00800;
 80079bc:	f44f 6400 	mov.w	r4, #2048	; 0x800
 80079c0:	2500      	movs	r5, #0
 80079c2:	fbe0 4501 	umlal	r4, r5, r0, r1
	tmp  = tmp >> 12;
 80079c6:	0b20      	lsrs	r0, r4, #12
}
 80079c8:	ea40 5005 	orr.w	r0, r0, r5, lsl #20
 80079cc:	bc30      	pop	{r4, r5}
 80079ce:	4770      	bx	lr

080079d0 <VL53L1_calc_timeout_register_values>:
	uint32_t                 mm_config_timeout_us,
	uint32_t                 range_config_timeout_us,
	uint16_t                 fast_osc_frequency,
	VL53L1_general_config_t *pgeneral,
	VL53L1_timing_config_t  *ptiming)
{
 80079d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80079d4:	9d09      	ldr	r5, [sp, #36]	; 0x24
	uint32_t timeout_mclks      = 0;
	uint16_t timeout_encoded    = 0;

	LOG_FUNCTION_START("");

	if (fast_osc_frequency == 0) {
 80079d6:	2b00      	cmp	r3, #0
 80079d8:	f000 80aa 	beq.w	8007b30 <VL53L1_calc_timeout_register_values+0x160>
 80079dc:	4681      	mov	r9, r0
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
	} else {
		/* Update Macro Period for Range A VCSEL Period */
		macro_period_us =
				VL53L1_calc_macro_period_us(
 80079de:	f895 a006 	ldrb.w	sl, [r5, #6]
	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 80079e2:	4618      	mov	r0, r3
 80079e4:	460c      	mov	r4, r1
 80079e6:	461f      	mov	r7, r3
 80079e8:	4616      	mov	r6, r2
 80079ea:	f000 f8e1 	bl	8007bb0 <VL53L1_calc_pll_period_us>
 80079ee:	4680      	mov	r8, r0
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 80079f0:	4650      	mov	r0, sl
			((timeout_us << 12) + (macro_period_us>>1)) /
 80079f2:	0324      	lsls	r4, r4, #12
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 80079f4:	f000 f8e2 	bl	8007bbc <VL53L1_decode_vcsel_period>
	macro_period_us =
 80079f8:	eb08 02c8 	add.w	r2, r8, r8, lsl #3
 80079fc:	0212      	lsls	r2, r2, #8
	macro_period_us = macro_period_us >> 6;
 80079fe:	0992      	lsrs	r2, r2, #6
	macro_period_us = macro_period_us * (uint32_t)vcsel_period_pclks;
 8007a00:	fb02 f200 	mul.w	r2, r2, r0
		/* clip as the phase cal timeout register is only 8-bits */
		if (timeout_mclks > 0xFF)
			timeout_mclks = 0xFF;

		pgeneral->phasecal_config__timeout_macrop =
				(uint8_t)timeout_mclks;
 8007a04:	9808      	ldr	r0, [sp, #32]
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007a06:	09d1      	lsrs	r1, r2, #7
	macro_period_us = macro_period_us >> 6;
 8007a08:	0992      	lsrs	r2, r2, #6
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007a0a:	eb01 3909 	add.w	r9, r1, r9, lsl #12
 8007a0e:	190b      	adds	r3, r1, r4
	timeout_mclks   =
 8007a10:	fbb9 f9f2 	udiv	r9, r9, r2
 8007a14:	fbb3 f3f2 	udiv	r3, r3, r2
				(uint8_t)timeout_mclks;
 8007a18:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8007a1c:	bf28      	it	cs
 8007a1e:	f04f 09ff 	movcs.w	r9, #255	; 0xff
 8007a22:	f880 9007 	strb.w	r9, [r0, #7]
	if (timeout_mclks > 0) {
 8007a26:	bb7b      	cbnz	r3, 8007a88 <VL53L1_calc_timeout_register_values+0xb8>
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007a28:	0336      	lsls	r6, r6, #12
	if (timeout_mclks > 0) {
 8007a2a:	4618      	mov	r0, r3
				mm_config_timeout_us,
				macro_period_us);

		ptiming->mm_config__timeout_macrop_a_hi =
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->mm_config__timeout_macrop_a_lo =
 8007a2c:	706b      	strb	r3, [r5, #1]
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007a2e:	4431      	add	r1, r6
		ptiming->mm_config__timeout_macrop_a_hi =
 8007a30:	7028      	strb	r0, [r5, #0]
	timeout_mclks   =
 8007a32:	fbb1 f1f2 	udiv	r1, r1, r2
	if (timeout_mclks > 0) {
 8007a36:	2900      	cmp	r1, #0
 8007a38:	d141      	bne.n	8007abe <VL53L1_calc_timeout_register_values+0xee>
 8007a3a:	460b      	mov	r3, r1
		timeout_encoded =
			VL53L1_calc_encoded_timeout(
				range_config_timeout_us,
				macro_period_us);

		ptiming->range_config__timeout_macrop_a_hi =
 8007a3c:	712b      	strb	r3, [r5, #4]
	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8007a3e:	4638      	mov	r0, r7
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->range_config__timeout_macrop_a_lo =
 8007a40:	7169      	strb	r1, [r5, #5]
				(uint8_t) (timeout_encoded & 0x00FF);

		/* Update Macro Period for Range B VCSEL Period */
		macro_period_us =
				VL53L1_calc_macro_period_us(
 8007a42:	f895 8009 	ldrb.w	r8, [r5, #9]
	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8007a46:	f000 f8b3 	bl	8007bb0 <VL53L1_calc_pll_period_us>
 8007a4a:	4607      	mov	r7, r0
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8007a4c:	4640      	mov	r0, r8
	macro_period_us =
 8007a4e:	eb07 07c7 	add.w	r7, r7, r7, lsl #3
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8007a52:	f000 f8b3 	bl	8007bbc <VL53L1_decode_vcsel_period>
	macro_period_us =
 8007a56:	023f      	lsls	r7, r7, #8
	macro_period_us = macro_period_us >> 6;
 8007a58:	09bf      	lsrs	r7, r7, #6
	macro_period_us = macro_period_us * (uint32_t)vcsel_period_pclks;
 8007a5a:	fb07 f000 	mul.w	r0, r7, r0
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007a5e:	09c2      	lsrs	r2, r0, #7
	macro_period_us = macro_period_us >> 6;
 8007a60:	0980      	lsrs	r0, r0, #6
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007a62:	4414      	add	r4, r2
	timeout_mclks   =
 8007a64:	fbb4 f4f0 	udiv	r4, r4, r0
	if (timeout_mclks > 0) {
 8007a68:	2c00      	cmp	r4, #0
 8007a6a:	d14e      	bne.n	8007b0a <VL53L1_calc_timeout_register_values+0x13a>
 8007a6c:	4623      	mov	r3, r4
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007a6e:	4416      	add	r6, r2
		timeout_encoded =
				VL53L1_calc_encoded_timeout(
					mm_config_timeout_us,
					macro_period_us);

		ptiming->mm_config__timeout_macrop_b_hi =
 8007a70:	70ab      	strb	r3, [r5, #2]
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->mm_config__timeout_macrop_b_lo =
 8007a72:	70ec      	strb	r4, [r5, #3]
	timeout_mclks   =
 8007a74:	fbb6 f6f0 	udiv	r6, r6, r0
	if (timeout_mclks > 0) {
 8007a78:	2e00      	cmp	r6, #0
 8007a7a:	d133      	bne.n	8007ae4 <VL53L1_calc_timeout_register_values+0x114>
 8007a7c:	4633      	mov	r3, r6
	VL53L1_Error status = VL53L1_ERROR_NONE;
 8007a7e:	2000      	movs	r0, #0
		/* Update Range Timing B timeout */
		timeout_encoded = VL53L1_calc_encoded_timeout(
							range_config_timeout_us,
							macro_period_us);

		ptiming->range_config__timeout_macrop_b_hi =
 8007a80:	71eb      	strb	r3, [r5, #7]
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->range_config__timeout_macrop_b_lo =
 8007a82:	722e      	strb	r6, [r5, #8]

	LOG_FUNCTION_END(0);

	return status;

}
 8007a84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		ls_byte = timeout_mclks - 1;
 8007a88:	1e58      	subs	r0, r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007a8a:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 8007a8e:	d00a      	beq.n	8007aa6 <VL53L1_calc_timeout_register_values+0xd6>
	uint16_t ms_byte = 0;
 8007a90:	2300      	movs	r3, #0
			ls_byte = ls_byte >> 1;
 8007a92:	0840      	lsrs	r0, r0, #1
			ms_byte++;
 8007a94:	3301      	adds	r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007a96:	f020 0cff 	bic.w	ip, r0, #255	; 0xff
			ms_byte++;
 8007a9a:	b29b      	uxth	r3, r3
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007a9c:	f1bc 0f00 	cmp.w	ip, #0
 8007aa0:	d1f7      	bne.n	8007a92 <VL53L1_calc_timeout_register_values+0xc2>
 8007aa2:	021b      	lsls	r3, r3, #8
 8007aa4:	b29b      	uxth	r3, r3
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007aa6:	0336      	lsls	r6, r6, #12
		encoded_timeout = (ms_byte << 8)
 8007aa8:	4403      	add	r3, r0
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007aaa:	4431      	add	r1, r6
		encoded_timeout = (ms_byte << 8)
 8007aac:	b29b      	uxth	r3, r3
	timeout_mclks   =
 8007aae:	fbb1 f1f2 	udiv	r1, r1, r2
 8007ab2:	0a18      	lsrs	r0, r3, #8
 8007ab4:	b2db      	uxtb	r3, r3
		ptiming->mm_config__timeout_macrop_a_hi =
 8007ab6:	7028      	strb	r0, [r5, #0]
		ptiming->mm_config__timeout_macrop_a_lo =
 8007ab8:	706b      	strb	r3, [r5, #1]
	if (timeout_mclks > 0) {
 8007aba:	2900      	cmp	r1, #0
 8007abc:	d0bd      	beq.n	8007a3a <VL53L1_calc_timeout_register_values+0x6a>
		ls_byte = timeout_mclks - 1;
 8007abe:	1e48      	subs	r0, r1, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007ac0:	f030 01ff 	bics.w	r1, r0, #255	; 0xff
 8007ac4:	d009      	beq.n	8007ada <VL53L1_calc_timeout_register_values+0x10a>
	uint16_t ms_byte = 0;
 8007ac6:	2100      	movs	r1, #0
			ls_byte = ls_byte >> 1;
 8007ac8:	0840      	lsrs	r0, r0, #1
			ms_byte++;
 8007aca:	3101      	adds	r1, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007acc:	f020 03ff 	bic.w	r3, r0, #255	; 0xff
			ms_byte++;
 8007ad0:	b289      	uxth	r1, r1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007ad2:	2b00      	cmp	r3, #0
 8007ad4:	d1f8      	bne.n	8007ac8 <VL53L1_calc_timeout_register_values+0xf8>
 8007ad6:	0209      	lsls	r1, r1, #8
 8007ad8:	b289      	uxth	r1, r1
		encoded_timeout = (ms_byte << 8)
 8007ada:	4401      	add	r1, r0
 8007adc:	b289      	uxth	r1, r1
 8007ade:	0a0b      	lsrs	r3, r1, #8
 8007ae0:	b2c9      	uxtb	r1, r1
 8007ae2:	e7ab      	b.n	8007a3c <VL53L1_calc_timeout_register_values+0x6c>
		ls_byte = timeout_mclks - 1;
 8007ae4:	1e70      	subs	r0, r6, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007ae6:	f030 06ff 	bics.w	r6, r0, #255	; 0xff
 8007aea:	d009      	beq.n	8007b00 <VL53L1_calc_timeout_register_values+0x130>
	uint16_t ms_byte = 0;
 8007aec:	2300      	movs	r3, #0
			ls_byte = ls_byte >> 1;
 8007aee:	0840      	lsrs	r0, r0, #1
			ms_byte++;
 8007af0:	3301      	adds	r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007af2:	f020 02ff 	bic.w	r2, r0, #255	; 0xff
			ms_byte++;
 8007af6:	b29b      	uxth	r3, r3
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007af8:	2a00      	cmp	r2, #0
 8007afa:	d1f8      	bne.n	8007aee <VL53L1_calc_timeout_register_values+0x11e>
 8007afc:	021e      	lsls	r6, r3, #8
 8007afe:	b2b6      	uxth	r6, r6
		encoded_timeout = (ms_byte << 8)
 8007b00:	4406      	add	r6, r0
 8007b02:	b2b6      	uxth	r6, r6
 8007b04:	0a33      	lsrs	r3, r6, #8
 8007b06:	b2f6      	uxtb	r6, r6
 8007b08:	e7b9      	b.n	8007a7e <VL53L1_calc_timeout_register_values+0xae>
		ls_byte = timeout_mclks - 1;
 8007b0a:	1e61      	subs	r1, r4, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007b0c:	f031 04ff 	bics.w	r4, r1, #255	; 0xff
 8007b10:	d009      	beq.n	8007b26 <VL53L1_calc_timeout_register_values+0x156>
	uint16_t ms_byte = 0;
 8007b12:	2300      	movs	r3, #0
			ls_byte = ls_byte >> 1;
 8007b14:	0849      	lsrs	r1, r1, #1
			ms_byte++;
 8007b16:	3301      	adds	r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007b18:	f021 04ff 	bic.w	r4, r1, #255	; 0xff
			ms_byte++;
 8007b1c:	b29b      	uxth	r3, r3
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007b1e:	2c00      	cmp	r4, #0
 8007b20:	d1f8      	bne.n	8007b14 <VL53L1_calc_timeout_register_values+0x144>
 8007b22:	021c      	lsls	r4, r3, #8
 8007b24:	b2a4      	uxth	r4, r4
		encoded_timeout = (ms_byte << 8)
 8007b26:	440c      	add	r4, r1
 8007b28:	b2a4      	uxth	r4, r4
 8007b2a:	0a23      	lsrs	r3, r4, #8
 8007b2c:	b2e4      	uxtb	r4, r4
 8007b2e:	e79e      	b.n	8007a6e <VL53L1_calc_timeout_register_values+0x9e>
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8007b30:	f06f 000e 	mvn.w	r0, #14
 8007b34:	e7a6      	b.n	8007a84 <VL53L1_calc_timeout_register_values+0xb4>
 8007b36:	bf00      	nop

08007b38 <VL53L1_low_power_auto_data_init>:

	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	pdev->low_power_auto_data.vhv_loop_bound =
 8007b38:	2200      	movs	r2, #0
{
 8007b3a:	4603      	mov	r3, r0
	pdev->low_power_auto_data.vhv_loop_bound =
 8007b3c:	2103      	movs	r1, #3
 8007b3e:	f8a0 22e8 	strh.w	r2, [r0, #744]	; 0x2e8
 8007b42:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
	pdev->low_power_auto_data.dss__required_spads = 0;

	LOG_FUNCTION_END(status);

	return status;
}
 8007b46:	4610      	mov	r0, r2
	pdev->low_power_auto_data.saved_vhv_timeout = 0;
 8007b48:	f883 22ea 	strb.w	r2, [r3, #746]	; 0x2ea
	pdev->low_power_auto_data.dss__total_rate_per_spad_mcps = 0;
 8007b4c:	f8c3 22ec 	str.w	r2, [r3, #748]	; 0x2ec
	pdev->low_power_auto_data.dss__required_spads = 0;
 8007b50:	f8a3 22f0 	strh.w	r2, [r3, #752]	; 0x2f0
}
 8007b54:	4770      	bx	lr
 8007b56:	bf00      	nop

08007b58 <VL53L1_config_low_power_auto_mode>:
VL53L1_Error VL53L1_config_low_power_auto_mode(
	VL53L1_general_config_t   *pgeneral,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_low_power_auto_data_t *plpadata
	)
{
 8007b58:	b410      	push	{r4}

	/* set low power auto mode */
	plpadata->is_low_power_auto_mode = 1;

	/* set low power range count to 0 */
	plpadata->low_power_auto_range_count = 0;
 8007b5a:	2000      	movs	r0, #0
	plpadata->is_low_power_auto_mode = 1;
 8007b5c:	2401      	movs	r4, #1

	/* Turn off MM1/MM2 and DSS2 */
	pdynamic->system__sequence_config = \
 8007b5e:	239b      	movs	r3, #155	; 0x9b
	plpadata->is_low_power_auto_mode = 1;
 8007b60:	7054      	strb	r4, [r2, #1]
	plpadata->low_power_auto_range_count = 0;
 8007b62:	7090      	strb	r0, [r2, #2]
	pdynamic->system__sequence_config = \
 8007b64:	744b      	strb	r3, [r1, #17]
			VL53L1_SEQUENCE_RANGE_EN;

	LOG_FUNCTION_END(status);

	return status;
}
 8007b66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007b6a:	4770      	bx	lr

08007b6c <VL53L1_low_power_auto_setup_manual_calibration>:

VL53L1_Error VL53L1_low_power_auto_setup_manual_calibration(
	VL53L1_DEV        Dev)
{
 8007b6c:	4603      	mov	r3, r0
		pdev->low_power_auto_data.first_run_phasecal_result;

	LOG_FUNCTION_END(status);

	return status;
}
 8007b6e:	2000      	movs	r0, #0
{
 8007b70:	b470      	push	{r4, r5, r6}
		pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound;
 8007b72:	f893 4160 	ldrb.w	r4, [r3, #352]	; 0x160
	pdev->gen_cfg.phasecal_config__override = 0x01;
 8007b76:	2501      	movs	r5, #1
		pdev->stat_nvm.vhv_config__init;
 8007b78:	f893 2163 	ldrb.w	r2, [r3, #355]	; 0x163
		(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 8007b7c:	f004 0103 	and.w	r1, r4, #3
		(pdev->low_power_auto_data.vhv_loop_bound << 2);
 8007b80:	f893 62e4 	ldrb.w	r6, [r3, #740]	; 0x2e4
	pdev->low_power_auto_data.saved_vhv_init =
 8007b84:	f883 22e8 	strb.w	r2, [r3, #744]	; 0x2e8
	pdev->stat_nvm.vhv_config__init &= 0x7F;
 8007b88:	f002 027f 	and.w	r2, r2, #127	; 0x7f
		(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 8007b8c:	eb01 0186 	add.w	r1, r1, r6, lsl #2
	pdev->low_power_auto_data.saved_vhv_timeout =
 8007b90:	f883 42e9 	strb.w	r4, [r3, #745]	; 0x2e9
		pdev->dbg_results.phasecal_result__vcsel_start;
 8007b94:	f893 42ae 	ldrb.w	r4, [r3, #686]	; 0x2ae
	pdev->stat_nvm.vhv_config__init &= 0x7F;
 8007b98:	f883 2163 	strb.w	r2, [r3, #355]	; 0x163
	pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound =
 8007b9c:	f883 1160 	strb.w	r1, [r3, #352]	; 0x160
	pdev->gen_cfg.phasecal_config__override = 0x01;
 8007ba0:	f883 518d 	strb.w	r5, [r3, #397]	; 0x18d
	pdev->low_power_auto_data.first_run_phasecal_result =
 8007ba4:	f883 42ea 	strb.w	r4, [r3, #746]	; 0x2ea
	pdev->gen_cfg.cal_config__vcsel_start =
 8007ba8:	f883 4187 	strb.w	r4, [r3, #391]	; 0x187
}
 8007bac:	bc70      	pop	{r4, r5, r6}
 8007bae:	4770      	bx	lr

08007bb0 <VL53L1_calc_pll_period_us>:

	uint32_t  pll_period_us        = 0;

	LOG_FUNCTION_START("");

	pll_period_us = (0x01 << 30) / fast_osc_frequency;
 8007bb0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
#endif

	LOG_FUNCTION_END(0);

	return pll_period_us;
}
 8007bb4:	fb93 f0f0 	sdiv	r0, r3, r0
 8007bb8:	4770      	bx	lr
 8007bba:	bf00      	nop

08007bbc <VL53L1_decode_vcsel_period>:
	 * the real period in PLL clocks
	 */

	uint8_t vcsel_period_pclks = 0;

	vcsel_period_pclks = (vcsel_period_reg + 1) << 1;
 8007bbc:	3001      	adds	r0, #1
 8007bbe:	0040      	lsls	r0, r0, #1

	return vcsel_period_pclks;
}
 8007bc0:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
 8007bc4:	4770      	bx	lr
 8007bc6:	bf00      	nop

08007bc8 <VL53L1_decode_row_col>:
	/**
	 *  Decodes the array (row,col) location from
	 *  the input SPAD number
	 */

	if (spad_number > 127) {
 8007bc8:	0603      	lsls	r3, r0, #24
 8007bca:	d407      	bmi.n	8007bdc <VL53L1_decode_row_col+0x14>
		*prow = 8 + ((255-spad_number) & 0x07);
		*pcol = (spad_number-128) >> 3;
	} else {
		*prow = spad_number & 0x07;
		*pcol = (127-spad_number) >> 3;
 8007bcc:	f1c0 037f 	rsb	r3, r0, #127	; 0x7f
		*prow = spad_number & 0x07;
 8007bd0:	f000 0007 	and.w	r0, r0, #7
		*pcol = (127-spad_number) >> 3;
 8007bd4:	10db      	asrs	r3, r3, #3
		*prow = spad_number & 0x07;
 8007bd6:	7008      	strb	r0, [r1, #0]
		*pcol = (127-spad_number) >> 3;
 8007bd8:	7013      	strb	r3, [r2, #0]
	}
}
 8007bda:	4770      	bx	lr
		*prow = 8 + ((255-spad_number) & 0x07);
 8007bdc:	43c3      	mvns	r3, r0
		*pcol = (spad_number-128) >> 3;
 8007bde:	3880      	subs	r0, #128	; 0x80
		*prow = 8 + ((255-spad_number) & 0x07);
 8007be0:	f003 0307 	and.w	r3, r3, #7
		*pcol = (spad_number-128) >> 3;
 8007be4:	10c0      	asrs	r0, r0, #3
		*prow = 8 + ((255-spad_number) & 0x07);
 8007be6:	3308      	adds	r3, #8
 8007be8:	700b      	strb	r3, [r1, #0]
		*pcol = (spad_number-128) >> 3;
 8007bea:	7010      	strb	r0, [r2, #0]
 8007bec:	4770      	bx	lr
 8007bee:	bf00      	nop

08007bf0 <VL53L1_i2c_encode_static_nvm_managed>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES > buf_size)
 8007bf0:	290a      	cmp	r1, #10
 8007bf2:	d927      	bls.n	8007c44 <VL53L1_i2c_encode_static_nvm_managed+0x54>
		pdata->ana_config__vhv_ref_sel_vquench & 0x7F;
	*(pbuffer +   3) =
		pdata->ana_config__reg_avdd1v2_sel & 0x3;
	*(pbuffer +   4) =
		pdata->ana_config__fast_osc__trim & 0x7F;
	VL53L1_i2c_encode_uint16_t(
 8007bf4:	2102      	movs	r1, #2
{
 8007bf6:	b538      	push	{r3, r4, r5, lr}
		pdata->i2c_slave__device_address & 0x7F;
 8007bf8:	7803      	ldrb	r3, [r0, #0]
 8007bfa:	4614      	mov	r4, r2
 8007bfc:	4605      	mov	r5, r0
	VL53L1_i2c_encode_uint16_t(
 8007bfe:	3205      	adds	r2, #5
		pdata->i2c_slave__device_address & 0x7F;
 8007c00:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   0) =
 8007c04:	7023      	strb	r3, [r4, #0]
		pdata->ana_config__vhv_ref_sel_vddpix & 0xF;
 8007c06:	7843      	ldrb	r3, [r0, #1]
 8007c08:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   1) =
 8007c0c:	7063      	strb	r3, [r4, #1]
		pdata->ana_config__vhv_ref_sel_vquench & 0x7F;
 8007c0e:	7883      	ldrb	r3, [r0, #2]
 8007c10:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   2) =
 8007c14:	70a3      	strb	r3, [r4, #2]
		pdata->ana_config__reg_avdd1v2_sel & 0x3;
 8007c16:	78c3      	ldrb	r3, [r0, #3]
 8007c18:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +   3) =
 8007c1c:	70e3      	strb	r3, [r4, #3]
		pdata->ana_config__fast_osc__trim & 0x7F;
 8007c1e:	7903      	ldrb	r3, [r0, #4]
 8007c20:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   4) =
 8007c24:	7123      	strb	r3, [r4, #4]
	VL53L1_i2c_encode_uint16_t(
 8007c26:	88c0      	ldrh	r0, [r0, #6]
 8007c28:	f7ff fdfe 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->osc_measured__fast_osc__frequency,
		2,
		pbuffer +   5);
	*(pbuffer +   7) =
		pdata->vhv_config__timeout_macrop_loop_bound;
 8007c2c:	7a2b      	ldrb	r3, [r5, #8]
	*(pbuffer +  10) =
		pdata->vhv_config__init;
	LOG_FUNCTION_END(status);


	return status;
 8007c2e:	2000      	movs	r0, #0
	*(pbuffer +   7) =
 8007c30:	71e3      	strb	r3, [r4, #7]
		pdata->vhv_config__count_thresh;
 8007c32:	7a6b      	ldrb	r3, [r5, #9]
	*(pbuffer +   8) =
 8007c34:	7223      	strb	r3, [r4, #8]
		pdata->vhv_config__offset & 0x3F;
 8007c36:	7aab      	ldrb	r3, [r5, #10]
 8007c38:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   9) =
 8007c3c:	7263      	strb	r3, [r4, #9]
		pdata->vhv_config__init;
 8007c3e:	7aeb      	ldrb	r3, [r5, #11]
	*(pbuffer +  10) =
 8007c40:	72a3      	strb	r3, [r4, #10]
}
 8007c42:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007c44:	f06f 0009 	mvn.w	r0, #9
}
 8007c48:	4770      	bx	lr
 8007c4a:	bf00      	nop

08007c4c <VL53L1_get_static_nvm_managed>:


VL53L1_Error VL53L1_get_static_nvm_managed(
	VL53L1_DEV                 Dev,
	VL53L1_static_nvm_managed_t  *pdata)
{
 8007c4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c4e:	b085      	sub	sp, #20
 8007c50:	460c      	mov	r4, r1
	uint8_t comms_buffer[VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES];

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
		status = VL53L1_ReadMulti(
 8007c52:	230b      	movs	r3, #11
 8007c54:	2101      	movs	r1, #1
 8007c56:	aa01      	add	r2, sp, #4
 8007c58:	f000 fca6 	bl	80085a8 <VL53L1_ReadMulti>
			Dev,
			VL53L1_I2C_SLAVE__DEVICE_ADDRESS,
			comms_buffer,
			VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES);

	if (status == VL53L1_ERROR_NONE)
 8007c5c:	4605      	mov	r5, r0
 8007c5e:	bb60      	cbnz	r0, 8007cba <VL53L1_get_static_nvm_managed+0x6e>
		(*(pbuffer +   0)) & 0x7F;
 8007c60:	f89d 3004 	ldrb.w	r3, [sp, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   5));
 8007c64:	f10d 0109 	add.w	r1, sp, #9
		(*(pbuffer +   1)) & 0xF;
 8007c68:	f89d 7005 	ldrb.w	r7, [sp, #5]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   5));
 8007c6c:	2002      	movs	r0, #2
		(*(pbuffer +   0)) & 0x7F;
 8007c6e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
		(*(pbuffer +   2)) & 0x7F;
 8007c72:	f89d 6006 	ldrb.w	r6, [sp, #6]
		(*(pbuffer +   3)) & 0x3;
 8007c76:	f89d 2007 	ldrb.w	r2, [sp, #7]
		(*(pbuffer +   1)) & 0xF;
 8007c7a:	f007 070f 	and.w	r7, r7, #15
	pdata->i2c_slave__device_address =
 8007c7e:	7023      	strb	r3, [r4, #0]
		(*(pbuffer +   2)) & 0x7F;
 8007c80:	f006 067f 	and.w	r6, r6, #127	; 0x7f
		(*(pbuffer +   4)) & 0x7F;
 8007c84:	f89d 3008 	ldrb.w	r3, [sp, #8]
		(*(pbuffer +   3)) & 0x3;
 8007c88:	f002 0203 	and.w	r2, r2, #3
	pdata->ana_config__vhv_ref_sel_vquench =
 8007c8c:	70a6      	strb	r6, [r4, #2]
		(*(pbuffer +   4)) & 0x7F;
 8007c8e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	pdata->ana_config__reg_avdd1v2_sel =
 8007c92:	70e2      	strb	r2, [r4, #3]
	pdata->ana_config__vhv_ref_sel_vddpix =
 8007c94:	7067      	strb	r7, [r4, #1]
	pdata->ana_config__fast_osc__trim =
 8007c96:	7123      	strb	r3, [r4, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   5));
 8007c98:	f7ff fdd8 	bl	800784c <VL53L1_i2c_decode_uint16_t>
		(*(pbuffer +   9)) & 0x3F;
 8007c9c:	f89d 300d 	ldrb.w	r3, [sp, #13]
	pdata->vhv_config__timeout_macrop_loop_bound =
 8007ca0:	f89d 600b 	ldrb.w	r6, [sp, #11]
		(*(pbuffer +   9)) & 0x3F;
 8007ca4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->vhv_config__count_thresh =
 8007ca8:	f89d 100c 	ldrb.w	r1, [sp, #12]
	pdata->vhv_config__init =
 8007cac:	f89d 200e 	ldrb.w	r2, [sp, #14]
	pdata->osc_measured__fast_osc__frequency =
 8007cb0:	80e0      	strh	r0, [r4, #6]
	pdata->vhv_config__offset =
 8007cb2:	72a3      	strb	r3, [r4, #10]
	pdata->vhv_config__timeout_macrop_loop_bound =
 8007cb4:	7226      	strb	r6, [r4, #8]
	pdata->vhv_config__count_thresh =
 8007cb6:	7261      	strb	r1, [r4, #9]
	pdata->vhv_config__init =
 8007cb8:	72e2      	strb	r2, [r4, #11]
			pdata);

	LOG_FUNCTION_END(status);

	return status;
}
 8007cba:	4628      	mov	r0, r5
 8007cbc:	b005      	add	sp, #20
 8007cbe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007cc0 <VL53L1_i2c_encode_customer_nvm_managed>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES > buf_size)
 8007cc0:	2916      	cmp	r1, #22
 8007cc2:	d94b      	bls.n	8007d5c <VL53L1_i2c_encode_customer_nvm_managed+0x9c>
		pdata->global_config__ref_en_start_select;
	*(pbuffer +   7) =
		pdata->ref_spad_man__num_requested_ref_spads & 0x3F;
	*(pbuffer +   8) =
		pdata->ref_spad_man__ref_location & 0x3;
	VL53L1_i2c_encode_uint16_t(
 8007cc4:	2102      	movs	r1, #2
{
 8007cc6:	b538      	push	{r3, r4, r5, lr}
 8007cc8:	4615      	mov	r5, r2
		pdata->global_config__spad_enables_ref_0;
 8007cca:	7803      	ldrb	r3, [r0, #0]
 8007ccc:	4604      	mov	r4, r0
	VL53L1_i2c_encode_uint16_t(
 8007cce:	3209      	adds	r2, #9
	*(pbuffer +   0) =
 8007cd0:	702b      	strb	r3, [r5, #0]
		pdata->global_config__spad_enables_ref_1;
 8007cd2:	7843      	ldrb	r3, [r0, #1]
	*(pbuffer +   1) =
 8007cd4:	706b      	strb	r3, [r5, #1]
		pdata->global_config__spad_enables_ref_2;
 8007cd6:	7883      	ldrb	r3, [r0, #2]
	*(pbuffer +   2) =
 8007cd8:	70ab      	strb	r3, [r5, #2]
		pdata->global_config__spad_enables_ref_3;
 8007cda:	78c3      	ldrb	r3, [r0, #3]
	*(pbuffer +   3) =
 8007cdc:	70eb      	strb	r3, [r5, #3]
		pdata->global_config__spad_enables_ref_4;
 8007cde:	7903      	ldrb	r3, [r0, #4]
	*(pbuffer +   4) =
 8007ce0:	712b      	strb	r3, [r5, #4]
		pdata->global_config__spad_enables_ref_5 & 0xF;
 8007ce2:	7943      	ldrb	r3, [r0, #5]
 8007ce4:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   5) =
 8007ce8:	716b      	strb	r3, [r5, #5]
		pdata->global_config__ref_en_start_select;
 8007cea:	7983      	ldrb	r3, [r0, #6]
	*(pbuffer +   6) =
 8007cec:	71ab      	strb	r3, [r5, #6]
		pdata->ref_spad_man__num_requested_ref_spads & 0x3F;
 8007cee:	79c3      	ldrb	r3, [r0, #7]
 8007cf0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   7) =
 8007cf4:	71eb      	strb	r3, [r5, #7]
		pdata->ref_spad_man__ref_location & 0x3;
 8007cf6:	7a03      	ldrb	r3, [r0, #8]
 8007cf8:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +   8) =
 8007cfc:	722b      	strb	r3, [r5, #8]
	VL53L1_i2c_encode_uint16_t(
 8007cfe:	8940      	ldrh	r0, [r0, #10]
 8007d00:	f7ff fd92 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->algo__crosstalk_compensation_plane_offset_kcps,
		2,
		pbuffer +   9);
	VL53L1_i2c_encode_int16_t(
 8007d04:	f105 020b 	add.w	r2, r5, #11
 8007d08:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 8007d0c:	2102      	movs	r1, #2
 8007d0e:	f7ff fdab 	bl	8007868 <VL53L1_i2c_encode_int16_t>
		pdata->algo__crosstalk_compensation_x_plane_gradient_kcps,
		2,
		pbuffer +  11);
	VL53L1_i2c_encode_int16_t(
 8007d12:	f105 020d 	add.w	r2, r5, #13
 8007d16:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8007d1a:	2102      	movs	r1, #2
 8007d1c:	f7ff fda4 	bl	8007868 <VL53L1_i2c_encode_int16_t>
		pdata->algo__crosstalk_compensation_y_plane_gradient_kcps,
		2,
		pbuffer +  13);
	VL53L1_i2c_encode_uint16_t(
 8007d20:	f105 020f 	add.w	r2, r5, #15
 8007d24:	8a20      	ldrh	r0, [r4, #16]
 8007d26:	2102      	movs	r1, #2
 8007d28:	f7ff fd7e 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->ref_spad_char__total_rate_target_mcps,
		2,
		pbuffer +  15);
	VL53L1_i2c_encode_int16_t(
 8007d2c:	8a60      	ldrh	r0, [r4, #18]
 8007d2e:	f105 0211 	add.w	r2, r5, #17
 8007d32:	2102      	movs	r1, #2
 8007d34:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8007d38:	f7ff fd96 	bl	8007868 <VL53L1_i2c_encode_int16_t>
		pdata->algo__part_to_part_range_offset_mm & 0x1FFF,
		2,
		pbuffer +  17);
	VL53L1_i2c_encode_int16_t(
 8007d3c:	f105 0213 	add.w	r2, r5, #19
 8007d40:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8007d44:	2102      	movs	r1, #2
 8007d46:	f7ff fd8f 	bl	8007868 <VL53L1_i2c_encode_int16_t>
		pdata->mm_config__inner_offset_mm,
		2,
		pbuffer +  19);
	VL53L1_i2c_encode_int16_t(
 8007d4a:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 8007d4e:	f105 0215 	add.w	r2, r5, #21
 8007d52:	2102      	movs	r1, #2
 8007d54:	f7ff fd88 	bl	8007868 <VL53L1_i2c_encode_int16_t>
		2,
		pbuffer +  21);
	LOG_FUNCTION_END(status);


	return status;
 8007d58:	2000      	movs	r0, #0
}
 8007d5a:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007d5c:	f06f 0009 	mvn.w	r0, #9
}
 8007d60:	4770      	bx	lr
 8007d62:	bf00      	nop

08007d64 <VL53L1_get_customer_nvm_managed>:


VL53L1_Error VL53L1_get_customer_nvm_managed(
	VL53L1_DEV                 Dev,
	VL53L1_customer_nvm_managed_t  *pdata)
{
 8007d64:	b570      	push	{r4, r5, r6, lr}
 8007d66:	b086      	sub	sp, #24
 8007d68:	460c      	mov	r4, r1
	uint8_t comms_buffer[VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES];

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
		status = VL53L1_ReadMulti(
 8007d6a:	2317      	movs	r3, #23
 8007d6c:	210d      	movs	r1, #13
 8007d6e:	466a      	mov	r2, sp
 8007d70:	f000 fc1a 	bl	80085a8 <VL53L1_ReadMulti>
			Dev,
			VL53L1_GLOBAL_CONFIG__SPAD_ENABLES_REF_0,
			comms_buffer,
			VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES);

	if (status == VL53L1_ERROR_NONE)
 8007d74:	4605      	mov	r5, r0
 8007d76:	2800      	cmp	r0, #0
 8007d78:	d142      	bne.n	8007e00 <VL53L1_get_customer_nvm_managed+0x9c>
		(*(pbuffer +   5)) & 0xF;
 8007d7a:	f89d 6005 	ldrb.w	r6, [sp, #5]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   9));
 8007d7e:	f10d 0109 	add.w	r1, sp, #9
		(*(pbuffer +   7)) & 0x3F;
 8007d82:	f89d 2007 	ldrb.w	r2, [sp, #7]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   9));
 8007d86:	2002      	movs	r0, #2
		(*(pbuffer +   8)) & 0x3;
 8007d88:	f89d 3008 	ldrb.w	r3, [sp, #8]
		(*(pbuffer +   5)) & 0xF;
 8007d8c:	f006 060f 	and.w	r6, r6, #15
		(*(pbuffer +   7)) & 0x3F;
 8007d90:	f002 023f 	and.w	r2, r2, #63	; 0x3f
		(*(pbuffer +   8)) & 0x3;
 8007d94:	f003 0303 	and.w	r3, r3, #3
	pdata->global_config__spad_enables_ref_5 =
 8007d98:	7166      	strb	r6, [r4, #5]
	pdata->ref_spad_man__num_requested_ref_spads =
 8007d9a:	71e2      	strb	r2, [r4, #7]
	pdata->global_config__spad_enables_ref_0 =
 8007d9c:	9e00      	ldr	r6, [sp, #0]
	pdata->global_config__spad_enables_ref_4 =
 8007d9e:	f89d 2004 	ldrb.w	r2, [sp, #4]
	pdata->ref_spad_man__ref_location =
 8007da2:	7223      	strb	r3, [r4, #8]
	pdata->global_config__ref_en_start_select =
 8007da4:	f89d 3006 	ldrb.w	r3, [sp, #6]
	pdata->global_config__spad_enables_ref_4 =
 8007da8:	7122      	strb	r2, [r4, #4]
	pdata->global_config__ref_en_start_select =
 8007daa:	71a3      	strb	r3, [r4, #6]
	pdata->global_config__spad_enables_ref_0 =
 8007dac:	6026      	str	r6, [r4, #0]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   9));
 8007dae:	f7ff fd4d 	bl	800784c <VL53L1_i2c_decode_uint16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  11));
 8007db2:	f10d 010b 	add.w	r1, sp, #11
	pdata->algo__crosstalk_compensation_plane_offset_kcps =
 8007db6:	8160      	strh	r0, [r4, #10]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  11));
 8007db8:	2002      	movs	r0, #2
 8007dba:	f7ff fd67 	bl	800788c <VL53L1_i2c_decode_int16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  13));
 8007dbe:	f10d 010d 	add.w	r1, sp, #13
	pdata->algo__crosstalk_compensation_x_plane_gradient_kcps =
 8007dc2:	81a0      	strh	r0, [r4, #12]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  13));
 8007dc4:	2002      	movs	r0, #2
 8007dc6:	f7ff fd61 	bl	800788c <VL53L1_i2c_decode_int16_t>
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  15));
 8007dca:	f10d 010f 	add.w	r1, sp, #15
	pdata->algo__crosstalk_compensation_y_plane_gradient_kcps =
 8007dce:	81e0      	strh	r0, [r4, #14]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  15));
 8007dd0:	2002      	movs	r0, #2
 8007dd2:	f7ff fd3b 	bl	800784c <VL53L1_i2c_decode_uint16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  17)) & 0x1FFF;
 8007dd6:	f10d 0111 	add.w	r1, sp, #17
	pdata->ref_spad_char__total_rate_target_mcps =
 8007dda:	8220      	strh	r0, [r4, #16]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  17)) & 0x1FFF;
 8007ddc:	2002      	movs	r0, #2
 8007dde:	f7ff fd55 	bl	800788c <VL53L1_i2c_decode_int16_t>
 8007de2:	f3c0 030c 	ubfx	r3, r0, #0, #13
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  19));
 8007de6:	f10d 0113 	add.w	r1, sp, #19
 8007dea:	2002      	movs	r0, #2
	pdata->algo__part_to_part_range_offset_mm =
 8007dec:	8263      	strh	r3, [r4, #18]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  19));
 8007dee:	f7ff fd4d 	bl	800788c <VL53L1_i2c_decode_int16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  21));
 8007df2:	f10d 0115 	add.w	r1, sp, #21
	pdata->mm_config__inner_offset_mm =
 8007df6:	82a0      	strh	r0, [r4, #20]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  21));
 8007df8:	2002      	movs	r0, #2
 8007dfa:	f7ff fd47 	bl	800788c <VL53L1_i2c_decode_int16_t>
	pdata->mm_config__outer_offset_mm =
 8007dfe:	82e0      	strh	r0, [r4, #22]
			pdata);

	LOG_FUNCTION_END(status);

	return status;
}
 8007e00:	4628      	mov	r0, r5
 8007e02:	b006      	add	sp, #24
 8007e04:	bd70      	pop	{r4, r5, r6, pc}
 8007e06:	bf00      	nop

08007e08 <VL53L1_i2c_encode_static_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_STATIC_CONFIG_I2C_SIZE_BYTES > buf_size)
 8007e08:	291f      	cmp	r1, #31
 8007e0a:	d968      	bls.n	8007ede <VL53L1_i2c_encode_static_config+0xd6>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	VL53L1_i2c_encode_uint16_t(
 8007e0c:	2102      	movs	r1, #2
{
 8007e0e:	b538      	push	{r3, r4, r5, lr}
 8007e10:	4604      	mov	r4, r0
	VL53L1_i2c_encode_uint16_t(
 8007e12:	8800      	ldrh	r0, [r0, #0]
 8007e14:	4615      	mov	r5, r2
 8007e16:	f7ff fd07 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->dss_config__target_total_rate_mcps,
		2,
		pbuffer +   0);
	*(pbuffer +   2) =
		pdata->debug__ctrl & 0x1;
 8007e1a:	78a3      	ldrb	r3, [r4, #2]
		pdata->algo__crosstalk_compensation_valid_height_mm;
	*(pbuffer +  22) =
		pdata->spare_host_config__static_config_spare_0;
	*(pbuffer +  23) =
		pdata->spare_host_config__static_config_spare_1;
	VL53L1_i2c_encode_uint16_t(
 8007e1c:	2102      	movs	r1, #2
 8007e1e:	f105 0218 	add.w	r2, r5, #24
		pdata->debug__ctrl & 0x1;
 8007e22:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   2) =
 8007e26:	70ab      	strb	r3, [r5, #2]
		pdata->test_mode__ctrl & 0xF;
 8007e28:	78e3      	ldrb	r3, [r4, #3]
 8007e2a:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   3) =
 8007e2e:	70eb      	strb	r3, [r5, #3]
		pdata->clk_gating__ctrl & 0xF;
 8007e30:	7923      	ldrb	r3, [r4, #4]
 8007e32:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   4) =
 8007e36:	712b      	strb	r3, [r5, #4]
		pdata->nvm_bist__ctrl & 0x1F;
 8007e38:	7963      	ldrb	r3, [r4, #5]
 8007e3a:	f003 031f 	and.w	r3, r3, #31
	*(pbuffer +   5) =
 8007e3e:	716b      	strb	r3, [r5, #5]
		pdata->nvm_bist__num_nvm_words & 0x7F;
 8007e40:	79a3      	ldrb	r3, [r4, #6]
 8007e42:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   6) =
 8007e46:	71ab      	strb	r3, [r5, #6]
		pdata->nvm_bist__start_address & 0x7F;
 8007e48:	79e3      	ldrb	r3, [r4, #7]
 8007e4a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   7) =
 8007e4e:	71eb      	strb	r3, [r5, #7]
		pdata->host_if__status & 0x1;
 8007e50:	7a23      	ldrb	r3, [r4, #8]
 8007e52:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   8) =
 8007e56:	722b      	strb	r3, [r5, #8]
		pdata->pad_i2c_hv__config;
 8007e58:	7a63      	ldrb	r3, [r4, #9]
	*(pbuffer +   9) =
 8007e5a:	726b      	strb	r3, [r5, #9]
		pdata->pad_i2c_hv__extsup_config & 0x1;
 8007e5c:	7aa3      	ldrb	r3, [r4, #10]
 8007e5e:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +  10) =
 8007e62:	72ab      	strb	r3, [r5, #10]
		pdata->gpio_hv_pad__ctrl & 0x3;
 8007e64:	7ae3      	ldrb	r3, [r4, #11]
 8007e66:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  11) =
 8007e6a:	72eb      	strb	r3, [r5, #11]
		pdata->gpio_hv_mux__ctrl & 0x1F;
 8007e6c:	7b23      	ldrb	r3, [r4, #12]
 8007e6e:	f003 031f 	and.w	r3, r3, #31
	*(pbuffer +  12) =
 8007e72:	732b      	strb	r3, [r5, #12]
		pdata->gpio__tio_hv_status & 0x3;
 8007e74:	7b63      	ldrb	r3, [r4, #13]
 8007e76:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  13) =
 8007e7a:	736b      	strb	r3, [r5, #13]
		pdata->gpio__fio_hv_status & 0x3;
 8007e7c:	7ba3      	ldrb	r3, [r4, #14]
 8007e7e:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  14) =
 8007e82:	73ab      	strb	r3, [r5, #14]
		pdata->ana_config__spad_sel_pswidth & 0x7;
 8007e84:	7be3      	ldrb	r3, [r4, #15]
 8007e86:	f003 0307 	and.w	r3, r3, #7
	*(pbuffer +  15) =
 8007e8a:	73eb      	strb	r3, [r5, #15]
		pdata->ana_config__vcsel_pulse_width_offset & 0x1F;
 8007e8c:	7c23      	ldrb	r3, [r4, #16]
 8007e8e:	f003 031f 	and.w	r3, r3, #31
	*(pbuffer +  16) =
 8007e92:	742b      	strb	r3, [r5, #16]
		pdata->ana_config__fast_osc__config_ctrl & 0x1;
 8007e94:	7c63      	ldrb	r3, [r4, #17]
 8007e96:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +  17) =
 8007e9a:	746b      	strb	r3, [r5, #17]
		pdata->sigma_estimator__effective_pulse_width_ns;
 8007e9c:	7ca3      	ldrb	r3, [r4, #18]
	*(pbuffer +  18) =
 8007e9e:	74ab      	strb	r3, [r5, #18]
		pdata->sigma_estimator__effective_ambient_width_ns;
 8007ea0:	7ce3      	ldrb	r3, [r4, #19]
	*(pbuffer +  19) =
 8007ea2:	74eb      	strb	r3, [r5, #19]
		pdata->sigma_estimator__sigma_ref_mm;
 8007ea4:	7d23      	ldrb	r3, [r4, #20]
	*(pbuffer +  20) =
 8007ea6:	752b      	strb	r3, [r5, #20]
		pdata->algo__crosstalk_compensation_valid_height_mm;
 8007ea8:	7d63      	ldrb	r3, [r4, #21]
	*(pbuffer +  21) =
 8007eaa:	756b      	strb	r3, [r5, #21]
		pdata->spare_host_config__static_config_spare_0;
 8007eac:	7da3      	ldrb	r3, [r4, #22]
	*(pbuffer +  22) =
 8007eae:	75ab      	strb	r3, [r5, #22]
		pdata->spare_host_config__static_config_spare_1;
 8007eb0:	7de3      	ldrb	r3, [r4, #23]
	*(pbuffer +  23) =
 8007eb2:	75eb      	strb	r3, [r5, #23]
	VL53L1_i2c_encode_uint16_t(
 8007eb4:	8b20      	ldrh	r0, [r4, #24]
 8007eb6:	f7ff fcb7 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->algo__range_ignore_threshold_mcps,
		2,
		pbuffer +  24);
	*(pbuffer +  26) =
		pdata->algo__range_ignore_valid_height_mm;
 8007eba:	7ea3      	ldrb	r3, [r4, #26]
	*(pbuffer +  31) =
		pdata->sd_config__reset_stages_lsb;
	LOG_FUNCTION_END(status);


	return status;
 8007ebc:	2000      	movs	r0, #0
	*(pbuffer +  26) =
 8007ebe:	76ab      	strb	r3, [r5, #26]
		pdata->algo__range_min_clip;
 8007ec0:	7ee3      	ldrb	r3, [r4, #27]
	*(pbuffer +  27) =
 8007ec2:	76eb      	strb	r3, [r5, #27]
		pdata->algo__consistency_check__tolerance & 0xF;
 8007ec4:	7f23      	ldrb	r3, [r4, #28]
 8007ec6:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +  28) =
 8007eca:	772b      	strb	r3, [r5, #28]
		pdata->spare_host_config__static_config_spare_2;
 8007ecc:	7f63      	ldrb	r3, [r4, #29]
	*(pbuffer +  29) =
 8007ece:	776b      	strb	r3, [r5, #29]
		pdata->sd_config__reset_stages_msb & 0xF;
 8007ed0:	7fa3      	ldrb	r3, [r4, #30]
 8007ed2:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +  30) =
 8007ed6:	77ab      	strb	r3, [r5, #30]
		pdata->sd_config__reset_stages_lsb;
 8007ed8:	7fe3      	ldrb	r3, [r4, #31]
	*(pbuffer +  31) =
 8007eda:	77eb      	strb	r3, [r5, #31]
}
 8007edc:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007ede:	f06f 0009 	mvn.w	r0, #9
}
 8007ee2:	4770      	bx	lr

08007ee4 <VL53L1_i2c_encode_general_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_GENERAL_CONFIG_I2C_SIZE_BYTES > buf_size)
 8007ee4:	2915      	cmp	r1, #21
 8007ee6:	d93f      	bls.n	8007f68 <VL53L1_i2c_encode_general_config+0x84>
		pdata->global_config__stream_divider;
	*(pbuffer +   2) =
		pdata->system__interrupt_config_gpio;
	*(pbuffer +   3) =
		pdata->cal_config__vcsel_start & 0x7F;
	VL53L1_i2c_encode_uint16_t(
 8007ee8:	2102      	movs	r1, #2
{
 8007eea:	b538      	push	{r3, r4, r5, lr}
 8007eec:	4614      	mov	r4, r2
		pdata->gph_config__stream_count_update_value;
 8007eee:	7803      	ldrb	r3, [r0, #0]
 8007ef0:	4605      	mov	r5, r0
	VL53L1_i2c_encode_uint16_t(
 8007ef2:	3204      	adds	r2, #4
	*(pbuffer +   0) =
 8007ef4:	7023      	strb	r3, [r4, #0]
		pdata->global_config__stream_divider;
 8007ef6:	7843      	ldrb	r3, [r0, #1]
	*(pbuffer +   1) =
 8007ef8:	7063      	strb	r3, [r4, #1]
		pdata->system__interrupt_config_gpio;
 8007efa:	7883      	ldrb	r3, [r0, #2]
	*(pbuffer +   2) =
 8007efc:	70a3      	strb	r3, [r4, #2]
		pdata->cal_config__vcsel_start & 0x7F;
 8007efe:	78c3      	ldrb	r3, [r0, #3]
 8007f00:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   3) =
 8007f04:	70e3      	strb	r3, [r4, #3]
	VL53L1_i2c_encode_uint16_t(
 8007f06:	8880      	ldrh	r0, [r0, #4]
 8007f08:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8007f0c:	f7ff fc8c 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->cal_config__repeat_rate & 0xFFF,
		2,
		pbuffer +   4);
	*(pbuffer +   6) =
		pdata->global_config__vcsel_width & 0x7F;
 8007f10:	79ab      	ldrb	r3, [r5, #6]
		pdata->phasecal_config__target;
	*(pbuffer +   9) =
		pdata->phasecal_config__override & 0x1;
	*(pbuffer +  11) =
		pdata->dss_config__roi_mode_control & 0x7;
	VL53L1_i2c_encode_uint16_t(
 8007f12:	f104 020c 	add.w	r2, r4, #12
 8007f16:	2102      	movs	r1, #2
		pdata->global_config__vcsel_width & 0x7F;
 8007f18:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   6) =
 8007f1c:	71a3      	strb	r3, [r4, #6]
		pdata->phasecal_config__timeout_macrop;
 8007f1e:	79eb      	ldrb	r3, [r5, #7]
	*(pbuffer +   7) =
 8007f20:	71e3      	strb	r3, [r4, #7]
		pdata->phasecal_config__target;
 8007f22:	7a2b      	ldrb	r3, [r5, #8]
	*(pbuffer +   8) =
 8007f24:	7223      	strb	r3, [r4, #8]
		pdata->phasecal_config__override & 0x1;
 8007f26:	7a6b      	ldrb	r3, [r5, #9]
 8007f28:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   9) =
 8007f2c:	7263      	strb	r3, [r4, #9]
		pdata->dss_config__roi_mode_control & 0x7;
 8007f2e:	7aab      	ldrb	r3, [r5, #10]
 8007f30:	f003 0307 	and.w	r3, r3, #7
	*(pbuffer +  11) =
 8007f34:	72e3      	strb	r3, [r4, #11]
	VL53L1_i2c_encode_uint16_t(
 8007f36:	89a8      	ldrh	r0, [r5, #12]
 8007f38:	f7ff fc76 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_rate_high,
		2,
		pbuffer +  12);
	VL53L1_i2c_encode_uint16_t(
 8007f3c:	f104 020e 	add.w	r2, r4, #14
 8007f40:	89e8      	ldrh	r0, [r5, #14]
 8007f42:	2102      	movs	r1, #2
 8007f44:	f7ff fc70 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_rate_low,
		2,
		pbuffer +  14);
	VL53L1_i2c_encode_uint16_t(
 8007f48:	8a28      	ldrh	r0, [r5, #16]
 8007f4a:	f104 0210 	add.w	r2, r4, #16
 8007f4e:	2102      	movs	r1, #2
 8007f50:	f7ff fc6a 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->dss_config__manual_effective_spads_select,
		2,
		pbuffer +  16);
	*(pbuffer +  18) =
		pdata->dss_config__manual_block_select;
 8007f54:	7cab      	ldrb	r3, [r5, #18]
	*(pbuffer +  21) =
		pdata->dss_config__min_spads_limit;
	LOG_FUNCTION_END(status);


	return status;
 8007f56:	2000      	movs	r0, #0
	*(pbuffer +  18) =
 8007f58:	74a3      	strb	r3, [r4, #18]
		pdata->dss_config__aperture_attenuation;
 8007f5a:	7ceb      	ldrb	r3, [r5, #19]
	*(pbuffer +  19) =
 8007f5c:	74e3      	strb	r3, [r4, #19]
		pdata->dss_config__max_spads_limit;
 8007f5e:	7d2b      	ldrb	r3, [r5, #20]
	*(pbuffer +  20) =
 8007f60:	7523      	strb	r3, [r4, #20]
		pdata->dss_config__min_spads_limit;
 8007f62:	7d6b      	ldrb	r3, [r5, #21]
	*(pbuffer +  21) =
 8007f64:	7563      	strb	r3, [r4, #21]
}
 8007f66:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007f68:	f06f 0009 	mvn.w	r0, #9
}
 8007f6c:	4770      	bx	lr
 8007f6e:	bf00      	nop

08007f70 <VL53L1_i2c_encode_timing_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_TIMING_CONFIG_I2C_SIZE_BYTES > buf_size)
 8007f70:	2916      	cmp	r1, #22
 8007f72:	d93d      	bls.n	8007ff0 <VL53L1_i2c_encode_timing_config+0x80>
		pdata->range_config__timeout_macrop_b_hi & 0xF;
	*(pbuffer +   8) =
		pdata->range_config__timeout_macrop_b_lo;
	*(pbuffer +   9) =
		pdata->range_config__vcsel_period_b & 0x3F;
	VL53L1_i2c_encode_uint16_t(
 8007f74:	2102      	movs	r1, #2
{
 8007f76:	b538      	push	{r3, r4, r5, lr}
		pdata->mm_config__timeout_macrop_a_hi & 0xF;
 8007f78:	7803      	ldrb	r3, [r0, #0]
 8007f7a:	4614      	mov	r4, r2
 8007f7c:	4605      	mov	r5, r0
	VL53L1_i2c_encode_uint16_t(
 8007f7e:	320a      	adds	r2, #10
		pdata->mm_config__timeout_macrop_a_hi & 0xF;
 8007f80:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   0) =
 8007f84:	7023      	strb	r3, [r4, #0]
		pdata->mm_config__timeout_macrop_a_lo;
 8007f86:	7843      	ldrb	r3, [r0, #1]
	*(pbuffer +   1) =
 8007f88:	7063      	strb	r3, [r4, #1]
		pdata->mm_config__timeout_macrop_b_hi & 0xF;
 8007f8a:	7883      	ldrb	r3, [r0, #2]
 8007f8c:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   2) =
 8007f90:	70a3      	strb	r3, [r4, #2]
		pdata->mm_config__timeout_macrop_b_lo;
 8007f92:	78c3      	ldrb	r3, [r0, #3]
	*(pbuffer +   3) =
 8007f94:	70e3      	strb	r3, [r4, #3]
		pdata->range_config__timeout_macrop_a_hi & 0xF;
 8007f96:	7903      	ldrb	r3, [r0, #4]
 8007f98:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   4) =
 8007f9c:	7123      	strb	r3, [r4, #4]
		pdata->range_config__timeout_macrop_a_lo;
 8007f9e:	7943      	ldrb	r3, [r0, #5]
	*(pbuffer +   5) =
 8007fa0:	7163      	strb	r3, [r4, #5]
		pdata->range_config__vcsel_period_a & 0x3F;
 8007fa2:	7983      	ldrb	r3, [r0, #6]
 8007fa4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   6) =
 8007fa8:	71a3      	strb	r3, [r4, #6]
		pdata->range_config__timeout_macrop_b_hi & 0xF;
 8007faa:	79c3      	ldrb	r3, [r0, #7]
 8007fac:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   7) =
 8007fb0:	71e3      	strb	r3, [r4, #7]
		pdata->range_config__timeout_macrop_b_lo;
 8007fb2:	7a03      	ldrb	r3, [r0, #8]
	*(pbuffer +   8) =
 8007fb4:	7223      	strb	r3, [r4, #8]
		pdata->range_config__vcsel_period_b & 0x3F;
 8007fb6:	7a43      	ldrb	r3, [r0, #9]
 8007fb8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   9) =
 8007fbc:	7263      	strb	r3, [r4, #9]
	VL53L1_i2c_encode_uint16_t(
 8007fbe:	8940      	ldrh	r0, [r0, #10]
 8007fc0:	f7ff fc32 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->range_config__sigma_thresh,
		2,
		pbuffer +  10);
	VL53L1_i2c_encode_uint16_t(
 8007fc4:	f104 020c 	add.w	r2, r4, #12
 8007fc8:	89a8      	ldrh	r0, [r5, #12]
 8007fca:	2102      	movs	r1, #2
 8007fcc:	f7ff fc2c 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->range_config__min_count_rate_rtn_limit_mcps,
		2,
		pbuffer +  12);
	*(pbuffer +  14) =
		pdata->range_config__valid_phase_low;
 8007fd0:	7bab      	ldrb	r3, [r5, #14]
	*(pbuffer +  15) =
		pdata->range_config__valid_phase_high;
	VL53L1_i2c_encode_uint32_t(
 8007fd2:	f104 0212 	add.w	r2, r4, #18
 8007fd6:	2104      	movs	r1, #4
	*(pbuffer +  14) =
 8007fd8:	73a3      	strb	r3, [r4, #14]
		pdata->range_config__valid_phase_high;
 8007fda:	7beb      	ldrb	r3, [r5, #15]
	*(pbuffer +  15) =
 8007fdc:	73e3      	strb	r3, [r4, #15]
	VL53L1_i2c_encode_uint32_t(
 8007fde:	6928      	ldr	r0, [r5, #16]
 8007fe0:	f7ff fc66 	bl	80078b0 <VL53L1_i2c_encode_uint32_t>
		pdata->system__intermeasurement_period,
		4,
		pbuffer +  18);
	*(pbuffer +  22) =
		pdata->system__fractional_enable & 0x1;
 8007fe4:	7d2b      	ldrb	r3, [r5, #20]
	LOG_FUNCTION_END(status);


	return status;
 8007fe6:	2000      	movs	r0, #0
		pdata->system__fractional_enable & 0x1;
 8007fe8:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +  22) =
 8007fec:	75a3      	strb	r3, [r4, #22]
}
 8007fee:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007ff0:	f06f 0009 	mvn.w	r0, #9
}
 8007ff4:	4770      	bx	lr
 8007ff6:	bf00      	nop

08007ff8 <VL53L1_i2c_encode_dynamic_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_DYNAMIC_CONFIG_I2C_SIZE_BYTES > buf_size)
 8007ff8:	2911      	cmp	r1, #17
 8007ffa:	d93c      	bls.n	8008076 <VL53L1_i2c_encode_dynamic_config+0x7e>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	*(pbuffer +   0) =
		pdata->system__grouped_parameter_hold_0 & 0x3;
	VL53L1_i2c_encode_uint16_t(
 8007ffc:	2102      	movs	r1, #2
{
 8007ffe:	b538      	push	{r3, r4, r5, lr}
		pdata->system__grouped_parameter_hold_0 & 0x3;
 8008000:	7803      	ldrb	r3, [r0, #0]
 8008002:	4615      	mov	r5, r2
 8008004:	4604      	mov	r4, r0
 8008006:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +   0) =
 800800a:	f802 3b01 	strb.w	r3, [r2], #1
	VL53L1_i2c_encode_uint16_t(
 800800e:	8840      	ldrh	r0, [r0, #2]
 8008010:	f7ff fc0a 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_high,
		2,
		pbuffer +   1);
	VL53L1_i2c_encode_uint16_t(
 8008014:	88a0      	ldrh	r0, [r4, #4]
 8008016:	1cea      	adds	r2, r5, #3
 8008018:	2102      	movs	r1, #2
 800801a:	f7ff fc05 	bl	8007828 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_low,
		2,
		pbuffer +   3);
	*(pbuffer +   5) =
		pdata->system__enable_xtalk_per_quadrant & 0x1;
 800801e:	79a3      	ldrb	r3, [r4, #6]
	*(pbuffer +  17) =
		pdata->system__grouped_parameter_hold & 0x3;
	LOG_FUNCTION_END(status);


	return status;
 8008020:	2000      	movs	r0, #0
		pdata->system__enable_xtalk_per_quadrant & 0x1;
 8008022:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   5) =
 8008026:	716b      	strb	r3, [r5, #5]
		pdata->system__seed_config & 0x7;
 8008028:	79e3      	ldrb	r3, [r4, #7]
 800802a:	f003 0307 	and.w	r3, r3, #7
	*(pbuffer +   6) =
 800802e:	71ab      	strb	r3, [r5, #6]
		pdata->sd_config__woi_sd0;
 8008030:	7a23      	ldrb	r3, [r4, #8]
	*(pbuffer +   7) =
 8008032:	71eb      	strb	r3, [r5, #7]
		pdata->sd_config__woi_sd1;
 8008034:	7a63      	ldrb	r3, [r4, #9]
	*(pbuffer +   8) =
 8008036:	722b      	strb	r3, [r5, #8]
		pdata->sd_config__initial_phase_sd0 & 0x7F;
 8008038:	7aa3      	ldrb	r3, [r4, #10]
 800803a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   9) =
 800803e:	726b      	strb	r3, [r5, #9]
		pdata->sd_config__initial_phase_sd1 & 0x7F;
 8008040:	7ae3      	ldrb	r3, [r4, #11]
 8008042:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +  10) =
 8008046:	72ab      	strb	r3, [r5, #10]
		pdata->system__grouped_parameter_hold_1 & 0x3;
 8008048:	7b23      	ldrb	r3, [r4, #12]
 800804a:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  11) =
 800804e:	72eb      	strb	r3, [r5, #11]
		pdata->sd_config__first_order_select & 0x3;
 8008050:	7b63      	ldrb	r3, [r4, #13]
 8008052:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  12) =
 8008056:	732b      	strb	r3, [r5, #12]
		pdata->sd_config__quantifier & 0xF;
 8008058:	7ba3      	ldrb	r3, [r4, #14]
 800805a:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +  13) =
 800805e:	736b      	strb	r3, [r5, #13]
		pdata->roi_config__user_roi_centre_spad;
 8008060:	7be3      	ldrb	r3, [r4, #15]
	*(pbuffer +  14) =
 8008062:	73ab      	strb	r3, [r5, #14]
		pdata->roi_config__user_roi_requested_global_xy_size;
 8008064:	7c23      	ldrb	r3, [r4, #16]
	*(pbuffer +  15) =
 8008066:	73eb      	strb	r3, [r5, #15]
		pdata->system__sequence_config;
 8008068:	7c63      	ldrb	r3, [r4, #17]
	*(pbuffer +  16) =
 800806a:	742b      	strb	r3, [r5, #16]
		pdata->system__grouped_parameter_hold & 0x3;
 800806c:	7ca3      	ldrb	r3, [r4, #18]
 800806e:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  17) =
 8008072:	746b      	strb	r3, [r5, #17]
}
 8008074:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8008076:	f06f 0009 	mvn.w	r0, #9
}
 800807a:	4770      	bx	lr

0800807c <VL53L1_i2c_encode_system_control>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_SYSTEM_CONTROL_I2C_SIZE_BYTES > buf_size)
 800807c:	2904      	cmp	r1, #4
{
 800807e:	4603      	mov	r3, r0
	if (VL53L1_SYSTEM_CONTROL_I2C_SIZE_BYTES > buf_size)
 8008080:	d913      	bls.n	80080aa <VL53L1_i2c_encode_system_control+0x2e>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	*(pbuffer +   0) =
		pdata->power_management__go1_power_force & 0x1;
 8008082:	7801      	ldrb	r1, [r0, #0]
	*(pbuffer +   4) =
		pdata->system__mode_start;
	LOG_FUNCTION_END(status);


	return status;
 8008084:	2000      	movs	r0, #0
		pdata->power_management__go1_power_force & 0x1;
 8008086:	f001 0101 	and.w	r1, r1, #1
	*(pbuffer +   0) =
 800808a:	7011      	strb	r1, [r2, #0]
		pdata->system__stream_count_ctrl & 0x1;
 800808c:	7859      	ldrb	r1, [r3, #1]
 800808e:	f001 0101 	and.w	r1, r1, #1
	*(pbuffer +   1) =
 8008092:	7051      	strb	r1, [r2, #1]
		pdata->firmware__enable & 0x1;
 8008094:	7899      	ldrb	r1, [r3, #2]
 8008096:	f001 0101 	and.w	r1, r1, #1
	*(pbuffer +   2) =
 800809a:	7091      	strb	r1, [r2, #2]
		pdata->system__interrupt_clear & 0x3;
 800809c:	78d9      	ldrb	r1, [r3, #3]
 800809e:	f001 0103 	and.w	r1, r1, #3
	*(pbuffer +   3) =
 80080a2:	70d1      	strb	r1, [r2, #3]
		pdata->system__mode_start;
 80080a4:	791b      	ldrb	r3, [r3, #4]
	*(pbuffer +   4) =
 80080a6:	7113      	strb	r3, [r2, #4]
	return status;
 80080a8:	4770      	bx	lr
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 80080aa:	f06f 0009 	mvn.w	r0, #9
}
 80080ae:	4770      	bx	lr

080080b0 <VL53L1_i2c_decode_system_results>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_SYSTEM_RESULTS_I2C_SIZE_BYTES > buf_size)
 80080b0:	282b      	cmp	r0, #43	; 0x2b
 80080b2:	f240 8089 	bls.w	80081c8 <VL53L1_i2c_decode_system_results+0x118>
	pdata->result__report_status =
		(*(pbuffer +   2)) & 0xF;
	pdata->result__stream_count =
		(*(pbuffer +   3));
	pdata->result__dss_actual_effective_spads_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   4));
 80080b6:	2002      	movs	r0, #2
{
 80080b8:	b538      	push	{r3, r4, r5, lr}
		(*(pbuffer +   0)) & 0x3F;
 80080ba:	780b      	ldrb	r3, [r1, #0]
 80080bc:	460d      	mov	r5, r1
 80080be:	4614      	mov	r4, r2
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   4));
 80080c0:	3104      	adds	r1, #4
		(*(pbuffer +   0)) & 0x3F;
 80080c2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->result__interrupt_status =
 80080c6:	7013      	strb	r3, [r2, #0]
	pdata->result__range_status =
 80080c8:	786b      	ldrb	r3, [r5, #1]
 80080ca:	7053      	strb	r3, [r2, #1]
		(*(pbuffer +   2)) & 0xF;
 80080cc:	78ab      	ldrb	r3, [r5, #2]
 80080ce:	f003 030f 	and.w	r3, r3, #15
	pdata->result__report_status =
 80080d2:	7093      	strb	r3, [r2, #2]
	pdata->result__stream_count =
 80080d4:	78eb      	ldrb	r3, [r5, #3]
 80080d6:	70d3      	strb	r3, [r2, #3]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   4));
 80080d8:	f7ff fbb8 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__peak_signal_count_rate_mcps_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   6));
 80080dc:	1da9      	adds	r1, r5, #6
	pdata->result__dss_actual_effective_spads_sd0 =
 80080de:	80a0      	strh	r0, [r4, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   6));
 80080e0:	2002      	movs	r0, #2
 80080e2:	f7ff fbb3 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__ambient_count_rate_mcps_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8));
 80080e6:	f105 0108 	add.w	r1, r5, #8
	pdata->result__peak_signal_count_rate_mcps_sd0 =
 80080ea:	80e0      	strh	r0, [r4, #6]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8));
 80080ec:	2002      	movs	r0, #2
 80080ee:	f7ff fbad 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__sigma_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  10));
 80080f2:	f105 010a 	add.w	r1, r5, #10
	pdata->result__ambient_count_rate_mcps_sd0 =
 80080f6:	8120      	strh	r0, [r4, #8]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  10));
 80080f8:	2002      	movs	r0, #2
 80080fa:	f7ff fba7 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__phase_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  12));
 80080fe:	f105 010c 	add.w	r1, r5, #12
	pdata->result__sigma_sd0 =
 8008102:	8160      	strh	r0, [r4, #10]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  12));
 8008104:	2002      	movs	r0, #2
 8008106:	f7ff fba1 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__final_crosstalk_corrected_range_mm_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  14));
 800810a:	f105 010e 	add.w	r1, r5, #14
	pdata->result__phase_sd0 =
 800810e:	81a0      	strh	r0, [r4, #12]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  14));
 8008110:	2002      	movs	r0, #2
 8008112:	f7ff fb9b 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__peak_signal_count_rate_crosstalk_corrected_mcps_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  16));
 8008116:	f105 0110 	add.w	r1, r5, #16
	pdata->result__final_crosstalk_corrected_range_mm_sd0 =
 800811a:	81e0      	strh	r0, [r4, #14]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  16));
 800811c:	2002      	movs	r0, #2
 800811e:	f7ff fb95 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__mm_inner_actual_effective_spads_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  18));
 8008122:	f105 0112 	add.w	r1, r5, #18
	pdata->result__peak_signal_count_rate_crosstalk_corrected_mcps_sd0 =
 8008126:	8220      	strh	r0, [r4, #16]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  18));
 8008128:	2002      	movs	r0, #2
 800812a:	f7ff fb8f 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__mm_outer_actual_effective_spads_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  20));
 800812e:	f105 0114 	add.w	r1, r5, #20
	pdata->result__mm_inner_actual_effective_spads_sd0 =
 8008132:	8260      	strh	r0, [r4, #18]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  20));
 8008134:	2002      	movs	r0, #2
 8008136:	f7ff fb89 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__avg_signal_count_rate_mcps_sd0 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  22));
 800813a:	f105 0116 	add.w	r1, r5, #22
	pdata->result__mm_outer_actual_effective_spads_sd0 =
 800813e:	82a0      	strh	r0, [r4, #20]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  22));
 8008140:	2002      	movs	r0, #2
 8008142:	f7ff fb83 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__dss_actual_effective_spads_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  24));
 8008146:	f105 0118 	add.w	r1, r5, #24
	pdata->result__avg_signal_count_rate_mcps_sd0 =
 800814a:	82e0      	strh	r0, [r4, #22]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  24));
 800814c:	2002      	movs	r0, #2
 800814e:	f7ff fb7d 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__peak_signal_count_rate_mcps_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  26));
 8008152:	f105 011a 	add.w	r1, r5, #26
	pdata->result__dss_actual_effective_spads_sd1 =
 8008156:	8320      	strh	r0, [r4, #24]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  26));
 8008158:	2002      	movs	r0, #2
 800815a:	f7ff fb77 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__ambient_count_rate_mcps_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  28));
 800815e:	f105 011c 	add.w	r1, r5, #28
	pdata->result__peak_signal_count_rate_mcps_sd1 =
 8008162:	8360      	strh	r0, [r4, #26]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  28));
 8008164:	2002      	movs	r0, #2
 8008166:	f7ff fb71 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__sigma_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  30));
 800816a:	f105 011e 	add.w	r1, r5, #30
	pdata->result__ambient_count_rate_mcps_sd1 =
 800816e:	83a0      	strh	r0, [r4, #28]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  30));
 8008170:	2002      	movs	r0, #2
 8008172:	f7ff fb6b 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__phase_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  32));
 8008176:	f105 0120 	add.w	r1, r5, #32
	pdata->result__sigma_sd1 =
 800817a:	83e0      	strh	r0, [r4, #30]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  32));
 800817c:	2002      	movs	r0, #2
 800817e:	f7ff fb65 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__final_crosstalk_corrected_range_mm_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  34));
 8008182:	f105 0122 	add.w	r1, r5, #34	; 0x22
	pdata->result__phase_sd1 =
 8008186:	8420      	strh	r0, [r4, #32]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  34));
 8008188:	2002      	movs	r0, #2
 800818a:	f7ff fb5f 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__spare_0_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  36));
 800818e:	f105 0124 	add.w	r1, r5, #36	; 0x24
	pdata->result__final_crosstalk_corrected_range_mm_sd1 =
 8008192:	8460      	strh	r0, [r4, #34]	; 0x22
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  36));
 8008194:	2002      	movs	r0, #2
 8008196:	f7ff fb59 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__spare_1_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  38));
 800819a:	f105 0126 	add.w	r1, r5, #38	; 0x26
	pdata->result__spare_0_sd1 =
 800819e:	84a0      	strh	r0, [r4, #36]	; 0x24
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  38));
 80081a0:	2002      	movs	r0, #2
 80081a2:	f7ff fb53 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__spare_2_sd1 =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  40));
 80081a6:	f105 0128 	add.w	r1, r5, #40	; 0x28
	pdata->result__spare_1_sd1 =
 80081aa:	84e0      	strh	r0, [r4, #38]	; 0x26
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  40));
 80081ac:	2002      	movs	r0, #2
 80081ae:	f7ff fb4d 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->result__spare_2_sd1 =
 80081b2:	8520      	strh	r0, [r4, #40]	; 0x28
	pdata->result__spare_3_sd1 =
 80081b4:	f895 302a 	ldrb.w	r3, [r5, #42]	; 0x2a
	pdata->result__thresh_info =
		(*(pbuffer +  43));

	LOG_FUNCTION_END(status);

	return status;
 80081b8:	2000      	movs	r0, #0
	pdata->result__spare_3_sd1 =
 80081ba:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
	pdata->result__thresh_info =
 80081be:	f895 302b 	ldrb.w	r3, [r5, #43]	; 0x2b
 80081c2:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
}
 80081c6:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 80081c8:	f06f 0009 	mvn.w	r0, #9
}
 80081cc:	4770      	bx	lr
 80081ce:	bf00      	nop

080081d0 <VL53L1_i2c_decode_core_results>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_CORE_RESULTS_I2C_SIZE_BYTES > buf_size)
 80081d0:	2820      	cmp	r0, #32
 80081d2:	d935      	bls.n	8008240 <VL53L1_i2c_decode_core_results+0x70>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	pdata->result_core__ambient_window_events_sd0 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +   0));
 80081d4:	2004      	movs	r0, #4
{
 80081d6:	b538      	push	{r3, r4, r5, lr}
 80081d8:	4614      	mov	r4, r2
 80081da:	460d      	mov	r5, r1
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +   0));
 80081dc:	f7ff fb7a 	bl	80078d4 <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__ranging_total_events_sd0 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +   4));
 80081e0:	1d29      	adds	r1, r5, #4
	pdata->result_core__ambient_window_events_sd0 =
 80081e2:	6020      	str	r0, [r4, #0]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +   4));
 80081e4:	2004      	movs	r0, #4
 80081e6:	f7ff fb75 	bl	80078d4 <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__signal_total_events_sd0 =
		(VL53L1_i2c_decode_int32_t(4, pbuffer +   8));
 80081ea:	f105 0108 	add.w	r1, r5, #8
	pdata->result_core__ranging_total_events_sd0 =
 80081ee:	6060      	str	r0, [r4, #4]
		(VL53L1_i2c_decode_int32_t(4, pbuffer +   8));
 80081f0:	2004      	movs	r0, #4
 80081f2:	f7ff fb7d 	bl	80078f0 <VL53L1_i2c_decode_int32_t>
	pdata->result_core__total_periods_elapsed_sd0 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  12));
 80081f6:	f105 010c 	add.w	r1, r5, #12
	pdata->result_core__signal_total_events_sd0 =
 80081fa:	60a0      	str	r0, [r4, #8]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  12));
 80081fc:	2004      	movs	r0, #4
 80081fe:	f7ff fb69 	bl	80078d4 <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__ambient_window_events_sd1 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  16));
 8008202:	f105 0110 	add.w	r1, r5, #16
	pdata->result_core__total_periods_elapsed_sd0 =
 8008206:	60e0      	str	r0, [r4, #12]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  16));
 8008208:	2004      	movs	r0, #4
 800820a:	f7ff fb63 	bl	80078d4 <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__ranging_total_events_sd1 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  20));
 800820e:	f105 0114 	add.w	r1, r5, #20
	pdata->result_core__ambient_window_events_sd1 =
 8008212:	6120      	str	r0, [r4, #16]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  20));
 8008214:	2004      	movs	r0, #4
 8008216:	f7ff fb5d 	bl	80078d4 <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__signal_total_events_sd1 =
		(VL53L1_i2c_decode_int32_t(4, pbuffer +  24));
 800821a:	f105 0118 	add.w	r1, r5, #24
	pdata->result_core__ranging_total_events_sd1 =
 800821e:	6160      	str	r0, [r4, #20]
		(VL53L1_i2c_decode_int32_t(4, pbuffer +  24));
 8008220:	2004      	movs	r0, #4
 8008222:	f7ff fb65 	bl	80078f0 <VL53L1_i2c_decode_int32_t>
	pdata->result_core__total_periods_elapsed_sd1 =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  28));
 8008226:	f105 011c 	add.w	r1, r5, #28
	pdata->result_core__signal_total_events_sd1 =
 800822a:	61a0      	str	r0, [r4, #24]
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  28));
 800822c:	2004      	movs	r0, #4
 800822e:	f7ff fb51 	bl	80078d4 <VL53L1_i2c_decode_uint32_t>
	pdata->result_core__total_periods_elapsed_sd1 =
 8008232:	61e0      	str	r0, [r4, #28]
	pdata->result_core__spare_0 =
 8008234:	f895 3020 	ldrb.w	r3, [r5, #32]
		(*(pbuffer +  32));

	LOG_FUNCTION_END(status);

	return status;
 8008238:	2000      	movs	r0, #0
	pdata->result_core__spare_0 =
 800823a:	f884 3020 	strb.w	r3, [r4, #32]
}
 800823e:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8008240:	f06f 0009 	mvn.w	r0, #9
}
 8008244:	4770      	bx	lr
 8008246:	bf00      	nop

08008248 <VL53L1_i2c_decode_debug_results>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_DEBUG_RESULTS_I2C_SIZE_BYTES > buf_size)
 8008248:	2837      	cmp	r0, #55	; 0x37
 800824a:	f240 80d3 	bls.w	80083f4 <VL53L1_i2c_decode_debug_results+0x1ac>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	pdata->phasecal_result__reference_phase =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   0));
 800824e:	2002      	movs	r0, #2
{
 8008250:	b538      	push	{r3, r4, r5, lr}
 8008252:	4614      	mov	r4, r2
 8008254:	460d      	mov	r5, r1
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   0));
 8008256:	f7ff faf9 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->phasecal_result__reference_phase =
 800825a:	8020      	strh	r0, [r4, #0]
	pdata->vhv_result__search_result =
		(*(pbuffer +   6)) & 0x3F;
	pdata->vhv_result__latest_setting =
		(*(pbuffer +   7)) & 0x3F;
	pdata->result__osc_calibrate_val =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8)) & 0x3FF;
 800825c:	f105 0108 	add.w	r1, r5, #8
		(*(pbuffer +   2)) & 0x7F;
 8008260:	78ab      	ldrb	r3, [r5, #2]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8)) & 0x3FF;
 8008262:	2002      	movs	r0, #2
		(*(pbuffer +   2)) & 0x7F;
 8008264:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	pdata->phasecal_result__vcsel_start =
 8008268:	70a3      	strb	r3, [r4, #2]
		(*(pbuffer +   3)) & 0x3F;
 800826a:	78eb      	ldrb	r3, [r5, #3]
 800826c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->ref_spad_char_result__num_actual_ref_spads =
 8008270:	70e3      	strb	r3, [r4, #3]
		(*(pbuffer +   4)) & 0x3;
 8008272:	792b      	ldrb	r3, [r5, #4]
 8008274:	f003 0303 	and.w	r3, r3, #3
	pdata->ref_spad_char_result__ref_location =
 8008278:	7123      	strb	r3, [r4, #4]
		(*(pbuffer +   5)) & 0x1;
 800827a:	796b      	ldrb	r3, [r5, #5]
 800827c:	f003 0301 	and.w	r3, r3, #1
	pdata->vhv_result__coldboot_status =
 8008280:	7163      	strb	r3, [r4, #5]
		(*(pbuffer +   6)) & 0x3F;
 8008282:	79ab      	ldrb	r3, [r5, #6]
 8008284:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->vhv_result__search_result =
 8008288:	71a3      	strb	r3, [r4, #6]
		(*(pbuffer +   7)) & 0x3F;
 800828a:	79eb      	ldrb	r3, [r5, #7]
 800828c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->vhv_result__latest_setting =
 8008290:	71e3      	strb	r3, [r4, #7]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   8)) & 0x3FF;
 8008292:	f7ff fadb 	bl	800784c <VL53L1_i2c_decode_uint16_t>
 8008296:	f3c0 0309 	ubfx	r3, r0, #0, #10
	pdata->firmware__mode_status =
		(*(pbuffer +  16));
	pdata->firmware__secondary_mode_status =
		(*(pbuffer +  17));
	pdata->firmware__cal_repeat_rate_counter =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  18)) & 0xFFF;
 800829a:	f105 0112 	add.w	r1, r5, #18
 800829e:	2002      	movs	r0, #2
	pdata->result__osc_calibrate_val =
 80082a0:	8123      	strh	r3, [r4, #8]
		(*(pbuffer +  10)) & 0x3;
 80082a2:	7aab      	ldrb	r3, [r5, #10]
 80082a4:	f003 0303 	and.w	r3, r3, #3
	pdata->ana_config__powerdown_go1 =
 80082a8:	72a3      	strb	r3, [r4, #10]
		(*(pbuffer +  11)) & 0x3;
 80082aa:	7aeb      	ldrb	r3, [r5, #11]
 80082ac:	f003 0303 	and.w	r3, r3, #3
	pdata->ana_config__ref_bg_ctrl =
 80082b0:	72e3      	strb	r3, [r4, #11]
		(*(pbuffer +  12)) & 0xF;
 80082b2:	7b2b      	ldrb	r3, [r5, #12]
 80082b4:	f003 030f 	and.w	r3, r3, #15
	pdata->ana_config__regdvdd1v2_ctrl =
 80082b8:	7323      	strb	r3, [r4, #12]
		(*(pbuffer +  13)) & 0x7;
 80082ba:	7b6b      	ldrb	r3, [r5, #13]
 80082bc:	f003 0307 	and.w	r3, r3, #7
	pdata->ana_config__osc_slow_ctrl =
 80082c0:	7363      	strb	r3, [r4, #13]
		(*(pbuffer +  14)) & 0x1;
 80082c2:	7bab      	ldrb	r3, [r5, #14]
 80082c4:	f003 0301 	and.w	r3, r3, #1
	pdata->test_mode__status =
 80082c8:	73a3      	strb	r3, [r4, #14]
		(*(pbuffer +  15)) & 0x3;
 80082ca:	7beb      	ldrb	r3, [r5, #15]
 80082cc:	f003 0303 	and.w	r3, r3, #3
	pdata->firmware__system_status =
 80082d0:	73e3      	strb	r3, [r4, #15]
	pdata->firmware__mode_status =
 80082d2:	7c2b      	ldrb	r3, [r5, #16]
 80082d4:	7423      	strb	r3, [r4, #16]
	pdata->firmware__secondary_mode_status =
 80082d6:	7c6b      	ldrb	r3, [r5, #17]
 80082d8:	7463      	strb	r3, [r4, #17]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  18)) & 0xFFF;
 80082da:	f7ff fab7 	bl	800784c <VL53L1_i2c_decode_uint16_t>
 80082de:	f3c0 030b 	ubfx	r3, r0, #0, #12
	pdata->gph__system__thresh_high =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  22));
 80082e2:	f105 0116 	add.w	r1, r5, #22
 80082e6:	2002      	movs	r0, #2
	pdata->firmware__cal_repeat_rate_counter =
 80082e8:	8263      	strh	r3, [r4, #18]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  22));
 80082ea:	f7ff faaf 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->gph__system__thresh_low =
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  24));
 80082ee:	f105 0118 	add.w	r1, r5, #24
	pdata->gph__system__thresh_high =
 80082f2:	82a0      	strh	r0, [r4, #20]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  24));
 80082f4:	2002      	movs	r0, #2
 80082f6:	f7ff faa9 	bl	800784c <VL53L1_i2c_decode_uint16_t>
	pdata->gph__system__thresh_low =
 80082fa:	82e0      	strh	r0, [r4, #22]
	pdata->gph__system__enable_xtalk_per_quadrant =
		(*(pbuffer +  26)) & 0x1;
 80082fc:	7eab      	ldrb	r3, [r5, #26]
	pdata->pad_startup_mode__value_ro =
		(*(pbuffer +  44)) & 0x3;
	pdata->pad_startup_mode__value_ctrl =
		(*(pbuffer +  45)) & 0x3F;
	pdata->pll_period_us =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  46)) & 0x3FFFF;
 80082fe:	f105 012e 	add.w	r1, r5, #46	; 0x2e
 8008302:	2004      	movs	r0, #4
		(*(pbuffer +  26)) & 0x1;
 8008304:	f003 0301 	and.w	r3, r3, #1
	pdata->gph__system__enable_xtalk_per_quadrant =
 8008308:	7623      	strb	r3, [r4, #24]
		(*(pbuffer +  27)) & 0x7;
 800830a:	7eeb      	ldrb	r3, [r5, #27]
 800830c:	f003 0307 	and.w	r3, r3, #7
	pdata->gph__spare_0 =
 8008310:	7663      	strb	r3, [r4, #25]
	pdata->gph__sd_config__woi_sd0 =
 8008312:	7f2b      	ldrb	r3, [r5, #28]
 8008314:	76a3      	strb	r3, [r4, #26]
	pdata->gph__sd_config__woi_sd1 =
 8008316:	7f6b      	ldrb	r3, [r5, #29]
 8008318:	76e3      	strb	r3, [r4, #27]
		(*(pbuffer +  30)) & 0x7F;
 800831a:	7fab      	ldrb	r3, [r5, #30]
 800831c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	pdata->gph__sd_config__initial_phase_sd0 =
 8008320:	7723      	strb	r3, [r4, #28]
		(*(pbuffer +  31)) & 0x7F;
 8008322:	7feb      	ldrb	r3, [r5, #31]
 8008324:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	pdata->gph__sd_config__initial_phase_sd1 =
 8008328:	7763      	strb	r3, [r4, #29]
		(*(pbuffer +  32)) & 0x3;
 800832a:	f895 3020 	ldrb.w	r3, [r5, #32]
 800832e:	f003 0303 	and.w	r3, r3, #3
	pdata->gph__sd_config__first_order_select =
 8008332:	77a3      	strb	r3, [r4, #30]
		(*(pbuffer +  33)) & 0xF;
 8008334:	f895 3021 	ldrb.w	r3, [r5, #33]	; 0x21
 8008338:	f003 030f 	and.w	r3, r3, #15
	pdata->gph__sd_config__quantifier =
 800833c:	77e3      	strb	r3, [r4, #31]
	pdata->gph__roi_config__user_roi_centre_spad =
 800833e:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8008342:	f884 3020 	strb.w	r3, [r4, #32]
	pdata->gph__roi_config__user_roi_requested_global_xy_size =
 8008346:	f895 3023 	ldrb.w	r3, [r5, #35]	; 0x23
 800834a:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
	pdata->gph__system__sequence_config =
 800834e:	f895 3024 	ldrb.w	r3, [r5, #36]	; 0x24
 8008352:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
		(*(pbuffer +  37)) & 0x1;
 8008356:	f895 3025 	ldrb.w	r3, [r5, #37]	; 0x25
 800835a:	f003 0301 	and.w	r3, r3, #1
	pdata->gph__gph_id =
 800835e:	f884 3023 	strb.w	r3, [r4, #35]	; 0x23
		(*(pbuffer +  38)) & 0x3;
 8008362:	f895 3026 	ldrb.w	r3, [r5, #38]	; 0x26
 8008366:	f003 0303 	and.w	r3, r3, #3
	pdata->system__interrupt_set =
 800836a:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
		(*(pbuffer +  39)) & 0x1F;
 800836e:	f895 3027 	ldrb.w	r3, [r5, #39]	; 0x27
 8008372:	f003 031f 	and.w	r3, r3, #31
	pdata->interrupt_manager__enables =
 8008376:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
		(*(pbuffer +  40)) & 0x1F;
 800837a:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
 800837e:	f003 031f 	and.w	r3, r3, #31
	pdata->interrupt_manager__clear =
 8008382:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
		(*(pbuffer +  41)) & 0x1F;
 8008386:	f895 3029 	ldrb.w	r3, [r5, #41]	; 0x29
 800838a:	f003 031f 	and.w	r3, r3, #31
	pdata->interrupt_manager__status =
 800838e:	f884 3027 	strb.w	r3, [r4, #39]	; 0x27
		(*(pbuffer +  42)) & 0x1;
 8008392:	f895 302a 	ldrb.w	r3, [r5, #42]	; 0x2a
 8008396:	f003 0301 	and.w	r3, r3, #1
	pdata->mcu_to_host_bank__wr_access_en =
 800839a:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
		(*(pbuffer +  43)) & 0x1;
 800839e:	f895 302b 	ldrb.w	r3, [r5, #43]	; 0x2b
 80083a2:	f003 0301 	and.w	r3, r3, #1
	pdata->power_management__go1_reset_status =
 80083a6:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
		(*(pbuffer +  44)) & 0x3;
 80083aa:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 80083ae:	f003 0303 	and.w	r3, r3, #3
	pdata->pad_startup_mode__value_ro =
 80083b2:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
		(*(pbuffer +  45)) & 0x3F;
 80083b6:	f895 302d 	ldrb.w	r3, [r5, #45]	; 0x2d
 80083ba:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->pad_startup_mode__value_ctrl =
 80083be:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  46)) & 0x3FFFF;
 80083c2:	f7ff fa87 	bl	80078d4 <VL53L1_i2c_decode_uint32_t>
 80083c6:	f3c0 0311 	ubfx	r3, r0, #0, #18
	pdata->interrupt_scheduler__data_out =
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  50));
 80083ca:	f105 0132 	add.w	r1, r5, #50	; 0x32
 80083ce:	2004      	movs	r0, #4
	pdata->pll_period_us =
 80083d0:	62e3      	str	r3, [r4, #44]	; 0x2c
		(VL53L1_i2c_decode_uint32_t(4, pbuffer +  50));
 80083d2:	f7ff fa7f 	bl	80078d4 <VL53L1_i2c_decode_uint32_t>
	pdata->interrupt_scheduler__data_out =
 80083d6:	6320      	str	r0, [r4, #48]	; 0x30
	pdata->nvm_bist__complete =
		(*(pbuffer +  54)) & 0x1;
 80083d8:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
	pdata->nvm_bist__status =
		(*(pbuffer +  55)) & 0x1;

	LOG_FUNCTION_END(status);

	return status;
 80083dc:	2000      	movs	r0, #0
		(*(pbuffer +  54)) & 0x1;
 80083de:	f003 0301 	and.w	r3, r3, #1
	pdata->nvm_bist__complete =
 80083e2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
		(*(pbuffer +  55)) & 0x1;
 80083e6:	f895 3037 	ldrb.w	r3, [r5, #55]	; 0x37
 80083ea:	f003 0301 	and.w	r3, r3, #1
	pdata->nvm_bist__status =
 80083ee:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 80083f2:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 80083f4:	f06f 0009 	mvn.w	r0, #9
}
 80083f8:	4770      	bx	lr
 80083fa:	bf00      	nop

080083fc <VL53L1_get_nvm_copy_data>:


VL53L1_Error VL53L1_get_nvm_copy_data(
	VL53L1_DEV                 Dev,
	VL53L1_nvm_copy_data_t    *pdata)
{
 80083fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008400:	b08e      	sub	sp, #56	; 0x38
 8008402:	460c      	mov	r4, r1
	uint8_t comms_buffer[VL53L1_NVM_COPY_DATA_I2C_SIZE_BYTES];

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
		status = VL53L1_ReadMulti(
 8008404:	2331      	movs	r3, #49	; 0x31
 8008406:	f240 110f 	movw	r1, #271	; 0x10f
 800840a:	aa01      	add	r2, sp, #4
 800840c:	f000 f8cc 	bl	80085a8 <VL53L1_ReadMulti>
			Dev,
			VL53L1_IDENTIFICATION__MODEL_ID,
			comms_buffer,
			VL53L1_NVM_COPY_DATA_I2C_SIZE_BYTES);

	if (status == VL53L1_ERROR_NONE)
 8008410:	4605      	mov	r5, r0
 8008412:	2800      	cmp	r0, #0
 8008414:	d16c      	bne.n	80084f0 <VL53L1_get_nvm_copy_data+0xf4>
	pdata->identification__model_id =
 8008416:	f89d 6004 	ldrb.w	r6, [sp, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   3));
 800841a:	f10d 0107 	add.w	r1, sp, #7
	pdata->identification__module_type =
 800841e:	f89d 2005 	ldrb.w	r2, [sp, #5]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   3));
 8008422:	2002      	movs	r0, #2
	pdata->identification__revision_id =
 8008424:	f89d 3006 	ldrb.w	r3, [sp, #6]
	pdata->identification__model_id =
 8008428:	7026      	strb	r6, [r4, #0]
	pdata->identification__module_type =
 800842a:	7062      	strb	r2, [r4, #1]
	pdata->identification__revision_id =
 800842c:	70a3      	strb	r3, [r4, #2]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   3));
 800842e:	f7ff fa0d 	bl	800784c <VL53L1_i2c_decode_uint16_t>
		(*(pbuffer +   6)) & 0x7;
 8008432:	f89d 900a 	ldrb.w	r9, [sp, #10]
		(*(pbuffer +   5)) & 0x7F;
 8008436:	f89d a009 	ldrb.w	sl, [sp, #9]
		(*(pbuffer +   7)) & 0x7;
 800843a:	f89d 800b 	ldrb.w	r8, [sp, #11]
		(*(pbuffer +   6)) & 0x7;
 800843e:	f009 0907 	and.w	r9, r9, #7
		(*(pbuffer +   8)) & 0x3F;
 8008442:	f89d e00c 	ldrb.w	lr, [sp, #12]
		(*(pbuffer +   5)) & 0x7F;
 8008446:	f00a 0a7f 	and.w	sl, sl, #127	; 0x7f
		(*(pbuffer +   9)) & 0x3F;
 800844a:	f89d c00d 	ldrb.w	ip, [sp, #13]
		(*(pbuffer +   7)) & 0x7;
 800844e:	f008 0807 	and.w	r8, r8, #7
		(*(pbuffer +  10)) & 0x1;
 8008452:	f89d 700e 	ldrb.w	r7, [sp, #14]
		(*(pbuffer +   8)) & 0x3F;
 8008456:	f00e 0e3f 	and.w	lr, lr, #63	; 0x3f
		(*(pbuffer +  11)) & 0x7F;
 800845a:	f89d 600f 	ldrb.w	r6, [sp, #15]
		(*(pbuffer +   9)) & 0x3F;
 800845e:	f00c 0c3f 	and.w	ip, ip, #63	; 0x3f
		(*(pbuffer +  12)) & 0x1;
 8008462:	f89d 1010 	ldrb.w	r1, [sp, #16]
		(*(pbuffer +  10)) & 0x1;
 8008466:	f007 0701 	and.w	r7, r7, #1
		(*(pbuffer +  13)) & 0x3F;
 800846a:	f89d 2011 	ldrb.w	r2, [sp, #17]
		(*(pbuffer +  11)) & 0x7F;
 800846e:	f006 067f 	and.w	r6, r6, #127	; 0x7f
		(*(pbuffer +  14)) & 0x3F;
 8008472:	f89d 3012 	ldrb.w	r3, [sp, #18]
		(*(pbuffer +  12)) & 0x1;
 8008476:	f001 0101 	and.w	r1, r1, #1
		(*(pbuffer +  13)) & 0x3F;
 800847a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
	pdata->identification__module_id =
 800847e:	80a0      	strh	r0, [r4, #4]
		(*(pbuffer +  14)) & 0x3F;
 8008480:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->global_config__spad_enables_rtn_1 =
 8008484:	f89d 0014 	ldrb.w	r0, [sp, #20]
	pdata->ana_config__fast_osc__freq_set =
 8008488:	f884 9007 	strb.w	r9, [r4, #7]
	pdata->global_config__spad_enables_rtn_0 =
 800848c:	f89d 9013 	ldrb.w	r9, [sp, #19]
	pdata->ana_config__vcsel_selion =
 8008490:	f884 e009 	strb.w	lr, [r4, #9]
	pdata->protected_laser_safety__lock_bit =
 8008494:	72e7      	strb	r7, [r4, #11]
	pdata->laser_safety__key =
 8008496:	7326      	strb	r6, [r4, #12]
	pdata->laser_safety__key_ro =
 8008498:	7361      	strb	r1, [r4, #13]
	pdata->laser_safety__clip =
 800849a:	73a2      	strb	r2, [r4, #14]
	pdata->laser_safety__mult =
 800849c:	73e3      	strb	r3, [r4, #15]
	pdata->global_config__spad_enables_rtn_1 =
 800849e:	7460      	strb	r0, [r4, #17]
	pdata->global_config__spad_enables_rtn_2 =
 80084a0:	f8dd e019 	ldr.w	lr, [sp, #25]
 80084a4:	f8dd 701d 	ldr.w	r7, [sp, #29]
 80084a8:	f8dd 6021 	ldr.w	r6, [sp, #33]	; 0x21
 80084ac:	f8dd 0025 	ldr.w	r0, [sp, #37]	; 0x25
 80084b0:	f8dd 1029 	ldr.w	r1, [sp, #41]	; 0x29
 80084b4:	f8dd 202d 	ldr.w	r2, [sp, #45]	; 0x2d
 80084b8:	f8dd 3031 	ldr.w	r3, [sp, #49]	; 0x31
	pdata->ana_config__fast_osc__trim_max =
 80084bc:	f884 a006 	strb.w	sl, [r4, #6]
	pdata->ana_config__vcsel_trim =
 80084c0:	f884 8008 	strb.w	r8, [r4, #8]
	pdata->ana_config__vcsel_selion_max =
 80084c4:	f884 c00a 	strb.w	ip, [r4, #10]
	pdata->global_config__spad_enables_rtn_0 =
 80084c8:	f884 9010 	strb.w	r9, [r4, #16]
	pdata->global_config__spad_enables_rtn_2 =
 80084cc:	f8dd c015 	ldr.w	ip, [sp, #21]
 80084d0:	f8c4 e016 	str.w	lr, [r4, #22]
 80084d4:	f8c4 c012 	str.w	ip, [r4, #18]
 80084d8:	f8c4 701a 	str.w	r7, [r4, #26]
 80084dc:	f8c4 601e 	str.w	r6, [r4, #30]
 80084e0:	f8c4 0022 	str.w	r0, [r4, #34]	; 0x22
 80084e4:	f8c4 1026 	str.w	r1, [r4, #38]	; 0x26
 80084e8:	f8c4 202a 	str.w	r2, [r4, #42]	; 0x2a
 80084ec:	f8c4 302e 	str.w	r3, [r4, #46]	; 0x2e
			pdata);

	LOG_FUNCTION_END(status);

	return status;
}
 80084f0:	4628      	mov	r0, r5
 80084f2:	b00e      	add	sp, #56	; 0x38
 80084f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080084f8 <VL53L1_poll_for_boot_completion>:


VL53L1_Error VL53L1_poll_for_boot_completion(
	VL53L1_DEV    Dev,
	uint32_t      timeout_ms)
{
 80084f8:	b570      	push	{r4, r5, r6, lr}
 80084fa:	460e      	mov	r6, r1
 80084fc:	b082      	sub	sp, #8
	 * it copies the NVM data into the G02 host register banks
	 * The host must wait the required time to allow the copy
	 * to complete before attempting to read the firmware status
	 */

	status = VL53L1_WaitUs(
 80084fe:	f44f 6196 	mov.w	r1, #1200	; 0x4b0
{
 8008502:	4605      	mov	r5, r0
	status = VL53L1_WaitUs(
 8008504:	f000 f8ce 	bl	80086a4 <VL53L1_WaitUs>
			Dev,
			VL53L1_FIRMWARE_BOOT_TIME_US);

	if (status == VL53L1_ERROR_NONE)
 8008508:	4604      	mov	r4, r0
 800850a:	b110      	cbz	r0, 8008512 <VL53L1_poll_for_boot_completion+0x1a>
		VL53L1_init_ll_driver_state(Dev, VL53L1_DEVICESTATE_SW_STANDBY);

	LOG_FUNCTION_END(status);

	return status;
}
 800850c:	4620      	mov	r0, r4
 800850e:	b002      	add	sp, #8
 8008510:	bd70      	pop	{r4, r5, r6, pc}
		status =
 8008512:	2401      	movs	r4, #1
 8008514:	4631      	mov	r1, r6
 8008516:	22e5      	movs	r2, #229	; 0xe5
 8008518:	4628      	mov	r0, r5
 800851a:	9401      	str	r4, [sp, #4]
 800851c:	4623      	mov	r3, r4
 800851e:	9400      	str	r4, [sp, #0]
 8008520:	f000 f8ce 	bl	80086c0 <VL53L1_WaitValueMaskEx>
	if (status == VL53L1_ERROR_NONE)
 8008524:	4604      	mov	r4, r0
 8008526:	2800      	cmp	r0, #0
 8008528:	d1f0      	bne.n	800850c <VL53L1_poll_for_boot_completion+0x14>
		VL53L1_init_ll_driver_state(Dev, VL53L1_DEVICESTATE_SW_STANDBY);
 800852a:	4628      	mov	r0, r5
 800852c:	2103      	movs	r1, #3
 800852e:	f7ff f863 	bl	80075f8 <VL53L1_init_ll_driver_state>
}
 8008532:	4620      	mov	r0, r4
 8008534:	b002      	add	sp, #8
 8008536:	bd70      	pop	{r4, r5, r6, pc}

08008538 <VL53L1_poll_for_range_completion>:


VL53L1_Error VL53L1_poll_for_range_completion(
	VL53L1_DEV     Dev,
	uint32_t       timeout_ms)
{
 8008538:	b510      	push	{r4, lr}

	gpio__mux_active_high_hv =
			pdev->stat_cfg.gpio_hv_mux__ctrl &
			VL53L1_DEVICEINTERRUPTLEVEL_ACTIVE_MASK;

	if (gpio__mux_active_high_hv == VL53L1_DEVICEINTERRUPTLEVEL_ACTIVE_HIGH)
 800853a:	f890 3170 	ldrb.w	r3, [r0, #368]	; 0x170
{
 800853e:	b082      	sub	sp, #8
		interrupt_ready = 0x01;
	else
		interrupt_ready = 0x00;

	status =
 8008540:	2401      	movs	r4, #1
 8008542:	2231      	movs	r2, #49	; 0x31
	if (gpio__mux_active_high_hv == VL53L1_DEVICEINTERRUPTLEVEL_ACTIVE_HIGH)
 8008544:	f083 0310 	eor.w	r3, r3, #16
	status =
 8008548:	f3c3 1300 	ubfx	r3, r3, #4, #1
 800854c:	e9cd 4400 	strd	r4, r4, [sp]
 8008550:	f000 f8b6 	bl	80086c0 <VL53L1_WaitValueMaskEx>
			VL53L1_POLLING_DELAY_MS);

	LOG_FUNCTION_END(status);

	return status;
}
 8008554:	b002      	add	sp, #8
 8008556:	bd10      	pop	{r4, pc}

08008558 <VL53L1_WriteMulti>:
}

VL53L1_Error VL53L1_WriteMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
    int status_int;
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    if (count > sizeof(_I2CBuffer) - 1) {
 8008558:	2bff      	cmp	r3, #255	; 0xff
 800855a:	d81f      	bhi.n	800859c <VL53L1_WriteMulti+0x44>
VL53L1_Error VL53L1_WriteMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 800855c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800855e:	460e      	mov	r6, r1
        return VL53L1_ERROR_INVALID_PARAMS;
    }
    _I2CBuffer[0] = index>>8;
 8008560:	4f10      	ldr	r7, [pc, #64]	; (80085a4 <VL53L1_WriteMulti+0x4c>)
 8008562:	461c      	mov	r4, r3
VL53L1_Error VL53L1_WriteMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8008564:	b083      	sub	sp, #12
    _I2CBuffer[0] = index>>8;
 8008566:	0a33      	lsrs	r3, r6, #8
 8008568:	4605      	mov	r5, r0
 800856a:	4611      	mov	r1, r2
    _I2CBuffer[1] = index&0xFF;
    memcpy(&_I2CBuffer[2], pdata, count);
 800856c:	1cb8      	adds	r0, r7, #2
 800856e:	4622      	mov	r2, r4
    _I2CBuffer[0] = index>>8;
 8008570:	703b      	strb	r3, [r7, #0]
    _I2CBuffer[1] = index&0xFF;
 8008572:	707e      	strb	r6, [r7, #1]
    memcpy(&_I2CBuffer[2], pdata, count);
 8008574:	f012 fa6d 	bl	801aa52 <memcpy>
    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, count + 2);
 8008578:	1ca3      	adds	r3, r4, #2
    int i2c_time_out = I2C_TIME_OUT_BASE+ count* I2C_TIME_OUT_BYTE;
 800857a:	340c      	adds	r4, #12
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 800857c:	f895 1398 	ldrb.w	r1, [r5, #920]	; 0x398
 8008580:	463a      	mov	r2, r7
 8008582:	f8d5 03a0 	ldr.w	r0, [r5, #928]	; 0x3a0
 8008586:	b29b      	uxth	r3, r3
 8008588:	9400      	str	r4, [sp, #0]
 800858a:	f7f9 fbbf 	bl	8001d0c <HAL_I2C_Master_Transmit>
    if (status_int != 0) {
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 800858e:	2800      	cmp	r0, #0
 8008590:	bf0c      	ite	eq
 8008592:	2000      	moveq	r0, #0
 8008594:	f06f 000c 	mvnne.w	r0, #12
    }
    VL53L1_PutI2cBus();
    return Status;
}
 8008598:	b003      	add	sp, #12
 800859a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return VL53L1_ERROR_INVALID_PARAMS;
 800859c:	f06f 0003 	mvn.w	r0, #3
}
 80085a0:	4770      	bx	lr
 80085a2:	bf00      	nop
 80085a4:	20019798 	.word	0x20019798

080085a8 <VL53L1_ReadMulti>:

// the ranging_sensor_comms.dll will take care of the page selection
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 80085a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085ac:	460e      	mov	r6, r1
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    int32_t status_int;

    _I2CBuffer[0] = index>>8;
 80085ae:	4d15      	ldr	r5, [pc, #84]	; (8008604 <VL53L1_ReadMulti+0x5c>)
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 80085b0:	b082      	sub	sp, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 80085b2:	f04f 0e0c 	mov.w	lr, #12
    _I2CBuffer[0] = index>>8;
 80085b6:	ea4f 2c16 	mov.w	ip, r6, lsr #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 80085ba:	f890 1398 	ldrb.w	r1, [r0, #920]	; 0x398
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 80085be:	4604      	mov	r4, r0
 80085c0:	4690      	mov	r8, r2
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 80085c2:	f8d0 03a0 	ldr.w	r0, [r0, #928]	; 0x3a0
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 80085c6:	461f      	mov	r7, r3
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 80085c8:	f8cd e000 	str.w	lr, [sp]
 80085cc:	462a      	mov	r2, r5
 80085ce:	2302      	movs	r3, #2
    _I2CBuffer[0] = index>>8;
 80085d0:	f885 c000 	strb.w	ip, [r5]
    _I2CBuffer[1] = index&0xFF;
 80085d4:	706e      	strb	r6, [r5, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 80085d6:	f7f9 fb99 	bl	8001d0c <HAL_I2C_Master_Transmit>
    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, 2);
    if (status_int != 0) {
 80085da:	b980      	cbnz	r0, 80085fe <VL53L1_ReadMulti+0x56>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 80085dc:	f894 1398 	ldrb.w	r1, [r4, #920]	; 0x398
    int i2c_time_out = I2C_TIME_OUT_BASE+ count* I2C_TIME_OUT_BYTE;
 80085e0:	f107 030a 	add.w	r3, r7, #10
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 80085e4:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 80085e8:	4642      	mov	r2, r8
 80085ea:	9300      	str	r3, [sp, #0]
 80085ec:	f041 0101 	orr.w	r1, r1, #1
 80085f0:	b2bb      	uxth	r3, r7
 80085f2:	f7f9 fc5b 	bl	8001eac <HAL_I2C_Master_Receive>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
        goto done;
    }
    status_int = _I2CRead(Dev, pdata, count);
    if (status_int != 0) {
 80085f6:	b910      	cbnz	r0, 80085fe <VL53L1_ReadMulti+0x56>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
    }
done:
    VL53L1_PutI2cBus();
    return Status;
}
 80085f8:	b002      	add	sp, #8
 80085fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 80085fe:	f06f 000c 	mvn.w	r0, #12
 8008602:	e7f9      	b.n	80085f8 <VL53L1_ReadMulti+0x50>
 8008604:	20019798 	.word	0x20019798

08008608 <VL53L1_WrByte>:

VL53L1_Error VL53L1_WrByte(VL53L1_DEV Dev, uint16_t index, uint8_t data) {
 8008608:	b570      	push	{r4, r5, r6, lr}
 800860a:	460d      	mov	r5, r1
 800860c:	b082      	sub	sp, #8
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    int32_t status_int;

    _I2CBuffer[0] = index>>8;
 800860e:	4c0b      	ldr	r4, [pc, #44]	; (800863c <VL53L1_WrByte+0x34>)
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008610:	230d      	movs	r3, #13
    _I2CBuffer[0] = index>>8;
 8008612:	0a2e      	lsrs	r6, r5, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008614:	f890 1398 	ldrb.w	r1, [r0, #920]	; 0x398
    _I2CBuffer[1] = index&0xFF;
    _I2CBuffer[2] = data;
 8008618:	70a2      	strb	r2, [r4, #2]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 800861a:	4622      	mov	r2, r4
 800861c:	f8d0 03a0 	ldr.w	r0, [r0, #928]	; 0x3a0
 8008620:	9300      	str	r3, [sp, #0]
 8008622:	2303      	movs	r3, #3
    _I2CBuffer[0] = index>>8;
 8008624:	7026      	strb	r6, [r4, #0]
    _I2CBuffer[1] = index&0xFF;
 8008626:	7065      	strb	r5, [r4, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008628:	f7f9 fb70 	bl	8001d0c <HAL_I2C_Master_Transmit>

    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, 3);
    if (status_int != 0) {
 800862c:	2800      	cmp	r0, #0
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
    }
    VL53L1_PutI2cBus();
    return Status;
}
 800862e:	bf14      	ite	ne
 8008630:	f06f 000c 	mvnne.w	r0, #12
 8008634:	2000      	moveq	r0, #0
 8008636:	b002      	add	sp, #8
 8008638:	bd70      	pop	{r4, r5, r6, pc}
 800863a:	bf00      	nop
 800863c:	20019798 	.word	0x20019798

08008640 <VL53L1_RdWord>:
done:
    VL53L1_PutI2cBus();
    return Status;
}

VL53L1_Error VL53L1_RdWord(VL53L1_DEV Dev, uint16_t index, uint16_t *data) {
 8008640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008644:	460e      	mov	r6, r1
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    int32_t status_int;

    _I2CBuffer[0] = index>>8;
 8008646:	4c16      	ldr	r4, [pc, #88]	; (80086a0 <VL53L1_RdWord+0x60>)
VL53L1_Error VL53L1_RdWord(VL53L1_DEV Dev, uint16_t index, uint16_t *data) {
 8008648:	b082      	sub	sp, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 800864a:	f04f 080c 	mov.w	r8, #12
    _I2CBuffer[0] = index>>8;
 800864e:	0a33      	lsrs	r3, r6, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008650:	f890 1398 	ldrb.w	r1, [r0, #920]	; 0x398
VL53L1_Error VL53L1_RdWord(VL53L1_DEV Dev, uint16_t index, uint16_t *data) {
 8008654:	4605      	mov	r5, r0
 8008656:	4617      	mov	r7, r2
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008658:	f8d0 03a0 	ldr.w	r0, [r0, #928]	; 0x3a0
 800865c:	4622      	mov	r2, r4
    _I2CBuffer[0] = index>>8;
 800865e:	7023      	strb	r3, [r4, #0]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008660:	2302      	movs	r3, #2
 8008662:	f8cd 8000 	str.w	r8, [sp]
	_I2CBuffer[1] = index&0xFF;
 8008666:	7066      	strb	r6, [r4, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008668:	f7f9 fb50 	bl	8001d0c <HAL_I2C_Master_Transmit>
    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, 2);

    if( status_int ){
 800866c:	b9a0      	cbnz	r0, 8008698 <VL53L1_RdWord+0x58>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 800866e:	f895 1398 	ldrb.w	r1, [r5, #920]	; 0x398
 8008672:	2302      	movs	r3, #2
 8008674:	f8d5 03a0 	ldr.w	r0, [r5, #928]	; 0x3a0
 8008678:	4622      	mov	r2, r4
 800867a:	f8cd 8000 	str.w	r8, [sp]
 800867e:	f041 0101 	orr.w	r1, r1, #1
 8008682:	f7f9 fc13 	bl	8001eac <HAL_I2C_Master_Receive>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
        goto done;
    }
    status_int = _I2CRead(Dev, _I2CBuffer, 2);
    if (status_int != 0) {
 8008686:	b938      	cbnz	r0, 8008698 <VL53L1_RdWord+0x58>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
        goto done;
    }

    *data = ((uint16_t)_I2CBuffer[0]<<8) + (uint16_t)_I2CBuffer[1];
 8008688:	7822      	ldrb	r2, [r4, #0]
 800868a:	7863      	ldrb	r3, [r4, #1]
 800868c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8008690:	803b      	strh	r3, [r7, #0]
done:
    VL53L1_PutI2cBus();
    return Status;
}
 8008692:	b002      	add	sp, #8
 8008694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 8008698:	f06f 000c 	mvn.w	r0, #12
 800869c:	e7f9      	b.n	8008692 <VL53L1_RdWord+0x52>
 800869e:	bf00      	nop
 80086a0:	20019798 	.word	0x20019798

080086a4 <VL53L1_WaitUs>:
	(void)pdev;
	HAL_Delay(wait_ms);
    return VL53L1_ERROR_NONE;
}

VL53L1_Error VL53L1_WaitUs(VL53L1_Dev_t *pdev, int32_t wait_us){
 80086a4:	b508      	push	{r3, lr}
	(void)pdev;
	HAL_Delay(wait_us/1000);
 80086a6:	4b05      	ldr	r3, [pc, #20]	; (80086bc <VL53L1_WaitUs+0x18>)
 80086a8:	17c8      	asrs	r0, r1, #31
 80086aa:	fb83 3101 	smull	r3, r1, r3, r1
 80086ae:	ebc0 10a1 	rsb	r0, r0, r1, asr #6
 80086b2:	f7f8 fc0d 	bl	8000ed0 <HAL_Delay>
    return VL53L1_ERROR_NONE;
}
 80086b6:	2000      	movs	r0, #0
 80086b8:	bd08      	pop	{r3, pc}
 80086ba:	bf00      	nop
 80086bc:	10624dd3 	.word	0x10624dd3

080086c0 <VL53L1_WaitValueMaskEx>:
	uint32_t      timeout_ms,
	uint16_t      index,
	uint8_t       value,
	uint8_t       mask,
	uint32_t      poll_delay_ms)
{
 80086c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086c4:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
 80086c8:	460e      	mov	r6, r1

	VL53L1_Error status         = VL53L1_ERROR_NONE;
	uint32_t     start_time_ms = 0;
	uint32_t     current_time_ms = 0;
	uint32_t     polling_time_ms = 0;
	uint8_t      byte_value      = 0;
 80086ca:	2700      	movs	r7, #0
{
 80086cc:	4615      	mov	r5, r2
 80086ce:	4604      	mov	r4, r0
#ifdef PAL_EXTENDED
	VL53L1_get_register_name(
			index,
			register_name);
#else
	VL53L1_COPYSTRING(register_name, "");
 80086d0:	f240 12ff 	movw	r2, #511	; 0x1ff
 80086d4:	4944      	ldr	r1, [pc, #272]	; (80087e8 <VL53L1_WaitValueMaskEx+0x128>)
 80086d6:	a804      	add	r0, sp, #16
	uint8_t      byte_value      = 0;
 80086d8:	f88d 700f 	strb.w	r7, [sp, #15]
{
 80086dc:	4699      	mov	r9, r3
 80086de:	f89d 8238 	ldrb.w	r8, [sp, #568]	; 0x238
 80086e2:	9f8f      	ldr	r7, [sp, #572]	; 0x23c
	VL53L1_COPYSTRING(register_name, "");
 80086e4:	f012 fa0a 	bl	801aafc <strncpy>
	VL53L1_set_trace_functions(VL53L1_TRACE_FUNCTION_NONE);
#endif

	/* wait until value is found, timeout reached on error occurred */

	while ((status == VL53L1_ERROR_NONE) &&
 80086e8:	2e00      	cmp	r6, #0
 80086ea:	d064      	beq.n	80087b6 <VL53L1_WaitValueMaskEx+0xf6>
 80086ec:	ea4f 2a15 	mov.w	sl, r5, lsr #8
 80086f0:	4e3e      	ldr	r6, [pc, #248]	; (80087ec <VL53L1_WaitValueMaskEx+0x12c>)
 80086f2:	b2ed      	uxtb	r5, r5
 80086f4:	bbaf      	cbnz	r7, 8008762 <VL53L1_WaitValueMaskEx+0xa2>
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 80086f6:	f04f 0b0c 	mov.w	fp, #12
 80086fa:	4637      	mov	r7, r6
 80086fc:	e010      	b.n	8008720 <VL53L1_WaitValueMaskEx+0x60>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 80086fe:	f894 c398 	ldrb.w	ip, [r4, #920]	; 0x398
 8008702:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8008706:	9100      	str	r1, [sp, #0]
 8008708:	ea4c 0103 	orr.w	r1, ip, r3
 800870c:	f7f9 fbce 	bl	8001eac <HAL_I2C_Master_Receive>
    if (status_int != 0) {
 8008710:	2800      	cmp	r0, #0
 8008712:	d15b      	bne.n	80087cc <VL53L1_WaitValueMaskEx+0x10c>
			status = VL53L1_RdByte(
							pdev,
							index,
							&byte_value);

		if ((byte_value & mask) == value)
 8008714:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8008718:	ea08 0303 	and.w	r3, r8, r3
 800871c:	454b      	cmp	r3, r9
 800871e:	d01b      	beq.n	8008758 <VL53L1_WaitValueMaskEx+0x98>
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008720:	f894 1398 	ldrb.w	r1, [r4, #920]	; 0x398
 8008724:	2302      	movs	r3, #2
 8008726:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 800872a:	463a      	mov	r2, r7
 800872c:	f8cd b000 	str.w	fp, [sp]
	_I2CBuffer[0] = index>>8;
 8008730:	f886 a000 	strb.w	sl, [r6]
	_I2CBuffer[1] = index&0xFF;
 8008734:	7075      	strb	r5, [r6, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008736:	f7f9 fae9 	bl	8001d0c <HAL_I2C_Master_Transmit>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 800873a:	210b      	movs	r1, #11
 800873c:	2301      	movs	r3, #1
 800873e:	f10d 020f 	add.w	r2, sp, #15
    if( status_int ){
 8008742:	2800      	cmp	r0, #0
 8008744:	d0db      	beq.n	80086fe <VL53L1_WaitValueMaskEx+0x3e>
		if ((byte_value & mask) == value)
 8008746:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800874a:	ea08 0803 	and.w	r8, r8, r3
 800874e:	45c1      	cmp	r9, r8
 8008750:	d046      	beq.n	80087e0 <VL53L1_WaitValueMaskEx+0x120>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 8008752:	f06f 000c 	mvn.w	r0, #12
 8008756:	e000      	b.n	800875a <VL53L1_WaitValueMaskEx+0x9a>
	/* Restore function logging */
	VL53L1_set_trace_functions(trace_functions);
#endif

	if (found == 0 && status == VL53L1_ERROR_NONE)
		status = VL53L1_ERROR_TIME_OUT;
 8008758:	2000      	movs	r0, #0

	return status;
}
 800875a:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
 800875e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008762:	46b3      	mov	fp, r6
 8008764:	978f      	str	r7, [sp, #572]	; 0x23c
 8008766:	e012      	b.n	800878e <VL53L1_WaitValueMaskEx+0xce>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8008768:	f894 c398 	ldrb.w	ip, [r4, #920]	; 0x398
 800876c:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8008770:	9100      	str	r1, [sp, #0]
 8008772:	ea4c 0103 	orr.w	r1, ip, r3
 8008776:	f7f9 fb99 	bl	8001eac <HAL_I2C_Master_Receive>
    if (status_int != 0) {
 800877a:	bb38      	cbnz	r0, 80087cc <VL53L1_WaitValueMaskEx+0x10c>
		if ((byte_value & mask) == value)
 800877c:	f89d 300f 	ldrb.w	r3, [sp, #15]
	HAL_Delay(wait_ms);
 8008780:	988f      	ldr	r0, [sp, #572]	; 0x23c
		if ((byte_value & mask) == value)
 8008782:	ea08 0303 	and.w	r3, r8, r3
 8008786:	4599      	cmp	r9, r3
 8008788:	d0e6      	beq.n	8008758 <VL53L1_WaitValueMaskEx+0x98>
	HAL_Delay(wait_ms);
 800878a:	f7f8 fba1 	bl	8000ed0 <HAL_Delay>
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 800878e:	270c      	movs	r7, #12
 8008790:	f894 1398 	ldrb.w	r1, [r4, #920]	; 0x398
 8008794:	2302      	movs	r3, #2
 8008796:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 800879a:	465a      	mov	r2, fp
 800879c:	9700      	str	r7, [sp, #0]
	_I2CBuffer[0] = index>>8;
 800879e:	f886 a000 	strb.w	sl, [r6]
	_I2CBuffer[1] = index&0xFF;
 80087a2:	7075      	strb	r5, [r6, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 80087a4:	f7f9 fab2 	bl	8001d0c <HAL_I2C_Master_Transmit>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 80087a8:	210b      	movs	r1, #11
 80087aa:	2301      	movs	r3, #1
 80087ac:	f10d 020f 	add.w	r2, sp, #15
    if( status_int ){
 80087b0:	2800      	cmp	r0, #0
 80087b2:	d0d9      	beq.n	8008768 <VL53L1_WaitValueMaskEx+0xa8>
 80087b4:	e7c7      	b.n	8008746 <VL53L1_WaitValueMaskEx+0x86>
	VL53L1_Error status         = VL53L1_ERROR_NONE;
 80087b6:	4630      	mov	r0, r6
	if (found == 0 && status == VL53L1_ERROR_NONE)
 80087b8:	4306      	orrs	r6, r0
 80087ba:	b2f6      	uxtb	r6, r6
		status = VL53L1_ERROR_TIME_OUT;
 80087bc:	2e00      	cmp	r6, #0
 80087be:	bf08      	it	eq
 80087c0:	f06f 0006 	mvneq.w	r0, #6
}
 80087c4:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
 80087c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if ((byte_value & mask) == value)
 80087cc:	f89d 300f 	ldrb.w	r3, [sp, #15]
 80087d0:	ea08 0803 	and.w	r8, r8, r3
 80087d4:	45c1      	cmp	r9, r8
 80087d6:	d0bc      	beq.n	8008752 <VL53L1_WaitValueMaskEx+0x92>
 80087d8:	2600      	movs	r6, #0
 80087da:	f06f 000c 	mvn.w	r0, #12
 80087de:	e7eb      	b.n	80087b8 <VL53L1_WaitValueMaskEx+0xf8>
			found = 1;
 80087e0:	2601      	movs	r6, #1
		if ((byte_value & mask) == value)
 80087e2:	f06f 000c 	mvn.w	r0, #12
 80087e6:	e7e7      	b.n	80087b8 <VL53L1_WaitValueMaskEx+0xf8>
 80087e8:	0801b584 	.word	0x0801b584
 80087ec:	20019798 	.word	0x20019798

080087f0 <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 80087f0:	b508      	push	{r3, lr}
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 80087f2:	4805      	ldr	r0, [pc, #20]	; (8008808 <GUI_X_Config+0x18>)
 80087f4:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
 80087f8:	f00a fc98 	bl	801312c <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 80087fc:	4803      	ldr	r0, [pc, #12]	; (800880c <GUI_X_Config+0x1c>)
}
 80087fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  GUI_SetDefaultFont(GUI_FONT_6X8);
 8008802:	f00a b805 	b.w	8012810 <GUI_SetDefaultFont>
 8008806:	bf00      	nop
 8008808:	20000420 	.word	0x20000420
 800880c:	0801b6cc 	.word	0x0801b6cc

08008810 <GUI_X_GetTime>:
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
  return OS_TimeMS; 
 8008810:	4b01      	ldr	r3, [pc, #4]	; (8008818 <GUI_X_GetTime+0x8>)
 8008812:	6818      	ldr	r0, [r3, #0]
}
 8008814:	4770      	bx	lr
 8008816:	bf00      	nop
 8008818:	20019898 	.word	0x20019898

0800881c <GUI_X_Delay>:

void GUI_X_Delay(int ms) { 
  int tEnd = OS_TimeMS + ms;
 800881c:	4a03      	ldr	r2, [pc, #12]	; (800882c <GUI_X_Delay+0x10>)
 800881e:	6813      	ldr	r3, [r2, #0]
 8008820:	4418      	add	r0, r3
  while ((tEnd - OS_TimeMS) > 0);
 8008822:	6813      	ldr	r3, [r2, #0]
 8008824:	1ac3      	subs	r3, r0, r3
 8008826:	2b00      	cmp	r3, #0
 8008828:	dcfb      	bgt.n	8008822 <GUI_X_Delay+0x6>
}
 800882a:	4770      	bx	lr
 800882c:	20019898 	.word	0x20019898

08008830 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8008830:	4770      	bx	lr
 8008832:	bf00      	nop

08008834 <GUI_TOUCH_X_ActivateX>:



void GUI_TOUCH_X_ActivateX(void)
{
}
 8008834:	4770      	bx	lr
 8008836:	bf00      	nop

08008838 <GUI_TOUCH_X_ActivateY>:
 8008838:	4770      	bx	lr
 800883a:	bf00      	nop

0800883c <GUI_TOUCH_X_MeasureX>:
void GUI_TOUCH_X_ActivateY(void)
{
}
int  GUI_TOUCH_X_MeasureX(void)
{
 800883c:	b508      	push	{r3, lr}
  return STMPE610_GetX_TOUCH_RAW();
 800883e:	f7fc fb5d 	bl	8004efc <STMPE610_GetX_TOUCH_RAW>
}
 8008842:	bd08      	pop	{r3, pc}

08008844 <GUI_TOUCH_X_MeasureY>:
int  GUI_TOUCH_X_MeasureY(void)
{
 8008844:	b508      	push	{r3, lr}
  return STMPE610_GetY_TOUCH_RAW();
 8008846:	f7fc fb5f 	bl	8004f08 <STMPE610_GetY_TOUCH_RAW>
}
 800884a:	bd08      	pop	{r3, pc}

0800884c <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 800884c:	b5f0      	push	{r4, r5, r6, r7, lr}
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 800884e:	2400      	movs	r4, #0
void LCD_X_Config(void) {
 8008850:	b0a3      	sub	sp, #140	; 0x8c
  GUI_PORT_API PortAPI = {0};
 8008852:	2268      	movs	r2, #104	; 0x68
  GUIDRV_FlexColor_Config(pDevice, &Config);
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = SSD1963_WriteCommand;
  PortAPI.pfWrite16_A1  = SSD1963_WriteData;
 8008854:	4f23      	ldr	r7, [pc, #140]	; (80088e4 <LCD_X_Config+0x98>)
  GUI_PORT_API PortAPI = {0};
 8008856:	4621      	mov	r1, r4
 8008858:	a808      	add	r0, sp, #32
  CONFIG_FLEXCOLOR Config = {0};
 800885a:	9407      	str	r4, [sp, #28]
  PortAPI.pfWriteM16_A1 = SSD1963_WriteDataMultiple;
 800885c:	4e22      	ldr	r6, [pc, #136]	; (80088e8 <LCD_X_Config+0x9c>)
  CONFIG_FLEXCOLOR Config = {0};
 800885e:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8008862:	e9cd 4405 	strd	r4, r4, [sp, #20]
  GUI_PORT_API PortAPI = {0};
 8008866:	f012 f918 	bl	801aa9a <memset>
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
 800886a:	4623      	mov	r3, r4
 800886c:	4622      	mov	r2, r4
 800886e:	491f      	ldr	r1, [pc, #124]	; (80088ec <LCD_X_Config+0xa0>)
 8008870:	481f      	ldr	r0, [pc, #124]	; (80088f0 <LCD_X_Config+0xa4>)
 8008872:	f009 ff63 	bl	801273c <GUI_DEVICE_CreateAndLink>
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8008876:	f44f 7288 	mov.w	r2, #272	; 0x110
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
 800887a:	4605      	mov	r5, r0
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 800887c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8008880:	4620      	mov	r0, r4
 8008882:	f007 fb9f 	bl	800ffc4 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, XSIZE_PHYS, YSIZE_PHYS);
 8008886:	f44f 7288 	mov.w	r2, #272	; 0x110
 800888a:	4620      	mov	r0, r4
 800888c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8008890:	f007 fb80 	bl	800ff94 <LCD_SetVSizeEx>
  GUIDRV_FlexColor_Config(pDevice, &Config);
 8008894:	a903      	add	r1, sp, #12
 8008896:	4628      	mov	r0, r5
  Config.Orientation = 0;
 8008898:	9405      	str	r4, [sp, #20]
  GUIDRV_FlexColor_Config(pDevice, &Config);
 800889a:	f007 fb1a 	bl	800fed2 <GUIDRV_FlexColor_Config>
  PortAPI.pfWrite16_A0  = SSD1963_WriteCommand;
 800889e:	f8df c05c 	ldr.w	ip, [pc, #92]	; 80088fc <LCD_X_Config+0xb0>
 // PortAPI.pfReadM16_A1  = SSD1963_ReadData;
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66720, GUIDRV_FLEXCOLOR_M16C0B16);
 80088a2:	a908      	add	r1, sp, #32
 80088a4:	4628      	mov	r0, r5
 80088a6:	4b13      	ldr	r3, [pc, #76]	; (80088f4 <LCD_X_Config+0xa8>)
 80088a8:	4a13      	ldr	r2, [pc, #76]	; (80088f8 <LCD_X_Config+0xac>)
  PortAPI.pfWriteM16_A1 = SSD1963_WriteDataMultiple;
 80088aa:	9613      	str	r6, [sp, #76]	; 0x4c
  PortAPI.pfWrite16_A1  = SSD1963_WriteData;
 80088ac:	e9cd c710 	strd	ip, r7, [sp, #64]	; 0x40
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66720, GUIDRV_FLEXCOLOR_M16C0B16);
 80088b0:	f007 fb2d 	bl	800ff0e <GUIDRV_FlexColor_SetFunc>

  GUI_TOUCH_Calibrate(GUI_COORD_X, 0, 480, GUI_TOUCH_AD_LEFT , GUI_TOUCH_AD_RIGHT);
 80088b4:	f640 7274 	movw	r2, #3956	; 0xf74
 80088b8:	4621      	mov	r1, r4
 80088ba:	4620      	mov	r0, r4
 80088bc:	9200      	str	r2, [sp, #0]
 80088be:	2392      	movs	r3, #146	; 0x92
 80088c0:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80088c4:	f008 fe2c 	bl	8011520 <GUI_TOUCH_Calibrate>
  GUI_TOUCH_Calibrate(GUI_COORD_Y, 0, 272, GUI_TOUCH_AD_TOP, GUI_TOUCH_AD_BOTTOM);
 80088c8:	f640 7203 	movw	r2, #3843	; 0xf03
 80088cc:	4621      	mov	r1, r4
 80088ce:	f44f 7387 	mov.w	r3, #270	; 0x10e
 80088d2:	9200      	str	r2, [sp, #0]
 80088d4:	f44f 7288 	mov.w	r2, #272	; 0x110
 80088d8:	2001      	movs	r0, #1
 80088da:	f008 fe21 	bl	8011520 <GUI_TOUCH_Calibrate>

}
 80088de:	b023      	add	sp, #140	; 0x8c
 80088e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80088e2:	bf00      	nop
 80088e4:	0800424d 	.word	0x0800424d
 80088e8:	080042a1 	.word	0x080042a1
 80088ec:	08020fd0 	.word	0x08020fd0
 80088f0:	08020e80 	.word	0x08020e80
 80088f4:	0800f8d9 	.word	0x0800f8d9
 80088f8:	0800f23d 	.word	0x0800f23d
 80088fc:	080041f9 	.word	0x080041f9

08008900 <LCD_X_DisplayDriver>:
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 8008900:	2901      	cmp	r1, #1
 8008902:	d106      	bne.n	8008912 <LCD_X_DisplayDriver+0x12>
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 8008904:	b508      	push	{r3, lr}
    // display controller and put it into operation. If the display
    // controller is not initialized by any external routine this needs
    // to be adapted by the customer...
    //
    // ...
	  SSD1963_Init();
 8008906:	f7fb fd07 	bl	8004318 <SSD1963_Init>
	  STMPE610_Init();
 800890a:	f7fc f87b 	bl	8004a04 <STMPE610_Init>
    return 0;
 800890e:	2000      	movs	r0, #0
  }
  default:
    r = -1;
  }
  return r;
}
 8008910:	bd08      	pop	{r3, pc}
  return r;
 8008912:	f04f 30ff 	mov.w	r0, #4294967295
}
 8008916:	4770      	bx	lr

08008918 <HAL_SYSTICK_Callback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_SYSTICK_Callback(void)
{
	OS_TimeMS++;
 8008918:	4a02      	ldr	r2, [pc, #8]	; (8008924 <HAL_SYSTICK_Callback+0xc>)
 800891a:	6813      	ldr	r3, [r2, #0]
 800891c:	3301      	adds	r3, #1
 800891e:	6013      	str	r3, [r2, #0]
}
 8008920:	4770      	bx	lr
 8008922:	bf00      	nop
 8008924:	20019898 	.word	0x20019898

08008928 <HAL_ADC_ConvCpltCallback>:


void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)  //ova fja se pozove kad se izvrsi jedna konverzija
{
	if(hadc->Instance == ADC3)
 8008928:	6802      	ldr	r2, [r0, #0]
 800892a:	4b05      	ldr	r3, [pc, #20]	; (8008940 <HAL_ADC_ConvCpltCallback+0x18>)
 800892c:	429a      	cmp	r2, r3
 800892e:	d106      	bne.n	800893e <HAL_ADC_ConvCpltCallback+0x16>
	{
		//CDC_Transmit_FS((uint8_t *)probni,strlen((const char *)probni));
		pin_dioda_sirovo = ADC_BUF[1];
 8008930:	4b04      	ldr	r3, [pc, #16]	; (8008944 <HAL_ADC_ConvCpltCallback+0x1c>)
 8008932:	4905      	ldr	r1, [pc, #20]	; (8008948 <HAL_ADC_ConvCpltCallback+0x20>)
		temperatura_ADC_sirovo = ADC_BUF[0];
 8008934:	e9d3 2000 	ldrd	r2, r0, [r3]
 8008938:	4b04      	ldr	r3, [pc, #16]	; (800894c <HAL_ADC_ConvCpltCallback+0x24>)
		pin_dioda_sirovo = ADC_BUF[1];
 800893a:	6008      	str	r0, [r1, #0]
		temperatura_ADC_sirovo = ADC_BUF[0];
 800893c:	601a      	str	r2, [r3, #0]
	}
}
 800893e:	4770      	bx	lr
 8008940:	40012200 	.word	0x40012200
 8008944:	20019bec 	.word	0x20019bec
 8008948:	20019a68 	.word	0x20019a68
 800894c:	20019be4 	.word	0x20019be4

08008950 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8008950:	b570      	push	{r4, r5, r6, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8008952:	2400      	movs	r4, #0
{
 8008954:	b0b4      	sub	sp, #208	; 0xd0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8008956:	2230      	movs	r2, #48	; 0x30
  */
  __HAL_RCC_PWR_CLK_ENABLE();
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 8008958:	2609      	movs	r6, #9
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800895a:	4621      	mov	r1, r4
 800895c:	a807      	add	r0, sp, #28
 800895e:	f012 f89c 	bl	801aa9a <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8008962:	4621      	mov	r1, r4
 8008964:	2284      	movs	r2, #132	; 0x84
 8008966:	a813      	add	r0, sp, #76	; 0x4c
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8008968:	9406      	str	r4, [sp, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800896a:	2502      	movs	r5, #2
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800896c:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8008970:	e9cd 4404 	strd	r4, r4, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8008974:	f012 f891 	bl	801aa9a <memset>
  HAL_PWR_EnableBkUpAccess();
 8008978:	f7f9 fc24 	bl	80021c4 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_PWR_CLK_ENABLE();
 800897c:	4a23      	ldr	r2, [pc, #140]	; (8008a0c <SystemClock_Config+0xbc>)
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800897e:	4b24      	ldr	r3, [pc, #144]	; (8008a10 <SystemClock_Config+0xc0>)
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = 25;
  RCC_OscInitStruct.PLL.PLLN = 384;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 8;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8008980:	a807      	add	r0, sp, #28
  __HAL_RCC_PWR_CLK_ENABLE();
 8008982:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8008984:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8008988:	6411      	str	r1, [r2, #64]	; 0x40
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800898a:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  __HAL_RCC_PWR_CLK_ENABLE();
 800898e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8008990:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8008994:	9200      	str	r2, [sp, #0]
 8008996:	9a00      	ldr	r2, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8008998:	681a      	ldr	r2, [r3, #0]
 800899a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800899e:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 80089a0:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80089a2:	681b      	ldr	r3, [r3, #0]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 80089a4:	9607      	str	r6, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80089a6:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80089aa:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80089ae:	9108      	str	r1, [sp, #32]
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 80089b0:	920c      	str	r2, [sp, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLM = 25;
 80089b2:	2119      	movs	r1, #25
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80089b4:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.PLL.PLLN = 384;
 80089b6:	f44f 72c0 	mov.w	r2, #384	; 0x180
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80089ba:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.PLL.PLLQ = 8;
 80089bc:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLN = 384;
 80089be:	9210      	str	r2, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLQ = 8;
 80089c0:	9312      	str	r3, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80089c2:	950d      	str	r5, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80089c4:	9511      	str	r5, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLM = 25;
 80089c6:	e9cd 610e 	strd	r6, r1, [sp, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80089ca:	f7f9 fc3f 	bl	800224c <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80089ce:	260f      	movs	r6, #15
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80089d0:	f7f9 fc00 	bl	80021d4 <HAL_PWREx_EnableOverDrive>
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80089d4:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80089d8:	f44f 5380 	mov.w	r3, #4096	; 0x1000

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 80089dc:	2106      	movs	r1, #6
 80089de:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80089e0:	9602      	str	r6, [sp, #8]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80089e2:	e9cd 2305 	strd	r2, r3, [sp, #20]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80089e6:	e9cd 5403 	strd	r5, r4, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 80089ea:	f7f9 fe29 	bl	8002640 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_UART8
 80089ee:	f24e 0220 	movw	r2, #57376	; 0xe020
                              |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C2;
  PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 80089f2:	f44f 7300 	mov.w	r3, #512	; 0x200
  PeriphClkInitStruct.Uart8ClockSelection = RCC_UART8CLKSOURCE_PCLK1;
  PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
  PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80089f6:	a813      	add	r0, sp, #76	; 0x4c
  PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 80089f8:	942d      	str	r4, [sp, #180]	; 0xb4
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_UART8
 80089fa:	9213      	str	r2, [sp, #76]	; 0x4c
  PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 80089fc:	931f      	str	r3, [sp, #124]	; 0x7c
  PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 80089fe:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8008a02:	f7f9 ff3d 	bl	8002880 <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 8008a06:	b034      	add	sp, #208	; 0xd0
 8008a08:	bd70      	pop	{r4, r5, r6, pc}
 8008a0a:	bf00      	nop
 8008a0c:	40023800 	.word	0x40023800
 8008a10:	40007000 	.word	0x40007000

08008a14 <main>:
{
 8008a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008a18:	2500      	movs	r5, #0
{
 8008a1a:	f2ad 4d34 	subw	sp, sp, #1076	; 0x434

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8008a1e:	4ecb      	ldr	r6, [pc, #812]	; (8008d4c <main+0x338>)
  HAL_Init();
 8008a20:	f7f8 fa38 	bl	8000e94 <HAL_Init>
  SystemClock_Config();
 8008a24:	f7ff ff94 	bl	8008950 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008a28:	9526      	str	r5, [sp, #152]	; 0x98
  hadc3.Init.NbrOfConversion = 2;
 8008a2a:	f04f 0b02 	mov.w	fp, #2
  __HAL_RCC_GPIOG_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();
  __HAL_RCC_GPIOE_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_15, GPIO_PIN_RESET);
 8008a2e:	462a      	mov	r2, r5
 8008a30:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8008a34:	48c6      	ldr	r0, [pc, #792]	; (8008d50 <main+0x33c>)
  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);

  /*Configure GPIO pin : PG15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8008a36:	f04f 0801 	mov.w	r8, #1
  hadc3.Instance = ADC3;
 8008a3a:	4fc6      	ldr	r7, [pc, #792]	; (8008d54 <main+0x340>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8008a3c:	f04f 0a07 	mov.w	sl, #7
  htim3.Instance = TIM3;
 8008a40:	f8df 934c 	ldr.w	r9, [pc, #844]	; 8008d90 <main+0x37c>
	 GUI_SetColor(GUI_BLACK);
 8008a44:	462c      	mov	r4, r5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008a46:	e9cd 5522 	strd	r5, r5, [sp, #136]	; 0x88
 8008a4a:	e9cd 5524 	strd	r5, r5, [sp, #144]	; 0x90
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8008a4e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008a50:	f043 0304 	orr.w	r3, r3, #4
 8008a54:	6333      	str	r3, [r6, #48]	; 0x30
 8008a56:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008a58:	f003 0304 	and.w	r3, r3, #4
 8008a5c:	9312      	str	r3, [sp, #72]	; 0x48
 8008a5e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8008a60:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008a62:	f043 0320 	orr.w	r3, r3, #32
 8008a66:	6333      	str	r3, [r6, #48]	; 0x30
 8008a68:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008a6a:	f003 0320 	and.w	r3, r3, #32
 8008a6e:	9313      	str	r3, [sp, #76]	; 0x4c
 8008a70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8008a72:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008a74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008a78:	6333      	str	r3, [r6, #48]	; 0x30
 8008a7a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008a7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008a80:	9314      	str	r3, [sp, #80]	; 0x50
 8008a82:	9b14      	ldr	r3, [sp, #80]	; 0x50
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8008a84:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008a86:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008a8a:	6333      	str	r3, [r6, #48]	; 0x30
 8008a8c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008a8e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008a92:	9315      	str	r3, [sp, #84]	; 0x54
 8008a94:	9b15      	ldr	r3, [sp, #84]	; 0x54
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8008a96:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008a98:	ea43 030b 	orr.w	r3, r3, fp
 8008a9c:	6333      	str	r3, [r6, #48]	; 0x30
 8008a9e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008aa0:	ea03 030b 	and.w	r3, r3, fp
 8008aa4:	9316      	str	r3, [sp, #88]	; 0x58
 8008aa6:	9b16      	ldr	r3, [sp, #88]	; 0x58
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8008aa8:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008aaa:	f043 0310 	orr.w	r3, r3, #16
 8008aae:	6333      	str	r3, [r6, #48]	; 0x30
 8008ab0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008ab2:	f003 0310 	and.w	r3, r3, #16
 8008ab6:	9317      	str	r3, [sp, #92]	; 0x5c
 8008ab8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_15, GPIO_PIN_RESET);
 8008aba:	f7f9 f81d 	bl	8001af8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 8008abe:	462a      	mov	r2, r5
 8008ac0:	2108      	movs	r1, #8
 8008ac2:	48a5      	ldr	r0, [pc, #660]	; (8008d58 <main+0x344>)
 8008ac4:	f7f9 f818 	bl	8001af8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8008ac8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8008acc:	a922      	add	r1, sp, #136	; 0x88
 8008ace:	48a0      	ldr	r0, [pc, #640]	; (8008d50 <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8008ad0:	e9cd 3822 	strd	r3, r8, [sp, #136]	; 0x88
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8008ad4:	e9cd 5524 	strd	r5, r5, [sp, #144]	; 0x90
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8008ad8:	f7f8 ff08 	bl	80018ec <HAL_GPIO_Init>

  /*Configure GPIO pin : PB3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8008adc:	2308      	movs	r3, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8008ade:	a922      	add	r1, sp, #136	; 0x88
 8008ae0:	489d      	ldr	r0, [pc, #628]	; (8008d58 <main+0x344>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8008ae2:	9525      	str	r5, [sp, #148]	; 0x94
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8008ae4:	9322      	str	r3, [sp, #136]	; 0x88
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008ae6:	e9cd 8523 	strd	r8, r5, [sp, #140]	; 0x8c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8008aea:	f7f8 feff 	bl	80018ec <HAL_GPIO_Init>
  __HAL_RCC_DMA2_CLK_ENABLE();
 8008aee:	6b33      	ldr	r3, [r6, #48]	; 0x30
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8008af0:	462a      	mov	r2, r5
 8008af2:	4629      	mov	r1, r5
  __HAL_RCC_DMA2_CLK_ENABLE();
 8008af4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8008af8:	200b      	movs	r0, #11
  __HAL_RCC_DMA2_CLK_ENABLE();
 8008afa:	6333      	str	r3, [r6, #48]	; 0x30
 8008afc:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008afe:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008b02:	9310      	str	r3, [sp, #64]	; 0x40
 8008b04:	9b10      	ldr	r3, [sp, #64]	; 0x40
  __HAL_RCC_DMA1_CLK_ENABLE();
 8008b06:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8008b08:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8008b0c:	6333      	str	r3, [r6, #48]	; 0x30
 8008b0e:	6b33      	ldr	r3, [r6, #48]	; 0x30
  hi2c1.Instance = I2C1;
 8008b10:	4e92      	ldr	r6, [pc, #584]	; (8008d5c <main+0x348>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 8008b12:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8008b16:	9311      	str	r3, [sp, #68]	; 0x44
 8008b18:	9b11      	ldr	r3, [sp, #68]	; 0x44
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8008b1a:	f7f8 fc73 	bl	8001404 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8008b1e:	200b      	movs	r0, #11
 8008b20:	f7f8 fca6 	bl	8001470 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 8008b24:	462a      	mov	r2, r5
 8008b26:	4629      	mov	r1, r5
 8008b28:	2011      	movs	r0, #17
 8008b2a:	f7f8 fc6b 	bl	8001404 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 8008b2e:	2011      	movs	r0, #17
 8008b30:	f7f8 fc9e 	bl	8001470 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 8008b34:	462a      	mov	r2, r5
 8008b36:	4629      	mov	r1, r5
 8008b38:	2038      	movs	r0, #56	; 0x38
 8008b3a:	f7f8 fc63 	bl	8001404 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8008b3e:	2038      	movs	r0, #56	; 0x38
 8008b40:	f7f8 fc96 	bl	8001470 <HAL_NVIC_EnableIRQ>
  hi2c1.Instance = I2C1;
 8008b44:	4b86      	ldr	r3, [pc, #536]	; (8008d60 <main+0x34c>)
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8008b46:	4630      	mov	r0, r6
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8008b48:	6235      	str	r5, [r6, #32]
  hi2c1.Instance = I2C1;
 8008b4a:	6033      	str	r3, [r6, #0]
  hi2c1.Init.Timing = 0x20303E5D;
 8008b4c:	4b85      	ldr	r3, [pc, #532]	; (8008d64 <main+0x350>)
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8008b4e:	e9c6 5802 	strd	r5, r8, [r6, #8]
  hi2c1.Init.Timing = 0x20303E5D;
 8008b52:	6073      	str	r3, [r6, #4]
  hi2c1.Init.OwnAddress2 = 0;
 8008b54:	e9c6 5504 	strd	r5, r5, [r6, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8008b58:	e9c6 5506 	strd	r5, r5, [r6, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8008b5c:	f7f9 f882 	bl	8001c64 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8008b60:	4629      	mov	r1, r5
 8008b62:	4630      	mov	r0, r6
 8008b64:	f7f9 fada 	bl	800211c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8008b68:	4629      	mov	r1, r5
 8008b6a:	4630      	mov	r0, r6
 8008b6c:	f7f9 fb00 	bl	8002170 <HAL_I2CEx_ConfigDigitalFilter>
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8008b70:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  hadc3.Instance = ADC3;
 8008b74:	497c      	ldr	r1, [pc, #496]	; (8008d68 <main+0x354>)
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8008b76:	4638      	mov	r0, r7
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8008b78:	4b7c      	ldr	r3, [pc, #496]	; (8008d6c <main+0x358>)
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8008b7a:	607a      	str	r2, [r7, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8008b7c:	60bd      	str	r5, [r7, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8008b7e:	f8c7 8010 	str.w	r8, [r7, #16]
  hadc3.Init.ContinuousConvMode = ENABLE;
 8008b82:	f8c7 8018 	str.w	r8, [r7, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8008b86:	f887 5020 	strb.w	r5, [r7, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8008b8a:	62fd      	str	r5, [r7, #44]	; 0x2c
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8008b8c:	60fd      	str	r5, [r7, #12]
  hadc3.Init.DMAContinuousRequests = ENABLE;
 8008b8e:	f887 8030 	strb.w	r8, [r7, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 8008b92:	617d      	str	r5, [r7, #20]
  hadc3.Instance = ADC3;
 8008b94:	6039      	str	r1, [r7, #0]
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8008b96:	62bb      	str	r3, [r7, #40]	; 0x28
  hadc3.Init.NbrOfConversion = 2;
 8008b98:	f8c7 b01c 	str.w	fp, [r7, #28]
  ADC_ChannelConfTypeDef sConfig = {0};
 8008b9c:	e9cd 5522 	strd	r5, r5, [sp, #136]	; 0x88
 8008ba0:	e9cd 5524 	strd	r5, r5, [sp, #144]	; 0x90
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8008ba4:	f7f8 f9a6 	bl	8000ef4 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_6;
 8008ba8:	2306      	movs	r3, #6
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8008baa:	a922      	add	r1, sp, #136	; 0x88
 8008bac:	4638      	mov	r0, r7
  sConfig.Channel = ADC_CHANNEL_6;
 8008bae:	9322      	str	r3, [sp, #136]	; 0x88
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8008bb0:	f8cd 808c 	str.w	r8, [sp, #140]	; 0x8c
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8008bb4:	f8cd a090 	str.w	sl, [sp, #144]	; 0x90
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8008bb8:	f7f8 fb50 	bl	800125c <HAL_ADC_ConfigChannel>
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8008bbc:	a922      	add	r1, sp, #136	; 0x88
 8008bbe:	4638      	mov	r0, r7
  sConfig.Rank = ADC_REGULAR_RANK_2;
 8008bc0:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8008bc4:	f04f 0b00 	mov.w	fp, #0
  sConfig.Channel = ADC_CHANNEL_7;
 8008bc8:	f8cd a088 	str.w	sl, [sp, #136]	; 0x88
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8008bcc:	f7f8 fb46 	bl	800125c <HAL_ADC_ConfigChannel>
  htim3.Instance = TIM3;
 8008bd0:	4b67      	ldr	r3, [pc, #412]	; (8008d70 <main+0x35c>)
  htim3.Init.Prescaler = 25;
 8008bd2:	2119      	movs	r1, #25
  htim3.Init.Period = 1920;
 8008bd4:	f44f 62f0 	mov.w	r2, #1920	; 0x780
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8008bd8:	4648      	mov	r0, r9
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8008bda:	f8c9 5008 	str.w	r5, [r9, #8]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8008bde:	f8c9 5010 	str.w	r5, [r9, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8008be2:	f8c9 5018 	str.w	r5, [r9, #24]
  htim3.Init.Period = 1920;
 8008be6:	f8c9 200c 	str.w	r2, [r9, #12]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8008bea:	9528      	str	r5, [sp, #160]	; 0xa0
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8008bec:	951a      	str	r5, [sp, #104]	; 0x68
  hrtc.Instance = RTC;
 8008bee:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 8008d94 <main+0x380>
  htim3.Init.Prescaler = 25;
 8008bf2:	e9c9 3100 	strd	r3, r1, [r9]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8008bf6:	e9cd 5522 	strd	r5, r5, [sp, #136]	; 0x88
 8008bfa:	e9cd 5524 	strd	r5, r5, [sp, #144]	; 0x90
 8008bfe:	e9cd 5526 	strd	r5, r5, [sp, #152]	; 0x98
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8008c02:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
 8008c06:	e9cd 551d 	strd	r5, r5, [sp, #116]	; 0x74
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8008c0a:	e9cd 5518 	strd	r5, r5, [sp, #96]	; 0x60
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8008c0e:	f7fa fa87 	bl	8003120 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8008c12:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8008c16:	a91b      	add	r1, sp, #108	; 0x6c
 8008c18:	4648      	mov	r0, r9
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8008c1a:	921b      	str	r2, [sp, #108]	; 0x6c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8008c1c:	f7fa fdfa 	bl	8003814 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8008c20:	4648      	mov	r0, r9
 8008c22:	f7fa fb19 	bl	8003258 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8008c26:	a918      	add	r1, sp, #96	; 0x60
 8008c28:	4648      	mov	r0, r9
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8008c2a:	9518      	str	r5, [sp, #96]	; 0x60
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8008c2c:	951a      	str	r5, [sp, #104]	; 0x68
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8008c2e:	f7fa fe99 	bl	8003964 <HAL_TIMEx_MasterConfigSynchronization>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8008c32:	2360      	movs	r3, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8008c34:	462a      	mov	r2, r5
 8008c36:	a922      	add	r1, sp, #136	; 0x88
 8008c38:	4648      	mov	r0, r9
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8008c3a:	9322      	str	r3, [sp, #136]	; 0x88
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8008c3c:	9526      	str	r5, [sp, #152]	; 0x98
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8008c3e:	e9cd 5523 	strd	r5, r5, [sp, #140]	; 0x8c
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8008c42:	f7fa fc43 	bl	80034cc <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim3);
 8008c46:	4648      	mov	r0, r9
 8008c48:	f000 f9f0 	bl	800902c <HAL_TIM_MspPostInit>
  huart8.Instance = UART8;
 8008c4c:	4a49      	ldr	r2, [pc, #292]	; (8008d74 <main+0x360>)
 8008c4e:	f8df e148 	ldr.w	lr, [pc, #328]	; 8008d98 <main+0x384>
  huart8.Init.BaudRate = 115200;
 8008c52:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  huart8.Init.Mode = UART_MODE_TX_RX;
 8008c56:	210c      	movs	r1, #12
  if (HAL_UART_Init(&huart8) != HAL_OK)
 8008c58:	4610      	mov	r0, r2
  huart8.Init.Parity = UART_PARITY_NONE;
 8008c5a:	6115      	str	r5, [r2, #16]
  huart8.Init.Mode = UART_MODE_TX_RX;
 8008c5c:	6151      	str	r1, [r2, #20]
  huart8.Init.BaudRate = 115200;
 8008c5e:	e9c2 e300 	strd	lr, r3, [r2]
  huart8.Init.StopBits = UART_STOPBITS_1;
 8008c62:	e9c2 5502 	strd	r5, r5, [r2, #8]
  huart8.Init.OverSampling = UART_OVERSAMPLING_16;
 8008c66:	e9c2 5506 	strd	r5, r5, [r2, #24]
  huart8.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8008c6a:	e9c2 5508 	strd	r5, r5, [r2, #32]
  if (HAL_UART_Init(&huart8) != HAL_OK)
 8008c6e:	f7fb f871 	bl	8003d54 <HAL_UART_Init>
  hrtc.Instance = RTC;
 8008c72:	4b41      	ldr	r3, [pc, #260]	; (8008d78 <main+0x364>)
  hrtc.Init.AsynchPrediv = 127;
 8008c74:	217f      	movs	r1, #127	; 0x7f
  hrtc.Init.SynchPrediv = 255;
 8008c76:	22ff      	movs	r2, #255	; 0xff
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8008c78:	4650      	mov	r0, sl
  hrtc.Instance = RTC;
 8008c7a:	f8ca 3000 	str.w	r3, [sl]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8008c7e:	f8ca 5004 	str.w	r5, [sl, #4]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8008c82:	f8ca 5018 	str.w	r5, [sl, #24]
  RTC_DateTypeDef sDate = {0};
 8008c86:	951b      	str	r5, [sp, #108]	; 0x6c
  hrtc.Init.SynchPrediv = 255;
 8008c88:	e9ca 1202 	strd	r1, r2, [sl, #8]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8008c8c:	e9ca 5504 	strd	r5, r5, [sl, #16]
  RTC_TimeTypeDef sTime = {0};
 8008c90:	e9cd 5522 	strd	r5, r5, [sp, #136]	; 0x88
 8008c94:	e9cd 5524 	strd	r5, r5, [sp, #144]	; 0x90
 8008c98:	e9cd 5526 	strd	r5, r5, [sp, #152]	; 0x98
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8008c9c:	f7fa f884 	bl	8002da8 <HAL_RTC_Init>
  sTime.Hours = 0x18;
 8008ca0:	2118      	movs	r1, #24
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8008ca2:	f04f 0c00 	mov.w	ip, #0
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8008ca6:	4642      	mov	r2, r8
  sTime.Hours = 0x18;
 8008ca8:	f8ad 1088 	strh.w	r1, [sp, #136]	; 0x88
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8008cac:	4650      	mov	r0, sl
 8008cae:	a922      	add	r1, sp, #136	; 0x88
  sTime.Minutes = 0x0;
 8008cb0:	f88d 508a 	strb.w	r5, [sp, #138]	; 0x8a
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8008cb4:	e9cd bc26 	strd	fp, ip, [sp, #152]	; 0x98
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8008cb8:	f7fa f8e4 	bl	8002e84 <HAL_RTC_SetTime>
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 8008cbc:	4b2f      	ldr	r3, [pc, #188]	; (8008d7c <main+0x368>)
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 8008cbe:	4642      	mov	r2, r8
 8008cc0:	a91b      	add	r1, sp, #108	; 0x6c
 8008cc2:	4650      	mov	r0, sl
  hi2c2.Instance = I2C2;
 8008cc4:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8008d9c <main+0x388>
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 8008cc8:	931b      	str	r3, [sp, #108]	; 0x6c
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 8008cca:	f7fa f98f 	bl	8002fec <HAL_RTC_SetDate>
  hi2c2.Init.Timing = 0x20303E5D;
 8008cce:	4b25      	ldr	r3, [pc, #148]	; (8008d64 <main+0x350>)
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8008cd0:	4650      	mov	r0, sl
  hi2c2.Instance = I2C2;
 8008cd2:	4a2b      	ldr	r2, [pc, #172]	; (8008d80 <main+0x36c>)
  hi2c2.Init.OwnAddress1 = 0;
 8008cd4:	e9ca 3501 	strd	r3, r5, [sl, #4]
  hi2c2.Instance = I2C2;
 8008cd8:	f8ca 2000 	str.w	r2, [sl]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8008cdc:	e9ca 8503 	strd	r8, r5, [sl, #12]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8008ce0:	e9ca 5505 	strd	r5, r5, [sl, #20]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8008ce4:	e9ca 5507 	strd	r5, r5, [sl, #28]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8008ce8:	f7f8 ffbc 	bl	8001c64 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8008cec:	4629      	mov	r1, r5
 8008cee:	4650      	mov	r0, sl
 8008cf0:	f7f9 fa14 	bl	800211c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 8008cf4:	4629      	mov	r1, r5
 8008cf6:	4650      	mov	r0, sl
 8008cf8:	f7f9 fa3a 	bl	8002170 <HAL_I2CEx_ConfigDigitalFilter>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);   //mora da se ukljuci da bi se pokreuo PWM
 8008cfc:	4629      	mov	r1, r5
 8008cfe:	4648      	mov	r0, r9
  Init_TOUCH_GPIO(hi2c1);
 8008d00:	466d      	mov	r5, sp
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);   //mora da se ukljuci da bi se pokreuo PWM
 8008d02:	f7fa fb43 	bl	800338c <HAL_TIM_PWM_Start>
  HAL_ADC_Start_DMA(&hadc3,ADC_BUF,1);
 8008d06:	4642      	mov	r2, r8
 8008d08:	491e      	ldr	r1, [pc, #120]	; (8008d84 <main+0x370>)
 8008d0a:	4638      	mov	r0, r7
 8008d0c:	f7f8 f9a8 	bl	8001060 <HAL_ADC_Start_DMA>
 8008d10:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8008da0 <main+0x38c>
  Init_LCD_GPIO();
 8008d14:	f7fb f9f8 	bl	8004108 <Init_LCD_GPIO>
  Init_TOUCH_GPIO(hi2c1);
 8008d18:	f106 0c10 	add.w	ip, r6, #16
 8008d1c:	4f1a      	ldr	r7, [pc, #104]	; (8008d88 <main+0x374>)
	 GUI_SetFont(&GUI_Font20B_ASCII);
 8008d1e:	f8df 9084 	ldr.w	r9, [pc, #132]	; 8008da4 <main+0x390>
  Init_TOUCH_GPIO(hi2c1);
 8008d22:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8008d26:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008d28:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8008d2c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008d2e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8008d32:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008d34:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8008d38:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8008d3c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8008d40:	f7fb fe4e 	bl	80049e0 <Init_TOUCH_GPIO>
 8008d44:	4e11      	ldr	r6, [pc, #68]	; (8008d8c <main+0x378>)
  STMPE610_Init();
 8008d46:	f7fb fe5d 	bl	8004a04 <STMPE610_Init>
 8008d4a:	e02d      	b.n	8008da8 <main+0x394>
 8008d4c:	40023800 	.word	0x40023800
 8008d50:	40021800 	.word	0x40021800
 8008d54:	20019a20 	.word	0x20019a20
 8008d58:	40020400 	.word	0x40020400
 8008d5c:	200198a0 	.word	0x200198a0
 8008d60:	40005400 	.word	0x40005400
 8008d64:	20303e5d 	.word	0x20303e5d
 8008d68:	40012200 	.word	0x40012200
 8008d6c:	0f000001 	.word	0x0f000001
 8008d70:	40000400 	.word	0x40000400
 8008d74:	20019b50 	.word	0x20019b50
 8008d78:	40002800 	.word	0x40002800
 8008d7c:	00010101 	.word	0x00010101
 8008d80:	40005800 	.word	0x40005800
 8008d84:	20019bec 	.word	0x20019bec
 8008d88:	20019426 	.word	0x20019426
 8008d8c:	20019428 	.word	0x20019428
 8008d90:	200199bc 	.word	0x200199bc
 8008d94:	20019b2c 	.word	0x20019b2c
 8008d98:	40007c00 	.word	0x40007c00
 8008d9c:	200198f0 	.word	0x200198f0
 8008da0:	20019424 	.word	0x20019424
 8008da4:	0801e460 	.word	0x0801e460
 8008da8:	4d23      	ldr	r5, [pc, #140]	; (8008e38 <main+0x424>)
  hWin = DisplayApp_Init();
 8008daa:	f000 fb51 	bl	8009450 <DisplayApp_Init>
 8008dae:	4a23      	ldr	r2, [pc, #140]	; (8008e3c <main+0x428>)
  Dev->I2cDevAddr = 0x52;
 8008db0:	2352      	movs	r3, #82	; 0x52
  Dev->I2cHandle = &hi2c2;
 8008db2:	f8cd a428 	str.w	sl, [sp, #1064]	; 0x428
  hWin = DisplayApp_Init();
 8008db6:	6010      	str	r0, [r2, #0]
  VL53L1_WaitDeviceBooted( Dev );
 8008db8:	a822      	add	r0, sp, #136	; 0x88
  Dev->I2cDevAddr = 0x52;
 8008dba:	f88d 3420 	strb.w	r3, [sp, #1056]	; 0x420
  VL53L1_WaitDeviceBooted( Dev );
 8008dbe:	f7fc f933 	bl	8005028 <VL53L1_WaitDeviceBooted>
  VL53L1_DataInit( Dev );
 8008dc2:	a822      	add	r0, sp, #136	; 0x88
 8008dc4:	f7fc f912 	bl	8004fec <VL53L1_DataInit>
  VL53L1_StaticInit( Dev );
 8008dc8:	a822      	add	r0, sp, #136	; 0x88
 8008dca:	f7fc f9c9 	bl	8005160 <VL53L1_StaticInit>
	 X_koordinata=STMPE610_GetX_TOUCH();
 8008dce:	f7fc f837 	bl	8004e40 <STMPE610_GetX_TOUCH>
 8008dd2:	f8a8 0000 	strh.w	r0, [r8]
	 Y_koordinata=STMPE610_GetY_TOUCH();
 8008dd6:	f7fc f863 	bl	8004ea0 <STMPE610_GetY_TOUCH>
 8008dda:	8038      	strh	r0, [r7, #0]
	 STMPE610_read_xyz();
 8008ddc:	f7fb ff1e 	bl	8004c1c <STMPE610_read_xyz>
	 GUI_TOUCH_Exec();
 8008de0:	f008 fbfc 	bl	80115dc <GUI_TOUCH_Exec>
	 keyPressed=GUI_GetKey();
 8008de4:	f009 f8c2 	bl	8011f6c <GUI_GetKey>
 8008de8:	8030      	strh	r0, [r6, #0]
	 GUI_Delay(1);
 8008dea:	2001      	movs	r0, #1
 8008dec:	f008 fb84 	bl	80114f8 <GUI_Delay>
	 GUI_SetColor(GUI_BLACK);
 8008df0:	2000      	movs	r0, #0
 8008df2:	f008 ff85 	bl	8011d00 <GUI_SetColor>
	 GUI_SetFont(&GUI_Font20B_ASCII);
 8008df6:	4648      	mov	r0, r9
 8008df8:	f008 ff54 	bl	8011ca4 <GUI_SetFont>
	 if (START_Button() == TRUE)
 8008dfc:	f000 fb5c 	bl	80094b8 <START_Button>
 8008e00:	2801      	cmp	r0, #1
		 START = 1;
 8008e02:	bf08      	it	eq
 8008e04:	6028      	streq	r0, [r5, #0]
	 if (STOP_Button() == TRUE)
 8008e06:	f000 fb67 	bl	80094d8 <STOP_Button>
 8008e0a:	2801      	cmp	r0, #1
 8008e0c:	d011      	beq.n	8008e32 <main+0x41e>
     if (START == 1)
 8008e0e:	682b      	ldr	r3, [r5, #0]
 8008e10:	2b01      	cmp	r3, #1
 8008e12:	d1dc      	bne.n	8008dce <main+0x3ba>
      VL53L1_StartMeasurement( Dev );
 8008e14:	a822      	add	r0, sp, #136	; 0x88
 8008e16:	f7fc f9eb 	bl	80051f0 <VL53L1_StartMeasurement>
	  VL53L1_WaitMeasurementDataReady( Dev );
 8008e1a:	a822      	add	r0, sp, #136	; 0x88
 8008e1c:	f7fc fa9c 	bl	8005358 <VL53L1_WaitMeasurementDataReady>
	  VL53L1_GetRangingMeasurementData( Dev, &RangingData );
 8008e20:	a91b      	add	r1, sp, #108	; 0x6c
 8008e22:	a822      	add	r0, sp, #136	; 0x88
 8008e24:	f7fc fa9c 	bl	8005360 <VL53L1_GetRangingMeasurementData>
	  WriteDistance(RangingData.RangeMilliMeter);
 8008e28:	f9bd 0084 	ldrsh.w	r0, [sp, #132]	; 0x84
 8008e2c:	f000 fb2c 	bl	8009488 <WriteDistance>
 8008e30:	e7cd      	b.n	8008dce <main+0x3ba>
		 START = 0;
 8008e32:	602c      	str	r4, [r5, #0]
 8008e34:	e7cb      	b.n	8008dce <main+0x3ba>
 8008e36:	bf00      	nop
 8008e38:	20019420 	.word	0x20019420
 8008e3c:	2001989c 	.word	0x2001989c

08008e40 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8008e40:	4770      	bx	lr
 8008e42:	bf00      	nop

08008e44 <HAL_MspInit>:
 8008e44:	4b0a      	ldr	r3, [pc, #40]	; (8008e70 <HAL_MspInit+0x2c>)
 8008e46:	b082      	sub	sp, #8
 8008e48:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008e4a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8008e4e:	641a      	str	r2, [r3, #64]	; 0x40
 8008e50:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008e52:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8008e56:	9200      	str	r2, [sp, #0]
 8008e58:	9a00      	ldr	r2, [sp, #0]
 8008e5a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008e5c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008e60:	645a      	str	r2, [r3, #68]	; 0x44
 8008e62:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008e64:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8008e68:	9301      	str	r3, [sp, #4]
 8008e6a:	9b01      	ldr	r3, [sp, #4]
 8008e6c:	b002      	add	sp, #8
 8008e6e:	4770      	bx	lr
 8008e70:	40023800 	.word	0x40023800

08008e74 <HAL_ADC_MspInit>:
 8008e74:	4b27      	ldr	r3, [pc, #156]	; (8008f14 <HAL_ADC_MspInit+0xa0>)
 8008e76:	6802      	ldr	r2, [r0, #0]
 8008e78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e7a:	429a      	cmp	r2, r3
 8008e7c:	b089      	sub	sp, #36	; 0x24
 8008e7e:	f04f 0400 	mov.w	r4, #0
 8008e82:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8008e86:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8008e8a:	9407      	str	r4, [sp, #28]
 8008e8c:	d001      	beq.n	8008e92 <HAL_ADC_MspInit+0x1e>
 8008e8e:	b009      	add	sp, #36	; 0x24
 8008e90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e92:	f503 338b 	add.w	r3, r3, #71168	; 0x11600
 8008e96:	4606      	mov	r6, r0
 8008e98:	f44f 7040 	mov.w	r0, #768	; 0x300
 8008e9c:	2503      	movs	r5, #3
 8008e9e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008ea0:	a903      	add	r1, sp, #12
 8008ea2:	f44f 6780 	mov.w	r7, #1024	; 0x400
 8008ea6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008eaa:	645a      	str	r2, [r3, #68]	; 0x44
 8008eac:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008eae:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8008eb2:	9201      	str	r2, [sp, #4]
 8008eb4:	9a01      	ldr	r2, [sp, #4]
 8008eb6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008eb8:	f042 0220 	orr.w	r2, r2, #32
 8008ebc:	631a      	str	r2, [r3, #48]	; 0x30
 8008ebe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008ec0:	9003      	str	r0, [sp, #12]
 8008ec2:	f003 0320 	and.w	r3, r3, #32
 8008ec6:	4814      	ldr	r0, [pc, #80]	; (8008f18 <HAL_ADC_MspInit+0xa4>)
 8008ec8:	9504      	str	r5, [sp, #16]
 8008eca:	9302      	str	r3, [sp, #8]
 8008ecc:	4d13      	ldr	r5, [pc, #76]	; (8008f1c <HAL_ADC_MspInit+0xa8>)
 8008ece:	9b02      	ldr	r3, [sp, #8]
 8008ed0:	f7f8 fd0c 	bl	80018ec <HAL_GPIO_Init>
 8008ed4:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
 8008ed8:	f8df c044 	ldr.w	ip, [pc, #68]	; 8008f20 <HAL_ADC_MspInit+0xac>
 8008edc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8008ee0:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8008ee4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008ee8:	60ac      	str	r4, [r5, #8]
 8008eea:	60ec      	str	r4, [r5, #12]
 8008eec:	e9c5 c000 	strd	ip, r0, [r5]
 8008ef0:	4628      	mov	r0, r5
 8008ef2:	e9c5 4408 	strd	r4, r4, [r5, #32]
 8008ef6:	e9c5 7104 	strd	r7, r1, [r5, #16]
 8008efa:	e9c5 2306 	strd	r2, r3, [r5, #24]
 8008efe:	f7f8 fae1 	bl	80014c4 <HAL_DMA_Init>
 8008f02:	b918      	cbnz	r0, 8008f0c <HAL_ADC_MspInit+0x98>
 8008f04:	63b5      	str	r5, [r6, #56]	; 0x38
 8008f06:	63ae      	str	r6, [r5, #56]	; 0x38
 8008f08:	b009      	add	sp, #36	; 0x24
 8008f0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f0c:	f7ff ff98 	bl	8008e40 <Error_Handler>
 8008f10:	e7f8      	b.n	8008f04 <HAL_ADC_MspInit+0x90>
 8008f12:	bf00      	nop
 8008f14:	40012200 	.word	0x40012200
 8008f18:	40021400 	.word	0x40021400
 8008f1c:	20019954 	.word	0x20019954
 8008f20:	40026410 	.word	0x40026410

08008f24 <HAL_I2C_MspInit>:
 8008f24:	6802      	ldr	r2, [r0, #0]
 8008f26:	2300      	movs	r3, #0
 8008f28:	4929      	ldr	r1, [pc, #164]	; (8008fd0 <HAL_I2C_MspInit+0xac>)
 8008f2a:	b570      	push	{r4, r5, r6, lr}
 8008f2c:	428a      	cmp	r2, r1
 8008f2e:	b08a      	sub	sp, #40	; 0x28
 8008f30:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008f34:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8008f38:	9309      	str	r3, [sp, #36]	; 0x24
 8008f3a:	d026      	beq.n	8008f8a <HAL_I2C_MspInit+0x66>
 8008f3c:	4b25      	ldr	r3, [pc, #148]	; (8008fd4 <HAL_I2C_MspInit+0xb0>)
 8008f3e:	429a      	cmp	r2, r3
 8008f40:	d001      	beq.n	8008f46 <HAL_I2C_MspInit+0x22>
 8008f42:	b00a      	add	sp, #40	; 0x28
 8008f44:	bd70      	pop	{r4, r5, r6, pc}
 8008f46:	4c24      	ldr	r4, [pc, #144]	; (8008fd8 <HAL_I2C_MspInit+0xb4>)
 8008f48:	2012      	movs	r0, #18
 8008f4a:	2203      	movs	r2, #3
 8008f4c:	2601      	movs	r6, #1
 8008f4e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008f50:	2504      	movs	r5, #4
 8008f52:	a905      	add	r1, sp, #20
 8008f54:	f043 0320 	orr.w	r3, r3, #32
 8008f58:	6323      	str	r3, [r4, #48]	; 0x30
 8008f5a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008f5c:	9006      	str	r0, [sp, #24]
 8008f5e:	f003 0320 	and.w	r3, r3, #32
 8008f62:	481e      	ldr	r0, [pc, #120]	; (8008fdc <HAL_I2C_MspInit+0xb8>)
 8008f64:	9205      	str	r2, [sp, #20]
 8008f66:	9303      	str	r3, [sp, #12]
 8008f68:	9b03      	ldr	r3, [sp, #12]
 8008f6a:	9208      	str	r2, [sp, #32]
 8008f6c:	9607      	str	r6, [sp, #28]
 8008f6e:	9509      	str	r5, [sp, #36]	; 0x24
 8008f70:	f7f8 fcbc 	bl	80018ec <HAL_GPIO_Init>
 8008f74:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008f76:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8008f7a:	6423      	str	r3, [r4, #64]	; 0x40
 8008f7c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008f7e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008f82:	9304      	str	r3, [sp, #16]
 8008f84:	9b04      	ldr	r3, [sp, #16]
 8008f86:	b00a      	add	sp, #40	; 0x28
 8008f88:	bd70      	pop	{r4, r5, r6, pc}
 8008f8a:	4c13      	ldr	r4, [pc, #76]	; (8008fd8 <HAL_I2C_MspInit+0xb4>)
 8008f8c:	2212      	movs	r2, #18
 8008f8e:	2001      	movs	r0, #1
 8008f90:	26c0      	movs	r6, #192	; 0xc0
 8008f92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008f94:	2503      	movs	r5, #3
 8008f96:	a905      	add	r1, sp, #20
 8008f98:	f043 0302 	orr.w	r3, r3, #2
 8008f9c:	6323      	str	r3, [r4, #48]	; 0x30
 8008f9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008fa0:	9206      	str	r2, [sp, #24]
 8008fa2:	2204      	movs	r2, #4
 8008fa4:	f003 0302 	and.w	r3, r3, #2
 8008fa8:	9007      	str	r0, [sp, #28]
 8008faa:	480d      	ldr	r0, [pc, #52]	; (8008fe0 <HAL_I2C_MspInit+0xbc>)
 8008fac:	9301      	str	r3, [sp, #4]
 8008fae:	9b01      	ldr	r3, [sp, #4]
 8008fb0:	9605      	str	r6, [sp, #20]
 8008fb2:	e9cd 5208 	strd	r5, r2, [sp, #32]
 8008fb6:	f7f8 fc99 	bl	80018ec <HAL_GPIO_Init>
 8008fba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008fbc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8008fc0:	6423      	str	r3, [r4, #64]	; 0x40
 8008fc2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008fc4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8008fc8:	9302      	str	r3, [sp, #8]
 8008fca:	9b02      	ldr	r3, [sp, #8]
 8008fcc:	b00a      	add	sp, #40	; 0x28
 8008fce:	bd70      	pop	{r4, r5, r6, pc}
 8008fd0:	40005400 	.word	0x40005400
 8008fd4:	40005800 	.word	0x40005800
 8008fd8:	40023800 	.word	0x40023800
 8008fdc:	40021400 	.word	0x40021400
 8008fe0:	40020400 	.word	0x40020400

08008fe4 <HAL_RTC_MspInit>:
 8008fe4:	6802      	ldr	r2, [r0, #0]
 8008fe6:	4b04      	ldr	r3, [pc, #16]	; (8008ff8 <HAL_RTC_MspInit+0x14>)
 8008fe8:	429a      	cmp	r2, r3
 8008fea:	d104      	bne.n	8008ff6 <HAL_RTC_MspInit+0x12>
 8008fec:	4a03      	ldr	r2, [pc, #12]	; (8008ffc <HAL_RTC_MspInit+0x18>)
 8008fee:	6f13      	ldr	r3, [r2, #112]	; 0x70
 8008ff0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008ff4:	6713      	str	r3, [r2, #112]	; 0x70
 8008ff6:	4770      	bx	lr
 8008ff8:	40002800 	.word	0x40002800
 8008ffc:	40023800 	.word	0x40023800

08009000 <HAL_TIM_Base_MspInit>:
 8009000:	6802      	ldr	r2, [r0, #0]
 8009002:	4b09      	ldr	r3, [pc, #36]	; (8009028 <HAL_TIM_Base_MspInit+0x28>)
 8009004:	429a      	cmp	r2, r3
 8009006:	d000      	beq.n	800900a <HAL_TIM_Base_MspInit+0xa>
 8009008:	4770      	bx	lr
 800900a:	f503 330d 	add.w	r3, r3, #144384	; 0x23400
 800900e:	b082      	sub	sp, #8
 8009010:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8009012:	f042 0202 	orr.w	r2, r2, #2
 8009016:	641a      	str	r2, [r3, #64]	; 0x40
 8009018:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800901a:	f003 0302 	and.w	r3, r3, #2
 800901e:	9301      	str	r3, [sp, #4]
 8009020:	9b01      	ldr	r3, [sp, #4]
 8009022:	b002      	add	sp, #8
 8009024:	4770      	bx	lr
 8009026:	bf00      	nop
 8009028:	40000400 	.word	0x40000400

0800902c <HAL_TIM_MspPostInit>:
 800902c:	6801      	ldr	r1, [r0, #0]
 800902e:	2300      	movs	r3, #0
 8009030:	4a0f      	ldr	r2, [pc, #60]	; (8009070 <HAL_TIM_MspPostInit+0x44>)
 8009032:	b530      	push	{r4, r5, lr}
 8009034:	4291      	cmp	r1, r2
 8009036:	b087      	sub	sp, #28
 8009038:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800903c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8009040:	9305      	str	r3, [sp, #20]
 8009042:	d001      	beq.n	8009048 <HAL_TIM_MspPostInit+0x1c>
 8009044:	b007      	add	sp, #28
 8009046:	bd30      	pop	{r4, r5, pc}
 8009048:	4b0a      	ldr	r3, [pc, #40]	; (8009074 <HAL_TIM_MspPostInit+0x48>)
 800904a:	2402      	movs	r4, #2
 800904c:	2510      	movs	r5, #16
 800904e:	a901      	add	r1, sp, #4
 8009050:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009052:	4809      	ldr	r0, [pc, #36]	; (8009078 <HAL_TIM_MspPostInit+0x4c>)
 8009054:	4322      	orrs	r2, r4
 8009056:	631a      	str	r2, [r3, #48]	; 0x30
 8009058:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800905a:	9501      	str	r5, [sp, #4]
 800905c:	4023      	ands	r3, r4
 800905e:	9402      	str	r4, [sp, #8]
 8009060:	9405      	str	r4, [sp, #20]
 8009062:	9300      	str	r3, [sp, #0]
 8009064:	9b00      	ldr	r3, [sp, #0]
 8009066:	f7f8 fc41 	bl	80018ec <HAL_GPIO_Init>
 800906a:	b007      	add	sp, #28
 800906c:	bd30      	pop	{r4, r5, pc}
 800906e:	bf00      	nop
 8009070:	40000400 	.word	0x40000400
 8009074:	40023800 	.word	0x40023800
 8009078:	40020400 	.word	0x40020400

0800907c <HAL_UART_MspInit>:
 800907c:	4b36      	ldr	r3, [pc, #216]	; (8009158 <HAL_UART_MspInit+0xdc>)
 800907e:	6802      	ldr	r2, [r0, #0]
 8009080:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009082:	429a      	cmp	r2, r3
 8009084:	b089      	sub	sp, #36	; 0x24
 8009086:	f04f 0400 	mov.w	r4, #0
 800908a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800908e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8009092:	9407      	str	r4, [sp, #28]
 8009094:	d001      	beq.n	800909a <HAL_UART_MspInit+0x1e>
 8009096:	b009      	add	sp, #36	; 0x24
 8009098:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800909a:	f503 33de 	add.w	r3, r3, #113664	; 0x1bc00
 800909e:	2502      	movs	r5, #2
 80090a0:	4606      	mov	r6, r0
 80090a2:	2003      	movs	r0, #3
 80090a4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80090a6:	a903      	add	r1, sp, #12
 80090a8:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80090ac:	641a      	str	r2, [r3, #64]	; 0x40
 80090ae:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80090b0:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 80090b4:	9201      	str	r2, [sp, #4]
 80090b6:	9a01      	ldr	r2, [sp, #4]
 80090b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80090ba:	f042 0210 	orr.w	r2, r2, #16
 80090be:	631a      	str	r2, [r3, #48]	; 0x30
 80090c0:	2208      	movs	r2, #8
 80090c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80090c4:	9003      	str	r0, [sp, #12]
 80090c6:	f003 0310 	and.w	r3, r3, #16
 80090ca:	9006      	str	r0, [sp, #24]
 80090cc:	9504      	str	r5, [sp, #16]
 80090ce:	9302      	str	r3, [sp, #8]
 80090d0:	4d22      	ldr	r5, [pc, #136]	; (800915c <HAL_UART_MspInit+0xe0>)
 80090d2:	4823      	ldr	r0, [pc, #140]	; (8009160 <HAL_UART_MspInit+0xe4>)
 80090d4:	9b02      	ldr	r3, [sp, #8]
 80090d6:	9207      	str	r2, [sp, #28]
 80090d8:	f7f8 fc08 	bl	80018ec <HAL_GPIO_Init>
 80090dc:	4921      	ldr	r1, [pc, #132]	; (8009164 <HAL_UART_MspInit+0xe8>)
 80090de:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 80090e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80090e6:	4628      	mov	r0, r5
 80090e8:	626c      	str	r4, [r5, #36]	; 0x24
 80090ea:	612b      	str	r3, [r5, #16]
 80090ec:	e9c5 4402 	strd	r4, r4, [r5, #8]
 80090f0:	e9c5 4405 	strd	r4, r4, [r5, #20]
 80090f4:	e9c5 4407 	strd	r4, r4, [r5, #28]
 80090f8:	e9c5 1200 	strd	r1, r2, [r5]
 80090fc:	f7f8 f9e2 	bl	80014c4 <HAL_DMA_Init>
 8009100:	bb18      	cbnz	r0, 800914a <HAL_UART_MspInit+0xce>
 8009102:	4c19      	ldr	r4, [pc, #100]	; (8009168 <HAL_UART_MspInit+0xec>)
 8009104:	2300      	movs	r3, #0
 8009106:	4819      	ldr	r0, [pc, #100]	; (800916c <HAL_UART_MspInit+0xf0>)
 8009108:	f04f 6720 	mov.w	r7, #167772160	; 0xa000000
 800910c:	2140      	movs	r1, #64	; 0x40
 800910e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009112:	6020      	str	r0, [r4, #0]
 8009114:	4620      	mov	r0, r4
 8009116:	6735      	str	r5, [r6, #112]	; 0x70
 8009118:	63ae      	str	r6, [r5, #56]	; 0x38
 800911a:	6263      	str	r3, [r4, #36]	; 0x24
 800911c:	e9c4 7101 	strd	r7, r1, [r4, #4]
 8009120:	e9c4 3203 	strd	r3, r2, [r4, #12]
 8009124:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8009128:	e9c4 3307 	strd	r3, r3, [r4, #28]
 800912c:	f7f8 f9ca 	bl	80014c4 <HAL_DMA_Init>
 8009130:	b970      	cbnz	r0, 8009150 <HAL_UART_MspInit+0xd4>
 8009132:	2200      	movs	r2, #0
 8009134:	66f4      	str	r4, [r6, #108]	; 0x6c
 8009136:	2053      	movs	r0, #83	; 0x53
 8009138:	63a6      	str	r6, [r4, #56]	; 0x38
 800913a:	4611      	mov	r1, r2
 800913c:	f7f8 f962 	bl	8001404 <HAL_NVIC_SetPriority>
 8009140:	2053      	movs	r0, #83	; 0x53
 8009142:	f7f8 f995 	bl	8001470 <HAL_NVIC_EnableIRQ>
 8009146:	b009      	add	sp, #36	; 0x24
 8009148:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800914a:	f7ff fe79 	bl	8008e40 <Error_Handler>
 800914e:	e7d8      	b.n	8009102 <HAL_UART_MspInit+0x86>
 8009150:	f7ff fe76 	bl	8008e40 <Error_Handler>
 8009154:	e7ed      	b.n	8009132 <HAL_UART_MspInit+0xb6>
 8009156:	bf00      	nop
 8009158:	40007c00 	.word	0x40007c00
 800915c:	20019a6c 	.word	0x20019a6c
 8009160:	40021000 	.word	0x40021000
 8009164:	400260a0 	.word	0x400260a0
 8009168:	20019acc 	.word	0x20019acc
 800916c:	40026010 	.word	0x40026010

08009170 <NMI_Handler>:
 8009170:	4770      	bx	lr
 8009172:	bf00      	nop

08009174 <HardFault_Handler>:
 8009174:	e7fe      	b.n	8009174 <HardFault_Handler>
 8009176:	bf00      	nop

08009178 <MemManage_Handler>:
 8009178:	e7fe      	b.n	8009178 <MemManage_Handler>
 800917a:	bf00      	nop

0800917c <BusFault_Handler>:
 800917c:	e7fe      	b.n	800917c <BusFault_Handler>
 800917e:	bf00      	nop

08009180 <UsageFault_Handler>:
 8009180:	e7fe      	b.n	8009180 <UsageFault_Handler>
 8009182:	bf00      	nop

08009184 <SVC_Handler>:
 8009184:	4770      	bx	lr
 8009186:	bf00      	nop

08009188 <DebugMon_Handler>:
 8009188:	4770      	bx	lr
 800918a:	bf00      	nop

0800918c <PendSV_Handler>:
 800918c:	4770      	bx	lr
 800918e:	bf00      	nop

08009190 <SysTick_Handler>:
 8009190:	b508      	push	{r3, lr}
 8009192:	f7f7 fe8b 	bl	8000eac <HAL_IncTick>
 8009196:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800919a:	f7f8 b98f 	b.w	80014bc <HAL_SYSTICK_IRQHandler>
 800919e:	bf00      	nop

080091a0 <DMA1_Stream0_IRQHandler>:
 80091a0:	4801      	ldr	r0, [pc, #4]	; (80091a8 <DMA1_Stream0_IRQHandler+0x8>)
 80091a2:	f7f8 bacd 	b.w	8001740 <HAL_DMA_IRQHandler>
 80091a6:	bf00      	nop
 80091a8:	20019acc 	.word	0x20019acc

080091ac <DMA1_Stream6_IRQHandler>:
 80091ac:	4801      	ldr	r0, [pc, #4]	; (80091b4 <DMA1_Stream6_IRQHandler+0x8>)
 80091ae:	f7f8 bac7 	b.w	8001740 <HAL_DMA_IRQHandler>
 80091b2:	bf00      	nop
 80091b4:	20019a6c 	.word	0x20019a6c

080091b8 <DMA2_Stream0_IRQHandler>:
 80091b8:	4801      	ldr	r0, [pc, #4]	; (80091c0 <DMA2_Stream0_IRQHandler+0x8>)
 80091ba:	f7f8 bac1 	b.w	8001740 <HAL_DMA_IRQHandler>
 80091be:	bf00      	nop
 80091c0:	20019954 	.word	0x20019954

080091c4 <UART8_IRQHandler>:
 80091c4:	4801      	ldr	r0, [pc, #4]	; (80091cc <UART8_IRQHandler+0x8>)
 80091c6:	f7fa bc3f 	b.w	8003a48 <HAL_UART_IRQHandler>
 80091ca:	bf00      	nop
 80091cc:	20019b50 	.word	0x20019b50

080091d0 <_sbrk>:
 80091d0:	4a0c      	ldr	r2, [pc, #48]	; (8009204 <_sbrk+0x34>)
 80091d2:	b508      	push	{r3, lr}
 80091d4:	6813      	ldr	r3, [r2, #0]
 80091d6:	b133      	cbz	r3, 80091e6 <_sbrk+0x16>
 80091d8:	4418      	add	r0, r3
 80091da:	4669      	mov	r1, sp
 80091dc:	4288      	cmp	r0, r1
 80091de:	d809      	bhi.n	80091f4 <_sbrk+0x24>
 80091e0:	6010      	str	r0, [r2, #0]
 80091e2:	4618      	mov	r0, r3
 80091e4:	bd08      	pop	{r3, pc}
 80091e6:	4908      	ldr	r1, [pc, #32]	; (8009208 <_sbrk+0x38>)
 80091e8:	460b      	mov	r3, r1
 80091ea:	6011      	str	r1, [r2, #0]
 80091ec:	4669      	mov	r1, sp
 80091ee:	4418      	add	r0, r3
 80091f0:	4288      	cmp	r0, r1
 80091f2:	d9f5      	bls.n	80091e0 <_sbrk+0x10>
 80091f4:	f011 fbf4 	bl	801a9e0 <__errno>
 80091f8:	220c      	movs	r2, #12
 80091fa:	f04f 33ff 	mov.w	r3, #4294967295
 80091fe:	6002      	str	r2, [r0, #0]
 8009200:	4618      	mov	r0, r3
 8009202:	bd08      	pop	{r3, pc}
 8009204:	2001942c 	.word	0x2001942c
 8009208:	20019db0 	.word	0x20019db0

0800920c <SystemInit>:
 800920c:	4a03      	ldr	r2, [pc, #12]	; (800921c <SystemInit+0x10>)
 800920e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8009212:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8009216:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800921a:	4770      	bx	lr
 800921c:	e000ed00 	.word	0xe000ed00

08009220 <_cbWin>:
static void _cbWin(WM_MESSAGE * pMsg);
static void _cbWin(WM_MESSAGE * pMsg) {
  //WM_HWIN                 hDialog;
  static LISTWHEEL_Handle hMulti;

  switch (pMsg->MsgId) {
 8009220:	6803      	ldr	r3, [r0, #0]
 8009222:	2b01      	cmp	r3, #1
static void _cbWin(WM_MESSAGE * pMsg) {
 8009224:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009228:	b084      	sub	sp, #16
  switch (pMsg->MsgId) {
 800922a:	d00e      	beq.n	800924a <_cbWin+0x2a>
 800922c:	2b0f      	cmp	r3, #15
 800922e:	d107      	bne.n	8009240 <_cbWin+0x20>
    // Set alignment of tabs
    //
    MULTIPAGE_SetAlign(hMulti, MULTIPAGE_ALIGN_LEFT);
    break;
  case WM_PAINT:
    GUI_SetBkColor(GUI_MAKE_COLOR(0x00FFDBB3));
 8009230:	4826      	ldr	r0, [pc, #152]	; (80092cc <_cbWin+0xac>)
 8009232:	f008 fd63 	bl	8011cfc <GUI_SetBkColor>
  default:
    WM_DefaultProc(pMsg);
    break;
  }

}
 8009236:	b004      	add	sp, #16
 8009238:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    GUI_Clear();
 800923c:	f009 bb20 	b.w	8012880 <GUI_Clear>
}
 8009240:	b004      	add	sp, #16
 8009242:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    WM_DefaultProc(pMsg);
 8009246:	f004 bcbb 	b.w	800dbc0 <WM_DefaultProc>
    hMulti = MULTIPAGE_CreateEx(0, 0, LCD_GetXSize(), LCD_GetYSize(), WM_HBKWIN, WM_CF_SHOW, 0, GUI_ID_MULTIPAGE0);
 800924a:	2400      	movs	r4, #0
 800924c:	f006 ff4c 	bl	80100e8 <LCD_GetXSize>
 8009250:	2602      	movs	r6, #2
 8009252:	4607      	mov	r7, r0
 8009254:	f006 ff50 	bl	80100f8 <LCD_GetYSize>
 8009258:	4680      	mov	r8, r0
 800925a:	f003 fb01 	bl	800c860 <WM_GetDesktopWindow>
 800925e:	f44f 710c 	mov.w	r1, #560	; 0x230
 8009262:	4d1b      	ldr	r5, [pc, #108]	; (80092d0 <_cbWin+0xb0>)
 8009264:	4643      	mov	r3, r8
 8009266:	9000      	str	r0, [sp, #0]
 8009268:	463a      	mov	r2, r7
 800926a:	9103      	str	r1, [sp, #12]
 800926c:	4620      	mov	r0, r4
 800926e:	4621      	mov	r1, r4
 8009270:	9601      	str	r6, [sp, #4]
 8009272:	9402      	str	r4, [sp, #8]
 8009274:	f001 fb56 	bl	800a924 <MULTIPAGE_CreateEx>
    hDialog_app = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog1, WM_UNATTACHED, 0, 0);
 8009278:	f04f 33ff 	mov.w	r3, #4294967295
    hMulti = MULTIPAGE_CreateEx(0, 0, LCD_GetXSize(), LCD_GetYSize(), WM_HBKWIN, WM_CF_SHOW, 0, GUI_ID_MULTIPAGE0);
 800927c:	6028      	str	r0, [r5, #0]
    hDialog_app = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog1, WM_UNATTACHED, 0, 0);
 800927e:	2106      	movs	r1, #6
 8009280:	4a14      	ldr	r2, [pc, #80]	; (80092d4 <_cbWin+0xb4>)
 8009282:	4815      	ldr	r0, [pc, #84]	; (80092d8 <_cbWin+0xb8>)
 8009284:	4e15      	ldr	r6, [pc, #84]	; (80092dc <_cbWin+0xbc>)
 8009286:	e9cd 4400 	strd	r4, r4, [sp]
 800928a:	f002 fbb7 	bl	800b9fc <GUI_CreateDialogBox>
 800928e:	4603      	mov	r3, r0
    MULTIPAGE_AddPage(hMulti, hDialog_app, "Measured distance");
 8009290:	4601      	mov	r1, r0
 8009292:	4a13      	ldr	r2, [pc, #76]	; (80092e0 <_cbWin+0xc0>)
 8009294:	6828      	ldr	r0, [r5, #0]
    hDialog_app = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog1, WM_UNATTACHED, 0, 0);
 8009296:	6033      	str	r3, [r6, #0]
    MULTIPAGE_AddPage(hMulti, hDialog_app, "Measured distance");
 8009298:	f001 fd22 	bl	800ace0 <MULTIPAGE_AddPage>
    hDialog_sett = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_UNATTACHED, 0, 0);
 800929c:	9401      	str	r4, [sp, #4]
 800929e:	f04f 33ff 	mov.w	r3, #4294967295
 80092a2:	9400      	str	r4, [sp, #0]
 80092a4:	210a      	movs	r1, #10
 80092a6:	4a0f      	ldr	r2, [pc, #60]	; (80092e4 <_cbWin+0xc4>)
 80092a8:	480f      	ldr	r0, [pc, #60]	; (80092e8 <_cbWin+0xc8>)
 80092aa:	f002 fba7 	bl	800b9fc <GUI_CreateDialogBox>
 80092ae:	4e0f      	ldr	r6, [pc, #60]	; (80092ec <_cbWin+0xcc>)
 80092b0:	4603      	mov	r3, r0
    MULTIPAGE_AddPage(hMulti, hDialog_sett, "Settings");
 80092b2:	4601      	mov	r1, r0
 80092b4:	4a0e      	ldr	r2, [pc, #56]	; (80092f0 <_cbWin+0xd0>)
 80092b6:	6828      	ldr	r0, [r5, #0]
    hDialog_sett = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_UNATTACHED, 0, 0);
 80092b8:	6033      	str	r3, [r6, #0]
    MULTIPAGE_AddPage(hMulti, hDialog_sett, "Settings");
 80092ba:	f001 fd11 	bl	800ace0 <MULTIPAGE_AddPage>
    MULTIPAGE_SetAlign(hMulti, MULTIPAGE_ALIGN_LEFT);
 80092be:	4621      	mov	r1, r4
 80092c0:	6828      	ldr	r0, [r5, #0]
}
 80092c2:	b004      	add	sp, #16
 80092c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    MULTIPAGE_SetAlign(hMulti, MULTIPAGE_ALIGN_LEFT);
 80092c8:	f001 bd9e 	b.w	800ae08 <MULTIPAGE_SetAlign>
 80092cc:	00ffdbb3 	.word	0x00ffdbb3
 80092d0:	20019430 	.word	0x20019430
 80092d4:	080093b1 	.word	0x080093b1
 80092d8:	0801b370 	.word	0x0801b370
 80092dc:	20019bf8 	.word	0x20019bf8
 80092e0:	0801b534 	.word	0x0801b534
 80092e4:	080092f5 	.word	0x080092f5
 80092e8:	0801b418 	.word	0x0801b418
 80092ec:	20019bf4 	.word	0x20019bf4
 80092f0:	0801b548 	.word	0x0801b548

080092f4 <_cbDialog2>:
  switch (pMsg->MsgId) {
 80092f4:	6803      	ldr	r3, [r0, #0]
 80092f6:	2b1d      	cmp	r3, #29
static void _cbDialog2(WM_MESSAGE * pMsg) {
 80092f8:	b510      	push	{r4, lr}
 80092fa:	4604      	mov	r4, r0
  switch (pMsg->MsgId) {
 80092fc:	d00a      	beq.n	8009314 <_cbDialog2+0x20>
 80092fe:	2b26      	cmp	r3, #38	; 0x26
 8009300:	d104      	bne.n	800930c <_cbDialog2+0x18>
    Id    = WM_GetId(pMsg->hWinSrc);
 8009302:	6880      	ldr	r0, [r0, #8]
}
 8009304:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Id    = WM_GetId(pMsg->hWinSrc);
 8009308:	f003 ba5c 	b.w	800c7c4 <WM_GetId>
}
 800930c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    WM_DefaultProc(pMsg);
 8009310:	f004 bc56 	b.w	800dbc0 <WM_DefaultProc>
    WINDOW_SetBkColor(hItem, GUI_MAKE_COLOR(0x00FFDBB3));
 8009314:	4922      	ldr	r1, [pc, #136]	; (80093a0 <_cbDialog2+0xac>)
 8009316:	6840      	ldr	r0, [r0, #4]
 8009318:	f000 f9a9 	bl	800966e <WINDOW_SetBkColor>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
 800931c:	f640 0106 	movw	r1, #2054	; 0x806
 8009320:	6860      	ldr	r0, [r4, #4]
 8009322:	f003 fa8e 	bl	800c842 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 8009326:	491f      	ldr	r1, [pc, #124]	; (80093a4 <_cbDialog2+0xb0>)
 8009328:	f002 fd15 	bl	800bd56 <BUTTON_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_0);
 800932c:	f640 0107 	movw	r1, #2055	; 0x807
 8009330:	6860      	ldr	r0, [r4, #4]
 8009332:	f003 fa86 	bl	800c842 <WM_GetDialogItem>
    RADIO_SetTextColor(hItem, GUI_MAKE_COLOR(0x000000FF));
 8009336:	21ff      	movs	r1, #255	; 0xff
 8009338:	f000 fdfe 	bl	8009f38 <RADIO_SetTextColor>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
 800933c:	f640 0108 	movw	r1, #2056	; 0x808
 8009340:	6860      	ldr	r0, [r4, #4]
 8009342:	f003 fa7e 	bl	800c842 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8009346:	4918      	ldr	r1, [pc, #96]	; (80093a8 <_cbDialog2+0xb4>)
 8009348:	f000 fb98 	bl	8009a7c <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_3);
 800934c:	f640 0109 	movw	r1, #2057	; 0x809
 8009350:	6860      	ldr	r0, [r4, #4]
 8009352:	f003 fa76 	bl	800c842 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8009356:	4914      	ldr	r1, [pc, #80]	; (80093a8 <_cbDialog2+0xb4>)
 8009358:	f000 fb90 	bl	8009a7c <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
 800935c:	f640 010a 	movw	r1, #2058	; 0x80a
 8009360:	6860      	ldr	r0, [r4, #4]
 8009362:	f003 fa6e 	bl	800c842 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8009366:	4910      	ldr	r1, [pc, #64]	; (80093a8 <_cbDialog2+0xb4>)
 8009368:	f000 fb88 	bl	8009a7c <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
 800936c:	f640 010d 	movw	r1, #2061	; 0x80d
 8009370:	6860      	ldr	r0, [r4, #4]
 8009372:	f003 fa66 	bl	800c842 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8009376:	490c      	ldr	r1, [pc, #48]	; (80093a8 <_cbDialog2+0xb4>)
 8009378:	f000 fb80 	bl	8009a7c <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 800937c:	f640 010e 	movw	r1, #2062	; 0x80e
 8009380:	6860      	ldr	r0, [r4, #4]
 8009382:	f003 fa5e 	bl	800c842 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8009386:	4908      	ldr	r1, [pc, #32]	; (80093a8 <_cbDialog2+0xb4>)
 8009388:	f000 fb78 	bl	8009a7c <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_2);
 800938c:	6860      	ldr	r0, [r4, #4]
 800938e:	f640 010f 	movw	r1, #2063	; 0x80f
 8009392:	f003 fa56 	bl	800c842 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_16_ASCII);
 8009396:	4905      	ldr	r1, [pc, #20]	; (80093ac <_cbDialog2+0xb8>)
}
 8009398:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BUTTON_SetFont(hItem, GUI_FONT_16_ASCII);
 800939c:	f002 bcdb 	b.w	800bd56 <BUTTON_SetFont>
 80093a0:	00ffdbb3 	.word	0x00ffdbb3
 80093a4:	0801d9b0 	.word	0x0801d9b0
 80093a8:	0801fc28 	.word	0x0801fc28
 80093ac:	0801f308 	.word	0x0801f308

080093b0 <_cbDialog1>:
  switch (pMsg->MsgId) {
 80093b0:	6802      	ldr	r2, [r0, #0]
 80093b2:	2a1d      	cmp	r2, #29
static void _cbDialog1(WM_MESSAGE * pMsg) {
 80093b4:	b538      	push	{r3, r4, r5, lr}
 80093b6:	4604      	mov	r4, r0
  switch (pMsg->MsgId) {
 80093b8:	d00a      	beq.n	80093d0 <_cbDialog1+0x20>
 80093ba:	2a26      	cmp	r2, #38	; 0x26
 80093bc:	d104      	bne.n	80093c8 <_cbDialog1+0x18>
    Id    = WM_GetId(pMsg->hWinSrc);
 80093be:	6880      	ldr	r0, [r0, #8]
}
 80093c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    Id    = WM_GetId(pMsg->hWinSrc);
 80093c4:	f003 b9fe 	b.w	800c7c4 <WM_GetId>
}
 80093c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    WM_DefaultProc(pMsg);
 80093cc:	f004 bbf8 	b.w	800dbc0 <WM_DefaultProc>
    WINDOW_SetBkColor(hItem, GUI_MAKE_COLOR(0x00FFDBB3));
 80093d0:	491b      	ldr	r1, [pc, #108]	; (8009440 <_cbDialog1+0x90>)
 80093d2:	6840      	ldr	r0, [r0, #4]
 80093d4:	f000 f94b 	bl	800966e <WINDOW_SetBkColor>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 80093d8:	f640 0102 	movw	r1, #2050	; 0x802
 80093dc:	6860      	ldr	r0, [r4, #4]
 80093de:	f003 fa30 	bl	800c842 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 80093e2:	4918      	ldr	r1, [pc, #96]	; (8009444 <_cbDialog1+0x94>)
 80093e4:	f000 fb4a 	bl	8009a7c <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_0);
 80093e8:	f640 0103 	movw	r1, #2051	; 0x803
 80093ec:	6860      	ldr	r0, [r4, #4]
 80093ee:	f003 fa28 	bl	800c842 <WM_GetDialogItem>
 80093f2:	4605      	mov	r5, r0
    EDIT_SetText(hItem, "123");
 80093f4:	4914      	ldr	r1, [pc, #80]	; (8009448 <_cbDialog1+0x98>)
 80093f6:	f002 fa83 	bl	800b900 <EDIT_SetText>
    EDIT_SetFont(hItem, GUI_FONT_24B_ASCII);
 80093fa:	4628      	mov	r0, r5
 80093fc:	4911      	ldr	r1, [pc, #68]	; (8009444 <_cbDialog1+0x94>)
 80093fe:	f002 fa6d 	bl	800b8dc <EDIT_SetFont>
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
 8009402:	4628      	mov	r0, r5
 8009404:	210e      	movs	r1, #14
 8009406:	f002 fae8 	bl	800b9da <EDIT_SetTextAlign>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 800940a:	f640 0104 	movw	r1, #2052	; 0x804
 800940e:	6860      	ldr	r0, [r4, #4]
 8009410:	f003 fa17 	bl	800c842 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8009414:	490b      	ldr	r1, [pc, #44]	; (8009444 <_cbDialog1+0x94>)
 8009416:	f000 fb31 	bl	8009a7c <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_0);
 800941a:	f640 0105 	movw	r1, #2053	; 0x805
 800941e:	6860      	ldr	r0, [r4, #4]
 8009420:	f003 fa0f 	bl	800c842 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 8009424:	4909      	ldr	r1, [pc, #36]	; (800944c <_cbDialog1+0x9c>)
 8009426:	f002 fc96 	bl	800bd56 <BUTTON_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
 800942a:	6860      	ldr	r0, [r4, #4]
 800942c:	f640 0106 	movw	r1, #2054	; 0x806
 8009430:	f003 fa07 	bl	800c842 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 8009434:	4905      	ldr	r1, [pc, #20]	; (800944c <_cbDialog1+0x9c>)
}
 8009436:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 800943a:	f002 bc8c 	b.w	800bd56 <BUTTON_SetFont>
 800943e:	bf00      	nop
 8009440:	00ffdbb3 	.word	0x00ffdbb3
 8009444:	0801c538 	.word	0x0801c538
 8009448:	0801b530 	.word	0x0801b530
 800944c:	0801d9b0 	.word	0x0801d9b0

08009450 <DisplayApp_Init>:

void DisplayApp_Init(void) {
 8009450:	b500      	push	{lr}
 8009452:	b085      	sub	sp, #20
  //
  // Init GUI
  //
  GUI_Init();
 8009454:	f009 fa4e 	bl	80128f4 <GUI_Init>
  //
  // Enable multi-buffering
  //
  WM_MULTIBUF_Enable(1);
 8009458:	2001      	movs	r0, #1
 800945a:	f003 f919 	bl	800c690 <WM_MULTIBUF_Enable>
  //
  // Create a window
  //
  WM_CreateWindowAsChild(0, 0, 480, 272, WM_HBKWIN, WM_CF_SHOW, _cbWin, 0);
 800945e:	f003 f9ff 	bl	800c860 <WM_GetDesktopWindow>
 8009462:	4b08      	ldr	r3, [pc, #32]	; (8009484 <DisplayApp_Init+0x34>)
 8009464:	2202      	movs	r2, #2
 8009466:	2100      	movs	r1, #0
 8009468:	9302      	str	r3, [sp, #8]
 800946a:	f44f 7388 	mov.w	r3, #272	; 0x110
 800946e:	9201      	str	r2, [sp, #4]
 8009470:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8009474:	9000      	str	r0, [sp, #0]
 8009476:	4608      	mov	r0, r1
 8009478:	9103      	str	r1, [sp, #12]
 800947a:	f003 ffbf 	bl	800d3fc <WM_CreateWindowAsChild>

}
 800947e:	b005      	add	sp, #20
 8009480:	f85d fb04 	ldr.w	pc, [sp], #4
 8009484:	08009221 	.word	0x08009221

08009488 <WriteDistance>:

void WriteDistance(int distance);
void WriteDistance(int distance)
{
 8009488:	b500      	push	{lr}
 800948a:	b083      	sub	sp, #12
	char distance_tmp[5];

	sprintf((char*)distance_tmp, "%d\r",distance);
 800948c:	4602      	mov	r2, r0
 800948e:	4908      	ldr	r1, [pc, #32]	; (80094b0 <WriteDistance+0x28>)
 8009490:	4668      	mov	r0, sp
 8009492:	f011 fb0b 	bl	801aaac <siprintf>
	EDIT_SetText(WM_GetDialogItem(hDialog_app,ID_EDIT_0),distance_tmp); // ispis pin diode
 8009496:	4b07      	ldr	r3, [pc, #28]	; (80094b4 <WriteDistance+0x2c>)
 8009498:	f640 0103 	movw	r1, #2051	; 0x803
 800949c:	6818      	ldr	r0, [r3, #0]
 800949e:	f003 f9d0 	bl	800c842 <WM_GetDialogItem>
 80094a2:	4669      	mov	r1, sp
 80094a4:	f002 fa2c 	bl	800b900 <EDIT_SetText>
}
 80094a8:	b003      	add	sp, #12
 80094aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80094ae:	bf00      	nop
 80094b0:	0801b36c 	.word	0x0801b36c
 80094b4:	20019bf8 	.word	0x20019bf8

080094b8 <START_Button>:
	else
		return true;
}

bool START_Button(void);
bool START_Button(void) {
 80094b8:	b508      	push	{r3, lr}

	if (BUTTON_IsPressed(WM_GetDialogItem(hDialog_app, ID_BUTTON_0)) == 0)
 80094ba:	4b06      	ldr	r3, [pc, #24]	; (80094d4 <START_Button+0x1c>)
 80094bc:	f640 0105 	movw	r1, #2053	; 0x805
 80094c0:	6818      	ldr	r0, [r3, #0]
 80094c2:	f003 f9be 	bl	800c842 <WM_GetDialogItem>
 80094c6:	f002 faeb 	bl	800baa0 <BUTTON_IsPressed>
		return false;
	else
		return true;
}
 80094ca:	3000      	adds	r0, #0
 80094cc:	bf18      	it	ne
 80094ce:	2001      	movne	r0, #1
 80094d0:	bd08      	pop	{r3, pc}
 80094d2:	bf00      	nop
 80094d4:	20019bf8 	.word	0x20019bf8

080094d8 <STOP_Button>:


bool STOP_Button(void);
bool STOP_Button(void) {
 80094d8:	b508      	push	{r3, lr}

	if (BUTTON_IsPressed(WM_GetDialogItem(hDialog_app, ID_BUTTON_1)) == 0)
 80094da:	4b06      	ldr	r3, [pc, #24]	; (80094f4 <STOP_Button+0x1c>)
 80094dc:	f640 0106 	movw	r1, #2054	; 0x806
 80094e0:	6818      	ldr	r0, [r3, #0]
 80094e2:	f003 f9ae 	bl	800c842 <WM_GetDialogItem>
 80094e6:	f002 fadb 	bl	800baa0 <BUTTON_IsPressed>
		return false;
	else
		return true;
}
 80094ea:	3000      	adds	r0, #0
 80094ec:	bf18      	it	ne
 80094ee:	2001      	movne	r0, #1
 80094f0:	bd08      	pop	{r3, pc}
 80094f2:	bf00      	nop
 80094f4:	20019bf8 	.word	0x20019bf8

080094f8 <Reset_Handler>:
 80094f8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8009530 <LoopFillZerobss+0x12>
 80094fc:	480d      	ldr	r0, [pc, #52]	; (8009534 <LoopFillZerobss+0x16>)
 80094fe:	490e      	ldr	r1, [pc, #56]	; (8009538 <LoopFillZerobss+0x1a>)
 8009500:	4a0e      	ldr	r2, [pc, #56]	; (800953c <LoopFillZerobss+0x1e>)
 8009502:	2300      	movs	r3, #0
 8009504:	e002      	b.n	800950c <LoopCopyDataInit>

08009506 <CopyDataInit>:
 8009506:	58d4      	ldr	r4, [r2, r3]
 8009508:	50c4      	str	r4, [r0, r3]
 800950a:	3304      	adds	r3, #4

0800950c <LoopCopyDataInit>:
 800950c:	18c4      	adds	r4, r0, r3
 800950e:	428c      	cmp	r4, r1
 8009510:	d3f9      	bcc.n	8009506 <CopyDataInit>
 8009512:	4a0b      	ldr	r2, [pc, #44]	; (8009540 <LoopFillZerobss+0x22>)
 8009514:	4c0b      	ldr	r4, [pc, #44]	; (8009544 <LoopFillZerobss+0x26>)
 8009516:	2300      	movs	r3, #0
 8009518:	e001      	b.n	800951e <LoopFillZerobss>

0800951a <FillZerobss>:
 800951a:	6013      	str	r3, [r2, #0]
 800951c:	3204      	adds	r2, #4

0800951e <LoopFillZerobss>:
 800951e:	42a2      	cmp	r2, r4
 8009520:	d3fb      	bcc.n	800951a <FillZerobss>
 8009522:	f7ff fe73 	bl	800920c <SystemInit>
 8009526:	f011 fa61 	bl	801a9ec <__libc_init_array>
 800952a:	f7ff fa73 	bl	8008a14 <main>
 800952e:	4770      	bx	lr
 8009530:	20050000 	.word	0x20050000
 8009534:	20000000 	.word	0x20000000
 8009538:	200003fc 	.word	0x200003fc
 800953c:	08021c7c 	.word	0x08021c7c
 8009540:	200003fc 	.word	0x200003fc
 8009544:	20019db0 	.word	0x20019db0

08009548 <ADC_IRQHandler>:
 8009548:	e7fe      	b.n	8009548 <ADC_IRQHandler>

0800954a <WINDOW_Callback>:
 800954a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800954e:	6845      	ldr	r5, [r0, #4]
 8009550:	4604      	mov	r4, r0
 8009552:	4628      	mov	r0, r5
 8009554:	f009 fdc4 	bl	80130e0 <GUI_ALLOC_LockH>
 8009558:	af02      	add	r7, sp, #8
 800955a:	6b86      	ldr	r6, [r0, #56]	; 0x38
 800955c:	f847 0d08 	str.w	r0, [r7, #-8]!
 8009560:	f8d0 9034 	ldr.w	r9, [r0, #52]	; 0x34
 8009564:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 8009568:	4668      	mov	r0, sp
 800956a:	f009 fdc7 	bl	80130fc <GUI_ALLOC_UnlockH>
 800956e:	6823      	ldr	r3, [r4, #0]
 8009570:	2b1f      	cmp	r3, #31
 8009572:	d02f      	beq.n	80095d4 <WINDOW_Callback+0x8a>
 8009574:	dc06      	bgt.n	8009584 <WINDOW_Callback+0x3a>
 8009576:	2b0f      	cmp	r3, #15
 8009578:	d060      	beq.n	800963c <WINDOW_Callback+0xf2>
 800957a:	2b1e      	cmp	r3, #30
 800957c:	d015      	beq.n	80095aa <WINDOW_Callback+0x60>
 800957e:	2b0e      	cmp	r3, #14
 8009580:	d169      	bne.n	8009656 <WINDOW_Callback+0x10c>
 8009582:	e04a      	b.n	800961a <WINDOW_Callback+0xd0>
 8009584:	2b22      	cmp	r3, #34	; 0x22
 8009586:	d063      	beq.n	8009650 <WINDOW_Callback+0x106>
 8009588:	2b2a      	cmp	r3, #42	; 0x2a
 800958a:	d002      	beq.n	8009592 <WINDOW_Callback+0x48>
 800958c:	2b20      	cmp	r3, #32
 800958e:	d162      	bne.n	8009656 <WINDOW_Callback+0x10c>
 8009590:	e025      	b.n	80095de <WINDOW_Callback+0x94>
 8009592:	4628      	mov	r0, r5
 8009594:	f009 fda4 	bl	80130e0 <GUI_ALLOC_LockH>
 8009598:	68e3      	ldr	r3, [r4, #12]
 800959a:	9000      	str	r0, [sp, #0]
 800959c:	b10b      	cbz	r3, 80095a2 <WINDOW_Callback+0x58>
 800959e:	63c3      	str	r3, [r0, #60]	; 0x3c
 80095a0:	e001      	b.n	80095a6 <WINDOW_Callback+0x5c>
 80095a2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80095a4:	60e3      	str	r3, [r4, #12]
 80095a6:	4668      	mov	r0, sp
 80095a8:	e034      	b.n	8009614 <WINDOW_Callback+0xca>
 80095aa:	68e4      	ldr	r4, [r4, #12]
 80095ac:	2c01      	cmp	r4, #1
 80095ae:	d15b      	bne.n	8009668 <WINDOW_Callback+0x11e>
 80095b0:	4630      	mov	r0, r6
 80095b2:	f003 f87d 	bl	800c6b0 <WM_IsWindow>
 80095b6:	2800      	cmp	r0, #0
 80095b8:	d03c      	beq.n	8009634 <WINDOW_Callback+0xea>
 80095ba:	4630      	mov	r0, r6
 80095bc:	f002 fe1a 	bl	800c1f4 <WM_SetFocus>
 80095c0:	4630      	mov	r0, r6
 80095c2:	f003 f8af 	bl	800c724 <WM_HasFocus>
 80095c6:	2800      	cmp	r0, #0
 80095c8:	d04e      	beq.n	8009668 <WINDOW_Callback+0x11e>
 80095ca:	4630      	mov	r0, r6
 80095cc:	4621      	mov	r1, r4
 80095ce:	f000 f938 	bl	8009842 <WIDGET_OrState>
 80095d2:	e049      	b.n	8009668 <WINDOW_Callback+0x11e>
 80095d4:	4628      	mov	r0, r5
 80095d6:	4621      	mov	r1, r4
 80095d8:	f000 f966 	bl	80098a8 <WIDGET_HandleActive>
 80095dc:	e044      	b.n	8009668 <WINDOW_Callback+0x11e>
 80095de:	4628      	mov	r0, r5
 80095e0:	f009 fd7e 	bl	80130e0 <GUI_ALLOC_LockH>
 80095e4:	68e4      	ldr	r4, [r4, #12]
 80095e6:	9001      	str	r0, [sp, #4]
 80095e8:	b19c      	cbz	r4, 8009612 <WINDOW_Callback+0xc8>
 80095ea:	6860      	ldr	r0, [r4, #4]
 80095ec:	4629      	mov	r1, r5
 80095ee:	f002 fc75 	bl	800bedc <WM__IsAncestorOrSelf>
 80095f2:	b930      	cbnz	r0, 8009602 <WINDOW_Callback+0xb8>
 80095f4:	6820      	ldr	r0, [r4, #0]
 80095f6:	4629      	mov	r1, r5
 80095f8:	f002 fc5f 	bl	800beba <WM__IsAncestor>
 80095fc:	b148      	cbz	r0, 8009612 <WINDOW_Callback+0xc8>
 80095fe:	6822      	ldr	r2, [r4, #0]
 8009600:	e005      	b.n	800960e <WINDOW_Callback+0xc4>
 8009602:	6860      	ldr	r0, [r4, #4]
 8009604:	4629      	mov	r1, r5
 8009606:	f002 fc58 	bl	800beba <WM__IsAncestor>
 800960a:	b110      	cbz	r0, 8009612 <WINDOW_Callback+0xc8>
 800960c:	6862      	ldr	r2, [r4, #4]
 800960e:	9b01      	ldr	r3, [sp, #4]
 8009610:	639a      	str	r2, [r3, #56]	; 0x38
 8009612:	a801      	add	r0, sp, #4
 8009614:	f009 fd72 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009618:	e026      	b.n	8009668 <WINDOW_Callback+0x11e>
 800961a:	68e3      	ldr	r3, [r4, #12]
 800961c:	685a      	ldr	r2, [r3, #4]
 800961e:	2a00      	cmp	r2, #0
 8009620:	dd19      	ble.n	8009656 <WINDOW_Callback+0x10c>
 8009622:	681b      	ldr	r3, [r3, #0]
 8009624:	2b09      	cmp	r3, #9
 8009626:	d005      	beq.n	8009634 <WINDOW_Callback+0xea>
 8009628:	2b0a      	cmp	r3, #10
 800962a:	d114      	bne.n	8009656 <WINDOW_Callback+0x10c>
 800962c:	4628      	mov	r0, r5
 800962e:	f002 fd7f 	bl	800c130 <WM_SetFocusOnPrevChild>
 8009632:	e019      	b.n	8009668 <WINDOW_Callback+0x11e>
 8009634:	4628      	mov	r0, r5
 8009636:	f002 fdab 	bl	800c190 <WM_SetFocusOnNextChild>
 800963a:	e015      	b.n	8009668 <WINDOW_Callback+0x11e>
 800963c:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8009640:	4598      	cmp	r8, r3
 8009642:	d008      	beq.n	8009656 <WINDOW_Callback+0x10c>
 8009644:	4640      	mov	r0, r8
 8009646:	f007 f967 	bl	8010918 <LCD_SetBkColor>
 800964a:	f009 f919 	bl	8012880 <GUI_Clear>
 800964e:	e002      	b.n	8009656 <WINDOW_Callback+0x10c>
 8009650:	f8c4 800c 	str.w	r8, [r4, #12]
 8009654:	e008      	b.n	8009668 <WINDOW_Callback+0x11e>
 8009656:	f1b9 0f00 	cmp.w	r9, #0
 800965a:	d002      	beq.n	8009662 <WINDOW_Callback+0x118>
 800965c:	4620      	mov	r0, r4
 800965e:	47c8      	blx	r9
 8009660:	e002      	b.n	8009668 <WINDOW_Callback+0x11e>
 8009662:	4620      	mov	r0, r4
 8009664:	f004 faac 	bl	800dbc0 <WM_DefaultProc>
 8009668:	b003      	add	sp, #12
 800966a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800966e <WINDOW_SetBkColor>:
 800966e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009670:	460d      	mov	r5, r1
 8009672:	4604      	mov	r4, r0
 8009674:	f009 fd34 	bl	80130e0 <GUI_ALLOC_LockH>
 8009678:	4602      	mov	r2, r0
 800967a:	a802      	add	r0, sp, #8
 800967c:	6415      	str	r5, [r2, #64]	; 0x40
 800967e:	f840 2d04 	str.w	r2, [r0, #-4]!
 8009682:	f009 fd3b 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009686:	4620      	mov	r0, r4
 8009688:	f003 fe77 	bl	800d37a <WM_InvalidateWindow>
 800968c:	b003      	add	sp, #12
 800968e:	bd30      	pop	{r4, r5, pc}

08009690 <WINDOW_CreateUser>:
 8009690:	b510      	push	{r4, lr}
 8009692:	b086      	sub	sp, #24
 8009694:	9c08      	ldr	r4, [sp, #32]
 8009696:	9400      	str	r4, [sp, #0]
 8009698:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800969a:	9401      	str	r4, [sp, #4]
 800969c:	4c0f      	ldr	r4, [pc, #60]	; (80096dc <WINDOW_CreateUser+0x4c>)
 800969e:	9402      	str	r4, [sp, #8]
 80096a0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80096a2:	3418      	adds	r4, #24
 80096a4:	9403      	str	r4, [sp, #12]
 80096a6:	f003 fea9 	bl	800d3fc <WM_CreateWindowAsChild>
 80096aa:	4604      	mov	r4, r0
 80096ac:	b190      	cbz	r0, 80096d4 <WINDOW_CreateUser+0x44>
 80096ae:	f009 fd17 	bl	80130e0 <GUI_ALLOC_LockH>
 80096b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80096b4:	9005      	str	r0, [sp, #20]
 80096b6:	2210      	movs	r2, #16
 80096b8:	f000 f8ee 	bl	8009898 <WIDGET__Init>
 80096bc:	a806      	add	r0, sp, #24
 80096be:	990c      	ldr	r1, [sp, #48]	; 0x30
 80096c0:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 80096c4:	6351      	str	r1, [r2, #52]	; 0x34
 80096c6:	2100      	movs	r1, #0
 80096c8:	6391      	str	r1, [r2, #56]	; 0x38
 80096ca:	4905      	ldr	r1, [pc, #20]	; (80096e0 <WINDOW_CreateUser+0x50>)
 80096cc:	6809      	ldr	r1, [r1, #0]
 80096ce:	6411      	str	r1, [r2, #64]	; 0x40
 80096d0:	f009 fd14 	bl	80130fc <GUI_ALLOC_UnlockH>
 80096d4:	4620      	mov	r0, r4
 80096d6:	b006      	add	sp, #24
 80096d8:	bd10      	pop	{r4, pc}
 80096da:	bf00      	nop
 80096dc:	0800954b 	.word	0x0800954b
 80096e0:	2000003c 	.word	0x2000003c

080096e4 <WINDOW_CreateIndirect>:
 80096e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80096e6:	b087      	sub	sp, #28
 80096e8:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80096ec:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80096f0:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80096f4:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80096f8:	9100      	str	r1, [sp, #0]
 80096fa:	8a41      	ldrh	r1, [r0, #18]
 80096fc:	9101      	str	r1, [sp, #4]
 80096fe:	2100      	movs	r1, #0
 8009700:	9102      	str	r1, [sp, #8]
 8009702:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8009706:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8009708:	9103      	str	r1, [sp, #12]
 800970a:	9404      	str	r4, [sp, #16]
 800970c:	6984      	ldr	r4, [r0, #24]
 800970e:	9405      	str	r4, [sp, #20]
 8009710:	eb0e 0002 	add.w	r0, lr, r2
 8009714:	18f9      	adds	r1, r7, r3
 8009716:	4632      	mov	r2, r6
 8009718:	462b      	mov	r3, r5
 800971a:	f7ff ffb9 	bl	8009690 <WINDOW_CreateUser>
 800971e:	b007      	add	sp, #28
 8009720:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009722 <_EffectRequiresRedraw>:
 8009722:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009724:	460d      	mov	r5, r1
 8009726:	f100 0108 	add.w	r1, r0, #8
 800972a:	4602      	mov	r2, r0
 800972c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800972e:	c903      	ldmia	r1, {r0, r1}
 8009730:	681c      	ldr	r4, [r3, #0]
 8009732:	e88d 0003 	stmia.w	sp, {r0, r1}
 8009736:	4610      	mov	r0, r2
 8009738:	4669      	mov	r1, sp
 800973a:	f002 fb98 	bl	800be6e <WM__Screen2Client>
 800973e:	f9b5 2000 	ldrsh.w	r2, [r5]
 8009742:	f9bd 3000 	ldrsh.w	r3, [sp]
 8009746:	4422      	add	r2, r4
 8009748:	429a      	cmp	r2, r3
 800974a:	dc17      	bgt.n	800977c <_EffectRequiresRedraw+0x5a>
 800974c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009750:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8009754:	1b12      	subs	r2, r2, r4
 8009756:	429a      	cmp	r2, r3
 8009758:	db10      	blt.n	800977c <_EffectRequiresRedraw+0x5a>
 800975a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800975e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8009762:	4422      	add	r2, r4
 8009764:	429a      	cmp	r2, r3
 8009766:	dc09      	bgt.n	800977c <_EffectRequiresRedraw+0x5a>
 8009768:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 800976c:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8009770:	1b04      	subs	r4, r0, r4
 8009772:	429c      	cmp	r4, r3
 8009774:	bfac      	ite	ge
 8009776:	2000      	movge	r0, #0
 8009778:	2001      	movlt	r0, #1
 800977a:	e000      	b.n	800977e <_EffectRequiresRedraw+0x5c>
 800977c:	2001      	movs	r0, #1
 800977e:	b003      	add	sp, #12
 8009780:	bd30      	pop	{r4, r5, pc}

08009782 <WIDGET__RotateRect90>:
 8009782:	f9b0 3000 	ldrsh.w	r3, [r0]
 8009786:	b570      	push	{r4, r5, r6, lr}
 8009788:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800978c:	8815      	ldrh	r5, [r2, #0]
 800978e:	88d0      	ldrh	r0, [r2, #6]
 8009790:	8894      	ldrh	r4, [r2, #4]
 8009792:	8852      	ldrh	r2, [r2, #2]
 8009794:	804d      	strh	r5, [r1, #2]
 8009796:	1af3      	subs	r3, r6, r3
 8009798:	b29b      	uxth	r3, r3
 800979a:	1a18      	subs	r0, r3, r0
 800979c:	1a9b      	subs	r3, r3, r2
 800979e:	8008      	strh	r0, [r1, #0]
 80097a0:	808b      	strh	r3, [r1, #4]
 80097a2:	80cc      	strh	r4, [r1, #6]
 80097a4:	bd70      	pop	{r4, r5, r6, pc}

080097a6 <WIDGET__GetClientRect>:
 80097a6:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80097a8:	071b      	lsls	r3, r3, #28
 80097aa:	b513      	push	{r0, r1, r4, lr}
 80097ac:	460c      	mov	r4, r1
 80097ae:	d50f      	bpl.n	80097d0 <WIDGET__GetClientRect+0x2a>
 80097b0:	4668      	mov	r0, sp
 80097b2:	f003 f883 	bl	800c8bc <WM_GetClientRect>
 80097b6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80097ba:	8023      	strh	r3, [r4, #0]
 80097bc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80097c0:	80a3      	strh	r3, [r4, #4]
 80097c2:	f8bd 3000 	ldrh.w	r3, [sp]
 80097c6:	8063      	strh	r3, [r4, #2]
 80097c8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80097cc:	80e3      	strh	r3, [r4, #6]
 80097ce:	e002      	b.n	80097d6 <WIDGET__GetClientRect+0x30>
 80097d0:	4608      	mov	r0, r1
 80097d2:	f003 f873 	bl	800c8bc <WM_GetClientRect>
 80097d6:	b002      	add	sp, #8
 80097d8:	bd10      	pop	{r4, pc}

080097da <WIDGET__GetInsideRect>:
 80097da:	b538      	push	{r3, r4, r5, lr}
 80097dc:	4604      	mov	r4, r0
 80097de:	460d      	mov	r5, r1
 80097e0:	f003 fd83 	bl	800d2ea <WM__GetClientRectWin>
 80097e4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80097e6:	4628      	mov	r0, r5
 80097e8:	4629      	mov	r1, r5
 80097ea:	681a      	ldr	r2, [r3, #0]
 80097ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80097f0:	f007 b935 	b.w	8010a5e <GUI__ReduceRect>

080097f4 <WIDGET__GetWindowSizeX>:
 80097f4:	b513      	push	{r0, r1, r4, lr}
 80097f6:	4604      	mov	r4, r0
 80097f8:	f009 fc72 	bl	80130e0 <GUI_ALLOC_LockH>
 80097fc:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80097fe:	9001      	str	r0, [sp, #4]
 8009800:	071b      	lsls	r3, r3, #28
 8009802:	4620      	mov	r0, r4
 8009804:	d502      	bpl.n	800980c <WIDGET__GetWindowSizeX+0x18>
 8009806:	f002 ffb0 	bl	800c76a <WM_GetWindowSizeY>
 800980a:	e001      	b.n	8009810 <WIDGET__GetWindowSizeX+0x1c>
 800980c:	f002 ff98 	bl	800c740 <WM_GetWindowSizeX>
 8009810:	4604      	mov	r4, r0
 8009812:	a801      	add	r0, sp, #4
 8009814:	f009 fc72 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009818:	4620      	mov	r0, r4
 800981a:	b002      	add	sp, #8
 800981c:	bd10      	pop	{r4, pc}

0800981e <WIDGET_SetState>:
 800981e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009820:	460c      	mov	r4, r1
 8009822:	4605      	mov	r5, r0
 8009824:	f009 fc5c 	bl	80130e0 <GUI_ALLOC_LockH>
 8009828:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800982a:	9001      	str	r0, [sp, #4]
 800982c:	4294      	cmp	r4, r2
 800982e:	d003      	beq.n	8009838 <WIDGET_SetState+0x1a>
 8009830:	8644      	strh	r4, [r0, #50]	; 0x32
 8009832:	4628      	mov	r0, r5
 8009834:	f003 fda1 	bl	800d37a <WM_InvalidateWindow>
 8009838:	a801      	add	r0, sp, #4
 800983a:	f009 fc5f 	bl	80130fc <GUI_ALLOC_UnlockH>
 800983e:	b003      	add	sp, #12
 8009840:	bd30      	pop	{r4, r5, pc}

08009842 <WIDGET_OrState>:
 8009842:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009844:	460c      	mov	r4, r1
 8009846:	4605      	mov	r5, r0
 8009848:	b178      	cbz	r0, 800986a <WIDGET_OrState+0x28>
 800984a:	f009 fc49 	bl	80130e0 <GUI_ALLOC_LockH>
 800984e:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8009850:	9001      	str	r0, [sp, #4]
 8009852:	ea04 0102 	and.w	r1, r4, r2
 8009856:	428c      	cmp	r4, r1
 8009858:	d004      	beq.n	8009864 <WIDGET_OrState+0x22>
 800985a:	4314      	orrs	r4, r2
 800985c:	8644      	strh	r4, [r0, #50]	; 0x32
 800985e:	4628      	mov	r0, r5
 8009860:	f003 fd8b 	bl	800d37a <WM_InvalidateWindow>
 8009864:	a801      	add	r0, sp, #4
 8009866:	f009 fc49 	bl	80130fc <GUI_ALLOC_UnlockH>
 800986a:	b003      	add	sp, #12
 800986c:	bd30      	pop	{r4, r5, pc}

0800986e <WIDGET_AndState>:
 800986e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009870:	460d      	mov	r5, r1
 8009872:	4604      	mov	r4, r0
 8009874:	b170      	cbz	r0, 8009894 <WIDGET_AndState+0x26>
 8009876:	f009 fc33 	bl	80130e0 <GUI_ALLOC_LockH>
 800987a:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800987c:	9001      	str	r0, [sp, #4]
 800987e:	ea22 0105 	bic.w	r1, r2, r5
 8009882:	428a      	cmp	r2, r1
 8009884:	d003      	beq.n	800988e <WIDGET_AndState+0x20>
 8009886:	8641      	strh	r1, [r0, #50]	; 0x32
 8009888:	4620      	mov	r0, r4
 800988a:	f003 fd76 	bl	800d37a <WM_InvalidateWindow>
 800988e:	a801      	add	r0, sp, #4
 8009890:	f009 fc34 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009894:	b003      	add	sp, #12
 8009896:	bd30      	pop	{r4, r5, pc}

08009898 <WIDGET__Init>:
 8009898:	4b02      	ldr	r3, [pc, #8]	; (80098a4 <WIDGET__Init+0xc>)
 800989a:	8642      	strh	r2, [r0, #50]	; 0x32
 800989c:	681b      	ldr	r3, [r3, #0]
 800989e:	62c3      	str	r3, [r0, #44]	; 0x2c
 80098a0:	8601      	strh	r1, [r0, #48]	; 0x30
 80098a2:	4770      	bx	lr
 80098a4:	20000040 	.word	0x20000040

080098a8 <WIDGET_HandleActive>:
 80098a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80098aa:	460d      	mov	r5, r1
 80098ac:	b085      	sub	sp, #20
 80098ae:	4606      	mov	r6, r0
 80098b0:	2800      	cmp	r0, #0
 80098b2:	f000 8093 	beq.w	80099dc <WIDGET_HandleActive+0x134>
 80098b6:	f009 fc13 	bl	80130e0 <GUI_ALLOC_LockH>
 80098ba:	682b      	ldr	r3, [r5, #0]
 80098bc:	9002      	str	r0, [sp, #8]
 80098be:	2b16      	cmp	r3, #22
 80098c0:	d052      	beq.n	8009968 <WIDGET_HandleActive+0xc0>
 80098c2:	dc0c      	bgt.n	80098de <WIDGET_HandleActive+0x36>
 80098c4:	2b11      	cmp	r3, #17
 80098c6:	d033      	beq.n	8009930 <WIDGET_HandleActive+0x88>
 80098c8:	dc02      	bgt.n	80098d0 <WIDGET_HandleActive+0x28>
 80098ca:	2b0d      	cmp	r3, #13
 80098cc:	d03e      	beq.n	800994c <WIDGET_HandleActive+0xa4>
 80098ce:	e07e      	b.n	80099ce <WIDGET_HandleActive+0x126>
 80098d0:	2b14      	cmp	r3, #20
 80098d2:	d077      	beq.n	80099c4 <WIDGET_HandleActive+0x11c>
 80098d4:	2b15      	cmp	r3, #21
 80098d6:	d17a      	bne.n	80099ce <WIDGET_HandleActive+0x126>
 80098d8:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 80098dc:	e070      	b.n	80099c0 <WIDGET_HandleActive+0x118>
 80098de:	2b1f      	cmp	r3, #31
 80098e0:	d06b      	beq.n	80099ba <WIDGET_HandleActive+0x112>
 80098e2:	dc02      	bgt.n	80098ea <WIDGET_HandleActive+0x42>
 80098e4:	2b1e      	cmp	r3, #30
 80098e6:	d042      	beq.n	800996e <WIDGET_HandleActive+0xc6>
 80098e8:	e071      	b.n	80099ce <WIDGET_HandleActive+0x126>
 80098ea:	2b31      	cmp	r3, #49	; 0x31
 80098ec:	d01e      	beq.n	800992c <WIDGET_HandleActive+0x84>
 80098ee:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80098f2:	d16c      	bne.n	80099ce <WIDGET_HandleActive+0x126>
 80098f4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80098f6:	6819      	ldr	r1, [r3, #0]
 80098f8:	68eb      	ldr	r3, [r5, #12]
 80098fa:	62c3      	str	r3, [r0, #44]	; 0x2c
 80098fc:	681b      	ldr	r3, [r3, #0]
 80098fe:	a802      	add	r0, sp, #8
 8009900:	1acd      	subs	r5, r1, r3
 8009902:	f009 fbfb 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009906:	4630      	mov	r0, r6
 8009908:	f009 fbea 	bl	80130e0 <GUI_ALLOC_LockH>
 800990c:	ac04      	add	r4, sp, #16
 800990e:	4269      	negs	r1, r5
 8009910:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009914:	460a      	mov	r2, r1
 8009916:	462b      	mov	r3, r5
 8009918:	9500      	str	r5, [sp, #0]
 800991a:	f002 fa2e 	bl	800bd7a <WM__UpdateChildPositions>
 800991e:	4620      	mov	r0, r4
 8009920:	f009 fbec 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009924:	4630      	mov	r0, r6
 8009926:	f003 fd28 	bl	800d37a <WM_InvalidateWindow>
 800992a:	e04e      	b.n	80099ca <WIDGET_HandleActive+0x122>
 800992c:	2400      	movs	r4, #0
 800992e:	e03f      	b.n	80099b0 <WIDGET_HandleActive+0x108>
 8009930:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8009932:	06d9      	lsls	r1, r3, #27
 8009934:	d54b      	bpl.n	80099ce <WIDGET_HandleActive+0x126>
 8009936:	68eb      	ldr	r3, [r5, #12]
 8009938:	7a1b      	ldrb	r3, [r3, #8]
 800993a:	2b00      	cmp	r3, #0
 800993c:	d047      	beq.n	80099ce <WIDGET_HandleActive+0x126>
 800993e:	a802      	add	r0, sp, #8
 8009940:	f009 fbdc 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009944:	4630      	mov	r0, r6
 8009946:	f002 fc55 	bl	800c1f4 <WM_SetFocus>
 800994a:	e040      	b.n	80099ce <WIDGET_HandleActive+0x126>
 800994c:	68eb      	ldr	r3, [r5, #12]
 800994e:	68db      	ldr	r3, [r3, #12]
 8009950:	2b00      	cmp	r3, #0
 8009952:	d03c      	beq.n	80099ce <WIDGET_HandleActive+0x126>
 8009954:	7a1b      	ldrb	r3, [r3, #8]
 8009956:	2b00      	cmp	r3, #0
 8009958:	d039      	beq.n	80099ce <WIDGET_HandleActive+0x126>
 800995a:	a802      	add	r0, sp, #8
 800995c:	f009 fbce 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009960:	4630      	mov	r0, r6
 8009962:	f002 ffcb 	bl	800c8fc <WM_BringToTop>
 8009966:	e030      	b.n	80099ca <WIDGET_HandleActive+0x122>
 8009968:	68eb      	ldr	r3, [r5, #12]
 800996a:	8603      	strh	r3, [r0, #48]	; 0x30
 800996c:	e02d      	b.n	80099ca <WIDGET_HandleActive+0x122>
 800996e:	68eb      	ldr	r3, [r5, #12]
 8009970:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 8009972:	2b01      	cmp	r3, #1
 8009974:	d108      	bne.n	8009988 <WIDGET_HandleActive+0xe0>
 8009976:	06ca      	lsls	r2, r1, #27
 8009978:	d50d      	bpl.n	8009996 <WIDGET_HandleActive+0xee>
 800997a:	4630      	mov	r0, r6
 800997c:	f041 0101 	orr.w	r1, r1, #1
 8009980:	f7ff ff4d 	bl	800981e <WIDGET_SetState>
 8009984:	2708      	movs	r7, #8
 8009986:	e008      	b.n	800999a <WIDGET_HandleActive+0xf2>
 8009988:	f021 0101 	bic.w	r1, r1, #1
 800998c:	4630      	mov	r0, r6
 800998e:	f7ff ff46 	bl	800981e <WIDGET_SetState>
 8009992:	2709      	movs	r7, #9
 8009994:	e001      	b.n	800999a <WIDGET_HandleActive+0xf2>
 8009996:	f04f 37ff 	mov.w	r7, #4294967295
 800999a:	a802      	add	r0, sp, #8
 800999c:	f009 fbae 	bl	80130fc <GUI_ALLOC_UnlockH>
 80099a0:	1c7b      	adds	r3, r7, #1
 80099a2:	f04f 0400 	mov.w	r4, #0
 80099a6:	d005      	beq.n	80099b4 <WIDGET_HandleActive+0x10c>
 80099a8:	4630      	mov	r0, r6
 80099aa:	4639      	mov	r1, r7
 80099ac:	f002 fd91 	bl	800c4d2 <WM_NotifyParent>
 80099b0:	60ec      	str	r4, [r5, #12]
 80099b2:	e00d      	b.n	80099d0 <WIDGET_HandleActive+0x128>
 80099b4:	2301      	movs	r3, #1
 80099b6:	60eb      	str	r3, [r5, #12]
 80099b8:	e00a      	b.n	80099d0 <WIDGET_HandleActive+0x128>
 80099ba:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80099bc:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80099c0:	60eb      	str	r3, [r5, #12]
 80099c2:	e002      	b.n	80099ca <WIDGET_HandleActive+0x122>
 80099c4:	68e9      	ldr	r1, [r5, #12]
 80099c6:	f7ff ff08 	bl	80097da <WIDGET__GetInsideRect>
 80099ca:	2400      	movs	r4, #0
 80099cc:	e000      	b.n	80099d0 <WIDGET_HandleActive+0x128>
 80099ce:	2401      	movs	r4, #1
 80099d0:	9b02      	ldr	r3, [sp, #8]
 80099d2:	b123      	cbz	r3, 80099de <WIDGET_HandleActive+0x136>
 80099d4:	a802      	add	r0, sp, #8
 80099d6:	f009 fb91 	bl	80130fc <GUI_ALLOC_UnlockH>
 80099da:	e000      	b.n	80099de <WIDGET_HandleActive+0x136>
 80099dc:	2401      	movs	r4, #1
 80099de:	4620      	mov	r0, r4
 80099e0:	b005      	add	sp, #20
 80099e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080099e4 <WIDGET__FillRectEx>:
 80099e4:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80099e6:	071b      	lsls	r3, r3, #28
 80099e8:	b507      	push	{r0, r1, r2, lr}
 80099ea:	460a      	mov	r2, r1
 80099ec:	d503      	bpl.n	80099f6 <WIDGET__FillRectEx+0x12>
 80099ee:	4669      	mov	r1, sp
 80099f0:	f7ff fec7 	bl	8009782 <WIDGET__RotateRect90>
 80099f4:	466a      	mov	r2, sp
 80099f6:	4610      	mov	r0, r2
 80099f8:	f008 fbf6 	bl	80121e8 <GUI_FillRectEx>
 80099fc:	b003      	add	sp, #12
 80099fe:	f85d fb04 	ldr.w	pc, [sp], #4

08009a02 <WIDGET__DrawTriangle>:
 8009a02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009a04:	461c      	mov	r4, r3
 8009a06:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8009a08:	9f06      	ldr	r7, [sp, #24]
 8009a0a:	071b      	lsls	r3, r3, #28
 8009a0c:	460d      	mov	r5, r1
 8009a0e:	4616      	mov	r6, r2
 8009a10:	d50a      	bpl.n	8009a28 <WIDGET__DrawTriangle+0x26>
 8009a12:	2c00      	cmp	r4, #0
 8009a14:	db07      	blt.n	8009a26 <WIDGET__DrawTriangle+0x24>
 8009a16:	4628      	mov	r0, r5
 8009a18:	1b31      	subs	r1, r6, r4
 8009a1a:	19a2      	adds	r2, r4, r6
 8009a1c:	f008 fc58 	bl	80122d0 <GUI_DrawHLine>
 8009a20:	3c01      	subs	r4, #1
 8009a22:	443d      	add	r5, r7
 8009a24:	e7f5      	b.n	8009a12 <WIDGET__DrawTriangle+0x10>
 8009a26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a28:	2c00      	cmp	r4, #0
 8009a2a:	db07      	blt.n	8009a3c <WIDGET__DrawTriangle+0x3a>
 8009a2c:	4628      	mov	r0, r5
 8009a2e:	1b31      	subs	r1, r6, r4
 8009a30:	19a2      	adds	r2, r4, r6
 8009a32:	f008 fc2b 	bl	801228c <GUI_DrawVLine>
 8009a36:	3c01      	subs	r4, #1
 8009a38:	443d      	add	r5, r7
 8009a3a:	e7f5      	b.n	8009a28 <WIDGET__DrawTriangle+0x26>
 8009a3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08009a3e <WIDGET__EFFECT_DrawDownRect>:
 8009a3e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a40:	4605      	mov	r5, r0
 8009a42:	460c      	mov	r4, r1
 8009a44:	b919      	cbnz	r1, 8009a4e <WIDGET__EFFECT_DrawDownRect+0x10>
 8009a46:	4668      	mov	r0, sp
 8009a48:	f002 ff38 	bl	800c8bc <WM_GetClientRect>
 8009a4c:	466c      	mov	r4, sp
 8009a4e:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 8009a50:	071b      	lsls	r3, r3, #28
 8009a52:	d505      	bpl.n	8009a60 <WIDGET__EFFECT_DrawDownRect+0x22>
 8009a54:	4622      	mov	r2, r4
 8009a56:	4628      	mov	r0, r5
 8009a58:	4669      	mov	r1, sp
 8009a5a:	f7ff fe92 	bl	8009782 <WIDGET__RotateRect90>
 8009a5e:	466c      	mov	r4, sp
 8009a60:	4628      	mov	r0, r5
 8009a62:	4621      	mov	r1, r4
 8009a64:	f7ff fe5d 	bl	8009722 <_EffectRequiresRedraw>
 8009a68:	b118      	cbz	r0, 8009a72 <WIDGET__EFFECT_DrawDownRect+0x34>
 8009a6a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8009a6c:	4620      	mov	r0, r4
 8009a6e:	691b      	ldr	r3, [r3, #16]
 8009a70:	4798      	blx	r3
 8009a72:	b003      	add	sp, #12
 8009a74:	bd30      	pop	{r4, r5, pc}

08009a76 <WIDGET__EFFECT_DrawDown>:
 8009a76:	2100      	movs	r1, #0
 8009a78:	f7ff bfe1 	b.w	8009a3e <WIDGET__EFFECT_DrawDownRect>

08009a7c <TEXT_SetFont>:
 8009a7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a7e:	460c      	mov	r4, r1
 8009a80:	4605      	mov	r5, r0
 8009a82:	b160      	cbz	r0, 8009a9e <TEXT_SetFont+0x22>
 8009a84:	f009 fb2c 	bl	80130e0 <GUI_ALLOC_LockH>
 8009a88:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8009a8a:	9001      	str	r0, [sp, #4]
 8009a8c:	42a2      	cmp	r2, r4
 8009a8e:	d003      	beq.n	8009a98 <TEXT_SetFont+0x1c>
 8009a90:	6344      	str	r4, [r0, #52]	; 0x34
 8009a92:	4628      	mov	r0, r5
 8009a94:	f003 fc71 	bl	800d37a <WM_InvalidateWindow>
 8009a98:	a801      	add	r0, sp, #4
 8009a9a:	f009 fb2f 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009a9e:	b003      	add	sp, #12
 8009aa0:	bd30      	pop	{r4, r5, pc}

08009aa2 <TEXT_CreateIndirect>:
 8009aa2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009aa4:	b087      	sub	sp, #28
 8009aa6:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8009aaa:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8009aae:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8009ab2:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8009ab6:	9100      	str	r1, [sp, #0]
 8009ab8:	2102      	movs	r1, #2
 8009aba:	9101      	str	r1, [sp, #4]
 8009abc:	8a41      	ldrh	r1, [r0, #18]
 8009abe:	9102      	str	r1, [sp, #8]
 8009ac0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8009ac4:	9103      	str	r1, [sp, #12]
 8009ac6:	6844      	ldr	r4, [r0, #4]
 8009ac8:	9404      	str	r4, [sp, #16]
 8009aca:	6984      	ldr	r4, [r0, #24]
 8009acc:	9405      	str	r4, [sp, #20]
 8009ace:	eb0e 0002 	add.w	r0, lr, r2
 8009ad2:	18f9      	adds	r1, r7, r3
 8009ad4:	4632      	mov	r2, r6
 8009ad6:	462b      	mov	r3, r5
 8009ad8:	f000 f866 	bl	8009ba8 <TEXT_CreateUser>
 8009adc:	b007      	add	sp, #28
 8009ade:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009ae0 <TEXT_Callback>:
 8009ae0:	b530      	push	{r4, r5, lr}
 8009ae2:	6845      	ldr	r5, [r0, #4]
 8009ae4:	4604      	mov	r4, r0
 8009ae6:	b085      	sub	sp, #20
 8009ae8:	4628      	mov	r0, r5
 8009aea:	4621      	mov	r1, r4
 8009aec:	f7ff fedc 	bl	80098a8 <WIDGET_HandleActive>
 8009af0:	2800      	cmp	r0, #0
 8009af2:	d056      	beq.n	8009ba2 <TEXT_Callback+0xc2>
 8009af4:	6823      	ldr	r3, [r4, #0]
 8009af6:	2b0f      	cmp	r3, #15
 8009af8:	d01e      	beq.n	8009b38 <TEXT_Callback+0x58>
 8009afa:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009afe:	d00e      	beq.n	8009b1e <TEXT_Callback+0x3e>
 8009b00:	2b0b      	cmp	r3, #11
 8009b02:	d14b      	bne.n	8009b9c <TEXT_Callback+0xbc>
 8009b04:	4628      	mov	r0, r5
 8009b06:	f009 faeb 	bl	80130e0 <GUI_ALLOC_LockH>
 8009b0a:	ad04      	add	r5, sp, #16
 8009b0c:	f845 0d08 	str.w	r0, [r5, #-8]!
 8009b10:	3044      	adds	r0, #68	; 0x44
 8009b12:	f009 fd3d 	bl	8013590 <GUI_ALLOC_FreePtr>
 8009b16:	4628      	mov	r0, r5
 8009b18:	f009 faf0 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009b1c:	e03e      	b.n	8009b9c <TEXT_Callback+0xbc>
 8009b1e:	68e3      	ldr	r3, [r4, #12]
 8009b20:	b12b      	cbz	r3, 8009b2e <TEXT_Callback+0x4e>
 8009b22:	7a1b      	ldrb	r3, [r3, #8]
 8009b24:	2b00      	cmp	r3, #0
 8009b26:	bf0c      	ite	eq
 8009b28:	2102      	moveq	r1, #2
 8009b2a:	2101      	movne	r1, #1
 8009b2c:	e000      	b.n	8009b30 <TEXT_Callback+0x50>
 8009b2e:	2103      	movs	r1, #3
 8009b30:	4628      	mov	r0, r5
 8009b32:	f002 fcce 	bl	800c4d2 <WM_NotifyParent>
 8009b36:	e031      	b.n	8009b9c <TEXT_Callback+0xbc>
 8009b38:	4628      	mov	r0, r5
 8009b3a:	f009 fad1 	bl	80130e0 <GUI_ALLOC_LockH>
 8009b3e:	9000      	str	r0, [sp, #0]
 8009b40:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8009b42:	f006 fef1 	bl	8010928 <LCD_SetColor>
 8009b46:	9b00      	ldr	r3, [sp, #0]
 8009b48:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8009b4a:	f008 f8ab 	bl	8011ca4 <GUI_SetFont>
 8009b4e:	4628      	mov	r0, r5
 8009b50:	f002 fab2 	bl	800c0b8 <WM_GetHasTrans>
 8009b54:	b928      	cbnz	r0, 8009b62 <TEXT_Callback+0x82>
 8009b56:	9b00      	ldr	r3, [sp, #0]
 8009b58:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8009b5a:	f006 fedd 	bl	8010918 <LCD_SetBkColor>
 8009b5e:	f008 fe8f 	bl	8012880 <GUI_Clear>
 8009b62:	9b00      	ldr	r3, [sp, #0]
 8009b64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009b66:	b1ab      	cbz	r3, 8009b94 <TEXT_Callback+0xb4>
 8009b68:	2002      	movs	r0, #2
 8009b6a:	f008 f891 	bl	8011c90 <GUI_SetTextMode>
 8009b6e:	a802      	add	r0, sp, #8
 8009b70:	f002 fea4 	bl	800c8bc <WM_GetClientRect>
 8009b74:	9b00      	ldr	r3, [sp, #0]
 8009b76:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8009b78:	f009 fab2 	bl	80130e0 <GUI_ALLOC_LockH>
 8009b7c:	9b00      	ldr	r3, [sp, #0]
 8009b7e:	9001      	str	r0, [sp, #4]
 8009b80:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 8009b84:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8009b88:	a902      	add	r1, sp, #8
 8009b8a:	f008 fc25 	bl	80123d8 <GUI_DispStringInRectWrap>
 8009b8e:	a801      	add	r0, sp, #4
 8009b90:	f009 fab4 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009b94:	4668      	mov	r0, sp
 8009b96:	f009 fab1 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009b9a:	e002      	b.n	8009ba2 <TEXT_Callback+0xc2>
 8009b9c:	4620      	mov	r0, r4
 8009b9e:	f004 f80f 	bl	800dbc0 <WM_DefaultProc>
 8009ba2:	b005      	add	sp, #20
 8009ba4:	bd30      	pop	{r4, r5, pc}
	...

08009ba8 <TEXT_CreateUser>:
 8009ba8:	b570      	push	{r4, r5, r6, lr}
 8009baa:	b086      	sub	sp, #24
 8009bac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009bae:	9500      	str	r5, [sp, #0]
 8009bb0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8009bb2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8009bb4:	f045 0501 	orr.w	r5, r5, #1
 8009bb8:	9501      	str	r5, [sp, #4]
 8009bba:	4d1a      	ldr	r5, [pc, #104]	; (8009c24 <TEXT_CreateUser+0x7c>)
 8009bbc:	9502      	str	r5, [sp, #8]
 8009bbe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8009bc0:	3520      	adds	r5, #32
 8009bc2:	9503      	str	r5, [sp, #12]
 8009bc4:	f003 fc1a 	bl	800d3fc <WM_CreateWindowAsChild>
 8009bc8:	4605      	mov	r5, r0
 8009bca:	b340      	cbz	r0, 8009c1e <TEXT_CreateUser+0x76>
 8009bcc:	b18c      	cbz	r4, 8009bf2 <TEXT_CreateUser+0x4a>
 8009bce:	4620      	mov	r0, r4
 8009bd0:	f7f6 fb1e 	bl	8000210 <strlen>
 8009bd4:	3001      	adds	r0, #1
 8009bd6:	f009 fcf0 	bl	80135ba <GUI_ALLOC_AllocZero>
 8009bda:	4606      	mov	r6, r0
 8009bdc:	b150      	cbz	r0, 8009bf4 <TEXT_CreateUser+0x4c>
 8009bde:	f009 fa7f 	bl	80130e0 <GUI_ALLOC_LockH>
 8009be2:	4621      	mov	r1, r4
 8009be4:	9005      	str	r0, [sp, #20]
 8009be6:	f010 ff81 	bl	801aaec <strcpy>
 8009bea:	a805      	add	r0, sp, #20
 8009bec:	f009 fa86 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009bf0:	e000      	b.n	8009bf4 <TEXT_CreateUser+0x4c>
 8009bf2:	4626      	mov	r6, r4
 8009bf4:	4628      	mov	r0, r5
 8009bf6:	f009 fa73 	bl	80130e0 <GUI_ALLOC_LockH>
 8009bfa:	990d      	ldr	r1, [sp, #52]	; 0x34
 8009bfc:	9005      	str	r0, [sp, #20]
 8009bfe:	2200      	movs	r2, #0
 8009c00:	f7ff fe4a 	bl	8009898 <WIDGET__Init>
 8009c04:	9c05      	ldr	r4, [sp, #20]
 8009c06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009c08:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 8009c0c:	4b06      	ldr	r3, [pc, #24]	; (8009c28 <TEXT_CreateUser+0x80>)
 8009c0e:	6466      	str	r6, [r4, #68]	; 0x44
 8009c10:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8009c12:	3434      	adds	r4, #52	; 0x34
 8009c14:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009c18:	a805      	add	r0, sp, #20
 8009c1a:	f009 fa6f 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009c1e:	4628      	mov	r0, r5
 8009c20:	b006      	add	sp, #24
 8009c22:	bd70      	pop	{r4, r5, r6, pc}
 8009c24:	08009ae1 	.word	0x08009ae1
 8009c28:	20000044 	.word	0x20000044

08009c2c <SLIDER_CreateIndirect>:
 8009c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009c2e:	b087      	sub	sp, #28
 8009c30:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8009c34:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8009c38:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8009c3c:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8009c40:	9100      	str	r1, [sp, #0]
 8009c42:	2100      	movs	r1, #0
 8009c44:	9101      	str	r1, [sp, #4]
 8009c46:	8a41      	ldrh	r1, [r0, #18]
 8009c48:	9102      	str	r1, [sp, #8]
 8009c4a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8009c4e:	9103      	str	r1, [sp, #12]
 8009c50:	6984      	ldr	r4, [r0, #24]
 8009c52:	9404      	str	r4, [sp, #16]
 8009c54:	eb0e 0002 	add.w	r0, lr, r2
 8009c58:	18f9      	adds	r1, r7, r3
 8009c5a:	4632      	mov	r2, r6
 8009c5c:	462b      	mov	r3, r5
 8009c5e:	f000 f803 	bl	8009c68 <SLIDER_CreateUser>
 8009c62:	b007      	add	sp, #28
 8009c64:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08009c68 <SLIDER_CreateUser>:
 8009c68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c6c:	b086      	sub	sp, #24
 8009c6e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8009c70:	9400      	str	r4, [sp, #0]
 8009c72:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8009c74:	f044 0401 	orr.w	r4, r4, #1
 8009c78:	9401      	str	r4, [sp, #4]
 8009c7a:	4c1c      	ldr	r4, [pc, #112]	; (8009cec <SLIDER_CreateUser+0x84>)
 8009c7c:	9402      	str	r4, [sp, #8]
 8009c7e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8009c80:	3438      	adds	r4, #56	; 0x38
 8009c82:	9403      	str	r4, [sp, #12]
 8009c84:	f003 fbba 	bl	800d3fc <WM_CreateWindowAsChild>
 8009c88:	4680      	mov	r8, r0
 8009c8a:	b358      	cbz	r0, 8009ce4 <SLIDER_CreateUser+0x7c>
 8009c8c:	f009 fa28 	bl	80130e0 <GUI_ALLOC_LockH>
 8009c90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009c92:	4d17      	ldr	r5, [pc, #92]	; (8009cf0 <SLIDER_CreateUser+0x88>)
 8009c94:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8009c96:	9005      	str	r0, [sp, #20]
 8009c98:	f013 0f08 	tst.w	r3, #8
 8009c9c:	bf14      	ite	ne
 8009c9e:	2218      	movne	r2, #24
 8009ca0:	2210      	moveq	r2, #16
 8009ca2:	f7ff fdf9 	bl	8009898 <WIDGET__Init>
 8009ca6:	af06      	add	r7, sp, #24
 8009ca8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009caa:	f857 6d04 	ldr.w	r6, [r7, #-4]!
 8009cae:	f106 0434 	add.w	r4, r6, #52	; 0x34
 8009cb2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009cb4:	e895 0003 	ldmia.w	r5, {r0, r1}
 8009cb8:	e884 0003 	stmia.w	r4, {r0, r1}
 8009cbc:	4c0d      	ldr	r4, [pc, #52]	; (8009cf4 <SLIDER_CreateUser+0x8c>)
 8009cbe:	6823      	ldr	r3, [r4, #0]
 8009cc0:	64f3      	str	r3, [r6, #76]	; 0x4c
 8009cc2:	2308      	movs	r3, #8
 8009cc4:	f8a6 3060 	strh.w	r3, [r6, #96]	; 0x60
 8009cc8:	2364      	movs	r3, #100	; 0x64
 8009cca:	6573      	str	r3, [r6, #84]	; 0x54
 8009ccc:	2300      	movs	r3, #0
 8009cce:	65b3      	str	r3, [r6, #88]	; 0x58
 8009cd0:	f04f 33ff 	mov.w	r3, #4294967295
 8009cd4:	6533      	str	r3, [r6, #80]	; 0x50
 8009cd6:	4638      	mov	r0, r7
 8009cd8:	f009 fa10 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009cdc:	6823      	ldr	r3, [r4, #0]
 8009cde:	4640      	mov	r0, r8
 8009ce0:	685b      	ldr	r3, [r3, #4]
 8009ce2:	4798      	blx	r3
 8009ce4:	4640      	mov	r0, r8
 8009ce6:	b006      	add	sp, #24
 8009ce8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009cec:	08009de1 	.word	0x08009de1
 8009cf0:	20000058 	.word	0x20000058
 8009cf4:	20000054 	.word	0x20000054

08009cf8 <SLIDER_Dec>:
 8009cf8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009cfa:	4605      	mov	r5, r0
 8009cfc:	b1c0      	cbz	r0, 8009d30 <SLIDER_Dec+0x38>
 8009cfe:	f009 f9ef 	bl	80130e0 <GUI_ALLOC_LockH>
 8009d02:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8009d04:	6d81      	ldr	r1, [r0, #88]	; 0x58
 8009d06:	ac02      	add	r4, sp, #8
 8009d08:	428a      	cmp	r2, r1
 8009d0a:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009d0e:	dd0c      	ble.n	8009d2a <SLIDER_Dec+0x32>
 8009d10:	3a01      	subs	r2, #1
 8009d12:	65c2      	str	r2, [r0, #92]	; 0x5c
 8009d14:	4628      	mov	r0, r5
 8009d16:	f003 fb30 	bl	800d37a <WM_InvalidateWindow>
 8009d1a:	4620      	mov	r0, r4
 8009d1c:	f009 f9ee 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009d20:	4628      	mov	r0, r5
 8009d22:	2105      	movs	r1, #5
 8009d24:	f002 fbd5 	bl	800c4d2 <WM_NotifyParent>
 8009d28:	e002      	b.n	8009d30 <SLIDER_Dec+0x38>
 8009d2a:	4620      	mov	r0, r4
 8009d2c:	f009 f9e6 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009d30:	b003      	add	sp, #12
 8009d32:	bd30      	pop	{r4, r5, pc}

08009d34 <SLIDER_GetFlag>:
 8009d34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d36:	460d      	mov	r5, r1
 8009d38:	4604      	mov	r4, r0
 8009d3a:	b150      	cbz	r0, 8009d52 <SLIDER_GetFlag+0x1e>
 8009d3c:	f009 f9d0 	bl	80130e0 <GUI_ALLOC_LockH>
 8009d40:	ab02      	add	r3, sp, #8
 8009d42:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8009d46:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009d4a:	4618      	mov	r0, r3
 8009d4c:	402c      	ands	r4, r5
 8009d4e:	f009 f9d5 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009d52:	4620      	mov	r0, r4
 8009d54:	b003      	add	sp, #12
 8009d56:	bd30      	pop	{r4, r5, pc}

08009d58 <SLIDER_Inc>:
 8009d58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d5a:	4605      	mov	r5, r0
 8009d5c:	b1c0      	cbz	r0, 8009d90 <SLIDER_Inc+0x38>
 8009d5e:	f009 f9bf 	bl	80130e0 <GUI_ALLOC_LockH>
 8009d62:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8009d64:	6d41      	ldr	r1, [r0, #84]	; 0x54
 8009d66:	ac02      	add	r4, sp, #8
 8009d68:	428a      	cmp	r2, r1
 8009d6a:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009d6e:	da0c      	bge.n	8009d8a <SLIDER_Inc+0x32>
 8009d70:	3201      	adds	r2, #1
 8009d72:	65c2      	str	r2, [r0, #92]	; 0x5c
 8009d74:	4628      	mov	r0, r5
 8009d76:	f003 fb00 	bl	800d37a <WM_InvalidateWindow>
 8009d7a:	4620      	mov	r0, r4
 8009d7c:	f009 f9be 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009d80:	4628      	mov	r0, r5
 8009d82:	2105      	movs	r1, #5
 8009d84:	f002 fba5 	bl	800c4d2 <WM_NotifyParent>
 8009d88:	e002      	b.n	8009d90 <SLIDER_Inc+0x38>
 8009d8a:	4620      	mov	r0, r4
 8009d8c:	f009 f9b6 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009d90:	b003      	add	sp, #12
 8009d92:	bd30      	pop	{r4, r5, pc}

08009d94 <SLIDER_SetValue>:
 8009d94:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009d96:	460e      	mov	r6, r1
 8009d98:	4605      	mov	r5, r0
 8009d9a:	b1f8      	cbz	r0, 8009ddc <SLIDER_SetValue+0x48>
 8009d9c:	f009 f9a0 	bl	80130e0 <GUI_ALLOC_LockH>
 8009da0:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8009da2:	4296      	cmp	r6, r2
 8009da4:	bfac      	ite	ge
 8009da6:	4631      	movge	r1, r6
 8009da8:	4611      	movlt	r1, r2
 8009daa:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8009dac:	4291      	cmp	r1, r2
 8009dae:	bfa8      	it	ge
 8009db0:	4611      	movge	r1, r2
 8009db2:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8009db4:	ac02      	add	r4, sp, #8
 8009db6:	428a      	cmp	r2, r1
 8009db8:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009dbc:	d00b      	beq.n	8009dd6 <SLIDER_SetValue+0x42>
 8009dbe:	65c1      	str	r1, [r0, #92]	; 0x5c
 8009dc0:	4628      	mov	r0, r5
 8009dc2:	f003 fada 	bl	800d37a <WM_InvalidateWindow>
 8009dc6:	4620      	mov	r0, r4
 8009dc8:	f009 f998 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009dcc:	4628      	mov	r0, r5
 8009dce:	2105      	movs	r1, #5
 8009dd0:	f002 fb7f 	bl	800c4d2 <WM_NotifyParent>
 8009dd4:	e002      	b.n	8009ddc <SLIDER_SetValue+0x48>
 8009dd6:	4620      	mov	r0, r4
 8009dd8:	f009 f990 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009ddc:	b002      	add	sp, #8
 8009dde:	bd70      	pop	{r4, r5, r6, pc}

08009de0 <SLIDER_Callback>:
 8009de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009de4:	6844      	ldr	r4, [r0, #4]
 8009de6:	4605      	mov	r5, r0
 8009de8:	b085      	sub	sp, #20
 8009dea:	4620      	mov	r0, r4
 8009dec:	4629      	mov	r1, r5
 8009dee:	f7ff fd5b 	bl	80098a8 <WIDGET_HandleActive>
 8009df2:	2800      	cmp	r0, #0
 8009df4:	f000 809d 	beq.w	8009f32 <SLIDER_Callback+0x152>
 8009df8:	682b      	ldr	r3, [r5, #0]
 8009dfa:	2b0f      	cmp	r3, #15
 8009dfc:	d006      	beq.n	8009e0c <SLIDER_Callback+0x2c>
 8009dfe:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009e02:	d014      	beq.n	8009e2e <SLIDER_Callback+0x4e>
 8009e04:	2b0e      	cmp	r3, #14
 8009e06:	f040 8091 	bne.w	8009f2c <SLIDER_Callback+0x14c>
 8009e0a:	e07f      	b.n	8009f0c <SLIDER_Callback+0x12c>
 8009e0c:	4620      	mov	r0, r4
 8009e0e:	f009 f967 	bl	80130e0 <GUI_ALLOC_LockH>
 8009e12:	ab04      	add	r3, sp, #16
 8009e14:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009e18:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8009e1a:	6815      	ldr	r5, [r2, #0]
 8009e1c:	4618      	mov	r0, r3
 8009e1e:	f009 f96d 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009e22:	2d00      	cmp	r5, #0
 8009e24:	f000 8085 	beq.w	8009f32 <SLIDER_Callback+0x152>
 8009e28:	4620      	mov	r0, r4
 8009e2a:	47a8      	blx	r5
 8009e2c:	e081      	b.n	8009f32 <SLIDER_Callback+0x152>
 8009e2e:	68ef      	ldr	r7, [r5, #12]
 8009e30:	2f00      	cmp	r7, #0
 8009e32:	d07b      	beq.n	8009f2c <SLIDER_Callback+0x14c>
 8009e34:	4620      	mov	r0, r4
 8009e36:	f009 f953 	bl	80130e0 <GUI_ALLOC_LockH>
 8009e3a:	4603      	mov	r3, r0
 8009e3c:	a804      	add	r0, sp, #16
 8009e3e:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 8009e40:	f840 3d04 	str.w	r3, [r0, #-4]!
 8009e44:	6d9e      	ldr	r6, [r3, #88]	; 0x58
 8009e46:	f8d3 9054 	ldr.w	r9, [r3, #84]	; 0x54
 8009e4a:	f8b3 b060 	ldrh.w	fp, [r3, #96]	; 0x60
 8009e4e:	f8b3 8028 	ldrh.w	r8, [r3, #40]	; 0x28
 8009e52:	9201      	str	r2, [sp, #4]
 8009e54:	f009 f952 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009e58:	9a01      	ldr	r2, [sp, #4]
 8009e5a:	7a3b      	ldrb	r3, [r7, #8]
 8009e5c:	f402 7a80 	and.w	sl, r2, #256	; 0x100
 8009e60:	2b00      	cmp	r3, #0
 8009e62:	d043      	beq.n	8009eec <SLIDER_Callback+0x10c>
 8009e64:	cf82      	ldmia	r7, {r1, r7}
 8009e66:	fa0f f38b 	sxth.w	r3, fp
 8009e6a:	f04f 0b02 	mov.w	fp, #2
 8009e6e:	f012 0f08 	tst.w	r2, #8
 8009e72:	fb93 f3fb 	sdiv	r3, r3, fp
 8009e76:	f103 0301 	add.w	r3, r3, #1
 8009e7a:	bf08      	it	eq
 8009e7c:	460f      	moveq	r7, r1
 8009e7e:	1aff      	subs	r7, r7, r3
 8009e80:	4620      	mov	r0, r4
 8009e82:	9301      	str	r3, [sp, #4]
 8009e84:	f7ff fcb6 	bl	80097f4 <WIDGET__GetWindowSizeX>
 8009e88:	2f00      	cmp	r7, #0
 8009e8a:	9b01      	ldr	r3, [sp, #4]
 8009e8c:	dd11      	ble.n	8009eb2 <SLIDER_Callback+0xd2>
 8009e8e:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 8009e92:	4287      	cmp	r7, r0
 8009e94:	da0c      	bge.n	8009eb0 <SLIDER_Callback+0xd0>
 8009e96:	2800      	cmp	r0, #0
 8009e98:	bf08      	it	eq
 8009e9a:	2001      	moveq	r0, #1
 8009e9c:	fb90 fbfb 	sdiv	fp, r0, fp
 8009ea0:	ebc6 0909 	rsb	r9, r6, r9
 8009ea4:	fb09 b707 	mla	r7, r9, r7, fp
 8009ea8:	fbb7 f0f0 	udiv	r0, r7, r0
 8009eac:	4406      	add	r6, r0
 8009eae:	e000      	b.n	8009eb2 <SLIDER_Callback+0xd2>
 8009eb0:	464e      	mov	r6, r9
 8009eb2:	4620      	mov	r0, r4
 8009eb4:	f002 fc07 	bl	800c6c6 <WM_IsFocussable>
 8009eb8:	b110      	cbz	r0, 8009ec0 <SLIDER_Callback+0xe0>
 8009eba:	4620      	mov	r0, r4
 8009ebc:	f002 f99a 	bl	800c1f4 <WM_SetFocus>
 8009ec0:	4620      	mov	r0, r4
 8009ec2:	2101      	movs	r1, #1
 8009ec4:	f002 f9fe 	bl	800c2c4 <WM_SetCapture>
 8009ec8:	4620      	mov	r0, r4
 8009eca:	4631      	mov	r1, r6
 8009ecc:	f7ff ff62 	bl	8009d94 <SLIDER_SetValue>
 8009ed0:	f1ba 0f00 	cmp.w	sl, #0
 8009ed4:	d12a      	bne.n	8009f2c <SLIDER_Callback+0x14c>
 8009ed6:	4620      	mov	r0, r4
 8009ed8:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009edc:	f7ff fcb1 	bl	8009842 <WIDGET_OrState>
 8009ee0:	f018 0f02 	tst.w	r8, #2
 8009ee4:	d022      	beq.n	8009f2c <SLIDER_Callback+0x14c>
 8009ee6:	4620      	mov	r0, r4
 8009ee8:	2101      	movs	r1, #1
 8009eea:	e00c      	b.n	8009f06 <SLIDER_Callback+0x126>
 8009eec:	f1ba 0f00 	cmp.w	sl, #0
 8009ef0:	d01c      	beq.n	8009f2c <SLIDER_Callback+0x14c>
 8009ef2:	4620      	mov	r0, r4
 8009ef4:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009ef8:	f7ff fcb9 	bl	800986e <WIDGET_AndState>
 8009efc:	f018 0f02 	tst.w	r8, #2
 8009f00:	d014      	beq.n	8009f2c <SLIDER_Callback+0x14c>
 8009f02:	4620      	mov	r0, r4
 8009f04:	2102      	movs	r1, #2
 8009f06:	f002 fae4 	bl	800c4d2 <WM_NotifyParent>
 8009f0a:	e00f      	b.n	8009f2c <SLIDER_Callback+0x14c>
 8009f0c:	68ea      	ldr	r2, [r5, #12]
 8009f0e:	6813      	ldr	r3, [r2, #0]
 8009f10:	6852      	ldr	r2, [r2, #4]
 8009f12:	2a00      	cmp	r2, #0
 8009f14:	dd0a      	ble.n	8009f2c <SLIDER_Callback+0x14c>
 8009f16:	2b10      	cmp	r3, #16
 8009f18:	d005      	beq.n	8009f26 <SLIDER_Callback+0x146>
 8009f1a:	2b12      	cmp	r3, #18
 8009f1c:	d106      	bne.n	8009f2c <SLIDER_Callback+0x14c>
 8009f1e:	4620      	mov	r0, r4
 8009f20:	f7ff ff1a 	bl	8009d58 <SLIDER_Inc>
 8009f24:	e002      	b.n	8009f2c <SLIDER_Callback+0x14c>
 8009f26:	4620      	mov	r0, r4
 8009f28:	f7ff fee6 	bl	8009cf8 <SLIDER_Dec>
 8009f2c:	4628      	mov	r0, r5
 8009f2e:	f003 fe47 	bl	800dbc0 <WM_DefaultProc>
 8009f32:	b005      	add	sp, #20
 8009f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009f38 <RADIO_SetTextColor>:
 8009f38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f3a:	460c      	mov	r4, r1
 8009f3c:	4605      	mov	r5, r0
 8009f3e:	b180      	cbz	r0, 8009f62 <RADIO_SetTextColor+0x2a>
 8009f40:	f009 f8ce 	bl	80130e0 <GUI_ALLOC_LockH>
 8009f44:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8009f46:	9001      	str	r0, [sp, #4]
 8009f48:	4294      	cmp	r4, r2
 8009f4a:	d007      	beq.n	8009f5c <RADIO_SetTextColor+0x24>
 8009f4c:	6384      	str	r4, [r0, #56]	; 0x38
 8009f4e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8009f50:	f000 ffde 	bl	800af10 <GUI_ARRAY_GetNumItems>
 8009f54:	b110      	cbz	r0, 8009f5c <RADIO_SetTextColor+0x24>
 8009f56:	4628      	mov	r0, r5
 8009f58:	f003 fa0f 	bl	800d37a <WM_InvalidateWindow>
 8009f5c:	a801      	add	r0, sp, #4
 8009f5e:	f009 f8cd 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009f62:	b003      	add	sp, #12
 8009f64:	bd30      	pop	{r4, r5, pc}

08009f66 <RADIO_CreateIndirect>:
 8009f66:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f68:	b089      	sub	sp, #36	; 0x24
 8009f6a:	6944      	ldr	r4, [r0, #20]
 8009f6c:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8009f70:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8009f74:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8009f78:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8009f7c:	9100      	str	r1, [sp, #0]
 8009f7e:	8a41      	ldrh	r1, [r0, #18]
 8009f80:	9101      	str	r1, [sp, #4]
 8009f82:	2100      	movs	r1, #0
 8009f84:	9102      	str	r1, [sp, #8]
 8009f86:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8009f8a:	9103      	str	r1, [sp, #12]
 8009f8c:	b2e1      	uxtb	r1, r4
 8009f8e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8009f92:	9104      	str	r1, [sp, #16]
 8009f94:	9405      	str	r4, [sp, #20]
 8009f96:	6984      	ldr	r4, [r0, #24]
 8009f98:	9406      	str	r4, [sp, #24]
 8009f9a:	eb0e 0002 	add.w	r0, lr, r2
 8009f9e:	18f9      	adds	r1, r7, r3
 8009fa0:	4632      	mov	r2, r6
 8009fa2:	462b      	mov	r3, r5
 8009fa4:	f000 f83a 	bl	800a01c <RADIO_CreateUser>
 8009fa8:	b009      	add	sp, #36	; 0x24
 8009faa:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009fac <RADIO__GetButtonSize>:
 8009fac:	b530      	push	{r4, r5, lr}
 8009fae:	b08b      	sub	sp, #44	; 0x2c
 8009fb0:	4605      	mov	r5, r0
 8009fb2:	f009 f895 	bl	80130e0 <GUI_ALLOC_LockH>
 8009fb6:	ab0a      	add	r3, sp, #40	; 0x28
 8009fb8:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8009fba:	f843 0d28 	str.w	r0, [r3, #-40]!
 8009fbe:	6894      	ldr	r4, [r2, #8]
 8009fc0:	4668      	mov	r0, sp
 8009fc2:	f009 f89b 	bl	80130fc <GUI_ALLOC_UnlockH>
 8009fc6:	2319      	movs	r3, #25
 8009fc8:	9302      	str	r3, [sp, #8]
 8009fca:	9501      	str	r5, [sp, #4]
 8009fcc:	6863      	ldr	r3, [r4, #4]
 8009fce:	a801      	add	r0, sp, #4
 8009fd0:	4798      	blx	r3
 8009fd2:	b00b      	add	sp, #44	; 0x2c
 8009fd4:	bd30      	pop	{r4, r5, pc}

08009fd6 <RADIO__SetValue>:
 8009fd6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009fd8:	460c      	mov	r4, r1
 8009fda:	4605      	mov	r5, r0
 8009fdc:	f009 f880 	bl	80130e0 <GUI_ALLOC_LockH>
 8009fe0:	f8b0 2064 	ldrh.w	r2, [r0, #100]	; 0x64
 8009fe4:	9001      	str	r0, [sp, #4]
 8009fe6:	4294      	cmp	r4, r2
 8009fe8:	bfa8      	it	ge
 8009fea:	f102 34ff 	addge.w	r4, r2, #4294967295
 8009fee:	f9b0 2060 	ldrsh.w	r2, [r0, #96]	; 0x60
 8009ff2:	4294      	cmp	r4, r2
 8009ff4:	d00c      	beq.n	800a010 <RADIO__SetValue+0x3a>
 8009ff6:	f8a0 4060 	strh.w	r4, [r0, #96]	; 0x60
 8009ffa:	4628      	mov	r0, r5
 8009ffc:	f003 f9bd 	bl	800d37a <WM_InvalidateWindow>
 800a000:	a801      	add	r0, sp, #4
 800a002:	f009 f87b 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a006:	4628      	mov	r0, r5
 800a008:	2105      	movs	r1, #5
 800a00a:	f002 fa62 	bl	800c4d2 <WM_NotifyParent>
 800a00e:	e002      	b.n	800a016 <RADIO__SetValue+0x40>
 800a010:	a801      	add	r0, sp, #4
 800a012:	f009 f873 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a016:	b003      	add	sp, #12
 800a018:	bd30      	pop	{r4, r5, pc}
	...

0800a01c <RADIO_CreateUser>:
 800a01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a020:	b087      	sub	sp, #28
 800a022:	4c33      	ldr	r4, [pc, #204]	; (800a0f0 <RADIO_CreateUser+0xd4>)
 800a024:	9f15      	ldr	r7, [sp, #84]	; 0x54
 800a026:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800a028:	6924      	ldr	r4, [r4, #16]
 800a02a:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800a02e:	8865      	ldrh	r5, [r4, #2]
 800a030:	2f00      	cmp	r7, #0
 800a032:	bfd8      	it	le
 800a034:	2714      	movle	r7, #20
 800a036:	2e00      	cmp	r6, #0
 800a038:	bfd8      	it	le
 800a03a:	2602      	movle	r6, #2
 800a03c:	b91b      	cbnz	r3, 800a046 <RADIO_CreateUser+0x2a>
 800a03e:	3504      	adds	r5, #4
 800a040:	1e73      	subs	r3, r6, #1
 800a042:	fb07 5303 	mla	r3, r7, r3, r5
 800a046:	b90a      	cbnz	r2, 800a04c <RADIO_CreateUser+0x30>
 800a048:	8822      	ldrh	r2, [r4, #0]
 800a04a:	3204      	adds	r2, #4
 800a04c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800a04e:	f8cd a000 	str.w	sl, [sp]
 800a052:	f044 0401 	orr.w	r4, r4, #1
 800a056:	9401      	str	r4, [sp, #4]
 800a058:	4c26      	ldr	r4, [pc, #152]	; (800a0f4 <RADIO_CreateUser+0xd8>)
 800a05a:	9402      	str	r4, [sp, #8]
 800a05c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 800a05e:	343c      	adds	r4, #60	; 0x3c
 800a060:	9403      	str	r4, [sp, #12]
 800a062:	f003 f9cb 	bl	800d3fc <WM_CreateWindowAsChild>
 800a066:	4680      	mov	r8, r0
 800a068:	2800      	cmp	r0, #0
 800a06a:	d03c      	beq.n	800a0e6 <RADIO_CreateUser+0xca>
 800a06c:	f000 ffe5 	bl	800b03a <GUI_ARRAY_Create>
 800a070:	2400      	movs	r4, #0
 800a072:	4605      	mov	r5, r0
 800a074:	2100      	movs	r1, #0
 800a076:	4628      	mov	r0, r5
 800a078:	460a      	mov	r2, r1
 800a07a:	3401      	adds	r4, #1
 800a07c:	f000 ff57 	bl	800af2e <GUI_ARRAY_AddItem>
 800a080:	42b4      	cmp	r4, r6
 800a082:	dbf7      	blt.n	800a074 <RADIO_CreateUser+0x58>
 800a084:	4640      	mov	r0, r8
 800a086:	f009 f82b 	bl	80130e0 <GUI_ALLOC_LockH>
 800a08a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800a08c:	65c5      	str	r5, [r0, #92]	; 0x5c
 800a08e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800a092:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800a094:	f8df b060 	ldr.w	fp, [pc, #96]	; 800a0f8 <RADIO_CreateUser+0xdc>
 800a098:	9005      	str	r0, [sp, #20]
 800a09a:	f042 0210 	orr.w	r2, r2, #16
 800a09e:	f7ff fbfb 	bl	8009898 <WIDGET__Init>
 800a0a2:	4d13      	ldr	r5, [pc, #76]	; (800a0f0 <RADIO_CreateUser+0xd4>)
 800a0a4:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800a0a8:	f8db 3000 	ldr.w	r3, [fp]
 800a0ac:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
 800a0b0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a0b2:	f109 0434 	add.w	r4, r9, #52	; 0x34
 800a0b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a0b8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a0ba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a0bc:	682b      	ldr	r3, [r5, #0]
 800a0be:	6023      	str	r3, [r4, #0]
 800a0c0:	4650      	mov	r0, sl
 800a0c2:	f002 fc09 	bl	800c8d8 <WM_GetBkColor>
 800a0c6:	f8c9 0034 	str.w	r0, [r9, #52]	; 0x34
 800a0ca:	a806      	add	r0, sp, #24
 800a0cc:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800a0d0:	f8a3 6064 	strh.w	r6, [r3, #100]	; 0x64
 800a0d4:	f8a3 7062 	strh.w	r7, [r3, #98]	; 0x62
 800a0d8:	f009 f810 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a0dc:	f8db 3000 	ldr.w	r3, [fp]
 800a0e0:	4640      	mov	r0, r8
 800a0e2:	685b      	ldr	r3, [r3, #4]
 800a0e4:	4798      	blx	r3
 800a0e6:	4640      	mov	r0, r8
 800a0e8:	b007      	add	sp, #28
 800a0ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a0ee:	bf00      	nop
 800a0f0:	20000070 	.word	0x20000070
 800a0f4:	0800a16f 	.word	0x0800a16f
 800a0f8:	20000094 	.word	0x20000094

0800a0fc <RADIO_SetValue>:
 800a0fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a0fe:	460c      	mov	r4, r1
 800a100:	4605      	mov	r5, r0
 800a102:	b1a8      	cbz	r0, 800a130 <RADIO_SetValue+0x34>
 800a104:	f008 ffec 	bl	80130e0 <GUI_ALLOC_LockH>
 800a108:	ab02      	add	r3, sp, #8
 800a10a:	f890 6066 	ldrb.w	r6, [r0, #102]	; 0x66
 800a10e:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a112:	4618      	mov	r0, r3
 800a114:	f008 fff2 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a118:	4628      	mov	r0, r5
 800a11a:	b12e      	cbz	r6, 800a128 <RADIO_SetValue+0x2c>
 800a11c:	4b05      	ldr	r3, [pc, #20]	; (800a134 <RADIO_SetValue+0x38>)
 800a11e:	681b      	ldr	r3, [r3, #0]
 800a120:	b113      	cbz	r3, 800a128 <RADIO_SetValue+0x2c>
 800a122:	4621      	mov	r1, r4
 800a124:	4798      	blx	r3
 800a126:	e003      	b.n	800a130 <RADIO_SetValue+0x34>
 800a128:	ea24 71e4 	bic.w	r1, r4, r4, asr #31
 800a12c:	f7ff ff53 	bl	8009fd6 <RADIO__SetValue>
 800a130:	b002      	add	sp, #8
 800a132:	bd70      	pop	{r4, r5, r6, pc}
 800a134:	20019bfc 	.word	0x20019bfc

0800a138 <RADIO_AddValue>:
 800a138:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a13a:	460c      	mov	r4, r1
 800a13c:	4606      	mov	r6, r0
 800a13e:	b168      	cbz	r0, 800a15c <RADIO_AddValue+0x24>
 800a140:	f008 ffce 	bl	80130e0 <GUI_ALLOC_LockH>
 800a144:	4602      	mov	r2, r0
 800a146:	a802      	add	r0, sp, #8
 800a148:	f9b2 5060 	ldrsh.w	r5, [r2, #96]	; 0x60
 800a14c:	f840 2d04 	str.w	r2, [r0, #-4]!
 800a150:	f008 ffd4 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a154:	4630      	mov	r0, r6
 800a156:	1929      	adds	r1, r5, r4
 800a158:	f7ff ffd0 	bl	800a0fc <RADIO_SetValue>
 800a15c:	b002      	add	sp, #8
 800a15e:	bd70      	pop	{r4, r5, r6, pc}

0800a160 <RADIO_Dec>:
 800a160:	f04f 31ff 	mov.w	r1, #4294967295
 800a164:	f7ff bfe8 	b.w	800a138 <RADIO_AddValue>

0800a168 <RADIO_Inc>:
 800a168:	2101      	movs	r1, #1
 800a16a:	f7ff bfe5 	b.w	800a138 <RADIO_AddValue>

0800a16e <RADIO_Callback>:
 800a16e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a172:	6844      	ldr	r4, [r0, #4]
 800a174:	4605      	mov	r5, r0
 800a176:	4629      	mov	r1, r5
 800a178:	4620      	mov	r0, r4
 800a17a:	f7ff fb95 	bl	80098a8 <WIDGET_HandleActive>
 800a17e:	2800      	cmp	r0, #0
 800a180:	f000 809a 	beq.w	800a2b8 <RADIO_Callback+0x14a>
 800a184:	682b      	ldr	r3, [r5, #0]
 800a186:	2b0f      	cmp	r3, #15
 800a188:	d00c      	beq.n	800a1a4 <RADIO_Callback+0x36>
 800a18a:	dc05      	bgt.n	800a198 <RADIO_Callback+0x2a>
 800a18c:	2b0b      	cmp	r3, #11
 800a18e:	f000 8084 	beq.w	800a29a <RADIO_Callback+0x12c>
 800a192:	2b0e      	cmp	r3, #14
 800a194:	d06d      	beq.n	800a272 <RADIO_Callback+0x104>
 800a196:	e08c      	b.n	800a2b2 <RADIO_Callback+0x144>
 800a198:	2b2b      	cmp	r3, #43	; 0x2b
 800a19a:	d013      	beq.n	800a1c4 <RADIO_Callback+0x56>
 800a19c:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800a1a0:	d01d      	beq.n	800a1de <RADIO_Callback+0x70>
 800a1a2:	e086      	b.n	800a2b2 <RADIO_Callback+0x144>
 800a1a4:	4620      	mov	r0, r4
 800a1a6:	f008 ff9b 	bl	80130e0 <GUI_ALLOC_LockH>
 800a1aa:	ab02      	add	r3, sp, #8
 800a1ac:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a1b0:	6d82      	ldr	r2, [r0, #88]	; 0x58
 800a1b2:	6815      	ldr	r5, [r2, #0]
 800a1b4:	4618      	mov	r0, r3
 800a1b6:	f008 ffa1 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a1ba:	2d00      	cmp	r5, #0
 800a1bc:	d07c      	beq.n	800a2b8 <RADIO_Callback+0x14a>
 800a1be:	4620      	mov	r0, r4
 800a1c0:	47a8      	blx	r5
 800a1c2:	e079      	b.n	800a2b8 <RADIO_Callback+0x14a>
 800a1c4:	4620      	mov	r0, r4
 800a1c6:	f008 ff8b 	bl	80130e0 <GUI_ALLOC_LockH>
 800a1ca:	ab02      	add	r3, sp, #8
 800a1cc:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a1d0:	f890 2066 	ldrb.w	r2, [r0, #102]	; 0x66
 800a1d4:	60ea      	str	r2, [r5, #12]
 800a1d6:	4618      	mov	r0, r3
 800a1d8:	f008 ff90 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a1dc:	e06c      	b.n	800a2b8 <RADIO_Callback+0x14a>
 800a1de:	4620      	mov	r0, r4
 800a1e0:	68ee      	ldr	r6, [r5, #12]
 800a1e2:	f008 ff7d 	bl	80130e0 <GUI_ALLOC_LockH>
 800a1e6:	9001      	str	r0, [sp, #4]
 800a1e8:	f890 3066 	ldrb.w	r3, [r0, #102]	; 0x66
 800a1ec:	f8b0 7062 	ldrh.w	r7, [r0, #98]	; 0x62
 800a1f0:	b143      	cbz	r3, 800a204 <RADIO_Callback+0x96>
 800a1f2:	f9b0 9006 	ldrsh.w	r9, [r0, #6]
 800a1f6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800a1fa:	ebc3 0909 	rsb	r9, r3, r9
 800a1fe:	f109 0901 	add.w	r9, r9, #1
 800a202:	e006      	b.n	800a212 <RADIO_Callback+0xa4>
 800a204:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800a206:	689b      	ldr	r3, [r3, #8]
 800a208:	4620      	mov	r0, r4
 800a20a:	681b      	ldr	r3, [r3, #0]
 800a20c:	4798      	blx	r3
 800a20e:	f100 0904 	add.w	r9, r0, #4
 800a212:	a802      	add	r0, sp, #8
 800a214:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800a218:	f8b3 8030 	ldrh.w	r8, [r3, #48]	; 0x30
 800a21c:	f008 ff6e 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a220:	68eb      	ldr	r3, [r5, #12]
 800a222:	b1a3      	cbz	r3, 800a24e <RADIO_Callback+0xe0>
 800a224:	7a33      	ldrb	r3, [r6, #8]
 800a226:	b1ab      	cbz	r3, 800a254 <RADIO_Callback+0xe6>
 800a228:	6873      	ldr	r3, [r6, #4]
 800a22a:	fb93 f1f7 	sdiv	r1, r3, r7
 800a22e:	fb07 3711 	mls	r7, r7, r1, r3
 800a232:	454f      	cmp	r7, r9
 800a234:	dc02      	bgt.n	800a23c <RADIO_Callback+0xce>
 800a236:	4620      	mov	r0, r4
 800a238:	f7ff ff60 	bl	800a0fc <RADIO_SetValue>
 800a23c:	4620      	mov	r0, r4
 800a23e:	f002 fa42 	bl	800c6c6 <WM_IsFocussable>
 800a242:	b150      	cbz	r0, 800a25a <RADIO_Callback+0xec>
 800a244:	4620      	mov	r0, r4
 800a246:	f001 ffd5 	bl	800c1f4 <WM_SetFocus>
 800a24a:	2600      	movs	r6, #0
 800a24c:	e006      	b.n	800a25c <RADIO_Callback+0xee>
 800a24e:	461e      	mov	r6, r3
 800a250:	2103      	movs	r1, #3
 800a252:	e004      	b.n	800a25e <RADIO_Callback+0xf0>
 800a254:	2601      	movs	r6, #1
 800a256:	2102      	movs	r1, #2
 800a258:	e001      	b.n	800a25e <RADIO_Callback+0xf0>
 800a25a:	4606      	mov	r6, r0
 800a25c:	2101      	movs	r1, #1
 800a25e:	4620      	mov	r0, r4
 800a260:	f002 f937 	bl	800c4d2 <WM_NotifyParent>
 800a264:	2e01      	cmp	r6, #1
 800a266:	d124      	bne.n	800a2b2 <RADIO_Callback+0x144>
 800a268:	fa0f f088 	sxth.w	r0, r8
 800a26c:	f007 fe86 	bl	8011f7c <GUI_StoreKey>
 800a270:	e01f      	b.n	800a2b2 <RADIO_Callback+0x144>
 800a272:	68eb      	ldr	r3, [r5, #12]
 800a274:	685a      	ldr	r2, [r3, #4]
 800a276:	2a00      	cmp	r2, #0
 800a278:	dd1b      	ble.n	800a2b2 <RADIO_Callback+0x144>
 800a27a:	681b      	ldr	r3, [r3, #0]
 800a27c:	3b10      	subs	r3, #16
 800a27e:	2b03      	cmp	r3, #3
 800a280:	d817      	bhi.n	800a2b2 <RADIO_Callback+0x144>
 800a282:	e8df f003 	tbb	[pc, r3]
 800a286:	0606      	.short	0x0606
 800a288:	0202      	.short	0x0202
 800a28a:	4620      	mov	r0, r4
 800a28c:	f7ff ff6c 	bl	800a168 <RADIO_Inc>
 800a290:	e00f      	b.n	800a2b2 <RADIO_Callback+0x144>
 800a292:	4620      	mov	r0, r4
 800a294:	f7ff ff64 	bl	800a160 <RADIO_Dec>
 800a298:	e00b      	b.n	800a2b2 <RADIO_Callback+0x144>
 800a29a:	4620      	mov	r0, r4
 800a29c:	f008 ff20 	bl	80130e0 <GUI_ALLOC_LockH>
 800a2a0:	ac02      	add	r4, sp, #8
 800a2a2:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a2a6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800a2a8:	f000 fe8b 	bl	800afc2 <GUI_ARRAY_Delete>
 800a2ac:	4620      	mov	r0, r4
 800a2ae:	f008 ff25 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a2b2:	4628      	mov	r0, r5
 800a2b4:	f003 fc84 	bl	800dbc0 <WM_DefaultProc>
 800a2b8:	b003      	add	sp, #12
 800a2ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a2be <_AdjustRect>:
 800a2be:	b538      	push	{r3, r4, r5, lr}
 800a2c0:	4605      	mov	r5, r0
 800a2c2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800a2c4:	460c      	mov	r4, r1
 800a2c6:	f007 ff73 	bl	80121b0 <GUI_GetYSizeOfFont>
 800a2ca:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
 800a2ce:	b90b      	cbnz	r3, 800a2d4 <_AdjustRect+0x16>
 800a2d0:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
 800a2d4:	6eaa      	ldr	r2, [r5, #104]	; 0x68
 800a2d6:	4283      	cmp	r3, r0
 800a2d8:	bfac      	ite	ge
 800a2da:	18d0      	addge	r0, r2, r3
 800a2dc:	1810      	addlt	r0, r2, r0
 800a2de:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 800a2e0:	f013 0f08 	tst.w	r3, #8
 800a2e4:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800a2e6:	d009      	beq.n	800a2fc <_AdjustRect+0x3e>
 800a2e8:	075a      	lsls	r2, r3, #29
 800a2ea:	d503      	bpl.n	800a2f4 <_AdjustRect+0x36>
 800a2ec:	8823      	ldrh	r3, [r4, #0]
 800a2ee:	4418      	add	r0, r3
 800a2f0:	8020      	strh	r0, [r4, #0]
 800a2f2:	bd38      	pop	{r3, r4, r5, pc}
 800a2f4:	88a3      	ldrh	r3, [r4, #4]
 800a2f6:	1a18      	subs	r0, r3, r0
 800a2f8:	80a0      	strh	r0, [r4, #4]
 800a2fa:	bd38      	pop	{r3, r4, r5, pc}
 800a2fc:	075b      	lsls	r3, r3, #29
 800a2fe:	d503      	bpl.n	800a308 <_AdjustRect+0x4a>
 800a300:	88e3      	ldrh	r3, [r4, #6]
 800a302:	1a18      	subs	r0, r3, r0
 800a304:	80e0      	strh	r0, [r4, #6]
 800a306:	bd38      	pop	{r3, r4, r5, pc}
 800a308:	8863      	ldrh	r3, [r4, #2]
 800a30a:	4418      	add	r0, r3
 800a30c:	8060      	strh	r0, [r4, #2]
 800a30e:	bd38      	pop	{r3, r4, r5, pc}

0800a310 <_GetScrollbarH>:
 800a310:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a312:	f008 fee5 	bl	80130e0 <GUI_ALLOC_LockH>
 800a316:	ad02      	add	r5, sp, #8
 800a318:	69c4      	ldr	r4, [r0, #28]
 800a31a:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a31e:	4628      	mov	r0, r5
 800a320:	f008 feec 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a324:	b154      	cbz	r4, 800a33c <_GetScrollbarH+0x2c>
 800a326:	4620      	mov	r0, r4
 800a328:	f002 fa4c 	bl	800c7c4 <WM_GetId>
 800a32c:	28ff      	cmp	r0, #255	; 0xff
 800a32e:	d005      	beq.n	800a33c <_GetScrollbarH+0x2c>
 800a330:	4620      	mov	r0, r4
 800a332:	f008 fed5 	bl	80130e0 <GUI_ALLOC_LockH>
 800a336:	9001      	str	r0, [sp, #4]
 800a338:	6a04      	ldr	r4, [r0, #32]
 800a33a:	e7f0      	b.n	800a31e <_GetScrollbarH+0xe>
 800a33c:	4620      	mov	r0, r4
 800a33e:	b003      	add	sp, #12
 800a340:	bd30      	pop	{r4, r5, pc}

0800a342 <_GetEnable>:
 800a342:	b513      	push	{r0, r1, r4, lr}
 800a344:	460c      	mov	r4, r1
 800a346:	f008 fecb 	bl	80130e0 <GUI_ALLOC_LockH>
 800a34a:	9001      	str	r0, [sp, #4]
 800a34c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800a34e:	f000 fddf 	bl	800af10 <GUI_ARRAY_GetNumItems>
 800a352:	4284      	cmp	r4, r0
 800a354:	d20e      	bcs.n	800a374 <_GetEnable+0x32>
 800a356:	9b01      	ldr	r3, [sp, #4]
 800a358:	4621      	mov	r1, r4
 800a35a:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800a35c:	f000 fe5a 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 800a360:	ab02      	add	r3, sp, #8
 800a362:	7904      	ldrb	r4, [r0, #4]
 800a364:	f843 0d08 	str.w	r0, [r3, #-8]!
 800a368:	4668      	mov	r0, sp
 800a36a:	f004 0401 	and.w	r4, r4, #1
 800a36e:	f008 fec5 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a372:	e000      	b.n	800a376 <_GetEnable+0x34>
 800a374:	2400      	movs	r4, #0
 800a376:	a801      	add	r0, sp, #4
 800a378:	f008 fec0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a37c:	4620      	mov	r0, r4
 800a37e:	b002      	add	sp, #8
 800a380:	bd10      	pop	{r4, pc}

0800a382 <_AddScrollbar>:
 800a382:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a386:	b089      	sub	sp, #36	; 0x24
 800a388:	4689      	mov	r9, r1
 800a38a:	4690      	mov	r8, r2
 800a38c:	4605      	mov	r5, r0
 800a38e:	461f      	mov	r7, r3
 800a390:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800a392:	f008 fea5 	bl	80130e0 <GUI_ALLOC_LockH>
 800a396:	ac08      	add	r4, sp, #32
 800a398:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a39a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a39e:	f8b0 a032 	ldrh.w	sl, [r0, #50]	; 0x32
 800a3a2:	9305      	str	r3, [sp, #20]
 800a3a4:	4620      	mov	r0, r4
 800a3a6:	f008 fea9 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a3aa:	4628      	mov	r0, r5
 800a3ac:	f7ff ffb0 	bl	800a310 <_GetScrollbarH>
 800a3b0:	4683      	mov	fp, r0
 800a3b2:	b9a0      	cbnz	r0, 800a3de <_AddScrollbar+0x5c>
 800a3b4:	f00a 0308 	and.w	r3, sl, #8
 800a3b8:	21ff      	movs	r1, #255	; 0xff
 800a3ba:	2202      	movs	r2, #2
 800a3bc:	b29b      	uxth	r3, r3
 800a3be:	9500      	str	r5, [sp, #0]
 800a3c0:	9101      	str	r1, [sp, #4]
 800a3c2:	9202      	str	r2, [sp, #8]
 800a3c4:	b103      	cbz	r3, 800a3c8 <_AddScrollbar+0x46>
 800a3c6:	2308      	movs	r3, #8
 800a3c8:	9303      	str	r3, [sp, #12]
 800a3ca:	4641      	mov	r1, r8
 800a3cc:	4648      	mov	r0, r9
 800a3ce:	463a      	mov	r2, r7
 800a3d0:	4633      	mov	r3, r6
 800a3d2:	f009 fd84 	bl	8013ede <SCROLLBAR_Create>
 800a3d6:	9905      	ldr	r1, [sp, #20]
 800a3d8:	f009 f9b8 	bl	801374c <WIDGET_SetEffect>
 800a3dc:	e008      	b.n	800a3f0 <_AddScrollbar+0x6e>
 800a3de:	4649      	mov	r1, r9
 800a3e0:	4642      	mov	r2, r8
 800a3e2:	f002 f880 	bl	800c4e6 <WM_MoveChildTo>
 800a3e6:	4658      	mov	r0, fp
 800a3e8:	4639      	mov	r1, r7
 800a3ea:	4632      	mov	r2, r6
 800a3ec:	f001 fe6d 	bl	800c0ca <WM_SetSize>
 800a3f0:	4628      	mov	r0, r5
 800a3f2:	f008 fe75 	bl	80130e0 <GUI_ALLOC_LockH>
 800a3f6:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800a3f8:	9007      	str	r0, [sp, #28]
 800a3fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a3fe:	8643      	strh	r3, [r0, #50]	; 0x32
 800a400:	4620      	mov	r0, r4
 800a402:	f008 fe7b 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a406:	b009      	add	sp, #36	; 0x24
 800a408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a40c <_SetScrollbar>:
 800a40c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a40e:	460c      	mov	r4, r1
 800a410:	4606      	mov	r6, r0
 800a412:	f7ff ff7d 	bl	800a310 <_GetScrollbarH>
 800a416:	4621      	mov	r1, r4
 800a418:	4605      	mov	r5, r0
 800a41a:	f00a f831 	bl	8014480 <SCROLLBAR_SetNumItems>
 800a41e:	4628      	mov	r0, r5
 800a420:	2101      	movs	r1, #1
 800a422:	f00a f840 	bl	80144a6 <SCROLLBAR_SetPageSize>
 800a426:	4630      	mov	r0, r6
 800a428:	f008 fe5a 	bl	80130e0 <GUI_ALLOC_LockH>
 800a42c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800a42e:	9001      	str	r0, [sp, #4]
 800a430:	42a2      	cmp	r2, r4
 800a432:	4603      	mov	r3, r0
 800a434:	db07      	blt.n	800a446 <_SetScrollbar+0x3a>
 800a436:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800a438:	f012 0201 	ands.w	r2, r2, #1
 800a43c:	bf1a      	itte	ne
 800a43e:	f104 34ff 	addne.w	r4, r4, #4294967295
 800a442:	6444      	strne	r4, [r0, #68]	; 0x44
 800a444:	6442      	streq	r2, [r0, #68]	; 0x44
 800a446:	4628      	mov	r0, r5
 800a448:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800a44a:	f009 fe09 	bl	8014060 <SCROLLBAR_SetValue>
 800a44e:	a801      	add	r0, sp, #4
 800a450:	f008 fe54 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a454:	b002      	add	sp, #8
 800a456:	bd70      	pop	{r4, r5, r6, pc}

0800a458 <_ShowPage>:
 800a458:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a45a:	460d      	mov	r5, r1
 800a45c:	f008 fe40 	bl	80130e0 <GUI_ALLOC_LockH>
 800a460:	4602      	mov	r2, r0
 800a462:	a804      	add	r0, sp, #16
 800a464:	6b96      	ldr	r6, [r2, #56]	; 0x38
 800a466:	f840 2d0c 	str.w	r2, [r0, #-12]!
 800a46a:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 800a46c:	f008 fe46 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a470:	4630      	mov	r0, r6
 800a472:	f008 fe35 	bl	80130e0 <GUI_ALLOC_LockH>
 800a476:	9002      	str	r0, [sp, #8]
 800a478:	4620      	mov	r0, r4
 800a47a:	f000 fd49 	bl	800af10 <GUI_ARRAY_GetNumItems>
 800a47e:	4285      	cmp	r5, r0
 800a480:	d20b      	bcs.n	800a49a <_ShowPage+0x42>
 800a482:	4629      	mov	r1, r5
 800a484:	4620      	mov	r0, r4
 800a486:	f000 fdc5 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 800a48a:	ab04      	add	r3, sp, #16
 800a48c:	6805      	ldr	r5, [r0, #0]
 800a48e:	f843 0d10 	str.w	r0, [r3, #-16]!
 800a492:	4668      	mov	r0, sp
 800a494:	f008 fe32 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a498:	e000      	b.n	800a49c <_ShowPage+0x44>
 800a49a:	2500      	movs	r5, #0
 800a49c:	a804      	add	r0, sp, #16
 800a49e:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800a4a2:	69dc      	ldr	r4, [r3, #28]
 800a4a4:	f008 fe2a 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a4a8:	b1cc      	cbz	r4, 800a4de <_ShowPage+0x86>
 800a4aa:	42ac      	cmp	r4, r5
 800a4ac:	4620      	mov	r0, r4
 800a4ae:	d10b      	bne.n	800a4c8 <_ShowPage+0x70>
 800a4b0:	f001 fdc1 	bl	800c036 <WM_ShowWindow>
 800a4b4:	f002 f996 	bl	800c7e4 <WM_GetFocussedWindow>
 800a4b8:	4621      	mov	r1, r4
 800a4ba:	f001 fcea 	bl	800be92 <WM__IsChild>
 800a4be:	b928      	cbnz	r0, 800a4cc <_ShowPage+0x74>
 800a4c0:	4620      	mov	r0, r4
 800a4c2:	f001 fe97 	bl	800c1f4 <WM_SetFocus>
 800a4c6:	e001      	b.n	800a4cc <_ShowPage+0x74>
 800a4c8:	f002 f916 	bl	800c6f8 <WM_HideWindow>
 800a4cc:	4620      	mov	r0, r4
 800a4ce:	f008 fe07 	bl	80130e0 <GUI_ALLOC_LockH>
 800a4d2:	ab04      	add	r3, sp, #16
 800a4d4:	6a04      	ldr	r4, [r0, #32]
 800a4d6:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a4da:	4618      	mov	r0, r3
 800a4dc:	e7e2      	b.n	800a4a4 <_ShowPage+0x4c>
 800a4de:	b004      	add	sp, #16
 800a4e0:	bd70      	pop	{r4, r5, r6, pc}

0800a4e2 <MULTIPAGE__CalcBorderRect>:
 800a4e2:	b538      	push	{r3, r4, r5, lr}
 800a4e4:	4605      	mov	r5, r0
 800a4e6:	460c      	mov	r4, r1
 800a4e8:	f002 feff 	bl	800d2ea <WM__GetClientRectWin>
 800a4ec:	4628      	mov	r0, r5
 800a4ee:	4621      	mov	r1, r4
 800a4f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a4f4:	f7ff bee3 	b.w	800a2be <_AdjustRect>

0800a4f8 <MULTIPAGE__CalcClientRect>:
 800a4f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a4fa:	460d      	mov	r5, r1
 800a4fc:	f008 fdf0 	bl	80130e0 <GUI_ALLOC_LockH>
 800a500:	ac02      	add	r4, sp, #8
 800a502:	4629      	mov	r1, r5
 800a504:	9001      	str	r0, [sp, #4]
 800a506:	f7ff f968 	bl	80097da <WIDGET__GetInsideRect>
 800a50a:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 800a50e:	4629      	mov	r1, r5
 800a510:	f7ff fed5 	bl	800a2be <_AdjustRect>
 800a514:	4620      	mov	r0, r4
 800a516:	f008 fdf1 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a51a:	b003      	add	sp, #12
 800a51c:	bd30      	pop	{r4, r5, pc}

0800a51e <MULTIPAGE__DeleteScrollbar>:
 800a51e:	b513      	push	{r0, r1, r4, lr}
 800a520:	4604      	mov	r4, r0
 800a522:	f7ff fef5 	bl	800a310 <_GetScrollbarH>
 800a526:	f003 f813 	bl	800d550 <WM_DeleteWindow>
 800a52a:	4620      	mov	r0, r4
 800a52c:	f008 fdd8 	bl	80130e0 <GUI_ALLOC_LockH>
 800a530:	ab02      	add	r3, sp, #8
 800a532:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800a534:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a538:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a53c:	8642      	strh	r2, [r0, #50]	; 0x32
 800a53e:	4618      	mov	r0, r3
 800a540:	f008 fddc 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a544:	b002      	add	sp, #8
 800a546:	bd10      	pop	{r4, pc}

0800a548 <MULTIPAGE__GetPageWidth>:
 800a548:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a54a:	460d      	mov	r5, r1
 800a54c:	f008 fdc8 	bl	80130e0 <GUI_ALLOC_LockH>
 800a550:	9001      	str	r0, [sp, #4]
 800a552:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800a554:	f000 fcdc 	bl	800af10 <GUI_ARRAY_GetNumItems>
 800a558:	9b01      	ldr	r3, [sp, #4]
 800a55a:	6e5c      	ldr	r4, [r3, #100]	; 0x64
 800a55c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800a55e:	8e59      	ldrh	r1, [r3, #50]	; 0x32
 800a560:	2908      	cmp	r1, #8
 800a562:	bf08      	it	eq
 800a564:	4614      	moveq	r4, r2
 800a566:	4285      	cmp	r5, r0
 800a568:	d22e      	bcs.n	800a5c8 <MULTIPAGE__GetPageWidth+0x80>
 800a56a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800a56c:	f007 fb9a 	bl	8011ca4 <GUI_SetFont>
 800a570:	9b01      	ldr	r3, [sp, #4]
 800a572:	4629      	mov	r1, r5
 800a574:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800a576:	f000 fd4d 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 800a57a:	6885      	ldr	r5, [r0, #8]
 800a57c:	9000      	str	r0, [sp, #0]
 800a57e:	b10d      	cbz	r5, 800a584 <MULTIPAGE__GetPageWidth+0x3c>
 800a580:	442c      	add	r4, r5
 800a582:	e01d      	b.n	800a5c0 <MULTIPAGE__GetPageWidth+0x78>
 800a584:	3018      	adds	r0, #24
 800a586:	f007 fe17 	bl	80121b8 <GUI_GetStringDistX>
 800a58a:	462e      	mov	r6, r5
 800a58c:	1907      	adds	r7, r0, r4
 800a58e:	9b00      	ldr	r3, [sp, #0]
 800a590:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 800a594:	68d8      	ldr	r0, [r3, #12]
 800a596:	b160      	cbz	r0, 800a5b2 <MULTIPAGE__GetPageWidth+0x6a>
 800a598:	9b01      	ldr	r3, [sp, #4]
 800a59a:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 800a59c:	071b      	lsls	r3, r3, #28
 800a59e:	d502      	bpl.n	800a5a6 <MULTIPAGE__GetPageWidth+0x5e>
 800a5a0:	f000 fc83 	bl	800aeaa <GUI_DRAW__GetYSize>
 800a5a4:	e001      	b.n	800a5aa <MULTIPAGE__GetPageWidth+0x62>
 800a5a6:	f000 fc6e 	bl	800ae86 <GUI_DRAW__GetXSize>
 800a5aa:	4420      	add	r0, r4
 800a5ac:	4286      	cmp	r6, r0
 800a5ae:	bfb8      	it	lt
 800a5b0:	4606      	movlt	r6, r0
 800a5b2:	3501      	adds	r5, #1
 800a5b4:	2d03      	cmp	r5, #3
 800a5b6:	d1ea      	bne.n	800a58e <MULTIPAGE__GetPageWidth+0x46>
 800a5b8:	42be      	cmp	r6, r7
 800a5ba:	bfac      	ite	ge
 800a5bc:	4634      	movge	r4, r6
 800a5be:	463c      	movlt	r4, r7
 800a5c0:	4668      	mov	r0, sp
 800a5c2:	f008 fd9b 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a5c6:	e000      	b.n	800a5ca <MULTIPAGE__GetPageWidth+0x82>
 800a5c8:	2400      	movs	r4, #0
 800a5ca:	a801      	add	r0, sp, #4
 800a5cc:	f008 fd96 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a5d0:	4620      	mov	r0, r4
 800a5d2:	b003      	add	sp, #12
 800a5d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a5d6 <MULTIPAGE__GetTabBarRect>:
 800a5d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a5da:	b085      	sub	sp, #20
 800a5dc:	460c      	mov	r4, r1
 800a5de:	4606      	mov	r6, r0
 800a5e0:	f008 fd7e 	bl	80130e0 <GUI_ALLOC_LockH>
 800a5e4:	9001      	str	r0, [sp, #4]
 800a5e6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800a5e8:	f007 fde2 	bl	80121b0 <GUI_GetYSizeOfFont>
 800a5ec:	9b01      	ldr	r3, [sp, #4]
 800a5ee:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
 800a5f2:	b90a      	cbnz	r2, 800a5f8 <MULTIPAGE__GetTabBarRect+0x22>
 800a5f4:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800a5f8:	6e99      	ldr	r1, [r3, #104]	; 0x68
 800a5fa:	f8b3 9032 	ldrh.w	r9, [r3, #50]	; 0x32
 800a5fe:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800a600:	6f9f      	ldr	r7, [r3, #120]	; 0x78
 800a602:	4282      	cmp	r2, r0
 800a604:	bfac      	ite	ge
 800a606:	eb01 0802 	addge.w	r8, r1, r2
 800a60a:	eb01 0800 	addlt.w	r8, r1, r0
 800a60e:	4618      	mov	r0, r3
 800a610:	a902      	add	r1, sp, #8
 800a612:	f7ff ff66 	bl	800a4e2 <MULTIPAGE__CalcBorderRect>
 800a616:	a801      	add	r0, sp, #4
 800a618:	f008 fd70 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a61c:	f019 0f08 	tst.w	r9, #8
 800a620:	f005 0304 	and.w	r3, r5, #4
 800a624:	f409 7180 	and.w	r1, r9, #256	; 0x100
 800a628:	f005 0501 	and.w	r5, r5, #1
 800a62c:	d01d      	beq.n	800a66a <MULTIPAGE__GetTabBarRect+0x94>
 800a62e:	b10b      	cbz	r3, 800a634 <MULTIPAGE__GetTabBarRect+0x5e>
 800a630:	2300      	movs	r3, #0
 800a632:	e001      	b.n	800a638 <MULTIPAGE__GetTabBarRect+0x62>
 800a634:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800a638:	8023      	strh	r3, [r4, #0]
 800a63a:	8822      	ldrh	r2, [r4, #0]
 800a63c:	4490      	add	r8, r2
 800a63e:	f8a4 8004 	strh.w	r8, [r4, #4]
 800a642:	b119      	cbz	r1, 800a64c <MULTIPAGE__GetTabBarRect+0x76>
 800a644:	f9bd 000e 	ldrsh.w	r0, [sp, #14]
 800a648:	3820      	subs	r0, #32
 800a64a:	e001      	b.n	800a650 <MULTIPAGE__GetTabBarRect+0x7a>
 800a64c:	4630      	mov	r0, r6
 800a64e:	47b8      	blx	r7
 800a650:	b145      	cbz	r5, 800a664 <MULTIPAGE__GetTabBarRect+0x8e>
 800a652:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a656:	80e3      	strh	r3, [r4, #6]
 800a658:	b21a      	sxth	r2, r3
 800a65a:	1a10      	subs	r0, r2, r0
 800a65c:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800a660:	8060      	strh	r0, [r4, #2]
 800a662:	e01a      	b.n	800a69a <MULTIPAGE__GetTabBarRect+0xc4>
 800a664:	8065      	strh	r5, [r4, #2]
 800a666:	80e0      	strh	r0, [r4, #6]
 800a668:	e017      	b.n	800a69a <MULTIPAGE__GetTabBarRect+0xc4>
 800a66a:	b10b      	cbz	r3, 800a670 <MULTIPAGE__GetTabBarRect+0x9a>
 800a66c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a670:	8063      	strh	r3, [r4, #2]
 800a672:	8862      	ldrh	r2, [r4, #2]
 800a674:	4490      	add	r8, r2
 800a676:	f8a4 8006 	strh.w	r8, [r4, #6]
 800a67a:	b119      	cbz	r1, 800a684 <MULTIPAGE__GetTabBarRect+0xae>
 800a67c:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 800a680:	3820      	subs	r0, #32
 800a682:	e001      	b.n	800a688 <MULTIPAGE__GetTabBarRect+0xb2>
 800a684:	4630      	mov	r0, r6
 800a686:	47b8      	blx	r7
 800a688:	b12d      	cbz	r5, 800a696 <MULTIPAGE__GetTabBarRect+0xc0>
 800a68a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800a68e:	80a3      	strh	r3, [r4, #4]
 800a690:	1a18      	subs	r0, r3, r0
 800a692:	8020      	strh	r0, [r4, #0]
 800a694:	e001      	b.n	800a69a <MULTIPAGE__GetTabBarRect+0xc4>
 800a696:	8025      	strh	r5, [r4, #0]
 800a698:	80a0      	strh	r0, [r4, #4]
 800a69a:	b005      	add	sp, #20
 800a69c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a6a0 <MULTIPAGE__UpdatePositions>:
 800a6a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a6a4:	b088      	sub	sp, #32
 800a6a6:	4604      	mov	r4, r0
 800a6a8:	f008 fd1a 	bl	80130e0 <GUI_ALLOC_LockH>
 800a6ac:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800a6ae:	9003      	str	r0, [sp, #12]
 800a6b0:	4620      	mov	r0, r4
 800a6b2:	4798      	blx	r3
 800a6b4:	4605      	mov	r5, r0
 800a6b6:	9803      	ldr	r0, [sp, #12]
 800a6b8:	a904      	add	r1, sp, #16
 800a6ba:	f8b0 a032 	ldrh.w	sl, [r0, #50]	; 0x32
 800a6be:	f8d0 9048 	ldr.w	r9, [r0, #72]	; 0x48
 800a6c2:	6cc6      	ldr	r6, [r0, #76]	; 0x4c
 800a6c4:	f8d0 8070 	ldr.w	r8, [r0, #112]	; 0x70
 800a6c8:	6b87      	ldr	r7, [r0, #56]	; 0x38
 800a6ca:	f7ff ff0a 	bl	800a4e2 <MULTIPAGE__CalcBorderRect>
 800a6ce:	a803      	add	r0, sp, #12
 800a6d0:	f008 fd14 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a6d4:	f01a 0f08 	tst.w	sl, #8
 800a6d8:	d03f      	beq.n	800a75a <MULTIPAGE__UpdatePositions+0xba>
 800a6da:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800a6de:	429d      	cmp	r5, r3
 800a6e0:	dd3f      	ble.n	800a762 <MULTIPAGE__UpdatePositions+0xc2>
 800a6e2:	4648      	mov	r0, r9
 800a6e4:	f007 fd64 	bl	80121b0 <GUI_GetYSizeOfFont>
 800a6e8:	3006      	adds	r0, #6
 800a6ea:	2204      	movs	r2, #4
 800a6ec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a6f0:	fb90 f3f2 	sdiv	r3, r0, r2
 800a6f4:	07f2      	lsls	r2, r6, #31
 800a6f6:	bf57      	itett	pl
 800a6f8:	f9bd 2016 	ldrshpl.w	r2, [sp, #22]
 800a6fc:	f9bd 2012 	ldrshmi.w	r2, [sp, #18]
 800a700:	eba2 0243 	subpl.w	r2, r2, r3, lsl #1
 800a704:	3201      	addpl	r2, #1
 800a706:	0770      	lsls	r0, r6, #29
 800a708:	bf49      	itett	mi
 800a70a:	f9bd 1010 	ldrshmi.w	r1, [sp, #16]
 800a70e:	f9bd 1014 	ldrshpl.w	r1, [sp, #20]
 800a712:	ebc3 0101 	rsbmi	r1, r3, r1
 800a716:	3101      	addmi	r1, #1
 800a718:	f1b8 0f00 	cmp.w	r8, #0
 800a71c:	d004      	beq.n	800a728 <MULTIPAGE__UpdatePositions+0x88>
 800a71e:	0058      	lsls	r0, r3, #1
 800a720:	9000      	str	r0, [sp, #0]
 800a722:	4620      	mov	r0, r4
 800a724:	f7ff fe2d 	bl	800a382 <_AddScrollbar>
 800a728:	4620      	mov	r0, r4
 800a72a:	a906      	add	r1, sp, #24
 800a72c:	f7ff ff53 	bl	800a5d6 <MULTIPAGE__GetTabBarRect>
 800a730:	2300      	movs	r3, #0
 800a732:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800a736:	f9bd 201a 	ldrsh.w	r2, [sp, #26]
 800a73a:	1a8a      	subs	r2, r1, r2
 800a73c:	2a00      	cmp	r2, #0
 800a73e:	bfcc      	ite	gt
 800a740:	3201      	addgt	r2, #1
 800a742:	2201      	movle	r2, #1
 800a744:	4295      	cmp	r5, r2
 800a746:	4620      	mov	r0, r4
 800a748:	f103 0601 	add.w	r6, r3, #1
 800a74c:	db4c      	blt.n	800a7e8 <MULTIPAGE__UpdatePositions+0x148>
 800a74e:	4619      	mov	r1, r3
 800a750:	f7ff fefa 	bl	800a548 <MULTIPAGE__GetPageWidth>
 800a754:	4633      	mov	r3, r6
 800a756:	1a2d      	subs	r5, r5, r0
 800a758:	e7eb      	b.n	800a732 <MULTIPAGE__UpdatePositions+0x92>
 800a75a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800a75e:	429d      	cmp	r5, r3
 800a760:	dc03      	bgt.n	800a76a <MULTIPAGE__UpdatePositions+0xca>
 800a762:	4620      	mov	r0, r4
 800a764:	f7ff fedb 	bl	800a51e <MULTIPAGE__DeleteScrollbar>
 800a768:	e041      	b.n	800a7ee <MULTIPAGE__UpdatePositions+0x14e>
 800a76a:	4648      	mov	r0, r9
 800a76c:	f007 fd20 	bl	80121b0 <GUI_GetYSizeOfFont>
 800a770:	07f1      	lsls	r1, r6, #31
 800a772:	f100 0006 	add.w	r0, r0, #6
 800a776:	f04f 0204 	mov.w	r2, #4
 800a77a:	bf54      	ite	pl
 800a77c:	f9bd 1014 	ldrshpl.w	r1, [sp, #20]
 800a780:	f9bd 1010 	ldrshmi.w	r1, [sp, #16]
 800a784:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a788:	fb90 f3f2 	sdiv	r3, r0, r2
 800a78c:	bf5c      	itt	pl
 800a78e:	eba1 0143 	subpl.w	r1, r1, r3, lsl #1
 800a792:	3101      	addpl	r1, #1
 800a794:	0772      	lsls	r2, r6, #29
 800a796:	bf57      	itett	pl
 800a798:	f9bd 2012 	ldrshpl.w	r2, [sp, #18]
 800a79c:	f9bd 2016 	ldrshmi.w	r2, [sp, #22]
 800a7a0:	ebc3 0202 	rsbpl	r2, r3, r2
 800a7a4:	3201      	addpl	r2, #1
 800a7a6:	f1b8 0f00 	cmp.w	r8, #0
 800a7aa:	d004      	beq.n	800a7b6 <MULTIPAGE__UpdatePositions+0x116>
 800a7ac:	9300      	str	r3, [sp, #0]
 800a7ae:	4620      	mov	r0, r4
 800a7b0:	005b      	lsls	r3, r3, #1
 800a7b2:	f7ff fde6 	bl	800a382 <_AddScrollbar>
 800a7b6:	4620      	mov	r0, r4
 800a7b8:	a906      	add	r1, sp, #24
 800a7ba:	f7ff ff0c 	bl	800a5d6 <MULTIPAGE__GetTabBarRect>
 800a7be:	2300      	movs	r3, #0
 800a7c0:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 800a7c4:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800a7c8:	1a8a      	subs	r2, r1, r2
 800a7ca:	2a00      	cmp	r2, #0
 800a7cc:	bfcc      	ite	gt
 800a7ce:	3201      	addgt	r2, #1
 800a7d0:	2201      	movle	r2, #1
 800a7d2:	4295      	cmp	r5, r2
 800a7d4:	4620      	mov	r0, r4
 800a7d6:	f103 0601 	add.w	r6, r3, #1
 800a7da:	db05      	blt.n	800a7e8 <MULTIPAGE__UpdatePositions+0x148>
 800a7dc:	4619      	mov	r1, r3
 800a7de:	f7ff feb3 	bl	800a548 <MULTIPAGE__GetPageWidth>
 800a7e2:	4633      	mov	r3, r6
 800a7e4:	1a2d      	subs	r5, r5, r0
 800a7e6:	e7eb      	b.n	800a7c0 <MULTIPAGE__UpdatePositions+0x120>
 800a7e8:	4631      	mov	r1, r6
 800a7ea:	f7ff fe0f 	bl	800a40c <_SetScrollbar>
 800a7ee:	4620      	mov	r0, r4
 800a7f0:	a904      	add	r1, sp, #16
 800a7f2:	f7ff fe81 	bl	800a4f8 <MULTIPAGE__CalcClientRect>
 800a7f6:	4638      	mov	r0, r7
 800a7f8:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800a7fc:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800a800:	f001 fe71 	bl	800c4e6 <WM_MoveChildTo>
 800a804:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 800a808:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 800a80c:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 800a810:	1ac9      	subs	r1, r1, r3
 800a812:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800a816:	1ad2      	subs	r2, r2, r3
 800a818:	4638      	mov	r0, r7
 800a81a:	3101      	adds	r1, #1
 800a81c:	3201      	adds	r2, #1
 800a81e:	f001 fc54 	bl	800c0ca <WM_SetSize>
 800a822:	4620      	mov	r0, r4
 800a824:	f002 fda9 	bl	800d37a <WM_InvalidateWindow>
 800a828:	b008      	add	sp, #32
 800a82a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800a830 <MULTIPAGE_CreateUser>:
 800a830:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a832:	b089      	sub	sp, #36	; 0x24
 800a834:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800a836:	9400      	str	r4, [sp, #0]
 800a838:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800a83a:	f044 0401 	orr.w	r4, r4, #1
 800a83e:	9401      	str	r4, [sp, #4]
 800a840:	4c33      	ldr	r4, [pc, #204]	; (800a910 <MULTIPAGE_CreateUser+0xe0>)
 800a842:	9402      	str	r4, [sp, #8]
 800a844:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800a846:	3460      	adds	r4, #96	; 0x60
 800a848:	9403      	str	r4, [sp, #12]
 800a84a:	f002 fdd7 	bl	800d3fc <WM_CreateWindowAsChild>
 800a84e:	4606      	mov	r6, r0
 800a850:	2800      	cmp	r0, #0
 800a852:	d059      	beq.n	800a908 <MULTIPAGE_CreateUser+0xd8>
 800a854:	f000 fbf1 	bl	800b03a <GUI_ARRAY_Create>
 800a858:	4604      	mov	r4, r0
 800a85a:	2800      	cmp	r0, #0
 800a85c:	d054      	beq.n	800a908 <MULTIPAGE_CreateUser+0xd8>
 800a85e:	4630      	mov	r0, r6
 800a860:	f008 fc3e 	bl	80130e0 <GUI_ALLOC_LockH>
 800a864:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a866:	4d2b      	ldr	r5, [pc, #172]	; (800a914 <MULTIPAGE_CreateUser+0xe4>)
 800a868:	63c4      	str	r4, [r0, #60]	; 0x3c
 800a86a:	f012 0f08 	tst.w	r2, #8
 800a86e:	bf14      	ite	ne
 800a870:	2218      	movne	r2, #24
 800a872:	2210      	moveq	r2, #16
 800a874:	9911      	ldr	r1, [sp, #68]	; 0x44
 800a876:	9005      	str	r0, [sp, #20]
 800a878:	f7ff f80e 	bl	8009898 <WIDGET__Init>
 800a87c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a87e:	9f05      	ldr	r7, [sp, #20]
 800a880:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800a884:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a886:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a888:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a88a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a88c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a88e:	682b      	ldr	r3, [r5, #0]
 800a890:	6023      	str	r3, [r4, #0]
 800a892:	4d21      	ldr	r5, [pc, #132]	; (800a918 <MULTIPAGE_CreateUser+0xe8>)
 800a894:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a898:	643b      	str	r3, [r7, #64]	; 0x40
 800a89a:	4b20      	ldr	r3, [pc, #128]	; (800a91c <MULTIPAGE_CreateUser+0xec>)
 800a89c:	637b      	str	r3, [r7, #52]	; 0x34
 800a89e:	2400      	movs	r4, #0
 800a8a0:	682b      	ldr	r3, [r5, #0]
 800a8a2:	67fb      	str	r3, [r7, #124]	; 0x7c
 800a8a4:	a906      	add	r1, sp, #24
 800a8a6:	4630      	mov	r0, r6
 800a8a8:	647c      	str	r4, [r7, #68]	; 0x44
 800a8aa:	f8c7 4084 	str.w	r4, [r7, #132]	; 0x84
 800a8ae:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 800a8b2:	f7ff fe21 	bl	800a4f8 <MULTIPAGE__CalcClientRect>
 800a8b6:	a805      	add	r0, sp, #20
 800a8b8:	f008 fc20 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a8bc:	682b      	ldr	r3, [r5, #0]
 800a8be:	4630      	mov	r0, r6
 800a8c0:	685b      	ldr	r3, [r3, #4]
 800a8c2:	4798      	blx	r3
 800a8c4:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800a8c8:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800a8cc:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800a8d0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a8d4:	9403      	str	r4, [sp, #12]
 800a8d6:	f240 7582 	movw	r5, #1922	; 0x782
 800a8da:	1a12      	subs	r2, r2, r0
 800a8dc:	1a5b      	subs	r3, r3, r1
 800a8de:	9501      	str	r5, [sp, #4]
 800a8e0:	4d0f      	ldr	r5, [pc, #60]	; (800a920 <MULTIPAGE_CreateUser+0xf0>)
 800a8e2:	9600      	str	r6, [sp, #0]
 800a8e4:	9502      	str	r5, [sp, #8]
 800a8e6:	3201      	adds	r2, #1
 800a8e8:	3301      	adds	r3, #1
 800a8ea:	f002 fd87 	bl	800d3fc <WM_CreateWindowAsChild>
 800a8ee:	4604      	mov	r4, r0
 800a8f0:	b138      	cbz	r0, 800a902 <MULTIPAGE_CreateUser+0xd2>
 800a8f2:	4630      	mov	r0, r6
 800a8f4:	f008 fbf4 	bl	80130e0 <GUI_ALLOC_LockH>
 800a8f8:	9005      	str	r0, [sp, #20]
 800a8fa:	6384      	str	r4, [r0, #56]	; 0x38
 800a8fc:	a805      	add	r0, sp, #20
 800a8fe:	f008 fbfd 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a902:	4630      	mov	r0, r6
 800a904:	f7ff fecc 	bl	800a6a0 <MULTIPAGE__UpdatePositions>
 800a908:	4630      	mov	r0, r6
 800a90a:	b009      	add	sp, #36	; 0x24
 800a90c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a90e:	bf00      	nop
 800a910:	0800a9c3 	.word	0x0800a9c3
 800a914:	20000098 	.word	0x20000098
 800a918:	200000d4 	.word	0x200000d4
 800a91c:	080149ed 	.word	0x080149ed
 800a920:	0800ac5d 	.word	0x0800ac5d

0800a924 <MULTIPAGE_CreateEx>:
 800a924:	b510      	push	{r4, lr}
 800a926:	b086      	sub	sp, #24
 800a928:	9c08      	ldr	r4, [sp, #32]
 800a92a:	9400      	str	r4, [sp, #0]
 800a92c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800a92e:	9401      	str	r4, [sp, #4]
 800a930:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800a932:	9402      	str	r4, [sp, #8]
 800a934:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800a936:	9403      	str	r4, [sp, #12]
 800a938:	2400      	movs	r4, #0
 800a93a:	9404      	str	r4, [sp, #16]
 800a93c:	f7ff ff78 	bl	800a830 <MULTIPAGE_CreateUser>
 800a940:	b006      	add	sp, #24
 800a942:	bd10      	pop	{r4, pc}

0800a944 <MULTIPAGE_SelectPage>:
 800a944:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a948:	460c      	mov	r4, r1
 800a94a:	4605      	mov	r5, r0
 800a94c:	2800      	cmp	r0, #0
 800a94e:	d035      	beq.n	800a9bc <MULTIPAGE_SelectPage+0x78>
 800a950:	f008 fbc6 	bl	80130e0 <GUI_ALLOC_LockH>
 800a954:	ae02      	add	r6, sp, #8
 800a956:	6bc7      	ldr	r7, [r0, #60]	; 0x3c
 800a958:	f846 0d04 	str.w	r0, [r6, #-4]!
 800a95c:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 800a960:	4638      	mov	r0, r7
 800a962:	f000 fad5 	bl	800af10 <GUI_ARRAY_GetNumItems>
 800a966:	4681      	mov	r9, r0
 800a968:	4630      	mov	r0, r6
 800a96a:	f008 fbc7 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a96e:	454c      	cmp	r4, r9
 800a970:	d224      	bcs.n	800a9bc <MULTIPAGE_SelectPage+0x78>
 800a972:	4628      	mov	r0, r5
 800a974:	4621      	mov	r1, r4
 800a976:	f7ff fce4 	bl	800a342 <_GetEnable>
 800a97a:	b1f8      	cbz	r0, 800a9bc <MULTIPAGE_SelectPage+0x78>
 800a97c:	4544      	cmp	r4, r8
 800a97e:	d00f      	beq.n	800a9a0 <MULTIPAGE_SelectPage+0x5c>
 800a980:	4621      	mov	r1, r4
 800a982:	4628      	mov	r0, r5
 800a984:	f7ff fd68 	bl	800a458 <_ShowPage>
 800a988:	4628      	mov	r0, r5
 800a98a:	f008 fba9 	bl	80130e0 <GUI_ALLOC_LockH>
 800a98e:	9001      	str	r0, [sp, #4]
 800a990:	6404      	str	r4, [r0, #64]	; 0x40
 800a992:	4630      	mov	r0, r6
 800a994:	f008 fbb2 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a998:	4628      	mov	r0, r5
 800a99a:	f7ff fe81 	bl	800a6a0 <MULTIPAGE__UpdatePositions>
 800a99e:	e00d      	b.n	800a9bc <MULTIPAGE_SelectPage+0x78>
 800a9a0:	4621      	mov	r1, r4
 800a9a2:	4638      	mov	r0, r7
 800a9a4:	f000 fb36 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 800a9a8:	ab02      	add	r3, sp, #8
 800a9aa:	6804      	ldr	r4, [r0, #0]
 800a9ac:	f843 0d08 	str.w	r0, [r3, #-8]!
 800a9b0:	4668      	mov	r0, sp
 800a9b2:	f008 fba3 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a9b6:	4620      	mov	r0, r4
 800a9b8:	f001 fc1c 	bl	800c1f4 <WM_SetFocus>
 800a9bc:	b003      	add	sp, #12
 800a9be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a9c2 <MULTIPAGE_Callback>:
 800a9c2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a9c6:	6844      	ldr	r4, [r0, #4]
 800a9c8:	4605      	mov	r5, r0
 800a9ca:	2c00      	cmp	r4, #0
 800a9cc:	f000 8102 	beq.w	800abd4 <MULTIPAGE_Callback+0x212>
 800a9d0:	6803      	ldr	r3, [r0, #0]
 800a9d2:	2b1e      	cmp	r3, #30
 800a9d4:	d12d      	bne.n	800aa32 <MULTIPAGE_Callback+0x70>
 800a9d6:	68c3      	ldr	r3, [r0, #12]
 800a9d8:	2b01      	cmp	r3, #1
 800a9da:	d130      	bne.n	800aa3e <MULTIPAGE_Callback+0x7c>
 800a9dc:	4620      	mov	r0, r4
 800a9de:	f008 fb7f 	bl	80130e0 <GUI_ALLOC_LockH>
 800a9e2:	4602      	mov	r2, r0
 800a9e4:	a802      	add	r0, sp, #8
 800a9e6:	6bd6      	ldr	r6, [r2, #60]	; 0x3c
 800a9e8:	f840 2d04 	str.w	r2, [r0, #-4]!
 800a9ec:	6c17      	ldr	r7, [r2, #64]	; 0x40
 800a9ee:	f008 fb85 	bl	80130fc <GUI_ALLOC_UnlockH>
 800a9f2:	4630      	mov	r0, r6
 800a9f4:	f000 fa8c 	bl	800af10 <GUI_ARRAY_GetNumItems>
 800a9f8:	4287      	cmp	r7, r0
 800a9fa:	d20b      	bcs.n	800aa14 <MULTIPAGE_Callback+0x52>
 800a9fc:	4630      	mov	r0, r6
 800a9fe:	4639      	mov	r1, r7
 800aa00:	f000 fb08 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 800aa04:	ab02      	add	r3, sp, #8
 800aa06:	6806      	ldr	r6, [r0, #0]
 800aa08:	f843 0d08 	str.w	r0, [r3, #-8]!
 800aa0c:	4668      	mov	r0, sp
 800aa0e:	f008 fb75 	bl	80130fc <GUI_ALLOC_UnlockH>
 800aa12:	e000      	b.n	800aa16 <MULTIPAGE_Callback+0x54>
 800aa14:	2600      	movs	r6, #0
 800aa16:	4630      	mov	r0, r6
 800aa18:	f001 fe4c 	bl	800c6b4 <WM_IsVisible>
 800aa1c:	b178      	cbz	r0, 800aa3e <MULTIPAGE_Callback+0x7c>
 800aa1e:	f001 fee1 	bl	800c7e4 <WM_GetFocussedWindow>
 800aa22:	4631      	mov	r1, r6
 800aa24:	f001 fa35 	bl	800be92 <WM__IsChild>
 800aa28:	b948      	cbnz	r0, 800aa3e <MULTIPAGE_Callback+0x7c>
 800aa2a:	4630      	mov	r0, r6
 800aa2c:	f001 fbe2 	bl	800c1f4 <WM_SetFocus>
 800aa30:	e005      	b.n	800aa3e <MULTIPAGE_Callback+0x7c>
 800aa32:	4620      	mov	r0, r4
 800aa34:	4629      	mov	r1, r5
 800aa36:	f7fe ff37 	bl	80098a8 <WIDGET_HandleActive>
 800aa3a:	4606      	mov	r6, r0
 800aa3c:	e000      	b.n	800aa40 <MULTIPAGE_Callback+0x7e>
 800aa3e:	2600      	movs	r6, #0
 800aa40:	682b      	ldr	r3, [r5, #0]
 800aa42:	2b14      	cmp	r3, #20
 800aa44:	f000 80ad 	beq.w	800aba2 <MULTIPAGE_Callback+0x1e0>
 800aa48:	dc08      	bgt.n	800aa5c <MULTIPAGE_Callback+0x9a>
 800aa4a:	2b0b      	cmp	r3, #11
 800aa4c:	f000 80b2 	beq.w	800abb4 <MULTIPAGE_Callback+0x1f2>
 800aa50:	2b0f      	cmp	r3, #15
 800aa52:	d024      	beq.n	800aa9e <MULTIPAGE_Callback+0xdc>
 800aa54:	2b05      	cmp	r3, #5
 800aa56:	f040 80b9 	bne.w	800abcc <MULTIPAGE_Callback+0x20a>
 800aa5a:	e0a7      	b.n	800abac <MULTIPAGE_Callback+0x1ea>
 800aa5c:	2b26      	cmp	r3, #38	; 0x26
 800aa5e:	f000 8086 	beq.w	800ab6e <MULTIPAGE_Callback+0x1ac>
 800aa62:	dc0e      	bgt.n	800aa82 <MULTIPAGE_Callback+0xc0>
 800aa64:	2b17      	cmp	r3, #23
 800aa66:	f040 80b1 	bne.w	800abcc <MULTIPAGE_Callback+0x20a>
 800aa6a:	4620      	mov	r0, r4
 800aa6c:	f008 fb38 	bl	80130e0 <GUI_ALLOC_LockH>
 800aa70:	ab02      	add	r3, sp, #8
 800aa72:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800aa74:	f843 0d04 	str.w	r0, [r3, #-4]!
 800aa78:	60ea      	str	r2, [r5, #12]
 800aa7a:	4618      	mov	r0, r3
 800aa7c:	f008 fb3e 	bl	80130fc <GUI_ALLOC_UnlockH>
 800aa80:	e0a8      	b.n	800abd4 <MULTIPAGE_Callback+0x212>
 800aa82:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800aa86:	d01b      	beq.n	800aac0 <MULTIPAGE_Callback+0xfe>
 800aa88:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800aa8c:	f040 809e 	bne.w	800abcc <MULTIPAGE_Callback+0x20a>
 800aa90:	4620      	mov	r0, r4
 800aa92:	f7ff fc3d 	bl	800a310 <_GetScrollbarH>
 800aa96:	68e9      	ldr	r1, [r5, #12]
 800aa98:	f008 fe58 	bl	801374c <WIDGET_SetEffect>
 800aa9c:	e086      	b.n	800abac <MULTIPAGE_Callback+0x1ea>
 800aa9e:	4620      	mov	r0, r4
 800aaa0:	f008 fb1e 	bl	80130e0 <GUI_ALLOC_LockH>
 800aaa4:	ab02      	add	r3, sp, #8
 800aaa6:	f843 0d04 	str.w	r0, [r3, #-4]!
 800aaaa:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
 800aaac:	6815      	ldr	r5, [r2, #0]
 800aaae:	4618      	mov	r0, r3
 800aab0:	f008 fb24 	bl	80130fc <GUI_ALLOC_UnlockH>
 800aab4:	2d00      	cmp	r5, #0
 800aab6:	f000 808d 	beq.w	800abd4 <MULTIPAGE_Callback+0x212>
 800aaba:	4620      	mov	r0, r4
 800aabc:	47a8      	blx	r5
 800aabe:	e089      	b.n	800abd4 <MULTIPAGE_Callback+0x212>
 800aac0:	68ee      	ldr	r6, [r5, #12]
 800aac2:	2e00      	cmp	r6, #0
 800aac4:	d04a      	beq.n	800ab5c <MULTIPAGE_Callback+0x19a>
 800aac6:	7a33      	ldrb	r3, [r6, #8]
 800aac8:	2b00      	cmp	r3, #0
 800aaca:	d049      	beq.n	800ab60 <MULTIPAGE_Callback+0x19e>
 800aacc:	4620      	mov	r0, r4
 800aace:	f8d6 a000 	ldr.w	sl, [r6]
 800aad2:	f8d6 9004 	ldr.w	r9, [r6, #4]
 800aad6:	f008 fb03 	bl	80130e0 <GUI_ALLOC_LockH>
 800aada:	af02      	add	r7, sp, #8
 800aadc:	f847 0d04 	str.w	r0, [r7, #-4]!
 800aae0:	f8d0 8074 	ldr.w	r8, [r0, #116]	; 0x74
 800aae4:	4638      	mov	r0, r7
 800aae6:	f008 fb09 	bl	80130fc <GUI_ALLOC_UnlockH>
 800aaea:	4651      	mov	r1, sl
 800aaec:	4620      	mov	r0, r4
 800aaee:	464a      	mov	r2, r9
 800aaf0:	47c0      	blx	r8
 800aaf2:	1e01      	subs	r1, r0, #0
 800aaf4:	4620      	mov	r0, r4
 800aaf6:	db09      	blt.n	800ab0c <MULTIPAGE_Callback+0x14a>
 800aaf8:	f7ff ff24 	bl	800a944 <MULTIPAGE_SelectPage>
 800aafc:	4620      	mov	r0, r4
 800aafe:	2105      	movs	r1, #5
 800ab00:	f001 fce7 	bl	800c4d2 <WM_NotifyParent>
 800ab04:	4620      	mov	r0, r4
 800ab06:	f001 fef9 	bl	800c8fc <WM_BringToTop>
 800ab0a:	e02b      	b.n	800ab64 <MULTIPAGE_Callback+0x1a2>
 800ab0c:	f001 fe4a 	bl	800c7a4 <WM_GetWindowOrgX>
 800ab10:	4482      	add	sl, r0
 800ab12:	4620      	mov	r0, r4
 800ab14:	f001 fe4e 	bl	800c7b4 <WM_GetWindowOrgY>
 800ab18:	4481      	add	r9, r0
 800ab1a:	4651      	mov	r1, sl
 800ab1c:	4620      	mov	r0, r4
 800ab1e:	464a      	mov	r2, r9
 800ab20:	f001 fc4a 	bl	800c3b8 <WM_Screen2hWinEx>
 800ab24:	4680      	mov	r8, r0
 800ab26:	b1e8      	cbz	r0, 800ab64 <MULTIPAGE_Callback+0x1a2>
 800ab28:	42a0      	cmp	r0, r4
 800ab2a:	d01b      	beq.n	800ab64 <MULTIPAGE_Callback+0x1a2>
 800ab2c:	f001 fe3a 	bl	800c7a4 <WM_GetWindowOrgX>
 800ab30:	ebc0 000a 	rsb	r0, r0, sl
 800ab34:	6030      	str	r0, [r6, #0]
 800ab36:	4640      	mov	r0, r8
 800ab38:	f001 fe3c 	bl	800c7b4 <WM_GetWindowOrgY>
 800ab3c:	ebc0 0009 	rsb	r0, r0, r9
 800ab40:	6070      	str	r0, [r6, #4]
 800ab42:	f8c5 8004 	str.w	r8, [r5, #4]
 800ab46:	4640      	mov	r0, r8
 800ab48:	f008 faca 	bl	80130e0 <GUI_ALLOC_LockH>
 800ab4c:	9001      	str	r0, [sp, #4]
 800ab4e:	6906      	ldr	r6, [r0, #16]
 800ab50:	4638      	mov	r0, r7
 800ab52:	f008 fad3 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ab56:	4628      	mov	r0, r5
 800ab58:	47b0      	blx	r6
 800ab5a:	e003      	b.n	800ab64 <MULTIPAGE_Callback+0x1a2>
 800ab5c:	2103      	movs	r1, #3
 800ab5e:	e002      	b.n	800ab66 <MULTIPAGE_Callback+0x1a4>
 800ab60:	2102      	movs	r1, #2
 800ab62:	e000      	b.n	800ab66 <MULTIPAGE_Callback+0x1a4>
 800ab64:	2101      	movs	r1, #1
 800ab66:	4620      	mov	r0, r4
 800ab68:	f001 fcb3 	bl	800c4d2 <WM_NotifyParent>
 800ab6c:	e032      	b.n	800abd4 <MULTIPAGE_Callback+0x212>
 800ab6e:	68eb      	ldr	r3, [r5, #12]
 800ab70:	2b05      	cmp	r3, #5
 800ab72:	d12f      	bne.n	800abd4 <MULTIPAGE_Callback+0x212>
 800ab74:	68a8      	ldr	r0, [r5, #8]
 800ab76:	f001 fe25 	bl	800c7c4 <WM_GetId>
 800ab7a:	28ff      	cmp	r0, #255	; 0xff
 800ab7c:	d12a      	bne.n	800abd4 <MULTIPAGE_Callback+0x212>
 800ab7e:	4620      	mov	r0, r4
 800ab80:	f008 faae 	bl	80130e0 <GUI_ALLOC_LockH>
 800ab84:	ae02      	add	r6, sp, #8
 800ab86:	4607      	mov	r7, r0
 800ab88:	f846 0d04 	str.w	r0, [r6, #-4]!
 800ab8c:	68a8      	ldr	r0, [r5, #8]
 800ab8e:	f009 f997 	bl	8013ec0 <SCROLLBAR_GetValue>
 800ab92:	6478      	str	r0, [r7, #68]	; 0x44
 800ab94:	4630      	mov	r0, r6
 800ab96:	f008 fab1 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ab9a:	4620      	mov	r0, r4
 800ab9c:	f002 fbed 	bl	800d37a <WM_InvalidateWindow>
 800aba0:	e018      	b.n	800abd4 <MULTIPAGE_Callback+0x212>
 800aba2:	4620      	mov	r0, r4
 800aba4:	68e9      	ldr	r1, [r5, #12]
 800aba6:	f7ff fca7 	bl	800a4f8 <MULTIPAGE__CalcClientRect>
 800abaa:	e013      	b.n	800abd4 <MULTIPAGE_Callback+0x212>
 800abac:	4620      	mov	r0, r4
 800abae:	f7ff fd77 	bl	800a6a0 <MULTIPAGE__UpdatePositions>
 800abb2:	e00f      	b.n	800abd4 <MULTIPAGE_Callback+0x212>
 800abb4:	4620      	mov	r0, r4
 800abb6:	f008 fa93 	bl	80130e0 <GUI_ALLOC_LockH>
 800abba:	ac02      	add	r4, sp, #8
 800abbc:	f844 0d04 	str.w	r0, [r4, #-4]!
 800abc0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800abc2:	f000 f9fe 	bl	800afc2 <GUI_ARRAY_Delete>
 800abc6:	4620      	mov	r0, r4
 800abc8:	f008 fa98 	bl	80130fc <GUI_ALLOC_UnlockH>
 800abcc:	b116      	cbz	r6, 800abd4 <MULTIPAGE_Callback+0x212>
 800abce:	4628      	mov	r0, r5
 800abd0:	f002 fff6 	bl	800dbc0 <WM_DefaultProc>
 800abd4:	b002      	add	sp, #8
 800abd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800abda <_MoveSel>:
 800abda:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800abde:	460f      	mov	r7, r1
 800abe0:	4606      	mov	r6, r0
 800abe2:	f008 fa7d 	bl	80130e0 <GUI_ALLOC_LockH>
 800abe6:	9001      	str	r0, [sp, #4]
 800abe8:	4630      	mov	r0, r6
 800abea:	f7ff fb91 	bl	800a310 <_GetScrollbarH>
 800abee:	9b01      	ldr	r3, [sp, #4]
 800abf0:	4680      	mov	r8, r0
 800abf2:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800abf4:	f000 f98c 	bl	800af10 <GUI_ARRAY_GetNumItems>
 800abf8:	4681      	mov	r9, r0
 800abfa:	a802      	add	r0, sp, #8
 800abfc:	f04f 34ff 	mov.w	r4, #4294967295
 800ac00:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 800ac04:	6c15      	ldr	r5, [r2, #64]	; 0x40
 800ac06:	f8d2 a044 	ldr.w	sl, [r2, #68]	; 0x44
 800ac0a:	f008 fa77 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ac0e:	443d      	add	r5, r7
 800ac10:	2d00      	cmp	r5, #0
 800ac12:	da06      	bge.n	800ac22 <_MoveSel+0x48>
 800ac14:	2c00      	cmp	r4, #0
 800ac16:	db11      	blt.n	800ac3c <_MoveSel+0x62>
 800ac18:	4630      	mov	r0, r6
 800ac1a:	4621      	mov	r1, r4
 800ac1c:	f7ff fe92 	bl	800a944 <MULTIPAGE_SelectPage>
 800ac20:	e00e      	b.n	800ac40 <_MoveSel+0x66>
 800ac22:	454d      	cmp	r5, r9
 800ac24:	daf6      	bge.n	800ac14 <_MoveSel+0x3a>
 800ac26:	1c63      	adds	r3, r4, #1
 800ac28:	d1f4      	bne.n	800ac14 <_MoveSel+0x3a>
 800ac2a:	4629      	mov	r1, r5
 800ac2c:	4630      	mov	r0, r6
 800ac2e:	f7ff fb88 	bl	800a342 <_GetEnable>
 800ac32:	2800      	cmp	r0, #0
 800ac34:	bf18      	it	ne
 800ac36:	462c      	movne	r4, r5
 800ac38:	443d      	add	r5, r7
 800ac3a:	e7e9      	b.n	800ac10 <_MoveSel+0x36>
 800ac3c:	eb0a 0407 	add.w	r4, sl, r7
 800ac40:	f1b8 0f00 	cmp.w	r8, #0
 800ac44:	d007      	beq.n	800ac56 <_MoveSel+0x7c>
 800ac46:	2c00      	cmp	r4, #0
 800ac48:	db05      	blt.n	800ac56 <_MoveSel+0x7c>
 800ac4a:	454c      	cmp	r4, r9
 800ac4c:	da03      	bge.n	800ac56 <_MoveSel+0x7c>
 800ac4e:	4640      	mov	r0, r8
 800ac50:	4621      	mov	r1, r4
 800ac52:	f009 fa05 	bl	8014060 <SCROLLBAR_SetValue>
 800ac56:	b002      	add	sp, #8
 800ac58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800ac5c <_ClientCallback>:
 800ac5c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ac5e:	6845      	ldr	r5, [r0, #4]
 800ac60:	4604      	mov	r4, r0
 800ac62:	4628      	mov	r0, r5
 800ac64:	f001 fd96 	bl	800c794 <WM_GetParent>
 800ac68:	6823      	ldr	r3, [r4, #0]
 800ac6a:	2b17      	cmp	r3, #23
 800ac6c:	4606      	mov	r6, r0
 800ac6e:	d020      	beq.n	800acb2 <_ClientCallback+0x56>
 800ac70:	dc11      	bgt.n	800ac96 <_ClientCallback+0x3a>
 800ac72:	2b0e      	cmp	r3, #14
 800ac74:	d01f      	beq.n	800acb6 <_ClientCallback+0x5a>
 800ac76:	2b0f      	cmp	r3, #15
 800ac78:	d12d      	bne.n	800acd6 <_ClientCallback+0x7a>
 800ac7a:	f008 fa31 	bl	80130e0 <GUI_ALLOC_LockH>
 800ac7e:	ac02      	add	r4, sp, #8
 800ac80:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ac84:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800ac86:	f005 fe47 	bl	8010918 <LCD_SetBkColor>
 800ac8a:	4620      	mov	r0, r4
 800ac8c:	f008 fa36 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ac90:	f007 fdf6 	bl	8012880 <GUI_Clear>
 800ac94:	e022      	b.n	800acdc <_ClientCallback+0x80>
 800ac96:	2b31      	cmp	r3, #49	; 0x31
 800ac98:	d008      	beq.n	800acac <_ClientCallback+0x50>
 800ac9a:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800ac9e:	d11a      	bne.n	800acd6 <_ClientCallback+0x7a>
 800aca0:	f001 faa8 	bl	800c1f4 <WM_SetFocus>
 800aca4:	4630      	mov	r0, r6
 800aca6:	f001 fe29 	bl	800c8fc <WM_BringToTop>
 800acaa:	e017      	b.n	800acdc <_ClientCallback+0x80>
 800acac:	2300      	movs	r3, #0
 800acae:	60e3      	str	r3, [r4, #12]
 800acb0:	e014      	b.n	800acdc <_ClientCallback+0x80>
 800acb2:	60e5      	str	r5, [r4, #12]
 800acb4:	e012      	b.n	800acdc <_ClientCallback+0x80>
 800acb6:	68e3      	ldr	r3, [r4, #12]
 800acb8:	685a      	ldr	r2, [r3, #4]
 800acba:	2a00      	cmp	r2, #0
 800acbc:	dd0b      	ble.n	800acd6 <_ClientCallback+0x7a>
 800acbe:	681b      	ldr	r3, [r3, #0]
 800acc0:	2b21      	cmp	r3, #33	; 0x21
 800acc2:	d003      	beq.n	800accc <_ClientCallback+0x70>
 800acc4:	2b22      	cmp	r3, #34	; 0x22
 800acc6:	d106      	bne.n	800acd6 <_ClientCallback+0x7a>
 800acc8:	2101      	movs	r1, #1
 800acca:	e001      	b.n	800acd0 <_ClientCallback+0x74>
 800accc:	f04f 31ff 	mov.w	r1, #4294967295
 800acd0:	f7ff ff83 	bl	800abda <_MoveSel>
 800acd4:	e002      	b.n	800acdc <_ClientCallback+0x80>
 800acd6:	4620      	mov	r0, r4
 800acd8:	f002 ff72 	bl	800dbc0 <WM_DefaultProc>
 800acdc:	b002      	add	sp, #8
 800acde:	bd70      	pop	{r4, r5, r6, pc}

0800ace0 <MULTIPAGE_AddPage>:
 800ace0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ace4:	460c      	mov	r4, r1
 800ace6:	b08d      	sub	sp, #52	; 0x34
 800ace8:	4616      	mov	r6, r2
 800acea:	4681      	mov	r9, r0
 800acec:	2800      	cmp	r0, #0
 800acee:	d079      	beq.n	800ade4 <MULTIPAGE_AddPage+0x104>
 800acf0:	f008 f9f6 	bl	80130e0 <GUI_ALLOC_LockH>
 800acf4:	ab0c      	add	r3, sp, #48	; 0x30
 800acf6:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800acf8:	f843 0d28 	str.w	r0, [r3, #-40]!
 800acfc:	6b87      	ldr	r7, [r0, #56]	; 0x38
 800acfe:	4618      	mov	r0, r3
 800ad00:	f008 f9fc 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ad04:	bb74      	cbnz	r4, 800ad64 <MULTIPAGE_AddPage+0x84>
 800ad06:	4638      	mov	r0, r7
 800ad08:	f008 f9ea 	bl	80130e0 <GUI_ALLOC_LockH>
 800ad0c:	ab0c      	add	r3, sp, #48	; 0x30
 800ad0e:	69c7      	ldr	r7, [r0, #28]
 800ad10:	f843 0d20 	str.w	r0, [r3, #-32]!
 800ad14:	4618      	mov	r0, r3
 800ad16:	f008 f9f1 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ad1a:	b357      	cbz	r7, 800ad72 <MULTIPAGE_AddPage+0x92>
 800ad1c:	bb5c      	cbnz	r4, 800ad76 <MULTIPAGE_AddPage+0x96>
 800ad1e:	4628      	mov	r0, r5
 800ad20:	f000 f8f6 	bl	800af10 <GUI_ARRAY_GetNumItems>
 800ad24:	46a0      	mov	r8, r4
 800ad26:	4682      	mov	sl, r0
 800ad28:	45d0      	cmp	r8, sl
 800ad2a:	da12      	bge.n	800ad52 <MULTIPAGE_AddPage+0x72>
 800ad2c:	4641      	mov	r1, r8
 800ad2e:	4628      	mov	r0, r5
 800ad30:	f000 f970 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 800ad34:	4602      	mov	r2, r0
 800ad36:	a80c      	add	r0, sp, #48	; 0x30
 800ad38:	2100      	movs	r1, #0
 800ad3a:	f8d2 b000 	ldr.w	fp, [r2]
 800ad3e:	f840 2d2c 	str.w	r2, [r0, #-44]!
 800ad42:	6091      	str	r1, [r2, #8]
 800ad44:	f008 f9da 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ad48:	45bb      	cmp	fp, r7
 800ad4a:	d003      	beq.n	800ad54 <MULTIPAGE_AddPage+0x74>
 800ad4c:	f108 0801 	add.w	r8, r8, #1
 800ad50:	e7ea      	b.n	800ad28 <MULTIPAGE_AddPage+0x48>
 800ad52:	463c      	mov	r4, r7
 800ad54:	4638      	mov	r0, r7
 800ad56:	f008 f9c3 	bl	80130e0 <GUI_ALLOC_LockH>
 800ad5a:	ab0c      	add	r3, sp, #48	; 0x30
 800ad5c:	6a07      	ldr	r7, [r0, #32]
 800ad5e:	f843 0d24 	str.w	r0, [r3, #-36]!
 800ad62:	e7d7      	b.n	800ad14 <MULTIPAGE_AddPage+0x34>
 800ad64:	2200      	movs	r2, #0
 800ad66:	4620      	mov	r0, r4
 800ad68:	4639      	mov	r1, r7
 800ad6a:	4613      	mov	r3, r2
 800ad6c:	f001 fe57 	bl	800ca1e <WM_AttachWindowAt>
 800ad70:	e001      	b.n	800ad76 <MULTIPAGE_AddPage+0x96>
 800ad72:	2c00      	cmp	r4, #0
 800ad74:	d036      	beq.n	800ade4 <MULTIPAGE_AddPage+0x104>
 800ad76:	2300      	movs	r3, #0
 800ad78:	f88d 3003 	strb.w	r3, [sp, #3]
 800ad7c:	b90e      	cbnz	r6, 800ad82 <MULTIPAGE_AddPage+0xa2>
 800ad7e:	f10d 0603 	add.w	r6, sp, #3
 800ad82:	2301      	movs	r3, #1
 800ad84:	f88d 3018 	strb.w	r3, [sp, #24]
 800ad88:	4630      	mov	r0, r6
 800ad8a:	2300      	movs	r3, #0
 800ad8c:	9405      	str	r4, [sp, #20]
 800ad8e:	9308      	str	r3, [sp, #32]
 800ad90:	9309      	str	r3, [sp, #36]	; 0x24
 800ad92:	930a      	str	r3, [sp, #40]	; 0x28
 800ad94:	9307      	str	r3, [sp, #28]
 800ad96:	f7f5 fa3b 	bl	8000210 <strlen>
 800ad9a:	a905      	add	r1, sp, #20
 800ad9c:	f100 021c 	add.w	r2, r0, #28
 800ada0:	4628      	mov	r0, r5
 800ada2:	f000 f8c4 	bl	800af2e <GUI_ARRAY_AddItem>
 800ada6:	b9b0      	cbnz	r0, 800add6 <MULTIPAGE_AddPage+0xf6>
 800ada8:	4628      	mov	r0, r5
 800adaa:	f000 f8b1 	bl	800af10 <GUI_ARRAY_GetNumItems>
 800adae:	1e41      	subs	r1, r0, #1
 800adb0:	4628      	mov	r0, r5
 800adb2:	f000 f92f 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 800adb6:	ac0c      	add	r4, sp, #48	; 0x30
 800adb8:	4607      	mov	r7, r0
 800adba:	f844 0d2c 	str.w	r0, [r4, #-44]!
 800adbe:	4630      	mov	r0, r6
 800adc0:	f7f5 fa26 	bl	8000210 <strlen>
 800adc4:	4631      	mov	r1, r6
 800adc6:	1c42      	adds	r2, r0, #1
 800adc8:	f107 0018 	add.w	r0, r7, #24
 800adcc:	f00f fe41 	bl	801aa52 <memcpy>
 800add0:	4620      	mov	r0, r4
 800add2:	f008 f993 	bl	80130fc <GUI_ALLOC_UnlockH>
 800add6:	4628      	mov	r0, r5
 800add8:	f000 f89a 	bl	800af10 <GUI_ARRAY_GetNumItems>
 800addc:	1e41      	subs	r1, r0, #1
 800adde:	4648      	mov	r0, r9
 800ade0:	f7ff fdb0 	bl	800a944 <MULTIPAGE_SelectPage>
 800ade4:	b00d      	add	sp, #52	; 0x34
 800ade6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800adea <MULTIPAGE_GetFont>:
 800adea:	b513      	push	{r0, r1, r4, lr}
 800adec:	4604      	mov	r4, r0
 800adee:	b140      	cbz	r0, 800ae02 <MULTIPAGE_GetFont+0x18>
 800adf0:	f008 f976 	bl	80130e0 <GUI_ALLOC_LockH>
 800adf4:	ab02      	add	r3, sp, #8
 800adf6:	6c84      	ldr	r4, [r0, #72]	; 0x48
 800adf8:	f843 0d04 	str.w	r0, [r3, #-4]!
 800adfc:	4618      	mov	r0, r3
 800adfe:	f008 f97d 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ae02:	4620      	mov	r0, r4
 800ae04:	b002      	add	sp, #8
 800ae06:	bd10      	pop	{r4, pc}

0800ae08 <MULTIPAGE_SetAlign>:
 800ae08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ae0a:	460d      	mov	r5, r1
 800ae0c:	4604      	mov	r4, r0
 800ae0e:	b1d8      	cbz	r0, 800ae48 <MULTIPAGE_SetAlign+0x40>
 800ae10:	f008 f966 	bl	80130e0 <GUI_ALLOC_LockH>
 800ae14:	a902      	add	r1, sp, #8
 800ae16:	64c5      	str	r5, [r0, #76]	; 0x4c
 800ae18:	9001      	str	r0, [sp, #4]
 800ae1a:	4620      	mov	r0, r4
 800ae1c:	f7ff fb6c 	bl	800a4f8 <MULTIPAGE__CalcClientRect>
 800ae20:	9b01      	ldr	r3, [sp, #4]
 800ae22:	f9bd 6008 	ldrsh.w	r6, [sp, #8]
 800ae26:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ae2a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ae2e:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 800ae32:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800ae34:	4431      	add	r1, r6
 800ae36:	442a      	add	r2, r5
 800ae38:	f001 fc27 	bl	800c68a <WM_MoveTo>
 800ae3c:	a801      	add	r0, sp, #4
 800ae3e:	f008 f95d 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ae42:	4620      	mov	r0, r4
 800ae44:	f7ff fc2c 	bl	800a6a0 <MULTIPAGE__UpdatePositions>
 800ae48:	b004      	add	sp, #16
 800ae4a:	bd70      	pop	{r4, r5, r6, pc}

0800ae4c <MULTIPAGE_IsPageEnabled>:
 800ae4c:	b108      	cbz	r0, 800ae52 <MULTIPAGE_IsPageEnabled+0x6>
 800ae4e:	f7ff ba78 	b.w	800a342 <_GetEnable>
 800ae52:	4770      	bx	lr

0800ae54 <GUI_DRAW__Draw>:
 800ae54:	e92d 43e3 	stmdb	sp!, {r0, r1, r5, r6, r7, r8, r9, lr}
 800ae58:	4688      	mov	r8, r1
 800ae5a:	4617      	mov	r7, r2
 800ae5c:	461e      	mov	r6, r3
 800ae5e:	4681      	mov	r9, r0
 800ae60:	b170      	cbz	r0, 800ae80 <GUI_DRAW__Draw+0x2c>
 800ae62:	f008 f93d 	bl	80130e0 <GUI_ALLOC_LockH>
 800ae66:	4605      	mov	r5, r0
 800ae68:	a802      	add	r0, sp, #8
 800ae6a:	682b      	ldr	r3, [r5, #0]
 800ae6c:	f840 5d04 	str.w	r5, [r0, #-4]!
 800ae70:	681d      	ldr	r5, [r3, #0]
 800ae72:	f008 f943 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ae76:	4648      	mov	r0, r9
 800ae78:	4641      	mov	r1, r8
 800ae7a:	463a      	mov	r2, r7
 800ae7c:	4633      	mov	r3, r6
 800ae7e:	47a8      	blx	r5
 800ae80:	b002      	add	sp, #8
 800ae82:	e8bd 83e0 	ldmia.w	sp!, {r5, r6, r7, r8, r9, pc}

0800ae86 <GUI_DRAW__GetXSize>:
 800ae86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae88:	4604      	mov	r4, r0
 800ae8a:	b160      	cbz	r0, 800aea6 <GUI_DRAW__GetXSize+0x20>
 800ae8c:	f008 f928 	bl	80130e0 <GUI_ALLOC_LockH>
 800ae90:	ab02      	add	r3, sp, #8
 800ae92:	6802      	ldr	r2, [r0, #0]
 800ae94:	f843 0d04 	str.w	r0, [r3, #-4]!
 800ae98:	4618      	mov	r0, r3
 800ae9a:	6855      	ldr	r5, [r2, #4]
 800ae9c:	f008 f92e 	bl	80130fc <GUI_ALLOC_UnlockH>
 800aea0:	4620      	mov	r0, r4
 800aea2:	47a8      	blx	r5
 800aea4:	e7ff      	b.n	800aea6 <GUI_DRAW__GetXSize+0x20>
 800aea6:	b003      	add	sp, #12
 800aea8:	bd30      	pop	{r4, r5, pc}

0800aeaa <GUI_DRAW__GetYSize>:
 800aeaa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aeac:	4604      	mov	r4, r0
 800aeae:	b160      	cbz	r0, 800aeca <GUI_DRAW__GetYSize+0x20>
 800aeb0:	f008 f916 	bl	80130e0 <GUI_ALLOC_LockH>
 800aeb4:	ab02      	add	r3, sp, #8
 800aeb6:	6802      	ldr	r2, [r0, #0]
 800aeb8:	f843 0d04 	str.w	r0, [r3, #-4]!
 800aebc:	4618      	mov	r0, r3
 800aebe:	6895      	ldr	r5, [r2, #8]
 800aec0:	f008 f91c 	bl	80130fc <GUI_ALLOC_UnlockH>
 800aec4:	4620      	mov	r0, r4
 800aec6:	47a8      	blx	r5
 800aec8:	e7ff      	b.n	800aeca <GUI_DRAW__GetYSize+0x20>
 800aeca:	b003      	add	sp, #12
 800aecc:	bd30      	pop	{r4, r5, pc}

0800aece <GUI_ARRAY__GethItem>:
 800aece:	8803      	ldrh	r3, [r0, #0]
 800aed0:	4299      	cmp	r1, r3
 800aed2:	b513      	push	{r0, r1, r4, lr}
 800aed4:	460c      	mov	r4, r1
 800aed6:	d20e      	bcs.n	800aef6 <GUI_ARRAY__GethItem+0x28>
 800aed8:	6840      	ldr	r0, [r0, #4]
 800aeda:	b150      	cbz	r0, 800aef2 <GUI_ARRAY__GethItem+0x24>
 800aedc:	f008 f900 	bl	80130e0 <GUI_ALLOC_LockH>
 800aee0:	ab02      	add	r3, sp, #8
 800aee2:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 800aee6:	f843 0d04 	str.w	r0, [r3, #-4]!
 800aeea:	4618      	mov	r0, r3
 800aeec:	f008 f906 	bl	80130fc <GUI_ALLOC_UnlockH>
 800aef0:	e002      	b.n	800aef8 <GUI_ARRAY__GethItem+0x2a>
 800aef2:	4604      	mov	r4, r0
 800aef4:	e000      	b.n	800aef8 <GUI_ARRAY__GethItem+0x2a>
 800aef6:	2400      	movs	r4, #0
 800aef8:	4620      	mov	r0, r4
 800aefa:	b002      	add	sp, #8
 800aefc:	bd10      	pop	{r4, pc}

0800aefe <GUI_ARRAY__GetpItemLocked>:
 800aefe:	b508      	push	{r3, lr}
 800af00:	f7ff ffe5 	bl	800aece <GUI_ARRAY__GethItem>
 800af04:	b118      	cbz	r0, 800af0e <GUI_ARRAY__GetpItemLocked+0x10>
 800af06:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800af0a:	f008 b8e9 	b.w	80130e0 <GUI_ALLOC_LockH>
 800af0e:	bd08      	pop	{r3, pc}

0800af10 <GUI_ARRAY_GetNumItems>:
 800af10:	b513      	push	{r0, r1, r4, lr}
 800af12:	4604      	mov	r4, r0
 800af14:	b140      	cbz	r0, 800af28 <GUI_ARRAY_GetNumItems+0x18>
 800af16:	f008 f8e3 	bl	80130e0 <GUI_ALLOC_LockH>
 800af1a:	ab02      	add	r3, sp, #8
 800af1c:	8804      	ldrh	r4, [r0, #0]
 800af1e:	f843 0d04 	str.w	r0, [r3, #-4]!
 800af22:	4618      	mov	r0, r3
 800af24:	f008 f8ea 	bl	80130fc <GUI_ALLOC_UnlockH>
 800af28:	4620      	mov	r0, r4
 800af2a:	b002      	add	sp, #8
 800af2c:	bd10      	pop	{r4, pc}

0800af2e <GUI_ARRAY_AddItem>:
 800af2e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800af32:	4605      	mov	r5, r0
 800af34:	2800      	cmp	r0, #0
 800af36:	d03d      	beq.n	800afb4 <GUI_ARRAY_AddItem+0x86>
 800af38:	b14a      	cbz	r2, 800af4e <GUI_ARRAY_AddItem+0x20>
 800af3a:	4608      	mov	r0, r1
 800af3c:	4611      	mov	r1, r2
 800af3e:	f008 fb51 	bl	80135e4 <GUI_ALLOC_AllocInit>
 800af42:	f1d0 0401 	rsbs	r4, r0, #1
 800af46:	4607      	mov	r7, r0
 800af48:	bf38      	it	cc
 800af4a:	2400      	movcc	r4, #0
 800af4c:	e001      	b.n	800af52 <GUI_ARRAY_AddItem+0x24>
 800af4e:	4614      	mov	r4, r2
 800af50:	4617      	mov	r7, r2
 800af52:	4628      	mov	r0, r5
 800af54:	f008 f8c4 	bl	80130e0 <GUI_ALLOC_LockH>
 800af58:	ae02      	add	r6, sp, #8
 800af5a:	f8b0 8000 	ldrh.w	r8, [r0]
 800af5e:	f846 0d08 	str.w	r0, [r6, #-8]!
 800af62:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800af66:	4668      	mov	r0, sp
 800af68:	f008 f8c8 	bl	80130fc <GUI_ALLOC_UnlockH>
 800af6c:	bb24      	cbnz	r4, 800afb8 <GUI_ARRAY_AddItem+0x8a>
 800af6e:	f108 0101 	add.w	r1, r8, #1
 800af72:	4648      	mov	r0, r9
 800af74:	0089      	lsls	r1, r1, #2
 800af76:	f006 ff3e 	bl	8011df6 <GUI_ALLOC_Realloc>
 800af7a:	4681      	mov	r9, r0
 800af7c:	b918      	cbnz	r0, 800af86 <GUI_ARRAY_AddItem+0x58>
 800af7e:	4638      	mov	r0, r7
 800af80:	f008 f8e8 	bl	8013154 <GUI_ALLOC_Free>
 800af84:	e018      	b.n	800afb8 <GUI_ARRAY_AddItem+0x8a>
 800af86:	f008 f8ab 	bl	80130e0 <GUI_ALLOC_LockH>
 800af8a:	ab02      	add	r3, sp, #8
 800af8c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800af90:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 800af94:	4618      	mov	r0, r3
 800af96:	f008 f8b1 	bl	80130fc <GUI_ALLOC_UnlockH>
 800af9a:	4628      	mov	r0, r5
 800af9c:	f008 f8a0 	bl	80130e0 <GUI_ALLOC_LockH>
 800afa0:	8803      	ldrh	r3, [r0, #0]
 800afa2:	9000      	str	r0, [sp, #0]
 800afa4:	3301      	adds	r3, #1
 800afa6:	f8c0 9004 	str.w	r9, [r0, #4]
 800afaa:	8003      	strh	r3, [r0, #0]
 800afac:	4668      	mov	r0, sp
 800afae:	f008 f8a5 	bl	80130fc <GUI_ALLOC_UnlockH>
 800afb2:	e002      	b.n	800afba <GUI_ARRAY_AddItem+0x8c>
 800afb4:	4604      	mov	r4, r0
 800afb6:	e000      	b.n	800afba <GUI_ARRAY_AddItem+0x8c>
 800afb8:	2401      	movs	r4, #1
 800afba:	4620      	mov	r0, r4
 800afbc:	b003      	add	sp, #12
 800afbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800afc2 <GUI_ARRAY_Delete>:
 800afc2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800afc4:	4605      	mov	r5, r0
 800afc6:	b318      	cbz	r0, 800b010 <GUI_ARRAY_Delete+0x4e>
 800afc8:	f008 f88a 	bl	80130e0 <GUI_ALLOC_LockH>
 800afcc:	9000      	str	r0, [sp, #0]
 800afce:	6840      	ldr	r0, [r0, #4]
 800afd0:	b1c0      	cbz	r0, 800b004 <GUI_ARRAY_Delete+0x42>
 800afd2:	f008 f885 	bl	80130e0 <GUI_ALLOC_LockH>
 800afd6:	2400      	movs	r4, #0
 800afd8:	9001      	str	r0, [sp, #4]
 800afda:	9b00      	ldr	r3, [sp, #0]
 800afdc:	881b      	ldrh	r3, [r3, #0]
 800afde:	429c      	cmp	r4, r3
 800afe0:	da06      	bge.n	800aff0 <GUI_ARRAY_Delete+0x2e>
 800afe2:	9801      	ldr	r0, [sp, #4]
 800afe4:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800afe8:	f008 fad2 	bl	8013590 <GUI_ALLOC_FreePtr>
 800afec:	3401      	adds	r4, #1
 800afee:	e7f4      	b.n	800afda <GUI_ARRAY_Delete+0x18>
 800aff0:	a801      	add	r0, sp, #4
 800aff2:	f008 f883 	bl	80130fc <GUI_ALLOC_UnlockH>
 800aff6:	9800      	ldr	r0, [sp, #0]
 800aff8:	3004      	adds	r0, #4
 800affa:	f008 fac9 	bl	8013590 <GUI_ALLOC_FreePtr>
 800affe:	9b00      	ldr	r3, [sp, #0]
 800b000:	2200      	movs	r2, #0
 800b002:	801a      	strh	r2, [r3, #0]
 800b004:	4668      	mov	r0, sp
 800b006:	f008 f879 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b00a:	4628      	mov	r0, r5
 800b00c:	f008 f8a2 	bl	8013154 <GUI_ALLOC_Free>
 800b010:	b003      	add	sp, #12
 800b012:	bd30      	pop	{r4, r5, pc}

0800b014 <GUI_ARRAY_GetpItemLocked>:
 800b014:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b016:	460e      	mov	r6, r1
 800b018:	4605      	mov	r5, r0
 800b01a:	b158      	cbz	r0, 800b034 <GUI_ARRAY_GetpItemLocked+0x20>
 800b01c:	f008 f860 	bl	80130e0 <GUI_ALLOC_LockH>
 800b020:	ac02      	add	r4, sp, #8
 800b022:	4631      	mov	r1, r6
 800b024:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b028:	f7ff ff69 	bl	800aefe <GUI_ARRAY__GetpItemLocked>
 800b02c:	4605      	mov	r5, r0
 800b02e:	4620      	mov	r0, r4
 800b030:	f008 f864 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b034:	4628      	mov	r0, r5
 800b036:	b002      	add	sp, #8
 800b038:	bd70      	pop	{r4, r5, r6, pc}

0800b03a <GUI_ARRAY_Create>:
 800b03a:	2008      	movs	r0, #8
 800b03c:	f008 babd 	b.w	80135ba <GUI_ALLOC_AllocZero>

0800b040 <EDIT_CreateIndirect>:
 800b040:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b042:	b087      	sub	sp, #28
 800b044:	4604      	mov	r4, r0
 800b046:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 800b04a:	9100      	str	r1, [sp, #0]
 800b04c:	2100      	movs	r1, #0
 800b04e:	6965      	ldr	r5, [r4, #20]
 800b050:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 800b054:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 800b058:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 800b05c:	9101      	str	r1, [sp, #4]
 800b05e:	8a61      	ldrh	r1, [r4, #18]
 800b060:	9102      	str	r1, [sp, #8]
 800b062:	9504      	str	r5, [sp, #16]
 800b064:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b068:	69a5      	ldr	r5, [r4, #24]
 800b06a:	9103      	str	r1, [sp, #12]
 800b06c:	9505      	str	r5, [sp, #20]
 800b06e:	4410      	add	r0, r2
 800b070:	eb0e 0103 	add.w	r1, lr, r3
 800b074:	463a      	mov	r2, r7
 800b076:	4633      	mov	r3, r6
 800b078:	f000 fa12 	bl	800b4a0 <EDIT_CreateUser>
 800b07c:	4605      	mov	r5, r0
 800b07e:	b110      	cbz	r0, 800b086 <EDIT_CreateIndirect+0x46>
 800b080:	8a61      	ldrh	r1, [r4, #18]
 800b082:	f000 fcaa 	bl	800b9da <EDIT_SetTextAlign>
 800b086:	4628      	mov	r0, r5
 800b088:	b007      	add	sp, #28
 800b08a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b08c <_Paint>:
 800b08c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b090:	b08d      	sub	sp, #52	; 0x34
 800b092:	2300      	movs	r3, #0
 800b094:	4605      	mov	r5, r0
 800b096:	460e      	mov	r6, r1
 800b098:	9300      	str	r3, [sp, #0]
 800b09a:	f000 fef1 	bl	800be80 <WM__IsEnabled>
 800b09e:	4604      	mov	r4, r0
 800b0a0:	4628      	mov	r0, r5
 800b0a2:	f008 f81d 	bl	80130e0 <GUI_ALLOC_LockH>
 800b0a6:	9001      	str	r0, [sp, #4]
 800b0a8:	b12e      	cbz	r6, 800b0b6 <_Paint+0x2a>
 800b0aa:	f890 2056 	ldrb.w	r2, [r0, #86]	; 0x56
 800b0ae:	f042 0204 	orr.w	r2, r2, #4
 800b0b2:	f880 2056 	strb.w	r2, [r0, #86]	; 0x56
 800b0b6:	f104 021e 	add.w	r2, r4, #30
 800b0ba:	f10d 0810 	add.w	r8, sp, #16
 800b0be:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800b0c2:	f005 fc29 	bl	8010918 <LCD_SetBkColor>
 800b0c6:	9b01      	ldr	r3, [sp, #4]
 800b0c8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800b0cc:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b0ce:	f005 fc2b 	bl	8010928 <LCD_SetColor>
 800b0d2:	9c01      	ldr	r4, [sp, #4]
 800b0d4:	2300      	movs	r3, #0
 800b0d6:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 800b0d8:	9302      	str	r3, [sp, #8]
 800b0da:	f006 fde3 	bl	8011ca4 <GUI_SetFont>
 800b0de:	4620      	mov	r0, r4
 800b0e0:	4641      	mov	r1, r8
 800b0e2:	f7fe fb7a 	bl	80097da <WIDGET__GetInsideRect>
 800b0e6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b0e8:	b110      	cbz	r0, 800b0f0 <_Paint+0x64>
 800b0ea:	f007 fff9 	bl	80130e0 <GUI_ALLOC_LockH>
 800b0ee:	9002      	str	r0, [sp, #8]
 800b0f0:	e898 0003 	ldmia.w	r8, {r0, r1}
 800b0f4:	f10d 0a18 	add.w	sl, sp, #24
 800b0f8:	e88a 0003 	stmia.w	sl, {r0, r1}
 800b0fc:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
 800b100:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800b104:	9802      	ldr	r0, [sp, #8]
 800b106:	441a      	add	r2, r3
 800b108:	3201      	adds	r2, #1
 800b10a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800b10e:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800b112:	3a01      	subs	r2, #1
 800b114:	1ad3      	subs	r3, r2, r3
 800b116:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
 800b11a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b11e:	4651      	mov	r1, sl
 800b120:	465a      	mov	r2, fp
 800b122:	6e23      	ldr	r3, [r4, #96]	; 0x60
 800b124:	f005 fde8 	bl	8010cf8 <GUI__CalcTextRect>
 800b128:	8e65      	ldrh	r5, [r4, #50]	; 0x32
 800b12a:	f015 0501 	ands.w	r5, r5, #1
 800b12e:	d057      	beq.n	800b1e0 <_Paint+0x154>
 800b130:	f894 5055 	ldrb.w	r5, [r4, #85]	; 0x55
 800b134:	9802      	ldr	r0, [sp, #8]
 800b136:	2d00      	cmp	r5, #0
 800b138:	bf08      	it	eq
 800b13a:	2501      	moveq	r5, #1
 800b13c:	f005 fd6a 	bl	8010c14 <GUI__GetNumChars>
 800b140:	4681      	mov	r9, r0
 800b142:	9802      	ldr	r0, [sp, #8]
 800b144:	2800      	cmp	r0, #0
 800b146:	d04b      	beq.n	800b1e0 <_Paint+0x154>
 800b148:	2300      	movs	r3, #0
 800b14a:	9303      	str	r3, [sp, #12]
 800b14c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800b150:	b913      	cbnz	r3, 800b158 <_Paint+0xcc>
 800b152:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b154:	b323      	cbz	r3, 800b1a0 <_Paint+0x114>
 800b156:	b31e      	cbz	r6, 800b1a0 <_Paint+0x114>
 800b158:	6ce7      	ldr	r7, [r4, #76]	; 0x4c
 800b15a:	454f      	cmp	r7, r9
 800b15c:	da2a      	bge.n	800b1b4 <_Paint+0x128>
 800b15e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b160:	b1ab      	cbz	r3, 800b18e <_Paint+0x102>
 800b162:	b1a6      	cbz	r6, 800b18e <_Paint+0x102>
 800b164:	2500      	movs	r5, #0
 800b166:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 800b168:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b16a:	4413      	add	r3, r2
 800b16c:	429f      	cmp	r7, r3
 800b16e:	da0a      	bge.n	800b186 <_Paint+0xfa>
 800b170:	4639      	mov	r1, r7
 800b172:	464a      	mov	r2, r9
 800b174:	2300      	movs	r3, #0
 800b176:	9802      	ldr	r0, [sp, #8]
 800b178:	f005 fdb6 	bl	8010ce8 <GUI__GetCursorCharacter>
 800b17c:	f007 fe9c 	bl	8012eb8 <GUI_GetCharDistX>
 800b180:	3701      	adds	r7, #1
 800b182:	4405      	add	r5, r0
 800b184:	e7ef      	b.n	800b166 <_Paint+0xda>
 800b186:	2d00      	cmp	r5, #0
 800b188:	bf08      	it	eq
 800b18a:	2501      	moveq	r5, #1
 800b18c:	e012      	b.n	800b1b4 <_Paint+0x128>
 800b18e:	4639      	mov	r1, r7
 800b190:	464a      	mov	r2, r9
 800b192:	ab03      	add	r3, sp, #12
 800b194:	f005 fda8 	bl	8010ce8 <GUI__GetCursorCharacter>
 800b198:	f007 fe8e 	bl	8012eb8 <GUI_GetCharDistX>
 800b19c:	4605      	mov	r5, r0
 800b19e:	e009      	b.n	800b1b4 <_Paint+0x128>
 800b1a0:	4b4c      	ldr	r3, [pc, #304]	; (800b2d4 <_Paint+0x248>)
 800b1a2:	681b      	ldr	r3, [r3, #0]
 800b1a4:	2b01      	cmp	r3, #1
 800b1a6:	d105      	bne.n	800b1b4 <_Paint+0x128>
 800b1a8:	4b4b      	ldr	r3, [pc, #300]	; (800b2d8 <_Paint+0x24c>)
 800b1aa:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 800b1ac:	681b      	ldr	r3, [r3, #0]
 800b1ae:	4649      	mov	r1, r9
 800b1b0:	4798      	blx	r3
 800b1b2:	9003      	str	r0, [sp, #12]
 800b1b4:	e89b 0003 	ldmia.w	fp, {r0, r1}
 800b1b8:	ab08      	add	r3, sp, #32
 800b1ba:	e883 0003 	stmia.w	r3, {r0, r1}
 800b1be:	9b03      	ldr	r3, [sp, #12]
 800b1c0:	b123      	cbz	r3, 800b1cc <_Paint+0x140>
 800b1c2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800b1c6:	1b5b      	subs	r3, r3, r5
 800b1c8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b1cc:	9802      	ldr	r0, [sp, #8]
 800b1ce:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800b1d0:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 800b1d4:	464a      	mov	r2, r9
 800b1d6:	f005 fd73 	bl	8010cc0 <GUI__GetCursorPosX>
 800b1da:	4438      	add	r0, r7
 800b1dc:	f8ad 0020 	strh.w	r0, [sp, #32]
 800b1e0:	9b02      	ldr	r3, [sp, #8]
 800b1e2:	b113      	cbz	r3, 800b1ea <_Paint+0x15e>
 800b1e4:	a802      	add	r0, sp, #8
 800b1e6:	f007 ff89 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b1ea:	9b01      	ldr	r3, [sp, #4]
 800b1ec:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800b1ee:	b110      	cbz	r0, 800b1f6 <_Paint+0x16a>
 800b1f0:	f007 ff76 	bl	80130e0 <GUI_ALLOC_LockH>
 800b1f4:	9000      	str	r0, [sp, #0]
 800b1f6:	2000      	movs	r0, #0
 800b1f8:	f002 fafc 	bl	800d7f4 <WM__InitIVRSearch>
 800b1fc:	b940      	cbnz	r0, 800b210 <_Paint+0x184>
 800b1fe:	2e00      	cmp	r6, #0
 800b200:	d05c      	beq.n	800b2bc <_Paint+0x230>
 800b202:	9b01      	ldr	r3, [sp, #4]
 800b204:	2100      	movs	r1, #0
 800b206:	f8d3 0084 	ldr.w	r0, [r3, #132]	; 0x84
 800b20a:	f000 feeb 	bl	800bfe4 <WM_RestartTimer>
 800b20e:	e055      	b.n	800b2bc <_Paint+0x230>
 800b210:	4640      	mov	r0, r8
 800b212:	f000 ff25 	bl	800c060 <WM_SetUserClipRect>
 800b216:	b12e      	cbz	r6, 800b224 <_Paint+0x198>
 800b218:	9800      	ldr	r0, [sp, #0]
 800b21a:	4641      	mov	r1, r8
 800b21c:	4652      	mov	r2, sl
 800b21e:	465b      	mov	r3, fp
 800b220:	f008 faa2 	bl	8013768 <WIDGET__FillStringInRect>
 800b224:	9b01      	ldr	r3, [sp, #4]
 800b226:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 800b228:	07d0      	lsls	r0, r2, #31
 800b22a:	d53d      	bpl.n	800b2a8 <_Paint+0x21c>
 800b22c:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 800b230:	0719      	lsls	r1, r3, #28
 800b232:	d52f      	bpl.n	800b294 <_Paint+0x208>
 800b234:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800b238:	3b01      	subs	r3, #1
 800b23a:	442b      	add	r3, r5
 800b23c:	2000      	movs	r0, #0
 800b23e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b242:	f000 ff0d 	bl	800c060 <WM_SetUserClipRect>
 800b246:	a808      	add	r0, sp, #32
 800b248:	f000 ff0a 	bl	800c060 <WM_SetUserClipRect>
 800b24c:	9b01      	ldr	r3, [sp, #4]
 800b24e:	f893 2056 	ldrb.w	r2, [r3, #86]	; 0x56
 800b252:	0752      	lsls	r2, r2, #29
 800b254:	d507      	bpl.n	800b266 <_Paint+0x1da>
 800b256:	6f58      	ldr	r0, [r3, #116]	; 0x74
 800b258:	f006 fd52 	bl	8011d00 <GUI_SetColor>
 800b25c:	9b01      	ldr	r3, [sp, #4]
 800b25e:	f8d3 0080 	ldr.w	r0, [r3, #128]	; 0x80
 800b262:	f006 fd4b 	bl	8011cfc <GUI_SetBkColor>
 800b266:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 800b26a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 800b26e:	9800      	ldr	r0, [sp, #0]
 800b270:	f007 f950 	bl	8012514 <GUI_DispStringAt>
 800b274:	2004      	movs	r0, #4
 800b276:	f006 fd1f 	bl	8011cb8 <GUI_SetDrawMode>
 800b27a:	4b18      	ldr	r3, [pc, #96]	; (800b2dc <_Paint+0x250>)
 800b27c:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 800b280:	681b      	ldr	r3, [r3, #0]
 800b282:	f9b3 0022 	ldrsh.w	r0, [r3, #34]	; 0x22
 800b286:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800b28a:	1942      	adds	r2, r0, r5
 800b28c:	3a01      	subs	r2, #1
 800b28e:	f006 ffb7 	bl	8012200 <GUI_FillRect>
 800b292:	e009      	b.n	800b2a8 <_Paint+0x21c>
 800b294:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800b298:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 800b29c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800b2a0:	1942      	adds	r2, r0, r5
 800b2a2:	3a01      	subs	r2, #1
 800b2a4:	f006 ff4c 	bl	8012140 <GUI_InvertRect>
 800b2a8:	2000      	movs	r0, #0
 800b2aa:	f000 fed9 	bl	800c060 <WM_SetUserClipRect>
 800b2ae:	b116      	cbz	r6, 800b2b6 <_Paint+0x22a>
 800b2b0:	9801      	ldr	r0, [sp, #4]
 800b2b2:	f7fe fbe0 	bl	8009a76 <WIDGET__EFFECT_DrawDown>
 800b2b6:	f002 f9db 	bl	800d670 <WM__GetNextIVR>
 800b2ba:	e79f      	b.n	800b1fc <_Paint+0x170>
 800b2bc:	a801      	add	r0, sp, #4
 800b2be:	f007 ff1d 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b2c2:	9b00      	ldr	r3, [sp, #0]
 800b2c4:	b113      	cbz	r3, 800b2cc <_Paint+0x240>
 800b2c6:	4668      	mov	r0, sp
 800b2c8:	f007 ff18 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b2cc:	b00d      	add	sp, #52	; 0x34
 800b2ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b2d2:	bf00      	nop
 800b2d4:	20019c54 	.word	0x20019c54
 800b2d8:	20019c68 	.word	0x20019c68
 800b2dc:	2000016c 	.word	0x2000016c

0800b2e0 <_IncrementBuffer>:
 800b2e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b2e4:	460e      	mov	r6, r1
 800b2e6:	4680      	mov	r8, r0
 800b2e8:	f007 fefa 	bl	80130e0 <GUI_ALLOC_LockH>
 800b2ec:	ac02      	add	r4, sp, #8
 800b2ee:	8f47      	ldrh	r7, [r0, #58]	; 0x3a
 800b2f0:	6b45      	ldr	r5, [r0, #52]	; 0x34
 800b2f2:	f844 0d08 	str.w	r0, [r4, #-8]!
 800b2f6:	4437      	add	r7, r6
 800b2f8:	4668      	mov	r0, sp
 800b2fa:	f007 feff 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b2fe:	4628      	mov	r0, r5
 800b300:	4639      	mov	r1, r7
 800b302:	f006 fd78 	bl	8011df6 <GUI_ALLOC_Realloc>
 800b306:	4606      	mov	r6, r0
 800b308:	b1a0      	cbz	r0, 800b334 <_IncrementBuffer+0x54>
 800b30a:	b945      	cbnz	r5, 800b31e <_IncrementBuffer+0x3e>
 800b30c:	f007 fee8 	bl	80130e0 <GUI_ALLOC_LockH>
 800b310:	4602      	mov	r2, r0
 800b312:	a802      	add	r0, sp, #8
 800b314:	f840 2d04 	str.w	r2, [r0, #-4]!
 800b318:	7015      	strb	r5, [r2, #0]
 800b31a:	f007 feef 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b31e:	4640      	mov	r0, r8
 800b320:	f007 fede 	bl	80130e0 <GUI_ALLOC_LockH>
 800b324:	9000      	str	r0, [sp, #0]
 800b326:	8747      	strh	r7, [r0, #58]	; 0x3a
 800b328:	6346      	str	r6, [r0, #52]	; 0x34
 800b32a:	4668      	mov	r0, sp
 800b32c:	f007 fee6 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b330:	2001      	movs	r0, #1
 800b332:	e7ff      	b.n	800b334 <_IncrementBuffer+0x54>
 800b334:	b002      	add	sp, #8
 800b336:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b33a <_ChangeCharacter>:
 800b33a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b33e:	460d      	mov	r5, r1
 800b340:	4606      	mov	r6, r0
 800b342:	2100      	movs	r1, #0
 800b344:	4628      	mov	r0, r5
 800b346:	4690      	mov	r8, r2
 800b348:	461f      	mov	r7, r3
 800b34a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800b34e:	f88d 1006 	strb.w	r1, [sp, #6]
 800b352:	f005 fee1 	bl	8011118 <GUI_UC__CalcSizeOfChar>
 800b356:	4445      	add	r5, r8
 800b358:	b2ad      	uxth	r5, r5
 800b35a:	4604      	mov	r4, r0
 800b35c:	4628      	mov	r0, r5
 800b35e:	f005 fedb 	bl	8011118 <GUI_UC__CalcSizeOfChar>
 800b362:	4284      	cmp	r4, r0
 800b364:	d10c      	bne.n	800b380 <_ChangeCharacter+0x46>
 800b366:	4629      	mov	r1, r5
 800b368:	a801      	add	r0, sp, #4
 800b36a:	f005 fecd 	bl	8011108 <GUI_UC_Encode>
 800b36e:	a901      	add	r1, sp, #4
 800b370:	4638      	mov	r0, r7
 800b372:	4622      	mov	r2, r4
 800b374:	f00f fb6d 	bl	801aa52 <memcpy>
 800b378:	4630      	mov	r0, r6
 800b37a:	2105      	movs	r1, #5
 800b37c:	f001 f8a9 	bl	800c4d2 <WM_NotifyParent>
 800b380:	b002      	add	sp, #8
 800b382:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b386 <_IsSpaceInBuffer>:
 800b386:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b388:	4606      	mov	r6, r0
 800b38a:	460f      	mov	r7, r1
 800b38c:	f007 fea8 	bl	80130e0 <GUI_ALLOC_LockH>
 800b390:	9000      	str	r0, [sp, #0]
 800b392:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b394:	b158      	cbz	r0, 800b3ae <_IsSpaceInBuffer+0x28>
 800b396:	f007 fea3 	bl	80130e0 <GUI_ALLOC_LockH>
 800b39a:	ac02      	add	r4, sp, #8
 800b39c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b3a0:	f7f4 ff36 	bl	8000210 <strlen>
 800b3a4:	4605      	mov	r5, r0
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	f007 fea8 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b3ac:	e000      	b.n	800b3b0 <_IsSpaceInBuffer+0x2a>
 800b3ae:	4605      	mov	r5, r0
 800b3b0:	a802      	add	r0, sp, #8
 800b3b2:	197c      	adds	r4, r7, r5
 800b3b4:	f850 2d08 	ldr.w	r2, [r0, #-8]!
 800b3b8:	8f52      	ldrh	r2, [r2, #58]	; 0x3a
 800b3ba:	3401      	adds	r4, #1
 800b3bc:	1aa4      	subs	r4, r4, r2
 800b3be:	4668      	mov	r0, sp
 800b3c0:	f007 fe9c 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b3c4:	2c00      	cmp	r4, #0
 800b3c6:	dd08      	ble.n	800b3da <_IsSpaceInBuffer+0x54>
 800b3c8:	4630      	mov	r0, r6
 800b3ca:	f104 0110 	add.w	r1, r4, #16
 800b3ce:	f7ff ff87 	bl	800b2e0 <_IncrementBuffer>
 800b3d2:	3000      	adds	r0, #0
 800b3d4:	bf18      	it	ne
 800b3d6:	2001      	movne	r0, #1
 800b3d8:	e000      	b.n	800b3dc <_IsSpaceInBuffer+0x56>
 800b3da:	2001      	movs	r0, #1
 800b3dc:	b003      	add	sp, #12
 800b3de:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b3e0 <_DeleteChar>:
 800b3e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b3e2:	4607      	mov	r7, r0
 800b3e4:	f007 fe7c 	bl	80130e0 <GUI_ALLOC_LockH>
 800b3e8:	4602      	mov	r2, r0
 800b3ea:	a802      	add	r0, sp, #8
 800b3ec:	6b54      	ldr	r4, [r2, #52]	; 0x34
 800b3ee:	f840 2d08 	str.w	r2, [r0, #-8]!
 800b3f2:	4668      	mov	r0, sp
 800b3f4:	6cd6      	ldr	r6, [r2, #76]	; 0x4c
 800b3f6:	f007 fe81 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b3fa:	b314      	cbz	r4, 800b442 <_DeleteChar+0x62>
 800b3fc:	4620      	mov	r0, r4
 800b3fe:	f007 fe6f 	bl	80130e0 <GUI_ALLOC_LockH>
 800b402:	ac02      	add	r4, sp, #8
 800b404:	4631      	mov	r1, r6
 800b406:	4605      	mov	r5, r0
 800b408:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b40c:	f005 fea0 	bl	8011150 <GUI_UC__NumChars2NumBytes>
 800b410:	4606      	mov	r6, r0
 800b412:	4628      	mov	r0, r5
 800b414:	f7f4 fefc 	bl	8000210 <strlen>
 800b418:	4286      	cmp	r6, r0
 800b41a:	d20f      	bcs.n	800b43c <_DeleteChar+0x5c>
 800b41c:	4435      	add	r5, r6
 800b41e:	4628      	mov	r0, r5
 800b420:	f005 fe62 	bl	80110e8 <GUI_UC_GetCharSize>
 800b424:	1829      	adds	r1, r5, r0
 800b426:	4628      	mov	r0, r5
 800b428:	f00f fb60 	bl	801aaec <strcpy>
 800b42c:	4620      	mov	r0, r4
 800b42e:	f007 fe65 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b432:	4638      	mov	r0, r7
 800b434:	2105      	movs	r1, #5
 800b436:	f001 f84c 	bl	800c4d2 <WM_NotifyParent>
 800b43a:	e002      	b.n	800b442 <_DeleteChar+0x62>
 800b43c:	4620      	mov	r0, r4
 800b43e:	f007 fe5d 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b442:	b003      	add	sp, #12
 800b444:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b446 <EDIT__SetCursorPos>:
 800b446:	b513      	push	{r0, r1, r4, lr}
 800b448:	460c      	mov	r4, r1
 800b44a:	f007 fe49 	bl	80130e0 <GUI_ALLOC_LockH>
 800b44e:	9000      	str	r0, [sp, #0]
 800b450:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b452:	b1f8      	cbz	r0, 800b494 <EDIT__SetCursorPos+0x4e>
 800b454:	f007 fe44 	bl	80130e0 <GUI_ALLOC_LockH>
 800b458:	9001      	str	r0, [sp, #4]
 800b45a:	f005 fbdb 	bl	8010c14 <GUI__GetNumChars>
 800b45e:	9b00      	ldr	r3, [sp, #0]
 800b460:	f9b3 1038 	ldrsh.w	r1, [r3, #56]	; 0x38
 800b464:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800b468:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 800b46c:	2a00      	cmp	r2, #0
 800b46e:	bf0c      	ite	eq
 800b470:	460a      	moveq	r2, r1
 800b472:	1e4a      	subne	r2, r1, #1
 800b474:	4294      	cmp	r4, r2
 800b476:	bfa8      	it	ge
 800b478:	4614      	movge	r4, r2
 800b47a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800b47c:	4284      	cmp	r4, r0
 800b47e:	bfb8      	it	lt
 800b480:	4620      	movlt	r0, r4
 800b482:	4282      	cmp	r2, r0
 800b484:	f04f 0200 	mov.w	r2, #0
 800b488:	bf18      	it	ne
 800b48a:	64d8      	strne	r0, [r3, #76]	; 0x4c
 800b48c:	651a      	str	r2, [r3, #80]	; 0x50
 800b48e:	a801      	add	r0, sp, #4
 800b490:	f007 fe34 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b494:	4668      	mov	r0, sp
 800b496:	f007 fe31 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b49a:	b002      	add	sp, #8
 800b49c:	bd10      	pop	{r4, pc}
	...

0800b4a0 <EDIT_CreateUser>:
 800b4a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4a4:	b086      	sub	sp, #24
 800b4a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800b4a8:	9400      	str	r4, [sp, #0]
 800b4aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800b4ac:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 800b4b0:	f444 5480 	orr.w	r4, r4, #4096	; 0x1000
 800b4b4:	9401      	str	r4, [sp, #4]
 800b4b6:	4c21      	ldr	r4, [pc, #132]	; (800b53c <EDIT_CreateUser+0x9c>)
 800b4b8:	9402      	str	r4, [sp, #8]
 800b4ba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800b4bc:	3460      	adds	r4, #96	; 0x60
 800b4be:	9403      	str	r4, [sp, #12]
 800b4c0:	f001 ff9c 	bl	800d3fc <WM_CreateWindowAsChild>
 800b4c4:	4607      	mov	r7, r0
 800b4c6:	2800      	cmp	r0, #0
 800b4c8:	d034      	beq.n	800b534 <EDIT_CreateUser+0x94>
 800b4ca:	f007 fe09 	bl	80130e0 <GUI_ALLOC_LockH>
 800b4ce:	4d1c      	ldr	r5, [pc, #112]	; (800b540 <EDIT_CreateUser+0xa0>)
 800b4d0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b4d2:	9005      	str	r0, [sp, #20]
 800b4d4:	2210      	movs	r2, #16
 800b4d6:	f7fe f9df 	bl	8009898 <WIDGET__Init>
 800b4da:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b4dc:	9e05      	ldr	r6, [sp, #20]
 800b4de:	f106 0460 	add.w	r4, r6, #96	; 0x60
 800b4e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b4e4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b4e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b4e8:	682b      	ldr	r3, [r5, #0]
 800b4ea:	6023      	str	r3, [r4, #0]
 800b4ec:	2301      	movs	r3, #1
 800b4ee:	f886 3055 	strb.w	r3, [r6, #85]	; 0x55
 800b4f2:	f118 0301 	adds.w	r3, r8, #1
 800b4f6:	bf18      	it	ne
 800b4f8:	2301      	movne	r3, #1
 800b4fa:	f1b8 0f00 	cmp.w	r8, #0
 800b4fe:	bfcc      	ite	gt
 800b500:	fa1f f888 	uxthgt.w	r8, r8
 800b504:	f04f 0808 	movle.w	r8, #8
 800b508:	f886 3088 	strb.w	r3, [r6, #136]	; 0x88
 800b50c:	2300      	movs	r3, #0
 800b50e:	8773      	strh	r3, [r6, #58]	; 0x3a
 800b510:	6373      	str	r3, [r6, #52]	; 0x34
 800b512:	f8a6 8038 	strh.w	r8, [r6, #56]	; 0x38
 800b516:	a805      	add	r0, sp, #20
 800b518:	f007 fdf0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b51c:	fa0f f188 	sxth.w	r1, r8
 800b520:	4638      	mov	r0, r7
 800b522:	3101      	adds	r1, #1
 800b524:	f7ff fedc 	bl	800b2e0 <_IncrementBuffer>
 800b528:	4604      	mov	r4, r0
 800b52a:	b918      	cbnz	r0, 800b534 <EDIT_CreateUser+0x94>
 800b52c:	4638      	mov	r0, r7
 800b52e:	f002 f80f 	bl	800d550 <WM_DeleteWindow>
 800b532:	4627      	mov	r7, r4
 800b534:	4638      	mov	r0, r7
 800b536:	b006      	add	sp, #24
 800b538:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b53c:	0800b7e1 	.word	0x0800b7e1
 800b540:	200000d8 	.word	0x200000d8

0800b544 <EDIT_SetCursorAtPixel>:
 800b544:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b548:	460f      	mov	r7, r1
 800b54a:	4604      	mov	r4, r0
 800b54c:	2800      	cmp	r0, #0
 800b54e:	d04f      	beq.n	800b5f0 <EDIT_SetCursorAtPixel+0xac>
 800b550:	f007 fdc6 	bl	80130e0 <GUI_ALLOC_LockH>
 800b554:	9001      	str	r0, [sp, #4]
 800b556:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b558:	2800      	cmp	r0, #0
 800b55a:	d046      	beq.n	800b5ea <EDIT_SetCursorAtPixel+0xa6>
 800b55c:	f007 fdc0 	bl	80130e0 <GUI_ALLOC_LockH>
 800b560:	9b01      	ldr	r3, [sp, #4]
 800b562:	9000      	str	r0, [sp, #0]
 800b564:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800b566:	f006 fb9d 	bl	8011ca4 <GUI_SetFont>
 800b56a:	4680      	mov	r8, r0
 800b56c:	4620      	mov	r0, r4
 800b56e:	f001 f8e7 	bl	800c740 <WM_GetWindowSizeX>
 800b572:	4605      	mov	r5, r0
 800b574:	9800      	ldr	r0, [sp, #0]
 800b576:	f006 fe1f 	bl	80121b8 <GUI_GetStringDistX>
 800b57a:	9b01      	ldr	r3, [sp, #4]
 800b57c:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800b57e:	f002 0203 	and.w	r2, r2, #3
 800b582:	2a01      	cmp	r2, #1
 800b584:	4606      	mov	r6, r0
 800b586:	d007      	beq.n	800b598 <EDIT_SetCursorAtPixel+0x54>
 800b588:	2a02      	cmp	r2, #2
 800b58a:	d109      	bne.n	800b5a0 <EDIT_SetCursorAtPixel+0x5c>
 800b58c:	1a2d      	subs	r5, r5, r0
 800b58e:	3501      	adds	r5, #1
 800b590:	fb95 f5f2 	sdiv	r5, r5, r2
 800b594:	1b7d      	subs	r5, r7, r5
 800b596:	e009      	b.n	800b5ac <EDIT_SetCursorAtPixel+0x68>
 800b598:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b59a:	1b45      	subs	r5, r0, r5
 800b59c:	43db      	mvns	r3, r3
 800b59e:	e003      	b.n	800b5a8 <EDIT_SetCursorAtPixel+0x64>
 800b5a0:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800b5a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5a4:	681b      	ldr	r3, [r3, #0]
 800b5a6:	43ed      	mvns	r5, r5
 800b5a8:	1aed      	subs	r5, r5, r3
 800b5aa:	443d      	add	r5, r7
 800b5ac:	9800      	ldr	r0, [sp, #0]
 800b5ae:	f005 fb31 	bl	8010c14 <GUI__GetNumChars>
 800b5b2:	2d00      	cmp	r5, #0
 800b5b4:	4602      	mov	r2, r0
 800b5b6:	da02      	bge.n	800b5be <EDIT_SetCursorAtPixel+0x7a>
 800b5b8:	4620      	mov	r0, r4
 800b5ba:	2100      	movs	r1, #0
 800b5bc:	e00a      	b.n	800b5d4 <EDIT_SetCursorAtPixel+0x90>
 800b5be:	42b5      	cmp	r5, r6
 800b5c0:	dd02      	ble.n	800b5c8 <EDIT_SetCursorAtPixel+0x84>
 800b5c2:	4620      	mov	r0, r4
 800b5c4:	4611      	mov	r1, r2
 800b5c6:	e005      	b.n	800b5d4 <EDIT_SetCursorAtPixel+0x90>
 800b5c8:	4629      	mov	r1, r5
 800b5ca:	9800      	ldr	r0, [sp, #0]
 800b5cc:	f005 fb82 	bl	8010cd4 <GUI__GetCursorPosChar>
 800b5d0:	4601      	mov	r1, r0
 800b5d2:	4620      	mov	r0, r4
 800b5d4:	f7ff ff37 	bl	800b446 <EDIT__SetCursorPos>
 800b5d8:	4668      	mov	r0, sp
 800b5da:	f007 fd8f 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b5de:	4640      	mov	r0, r8
 800b5e0:	f006 fb60 	bl	8011ca4 <GUI_SetFont>
 800b5e4:	4620      	mov	r0, r4
 800b5e6:	f001 fec8 	bl	800d37a <WM_InvalidateWindow>
 800b5ea:	a801      	add	r0, sp, #4
 800b5ec:	f007 fd86 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b5f0:	b002      	add	sp, #8
 800b5f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b5f6 <EDIT_AddKey>:
 800b5f6:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b5fa:	460d      	mov	r5, r1
 800b5fc:	4604      	mov	r4, r0
 800b5fe:	2800      	cmp	r0, #0
 800b600:	f000 80eb 	beq.w	800b7da <EDIT_AddKey+0x1e4>
 800b604:	f007 fd6c 	bl	80130e0 <GUI_ALLOC_LockH>
 800b608:	af04      	add	r7, sp, #16
 800b60a:	f8d0 9058 	ldr.w	r9, [r0, #88]	; 0x58
 800b60e:	f847 0d0c 	str.w	r0, [r7, #-12]!
 800b612:	f890 a054 	ldrb.w	sl, [r0, #84]	; 0x54
 800b616:	f8d0 8034 	ldr.w	r8, [r0, #52]	; 0x34
 800b61a:	6cc6      	ldr	r6, [r0, #76]	; 0x4c
 800b61c:	4638      	mov	r0, r7
 800b61e:	f007 fd6d 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b622:	f1b9 0f00 	cmp.w	r9, #0
 800b626:	d003      	beq.n	800b630 <EDIT_AddKey+0x3a>
 800b628:	4620      	mov	r0, r4
 800b62a:	4629      	mov	r1, r5
 800b62c:	47c8      	blx	r9
 800b62e:	e0d1      	b.n	800b7d4 <EDIT_AddKey+0x1de>
 800b630:	2d12      	cmp	r5, #18
 800b632:	f000 80cb 	beq.w	800b7cc <EDIT_AddKey+0x1d6>
 800b636:	dc05      	bgt.n	800b644 <EDIT_AddKey+0x4e>
 800b638:	2d10      	cmp	r5, #16
 800b63a:	d03d      	beq.n	800b6b8 <EDIT_AddKey+0xc2>
 800b63c:	dc09      	bgt.n	800b652 <EDIT_AddKey+0x5c>
 800b63e:	2d08      	cmp	r5, #8
 800b640:	d03d      	beq.n	800b6be <EDIT_AddKey+0xc8>
 800b642:	e05a      	b.n	800b6fa <EDIT_AddKey+0x104>
 800b644:	2d1d      	cmp	r5, #29
 800b646:	d045      	beq.n	800b6d4 <EDIT_AddKey+0xde>
 800b648:	2d1e      	cmp	r5, #30
 800b64a:	d03f      	beq.n	800b6cc <EDIT_AddKey+0xd6>
 800b64c:	2d13      	cmp	r5, #19
 800b64e:	d154      	bne.n	800b6fa <EDIT_AddKey+0x104>
 800b650:	e015      	b.n	800b67e <EDIT_AddKey+0x88>
 800b652:	f1b8 0f00 	cmp.w	r8, #0
 800b656:	f000 80bd 	beq.w	800b7d4 <EDIT_AddKey+0x1de>
 800b65a:	4640      	mov	r0, r8
 800b65c:	f007 fd40 	bl	80130e0 <GUI_ALLOC_LockH>
 800b660:	ad04      	add	r5, sp, #16
 800b662:	4631      	mov	r1, r6
 800b664:	4607      	mov	r7, r0
 800b666:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b66a:	f005 fd71 	bl	8011150 <GUI_UC__NumChars2NumBytes>
 800b66e:	183e      	adds	r6, r7, r0
 800b670:	4630      	mov	r0, r6
 800b672:	f005 fd41 	bl	80110f8 <GUI_UC_GetCharCode>
 800b676:	2201      	movs	r2, #1
 800b678:	4601      	mov	r1, r0
 800b67a:	4620      	mov	r0, r4
 800b67c:	e015      	b.n	800b6aa <EDIT_AddKey+0xb4>
 800b67e:	f1b8 0f00 	cmp.w	r8, #0
 800b682:	f000 80a7 	beq.w	800b7d4 <EDIT_AddKey+0x1de>
 800b686:	4640      	mov	r0, r8
 800b688:	f007 fd2a 	bl	80130e0 <GUI_ALLOC_LockH>
 800b68c:	ad04      	add	r5, sp, #16
 800b68e:	4631      	mov	r1, r6
 800b690:	4607      	mov	r7, r0
 800b692:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b696:	f005 fd5b 	bl	8011150 <GUI_UC__NumChars2NumBytes>
 800b69a:	183e      	adds	r6, r7, r0
 800b69c:	4630      	mov	r0, r6
 800b69e:	f005 fd2b 	bl	80110f8 <GUI_UC_GetCharCode>
 800b6a2:	f04f 32ff 	mov.w	r2, #4294967295
 800b6a6:	4601      	mov	r1, r0
 800b6a8:	4620      	mov	r0, r4
 800b6aa:	4633      	mov	r3, r6
 800b6ac:	f7ff fe45 	bl	800b33a <_ChangeCharacter>
 800b6b0:	4628      	mov	r0, r5
 800b6b2:	f007 fd23 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b6b6:	e08d      	b.n	800b7d4 <EDIT_AddKey+0x1de>
 800b6b8:	4620      	mov	r0, r4
 800b6ba:	1e71      	subs	r1, r6, #1
 800b6bc:	e088      	b.n	800b7d0 <EDIT_AddKey+0x1da>
 800b6be:	2e00      	cmp	r6, #0
 800b6c0:	f000 8088 	beq.w	800b7d4 <EDIT_AddKey+0x1de>
 800b6c4:	4620      	mov	r0, r4
 800b6c6:	1e71      	subs	r1, r6, #1
 800b6c8:	f7ff febd 	bl	800b446 <EDIT__SetCursorPos>
 800b6cc:	4620      	mov	r0, r4
 800b6ce:	f7ff fe87 	bl	800b3e0 <_DeleteChar>
 800b6d2:	e07f      	b.n	800b7d4 <EDIT_AddKey+0x1de>
 800b6d4:	4620      	mov	r0, r4
 800b6d6:	f007 fd03 	bl	80130e0 <GUI_ALLOC_LockH>
 800b6da:	f1ba 0f01 	cmp.w	sl, #1
 800b6de:	9001      	str	r0, [sp, #4]
 800b6e0:	d102      	bne.n	800b6e8 <EDIT_AddKey+0xf2>
 800b6e2:	f880 9054 	strb.w	r9, [r0, #84]	; 0x54
 800b6e6:	e006      	b.n	800b6f6 <EDIT_AddKey+0x100>
 800b6e8:	2301      	movs	r3, #1
 800b6ea:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800b6ee:	4631      	mov	r1, r6
 800b6f0:	4620      	mov	r0, r4
 800b6f2:	f7ff fea8 	bl	800b446 <EDIT__SetCursorPos>
 800b6f6:	4638      	mov	r0, r7
 800b6f8:	e7db      	b.n	800b6b2 <EDIT_AddKey+0xbc>
 800b6fa:	2d1f      	cmp	r5, #31
 800b6fc:	dd6a      	ble.n	800b7d4 <EDIT_AddKey+0x1de>
 800b6fe:	f1ba 0f00 	cmp.w	sl, #0
 800b702:	d002      	beq.n	800b70a <EDIT_AddKey+0x114>
 800b704:	4620      	mov	r0, r4
 800b706:	f7ff fe6b 	bl	800b3e0 <_DeleteChar>
 800b70a:	4620      	mov	r0, r4
 800b70c:	f007 fce8 	bl	80130e0 <GUI_ALLOC_LockH>
 800b710:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 800b714:	9002      	str	r0, [sp, #8]
 800b716:	2b00      	cmp	r3, #0
 800b718:	4607      	mov	r7, r0
 800b71a:	dd18      	ble.n	800b74e <EDIT_AddKey+0x158>
 800b71c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b71e:	b160      	cbz	r0, 800b73a <EDIT_AddKey+0x144>
 800b720:	f007 fcde 	bl	80130e0 <GUI_ALLOC_LockH>
 800b724:	f10d 0810 	add.w	r8, sp, #16
 800b728:	f848 0d04 	str.w	r0, [r8, #-4]!
 800b72c:	f005 fa72 	bl	8010c14 <GUI__GetNumChars>
 800b730:	4681      	mov	r9, r0
 800b732:	4640      	mov	r0, r8
 800b734:	f007 fce2 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b738:	e000      	b.n	800b73c <EDIT_AddKey+0x146>
 800b73a:	4681      	mov	r9, r0
 800b73c:	f9b7 8038 	ldrsh.w	r8, [r7, #56]	; 0x38
 800b740:	45c1      	cmp	r9, r8
 800b742:	bfac      	ite	ge
 800b744:	f04f 0800 	movge.w	r8, #0
 800b748:	f04f 0801 	movlt.w	r8, #1
 800b74c:	e001      	b.n	800b752 <EDIT_AddKey+0x15c>
 800b74e:	f04f 0801 	mov.w	r8, #1
 800b752:	af04      	add	r7, sp, #16
 800b754:	f857 3d08 	ldr.w	r3, [r7, #-8]!
 800b758:	4638      	mov	r0, r7
 800b75a:	f8d3 a04c 	ldr.w	sl, [r3, #76]	; 0x4c
 800b75e:	f007 fccd 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b762:	f1b8 0f00 	cmp.w	r8, #0
 800b766:	d035      	beq.n	800b7d4 <EDIT_AddKey+0x1de>
 800b768:	fa1f f885 	uxth.w	r8, r5
 800b76c:	4640      	mov	r0, r8
 800b76e:	f005 fcd3 	bl	8011118 <GUI_UC__CalcSizeOfChar>
 800b772:	4681      	mov	r9, r0
 800b774:	4649      	mov	r1, r9
 800b776:	4620      	mov	r0, r4
 800b778:	f7ff fe05 	bl	800b386 <_IsSpaceInBuffer>
 800b77c:	b350      	cbz	r0, 800b7d4 <EDIT_AddKey+0x1de>
 800b77e:	4620      	mov	r0, r4
 800b780:	f007 fcae 	bl	80130e0 <GUI_ALLOC_LockH>
 800b784:	6b45      	ldr	r5, [r0, #52]	; 0x34
 800b786:	9002      	str	r0, [sp, #8]
 800b788:	4638      	mov	r0, r7
 800b78a:	f007 fcb7 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b78e:	4628      	mov	r0, r5
 800b790:	f007 fca6 	bl	80130e0 <GUI_ALLOC_LockH>
 800b794:	ad04      	add	r5, sp, #16
 800b796:	4651      	mov	r1, sl
 800b798:	4607      	mov	r7, r0
 800b79a:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b79e:	f005 fcd7 	bl	8011150 <GUI_UC__NumChars2NumBytes>
 800b7a2:	4407      	add	r7, r0
 800b7a4:	4638      	mov	r0, r7
 800b7a6:	f7f4 fd33 	bl	8000210 <strlen>
 800b7aa:	4639      	mov	r1, r7
 800b7ac:	1c42      	adds	r2, r0, #1
 800b7ae:	eb07 0009 	add.w	r0, r7, r9
 800b7b2:	f00f f959 	bl	801aa68 <memmove>
 800b7b6:	4641      	mov	r1, r8
 800b7b8:	4638      	mov	r0, r7
 800b7ba:	f005 fca5 	bl	8011108 <GUI_UC_Encode>
 800b7be:	4628      	mov	r0, r5
 800b7c0:	f007 fc9c 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b7c4:	4620      	mov	r0, r4
 800b7c6:	2105      	movs	r1, #5
 800b7c8:	f000 fe83 	bl	800c4d2 <WM_NotifyParent>
 800b7cc:	4620      	mov	r0, r4
 800b7ce:	1c71      	adds	r1, r6, #1
 800b7d0:	f7ff fe39 	bl	800b446 <EDIT__SetCursorPos>
 800b7d4:	4620      	mov	r0, r4
 800b7d6:	f001 fdd0 	bl	800d37a <WM_InvalidateWindow>
 800b7da:	b004      	add	sp, #16
 800b7dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800b7e0 <EDIT_Callback>:
 800b7e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b7e2:	6844      	ldr	r4, [r0, #4]
 800b7e4:	4605      	mov	r5, r0
 800b7e6:	4620      	mov	r0, r4
 800b7e8:	f000 fb4a 	bl	800be80 <WM__IsEnabled>
 800b7ec:	4629      	mov	r1, r5
 800b7ee:	4606      	mov	r6, r0
 800b7f0:	4620      	mov	r0, r4
 800b7f2:	f7fe f859 	bl	80098a8 <WIDGET_HandleActive>
 800b7f6:	2800      	cmp	r0, #0
 800b7f8:	d06b      	beq.n	800b8d2 <EDIT_Callback+0xf2>
 800b7fa:	682b      	ldr	r3, [r5, #0]
 800b7fc:	2b0f      	cmp	r3, #15
 800b7fe:	d040      	beq.n	800b882 <EDIT_Callback+0xa2>
 800b800:	dc04      	bgt.n	800b80c <EDIT_Callback+0x2c>
 800b802:	2b0b      	cmp	r3, #11
 800b804:	d042      	beq.n	800b88c <EDIT_Callback+0xac>
 800b806:	2b0e      	cmp	r3, #14
 800b808:	d04d      	beq.n	800b8a6 <EDIT_Callback+0xc6>
 800b80a:	e05f      	b.n	800b8cc <EDIT_Callback+0xec>
 800b80c:	f240 1213 	movw	r2, #275	; 0x113
 800b810:	4293      	cmp	r3, r2
 800b812:	d003      	beq.n	800b81c <EDIT_Callback+0x3c>
 800b814:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800b818:	d021      	beq.n	800b85e <EDIT_Callback+0x7e>
 800b81a:	e057      	b.n	800b8cc <EDIT_Callback+0xec>
 800b81c:	4620      	mov	r0, r4
 800b81e:	f001 fdcd 	bl	800d3bc <WM_SelectWindow>
 800b822:	4620      	mov	r0, r4
 800b824:	f007 fc5c 	bl	80130e0 <GUI_ALLOC_LockH>
 800b828:	ae02      	add	r6, sp, #8
 800b82a:	f846 0d04 	str.w	r0, [r6, #-4]!
 800b82e:	f890 3056 	ldrb.w	r3, [r0, #86]	; 0x56
 800b832:	f083 0304 	eor.w	r3, r3, #4
 800b836:	f880 3056 	strb.w	r3, [r0, #86]	; 0x56
 800b83a:	4630      	mov	r0, r6
 800b83c:	f007 fc5e 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b840:	2100      	movs	r1, #0
 800b842:	4620      	mov	r0, r4
 800b844:	f7ff fc22 	bl	800b08c <_Paint>
 800b848:	4620      	mov	r0, r4
 800b84a:	f007 fc49 	bl	80130e0 <GUI_ALLOC_LockH>
 800b84e:	2100      	movs	r1, #0
 800b850:	9001      	str	r0, [sp, #4]
 800b852:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 800b856:	f000 fbc5 	bl	800bfe4 <WM_RestartTimer>
 800b85a:	4630      	mov	r0, r6
 800b85c:	e020      	b.n	800b8a0 <EDIT_Callback+0xc0>
 800b85e:	68eb      	ldr	r3, [r5, #12]
 800b860:	b153      	cbz	r3, 800b878 <EDIT_Callback+0x98>
 800b862:	7a1a      	ldrb	r2, [r3, #8]
 800b864:	4620      	mov	r0, r4
 800b866:	b12a      	cbz	r2, 800b874 <EDIT_Callback+0x94>
 800b868:	6819      	ldr	r1, [r3, #0]
 800b86a:	f7ff fe6b 	bl	800b544 <EDIT_SetCursorAtPixel>
 800b86e:	4620      	mov	r0, r4
 800b870:	2101      	movs	r1, #1
 800b872:	e003      	b.n	800b87c <EDIT_Callback+0x9c>
 800b874:	2102      	movs	r1, #2
 800b876:	e001      	b.n	800b87c <EDIT_Callback+0x9c>
 800b878:	4620      	mov	r0, r4
 800b87a:	2103      	movs	r1, #3
 800b87c:	f000 fe29 	bl	800c4d2 <WM_NotifyParent>
 800b880:	e024      	b.n	800b8cc <EDIT_Callback+0xec>
 800b882:	4620      	mov	r0, r4
 800b884:	2101      	movs	r1, #1
 800b886:	f7ff fc01 	bl	800b08c <_Paint>
 800b88a:	e022      	b.n	800b8d2 <EDIT_Callback+0xf2>
 800b88c:	4620      	mov	r0, r4
 800b88e:	f007 fc27 	bl	80130e0 <GUI_ALLOC_LockH>
 800b892:	ac02      	add	r4, sp, #8
 800b894:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b898:	3034      	adds	r0, #52	; 0x34
 800b89a:	f007 fe79 	bl	8013590 <GUI_ALLOC_FreePtr>
 800b89e:	4620      	mov	r0, r4
 800b8a0:	f007 fc2c 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b8a4:	e012      	b.n	800b8cc <EDIT_Callback+0xec>
 800b8a6:	b18e      	cbz	r6, 800b8cc <EDIT_Callback+0xec>
 800b8a8:	68eb      	ldr	r3, [r5, #12]
 800b8aa:	685a      	ldr	r2, [r3, #4]
 800b8ac:	2a00      	cmp	r2, #0
 800b8ae:	dd0d      	ble.n	800b8cc <EDIT_Callback+0xec>
 800b8b0:	6819      	ldr	r1, [r3, #0]
 800b8b2:	f1a1 0309 	sub.w	r3, r1, #9
 800b8b6:	2b19      	cmp	r3, #25
 800b8b8:	d804      	bhi.n	800b8c4 <EDIT_Callback+0xe4>
 800b8ba:	2201      	movs	r2, #1
 800b8bc:	409a      	lsls	r2, r3
 800b8be:	4b06      	ldr	r3, [pc, #24]	; (800b8d8 <EDIT_Callback+0xf8>)
 800b8c0:	4013      	ands	r3, r2
 800b8c2:	b91b      	cbnz	r3, 800b8cc <EDIT_Callback+0xec>
 800b8c4:	4620      	mov	r0, r4
 800b8c6:	f7ff fe96 	bl	800b5f6 <EDIT_AddKey>
 800b8ca:	e002      	b.n	800b8d2 <EDIT_Callback+0xf2>
 800b8cc:	4628      	mov	r0, r5
 800b8ce:	f002 f977 	bl	800dbc0 <WM_DefaultProc>
 800b8d2:	b002      	add	sp, #8
 800b8d4:	bd70      	pop	{r4, r5, r6, pc}
 800b8d6:	bf00      	nop
 800b8d8:	03040013 	.word	0x03040013

0800b8dc <EDIT_SetFont>:
 800b8dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b8de:	460d      	mov	r5, r1
 800b8e0:	4606      	mov	r6, r0
 800b8e2:	b158      	cbz	r0, 800b8fc <EDIT_SetFont+0x20>
 800b8e4:	f007 fbfc 	bl	80130e0 <GUI_ALLOC_LockH>
 800b8e8:	ac02      	add	r4, sp, #8
 800b8ea:	6685      	str	r5, [r0, #104]	; 0x68
 800b8ec:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b8f0:	4630      	mov	r0, r6
 800b8f2:	f001 fd42 	bl	800d37a <WM_InvalidateWindow>
 800b8f6:	4620      	mov	r0, r4
 800b8f8:	f007 fc00 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b8fc:	b002      	add	sp, #8
 800b8fe:	bd70      	pop	{r4, r5, r6, pc}

0800b900 <EDIT_SetText>:
 800b900:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b904:	460c      	mov	r4, r1
 800b906:	4606      	mov	r6, r0
 800b908:	2800      	cmp	r0, #0
 800b90a:	d063      	beq.n	800b9d4 <EDIT_SetText+0xd4>
 800b90c:	f007 fbe8 	bl	80130e0 <GUI_ALLOC_LockH>
 800b910:	ad02      	add	r5, sp, #8
 800b912:	6b47      	ldr	r7, [r0, #52]	; 0x34
 800b914:	f845 0d08 	str.w	r0, [r5, #-8]!
 800b918:	f8b0 8038 	ldrh.w	r8, [r0, #56]	; 0x38
 800b91c:	4668      	mov	r0, sp
 800b91e:	f007 fbed 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b922:	2c00      	cmp	r4, #0
 800b924:	d046      	beq.n	800b9b4 <EDIT_SetText+0xb4>
 800b926:	b16f      	cbz	r7, 800b944 <EDIT_SetText+0x44>
 800b928:	4638      	mov	r0, r7
 800b92a:	f007 fbd9 	bl	80130e0 <GUI_ALLOC_LockH>
 800b92e:	af02      	add	r7, sp, #8
 800b930:	f847 0d04 	str.w	r0, [r7, #-4]!
 800b934:	f7f4 fc6c 	bl	8000210 <strlen>
 800b938:	f100 0901 	add.w	r9, r0, #1
 800b93c:	4638      	mov	r0, r7
 800b93e:	f007 fbdd 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b942:	e000      	b.n	800b946 <EDIT_SetText+0x46>
 800b944:	46b9      	mov	r9, r7
 800b946:	4620      	mov	r0, r4
 800b948:	f005 f964 	bl	8010c14 <GUI__GetNumChars>
 800b94c:	fa0f f788 	sxth.w	r7, r8
 800b950:	42b8      	cmp	r0, r7
 800b952:	bfb8      	it	lt
 800b954:	4607      	movlt	r7, r0
 800b956:	4639      	mov	r1, r7
 800b958:	4620      	mov	r0, r4
 800b95a:	f005 fbf9 	bl	8011150 <GUI_UC__NumChars2NumBytes>
 800b95e:	f100 0801 	add.w	r8, r0, #1
 800b962:	ebc9 0108 	rsb	r1, r9, r8
 800b966:	4630      	mov	r0, r6
 800b968:	f7ff fd0d 	bl	800b386 <_IsSpaceInBuffer>
 800b96c:	2800      	cmp	r0, #0
 800b96e:	d02e      	beq.n	800b9ce <EDIT_SetText+0xce>
 800b970:	4630      	mov	r0, r6
 800b972:	f007 fbb5 	bl	80130e0 <GUI_ALLOC_LockH>
 800b976:	9000      	str	r0, [sp, #0]
 800b978:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b97a:	f007 fbb1 	bl	80130e0 <GUI_ALLOC_LockH>
 800b97e:	4642      	mov	r2, r8
 800b980:	4621      	mov	r1, r4
 800b982:	9001      	str	r0, [sp, #4]
 800b984:	f00f f865 	bl	801aa52 <memcpy>
 800b988:	9b01      	ldr	r3, [sp, #4]
 800b98a:	4443      	add	r3, r8
 800b98c:	2200      	movs	r2, #0
 800b98e:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b992:	9b00      	ldr	r3, [sp, #0]
 800b994:	f9b3 2038 	ldrsh.w	r2, [r3, #56]	; 0x38
 800b998:	64df      	str	r7, [r3, #76]	; 0x4c
 800b99a:	4297      	cmp	r7, r2
 800b99c:	d106      	bne.n	800b9ac <EDIT_SetText+0xac>
 800b99e:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800b9a2:	2a01      	cmp	r2, #1
 800b9a4:	bf04      	itt	eq
 800b9a6:	f107 37ff 	addeq.w	r7, r7, #4294967295
 800b9aa:	64df      	streq	r7, [r3, #76]	; 0x4c
 800b9ac:	a801      	add	r0, sp, #4
 800b9ae:	f007 fba5 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b9b2:	e009      	b.n	800b9c8 <EDIT_SetText+0xc8>
 800b9b4:	4630      	mov	r0, r6
 800b9b6:	f007 fb93 	bl	80130e0 <GUI_ALLOC_LockH>
 800b9ba:	9000      	str	r0, [sp, #0]
 800b9bc:	3034      	adds	r0, #52	; 0x34
 800b9be:	f007 fde7 	bl	8013590 <GUI_ALLOC_FreePtr>
 800b9c2:	9b00      	ldr	r3, [sp, #0]
 800b9c4:	875c      	strh	r4, [r3, #58]	; 0x3a
 800b9c6:	64dc      	str	r4, [r3, #76]	; 0x4c
 800b9c8:	4668      	mov	r0, sp
 800b9ca:	f007 fb97 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b9ce:	4630      	mov	r0, r6
 800b9d0:	f001 fcd3 	bl	800d37a <WM_InvalidateWindow>
 800b9d4:	b003      	add	sp, #12
 800b9d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b9da <EDIT_SetTextAlign>:
 800b9da:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b9dc:	460c      	mov	r4, r1
 800b9de:	4605      	mov	r5, r0
 800b9e0:	b150      	cbz	r0, 800b9f8 <EDIT_SetTextAlign+0x1e>
 800b9e2:	f007 fb7d 	bl	80130e0 <GUI_ALLOC_LockH>
 800b9e6:	9001      	str	r0, [sp, #4]
 800b9e8:	b118      	cbz	r0, 800b9f2 <EDIT_SetTextAlign+0x18>
 800b9ea:	6604      	str	r4, [r0, #96]	; 0x60
 800b9ec:	4628      	mov	r0, r5
 800b9ee:	f001 fcc4 	bl	800d37a <WM_InvalidateWindow>
 800b9f2:	a801      	add	r0, sp, #4
 800b9f4:	f007 fb82 	bl	80130fc <GUI_ALLOC_UnlockH>
 800b9f8:	b003      	add	sp, #12
 800b9fa:	bd30      	pop	{r4, r5, pc}

0800b9fc <GUI_CreateDialogBox>:
 800b9fc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ba00:	4606      	mov	r6, r0
 800ba02:	4688      	mov	r8, r1
 800ba04:	4614      	mov	r4, r2
 800ba06:	461d      	mov	r5, r3
 800ba08:	b913      	cbnz	r3, 800ba10 <GUI_CreateDialogBox+0x14>
 800ba0a:	f000 ff29 	bl	800c860 <WM_GetDesktopWindow>
 800ba0e:	4605      	mov	r5, r0
 800ba10:	9400      	str	r4, [sp, #0]
 800ba12:	4630      	mov	r0, r6
 800ba14:	6834      	ldr	r4, [r6, #0]
 800ba16:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ba18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ba1a:	4629      	mov	r1, r5
 800ba1c:	47a0      	blx	r4
 800ba1e:	4604      	mov	r4, r0
 800ba20:	2800      	cmp	r0, #0
 800ba22:	d039      	beq.n	800ba98 <GUI_CreateDialogBox+0x9c>
 800ba24:	f000 ff28 	bl	800c878 <WM_GetClientWindow>
 800ba28:	8a71      	ldrh	r1, [r6, #18]
 800ba2a:	4607      	mov	r7, r0
 800ba2c:	4620      	mov	r0, r4
 800ba2e:	f7fd ff08 	bl	8009842 <WIDGET_OrState>
 800ba32:	4620      	mov	r0, r4
 800ba34:	f000 faff 	bl	800c036 <WM_ShowWindow>
 800ba38:	4638      	mov	r0, r7
 800ba3a:	f108 38ff 	add.w	r8, r8, #4294967295
 800ba3e:	f000 fafa 	bl	800c036 <WM_ShowWindow>
 800ba42:	f1b8 0f00 	cmp.w	r8, #0
 800ba46:	dd0f      	ble.n	800ba68 <GUI_CreateDialogBox+0x6c>
 800ba48:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 800ba4c:	2200      	movs	r2, #0
 800ba4e:	9200      	str	r2, [sp, #0]
 800ba50:	4630      	mov	r0, r6
 800ba52:	4639      	mov	r1, r7
 800ba54:	4613      	mov	r3, r2
 800ba56:	47e0      	blx	ip
 800ba58:	4681      	mov	r9, r0
 800ba5a:	2800      	cmp	r0, #0
 800ba5c:	d1ed      	bne.n	800ba3a <GUI_CreateDialogBox+0x3e>
 800ba5e:	4620      	mov	r0, r4
 800ba60:	f001 fd76 	bl	800d550 <WM_DeleteWindow>
 800ba64:	4648      	mov	r0, r9
 800ba66:	e018      	b.n	800ba9a <GUI_CreateDialogBox+0x9e>
 800ba68:	4638      	mov	r0, r7
 800ba6a:	211d      	movs	r1, #29
 800ba6c:	f000 fc46 	bl	800c2fc <WM_SendMessageNoPara>
 800ba70:	1c6b      	adds	r3, r5, #1
 800ba72:	d011      	beq.n	800ba98 <GUI_CreateDialogBox+0x9c>
 800ba74:	f000 feb6 	bl	800c7e4 <WM_GetFocussedWindow>
 800ba78:	b150      	cbz	r0, 800ba90 <GUI_CreateDialogBox+0x94>
 800ba7a:	f007 fb27 	bl	80130cc <GUI_ALLOC_h2p>
 800ba7e:	6980      	ldr	r0, [r0, #24]
 800ba80:	42a0      	cmp	r0, r4
 800ba82:	d00a      	beq.n	800ba9a <GUI_CreateDialogBox+0x9e>
 800ba84:	2800      	cmp	r0, #0
 800ba86:	d1f8      	bne.n	800ba7a <GUI_CreateDialogBox+0x7e>
 800ba88:	4620      	mov	r0, r4
 800ba8a:	f000 fb81 	bl	800c190 <WM_SetFocusOnNextChild>
 800ba8e:	e003      	b.n	800ba98 <GUI_CreateDialogBox+0x9c>
 800ba90:	42a5      	cmp	r5, r4
 800ba92:	d1f9      	bne.n	800ba88 <GUI_CreateDialogBox+0x8c>
 800ba94:	4628      	mov	r0, r5
 800ba96:	e000      	b.n	800ba9a <GUI_CreateDialogBox+0x9e>
 800ba98:	4620      	mov	r0, r4
 800ba9a:	b003      	add	sp, #12
 800ba9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800baa0 <BUTTON_IsPressed>:
 800baa0:	b513      	push	{r0, r1, r4, lr}
 800baa2:	4604      	mov	r4, r0
 800baa4:	b150      	cbz	r0, 800babc <BUTTON_IsPressed+0x1c>
 800baa6:	f007 fb1b 	bl	80130e0 <GUI_ALLOC_LockH>
 800baaa:	ab02      	add	r3, sp, #8
 800baac:	8e44      	ldrh	r4, [r0, #50]	; 0x32
 800baae:	f843 0d04 	str.w	r0, [r3, #-4]!
 800bab2:	4618      	mov	r0, r3
 800bab4:	f3c4 2400 	ubfx	r4, r4, #8, #1
 800bab8:	f007 fb20 	bl	80130fc <GUI_ALLOC_UnlockH>
 800babc:	4620      	mov	r0, r4
 800babe:	b002      	add	sp, #8
 800bac0:	bd10      	pop	{r4, pc}

0800bac2 <BUTTON_CreateIndirect>:
 800bac2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bac4:	b087      	sub	sp, #28
 800bac6:	4604      	mov	r4, r0
 800bac8:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 800bacc:	9100      	str	r1, [sp, #0]
 800bace:	2100      	movs	r1, #0
 800bad0:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 800bad4:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 800bad8:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 800badc:	9101      	str	r1, [sp, #4]
 800bade:	8a61      	ldrh	r1, [r4, #18]
 800bae0:	69a5      	ldr	r5, [r4, #24]
 800bae2:	9102      	str	r1, [sp, #8]
 800bae4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800bae8:	9103      	str	r1, [sp, #12]
 800baea:	9504      	str	r5, [sp, #16]
 800baec:	eb0e 0103 	add.w	r1, lr, r3
 800baf0:	4410      	add	r0, r2
 800baf2:	4633      	mov	r3, r6
 800baf4:	463a      	mov	r2, r7
 800baf6:	f000 f8cd 	bl	800bc94 <BUTTON_CreateUser>
 800bafa:	6861      	ldr	r1, [r4, #4]
 800bafc:	4605      	mov	r5, r0
 800bafe:	f000 f901 	bl	800bd04 <BUTTON_SetText>
 800bb02:	4628      	mov	r0, r5
 800bb04:	b007      	add	sp, #28
 800bb06:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bb08 <_OnButtonPressed>:
 800bb08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb0a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800bb0e:	4604      	mov	r4, r0
 800bb10:	f7fd fe97 	bl	8009842 <WIDGET_OrState>
 800bb14:	4620      	mov	r0, r4
 800bb16:	f007 fae3 	bl	80130e0 <GUI_ALLOC_LockH>
 800bb1a:	ab02      	add	r3, sp, #8
 800bb1c:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800bb1e:	f843 0d04 	str.w	r0, [r3, #-4]!
 800bb22:	4618      	mov	r0, r3
 800bb24:	f007 faea 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bb28:	07ab      	lsls	r3, r5, #30
 800bb2a:	d503      	bpl.n	800bb34 <_OnButtonPressed+0x2c>
 800bb2c:	4620      	mov	r0, r4
 800bb2e:	2101      	movs	r1, #1
 800bb30:	f000 fccf 	bl	800c4d2 <WM_NotifyParent>
 800bb34:	b003      	add	sp, #12
 800bb36:	bd30      	pop	{r4, r5, pc}

0800bb38 <_OnButtonReleased>:
 800bb38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bb3a:	4605      	mov	r5, r0
 800bb3c:	460c      	mov	r4, r1
 800bb3e:	f44f 7180 	mov.w	r1, #256	; 0x100
 800bb42:	f7fd fe94 	bl	800986e <WIDGET_AndState>
 800bb46:	4628      	mov	r0, r5
 800bb48:	f007 faca 	bl	80130e0 <GUI_ALLOC_LockH>
 800bb4c:	4602      	mov	r2, r0
 800bb4e:	a802      	add	r0, sp, #8
 800bb50:	6a96      	ldr	r6, [r2, #40]	; 0x28
 800bb52:	f840 2d04 	str.w	r2, [r0, #-4]!
 800bb56:	8e17      	ldrh	r7, [r2, #48]	; 0x30
 800bb58:	f007 fad0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bb5c:	2c02      	cmp	r4, #2
 800bb5e:	d102      	bne.n	800bb66 <_OnButtonReleased+0x2e>
 800bb60:	4638      	mov	r0, r7
 800bb62:	f006 fa0b 	bl	8011f7c <GUI_StoreKey>
 800bb66:	07b3      	lsls	r3, r6, #30
 800bb68:	d503      	bpl.n	800bb72 <_OnButtonReleased+0x3a>
 800bb6a:	4628      	mov	r0, r5
 800bb6c:	4621      	mov	r1, r4
 800bb6e:	f000 fcb0 	bl	800c4d2 <WM_NotifyParent>
 800bb72:	b003      	add	sp, #12
 800bb74:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bb76 <_OnTouchDefault>:
 800bb76:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb78:	460d      	mov	r5, r1
 800bb7a:	4604      	mov	r4, r0
 800bb7c:	f007 fab0 	bl	80130e0 <GUI_ALLOC_LockH>
 800bb80:	ab02      	add	r3, sp, #8
 800bb82:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 800bb84:	f843 0d04 	str.w	r0, [r3, #-4]!
 800bb88:	4618      	mov	r0, r3
 800bb8a:	f007 fab7 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bb8e:	68ea      	ldr	r2, [r5, #12]
 800bb90:	b162      	cbz	r2, 800bbac <_OnTouchDefault+0x36>
 800bb92:	7a12      	ldrb	r2, [r2, #8]
 800bb94:	f406 7380 	and.w	r3, r6, #256	; 0x100
 800bb98:	b122      	cbz	r2, 800bba4 <_OnTouchDefault+0x2e>
 800bb9a:	b95b      	cbnz	r3, 800bbb4 <_OnTouchDefault+0x3e>
 800bb9c:	4620      	mov	r0, r4
 800bb9e:	f7ff ffb3 	bl	800bb08 <_OnButtonPressed>
 800bba2:	e007      	b.n	800bbb4 <_OnTouchDefault+0x3e>
 800bba4:	b133      	cbz	r3, 800bbb4 <_OnTouchDefault+0x3e>
 800bba6:	4620      	mov	r0, r4
 800bba8:	2102      	movs	r1, #2
 800bbaa:	e001      	b.n	800bbb0 <_OnTouchDefault+0x3a>
 800bbac:	4620      	mov	r0, r4
 800bbae:	2103      	movs	r1, #3
 800bbb0:	f7ff ffc2 	bl	800bb38 <_OnButtonReleased>
 800bbb4:	b002      	add	sp, #8
 800bbb6:	bd70      	pop	{r4, r5, r6, pc}

0800bbb8 <BUTTON_Callback>:
 800bbb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bbba:	6844      	ldr	r4, [r0, #4]
 800bbbc:	4605      	mov	r5, r0
 800bbbe:	4629      	mov	r1, r5
 800bbc0:	4620      	mov	r0, r4
 800bbc2:	f7fd fe71 	bl	80098a8 <WIDGET_HandleActive>
 800bbc6:	2800      	cmp	r0, #0
 800bbc8:	d05d      	beq.n	800bc86 <BUTTON_Callback+0xce>
 800bbca:	682b      	ldr	r3, [r5, #0]
 800bbcc:	2b0f      	cmp	r3, #15
 800bbce:	d016      	beq.n	800bbfe <BUTTON_Callback+0x46>
 800bbd0:	dc04      	bgt.n	800bbdc <BUTTON_Callback+0x24>
 800bbd2:	2b0b      	cmp	r3, #11
 800bbd4:	d023      	beq.n	800bc1e <BUTTON_Callback+0x66>
 800bbd6:	2b0e      	cmp	r3, #14
 800bbd8:	d033      	beq.n	800bc42 <BUTTON_Callback+0x8a>
 800bbda:	e051      	b.n	800bc80 <BUTTON_Callback+0xc8>
 800bbdc:	2b28      	cmp	r3, #40	; 0x28
 800bbde:	d048      	beq.n	800bc72 <BUTTON_Callback+0xba>
 800bbe0:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800bbe4:	d005      	beq.n	800bbf2 <BUTTON_Callback+0x3a>
 800bbe6:	2b11      	cmp	r3, #17
 800bbe8:	d14a      	bne.n	800bc80 <BUTTON_Callback+0xc8>
 800bbea:	4b28      	ldr	r3, [pc, #160]	; (800bc8c <BUTTON_Callback+0xd4>)
 800bbec:	681b      	ldr	r3, [r3, #0]
 800bbee:	b913      	cbnz	r3, 800bbf6 <BUTTON_Callback+0x3e>
 800bbf0:	e049      	b.n	800bc86 <BUTTON_Callback+0xce>
 800bbf2:	4b27      	ldr	r3, [pc, #156]	; (800bc90 <BUTTON_Callback+0xd8>)
 800bbf4:	681b      	ldr	r3, [r3, #0]
 800bbf6:	4620      	mov	r0, r4
 800bbf8:	4629      	mov	r1, r5
 800bbfa:	4798      	blx	r3
 800bbfc:	e043      	b.n	800bc86 <BUTTON_Callback+0xce>
 800bbfe:	4620      	mov	r0, r4
 800bc00:	f007 fa6e 	bl	80130e0 <GUI_ALLOC_LockH>
 800bc04:	ab02      	add	r3, sp, #8
 800bc06:	f843 0d04 	str.w	r0, [r3, #-4]!
 800bc0a:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800bc0c:	6815      	ldr	r5, [r2, #0]
 800bc0e:	4618      	mov	r0, r3
 800bc10:	f007 fa74 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bc14:	2d00      	cmp	r5, #0
 800bc16:	d036      	beq.n	800bc86 <BUTTON_Callback+0xce>
 800bc18:	4620      	mov	r0, r4
 800bc1a:	47a8      	blx	r5
 800bc1c:	e033      	b.n	800bc86 <BUTTON_Callback+0xce>
 800bc1e:	4620      	mov	r0, r4
 800bc20:	f007 fa5e 	bl	80130e0 <GUI_ALLOC_LockH>
 800bc24:	ac02      	add	r4, sp, #8
 800bc26:	9001      	str	r0, [sp, #4]
 800bc28:	3068      	adds	r0, #104	; 0x68
 800bc2a:	f007 fcb1 	bl	8013590 <GUI_ALLOC_FreePtr>
 800bc2e:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 800bc32:	2103      	movs	r1, #3
 800bc34:	306c      	adds	r0, #108	; 0x6c
 800bc36:	f007 fcb3 	bl	80135a0 <GUI_ALLOC_FreePtrArray>
 800bc3a:	4620      	mov	r0, r4
 800bc3c:	f007 fa5e 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bc40:	e01e      	b.n	800bc80 <BUTTON_Callback+0xc8>
 800bc42:	68ea      	ldr	r2, [r5, #12]
 800bc44:	ca0c      	ldmia	r2, {r2, r3}
 800bc46:	2a0d      	cmp	r2, #13
 800bc48:	d002      	beq.n	800bc50 <BUTTON_Callback+0x98>
 800bc4a:	2a20      	cmp	r2, #32
 800bc4c:	d007      	beq.n	800bc5e <BUTTON_Callback+0xa6>
 800bc4e:	e010      	b.n	800bc72 <BUTTON_Callback+0xba>
 800bc50:	2b00      	cmp	r3, #0
 800bc52:	dd0e      	ble.n	800bc72 <BUTTON_Callback+0xba>
 800bc54:	4620      	mov	r0, r4
 800bc56:	f7ff ff57 	bl	800bb08 <_OnButtonPressed>
 800bc5a:	4620      	mov	r0, r4
 800bc5c:	e005      	b.n	800bc6a <BUTTON_Callback+0xb2>
 800bc5e:	2b00      	cmp	r3, #0
 800bc60:	4620      	mov	r0, r4
 800bc62:	dd02      	ble.n	800bc6a <BUTTON_Callback+0xb2>
 800bc64:	f7ff ff50 	bl	800bb08 <_OnButtonPressed>
 800bc68:	e00d      	b.n	800bc86 <BUTTON_Callback+0xce>
 800bc6a:	2102      	movs	r1, #2
 800bc6c:	f7ff ff64 	bl	800bb38 <_OnButtonReleased>
 800bc70:	e009      	b.n	800bc86 <BUTTON_Callback+0xce>
 800bc72:	68eb      	ldr	r3, [r5, #12]
 800bc74:	b923      	cbnz	r3, 800bc80 <BUTTON_Callback+0xc8>
 800bc76:	4620      	mov	r0, r4
 800bc78:	f44f 7180 	mov.w	r1, #256	; 0x100
 800bc7c:	f7fd fdf7 	bl	800986e <WIDGET_AndState>
 800bc80:	4628      	mov	r0, r5
 800bc82:	f001 ff9d 	bl	800dbc0 <WM_DefaultProc>
 800bc86:	b003      	add	sp, #12
 800bc88:	bd30      	pop	{r4, r5, pc}
 800bc8a:	bf00      	nop
 800bc8c:	20019434 	.word	0x20019434
 800bc90:	200000fc 	.word	0x200000fc

0800bc94 <BUTTON_CreateUser>:
 800bc94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc96:	b087      	sub	sp, #28
 800bc98:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800bc9a:	9400      	str	r4, [sp, #0]
 800bc9c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800bc9e:	9401      	str	r4, [sp, #4]
 800bca0:	4c15      	ldr	r4, [pc, #84]	; (800bcf8 <BUTTON_CreateUser+0x64>)
 800bca2:	9402      	str	r4, [sp, #8]
 800bca4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800bca6:	344c      	adds	r4, #76	; 0x4c
 800bca8:	9403      	str	r4, [sp, #12]
 800bcaa:	f001 fba7 	bl	800d3fc <WM_CreateWindowAsChild>
 800bcae:	4607      	mov	r7, r0
 800bcb0:	b1f8      	cbz	r0, 800bcf2 <BUTTON_CreateUser+0x5e>
 800bcb2:	f007 fa15 	bl	80130e0 <GUI_ALLOC_LockH>
 800bcb6:	4d11      	ldr	r5, [pc, #68]	; (800bcfc <BUTTON_CreateUser+0x68>)
 800bcb8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800bcba:	9005      	str	r0, [sp, #20]
 800bcbc:	2210      	movs	r2, #16
 800bcbe:	f7fd fdeb 	bl	8009898 <WIDGET__Init>
 800bcc2:	ae06      	add	r6, sp, #24
 800bcc4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bcc6:	f856 ed04 	ldr.w	lr, [r6, #-4]!
 800bcca:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 800bcce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bcd0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bcd2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bcd4:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800bcd8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800bcdc:	4c08      	ldr	r4, [pc, #32]	; (800bd00 <BUTTON_CreateUser+0x6c>)
 800bcde:	6823      	ldr	r3, [r4, #0]
 800bce0:	f8ce 3064 	str.w	r3, [lr, #100]	; 0x64
 800bce4:	4630      	mov	r0, r6
 800bce6:	f007 fa09 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bcea:	6823      	ldr	r3, [r4, #0]
 800bcec:	4638      	mov	r0, r7
 800bcee:	685b      	ldr	r3, [r3, #4]
 800bcf0:	4798      	blx	r3
 800bcf2:	4638      	mov	r0, r7
 800bcf4:	b007      	add	sp, #28
 800bcf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bcf8:	0800bbb9 	.word	0x0800bbb9
 800bcfc:	20000100 	.word	0x20000100
 800bd00:	20000130 	.word	0x20000130

0800bd04 <BUTTON_SetText>:
 800bd04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bd06:	460c      	mov	r4, r1
 800bd08:	4605      	mov	r5, r0
 800bd0a:	b300      	cbz	r0, 800bd4e <BUTTON_SetText+0x4a>
 800bd0c:	f007 f9e8 	bl	80130e0 <GUI_ALLOC_LockH>
 800bd10:	6e86      	ldr	r6, [r0, #104]	; 0x68
 800bd12:	9000      	str	r0, [sp, #0]
 800bd14:	4668      	mov	r0, sp
 800bd16:	9601      	str	r6, [sp, #4]
 800bd18:	f007 f9f0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bd1c:	4621      	mov	r1, r4
 800bd1e:	a801      	add	r0, sp, #4
 800bd20:	f004 fe62 	bl	80109e8 <GUI__SetText>
 800bd24:	f1d0 0401 	rsbs	r4, r0, #1
 800bd28:	bf38      	it	cc
 800bd2a:	2400      	movcc	r4, #0
 800bd2c:	b984      	cbnz	r4, 800bd50 <BUTTON_SetText+0x4c>
 800bd2e:	9b01      	ldr	r3, [sp, #4]
 800bd30:	42b3      	cmp	r3, r6
 800bd32:	d008      	beq.n	800bd46 <BUTTON_SetText+0x42>
 800bd34:	4628      	mov	r0, r5
 800bd36:	f007 f9d3 	bl	80130e0 <GUI_ALLOC_LockH>
 800bd3a:	9b01      	ldr	r3, [sp, #4]
 800bd3c:	9000      	str	r0, [sp, #0]
 800bd3e:	6683      	str	r3, [r0, #104]	; 0x68
 800bd40:	4668      	mov	r0, sp
 800bd42:	f007 f9db 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bd46:	4628      	mov	r0, r5
 800bd48:	f001 fb17 	bl	800d37a <WM_InvalidateWindow>
 800bd4c:	e000      	b.n	800bd50 <BUTTON_SetText+0x4c>
 800bd4e:	2401      	movs	r4, #1
 800bd50:	4620      	mov	r0, r4
 800bd52:	b002      	add	sp, #8
 800bd54:	bd70      	pop	{r4, r5, r6, pc}

0800bd56 <BUTTON_SetFont>:
 800bd56:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bd58:	460c      	mov	r4, r1
 800bd5a:	4605      	mov	r5, r0
 800bd5c:	b158      	cbz	r0, 800bd76 <BUTTON_SetFont+0x20>
 800bd5e:	f007 f9bf 	bl	80130e0 <GUI_ALLOC_LockH>
 800bd62:	4602      	mov	r2, r0
 800bd64:	a802      	add	r0, sp, #8
 800bd66:	6554      	str	r4, [r2, #84]	; 0x54
 800bd68:	f840 2d04 	str.w	r2, [r0, #-4]!
 800bd6c:	f007 f9c6 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bd70:	4628      	mov	r0, r5
 800bd72:	f001 fb02 	bl	800d37a <WM_InvalidateWindow>
 800bd76:	b003      	add	sp, #12
 800bd78:	bd30      	pop	{r4, r5, pc}

0800bd7a <WM__UpdateChildPositions>:
 800bd7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd7e:	b087      	sub	sp, #28
 800bd80:	69c4      	ldr	r4, [r0, #28]
 800bd82:	9303      	str	r3, [sp, #12]
 800bd84:	468a      	mov	sl, r1
 800bd86:	4693      	mov	fp, r2
 800bd88:	2c00      	cmp	r4, #0
 800bd8a:	d06d      	beq.n	800be68 <WM__UpdateChildPositions+0xee>
 800bd8c:	4620      	mov	r0, r4
 800bd8e:	f007 f9a7 	bl	80130e0 <GUI_ALLOC_LockH>
 800bd92:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800bd94:	9005      	str	r0, [sp, #20]
 800bd96:	f401 7320 	and.w	r3, r1, #640	; 0x280
 800bd9a:	2b80      	cmp	r3, #128	; 0x80
 800bd9c:	f8b0 8000 	ldrh.w	r8, [r0]
 800bda0:	8842      	ldrh	r2, [r0, #2]
 800bda2:	8886      	ldrh	r6, [r0, #4]
 800bda4:	88c5      	ldrh	r5, [r0, #6]
 800bda6:	d008      	beq.n	800bdba <WM__UpdateChildPositions+0x40>
 800bda8:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 800bdac:	d108      	bne.n	800bdc0 <WM__UpdateChildPositions+0x46>
 800bdae:	eb08 090a 	add.w	r9, r8, sl
 800bdb2:	fa1f f989 	uxth.w	r9, r9
 800bdb6:	9b03      	ldr	r3, [sp, #12]
 800bdb8:	e008      	b.n	800bdcc <WM__UpdateChildPositions+0x52>
 800bdba:	9803      	ldr	r0, [sp, #12]
 800bdbc:	b283      	uxth	r3, r0
 800bdbe:	e001      	b.n	800bdc4 <WM__UpdateChildPositions+0x4a>
 800bdc0:	fa1f f38a 	uxth.w	r3, sl
 800bdc4:	eb03 0908 	add.w	r9, r3, r8
 800bdc8:	fa1f f989 	uxth.w	r9, r9
 800bdcc:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 800bdd0:	4433      	add	r3, r6
 800bdd2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800bdd6:	b29b      	uxth	r3, r3
 800bdd8:	d008      	beq.n	800bdec <WM__UpdateChildPositions+0x72>
 800bdda:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 800bdde:	d108      	bne.n	800bdf2 <WM__UpdateChildPositions+0x78>
 800bde0:	eb02 0c0b 	add.w	ip, r2, fp
 800bde4:	fa1f fc8c 	uxth.w	ip, ip
 800bde8:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800bdea:	e008      	b.n	800bdfe <WM__UpdateChildPositions+0x84>
 800bdec:	9910      	ldr	r1, [sp, #64]	; 0x40
 800bdee:	b28f      	uxth	r7, r1
 800bdf0:	e001      	b.n	800bdf6 <WM__UpdateChildPositions+0x7c>
 800bdf2:	fa1f f78b 	uxth.w	r7, fp
 800bdf6:	eb07 0c02 	add.w	ip, r7, r2
 800bdfa:	fa1f fc8c 	uxth.w	ip, ip
 800bdfe:	fa0f f989 	sxth.w	r9, r9
 800be02:	fa0f f888 	sxth.w	r8, r8
 800be06:	b212      	sxth	r2, r2
 800be08:	442f      	add	r7, r5
 800be0a:	fa0f fc8c 	sxth.w	ip, ip
 800be0e:	ebb9 0108 	subs.w	r1, r9, r8
 800be12:	9202      	str	r2, [sp, #8]
 800be14:	b2bf      	uxth	r7, r7
 800be16:	ebc2 020c 	rsb	r2, r2, ip
 800be1a:	d100      	bne.n	800be1e <WM__UpdateChildPositions+0xa4>
 800be1c:	b142      	cbz	r2, 800be30 <WM__UpdateChildPositions+0xb6>
 800be1e:	4620      	mov	r0, r4
 800be20:	9301      	str	r3, [sp, #4]
 800be22:	f8cd c000 	str.w	ip, [sp]
 800be26:	f000 fc2e 	bl	800c686 <WM_MoveWindow>
 800be2a:	f8dd c000 	ldr.w	ip, [sp]
 800be2e:	9b01      	ldr	r3, [sp, #4]
 800be30:	b21b      	sxth	r3, r3
 800be32:	ebc9 0903 	rsb	r9, r9, r3
 800be36:	b236      	sxth	r6, r6
 800be38:	9b02      	ldr	r3, [sp, #8]
 800be3a:	ebc6 0808 	rsb	r8, r6, r8
 800be3e:	b23f      	sxth	r7, r7
 800be40:	b22d      	sxth	r5, r5
 800be42:	ebcc 0c07 	rsb	ip, ip, r7
 800be46:	1b5d      	subs	r5, r3, r5
 800be48:	eb19 0108 	adds.w	r1, r9, r8
 800be4c:	eb0c 0205 	add.w	r2, ip, r5
 800be50:	d100      	bne.n	800be54 <WM__UpdateChildPositions+0xda>
 800be52:	b112      	cbz	r2, 800be5a <WM__UpdateChildPositions+0xe0>
 800be54:	4620      	mov	r0, r4
 800be56:	f000 fac1 	bl	800c3dc <WM_ResizeWindow>
 800be5a:	a806      	add	r0, sp, #24
 800be5c:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800be60:	6a1c      	ldr	r4, [r3, #32]
 800be62:	f007 f94b 	bl	80130fc <GUI_ALLOC_UnlockH>
 800be66:	e78f      	b.n	800bd88 <WM__UpdateChildPositions+0xe>
 800be68:	b007      	add	sp, #28
 800be6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800be6e <WM__Screen2Client>:
 800be6e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800be72:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800be76:	4608      	mov	r0, r1
 800be78:	4252      	negs	r2, r2
 800be7a:	4259      	negs	r1, r3
 800be7c:	f006 b8a2 	b.w	8011fc4 <GUI_MoveRect>

0800be80 <WM__IsEnabled>:
 800be80:	b508      	push	{r3, lr}
 800be82:	f007 f923 	bl	80130cc <GUI_ALLOC_h2p>
 800be86:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800be88:	f080 0010 	eor.w	r0, r0, #16
 800be8c:	f3c0 1000 	ubfx	r0, r0, #4, #1
 800be90:	bd08      	pop	{r3, pc}

0800be92 <WM__IsChild>:
 800be92:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800be94:	460d      	mov	r5, r1
 800be96:	4604      	mov	r4, r0
 800be98:	b160      	cbz	r0, 800beb4 <WM__IsChild+0x22>
 800be9a:	f007 f921 	bl	80130e0 <GUI_ALLOC_LockH>
 800be9e:	9001      	str	r0, [sp, #4]
 800bea0:	b120      	cbz	r0, 800beac <WM__IsChild+0x1a>
 800bea2:	6984      	ldr	r4, [r0, #24]
 800bea4:	1b63      	subs	r3, r4, r5
 800bea6:	425c      	negs	r4, r3
 800bea8:	415c      	adcs	r4, r3
 800beaa:	e000      	b.n	800beae <WM__IsChild+0x1c>
 800beac:	4604      	mov	r4, r0
 800beae:	a801      	add	r0, sp, #4
 800beb0:	f007 f924 	bl	80130fc <GUI_ALLOC_UnlockH>
 800beb4:	4620      	mov	r0, r4
 800beb6:	b003      	add	sp, #12
 800beb8:	bd30      	pop	{r4, r5, pc}

0800beba <WM__IsAncestor>:
 800beba:	b510      	push	{r4, lr}
 800bebc:	460c      	mov	r4, r1
 800bebe:	b908      	cbnz	r0, 800bec4 <WM__IsAncestor+0xa>
 800bec0:	2000      	movs	r0, #0
 800bec2:	bd10      	pop	{r4, pc}
 800bec4:	2900      	cmp	r1, #0
 800bec6:	d0fb      	beq.n	800bec0 <WM__IsAncestor+0x6>
 800bec8:	f007 f900 	bl	80130cc <GUI_ALLOC_h2p>
 800becc:	6980      	ldr	r0, [r0, #24]
 800bece:	42a0      	cmp	r0, r4
 800bed0:	d002      	beq.n	800bed8 <WM__IsAncestor+0x1e>
 800bed2:	2800      	cmp	r0, #0
 800bed4:	d1f8      	bne.n	800bec8 <WM__IsAncestor+0xe>
 800bed6:	e7f3      	b.n	800bec0 <WM__IsAncestor+0x6>
 800bed8:	2001      	movs	r0, #1
 800beda:	bd10      	pop	{r4, pc}

0800bedc <WM__IsAncestorOrSelf>:
 800bedc:	4288      	cmp	r0, r1
 800bede:	d001      	beq.n	800bee4 <WM__IsAncestorOrSelf+0x8>
 800bee0:	f7ff bfeb 	b.w	800beba <WM__IsAncestor>
 800bee4:	2001      	movs	r0, #1
 800bee6:	4770      	bx	lr

0800bee8 <_cbTimer>:
 800bee8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800beea:	4604      	mov	r4, r0
 800beec:	2100      	movs	r1, #0
 800beee:	4668      	mov	r0, sp
 800bef0:	2210      	movs	r2, #16
 800bef2:	f00e fdd2 	bl	801aa9a <memset>
 800bef6:	6860      	ldr	r0, [r4, #4]
 800bef8:	b150      	cbz	r0, 800bf10 <_cbTimer+0x28>
 800befa:	f007 f8e7 	bl	80130cc <GUI_ALLOC_h2p>
 800befe:	f240 1313 	movw	r3, #275	; 0x113
 800bf02:	6840      	ldr	r0, [r0, #4]
 800bf04:	9300      	str	r3, [sp, #0]
 800bf06:	4669      	mov	r1, sp
 800bf08:	6863      	ldr	r3, [r4, #4]
 800bf0a:	9303      	str	r3, [sp, #12]
 800bf0c:	f001 f9de 	bl	800d2cc <WM_SendMessage>
 800bf10:	b004      	add	sp, #16
 800bf12:	bd10      	pop	{r4, pc}

0800bf14 <WM_DeleteTimer>:
 800bf14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bf16:	4605      	mov	r5, r0
 800bf18:	b168      	cbz	r0, 800bf36 <WM_DeleteTimer+0x22>
 800bf1a:	f007 f8e1 	bl	80130e0 <GUI_ALLOC_LockH>
 800bf1e:	ac02      	add	r4, sp, #8
 800bf20:	f844 0d04 	str.w	r0, [r4, #-4]!
 800bf24:	6800      	ldr	r0, [r0, #0]
 800bf26:	f005 fa75 	bl	8011414 <GUI_TIMER_Delete>
 800bf2a:	4620      	mov	r0, r4
 800bf2c:	f007 f8e6 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bf30:	4628      	mov	r0, r5
 800bf32:	f007 f90f 	bl	8013154 <GUI_ALLOC_Free>
 800bf36:	b003      	add	sp, #12
 800bf38:	bd30      	pop	{r4, r5, pc}

0800bf3a <WM__DeleteAssocTimer>:
 800bf3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bf3c:	4605      	mov	r5, r0
 800bf3e:	a801      	add	r0, sp, #4
 800bf40:	f005 f9e6 	bl	8011310 <GUI_TIMER__GetFirstTimer>
 800bf44:	4604      	mov	r4, r0
 800bf46:	b1dc      	cbz	r4, 800bf80 <WM__DeleteAssocTimer+0x46>
 800bf48:	4620      	mov	r0, r4
 800bf4a:	2101      	movs	r1, #1
 800bf4c:	f005 fabd 	bl	80114ca <GUI_TIMER_GetFlag>
 800bf50:	9b01      	ldr	r3, [sp, #4]
 800bf52:	b183      	cbz	r3, 800bf76 <WM__DeleteAssocTimer+0x3c>
 800bf54:	b178      	cbz	r0, 800bf76 <WM__DeleteAssocTimer+0x3c>
 800bf56:	4618      	mov	r0, r3
 800bf58:	f007 f8b8 	bl	80130cc <GUI_ALLOC_h2p>
 800bf5c:	6843      	ldr	r3, [r0, #4]
 800bf5e:	42ab      	cmp	r3, r5
 800bf60:	d109      	bne.n	800bf76 <WM__DeleteAssocTimer+0x3c>
 800bf62:	4620      	mov	r0, r4
 800bf64:	a901      	add	r1, sp, #4
 800bf66:	9e01      	ldr	r6, [sp, #4]
 800bf68:	f005 f9ea 	bl	8011340 <GUI_TIMER__GetNextTimerLin>
 800bf6c:	4604      	mov	r4, r0
 800bf6e:	4630      	mov	r0, r6
 800bf70:	f7ff ffd0 	bl	800bf14 <WM_DeleteTimer>
 800bf74:	e7e7      	b.n	800bf46 <WM__DeleteAssocTimer+0xc>
 800bf76:	4620      	mov	r0, r4
 800bf78:	a901      	add	r1, sp, #4
 800bf7a:	f005 f9e1 	bl	8011340 <GUI_TIMER__GetNextTimerLin>
 800bf7e:	e7e1      	b.n	800bf44 <WM__DeleteAssocTimer+0xa>
 800bf80:	b002      	add	sp, #8
 800bf82:	bd70      	pop	{r4, r5, r6, pc}

0800bf84 <WM_CreateTimer>:
 800bf84:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800bf88:	4680      	mov	r8, r0
 800bf8a:	200c      	movs	r0, #12
 800bf8c:	460f      	mov	r7, r1
 800bf8e:	4616      	mov	r6, r2
 800bf90:	f007 fb13 	bl	80135ba <GUI_ALLOC_AllocZero>
 800bf94:	4604      	mov	r4, r0
 800bf96:	b1f0      	cbz	r0, 800bfd6 <WM_CreateTimer+0x52>
 800bf98:	f005 faac 	bl	80114f4 <GUI_GetTime>
 800bf9c:	4622      	mov	r2, r4
 800bf9e:	1981      	adds	r1, r0, r6
 800bfa0:	2301      	movs	r3, #1
 800bfa2:	480f      	ldr	r0, [pc, #60]	; (800bfe0 <WM_CreateTimer+0x5c>)
 800bfa4:	f005 f9e8 	bl	8011378 <GUI_TIMER_Create>
 800bfa8:	4605      	mov	r5, r0
 800bfaa:	4620      	mov	r0, r4
 800bfac:	b185      	cbz	r5, 800bfd0 <WM_CreateTimer+0x4c>
 800bfae:	f007 f897 	bl	80130e0 <GUI_ALLOC_LockH>
 800bfb2:	4603      	mov	r3, r0
 800bfb4:	a802      	add	r0, sp, #8
 800bfb6:	f8c3 8004 	str.w	r8, [r3, #4]
 800bfba:	f840 3d04 	str.w	r3, [r0, #-4]!
 800bfbe:	609f      	str	r7, [r3, #8]
 800bfc0:	601d      	str	r5, [r3, #0]
 800bfc2:	f007 f89b 	bl	80130fc <GUI_ALLOC_UnlockH>
 800bfc6:	4628      	mov	r0, r5
 800bfc8:	4631      	mov	r1, r6
 800bfca:	f005 fa57 	bl	801147c <GUI_TIMER_SetPeriod>
 800bfce:	e002      	b.n	800bfd6 <WM_CreateTimer+0x52>
 800bfd0:	f007 f8c0 	bl	8013154 <GUI_ALLOC_Free>
 800bfd4:	462c      	mov	r4, r5
 800bfd6:	4620      	mov	r0, r4
 800bfd8:	b002      	add	sp, #8
 800bfda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bfde:	bf00      	nop
 800bfe0:	0800bee9 	.word	0x0800bee9

0800bfe4 <WM_RestartTimer>:
 800bfe4:	b513      	push	{r0, r1, r4, lr}
 800bfe6:	460c      	mov	r4, r1
 800bfe8:	b180      	cbz	r0, 800c00c <WM_RestartTimer+0x28>
 800bfea:	f007 f879 	bl	80130e0 <GUI_ALLOC_LockH>
 800bfee:	9001      	str	r0, [sp, #4]
 800bff0:	b11c      	cbz	r4, 800bffa <WM_RestartTimer+0x16>
 800bff2:	6800      	ldr	r0, [r0, #0]
 800bff4:	4621      	mov	r1, r4
 800bff6:	f005 fa41 	bl	801147c <GUI_TIMER_SetPeriod>
 800bffa:	ac02      	add	r4, sp, #8
 800bffc:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 800c000:	6818      	ldr	r0, [r3, #0]
 800c002:	f005 fa49 	bl	8011498 <GUI_TIMER_Restart>
 800c006:	4620      	mov	r0, r4
 800c008:	f007 f878 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c00c:	b002      	add	sp, #8
 800c00e:	bd10      	pop	{r4, pc}

0800c010 <WM_InvalidateWindowAndDescs>:
 800c010:	b510      	push	{r4, lr}
 800c012:	4604      	mov	r4, r0
 800c014:	b170      	cbz	r0, 800c034 <WM_InvalidateWindowAndDescs+0x24>
 800c016:	f001 f9b0 	bl	800d37a <WM_InvalidateWindow>
 800c01a:	4620      	mov	r0, r4
 800c01c:	f000 fbec 	bl	800c7f8 <WM_GetFirstChild>
 800c020:	4604      	mov	r4, r0
 800c022:	b13c      	cbz	r4, 800c034 <WM_InvalidateWindowAndDescs+0x24>
 800c024:	4620      	mov	r0, r4
 800c026:	f7ff fff3 	bl	800c010 <WM_InvalidateWindowAndDescs>
 800c02a:	4620      	mov	r0, r4
 800c02c:	f007 f84e 	bl	80130cc <GUI_ALLOC_h2p>
 800c030:	6a04      	ldr	r4, [r0, #32]
 800c032:	e7f6      	b.n	800c022 <WM_InvalidateWindowAndDescs+0x12>
 800c034:	bd10      	pop	{r4, pc}

0800c036 <WM_ShowWindow>:
 800c036:	b513      	push	{r0, r1, r4, lr}
 800c038:	4604      	mov	r4, r0
 800c03a:	b170      	cbz	r0, 800c05a <WM_ShowWindow+0x24>
 800c03c:	f007 f850 	bl	80130e0 <GUI_ALLOC_LockH>
 800c040:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800c042:	9001      	str	r0, [sp, #4]
 800c044:	0793      	lsls	r3, r2, #30
 800c046:	d405      	bmi.n	800c054 <WM_ShowWindow+0x1e>
 800c048:	f042 0202 	orr.w	r2, r2, #2
 800c04c:	6282      	str	r2, [r0, #40]	; 0x28
 800c04e:	4620      	mov	r0, r4
 800c050:	f7ff ffde 	bl	800c010 <WM_InvalidateWindowAndDescs>
 800c054:	a801      	add	r0, sp, #4
 800c056:	f007 f851 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c05a:	b002      	add	sp, #8
 800c05c:	bd10      	pop	{r4, pc}
	...

0800c060 <WM_SetUserClipRect>:
 800c060:	4b04      	ldr	r3, [pc, #16]	; (800c074 <WM_SetUserClipRect+0x14>)
 800c062:	b510      	push	{r4, lr}
 800c064:	681b      	ldr	r3, [r3, #0]
 800c066:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 800c068:	6458      	str	r0, [r3, #68]	; 0x44
 800c06a:	f000 ffdf 	bl	800d02c <WM__ActivateClipRect>
 800c06e:	4620      	mov	r0, r4
 800c070:	bd10      	pop	{r4, pc}
 800c072:	bf00      	nop
 800c074:	2000016c 	.word	0x2000016c

0800c078 <WM_SetHasTrans>:
 800c078:	b513      	push	{r0, r1, r4, lr}
 800c07a:	4604      	mov	r4, r0
 800c07c:	b1b8      	cbz	r0, 800c0ae <WM_SetHasTrans+0x36>
 800c07e:	f007 f82f 	bl	80130e0 <GUI_ALLOC_LockH>
 800c082:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c084:	9001      	str	r0, [sp, #4]
 800c086:	07db      	lsls	r3, r3, #31
 800c088:	d40e      	bmi.n	800c0a8 <WM_SetHasTrans+0x30>
 800c08a:	4620      	mov	r0, r4
 800c08c:	f009 fad0 	bl	8015630 <WM_ValidateWindow>
 800c090:	9b01      	ldr	r3, [sp, #4]
 800c092:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c094:	f042 0201 	orr.w	r2, r2, #1
 800c098:	629a      	str	r2, [r3, #40]	; 0x28
 800c09a:	4b06      	ldr	r3, [pc, #24]	; (800c0b4 <WM_SetHasTrans+0x3c>)
 800c09c:	681a      	ldr	r2, [r3, #0]
 800c09e:	4620      	mov	r0, r4
 800c0a0:	3201      	adds	r2, #1
 800c0a2:	601a      	str	r2, [r3, #0]
 800c0a4:	f001 f969 	bl	800d37a <WM_InvalidateWindow>
 800c0a8:	a801      	add	r0, sp, #4
 800c0aa:	f007 f827 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c0ae:	b002      	add	sp, #8
 800c0b0:	bd10      	pop	{r4, pc}
 800c0b2:	bf00      	nop
 800c0b4:	20019c50 	.word	0x20019c50

0800c0b8 <WM_GetHasTrans>:
 800c0b8:	b508      	push	{r3, lr}
 800c0ba:	b128      	cbz	r0, 800c0c8 <WM_GetHasTrans+0x10>
 800c0bc:	f007 f806 	bl	80130cc <GUI_ALLOC_h2p>
 800c0c0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c0c2:	f000 0001 	and.w	r0, r0, #1
 800c0c6:	bd08      	pop	{r3, pc}
 800c0c8:	bd08      	pop	{r3, pc}

0800c0ca <WM_SetSize>:
 800c0ca:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 800c0ce:	460e      	mov	r6, r1
 800c0d0:	4690      	mov	r8, r2
 800c0d2:	4607      	mov	r7, r0
 800c0d4:	b1d0      	cbz	r0, 800c10c <WM_SetSize+0x42>
 800c0d6:	f007 f803 	bl	80130e0 <GUI_ALLOC_LockH>
 800c0da:	4603      	mov	r3, r0
 800c0dc:	a802      	add	r0, sp, #8
 800c0de:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800c0e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c0e6:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 800c0ea:	f840 3d04 	str.w	r3, [r0, #-4]!
 800c0ee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c0f2:	1a8a      	subs	r2, r1, r2
 800c0f4:	1aed      	subs	r5, r5, r3
 800c0f6:	43d2      	mvns	r2, r2
 800c0f8:	43ed      	mvns	r5, r5
 800c0fa:	4416      	add	r6, r2
 800c0fc:	4445      	add	r5, r8
 800c0fe:	f006 fffd 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c102:	4638      	mov	r0, r7
 800c104:	4631      	mov	r1, r6
 800c106:	462a      	mov	r2, r5
 800c108:	f000 f968 	bl	800c3dc <WM_ResizeWindow>
 800c10c:	b003      	add	sp, #12
 800c10e:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

0800c112 <_GetPrevChild>:
 800c112:	b510      	push	{r4, lr}
 800c114:	4604      	mov	r4, r0
 800c116:	b918      	cbnz	r0, 800c120 <_GetPrevChild+0xe>
 800c118:	4620      	mov	r0, r4
 800c11a:	f009 fa60 	bl	80155de <WM__GetLastSibling>
 800c11e:	e003      	b.n	800c128 <_GetPrevChild+0x16>
 800c120:	f009 fa4a 	bl	80155b8 <WM__GetPrevSibling>
 800c124:	2800      	cmp	r0, #0
 800c126:	d0f7      	beq.n	800c118 <_GetPrevChild+0x6>
 800c128:	42a0      	cmp	r0, r4
 800c12a:	bf08      	it	eq
 800c12c:	2000      	moveq	r0, #0
 800c12e:	bd10      	pop	{r4, pc}

0800c130 <WM_SetFocusOnPrevChild>:
 800c130:	b538      	push	{r3, r4, r5, lr}
 800c132:	4604      	mov	r4, r0
 800c134:	b1b0      	cbz	r0, 800c164 <WM_SetFocusOnPrevChild+0x34>
 800c136:	f009 fa5f 	bl	80155f8 <WM__GetFocussedChild>
 800c13a:	f7ff ffea 	bl	800c112 <_GetPrevChild>
 800c13e:	4605      	mov	r5, r0
 800c140:	4604      	mov	r4, r0
 800c142:	4620      	mov	r0, r4
 800c144:	f000 fabf 	bl	800c6c6 <WM_IsFocussable>
 800c148:	b930      	cbnz	r0, 800c158 <WM_SetFocusOnPrevChild+0x28>
 800c14a:	b12c      	cbz	r4, 800c158 <WM_SetFocusOnPrevChild+0x28>
 800c14c:	4620      	mov	r0, r4
 800c14e:	f7ff ffe0 	bl	800c112 <_GetPrevChild>
 800c152:	42a8      	cmp	r0, r5
 800c154:	4604      	mov	r4, r0
 800c156:	d1f4      	bne.n	800c142 <WM_SetFocusOnPrevChild+0x12>
 800c158:	4620      	mov	r0, r4
 800c15a:	f000 f84b 	bl	800c1f4 <WM_SetFocus>
 800c15e:	2800      	cmp	r0, #0
 800c160:	bf18      	it	ne
 800c162:	2400      	movne	r4, #0
 800c164:	4620      	mov	r0, r4
 800c166:	bd38      	pop	{r3, r4, r5, pc}

0800c168 <_GetNextChild>:
 800c168:	b538      	push	{r3, r4, r5, lr}
 800c16a:	4605      	mov	r5, r0
 800c16c:	460c      	mov	r4, r1
 800c16e:	b921      	cbnz	r1, 800c17a <_GetNextChild+0x12>
 800c170:	4628      	mov	r0, r5
 800c172:	f006 ffab 	bl	80130cc <GUI_ALLOC_h2p>
 800c176:	69c0      	ldr	r0, [r0, #28]
 800c178:	e005      	b.n	800c186 <_GetNextChild+0x1e>
 800c17a:	4608      	mov	r0, r1
 800c17c:	f006 ffa6 	bl	80130cc <GUI_ALLOC_h2p>
 800c180:	6a00      	ldr	r0, [r0, #32]
 800c182:	2800      	cmp	r0, #0
 800c184:	d0f4      	beq.n	800c170 <_GetNextChild+0x8>
 800c186:	42a0      	cmp	r0, r4
 800c188:	bf08      	it	eq
 800c18a:	2000      	moveq	r0, #0
 800c18c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800c190 <WM_SetFocusOnNextChild>:
 800c190:	b570      	push	{r4, r5, r6, lr}
 800c192:	4605      	mov	r5, r0
 800c194:	b340      	cbz	r0, 800c1e8 <WM_SetFocusOnNextChild+0x58>
 800c196:	f009 fa2f 	bl	80155f8 <WM__GetFocussedChild>
 800c19a:	4601      	mov	r1, r0
 800c19c:	4628      	mov	r0, r5
 800c19e:	f7ff ffe3 	bl	800c168 <_GetNextChild>
 800c1a2:	4606      	mov	r6, r0
 800c1a4:	4604      	mov	r4, r0
 800c1a6:	4620      	mov	r0, r4
 800c1a8:	f000 fa8d 	bl	800c6c6 <WM_IsFocussable>
 800c1ac:	b938      	cbnz	r0, 800c1be <WM_SetFocusOnNextChild+0x2e>
 800c1ae:	b13c      	cbz	r4, 800c1c0 <WM_SetFocusOnNextChild+0x30>
 800c1b0:	4621      	mov	r1, r4
 800c1b2:	4628      	mov	r0, r5
 800c1b4:	f7ff ffd8 	bl	800c168 <_GetNextChild>
 800c1b8:	42b0      	cmp	r0, r6
 800c1ba:	4604      	mov	r4, r0
 800c1bc:	d1f3      	bne.n	800c1a6 <WM_SetFocusOnNextChild+0x16>
 800c1be:	b90c      	cbnz	r4, 800c1c4 <WM_SetFocusOnNextChild+0x34>
 800c1c0:	2400      	movs	r4, #0
 800c1c2:	e012      	b.n	800c1ea <WM_SetFocusOnNextChild+0x5a>
 800c1c4:	4d0a      	ldr	r5, [pc, #40]	; (800c1f0 <WM_SetFocusOnNextChild+0x60>)
 800c1c6:	4620      	mov	r0, r4
 800c1c8:	682e      	ldr	r6, [r5, #0]
 800c1ca:	f001 f8d9 	bl	800d380 <WM__GetTopLevelLayer>
 800c1ce:	3001      	adds	r0, #1
 800c1d0:	d00b      	beq.n	800c1ea <WM_SetFocusOnNextChild+0x5a>
 800c1d2:	4620      	mov	r0, r4
 800c1d4:	f001 f8d4 	bl	800d380 <WM__GetTopLevelLayer>
 800c1d8:	6028      	str	r0, [r5, #0]
 800c1da:	4620      	mov	r0, r4
 800c1dc:	f000 f80a 	bl	800c1f4 <WM_SetFocus>
 800c1e0:	602e      	str	r6, [r5, #0]
 800c1e2:	2800      	cmp	r0, #0
 800c1e4:	d1ec      	bne.n	800c1c0 <WM_SetFocusOnNextChild+0x30>
 800c1e6:	e000      	b.n	800c1ea <WM_SetFocusOnNextChild+0x5a>
 800c1e8:	4604      	mov	r4, r0
 800c1ea:	4620      	mov	r0, r4
 800c1ec:	bd70      	pop	{r4, r5, r6, pc}
 800c1ee:	bf00      	nop
 800c1f0:	20019c28 	.word	0x20019c28

0800c1f4 <WM_SetFocus>:
 800c1f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c1f6:	b087      	sub	sp, #28
 800c1f8:	4604      	mov	r4, r0
 800c1fa:	2100      	movs	r1, #0
 800c1fc:	a802      	add	r0, sp, #8
 800c1fe:	2210      	movs	r2, #16
 800c200:	f00e fc4b 	bl	801aa9a <memset>
 800c204:	2c00      	cmp	r4, #0
 800c206:	d03a      	beq.n	800c27e <WM_SetFocus+0x8a>
 800c208:	4b1f      	ldr	r3, [pc, #124]	; (800c288 <WM_SetFocus+0x94>)
 800c20a:	4a20      	ldr	r2, [pc, #128]	; (800c28c <WM_SetFocus+0x98>)
 800c20c:	6819      	ldr	r1, [r3, #0]
 800c20e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800c212:	4284      	cmp	r4, r0
 800c214:	4616      	mov	r6, r2
 800c216:	461f      	mov	r7, r3
 800c218:	d031      	beq.n	800c27e <WM_SetFocus+0x8a>
 800c21a:	231e      	movs	r3, #30
 800c21c:	e88d 0011 	stmia.w	sp, {r0, r4}
 800c220:	9302      	str	r3, [sp, #8]
 800c222:	b110      	cbz	r0, 800c22a <WM_SetFocus+0x36>
 800c224:	a902      	add	r1, sp, #8
 800c226:	f009 f9a9 	bl	801557c <WM__SendMessage>
 800c22a:	2301      	movs	r3, #1
 800c22c:	4620      	mov	r0, r4
 800c22e:	a902      	add	r1, sp, #8
 800c230:	9305      	str	r3, [sp, #20]
 800c232:	f009 f9a3 	bl	801557c <WM__SendMessage>
 800c236:	9d05      	ldr	r5, [sp, #20]
 800c238:	bb15      	cbnz	r5, 800c280 <WM_SetFocus+0x8c>
 800c23a:	683b      	ldr	r3, [r7, #0]
 800c23c:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 800c240:	4620      	mov	r0, r4
 800c242:	f000 faa7 	bl	800c794 <WM_GetParent>
 800c246:	4604      	mov	r4, r0
 800c248:	b138      	cbz	r0, 800c25a <WM_SetFocus+0x66>
 800c24a:	2320      	movs	r3, #32
 800c24c:	9302      	str	r3, [sp, #8]
 800c24e:	a902      	add	r1, sp, #8
 800c250:	ab00      	add	r3, sp, #0
 800c252:	9305      	str	r3, [sp, #20]
 800c254:	f009 f992 	bl	801557c <WM__SendMessage>
 800c258:	e7f2      	b.n	800c240 <WM_SetFocus+0x4c>
 800c25a:	9c00      	ldr	r4, [sp, #0]
 800c25c:	4620      	mov	r0, r4
 800c25e:	f000 fa27 	bl	800c6b0 <WM_IsWindow>
 800c262:	b168      	cbz	r0, 800c280 <WM_SetFocus+0x8c>
 800c264:	4620      	mov	r0, r4
 800c266:	f000 fa95 	bl	800c794 <WM_GetParent>
 800c26a:	4604      	mov	r4, r0
 800c26c:	b140      	cbz	r0, 800c280 <WM_SetFocus+0x8c>
 800c26e:	2320      	movs	r3, #32
 800c270:	9302      	str	r3, [sp, #8]
 800c272:	a902      	add	r1, sp, #8
 800c274:	ab00      	add	r3, sp, #0
 800c276:	9305      	str	r3, [sp, #20]
 800c278:	f009 f980 	bl	801557c <WM__SendMessage>
 800c27c:	e7f2      	b.n	800c264 <WM_SetFocus+0x70>
 800c27e:	2501      	movs	r5, #1
 800c280:	4628      	mov	r0, r5
 800c282:	b007      	add	sp, #28
 800c284:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c286:	bf00      	nop
 800c288:	20019c28 	.word	0x20019c28
 800c28c:	20019c18 	.word	0x20019c18

0800c290 <WM__ReleaseCapture>:
 800c290:	b530      	push	{r4, r5, lr}
 800c292:	4d0a      	ldr	r5, [pc, #40]	; (800c2bc <WM__ReleaseCapture+0x2c>)
 800c294:	4c0a      	ldr	r4, [pc, #40]	; (800c2c0 <WM__ReleaseCapture+0x30>)
 800c296:	682b      	ldr	r3, [r5, #0]
 800c298:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800c29c:	b085      	sub	sp, #20
 800c29e:	b150      	cbz	r0, 800c2b6 <WM__ReleaseCapture+0x26>
 800c2a0:	a904      	add	r1, sp, #16
 800c2a2:	2318      	movs	r3, #24
 800c2a4:	f841 3d10 	str.w	r3, [r1, #-16]!
 800c2a8:	4669      	mov	r1, sp
 800c2aa:	f009 f967 	bl	801557c <WM__SendMessage>
 800c2ae:	682b      	ldr	r3, [r5, #0]
 800c2b0:	2200      	movs	r2, #0
 800c2b2:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 800c2b6:	b005      	add	sp, #20
 800c2b8:	bd30      	pop	{r4, r5, pc}
 800c2ba:	bf00      	nop
 800c2bc:	20019c28 	.word	0x20019c28
 800c2c0:	20019c44 	.word	0x20019c44

0800c2c4 <WM_SetCapture>:
 800c2c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c2c6:	4b09      	ldr	r3, [pc, #36]	; (800c2ec <WM_SetCapture+0x28>)
 800c2c8:	4a09      	ldr	r2, [pc, #36]	; (800c2f0 <WM_SetCapture+0x2c>)
 800c2ca:	4604      	mov	r4, r0
 800c2cc:	6818      	ldr	r0, [r3, #0]
 800c2ce:	460f      	mov	r7, r1
 800c2d0:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 800c2d4:	42a1      	cmp	r1, r4
 800c2d6:	4615      	mov	r5, r2
 800c2d8:	461e      	mov	r6, r3
 800c2da:	d001      	beq.n	800c2e0 <WM_SetCapture+0x1c>
 800c2dc:	f7ff ffd8 	bl	800c290 <WM__ReleaseCapture>
 800c2e0:	6833      	ldr	r3, [r6, #0]
 800c2e2:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 800c2e6:	4b03      	ldr	r3, [pc, #12]	; (800c2f4 <WM_SetCapture+0x30>)
 800c2e8:	701f      	strb	r7, [r3, #0]
 800c2ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c2ec:	20019c28 	.word	0x20019c28
 800c2f0:	20019c44 	.word	0x20019c44
 800c2f4:	20019c2c 	.word	0x20019c2c

0800c2f8 <WM_ReleaseCapture>:
 800c2f8:	f7ff bfca 	b.w	800c290 <WM__ReleaseCapture>

0800c2fc <WM_SendMessageNoPara>:
 800c2fc:	f009 b92a 	b.w	8015554 <WM__SendMessageNoPara>

0800c300 <WM__IsInWindow>:
 800c300:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c302:	f013 0302 	ands.w	r3, r3, #2
 800c306:	d012      	beq.n	800c32e <WM__IsInWindow+0x2e>
 800c308:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c30c:	4299      	cmp	r1, r3
 800c30e:	db10      	blt.n	800c332 <WM__IsInWindow+0x32>
 800c310:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c314:	4299      	cmp	r1, r3
 800c316:	dc0c      	bgt.n	800c332 <WM__IsInWindow+0x32>
 800c318:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c31c:	429a      	cmp	r2, r3
 800c31e:	db08      	blt.n	800c332 <WM__IsInWindow+0x32>
 800c320:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c324:	4282      	cmp	r2, r0
 800c326:	bfcc      	ite	gt
 800c328:	2000      	movgt	r0, #0
 800c32a:	2001      	movle	r0, #1
 800c32c:	4770      	bx	lr
 800c32e:	4618      	mov	r0, r3
 800c330:	4770      	bx	lr
 800c332:	2000      	movs	r0, #0
 800c334:	4770      	bx	lr

0800c336 <_Screen2hWin>:
 800c336:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c33a:	460e      	mov	r6, r1
 800c33c:	4617      	mov	r7, r2
 800c33e:	4698      	mov	r8, r3
 800c340:	4605      	mov	r5, r0
 800c342:	b320      	cbz	r0, 800c38e <_Screen2hWin+0x58>
 800c344:	f006 fecc 	bl	80130e0 <GUI_ALLOC_LockH>
 800c348:	4639      	mov	r1, r7
 800c34a:	4642      	mov	r2, r8
 800c34c:	4604      	mov	r4, r0
 800c34e:	9001      	str	r0, [sp, #4]
 800c350:	f7ff ffd6 	bl	800c300 <WM__IsInWindow>
 800c354:	4681      	mov	r9, r0
 800c356:	b920      	cbnz	r0, 800c362 <_Screen2hWin+0x2c>
 800c358:	a801      	add	r0, sp, #4
 800c35a:	f006 fecf 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c35e:	4648      	mov	r0, r9
 800c360:	e016      	b.n	800c390 <_Screen2hWin+0x5a>
 800c362:	69e4      	ldr	r4, [r4, #28]
 800c364:	b91c      	cbnz	r4, 800c36e <_Screen2hWin+0x38>
 800c366:	a801      	add	r0, sp, #4
 800c368:	f006 fec8 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c36c:	e00f      	b.n	800c38e <_Screen2hWin+0x58>
 800c36e:	42b4      	cmp	r4, r6
 800c370:	d0f9      	beq.n	800c366 <_Screen2hWin+0x30>
 800c372:	4620      	mov	r0, r4
 800c374:	4631      	mov	r1, r6
 800c376:	463a      	mov	r2, r7
 800c378:	4643      	mov	r3, r8
 800c37a:	f7ff ffdc 	bl	800c336 <_Screen2hWin>
 800c37e:	2800      	cmp	r0, #0
 800c380:	bf18      	it	ne
 800c382:	4605      	movne	r5, r0
 800c384:	4620      	mov	r0, r4
 800c386:	f006 fea1 	bl	80130cc <GUI_ALLOC_h2p>
 800c38a:	6a04      	ldr	r4, [r0, #32]
 800c38c:	e7ea      	b.n	800c364 <_Screen2hWin+0x2e>
 800c38e:	4628      	mov	r0, r5
 800c390:	b003      	add	sp, #12
 800c392:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800c398 <WM_Screen2hWin>:
 800c398:	b570      	push	{r4, r5, r6, lr}
 800c39a:	4b06      	ldr	r3, [pc, #24]	; (800c3b4 <WM_Screen2hWin+0x1c>)
 800c39c:	460c      	mov	r4, r1
 800c39e:	4605      	mov	r5, r0
 800c3a0:	6818      	ldr	r0, [r3, #0]
 800c3a2:	f000 fa53 	bl	800c84c <WM_GetDesktopWindowEx>
 800c3a6:	462a      	mov	r2, r5
 800c3a8:	4623      	mov	r3, r4
 800c3aa:	2100      	movs	r1, #0
 800c3ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c3b0:	f7ff bfc1 	b.w	800c336 <_Screen2hWin>
 800c3b4:	20019c28 	.word	0x20019c28

0800c3b8 <WM_Screen2hWinEx>:
 800c3b8:	b570      	push	{r4, r5, r6, lr}
 800c3ba:	4b07      	ldr	r3, [pc, #28]	; (800c3d8 <WM_Screen2hWinEx+0x20>)
 800c3bc:	460d      	mov	r5, r1
 800c3be:	4614      	mov	r4, r2
 800c3c0:	4606      	mov	r6, r0
 800c3c2:	6818      	ldr	r0, [r3, #0]
 800c3c4:	f000 fa42 	bl	800c84c <WM_GetDesktopWindowEx>
 800c3c8:	4631      	mov	r1, r6
 800c3ca:	462a      	mov	r2, r5
 800c3cc:	4623      	mov	r3, r4
 800c3ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c3d2:	f7ff bfb0 	b.w	800c336 <_Screen2hWin>
 800c3d6:	bf00      	nop
 800c3d8:	20019c28 	.word	0x20019c28

0800c3dc <WM_ResizeWindow>:
 800c3dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3e0:	ea51 0302 	orrs.w	r3, r1, r2
 800c3e4:	b08a      	sub	sp, #40	; 0x28
 800c3e6:	4680      	mov	r8, r0
 800c3e8:	460e      	mov	r6, r1
 800c3ea:	4617      	mov	r7, r2
 800c3ec:	d06e      	beq.n	800c4cc <WM_ResizeWindow+0xf0>
 800c3ee:	2800      	cmp	r0, #0
 800c3f0:	d06c      	beq.n	800c4cc <WM_ResizeWindow+0xf0>
 800c3f2:	f006 fe75 	bl	80130e0 <GUI_ALLOC_LockH>
 800c3f6:	4603      	mov	r3, r0
 800c3f8:	9003      	str	r0, [sp, #12]
 800c3fa:	c803      	ldmia	r0, {r0, r1}
 800c3fc:	ad04      	add	r5, sp, #16
 800c3fe:	ac06      	add	r4, sp, #24
 800c400:	e885 0003 	stmia.w	r5, {r0, r1}
 800c404:	e884 0003 	stmia.w	r4, {r0, r1}
 800c408:	b17e      	cbz	r6, 800c42a <WM_ResizeWindow+0x4e>
 800c40a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c40c:	f402 7220 	and.w	r2, r2, #640	; 0x280
 800c410:	2a80      	cmp	r2, #128	; 0x80
 800c412:	d105      	bne.n	800c420 <WM_ResizeWindow+0x44>
 800c414:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800c418:	1b96      	subs	r6, r2, r6
 800c41a:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c41e:	e004      	b.n	800c42a <WM_ResizeWindow+0x4e>
 800c420:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800c424:	4416      	add	r6, r2
 800c426:	f8ad 601c 	strh.w	r6, [sp, #28]
 800c42a:	b187      	cbz	r7, 800c44e <WM_ResizeWindow+0x72>
 800c42c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c42e:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 800c432:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 800c436:	d105      	bne.n	800c444 <WM_ResizeWindow+0x68>
 800c438:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800c43c:	1bd7      	subs	r7, r2, r7
 800c43e:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c442:	e004      	b.n	800c44e <WM_ResizeWindow+0x72>
 800c444:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800c448:	4417      	add	r7, r2
 800c44a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800c44e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c450:	03da      	lsls	r2, r3, #15
 800c452:	d502      	bpl.n	800c45a <WM_ResizeWindow+0x7e>
 800c454:	4640      	mov	r0, r8
 800c456:	f000 fe1d 	bl	800d094 <WM__InvalidateDrawAndDescs>
 800c45a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800c45e:	9b03      	ldr	r3, [sp, #12]
 800c460:	e883 0003 	stmia.w	r3, {r0, r1}
 800c464:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c466:	079b      	lsls	r3, r3, #30
 800c468:	d50a      	bpl.n	800c480 <WM_ResizeWindow+0xa4>
 800c46a:	a808      	add	r0, sp, #32
 800c46c:	4629      	mov	r1, r5
 800c46e:	4622      	mov	r2, r4
 800c470:	f005 fdb8 	bl	8011fe4 <GUI_MergeRect>
 800c474:	9b03      	ldr	r3, [sp, #12]
 800c476:	a808      	add	r0, sp, #32
 800c478:	6999      	ldr	r1, [r3, #24]
 800c47a:	6a1a      	ldr	r2, [r3, #32]
 800c47c:	f000 ff0e 	bl	800d29c <WM__InvalidateRectEx>
 800c480:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 800c484:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800c488:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 800c48c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 800c490:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 800c494:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800c498:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 800c49c:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800c4a0:	1ae3      	subs	r3, r4, r3
 800c4a2:	1a38      	subs	r0, r7, r0
 800c4a4:	ac0a      	add	r4, sp, #40	; 0x28
 800c4a6:	1aaa      	subs	r2, r5, r2
 800c4a8:	9000      	str	r0, [sp, #0]
 800c4aa:	1a71      	subs	r1, r6, r1
 800c4ac:	9803      	ldr	r0, [sp, #12]
 800c4ae:	f7ff fc64 	bl	800bd7a <WM__UpdateChildPositions>
 800c4b2:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 800c4b6:	f101 0008 	add.w	r0, r1, #8
 800c4ba:	f004 fb8d 	bl	8010bd8 <GUI__IntersectRect>
 800c4be:	4640      	mov	r0, r8
 800c4c0:	2105      	movs	r1, #5
 800c4c2:	f000 ff07 	bl	800d2d4 <WM__SendMsgNoData>
 800c4c6:	4620      	mov	r0, r4
 800c4c8:	f006 fe18 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c4cc:	b00a      	add	sp, #40	; 0x28
 800c4ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c4d2 <WM_NotifyParent>:
 800c4d2:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c4d4:	2326      	movs	r3, #38	; 0x26
 800c4d6:	9103      	str	r1, [sp, #12]
 800c4d8:	4669      	mov	r1, sp
 800c4da:	9300      	str	r3, [sp, #0]
 800c4dc:	f009 faec 	bl	8015ab8 <WM_SendToParent>
 800c4e0:	b005      	add	sp, #20
 800c4e2:	f85d fb04 	ldr.w	pc, [sp], #4

0800c4e6 <WM_MoveChildTo>:
 800c4e6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c4e8:	460f      	mov	r7, r1
 800c4ea:	4616      	mov	r6, r2
 800c4ec:	4605      	mov	r5, r0
 800c4ee:	b320      	cbz	r0, 800c53a <WM_MoveChildTo+0x54>
 800c4f0:	f000 f950 	bl	800c794 <WM_GetParent>
 800c4f4:	b308      	cbz	r0, 800c53a <WM_MoveChildTo+0x54>
 800c4f6:	f006 fdf3 	bl	80130e0 <GUI_ALLOC_LockH>
 800c4fa:	9000      	str	r0, [sp, #0]
 800c4fc:	4628      	mov	r0, r5
 800c4fe:	f006 fdef 	bl	80130e0 <GUI_ALLOC_LockH>
 800c502:	ab02      	add	r3, sp, #8
 800c504:	4604      	mov	r4, r0
 800c506:	9001      	str	r0, [sp, #4]
 800c508:	f853 0d08 	ldr.w	r0, [r3, #-8]!
 800c50c:	f9b4 2000 	ldrsh.w	r2, [r4]
 800c510:	f9b0 1000 	ldrsh.w	r1, [r0]
 800c514:	1a8a      	subs	r2, r1, r2
 800c516:	4417      	add	r7, r2
 800c518:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800c51c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800c520:	4668      	mov	r0, sp
 800c522:	1a8a      	subs	r2, r1, r2
 800c524:	4416      	add	r6, r2
 800c526:	f006 fde9 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c52a:	a801      	add	r0, sp, #4
 800c52c:	f006 fde6 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c530:	4628      	mov	r0, r5
 800c532:	4639      	mov	r1, r7
 800c534:	4632      	mov	r2, r6
 800c536:	f000 f838 	bl	800c5aa <WM__MoveWindow>
 800c53a:	b003      	add	sp, #12
 800c53c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c53e <_MoveDescendents>:
 800c53e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c542:	b088      	sub	sp, #32
 800c544:	4606      	mov	r6, r0
 800c546:	460c      	mov	r4, r1
 800c548:	4615      	mov	r5, r2
 800c54a:	a804      	add	r0, sp, #16
 800c54c:	2100      	movs	r1, #0
 800c54e:	2210      	movs	r2, #16
 800c550:	f00e faa3 	bl	801aa9a <memset>
 800c554:	b336      	cbz	r6, 800c5a4 <_MoveDescendents+0x66>
 800c556:	4630      	mov	r0, r6
 800c558:	f006 fdc2 	bl	80130e0 <GUI_ALLOC_LockH>
 800c55c:	4621      	mov	r1, r4
 800c55e:	462a      	mov	r2, r5
 800c560:	9001      	str	r0, [sp, #4]
 800c562:	f005 fd2f 	bl	8011fc4 <GUI_MoveRect>
 800c566:	9801      	ldr	r0, [sp, #4]
 800c568:	4621      	mov	r1, r4
 800c56a:	3008      	adds	r0, #8
 800c56c:	462a      	mov	r2, r5
 800c56e:	f005 fd29 	bl	8011fc4 <GUI_MoveRect>
 800c572:	a808      	add	r0, sp, #32
 800c574:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 800c578:	f8d2 801c 	ldr.w	r8, [r2, #28]
 800c57c:	6a17      	ldr	r7, [r2, #32]
 800c57e:	f006 fdbd 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c582:	4640      	mov	r0, r8
 800c584:	4621      	mov	r1, r4
 800c586:	462a      	mov	r2, r5
 800c588:	f7ff ffd9 	bl	800c53e <_MoveDescendents>
 800c58c:	2303      	movs	r3, #3
 800c58e:	9304      	str	r3, [sp, #16]
 800c590:	4630      	mov	r0, r6
 800c592:	ab02      	add	r3, sp, #8
 800c594:	a904      	add	r1, sp, #16
 800c596:	9307      	str	r3, [sp, #28]
 800c598:	9402      	str	r4, [sp, #8]
 800c59a:	9503      	str	r5, [sp, #12]
 800c59c:	463e      	mov	r6, r7
 800c59e:	f008 ffed 	bl	801557c <WM__SendMessage>
 800c5a2:	e7d7      	b.n	800c554 <_MoveDescendents+0x16>
 800c5a4:	b008      	add	sp, #32
 800c5a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c5aa <WM__MoveWindow>:
 800c5aa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c5ae:	b08b      	sub	sp, #44	; 0x2c
 800c5b0:	4606      	mov	r6, r0
 800c5b2:	460d      	mov	r5, r1
 800c5b4:	4614      	mov	r4, r2
 800c5b6:	a806      	add	r0, sp, #24
 800c5b8:	2100      	movs	r1, #0
 800c5ba:	2210      	movs	r2, #16
 800c5bc:	f00e fa6d 	bl	801aa9a <memset>
 800c5c0:	2e00      	cmp	r6, #0
 800c5c2:	d043      	beq.n	800c64c <WM__MoveWindow+0xa2>
 800c5c4:	b90d      	cbnz	r5, 800c5ca <WM__MoveWindow+0x20>
 800c5c6:	2c00      	cmp	r4, #0
 800c5c8:	d040      	beq.n	800c64c <WM__MoveWindow+0xa2>
 800c5ca:	4630      	mov	r0, r6
 800c5cc:	f006 fd88 	bl	80130e0 <GUI_ALLOC_LockH>
 800c5d0:	4603      	mov	r3, r0
 800c5d2:	9001      	str	r0, [sp, #4]
 800c5d4:	c803      	ldmia	r0, {r0, r1}
 800c5d6:	f10d 0808 	add.w	r8, sp, #8
 800c5da:	e888 0003 	stmia.w	r8, {r0, r1}
 800c5de:	4622      	mov	r2, r4
 800c5e0:	4618      	mov	r0, r3
 800c5e2:	4629      	mov	r1, r5
 800c5e4:	f005 fcee 	bl	8011fc4 <GUI_MoveRect>
 800c5e8:	9801      	ldr	r0, [sp, #4]
 800c5ea:	af0a      	add	r7, sp, #40	; 0x28
 800c5ec:	4629      	mov	r1, r5
 800c5ee:	4622      	mov	r2, r4
 800c5f0:	3008      	adds	r0, #8
 800c5f2:	f005 fce7 	bl	8011fc4 <GUI_MoveRect>
 800c5f6:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 800c5fa:	f8d3 901c 	ldr.w	r9, [r3, #28]
 800c5fe:	4638      	mov	r0, r7
 800c600:	f006 fd7c 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c604:	4622      	mov	r2, r4
 800c606:	4648      	mov	r0, r9
 800c608:	4629      	mov	r1, r5
 800c60a:	f7ff ff98 	bl	800c53e <_MoveDescendents>
 800c60e:	4630      	mov	r0, r6
 800c610:	f006 fd66 	bl	80130e0 <GUI_ALLOC_LockH>
 800c614:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800c616:	9001      	str	r0, [sp, #4]
 800c618:	0792      	lsls	r2, r2, #30
 800c61a:	d50a      	bpl.n	800c632 <WM__MoveWindow+0x88>
 800c61c:	6981      	ldr	r1, [r0, #24]
 800c61e:	b141      	cbz	r1, 800c632 <WM__MoveWindow+0x88>
 800c620:	6a02      	ldr	r2, [r0, #32]
 800c622:	f000 fe26 	bl	800d272 <WM__InvalidateParent>
 800c626:	9b01      	ldr	r3, [sp, #4]
 800c628:	4640      	mov	r0, r8
 800c62a:	6999      	ldr	r1, [r3, #24]
 800c62c:	6a1a      	ldr	r2, [r3, #32]
 800c62e:	f000 fe20 	bl	800d272 <WM__InvalidateParent>
 800c632:	4638      	mov	r0, r7
 800c634:	f006 fd62 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c638:	2303      	movs	r3, #3
 800c63a:	9306      	str	r3, [sp, #24]
 800c63c:	4630      	mov	r0, r6
 800c63e:	ab04      	add	r3, sp, #16
 800c640:	a906      	add	r1, sp, #24
 800c642:	9309      	str	r3, [sp, #36]	; 0x24
 800c644:	9504      	str	r5, [sp, #16]
 800c646:	9405      	str	r4, [sp, #20]
 800c648:	f008 ff98 	bl	801557c <WM__SendMessage>
 800c64c:	b00b      	add	sp, #44	; 0x2c
 800c64e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c652 <WM__MoveTo>:
 800c652:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c654:	460d      	mov	r5, r1
 800c656:	4617      	mov	r7, r2
 800c658:	4606      	mov	r6, r0
 800c65a:	b190      	cbz	r0, 800c682 <WM__MoveTo+0x30>
 800c65c:	f006 fd40 	bl	80130e0 <GUI_ALLOC_LockH>
 800c660:	4604      	mov	r4, r0
 800c662:	a802      	add	r0, sp, #8
 800c664:	f9b4 2000 	ldrsh.w	r2, [r4]
 800c668:	f840 4d04 	str.w	r4, [r0, #-4]!
 800c66c:	f9b4 4002 	ldrsh.w	r4, [r4, #2]
 800c670:	1aad      	subs	r5, r5, r2
 800c672:	1b3c      	subs	r4, r7, r4
 800c674:	f006 fd42 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c678:	4630      	mov	r0, r6
 800c67a:	4629      	mov	r1, r5
 800c67c:	4622      	mov	r2, r4
 800c67e:	f7ff ff94 	bl	800c5aa <WM__MoveWindow>
 800c682:	b003      	add	sp, #12
 800c684:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c686 <WM_MoveWindow>:
 800c686:	f7ff bf90 	b.w	800c5aa <WM__MoveWindow>

0800c68a <WM_MoveTo>:
 800c68a:	f7ff bfe2 	b.w	800c652 <WM__MoveTo>
	...

0800c690 <WM_MULTIBUF_Enable>:
 800c690:	4b05      	ldr	r3, [pc, #20]	; (800c6a8 <WM_MULTIBUF_Enable+0x18>)
 800c692:	681a      	ldr	r2, [r3, #0]
 800c694:	1c11      	adds	r1, r2, #0
 800c696:	bf18      	it	ne
 800c698:	2101      	movne	r1, #1
 800c69a:	b110      	cbz	r0, 800c6a2 <WM_MULTIBUF_Enable+0x12>
 800c69c:	4a03      	ldr	r2, [pc, #12]	; (800c6ac <WM_MULTIBUF_Enable+0x1c>)
 800c69e:	601a      	str	r2, [r3, #0]
 800c6a0:	e000      	b.n	800c6a4 <WM_MULTIBUF_Enable+0x14>
 800c6a2:	6018      	str	r0, [r3, #0]
 800c6a4:	4608      	mov	r0, r1
 800c6a6:	4770      	bx	lr
 800c6a8:	20019c40 	.word	0x20019c40
 800c6ac:	08020fc0 	.word	0x08020fc0

0800c6b0 <WM_IsWindow>:
 800c6b0:	f000 bce0 	b.w	800d074 <WM__IsWindow>

0800c6b4 <WM_IsVisible>:
 800c6b4:	b508      	push	{r3, lr}
 800c6b6:	b128      	cbz	r0, 800c6c4 <WM_IsVisible+0x10>
 800c6b8:	f006 fd08 	bl	80130cc <GUI_ALLOC_h2p>
 800c6bc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c6be:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800c6c2:	bd08      	pop	{r3, pc}
 800c6c4:	bd08      	pop	{r3, pc}

0800c6c6 <WM_IsFocussable>:
 800c6c6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c6c8:	4604      	mov	r4, r0
 800c6ca:	b908      	cbnz	r0, 800c6d0 <WM_IsFocussable+0xa>
 800c6cc:	2000      	movs	r0, #0
 800c6ce:	e011      	b.n	800c6f4 <WM_IsFocussable+0x2e>
 800c6d0:	f006 fcfc 	bl	80130cc <GUI_ALLOC_h2p>
 800c6d4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c6d6:	079a      	lsls	r2, r3, #30
 800c6d8:	d5f8      	bpl.n	800c6cc <WM_IsFocussable+0x6>
 800c6da:	f013 0310 	ands.w	r3, r3, #16
 800c6de:	d1f5      	bne.n	800c6cc <WM_IsFocussable+0x6>
 800c6e0:	a904      	add	r1, sp, #16
 800c6e2:	9303      	str	r3, [sp, #12]
 800c6e4:	231f      	movs	r3, #31
 800c6e6:	f841 3d10 	str.w	r3, [r1, #-16]!
 800c6ea:	4620      	mov	r0, r4
 800c6ec:	4669      	mov	r1, sp
 800c6ee:	f000 fded 	bl	800d2cc <WM_SendMessage>
 800c6f2:	9803      	ldr	r0, [sp, #12]
 800c6f4:	b004      	add	sp, #16
 800c6f6:	bd10      	pop	{r4, pc}

0800c6f8 <WM_HideWindow>:
 800c6f8:	b513      	push	{r0, r1, r4, lr}
 800c6fa:	b188      	cbz	r0, 800c720 <WM_HideWindow+0x28>
 800c6fc:	f006 fcf0 	bl	80130e0 <GUI_ALLOC_LockH>
 800c700:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800c702:	ac02      	add	r4, sp, #8
 800c704:	0791      	lsls	r1, r2, #30
 800c706:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c70a:	d506      	bpl.n	800c71a <WM_HideWindow+0x22>
 800c70c:	f022 0202 	bic.w	r2, r2, #2
 800c710:	6282      	str	r2, [r0, #40]	; 0x28
 800c712:	6981      	ldr	r1, [r0, #24]
 800c714:	6a02      	ldr	r2, [r0, #32]
 800c716:	f000 fdc1 	bl	800d29c <WM__InvalidateRectEx>
 800c71a:	4620      	mov	r0, r4
 800c71c:	f006 fcee 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c720:	b002      	add	sp, #8
 800c722:	bd10      	pop	{r4, pc}

0800c724 <WM_HasFocus>:
 800c724:	4b04      	ldr	r3, [pc, #16]	; (800c738 <WM_HasFocus+0x14>)
 800c726:	681a      	ldr	r2, [r3, #0]
 800c728:	4b04      	ldr	r3, [pc, #16]	; (800c73c <WM_HasFocus+0x18>)
 800c72a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800c72e:	1ac3      	subs	r3, r0, r3
 800c730:	4258      	negs	r0, r3
 800c732:	4158      	adcs	r0, r3
 800c734:	4770      	bx	lr
 800c736:	bf00      	nop
 800c738:	20019c28 	.word	0x20019c28
 800c73c:	20019c18 	.word	0x20019c18

0800c740 <WM_GetWindowSizeX>:
 800c740:	b513      	push	{r0, r1, r4, lr}
 800c742:	b908      	cbnz	r0, 800c748 <WM_GetWindowSizeX+0x8>
 800c744:	f000 ff8e 	bl	800d664 <WM_GetActiveWindow>
 800c748:	f006 fcca 	bl	80130e0 <GUI_ALLOC_LockH>
 800c74c:	ab02      	add	r3, sp, #8
 800c74e:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c752:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c756:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800c75a:	4618      	mov	r0, r3
 800c75c:	1aa4      	subs	r4, r4, r2
 800c75e:	f006 fccd 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c762:	3401      	adds	r4, #1
 800c764:	4620      	mov	r0, r4
 800c766:	b002      	add	sp, #8
 800c768:	bd10      	pop	{r4, pc}

0800c76a <WM_GetWindowSizeY>:
 800c76a:	b513      	push	{r0, r1, r4, lr}
 800c76c:	b908      	cbnz	r0, 800c772 <WM_GetWindowSizeY+0x8>
 800c76e:	f000 ff79 	bl	800d664 <WM_GetActiveWindow>
 800c772:	f006 fcb5 	bl	80130e0 <GUI_ALLOC_LockH>
 800c776:	ab02      	add	r3, sp, #8
 800c778:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c77c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c780:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800c784:	4618      	mov	r0, r3
 800c786:	1aa4      	subs	r4, r4, r2
 800c788:	f006 fcb8 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c78c:	3401      	adds	r4, #1
 800c78e:	4620      	mov	r0, r4
 800c790:	b002      	add	sp, #8
 800c792:	bd10      	pop	{r4, pc}

0800c794 <WM_GetParent>:
 800c794:	b508      	push	{r3, lr}
 800c796:	4603      	mov	r3, r0
 800c798:	b110      	cbz	r0, 800c7a0 <WM_GetParent+0xc>
 800c79a:	f006 fc97 	bl	80130cc <GUI_ALLOC_h2p>
 800c79e:	6983      	ldr	r3, [r0, #24]
 800c7a0:	4618      	mov	r0, r3
 800c7a2:	bd08      	pop	{r3, pc}

0800c7a4 <WM_GetWindowOrgX>:
 800c7a4:	b508      	push	{r3, lr}
 800c7a6:	b120      	cbz	r0, 800c7b2 <WM_GetWindowOrgX+0xe>
 800c7a8:	f006 fc90 	bl	80130cc <GUI_ALLOC_h2p>
 800c7ac:	f9b0 0000 	ldrsh.w	r0, [r0]
 800c7b0:	bd08      	pop	{r3, pc}
 800c7b2:	bd08      	pop	{r3, pc}

0800c7b4 <WM_GetWindowOrgY>:
 800c7b4:	b508      	push	{r3, lr}
 800c7b6:	b120      	cbz	r0, 800c7c2 <WM_GetWindowOrgY+0xe>
 800c7b8:	f006 fc88 	bl	80130cc <GUI_ALLOC_h2p>
 800c7bc:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 800c7c0:	bd08      	pop	{r3, pc}
 800c7c2:	bd08      	pop	{r3, pc}

0800c7c4 <WM_GetId>:
 800c7c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c7c6:	4604      	mov	r4, r0
 800c7c8:	2210      	movs	r2, #16
 800c7ca:	4668      	mov	r0, sp
 800c7cc:	2100      	movs	r1, #0
 800c7ce:	f00e f964 	bl	801aa9a <memset>
 800c7d2:	2315      	movs	r3, #21
 800c7d4:	4620      	mov	r0, r4
 800c7d6:	4669      	mov	r1, sp
 800c7d8:	9300      	str	r3, [sp, #0]
 800c7da:	f000 fd77 	bl	800d2cc <WM_SendMessage>
 800c7de:	9803      	ldr	r0, [sp, #12]
 800c7e0:	b004      	add	sp, #16
 800c7e2:	bd10      	pop	{r4, pc}

0800c7e4 <WM_GetFocussedWindow>:
 800c7e4:	4b02      	ldr	r3, [pc, #8]	; (800c7f0 <WM_GetFocussedWindow+0xc>)
 800c7e6:	681a      	ldr	r2, [r3, #0]
 800c7e8:	4b02      	ldr	r3, [pc, #8]	; (800c7f4 <WM_GetFocussedWindow+0x10>)
 800c7ea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c7ee:	4770      	bx	lr
 800c7f0:	20019c28 	.word	0x20019c28
 800c7f4:	20019c18 	.word	0x20019c18

0800c7f8 <WM_GetFirstChild>:
 800c7f8:	b508      	push	{r3, lr}
 800c7fa:	4603      	mov	r3, r0
 800c7fc:	b110      	cbz	r0, 800c804 <WM_GetFirstChild+0xc>
 800c7fe:	f006 fc65 	bl	80130cc <GUI_ALLOC_h2p>
 800c802:	69c3      	ldr	r3, [r0, #28]
 800c804:	4618      	mov	r0, r3
 800c806:	bd08      	pop	{r3, pc}

0800c808 <_GetDialogItem>:
 800c808:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c80a:	460d      	mov	r5, r1
 800c80c:	f006 fc68 	bl	80130e0 <GUI_ALLOC_LockH>
 800c810:	ab02      	add	r3, sp, #8
 800c812:	69c4      	ldr	r4, [r0, #28]
 800c814:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c818:	4618      	mov	r0, r3
 800c81a:	f006 fc6f 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c81e:	4620      	mov	r0, r4
 800c820:	b16c      	cbz	r4, 800c83e <_GetDialogItem+0x36>
 800c822:	f7ff ffcf 	bl	800c7c4 <WM_GetId>
 800c826:	42a8      	cmp	r0, r5
 800c828:	4620      	mov	r0, r4
 800c82a:	d008      	beq.n	800c83e <_GetDialogItem+0x36>
 800c82c:	4629      	mov	r1, r5
 800c82e:	f7ff ffeb 	bl	800c808 <_GetDialogItem>
 800c832:	b920      	cbnz	r0, 800c83e <_GetDialogItem+0x36>
 800c834:	4620      	mov	r0, r4
 800c836:	f006 fc49 	bl	80130cc <GUI_ALLOC_h2p>
 800c83a:	6a04      	ldr	r4, [r0, #32]
 800c83c:	e7ef      	b.n	800c81e <_GetDialogItem+0x16>
 800c83e:	b003      	add	sp, #12
 800c840:	bd30      	pop	{r4, r5, pc}

0800c842 <WM_GetDialogItem>:
 800c842:	b108      	cbz	r0, 800c848 <WM_GetDialogItem+0x6>
 800c844:	f7ff bfe0 	b.w	800c808 <_GetDialogItem>
 800c848:	4770      	bx	lr
	...

0800c84c <WM_GetDesktopWindowEx>:
 800c84c:	2801      	cmp	r0, #1
 800c84e:	bf9a      	itte	ls
 800c850:	4b02      	ldrls	r3, [pc, #8]	; (800c85c <WM_GetDesktopWindowEx+0x10>)
 800c852:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 800c856:	2000      	movhi	r0, #0
 800c858:	4770      	bx	lr
 800c85a:	bf00      	nop
 800c85c:	20019c08 	.word	0x20019c08

0800c860 <WM_GetDesktopWindow>:
 800c860:	4b03      	ldr	r3, [pc, #12]	; (800c870 <WM_GetDesktopWindow+0x10>)
 800c862:	681b      	ldr	r3, [r3, #0]
 800c864:	7c5a      	ldrb	r2, [r3, #17]
 800c866:	4b03      	ldr	r3, [pc, #12]	; (800c874 <WM_GetDesktopWindow+0x14>)
 800c868:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c86c:	4770      	bx	lr
 800c86e:	bf00      	nop
 800c870:	2000016c 	.word	0x2000016c
 800c874:	20019c08 	.word	0x20019c08

0800c878 <WM_GetClientWindow>:
 800c878:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c87a:	2300      	movs	r3, #0
 800c87c:	a904      	add	r1, sp, #16
 800c87e:	9303      	str	r3, [sp, #12]
 800c880:	2317      	movs	r3, #23
 800c882:	f841 3d10 	str.w	r3, [r1, #-16]!
 800c886:	4669      	mov	r1, sp
 800c888:	f000 fd20 	bl	800d2cc <WM_SendMessage>
 800c88c:	9803      	ldr	r0, [sp, #12]
 800c88e:	b005      	add	sp, #20
 800c890:	f85d fb04 	ldr.w	pc, [sp], #4

0800c894 <WM__GetClientRectEx>:
 800c894:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c896:	460d      	mov	r5, r1
 800c898:	b158      	cbz	r0, 800c8b2 <WM__GetClientRectEx+0x1e>
 800c89a:	b151      	cbz	r1, 800c8b2 <WM__GetClientRectEx+0x1e>
 800c89c:	f006 fc20 	bl	80130e0 <GUI_ALLOC_LockH>
 800c8a0:	ac02      	add	r4, sp, #8
 800c8a2:	4629      	mov	r1, r5
 800c8a4:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c8a8:	f000 fd1f 	bl	800d2ea <WM__GetClientRectWin>
 800c8ac:	4620      	mov	r0, r4
 800c8ae:	f006 fc25 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c8b2:	b003      	add	sp, #12
 800c8b4:	bd30      	pop	{r4, r5, pc}

0800c8b6 <WM_GetClientRectEx>:
 800c8b6:	f7ff bfed 	b.w	800c894 <WM__GetClientRectEx>
	...

0800c8bc <WM_GetClientRect>:
 800c8bc:	4b04      	ldr	r3, [pc, #16]	; (800c8d0 <WM_GetClientRect+0x14>)
 800c8be:	4601      	mov	r1, r0
 800c8c0:	6818      	ldr	r0, [r3, #0]
 800c8c2:	b910      	cbnz	r0, 800c8ca <WM_GetClientRect+0xe>
 800c8c4:	4b03      	ldr	r3, [pc, #12]	; (800c8d4 <WM_GetClientRect+0x18>)
 800c8c6:	681b      	ldr	r3, [r3, #0]
 800c8c8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c8ca:	f7ff bfe3 	b.w	800c894 <WM__GetClientRectEx>
 800c8ce:	bf00      	nop
 800c8d0:	20019c04 	.word	0x20019c04
 800c8d4:	2000016c 	.word	0x2000016c

0800c8d8 <WM_GetBkColor>:
 800c8d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c8da:	b140      	cbz	r0, 800c8ee <WM_GetBkColor+0x16>
 800c8dc:	a904      	add	r1, sp, #16
 800c8de:	2322      	movs	r3, #34	; 0x22
 800c8e0:	f841 3d10 	str.w	r3, [r1, #-16]!
 800c8e4:	4669      	mov	r1, sp
 800c8e6:	f000 fcf1 	bl	800d2cc <WM_SendMessage>
 800c8ea:	9803      	ldr	r0, [sp, #12]
 800c8ec:	e001      	b.n	800c8f2 <WM_GetBkColor+0x1a>
 800c8ee:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
 800c8f2:	b005      	add	sp, #20
 800c8f4:	f85d fb04 	ldr.w	pc, [sp], #4

0800c8f8 <_cbInvalidateOne>:
 800c8f8:	f000 bd3f 	b.w	800d37a <WM_InvalidateWindow>

0800c8fc <WM_BringToTop>:
 800c8fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c8fe:	4605      	mov	r5, r0
 800c900:	2800      	cmp	r0, #0
 800c902:	d032      	beq.n	800c96a <WM_BringToTop+0x6e>
 800c904:	f006 fbec 	bl	80130e0 <GUI_ALLOC_LockH>
 800c908:	ac02      	add	r4, sp, #8
 800c90a:	4603      	mov	r3, r0
 800c90c:	f844 0d08 	str.w	r0, [r4, #-8]!
 800c910:	6a00      	ldr	r0, [r0, #32]
 800c912:	b908      	cbnz	r0, 800c918 <WM_BringToTop+0x1c>
 800c914:	4668      	mov	r0, sp
 800c916:	e00e      	b.n	800c936 <WM_BringToTop+0x3a>
 800c918:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c91a:	071a      	lsls	r2, r3, #28
 800c91c:	d411      	bmi.n	800c942 <WM_BringToTop+0x46>
 800c91e:	f006 fbdf 	bl	80130e0 <GUI_ALLOC_LockH>
 800c922:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c924:	ae02      	add	r6, sp, #8
 800c926:	071b      	lsls	r3, r3, #28
 800c928:	f846 0d04 	str.w	r0, [r6, #-4]!
 800c92c:	d506      	bpl.n	800c93c <WM_BringToTop+0x40>
 800c92e:	4668      	mov	r0, sp
 800c930:	f006 fbe4 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c934:	4630      	mov	r0, r6
 800c936:	f006 fbe1 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c93a:	e016      	b.n	800c96a <WM_BringToTop+0x6e>
 800c93c:	4630      	mov	r0, r6
 800c93e:	f006 fbdd 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c942:	9b00      	ldr	r3, [sp, #0]
 800c944:	4668      	mov	r0, sp
 800c946:	699e      	ldr	r6, [r3, #24]
 800c948:	f006 fbd8 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c94c:	4628      	mov	r0, r5
 800c94e:	f000 fb1f 	bl	800cf90 <WM__RemoveWindowFromList>
 800c952:	4631      	mov	r1, r6
 800c954:	4628      	mov	r0, r5
 800c956:	f000 fac9 	bl	800ceec <WM__InsertWindowIntoList>
 800c95a:	4628      	mov	r0, r5
 800c95c:	f000 fd0d 	bl	800d37a <WM_InvalidateWindow>
 800c960:	4628      	mov	r0, r5
 800c962:	4903      	ldr	r1, [pc, #12]	; (800c970 <WM_BringToTop+0x74>)
 800c964:	2200      	movs	r2, #0
 800c966:	f009 f918 	bl	8015b9a <WM_ForEachDesc>
 800c96a:	b002      	add	sp, #8
 800c96c:	bd70      	pop	{r4, r5, r6, pc}
 800c96e:	bf00      	nop
 800c970:	0800c8f9 	.word	0x0800c8f9

0800c974 <WM_DetachWindow>:
 800c974:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c976:	4604      	mov	r4, r0
 800c978:	b1f0      	cbz	r0, 800c9b8 <WM_DetachWindow+0x44>
 800c97a:	f006 fbb1 	bl	80130e0 <GUI_ALLOC_LockH>
 800c97e:	ab02      	add	r3, sp, #8
 800c980:	6985      	ldr	r5, [r0, #24]
 800c982:	f843 0d08 	str.w	r0, [r3, #-8]!
 800c986:	4668      	mov	r0, sp
 800c988:	f006 fbb8 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c98c:	b1a5      	cbz	r5, 800c9b8 <WM_DetachWindow+0x44>
 800c98e:	4620      	mov	r0, r4
 800c990:	f000 fc87 	bl	800d2a2 <WM__DetachWindow>
 800c994:	4628      	mov	r0, r5
 800c996:	f006 fba3 	bl	80130e0 <GUI_ALLOC_LockH>
 800c99a:	4602      	mov	r2, r0
 800c99c:	a802      	add	r0, sp, #8
 800c99e:	8816      	ldrh	r6, [r2, #0]
 800c9a0:	8855      	ldrh	r5, [r2, #2]
 800c9a2:	f840 2d04 	str.w	r2, [r0, #-4]!
 800c9a6:	f006 fba9 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c9aa:	b231      	sxth	r1, r6
 800c9ac:	b22a      	sxth	r2, r5
 800c9ae:	4620      	mov	r0, r4
 800c9b0:	4249      	negs	r1, r1
 800c9b2:	4252      	negs	r2, r2
 800c9b4:	f7ff fe67 	bl	800c686 <WM_MoveWindow>
 800c9b8:	b002      	add	sp, #8
 800c9ba:	bd70      	pop	{r4, r5, r6, pc}

0800c9bc <WM_AttachWindow>:
 800c9bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c9be:	4604      	mov	r4, r0
 800c9c0:	460d      	mov	r5, r1
 800c9c2:	b351      	cbz	r1, 800ca1a <WM_AttachWindow+0x5e>
 800c9c4:	4281      	cmp	r1, r0
 800c9c6:	d028      	beq.n	800ca1a <WM_AttachWindow+0x5e>
 800c9c8:	f006 fb8a 	bl	80130e0 <GUI_ALLOC_LockH>
 800c9cc:	4603      	mov	r3, r0
 800c9ce:	a802      	add	r0, sp, #8
 800c9d0:	f840 3d08 	str.w	r3, [r0, #-8]!
 800c9d4:	699b      	ldr	r3, [r3, #24]
 800c9d6:	42ab      	cmp	r3, r5
 800c9d8:	4668      	mov	r0, sp
 800c9da:	d01c      	beq.n	800ca16 <WM_AttachWindow+0x5a>
 800c9dc:	f006 fb8e 	bl	80130fc <GUI_ALLOC_UnlockH>
 800c9e0:	4620      	mov	r0, r4
 800c9e2:	f7ff ffc7 	bl	800c974 <WM_DetachWindow>
 800c9e6:	4629      	mov	r1, r5
 800c9e8:	4620      	mov	r0, r4
 800c9ea:	f000 fa7f 	bl	800ceec <WM__InsertWindowIntoList>
 800c9ee:	4628      	mov	r0, r5
 800c9f0:	f006 fb76 	bl	80130e0 <GUI_ALLOC_LockH>
 800c9f4:	ab02      	add	r3, sp, #8
 800c9f6:	8806      	ldrh	r6, [r0, #0]
 800c9f8:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c9fc:	8845      	ldrh	r5, [r0, #2]
 800c9fe:	4618      	mov	r0, r3
 800ca00:	f006 fb7c 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ca04:	4620      	mov	r0, r4
 800ca06:	b231      	sxth	r1, r6
 800ca08:	b22a      	sxth	r2, r5
 800ca0a:	f7ff fe3c 	bl	800c686 <WM_MoveWindow>
 800ca0e:	4620      	mov	r0, r4
 800ca10:	f000 fcb3 	bl	800d37a <WM_InvalidateWindow>
 800ca14:	e001      	b.n	800ca1a <WM_AttachWindow+0x5e>
 800ca16:	f006 fb71 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ca1a:	b002      	add	sp, #8
 800ca1c:	bd70      	pop	{r4, r5, r6, pc}

0800ca1e <WM_AttachWindowAt>:
 800ca1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca20:	4604      	mov	r4, r0
 800ca22:	4617      	mov	r7, r2
 800ca24:	461e      	mov	r6, r3
 800ca26:	460d      	mov	r5, r1
 800ca28:	f7ff ffa4 	bl	800c974 <WM_DetachWindow>
 800ca2c:	4620      	mov	r0, r4
 800ca2e:	4639      	mov	r1, r7
 800ca30:	4632      	mov	r2, r6
 800ca32:	f7ff fe2a 	bl	800c68a <WM_MoveTo>
 800ca36:	4620      	mov	r0, r4
 800ca38:	4629      	mov	r1, r5
 800ca3a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ca3e:	f7ff bfbd 	b.w	800c9bc <WM_AttachWindow>
	...

0800ca44 <_OnExit>:
 800ca44:	4a0a      	ldr	r2, [pc, #40]	; (800ca70 <_OnExit+0x2c>)
 800ca46:	490b      	ldr	r1, [pc, #44]	; (800ca74 <_OnExit+0x30>)
 800ca48:	2300      	movs	r3, #0
 800ca4a:	7013      	strb	r3, [r2, #0]
 800ca4c:	4a0a      	ldr	r2, [pc, #40]	; (800ca78 <_OnExit+0x34>)
 800ca4e:	600b      	str	r3, [r1, #0]
 800ca50:	6013      	str	r3, [r2, #0]
 800ca52:	4a0a      	ldr	r2, [pc, #40]	; (800ca7c <_OnExit+0x38>)
 800ca54:	604b      	str	r3, [r1, #4]
 800ca56:	6013      	str	r3, [r2, #0]
 800ca58:	4a09      	ldr	r2, [pc, #36]	; (800ca80 <_OnExit+0x3c>)
 800ca5a:	6013      	str	r3, [r2, #0]
 800ca5c:	6053      	str	r3, [r2, #4]
 800ca5e:	4a09      	ldr	r2, [pc, #36]	; (800ca84 <_OnExit+0x40>)
 800ca60:	6013      	str	r3, [r2, #0]
 800ca62:	4a09      	ldr	r2, [pc, #36]	; (800ca88 <_OnExit+0x44>)
 800ca64:	6013      	str	r3, [r2, #0]
 800ca66:	4a09      	ldr	r2, [pc, #36]	; (800ca8c <_OnExit+0x48>)
 800ca68:	6013      	str	r3, [r2, #0]
 800ca6a:	4a09      	ldr	r2, [pc, #36]	; (800ca90 <_OnExit+0x4c>)
 800ca6c:	6013      	str	r3, [r2, #0]
 800ca6e:	4770      	bx	lr
 800ca70:	20019460 	.word	0x20019460
 800ca74:	20019c18 	.word	0x20019c18
 800ca78:	20019438 	.word	0x20019438
 800ca7c:	20019c3c 	.word	0x20019c3c
 800ca80:	20019c44 	.word	0x20019c44
 800ca84:	20019c50 	.word	0x20019c50
 800ca88:	20019c04 	.word	0x20019c04
 800ca8c:	20019c30 	.word	0x20019c30
 800ca90:	20019c40 	.word	0x20019c40

0800ca94 <_Paint1>:
 800ca94:	b510      	push	{r4, lr}
 800ca96:	4604      	mov	r4, r0
 800ca98:	f006 fb18 	bl	80130cc <GUI_ALLOC_h2p>
 800ca9c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ca9e:	4a04      	ldr	r2, [pc, #16]	; (800cab0 <_Paint1+0x1c>)
 800caa0:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800caa4:	4b03      	ldr	r3, [pc, #12]	; (800cab4 <_Paint1+0x20>)
 800caa6:	4620      	mov	r0, r4
 800caa8:	bf08      	it	eq
 800caaa:	4613      	moveq	r3, r2
 800caac:	4798      	blx	r3
 800caae:	bd10      	pop	{r4, pc}
 800cab0:	0800d905 	.word	0x0800d905
 800cab4:	0800ded5 	.word	0x0800ded5

0800cab8 <_Findy1>:
 800cab8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800caba:	4605      	mov	r5, r0
 800cabc:	b085      	sub	sp, #20
 800cabe:	460c      	mov	r4, r1
 800cac0:	4616      	mov	r6, r2
 800cac2:	2d00      	cmp	r5, #0
 800cac4:	d04c      	beq.n	800cb60 <_Findy1+0xa8>
 800cac6:	4628      	mov	r0, r5
 800cac8:	f006 fb0a 	bl	80130e0 <GUI_ALLOC_LockH>
 800cacc:	6a87      	ldr	r7, [r0, #40]	; 0x28
 800cace:	9001      	str	r0, [sp, #4]
 800cad0:	07bb      	lsls	r3, r7, #30
 800cad2:	4601      	mov	r1, r0
 800cad4:	d53d      	bpl.n	800cb52 <_Findy1+0x9a>
 800cad6:	ad02      	add	r5, sp, #8
 800cad8:	b126      	cbz	r6, 800cae4 <_Findy1+0x2c>
 800cada:	4628      	mov	r0, r5
 800cadc:	4632      	mov	r2, r6
 800cade:	f004 f849 	bl	8010b74 <GUI__IntersectRects>
 800cae2:	e002      	b.n	800caea <_Findy1+0x32>
 800cae4:	c803      	ldmia	r0, {r0, r1}
 800cae6:	e885 0003 	stmia.w	r5, {r0, r1}
 800caea:	4620      	mov	r0, r4
 800caec:	4629      	mov	r1, r5
 800caee:	f005 f965 	bl	8011dbc <GUI_RectsIntersect>
 800caf2:	b370      	cbz	r0, 800cb52 <_Findy1+0x9a>
 800caf4:	f017 0f01 	tst.w	r7, #1
 800caf8:	9b01      	ldr	r3, [sp, #4]
 800cafa:	d11e      	bne.n	800cb3a <_Findy1+0x82>
 800cafc:	b13e      	cbz	r6, 800cb0e <_Findy1+0x56>
 800cafe:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800cb02:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cb06:	429a      	cmp	r2, r3
 800cb08:	bfa8      	it	ge
 800cb0a:	4613      	movge	r3, r2
 800cb0c:	e001      	b.n	800cb12 <_Findy1+0x5a>
 800cb0e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800cb12:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800cb16:	4293      	cmp	r3, r2
 800cb18:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800cb1c:	dd06      	ble.n	800cb2c <_Findy1+0x74>
 800cb1e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cb22:	b219      	sxth	r1, r3
 800cb24:	428a      	cmp	r2, r1
 800cb26:	db14      	blt.n	800cb52 <_Findy1+0x9a>
 800cb28:	3b01      	subs	r3, #1
 800cb2a:	e004      	b.n	800cb36 <_Findy1+0x7e>
 800cb2c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800cb30:	b219      	sxth	r1, r3
 800cb32:	428a      	cmp	r2, r1
 800cb34:	dd0d      	ble.n	800cb52 <_Findy1+0x9a>
 800cb36:	80e3      	strh	r3, [r4, #6]
 800cb38:	e00b      	b.n	800cb52 <_Findy1+0x9a>
 800cb3a:	69df      	ldr	r7, [r3, #28]
 800cb3c:	b14f      	cbz	r7, 800cb52 <_Findy1+0x9a>
 800cb3e:	4638      	mov	r0, r7
 800cb40:	4621      	mov	r1, r4
 800cb42:	462a      	mov	r2, r5
 800cb44:	f7ff ffb8 	bl	800cab8 <_Findy1>
 800cb48:	4638      	mov	r0, r7
 800cb4a:	f006 fabf 	bl	80130cc <GUI_ALLOC_h2p>
 800cb4e:	6a07      	ldr	r7, [r0, #32]
 800cb50:	e7f4      	b.n	800cb3c <_Findy1+0x84>
 800cb52:	a804      	add	r0, sp, #16
 800cb54:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800cb58:	6a1d      	ldr	r5, [r3, #32]
 800cb5a:	f006 facf 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cb5e:	e7b0      	b.n	800cac2 <_Findy1+0xa>
 800cb60:	b005      	add	sp, #20
 800cb62:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cb64 <_Findx0>:
 800cb64:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cb68:	4604      	mov	r4, r0
 800cb6a:	460f      	mov	r7, r1
 800cb6c:	4690      	mov	r8, r2
 800cb6e:	2500      	movs	r5, #0
 800cb70:	2c00      	cmp	r4, #0
 800cb72:	d037      	beq.n	800cbe4 <_Findx0+0x80>
 800cb74:	4620      	mov	r0, r4
 800cb76:	f006 fab3 	bl	80130e0 <GUI_ALLOC_LockH>
 800cb7a:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800cb7c:	9001      	str	r0, [sp, #4]
 800cb7e:	07b2      	lsls	r2, r6, #30
 800cb80:	4601      	mov	r1, r0
 800cb82:	d528      	bpl.n	800cbd6 <_Findx0+0x72>
 800cb84:	ac02      	add	r4, sp, #8
 800cb86:	f1b8 0f00 	cmp.w	r8, #0
 800cb8a:	d004      	beq.n	800cb96 <_Findx0+0x32>
 800cb8c:	4620      	mov	r0, r4
 800cb8e:	4642      	mov	r2, r8
 800cb90:	f003 fff0 	bl	8010b74 <GUI__IntersectRects>
 800cb94:	e002      	b.n	800cb9c <_Findx0+0x38>
 800cb96:	c803      	ldmia	r0, {r0, r1}
 800cb98:	e884 0003 	stmia.w	r4, {r0, r1}
 800cb9c:	4638      	mov	r0, r7
 800cb9e:	4621      	mov	r1, r4
 800cba0:	f005 f90c 	bl	8011dbc <GUI_RectsIntersect>
 800cba4:	b1b8      	cbz	r0, 800cbd6 <_Findx0+0x72>
 800cba6:	07f3      	lsls	r3, r6, #31
 800cba8:	d405      	bmi.n	800cbb6 <_Findx0+0x52>
 800cbaa:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800cbae:	3301      	adds	r3, #1
 800cbb0:	803b      	strh	r3, [r7, #0]
 800cbb2:	2501      	movs	r5, #1
 800cbb4:	e00f      	b.n	800cbd6 <_Findx0+0x72>
 800cbb6:	9b01      	ldr	r3, [sp, #4]
 800cbb8:	69de      	ldr	r6, [r3, #28]
 800cbba:	b166      	cbz	r6, 800cbd6 <_Findx0+0x72>
 800cbbc:	4630      	mov	r0, r6
 800cbbe:	4639      	mov	r1, r7
 800cbc0:	4622      	mov	r2, r4
 800cbc2:	f7ff ffcf 	bl	800cb64 <_Findx0>
 800cbc6:	2800      	cmp	r0, #0
 800cbc8:	4630      	mov	r0, r6
 800cbca:	bf18      	it	ne
 800cbcc:	2501      	movne	r5, #1
 800cbce:	f006 fa7d 	bl	80130cc <GUI_ALLOC_h2p>
 800cbd2:	6a06      	ldr	r6, [r0, #32]
 800cbd4:	e7f1      	b.n	800cbba <_Findx0+0x56>
 800cbd6:	a804      	add	r0, sp, #16
 800cbd8:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800cbdc:	6a1c      	ldr	r4, [r3, #32]
 800cbde:	f006 fa8d 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cbe2:	e7c5      	b.n	800cb70 <_Findx0+0xc>
 800cbe4:	4628      	mov	r0, r5
 800cbe6:	b004      	add	sp, #16
 800cbe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cbec <_Findx1>:
 800cbec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cbee:	4604      	mov	r4, r0
 800cbf0:	b085      	sub	sp, #20
 800cbf2:	460e      	mov	r6, r1
 800cbf4:	4617      	mov	r7, r2
 800cbf6:	2c00      	cmp	r4, #0
 800cbf8:	d031      	beq.n	800cc5e <_Findx1+0x72>
 800cbfa:	4620      	mov	r0, r4
 800cbfc:	f006 fa70 	bl	80130e0 <GUI_ALLOC_LockH>
 800cc00:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800cc02:	9001      	str	r0, [sp, #4]
 800cc04:	07aa      	lsls	r2, r5, #30
 800cc06:	4601      	mov	r1, r0
 800cc08:	d522      	bpl.n	800cc50 <_Findx1+0x64>
 800cc0a:	ac02      	add	r4, sp, #8
 800cc0c:	b127      	cbz	r7, 800cc18 <_Findx1+0x2c>
 800cc0e:	4620      	mov	r0, r4
 800cc10:	463a      	mov	r2, r7
 800cc12:	f003 ffaf 	bl	8010b74 <GUI__IntersectRects>
 800cc16:	e002      	b.n	800cc1e <_Findx1+0x32>
 800cc18:	c803      	ldmia	r0, {r0, r1}
 800cc1a:	e884 0003 	stmia.w	r4, {r0, r1}
 800cc1e:	4630      	mov	r0, r6
 800cc20:	4621      	mov	r1, r4
 800cc22:	f005 f8cb 	bl	8011dbc <GUI_RectsIntersect>
 800cc26:	b198      	cbz	r0, 800cc50 <_Findx1+0x64>
 800cc28:	07eb      	lsls	r3, r5, #31
 800cc2a:	d404      	bmi.n	800cc36 <_Findx1+0x4a>
 800cc2c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800cc30:	3b01      	subs	r3, #1
 800cc32:	80b3      	strh	r3, [r6, #4]
 800cc34:	e00c      	b.n	800cc50 <_Findx1+0x64>
 800cc36:	9b01      	ldr	r3, [sp, #4]
 800cc38:	69dd      	ldr	r5, [r3, #28]
 800cc3a:	b14d      	cbz	r5, 800cc50 <_Findx1+0x64>
 800cc3c:	4628      	mov	r0, r5
 800cc3e:	4631      	mov	r1, r6
 800cc40:	4622      	mov	r2, r4
 800cc42:	f7ff ffd3 	bl	800cbec <_Findx1>
 800cc46:	4628      	mov	r0, r5
 800cc48:	f006 fa40 	bl	80130cc <GUI_ALLOC_h2p>
 800cc4c:	6a05      	ldr	r5, [r0, #32]
 800cc4e:	e7f4      	b.n	800cc3a <_Findx1+0x4e>
 800cc50:	a804      	add	r0, sp, #16
 800cc52:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800cc56:	6a1c      	ldr	r4, [r3, #32]
 800cc58:	f006 fa50 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cc5c:	e7cb      	b.n	800cbf6 <_Findx1+0xa>
 800cc5e:	b005      	add	sp, #20
 800cc60:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800cc64 <_Paint1Trans>:
 800cc64:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cc68:	4d21      	ldr	r5, [pc, #132]	; (800ccf0 <_Paint1Trans+0x8c>)
 800cc6a:	682b      	ldr	r3, [r5, #0]
 800cc6c:	4606      	mov	r6, r0
 800cc6e:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800cc70:	f006 fa36 	bl	80130e0 <GUI_ALLOC_LockH>
 800cc74:	9000      	str	r0, [sp, #0]
 800cc76:	4630      	mov	r0, r6
 800cc78:	f006 fa32 	bl	80130e0 <GUI_ALLOC_LockH>
 800cc7c:	ac02      	add	r4, sp, #8
 800cc7e:	4601      	mov	r1, r0
 800cc80:	9001      	str	r0, [sp, #4]
 800cc82:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 800cc86:	3008      	adds	r0, #8
 800cc88:	f005 f898 	bl	8011dbc <GUI_RectsIntersect>
 800cc8c:	4607      	mov	r7, r0
 800cc8e:	b328      	cbz	r0, 800ccdc <_Paint1Trans+0x78>
 800cc90:	9901      	ldr	r1, [sp, #4]
 800cc92:	9a00      	ldr	r2, [sp, #0]
 800cc94:	682b      	ldr	r3, [r5, #0]
 800cc96:	4c17      	ldr	r4, [pc, #92]	; (800ccf4 <_Paint1Trans+0x90>)
 800cc98:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 800cc9a:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800cc9e:	f101 0008 	add.w	r0, r1, #8
 800cca2:	3208      	adds	r2, #8
 800cca4:	f003 ff66 	bl	8010b74 <GUI__IntersectRects>
 800cca8:	4668      	mov	r0, sp
 800ccaa:	f006 fa27 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ccae:	9a01      	ldr	r2, [sp, #4]
 800ccb0:	682b      	ldr	r3, [r5, #0]
 800ccb2:	f9b2 1000 	ldrsh.w	r1, [r2]
 800ccb6:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800ccba:	64d9      	str	r1, [r3, #76]	; 0x4c
 800ccbc:	651a      	str	r2, [r3, #80]	; 0x50
 800ccbe:	a801      	add	r0, sp, #4
 800ccc0:	6026      	str	r6, [r4, #0]
 800ccc2:	f006 fa1b 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ccc6:	4630      	mov	r0, r6
 800ccc8:	f7ff fee4 	bl	800ca94 <_Paint1>
 800cccc:	2300      	movs	r3, #0
 800ccce:	6023      	str	r3, [r4, #0]
 800ccd0:	682b      	ldr	r3, [r5, #0]
 800ccd2:	651f      	str	r7, [r3, #80]	; 0x50
 800ccd4:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 800ccd8:	2701      	movs	r7, #1
 800ccda:	e005      	b.n	800cce8 <_Paint1Trans+0x84>
 800ccdc:	4668      	mov	r0, sp
 800ccde:	f006 fa0d 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cce2:	a801      	add	r0, sp, #4
 800cce4:	f006 fa0a 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cce8:	4638      	mov	r0, r7
 800ccea:	b002      	add	sp, #8
 800ccec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ccf0:	2000016c 	.word	0x2000016c
 800ccf4:	20019c04 	.word	0x20019c04

0800ccf8 <_PaintTransChildren>:
 800ccf8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ccfc:	4606      	mov	r6, r0
 800ccfe:	f006 f9ef 	bl	80130e0 <GUI_ALLOC_LockH>
 800cd02:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cd04:	9001      	str	r0, [sp, #4]
 800cd06:	079b      	lsls	r3, r3, #30
 800cd08:	d405      	bmi.n	800cd16 <_PaintTransChildren+0x1e>
 800cd0a:	a801      	add	r0, sp, #4
 800cd0c:	f006 f9f6 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cd10:	b002      	add	sp, #8
 800cd12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cd16:	69c4      	ldr	r4, [r0, #28]
 800cd18:	2c00      	cmp	r4, #0
 800cd1a:	d0f6      	beq.n	800cd0a <_PaintTransChildren+0x12>
 800cd1c:	4620      	mov	r0, r4
 800cd1e:	f006 f9df 	bl	80130e0 <GUI_ALLOC_LockH>
 800cd22:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cd24:	ad02      	add	r5, sp, #8
 800cd26:	f003 0303 	and.w	r3, r3, #3
 800cd2a:	2b03      	cmp	r3, #3
 800cd2c:	f845 0d08 	str.w	r0, [r5, #-8]!
 800cd30:	d137      	bne.n	800cda2 <_PaintTransChildren+0xaa>
 800cd32:	9901      	ldr	r1, [sp, #4]
 800cd34:	3108      	adds	r1, #8
 800cd36:	f005 f841 	bl	8011dbc <GUI_RectsIntersect>
 800cd3a:	2800      	cmp	r0, #0
 800cd3c:	d031      	beq.n	800cda2 <_PaintTransChildren+0xaa>
 800cd3e:	a802      	add	r0, sp, #8
 800cd40:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800cd44:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 800cd48:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 800cd4c:	899f      	ldrh	r7, [r3, #12]
 800cd4e:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 800cd52:	f006 f9d3 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cd56:	4668      	mov	r0, sp
 800cd58:	f006 f9d0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cd5c:	4620      	mov	r0, r4
 800cd5e:	f7ff ff81 	bl	800cc64 <_Paint1Trans>
 800cd62:	b170      	cbz	r0, 800cd82 <_PaintTransChildren+0x8a>
 800cd64:	4620      	mov	r0, r4
 800cd66:	f006 f9b1 	bl	80130cc <GUI_ALLOC_h2p>
 800cd6a:	9000      	str	r0, [sp, #0]
 800cd6c:	4620      	mov	r0, r4
 800cd6e:	f7ff ffc3 	bl	800ccf8 <_PaintTransChildren>
 800cd72:	4620      	mov	r0, r4
 800cd74:	f006 f9aa 	bl	80130cc <GUI_ALLOC_h2p>
 800cd78:	9000      	str	r0, [sp, #0]
 800cd7a:	4630      	mov	r0, r6
 800cd7c:	f006 f9a6 	bl	80130cc <GUI_ALLOC_h2p>
 800cd80:	9001      	str	r0, [sp, #4]
 800cd82:	4630      	mov	r0, r6
 800cd84:	f006 f9ac 	bl	80130e0 <GUI_ALLOC_LockH>
 800cd88:	9001      	str	r0, [sp, #4]
 800cd8a:	4620      	mov	r0, r4
 800cd8c:	f006 f9a8 	bl	80130e0 <GUI_ALLOC_LockH>
 800cd90:	9b01      	ldr	r3, [sp, #4]
 800cd92:	9000      	str	r0, [sp, #0]
 800cd94:	f8a3 9008 	strh.w	r9, [r3, #8]
 800cd98:	f8a3 800a 	strh.w	r8, [r3, #10]
 800cd9c:	819f      	strh	r7, [r3, #12]
 800cd9e:	f8a3 a00e 	strh.w	sl, [r3, #14]
 800cda2:	9b00      	ldr	r3, [sp, #0]
 800cda4:	4668      	mov	r0, sp
 800cda6:	6a1c      	ldr	r4, [r3, #32]
 800cda8:	f006 f9a8 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cdac:	e7b4      	b.n	800cd18 <_PaintTransChildren+0x20>
	...

0800cdb0 <WM__PaintWinAndOverlays>:
 800cdb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cdb2:	4604      	mov	r4, r0
 800cdb4:	f006 f994 	bl	80130e0 <GUI_ALLOC_LockH>
 800cdb8:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800cdba:	9001      	str	r0, [sp, #4]
 800cdbc:	f640 0301 	movw	r3, #2049	; 0x801
 800cdc0:	4013      	ands	r3, r2
 800cdc2:	2b01      	cmp	r3, #1
 800cdc4:	d005      	beq.n	800cdd2 <WM__PaintWinAndOverlays+0x22>
 800cdc6:	a801      	add	r0, sp, #4
 800cdc8:	f006 f998 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cdcc:	4620      	mov	r0, r4
 800cdce:	f7ff fe61 	bl	800ca94 <_Paint1>
 800cdd2:	4b14      	ldr	r3, [pc, #80]	; (800ce24 <WM__PaintWinAndOverlays+0x74>)
 800cdd4:	681b      	ldr	r3, [r3, #0]
 800cdd6:	b313      	cbz	r3, 800ce1e <WM__PaintWinAndOverlays+0x6e>
 800cdd8:	4620      	mov	r0, r4
 800cdda:	f7ff ff8d 	bl	800ccf8 <_PaintTransChildren>
 800cdde:	4620      	mov	r0, r4
 800cde0:	f006 f974 	bl	80130cc <GUI_ALLOC_h2p>
 800cde4:	6985      	ldr	r5, [r0, #24]
 800cde6:	6a04      	ldr	r4, [r0, #32]
 800cde8:	b1cd      	cbz	r5, 800ce1e <WM__PaintWinAndOverlays+0x6e>
 800cdea:	b194      	cbz	r4, 800ce12 <WM__PaintWinAndOverlays+0x62>
 800cdec:	4620      	mov	r0, r4
 800cdee:	f006 f96d 	bl	80130cc <GUI_ALLOC_h2p>
 800cdf2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cdf4:	f003 0303 	and.w	r3, r3, #3
 800cdf8:	2b03      	cmp	r3, #3
 800cdfa:	d102      	bne.n	800ce02 <WM__PaintWinAndOverlays+0x52>
 800cdfc:	4620      	mov	r0, r4
 800cdfe:	f7ff ff31 	bl	800cc64 <_Paint1Trans>
 800ce02:	4620      	mov	r0, r4
 800ce04:	f7ff ff78 	bl	800ccf8 <_PaintTransChildren>
 800ce08:	4620      	mov	r0, r4
 800ce0a:	f006 f95f 	bl	80130cc <GUI_ALLOC_h2p>
 800ce0e:	6a04      	ldr	r4, [r0, #32]
 800ce10:	e7eb      	b.n	800cdea <WM__PaintWinAndOverlays+0x3a>
 800ce12:	4628      	mov	r0, r5
 800ce14:	f006 f95a 	bl	80130cc <GUI_ALLOC_h2p>
 800ce18:	6a04      	ldr	r4, [r0, #32]
 800ce1a:	6985      	ldr	r5, [r0, #24]
 800ce1c:	e7e4      	b.n	800cde8 <WM__PaintWinAndOverlays+0x38>
 800ce1e:	b003      	add	sp, #12
 800ce20:	bd30      	pop	{r4, r5, pc}
 800ce22:	bf00      	nop
 800ce24:	20019c50 	.word	0x20019c50

0800ce28 <_cbPaintMemDev>:
 800ce28:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ce2c:	4d17      	ldr	r5, [pc, #92]	; (800ce8c <_cbPaintMemDev+0x64>)
 800ce2e:	682b      	ldr	r3, [r5, #0]
 800ce30:	4606      	mov	r6, r0
 800ce32:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800ce34:	f006 f954 	bl	80130e0 <GUI_ALLOC_LockH>
 800ce38:	682a      	ldr	r2, [r5, #0]
 800ce3a:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 800ce3e:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 800ce42:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 800ce46:	89c7      	ldrh	r7, [r0, #14]
 800ce48:	ac02      	add	r4, sp, #8
 800ce4a:	3208      	adds	r2, #8
 800ce4c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ce50:	f100 0308 	add.w	r3, r0, #8
 800ce54:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ce58:	e883 0003 	stmia.w	r3, {r0, r1}
 800ce5c:	4620      	mov	r0, r4
 800ce5e:	f006 f94d 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ce62:	6830      	ldr	r0, [r6, #0]
 800ce64:	f7ff ffa4 	bl	800cdb0 <WM__PaintWinAndOverlays>
 800ce68:	682b      	ldr	r3, [r5, #0]
 800ce6a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800ce6c:	f006 f938 	bl	80130e0 <GUI_ALLOC_LockH>
 800ce70:	9001      	str	r0, [sp, #4]
 800ce72:	f8a0 a008 	strh.w	sl, [r0, #8]
 800ce76:	f8a0 900a 	strh.w	r9, [r0, #10]
 800ce7a:	f8a0 800c 	strh.w	r8, [r0, #12]
 800ce7e:	81c7      	strh	r7, [r0, #14]
 800ce80:	4620      	mov	r0, r4
 800ce82:	f006 f93b 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ce86:	b002      	add	sp, #8
 800ce88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ce8c:	2000016c 	.word	0x2000016c

0800ce90 <WM__ClipAtParentBorders>:
 800ce90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ce92:	4607      	mov	r7, r0
 800ce94:	460d      	mov	r5, r1
 800ce96:	4628      	mov	r0, r5
 800ce98:	f006 f922 	bl	80130e0 <GUI_ALLOC_LockH>
 800ce9c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ce9e:	ac02      	add	r4, sp, #8
 800cea0:	f013 0602 	ands.w	r6, r3, #2
 800cea4:	4601      	mov	r1, r0
 800cea6:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ceaa:	d104      	bne.n	800ceb6 <WM__ClipAtParentBorders+0x26>
 800ceac:	4620      	mov	r0, r4
 800ceae:	f006 f925 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ceb2:	4630      	mov	r0, r6
 800ceb4:	e016      	b.n	800cee4 <WM__ClipAtParentBorders+0x54>
 800ceb6:	4638      	mov	r0, r7
 800ceb8:	f003 fe8e 	bl	8010bd8 <GUI__IntersectRect>
 800cebc:	9b01      	ldr	r3, [sp, #4]
 800cebe:	699e      	ldr	r6, [r3, #24]
 800cec0:	4620      	mov	r0, r4
 800cec2:	b956      	cbnz	r6, 800ceda <WM__ClipAtParentBorders+0x4a>
 800cec4:	f006 f91a 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cec8:	4b07      	ldr	r3, [pc, #28]	; (800cee8 <WM__ClipAtParentBorders+0x58>)
 800ceca:	681a      	ldr	r2, [r3, #0]
 800cecc:	4295      	cmp	r5, r2
 800cece:	d008      	beq.n	800cee2 <WM__ClipAtParentBorders+0x52>
 800ced0:	6858      	ldr	r0, [r3, #4]
 800ced2:	1a2b      	subs	r3, r5, r0
 800ced4:	4258      	negs	r0, r3
 800ced6:	4158      	adcs	r0, r3
 800ced8:	e004      	b.n	800cee4 <WM__ClipAtParentBorders+0x54>
 800ceda:	f006 f90f 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cede:	4635      	mov	r5, r6
 800cee0:	e7d9      	b.n	800ce96 <WM__ClipAtParentBorders+0x6>
 800cee2:	2001      	movs	r0, #1
 800cee4:	b003      	add	sp, #12
 800cee6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cee8:	20019c08 	.word	0x20019c08

0800ceec <WM__InsertWindowIntoList>:
 800ceec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ceee:	4604      	mov	r4, r0
 800cef0:	b085      	sub	sp, #20
 800cef2:	460d      	mov	r5, r1
 800cef4:	2900      	cmp	r1, #0
 800cef6:	d049      	beq.n	800cf8c <WM__InsertWindowIntoList+0xa0>
 800cef8:	f006 f8f2 	bl	80130e0 <GUI_ALLOC_LockH>
 800cefc:	2300      	movs	r3, #0
 800cefe:	6203      	str	r3, [r0, #32]
 800cf00:	6185      	str	r5, [r0, #24]
 800cf02:	9001      	str	r0, [sp, #4]
 800cf04:	4628      	mov	r0, r5
 800cf06:	f006 f8eb 	bl	80130e0 <GUI_ALLOC_LockH>
 800cf0a:	9b01      	ldr	r3, [sp, #4]
 800cf0c:	69c5      	ldr	r5, [r0, #28]
 800cf0e:	9002      	str	r0, [sp, #8]
 800cf10:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 800cf12:	b92d      	cbnz	r5, 800cf20 <WM__InsertWindowIntoList+0x34>
 800cf14:	61c4      	str	r4, [r0, #28]
 800cf16:	a801      	add	r0, sp, #4
 800cf18:	f006 f8f0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cf1c:	a802      	add	r0, sp, #8
 800cf1e:	e033      	b.n	800cf88 <WM__InsertWindowIntoList+0x9c>
 800cf20:	4628      	mov	r0, r5
 800cf22:	f006 f8dd 	bl	80130e0 <GUI_ALLOC_LockH>
 800cf26:	ae04      	add	r6, sp, #16
 800cf28:	f007 0708 	and.w	r7, r7, #8
 800cf2c:	f846 0d04 	str.w	r0, [r6, #-4]!
 800cf30:	b977      	cbnz	r7, 800cf50 <WM__InsertWindowIntoList+0x64>
 800cf32:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cf34:	071a      	lsls	r2, r3, #28
 800cf36:	d50b      	bpl.n	800cf50 <WM__InsertWindowIntoList+0x64>
 800cf38:	9b01      	ldr	r3, [sp, #4]
 800cf3a:	621d      	str	r5, [r3, #32]
 800cf3c:	9b02      	ldr	r3, [sp, #8]
 800cf3e:	a801      	add	r0, sp, #4
 800cf40:	61dc      	str	r4, [r3, #28]
 800cf42:	f006 f8db 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cf46:	a802      	add	r0, sp, #8
 800cf48:	f006 f8d8 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cf4c:	4630      	mov	r0, r6
 800cf4e:	e01b      	b.n	800cf88 <WM__InsertWindowIntoList+0x9c>
 800cf50:	a802      	add	r0, sp, #8
 800cf52:	f006 f8d3 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cf56:	4630      	mov	r0, r6
 800cf58:	f006 f8d0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cf5c:	4628      	mov	r0, r5
 800cf5e:	f006 f8b5 	bl	80130cc <GUI_ALLOC_h2p>
 800cf62:	9003      	str	r0, [sp, #12]
 800cf64:	9b03      	ldr	r3, [sp, #12]
 800cf66:	6a1d      	ldr	r5, [r3, #32]
 800cf68:	b90d      	cbnz	r5, 800cf6e <WM__InsertWindowIntoList+0x82>
 800cf6a:	621c      	str	r4, [r3, #32]
 800cf6c:	e00b      	b.n	800cf86 <WM__InsertWindowIntoList+0x9a>
 800cf6e:	4628      	mov	r0, r5
 800cf70:	f006 f8ac 	bl	80130cc <GUI_ALLOC_h2p>
 800cf74:	2f00      	cmp	r7, #0
 800cf76:	d1f4      	bne.n	800cf62 <WM__InsertWindowIntoList+0x76>
 800cf78:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cf7a:	071b      	lsls	r3, r3, #28
 800cf7c:	d5f1      	bpl.n	800cf62 <WM__InsertWindowIntoList+0x76>
 800cf7e:	9b03      	ldr	r3, [sp, #12]
 800cf80:	621c      	str	r4, [r3, #32]
 800cf82:	9b01      	ldr	r3, [sp, #4]
 800cf84:	621d      	str	r5, [r3, #32]
 800cf86:	a801      	add	r0, sp, #4
 800cf88:	f006 f8b8 	bl	80130fc <GUI_ALLOC_UnlockH>
 800cf8c:	b005      	add	sp, #20
 800cf8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cf90 <WM__RemoveWindowFromList>:
 800cf90:	b570      	push	{r4, r5, r6, lr}
 800cf92:	4604      	mov	r4, r0
 800cf94:	f006 f89a 	bl	80130cc <GUI_ALLOC_h2p>
 800cf98:	4605      	mov	r5, r0
 800cf9a:	6980      	ldr	r0, [r0, #24]
 800cf9c:	b1a8      	cbz	r0, 800cfca <WM__RemoveWindowFromList+0x3a>
 800cf9e:	f006 f895 	bl	80130cc <GUI_ALLOC_h2p>
 800cfa2:	69c3      	ldr	r3, [r0, #28]
 800cfa4:	42a3      	cmp	r3, r4
 800cfa6:	4606      	mov	r6, r0
 800cfa8:	d105      	bne.n	800cfb6 <WM__RemoveWindowFromList+0x26>
 800cfaa:	4618      	mov	r0, r3
 800cfac:	f006 f88e 	bl	80130cc <GUI_ALLOC_h2p>
 800cfb0:	6a03      	ldr	r3, [r0, #32]
 800cfb2:	61f3      	str	r3, [r6, #28]
 800cfb4:	bd70      	pop	{r4, r5, r6, pc}
 800cfb6:	b143      	cbz	r3, 800cfca <WM__RemoveWindowFromList+0x3a>
 800cfb8:	4618      	mov	r0, r3
 800cfba:	f006 f887 	bl	80130cc <GUI_ALLOC_h2p>
 800cfbe:	6a03      	ldr	r3, [r0, #32]
 800cfc0:	42a3      	cmp	r3, r4
 800cfc2:	d1f8      	bne.n	800cfb6 <WM__RemoveWindowFromList+0x26>
 800cfc4:	6a2b      	ldr	r3, [r5, #32]
 800cfc6:	6203      	str	r3, [r0, #32]
 800cfc8:	bd70      	pop	{r4, r5, r6, pc}
 800cfca:	bd70      	pop	{r4, r5, r6, pc}

0800cfcc <WM__Client2Screen>:
 800cfcc:	4603      	mov	r3, r0
 800cfce:	4608      	mov	r0, r1
 800cfd0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800cfd4:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cfd8:	f004 bff4 	b.w	8011fc4 <GUI_MoveRect>

0800cfdc <_SetClipRectUserIntersect>:
 800cfdc:	4b11      	ldr	r3, [pc, #68]	; (800d024 <_SetClipRectUserIntersect+0x48>)
 800cfde:	b530      	push	{r4, r5, lr}
 800cfe0:	681c      	ldr	r4, [r3, #0]
 800cfe2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cfe4:	b085      	sub	sp, #20
 800cfe6:	4605      	mov	r5, r0
 800cfe8:	b1ba      	cbz	r2, 800d01a <_SetClipRectUserIntersect+0x3e>
 800cfea:	6810      	ldr	r0, [r2, #0]
 800cfec:	6851      	ldr	r1, [r2, #4]
 800cfee:	ab02      	add	r3, sp, #8
 800cff0:	c303      	stmia	r3!, {r0, r1}
 800cff2:	4b0d      	ldr	r3, [pc, #52]	; (800d028 <_SetClipRectUserIntersect+0x4c>)
 800cff4:	6818      	ldr	r0, [r3, #0]
 800cff6:	b900      	cbnz	r0, 800cffa <_SetClipRectUserIntersect+0x1e>
 800cff8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800cffa:	f006 f871 	bl	80130e0 <GUI_ALLOC_LockH>
 800cffe:	ac04      	add	r4, sp, #16
 800d000:	a902      	add	r1, sp, #8
 800d002:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800d006:	f7ff ffe1 	bl	800cfcc <WM__Client2Screen>
 800d00a:	4620      	mov	r0, r4
 800d00c:	f006 f876 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d010:	a802      	add	r0, sp, #8
 800d012:	4629      	mov	r1, r5
 800d014:	f003 fde0 	bl	8010bd8 <GUI__IntersectRect>
 800d018:	a802      	add	r0, sp, #8
 800d01a:	f002 ffa3 	bl	800ff64 <LCD_SetClipRectEx>
 800d01e:	b005      	add	sp, #20
 800d020:	bd30      	pop	{r4, r5, pc}
 800d022:	bf00      	nop
 800d024:	2000016c 	.word	0x2000016c
 800d028:	20019c04 	.word	0x20019c04

0800d02c <WM__ActivateClipRect>:
 800d02c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d02e:	4b0e      	ldr	r3, [pc, #56]	; (800d068 <WM__ActivateClipRect+0x3c>)
 800d030:	681b      	ldr	r3, [r3, #0]
 800d032:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800d036:	b10a      	cbz	r2, 800d03c <WM__ActivateClipRect+0x10>
 800d038:	480c      	ldr	r0, [pc, #48]	; (800d06c <WM__ActivateClipRect+0x40>)
 800d03a:	e011      	b.n	800d060 <WM__ActivateClipRect+0x34>
 800d03c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800d03e:	f006 f84f 	bl	80130e0 <GUI_ALLOC_LockH>
 800d042:	9001      	str	r0, [sp, #4]
 800d044:	c803      	ldmia	r0, {r0, r1}
 800d046:	ac02      	add	r4, sp, #8
 800d048:	e884 0003 	stmia.w	r4, {r0, r1}
 800d04c:	a801      	add	r0, sp, #4
 800d04e:	f006 f855 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d052:	4b07      	ldr	r3, [pc, #28]	; (800d070 <WM__ActivateClipRect+0x44>)
 800d054:	6819      	ldr	r1, [r3, #0]
 800d056:	b111      	cbz	r1, 800d05e <WM__ActivateClipRect+0x32>
 800d058:	4620      	mov	r0, r4
 800d05a:	f7ff ff19 	bl	800ce90 <WM__ClipAtParentBorders>
 800d05e:	4620      	mov	r0, r4
 800d060:	f7ff ffbc 	bl	800cfdc <_SetClipRectUserIntersect>
 800d064:	b004      	add	sp, #16
 800d066:	bd10      	pop	{r4, pc}
 800d068:	2000016c 	.word	0x2000016c
 800d06c:	20019444 	.word	0x20019444
 800d070:	20019c04 	.word	0x20019c04

0800d074 <WM__IsWindow>:
 800d074:	4b06      	ldr	r3, [pc, #24]	; (800d090 <WM__IsWindow+0x1c>)
 800d076:	b510      	push	{r4, lr}
 800d078:	4604      	mov	r4, r0
 800d07a:	6818      	ldr	r0, [r3, #0]
 800d07c:	b128      	cbz	r0, 800d08a <WM__IsWindow+0x16>
 800d07e:	42a0      	cmp	r0, r4
 800d080:	d004      	beq.n	800d08c <WM__IsWindow+0x18>
 800d082:	f006 f823 	bl	80130cc <GUI_ALLOC_h2p>
 800d086:	6940      	ldr	r0, [r0, #20]
 800d088:	e7f8      	b.n	800d07c <WM__IsWindow+0x8>
 800d08a:	bd10      	pop	{r4, pc}
 800d08c:	2001      	movs	r0, #1
 800d08e:	bd10      	pop	{r4, pc}
 800d090:	20019c24 	.word	0x20019c24

0800d094 <WM__InvalidateDrawAndDescs>:
 800d094:	b513      	push	{r0, r1, r4, lr}
 800d096:	4604      	mov	r4, r0
 800d098:	b300      	cbz	r0, 800d0dc <WM__InvalidateDrawAndDescs+0x48>
 800d09a:	f006 f821 	bl	80130e0 <GUI_ALLOC_LockH>
 800d09e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800d0a0:	9001      	str	r0, [sp, #4]
 800d0a2:	0793      	lsls	r3, r2, #30
 800d0a4:	d517      	bpl.n	800d0d6 <WM__InvalidateDrawAndDescs+0x42>
 800d0a6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800d0a8:	b140      	cbz	r0, 800d0bc <WM__InvalidateDrawAndDescs+0x28>
 800d0aa:	4b0d      	ldr	r3, [pc, #52]	; (800d0e0 <WM__InvalidateDrawAndDescs+0x4c>)
 800d0ac:	681b      	ldr	r3, [r3, #0]
 800d0ae:	42a3      	cmp	r3, r4
 800d0b0:	d004      	beq.n	800d0bc <WM__InvalidateDrawAndDescs+0x28>
 800d0b2:	f001 fdd7 	bl	800ec64 <GUI_MEMDEV_Delete>
 800d0b6:	9b01      	ldr	r3, [sp, #4]
 800d0b8:	2200      	movs	r2, #0
 800d0ba:	625a      	str	r2, [r3, #36]	; 0x24
 800d0bc:	4620      	mov	r0, r4
 800d0be:	f7ff fb9b 	bl	800c7f8 <WM_GetFirstChild>
 800d0c2:	4604      	mov	r4, r0
 800d0c4:	b13c      	cbz	r4, 800d0d6 <WM__InvalidateDrawAndDescs+0x42>
 800d0c6:	4620      	mov	r0, r4
 800d0c8:	f7ff ffe4 	bl	800d094 <WM__InvalidateDrawAndDescs>
 800d0cc:	4620      	mov	r0, r4
 800d0ce:	f005 fffd 	bl	80130cc <GUI_ALLOC_h2p>
 800d0d2:	6a04      	ldr	r4, [r0, #32]
 800d0d4:	e7f6      	b.n	800d0c4 <WM__InvalidateDrawAndDescs+0x30>
 800d0d6:	a801      	add	r0, sp, #4
 800d0d8:	f006 f810 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d0dc:	b002      	add	sp, #8
 800d0de:	bd10      	pop	{r4, pc}
 800d0e0:	20019c4c 	.word	0x20019c4c

0800d0e4 <WM__RectIsNZ>:
 800d0e4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d0e8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d0ec:	429a      	cmp	r2, r3
 800d0ee:	dc08      	bgt.n	800d102 <WM__RectIsNZ+0x1e>
 800d0f0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800d0f4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800d0f8:	429a      	cmp	r2, r3
 800d0fa:	bfcc      	ite	gt
 800d0fc:	2000      	movgt	r0, #0
 800d0fe:	2001      	movle	r0, #1
 800d100:	4770      	bx	lr
 800d102:	2000      	movs	r0, #0
 800d104:	4770      	bx	lr
	...

0800d108 <_Invalidate1Abs>:
 800d108:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d10a:	b085      	sub	sp, #20
 800d10c:	4606      	mov	r6, r0
 800d10e:	460d      	mov	r5, r1
 800d110:	4617      	mov	r7, r2
 800d112:	f005 ffdb 	bl	80130cc <GUI_ALLOC_h2p>
 800d116:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800d118:	9001      	str	r0, [sp, #4]
 800d11a:	07a3      	lsls	r3, r4, #30
 800d11c:	d534      	bpl.n	800d188 <_Invalidate1Abs+0x80>
 800d11e:	4628      	mov	r0, r5
 800d120:	f7ff ffe0 	bl	800d0e4 <WM__RectIsNZ>
 800d124:	2800      	cmp	r0, #0
 800d126:	d02f      	beq.n	800d188 <_Invalidate1Abs+0x80>
 800d128:	f640 0301 	movw	r3, #2049	; 0x801
 800d12c:	4023      	ands	r3, r4
 800d12e:	2b01      	cmp	r3, #1
 800d130:	d02a      	beq.n	800d188 <_Invalidate1Abs+0x80>
 800d132:	4630      	mov	r0, r6
 800d134:	f005 ffd4 	bl	80130e0 <GUI_ALLOC_LockH>
 800d138:	ac02      	add	r4, sp, #8
 800d13a:	4602      	mov	r2, r0
 800d13c:	9001      	str	r0, [sp, #4]
 800d13e:	4629      	mov	r1, r5
 800d140:	4620      	mov	r0, r4
 800d142:	f003 fd17 	bl	8010b74 <GUI__IntersectRects>
 800d146:	4620      	mov	r0, r4
 800d148:	f7ff ffcc 	bl	800d0e4 <WM__RectIsNZ>
 800d14c:	b1c8      	cbz	r0, 800d182 <_Invalidate1Abs+0x7a>
 800d14e:	9b01      	ldr	r3, [sp, #4]
 800d150:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d152:	f244 0120 	movw	r1, #16416	; 0x4020
 800d156:	4031      	ands	r1, r6
 800d158:	f103 0508 	add.w	r5, r3, #8
 800d15c:	b129      	cbz	r1, 800d16a <_Invalidate1Abs+0x62>
 800d15e:	4628      	mov	r0, r5
 800d160:	4629      	mov	r1, r5
 800d162:	4622      	mov	r2, r4
 800d164:	f004 ff3e 	bl	8011fe4 <GUI_MergeRect>
 800d168:	e00b      	b.n	800d182 <_Invalidate1Abs+0x7a>
 800d16a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800d16e:	433e      	orrs	r6, r7
 800d170:	e885 0003 	stmia.w	r5, {r0, r1}
 800d174:	629e      	str	r6, [r3, #40]	; 0x28
 800d176:	4b05      	ldr	r3, [pc, #20]	; (800d18c <_Invalidate1Abs+0x84>)
 800d178:	881a      	ldrh	r2, [r3, #0]
 800d17a:	3201      	adds	r2, #1
 800d17c:	801a      	strh	r2, [r3, #0]
 800d17e:	f003 ffab 	bl	80110d8 <GUI_SignalEvent>
 800d182:	a801      	add	r0, sp, #4
 800d184:	f005 ffba 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d188:	b005      	add	sp, #20
 800d18a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d18c:	20019c20 	.word	0x20019c20

0800d190 <WM__Invalidate1Abs>:
 800d190:	2220      	movs	r2, #32
 800d192:	f7ff bfb9 	b.w	800d108 <_Invalidate1Abs>

0800d196 <WM_InvalidateWindowAndDescsEx>:
 800d196:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d198:	460f      	mov	r7, r1
 800d19a:	b085      	sub	sp, #20
 800d19c:	4615      	mov	r5, r2
 800d19e:	4606      	mov	r6, r0
 800d1a0:	b348      	cbz	r0, 800d1f6 <WM_InvalidateWindowAndDescsEx+0x60>
 800d1a2:	f005 ff9d 	bl	80130e0 <GUI_ALLOC_LockH>
 800d1a6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800d1a8:	ac04      	add	r4, sp, #16
 800d1aa:	079b      	lsls	r3, r3, #30
 800d1ac:	4602      	mov	r2, r0
 800d1ae:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800d1b2:	d403      	bmi.n	800d1bc <WM_InvalidateWindowAndDescsEx+0x26>
 800d1b4:	4620      	mov	r0, r4
 800d1b6:	f005 ffa1 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d1ba:	e01c      	b.n	800d1f6 <WM_InvalidateWindowAndDescsEx+0x60>
 800d1bc:	a802      	add	r0, sp, #8
 800d1be:	4639      	mov	r1, r7
 800d1c0:	f003 fcd8 	bl	8010b74 <GUI__IntersectRects>
 800d1c4:	2800      	cmp	r0, #0
 800d1c6:	d0f5      	beq.n	800d1b4 <WM_InvalidateWindowAndDescsEx+0x1e>
 800d1c8:	4620      	mov	r0, r4
 800d1ca:	f005 ff97 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d1ce:	4630      	mov	r0, r6
 800d1d0:	a902      	add	r1, sp, #8
 800d1d2:	462a      	mov	r2, r5
 800d1d4:	f7ff ff98 	bl	800d108 <_Invalidate1Abs>
 800d1d8:	4630      	mov	r0, r6
 800d1da:	f7ff fb0d 	bl	800c7f8 <WM_GetFirstChild>
 800d1de:	4604      	mov	r4, r0
 800d1e0:	b14c      	cbz	r4, 800d1f6 <WM_InvalidateWindowAndDescsEx+0x60>
 800d1e2:	4620      	mov	r0, r4
 800d1e4:	a902      	add	r1, sp, #8
 800d1e6:	462a      	mov	r2, r5
 800d1e8:	f7ff ffd5 	bl	800d196 <WM_InvalidateWindowAndDescsEx>
 800d1ec:	4620      	mov	r0, r4
 800d1ee:	f005 ff6d 	bl	80130cc <GUI_ALLOC_h2p>
 800d1f2:	6a04      	ldr	r4, [r0, #32]
 800d1f4:	e7f4      	b.n	800d1e0 <WM_InvalidateWindowAndDescsEx+0x4a>
 800d1f6:	b005      	add	sp, #20
 800d1f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d1fa <WM__InvalidateRect>:
 800d1fa:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d1fe:	4680      	mov	r8, r0
 800d200:	4617      	mov	r7, r2
 800d202:	461d      	mov	r5, r3
 800d204:	460c      	mov	r4, r1
 800d206:	2900      	cmp	r1, #0
 800d208:	d030      	beq.n	800d26c <WM__InvalidateRect+0x72>
 800d20a:	4608      	mov	r0, r1
 800d20c:	f005 ff68 	bl	80130e0 <GUI_ALLOC_LockH>
 800d210:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800d212:	9001      	str	r0, [sp, #4]
 800d214:	07b3      	lsls	r3, r6, #30
 800d216:	4602      	mov	r2, r0
 800d218:	d525      	bpl.n	800d266 <WM__InvalidateRect+0x6c>
 800d21a:	a802      	add	r0, sp, #8
 800d21c:	4641      	mov	r1, r8
 800d21e:	f003 fca9 	bl	8010b74 <GUI__IntersectRects>
 800d222:	b300      	cbz	r0, 800d266 <WM__InvalidateRect+0x6c>
 800d224:	f640 0301 	movw	r3, #2049	; 0x801
 800d228:	4033      	ands	r3, r6
 800d22a:	2b01      	cmp	r3, #1
 800d22c:	d107      	bne.n	800d23e <WM__InvalidateRect+0x44>
 800d22e:	9b01      	ldr	r3, [sp, #4]
 800d230:	a802      	add	r0, sp, #8
 800d232:	6999      	ldr	r1, [r3, #24]
 800d234:	6a1a      	ldr	r2, [r3, #32]
 800d236:	462b      	mov	r3, r5
 800d238:	f7ff ffdf 	bl	800d1fa <WM__InvalidateRect>
 800d23c:	e004      	b.n	800d248 <WM__InvalidateRect+0x4e>
 800d23e:	4620      	mov	r0, r4
 800d240:	a902      	add	r1, sp, #8
 800d242:	462a      	mov	r2, r5
 800d244:	f7ff ff60 	bl	800d108 <_Invalidate1Abs>
 800d248:	9b01      	ldr	r3, [sp, #4]
 800d24a:	69dc      	ldr	r4, [r3, #28]
 800d24c:	b15c      	cbz	r4, 800d266 <WM__InvalidateRect+0x6c>
 800d24e:	42bc      	cmp	r4, r7
 800d250:	d009      	beq.n	800d266 <WM__InvalidateRect+0x6c>
 800d252:	4620      	mov	r0, r4
 800d254:	a902      	add	r1, sp, #8
 800d256:	462a      	mov	r2, r5
 800d258:	f7ff ff9d 	bl	800d196 <WM_InvalidateWindowAndDescsEx>
 800d25c:	4620      	mov	r0, r4
 800d25e:	f005 ff35 	bl	80130cc <GUI_ALLOC_h2p>
 800d262:	6a04      	ldr	r4, [r0, #32]
 800d264:	e7f2      	b.n	800d24c <WM__InvalidateRect+0x52>
 800d266:	a801      	add	r0, sp, #4
 800d268:	f005 ff48 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d26c:	b004      	add	sp, #16
 800d26e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d272 <WM__InvalidateParent>:
 800d272:	b570      	push	{r4, r5, r6, lr}
 800d274:	4605      	mov	r5, r0
 800d276:	4608      	mov	r0, r1
 800d278:	460c      	mov	r4, r1
 800d27a:	4616      	mov	r6, r2
 800d27c:	f005 ff26 	bl	80130cc <GUI_ALLOC_h2p>
 800d280:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800d282:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800d286:	4628      	mov	r0, r5
 800d288:	4621      	mov	r1, r4
 800d28a:	4632      	mov	r2, r6
 800d28c:	bf0c      	ite	eq
 800d28e:	2320      	moveq	r3, #32
 800d290:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 800d294:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d298:	f7ff bfaf 	b.w	800d1fa <WM__InvalidateRect>

0800d29c <WM__InvalidateRectEx>:
 800d29c:	2320      	movs	r3, #32
 800d29e:	f7ff bfac 	b.w	800d1fa <WM__InvalidateRect>

0800d2a2 <WM__DetachWindow>:
 800d2a2:	b513      	push	{r0, r1, r4, lr}
 800d2a4:	4604      	mov	r4, r0
 800d2a6:	f005 ff1b 	bl	80130e0 <GUI_ALLOC_LockH>
 800d2aa:	6981      	ldr	r1, [r0, #24]
 800d2ac:	9001      	str	r0, [sp, #4]
 800d2ae:	b141      	cbz	r1, 800d2c2 <WM__DetachWindow+0x20>
 800d2b0:	6a02      	ldr	r2, [r0, #32]
 800d2b2:	f7ff fff3 	bl	800d29c <WM__InvalidateRectEx>
 800d2b6:	4620      	mov	r0, r4
 800d2b8:	f7ff fe6a 	bl	800cf90 <WM__RemoveWindowFromList>
 800d2bc:	9b01      	ldr	r3, [sp, #4]
 800d2be:	2200      	movs	r2, #0
 800d2c0:	619a      	str	r2, [r3, #24]
 800d2c2:	a801      	add	r0, sp, #4
 800d2c4:	f005 ff1a 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d2c8:	b002      	add	sp, #8
 800d2ca:	bd10      	pop	{r4, pc}

0800d2cc <WM_SendMessage>:
 800d2cc:	b108      	cbz	r0, 800d2d2 <WM_SendMessage+0x6>
 800d2ce:	f008 b955 	b.w	801557c <WM__SendMessage>
 800d2d2:	4770      	bx	lr

0800d2d4 <WM__SendMsgNoData>:
 800d2d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d2d6:	ab04      	add	r3, sp, #16
 800d2d8:	9001      	str	r0, [sp, #4]
 800d2da:	f843 1d10 	str.w	r1, [r3, #-16]!
 800d2de:	4669      	mov	r1, sp
 800d2e0:	f008 f94c 	bl	801557c <WM__SendMessage>
 800d2e4:	b005      	add	sp, #20
 800d2e6:	f85d fb04 	ldr.w	pc, [sp], #4

0800d2ea <WM__GetClientRectWin>:
 800d2ea:	2300      	movs	r3, #0
 800d2ec:	800b      	strh	r3, [r1, #0]
 800d2ee:	8882      	ldrh	r2, [r0, #4]
 800d2f0:	804b      	strh	r3, [r1, #2]
 800d2f2:	8803      	ldrh	r3, [r0, #0]
 800d2f4:	1ad3      	subs	r3, r2, r3
 800d2f6:	808b      	strh	r3, [r1, #4]
 800d2f8:	88c2      	ldrh	r2, [r0, #6]
 800d2fa:	8843      	ldrh	r3, [r0, #2]
 800d2fc:	1ad3      	subs	r3, r2, r3
 800d2fe:	80cb      	strh	r3, [r1, #6]
 800d300:	4770      	bx	lr

0800d302 <WM_InvalidateRect>:
 800d302:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d304:	460f      	mov	r7, r1
 800d306:	b087      	sub	sp, #28
 800d308:	4605      	mov	r5, r0
 800d30a:	2800      	cmp	r0, #0
 800d30c:	d033      	beq.n	800d376 <WM_InvalidateRect+0x74>
 800d30e:	f005 fee7 	bl	80130e0 <GUI_ALLOC_LockH>
 800d312:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800d314:	9001      	str	r0, [sp, #4]
 800d316:	07b2      	lsls	r2, r6, #30
 800d318:	d52a      	bpl.n	800d370 <WM_InvalidateRect+0x6e>
 800d31a:	c803      	ldmia	r0, {r0, r1}
 800d31c:	ac04      	add	r4, sp, #16
 800d31e:	03f3      	lsls	r3, r6, #15
 800d320:	e884 0003 	stmia.w	r4, {r0, r1}
 800d324:	d502      	bpl.n	800d32c <WM_InvalidateRect+0x2a>
 800d326:	4628      	mov	r0, r5
 800d328:	f7ff feb4 	bl	800d094 <WM__InvalidateDrawAndDescs>
 800d32c:	b15f      	cbz	r7, 800d346 <WM_InvalidateRect+0x44>
 800d32e:	6838      	ldr	r0, [r7, #0]
 800d330:	6879      	ldr	r1, [r7, #4]
 800d332:	ab02      	add	r3, sp, #8
 800d334:	c303      	stmia	r3!, {r0, r1}
 800d336:	9801      	ldr	r0, [sp, #4]
 800d338:	a902      	add	r1, sp, #8
 800d33a:	f7ff fe47 	bl	800cfcc <WM__Client2Screen>
 800d33e:	4620      	mov	r0, r4
 800d340:	a902      	add	r1, sp, #8
 800d342:	f003 fc49 	bl	8010bd8 <GUI__IntersectRect>
 800d346:	4620      	mov	r0, r4
 800d348:	4629      	mov	r1, r5
 800d34a:	f7ff fda1 	bl	800ce90 <WM__ClipAtParentBorders>
 800d34e:	b178      	cbz	r0, 800d370 <WM_InvalidateRect+0x6e>
 800d350:	f640 0301 	movw	r3, #2049	; 0x801
 800d354:	4033      	ands	r3, r6
 800d356:	2b01      	cmp	r3, #1
 800d358:	d106      	bne.n	800d368 <WM_InvalidateRect+0x66>
 800d35a:	9b01      	ldr	r3, [sp, #4]
 800d35c:	4620      	mov	r0, r4
 800d35e:	6999      	ldr	r1, [r3, #24]
 800d360:	6a1a      	ldr	r2, [r3, #32]
 800d362:	f7ff ff9b 	bl	800d29c <WM__InvalidateRectEx>
 800d366:	e003      	b.n	800d370 <WM_InvalidateRect+0x6e>
 800d368:	4628      	mov	r0, r5
 800d36a:	4621      	mov	r1, r4
 800d36c:	f7ff ff10 	bl	800d190 <WM__Invalidate1Abs>
 800d370:	a801      	add	r0, sp, #4
 800d372:	f005 fec3 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d376:	b007      	add	sp, #28
 800d378:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d37a <WM_InvalidateWindow>:
 800d37a:	2100      	movs	r1, #0
 800d37c:	f7ff bfc1 	b.w	800d302 <WM_InvalidateRect>

0800d380 <WM__GetTopLevelLayer>:
 800d380:	b510      	push	{r4, lr}
 800d382:	4604      	mov	r4, r0
 800d384:	f005 fea2 	bl	80130cc <GUI_ALLOC_h2p>
 800d388:	6980      	ldr	r0, [r0, #24]
 800d38a:	2800      	cmp	r0, #0
 800d38c:	d1f9      	bne.n	800d382 <WM__GetTopLevelLayer+0x2>
 800d38e:	4b05      	ldr	r3, [pc, #20]	; (800d3a4 <WM__GetTopLevelLayer+0x24>)
 800d390:	681a      	ldr	r2, [r3, #0]
 800d392:	4294      	cmp	r4, r2
 800d394:	d005      	beq.n	800d3a2 <WM__GetTopLevelLayer+0x22>
 800d396:	6858      	ldr	r0, [r3, #4]
 800d398:	4284      	cmp	r4, r0
 800d39a:	bf14      	ite	ne
 800d39c:	f04f 30ff 	movne.w	r0, #4294967295
 800d3a0:	2001      	moveq	r0, #1
 800d3a2:	bd10      	pop	{r4, pc}
 800d3a4:	20019c08 	.word	0x20019c08

0800d3a8 <WM__SelectTopLevelLayer>:
 800d3a8:	b508      	push	{r3, lr}
 800d3aa:	f7ff ffe9 	bl	800d380 <WM__GetTopLevelLayer>
 800d3ae:	2800      	cmp	r0, #0
 800d3b0:	db03      	blt.n	800d3ba <WM__SelectTopLevelLayer+0x12>
 800d3b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d3b6:	f004 bccb 	b.w	8011d50 <GUI_SelectLayer>
 800d3ba:	bd08      	pop	{r3, pc}

0800d3bc <WM_SelectWindow>:
 800d3bc:	4a0d      	ldr	r2, [pc, #52]	; (800d3f4 <WM_SelectWindow+0x38>)
 800d3be:	6813      	ldr	r3, [r2, #0]
 800d3c0:	b570      	push	{r4, r5, r6, lr}
 800d3c2:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 800d3c4:	4604      	mov	r4, r0
 800d3c6:	4616      	mov	r6, r2
 800d3c8:	b908      	cbnz	r0, 800d3ce <WM_SelectWindow+0x12>
 800d3ca:	4a0b      	ldr	r2, [pc, #44]	; (800d3f8 <WM_SelectWindow+0x3c>)
 800d3cc:	6814      	ldr	r4, [r2, #0]
 800d3ce:	649c      	str	r4, [r3, #72]	; 0x48
 800d3d0:	4620      	mov	r0, r4
 800d3d2:	f7ff ffe9 	bl	800d3a8 <WM__SelectTopLevelLayer>
 800d3d6:	f003 f9ed 	bl	80107b4 <LCD_SetClipRectMax>
 800d3da:	4620      	mov	r0, r4
 800d3dc:	f005 fe76 	bl	80130cc <GUI_ALLOC_h2p>
 800d3e0:	6833      	ldr	r3, [r6, #0]
 800d3e2:	f9b0 1000 	ldrsh.w	r1, [r0]
 800d3e6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800d3ea:	64d9      	str	r1, [r3, #76]	; 0x4c
 800d3ec:	651a      	str	r2, [r3, #80]	; 0x50
 800d3ee:	4628      	mov	r0, r5
 800d3f0:	bd70      	pop	{r4, r5, r6, pc}
 800d3f2:	bf00      	nop
 800d3f4:	2000016c 	.word	0x2000016c
 800d3f8:	20019c24 	.word	0x20019c24

0800d3fc <WM_CreateWindowAsChild>:
 800d3fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d400:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d402:	469b      	mov	fp, r3
 800d404:	4b4b      	ldr	r3, [pc, #300]	; (800d534 <WM_CreateWindowAsChild+0x138>)
 800d406:	4607      	mov	r7, r0
 800d408:	4688      	mov	r8, r1
 800d40a:	4692      	mov	sl, r2
 800d40c:	681e      	ldr	r6, [r3, #0]
 800d40e:	bb65      	cbnz	r5, 800d46a <WM_CreateWindowAsChild+0x6e>
 800d410:	4b49      	ldr	r3, [pc, #292]	; (800d538 <WM_CreateWindowAsChild+0x13c>)
 800d412:	881b      	ldrh	r3, [r3, #0]
 800d414:	b363      	cbz	r3, 800d470 <WM_CreateWindowAsChild+0x74>
 800d416:	4b49      	ldr	r3, [pc, #292]	; (800d53c <WM_CreateWindowAsChild+0x140>)
 800d418:	681b      	ldr	r3, [r3, #0]
 800d41a:	7c5a      	ldrb	r2, [r3, #17]
 800d41c:	4b48      	ldr	r3, [pc, #288]	; (800d540 <WM_CreateWindowAsChild+0x144>)
 800d41e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d422:	1c5a      	adds	r2, r3, #1
 800d424:	d024      	beq.n	800d470 <WM_CreateWindowAsChild+0x74>
 800d426:	b31b      	cbz	r3, 800d470 <WM_CreateWindowAsChild+0x74>
 800d428:	461d      	mov	r5, r3
 800d42a:	4628      	mov	r0, r5
 800d42c:	f005 fe58 	bl	80130e0 <GUI_ALLOC_LockH>
 800d430:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d434:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800d438:	9001      	str	r0, [sp, #4]
 800d43a:	4417      	add	r7, r2
 800d43c:	4498      	add	r8, r3
 800d43e:	f1ba 0f00 	cmp.w	sl, #0
 800d442:	d105      	bne.n	800d450 <WM_CreateWindowAsChild+0x54>
 800d444:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 800d448:	ebc2 0a0a 	rsb	sl, r2, sl
 800d44c:	f10a 0a01 	add.w	sl, sl, #1
 800d450:	f1bb 0f00 	cmp.w	fp, #0
 800d454:	d105      	bne.n	800d462 <WM_CreateWindowAsChild+0x66>
 800d456:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 800d45a:	ebc3 0b0b 	rsb	fp, r3, fp
 800d45e:	f10b 0b01 	add.w	fp, fp, #1
 800d462:	a801      	add	r0, sp, #4
 800d464:	f005 fe4a 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d468:	e002      	b.n	800d470 <WM_CreateWindowAsChild+0x74>
 800d46a:	1c6b      	adds	r3, r5, #1
 800d46c:	d1dd      	bne.n	800d42a <WM_CreateWindowAsChild+0x2e>
 800d46e:	2500      	movs	r5, #0
 800d470:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d472:	302c      	adds	r0, #44	; 0x2c
 800d474:	f006 f8a1 	bl	80135ba <GUI_ALLOC_AllocZero>
 800d478:	4604      	mov	r4, r0
 800d47a:	2800      	cmp	r0, #0
 800d47c:	d056      	beq.n	800d52c <WM_CreateWindowAsChild+0x130>
 800d47e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d480:	431e      	orrs	r6, r3
 800d482:	4b2d      	ldr	r3, [pc, #180]	; (800d538 <WM_CreateWindowAsChild+0x13c>)
 800d484:	881a      	ldrh	r2, [r3, #0]
 800d486:	3201      	adds	r2, #1
 800d488:	801a      	strh	r2, [r3, #0]
 800d48a:	f005 fe29 	bl	80130e0 <GUI_ALLOC_LockH>
 800d48e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d490:	6103      	str	r3, [r0, #16]
 800d492:	f10d 0908 	add.w	r9, sp, #8
 800d496:	4b2b      	ldr	r3, [pc, #172]	; (800d544 <WM_CreateWindowAsChild+0x148>)
 800d498:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800d49a:	f849 0d08 	str.w	r0, [r9, #-8]!
 800d49e:	4033      	ands	r3, r6
 800d4a0:	8007      	strh	r7, [r0, #0]
 800d4a2:	f8a0 8002 	strh.w	r8, [r0, #2]
 800d4a6:	4457      	add	r7, sl
 800d4a8:	44d8      	add	r8, fp
 800d4aa:	4313      	orrs	r3, r2
 800d4ac:	3f01      	subs	r7, #1
 800d4ae:	f108 38ff 	add.w	r8, r8, #4294967295
 800d4b2:	6283      	str	r3, [r0, #40]	; 0x28
 800d4b4:	8087      	strh	r7, [r0, #4]
 800d4b6:	f8a0 8006 	strh.w	r8, [r0, #6]
 800d4ba:	4668      	mov	r0, sp
 800d4bc:	f005 fe1e 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d4c0:	4b21      	ldr	r3, [pc, #132]	; (800d548 <WM_CreateWindowAsChild+0x14c>)
 800d4c2:	6818      	ldr	r0, [r3, #0]
 800d4c4:	b148      	cbz	r0, 800d4da <WM_CreateWindowAsChild+0xde>
 800d4c6:	f005 fe01 	bl	80130cc <GUI_ALLOC_h2p>
 800d4ca:	4607      	mov	r7, r0
 800d4cc:	4620      	mov	r0, r4
 800d4ce:	f005 fdfd 	bl	80130cc <GUI_ALLOC_h2p>
 800d4d2:	697b      	ldr	r3, [r7, #20]
 800d4d4:	6143      	str	r3, [r0, #20]
 800d4d6:	617c      	str	r4, [r7, #20]
 800d4d8:	e000      	b.n	800d4dc <WM_CreateWindowAsChild+0xe0>
 800d4da:	601c      	str	r4, [r3, #0]
 800d4dc:	4629      	mov	r1, r5
 800d4de:	4620      	mov	r0, r4
 800d4e0:	f7ff fd04 	bl	800ceec <WM__InsertWindowIntoList>
 800d4e4:	06b5      	lsls	r5, r6, #26
 800d4e6:	d502      	bpl.n	800d4ee <WM_CreateWindowAsChild+0xf2>
 800d4e8:	4620      	mov	r0, r4
 800d4ea:	f7ff ff67 	bl	800d3bc <WM_SelectWindow>
 800d4ee:	07f0      	lsls	r0, r6, #31
 800d4f0:	d503      	bpl.n	800d4fa <WM_CreateWindowAsChild+0xfe>
 800d4f2:	4b16      	ldr	r3, [pc, #88]	; (800d54c <WM_CreateWindowAsChild+0x150>)
 800d4f4:	681a      	ldr	r2, [r3, #0]
 800d4f6:	3201      	adds	r2, #1
 800d4f8:	601a      	str	r2, [r3, #0]
 800d4fa:	0671      	lsls	r1, r6, #25
 800d4fc:	d502      	bpl.n	800d504 <WM_CreateWindowAsChild+0x108>
 800d4fe:	4620      	mov	r0, r4
 800d500:	f008 fb6c 	bl	8015bdc <WM_BringToBottom>
 800d504:	07b2      	lsls	r2, r6, #30
 800d506:	d50d      	bpl.n	800d524 <WM_CreateWindowAsChild+0x128>
 800d508:	4620      	mov	r0, r4
 800d50a:	f005 fde9 	bl	80130e0 <GUI_ALLOC_LockH>
 800d50e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800d510:	9000      	str	r0, [sp, #0]
 800d512:	f043 0302 	orr.w	r3, r3, #2
 800d516:	6283      	str	r3, [r0, #40]	; 0x28
 800d518:	4668      	mov	r0, sp
 800d51a:	f005 fdef 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d51e:	4620      	mov	r0, r4
 800d520:	f7ff ff2b 	bl	800d37a <WM_InvalidateWindow>
 800d524:	4620      	mov	r0, r4
 800d526:	2101      	movs	r1, #1
 800d528:	f7ff fed4 	bl	800d2d4 <WM__SendMsgNoData>
 800d52c:	4620      	mov	r0, r4
 800d52e:	b003      	add	sp, #12
 800d530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d534:	20019c30 	.word	0x20019c30
 800d538:	20019c00 	.word	0x20019c00
 800d53c:	2000016c 	.word	0x2000016c
 800d540:	20019c08 	.word	0x20019c08
 800d544:	003f3f9f 	.word	0x003f3f9f
 800d548:	20019c24 	.word	0x20019c24
 800d54c:	20019c50 	.word	0x20019c50

0800d550 <WM_DeleteWindow>:
 800d550:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d552:	4604      	mov	r4, r0
 800d554:	2800      	cmp	r0, #0
 800d556:	d06e      	beq.n	800d636 <WM_DeleteWindow+0xe6>
 800d558:	f7ff fd8c 	bl	800d074 <WM__IsWindow>
 800d55c:	2800      	cmp	r0, #0
 800d55e:	d06a      	beq.n	800d636 <WM_DeleteWindow+0xe6>
 800d560:	4620      	mov	r0, r4
 800d562:	f7ff ff0d 	bl	800d380 <WM__GetTopLevelLayer>
 800d566:	210b      	movs	r1, #11
 800d568:	4605      	mov	r5, r0
 800d56a:	4620      	mov	r0, r4
 800d56c:	f7ff feb2 	bl	800d2d4 <WM__SendMsgNoData>
 800d570:	4620      	mov	r0, r4
 800d572:	f7fe fce2 	bl	800bf3a <WM__DeleteAssocTimer>
 800d576:	4620      	mov	r0, r4
 800d578:	f005 fdb2 	bl	80130e0 <GUI_ALLOC_LockH>
 800d57c:	9001      	str	r0, [sp, #4]
 800d57e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800d580:	b108      	cbz	r0, 800d586 <WM_DeleteWindow+0x36>
 800d582:	f001 fb6f 	bl	800ec64 <GUI_MEMDEV_Delete>
 800d586:	4b2d      	ldr	r3, [pc, #180]	; (800d63c <WM_DeleteWindow+0xec>)
 800d588:	4a2d      	ldr	r2, [pc, #180]	; (800d640 <WM_DeleteWindow+0xf0>)
 800d58a:	2100      	movs	r1, #0
 800d58c:	6019      	str	r1, [r3, #0]
 800d58e:	4b2d      	ldr	r3, [pc, #180]	; (800d644 <WM_DeleteWindow+0xf4>)
 800d590:	681b      	ldr	r3, [r3, #0]
 800d592:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800d596:	42a0      	cmp	r0, r4
 800d598:	bf08      	it	eq
 800d59a:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800d59e:	4a2a      	ldr	r2, [pc, #168]	; (800d648 <WM_DeleteWindow+0xf8>)
 800d5a0:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800d5a4:	42a1      	cmp	r1, r4
 800d5a6:	bf04      	itt	eq
 800d5a8:	2100      	moveq	r1, #0
 800d5aa:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800d5ae:	4b27      	ldr	r3, [pc, #156]	; (800d64c <WM_DeleteWindow+0xfc>)
 800d5b0:	681b      	ldr	r3, [r3, #0]
 800d5b2:	b12b      	cbz	r3, 800d5c0 <WM_DeleteWindow+0x70>
 800d5b4:	685a      	ldr	r2, [r3, #4]
 800d5b6:	42a2      	cmp	r2, r4
 800d5b8:	bf04      	itt	eq
 800d5ba:	2200      	moveq	r2, #0
 800d5bc:	605a      	streq	r2, [r3, #4]
 800d5be:	e7f7      	b.n	800d5b0 <WM_DeleteWindow+0x60>
 800d5c0:	4620      	mov	r0, r4
 800d5c2:	2107      	movs	r1, #7
 800d5c4:	f7fe ff85 	bl	800c4d2 <WM_NotifyParent>
 800d5c8:	9e01      	ldr	r6, [sp, #4]
 800d5ca:	69f0      	ldr	r0, [r6, #28]
 800d5cc:	f7ff ffc0 	bl	800d550 <WM_DeleteWindow>
 800d5d0:	69f3      	ldr	r3, [r6, #28]
 800d5d2:	2b00      	cmp	r3, #0
 800d5d4:	d1f9      	bne.n	800d5ca <WM_DeleteWindow+0x7a>
 800d5d6:	4620      	mov	r0, r4
 800d5d8:	f7ff fe63 	bl	800d2a2 <WM__DetachWindow>
 800d5dc:	4b1c      	ldr	r3, [pc, #112]	; (800d650 <WM_DeleteWindow+0x100>)
 800d5de:	6818      	ldr	r0, [r3, #0]
 800d5e0:	b150      	cbz	r0, 800d5f8 <WM_DeleteWindow+0xa8>
 800d5e2:	f005 fd73 	bl	80130cc <GUI_ALLOC_h2p>
 800d5e6:	4606      	mov	r6, r0
 800d5e8:	6940      	ldr	r0, [r0, #20]
 800d5ea:	42a0      	cmp	r0, r4
 800d5ec:	d1f8      	bne.n	800d5e0 <WM_DeleteWindow+0x90>
 800d5ee:	4620      	mov	r0, r4
 800d5f0:	f005 fd6c 	bl	80130cc <GUI_ALLOC_h2p>
 800d5f4:	6943      	ldr	r3, [r0, #20]
 800d5f6:	6173      	str	r3, [r6, #20]
 800d5f8:	9b01      	ldr	r3, [sp, #4]
 800d5fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d5fc:	07da      	lsls	r2, r3, #31
 800d5fe:	d503      	bpl.n	800d608 <WM_DeleteWindow+0xb8>
 800d600:	4a14      	ldr	r2, [pc, #80]	; (800d654 <WM_DeleteWindow+0x104>)
 800d602:	6811      	ldr	r1, [r2, #0]
 800d604:	3901      	subs	r1, #1
 800d606:	6011      	str	r1, [r2, #0]
 800d608:	069b      	lsls	r3, r3, #26
 800d60a:	d503      	bpl.n	800d614 <WM_DeleteWindow+0xc4>
 800d60c:	4b12      	ldr	r3, [pc, #72]	; (800d658 <WM_DeleteWindow+0x108>)
 800d60e:	881a      	ldrh	r2, [r3, #0]
 800d610:	3a01      	subs	r2, #1
 800d612:	801a      	strh	r2, [r3, #0]
 800d614:	a801      	add	r0, sp, #4
 800d616:	f005 fd71 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d61a:	4b10      	ldr	r3, [pc, #64]	; (800d65c <WM_DeleteWindow+0x10c>)
 800d61c:	881a      	ldrh	r2, [r3, #0]
 800d61e:	4620      	mov	r0, r4
 800d620:	3a01      	subs	r2, #1
 800d622:	801a      	strh	r2, [r3, #0]
 800d624:	f005 fd96 	bl	8013154 <GUI_ALLOC_Free>
 800d628:	2d00      	cmp	r5, #0
 800d62a:	db04      	blt.n	800d636 <WM_DeleteWindow+0xe6>
 800d62c:	4b0c      	ldr	r3, [pc, #48]	; (800d660 <WM_DeleteWindow+0x110>)
 800d62e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d632:	f7ff fec3 	bl	800d3bc <WM_SelectWindow>
 800d636:	b002      	add	sp, #8
 800d638:	bd70      	pop	{r4, r5, r6, pc}
 800d63a:	bf00      	nop
 800d63c:	20019454 	.word	0x20019454
 800d640:	20019c18 	.word	0x20019c18
 800d644:	20019c28 	.word	0x20019c28
 800d648:	20019c44 	.word	0x20019c44
 800d64c:	20019c3c 	.word	0x20019c3c
 800d650:	20019c24 	.word	0x20019c24
 800d654:	20019c50 	.word	0x20019c50
 800d658:	20019c20 	.word	0x20019c20
 800d65c:	20019c00 	.word	0x20019c00
 800d660:	20019c08 	.word	0x20019c08

0800d664 <WM_GetActiveWindow>:
 800d664:	4b01      	ldr	r3, [pc, #4]	; (800d66c <WM_GetActiveWindow+0x8>)
 800d666:	681b      	ldr	r3, [r3, #0]
 800d668:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800d66a:	4770      	bx	lr
 800d66c:	2000016c 	.word	0x2000016c

0800d670 <WM__GetNextIVR>:
 800d670:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d674:	4f5d      	ldr	r7, [pc, #372]	; (800d7ec <WM__GetNextIVR+0x17c>)
 800d676:	683b      	ldr	r3, [r7, #0]
 800d678:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 800d67c:	2800      	cmp	r0, #0
 800d67e:	f000 80b2 	beq.w	800d7e6 <WM__GetNextIVR+0x176>
 800d682:	4b5b      	ldr	r3, [pc, #364]	; (800d7f0 <WM__GetNextIVR+0x180>)
 800d684:	695a      	ldr	r2, [r3, #20]
 800d686:	2a01      	cmp	r2, #1
 800d688:	461c      	mov	r4, r3
 800d68a:	dd03      	ble.n	800d694 <WM__GetNextIVR+0x24>
 800d68c:	3a01      	subs	r2, #1
 800d68e:	615a      	str	r2, [r3, #20]
 800d690:	2000      	movs	r0, #0
 800d692:	e0a8      	b.n	800d7e6 <WM__GetNextIVR+0x176>
 800d694:	f104 0608 	add.w	r6, r4, #8
 800d698:	691b      	ldr	r3, [r3, #16]
 800d69a:	e896 0003 	ldmia.w	r6, {r0, r1}
 800d69e:	3301      	adds	r3, #1
 800d6a0:	ad02      	add	r5, sp, #8
 800d6a2:	6123      	str	r3, [r4, #16]
 800d6a4:	e885 0003 	stmia.w	r5, {r0, r1}
 800d6a8:	b923      	cbnz	r3, 800d6b4 <WM__GetNextIVR+0x44>
 800d6aa:	8823      	ldrh	r3, [r4, #0]
 800d6ac:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d6b0:	8863      	ldrh	r3, [r4, #2]
 800d6b2:	e011      	b.n	800d6d8 <WM__GetNextIVR+0x68>
 800d6b4:	89a3      	ldrh	r3, [r4, #12]
 800d6b6:	8962      	ldrh	r2, [r4, #10]
 800d6b8:	f8ad 200a 	strh.w	r2, [sp, #10]
 800d6bc:	3301      	adds	r3, #1
 800d6be:	b29b      	uxth	r3, r3
 800d6c0:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800d6c4:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d6c8:	b21b      	sxth	r3, r3
 800d6ca:	429a      	cmp	r2, r3
 800d6cc:	da06      	bge.n	800d6dc <WM__GetNextIVR+0x6c>
 800d6ce:	8823      	ldrh	r3, [r4, #0]
 800d6d0:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d6d4:	89e3      	ldrh	r3, [r4, #14]
 800d6d6:	3301      	adds	r3, #1
 800d6d8:	f8ad 300a 	strh.w	r3, [sp, #10]
 800d6dc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800d6e0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d6e4:	f8df 8108 	ldr.w	r8, [pc, #264]	; 800d7f0 <WM__GetNextIVR+0x180>
 800d6e8:	429a      	cmp	r2, r3
 800d6ea:	dd04      	ble.n	800d6f6 <WM__GetNextIVR+0x86>
 800d6ec:	6963      	ldr	r3, [r4, #20]
 800d6ee:	3b01      	subs	r3, #1
 800d6f0:	2000      	movs	r0, #0
 800d6f2:	6163      	str	r3, [r4, #20]
 800d6f4:	e077      	b.n	800d7e6 <WM__GetNextIVR+0x176>
 800d6f6:	683b      	ldr	r3, [r7, #0]
 800d6f8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800d6fa:	f005 fcf1 	bl	80130e0 <GUI_ALLOC_LockH>
 800d6fe:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800d702:	f9b8 3000 	ldrsh.w	r3, [r8]
 800d706:	9001      	str	r0, [sp, #4]
 800d708:	429a      	cmp	r2, r3
 800d70a:	d11c      	bne.n	800d746 <WM__GetNextIVR+0xd6>
 800d70c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800d710:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d714:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800d718:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d71c:	4b33      	ldr	r3, [pc, #204]	; (800d7ec <WM__GetNextIVR+0x17c>)
 800d71e:	681b      	ldr	r3, [r3, #0]
 800d720:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800d722:	b15a      	cbz	r2, 800d73c <WM__GetNextIVR+0xcc>
 800d724:	4610      	mov	r0, r2
 800d726:	f005 fcd1 	bl	80130cc <GUI_ALLOC_h2p>
 800d72a:	4680      	mov	r8, r0
 800d72c:	2200      	movs	r2, #0
 800d72e:	6a00      	ldr	r0, [r0, #32]
 800d730:	4629      	mov	r1, r5
 800d732:	f7ff f9c1 	bl	800cab8 <_Findy1>
 800d736:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800d73a:	e7f2      	b.n	800d722 <WM__GetNextIVR+0xb2>
 800d73c:	9b01      	ldr	r3, [sp, #4]
 800d73e:	4629      	mov	r1, r5
 800d740:	69d8      	ldr	r0, [r3, #28]
 800d742:	f7ff f9b9 	bl	800cab8 <_Findy1>
 800d746:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d74a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d74e:	683b      	ldr	r3, [r7, #0]
 800d750:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800d752:	b16a      	cbz	r2, 800d770 <WM__GetNextIVR+0x100>
 800d754:	4610      	mov	r0, r2
 800d756:	f005 fcb9 	bl	80130cc <GUI_ALLOC_h2p>
 800d75a:	4629      	mov	r1, r5
 800d75c:	4680      	mov	r8, r0
 800d75e:	2200      	movs	r2, #0
 800d760:	6a00      	ldr	r0, [r0, #32]
 800d762:	f7ff f9ff 	bl	800cb64 <_Findx0>
 800d766:	2800      	cmp	r0, #0
 800d768:	d1ed      	bne.n	800d746 <WM__GetNextIVR+0xd6>
 800d76a:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800d76e:	e7f0      	b.n	800d752 <WM__GetNextIVR+0xe2>
 800d770:	9b01      	ldr	r3, [sp, #4]
 800d772:	4629      	mov	r1, r5
 800d774:	69d8      	ldr	r0, [r3, #28]
 800d776:	f7ff f9f5 	bl	800cb64 <_Findx0>
 800d77a:	2800      	cmp	r0, #0
 800d77c:	d1e3      	bne.n	800d746 <WM__GetNextIVR+0xd6>
 800d77e:	88a3      	ldrh	r3, [r4, #4]
 800d780:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800d784:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d788:	b21b      	sxth	r3, r3
 800d78a:	429a      	cmp	r2, r3
 800d78c:	dd07      	ble.n	800d79e <WM__GetNextIVR+0x12e>
 800d78e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d792:	e886 0003 	stmia.w	r6, {r0, r1}
 800d796:	a801      	add	r0, sp, #4
 800d798:	f005 fcb0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d79c:	e797      	b.n	800d6ce <WM__GetNextIVR+0x5e>
 800d79e:	683b      	ldr	r3, [r7, #0]
 800d7a0:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800d7a2:	b152      	cbz	r2, 800d7ba <WM__GetNextIVR+0x14a>
 800d7a4:	4610      	mov	r0, r2
 800d7a6:	f005 fc91 	bl	80130cc <GUI_ALLOC_h2p>
 800d7aa:	4607      	mov	r7, r0
 800d7ac:	2200      	movs	r2, #0
 800d7ae:	6a00      	ldr	r0, [r0, #32]
 800d7b0:	4629      	mov	r1, r5
 800d7b2:	f7ff fa1b 	bl	800cbec <_Findx1>
 800d7b6:	69ba      	ldr	r2, [r7, #24]
 800d7b8:	e7f3      	b.n	800d7a2 <WM__GetNextIVR+0x132>
 800d7ba:	af04      	add	r7, sp, #16
 800d7bc:	4629      	mov	r1, r5
 800d7be:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 800d7c2:	69d8      	ldr	r0, [r3, #28]
 800d7c4:	f7ff fa12 	bl	800cbec <_Findx1>
 800d7c8:	4638      	mov	r0, r7
 800d7ca:	f005 fc97 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d7ce:	6923      	ldr	r3, [r4, #16]
 800d7d0:	f644 6220 	movw	r2, #20000	; 0x4e20
 800d7d4:	4293      	cmp	r3, r2
 800d7d6:	dc89      	bgt.n	800d6ec <WM__GetNextIVR+0x7c>
 800d7d8:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d7dc:	e886 0003 	stmia.w	r6, {r0, r1}
 800d7e0:	f7ff fc24 	bl	800d02c <WM__ActivateClipRect>
 800d7e4:	2001      	movs	r0, #1
 800d7e6:	b004      	add	sp, #16
 800d7e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d7ec:	2000016c 	.word	0x2000016c
 800d7f0:	2001943c 	.word	0x2001943c

0800d7f4 <WM__InitIVRSearch>:
 800d7f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7f8:	4f39      	ldr	r7, [pc, #228]	; (800d8e0 <WM__InitIVRSearch+0xec>)
 800d7fa:	683b      	ldr	r3, [r7, #0]
 800d7fc:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800d800:	b086      	sub	sp, #24
 800d802:	4606      	mov	r6, r0
 800d804:	b912      	cbnz	r2, 800d80c <WM__InitIVRSearch+0x18>
 800d806:	f7ff fc11 	bl	800d02c <WM__ActivateClipRect>
 800d80a:	e064      	b.n	800d8d6 <WM__InitIVRSearch+0xe2>
 800d80c:	4d35      	ldr	r5, [pc, #212]	; (800d8e4 <WM__InitIVRSearch+0xf0>)
 800d80e:	696a      	ldr	r2, [r5, #20]
 800d810:	3201      	adds	r2, #1
 800d812:	2a01      	cmp	r2, #1
 800d814:	616a      	str	r2, [r5, #20]
 800d816:	462c      	mov	r4, r5
 800d818:	dc5d      	bgt.n	800d8d6 <WM__InitIVRSearch+0xe2>
 800d81a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800d81c:	f005 fc60 	bl	80130e0 <GUI_ALLOC_LockH>
 800d820:	f04f 32ff 	mov.w	r2, #4294967295
 800d824:	612a      	str	r2, [r5, #16]
 800d826:	4a30      	ldr	r2, [pc, #192]	; (800d8e8 <WM__InitIVRSearch+0xf4>)
 800d828:	9000      	str	r0, [sp, #0]
 800d82a:	7812      	ldrb	r2, [r2, #0]
 800d82c:	b12a      	cbz	r2, 800d83a <WM__InitIVRSearch+0x46>
 800d82e:	f100 0308 	add.w	r3, r0, #8
 800d832:	aa02      	add	r2, sp, #8
 800d834:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d838:	e005      	b.n	800d846 <WM__InitIVRSearch+0x52>
 800d83a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800d83c:	f012 0802 	ands.w	r8, r2, #2
 800d840:	d00a      	beq.n	800d858 <WM__InitIVRSearch+0x64>
 800d842:	c803      	ldmia	r0, {r0, r1}
 800d844:	aa02      	add	r2, sp, #8
 800d846:	e882 0003 	stmia.w	r2, {r0, r1}
 800d84a:	ad02      	add	r5, sp, #8
 800d84c:	b166      	cbz	r6, 800d868 <WM__InitIVRSearch+0x74>
 800d84e:	4628      	mov	r0, r5
 800d850:	4631      	mov	r1, r6
 800d852:	f003 f9c1 	bl	8010bd8 <GUI__IntersectRect>
 800d856:	e007      	b.n	800d868 <WM__InitIVRSearch+0x74>
 800d858:	696b      	ldr	r3, [r5, #20]
 800d85a:	4668      	mov	r0, sp
 800d85c:	3b01      	subs	r3, #1
 800d85e:	616b      	str	r3, [r5, #20]
 800d860:	f005 fc4c 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d864:	4640      	mov	r0, r8
 800d866:	e037      	b.n	800d8d8 <WM__InitIVRSearch+0xe4>
 800d868:	683b      	ldr	r3, [r7, #0]
 800d86a:	4e20      	ldr	r6, [pc, #128]	; (800d8ec <WM__InitIVRSearch+0xf8>)
 800d86c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800d86e:	b1c2      	cbz	r2, 800d8a2 <WM__InitIVRSearch+0xae>
 800d870:	9b00      	ldr	r3, [sp, #0]
 800d872:	6810      	ldr	r0, [r2, #0]
 800d874:	6851      	ldr	r1, [r2, #4]
 800d876:	9301      	str	r3, [sp, #4]
 800d878:	ab04      	add	r3, sp, #16
 800d87a:	c303      	stmia	r3!, {r0, r1}
 800d87c:	6833      	ldr	r3, [r6, #0]
 800d87e:	b133      	cbz	r3, 800d88e <WM__InitIVRSearch+0x9a>
 800d880:	a801      	add	r0, sp, #4
 800d882:	f005 fc3b 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d886:	6830      	ldr	r0, [r6, #0]
 800d888:	f005 fc2a 	bl	80130e0 <GUI_ALLOC_LockH>
 800d88c:	9001      	str	r0, [sp, #4]
 800d88e:	9801      	ldr	r0, [sp, #4]
 800d890:	a904      	add	r1, sp, #16
 800d892:	f7ff fb9b 	bl	800cfcc <WM__Client2Screen>
 800d896:	4628      	mov	r0, r5
 800d898:	a904      	add	r1, sp, #16
 800d89a:	f003 f99d 	bl	8010bd8 <GUI__IntersectRect>
 800d89e:	a801      	add	r0, sp, #4
 800d8a0:	e000      	b.n	800d8a4 <WM__InitIVRSearch+0xb0>
 800d8a2:	4668      	mov	r0, sp
 800d8a4:	f005 fc2a 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d8a8:	6831      	ldr	r1, [r6, #0]
 800d8aa:	b119      	cbz	r1, 800d8b4 <WM__InitIVRSearch+0xc0>
 800d8ac:	4628      	mov	r0, r5
 800d8ae:	f7ff faef 	bl	800ce90 <WM__ClipAtParentBorders>
 800d8b2:	b128      	cbz	r0, 800d8c0 <WM__InitIVRSearch+0xcc>
 800d8b4:	683b      	ldr	r3, [r7, #0]
 800d8b6:	4628      	mov	r0, r5
 800d8b8:	6c99      	ldr	r1, [r3, #72]	; 0x48
 800d8ba:	f7ff fae9 	bl	800ce90 <WM__ClipAtParentBorders>
 800d8be:	b918      	cbnz	r0, 800d8c8 <WM__InitIVRSearch+0xd4>
 800d8c0:	6963      	ldr	r3, [r4, #20]
 800d8c2:	3b01      	subs	r3, #1
 800d8c4:	6163      	str	r3, [r4, #20]
 800d8c6:	e007      	b.n	800d8d8 <WM__InitIVRSearch+0xe4>
 800d8c8:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d8cc:	e884 0003 	stmia.w	r4, {r0, r1}
 800d8d0:	f7ff fece 	bl	800d670 <WM__GetNextIVR>
 800d8d4:	e000      	b.n	800d8d8 <WM__InitIVRSearch+0xe4>
 800d8d6:	2001      	movs	r0, #1
 800d8d8:	b006      	add	sp, #24
 800d8da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8de:	bf00      	nop
 800d8e0:	2000016c 	.word	0x2000016c
 800d8e4:	2001943c 	.word	0x2001943c
 800d8e8:	20019c2d 	.word	0x20019c2d
 800d8ec:	20019c04 	.word	0x20019c04

0800d8f0 <WM_SetDefault>:
 800d8f0:	b508      	push	{r3, lr}
 800d8f2:	f004 f9e3 	bl	8011cbc <GL_SetDefault>
 800d8f6:	4b02      	ldr	r3, [pc, #8]	; (800d900 <WM_SetDefault+0x10>)
 800d8f8:	681b      	ldr	r3, [r3, #0]
 800d8fa:	2200      	movs	r2, #0
 800d8fc:	645a      	str	r2, [r3, #68]	; 0x44
 800d8fe:	bd08      	pop	{r3, pc}
 800d900:	2000016c 	.word	0x2000016c

0800d904 <WM__Paint1>:
 800d904:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d906:	b089      	sub	sp, #36	; 0x24
 800d908:	4604      	mov	r4, r0
 800d90a:	f005 fbe9 	bl	80130e0 <GUI_ALLOC_LockH>
 800d90e:	6907      	ldr	r7, [r0, #16]
 800d910:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800d912:	9001      	str	r0, [sp, #4]
 800d914:	3008      	adds	r0, #8
 800d916:	c803      	ldmia	r0, {r0, r1}
 800d918:	ad02      	add	r5, sp, #8
 800d91a:	e885 0003 	stmia.w	r5, {r0, r1}
 800d91e:	a801      	add	r0, sp, #4
 800d920:	f005 fbec 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d924:	2f00      	cmp	r7, #0
 800d926:	d031      	beq.n	800d98c <WM__Paint1+0x88>
 800d928:	07b3      	lsls	r3, r6, #30
 800d92a:	d52f      	bpl.n	800d98c <WM__Paint1+0x88>
 800d92c:	4620      	mov	r0, r4
 800d92e:	212e      	movs	r1, #46	; 0x2e
 800d930:	f7fe fce4 	bl	800c2fc <WM_SendMessageNoPara>
 800d934:	4b16      	ldr	r3, [pc, #88]	; (800d990 <WM__Paint1+0x8c>)
 800d936:	781a      	ldrb	r2, [r3, #0]
 800d938:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 800d93c:	f102 0201 	add.w	r2, r2, #1
 800d940:	701a      	strb	r2, [r3, #0]
 800d942:	461e      	mov	r6, r3
 800d944:	d00a      	beq.n	800d95c <WM__Paint1+0x58>
 800d946:	230f      	movs	r3, #15
 800d948:	9405      	str	r4, [sp, #20]
 800d94a:	9304      	str	r3, [sp, #16]
 800d94c:	9507      	str	r5, [sp, #28]
 800d94e:	f7ff ffcf 	bl	800d8f0 <WM_SetDefault>
 800d952:	4620      	mov	r0, r4
 800d954:	a904      	add	r1, sp, #16
 800d956:	f007 fe11 	bl	801557c <WM__SendMessage>
 800d95a:	e010      	b.n	800d97e <WM__Paint1+0x7a>
 800d95c:	4628      	mov	r0, r5
 800d95e:	f7ff ff49 	bl	800d7f4 <WM__InitIVRSearch>
 800d962:	b160      	cbz	r0, 800d97e <WM__Paint1+0x7a>
 800d964:	230f      	movs	r3, #15
 800d966:	9304      	str	r3, [sp, #16]
 800d968:	9405      	str	r4, [sp, #20]
 800d96a:	9507      	str	r5, [sp, #28]
 800d96c:	f7ff ffc0 	bl	800d8f0 <WM_SetDefault>
 800d970:	4620      	mov	r0, r4
 800d972:	a904      	add	r1, sp, #16
 800d974:	f007 fe02 	bl	801557c <WM__SendMessage>
 800d978:	f7ff fe7a 	bl	800d670 <WM__GetNextIVR>
 800d97c:	e7f1      	b.n	800d962 <WM__Paint1+0x5e>
 800d97e:	7833      	ldrb	r3, [r6, #0]
 800d980:	4620      	mov	r0, r4
 800d982:	3b01      	subs	r3, #1
 800d984:	212f      	movs	r1, #47	; 0x2f
 800d986:	7033      	strb	r3, [r6, #0]
 800d988:	f7fe fcb8 	bl	800c2fc <WM_SendMessageNoPara>
 800d98c:	b009      	add	sp, #36	; 0x24
 800d98e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d990:	20019c2d 	.word	0x20019c2d

0800d994 <WM__Paint>:
 800d994:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d996:	b089      	sub	sp, #36	; 0x24
 800d998:	ac06      	add	r4, sp, #24
 800d99a:	9003      	str	r0, [sp, #12]
 800d99c:	f005 fba0 	bl	80130e0 <GUI_ALLOC_LockH>
 800d9a0:	f100 0208 	add.w	r2, r0, #8
 800d9a4:	4603      	mov	r3, r0
 800d9a6:	9005      	str	r0, [sp, #20]
 800d9a8:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d9ac:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d9ae:	699e      	ldr	r6, [r3, #24]
 800d9b0:	691f      	ldr	r7, [r3, #16]
 800d9b2:	e884 0003 	stmia.w	r4, {r0, r1}
 800d9b6:	a805      	add	r0, sp, #20
 800d9b8:	f005 fba0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800d9bc:	f244 0320 	movw	r3, #16416	; 0x4020
 800d9c0:	402b      	ands	r3, r5
 800d9c2:	2b00      	cmp	r3, #0
 800d9c4:	d034      	beq.n	800da30 <WM__Paint+0x9c>
 800d9c6:	b1bf      	cbz	r7, 800d9f8 <WM__Paint+0x64>
 800d9c8:	4620      	mov	r0, r4
 800d9ca:	9903      	ldr	r1, [sp, #12]
 800d9cc:	f7ff fa60 	bl	800ce90 <WM__ClipAtParentBorders>
 800d9d0:	b190      	cbz	r0, 800d9f8 <WM__Paint+0x64>
 800d9d2:	9803      	ldr	r0, [sp, #12]
 800d9d4:	f7ff fcf2 	bl	800d3bc <WM_SelectWindow>
 800d9d8:	0769      	lsls	r1, r5, #29
 800d9da:	d50f      	bpl.n	800d9fc <WM__Paint+0x68>
 800d9dc:	b126      	cbz	r6, 800d9e8 <WM__Paint+0x54>
 800d9de:	f005 0501 	and.w	r5, r5, #1
 800d9e2:	f085 0501 	eor.w	r5, r5, #1
 800d9e6:	e000      	b.n	800d9ea <WM__Paint+0x56>
 800d9e8:	2501      	movs	r5, #1
 800d9ea:	9500      	str	r5, [sp, #0]
 800d9ec:	4620      	mov	r0, r4
 800d9ee:	4912      	ldr	r1, [pc, #72]	; (800da38 <WM__Paint+0xa4>)
 800d9f0:	aa03      	add	r2, sp, #12
 800d9f2:	2300      	movs	r3, #0
 800d9f4:	f000 facc 	bl	800df90 <GUI_MEMDEV_Draw>
 800d9f8:	2400      	movs	r4, #0
 800d9fa:	e003      	b.n	800da04 <WM__Paint+0x70>
 800d9fc:	9803      	ldr	r0, [sp, #12]
 800d9fe:	f7ff f9d7 	bl	800cdb0 <WM__PaintWinAndOverlays>
 800da02:	2401      	movs	r4, #1
 800da04:	9803      	ldr	r0, [sp, #12]
 800da06:	f005 fb6b 	bl	80130e0 <GUI_ALLOC_LockH>
 800da0a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800da0c:	9005      	str	r0, [sp, #20]
 800da0e:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 800da12:	f023 0320 	bic.w	r3, r3, #32
 800da16:	0492      	lsls	r2, r2, #18
 800da18:	bf48      	it	mi
 800da1a:	f043 0304 	orrmi.w	r3, r3, #4
 800da1e:	6283      	str	r3, [r0, #40]	; 0x28
 800da20:	a805      	add	r0, sp, #20
 800da22:	f005 fb6b 	bl	80130fc <GUI_ALLOC_UnlockH>
 800da26:	4b05      	ldr	r3, [pc, #20]	; (800da3c <WM__Paint+0xa8>)
 800da28:	881a      	ldrh	r2, [r3, #0]
 800da2a:	3a01      	subs	r2, #1
 800da2c:	801a      	strh	r2, [r3, #0]
 800da2e:	e000      	b.n	800da32 <WM__Paint+0x9e>
 800da30:	461c      	mov	r4, r3
 800da32:	4620      	mov	r0, r4
 800da34:	b009      	add	sp, #36	; 0x24
 800da36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da38:	0800ce29 	.word	0x0800ce29
 800da3c:	20019c20 	.word	0x20019c20

0800da40 <WM_Exec>:
 800da40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da44:	4b4c      	ldr	r3, [pc, #304]	; (800db78 <WM_Exec+0x138>)
 800da46:	681b      	ldr	r3, [r3, #0]
 800da48:	b09f      	sub	sp, #124	; 0x7c
 800da4a:	b103      	cbz	r3, 800da4e <WM_Exec+0xe>
 800da4c:	4798      	blx	r3
 800da4e:	2600      	movs	r6, #0
 800da50:	4d4a      	ldr	r5, [pc, #296]	; (800db7c <WM_Exec+0x13c>)
 800da52:	682b      	ldr	r3, [r5, #0]
 800da54:	b1db      	cbz	r3, 800da8e <WM_Exec+0x4e>
 800da56:	4b4a      	ldr	r3, [pc, #296]	; (800db80 <WM_Exec+0x140>)
 800da58:	681c      	ldr	r4, [r3, #0]
 800da5a:	b1bc      	cbz	r4, 800da8c <WM_Exec+0x4c>
 800da5c:	4620      	mov	r0, r4
 800da5e:	f005 fb3f 	bl	80130e0 <GUI_ALLOC_LockH>
 800da62:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800da64:	6947      	ldr	r7, [r0, #20]
 800da66:	ab1e      	add	r3, sp, #120	; 0x78
 800da68:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 800da6c:	f843 0d70 	str.w	r0, [r3, #-112]!
 800da70:	d007      	beq.n	800da82 <WM_Exec+0x42>
 800da72:	4618      	mov	r0, r3
 800da74:	f005 fb42 	bl	80130fc <GUI_ALLOC_UnlockH>
 800da78:	4620      	mov	r0, r4
 800da7a:	f7ff fd69 	bl	800d550 <WM_DeleteWindow>
 800da7e:	463c      	mov	r4, r7
 800da80:	e7eb      	b.n	800da5a <WM_Exec+0x1a>
 800da82:	4618      	mov	r0, r3
 800da84:	463c      	mov	r4, r7
 800da86:	f005 fb39 	bl	80130fc <GUI_ALLOC_UnlockH>
 800da8a:	e7e6      	b.n	800da5a <WM_Exec+0x1a>
 800da8c:	602c      	str	r4, [r5, #0]
 800da8e:	4b3d      	ldr	r3, [pc, #244]	; (800db84 <WM_Exec+0x144>)
 800da90:	681b      	ldr	r3, [r3, #0]
 800da92:	b103      	cbz	r3, 800da96 <WM_Exec+0x56>
 800da94:	4798      	blx	r3
 800da96:	4b3c      	ldr	r3, [pc, #240]	; (800db88 <WM_Exec+0x148>)
 800da98:	681b      	ldr	r3, [r3, #0]
 800da9a:	b92b      	cbnz	r3, 800daa8 <WM_Exec+0x68>
 800da9c:	4f3b      	ldr	r7, [pc, #236]	; (800db8c <WM_Exec+0x14c>)
 800da9e:	683b      	ldr	r3, [r7, #0]
 800daa0:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800daa4:	b143      	cbz	r3, 800dab8 <WM_Exec+0x78>
 800daa6:	e003      	b.n	800dab0 <WM_Exec+0x70>
 800daa8:	4798      	blx	r3
 800daaa:	2800      	cmp	r0, #0
 800daac:	d0f6      	beq.n	800da9c <WM_Exec+0x5c>
 800daae:	e058      	b.n	800db62 <WM_Exec+0x122>
 800dab0:	f004 fa6c 	bl	8011f8c <GUI_PollKeyMsg>
 800dab4:	2800      	cmp	r0, #0
 800dab6:	d154      	bne.n	800db62 <WM_Exec+0x122>
 800dab8:	683b      	ldr	r3, [r7, #0]
 800daba:	f893 5054 	ldrb.w	r5, [r3, #84]	; 0x54
 800dabe:	b14d      	cbz	r5, 800dad4 <WM_Exec+0x94>
 800dac0:	4b33      	ldr	r3, [pc, #204]	; (800db90 <WM_Exec+0x150>)
 800dac2:	881d      	ldrh	r5, [r3, #0]
 800dac4:	b135      	cbz	r5, 800dad4 <WM_Exec+0x94>
 800dac6:	4b33      	ldr	r3, [pc, #204]	; (800db94 <WM_Exec+0x154>)
 800dac8:	681b      	ldr	r3, [r3, #0]
 800daca:	2b00      	cmp	r3, #0
 800dacc:	d04b      	beq.n	800db66 <WM_Exec+0x126>
 800dace:	681b      	ldr	r3, [r3, #0]
 800dad0:	4798      	blx	r3
 800dad2:	2501      	movs	r5, #1
 800dad4:	683b      	ldr	r3, [r7, #0]
 800dad6:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800dada:	b913      	cbnz	r3, 800dae2 <WM_Exec+0xa2>
 800dadc:	2d00      	cmp	r5, #0
 800dade:	d137      	bne.n	800db50 <WM_Exec+0x110>
 800dae0:	e045      	b.n	800db6e <WM_Exec+0x12e>
 800dae2:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800db90 <WM_Exec+0x150>
 800dae6:	f8b8 3000 	ldrh.w	r3, [r8]
 800daea:	2b00      	cmp	r3, #0
 800daec:	d0f6      	beq.n	800dadc <WM_Exec+0x9c>
 800daee:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 800db98 <WM_Exec+0x158>
 800daf2:	f8d9 4000 	ldr.w	r4, [r9]
 800daf6:	b90c      	cbnz	r4, 800dafc <WM_Exec+0xbc>
 800daf8:	4b21      	ldr	r3, [pc, #132]	; (800db80 <WM_Exec+0x140>)
 800dafa:	681c      	ldr	r4, [r3, #0]
 800dafc:	a802      	add	r0, sp, #8
 800dafe:	f004 f949 	bl	8011d94 <GUI_SaveContext_W>
 800db02:	683b      	ldr	r3, [r7, #0]
 800db04:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 800db08:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 800db0c:	b914      	cbnz	r4, 800db14 <WM_Exec+0xd4>
 800db0e:	2400      	movs	r4, #0
 800db10:	e00d      	b.n	800db2e <WM_Exec+0xee>
 800db12:	b963      	cbnz	r3, 800db2e <WM_Exec+0xee>
 800db14:	4620      	mov	r0, r4
 800db16:	f7ff ff3d 	bl	800d994 <WM__Paint>
 800db1a:	4603      	mov	r3, r0
 800db1c:	4620      	mov	r0, r4
 800db1e:	9301      	str	r3, [sp, #4]
 800db20:	f005 fad4 	bl	80130cc <GUI_ALLOC_h2p>
 800db24:	6944      	ldr	r4, [r0, #20]
 800db26:	9b01      	ldr	r3, [sp, #4]
 800db28:	2c00      	cmp	r4, #0
 800db2a:	d1f2      	bne.n	800db12 <WM_Exec+0xd2>
 800db2c:	e7ef      	b.n	800db0e <WM_Exec+0xce>
 800db2e:	4658      	mov	r0, fp
 800db30:	f8c9 4000 	str.w	r4, [r9]
 800db34:	f004 f8e4 	bl	8011d00 <GUI_SetColor>
 800db38:	4650      	mov	r0, sl
 800db3a:	f004 f8df 	bl	8011cfc <GUI_SetBkColor>
 800db3e:	a802      	add	r0, sp, #8
 800db40:	f004 f932 	bl	8011da8 <GUI_RestoreContext>
 800db44:	f8b8 3000 	ldrh.w	r3, [r8]
 800db48:	2b00      	cmp	r3, #0
 800db4a:	d0c7      	beq.n	800dadc <WM_Exec+0x9c>
 800db4c:	2601      	movs	r6, #1
 800db4e:	e7c1      	b.n	800dad4 <WM_Exec+0x94>
 800db50:	4b10      	ldr	r3, [pc, #64]	; (800db94 <WM_Exec+0x154>)
 800db52:	6818      	ldr	r0, [r3, #0]
 800db54:	b110      	cbz	r0, 800db5c <WM_Exec+0x11c>
 800db56:	6843      	ldr	r3, [r0, #4]
 800db58:	4798      	blx	r3
 800db5a:	e008      	b.n	800db6e <WM_Exec+0x12e>
 800db5c:	f003 f802 	bl	8010b64 <GUI__ManageCache>
 800db60:	e005      	b.n	800db6e <WM_Exec+0x12e>
 800db62:	2601      	movs	r6, #1
 800db64:	e774      	b.n	800da50 <WM_Exec+0x10>
 800db66:	2001      	movs	r0, #1
 800db68:	f002 fffc 	bl	8010b64 <GUI__ManageCache>
 800db6c:	e7b1      	b.n	800dad2 <WM_Exec+0x92>
 800db6e:	4630      	mov	r0, r6
 800db70:	b01f      	add	sp, #124	; 0x7c
 800db72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db76:	bf00      	nop
 800db78:	20019c14 	.word	0x20019c14
 800db7c:	20019438 	.word	0x20019438
 800db80:	20019c24 	.word	0x20019c24
 800db84:	20019c10 	.word	0x20019c10
 800db88:	20019cac 	.word	0x20019cac
 800db8c:	2000016c 	.word	0x2000016c
 800db90:	20019c20 	.word	0x20019c20
 800db94:	20019c40 	.word	0x20019c40
 800db98:	20019454 	.word	0x20019454

0800db9c <WM_Activate>:
 800db9c:	4b02      	ldr	r3, [pc, #8]	; (800dba8 <WM_Activate+0xc>)
 800db9e:	681b      	ldr	r3, [r3, #0]
 800dba0:	2201      	movs	r2, #1
 800dba2:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800dba6:	4770      	bx	lr
 800dba8:	2000016c 	.word	0x2000016c

0800dbac <WM_Deactivate>:
 800dbac:	4b03      	ldr	r3, [pc, #12]	; (800dbbc <WM_Deactivate+0x10>)
 800dbae:	681b      	ldr	r3, [r3, #0]
 800dbb0:	2200      	movs	r2, #0
 800dbb2:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800dbb6:	f002 bdfd 	b.w	80107b4 <LCD_SetClipRectMax>
 800dbba:	bf00      	nop
 800dbbc:	2000016c 	.word	0x2000016c

0800dbc0 <WM_DefaultProc>:
 800dbc0:	b510      	push	{r4, lr}
 800dbc2:	4604      	mov	r4, r0
 800dbc4:	6840      	ldr	r0, [r0, #4]
 800dbc6:	6823      	ldr	r3, [r4, #0]
 800dbc8:	68e1      	ldr	r1, [r4, #12]
 800dbca:	2b17      	cmp	r3, #23
 800dbcc:	d00f      	beq.n	800dbee <WM_DefaultProc+0x2e>
 800dbce:	dc06      	bgt.n	800dbde <WM_DefaultProc+0x1e>
 800dbd0:	2b0e      	cmp	r3, #14
 800dbd2:	d00e      	beq.n	800dbf2 <WM_DefaultProc+0x32>
 800dbd4:	2b14      	cmp	r3, #20
 800dbd6:	d114      	bne.n	800dc02 <WM_DefaultProc+0x42>
 800dbd8:	f7fe fe5c 	bl	800c894 <WM__GetClientRectEx>
 800dbdc:	e011      	b.n	800dc02 <WM_DefaultProc+0x42>
 800dbde:	2b22      	cmp	r3, #34	; 0x22
 800dbe0:	d00c      	beq.n	800dbfc <WM_DefaultProc+0x3c>
 800dbe2:	2b28      	cmp	r3, #40	; 0x28
 800dbe4:	d10d      	bne.n	800dc02 <WM_DefaultProc+0x42>
 800dbe6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dbea:	f7ff bbc6 	b.w	800d37a <WM_InvalidateWindow>
 800dbee:	60e0      	str	r0, [r4, #12]
 800dbf0:	bd10      	pop	{r4, pc}
 800dbf2:	4621      	mov	r1, r4
 800dbf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dbf8:	f007 bf5e 	b.w	8015ab8 <WM_SendToParent>
 800dbfc:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800dc00:	e000      	b.n	800dc04 <WM_DefaultProc+0x44>
 800dc02:	2300      	movs	r3, #0
 800dc04:	60e3      	str	r3, [r4, #12]
 800dc06:	bd10      	pop	{r4, pc}

0800dc08 <_cbBackWin>:
 800dc08:	6803      	ldr	r3, [r0, #0]
 800dc0a:	2b0e      	cmp	r3, #14
 800dc0c:	b510      	push	{r4, lr}
 800dc0e:	4604      	mov	r4, r0
 800dc10:	d002      	beq.n	800dc18 <_cbBackWin+0x10>
 800dc12:	2b0f      	cmp	r3, #15
 800dc14:	d009      	beq.n	800dc2a <_cbBackWin+0x22>
 800dc16:	e020      	b.n	800dc5a <_cbBackWin+0x52>
 800dc18:	68c3      	ldr	r3, [r0, #12]
 800dc1a:	685a      	ldr	r2, [r3, #4]
 800dc1c:	2a01      	cmp	r2, #1
 800dc1e:	d121      	bne.n	800dc64 <_cbBackWin+0x5c>
 800dc20:	6818      	ldr	r0, [r3, #0]
 800dc22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dc26:	f004 b9a9 	b.w	8011f7c <GUI_StoreKey>
 800dc2a:	4a0f      	ldr	r2, [pc, #60]	; (800dc68 <_cbBackWin+0x60>)
 800dc2c:	6843      	ldr	r3, [r0, #4]
 800dc2e:	6811      	ldr	r1, [r2, #0]
 800dc30:	428b      	cmp	r3, r1
 800dc32:	d006      	beq.n	800dc42 <_cbBackWin+0x3a>
 800dc34:	6852      	ldr	r2, [r2, #4]
 800dc36:	4293      	cmp	r3, r2
 800dc38:	bf14      	ite	ne
 800dc3a:	f04f 33ff 	movne.w	r3, #4294967295
 800dc3e:	2301      	moveq	r3, #1
 800dc40:	e000      	b.n	800dc44 <_cbBackWin+0x3c>
 800dc42:	2300      	movs	r3, #0
 800dc44:	4a09      	ldr	r2, [pc, #36]	; (800dc6c <_cbBackWin+0x64>)
 800dc46:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800dc4a:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800dc4e:	4298      	cmp	r0, r3
 800dc50:	d003      	beq.n	800dc5a <_cbBackWin+0x52>
 800dc52:	f004 f853 	bl	8011cfc <GUI_SetBkColor>
 800dc56:	f004 fe13 	bl	8012880 <GUI_Clear>
 800dc5a:	4620      	mov	r0, r4
 800dc5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dc60:	f7ff bfae 	b.w	800dbc0 <WM_DefaultProc>
 800dc64:	bd10      	pop	{r4, pc}
 800dc66:	bf00      	nop
 800dc68:	20019c08 	.word	0x20019c08
 800dc6c:	20019c34 	.word	0x20019c34

0800dc70 <WM_Init>:
 800dc70:	b530      	push	{r4, r5, lr}
 800dc72:	4b2b      	ldr	r3, [pc, #172]	; (800dd20 <WM_Init+0xb0>)
 800dc74:	7818      	ldrb	r0, [r3, #0]
 800dc76:	b085      	sub	sp, #20
 800dc78:	461d      	mov	r5, r3
 800dc7a:	2800      	cmp	r0, #0
 800dc7c:	d14d      	bne.n	800dd1a <WM_Init+0xaa>
 800dc7e:	4b29      	ldr	r3, [pc, #164]	; (800dd24 <WM_Init+0xb4>)
 800dc80:	6018      	str	r0, [r3, #0]
 800dc82:	4b29      	ldr	r3, [pc, #164]	; (800dd28 <WM_Init+0xb8>)
 800dc84:	6018      	str	r0, [r3, #0]
 800dc86:	4b29      	ldr	r3, [pc, #164]	; (800dd2c <WM_Init+0xbc>)
 800dc88:	681b      	ldr	r3, [r3, #0]
 800dc8a:	6458      	str	r0, [r3, #68]	; 0x44
 800dc8c:	4b28      	ldr	r3, [pc, #160]	; (800dd30 <WM_Init+0xc0>)
 800dc8e:	8018      	strh	r0, [r3, #0]
 800dc90:	4b28      	ldr	r3, [pc, #160]	; (800dd34 <WM_Init+0xc4>)
 800dc92:	4604      	mov	r4, r0
 800dc94:	8018      	strh	r0, [r3, #0]
 800dc96:	4620      	mov	r0, r4
 800dc98:	f004 fcc8 	bl	801262c <GUI_DEVICE__GetpDriver>
 800dc9c:	b1c0      	cbz	r0, 800dcd0 <WM_Init+0x60>
 800dc9e:	f04f 32ff 	mov.w	r2, #4294967295
 800dca2:	2302      	movs	r3, #2
 800dca4:	e88d 000c 	stmia.w	sp, {r2, r3}
 800dca8:	2000      	movs	r0, #0
 800dcaa:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800dcae:	4b22      	ldr	r3, [pc, #136]	; (800dd38 <WM_Init+0xc8>)
 800dcb0:	9302      	str	r3, [sp, #8]
 800dcb2:	9003      	str	r0, [sp, #12]
 800dcb4:	4613      	mov	r3, r2
 800dcb6:	4601      	mov	r1, r0
 800dcb8:	f7ff fba0 	bl	800d3fc <WM_CreateWindowAsChild>
 800dcbc:	4b1f      	ldr	r3, [pc, #124]	; (800dd3c <WM_Init+0xcc>)
 800dcbe:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800dcc2:	4b1f      	ldr	r3, [pc, #124]	; (800dd40 <WM_Init+0xd0>)
 800dcc4:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800dcc8:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800dccc:	f7ff fb55 	bl	800d37a <WM_InvalidateWindow>
 800dcd0:	3401      	adds	r4, #1
 800dcd2:	2c02      	cmp	r4, #2
 800dcd4:	d1df      	bne.n	800dc96 <WM_Init+0x26>
 800dcd6:	481b      	ldr	r0, [pc, #108]	; (800dd44 <WM_Init+0xd4>)
 800dcd8:	f007 ff62 	bl	8015ba0 <WM__AddCriticalHandle>
 800dcdc:	481a      	ldr	r0, [pc, #104]	; (800dd48 <WM_Init+0xd8>)
 800dcde:	f007 ff5f 	bl	8015ba0 <WM__AddCriticalHandle>
 800dce2:	481a      	ldr	r0, [pc, #104]	; (800dd4c <WM_Init+0xdc>)
 800dce4:	f007 ff5c 	bl	8015ba0 <WM__AddCriticalHandle>
 800dce8:	4819      	ldr	r0, [pc, #100]	; (800dd50 <WM_Init+0xe0>)
 800dcea:	f007 ff59 	bl	8015ba0 <WM__AddCriticalHandle>
 800dcee:	4819      	ldr	r0, [pc, #100]	; (800dd54 <WM_Init+0xe4>)
 800dcf0:	f007 ff56 	bl	8015ba0 <WM__AddCriticalHandle>
 800dcf4:	4818      	ldr	r0, [pc, #96]	; (800dd58 <WM_Init+0xe8>)
 800dcf6:	f007 ff53 	bl	8015ba0 <WM__AddCriticalHandle>
 800dcfa:	4b10      	ldr	r3, [pc, #64]	; (800dd3c <WM_Init+0xcc>)
 800dcfc:	6818      	ldr	r0, [r3, #0]
 800dcfe:	f7ff fb5d 	bl	800d3bc <WM_SelectWindow>
 800dd02:	f7ff ff4b 	bl	800db9c <WM_Activate>
 800dd06:	2301      	movs	r3, #1
 800dd08:	702b      	strb	r3, [r5, #0]
 800dd0a:	4814      	ldr	r0, [pc, #80]	; (800dd5c <WM_Init+0xec>)
 800dd0c:	4b14      	ldr	r3, [pc, #80]	; (800dd60 <WM_Init+0xf0>)
 800dd0e:	6003      	str	r3, [r0, #0]
 800dd10:	b005      	add	sp, #20
 800dd12:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dd16:	f004 bdc3 	b.w	80128a0 <GUI__RegisterExit>
 800dd1a:	b005      	add	sp, #20
 800dd1c:	bd30      	pop	{r4, r5, pc}
 800dd1e:	bf00      	nop
 800dd20:	20019460 	.word	0x20019460
 800dd24:	20019c24 	.word	0x20019c24
 800dd28:	20019454 	.word	0x20019454
 800dd2c:	2000016c 	.word	0x2000016c
 800dd30:	20019c20 	.word	0x20019c20
 800dd34:	20019c00 	.word	0x20019c00
 800dd38:	0800dc09 	.word	0x0800dc09
 800dd3c:	20019c08 	.word	0x20019c08
 800dd40:	20019c34 	.word	0x20019c34
 800dd44:	20019d90 	.word	0x20019d90
 800dd48:	20019d80 	.word	0x20019d80
 800dd4c:	20019d70 	.word	0x20019d70
 800dd50:	20019d98 	.word	0x20019d98
 800dd54:	20019d88 	.word	0x20019d88
 800dd58:	20019d78 	.word	0x20019d78
 800dd5c:	20019458 	.word	0x20019458
 800dd60:	0800ca45 	.word	0x0800ca45

0800dd64 <_CreateStaticDevice>:
 800dd64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd68:	b087      	sub	sp, #28
 800dd6a:	4604      	mov	r4, r0
 800dd6c:	f005 f9b8 	bl	80130e0 <GUI_ALLOC_LockH>
 800dd70:	af06      	add	r7, sp, #24
 800dd72:	f8b0 8000 	ldrh.w	r8, [r0]
 800dd76:	8886      	ldrh	r6, [r0, #4]
 800dd78:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 800dd7c:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 800dd80:	f847 0d04 	str.w	r0, [r7, #-4]!
 800dd84:	fa0f f888 	sxth.w	r8, r8
 800dd88:	b236      	sxth	r6, r6
 800dd8a:	ebc8 0606 	rsb	r6, r8, r6
 800dd8e:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 800dd92:	3601      	adds	r6, #1
 800dd94:	4638      	mov	r0, r7
 800dd96:	fa0f f989 	sxth.w	r9, r9
 800dd9a:	fa0f f58b 	sxth.w	r5, fp
 800dd9e:	f005 f9ad 	bl	80130fc <GUI_ALLOC_UnlockH>
 800dda2:	ebc9 0505 	rsb	r5, r9, r5
 800dda6:	2e00      	cmp	r6, #0
 800dda8:	f105 0501 	add.w	r5, r5, #1
 800ddac:	dd4d      	ble.n	800de4a <_CreateStaticDevice+0xe6>
 800ddae:	2d00      	cmp	r5, #0
 800ddb0:	dd4b      	ble.n	800de4a <_CreateStaticDevice+0xe6>
 800ddb2:	f1ba 0f00 	cmp.w	sl, #0
 800ddb6:	d04a      	beq.n	800de4e <_CreateStaticDevice+0xea>
 800ddb8:	4650      	mov	r0, sl
 800ddba:	f005 f991 	bl	80130e0 <GUI_ALLOC_LockH>
 800ddbe:	ab06      	add	r3, sp, #24
 800ddc0:	8886      	ldrh	r6, [r0, #4]
 800ddc2:	f843 0d08 	str.w	r0, [r3, #-8]!
 800ddc6:	88c5      	ldrh	r5, [r0, #6]
 800ddc8:	b236      	sxth	r6, r6
 800ddca:	4618      	mov	r0, r3
 800ddcc:	f005 f996 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ddd0:	4546      	cmp	r6, r8
 800ddd2:	d102      	bne.n	800ddda <_CreateStaticDevice+0x76>
 800ddd4:	b22d      	sxth	r5, r5
 800ddd6:	454d      	cmp	r5, r9
 800ddd8:	d032      	beq.n	800de40 <_CreateStaticDevice+0xdc>
 800ddda:	4650      	mov	r0, sl
 800dddc:	4641      	mov	r1, r8
 800ddde:	464a      	mov	r2, r9
 800dde0:	f000 f886 	bl	800def0 <GUI_MEMDEV_SetOrg>
 800dde4:	e02c      	b.n	800de40 <_CreateStaticDevice+0xdc>
 800dde6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800dde8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ddec:	6283      	str	r3, [r0, #40]	; 0x28
 800ddee:	4638      	mov	r0, r7
 800ddf0:	f005 f984 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ddf4:	4640      	mov	r0, r8
 800ddf6:	f000 ff93 	bl	800ed20 <GUI_MEMDEV_Select>
 800ddfa:	4607      	mov	r7, r0
 800ddfc:	4650      	mov	r0, sl
 800ddfe:	f003 ff81 	bl	8011d04 <GUI__AlphaPreserveTrans>
 800de02:	4640      	mov	r0, r8
 800de04:	f000 f8b4 	bl	800df70 <GUI_MEMDEV_GetDataPtr>
 800de08:	4b2d      	ldr	r3, [pc, #180]	; (800dec0 <_CreateStaticDevice+0x15c>)
 800de0a:	fb05 f206 	mul.w	r2, r5, r6
 800de0e:	7819      	ldrb	r1, [r3, #0]
 800de10:	4d2c      	ldr	r5, [pc, #176]	; (800dec4 <_CreateStaticDevice+0x160>)
 800de12:	4e2d      	ldr	r6, [pc, #180]	; (800dec8 <_CreateStaticDevice+0x164>)
 800de14:	0092      	lsls	r2, r2, #2
 800de16:	f002 fdbd 	bl	8010994 <GUI__memset>
 800de1a:	4620      	mov	r0, r4
 800de1c:	f8d5 8000 	ldr.w	r8, [r5]
 800de20:	6034      	str	r4, [r6, #0]
 800de22:	f7fe fcbf 	bl	800c7a4 <WM_GetWindowOrgX>
 800de26:	6028      	str	r0, [r5, #0]
 800de28:	4620      	mov	r0, r4
 800de2a:	f7ff fd6b 	bl	800d904 <WM__Paint1>
 800de2e:	2000      	movs	r0, #0
 800de30:	f8c5 8000 	str.w	r8, [r5]
 800de34:	6030      	str	r0, [r6, #0]
 800de36:	f003 ff65 	bl	8011d04 <GUI__AlphaPreserveTrans>
 800de3a:	4638      	mov	r0, r7
 800de3c:	f000 ff70 	bl	800ed20 <GUI_MEMDEV_Select>
 800de40:	4620      	mov	r0, r4
 800de42:	f005 f943 	bl	80130cc <GUI_ALLOC_h2p>
 800de46:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800de48:	e037      	b.n	800deba <_CreateStaticDevice+0x156>
 800de4a:	2000      	movs	r0, #0
 800de4c:	e035      	b.n	800deba <_CreateStaticDevice+0x156>
 800de4e:	f7fe fd07 	bl	800c860 <WM_GetDesktopWindow>
 800de52:	4284      	cmp	r4, r0
 800de54:	d112      	bne.n	800de7c <_CreateStaticDevice+0x118>
 800de56:	f002 f947 	bl	80100e8 <LCD_GetXSize>
 800de5a:	4682      	mov	sl, r0
 800de5c:	f002 f94c 	bl	80100f8 <LCD_GetYSize>
 800de60:	4556      	cmp	r6, sl
 800de62:	dc02      	bgt.n	800de6a <_CreateStaticDevice+0x106>
 800de64:	4285      	cmp	r5, r0
 800de66:	dd09      	ble.n	800de7c <_CreateStaticDevice+0x118>
 800de68:	e000      	b.n	800de6c <_CreateStaticDevice+0x108>
 800de6a:	4656      	mov	r6, sl
 800de6c:	4285      	cmp	r5, r0
 800de6e:	bfa8      	it	ge
 800de70:	4605      	movge	r5, r0
 800de72:	4631      	mov	r1, r6
 800de74:	4620      	mov	r0, r4
 800de76:	462a      	mov	r2, r5
 800de78:	f7fe f927 	bl	800c0ca <WM_SetSize>
 800de7c:	4b13      	ldr	r3, [pc, #76]	; (800decc <_CreateStaticDevice+0x168>)
 800de7e:	9301      	str	r3, [sp, #4]
 800de80:	f04f 0a01 	mov.w	sl, #1
 800de84:	4b12      	ldr	r3, [pc, #72]	; (800ded0 <_CreateStaticDevice+0x16c>)
 800de86:	9302      	str	r3, [sp, #8]
 800de88:	4640      	mov	r0, r8
 800de8a:	4649      	mov	r1, r9
 800de8c:	4632      	mov	r2, r6
 800de8e:	462b      	mov	r3, r5
 800de90:	f8cd a000 	str.w	sl, [sp]
 800de94:	f000 fe4e 	bl	800eb34 <GUI_MEMDEV__CreateFixed>
 800de98:	4680      	mov	r8, r0
 800de9a:	4620      	mov	r0, r4
 800de9c:	f005 f920 	bl	80130e0 <GUI_ALLOC_LockH>
 800dea0:	9005      	str	r0, [sp, #20]
 800dea2:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 800dea6:	f1b8 0f00 	cmp.w	r8, #0
 800deaa:	d19c      	bne.n	800dde6 <_CreateStaticDevice+0x82>
 800deac:	4638      	mov	r0, r7
 800deae:	f005 f925 	bl	80130fc <GUI_ALLOC_UnlockH>
 800deb2:	4620      	mov	r0, r4
 800deb4:	f7ff fd26 	bl	800d904 <WM__Paint1>
 800deb8:	4640      	mov	r0, r8
 800deba:	b007      	add	sp, #28
 800debc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dec0:	20000134 	.word	0x20000134
 800dec4:	20019c78 	.word	0x20019c78
 800dec8:	20019c4c 	.word	0x20019c4c
 800decc:	0801b684 	.word	0x0801b684
 800ded0:	08020fe8 	.word	0x08020fe8

0800ded4 <GUI_MEMDEV_Paint1Static>:
 800ded4:	b538      	push	{r3, r4, r5, lr}
 800ded6:	4605      	mov	r5, r0
 800ded8:	2405      	movs	r4, #5
 800deda:	4628      	mov	r0, r5
 800dedc:	f7ff ff42 	bl	800dd64 <_CreateStaticDevice>
 800dee0:	b910      	cbnz	r0, 800dee8 <GUI_MEMDEV_Paint1Static+0x14>
 800dee2:	3c01      	subs	r4, #1
 800dee4:	d1f9      	bne.n	800deda <GUI_MEMDEV_Paint1Static+0x6>
 800dee6:	bd38      	pop	{r3, r4, r5, pc}
 800dee8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800deec:	f008 bb84 	b.w	80165f8 <GUI_MEMDEV_Write>

0800def0 <GUI_MEMDEV_SetOrg>:
 800def0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800def2:	460d      	mov	r5, r1
 800def4:	4614      	mov	r4, r2
 800def6:	b918      	cbnz	r0, 800df00 <GUI_MEMDEV_SetOrg+0x10>
 800def8:	4b11      	ldr	r3, [pc, #68]	; (800df40 <GUI_MEMDEV_SetOrg+0x50>)
 800defa:	681b      	ldr	r3, [r3, #0]
 800defc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800defe:	b1e8      	cbz	r0, 800df3c <GUI_MEMDEV_SetOrg+0x4c>
 800df00:	f005 f8ee 	bl	80130e0 <GUI_ALLOC_LockH>
 800df04:	b2a4      	uxth	r4, r4
 800df06:	b2ad      	uxth	r5, r5
 800df08:	80c4      	strh	r4, [r0, #6]
 800df0a:	8085      	strh	r5, [r0, #4]
 800df0c:	9000      	str	r0, [sp, #0]
 800df0e:	f002 fc51 	bl	80107b4 <LCD_SetClipRectMax>
 800df12:	9b00      	ldr	r3, [sp, #0]
 800df14:	6958      	ldr	r0, [r3, #20]
 800df16:	b170      	cbz	r0, 800df36 <GUI_MEMDEV_SetOrg+0x46>
 800df18:	f005 f8e2 	bl	80130e0 <GUI_ALLOC_LockH>
 800df1c:	9b00      	ldr	r3, [sp, #0]
 800df1e:	9001      	str	r0, [sp, #4]
 800df20:	891a      	ldrh	r2, [r3, #8]
 800df22:	895b      	ldrh	r3, [r3, #10]
 800df24:	8082      	strh	r2, [r0, #4]
 800df26:	80c3      	strh	r3, [r0, #6]
 800df28:	b112      	cbz	r2, 800df30 <GUI_MEMDEV_SetOrg+0x40>
 800df2a:	b10b      	cbz	r3, 800df30 <GUI_MEMDEV_SetOrg+0x40>
 800df2c:	8005      	strh	r5, [r0, #0]
 800df2e:	8044      	strh	r4, [r0, #2]
 800df30:	a801      	add	r0, sp, #4
 800df32:	f005 f8e3 	bl	80130fc <GUI_ALLOC_UnlockH>
 800df36:	4668      	mov	r0, sp
 800df38:	f005 f8e0 	bl	80130fc <GUI_ALLOC_UnlockH>
 800df3c:	b003      	add	sp, #12
 800df3e:	bd30      	pop	{r4, r5, pc}
 800df40:	2000016c 	.word	0x2000016c

0800df44 <GUI_MEMDEV_GetYSize>:
 800df44:	b513      	push	{r0, r1, r4, lr}
 800df46:	b920      	cbnz	r0, 800df52 <GUI_MEMDEV_GetYSize+0xe>
 800df48:	4b08      	ldr	r3, [pc, #32]	; (800df6c <GUI_MEMDEV_GetYSize+0x28>)
 800df4a:	681b      	ldr	r3, [r3, #0]
 800df4c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800df4e:	4604      	mov	r4, r0
 800df50:	b148      	cbz	r0, 800df66 <GUI_MEMDEV_GetYSize+0x22>
 800df52:	f005 f8c5 	bl	80130e0 <GUI_ALLOC_LockH>
 800df56:	ab02      	add	r3, sp, #8
 800df58:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 800df5c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800df60:	4618      	mov	r0, r3
 800df62:	f005 f8cb 	bl	80130fc <GUI_ALLOC_UnlockH>
 800df66:	4620      	mov	r0, r4
 800df68:	b002      	add	sp, #8
 800df6a:	bd10      	pop	{r4, pc}
 800df6c:	2000016c 	.word	0x2000016c

0800df70 <GUI_MEMDEV_GetDataPtr>:
 800df70:	b513      	push	{r0, r1, r4, lr}
 800df72:	b150      	cbz	r0, 800df8a <GUI_MEMDEV_GetDataPtr+0x1a>
 800df74:	f005 f8b4 	bl	80130e0 <GUI_ALLOC_LockH>
 800df78:	4604      	mov	r4, r0
 800df7a:	a802      	add	r0, sp, #8
 800df7c:	f840 4d04 	str.w	r4, [r0, #-4]!
 800df80:	f005 f8bc 	bl	80130fc <GUI_ALLOC_UnlockH>
 800df84:	f104 0018 	add.w	r0, r4, #24
 800df88:	e7ff      	b.n	800df8a <GUI_MEMDEV_GetDataPtr+0x1a>
 800df8a:	b002      	add	sp, #8
 800df8c:	bd10      	pop	{r4, pc}
	...

0800df90 <GUI_MEMDEV_Draw>:
 800df90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df94:	461e      	mov	r6, r3
 800df96:	b089      	sub	sp, #36	; 0x24
 800df98:	4b4e      	ldr	r3, [pc, #312]	; (800e0d4 <GUI_MEMDEV_Draw+0x144>)
 800df9a:	9204      	str	r2, [sp, #16]
 800df9c:	681a      	ldr	r2, [r3, #0]
 800df9e:	9103      	str	r1, [sp, #12]
 800dfa0:	7c54      	ldrb	r4, [r2, #17]
 800dfa2:	4a4d      	ldr	r2, [pc, #308]	; (800e0d8 <GUI_MEMDEV_Draw+0x148>)
 800dfa4:	5712      	ldrsb	r2, [r2, r4]
 800dfa6:	2a01      	cmp	r2, #1
 800dfa8:	4605      	mov	r5, r0
 800dfaa:	469b      	mov	fp, r3
 800dfac:	4620      	mov	r0, r4
 800dfae:	dd06      	ble.n	800dfbe <GUI_MEMDEV_Draw+0x2e>
 800dfb0:	f002 f888 	bl	80100c4 <LCD_GetXSizeEx>
 800dfb4:	4607      	mov	r7, r0
 800dfb6:	4620      	mov	r0, r4
 800dfb8:	f002 f887 	bl	80100ca <LCD_GetYSizeEx>
 800dfbc:	e005      	b.n	800dfca <GUI_MEMDEV_Draw+0x3a>
 800dfbe:	f002 f887 	bl	80100d0 <LCD_GetVXSizeEx>
 800dfc2:	4607      	mov	r7, r0
 800dfc4:	4620      	mov	r0, r4
 800dfc6:	f002 f886 	bl	80100d6 <LCD_GetVYSizeEx>
 800dfca:	4604      	mov	r4, r0
 800dfcc:	b325      	cbz	r5, 800e018 <GUI_MEMDEV_Draw+0x88>
 800dfce:	a806      	add	r0, sp, #24
 800dfd0:	a907      	add	r1, sp, #28
 800dfd2:	f004 f8fb 	bl	80121cc <GUI_GetOrg>
 800dfd6:	9b06      	ldr	r3, [sp, #24]
 800dfd8:	f9b5 a000 	ldrsh.w	sl, [r5]
 800dfdc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800dfe0:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 800dfe4:	441f      	add	r7, r3
 800dfe6:	9b07      	ldr	r3, [sp, #28]
 800dfe8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800dfec:	3f01      	subs	r7, #1
 800dfee:	4297      	cmp	r7, r2
 800dff0:	bfd4      	ite	le
 800dff2:	ebca 0707 	rsble	r7, sl, r7
 800dff6:	ebca 0702 	rsbgt	r7, sl, r2
 800dffa:	441c      	add	r4, r3
 800dffc:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800e000:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 800e004:	3c01      	subs	r4, #1
 800e006:	4294      	cmp	r4, r2
 800e008:	bfd4      	ite	le
 800e00a:	ebc8 0404 	rsble	r4, r8, r4
 800e00e:	ebc8 0402 	rsbgt	r4, r8, r2
 800e012:	3701      	adds	r7, #1
 800e014:	3401      	adds	r4, #1
 800e016:	e001      	b.n	800e01c <GUI_MEMDEV_Draw+0x8c>
 800e018:	46a8      	mov	r8, r5
 800e01a:	46aa      	mov	sl, r5
 800e01c:	b906      	cbnz	r6, 800e020 <GUI_MEMDEV_Draw+0x90>
 800e01e:	4266      	negs	r6, r4
 800e020:	2f00      	cmp	r7, #0
 800e022:	dd52      	ble.n	800e0ca <GUI_MEMDEV_Draw+0x13a>
 800e024:	2c00      	cmp	r4, #0
 800e026:	dd50      	ble.n	800e0ca <GUI_MEMDEV_Draw+0x13a>
 800e028:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e02a:	9300      	str	r3, [sp, #0]
 800e02c:	4650      	mov	r0, sl
 800e02e:	4641      	mov	r1, r8
 800e030:	463a      	mov	r2, r7
 800e032:	4633      	mov	r3, r6
 800e034:	f000 fe38 	bl	800eca8 <GUI_MEMDEV_CreateEx>
 800e038:	4605      	mov	r5, r0
 800e03a:	b920      	cbnz	r0, 800e046 <GUI_MEMDEV_Draw+0xb6>
 800e03c:	9804      	ldr	r0, [sp, #16]
 800e03e:	9b03      	ldr	r3, [sp, #12]
 800e040:	4798      	blx	r3
 800e042:	2001      	movs	r0, #1
 800e044:	e042      	b.n	800e0cc <GUI_MEMDEV_Draw+0x13c>
 800e046:	f7ff ff7d 	bl	800df44 <GUI_MEMDEV_GetYSize>
 800e04a:	42a0      	cmp	r0, r4
 800e04c:	4606      	mov	r6, r0
 800e04e:	d006      	beq.n	800e05e <GUI_MEMDEV_Draw+0xce>
 800e050:	f8db 3000 	ldr.w	r3, [fp]
 800e054:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800e056:	b110      	cbz	r0, 800e05e <GUI_MEMDEV_Draw+0xce>
 800e058:	2132      	movs	r1, #50	; 0x32
 800e05a:	f007 fa7b 	bl	8015554 <WM__SendMessageNoPara>
 800e05e:	4628      	mov	r0, r5
 800e060:	f000 fe5e 	bl	800ed20 <GUI_MEMDEV_Select>
 800e064:	4273      	negs	r3, r6
 800e066:	9305      	str	r3, [sp, #20]
 800e068:	46a1      	mov	r9, r4
 800e06a:	2700      	movs	r7, #0
 800e06c:	45b1      	cmp	r9, r6
 800e06e:	da03      	bge.n	800e078 <GUI_MEMDEV_Draw+0xe8>
 800e070:	4628      	mov	r0, r5
 800e072:	4649      	mov	r1, r9
 800e074:	f008 fbc0 	bl	80167f8 <GUI_MEMDEV_ReduceYSize>
 800e078:	b147      	cbz	r7, 800e08c <GUI_MEMDEV_Draw+0xfc>
 800e07a:	4628      	mov	r0, r5
 800e07c:	4651      	mov	r1, sl
 800e07e:	eb07 0208 	add.w	r2, r7, r8
 800e082:	f7ff ff35 	bl	800def0 <GUI_MEMDEV_SetOrg>
 800e086:	4628      	mov	r0, r5
 800e088:	f008 fbcc 	bl	8016824 <GUI_MEMDEV_Clear>
 800e08c:	9b03      	ldr	r3, [sp, #12]
 800e08e:	9804      	ldr	r0, [sp, #16]
 800e090:	4798      	blx	r3
 800e092:	4b12      	ldr	r3, [pc, #72]	; (800e0dc <GUI_MEMDEV_Draw+0x14c>)
 800e094:	681b      	ldr	r3, [r3, #0]
 800e096:	b10b      	cbz	r3, 800e09c <GUI_MEMDEV_Draw+0x10c>
 800e098:	2000      	movs	r0, #0
 800e09a:	4798      	blx	r3
 800e09c:	4628      	mov	r0, r5
 800e09e:	f000 feb7 	bl	800ee10 <GUI_MEMDEV_CopyToLCD>
 800e0a2:	4437      	add	r7, r6
 800e0a4:	9b05      	ldr	r3, [sp, #20]
 800e0a6:	42a7      	cmp	r7, r4
 800e0a8:	4499      	add	r9, r3
 800e0aa:	dbdf      	blt.n	800e06c <GUI_MEMDEV_Draw+0xdc>
 800e0ac:	4628      	mov	r0, r5
 800e0ae:	f000 fdd9 	bl	800ec64 <GUI_MEMDEV_Delete>
 800e0b2:	2000      	movs	r0, #0
 800e0b4:	f000 fe34 	bl	800ed20 <GUI_MEMDEV_Select>
 800e0b8:	42a6      	cmp	r6, r4
 800e0ba:	d006      	beq.n	800e0ca <GUI_MEMDEV_Draw+0x13a>
 800e0bc:	f8db 3000 	ldr.w	r3, [fp]
 800e0c0:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800e0c2:	b110      	cbz	r0, 800e0ca <GUI_MEMDEV_Draw+0x13a>
 800e0c4:	2133      	movs	r1, #51	; 0x33
 800e0c6:	f007 fa45 	bl	8015554 <WM__SendMessageNoPara>
 800e0ca:	2000      	movs	r0, #0
 800e0cc:	b009      	add	sp, #36	; 0x24
 800e0ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e0d2:	bf00      	nop
 800e0d4:	2000016c 	.word	0x2000016c
 800e0d8:	20019c70 	.word	0x20019c70
 800e0dc:	20019464 	.word	0x20019464

0800e0e0 <_GetDevData>:
 800e0e0:	4802      	ldr	r0, [pc, #8]	; (800e0ec <_GetDevData+0xc>)
 800e0e2:	2901      	cmp	r1, #1
 800e0e4:	bf18      	it	ne
 800e0e6:	2000      	movne	r0, #0
 800e0e8:	4770      	bx	lr
 800e0ea:	bf00      	nop
 800e0ec:	0801b684 	.word	0x0801b684

0800e0f0 <_GetDevFunc>:
 800e0f0:	4802      	ldr	r0, [pc, #8]	; (800e0fc <_GetDevFunc+0xc>)
 800e0f2:	2916      	cmp	r1, #22
 800e0f4:	bf18      	it	ne
 800e0f6:	2000      	movne	r0, #0
 800e0f8:	4770      	bx	lr
 800e0fa:	bf00      	nop
 800e0fc:	08016409 	.word	0x08016409

0800e100 <_GetDevProp>:
 800e100:	2908      	cmp	r1, #8
 800e102:	bf0c      	ite	eq
 800e104:	2020      	moveq	r0, #32
 800e106:	2000      	movne	r0, #0
 800e108:	4770      	bx	lr

0800e10a <_SetOrg>:
 800e10a:	b508      	push	{r3, lr}
 800e10c:	6800      	ldr	r0, [r0, #0]
 800e10e:	68c3      	ldr	r3, [r0, #12]
 800e110:	6a1b      	ldr	r3, [r3, #32]
 800e112:	4798      	blx	r3
 800e114:	bd08      	pop	{r3, pc}

0800e116 <_GetRect>:
 800e116:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e118:	6880      	ldr	r0, [r0, #8]
 800e11a:	460c      	mov	r4, r1
 800e11c:	f004 ffe0 	bl	80130e0 <GUI_ALLOC_LockH>
 800e120:	4603      	mov	r3, r0
 800e122:	a802      	add	r0, sp, #8
 800e124:	8899      	ldrh	r1, [r3, #4]
 800e126:	88da      	ldrh	r2, [r3, #6]
 800e128:	891d      	ldrh	r5, [r3, #8]
 800e12a:	f840 3d04 	str.w	r3, [r0, #-4]!
 800e12e:	895b      	ldrh	r3, [r3, #10]
 800e130:	8021      	strh	r1, [r4, #0]
 800e132:	8062      	strh	r2, [r4, #2]
 800e134:	4429      	add	r1, r5
 800e136:	441a      	add	r2, r3
 800e138:	3901      	subs	r1, #1
 800e13a:	3a01      	subs	r2, #1
 800e13c:	80a1      	strh	r1, [r4, #4]
 800e13e:	80e2      	strh	r2, [r4, #6]
 800e140:	f004 ffdc 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e144:	b003      	add	sp, #12
 800e146:	bd30      	pop	{r4, r5, pc}

0800e148 <_XY2PTR>:
 800e148:	4b0e      	ldr	r3, [pc, #56]	; (800e184 <_XY2PTR+0x3c>)
 800e14a:	681b      	ldr	r3, [r3, #0]
 800e14c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e14e:	4605      	mov	r5, r0
 800e150:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e152:	460e      	mov	r6, r1
 800e154:	f004 ffc4 	bl	80130e0 <GUI_ALLOC_LockH>
 800e158:	4603      	mov	r3, r0
 800e15a:	a802      	add	r0, sp, #8
 800e15c:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 800e160:	f840 3d04 	str.w	r3, [r0, #-4]!
 800e164:	f103 0118 	add.w	r1, r3, #24
 800e168:	1b36      	subs	r6, r6, r4
 800e16a:	68dc      	ldr	r4, [r3, #12]
 800e16c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800e170:	fb04 1406 	mla	r4, r4, r6, r1
 800e174:	1aed      	subs	r5, r5, r3
 800e176:	f004 ffc1 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e17a:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800e17e:	4620      	mov	r0, r4
 800e180:	b002      	add	sp, #8
 800e182:	bd70      	pop	{r4, r5, r6, pc}
 800e184:	2000016c 	.word	0x2000016c

0800e188 <_GetPixelIndex>:
 800e188:	b508      	push	{r3, lr}
 800e18a:	4608      	mov	r0, r1
 800e18c:	4611      	mov	r1, r2
 800e18e:	f7ff ffdb 	bl	800e148 <_XY2PTR>
 800e192:	6800      	ldr	r0, [r0, #0]
 800e194:	bd08      	pop	{r3, pc}
	...

0800e198 <_XorPixel>:
 800e198:	4b15      	ldr	r3, [pc, #84]	; (800e1f0 <_XorPixel+0x58>)
 800e19a:	681b      	ldr	r3, [r3, #0]
 800e19c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e19e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e1a0:	4615      	mov	r5, r2
 800e1a2:	460e      	mov	r6, r1
 800e1a4:	f004 ff9c 	bl	80130e0 <GUI_ALLOC_LockH>
 800e1a8:	4629      	mov	r1, r5
 800e1aa:	9000      	str	r0, [sp, #0]
 800e1ac:	4630      	mov	r0, r6
 800e1ae:	f7ff ffcb 	bl	800e148 <_XY2PTR>
 800e1b2:	9b00      	ldr	r3, [sp, #0]
 800e1b4:	681b      	ldr	r3, [r3, #0]
 800e1b6:	691b      	ldr	r3, [r3, #16]
 800e1b8:	4604      	mov	r4, r0
 800e1ba:	689b      	ldr	r3, [r3, #8]
 800e1bc:	4798      	blx	r3
 800e1be:	6823      	ldr	r3, [r4, #0]
 800e1c0:	4058      	eors	r0, r3
 800e1c2:	9b00      	ldr	r3, [sp, #0]
 800e1c4:	6020      	str	r0, [r4, #0]
 800e1c6:	6958      	ldr	r0, [r3, #20]
 800e1c8:	b160      	cbz	r0, 800e1e4 <_XorPixel+0x4c>
 800e1ca:	f004 ff89 	bl	80130e0 <GUI_ALLOC_LockH>
 800e1ce:	ac02      	add	r4, sp, #8
 800e1d0:	6883      	ldr	r3, [r0, #8]
 800e1d2:	f844 0d04 	str.w	r0, [r4, #-4]!
 800e1d6:	681b      	ldr	r3, [r3, #0]
 800e1d8:	4631      	mov	r1, r6
 800e1da:	462a      	mov	r2, r5
 800e1dc:	4798      	blx	r3
 800e1de:	4620      	mov	r0, r4
 800e1e0:	f004 ff8c 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e1e4:	4668      	mov	r0, sp
 800e1e6:	f004 ff89 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e1ea:	b002      	add	sp, #8
 800e1ec:	bd70      	pop	{r4, r5, r6, pc}
 800e1ee:	bf00      	nop
 800e1f0:	2000016c 	.word	0x2000016c

0800e1f4 <_SetPixelIndex>:
 800e1f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e1f6:	461c      	mov	r4, r3
 800e1f8:	4b10      	ldr	r3, [pc, #64]	; (800e23c <_SetPixelIndex+0x48>)
 800e1fa:	681b      	ldr	r3, [r3, #0]
 800e1fc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e1fe:	460e      	mov	r6, r1
 800e200:	4615      	mov	r5, r2
 800e202:	f004 ff6d 	bl	80130e0 <GUI_ALLOC_LockH>
 800e206:	4629      	mov	r1, r5
 800e208:	9000      	str	r0, [sp, #0]
 800e20a:	4630      	mov	r0, r6
 800e20c:	f7ff ff9c 	bl	800e148 <_XY2PTR>
 800e210:	9b00      	ldr	r3, [sp, #0]
 800e212:	6004      	str	r4, [r0, #0]
 800e214:	6958      	ldr	r0, [r3, #20]
 800e216:	b160      	cbz	r0, 800e232 <_SetPixelIndex+0x3e>
 800e218:	f004 ff62 	bl	80130e0 <GUI_ALLOC_LockH>
 800e21c:	ac02      	add	r4, sp, #8
 800e21e:	6883      	ldr	r3, [r0, #8]
 800e220:	f844 0d04 	str.w	r0, [r4, #-4]!
 800e224:	681b      	ldr	r3, [r3, #0]
 800e226:	4631      	mov	r1, r6
 800e228:	462a      	mov	r2, r5
 800e22a:	4798      	blx	r3
 800e22c:	4620      	mov	r0, r4
 800e22e:	f004 ff65 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e232:	4668      	mov	r0, sp
 800e234:	f004 ff62 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e238:	b002      	add	sp, #8
 800e23a:	bd70      	pop	{r4, r5, r6, pc}
 800e23c:	2000016c 	.word	0x2000016c

0800e240 <_DrawVLine>:
 800e240:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e244:	4d2c      	ldr	r5, [pc, #176]	; (800e2f8 <_DrawVLine+0xb8>)
 800e246:	461e      	mov	r6, r3
 800e248:	682b      	ldr	r3, [r5, #0]
 800e24a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e24c:	460f      	mov	r7, r1
 800e24e:	4614      	mov	r4, r2
 800e250:	f004 ff46 	bl	80130e0 <GUI_ALLOC_LockH>
 800e254:	9000      	str	r0, [sp, #0]
 800e256:	6940      	ldr	r0, [r0, #20]
 800e258:	46a9      	mov	r9, r5
 800e25a:	b108      	cbz	r0, 800e260 <_DrawVLine+0x20>
 800e25c:	f004 ff40 	bl	80130e0 <GUI_ALLOC_LockH>
 800e260:	9001      	str	r0, [sp, #4]
 800e262:	4621      	mov	r1, r4
 800e264:	4638      	mov	r0, r7
 800e266:	f7ff ff6f 	bl	800e148 <_XY2PTR>
 800e26a:	f8d9 2000 	ldr.w	r2, [r9]
 800e26e:	9b00      	ldr	r3, [sp, #0]
 800e270:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 800e272:	7c12      	ldrb	r2, [r2, #16]
 800e274:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800e278:	f8d1 9000 	ldr.w	r9, [r1]
 800e27c:	07d2      	lsls	r2, r2, #31
 800e27e:	4605      	mov	r5, r0
 800e280:	d51f      	bpl.n	800e2c2 <_DrawVLine+0x82>
 800e282:	681b      	ldr	r3, [r3, #0]
 800e284:	691b      	ldr	r3, [r3, #16]
 800e286:	689b      	ldr	r3, [r3, #8]
 800e288:	4798      	blx	r3
 800e28a:	4680      	mov	r8, r0
 800e28c:	9801      	ldr	r0, [sp, #4]
 800e28e:	b128      	cbz	r0, 800e29c <_DrawVLine+0x5c>
 800e290:	6882      	ldr	r2, [r0, #8]
 800e292:	4639      	mov	r1, r7
 800e294:	f8d2 c000 	ldr.w	ip, [r2]
 800e298:	4622      	mov	r2, r4
 800e29a:	47e0      	blx	ip
 800e29c:	682b      	ldr	r3, [r5, #0]
 800e29e:	ea83 0308 	eor.w	r3, r3, r8
 800e2a2:	602b      	str	r3, [r5, #0]
 800e2a4:	9b00      	ldr	r3, [sp, #0]
 800e2a6:	3401      	adds	r4, #1
 800e2a8:	68db      	ldr	r3, [r3, #12]
 800e2aa:	42b4      	cmp	r4, r6
 800e2ac:	441d      	add	r5, r3
 800e2ae:	dded      	ble.n	800e28c <_DrawVLine+0x4c>
 800e2b0:	4668      	mov	r0, sp
 800e2b2:	f004 ff23 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e2b6:	9b01      	ldr	r3, [sp, #4]
 800e2b8:	b1d3      	cbz	r3, 800e2f0 <_DrawVLine+0xb0>
 800e2ba:	a801      	add	r0, sp, #4
 800e2bc:	f004 ff1e 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e2c0:	e016      	b.n	800e2f0 <_DrawVLine+0xb0>
 800e2c2:	9b01      	ldr	r3, [sp, #4]
 800e2c4:	b163      	cbz	r3, 800e2e0 <_DrawVLine+0xa0>
 800e2c6:	9801      	ldr	r0, [sp, #4]
 800e2c8:	6883      	ldr	r3, [r0, #8]
 800e2ca:	4622      	mov	r2, r4
 800e2cc:	681b      	ldr	r3, [r3, #0]
 800e2ce:	4639      	mov	r1, r7
 800e2d0:	3401      	adds	r4, #1
 800e2d2:	4798      	blx	r3
 800e2d4:	42b4      	cmp	r4, r6
 800e2d6:	f8c5 9000 	str.w	r9, [r5]
 800e2da:	4445      	add	r5, r8
 800e2dc:	ddf3      	ble.n	800e2c6 <_DrawVLine+0x86>
 800e2de:	e7e7      	b.n	800e2b0 <_DrawVLine+0x70>
 800e2e0:	1b34      	subs	r4, r6, r4
 800e2e2:	3401      	adds	r4, #1
 800e2e4:	3c01      	subs	r4, #1
 800e2e6:	f8c5 9000 	str.w	r9, [r5]
 800e2ea:	4445      	add	r5, r8
 800e2ec:	d1fa      	bne.n	800e2e4 <_DrawVLine+0xa4>
 800e2ee:	e7df      	b.n	800e2b0 <_DrawVLine+0x70>
 800e2f0:	b003      	add	sp, #12
 800e2f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e2f6:	bf00      	nop
 800e2f8:	2000016c 	.word	0x2000016c

0800e2fc <_FillRect>:
 800e2fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e300:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 800e3b0 <_FillRect+0xb4>
 800e304:	4614      	mov	r4, r2
 800e306:	f8db 2000 	ldr.w	r2, [fp]
 800e30a:	b085      	sub	sp, #20
 800e30c:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800e30e:	460f      	mov	r7, r1
 800e310:	461d      	mov	r5, r3
 800e312:	f004 fee5 	bl	80130e0 <GUI_ALLOC_LockH>
 800e316:	4621      	mov	r1, r4
 800e318:	9002      	str	r0, [sp, #8]
 800e31a:	4638      	mov	r0, r7
 800e31c:	f7ff ff14 	bl	800e148 <_XY2PTR>
 800e320:	9a02      	ldr	r2, [sp, #8]
 800e322:	f8db 3000 	ldr.w	r3, [fp]
 800e326:	f8d2 900c 	ldr.w	r9, [r2, #12]
 800e32a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e32c:	4606      	mov	r6, r0
 800e32e:	6950      	ldr	r0, [r2, #20]
 800e330:	f8d3 a000 	ldr.w	sl, [r3]
 800e334:	1bed      	subs	r5, r5, r7
 800e336:	3501      	adds	r5, #1
 800e338:	b338      	cbz	r0, 800e38a <_FillRect+0x8e>
 800e33a:	f004 fed1 	bl	80130e0 <GUI_ALLOC_LockH>
 800e33e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e340:	f10d 0810 	add.w	r8, sp, #16
 800e344:	1b13      	subs	r3, r2, r4
 800e346:	f848 0d04 	str.w	r0, [r8, #-4]!
 800e34a:	3301      	adds	r3, #1
 800e34c:	9300      	str	r3, [sp, #0]
 800e34e:	4639      	mov	r1, r7
 800e350:	4622      	mov	r2, r4
 800e352:	462b      	mov	r3, r5
 800e354:	f008 fa3a 	bl	80167cc <GUI_USAGE_AddRect>
 800e358:	4640      	mov	r0, r8
 800e35a:	f004 fecf 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e35e:	e014      	b.n	800e38a <_FillRect+0x8e>
 800e360:	f8db 3000 	ldr.w	r3, [fp]
 800e364:	7c1b      	ldrb	r3, [r3, #16]
 800e366:	07db      	lsls	r3, r3, #31
 800e368:	d513      	bpl.n	800e392 <_FillRect+0x96>
 800e36a:	9b02      	ldr	r3, [sp, #8]
 800e36c:	681b      	ldr	r3, [r3, #0]
 800e36e:	691b      	ldr	r3, [r3, #16]
 800e370:	689b      	ldr	r3, [r3, #8]
 800e372:	4798      	blx	r3
 800e374:	4632      	mov	r2, r6
 800e376:	462b      	mov	r3, r5
 800e378:	6811      	ldr	r1, [r2, #0]
 800e37a:	3b01      	subs	r3, #1
 800e37c:	ea81 0100 	eor.w	r1, r1, r0
 800e380:	f842 1b04 	str.w	r1, [r2], #4
 800e384:	d1f8      	bne.n	800e378 <_FillRect+0x7c>
 800e386:	444e      	add	r6, r9
 800e388:	3401      	adds	r4, #1
 800e38a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e38c:	429c      	cmp	r4, r3
 800e38e:	dde7      	ble.n	800e360 <_FillRect+0x64>
 800e390:	e008      	b.n	800e3a4 <_FillRect+0xa8>
 800e392:	2d00      	cmp	r5, #0
 800e394:	ddf7      	ble.n	800e386 <_FillRect+0x8a>
 800e396:	462b      	mov	r3, r5
 800e398:	4632      	mov	r2, r6
 800e39a:	3b01      	subs	r3, #1
 800e39c:	f842 ab04 	str.w	sl, [r2], #4
 800e3a0:	d1fb      	bne.n	800e39a <_FillRect+0x9e>
 800e3a2:	e7f0      	b.n	800e386 <_FillRect+0x8a>
 800e3a4:	a802      	add	r0, sp, #8
 800e3a6:	f004 fea9 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e3aa:	b005      	add	sp, #20
 800e3ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e3b0:	2000016c 	.word	0x2000016c

0800e3b4 <_DrawHLine>:
 800e3b4:	b507      	push	{r0, r1, r2, lr}
 800e3b6:	9200      	str	r2, [sp, #0]
 800e3b8:	f7ff ffa0 	bl	800e2fc <_FillRect>
 800e3bc:	b003      	add	sp, #12
 800e3be:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800e3c4 <_DrawBitmap>:
 800e3c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3c8:	4c9d      	ldr	r4, [pc, #628]	; (800e640 <_DrawBitmap+0x27c>)
 800e3ca:	469a      	mov	sl, r3
 800e3cc:	6823      	ldr	r3, [r4, #0]
 800e3ce:	b091      	sub	sp, #68	; 0x44
 800e3d0:	4680      	mov	r8, r0
 800e3d2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e3d4:	9207      	str	r2, [sp, #28]
 800e3d6:	460e      	mov	r6, r1
 800e3d8:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 800e3dc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800e3de:	2800      	cmp	r0, #0
 800e3e0:	f000 8387 	beq.w	800eaf2 <_DrawBitmap+0x72e>
 800e3e4:	f004 fe7c 	bl	80130e0 <GUI_ALLOC_LockH>
 800e3e8:	900e      	str	r0, [sp, #56]	; 0x38
 800e3ea:	6940      	ldr	r0, [r0, #20]
 800e3ec:	b108      	cbz	r0, 800e3f2 <_DrawBitmap+0x2e>
 800e3ee:	f004 fe77 	bl	80130e0 <GUI_ALLOC_LockH>
 800e3f2:	900f      	str	r0, [sp, #60]	; 0x3c
 800e3f4:	a810      	add	r0, sp, #64	; 0x40
 800e3f6:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800e3fa:	68db      	ldr	r3, [r3, #12]
 800e3fc:	930a      	str	r3, [sp, #40]	; 0x28
 800e3fe:	f004 fe7d 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e402:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e404:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e406:	4437      	add	r7, r6
 800e408:	9704      	str	r7, [sp, #16]
 800e40a:	b150      	cbz	r0, 800e422 <_DrawBitmap+0x5e>
 800e40c:	6823      	ldr	r3, [r4, #0]
 800e40e:	7c1b      	ldrb	r3, [r3, #16]
 800e410:	079c      	lsls	r4, r3, #30
 800e412:	d406      	bmi.n	800e422 <_DrawBitmap+0x5e>
 800e414:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800e416:	9700      	str	r7, [sp, #0]
 800e418:	9904      	ldr	r1, [sp, #16]
 800e41a:	9a07      	ldr	r2, [sp, #28]
 800e41c:	4653      	mov	r3, sl
 800e41e:	f008 f9d5 	bl	80167cc <GUI_USAGE_AddRect>
 800e422:	9804      	ldr	r0, [sp, #16]
 800e424:	9907      	ldr	r1, [sp, #28]
 800e426:	f7ff fe8f 	bl	800e148 <_XY2PTR>
 800e42a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800e42c:	2f17      	cmp	r7, #23
 800e42e:	4606      	mov	r6, r0
 800e430:	dd64      	ble.n	800e4fc <_DrawBitmap+0x138>
 800e432:	ea4f 078a 	mov.w	r7, sl, lsl #2
 800e436:	9706      	str	r7, [sp, #24]
 800e438:	f04f 0900 	mov.w	r9, #0
 800e43c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800e43e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e440:	45b9      	cmp	r9, r7
 800e442:	da57      	bge.n	800e4f4 <_DrawBitmap+0x130>
 800e444:	b130      	cbz	r0, 800e454 <_DrawBitmap+0x90>
 800e446:	6883      	ldr	r3, [r0, #8]
 800e448:	9a07      	ldr	r2, [sp, #28]
 800e44a:	685c      	ldr	r4, [r3, #4]
 800e44c:	9904      	ldr	r1, [sp, #16]
 800e44e:	444a      	add	r2, r9
 800e450:	4653      	mov	r3, sl
 800e452:	47a0      	blx	r4
 800e454:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800e458:	68d8      	ldr	r0, [r3, #12]
 800e45a:	b128      	cbz	r0, 800e468 <_DrawBitmap+0xa4>
 800e45c:	4630      	mov	r0, r6
 800e45e:	4659      	mov	r1, fp
 800e460:	9a06      	ldr	r2, [sp, #24]
 800e462:	f00c faf6 	bl	801aa52 <memcpy>
 800e466:	e03e      	b.n	800e4e6 <_DrawBitmap+0x122>
 800e468:	685b      	ldr	r3, [r3, #4]
 800e46a:	4798      	blx	r3
 800e46c:	0e00      	lsrs	r0, r0, #24
 800e46e:	9005      	str	r0, [sp, #20]
 800e470:	4635      	mov	r5, r6
 800e472:	4657      	mov	r7, sl
 800e474:	465c      	mov	r4, fp
 800e476:	463b      	mov	r3, r7
 800e478:	4622      	mov	r2, r4
 800e47a:	f04f 0c00 	mov.w	ip, #0
 800e47e:	f852 1b04 	ldr.w	r1, [r2], #4
 800e482:	9805      	ldr	r0, [sp, #20]
 800e484:	0e09      	lsrs	r1, r1, #24
 800e486:	4281      	cmp	r1, r0
 800e488:	9805      	ldr	r0, [sp, #20]
 800e48a:	bf08      	it	eq
 800e48c:	f10c 0c01 	addeq.w	ip, ip, #1
 800e490:	4281      	cmp	r1, r0
 800e492:	f103 33ff 	add.w	r3, r3, #4294967295
 800e496:	d014      	beq.n	800e4c2 <_DrawBitmap+0xfe>
 800e498:	f1bc 0f00 	cmp.w	ip, #0
 800e49c:	d014      	beq.n	800e4c8 <_DrawBitmap+0x104>
 800e49e:	ea4f 038c 	mov.w	r3, ip, lsl #2
 800e4a2:	4628      	mov	r0, r5
 800e4a4:	4621      	mov	r1, r4
 800e4a6:	461a      	mov	r2, r3
 800e4a8:	9303      	str	r3, [sp, #12]
 800e4aa:	f8cd c008 	str.w	ip, [sp, #8]
 800e4ae:	f00c fad0 	bl	801aa52 <memcpy>
 800e4b2:	9b03      	ldr	r3, [sp, #12]
 800e4b4:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e4b8:	441d      	add	r5, r3
 800e4ba:	441c      	add	r4, r3
 800e4bc:	ebcc 0707 	rsb	r7, ip, r7
 800e4c0:	e00f      	b.n	800e4e2 <_DrawBitmap+0x11e>
 800e4c2:	2b00      	cmp	r3, #0
 800e4c4:	d1db      	bne.n	800e47e <_DrawBitmap+0xba>
 800e4c6:	e7e7      	b.n	800e498 <_DrawBitmap+0xd4>
 800e4c8:	6820      	ldr	r0, [r4, #0]
 800e4ca:	0e02      	lsrs	r2, r0, #24
 800e4cc:	2aff      	cmp	r2, #255	; 0xff
 800e4ce:	d005      	beq.n	800e4dc <_DrawBitmap+0x118>
 800e4d0:	43d2      	mvns	r2, r2
 800e4d2:	6829      	ldr	r1, [r5, #0]
 800e4d4:	b2d2      	uxtb	r2, r2
 800e4d6:	f002 fc58 	bl	8010d8a <GUI__MixColors>
 800e4da:	6028      	str	r0, [r5, #0]
 800e4dc:	3504      	adds	r5, #4
 800e4de:	3404      	adds	r4, #4
 800e4e0:	3f01      	subs	r7, #1
 800e4e2:	2f00      	cmp	r7, #0
 800e4e4:	d1c7      	bne.n	800e476 <_DrawBitmap+0xb2>
 800e4e6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e4e8:	44bb      	add	fp, r7
 800e4ea:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800e4ec:	f109 0901 	add.w	r9, r9, #1
 800e4f0:	443e      	add	r6, r7
 800e4f2:	e7a3      	b.n	800e43c <_DrawBitmap+0x78>
 800e4f4:	2800      	cmp	r0, #0
 800e4f6:	f040 82f9 	bne.w	800eaec <_DrawBitmap+0x728>
 800e4fa:	e2fa      	b.n	800eaf2 <_DrawBitmap+0x72e>
 800e4fc:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800e4fe:	2f10      	cmp	r7, #16
 800e500:	d137      	bne.n	800e572 <_DrawBitmap+0x1ae>
 800e502:	1f06      	subs	r6, r0, #4
 800e504:	2500      	movs	r5, #0
 800e506:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800e508:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800e50a:	42bd      	cmp	r5, r7
 800e50c:	f280 80a0 	bge.w	800e650 <_DrawBitmap+0x28c>
 800e510:	9f07      	ldr	r7, [sp, #28]
 800e512:	442f      	add	r7, r5
 800e514:	b13c      	cbz	r4, 800e526 <_DrawBitmap+0x162>
 800e516:	68a3      	ldr	r3, [r4, #8]
 800e518:	9904      	ldr	r1, [sp, #16]
 800e51a:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800e51e:	4620      	mov	r0, r4
 800e520:	463a      	mov	r2, r7
 800e522:	4653      	mov	r3, sl
 800e524:	47e0      	blx	ip
 800e526:	f1ab 0302 	sub.w	r3, fp, #2
 800e52a:	9306      	str	r3, [sp, #24]
 800e52c:	9605      	str	r6, [sp, #20]
 800e52e:	46d1      	mov	r9, sl
 800e530:	9904      	ldr	r1, [sp, #16]
 800e532:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800e536:	9a06      	ldr	r2, [sp, #24]
 800e538:	685b      	ldr	r3, [r3, #4]
 800e53a:	f832 0f02 	ldrh.w	r0, [r2, #2]!
 800e53e:	9206      	str	r2, [sp, #24]
 800e540:	4451      	add	r1, sl
 800e542:	ebc9 0101 	rsb	r1, r9, r1
 800e546:	9103      	str	r1, [sp, #12]
 800e548:	4798      	blx	r3
 800e54a:	9b05      	ldr	r3, [sp, #20]
 800e54c:	9903      	ldr	r1, [sp, #12]
 800e54e:	f843 0f04 	str.w	r0, [r3, #4]!
 800e552:	9305      	str	r3, [sp, #20]
 800e554:	b124      	cbz	r4, 800e560 <_DrawBitmap+0x19c>
 800e556:	68a3      	ldr	r3, [r4, #8]
 800e558:	4620      	mov	r0, r4
 800e55a:	681b      	ldr	r3, [r3, #0]
 800e55c:	463a      	mov	r2, r7
 800e55e:	4798      	blx	r3
 800e560:	f1b9 0901 	subs.w	r9, r9, #1
 800e564:	d1e4      	bne.n	800e530 <_DrawBitmap+0x16c>
 800e566:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e568:	44bb      	add	fp, r7
 800e56a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800e56c:	3501      	adds	r5, #1
 800e56e:	443e      	add	r6, r7
 800e570:	e7c9      	b.n	800e506 <_DrawBitmap+0x142>
 800e572:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800e574:	2f08      	cmp	r7, #8
 800e576:	f100 0604 	add.w	r6, r0, #4
 800e57a:	d16d      	bne.n	800e658 <_DrawBitmap+0x294>
 800e57c:	9f07      	ldr	r7, [sp, #28]
 800e57e:	9907      	ldr	r1, [sp, #28]
 800e580:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800e582:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800e584:	1a7b      	subs	r3, r7, r1
 800e586:	4293      	cmp	r3, r2
 800e588:	f1a6 0004 	sub.w	r0, r6, #4
 800e58c:	da60      	bge.n	800e650 <_DrawBitmap+0x28c>
 800e58e:	4b2c      	ldr	r3, [pc, #176]	; (800e640 <_DrawBitmap+0x27c>)
 800e590:	681b      	ldr	r3, [r3, #0]
 800e592:	7c1b      	ldrb	r3, [r3, #16]
 800e594:	b36d      	cbz	r5, 800e5f2 <_DrawBitmap+0x22e>
 800e596:	f013 0303 	ands.w	r3, r3, #3
 800e59a:	d005      	beq.n	800e5a8 <_DrawBitmap+0x1e4>
 800e59c:	2b02      	cmp	r3, #2
 800e59e:	d151      	bne.n	800e644 <_DrawBitmap+0x280>
 800e5a0:	46b1      	mov	r9, r6
 800e5a2:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800e5a6:	e01c      	b.n	800e5e2 <_DrawBitmap+0x21e>
 800e5a8:	f81b 2003 	ldrb.w	r2, [fp, r3]
 800e5ac:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800e5b0:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800e5b4:	3301      	adds	r3, #1
 800e5b6:	4553      	cmp	r3, sl
 800e5b8:	d1f6      	bne.n	800e5a8 <_DrawBitmap+0x1e4>
 800e5ba:	e043      	b.n	800e644 <_DrawBitmap+0x280>
 800e5bc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800e5c0:	f849 3c04 	str.w	r3, [r9, #-4]
 800e5c4:	b12c      	cbz	r4, 800e5d2 <_DrawBitmap+0x20e>
 800e5c6:	68a3      	ldr	r3, [r4, #8]
 800e5c8:	4620      	mov	r0, r4
 800e5ca:	681b      	ldr	r3, [r3, #0]
 800e5cc:	4641      	mov	r1, r8
 800e5ce:	463a      	mov	r2, r7
 800e5d0:	4798      	blx	r3
 800e5d2:	9b04      	ldr	r3, [sp, #16]
 800e5d4:	f108 0801 	add.w	r8, r8, #1
 800e5d8:	4453      	add	r3, sl
 800e5da:	4543      	cmp	r3, r8
 800e5dc:	f109 0904 	add.w	r9, r9, #4
 800e5e0:	d030      	beq.n	800e644 <_DrawBitmap+0x280>
 800e5e2:	9804      	ldr	r0, [sp, #16]
 800e5e4:	ebc0 030b 	rsb	r3, r0, fp
 800e5e8:	f813 3008 	ldrb.w	r3, [r3, r8]
 800e5ec:	2b00      	cmp	r3, #0
 800e5ee:	d0f0      	beq.n	800e5d2 <_DrawBitmap+0x20e>
 800e5f0:	e7e4      	b.n	800e5bc <_DrawBitmap+0x1f8>
 800e5f2:	f013 0303 	ands.w	r3, r3, #3
 800e5f6:	d005      	beq.n	800e604 <_DrawBitmap+0x240>
 800e5f8:	2b02      	cmp	r3, #2
 800e5fa:	d123      	bne.n	800e644 <_DrawBitmap+0x280>
 800e5fc:	46b1      	mov	r9, r6
 800e5fe:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800e602:	e015      	b.n	800e630 <_DrawBitmap+0x26c>
 800e604:	4659      	mov	r1, fp
 800e606:	4652      	mov	r2, sl
 800e608:	f00c fa23 	bl	801aa52 <memcpy>
 800e60c:	e01a      	b.n	800e644 <_DrawBitmap+0x280>
 800e60e:	f849 3c04 	str.w	r3, [r9, #-4]
 800e612:	b12c      	cbz	r4, 800e620 <_DrawBitmap+0x25c>
 800e614:	68a3      	ldr	r3, [r4, #8]
 800e616:	4620      	mov	r0, r4
 800e618:	681b      	ldr	r3, [r3, #0]
 800e61a:	4641      	mov	r1, r8
 800e61c:	463a      	mov	r2, r7
 800e61e:	4798      	blx	r3
 800e620:	9b04      	ldr	r3, [sp, #16]
 800e622:	f108 0801 	add.w	r8, r8, #1
 800e626:	4453      	add	r3, sl
 800e628:	4543      	cmp	r3, r8
 800e62a:	f109 0904 	add.w	r9, r9, #4
 800e62e:	d009      	beq.n	800e644 <_DrawBitmap+0x280>
 800e630:	9904      	ldr	r1, [sp, #16]
 800e632:	ebc1 030b 	rsb	r3, r1, fp
 800e636:	f813 3008 	ldrb.w	r3, [r3, r8]
 800e63a:	2b00      	cmp	r3, #0
 800e63c:	d0f0      	beq.n	800e620 <_DrawBitmap+0x25c>
 800e63e:	e7e6      	b.n	800e60e <_DrawBitmap+0x24a>
 800e640:	2000016c 	.word	0x2000016c
 800e644:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e646:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e648:	4493      	add	fp, r2
 800e64a:	3701      	adds	r7, #1
 800e64c:	441e      	add	r6, r3
 800e64e:	e796      	b.n	800e57e <_DrawBitmap+0x1ba>
 800e650:	2c00      	cmp	r4, #0
 800e652:	f040 824b 	bne.w	800eaec <_DrawBitmap+0x728>
 800e656:	e24c      	b.n	800eaf2 <_DrawBitmap+0x72e>
 800e658:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e65a:	4bb2      	ldr	r3, [pc, #712]	; (800e924 <_DrawBitmap+0x560>)
 800e65c:	9609      	str	r6, [sp, #36]	; 0x24
 800e65e:	007f      	lsls	r7, r7, #1
 800e660:	970c      	str	r7, [sp, #48]	; 0x30
 800e662:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e664:	00bf      	lsls	r7, r7, #2
 800e666:	970d      	str	r7, [sp, #52]	; 0x34
 800e668:	9f07      	ldr	r7, [sp, #28]
 800e66a:	9705      	str	r7, [sp, #20]
 800e66c:	2d00      	cmp	r5, #0
 800e66e:	bf08      	it	eq
 800e670:	461d      	moveq	r5, r3
 800e672:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800e674:	9807      	ldr	r0, [sp, #28]
 800e676:	1f3c      	subs	r4, r7, #4
 800e678:	9f05      	ldr	r7, [sp, #20]
 800e67a:	1a3b      	subs	r3, r7, r0
 800e67c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800e67e:	42bb      	cmp	r3, r7
 800e680:	f280 8232 	bge.w	800eae8 <_DrawBitmap+0x724>
 800e684:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800e686:	2f02      	cmp	r7, #2
 800e688:	f000 80ad 	beq.w	800e7e6 <_DrawBitmap+0x422>
 800e68c:	2f04      	cmp	r7, #4
 800e68e:	f000 814f 	beq.w	800e930 <_DrawBitmap+0x56c>
 800e692:	2f01      	cmp	r7, #1
 800e694:	f040 821e 	bne.w	800ead4 <_DrawBitmap+0x710>
 800e698:	f8df 9290 	ldr.w	r9, [pc, #656]	; 800e92c <_DrawBitmap+0x568>
 800e69c:	f8d9 3000 	ldr.w	r3, [r9]
 800e6a0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e6a2:	f004 fd1d 	bl	80130e0 <GUI_ALLOC_LockH>
 800e6a6:	f89b 3000 	ldrb.w	r3, [fp]
 800e6aa:	4a9f      	ldr	r2, [pc, #636]	; (800e928 <_DrawBitmap+0x564>)
 800e6ac:	991e      	ldr	r1, [sp, #120]	; 0x78
 800e6ae:	5cd6      	ldrb	r6, [r2, r3]
 800e6b0:	f8d9 3000 	ldr.w	r3, [r9]
 800e6b4:	900e      	str	r0, [sp, #56]	; 0x38
 800e6b6:	7c1b      	ldrb	r3, [r3, #16]
 800e6b8:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800e6bc:	f003 0303 	and.w	r3, r3, #3
 800e6c0:	2b02      	cmp	r3, #2
 800e6c2:	4657      	mov	r7, sl
 800e6c4:	f1c1 0808 	rsb	r8, r1, #8
 800e6c8:	fa46 f601 	asr.w	r6, r6, r1
 800e6cc:	d020      	beq.n	800e710 <_DrawBitmap+0x34c>
 800e6ce:	2b03      	cmp	r3, #3
 800e6d0:	d061      	beq.n	800e796 <_DrawBitmap+0x3d2>
 800e6d2:	2b01      	cmp	r3, #1
 800e6d4:	d05f      	beq.n	800e796 <_DrawBitmap+0x3d2>
 800e6d6:	465a      	mov	r2, fp
 800e6d8:	4547      	cmp	r7, r8
 800e6da:	bf38      	it	cc
 800e6dc:	46b8      	movcc	r8, r7
 800e6de:	ebc8 0707 	rsb	r7, r8, r7
 800e6e2:	4643      	mov	r3, r8
 800e6e4:	4621      	mov	r1, r4
 800e6e6:	f006 0001 	and.w	r0, r6, #1
 800e6ea:	3b01      	subs	r3, #1
 800e6ec:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800e6f0:	f841 0b04 	str.w	r0, [r1], #4
 800e6f4:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800e6f8:	d1f5      	bne.n	800e6e6 <_DrawBitmap+0x322>
 800e6fa:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800e6fe:	2f00      	cmp	r7, #0
 800e700:	d06d      	beq.n	800e7de <_DrawBitmap+0x41a>
 800e702:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800e706:	4988      	ldr	r1, [pc, #544]	; (800e928 <_DrawBitmap+0x564>)
 800e708:	f04f 0808 	mov.w	r8, #8
 800e70c:	5cce      	ldrb	r6, [r1, r3]
 800e70e:	e7e3      	b.n	800e6d8 <_DrawBitmap+0x314>
 800e710:	686b      	ldr	r3, [r5, #4]
 800e712:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800e716:	930b      	str	r3, [sp, #44]	; 0x2c
 800e718:	f8cd b020 	str.w	fp, [sp, #32]
 800e71c:	4547      	cmp	r7, r8
 800e71e:	bf38      	it	cc
 800e720:	46b8      	movcc	r8, r7
 800e722:	ebc8 0707 	rsb	r7, r8, r7
 800e726:	f1bc 0f00 	cmp.w	ip, #0
 800e72a:	d026      	beq.n	800e77a <_DrawBitmap+0x3b6>
 800e72c:	b91e      	cbnz	r6, 800e736 <_DrawBitmap+0x372>
 800e72e:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800e732:	44c1      	add	r9, r8
 800e734:	e025      	b.n	800e782 <_DrawBitmap+0x3be>
 800e736:	07f0      	lsls	r0, r6, #31
 800e738:	d50c      	bpl.n	800e754 <_DrawBitmap+0x390>
 800e73a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800e73e:	9a05      	ldr	r2, [sp, #20]
 800e740:	681b      	ldr	r3, [r3, #0]
 800e742:	f8cd c008 	str.w	ip, [sp, #8]
 800e746:	4660      	mov	r0, ip
 800e748:	4649      	mov	r1, r9
 800e74a:	4798      	blx	r3
 800e74c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e74e:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e752:	6023      	str	r3, [r4, #0]
 800e754:	f1b8 0801 	subs.w	r8, r8, #1
 800e758:	f109 0901 	add.w	r9, r9, #1
 800e75c:	f104 0404 	add.w	r4, r4, #4
 800e760:	d00f      	beq.n	800e782 <_DrawBitmap+0x3be>
 800e762:	0876      	lsrs	r6, r6, #1
 800e764:	e7e2      	b.n	800e72c <_DrawBitmap+0x368>
 800e766:	07f1      	lsls	r1, r6, #31
 800e768:	bf44      	itt	mi
 800e76a:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 800e76c:	6023      	strmi	r3, [r4, #0]
 800e76e:	f1b8 0801 	subs.w	r8, r8, #1
 800e772:	f104 0404 	add.w	r4, r4, #4
 800e776:	d004      	beq.n	800e782 <_DrawBitmap+0x3be>
 800e778:	0876      	lsrs	r6, r6, #1
 800e77a:	2e00      	cmp	r6, #0
 800e77c:	d1f3      	bne.n	800e766 <_DrawBitmap+0x3a2>
 800e77e:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800e782:	b367      	cbz	r7, 800e7de <_DrawBitmap+0x41a>
 800e784:	9808      	ldr	r0, [sp, #32]
 800e786:	4a68      	ldr	r2, [pc, #416]	; (800e928 <_DrawBitmap+0x564>)
 800e788:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800e78c:	9008      	str	r0, [sp, #32]
 800e78e:	5cd6      	ldrb	r6, [r2, r3]
 800e790:	f04f 0808 	mov.w	r8, #8
 800e794:	e7c2      	b.n	800e71c <_DrawBitmap+0x358>
 800e796:	6803      	ldr	r3, [r0, #0]
 800e798:	691b      	ldr	r3, [r3, #16]
 800e79a:	689b      	ldr	r3, [r3, #8]
 800e79c:	4798      	blx	r3
 800e79e:	4659      	mov	r1, fp
 800e7a0:	4547      	cmp	r7, r8
 800e7a2:	bf38      	it	cc
 800e7a4:	46b8      	movcc	r8, r7
 800e7a6:	ebc8 0707 	rsb	r7, r8, r7
 800e7aa:	1d23      	adds	r3, r4, #4
 800e7ac:	46c6      	mov	lr, r8
 800e7ae:	07f2      	lsls	r2, r6, #31
 800e7b0:	d504      	bpl.n	800e7bc <_DrawBitmap+0x3f8>
 800e7b2:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800e7b6:	4042      	eors	r2, r0
 800e7b8:	f843 2c04 	str.w	r2, [r3, #-4]
 800e7bc:	f1be 0e01 	subs.w	lr, lr, #1
 800e7c0:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800e7c4:	f103 0304 	add.w	r3, r3, #4
 800e7c8:	d1f1      	bne.n	800e7ae <_DrawBitmap+0x3ea>
 800e7ca:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800e7ce:	b137      	cbz	r7, 800e7de <_DrawBitmap+0x41a>
 800e7d0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800e7d4:	4a54      	ldr	r2, [pc, #336]	; (800e928 <_DrawBitmap+0x564>)
 800e7d6:	f04f 0808 	mov.w	r8, #8
 800e7da:	5cd6      	ldrb	r6, [r2, r3]
 800e7dc:	e7e0      	b.n	800e7a0 <_DrawBitmap+0x3dc>
 800e7de:	a80e      	add	r0, sp, #56	; 0x38
 800e7e0:	f004 fc8c 	bl	80130fc <GUI_ALLOC_UnlockH>
 800e7e4:	e176      	b.n	800ead4 <_DrawBitmap+0x710>
 800e7e6:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e7e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e7ea:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800e7ee:	f1c7 0604 	rsb	r6, r7, #4
 800e7f2:	f89b 7000 	ldrb.w	r7, [fp]
 800e7f6:	409f      	lsls	r7, r3
 800e7f8:	4b4c      	ldr	r3, [pc, #304]	; (800e92c <_DrawBitmap+0x568>)
 800e7fa:	681b      	ldr	r3, [r3, #0]
 800e7fc:	7c1b      	ldrb	r3, [r3, #16]
 800e7fe:	f003 0303 	and.w	r3, r3, #3
 800e802:	2b01      	cmp	r3, #1
 800e804:	b2f6      	uxtb	r6, r6
 800e806:	b2ff      	uxtb	r7, r7
 800e808:	d066      	beq.n	800e8d8 <_DrawBitmap+0x514>
 800e80a:	d308      	bcc.n	800e81e <_DrawBitmap+0x45a>
 800e80c:	2b02      	cmp	r3, #2
 800e80e:	f040 8161 	bne.w	800ead4 <_DrawBitmap+0x710>
 800e812:	9804      	ldr	r0, [sp, #16]
 800e814:	f8cd b020 	str.w	fp, [sp, #32]
 800e818:	46d0      	mov	r8, sl
 800e81a:	9006      	str	r0, [sp, #24]
 800e81c:	e03e      	b.n	800e89c <_DrawBitmap+0x4d8>
 800e81e:	465a      	mov	r2, fp
 800e820:	4653      	mov	r3, sl
 800e822:	429e      	cmp	r6, r3
 800e824:	bfc8      	it	gt
 800e826:	b2de      	uxtbgt	r6, r3
 800e828:	1b9b      	subs	r3, r3, r6
 800e82a:	4631      	mov	r1, r6
 800e82c:	4620      	mov	r0, r4
 800e82e:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 800e832:	3901      	subs	r1, #1
 800e834:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 800e838:	f840 cb04 	str.w	ip, [r0], #4
 800e83c:	00bf      	lsls	r7, r7, #2
 800e83e:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800e842:	b2ff      	uxtb	r7, r7
 800e844:	d1f3      	bne.n	800e82e <_DrawBitmap+0x46a>
 800e846:	3e01      	subs	r6, #1
 800e848:	b2f6      	uxtb	r6, r6
 800e84a:	3601      	adds	r6, #1
 800e84c:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800e850:	2b00      	cmp	r3, #0
 800e852:	f000 813f 	beq.w	800ead4 <_DrawBitmap+0x710>
 800e856:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800e85a:	2604      	movs	r6, #4
 800e85c:	e7e1      	b.n	800e822 <_DrawBitmap+0x45e>
 800e85e:	9906      	ldr	r1, [sp, #24]
 800e860:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800e864:	4449      	add	r1, r9
 800e866:	d122      	bne.n	800e8ae <_DrawBitmap+0x4ea>
 800e868:	f109 0901 	add.w	r9, r9, #1
 800e86c:	fa5f f289 	uxtb.w	r2, r9
 800e870:	00bf      	lsls	r7, r7, #2
 800e872:	4296      	cmp	r6, r2
 800e874:	b2ff      	uxtb	r7, r7
 800e876:	d1f2      	bne.n	800e85e <_DrawBitmap+0x49a>
 800e878:	9f06      	ldr	r7, [sp, #24]
 800e87a:	3e01      	subs	r6, #1
 800e87c:	b2f6      	uxtb	r6, r6
 800e87e:	1c7b      	adds	r3, r7, #1
 800e880:	1c72      	adds	r2, r6, #1
 800e882:	199e      	adds	r6, r3, r6
 800e884:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 800e888:	9606      	str	r6, [sp, #24]
 800e88a:	f1b8 0f00 	cmp.w	r8, #0
 800e88e:	f000 8121 	beq.w	800ead4 <_DrawBitmap+0x710>
 800e892:	9b08      	ldr	r3, [sp, #32]
 800e894:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800e898:	9308      	str	r3, [sp, #32]
 800e89a:	2604      	movs	r6, #4
 800e89c:	4546      	cmp	r6, r8
 800e89e:	bfc8      	it	gt
 800e8a0:	fa5f f688 	uxtbgt.w	r6, r8
 800e8a4:	ebc6 0808 	rsb	r8, r6, r8
 800e8a8:	f04f 0900 	mov.w	r9, #0
 800e8ac:	e7d7      	b.n	800e85e <_DrawBitmap+0x49a>
 800e8ae:	09ba      	lsrs	r2, r7, #6
 800e8b0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800e8b4:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 800e8b8:	f1bc 0f00 	cmp.w	ip, #0
 800e8bc:	d0d4      	beq.n	800e868 <_DrawBitmap+0x4a4>
 800e8be:	f8dc 2008 	ldr.w	r2, [ip, #8]
 800e8c2:	6812      	ldr	r2, [r2, #0]
 800e8c4:	920b      	str	r2, [sp, #44]	; 0x2c
 800e8c6:	4660      	mov	r0, ip
 800e8c8:	f8cd c008 	str.w	ip, [sp, #8]
 800e8cc:	9a05      	ldr	r2, [sp, #20]
 800e8ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e8d0:	4798      	blx	r3
 800e8d2:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e8d6:	e7c7      	b.n	800e868 <_DrawBitmap+0x4a4>
 800e8d8:	4658      	mov	r0, fp
 800e8da:	4653      	mov	r3, sl
 800e8dc:	429e      	cmp	r6, r3
 800e8de:	bfc8      	it	gt
 800e8e0:	b2de      	uxtbgt	r6, r3
 800e8e2:	1b9b      	subs	r3, r3, r6
 800e8e4:	1d22      	adds	r2, r4, #4
 800e8e6:	46b4      	mov	ip, r6
 800e8e8:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800e8ec:	d005      	beq.n	800e8fa <_DrawBitmap+0x536>
 800e8ee:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800e8f2:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800e8f6:	f842 1c04 	str.w	r1, [r2, #-4]
 800e8fa:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e8fe:	00bf      	lsls	r7, r7, #2
 800e900:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800e904:	b2ff      	uxtb	r7, r7
 800e906:	f102 0204 	add.w	r2, r2, #4
 800e90a:	d1ed      	bne.n	800e8e8 <_DrawBitmap+0x524>
 800e90c:	3e01      	subs	r6, #1
 800e90e:	b2f6      	uxtb	r6, r6
 800e910:	3601      	adds	r6, #1
 800e912:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800e916:	2b00      	cmp	r3, #0
 800e918:	f000 80dc 	beq.w	800ead4 <_DrawBitmap+0x710>
 800e91c:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800e920:	2604      	movs	r6, #4
 800e922:	e7db      	b.n	800e8dc <_DrawBitmap+0x518>
 800e924:	0801b644 	.word	0x0801b644
 800e928:	08020eb4 	.word	0x08020eb4
 800e92c:	2000016c 	.word	0x2000016c
 800e930:	4a71      	ldr	r2, [pc, #452]	; (800eaf8 <_DrawBitmap+0x734>)
 800e932:	f89b 3000 	ldrb.w	r3, [fp]
 800e936:	6812      	ldr	r2, [r2, #0]
 800e938:	980d      	ldr	r0, [sp, #52]	; 0x34
 800e93a:	7c12      	ldrb	r2, [r2, #16]
 800e93c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e93e:	f002 0203 	and.w	r2, r2, #3
 800e942:	4083      	lsls	r3, r0
 800e944:	2a01      	cmp	r2, #1
 800e946:	b2de      	uxtb	r6, r3
 800e948:	f000 809c 	beq.w	800ea84 <_DrawBitmap+0x6c0>
 800e94c:	d302      	bcc.n	800e954 <_DrawBitmap+0x590>
 800e94e:	2a02      	cmp	r2, #2
 800e950:	d035      	beq.n	800e9be <_DrawBitmap+0x5fa>
 800e952:	e0bf      	b.n	800ead4 <_DrawBitmap+0x710>
 800e954:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e956:	b15f      	cbz	r7, 800e970 <_DrawBitmap+0x5ac>
 800e958:	0936      	lsrs	r6, r6, #4
 800e95a:	f10b 0201 	add.w	r2, fp, #1
 800e95e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800e962:	6023      	str	r3, [r4, #0]
 800e964:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800e968:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e96a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800e96e:	e001      	b.n	800e974 <_DrawBitmap+0x5b0>
 800e970:	4653      	mov	r3, sl
 800e972:	465a      	mov	r2, fp
 800e974:	2b01      	cmp	r3, #1
 800e976:	dd1a      	ble.n	800e9ae <_DrawBitmap+0x5ea>
 800e978:	1058      	asrs	r0, r3, #1
 800e97a:	f104 0108 	add.w	r1, r4, #8
 800e97e:	f003 0301 	and.w	r3, r3, #1
 800e982:	eb02 0800 	add.w	r8, r2, r0
 800e986:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 800e98a:	f006 060f 	and.w	r6, r6, #15
 800e98e:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 800e992:	f841 7c08 	str.w	r7, [r1, #-8]
 800e996:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 800e99a:	f841 6c04 	str.w	r6, [r1, #-4]
 800e99e:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800e9a2:	4542      	cmp	r2, r8
 800e9a4:	f101 0108 	add.w	r1, r1, #8
 800e9a8:	d1ed      	bne.n	800e986 <_DrawBitmap+0x5c2>
 800e9aa:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 800e9ae:	2b00      	cmp	r3, #0
 800e9b0:	f000 8090 	beq.w	800ead4 <_DrawBitmap+0x710>
 800e9b4:	0936      	lsrs	r6, r6, #4
 800e9b6:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800e9ba:	6023      	str	r3, [r4, #0]
 800e9bc:	e08a      	b.n	800ead4 <_DrawBitmap+0x710>
 800e9be:	981e      	ldr	r0, [sp, #120]	; 0x78
 800e9c0:	b1c0      	cbz	r0, 800e9f4 <_DrawBitmap+0x630>
 800e9c2:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800e9c6:	d00a      	beq.n	800e9de <_DrawBitmap+0x61a>
 800e9c8:	0936      	lsrs	r6, r6, #4
 800e9ca:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800e9ce:	6023      	str	r3, [r4, #0]
 800e9d0:	b12f      	cbz	r7, 800e9de <_DrawBitmap+0x61a>
 800e9d2:	68bb      	ldr	r3, [r7, #8]
 800e9d4:	9904      	ldr	r1, [sp, #16]
 800e9d6:	681b      	ldr	r3, [r3, #0]
 800e9d8:	9a05      	ldr	r2, [sp, #20]
 800e9da:	4638      	mov	r0, r7
 800e9dc:	4798      	blx	r3
 800e9de:	9904      	ldr	r1, [sp, #16]
 800e9e0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e9e2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800e9e6:	f101 0801 	add.w	r8, r1, #1
 800e9ea:	f10a 3cff 	add.w	ip, sl, #4294967295
 800e9ee:	f10b 0901 	add.w	r9, fp, #1
 800e9f2:	e011      	b.n	800ea18 <_DrawBitmap+0x654>
 800e9f4:	46d4      	mov	ip, sl
 800e9f6:	46d9      	mov	r9, fp
 800e9f8:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800e9fc:	e00c      	b.n	800ea18 <_DrawBitmap+0x654>
 800e9fe:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 800ea02:	d10d      	bne.n	800ea20 <_DrawBitmap+0x65c>
 800ea04:	f016 060f 	ands.w	r6, r6, #15
 800ea08:	d11b      	bne.n	800ea42 <_DrawBitmap+0x67e>
 800ea0a:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 800ea0e:	3408      	adds	r4, #8
 800ea10:	f108 0802 	add.w	r8, r8, #2
 800ea14:	f1ac 0c02 	sub.w	ip, ip, #2
 800ea18:	f1bc 0f01 	cmp.w	ip, #1
 800ea1c:	dcef      	bgt.n	800e9fe <_DrawBitmap+0x63a>
 800ea1e:	e021      	b.n	800ea64 <_DrawBitmap+0x6a0>
 800ea20:	0933      	lsrs	r3, r6, #4
 800ea22:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800ea26:	6023      	str	r3, [r4, #0]
 800ea28:	2f00      	cmp	r7, #0
 800ea2a:	d0eb      	beq.n	800ea04 <_DrawBitmap+0x640>
 800ea2c:	68bb      	ldr	r3, [r7, #8]
 800ea2e:	9a05      	ldr	r2, [sp, #20]
 800ea30:	681b      	ldr	r3, [r3, #0]
 800ea32:	f8cd c008 	str.w	ip, [sp, #8]
 800ea36:	4638      	mov	r0, r7
 800ea38:	4641      	mov	r1, r8
 800ea3a:	4798      	blx	r3
 800ea3c:	f8dd c008 	ldr.w	ip, [sp, #8]
 800ea40:	e7e0      	b.n	800ea04 <_DrawBitmap+0x640>
 800ea42:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800ea46:	6063      	str	r3, [r4, #4]
 800ea48:	2f00      	cmp	r7, #0
 800ea4a:	d0de      	beq.n	800ea0a <_DrawBitmap+0x646>
 800ea4c:	68bb      	ldr	r3, [r7, #8]
 800ea4e:	9a05      	ldr	r2, [sp, #20]
 800ea50:	681b      	ldr	r3, [r3, #0]
 800ea52:	f8cd c008 	str.w	ip, [sp, #8]
 800ea56:	4638      	mov	r0, r7
 800ea58:	f108 0101 	add.w	r1, r8, #1
 800ea5c:	4798      	blx	r3
 800ea5e:	f8dd c008 	ldr.w	ip, [sp, #8]
 800ea62:	e7d2      	b.n	800ea0a <_DrawBitmap+0x646>
 800ea64:	f1bc 0f00 	cmp.w	ip, #0
 800ea68:	d034      	beq.n	800ead4 <_DrawBitmap+0x710>
 800ea6a:	0936      	lsrs	r6, r6, #4
 800ea6c:	d032      	beq.n	800ead4 <_DrawBitmap+0x710>
 800ea6e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800ea72:	6023      	str	r3, [r4, #0]
 800ea74:	b377      	cbz	r7, 800ead4 <_DrawBitmap+0x710>
 800ea76:	68bb      	ldr	r3, [r7, #8]
 800ea78:	9a05      	ldr	r2, [sp, #20]
 800ea7a:	681b      	ldr	r3, [r3, #0]
 800ea7c:	4638      	mov	r0, r7
 800ea7e:	4641      	mov	r1, r8
 800ea80:	4798      	blx	r3
 800ea82:	e027      	b.n	800ead4 <_DrawBitmap+0x710>
 800ea84:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800ea86:	f1c7 0302 	rsb	r3, r7, #2
 800ea8a:	b2db      	uxtb	r3, r3
 800ea8c:	465f      	mov	r7, fp
 800ea8e:	4652      	mov	r2, sl
 800ea90:	4293      	cmp	r3, r2
 800ea92:	bfc8      	it	gt
 800ea94:	b2d3      	uxtbgt	r3, r2
 800ea96:	1ad2      	subs	r2, r2, r3
 800ea98:	1d20      	adds	r0, r4, #4
 800ea9a:	469c      	mov	ip, r3
 800ea9c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800eaa0:	d005      	beq.n	800eaae <_DrawBitmap+0x6ea>
 800eaa2:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800eaa6:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800eaaa:	f840 1c04 	str.w	r1, [r0, #-4]
 800eaae:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eab2:	0136      	lsls	r6, r6, #4
 800eab4:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800eab8:	b2f6      	uxtb	r6, r6
 800eaba:	f100 0004 	add.w	r0, r0, #4
 800eabe:	d1ed      	bne.n	800ea9c <_DrawBitmap+0x6d8>
 800eac0:	3b01      	subs	r3, #1
 800eac2:	b2db      	uxtb	r3, r3
 800eac4:	3301      	adds	r3, #1
 800eac6:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800eaca:	b11a      	cbz	r2, 800ead4 <_DrawBitmap+0x710>
 800eacc:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800ead0:	2302      	movs	r3, #2
 800ead2:	e7dd      	b.n	800ea90 <_DrawBitmap+0x6cc>
 800ead4:	9b05      	ldr	r3, [sp, #20]
 800ead6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800ead8:	3301      	adds	r3, #1
 800eada:	44bb      	add	fp, r7
 800eadc:	9305      	str	r3, [sp, #20]
 800eade:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800eae0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800eae2:	443b      	add	r3, r7
 800eae4:	9309      	str	r3, [sp, #36]	; 0x24
 800eae6:	e5c4      	b.n	800e672 <_DrawBitmap+0x2ae>
 800eae8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800eaea:	b113      	cbz	r3, 800eaf2 <_DrawBitmap+0x72e>
 800eaec:	a80f      	add	r0, sp, #60	; 0x3c
 800eaee:	f004 fb05 	bl	80130fc <GUI_ALLOC_UnlockH>
 800eaf2:	b011      	add	sp, #68	; 0x44
 800eaf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eaf8:	2000016c 	.word	0x2000016c

0800eafc <GUI_MEMDEV__WriteToActiveAt>:
 800eafc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800eb00:	460e      	mov	r6, r1
 800eb02:	4690      	mov	r8, r2
 800eb04:	4607      	mov	r7, r0
 800eb06:	f004 faeb 	bl	80130e0 <GUI_ALLOC_LockH>
 800eb0a:	6803      	ldr	r3, [r0, #0]
 800eb0c:	ac02      	add	r4, sp, #8
 800eb0e:	68db      	ldr	r3, [r3, #12]
 800eb10:	f844 0d04 	str.w	r0, [r4, #-4]!
 800eb14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eb16:	2000      	movs	r0, #0
 800eb18:	2116      	movs	r1, #22
 800eb1a:	4798      	blx	r3
 800eb1c:	4605      	mov	r5, r0
 800eb1e:	4620      	mov	r0, r4
 800eb20:	f004 faec 	bl	80130fc <GUI_ALLOC_UnlockH>
 800eb24:	b11d      	cbz	r5, 800eb2e <GUI_MEMDEV__WriteToActiveAt+0x32>
 800eb26:	4638      	mov	r0, r7
 800eb28:	4631      	mov	r1, r6
 800eb2a:	4642      	mov	r2, r8
 800eb2c:	47a8      	blx	r5
 800eb2e:	b002      	add	sp, #8
 800eb30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800eb34 <GUI_MEMDEV__CreateFixed>:
 800eb34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb38:	4e3e      	ldr	r6, [pc, #248]	; (800ec34 <GUI_MEMDEV__CreateFixed+0x100>)
 800eb3a:	b087      	sub	sp, #28
 800eb3c:	461d      	mov	r5, r3
 800eb3e:	6833      	ldr	r3, [r6, #0]
 800eb40:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800eb42:	7c5b      	ldrb	r3, [r3, #17]
 800eb44:	4683      	mov	fp, r0
 800eb46:	468a      	mov	sl, r1
 800eb48:	4690      	mov	r8, r2
 800eb4a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800eb4c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800eb4e:	2200      	movs	r2, #0
 800eb50:	f003 fd7e 	bl	8012650 <GUI_DEVICE_Create>
 800eb54:	4604      	mov	r4, r0
 800eb56:	2800      	cmp	r0, #0
 800eb58:	d033      	beq.n	800ebc2 <GUI_MEMDEV__CreateFixed+0x8e>
 800eb5a:	6903      	ldr	r3, [r0, #16]
 800eb5c:	689b      	ldr	r3, [r3, #8]
 800eb5e:	4798      	blx	r3
 800eb60:	f001 fb67 	bl	8010232 <LCD__GetBPPDevice>
 800eb64:	fb08 f600 	mul.w	r6, r8, r0
 800eb68:	9003      	str	r0, [sp, #12]
 800eb6a:	3607      	adds	r6, #7
 800eb6c:	f004 fc80 	bl	8013470 <GUI_ALLOC_RequestSize>
 800eb70:	f017 0901 	ands.w	r9, r7, #1
 800eb74:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 800eb78:	d104      	bne.n	800eb84 <GUI_MEMDEV__CreateFixed+0x50>
 800eb7a:	2304      	movs	r3, #4
 800eb7c:	fb90 f0f3 	sdiv	r0, r0, r3
 800eb80:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800eb84:	2d00      	cmp	r5, #0
 800eb86:	dc09      	bgt.n	800eb9c <GUI_MEMDEV__CreateFixed+0x68>
 800eb88:	b11e      	cbz	r6, 800eb92 <GUI_MEMDEV__CreateFixed+0x5e>
 800eb8a:	3818      	subs	r0, #24
 800eb8c:	fbb0 f0f6 	udiv	r0, r0, r6
 800eb90:	e000      	b.n	800eb94 <GUI_MEMDEV__CreateFixed+0x60>
 800eb92:	4630      	mov	r0, r6
 800eb94:	426d      	negs	r5, r5
 800eb96:	42a8      	cmp	r0, r5
 800eb98:	bfb8      	it	lt
 800eb9a:	4605      	movlt	r5, r0
 800eb9c:	f1b9 0f00 	cmp.w	r9, #0
 800eba0:	d109      	bne.n	800ebb6 <GUI_MEMDEV__CreateFixed+0x82>
 800eba2:	f8cd 9000 	str.w	r9, [sp]
 800eba6:	4658      	mov	r0, fp
 800eba8:	4651      	mov	r1, sl
 800ebaa:	4642      	mov	r2, r8
 800ebac:	462b      	mov	r3, r5
 800ebae:	f007 fdcd 	bl	801674c <GUI_USAGE_BM_Create>
 800ebb2:	4607      	mov	r7, r0
 800ebb4:	e000      	b.n	800ebb8 <GUI_MEMDEV__CreateFixed+0x84>
 800ebb6:	2700      	movs	r7, #0
 800ebb8:	2d00      	cmp	r5, #0
 800ebba:	dc04      	bgt.n	800ebc6 <GUI_MEMDEV__CreateFixed+0x92>
 800ebbc:	4620      	mov	r0, r4
 800ebbe:	f003 fd45 	bl	801264c <GUI_DEVICE_Delete>
 800ebc2:	2000      	movs	r0, #0
 800ebc4:	e032      	b.n	800ec2c <GUI_MEMDEV__CreateFixed+0xf8>
 800ebc6:	fb06 f005 	mul.w	r0, r6, r5
 800ebca:	3018      	adds	r0, #24
 800ebcc:	f1b9 0f00 	cmp.w	r9, #0
 800ebd0:	d002      	beq.n	800ebd8 <GUI_MEMDEV__CreateFixed+0xa4>
 800ebd2:	f004 fcd9 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 800ebd6:	e001      	b.n	800ebdc <GUI_MEMDEV__CreateFixed+0xa8>
 800ebd8:	f004 fcef 	bl	80135ba <GUI_ALLOC_AllocZero>
 800ebdc:	4681      	mov	r9, r0
 800ebde:	b940      	cbnz	r0, 800ebf2 <GUI_MEMDEV__CreateFixed+0xbe>
 800ebe0:	4620      	mov	r0, r4
 800ebe2:	f003 fd33 	bl	801264c <GUI_DEVICE_Delete>
 800ebe6:	2f00      	cmp	r7, #0
 800ebe8:	d0eb      	beq.n	800ebc2 <GUI_MEMDEV__CreateFixed+0x8e>
 800ebea:	4638      	mov	r0, r7
 800ebec:	f004 fab2 	bl	8013154 <GUI_ALLOC_Free>
 800ebf0:	e01b      	b.n	800ec2a <GUI_MEMDEV__CreateFixed+0xf6>
 800ebf2:	f004 fa75 	bl	80130e0 <GUI_ALLOC_LockH>
 800ebf6:	4603      	mov	r3, r0
 800ebf8:	a806      	add	r0, sp, #24
 800ebfa:	9a03      	ldr	r2, [sp, #12]
 800ebfc:	f840 3d04 	str.w	r3, [r0, #-4]!
 800ec00:	611a      	str	r2, [r3, #16]
 800ec02:	601c      	str	r4, [r3, #0]
 800ec04:	f8a3 b004 	strh.w	fp, [r3, #4]
 800ec08:	f8a3 a006 	strh.w	sl, [r3, #6]
 800ec0c:	f8a3 8008 	strh.w	r8, [r3, #8]
 800ec10:	815d      	strh	r5, [r3, #10]
 800ec12:	60de      	str	r6, [r3, #12]
 800ec14:	615f      	str	r7, [r3, #20]
 800ec16:	f004 fa71 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ec1a:	4a06      	ldr	r2, [pc, #24]	; (800ec34 <GUI_MEMDEV__CreateFixed+0x100>)
 800ec1c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ec1e:	6123      	str	r3, [r4, #16]
 800ec20:	6813      	ldr	r3, [r2, #0]
 800ec22:	f8c4 9008 	str.w	r9, [r4, #8]
 800ec26:	7c5b      	ldrb	r3, [r3, #17]
 800ec28:	61a3      	str	r3, [r4, #24]
 800ec2a:	4648      	mov	r0, r9
 800ec2c:	b007      	add	sp, #28
 800ec2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec32:	bf00      	nop
 800ec34:	2000016c 	.word	0x2000016c

0800ec38 <GUI_MEMDEV_GetBitsPerPixel>:
 800ec38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec3a:	4605      	mov	r5, r0
 800ec3c:	b170      	cbz	r0, 800ec5c <GUI_MEMDEV_GetBitsPerPixel+0x24>
 800ec3e:	f004 fa4f 	bl	80130e0 <GUI_ALLOC_LockH>
 800ec42:	6803      	ldr	r3, [r0, #0]
 800ec44:	ac02      	add	r4, sp, #8
 800ec46:	691b      	ldr	r3, [r3, #16]
 800ec48:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ec4c:	689b      	ldr	r3, [r3, #8]
 800ec4e:	4798      	blx	r3
 800ec50:	f001 faef 	bl	8010232 <LCD__GetBPPDevice>
 800ec54:	4605      	mov	r5, r0
 800ec56:	4620      	mov	r0, r4
 800ec58:	f004 fa50 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ec5c:	4628      	mov	r0, r5
 800ec5e:	b003      	add	sp, #12
 800ec60:	bd30      	pop	{r4, r5, pc}
	...

0800ec64 <GUI_MEMDEV_Delete>:
 800ec64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec66:	4604      	mov	r4, r0
 800ec68:	b1d0      	cbz	r0, 800eca0 <GUI_MEMDEV_Delete+0x3c>
 800ec6a:	4b0e      	ldr	r3, [pc, #56]	; (800eca4 <GUI_MEMDEV_Delete+0x40>)
 800ec6c:	681b      	ldr	r3, [r3, #0]
 800ec6e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ec70:	4283      	cmp	r3, r0
 800ec72:	d101      	bne.n	800ec78 <GUI_MEMDEV_Delete+0x14>
 800ec74:	f003 f884 	bl	8011d80 <GUI_SelectLCD>
 800ec78:	4620      	mov	r0, r4
 800ec7a:	f004 fa31 	bl	80130e0 <GUI_ALLOC_LockH>
 800ec7e:	9001      	str	r0, [sp, #4]
 800ec80:	6940      	ldr	r0, [r0, #20]
 800ec82:	b108      	cbz	r0, 800ec88 <GUI_MEMDEV_Delete+0x24>
 800ec84:	f007 fd8e 	bl	80167a4 <GUI_USAGE_DecUseCnt>
 800ec88:	ad02      	add	r5, sp, #8
 800ec8a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800ec8e:	6818      	ldr	r0, [r3, #0]
 800ec90:	f003 fcdc 	bl	801264c <GUI_DEVICE_Delete>
 800ec94:	4628      	mov	r0, r5
 800ec96:	f004 fa31 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ec9a:	4620      	mov	r0, r4
 800ec9c:	f004 fa5a 	bl	8013154 <GUI_ALLOC_Free>
 800eca0:	b003      	add	sp, #12
 800eca2:	bd30      	pop	{r4, r5, pc}
 800eca4:	2000016c 	.word	0x2000016c

0800eca8 <GUI_MEMDEV_CreateEx>:
 800eca8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ecac:	469a      	mov	sl, r3
 800ecae:	4b19      	ldr	r3, [pc, #100]	; (800ed14 <GUI_MEMDEV_CreateEx+0x6c>)
 800ecb0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ecb2:	681b      	ldr	r3, [r3, #0]
 800ecb4:	4607      	mov	r7, r0
 800ecb6:	7c58      	ldrb	r0, [r3, #17]
 800ecb8:	4b17      	ldr	r3, [pc, #92]	; (800ed18 <GUI_MEMDEV_CreateEx+0x70>)
 800ecba:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800ecbe:	4688      	mov	r8, r1
 800ecc0:	4691      	mov	r9, r2
 800ecc2:	68e3      	ldr	r3, [r4, #12]
 800ecc4:	681b      	ldr	r3, [r3, #0]
 800ecc6:	2b04      	cmp	r3, #4
 800ecc8:	d006      	beq.n	800ecd8 <GUI_MEMDEV_CreateEx+0x30>
 800ecca:	6824      	ldr	r4, [r4, #0]
 800eccc:	2c00      	cmp	r4, #0
 800ecce:	d1f8      	bne.n	800ecc2 <GUI_MEMDEV_CreateEx+0x1a>
 800ecd0:	f003 fcac 	bl	801262c <GUI_DEVICE__GetpDriver>
 800ecd4:	4604      	mov	r4, r0
 800ecd6:	b130      	cbz	r0, 800ece6 <GUI_MEMDEV_CreateEx+0x3e>
 800ecd8:	68e3      	ldr	r3, [r4, #12]
 800ecda:	4620      	mov	r0, r4
 800ecdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ecde:	2101      	movs	r1, #1
 800ece0:	4798      	blx	r3
 800ece2:	4606      	mov	r6, r0
 800ece4:	b908      	cbnz	r0, 800ecea <GUI_MEMDEV_CreateEx+0x42>
 800ece6:	2000      	movs	r0, #0
 800ece8:	e010      	b.n	800ed0c <GUI_MEMDEV_CreateEx+0x64>
 800ecea:	6924      	ldr	r4, [r4, #16]
 800ecec:	68a3      	ldr	r3, [r4, #8]
 800ecee:	4798      	blx	r3
 800ecf0:	3001      	adds	r0, #1
 800ecf2:	bf04      	itt	eq
 800ecf4:	f045 0501 	orreq.w	r5, r5, #1
 800ecf8:	4c08      	ldreq	r4, [pc, #32]	; (800ed1c <GUI_MEMDEV_CreateEx+0x74>)
 800ecfa:	9402      	str	r4, [sp, #8]
 800ecfc:	e88d 0060 	stmia.w	sp, {r5, r6}
 800ed00:	4638      	mov	r0, r7
 800ed02:	4641      	mov	r1, r8
 800ed04:	464a      	mov	r2, r9
 800ed06:	4653      	mov	r3, sl
 800ed08:	f7ff ff14 	bl	800eb34 <GUI_MEMDEV__CreateFixed>
 800ed0c:	b004      	add	sp, #16
 800ed0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ed12:	bf00      	nop
 800ed14:	2000016c 	.word	0x2000016c
 800ed18:	20019ca0 	.word	0x20019ca0
 800ed1c:	08020fe8 	.word	0x08020fe8

0800ed20 <GUI_MEMDEV_Select>:
 800ed20:	4b11      	ldr	r3, [pc, #68]	; (800ed68 <GUI_MEMDEV_Select+0x48>)
 800ed22:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ed24:	681a      	ldr	r2, [r3, #0]
 800ed26:	4604      	mov	r4, r0
 800ed28:	6e16      	ldr	r6, [r2, #96]	; 0x60
 800ed2a:	461f      	mov	r7, r3
 800ed2c:	b910      	cbnz	r0, 800ed34 <GUI_MEMDEV_Select+0x14>
 800ed2e:	f003 f827 	bl	8011d80 <GUI_SelectLCD>
 800ed32:	e016      	b.n	800ed62 <GUI_MEMDEV_Select+0x42>
 800ed34:	b10e      	cbz	r6, 800ed3a <GUI_MEMDEV_Select+0x1a>
 800ed36:	f003 f823 	bl	8011d80 <GUI_SelectLCD>
 800ed3a:	f7fe ff37 	bl	800dbac <WM_Deactivate>
 800ed3e:	4620      	mov	r0, r4
 800ed40:	f004 f9ce 	bl	80130e0 <GUI_ALLOC_LockH>
 800ed44:	ad02      	add	r5, sp, #8
 800ed46:	683b      	ldr	r3, [r7, #0]
 800ed48:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ed4c:	661c      	str	r4, [r3, #96]	; 0x60
 800ed4e:	6800      	ldr	r0, [r0, #0]
 800ed50:	f003 fcba 	bl	80126c8 <GUI_DEVICE_Link>
 800ed54:	4628      	mov	r0, r5
 800ed56:	f004 f9d1 	bl	80130fc <GUI_ALLOC_UnlockH>
 800ed5a:	f001 f8f1 	bl	800ff40 <LCD_UpdateColorIndices>
 800ed5e:	f001 fd29 	bl	80107b4 <LCD_SetClipRectMax>
 800ed62:	4630      	mov	r0, r6
 800ed64:	b003      	add	sp, #12
 800ed66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed68:	2000016c 	.word	0x2000016c

0800ed6c <GUI_MEMDEV_CopyToLCDAt>:
 800ed6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed70:	460c      	mov	r4, r1
 800ed72:	b085      	sub	sp, #20
 800ed74:	4615      	mov	r5, r2
 800ed76:	4606      	mov	r6, r0
 800ed78:	2800      	cmp	r0, #0
 800ed7a:	d041      	beq.n	800ee00 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800ed7c:	2000      	movs	r0, #0
 800ed7e:	f002 ff9b 	bl	8011cb8 <GUI_SetDrawMode>
 800ed82:	4b21      	ldr	r3, [pc, #132]	; (800ee08 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 800ed84:	681b      	ldr	r3, [r3, #0]
 800ed86:	4607      	mov	r7, r0
 800ed88:	4630      	mov	r0, r6
 800ed8a:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 800ed8e:	f004 f9a7 	bl	80130e0 <GUI_ALLOC_LockH>
 800ed92:	6803      	ldr	r3, [r0, #0]
 800ed94:	9001      	str	r0, [sp, #4]
 800ed96:	6998      	ldr	r0, [r3, #24]
 800ed98:	f002 ffda 	bl	8011d50 <GUI_SelectLayer>
 800ed9c:	4b1b      	ldr	r3, [pc, #108]	; (800ee0c <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 800ed9e:	429c      	cmp	r4, r3
 800eda0:	9b01      	ldr	r3, [sp, #4]
 800eda2:	bf04      	itt	eq
 800eda4:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 800eda8:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 800edac:	891a      	ldrh	r2, [r3, #8]
 800edae:	895b      	ldrh	r3, [r3, #10]
 800edb0:	f8ad 4008 	strh.w	r4, [sp, #8]
 800edb4:	3a01      	subs	r2, #1
 800edb6:	3b01      	subs	r3, #1
 800edb8:	4422      	add	r2, r4
 800edba:	442b      	add	r3, r5
 800edbc:	4681      	mov	r9, r0
 800edbe:	f8ad 200c 	strh.w	r2, [sp, #12]
 800edc2:	f8ad 300e 	strh.w	r3, [sp, #14]
 800edc6:	f8ad 500a 	strh.w	r5, [sp, #10]
 800edca:	f7fe fee7 	bl	800db9c <WM_Activate>
 800edce:	a801      	add	r0, sp, #4
 800edd0:	f004 f994 	bl	80130fc <GUI_ALLOC_UnlockH>
 800edd4:	a802      	add	r0, sp, #8
 800edd6:	f7fe fd0d 	bl	800d7f4 <WM__InitIVRSearch>
 800edda:	b948      	cbnz	r0, 800edf0 <GUI_MEMDEV_CopyToLCDAt+0x84>
 800eddc:	4648      	mov	r0, r9
 800edde:	f002 ffb7 	bl	8011d50 <GUI_SelectLayer>
 800ede2:	4640      	mov	r0, r8
 800ede4:	f7ff ff9c 	bl	800ed20 <GUI_MEMDEV_Select>
 800ede8:	4638      	mov	r0, r7
 800edea:	f002 ff65 	bl	8011cb8 <GUI_SetDrawMode>
 800edee:	e007      	b.n	800ee00 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800edf0:	4630      	mov	r0, r6
 800edf2:	4621      	mov	r1, r4
 800edf4:	462a      	mov	r2, r5
 800edf6:	f006 ff75 	bl	8015ce4 <GUI_MEMDEV__WriteToActiveOpaque>
 800edfa:	f7fe fc39 	bl	800d670 <WM__GetNextIVR>
 800edfe:	e7ec      	b.n	800edda <GUI_MEMDEV_CopyToLCDAt+0x6e>
 800ee00:	b005      	add	sp, #20
 800ee02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ee06:	bf00      	nop
 800ee08:	2000016c 	.word	0x2000016c
 800ee0c:	fffff001 	.word	0xfffff001

0800ee10 <GUI_MEMDEV_CopyToLCD>:
 800ee10:	4901      	ldr	r1, [pc, #4]	; (800ee18 <GUI_MEMDEV_CopyToLCD+0x8>)
 800ee12:	460a      	mov	r2, r1
 800ee14:	f7ff bfaa 	b.w	800ed6c <GUI_MEMDEV_CopyToLCDAt>
 800ee18:	fffff001 	.word	0xfffff001

0800ee1c <_SetPhysRAMAddr>:
 800ee1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee1e:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800ee20:	4604      	mov	r4, r0
 800ee22:	460e      	mov	r6, r1
 800ee24:	4615      	mov	r5, r2
 800ee26:	b15b      	cbz	r3, 800ee40 <_SetPhysRAMAddr+0x24>
 800ee28:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800ee2c:	4798      	blx	r3
 800ee2e:	4631      	mov	r1, r6
 800ee30:	4607      	mov	r7, r0
 800ee32:	462a      	mov	r2, r5
 800ee34:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800ee38:	4620      	mov	r0, r4
 800ee3a:	4798      	blx	r3
 800ee3c:	463e      	mov	r6, r7
 800ee3e:	4605      	mov	r5, r0
 800ee40:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800ee44:	4620      	mov	r0, r4
 800ee46:	212a      	movs	r1, #42	; 0x2a
 800ee48:	4798      	blx	r3
 800ee4a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ee4c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ee50:	4431      	add	r1, r6
 800ee52:	4620      	mov	r0, r4
 800ee54:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ee58:	4798      	blx	r3
 800ee5a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ee5c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ee60:	b2b7      	uxth	r7, r6
 800ee62:	4439      	add	r1, r7
 800ee64:	4620      	mov	r0, r4
 800ee66:	b2c9      	uxtb	r1, r1
 800ee68:	4798      	blx	r3
 800ee6a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ee6c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ee70:	4431      	add	r1, r6
 800ee72:	4620      	mov	r0, r4
 800ee74:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ee78:	4798      	blx	r3
 800ee7a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ee7c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ee80:	4439      	add	r1, r7
 800ee82:	4620      	mov	r0, r4
 800ee84:	b2c9      	uxtb	r1, r1
 800ee86:	4798      	blx	r3
 800ee88:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800ee8c:	4620      	mov	r0, r4
 800ee8e:	212b      	movs	r1, #43	; 0x2b
 800ee90:	4798      	blx	r3
 800ee92:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ee94:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ee98:	4429      	add	r1, r5
 800ee9a:	4620      	mov	r0, r4
 800ee9c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800eea0:	4798      	blx	r3
 800eea2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800eea4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800eea8:	b2ae      	uxth	r6, r5
 800eeaa:	4431      	add	r1, r6
 800eeac:	4620      	mov	r0, r4
 800eeae:	b2c9      	uxtb	r1, r1
 800eeb0:	4798      	blx	r3
 800eeb2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800eeb4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800eeb8:	4429      	add	r1, r5
 800eeba:	4620      	mov	r0, r4
 800eebc:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800eec0:	4798      	blx	r3
 800eec2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800eec4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800eec8:	4431      	add	r1, r6
 800eeca:	4620      	mov	r0, r4
 800eecc:	b2c9      	uxtb	r1, r1
 800eece:	4798      	blx	r3
 800eed0:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800eed4:	4620      	mov	r0, r4
 800eed6:	212c      	movs	r1, #44	; 0x2c
 800eed8:	4798      	blx	r3
 800eeda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800eedc <_SetRect>:
 800eedc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eee0:	4698      	mov	r8, r3
 800eee2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800eee4:	9f08      	ldr	r7, [sp, #32]
 800eee6:	4604      	mov	r4, r0
 800eee8:	4689      	mov	r9, r1
 800eeea:	4615      	mov	r5, r2
 800eeec:	2b00      	cmp	r3, #0
 800eeee:	d064      	beq.n	800efba <_SetRect+0xde>
 800eef0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800eef4:	4798      	blx	r3
 800eef6:	463a      	mov	r2, r7
 800eef8:	4606      	mov	r6, r0
 800eefa:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800eefe:	4641      	mov	r1, r8
 800ef00:	4620      	mov	r0, r4
 800ef02:	4798      	blx	r3
 800ef04:	462a      	mov	r2, r5
 800ef06:	4682      	mov	sl, r0
 800ef08:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800ef0c:	4649      	mov	r1, r9
 800ef0e:	4620      	mov	r0, r4
 800ef10:	4798      	blx	r3
 800ef12:	463a      	mov	r2, r7
 800ef14:	4605      	mov	r5, r0
 800ef16:	4641      	mov	r1, r8
 800ef18:	4620      	mov	r0, r4
 800ef1a:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800ef1e:	4798      	blx	r3
 800ef20:	45b2      	cmp	sl, r6
 800ef22:	4607      	mov	r7, r0
 800ef24:	db02      	blt.n	800ef2c <_SetRect+0x50>
 800ef26:	4653      	mov	r3, sl
 800ef28:	46b2      	mov	sl, r6
 800ef2a:	461e      	mov	r6, r3
 800ef2c:	42af      	cmp	r7, r5
 800ef2e:	db02      	blt.n	800ef36 <_SetRect+0x5a>
 800ef30:	463b      	mov	r3, r7
 800ef32:	462f      	mov	r7, r5
 800ef34:	461d      	mov	r5, r3
 800ef36:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800ef3a:	4620      	mov	r0, r4
 800ef3c:	212a      	movs	r1, #42	; 0x2a
 800ef3e:	4798      	blx	r3
 800ef40:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ef42:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ef46:	4451      	add	r1, sl
 800ef48:	4620      	mov	r0, r4
 800ef4a:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ef4e:	4798      	blx	r3
 800ef50:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ef52:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ef56:	4451      	add	r1, sl
 800ef58:	4620      	mov	r0, r4
 800ef5a:	b2c9      	uxtb	r1, r1
 800ef5c:	4798      	blx	r3
 800ef5e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ef60:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ef64:	4431      	add	r1, r6
 800ef66:	4620      	mov	r0, r4
 800ef68:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ef6c:	4798      	blx	r3
 800ef6e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ef70:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ef74:	4431      	add	r1, r6
 800ef76:	4620      	mov	r0, r4
 800ef78:	b2c9      	uxtb	r1, r1
 800ef7a:	4798      	blx	r3
 800ef7c:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800ef80:	4620      	mov	r0, r4
 800ef82:	212b      	movs	r1, #43	; 0x2b
 800ef84:	4798      	blx	r3
 800ef86:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ef88:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ef8c:	4439      	add	r1, r7
 800ef8e:	4620      	mov	r0, r4
 800ef90:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ef94:	4798      	blx	r3
 800ef96:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ef98:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ef9c:	4439      	add	r1, r7
 800ef9e:	4620      	mov	r0, r4
 800efa0:	b2c9      	uxtb	r1, r1
 800efa2:	4798      	blx	r3
 800efa4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800efa6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800efaa:	4429      	add	r1, r5
 800efac:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800efb0:	4620      	mov	r0, r4
 800efb2:	4798      	blx	r3
 800efb4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800efb6:	4429      	add	r1, r5
 800efb8:	e03f      	b.n	800f03a <_SetRect+0x15e>
 800efba:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800efbe:	212a      	movs	r1, #42	; 0x2a
 800efc0:	4798      	blx	r3
 800efc2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800efc4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800efc8:	4449      	add	r1, r9
 800efca:	4620      	mov	r0, r4
 800efcc:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800efd0:	4798      	blx	r3
 800efd2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800efd4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800efd8:	4449      	add	r1, r9
 800efda:	4620      	mov	r0, r4
 800efdc:	b2c9      	uxtb	r1, r1
 800efde:	4798      	blx	r3
 800efe0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800efe2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800efe6:	4441      	add	r1, r8
 800efe8:	4620      	mov	r0, r4
 800efea:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800efee:	4798      	blx	r3
 800eff0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800eff2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800eff6:	4441      	add	r1, r8
 800eff8:	4620      	mov	r0, r4
 800effa:	b2c9      	uxtb	r1, r1
 800effc:	4798      	blx	r3
 800effe:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800f002:	4620      	mov	r0, r4
 800f004:	212b      	movs	r1, #43	; 0x2b
 800f006:	4798      	blx	r3
 800f008:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f00a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800f00e:	4429      	add	r1, r5
 800f010:	4620      	mov	r0, r4
 800f012:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800f016:	4798      	blx	r3
 800f018:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f01a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800f01e:	4429      	add	r1, r5
 800f020:	4620      	mov	r0, r4
 800f022:	b2c9      	uxtb	r1, r1
 800f024:	4798      	blx	r3
 800f026:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f028:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800f02c:	4439      	add	r1, r7
 800f02e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800f032:	4620      	mov	r0, r4
 800f034:	4798      	blx	r3
 800f036:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f038:	4439      	add	r1, r7
 800f03a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800f03e:	4620      	mov	r0, r4
 800f040:	b2c9      	uxtb	r1, r1
 800f042:	4798      	blx	r3
 800f044:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800f048:	4620      	mov	r0, r4
 800f04a:	212c      	movs	r1, #44	; 0x2c
 800f04c:	4798      	blx	r3
 800f04e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800f054 <_SetOrientation>:
 800f054:	b513      	push	{r0, r1, r4, lr}
 800f056:	4a0d      	ldr	r2, [pc, #52]	; (800f08c <_SetOrientation+0x38>)
 800f058:	4604      	mov	r4, r0
 800f05a:	6851      	ldr	r1, [r2, #4]
 800f05c:	6810      	ldr	r0, [r2, #0]
 800f05e:	466b      	mov	r3, sp
 800f060:	c303      	stmia	r3!, {r0, r1}
 800f062:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800f066:	4620      	mov	r0, r4
 800f068:	2136      	movs	r1, #54	; 0x36
 800f06a:	4798      	blx	r3
 800f06c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f06e:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800f070:	aa02      	add	r2, sp, #8
 800f072:	4413      	add	r3, r2
 800f074:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 800f078:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 800f07c:	4319      	orrs	r1, r3
 800f07e:	4620      	mov	r0, r4
 800f080:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800f084:	b289      	uxth	r1, r1
 800f086:	4798      	blx	r3
 800f088:	b002      	add	sp, #8
 800f08a:	bd10      	pop	{r4, pc}
 800f08c:	0801b2c4 	.word	0x0801b2c4

0800f090 <_ReadPixel_16bpp_B8>:
 800f090:	b513      	push	{r0, r1, r4, lr}
 800f092:	4604      	mov	r4, r0
 800f094:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800f098:	202e      	movs	r0, #46	; 0x2e
 800f09a:	4798      	blx	r3
 800f09c:	6a21      	ldr	r1, [r4, #32]
 800f09e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800f0a2:	4668      	mov	r0, sp
 800f0a4:	3103      	adds	r1, #3
 800f0a6:	4798      	blx	r3
 800f0a8:	6a22      	ldr	r2, [r4, #32]
 800f0aa:	ab00      	add	r3, sp, #0
 800f0ac:	4413      	add	r3, r2
 800f0ae:	f81d 2002 	ldrb.w	r2, [sp, r2]
 800f0b2:	7859      	ldrb	r1, [r3, #1]
 800f0b4:	7898      	ldrb	r0, [r3, #2]
 800f0b6:	08d2      	lsrs	r2, r2, #3
 800f0b8:	0889      	lsrs	r1, r1, #2
 800f0ba:	02d2      	lsls	r2, r2, #11
 800f0bc:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 800f0c0:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 800f0c4:	b002      	add	sp, #8
 800f0c6:	bd10      	pop	{r4, pc}

0800f0c8 <_ReadPixel_16bpp_B16_I>:
 800f0c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f0ca:	4604      	mov	r4, r0
 800f0cc:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800f0d0:	202e      	movs	r0, #46	; 0x2e
 800f0d2:	4798      	blx	r3
 800f0d4:	6a21      	ldr	r1, [r4, #32]
 800f0d6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800f0da:	4668      	mov	r0, sp
 800f0dc:	3102      	adds	r1, #2
 800f0de:	4798      	blx	r3
 800f0e0:	6a23      	ldr	r3, [r4, #32]
 800f0e2:	a900      	add	r1, sp, #0
 800f0e4:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 800f0e8:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 800f0ec:	8852      	ldrh	r2, [r2, #2]
 800f0ee:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 800f0f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800f0f6:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 800f0fa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 800f0fe:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 800f102:	b004      	add	sp, #16
 800f104:	bd10      	pop	{r4, pc}

0800f106 <_SetReg_B8>:
 800f106:	b538      	push	{r3, r4, r5, lr}
 800f108:	4604      	mov	r4, r0
 800f10a:	460d      	mov	r5, r1
 800f10c:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800f110:	0a08      	lsrs	r0, r1, #8
 800f112:	4798      	blx	r3
 800f114:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800f118:	b2e8      	uxtb	r0, r5
 800f11a:	4798      	blx	r3
 800f11c:	bd38      	pop	{r3, r4, r5, pc}

0800f11e <_SetReg_B16>:
 800f11e:	b508      	push	{r3, lr}
 800f120:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800f124:	4608      	mov	r0, r1
 800f126:	4798      	blx	r3
 800f128:	bd08      	pop	{r3, pc}

0800f12a <_WritePara_B8>:
 800f12a:	b508      	push	{r3, lr}
 800f12c:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800f130:	b2c8      	uxtb	r0, r1
 800f132:	4798      	blx	r3
 800f134:	bd08      	pop	{r3, pc}

0800f136 <_WritePara_B16>:
 800f136:	b508      	push	{r3, lr}
 800f138:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800f13c:	4608      	mov	r0, r1
 800f13e:	4798      	blx	r3
 800f140:	bd08      	pop	{r3, pc}
	...

0800f144 <_SetInterface>:
 800f144:	2908      	cmp	r1, #8
 800f146:	d002      	beq.n	800f14e <_SetInterface+0xa>
 800f148:	2910      	cmp	r1, #16
 800f14a:	d005      	beq.n	800f158 <_SetInterface+0x14>
 800f14c:	4770      	bx	lr
 800f14e:	4b06      	ldr	r3, [pc, #24]	; (800f168 <_SetInterface+0x24>)
 800f150:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800f154:	4b05      	ldr	r3, [pc, #20]	; (800f16c <_SetInterface+0x28>)
 800f156:	e003      	b.n	800f160 <_SetInterface+0x1c>
 800f158:	4b05      	ldr	r3, [pc, #20]	; (800f170 <_SetInterface+0x2c>)
 800f15a:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800f15e:	4b05      	ldr	r3, [pc, #20]	; (800f174 <_SetInterface+0x30>)
 800f160:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 800f164:	4770      	bx	lr
 800f166:	bf00      	nop
 800f168:	0800f107 	.word	0x0800f107
 800f16c:	0800f12b 	.word	0x0800f12b
 800f170:	0800f11f 	.word	0x0800f11f
 800f174:	0800f137 	.word	0x0800f137

0800f178 <_ReadRect_16bpp_B8>:
 800f178:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f17a:	b085      	sub	sp, #20
 800f17c:	6884      	ldr	r4, [r0, #8]
 800f17e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f180:	9700      	str	r7, [sp, #0]
 800f182:	1abd      	subs	r5, r7, r2
 800f184:	1a58      	subs	r0, r3, r1
 800f186:	3501      	adds	r5, #1
 800f188:	fb00 5505 	mla	r5, r0, r5, r5
 800f18c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800f190:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800f192:	4620      	mov	r0, r4
 800f194:	47b8      	blx	r7
 800f196:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800f19a:	202e      	movs	r0, #46	; 0x2e
 800f19c:	4798      	blx	r3
 800f19e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800f1a2:	6a21      	ldr	r1, [r4, #32]
 800f1a4:	a802      	add	r0, sp, #8
 800f1a6:	4798      	blx	r3
 800f1a8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800f1ac:	a802      	add	r0, sp, #8
 800f1ae:	2103      	movs	r1, #3
 800f1b0:	4798      	blx	r3
 800f1b2:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800f1b6:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800f1ba:	08db      	lsrs	r3, r3, #3
 800f1bc:	0892      	lsrs	r2, r2, #2
 800f1be:	02db      	lsls	r3, r3, #11
 800f1c0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f1c4:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800f1c8:	3d01      	subs	r5, #1
 800f1ca:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 800f1ce:	f826 3b02 	strh.w	r3, [r6], #2
 800f1d2:	d1e9      	bne.n	800f1a8 <_ReadRect_16bpp_B8+0x30>
 800f1d4:	b005      	add	sp, #20
 800f1d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f1d8 <_ReadRect_16bpp_B16_I>:
 800f1d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1da:	b087      	sub	sp, #28
 800f1dc:	6884      	ldr	r4, [r0, #8]
 800f1de:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800f1e0:	9700      	str	r7, [sp, #0]
 800f1e2:	1abd      	subs	r5, r7, r2
 800f1e4:	1a58      	subs	r0, r3, r1
 800f1e6:	3501      	adds	r5, #1
 800f1e8:	fb00 5505 	mla	r5, r0, r5, r5
 800f1ec:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800f1f0:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800f1f2:	4620      	mov	r0, r4
 800f1f4:	47b8      	blx	r7
 800f1f6:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800f1fa:	202e      	movs	r0, #46	; 0x2e
 800f1fc:	4798      	blx	r3
 800f1fe:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800f202:	6a21      	ldr	r1, [r4, #32]
 800f204:	a802      	add	r0, sp, #8
 800f206:	4798      	blx	r3
 800f208:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800f20c:	a802      	add	r0, sp, #8
 800f20e:	2102      	movs	r1, #2
 800f210:	4798      	blx	r3
 800f212:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f216:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 800f21a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 800f21e:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 800f222:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f226:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 800f22a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800f22e:	3d01      	subs	r5, #1
 800f230:	f826 3b02 	strh.w	r3, [r6], #2
 800f234:	d1e8      	bne.n	800f208 <_ReadRect_16bpp_B16_I+0x30>
 800f236:	b007      	add	sp, #28
 800f238:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f23c <GUIDRV_FlexColor_SetFunc66720>:
 800f23c:	b510      	push	{r4, lr}
 800f23e:	4604      	mov	r4, r0
 800f240:	f000 fda6 	bl	800fd90 <GUIDRV_FlexColor__InitOnce>
 800f244:	68a3      	ldr	r3, [r4, #8]
 800f246:	4a12      	ldr	r2, [pc, #72]	; (800f290 <GUIDRV_FlexColor_SetFunc66720+0x54>)
 800f248:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 800f24c:	4a11      	ldr	r2, [pc, #68]	; (800f294 <GUIDRV_FlexColor_SetFunc66720+0x58>)
 800f24e:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 800f252:	4a11      	ldr	r2, [pc, #68]	; (800f298 <GUIDRV_FlexColor_SetFunc66720+0x5c>)
 800f254:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 800f258:	4a10      	ldr	r2, [pc, #64]	; (800f29c <GUIDRV_FlexColor_SetFunc66720+0x60>)
 800f25a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800f25e:	2200      	movs	r2, #0
 800f260:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800f264:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800f268:	4a0d      	ldr	r2, [pc, #52]	; (800f2a0 <GUIDRV_FlexColor_SetFunc66720+0x64>)
 800f26a:	490e      	ldr	r1, [pc, #56]	; (800f2a4 <GUIDRV_FlexColor_SetFunc66720+0x68>)
 800f26c:	6812      	ldr	r2, [r2, #0]
 800f26e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800f272:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 800f274:	6809      	ldr	r1, [r1, #0]
 800f276:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 800f27a:	f022 0203 	bic.w	r2, r2, #3
 800f27e:	490a      	ldr	r1, [pc, #40]	; (800f2a8 <GUIDRV_FlexColor_SetFunc66720+0x6c>)
 800f280:	84da      	strh	r2, [r3, #38]	; 0x26
 800f282:	4a0a      	ldr	r2, [pc, #40]	; (800f2ac <GUIDRV_FlexColor_SetFunc66720+0x70>)
 800f284:	f8c3 10c8 	str.w	r1, [r3, #200]	; 0xc8
 800f288:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800f28c:	bd10      	pop	{r4, pc}
 800f28e:	bf00      	nop
 800f290:	0800ee1d 	.word	0x0800ee1d
 800f294:	0800eedd 	.word	0x0800eedd
 800f298:	0800f055 	.word	0x0800f055
 800f29c:	0800f091 	.word	0x0800f091
 800f2a0:	2000013c 	.word	0x2000013c
 800f2a4:	20000138 	.word	0x20000138
 800f2a8:	0800f179 	.word	0x0800f179
 800f2ac:	0800f145 	.word	0x0800f145

0800f2b0 <_ReadData>:
 800f2b0:	b508      	push	{r3, lr}
 800f2b2:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 800f2b6:	4798      	blx	r3
 800f2b8:	bd08      	pop	{r3, pc}

0800f2ba <_WriteData>:
 800f2ba:	b508      	push	{r3, lr}
 800f2bc:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800f2c0:	b288      	uxth	r0, r1
 800f2c2:	4798      	blx	r3
 800f2c4:	bd08      	pop	{r3, pc}
	...

0800f2c8 <_FillRect>:
 800f2c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2cc:	4f3d      	ldr	r7, [pc, #244]	; (800f3c4 <_FillRect+0xfc>)
 800f2ce:	6884      	ldr	r4, [r0, #8]
 800f2d0:	4682      	mov	sl, r0
 800f2d2:	6838      	ldr	r0, [r7, #0]
 800f2d4:	7c00      	ldrb	r0, [r0, #16]
 800f2d6:	f010 0f01 	tst.w	r0, #1
 800f2da:	b085      	sub	sp, #20
 800f2dc:	460e      	mov	r6, r1
 800f2de:	4615      	mov	r5, r2
 800f2e0:	4698      	mov	r8, r3
 800f2e2:	ebc1 0903 	rsb	r9, r1, r3
 800f2e6:	d045      	beq.n	800f374 <_FillRect+0xac>
 800f2e8:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 800f2ec:	980e      	ldr	r0, [sp, #56]	; 0x38
 800f2ee:	4285      	cmp	r5, r0
 800f2f0:	dc65      	bgt.n	800f3be <_FillRect+0xf6>
 800f2f2:	f8d4 c0c4 	ldr.w	ip, [r4, #196]	; 0xc4
 800f2f6:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800f2f8:	f1bc 0f00 	cmp.w	ip, #0
 800f2fc:	d101      	bne.n	800f302 <_FillRect+0x3a>
 800f2fe:	46b4      	mov	ip, r6
 800f300:	e007      	b.n	800f312 <_FillRect+0x4a>
 800f302:	e88d 00a0 	stmia.w	sp, {r5, r7}
 800f306:	4650      	mov	r0, sl
 800f308:	4631      	mov	r1, r6
 800f30a:	462a      	mov	r2, r5
 800f30c:	4643      	mov	r3, r8
 800f30e:	47e0      	blx	ip
 800f310:	e011      	b.n	800f336 <_FillRect+0x6e>
 800f312:	45c4      	cmp	ip, r8
 800f314:	dc0e      	bgt.n	800f334 <_FillRect+0x6c>
 800f316:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800f31a:	f8cd c00c 	str.w	ip, [sp, #12]
 800f31e:	4661      	mov	r1, ip
 800f320:	4650      	mov	r0, sl
 800f322:	462a      	mov	r2, r5
 800f324:	4798      	blx	r3
 800f326:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800f32a:	f827 0b02 	strh.w	r0, [r7], #2
 800f32e:	f10c 0c01 	add.w	ip, ip, #1
 800f332:	e7ee      	b.n	800f312 <_FillRect+0x4a>
 800f334:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800f336:	1ebb      	subs	r3, r7, #2
 800f338:	f109 0c01 	add.w	ip, r9, #1
 800f33c:	445f      	add	r7, fp
 800f33e:	42bb      	cmp	r3, r7
 800f340:	d005      	beq.n	800f34e <_FillRect+0x86>
 800f342:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800f344:	8859      	ldrh	r1, [r3, #2]
 800f346:	404a      	eors	r2, r1
 800f348:	f823 2f02 	strh.w	r2, [r3, #2]!
 800f34c:	e7f7      	b.n	800f33e <_FillRect+0x76>
 800f34e:	9500      	str	r5, [sp, #0]
 800f350:	462a      	mov	r2, r5
 800f352:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800f356:	f8cd c00c 	str.w	ip, [sp, #12]
 800f35a:	4620      	mov	r0, r4
 800f35c:	4631      	mov	r1, r6
 800f35e:	4643      	mov	r3, r8
 800f360:	47b8      	blx	r7
 800f362:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800f366:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f36a:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f36c:	4661      	mov	r1, ip
 800f36e:	4798      	blx	r3
 800f370:	3501      	adds	r5, #1
 800f372:	e7bb      	b.n	800f2ec <_FillRect+0x24>
 800f374:	980e      	ldr	r0, [sp, #56]	; 0x38
 800f376:	9000      	str	r0, [sp, #0]
 800f378:	1a85      	subs	r5, r0, r2
 800f37a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800f37e:	4620      	mov	r0, r4
 800f380:	47b0      	blx	r6
 800f382:	683b      	ldr	r3, [r7, #0]
 800f384:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 800f386:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f388:	f109 0901 	add.w	r9, r9, #1
 800f38c:	f8d3 8000 	ldr.w	r8, [r3]
 800f390:	fb05 9509 	mla	r5, r5, r9, r9
 800f394:	2301      	movs	r3, #1
 800f396:	b195      	cbz	r5, 800f3be <_FillRect+0xf6>
 800f398:	2dfa      	cmp	r5, #250	; 0xfa
 800f39a:	bf34      	ite	cc
 800f39c:	462e      	movcc	r6, r5
 800f39e:	26fa      	movcs	r6, #250	; 0xfa
 800f3a0:	b12b      	cbz	r3, 800f3ae <_FillRect+0xe6>
 800f3a2:	4638      	mov	r0, r7
 800f3a4:	fa1f f188 	uxth.w	r1, r8
 800f3a8:	4632      	mov	r2, r6
 800f3aa:	f001 fac5 	bl	8010938 <GUI__memset16>
 800f3ae:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f3b2:	4638      	mov	r0, r7
 800f3b4:	4631      	mov	r1, r6
 800f3b6:	4798      	blx	r3
 800f3b8:	1bad      	subs	r5, r5, r6
 800f3ba:	2300      	movs	r3, #0
 800f3bc:	e7eb      	b.n	800f396 <_FillRect+0xce>
 800f3be:	b005      	add	sp, #20
 800f3c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3c4:	2000016c 	.word	0x2000016c

0800f3c8 <_DrawBitmap>:
 800f3c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3cc:	b08d      	sub	sp, #52	; 0x34
 800f3ce:	6885      	ldr	r5, [r0, #8]
 800f3d0:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800f3d2:	9305      	str	r3, [sp, #20]
 800f3d4:	1e7b      	subs	r3, r7, #1
 800f3d6:	2b01      	cmp	r3, #1
 800f3d8:	9009      	str	r0, [sp, #36]	; 0x24
 800f3da:	9108      	str	r1, [sp, #32]
 800f3dc:	920a      	str	r2, [sp, #40]	; 0x28
 800f3de:	950b      	str	r5, [sp, #44]	; 0x2c
 800f3e0:	d903      	bls.n	800f3ea <_DrawBitmap+0x22>
 800f3e2:	2f04      	cmp	r7, #4
 800f3e4:	d001      	beq.n	800f3ea <_DrawBitmap+0x22>
 800f3e6:	2f08      	cmp	r7, #8
 800f3e8:	d106      	bne.n	800f3f8 <_DrawBitmap+0x30>
 800f3ea:	4b8f      	ldr	r3, [pc, #572]	; (800f628 <_DrawBitmap+0x260>)
 800f3ec:	681b      	ldr	r3, [r3, #0]
 800f3ee:	7c1b      	ldrb	r3, [r3, #16]
 800f3f0:	f003 0303 	and.w	r3, r3, #3
 800f3f4:	2b02      	cmp	r3, #2
 800f3f6:	d010      	beq.n	800f41a <_DrawBitmap+0x52>
 800f3f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f3fa:	9f16      	ldr	r7, [sp, #88]	; 0x58
 800f3fc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f3fe:	9908      	ldr	r1, [sp, #32]
 800f400:	9b05      	ldr	r3, [sp, #20]
 800f402:	443a      	add	r2, r7
 800f404:	4429      	add	r1, r5
 800f406:	3a01      	subs	r2, #1
 800f408:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800f40a:	9200      	str	r2, [sp, #0]
 800f40c:	440b      	add	r3, r1
 800f40e:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 800f412:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f414:	4628      	mov	r0, r5
 800f416:	3b01      	subs	r3, #1
 800f418:	47a0      	blx	r4
 800f41a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800f41e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f420:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800f422:	ebc7 030b 	rsb	r3, r7, fp
 800f426:	42ab      	cmp	r3, r5
 800f428:	f280 8251 	bge.w	800f8ce <_DrawBitmap+0x506>
 800f42c:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800f42e:	1e7b      	subs	r3, r7, #1
 800f430:	2b0f      	cmp	r3, #15
 800f432:	f200 8245 	bhi.w	800f8c0 <_DrawBitmap+0x4f8>
 800f436:	e8df f013 	tbh	[pc, r3, lsl #1]
 800f43a:	0010      	.short	0x0010
 800f43c:	024300b7 	.word	0x024300b7
 800f440:	02430140 	.word	0x02430140
 800f444:	02430243 	.word	0x02430243
 800f448:	024301d7 	.word	0x024301d7
 800f44c:	02430243 	.word	0x02430243
 800f450:	02430243 	.word	0x02430243
 800f454:	02430243 	.word	0x02430243
 800f458:	023d      	.short	0x023d
 800f45a:	4b73      	ldr	r3, [pc, #460]	; (800f628 <_DrawBitmap+0x260>)
 800f45c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800f45e:	681b      	ldr	r3, [r3, #0]
 800f460:	68ac      	ldr	r4, [r5, #8]
 800f462:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800f464:	7c1b      	ldrb	r3, [r3, #16]
 800f466:	682f      	ldr	r7, [r5, #0]
 800f468:	686d      	ldr	r5, [r5, #4]
 800f46a:	9507      	str	r5, [sp, #28]
 800f46c:	f8dd a020 	ldr.w	sl, [sp, #32]
 800f470:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f472:	f003 0303 	and.w	r3, r3, #3
 800f476:	2b02      	cmp	r3, #2
 800f478:	44aa      	add	sl, r5
 800f47a:	d01b      	beq.n	800f4b4 <_DrawBitmap+0xec>
 800f47c:	2b03      	cmp	r3, #3
 800f47e:	d06e      	beq.n	800f55e <_DrawBitmap+0x196>
 800f480:	2b01      	cmp	r3, #1
 800f482:	d06c      	beq.n	800f55e <_DrawBitmap+0x196>
 800f484:	9e05      	ldr	r6, [sp, #20]
 800f486:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 800f48a:	f898 1000 	ldrb.w	r1, [r8]
 800f48e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800f492:	2280      	movs	r2, #128	; 0x80
 800f494:	412a      	asrs	r2, r5
 800f496:	4211      	tst	r1, r2
 800f498:	bf16      	itet	ne
 800f49a:	9907      	ldrne	r1, [sp, #28]
 800f49c:	b2b8      	uxtheq	r0, r7
 800f49e:	b288      	uxthne	r0, r1
 800f4a0:	3501      	adds	r5, #1
 800f4a2:	4798      	blx	r3
 800f4a4:	2d08      	cmp	r5, #8
 800f4a6:	bf04      	itt	eq
 800f4a8:	f108 0801 	addeq.w	r8, r8, #1
 800f4ac:	2500      	moveq	r5, #0
 800f4ae:	3e01      	subs	r6, #1
 800f4b0:	d1eb      	bne.n	800f48a <_DrawBitmap+0xc2>
 800f4b2:	e205      	b.n	800f8c0 <_DrawBitmap+0x4f8>
 800f4b4:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f4b6:	9506      	str	r5, [sp, #24]
 800f4b8:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800f4bc:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800f4c0:	f8cd a00c 	str.w	sl, [sp, #12]
 800f4c4:	2500      	movs	r5, #0
 800f4c6:	4656      	mov	r6, sl
 800f4c8:	462b      	mov	r3, r5
 800f4ca:	9f06      	ldr	r7, [sp, #24]
 800f4cc:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f4d0:	783a      	ldrb	r2, [r7, #0]
 800f4d2:	fa4c fc08 	asr.w	ip, ip, r8
 800f4d6:	ea12 0c0c 	ands.w	ip, r2, ip
 800f4da:	d00b      	beq.n	800f4f4 <_DrawBitmap+0x12c>
 800f4dc:	b913      	cbnz	r3, 800f4e4 <_DrawBitmap+0x11c>
 800f4de:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800f4e2:	9603      	str	r6, [sp, #12]
 800f4e4:	9f07      	ldr	r7, [sp, #28]
 800f4e6:	f8a9 7000 	strh.w	r7, [r9]
 800f4ea:	3501      	adds	r5, #1
 800f4ec:	f109 0902 	add.w	r9, r9, #2
 800f4f0:	2301      	movs	r3, #1
 800f4f2:	e017      	b.n	800f524 <_DrawBitmap+0x15c>
 800f4f4:	2b01      	cmp	r3, #1
 800f4f6:	d114      	bne.n	800f522 <_DrawBitmap+0x15a>
 800f4f8:	f8cd b000 	str.w	fp, [sp]
 800f4fc:	f8cd c010 	str.w	ip, [sp, #16]
 800f500:	4620      	mov	r0, r4
 800f502:	9903      	ldr	r1, [sp, #12]
 800f504:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800f508:	465a      	mov	r2, fp
 800f50a:	1e73      	subs	r3, r6, #1
 800f50c:	47b8      	blx	r7
 800f50e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f512:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f514:	4629      	mov	r1, r5
 800f516:	4798      	blx	r3
 800f518:	f8dd c010 	ldr.w	ip, [sp, #16]
 800f51c:	4665      	mov	r5, ip
 800f51e:	4663      	mov	r3, ip
 800f520:	e000      	b.n	800f524 <_DrawBitmap+0x15c>
 800f522:	4663      	mov	r3, ip
 800f524:	f108 0801 	add.w	r8, r8, #1
 800f528:	f1b8 0f08 	cmp.w	r8, #8
 800f52c:	f106 0601 	add.w	r6, r6, #1
 800f530:	d104      	bne.n	800f53c <_DrawBitmap+0x174>
 800f532:	9f06      	ldr	r7, [sp, #24]
 800f534:	3701      	adds	r7, #1
 800f536:	9706      	str	r7, [sp, #24]
 800f538:	f04f 0800 	mov.w	r8, #0
 800f53c:	9a05      	ldr	r2, [sp, #20]
 800f53e:	4452      	add	r2, sl
 800f540:	42b2      	cmp	r2, r6
 800f542:	d1c2      	bne.n	800f4ca <_DrawBitmap+0x102>
 800f544:	9f05      	ldr	r7, [sp, #20]
 800f546:	1e7b      	subs	r3, r7, #1
 800f548:	4453      	add	r3, sl
 800f54a:	2d00      	cmp	r5, #0
 800f54c:	f000 81b8 	beq.w	800f8c0 <_DrawBitmap+0x4f8>
 800f550:	f8cd b000 	str.w	fp, [sp]
 800f554:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800f558:	9903      	ldr	r1, [sp, #12]
 800f55a:	4620      	mov	r0, r4
 800f55c:	e13d      	b.n	800f7da <_DrawBitmap+0x412>
 800f55e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800f562:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800f564:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f566:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800f56a:	782a      	ldrb	r2, [r5, #0]
 800f56c:	2380      	movs	r3, #128	; 0x80
 800f56e:	4133      	asrs	r3, r6
 800f570:	44d1      	add	r9, sl
 800f572:	421a      	tst	r2, r3
 800f574:	ebc8 0909 	rsb	r9, r8, r9
 800f578:	d00d      	beq.n	800f596 <_DrawBitmap+0x1ce>
 800f57a:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800f57e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f580:	4649      	mov	r1, r9
 800f582:	465a      	mov	r2, fp
 800f584:	4798      	blx	r3
 800f586:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f588:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 800f58c:	4043      	eors	r3, r0
 800f58e:	4649      	mov	r1, r9
 800f590:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f592:	465a      	mov	r2, fp
 800f594:	47b8      	blx	r7
 800f596:	3601      	adds	r6, #1
 800f598:	2e08      	cmp	r6, #8
 800f59a:	bf04      	itt	eq
 800f59c:	3501      	addeq	r5, #1
 800f59e:	2600      	moveq	r6, #0
 800f5a0:	f1b8 0801 	subs.w	r8, r8, #1
 800f5a4:	d1df      	bne.n	800f566 <_DrawBitmap+0x19e>
 800f5a6:	e18b      	b.n	800f8c0 <_DrawBitmap+0x4f8>
 800f5a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800f5aa:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800f5ac:	68ac      	ldr	r4, [r5, #8]
 800f5ae:	2f00      	cmp	r7, #0
 800f5b0:	f000 8186 	beq.w	800f8c0 <_DrawBitmap+0x4f8>
 800f5b4:	4b1c      	ldr	r3, [pc, #112]	; (800f628 <_DrawBitmap+0x260>)
 800f5b6:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f5b8:	681b      	ldr	r3, [r3, #0]
 800f5ba:	f895 a000 	ldrb.w	sl, [r5]
 800f5be:	7c1b      	ldrb	r3, [r3, #16]
 800f5c0:	f013 0303 	ands.w	r3, r3, #3
 800f5c4:	d011      	beq.n	800f5ea <_DrawBitmap+0x222>
 800f5c6:	2b02      	cmp	r3, #2
 800f5c8:	f040 817a 	bne.w	800f8c0 <_DrawBitmap+0x4f8>
 800f5cc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f5ce:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800f5d2:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800f5d4:	9703      	str	r7, [sp, #12]
 800f5d6:	44a9      	add	r9, r5
 800f5d8:	46a8      	mov	r8, r5
 800f5da:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f5dc:	9507      	str	r5, [sp, #28]
 800f5de:	2500      	movs	r5, #0
 800f5e0:	f8cd 9018 	str.w	r9, [sp, #24]
 800f5e4:	464e      	mov	r6, r9
 800f5e6:	462b      	mov	r3, r5
 800f5e8:	e040      	b.n	800f66c <_DrawBitmap+0x2a4>
 800f5ea:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f5ec:	9e05      	ldr	r6, [sp, #20]
 800f5ee:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800f5f0:	f1c5 0303 	rsb	r3, r5, #3
 800f5f4:	005b      	lsls	r3, r3, #1
 800f5f6:	f1c3 0206 	rsb	r2, r3, #6
 800f5fa:	21c0      	movs	r1, #192	; 0xc0
 800f5fc:	fa41 f202 	asr.w	r2, r1, r2
 800f600:	ea02 020a 	and.w	r2, r2, sl
 800f604:	40da      	lsrs	r2, r3
 800f606:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f608:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800f60c:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800f610:	3501      	adds	r5, #1
 800f612:	4798      	blx	r3
 800f614:	2d04      	cmp	r5, #4
 800f616:	d103      	bne.n	800f620 <_DrawBitmap+0x258>
 800f618:	f897 a001 	ldrb.w	sl, [r7, #1]
 800f61c:	2500      	movs	r5, #0
 800f61e:	3701      	adds	r7, #1
 800f620:	3e01      	subs	r6, #1
 800f622:	d1e5      	bne.n	800f5f0 <_DrawBitmap+0x228>
 800f624:	e14c      	b.n	800f8c0 <_DrawBitmap+0x4f8>
 800f626:	bf00      	nop
 800f628:	2000016c 	.word	0x2000016c
 800f62c:	b913      	cbnz	r3, 800f634 <_DrawBitmap+0x26c>
 800f62e:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800f630:	9703      	str	r7, [sp, #12]
 800f632:	9606      	str	r6, [sp, #24]
 800f634:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800f636:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800f63a:	9f03      	ldr	r7, [sp, #12]
 800f63c:	803b      	strh	r3, [r7, #0]
 800f63e:	3702      	adds	r7, #2
 800f640:	3501      	adds	r5, #1
 800f642:	9703      	str	r7, [sp, #12]
 800f644:	2301      	movs	r3, #1
 800f646:	f108 0801 	add.w	r8, r8, #1
 800f64a:	f1b8 0f04 	cmp.w	r8, #4
 800f64e:	f106 0601 	add.w	r6, r6, #1
 800f652:	d106      	bne.n	800f662 <_DrawBitmap+0x29a>
 800f654:	9f07      	ldr	r7, [sp, #28]
 800f656:	f897 a001 	ldrb.w	sl, [r7, #1]
 800f65a:	3701      	adds	r7, #1
 800f65c:	9707      	str	r7, [sp, #28]
 800f65e:	f04f 0800 	mov.w	r8, #0
 800f662:	9a05      	ldr	r2, [sp, #20]
 800f664:	444a      	add	r2, r9
 800f666:	42b2      	cmp	r2, r6
 800f668:	f000 80ac 	beq.w	800f7c4 <_DrawBitmap+0x3fc>
 800f66c:	f1c8 0203 	rsb	r2, r8, #3
 800f670:	0052      	lsls	r2, r2, #1
 800f672:	f1c2 0106 	rsb	r1, r2, #6
 800f676:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 800f67a:	fa4c fc01 	asr.w	ip, ip, r1
 800f67e:	ea0c 0c0a 	and.w	ip, ip, sl
 800f682:	fa3c fc02 	lsrs.w	ip, ip, r2
 800f686:	d1d1      	bne.n	800f62c <_DrawBitmap+0x264>
 800f688:	2b01      	cmp	r3, #1
 800f68a:	d114      	bne.n	800f6b6 <_DrawBitmap+0x2ee>
 800f68c:	f8cd b000 	str.w	fp, [sp]
 800f690:	f8cd c010 	str.w	ip, [sp, #16]
 800f694:	4620      	mov	r0, r4
 800f696:	9906      	ldr	r1, [sp, #24]
 800f698:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800f69c:	465a      	mov	r2, fp
 800f69e:	1e73      	subs	r3, r6, #1
 800f6a0:	47b8      	blx	r7
 800f6a2:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f6a6:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f6a8:	4629      	mov	r1, r5
 800f6aa:	4798      	blx	r3
 800f6ac:	f8dd c010 	ldr.w	ip, [sp, #16]
 800f6b0:	4665      	mov	r5, ip
 800f6b2:	4663      	mov	r3, ip
 800f6b4:	e7c7      	b.n	800f646 <_DrawBitmap+0x27e>
 800f6b6:	4663      	mov	r3, ip
 800f6b8:	e7c5      	b.n	800f646 <_DrawBitmap+0x27e>
 800f6ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800f6bc:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800f6be:	68ac      	ldr	r4, [r5, #8]
 800f6c0:	2f00      	cmp	r7, #0
 800f6c2:	f000 80fd 	beq.w	800f8c0 <_DrawBitmap+0x4f8>
 800f6c6:	4b83      	ldr	r3, [pc, #524]	; (800f8d4 <_DrawBitmap+0x50c>)
 800f6c8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f6ca:	681b      	ldr	r3, [r3, #0]
 800f6cc:	f895 a000 	ldrb.w	sl, [r5]
 800f6d0:	7c1b      	ldrb	r3, [r3, #16]
 800f6d2:	f013 0303 	ands.w	r3, r3, #3
 800f6d6:	d011      	beq.n	800f6fc <_DrawBitmap+0x334>
 800f6d8:	2b02      	cmp	r3, #2
 800f6da:	f040 80f1 	bne.w	800f8c0 <_DrawBitmap+0x4f8>
 800f6de:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f6e0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800f6e4:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800f6e6:	9703      	str	r7, [sp, #12]
 800f6e8:	44a9      	add	r9, r5
 800f6ea:	46a8      	mov	r8, r5
 800f6ec:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f6ee:	9507      	str	r5, [sp, #28]
 800f6f0:	2500      	movs	r5, #0
 800f6f2:	f8cd 9018 	str.w	r9, [sp, #24]
 800f6f6:	464e      	mov	r6, r9
 800f6f8:	462b      	mov	r3, r5
 800f6fa:	e03c      	b.n	800f776 <_DrawBitmap+0x3ae>
 800f6fc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f6fe:	9e05      	ldr	r6, [sp, #20]
 800f700:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800f702:	f1c5 0301 	rsb	r3, r5, #1
 800f706:	009b      	lsls	r3, r3, #2
 800f708:	f1c3 0204 	rsb	r2, r3, #4
 800f70c:	21f0      	movs	r1, #240	; 0xf0
 800f70e:	fa41 f202 	asr.w	r2, r1, r2
 800f712:	ea02 020a 	and.w	r2, r2, sl
 800f716:	40da      	lsrs	r2, r3
 800f718:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f71a:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800f71e:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800f722:	3501      	adds	r5, #1
 800f724:	4798      	blx	r3
 800f726:	2d02      	cmp	r5, #2
 800f728:	d103      	bne.n	800f732 <_DrawBitmap+0x36a>
 800f72a:	f897 a001 	ldrb.w	sl, [r7, #1]
 800f72e:	2500      	movs	r5, #0
 800f730:	3701      	adds	r7, #1
 800f732:	3e01      	subs	r6, #1
 800f734:	d1e5      	bne.n	800f702 <_DrawBitmap+0x33a>
 800f736:	e0c3      	b.n	800f8c0 <_DrawBitmap+0x4f8>
 800f738:	b913      	cbnz	r3, 800f740 <_DrawBitmap+0x378>
 800f73a:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800f73c:	9703      	str	r7, [sp, #12]
 800f73e:	9606      	str	r6, [sp, #24]
 800f740:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800f742:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800f746:	9f03      	ldr	r7, [sp, #12]
 800f748:	803b      	strh	r3, [r7, #0]
 800f74a:	3702      	adds	r7, #2
 800f74c:	3501      	adds	r5, #1
 800f74e:	9703      	str	r7, [sp, #12]
 800f750:	2301      	movs	r3, #1
 800f752:	f108 0801 	add.w	r8, r8, #1
 800f756:	f1b8 0f02 	cmp.w	r8, #2
 800f75a:	f106 0601 	add.w	r6, r6, #1
 800f75e:	d106      	bne.n	800f76e <_DrawBitmap+0x3a6>
 800f760:	9f07      	ldr	r7, [sp, #28]
 800f762:	f897 a001 	ldrb.w	sl, [r7, #1]
 800f766:	3701      	adds	r7, #1
 800f768:	9707      	str	r7, [sp, #28]
 800f76a:	f04f 0800 	mov.w	r8, #0
 800f76e:	9a05      	ldr	r2, [sp, #20]
 800f770:	444a      	add	r2, r9
 800f772:	42b2      	cmp	r2, r6
 800f774:	d026      	beq.n	800f7c4 <_DrawBitmap+0x3fc>
 800f776:	f1c8 0201 	rsb	r2, r8, #1
 800f77a:	0092      	lsls	r2, r2, #2
 800f77c:	f1c2 0104 	rsb	r1, r2, #4
 800f780:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 800f784:	fa4c fc01 	asr.w	ip, ip, r1
 800f788:	ea0c 0c0a 	and.w	ip, ip, sl
 800f78c:	fa3c fc02 	lsrs.w	ip, ip, r2
 800f790:	d1d2      	bne.n	800f738 <_DrawBitmap+0x370>
 800f792:	2b01      	cmp	r3, #1
 800f794:	d114      	bne.n	800f7c0 <_DrawBitmap+0x3f8>
 800f796:	f8cd b000 	str.w	fp, [sp]
 800f79a:	f8cd c010 	str.w	ip, [sp, #16]
 800f79e:	4620      	mov	r0, r4
 800f7a0:	9906      	ldr	r1, [sp, #24]
 800f7a2:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800f7a6:	465a      	mov	r2, fp
 800f7a8:	1e73      	subs	r3, r6, #1
 800f7aa:	47b8      	blx	r7
 800f7ac:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f7b0:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f7b2:	4629      	mov	r1, r5
 800f7b4:	4798      	blx	r3
 800f7b6:	f8dd c010 	ldr.w	ip, [sp, #16]
 800f7ba:	4665      	mov	r5, ip
 800f7bc:	4663      	mov	r3, ip
 800f7be:	e7c8      	b.n	800f752 <_DrawBitmap+0x38a>
 800f7c0:	4663      	mov	r3, ip
 800f7c2:	e7c6      	b.n	800f752 <_DrawBitmap+0x38a>
 800f7c4:	9f05      	ldr	r7, [sp, #20]
 800f7c6:	1e7b      	subs	r3, r7, #1
 800f7c8:	444b      	add	r3, r9
 800f7ca:	2d00      	cmp	r5, #0
 800f7cc:	d078      	beq.n	800f8c0 <_DrawBitmap+0x4f8>
 800f7ce:	f8cd b000 	str.w	fp, [sp]
 800f7d2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800f7d6:	9906      	ldr	r1, [sp, #24]
 800f7d8:	4620      	mov	r0, r4
 800f7da:	465a      	mov	r2, fp
 800f7dc:	47b0      	blx	r6
 800f7de:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f7e2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f7e4:	4629      	mov	r1, r5
 800f7e6:	e06a      	b.n	800f8be <_DrawBitmap+0x4f6>
 800f7e8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800f7ea:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800f7ec:	68ac      	ldr	r4, [r5, #8]
 800f7ee:	2f00      	cmp	r7, #0
 800f7f0:	d066      	beq.n	800f8c0 <_DrawBitmap+0x4f8>
 800f7f2:	4b38      	ldr	r3, [pc, #224]	; (800f8d4 <_DrawBitmap+0x50c>)
 800f7f4:	681b      	ldr	r3, [r3, #0]
 800f7f6:	7c1b      	ldrb	r3, [r3, #16]
 800f7f8:	f013 0303 	ands.w	r3, r3, #3
 800f7fc:	d009      	beq.n	800f812 <_DrawBitmap+0x44a>
 800f7fe:	2b02      	cmp	r3, #2
 800f800:	d15e      	bne.n	800f8c0 <_DrawBitmap+0x4f8>
 800f802:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800f806:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800f80a:	2600      	movs	r6, #0
 800f80c:	464f      	mov	r7, r9
 800f80e:	4633      	mov	r3, r6
 800f810:	e022      	b.n	800f858 <_DrawBitmap+0x490>
 800f812:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f814:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f816:	9f05      	ldr	r7, [sp, #20]
 800f818:	443b      	add	r3, r7
 800f81a:	1b5b      	subs	r3, r3, r5
 800f81c:	2b00      	cmp	r3, #0
 800f81e:	dd4f      	ble.n	800f8c0 <_DrawBitmap+0x4f8>
 800f820:	f815 2b01 	ldrb.w	r2, [r5], #1
 800f824:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800f826:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800f82a:	f837 0022 	ldrh.w	r0, [r7, r2, lsl #2]
 800f82e:	4798      	blx	r3
 800f830:	e7f0      	b.n	800f814 <_DrawBitmap+0x44c>
 800f832:	b913      	cbnz	r3, 800f83a <_DrawBitmap+0x472>
 800f834:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800f838:	46b9      	mov	r9, r7
 800f83a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800f83c:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 800f840:	f8a8 3000 	strh.w	r3, [r8]
 800f844:	3601      	adds	r6, #1
 800f846:	f108 0802 	add.w	r8, r8, #2
 800f84a:	2301      	movs	r3, #1
 800f84c:	9a08      	ldr	r2, [sp, #32]
 800f84e:	9d05      	ldr	r5, [sp, #20]
 800f850:	3701      	adds	r7, #1
 800f852:	442a      	add	r2, r5
 800f854:	42ba      	cmp	r2, r7
 800f856:	d01c      	beq.n	800f892 <_DrawBitmap+0x4ca>
 800f858:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f85a:	9808      	ldr	r0, [sp, #32]
 800f85c:	1a2a      	subs	r2, r5, r0
 800f85e:	f812 a007 	ldrb.w	sl, [r2, r7]
 800f862:	f1ba 0f00 	cmp.w	sl, #0
 800f866:	d1e4      	bne.n	800f832 <_DrawBitmap+0x46a>
 800f868:	2b01      	cmp	r3, #1
 800f86a:	d110      	bne.n	800f88e <_DrawBitmap+0x4c6>
 800f86c:	f8cd b000 	str.w	fp, [sp]
 800f870:	4620      	mov	r0, r4
 800f872:	4649      	mov	r1, r9
 800f874:	465a      	mov	r2, fp
 800f876:	1e7b      	subs	r3, r7, #1
 800f878:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800f87c:	47a8      	blx	r5
 800f87e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f882:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f884:	4631      	mov	r1, r6
 800f886:	4798      	blx	r3
 800f888:	4656      	mov	r6, sl
 800f88a:	4653      	mov	r3, sl
 800f88c:	e7de      	b.n	800f84c <_DrawBitmap+0x484>
 800f88e:	4653      	mov	r3, sl
 800f890:	e7dc      	b.n	800f84c <_DrawBitmap+0x484>
 800f892:	9f08      	ldr	r7, [sp, #32]
 800f894:	1e6b      	subs	r3, r5, #1
 800f896:	443b      	add	r3, r7
 800f898:	b196      	cbz	r6, 800f8c0 <_DrawBitmap+0x4f8>
 800f89a:	f8cd b000 	str.w	fp, [sp]
 800f89e:	4620      	mov	r0, r4
 800f8a0:	4649      	mov	r1, r9
 800f8a2:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800f8a6:	465a      	mov	r2, fp
 800f8a8:	47a8      	blx	r5
 800f8aa:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f8ae:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f8b0:	4631      	mov	r1, r6
 800f8b2:	e004      	b.n	800f8be <_DrawBitmap+0x4f6>
 800f8b4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800f8b6:	9819      	ldr	r0, [sp, #100]	; 0x64
 800f8b8:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
 800f8bc:	9905      	ldr	r1, [sp, #20]
 800f8be:	4798      	blx	r3
 800f8c0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800f8c2:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800f8c4:	442f      	add	r7, r5
 800f8c6:	9719      	str	r7, [sp, #100]	; 0x64
 800f8c8:	f10b 0b01 	add.w	fp, fp, #1
 800f8cc:	e5a7      	b.n	800f41e <_DrawBitmap+0x56>
 800f8ce:	b00d      	add	sp, #52	; 0x34
 800f8d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8d4:	2000016c 	.word	0x2000016c

0800f8d8 <GUIDRV_FlexColor_SetMode16bppC0B16>:
 800f8d8:	b510      	push	{r4, lr}
 800f8da:	4604      	mov	r4, r0
 800f8dc:	f000 fa58 	bl	800fd90 <GUIDRV_FlexColor__InitOnce>
 800f8e0:	68a4      	ldr	r4, [r4, #8]
 800f8e2:	4b10      	ldr	r3, [pc, #64]	; (800f924 <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 800f8e4:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 800f8e8:	4b0f      	ldr	r3, [pc, #60]	; (800f928 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 800f8ea:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 800f8ee:	4b0f      	ldr	r3, [pc, #60]	; (800f92c <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 800f8f0:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800f8f4:	4b0e      	ldr	r3, [pc, #56]	; (800f930 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 800f8f6:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 800f8fa:	4b0e      	ldr	r3, [pc, #56]	; (800f934 <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 800f8fc:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800f900:	4b0d      	ldr	r3, [pc, #52]	; (800f938 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 800f902:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 800f906:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
 800f90a:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 800f90e:	4620      	mov	r0, r4
 800f910:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800f914:	2110      	movs	r1, #16
 800f916:	4798      	blx	r3
 800f918:	2310      	movs	r3, #16
 800f91a:	63a3      	str	r3, [r4, #56]	; 0x38
 800f91c:	4b07      	ldr	r3, [pc, #28]	; (800f93c <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 800f91e:	6463      	str	r3, [r4, #68]	; 0x44
 800f920:	bd10      	pop	{r4, pc}
 800f922:	bf00      	nop
 800f924:	0800f3c9 	.word	0x0800f3c9
 800f928:	0800f2c9 	.word	0x0800f2c9
 800f92c:	0800fcdf 	.word	0x0800fcdf
 800f930:	0800fc4f 	.word	0x0800fc4f
 800f934:	0800f2b1 	.word	0x0800f2b1
 800f938:	0800f2bb 	.word	0x0800f2bb
 800f93c:	08021134 	.word	0x08021134

0800f940 <_Log2PhysX_X0Y0S0>:
 800f940:	4608      	mov	r0, r1
 800f942:	4770      	bx	lr

0800f944 <_Log2PhysX_X1Y0S0>:
 800f944:	6800      	ldr	r0, [r0, #0]
 800f946:	1a40      	subs	r0, r0, r1
 800f948:	3801      	subs	r0, #1
 800f94a:	4770      	bx	lr

0800f94c <_Log2PhysX_X0Y1S0>:
 800f94c:	4608      	mov	r0, r1
 800f94e:	4770      	bx	lr

0800f950 <_Log2PhysX_X1Y1S0>:
 800f950:	6800      	ldr	r0, [r0, #0]
 800f952:	1a40      	subs	r0, r0, r1
 800f954:	3801      	subs	r0, #1
 800f956:	4770      	bx	lr

0800f958 <_Log2PhysX_X0Y0S1>:
 800f958:	4610      	mov	r0, r2
 800f95a:	4770      	bx	lr

0800f95c <_Log2PhysX_X1Y0S1>:
 800f95c:	6840      	ldr	r0, [r0, #4]
 800f95e:	1a80      	subs	r0, r0, r2
 800f960:	3801      	subs	r0, #1
 800f962:	4770      	bx	lr

0800f964 <_Log2PhysX_X0Y1S1>:
 800f964:	4610      	mov	r0, r2
 800f966:	4770      	bx	lr

0800f968 <_Log2PhysX_X1Y1S1>:
 800f968:	6840      	ldr	r0, [r0, #4]
 800f96a:	1a80      	subs	r0, r0, r2
 800f96c:	3801      	subs	r0, #1
 800f96e:	4770      	bx	lr

0800f970 <_Log2PhysY_X0Y0S0>:
 800f970:	4610      	mov	r0, r2
 800f972:	4770      	bx	lr

0800f974 <_Log2PhysY_X1Y0S0>:
 800f974:	4610      	mov	r0, r2
 800f976:	4770      	bx	lr

0800f978 <_Log2PhysY_X0Y1S0>:
 800f978:	6840      	ldr	r0, [r0, #4]
 800f97a:	1a80      	subs	r0, r0, r2
 800f97c:	3801      	subs	r0, #1
 800f97e:	4770      	bx	lr

0800f980 <_Log2PhysY_X1Y1S0>:
 800f980:	6840      	ldr	r0, [r0, #4]
 800f982:	1a80      	subs	r0, r0, r2
 800f984:	3801      	subs	r0, #1
 800f986:	4770      	bx	lr

0800f988 <_Log2PhysY_X0Y0S1>:
 800f988:	4608      	mov	r0, r1
 800f98a:	4770      	bx	lr

0800f98c <_Log2PhysY_X1Y0S1>:
 800f98c:	4608      	mov	r0, r1
 800f98e:	4770      	bx	lr

0800f990 <_Log2PhysY_X0Y1S1>:
 800f990:	6800      	ldr	r0, [r0, #0]
 800f992:	1a40      	subs	r0, r0, r1
 800f994:	3801      	subs	r0, #1
 800f996:	4770      	bx	lr

0800f998 <_Log2PhysY_X1Y1S1>:
 800f998:	6800      	ldr	r0, [r0, #0]
 800f99a:	1a40      	subs	r0, r0, r1
 800f99c:	3801      	subs	r0, #1
 800f99e:	4770      	bx	lr

0800f9a0 <_SetPixelIndex>:
 800f9a0:	b510      	push	{r4, lr}
 800f9a2:	6884      	ldr	r4, [r0, #8]
 800f9a4:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 800f9a8:	47a0      	blx	r4
 800f9aa:	bd10      	pop	{r4, pc}

0800f9ac <_GetPixelIndex>:
 800f9ac:	b508      	push	{r3, lr}
 800f9ae:	6883      	ldr	r3, [r0, #8]
 800f9b0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800f9b4:	4798      	blx	r3
 800f9b6:	bd08      	pop	{r3, pc}

0800f9b8 <_XorPixel>:
 800f9b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f9ba:	4604      	mov	r4, r0
 800f9bc:	460f      	mov	r7, r1
 800f9be:	4616      	mov	r6, r2
 800f9c0:	6885      	ldr	r5, [r0, #8]
 800f9c2:	f7ff fff3 	bl	800f9ac <_GetPixelIndex>
 800f9c6:	9001      	str	r0, [sp, #4]
 800f9c8:	f8dd e004 	ldr.w	lr, [sp, #4]
 800f9cc:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800f9ce:	4620      	mov	r0, r4
 800f9d0:	4639      	mov	r1, r7
 800f9d2:	4632      	mov	r2, r6
 800f9d4:	ea8e 0303 	eor.w	r3, lr, r3
 800f9d8:	f7ff ffe2 	bl	800f9a0 <_SetPixelIndex>
 800f9dc:	b003      	add	sp, #12
 800f9de:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f9e0 <_DrawHLine>:
 800f9e0:	b513      	push	{r0, r1, r4, lr}
 800f9e2:	6884      	ldr	r4, [r0, #8]
 800f9e4:	9200      	str	r2, [sp, #0]
 800f9e6:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800f9ea:	47a0      	blx	r4
 800f9ec:	b002      	add	sp, #8
 800f9ee:	bd10      	pop	{r4, pc}

0800f9f0 <_DrawVLine>:
 800f9f0:	b513      	push	{r0, r1, r4, lr}
 800f9f2:	6884      	ldr	r4, [r0, #8]
 800f9f4:	9300      	str	r3, [sp, #0]
 800f9f6:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800f9fa:	460b      	mov	r3, r1
 800f9fc:	47a0      	blx	r4
 800f9fe:	b002      	add	sp, #8
 800fa00:	bd10      	pop	{r4, pc}

0800fa02 <_FillRect>:
 800fa02:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fa04:	9c06      	ldr	r4, [sp, #24]
 800fa06:	6885      	ldr	r5, [r0, #8]
 800fa08:	9400      	str	r4, [sp, #0]
 800fa0a:	f8d5 40e8 	ldr.w	r4, [r5, #232]	; 0xe8
 800fa0e:	47a0      	blx	r4
 800fa10:	b003      	add	sp, #12
 800fa12:	bd30      	pop	{r4, r5, pc}

0800fa14 <_DrawBitmap>:
 800fa14:	b530      	push	{r4, r5, lr}
 800fa16:	b087      	sub	sp, #28
 800fa18:	6885      	ldr	r5, [r0, #8]
 800fa1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800fa1c:	9400      	str	r4, [sp, #0]
 800fa1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800fa20:	9401      	str	r4, [sp, #4]
 800fa22:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800fa24:	9402      	str	r4, [sp, #8]
 800fa26:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800fa28:	9403      	str	r4, [sp, #12]
 800fa2a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800fa2c:	9404      	str	r4, [sp, #16]
 800fa2e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800fa30:	9405      	str	r4, [sp, #20]
 800fa32:	f8d5 40e4 	ldr.w	r4, [r5, #228]	; 0xe4
 800fa36:	47a0      	blx	r4
 800fa38:	b007      	add	sp, #28
 800fa3a:	bd30      	pop	{r4, r5, pc}

0800fa3c <_GetDevFunc_SetRect>:
 800fa3c:	4770      	bx	lr
	...

0800fa40 <_GetDevFunc_SetRectOutside>:
 800fa40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fa42:	9e07      	ldr	r6, [sp, #28]
 800fa44:	6884      	ldr	r4, [r0, #8]
 800fa46:	4d0c      	ldr	r5, [pc, #48]	; (800fa78 <_GetDevFunc_SetRectOutside+0x38>)
 800fa48:	b176      	cbz	r6, 800fa68 <_GetDevFunc_SetRectOutside+0x28>
 800fa4a:	6828      	ldr	r0, [r5, #0]
 800fa4c:	b988      	cbnz	r0, 800fa72 <_GetDevFunc_SetRectOutside+0x32>
 800fa4e:	9806      	ldr	r0, [sp, #24]
 800fa50:	9000      	str	r0, [sp, #0]
 800fa52:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800fa56:	4620      	mov	r0, r4
 800fa58:	47b0      	blx	r6
 800fa5a:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 800fa5e:	602b      	str	r3, [r5, #0]
 800fa60:	4b06      	ldr	r3, [pc, #24]	; (800fa7c <_GetDevFunc_SetRectOutside+0x3c>)
 800fa62:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800fa66:	e004      	b.n	800fa72 <_GetDevFunc_SetRectOutside+0x32>
 800fa68:	682b      	ldr	r3, [r5, #0]
 800fa6a:	b113      	cbz	r3, 800fa72 <_GetDevFunc_SetRectOutside+0x32>
 800fa6c:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800fa70:	602e      	str	r6, [r5, #0]
 800fa72:	b002      	add	sp, #8
 800fa74:	bd70      	pop	{r4, r5, r6, pc}
 800fa76:	bf00      	nop
 800fa78:	20019468 	.word	0x20019468
 800fa7c:	0800fa3d 	.word	0x0800fa3d

0800fa80 <_ReadPixelCust_16bpp>:
 800fa80:	b508      	push	{r3, lr}
 800fa82:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800fa84:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
 800fa88:	6990      	ldr	r0, [r2, #24]
 800fa8a:	4798      	blx	r3
 800fa8c:	bd08      	pop	{r3, pc}

0800fa8e <_ReadPixelCust_18bpp>:
 800fa8e:	b508      	push	{r3, lr}
 800fa90:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800fa92:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 800fa96:	6990      	ldr	r0, [r2, #24]
 800fa98:	4798      	blx	r3
 800fa9a:	bd08      	pop	{r3, pc}

0800fa9c <_ReadRectCust_16bpp>:
 800fa9c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800faa0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800faa2:	6884      	ldr	r4, [r0, #8]
 800faa4:	9500      	str	r5, [sp, #0]
 800faa6:	4617      	mov	r7, r2
 800faa8:	4620      	mov	r0, r4
 800faaa:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800faae:	4699      	mov	r9, r3
 800fab0:	4688      	mov	r8, r1
 800fab2:	1bed      	subs	r5, r5, r7
 800fab4:	47b0      	blx	r6
 800fab6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800fab8:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800fabc:	6988      	ldr	r0, [r1, #24]
 800fabe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fac0:	ebc8 0809 	rsb	r8, r8, r9
 800fac4:	1c6a      	adds	r2, r5, #1
 800fac6:	fb08 2202 	mla	r2, r8, r2, r2
 800faca:	4798      	blx	r3
 800facc:	b003      	add	sp, #12
 800face:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800fad2 <_ReadRectCust_18bpp>:
 800fad2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800fad6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800fad8:	6884      	ldr	r4, [r0, #8]
 800fada:	9500      	str	r5, [sp, #0]
 800fadc:	4617      	mov	r7, r2
 800fade:	4620      	mov	r0, r4
 800fae0:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800fae4:	4699      	mov	r9, r3
 800fae6:	4688      	mov	r8, r1
 800fae8:	1bed      	subs	r5, r5, r7
 800faea:	47b0      	blx	r6
 800faec:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800faee:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 800faf2:	6988      	ldr	r0, [r1, #24]
 800faf4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800faf6:	ebc8 0809 	rsb	r8, r8, r9
 800fafa:	1c6a      	adds	r2, r5, #1
 800fafc:	fb08 2202 	mla	r2, r8, r2, r2
 800fb00:	4798      	blx	r3
 800fb02:	b003      	add	sp, #12
 800fb04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800fb08 <_GetDevFunc>:
 800fb08:	3901      	subs	r1, #1
 800fb0a:	2917      	cmp	r1, #23
 800fb0c:	d824      	bhi.n	800fb58 <_GetDevFunc+0x50>
 800fb0e:	e8df f001 	tbb	[pc, r1]
 800fb12:	2310      	.short	0x2310
 800fb14:	23232323 	.word	0x23232323
 800fb18:	0c232323 	.word	0x0c232323
 800fb1c:	23150e25 	.word	0x23150e25
 800fb20:	23232323 	.word	0x23232323
 800fb24:	1f232323 	.word	0x1f232323
 800fb28:	211a      	.short	0x211a
 800fb2a:	480d      	ldr	r0, [pc, #52]	; (800fb60 <_GetDevFunc+0x58>)
 800fb2c:	4770      	bx	lr
 800fb2e:	480d      	ldr	r0, [pc, #52]	; (800fb64 <_GetDevFunc+0x5c>)
 800fb30:	4770      	bx	lr
 800fb32:	6803      	ldr	r3, [r0, #0]
 800fb34:	689b      	ldr	r3, [r3, #8]
 800fb36:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 800fb3a:	4770      	bx	lr
 800fb3c:	6803      	ldr	r3, [r0, #0]
 800fb3e:	689b      	ldr	r3, [r3, #8]
 800fb40:	f8d3 00f4 	ldr.w	r0, [r3, #244]	; 0xf4
 800fb44:	4770      	bx	lr
 800fb46:	6803      	ldr	r3, [r0, #0]
 800fb48:	689b      	ldr	r3, [r3, #8]
 800fb4a:	f8d3 00f8 	ldr.w	r0, [r3, #248]	; 0xf8
 800fb4e:	4770      	bx	lr
 800fb50:	4805      	ldr	r0, [pc, #20]	; (800fb68 <_GetDevFunc+0x60>)
 800fb52:	4770      	bx	lr
 800fb54:	4805      	ldr	r0, [pc, #20]	; (800fb6c <_GetDevFunc+0x64>)
 800fb56:	4770      	bx	lr
 800fb58:	2000      	movs	r0, #0
 800fb5a:	4770      	bx	lr
 800fb5c:	4804      	ldr	r0, [pc, #16]	; (800fb70 <_GetDevFunc+0x68>)
 800fb5e:	4770      	bx	lr
 800fb60:	0800febf 	.word	0x0800febf
 800fb64:	0800fe61 	.word	0x0800fe61
 800fb68:	0800fdc5 	.word	0x0800fdc5
 800fb6c:	0800fa41 	.word	0x0800fa41
 800fb70:	0800feab 	.word	0x0800feab

0800fb74 <_GetDevProp>:
 800fb74:	3901      	subs	r1, #1
 800fb76:	6880      	ldr	r0, [r0, #8]
 800fb78:	290d      	cmp	r1, #13
 800fb7a:	d823      	bhi.n	800fbc4 <_GetDevProp+0x50>
 800fb7c:	e8df f001 	tbb	[pc, r1]
 800fb80:	0f0d0b09 	.word	0x0f0d0b09
 800fb84:	11222222 	.word	0x11222222
 800fb88:	13252507 	.word	0x13252507
 800fb8c:	1d18      	.short	0x1d18
 800fb8e:	2000      	movs	r0, #0
 800fb90:	4770      	bx	lr
 800fb92:	6800      	ldr	r0, [r0, #0]
 800fb94:	4770      	bx	lr
 800fb96:	6840      	ldr	r0, [r0, #4]
 800fb98:	4770      	bx	lr
 800fb9a:	6880      	ldr	r0, [r0, #8]
 800fb9c:	4770      	bx	lr
 800fb9e:	68c0      	ldr	r0, [r0, #12]
 800fba0:	4770      	bx	lr
 800fba2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fba4:	4770      	bx	lr
 800fba6:	b188      	cbz	r0, 800fbcc <_GetDevProp+0x58>
 800fba8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fbaa:	f000 0001 	and.w	r0, r0, #1
 800fbae:	4770      	bx	lr
 800fbb0:	b160      	cbz	r0, 800fbcc <_GetDevProp+0x58>
 800fbb2:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fbb4:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800fbb8:	4770      	bx	lr
 800fbba:	b138      	cbz	r0, 800fbcc <_GetDevProp+0x58>
 800fbbc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fbbe:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800fbc2:	4770      	bx	lr
 800fbc4:	f04f 30ff 	mov.w	r0, #4294967295
 800fbc8:	4770      	bx	lr
 800fbca:	2001      	movs	r0, #1
 800fbcc:	4770      	bx	lr

0800fbce <_GetDevData>:
 800fbce:	6883      	ldr	r3, [r0, #8]
 800fbd0:	2901      	cmp	r1, #1
 800fbd2:	bf0c      	ite	eq
 800fbd4:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800fbd6:	2000      	movne	r0, #0
 800fbd8:	4770      	bx	lr

0800fbda <_GetRect>:
 800fbda:	6883      	ldr	r3, [r0, #8]
 800fbdc:	2200      	movs	r2, #0
 800fbde:	800a      	strh	r2, [r1, #0]
 800fbe0:	804a      	strh	r2, [r1, #2]
 800fbe2:	681a      	ldr	r2, [r3, #0]
 800fbe4:	685b      	ldr	r3, [r3, #4]
 800fbe6:	3a01      	subs	r2, #1
 800fbe8:	3b01      	subs	r3, #1
 800fbea:	808a      	strh	r2, [r1, #4]
 800fbec:	80cb      	strh	r3, [r1, #6]
 800fbee:	4770      	bx	lr

0800fbf0 <GUIDRV_FlexColor__SetLog2Phys>:
 800fbf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fbf2:	4d10      	ldr	r5, [pc, #64]	; (800fc34 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 800fbf4:	462e      	mov	r6, r5
 800fbf6:	4607      	mov	r7, r0
 800fbf8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800fbfa:	b091      	sub	sp, #68	; 0x44
 800fbfc:	466c      	mov	r4, sp
 800fbfe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fc00:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800fc04:	3520      	adds	r5, #32
 800fc06:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800fc0a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800fc0c:	ac08      	add	r4, sp, #32
 800fc0e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fc10:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800fc14:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800fc18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800fc1a:	aa10      	add	r2, sp, #64	; 0x40
 800fc1c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800fc20:	f853 2c40 	ldr.w	r2, [r3, #-64]
 800fc24:	f8c7 2100 	str.w	r2, [r7, #256]	; 0x100
 800fc28:	f853 3c20 	ldr.w	r3, [r3, #-32]
 800fc2c:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800fc30:	b011      	add	sp, #68	; 0x44
 800fc32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc34:	0801b2cc 	.word	0x0801b2cc

0800fc38 <_SetOrg>:
 800fc38:	b507      	push	{r0, r1, r2, lr}
 800fc3a:	6980      	ldr	r0, [r0, #24]
 800fc3c:	e88d 0006 	stmia.w	sp, {r1, r2}
 800fc40:	2103      	movs	r1, #3
 800fc42:	466a      	mov	r2, sp
 800fc44:	f7f8 fe5c 	bl	8008900 <LCD_X_DisplayDriver>
 800fc48:	b003      	add	sp, #12
 800fc4a:	f85d fb04 	ldr.w	pc, [sp], #4

0800fc4e <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 800fc4e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800fc52:	6884      	ldr	r4, [r0, #8]
 800fc54:	4698      	mov	r8, r3
 800fc56:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800fc58:	079b      	lsls	r3, r3, #30
 800fc5a:	4689      	mov	r9, r1
 800fc5c:	4617      	mov	r7, r2
 800fc5e:	d532      	bpl.n	800fcc6 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 800fc60:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800fc64:	4620      	mov	r0, r4
 800fc66:	4798      	blx	r3
 800fc68:	f8d4 5104 	ldr.w	r5, [r4, #260]	; 0x104
 800fc6c:	4606      	mov	r6, r0
 800fc6e:	463a      	mov	r2, r7
 800fc70:	4620      	mov	r0, r4
 800fc72:	4649      	mov	r1, r9
 800fc74:	47a8      	blx	r5
 800fc76:	6923      	ldr	r3, [r4, #16]
 800fc78:	69a2      	ldr	r2, [r4, #24]
 800fc7a:	429e      	cmp	r6, r3
 800fc7c:	bfac      	ite	ge
 800fc7e:	2300      	movge	r3, #0
 800fc80:	2301      	movlt	r3, #1
 800fc82:	4296      	cmp	r6, r2
 800fc84:	bfd4      	ite	le
 800fc86:	461a      	movle	r2, r3
 800fc88:	f043 0201 	orrgt.w	r2, r3, #1
 800fc8c:	6963      	ldr	r3, [r4, #20]
 800fc8e:	4298      	cmp	r0, r3
 800fc90:	bfac      	ite	ge
 800fc92:	4613      	movge	r3, r2
 800fc94:	f042 0301 	orrlt.w	r3, r2, #1
 800fc98:	4605      	mov	r5, r0
 800fc9a:	b913      	cbnz	r3, 800fca2 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 800fc9c:	69e3      	ldr	r3, [r4, #28]
 800fc9e:	4298      	cmp	r0, r3
 800fca0:	dd0a      	ble.n	800fcb8 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 800fca2:	6862      	ldr	r2, [r4, #4]
 800fca4:	6823      	ldr	r3, [r4, #0]
 800fca6:	3a01      	subs	r2, #1
 800fca8:	9200      	str	r2, [sp, #0]
 800fcaa:	2100      	movs	r1, #0
 800fcac:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800fcb0:	4620      	mov	r0, r4
 800fcb2:	460a      	mov	r2, r1
 800fcb4:	3b01      	subs	r3, #1
 800fcb6:	47b8      	blx	r7
 800fcb8:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 800fcbc:	4620      	mov	r0, r4
 800fcbe:	4631      	mov	r1, r6
 800fcc0:	462a      	mov	r2, r5
 800fcc2:	47b8      	blx	r7
 800fcc4:	e003      	b.n	800fcce <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 800fcc6:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800fcca:	4620      	mov	r0, r4
 800fccc:	47a8      	blx	r5
 800fcce:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800fcd2:	4620      	mov	r0, r4
 800fcd4:	4641      	mov	r1, r8
 800fcd6:	4798      	blx	r3
 800fcd8:	b003      	add	sp, #12
 800fcda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800fcde <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 800fcde:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fce0:	6884      	ldr	r4, [r0, #8]
 800fce2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800fce4:	079b      	lsls	r3, r3, #30
 800fce6:	460f      	mov	r7, r1
 800fce8:	4616      	mov	r6, r2
 800fcea:	d545      	bpl.n	800fd78 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 800fcec:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800fcf0:	4620      	mov	r0, r4
 800fcf2:	4798      	blx	r3
 800fcf4:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800fcf8:	4632      	mov	r2, r6
 800fcfa:	4605      	mov	r5, r0
 800fcfc:	4639      	mov	r1, r7
 800fcfe:	4620      	mov	r0, r4
 800fd00:	4798      	blx	r3
 800fd02:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800fd06:	4606      	mov	r6, r0
 800fd08:	b11b      	cbz	r3, 800fd12 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 800fd0a:	4620      	mov	r0, r4
 800fd0c:	2101      	movs	r1, #1
 800fd0e:	2200      	movs	r2, #0
 800fd10:	4798      	blx	r3
 800fd12:	6923      	ldr	r3, [r4, #16]
 800fd14:	69a2      	ldr	r2, [r4, #24]
 800fd16:	429d      	cmp	r5, r3
 800fd18:	bfac      	ite	ge
 800fd1a:	2300      	movge	r3, #0
 800fd1c:	2301      	movlt	r3, #1
 800fd1e:	4295      	cmp	r5, r2
 800fd20:	bfd4      	ite	le
 800fd22:	461a      	movle	r2, r3
 800fd24:	f043 0201 	orrgt.w	r2, r3, #1
 800fd28:	6963      	ldr	r3, [r4, #20]
 800fd2a:	429e      	cmp	r6, r3
 800fd2c:	bfac      	ite	ge
 800fd2e:	4613      	movge	r3, r2
 800fd30:	f042 0301 	orrlt.w	r3, r2, #1
 800fd34:	b913      	cbnz	r3, 800fd3c <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 800fd36:	69e3      	ldr	r3, [r4, #28]
 800fd38:	429e      	cmp	r6, r3
 800fd3a:	dd0a      	ble.n	800fd52 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 800fd3c:	6862      	ldr	r2, [r4, #4]
 800fd3e:	6823      	ldr	r3, [r4, #0]
 800fd40:	3a01      	subs	r2, #1
 800fd42:	9200      	str	r2, [sp, #0]
 800fd44:	2100      	movs	r1, #0
 800fd46:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800fd4a:	4620      	mov	r0, r4
 800fd4c:	460a      	mov	r2, r1
 800fd4e:	3b01      	subs	r3, #1
 800fd50:	47b8      	blx	r7
 800fd52:	4629      	mov	r1, r5
 800fd54:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800fd58:	4620      	mov	r0, r4
 800fd5a:	4632      	mov	r2, r6
 800fd5c:	4798      	blx	r3
 800fd5e:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800fd62:	4620      	mov	r0, r4
 800fd64:	4798      	blx	r3
 800fd66:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800fd6a:	4605      	mov	r5, r0
 800fd6c:	b16b      	cbz	r3, 800fd8a <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800fd6e:	4620      	mov	r0, r4
 800fd70:	2100      	movs	r1, #0
 800fd72:	2201      	movs	r2, #1
 800fd74:	4798      	blx	r3
 800fd76:	e008      	b.n	800fd8a <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800fd78:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800fd7c:	4620      	mov	r0, r4
 800fd7e:	4798      	blx	r3
 800fd80:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800fd84:	4620      	mov	r0, r4
 800fd86:	4798      	blx	r3
 800fd88:	4605      	mov	r5, r0
 800fd8a:	4628      	mov	r0, r5
 800fd8c:	b003      	add	sp, #12
 800fd8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fd90 <GUIDRV_FlexColor__InitOnce>:
 800fd90:	b538      	push	{r3, r4, r5, lr}
 800fd92:	6885      	ldr	r5, [r0, #8]
 800fd94:	4604      	mov	r4, r0
 800fd96:	b995      	cbnz	r5, 800fdbe <GUIDRV_FlexColor__InitOnce+0x2e>
 800fd98:	f44f 70ba 	mov.w	r0, #372	; 0x174
 800fd9c:	f003 faf8 	bl	8013390 <GUI_ALLOC_GetFixedBlock>
 800fda0:	f44f 72ba 	mov.w	r2, #372	; 0x174
 800fda4:	60a0      	str	r0, [r4, #8]
 800fda6:	4629      	mov	r1, r5
 800fda8:	f000 fdf4 	bl	8010994 <GUI__memset>
 800fdac:	68a3      	ldr	r3, [r4, #8]
 800fdae:	2202      	movs	r2, #2
 800fdb0:	84da      	strh	r2, [r3, #38]	; 0x26
 800fdb2:	2201      	movs	r2, #1
 800fdb4:	621a      	str	r2, [r3, #32]
 800fdb6:	4a02      	ldr	r2, [pc, #8]	; (800fdc0 <GUIDRV_FlexColor__InitOnce+0x30>)
 800fdb8:	641c      	str	r4, [r3, #64]	; 0x40
 800fdba:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 800fdbe:	bd38      	pop	{r3, r4, r5, pc}
 800fdc0:	0800fbf1 	.word	0x0800fbf1

0800fdc4 <_SetDevFunc>:
 800fdc4:	b570      	push	{r4, r5, r6, lr}
 800fdc6:	4606      	mov	r6, r0
 800fdc8:	460d      	mov	r5, r1
 800fdca:	4614      	mov	r4, r2
 800fdcc:	f7ff ffe0 	bl	800fd90 <GUIDRV_FlexColor__InitOnce>
 800fdd0:	68b3      	ldr	r3, [r6, #8]
 800fdd2:	2b00      	cmp	r3, #0
 800fdd4:	d03b      	beq.n	800fe4e <_SetDevFunc+0x8a>
 800fdd6:	2d26      	cmp	r5, #38	; 0x26
 800fdd8:	d002      	beq.n	800fde0 <_SetDevFunc+0x1c>
 800fdda:	2d27      	cmp	r5, #39	; 0x27
 800fddc:	d016      	beq.n	800fe0c <_SetDevFunc+0x48>
 800fdde:	bd70      	pop	{r4, r5, r6, pc}
 800fde0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800fde2:	2a10      	cmp	r2, #16
 800fde4:	d002      	beq.n	800fdec <_SetDevFunc+0x28>
 800fde6:	2a12      	cmp	r2, #18
 800fde8:	d008      	beq.n	800fdfc <_SetDevFunc+0x38>
 800fdea:	bd70      	pop	{r4, r5, r6, pc}
 800fdec:	4a18      	ldr	r2, [pc, #96]	; (800fe50 <_SetDevFunc+0x8c>)
 800fdee:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 800fdf2:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800fdf6:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800fdfa:	bd70      	pop	{r4, r5, r6, pc}
 800fdfc:	4a15      	ldr	r2, [pc, #84]	; (800fe54 <_SetDevFunc+0x90>)
 800fdfe:	f8c3 40d8 	str.w	r4, [r3, #216]	; 0xd8
 800fe02:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800fe06:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800fe0a:	bd70      	pop	{r4, r5, r6, pc}
 800fe0c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800fe0e:	2a10      	cmp	r2, #16
 800fe10:	d002      	beq.n	800fe18 <_SetDevFunc+0x54>
 800fe12:	2a12      	cmp	r2, #18
 800fe14:	d00e      	beq.n	800fe34 <_SetDevFunc+0x70>
 800fe16:	bd70      	pop	{r4, r5, r6, pc}
 800fe18:	b13c      	cbz	r4, 800fe2a <_SetDevFunc+0x66>
 800fe1a:	4a0f      	ldr	r2, [pc, #60]	; (800fe58 <_SetDevFunc+0x94>)
 800fe1c:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 800fe20:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 800fe24:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800fe28:	bd70      	pop	{r4, r5, r6, pc}
 800fe2a:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 800fe2e:	f8c3 40c4 	str.w	r4, [r3, #196]	; 0xc4
 800fe32:	bd70      	pop	{r4, r5, r6, pc}
 800fe34:	b13c      	cbz	r4, 800fe46 <_SetDevFunc+0x82>
 800fe36:	4a09      	ldr	r2, [pc, #36]	; (800fe5c <_SetDevFunc+0x98>)
 800fe38:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 800fe3c:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800fe40:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 800fe44:	bd70      	pop	{r4, r5, r6, pc}
 800fe46:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800fe4a:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 800fe4e:	bd70      	pop	{r4, r5, r6, pc}
 800fe50:	0800fa81 	.word	0x0800fa81
 800fe54:	0800fa8f 	.word	0x0800fa8f
 800fe58:	0800fa9d 	.word	0x0800fa9d
 800fe5c:	0800fad3 	.word	0x0800fad3

0800fe60 <_GetDevFunc_Init>:
 800fe60:	b538      	push	{r3, r4, r5, lr}
 800fe62:	4605      	mov	r5, r0
 800fe64:	f7ff ff94 	bl	800fd90 <GUIDRV_FlexColor__InitOnce>
 800fe68:	68ac      	ldr	r4, [r5, #8]
 800fe6a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800fe6e:	f003 fa8f 	bl	8013390 <GUI_ALLOC_GetFixedBlock>
 800fe72:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800fe74:	66a0      	str	r0, [r4, #104]	; 0x68
 800fe76:	3307      	adds	r3, #7
 800fe78:	10d8      	asrs	r0, r3, #3
 800fe7a:	6823      	ldr	r3, [r4, #0]
 800fe7c:	4358      	muls	r0, r3
 800fe7e:	f003 fa87 	bl	8013390 <GUI_ALLOC_GetFixedBlock>
 800fe82:	2101      	movs	r1, #1
 800fe84:	2200      	movs	r2, #0
 800fe86:	66e0      	str	r0, [r4, #108]	; 0x6c
 800fe88:	69a8      	ldr	r0, [r5, #24]
 800fe8a:	f7f8 fd39 	bl	8008900 <LCD_X_DisplayDriver>
 800fe8e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800fe92:	4605      	mov	r5, r0
 800fe94:	4620      	mov	r0, r4
 800fe96:	4798      	blx	r3
 800fe98:	4620      	mov	r0, r4
 800fe9a:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800fe9e:	4798      	blx	r3
 800fea0:	2d00      	cmp	r5, #0
 800fea2:	bfd4      	ite	le
 800fea4:	2000      	movle	r0, #0
 800fea6:	2001      	movgt	r0, #1
 800fea8:	bd38      	pop	{r3, r4, r5, pc}

0800feaa <_GetDevFunc_SetSize>:
 800feaa:	b570      	push	{r4, r5, r6, lr}
 800feac:	4604      	mov	r4, r0
 800feae:	460d      	mov	r5, r1
 800feb0:	4616      	mov	r6, r2
 800feb2:	f7ff ff6d 	bl	800fd90 <GUIDRV_FlexColor__InitOnce>
 800feb6:	68a3      	ldr	r3, [r4, #8]
 800feb8:	e883 0060 	stmia.w	r3, {r5, r6}
 800febc:	bd70      	pop	{r4, r5, r6, pc}

0800febe <_GetDevFunc_SetVSize>:
 800febe:	b570      	push	{r4, r5, r6, lr}
 800fec0:	4604      	mov	r4, r0
 800fec2:	460d      	mov	r5, r1
 800fec4:	4616      	mov	r6, r2
 800fec6:	f7ff ff63 	bl	800fd90 <GUIDRV_FlexColor__InitOnce>
 800feca:	68a3      	ldr	r3, [r4, #8]
 800fecc:	609d      	str	r5, [r3, #8]
 800fece:	60de      	str	r6, [r3, #12]
 800fed0:	bd70      	pop	{r4, r5, r6, pc}

0800fed2 <GUIDRV_FlexColor_Config>:
 800fed2:	b538      	push	{r3, r4, r5, lr}
 800fed4:	4605      	mov	r5, r0
 800fed6:	460c      	mov	r4, r1
 800fed8:	f7ff ff5a 	bl	800fd90 <GUIDRV_FlexColor__InitOnce>
 800fedc:	68ab      	ldr	r3, [r5, #8]
 800fede:	6822      	ldr	r2, [r4, #0]
 800fee0:	62da      	str	r2, [r3, #44]	; 0x2c
 800fee2:	6862      	ldr	r2, [r4, #4]
 800fee4:	631a      	str	r2, [r3, #48]	; 0x30
 800fee6:	68a2      	ldr	r2, [r4, #8]
 800fee8:	635a      	str	r2, [r3, #52]	; 0x34
 800feea:	0752      	lsls	r2, r2, #29
 800feec:	d507      	bpl.n	800fefe <GUIDRV_FlexColor_Config+0x2c>
 800feee:	e893 0006 	ldmia.w	r3, {r1, r2}
 800fef2:	601a      	str	r2, [r3, #0]
 800fef4:	6059      	str	r1, [r3, #4]
 800fef6:	68da      	ldr	r2, [r3, #12]
 800fef8:	6899      	ldr	r1, [r3, #8]
 800fefa:	60d9      	str	r1, [r3, #12]
 800fefc:	609a      	str	r2, [r3, #8]
 800fefe:	89a2      	ldrh	r2, [r4, #12]
 800ff00:	849a      	strh	r2, [r3, #36]	; 0x24
 800ff02:	6922      	ldr	r2, [r4, #16]
 800ff04:	b112      	cbz	r2, 800ff0c <GUIDRV_FlexColor_Config+0x3a>
 800ff06:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800ff0a:	621a      	str	r2, [r3, #32]
 800ff0c:	bd38      	pop	{r3, r4, r5, pc}

0800ff0e <GUIDRV_FlexColor_SetFunc>:
 800ff0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ff12:	4604      	mov	r4, r0
 800ff14:	461f      	mov	r7, r3
 800ff16:	4616      	mov	r6, r2
 800ff18:	4688      	mov	r8, r1
 800ff1a:	f7ff ff39 	bl	800fd90 <GUIDRV_FlexColor__InitOnce>
 800ff1e:	68a5      	ldr	r5, [r4, #8]
 800ff20:	4641      	mov	r1, r8
 800ff22:	2268      	movs	r2, #104	; 0x68
 800ff24:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 800ff28:	f00a fd93 	bl	801aa52 <memcpy>
 800ff2c:	4620      	mov	r0, r4
 800ff2e:	47b0      	blx	r6
 800ff30:	4620      	mov	r0, r4
 800ff32:	47b8      	blx	r7
 800ff34:	6923      	ldr	r3, [r4, #16]
 800ff36:	689b      	ldr	r3, [r3, #8]
 800ff38:	4798      	blx	r3
 800ff3a:	62a8      	str	r0, [r5, #40]	; 0x28
 800ff3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ff40 <LCD_UpdateColorIndices>:
 800ff40:	b510      	push	{r4, lr}
 800ff42:	4c07      	ldr	r4, [pc, #28]	; (800ff60 <LCD_UpdateColorIndices+0x20>)
 800ff44:	6823      	ldr	r3, [r4, #0]
 800ff46:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800ff48:	f000 fc8e 	bl	8010868 <LCD_Color2Index>
 800ff4c:	f000 fcac 	bl	80108a8 <LCD_SetColorIndex>
 800ff50:	6823      	ldr	r3, [r4, #0]
 800ff52:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800ff54:	f000 fc88 	bl	8010868 <LCD_Color2Index>
 800ff58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ff5c:	f000 bcc0 	b.w	80108e0 <LCD_SetBkColorIndex>
 800ff60:	2000016c 	.word	0x2000016c

0800ff64 <LCD_SetClipRectEx>:
 800ff64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ff66:	4c09      	ldr	r4, [pc, #36]	; (800ff8c <LCD_SetClipRectEx+0x28>)
 800ff68:	6823      	ldr	r3, [r4, #0]
 800ff6a:	7c5a      	ldrb	r2, [r3, #17]
 800ff6c:	4b08      	ldr	r3, [pc, #32]	; (800ff90 <LCD_SetClipRectEx+0x2c>)
 800ff6e:	4605      	mov	r5, r0
 800ff70:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800ff74:	68c2      	ldr	r2, [r0, #12]
 800ff76:	4669      	mov	r1, sp
 800ff78:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800ff7a:	4790      	blx	r2
 800ff7c:	6820      	ldr	r0, [r4, #0]
 800ff7e:	4629      	mov	r1, r5
 800ff80:	466a      	mov	r2, sp
 800ff82:	3008      	adds	r0, #8
 800ff84:	f000 fdf6 	bl	8010b74 <GUI__IntersectRects>
 800ff88:	b003      	add	sp, #12
 800ff8a:	bd30      	pop	{r4, r5, pc}
 800ff8c:	2000016c 	.word	0x2000016c
 800ff90:	20019ca0 	.word	0x20019ca0

0800ff94 <LCD_SetVSizeEx>:
 800ff94:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ff96:	460d      	mov	r5, r1
 800ff98:	4614      	mov	r4, r2
 800ff9a:	f002 fb47 	bl	801262c <GUI_DEVICE__GetpDriver>
 800ff9e:	9001      	str	r0, [sp, #4]
 800ffa0:	b908      	cbnz	r0, 800ffa6 <LCD_SetVSizeEx+0x12>
 800ffa2:	2001      	movs	r0, #1
 800ffa4:	e00c      	b.n	800ffc0 <LCD_SetVSizeEx+0x2c>
 800ffa6:	68c3      	ldr	r3, [r0, #12]
 800ffa8:	210a      	movs	r1, #10
 800ffaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ffac:	a801      	add	r0, sp, #4
 800ffae:	4798      	blx	r3
 800ffb0:	4603      	mov	r3, r0
 800ffb2:	2800      	cmp	r0, #0
 800ffb4:	d0f5      	beq.n	800ffa2 <LCD_SetVSizeEx+0xe>
 800ffb6:	9801      	ldr	r0, [sp, #4]
 800ffb8:	4629      	mov	r1, r5
 800ffba:	4622      	mov	r2, r4
 800ffbc:	4798      	blx	r3
 800ffbe:	2000      	movs	r0, #0
 800ffc0:	b003      	add	sp, #12
 800ffc2:	bd30      	pop	{r4, r5, pc}

0800ffc4 <LCD_SetSizeEx>:
 800ffc4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ffc6:	460d      	mov	r5, r1
 800ffc8:	4614      	mov	r4, r2
 800ffca:	f002 fb2f 	bl	801262c <GUI_DEVICE__GetpDriver>
 800ffce:	9001      	str	r0, [sp, #4]
 800ffd0:	b908      	cbnz	r0, 800ffd6 <LCD_SetSizeEx+0x12>
 800ffd2:	2001      	movs	r0, #1
 800ffd4:	e00c      	b.n	800fff0 <LCD_SetSizeEx+0x2c>
 800ffd6:	68c3      	ldr	r3, [r0, #12]
 800ffd8:	210b      	movs	r1, #11
 800ffda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ffdc:	a801      	add	r0, sp, #4
 800ffde:	4798      	blx	r3
 800ffe0:	4603      	mov	r3, r0
 800ffe2:	2800      	cmp	r0, #0
 800ffe4:	d0f5      	beq.n	800ffd2 <LCD_SetSizeEx+0xe>
 800ffe6:	9801      	ldr	r0, [sp, #4]
 800ffe8:	4629      	mov	r1, r5
 800ffea:	4622      	mov	r2, r4
 800ffec:	4798      	blx	r3
 800ffee:	2000      	movs	r0, #0
 800fff0:	b003      	add	sp, #12
 800fff2:	bd30      	pop	{r4, r5, pc}

0800fff4 <LCD_SetPosEx>:
 800fff4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fff6:	460d      	mov	r5, r1
 800fff8:	4614      	mov	r4, r2
 800fffa:	f002 fb17 	bl	801262c <GUI_DEVICE__GetpDriver>
 800fffe:	9001      	str	r0, [sp, #4]
 8010000:	b908      	cbnz	r0, 8010006 <LCD_SetPosEx+0x12>
 8010002:	2001      	movs	r0, #1
 8010004:	e00c      	b.n	8010020 <LCD_SetPosEx+0x2c>
 8010006:	68c3      	ldr	r3, [r0, #12]
 8010008:	2103      	movs	r1, #3
 801000a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801000c:	a801      	add	r0, sp, #4
 801000e:	4798      	blx	r3
 8010010:	4603      	mov	r3, r0
 8010012:	2800      	cmp	r0, #0
 8010014:	d0f5      	beq.n	8010002 <LCD_SetPosEx+0xe>
 8010016:	9801      	ldr	r0, [sp, #4]
 8010018:	4629      	mov	r1, r5
 801001a:	4622      	mov	r2, r4
 801001c:	4798      	blx	r3
 801001e:	2000      	movs	r0, #0
 8010020:	b003      	add	sp, #12
 8010022:	bd30      	pop	{r4, r5, pc}

08010024 <LCD_SetLUTEntryEx>:
 8010024:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010026:	460d      	mov	r5, r1
 8010028:	4614      	mov	r4, r2
 801002a:	f002 faff 	bl	801262c <GUI_DEVICE__GetpDriver>
 801002e:	9001      	str	r0, [sp, #4]
 8010030:	b908      	cbnz	r0, 8010036 <LCD_SetLUTEntryEx+0x12>
 8010032:	2001      	movs	r0, #1
 8010034:	e00c      	b.n	8010050 <LCD_SetLUTEntryEx+0x2c>
 8010036:	68c3      	ldr	r3, [r0, #12]
 8010038:	2110      	movs	r1, #16
 801003a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801003c:	a801      	add	r0, sp, #4
 801003e:	4798      	blx	r3
 8010040:	4603      	mov	r3, r0
 8010042:	2800      	cmp	r0, #0
 8010044:	d0f5      	beq.n	8010032 <LCD_SetLUTEntryEx+0xe>
 8010046:	9801      	ldr	r0, [sp, #4]
 8010048:	4629      	mov	r1, r5
 801004a:	4622      	mov	r2, r4
 801004c:	4798      	blx	r3
 801004e:	2000      	movs	r0, #0
 8010050:	b003      	add	sp, #12
 8010052:	bd30      	pop	{r4, r5, pc}

08010054 <LCD_GetPosEx>:
 8010054:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010056:	460d      	mov	r5, r1
 8010058:	4614      	mov	r4, r2
 801005a:	f002 fae7 	bl	801262c <GUI_DEVICE__GetpDriver>
 801005e:	9001      	str	r0, [sp, #4]
 8010060:	b908      	cbnz	r0, 8010066 <LCD_GetPosEx+0x12>
 8010062:	2001      	movs	r0, #1
 8010064:	e00c      	b.n	8010080 <LCD_GetPosEx+0x2c>
 8010066:	68c3      	ldr	r3, [r0, #12]
 8010068:	2104      	movs	r1, #4
 801006a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801006c:	a801      	add	r0, sp, #4
 801006e:	4798      	blx	r3
 8010070:	4603      	mov	r3, r0
 8010072:	2800      	cmp	r0, #0
 8010074:	d0f5      	beq.n	8010062 <LCD_GetPosEx+0xe>
 8010076:	9801      	ldr	r0, [sp, #4]
 8010078:	4629      	mov	r1, r5
 801007a:	4622      	mov	r2, r4
 801007c:	4798      	blx	r3
 801007e:	2000      	movs	r0, #0
 8010080:	b003      	add	sp, #12
 8010082:	bd30      	pop	{r4, r5, pc}

08010084 <_GetDevProp>:
 8010084:	2801      	cmp	r0, #1
 8010086:	b510      	push	{r4, lr}
 8010088:	460c      	mov	r4, r1
 801008a:	dc08      	bgt.n	801009e <_GetDevProp+0x1a>
 801008c:	f002 face 	bl	801262c <GUI_DEVICE__GetpDriver>
 8010090:	b120      	cbz	r0, 801009c <_GetDevProp+0x18>
 8010092:	68c3      	ldr	r3, [r0, #12]
 8010094:	4621      	mov	r1, r4
 8010096:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010098:	4798      	blx	r3
 801009a:	bd10      	pop	{r4, pc}
 801009c:	bd10      	pop	{r4, pc}
 801009e:	2000      	movs	r0, #0
 80100a0:	bd10      	pop	{r4, pc}

080100a2 <_GetMaxValue>:
 80100a2:	b538      	push	{r3, r4, r5, lr}
 80100a4:	4604      	mov	r4, r0
 80100a6:	4621      	mov	r1, r4
 80100a8:	2001      	movs	r0, #1
 80100aa:	f7ff ffeb 	bl	8010084 <_GetDevProp>
 80100ae:	4621      	mov	r1, r4
 80100b0:	4605      	mov	r5, r0
 80100b2:	2000      	movs	r0, #0
 80100b4:	f7ff ffe6 	bl	8010084 <_GetDevProp>
 80100b8:	42a8      	cmp	r0, r5
 80100ba:	bfb8      	it	lt
 80100bc:	4628      	movlt	r0, r5
 80100be:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 80100c2:	bd38      	pop	{r3, r4, r5, pc}

080100c4 <LCD_GetXSizeEx>:
 80100c4:	2101      	movs	r1, #1
 80100c6:	f7ff bfdd 	b.w	8010084 <_GetDevProp>

080100ca <LCD_GetYSizeEx>:
 80100ca:	2102      	movs	r1, #2
 80100cc:	f7ff bfda 	b.w	8010084 <_GetDevProp>

080100d0 <LCD_GetVXSizeEx>:
 80100d0:	2103      	movs	r1, #3
 80100d2:	f7ff bfd7 	b.w	8010084 <_GetDevProp>

080100d6 <LCD_GetVYSizeEx>:
 80100d6:	2104      	movs	r1, #4
 80100d8:	f7ff bfd4 	b.w	8010084 <_GetDevProp>

080100dc <LCD_GetBitsPerPixelEx>:
 80100dc:	2108      	movs	r1, #8
 80100de:	f7ff bfd1 	b.w	8010084 <_GetDevProp>

080100e2 <LCD_GetNumColorsEx>:
 80100e2:	2109      	movs	r1, #9
 80100e4:	f7ff bfce 	b.w	8010084 <_GetDevProp>

080100e8 <LCD_GetXSize>:
 80100e8:	4b02      	ldr	r3, [pc, #8]	; (80100f4 <LCD_GetXSize+0xc>)
 80100ea:	681b      	ldr	r3, [r3, #0]
 80100ec:	7c58      	ldrb	r0, [r3, #17]
 80100ee:	f7ff bfe9 	b.w	80100c4 <LCD_GetXSizeEx>
 80100f2:	bf00      	nop
 80100f4:	2000016c 	.word	0x2000016c

080100f8 <LCD_GetYSize>:
 80100f8:	4b02      	ldr	r3, [pc, #8]	; (8010104 <LCD_GetYSize+0xc>)
 80100fa:	681b      	ldr	r3, [r3, #0]
 80100fc:	7c58      	ldrb	r0, [r3, #17]
 80100fe:	f7ff bfe4 	b.w	80100ca <LCD_GetYSizeEx>
 8010102:	bf00      	nop
 8010104:	2000016c 	.word	0x2000016c

08010108 <LCD_GetNumColors>:
 8010108:	4b02      	ldr	r3, [pc, #8]	; (8010114 <LCD_GetNumColors+0xc>)
 801010a:	681b      	ldr	r3, [r3, #0]
 801010c:	7c58      	ldrb	r0, [r3, #17]
 801010e:	f7ff bfe8 	b.w	80100e2 <LCD_GetNumColorsEx>
 8010112:	bf00      	nop
 8010114:	2000016c 	.word	0x2000016c

08010118 <GUI_GetBitsPerPixelEx>:
 8010118:	b508      	push	{r3, lr}
 801011a:	4b04      	ldr	r3, [pc, #16]	; (801012c <GUI_GetBitsPerPixelEx+0x14>)
 801011c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8010120:	68c3      	ldr	r3, [r0, #12]
 8010122:	2108      	movs	r1, #8
 8010124:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010126:	4798      	blx	r3
 8010128:	bd08      	pop	{r3, pc}
 801012a:	bf00      	nop
 801012c:	20019ca0 	.word	0x20019ca0

08010130 <LCD_GetPaletteEx>:
 8010130:	b508      	push	{r3, lr}
 8010132:	f002 fa7b 	bl	801262c <GUI_DEVICE__GetpDriver>
 8010136:	b120      	cbz	r0, 8010142 <LCD_GetPaletteEx+0x12>
 8010138:	68c3      	ldr	r3, [r0, #12]
 801013a:	2102      	movs	r1, #2
 801013c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801013e:	4798      	blx	r3
 8010140:	bd08      	pop	{r3, pc}
 8010142:	bd08      	pop	{r3, pc}

08010144 <LCD_GetPalette>:
 8010144:	4b02      	ldr	r3, [pc, #8]	; (8010150 <LCD_GetPalette+0xc>)
 8010146:	681b      	ldr	r3, [r3, #0]
 8010148:	7c58      	ldrb	r0, [r3, #17]
 801014a:	f7ff bff1 	b.w	8010130 <LCD_GetPaletteEx>
 801014e:	bf00      	nop
 8010150:	2000016c 	.word	0x2000016c

08010154 <GUI_GetpfIndex2ColorEx>:
 8010154:	4b02      	ldr	r3, [pc, #8]	; (8010160 <GUI_GetpfIndex2ColorEx+0xc>)
 8010156:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 801015a:	691b      	ldr	r3, [r3, #16]
 801015c:	6858      	ldr	r0, [r3, #4]
 801015e:	4770      	bx	lr
 8010160:	20019ca0 	.word	0x20019ca0

08010164 <GUI_GetpfColor2IndexEx>:
 8010164:	4b02      	ldr	r3, [pc, #8]	; (8010170 <GUI_GetpfColor2IndexEx+0xc>)
 8010166:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 801016a:	691b      	ldr	r3, [r3, #16]
 801016c:	6818      	ldr	r0, [r3, #0]
 801016e:	4770      	bx	lr
 8010170:	20019ca0 	.word	0x20019ca0

08010174 <LCD_GetXSizeMax>:
 8010174:	2001      	movs	r0, #1
 8010176:	f7ff bf94 	b.w	80100a2 <_GetMaxValue>

0801017a <LCD_GetYSizeMax>:
 801017a:	2002      	movs	r0, #2
 801017c:	f7ff bf91 	b.w	80100a2 <_GetMaxValue>

08010180 <LCD_GetVXSizeMax>:
 8010180:	2003      	movs	r0, #3
 8010182:	f7ff bf8e 	b.w	80100a2 <_GetMaxValue>
	...

08010188 <LCD_SetDisplaySize>:
 8010188:	4b02      	ldr	r3, [pc, #8]	; (8010194 <LCD_SetDisplaySize+0xc>)
 801018a:	6018      	str	r0, [r3, #0]
 801018c:	4b02      	ldr	r3, [pc, #8]	; (8010198 <LCD_SetDisplaySize+0x10>)
 801018e:	6019      	str	r1, [r3, #0]
 8010190:	4770      	bx	lr
 8010192:	bf00      	nop
 8010194:	20019470 	.word	0x20019470
 8010198:	2001946c 	.word	0x2001946c

0801019c <LCD_GetXSizeDisplay>:
 801019c:	4b01      	ldr	r3, [pc, #4]	; (80101a4 <LCD_GetXSizeDisplay+0x8>)
 801019e:	6818      	ldr	r0, [r3, #0]
 80101a0:	4770      	bx	lr
 80101a2:	bf00      	nop
 80101a4:	20019470 	.word	0x20019470

080101a8 <LCD_GetYSizeDisplay>:
 80101a8:	4b01      	ldr	r3, [pc, #4]	; (80101b0 <LCD_GetYSizeDisplay+0x8>)
 80101aa:	6818      	ldr	r0, [r3, #0]
 80101ac:	4770      	bx	lr
 80101ae:	bf00      	nop
 80101b0:	2001946c 	.word	0x2001946c

080101b4 <LCD__GetBPP>:
 80101b4:	2800      	cmp	r0, #0
 80101b6:	d03b      	beq.n	8010230 <LCD__GetBPP+0x7c>
 80101b8:	f030 0301 	bics.w	r3, r0, #1
 80101bc:	d029      	beq.n	8010212 <LCD__GetBPP+0x5e>
 80101be:	f030 0303 	bics.w	r3, r0, #3
 80101c2:	d028      	beq.n	8010216 <LCD__GetBPP+0x62>
 80101c4:	f030 0307 	bics.w	r3, r0, #7
 80101c8:	d027      	beq.n	801021a <LCD__GetBPP+0x66>
 80101ca:	f030 030f 	bics.w	r3, r0, #15
 80101ce:	d026      	beq.n	801021e <LCD__GetBPP+0x6a>
 80101d0:	f030 031f 	bics.w	r3, r0, #31
 80101d4:	d025      	beq.n	8010222 <LCD__GetBPP+0x6e>
 80101d6:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 80101da:	d024      	beq.n	8010226 <LCD__GetBPP+0x72>
 80101dc:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 80101e0:	f023 0301 	bic.w	r3, r3, #1
 80101e4:	b30b      	cbz	r3, 801022a <LCD__GetBPP+0x76>
 80101e6:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 80101ea:	f023 030f 	bic.w	r3, r3, #15
 80101ee:	b1e3      	cbz	r3, 801022a <LCD__GetBPP+0x76>
 80101f0:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 80101f4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 80101f8:	b1bb      	cbz	r3, 801022a <LCD__GetBPP+0x76>
 80101fa:	0c03      	lsrs	r3, r0, #16
 80101fc:	041b      	lsls	r3, r3, #16
 80101fe:	b1a3      	cbz	r3, 801022a <LCD__GetBPP+0x76>
 8010200:	0c83      	lsrs	r3, r0, #18
 8010202:	049b      	lsls	r3, r3, #18
 8010204:	b19b      	cbz	r3, 801022e <LCD__GetBPP+0x7a>
 8010206:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 801020a:	bf0c      	ite	eq
 801020c:	2018      	moveq	r0, #24
 801020e:	2020      	movne	r0, #32
 8010210:	4770      	bx	lr
 8010212:	2001      	movs	r0, #1
 8010214:	4770      	bx	lr
 8010216:	2002      	movs	r0, #2
 8010218:	4770      	bx	lr
 801021a:	2003      	movs	r0, #3
 801021c:	4770      	bx	lr
 801021e:	2004      	movs	r0, #4
 8010220:	4770      	bx	lr
 8010222:	2005      	movs	r0, #5
 8010224:	4770      	bx	lr
 8010226:	2008      	movs	r0, #8
 8010228:	4770      	bx	lr
 801022a:	2010      	movs	r0, #16
 801022c:	4770      	bx	lr
 801022e:	2012      	movs	r0, #18
 8010230:	4770      	bx	lr

08010232 <LCD__GetBPPDevice>:
 8010232:	b508      	push	{r3, lr}
 8010234:	f7ff ffbe 	bl	80101b4 <LCD__GetBPP>
 8010238:	2801      	cmp	r0, #1
 801023a:	d00f      	beq.n	801025c <LCD__GetBPPDevice+0x2a>
 801023c:	1e83      	subs	r3, r0, #2
 801023e:	2b06      	cmp	r3, #6
 8010240:	d909      	bls.n	8010256 <LCD__GetBPPDevice+0x24>
 8010242:	f1a0 0309 	sub.w	r3, r0, #9
 8010246:	2b07      	cmp	r3, #7
 8010248:	d907      	bls.n	801025a <LCD__GetBPPDevice+0x28>
 801024a:	3811      	subs	r0, #17
 801024c:	2810      	cmp	r0, #16
 801024e:	bf34      	ite	cc
 8010250:	2020      	movcc	r0, #32
 8010252:	2000      	movcs	r0, #0
 8010254:	bd08      	pop	{r3, pc}
 8010256:	2008      	movs	r0, #8
 8010258:	bd08      	pop	{r3, pc}
 801025a:	2010      	movs	r0, #16
 801025c:	bd08      	pop	{r3, pc}
	...

08010260 <_SetDrawMode>:
 8010260:	b570      	push	{r4, r5, r6, lr}
 8010262:	4b08      	ldr	r3, [pc, #32]	; (8010284 <_SetDrawMode+0x24>)
 8010264:	681b      	ldr	r3, [r3, #0]
 8010266:	7c1a      	ldrb	r2, [r3, #16]
 8010268:	ea80 0102 	eor.w	r1, r0, r2
 801026c:	0749      	lsls	r1, r1, #29
 801026e:	d505      	bpl.n	801027c <_SetDrawMode+0x1c>
 8010270:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8010272:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8010274:	6826      	ldr	r6, [r4, #0]
 8010276:	680d      	ldr	r5, [r1, #0]
 8010278:	6025      	str	r5, [r4, #0]
 801027a:	600e      	str	r6, [r1, #0]
 801027c:	7418      	strb	r0, [r3, #16]
 801027e:	4610      	mov	r0, r2
 8010280:	bd70      	pop	{r4, r5, r6, pc}
 8010282:	bf00      	nop
 8010284:	2000016c 	.word	0x2000016c

08010288 <LCD_SetDrawMode>:
 8010288:	b508      	push	{r3, lr}
 801028a:	4b02      	ldr	r3, [pc, #8]	; (8010294 <LCD_SetDrawMode+0xc>)
 801028c:	681b      	ldr	r3, [r3, #0]
 801028e:	689b      	ldr	r3, [r3, #8]
 8010290:	4798      	blx	r3
 8010292:	bd08      	pop	{r3, pc}
 8010294:	20000140 	.word	0x20000140

08010298 <LCD_DrawPixel>:
 8010298:	b538      	push	{r3, r4, r5, lr}
 801029a:	4b14      	ldr	r3, [pc, #80]	; (80102ec <LCD_DrawPixel+0x54>)
 801029c:	681b      	ldr	r3, [r3, #0]
 801029e:	460a      	mov	r2, r1
 80102a0:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 80102a4:	428a      	cmp	r2, r1
 80102a6:	4604      	mov	r4, r0
 80102a8:	db1e      	blt.n	80102e8 <LCD_DrawPixel+0x50>
 80102aa:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80102ae:	428a      	cmp	r2, r1
 80102b0:	dc1a      	bgt.n	80102e8 <LCD_DrawPixel+0x50>
 80102b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80102b6:	4288      	cmp	r0, r1
 80102b8:	db16      	blt.n	80102e8 <LCD_DrawPixel+0x50>
 80102ba:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 80102be:	4288      	cmp	r0, r1
 80102c0:	dc12      	bgt.n	80102e8 <LCD_DrawPixel+0x50>
 80102c2:	7c19      	ldrb	r1, [r3, #16]
 80102c4:	7c58      	ldrb	r0, [r3, #17]
 80102c6:	f011 0f01 	tst.w	r1, #1
 80102ca:	4909      	ldr	r1, [pc, #36]	; (80102f0 <LCD_DrawPixel+0x58>)
 80102cc:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 80102d0:	d004      	beq.n	80102dc <LCD_DrawPixel+0x44>
 80102d2:	68c3      	ldr	r3, [r0, #12]
 80102d4:	4621      	mov	r1, r4
 80102d6:	69db      	ldr	r3, [r3, #28]
 80102d8:	4798      	blx	r3
 80102da:	bd38      	pop	{r3, r4, r5, pc}
 80102dc:	68c1      	ldr	r1, [r0, #12]
 80102de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80102e0:	698d      	ldr	r5, [r1, #24]
 80102e2:	681b      	ldr	r3, [r3, #0]
 80102e4:	4621      	mov	r1, r4
 80102e6:	47a8      	blx	r5
 80102e8:	bd38      	pop	{r3, r4, r5, pc}
 80102ea:	bf00      	nop
 80102ec:	2000016c 	.word	0x2000016c
 80102f0:	20019ca0 	.word	0x20019ca0

080102f4 <LCD_DrawHLine>:
 80102f4:	b538      	push	{r3, r4, r5, lr}
 80102f6:	4b10      	ldr	r3, [pc, #64]	; (8010338 <LCD_DrawHLine+0x44>)
 80102f8:	681c      	ldr	r4, [r3, #0]
 80102fa:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80102fe:	4299      	cmp	r1, r3
 8010300:	460d      	mov	r5, r1
 8010302:	db17      	blt.n	8010334 <LCD_DrawHLine+0x40>
 8010304:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8010308:	4299      	cmp	r1, r3
 801030a:	dc13      	bgt.n	8010334 <LCD_DrawHLine+0x40>
 801030c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8010310:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010314:	4288      	cmp	r0, r1
 8010316:	bfa8      	it	ge
 8010318:	4601      	movge	r1, r0
 801031a:	429a      	cmp	r2, r3
 801031c:	bfb8      	it	lt
 801031e:	4613      	movlt	r3, r2
 8010320:	428b      	cmp	r3, r1
 8010322:	db07      	blt.n	8010334 <LCD_DrawHLine+0x40>
 8010324:	7c60      	ldrb	r0, [r4, #17]
 8010326:	4a05      	ldr	r2, [pc, #20]	; (801033c <LCD_DrawHLine+0x48>)
 8010328:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801032c:	68c2      	ldr	r2, [r0, #12]
 801032e:	6894      	ldr	r4, [r2, #8]
 8010330:	462a      	mov	r2, r5
 8010332:	47a0      	blx	r4
 8010334:	bd38      	pop	{r3, r4, r5, pc}
 8010336:	bf00      	nop
 8010338:	2000016c 	.word	0x2000016c
 801033c:	20019ca0 	.word	0x20019ca0

08010340 <LCD_DrawVLine>:
 8010340:	b538      	push	{r3, r4, r5, lr}
 8010342:	4b10      	ldr	r3, [pc, #64]	; (8010384 <LCD_DrawVLine+0x44>)
 8010344:	681c      	ldr	r4, [r3, #0]
 8010346:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801034a:	4605      	mov	r5, r0
 801034c:	429d      	cmp	r5, r3
 801034e:	4610      	mov	r0, r2
 8010350:	db17      	blt.n	8010382 <LCD_DrawVLine+0x42>
 8010352:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010356:	429d      	cmp	r5, r3
 8010358:	dc13      	bgt.n	8010382 <LCD_DrawVLine+0x42>
 801035a:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 801035e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8010362:	4291      	cmp	r1, r2
 8010364:	bfa8      	it	ge
 8010366:	460a      	movge	r2, r1
 8010368:	4298      	cmp	r0, r3
 801036a:	bfb8      	it	lt
 801036c:	4603      	movlt	r3, r0
 801036e:	4293      	cmp	r3, r2
 8010370:	db07      	blt.n	8010382 <LCD_DrawVLine+0x42>
 8010372:	7c60      	ldrb	r0, [r4, #17]
 8010374:	4904      	ldr	r1, [pc, #16]	; (8010388 <LCD_DrawVLine+0x48>)
 8010376:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 801037a:	68c1      	ldr	r1, [r0, #12]
 801037c:	68cc      	ldr	r4, [r1, #12]
 801037e:	4629      	mov	r1, r5
 8010380:	47a0      	blx	r4
 8010382:	bd38      	pop	{r3, r4, r5, pc}
 8010384:	2000016c 	.word	0x2000016c
 8010388:	20019ca0 	.word	0x20019ca0

0801038c <LCD_FillRect>:
 801038c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801038e:	460e      	mov	r6, r1
 8010390:	4912      	ldr	r1, [pc, #72]	; (80103dc <LCD_FillRect+0x50>)
 8010392:	680c      	ldr	r4, [r1, #0]
 8010394:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8010398:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801039c:	4288      	cmp	r0, r1
 801039e:	bfa8      	it	ge
 80103a0:	4601      	movge	r1, r0
 80103a2:	42aa      	cmp	r2, r5
 80103a4:	bfb8      	it	lt
 80103a6:	4615      	movlt	r5, r2
 80103a8:	428d      	cmp	r5, r1
 80103aa:	db14      	blt.n	80103d6 <LCD_FillRect+0x4a>
 80103ac:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80103b0:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 80103b4:	4296      	cmp	r6, r2
 80103b6:	bfa8      	it	ge
 80103b8:	4632      	movge	r2, r6
 80103ba:	4283      	cmp	r3, r0
 80103bc:	bfa8      	it	ge
 80103be:	4603      	movge	r3, r0
 80103c0:	4293      	cmp	r3, r2
 80103c2:	db08      	blt.n	80103d6 <LCD_FillRect+0x4a>
 80103c4:	7c64      	ldrb	r4, [r4, #17]
 80103c6:	4806      	ldr	r0, [pc, #24]	; (80103e0 <LCD_FillRect+0x54>)
 80103c8:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 80103cc:	68c4      	ldr	r4, [r0, #12]
 80103ce:	9300      	str	r3, [sp, #0]
 80103d0:	6924      	ldr	r4, [r4, #16]
 80103d2:	462b      	mov	r3, r5
 80103d4:	47a0      	blx	r4
 80103d6:	b002      	add	sp, #8
 80103d8:	bd70      	pop	{r4, r5, r6, pc}
 80103da:	bf00      	nop
 80103dc:	2000016c 	.word	0x2000016c
 80103e0:	20019ca0 	.word	0x20019ca0

080103e4 <LCD__DrawBitmap_1bpp>:
 80103e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103e8:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 8010598 <LCD__DrawBitmap_1bpp+0x1b4>
 80103ec:	b08f      	sub	sp, #60	; 0x3c
 80103ee:	f8dc c000 	ldr.w	ip, [ip]
 80103f2:	9009      	str	r0, [sp, #36]	; 0x24
 80103f4:	460e      	mov	r6, r1
 80103f6:	4615      	mov	r5, r2
 80103f8:	469b      	mov	fp, r3
 80103fa:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80103fc:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 8010400:	f1bc 0f00 	cmp.w	ip, #0
 8010404:	d00d      	beq.n	8010422 <LCD__DrawBitmap_1bpp+0x3e>
 8010406:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8010408:	9e19      	ldr	r6, [sp, #100]	; 0x64
 801040a:	9500      	str	r5, [sp, #0]
 801040c:	9601      	str	r6, [sp, #4]
 801040e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8010410:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8010412:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8010414:	9702      	str	r7, [sp, #8]
 8010416:	9503      	str	r5, [sp, #12]
 8010418:	9404      	str	r4, [sp, #16]
 801041a:	9605      	str	r6, [sp, #20]
 801041c:	f8dc 4000 	ldr.w	r4, [ip]
 8010420:	e053      	b.n	80104ca <LCD__DrawBitmap_1bpp+0xe6>
 8010422:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8010424:	9819      	ldr	r0, [sp, #100]	; 0x64
 8010426:	ea47 0300 	orr.w	r3, r7, r0
 801042a:	2b01      	cmp	r3, #1
 801042c:	d14f      	bne.n	80104ce <LCD__DrawBitmap_1bpp+0xea>
 801042e:	4b58      	ldr	r3, [pc, #352]	; (8010590 <LCD__DrawBitmap_1bpp+0x1ac>)
 8010430:	6818      	ldr	r0, [r3, #0]
 8010432:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010436:	1a51      	subs	r1, r2, r1
 8010438:	2900      	cmp	r1, #0
 801043a:	dd08      	ble.n	801044e <LCD__DrawBitmap_1bpp+0x6a>
 801043c:	ebc1 030b 	rsb	r3, r1, fp
 8010440:	2b00      	cmp	r3, #0
 8010442:	f340 80a2 	ble.w	801058a <LCD__DrawBitmap_1bpp+0x1a6>
 8010446:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8010448:	fb07 4401 	mla	r4, r7, r1, r4
 801044c:	e001      	b.n	8010452 <LCD__DrawBitmap_1bpp+0x6e>
 801044e:	465b      	mov	r3, fp
 8010450:	4632      	mov	r2, r6
 8010452:	445e      	add	r6, fp
 8010454:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 8010458:	3e01      	subs	r6, #1
 801045a:	1a76      	subs	r6, r6, r1
 801045c:	2e00      	cmp	r6, #0
 801045e:	dd03      	ble.n	8010468 <LCD__DrawBitmap_1bpp+0x84>
 8010460:	1b9b      	subs	r3, r3, r6
 8010462:	2b00      	cmp	r3, #0
 8010464:	f340 8091 	ble.w	801058a <LCD__DrawBitmap_1bpp+0x1a6>
 8010468:	9909      	ldr	r1, [sp, #36]	; 0x24
 801046a:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 801046e:	4429      	add	r1, r5
 8010470:	3901      	subs	r1, #1
 8010472:	1b89      	subs	r1, r1, r6
 8010474:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8010476:	2900      	cmp	r1, #0
 8010478:	bfc8      	it	gt
 801047a:	ebc1 0505 	rsbgt	r5, r1, r5
 801047e:	ebc8 0106 	rsb	r1, r8, r6
 8010482:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8010486:	42b1      	cmp	r1, r6
 8010488:	da0c      	bge.n	80104a4 <LCD__DrawBitmap_1bpp+0xc0>
 801048a:	ebc1 0c06 	rsb	ip, r1, r6
 801048e:	eb08 070c 	add.w	r7, r8, ip
 8010492:	1b8e      	subs	r6, r1, r6
 8010494:	f02c 0c07 	bic.w	ip, ip, #7
 8010498:	4435      	add	r5, r6
 801049a:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 801049e:	4461      	add	r1, ip
 80104a0:	f007 0807 	and.w	r8, r7, #7
 80104a4:	2d00      	cmp	r5, #0
 80104a6:	dd70      	ble.n	801058a <LCD__DrawBitmap_1bpp+0x1a6>
 80104a8:	7c46      	ldrb	r6, [r0, #17]
 80104aa:	483a      	ldr	r0, [pc, #232]	; (8010594 <LCD__DrawBitmap_1bpp+0x1b0>)
 80104ac:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80104ae:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 80104b2:	68c6      	ldr	r6, [r0, #12]
 80104b4:	9701      	str	r7, [sp, #4]
 80104b6:	9403      	str	r4, [sp, #12]
 80104b8:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80104ba:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 80104bc:	9300      	str	r3, [sp, #0]
 80104be:	9702      	str	r7, [sp, #8]
 80104c0:	f8cd 8010 	str.w	r8, [sp, #16]
 80104c4:	9405      	str	r4, [sp, #20]
 80104c6:	6874      	ldr	r4, [r6, #4]
 80104c8:	462b      	mov	r3, r5
 80104ca:	47a0      	blx	r4
 80104cc:	e05d      	b.n	801058a <LCD__DrawBitmap_1bpp+0x1a6>
 80104ce:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80104d0:	f1c7 0708 	rsb	r7, r7, #8
 80104d4:	970c      	str	r7, [sp, #48]	; 0x30
 80104d6:	4667      	mov	r7, ip
 80104d8:	45dc      	cmp	ip, fp
 80104da:	da56      	bge.n	801058a <LCD__DrawBitmap_1bpp+0x1a6>
 80104dc:	4b2c      	ldr	r3, [pc, #176]	; (8010590 <LCD__DrawBitmap_1bpp+0x1ac>)
 80104de:	9819      	ldr	r0, [sp, #100]	; 0x64
 80104e0:	681b      	ldr	r3, [r3, #0]
 80104e2:	4430      	add	r0, r6
 80104e4:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 80104e8:	900a      	str	r0, [sp, #40]	; 0x28
 80104ea:	1e41      	subs	r1, r0, #1
 80104ec:	4291      	cmp	r1, r2
 80104ee:	910b      	str	r1, [sp, #44]	; 0x2c
 80104f0:	db45      	blt.n	801057e <LCD__DrawBitmap_1bpp+0x19a>
 80104f2:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 80104f6:	429e      	cmp	r6, r3
 80104f8:	dc41      	bgt.n	801057e <LCD__DrawBitmap_1bpp+0x19a>
 80104fa:	f04f 0800 	mov.w	r8, #0
 80104fe:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8010502:	9408      	str	r4, [sp, #32]
 8010504:	46c2      	mov	sl, r8
 8010506:	45aa      	cmp	sl, r5
 8010508:	da39      	bge.n	801057e <LCD__DrawBitmap_1bpp+0x19a>
 801050a:	f1b8 0f00 	cmp.w	r8, #0
 801050e:	d105      	bne.n	801051c <LCD__DrawBitmap_1bpp+0x138>
 8010510:	9a08      	ldr	r2, [sp, #32]
 8010512:	7817      	ldrb	r7, [r2, #0]
 8010514:	3201      	adds	r2, #1
 8010516:	9208      	str	r2, [sp, #32]
 8010518:	f04f 0808 	mov.w	r8, #8
 801051c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801051e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8010520:	4a1b      	ldr	r2, [pc, #108]	; (8010590 <LCD__DrawBitmap_1bpp+0x1ac>)
 8010522:	fa47 f300 	asr.w	r3, r7, r0
 8010526:	ebc1 0808 	rsb	r8, r1, r8
 801052a:	408f      	lsls	r7, r1
 801052c:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8010530:	b2ff      	uxtb	r7, r7
 8010532:	d103      	bne.n	801053c <LCD__DrawBitmap_1bpp+0x158>
 8010534:	6810      	ldr	r0, [r2, #0]
 8010536:	7c00      	ldrb	r0, [r0, #16]
 8010538:	0780      	lsls	r0, r0, #30
 801053a:	d41b      	bmi.n	8010574 <LCD__DrawBitmap_1bpp+0x190>
 801053c:	6812      	ldr	r2, [r2, #0]
 801053e:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8010540:	6810      	ldr	r0, [r2, #0]
 8010542:	900d      	str	r0, [sp, #52]	; 0x34
 8010544:	981d      	ldr	r0, [sp, #116]	; 0x74
 8010546:	b110      	cbz	r0, 801054e <LCD__DrawBitmap_1bpp+0x16a>
 8010548:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 801054c:	e000      	b.n	8010550 <LCD__DrawBitmap_1bpp+0x16c>
 801054e:	b2db      	uxtb	r3, r3
 8010550:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010552:	6013      	str	r3, [r2, #0]
 8010554:	1e4a      	subs	r2, r1, #1
 8010556:	444a      	add	r2, r9
 8010558:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801055a:	f8cd c01c 	str.w	ip, [sp, #28]
 801055e:	4648      	mov	r0, r9
 8010560:	4631      	mov	r1, r6
 8010562:	f7ff ff13 	bl	801038c <LCD_FillRect>
 8010566:	4b0a      	ldr	r3, [pc, #40]	; (8010590 <LCD__DrawBitmap_1bpp+0x1ac>)
 8010568:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801056a:	681b      	ldr	r3, [r3, #0]
 801056c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8010570:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010572:	601a      	str	r2, [r3, #0]
 8010574:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8010576:	f10a 0a01 	add.w	sl, sl, #1
 801057a:	4499      	add	r9, r3
 801057c:	e7c3      	b.n	8010506 <LCD__DrawBitmap_1bpp+0x122>
 801057e:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8010580:	f10c 0c01 	add.w	ip, ip, #1
 8010584:	4434      	add	r4, r6
 8010586:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8010588:	e7a6      	b.n	80104d8 <LCD__DrawBitmap_1bpp+0xf4>
 801058a:	b00f      	add	sp, #60	; 0x3c
 801058c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010590:	2000016c 	.word	0x2000016c
 8010594:	20019ca0 	.word	0x20019ca0
 8010598:	20019c74 	.word	0x20019c74

0801059c <LCD_DrawBitmap>:
 801059c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105a0:	f8df c20c 	ldr.w	ip, [pc, #524]	; 80107b0 <LCD_DrawBitmap+0x214>
 80105a4:	b091      	sub	sp, #68	; 0x44
 80105a6:	f8dc 9000 	ldr.w	r9, [ip]
 80105aa:	9207      	str	r2, [sp, #28]
 80105ac:	4605      	mov	r5, r0
 80105ae:	4688      	mov	r8, r1
 80105b0:	469b      	mov	fp, r3
 80105b2:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 80105b4:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80105b6:	f1b9 0f00 	cmp.w	r9, #0
 80105ba:	d00c      	beq.n	80105d6 <LCD_DrawBitmap+0x3a>
 80105bc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80105be:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80105c0:	9500      	str	r5, [sp, #0]
 80105c2:	9701      	str	r7, [sp, #4]
 80105c4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80105c6:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 80105c8:	9602      	str	r6, [sp, #8]
 80105ca:	9503      	str	r5, [sp, #12]
 80105cc:	9404      	str	r4, [sp, #16]
 80105ce:	9705      	str	r7, [sp, #20]
 80105d0:	f8d9 4000 	ldr.w	r4, [r9]
 80105d4:	e081      	b.n	80106da <LCD_DrawBitmap+0x13e>
 80105d6:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80105d8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80105da:	ea47 0300 	orr.w	r3, r7, r0
 80105de:	2b01      	cmp	r3, #1
 80105e0:	d17d      	bne.n	80106de <LCD_DrawBitmap+0x142>
 80105e2:	4b71      	ldr	r3, [pc, #452]	; (80107a8 <LCD_DrawBitmap+0x20c>)
 80105e4:	6818      	ldr	r0, [r3, #0]
 80105e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80105ea:	1a53      	subs	r3, r2, r1
 80105ec:	2b00      	cmp	r3, #0
 80105ee:	dd08      	ble.n	8010602 <LCD_DrawBitmap+0x66>
 80105f0:	ebc3 010b 	rsb	r1, r3, fp
 80105f4:	2900      	cmp	r1, #0
 80105f6:	f340 80d4 	ble.w	80107a2 <LCD_DrawBitmap+0x206>
 80105fa:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80105fc:	fb07 4403 	mla	r4, r7, r3, r4
 8010600:	e001      	b.n	8010606 <LCD_DrawBitmap+0x6a>
 8010602:	4659      	mov	r1, fp
 8010604:	4642      	mov	r2, r8
 8010606:	44d8      	add	r8, fp
 8010608:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 801060c:	f108 38ff 	add.w	r8, r8, #4294967295
 8010610:	ebc3 0808 	rsb	r8, r3, r8
 8010614:	f1b8 0f00 	cmp.w	r8, #0
 8010618:	dd04      	ble.n	8010624 <LCD_DrawBitmap+0x88>
 801061a:	ebc8 0101 	rsb	r1, r8, r1
 801061e:	2900      	cmp	r1, #0
 8010620:	f340 80bf 	ble.w	80107a2 <LCD_DrawBitmap+0x206>
 8010624:	9b07      	ldr	r3, [sp, #28]
 8010626:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 801062a:	442b      	add	r3, r5
 801062c:	3b01      	subs	r3, #1
 801062e:	ebcc 0303 	rsb	r3, ip, r3
 8010632:	2b00      	cmp	r3, #0
 8010634:	dd02      	ble.n	801063c <LCD_DrawBitmap+0xa0>
 8010636:	9f07      	ldr	r7, [sp, #28]
 8010638:	1aff      	subs	r7, r7, r3
 801063a:	9707      	str	r7, [sp, #28]
 801063c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8010640:	4565      	cmp	r5, ip
 8010642:	da33      	bge.n	80106ac <LCD_DrawBitmap+0x110>
 8010644:	9f07      	ldr	r7, [sp, #28]
 8010646:	ebc5 030c 	rsb	r3, r5, ip
 801064a:	1aff      	subs	r7, r7, r3
 801064c:	2e08      	cmp	r6, #8
 801064e:	9707      	str	r7, [sp, #28]
 8010650:	d027      	beq.n	80106a2 <LCD_DrawBitmap+0x106>
 8010652:	dc0d      	bgt.n	8010670 <LCD_DrawBitmap+0xd4>
 8010654:	2e02      	cmp	r6, #2
 8010656:	d014      	beq.n	8010682 <LCD_DrawBitmap+0xe6>
 8010658:	2e04      	cmp	r6, #4
 801065a:	d01a      	beq.n	8010692 <LCD_DrawBitmap+0xf6>
 801065c:	2e01      	cmp	r6, #1
 801065e:	d126      	bne.n	80106ae <LCD_DrawBitmap+0x112>
 8010660:	f023 0c07 	bic.w	ip, r3, #7
 8010664:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8010668:	4465      	add	r5, ip
 801066a:	f003 0307 	and.w	r3, r3, #7
 801066e:	e01e      	b.n	80106ae <LCD_DrawBitmap+0x112>
 8010670:	2e18      	cmp	r6, #24
 8010672:	d018      	beq.n	80106a6 <LCD_DrawBitmap+0x10a>
 8010674:	2e20      	cmp	r6, #32
 8010676:	d016      	beq.n	80106a6 <LCD_DrawBitmap+0x10a>
 8010678:	2e10      	cmp	r6, #16
 801067a:	d118      	bne.n	80106ae <LCD_DrawBitmap+0x112>
 801067c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010680:	e013      	b.n	80106aa <LCD_DrawBitmap+0x10e>
 8010682:	f023 0c03 	bic.w	ip, r3, #3
 8010686:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 801068a:	4465      	add	r5, ip
 801068c:	f003 0303 	and.w	r3, r3, #3
 8010690:	e00d      	b.n	80106ae <LCD_DrawBitmap+0x112>
 8010692:	f023 0c01 	bic.w	ip, r3, #1
 8010696:	eb04 0463 	add.w	r4, r4, r3, asr #1
 801069a:	4465      	add	r5, ip
 801069c:	f003 0301 	and.w	r3, r3, #1
 80106a0:	e005      	b.n	80106ae <LCD_DrawBitmap+0x112>
 80106a2:	441c      	add	r4, r3
 80106a4:	e001      	b.n	80106aa <LCD_DrawBitmap+0x10e>
 80106a6:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 80106aa:	4665      	mov	r5, ip
 80106ac:	2300      	movs	r3, #0
 80106ae:	9f07      	ldr	r7, [sp, #28]
 80106b0:	2f00      	cmp	r7, #0
 80106b2:	dd76      	ble.n	80107a2 <LCD_DrawBitmap+0x206>
 80106b4:	f890 e011 	ldrb.w	lr, [r0, #17]
 80106b8:	483c      	ldr	r0, [pc, #240]	; (80107ac <LCD_DrawBitmap+0x210>)
 80106ba:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80106bc:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 80106c0:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 80106c4:	9403      	str	r4, [sp, #12]
 80106c6:	e88d 0042 	stmia.w	sp, {r1, r6}
 80106ca:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 80106cc:	9304      	str	r3, [sp, #16]
 80106ce:	9702      	str	r7, [sp, #8]
 80106d0:	9405      	str	r4, [sp, #20]
 80106d2:	f8de 4004 	ldr.w	r4, [lr, #4]
 80106d6:	9b07      	ldr	r3, [sp, #28]
 80106d8:	4629      	mov	r1, r5
 80106da:	47a0      	blx	r4
 80106dc:	e061      	b.n	80107a2 <LCD_DrawBitmap+0x206>
 80106de:	f1c6 0708 	rsb	r7, r6, #8
 80106e2:	970e      	str	r7, [sp, #56]	; 0x38
 80106e4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80106e8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80106ea:	455f      	cmp	r7, fp
 80106ec:	da59      	bge.n	80107a2 <LCD_DrawBitmap+0x206>
 80106ee:	4b2e      	ldr	r3, [pc, #184]	; (80107a8 <LCD_DrawBitmap+0x20c>)
 80106f0:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80106f2:	681b      	ldr	r3, [r3, #0]
 80106f4:	4447      	add	r7, r8
 80106f6:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 80106fa:	970c      	str	r7, [sp, #48]	; 0x30
 80106fc:	3f01      	subs	r7, #1
 80106fe:	4297      	cmp	r7, r2
 8010700:	970d      	str	r7, [sp, #52]	; 0x34
 8010702:	db46      	blt.n	8010792 <LCD_DrawBitmap+0x1f6>
 8010704:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8010708:	4598      	cmp	r8, r3
 801070a:	dc42      	bgt.n	8010792 <LCD_DrawBitmap+0x1f6>
 801070c:	f04f 0a00 	mov.w	sl, #0
 8010710:	940b      	str	r4, [sp, #44]	; 0x2c
 8010712:	46ac      	mov	ip, r5
 8010714:	4657      	mov	r7, sl
 8010716:	9807      	ldr	r0, [sp, #28]
 8010718:	4287      	cmp	r7, r0
 801071a:	da3a      	bge.n	8010792 <LCD_DrawBitmap+0x1f6>
 801071c:	f1ba 0f00 	cmp.w	sl, #0
 8010720:	d106      	bne.n	8010730 <LCD_DrawBitmap+0x194>
 8010722:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8010724:	f890 9000 	ldrb.w	r9, [r0]
 8010728:	3001      	adds	r0, #1
 801072a:	900b      	str	r0, [sp, #44]	; 0x2c
 801072c:	f04f 0a08 	mov.w	sl, #8
 8010730:	990e      	ldr	r1, [sp, #56]	; 0x38
 8010732:	4a1d      	ldr	r2, [pc, #116]	; (80107a8 <LCD_DrawBitmap+0x20c>)
 8010734:	fa49 f301 	asr.w	r3, r9, r1
 8010738:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 801073c:	fa09 f906 	lsl.w	r9, r9, r6
 8010740:	fa5f f989 	uxtb.w	r9, r9
 8010744:	ebc6 0a0a 	rsb	sl, r6, sl
 8010748:	d103      	bne.n	8010752 <LCD_DrawBitmap+0x1b6>
 801074a:	6810      	ldr	r0, [r2, #0]
 801074c:	7c00      	ldrb	r0, [r0, #16]
 801074e:	0780      	lsls	r0, r0, #30
 8010750:	d41b      	bmi.n	801078a <LCD_DrawBitmap+0x1ee>
 8010752:	6812      	ldr	r2, [r2, #0]
 8010754:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8010756:	6810      	ldr	r0, [r2, #0]
 8010758:	900f      	str	r0, [sp, #60]	; 0x3c
 801075a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801075c:	b110      	cbz	r0, 8010764 <LCD_DrawBitmap+0x1c8>
 801075e:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8010762:	e000      	b.n	8010766 <LCD_DrawBitmap+0x1ca>
 8010764:	b2db      	uxtb	r3, r3
 8010766:	991a      	ldr	r1, [sp, #104]	; 0x68
 8010768:	6013      	str	r3, [r2, #0]
 801076a:	1e4a      	subs	r2, r1, #1
 801076c:	4462      	add	r2, ip
 801076e:	4660      	mov	r0, ip
 8010770:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010772:	f8cd c020 	str.w	ip, [sp, #32]
 8010776:	4641      	mov	r1, r8
 8010778:	f7ff fe08 	bl	801038c <LCD_FillRect>
 801077c:	4b0a      	ldr	r3, [pc, #40]	; (80107a8 <LCD_DrawBitmap+0x20c>)
 801077e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010780:	681b      	ldr	r3, [r3, #0]
 8010782:	f8dd c020 	ldr.w	ip, [sp, #32]
 8010786:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010788:	601a      	str	r2, [r3, #0]
 801078a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801078c:	3701      	adds	r7, #1
 801078e:	449c      	add	ip, r3
 8010790:	e7c1      	b.n	8010716 <LCD_DrawBitmap+0x17a>
 8010792:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8010794:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8010798:	3701      	adds	r7, #1
 801079a:	970a      	str	r7, [sp, #40]	; 0x28
 801079c:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 801079e:	443c      	add	r4, r7
 80107a0:	e7a2      	b.n	80106e8 <LCD_DrawBitmap+0x14c>
 80107a2:	b011      	add	sp, #68	; 0x44
 80107a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107a8:	2000016c 	.word	0x2000016c
 80107ac:	20019ca0 	.word	0x20019ca0
 80107b0:	20019c74 	.word	0x20019c74

080107b4 <LCD_SetClipRectMax>:
 80107b4:	b508      	push	{r3, lr}
 80107b6:	4b05      	ldr	r3, [pc, #20]	; (80107cc <LCD_SetClipRectMax+0x18>)
 80107b8:	6819      	ldr	r1, [r3, #0]
 80107ba:	4b05      	ldr	r3, [pc, #20]	; (80107d0 <LCD_SetClipRectMax+0x1c>)
 80107bc:	7c4a      	ldrb	r2, [r1, #17]
 80107be:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80107c2:	68c3      	ldr	r3, [r0, #12]
 80107c4:	3108      	adds	r1, #8
 80107c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80107c8:	4798      	blx	r3
 80107ca:	bd08      	pop	{r3, pc}
 80107cc:	2000016c 	.word	0x2000016c
 80107d0:	20019ca0 	.word	0x20019ca0

080107d4 <emWin_LCD_Init>:
 80107d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80107d6:	f7ff ffed 	bl	80107b4 <LCD_SetClipRectMax>
 80107da:	f007 f911 	bl	8017a00 <LCD_InitColors>
 80107de:	4604      	mov	r4, r0
 80107e0:	2800      	cmp	r0, #0
 80107e2:	d13d      	bne.n	8010860 <emWin_LCD_Init+0x8c>
 80107e4:	4605      	mov	r5, r0
 80107e6:	4628      	mov	r0, r5
 80107e8:	f001 ff20 	bl	801262c <GUI_DEVICE__GetpDriver>
 80107ec:	9001      	str	r0, [sp, #4]
 80107ee:	b148      	cbz	r0, 8010804 <emWin_LCD_Init+0x30>
 80107f0:	68c3      	ldr	r3, [r0, #12]
 80107f2:	210c      	movs	r1, #12
 80107f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80107f6:	a801      	add	r0, sp, #4
 80107f8:	4798      	blx	r3
 80107fa:	4603      	mov	r3, r0
 80107fc:	b370      	cbz	r0, 801085c <emWin_LCD_Init+0x88>
 80107fe:	9801      	ldr	r0, [sp, #4]
 8010800:	4798      	blx	r3
 8010802:	4304      	orrs	r4, r0
 8010804:	3501      	adds	r5, #1
 8010806:	2d02      	cmp	r5, #2
 8010808:	d1ed      	bne.n	80107e6 <emWin_LCD_Init+0x12>
 801080a:	bb4c      	cbnz	r4, 8010860 <emWin_LCD_Init+0x8c>
 801080c:	f007 f914 	bl	8017a38 <LCD_InitLUT>
 8010810:	2401      	movs	r4, #1
 8010812:	4620      	mov	r0, r4
 8010814:	f001 ff0a 	bl	801262c <GUI_DEVICE__GetpDriver>
 8010818:	9001      	str	r0, [sp, #4]
 801081a:	b1d0      	cbz	r0, 8010852 <emWin_LCD_Init+0x7e>
 801081c:	4620      	mov	r0, r4
 801081e:	f001 fa97 	bl	8011d50 <GUI_SelectLayer>
 8010822:	2004      	movs	r0, #4
 8010824:	f7ff fd30 	bl	8010288 <LCD_SetDrawMode>
 8010828:	f643 72ff 	movw	r2, #16383	; 0x3fff
 801082c:	2000      	movs	r0, #0
 801082e:	4601      	mov	r1, r0
 8010830:	4613      	mov	r3, r2
 8010832:	f7ff fdab 	bl	801038c <LCD_FillRect>
 8010836:	2000      	movs	r0, #0
 8010838:	f7ff fd26 	bl	8010288 <LCD_SetDrawMode>
 801083c:	a802      	add	r0, sp, #8
 801083e:	210e      	movs	r1, #14
 8010840:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8010844:	68db      	ldr	r3, [r3, #12]
 8010846:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010848:	4798      	blx	r3
 801084a:	4603      	mov	r3, r0
 801084c:	b108      	cbz	r0, 8010852 <emWin_LCD_Init+0x7e>
 801084e:	9801      	ldr	r0, [sp, #4]
 8010850:	4798      	blx	r3
 8010852:	f114 34ff 	adds.w	r4, r4, #4294967295
 8010856:	d2dc      	bcs.n	8010812 <emWin_LCD_Init+0x3e>
 8010858:	2000      	movs	r0, #0
 801085a:	e002      	b.n	8010862 <emWin_LCD_Init+0x8e>
 801085c:	2001      	movs	r0, #1
 801085e:	e000      	b.n	8010862 <emWin_LCD_Init+0x8e>
 8010860:	4620      	mov	r0, r4
 8010862:	b003      	add	sp, #12
 8010864:	bd30      	pop	{r4, r5, pc}
	...

08010868 <LCD_Color2Index>:
 8010868:	b508      	push	{r3, lr}
 801086a:	4b05      	ldr	r3, [pc, #20]	; (8010880 <LCD_Color2Index+0x18>)
 801086c:	681b      	ldr	r3, [r3, #0]
 801086e:	7c5a      	ldrb	r2, [r3, #17]
 8010870:	4b04      	ldr	r3, [pc, #16]	; (8010884 <LCD_Color2Index+0x1c>)
 8010872:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010876:	691b      	ldr	r3, [r3, #16]
 8010878:	681b      	ldr	r3, [r3, #0]
 801087a:	4798      	blx	r3
 801087c:	bd08      	pop	{r3, pc}
 801087e:	bf00      	nop
 8010880:	2000016c 	.word	0x2000016c
 8010884:	20019ca0 	.word	0x20019ca0

08010888 <LCD_Index2Color>:
 8010888:	b508      	push	{r3, lr}
 801088a:	4b05      	ldr	r3, [pc, #20]	; (80108a0 <LCD_Index2Color+0x18>)
 801088c:	681b      	ldr	r3, [r3, #0]
 801088e:	7c5a      	ldrb	r2, [r3, #17]
 8010890:	4b04      	ldr	r3, [pc, #16]	; (80108a4 <LCD_Index2Color+0x1c>)
 8010892:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010896:	691b      	ldr	r3, [r3, #16]
 8010898:	685b      	ldr	r3, [r3, #4]
 801089a:	4798      	blx	r3
 801089c:	bd08      	pop	{r3, pc}
 801089e:	bf00      	nop
 80108a0:	2000016c 	.word	0x2000016c
 80108a4:	20019ca0 	.word	0x20019ca0

080108a8 <LCD_SetColorIndex>:
 80108a8:	4b04      	ldr	r3, [pc, #16]	; (80108bc <LCD_SetColorIndex+0x14>)
 80108aa:	681b      	ldr	r3, [r3, #0]
 80108ac:	7c1a      	ldrb	r2, [r3, #16]
 80108ae:	0752      	lsls	r2, r2, #29
 80108b0:	bf4c      	ite	mi
 80108b2:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 80108b4:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 80108b6:	6018      	str	r0, [r3, #0]
 80108b8:	4770      	bx	lr
 80108ba:	bf00      	nop
 80108bc:	2000016c 	.word	0x2000016c

080108c0 <_SetColor>:
 80108c0:	b508      	push	{r3, lr}
 80108c2:	4b06      	ldr	r3, [pc, #24]	; (80108dc <_SetColor+0x1c>)
 80108c4:	681b      	ldr	r3, [r3, #0]
 80108c6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80108c8:	4281      	cmp	r1, r0
 80108ca:	d006      	beq.n	80108da <_SetColor+0x1a>
 80108cc:	6318      	str	r0, [r3, #48]	; 0x30
 80108ce:	f7ff ffcb 	bl	8010868 <LCD_Color2Index>
 80108d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80108d6:	f7ff bfe7 	b.w	80108a8 <LCD_SetColorIndex>
 80108da:	bd08      	pop	{r3, pc}
 80108dc:	2000016c 	.word	0x2000016c

080108e0 <LCD_SetBkColorIndex>:
 80108e0:	4b04      	ldr	r3, [pc, #16]	; (80108f4 <LCD_SetBkColorIndex+0x14>)
 80108e2:	681b      	ldr	r3, [r3, #0]
 80108e4:	7c1a      	ldrb	r2, [r3, #16]
 80108e6:	0752      	lsls	r2, r2, #29
 80108e8:	bf4c      	ite	mi
 80108ea:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 80108ec:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 80108ee:	6018      	str	r0, [r3, #0]
 80108f0:	4770      	bx	lr
 80108f2:	bf00      	nop
 80108f4:	2000016c 	.word	0x2000016c

080108f8 <_SetBkColor>:
 80108f8:	b508      	push	{r3, lr}
 80108fa:	4b06      	ldr	r3, [pc, #24]	; (8010914 <_SetBkColor+0x1c>)
 80108fc:	681b      	ldr	r3, [r3, #0]
 80108fe:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8010900:	4281      	cmp	r1, r0
 8010902:	d006      	beq.n	8010912 <_SetBkColor+0x1a>
 8010904:	6358      	str	r0, [r3, #52]	; 0x34
 8010906:	f7ff ffaf 	bl	8010868 <LCD_Color2Index>
 801090a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801090e:	f7ff bfe7 	b.w	80108e0 <LCD_SetBkColorIndex>
 8010912:	bd08      	pop	{r3, pc}
 8010914:	2000016c 	.word	0x2000016c

08010918 <LCD_SetBkColor>:
 8010918:	b508      	push	{r3, lr}
 801091a:	4b02      	ldr	r3, [pc, #8]	; (8010924 <LCD_SetBkColor+0xc>)
 801091c:	681b      	ldr	r3, [r3, #0]
 801091e:	685b      	ldr	r3, [r3, #4]
 8010920:	4798      	blx	r3
 8010922:	bd08      	pop	{r3, pc}
 8010924:	20000140 	.word	0x20000140

08010928 <LCD_SetColor>:
 8010928:	b508      	push	{r3, lr}
 801092a:	4b02      	ldr	r3, [pc, #8]	; (8010934 <LCD_SetColor+0xc>)
 801092c:	681b      	ldr	r3, [r3, #0]
 801092e:	681b      	ldr	r3, [r3, #0]
 8010930:	4798      	blx	r3
 8010932:	bd08      	pop	{r3, pc}
 8010934:	20000140 	.word	0x20000140

08010938 <GUI__memset16>:
 8010938:	b570      	push	{r4, r5, r6, lr}
 801093a:	0784      	lsls	r4, r0, #30
 801093c:	d502      	bpl.n	8010944 <GUI__memset16+0xc>
 801093e:	8001      	strh	r1, [r0, #0]
 8010940:	3a01      	subs	r2, #1
 8010942:	3002      	adds	r0, #2
 8010944:	0855      	lsrs	r5, r2, #1
 8010946:	462b      	mov	r3, r5
 8010948:	b305      	cbz	r5, 801098c <GUI__memset16+0x54>
 801094a:	2d03      	cmp	r5, #3
 801094c:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 8010950:	dc02      	bgt.n	8010958 <GUI__memset16+0x20>
 8010952:	4606      	mov	r6, r0
 8010954:	461d      	mov	r5, r3
 8010956:	e012      	b.n	801097e <GUI__memset16+0x46>
 8010958:	4603      	mov	r3, r0
 801095a:	462e      	mov	r6, r5
 801095c:	3e04      	subs	r6, #4
 801095e:	2e03      	cmp	r6, #3
 8010960:	601c      	str	r4, [r3, #0]
 8010962:	605c      	str	r4, [r3, #4]
 8010964:	609c      	str	r4, [r3, #8]
 8010966:	60dc      	str	r4, [r3, #12]
 8010968:	f103 0310 	add.w	r3, r3, #16
 801096c:	dcf6      	bgt.n	801095c <GUI__memset16+0x24>
 801096e:	3d04      	subs	r5, #4
 8010970:	08ab      	lsrs	r3, r5, #2
 8010972:	1c5e      	adds	r6, r3, #1
 8010974:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 8010978:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 801097c:	e7e9      	b.n	8010952 <GUI__memset16+0x1a>
 801097e:	b11d      	cbz	r5, 8010988 <GUI__memset16+0x50>
 8010980:	f846 4b04 	str.w	r4, [r6], #4
 8010984:	3d01      	subs	r5, #1
 8010986:	e7fa      	b.n	801097e <GUI__memset16+0x46>
 8010988:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 801098c:	07d3      	lsls	r3, r2, #31
 801098e:	bf48      	it	mi
 8010990:	8001      	strhmi	r1, [r0, #0]
 8010992:	bd70      	pop	{r4, r5, r6, pc}

08010994 <GUI__memset>:
 8010994:	b570      	push	{r4, r5, r6, lr}
 8010996:	b12a      	cbz	r2, 80109a4 <GUI__memset+0x10>
 8010998:	0783      	lsls	r3, r0, #30
 801099a:	d003      	beq.n	80109a4 <GUI__memset+0x10>
 801099c:	f800 1b01 	strb.w	r1, [r0], #1
 80109a0:	3a01      	subs	r2, #1
 80109a2:	e7f8      	b.n	8010996 <GUI__memset+0x2>
 80109a4:	0893      	lsrs	r3, r2, #2
 80109a6:	d101      	bne.n	80109ac <GUI__memset+0x18>
 80109a8:	4402      	add	r2, r0
 80109aa:	e017      	b.n	80109dc <GUI__memset+0x48>
 80109ac:	f04f 3401 	mov.w	r4, #16843009	; 0x1010101
 80109b0:	f002 0203 	and.w	r2, r2, #3
 80109b4:	434c      	muls	r4, r1
 80109b6:	2b03      	cmp	r3, #3
 80109b8:	4605      	mov	r5, r0
 80109ba:	dd06      	ble.n	80109ca <GUI__memset+0x36>
 80109bc:	6004      	str	r4, [r0, #0]
 80109be:	6044      	str	r4, [r0, #4]
 80109c0:	6084      	str	r4, [r0, #8]
 80109c2:	60c4      	str	r4, [r0, #12]
 80109c4:	3b04      	subs	r3, #4
 80109c6:	3010      	adds	r0, #16
 80109c8:	e7f5      	b.n	80109b6 <GUI__memset+0x22>
 80109ca:	461e      	mov	r6, r3
 80109cc:	b11b      	cbz	r3, 80109d6 <GUI__memset+0x42>
 80109ce:	f845 4b04 	str.w	r4, [r5], #4
 80109d2:	3b01      	subs	r3, #1
 80109d4:	e7fa      	b.n	80109cc <GUI__memset+0x38>
 80109d6:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 80109da:	e7e5      	b.n	80109a8 <GUI__memset+0x14>
 80109dc:	4290      	cmp	r0, r2
 80109de:	d002      	beq.n	80109e6 <GUI__memset+0x52>
 80109e0:	f800 1b01 	strb.w	r1, [r0], #1
 80109e4:	e7fa      	b.n	80109dc <GUI__memset+0x48>
 80109e6:	bd70      	pop	{r4, r5, r6, pc}

080109e8 <GUI__SetText>:
 80109e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80109ea:	6807      	ldr	r7, [r0, #0]
 80109ec:	4605      	mov	r5, r0
 80109ee:	4638      	mov	r0, r7
 80109f0:	460e      	mov	r6, r1
 80109f2:	f007 fa2f 	bl	8017e54 <GUI__strcmp_hp>
 80109f6:	b908      	cbnz	r0, 80109fc <GUI__SetText+0x14>
 80109f8:	2000      	movs	r0, #0
 80109fa:	e02e      	b.n	8010a5a <GUI__SetText+0x72>
 80109fc:	4630      	mov	r0, r6
 80109fe:	f007 fa09 	bl	8017e14 <GUI__strlen>
 8010a02:	1c44      	adds	r4, r0, #1
 8010a04:	4638      	mov	r0, r7
 8010a06:	f002 fb99 	bl	801313c <GUI_ALLOC_GetSize>
 8010a0a:	4284      	cmp	r4, r0
 8010a0c:	d10f      	bne.n	8010a2e <GUI__SetText+0x46>
 8010a0e:	2c00      	cmp	r4, #0
 8010a10:	d0f2      	beq.n	80109f8 <GUI__SetText+0x10>
 8010a12:	4638      	mov	r0, r7
 8010a14:	f002 fb64 	bl	80130e0 <GUI_ALLOC_LockH>
 8010a18:	ad02      	add	r5, sp, #8
 8010a1a:	4631      	mov	r1, r6
 8010a1c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010a20:	4622      	mov	r2, r4
 8010a22:	f00a f816 	bl	801aa52 <memcpy>
 8010a26:	4628      	mov	r0, r5
 8010a28:	f002 fb68 	bl	80130fc <GUI_ALLOC_UnlockH>
 8010a2c:	e014      	b.n	8010a58 <GUI__SetText+0x70>
 8010a2e:	4620      	mov	r0, r4
 8010a30:	f002 fdaa 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 8010a34:	4607      	mov	r7, r0
 8010a36:	2800      	cmp	r0, #0
 8010a38:	d0de      	beq.n	80109f8 <GUI__SetText+0x10>
 8010a3a:	f002 fb51 	bl	80130e0 <GUI_ALLOC_LockH>
 8010a3e:	ac02      	add	r4, sp, #8
 8010a40:	4631      	mov	r1, r6
 8010a42:	f844 0d04 	str.w	r0, [r4, #-4]!
 8010a46:	f00a f851 	bl	801aaec <strcpy>
 8010a4a:	4620      	mov	r0, r4
 8010a4c:	f002 fb56 	bl	80130fc <GUI_ALLOC_UnlockH>
 8010a50:	4628      	mov	r0, r5
 8010a52:	f002 fd9d 	bl	8013590 <GUI_ALLOC_FreePtr>
 8010a56:	602f      	str	r7, [r5, #0]
 8010a58:	2001      	movs	r0, #1
 8010a5a:	b003      	add	sp, #12
 8010a5c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010a5e <GUI__ReduceRect>:
 8010a5e:	880b      	ldrh	r3, [r1, #0]
 8010a60:	b292      	uxth	r2, r2
 8010a62:	4413      	add	r3, r2
 8010a64:	8003      	strh	r3, [r0, #0]
 8010a66:	888b      	ldrh	r3, [r1, #4]
 8010a68:	1a9b      	subs	r3, r3, r2
 8010a6a:	8083      	strh	r3, [r0, #4]
 8010a6c:	884b      	ldrh	r3, [r1, #2]
 8010a6e:	4413      	add	r3, r2
 8010a70:	8043      	strh	r3, [r0, #2]
 8010a72:	88cb      	ldrh	r3, [r1, #6]
 8010a74:	1a9a      	subs	r2, r3, r2
 8010a76:	80c2      	strh	r2, [r0, #6]
 8010a78:	4770      	bx	lr
	...

08010a7c <GUI__ManageCacheEx>:
 8010a7c:	2801      	cmp	r0, #1
 8010a7e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010a80:	4604      	mov	r4, r0
 8010a82:	460d      	mov	r5, r1
 8010a84:	dc65      	bgt.n	8010b52 <GUI__ManageCacheEx+0xd6>
 8010a86:	4b34      	ldr	r3, [pc, #208]	; (8010b58 <GUI__ManageCacheEx+0xdc>)
 8010a88:	681b      	ldr	r3, [r3, #0]
 8010a8a:	b103      	cbz	r3, 8010a8e <GUI__ManageCacheEx+0x12>
 8010a8c:	4798      	blx	r3
 8010a8e:	2d01      	cmp	r5, #1
 8010a90:	d004      	beq.n	8010a9c <GUI__ManageCacheEx+0x20>
 8010a92:	2d02      	cmp	r5, #2
 8010a94:	d021      	beq.n	8010ada <GUI__ManageCacheEx+0x5e>
 8010a96:	2d00      	cmp	r5, #0
 8010a98:	d15b      	bne.n	8010b52 <GUI__ManageCacheEx+0xd6>
 8010a9a:	e035      	b.n	8010b08 <GUI__ManageCacheEx+0x8c>
 8010a9c:	4e2f      	ldr	r6, [pc, #188]	; (8010b5c <GUI__ManageCacheEx+0xe0>)
 8010a9e:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 8010aa2:	b9b7      	cbnz	r7, 8010ad2 <GUI__ManageCacheEx+0x56>
 8010aa4:	4620      	mov	r0, r4
 8010aa6:	f001 fdc1 	bl	801262c <GUI_DEVICE__GetpDriver>
 8010aaa:	9001      	str	r0, [sp, #4]
 8010aac:	2800      	cmp	r0, #0
 8010aae:	d050      	beq.n	8010b52 <GUI__ManageCacheEx+0xd6>
 8010ab0:	68c3      	ldr	r3, [r0, #12]
 8010ab2:	210d      	movs	r1, #13
 8010ab4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010ab6:	a801      	add	r0, sp, #4
 8010ab8:	4798      	blx	r3
 8010aba:	4603      	mov	r3, r0
 8010abc:	2800      	cmp	r0, #0
 8010abe:	d048      	beq.n	8010b52 <GUI__ManageCacheEx+0xd6>
 8010ac0:	9801      	ldr	r0, [sp, #4]
 8010ac2:	4629      	mov	r1, r5
 8010ac4:	4798      	blx	r3
 8010ac6:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8010aca:	3301      	adds	r3, #1
 8010acc:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 8010ad0:	e018      	b.n	8010b04 <GUI__ManageCacheEx+0x88>
 8010ad2:	3701      	adds	r7, #1
 8010ad4:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 8010ad8:	e03b      	b.n	8010b52 <GUI__ManageCacheEx+0xd6>
 8010ada:	4620      	mov	r0, r4
 8010adc:	f001 fda6 	bl	801262c <GUI_DEVICE__GetpDriver>
 8010ae0:	9001      	str	r0, [sp, #4]
 8010ae2:	2800      	cmp	r0, #0
 8010ae4:	d035      	beq.n	8010b52 <GUI__ManageCacheEx+0xd6>
 8010ae6:	68c3      	ldr	r3, [r0, #12]
 8010ae8:	210d      	movs	r1, #13
 8010aea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010aec:	a801      	add	r0, sp, #4
 8010aee:	4798      	blx	r3
 8010af0:	4604      	mov	r4, r0
 8010af2:	2800      	cmp	r0, #0
 8010af4:	d02d      	beq.n	8010b52 <GUI__ManageCacheEx+0xd6>
 8010af6:	4b1a      	ldr	r3, [pc, #104]	; (8010b60 <GUI__ManageCacheEx+0xe4>)
 8010af8:	681b      	ldr	r3, [r3, #0]
 8010afa:	b103      	cbz	r3, 8010afe <GUI__ManageCacheEx+0x82>
 8010afc:	4798      	blx	r3
 8010afe:	9801      	ldr	r0, [sp, #4]
 8010b00:	2102      	movs	r1, #2
 8010b02:	47a0      	blx	r4
 8010b04:	2000      	movs	r0, #0
 8010b06:	e025      	b.n	8010b54 <GUI__ManageCacheEx+0xd8>
 8010b08:	4d14      	ldr	r5, [pc, #80]	; (8010b5c <GUI__ManageCacheEx+0xe0>)
 8010b0a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8010b0e:	2b01      	cmp	r3, #1
 8010b10:	d001      	beq.n	8010b16 <GUI__ManageCacheEx+0x9a>
 8010b12:	2001      	movs	r0, #1
 8010b14:	e015      	b.n	8010b42 <GUI__ManageCacheEx+0xc6>
 8010b16:	4620      	mov	r0, r4
 8010b18:	f001 fd88 	bl	801262c <GUI_DEVICE__GetpDriver>
 8010b1c:	9001      	str	r0, [sp, #4]
 8010b1e:	2800      	cmp	r0, #0
 8010b20:	d0f7      	beq.n	8010b12 <GUI__ManageCacheEx+0x96>
 8010b22:	68c3      	ldr	r3, [r0, #12]
 8010b24:	210d      	movs	r1, #13
 8010b26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010b28:	a801      	add	r0, sp, #4
 8010b2a:	4798      	blx	r3
 8010b2c:	4606      	mov	r6, r0
 8010b2e:	2800      	cmp	r0, #0
 8010b30:	d0ef      	beq.n	8010b12 <GUI__ManageCacheEx+0x96>
 8010b32:	4b0b      	ldr	r3, [pc, #44]	; (8010b60 <GUI__ManageCacheEx+0xe4>)
 8010b34:	681b      	ldr	r3, [r3, #0]
 8010b36:	b103      	cbz	r3, 8010b3a <GUI__ManageCacheEx+0xbe>
 8010b38:	4798      	blx	r3
 8010b3a:	9801      	ldr	r0, [sp, #4]
 8010b3c:	2100      	movs	r1, #0
 8010b3e:	47b0      	blx	r6
 8010b40:	2000      	movs	r0, #0
 8010b42:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8010b46:	2b00      	cmp	r3, #0
 8010b48:	bf18      	it	ne
 8010b4a:	3b01      	subne	r3, #1
 8010b4c:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 8010b50:	e000      	b.n	8010b54 <GUI__ManageCacheEx+0xd8>
 8010b52:	2001      	movs	r0, #1
 8010b54:	b003      	add	sp, #12
 8010b56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b58:	20019480 	.word	0x20019480
 8010b5c:	20019478 	.word	0x20019478
 8010b60:	20019474 	.word	0x20019474

08010b64 <GUI__ManageCache>:
 8010b64:	4b02      	ldr	r3, [pc, #8]	; (8010b70 <GUI__ManageCache+0xc>)
 8010b66:	681b      	ldr	r3, [r3, #0]
 8010b68:	4601      	mov	r1, r0
 8010b6a:	7c58      	ldrb	r0, [r3, #17]
 8010b6c:	f7ff bf86 	b.w	8010a7c <GUI__ManageCacheEx>
 8010b70:	2000016c 	.word	0x2000016c

08010b74 <GUI__IntersectRects>:
 8010b74:	b570      	push	{r4, r5, r6, lr}
 8010b76:	f9b2 3000 	ldrsh.w	r3, [r2]
 8010b7a:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010b7e:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010b82:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 8010b86:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8010b8a:	429c      	cmp	r4, r3
 8010b8c:	bfb8      	it	lt
 8010b8e:	461c      	movlt	r4, r3
 8010b90:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8010b94:	429d      	cmp	r5, r3
 8010b96:	bfa8      	it	ge
 8010b98:	462b      	movge	r3, r5
 8010b9a:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 8010b9e:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8010ba2:	42ae      	cmp	r6, r5
 8010ba4:	bfb8      	it	lt
 8010ba6:	4635      	movlt	r5, r6
 8010ba8:	b2a4      	uxth	r4, r4
 8010baa:	b2ad      	uxth	r5, r5
 8010bac:	4291      	cmp	r1, r2
 8010bae:	bfb8      	it	lt
 8010bb0:	460a      	movlt	r2, r1
 8010bb2:	8004      	strh	r4, [r0, #0]
 8010bb4:	8085      	strh	r5, [r0, #4]
 8010bb6:	b224      	sxth	r4, r4
 8010bb8:	b22d      	sxth	r5, r5
 8010bba:	b29b      	uxth	r3, r3
 8010bbc:	b292      	uxth	r2, r2
 8010bbe:	42a5      	cmp	r5, r4
 8010bc0:	8043      	strh	r3, [r0, #2]
 8010bc2:	80c2      	strh	r2, [r0, #6]
 8010bc4:	db06      	blt.n	8010bd4 <GUI__IntersectRects+0x60>
 8010bc6:	b210      	sxth	r0, r2
 8010bc8:	b21b      	sxth	r3, r3
 8010bca:	4298      	cmp	r0, r3
 8010bcc:	bfb4      	ite	lt
 8010bce:	2000      	movlt	r0, #0
 8010bd0:	2001      	movge	r0, #1
 8010bd2:	bd70      	pop	{r4, r5, r6, pc}
 8010bd4:	2000      	movs	r0, #0
 8010bd6:	bd70      	pop	{r4, r5, r6, pc}

08010bd8 <GUI__IntersectRect>:
 8010bd8:	880b      	ldrh	r3, [r1, #0]
 8010bda:	b510      	push	{r4, lr}
 8010bdc:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010be0:	b21a      	sxth	r2, r3
 8010be2:	4294      	cmp	r4, r2
 8010be4:	bfb8      	it	lt
 8010be6:	8003      	strhlt	r3, [r0, #0]
 8010be8:	884b      	ldrh	r3, [r1, #2]
 8010bea:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8010bee:	b21a      	sxth	r2, r3
 8010bf0:	4294      	cmp	r4, r2
 8010bf2:	bfb8      	it	lt
 8010bf4:	8043      	strhlt	r3, [r0, #2]
 8010bf6:	888b      	ldrh	r3, [r1, #4]
 8010bf8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8010bfc:	b21a      	sxth	r2, r3
 8010bfe:	4294      	cmp	r4, r2
 8010c00:	bfc8      	it	gt
 8010c02:	8083      	strhgt	r3, [r0, #4]
 8010c04:	88cb      	ldrh	r3, [r1, #6]
 8010c06:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010c0a:	b21a      	sxth	r2, r3
 8010c0c:	4291      	cmp	r1, r2
 8010c0e:	bfc8      	it	gt
 8010c10:	80c3      	strhgt	r3, [r0, #6]
 8010c12:	bd10      	pop	{r4, pc}

08010c14 <GUI__GetNumChars>:
 8010c14:	b513      	push	{r0, r1, r4, lr}
 8010c16:	9001      	str	r0, [sp, #4]
 8010c18:	b130      	cbz	r0, 8010c28 <GUI__GetNumChars+0x14>
 8010c1a:	2400      	movs	r4, #0
 8010c1c:	a801      	add	r0, sp, #4
 8010c1e:	f000 fa83 	bl	8011128 <GUI_UC__GetCharCodeInc>
 8010c22:	b110      	cbz	r0, 8010c2a <GUI__GetNumChars+0x16>
 8010c24:	3401      	adds	r4, #1
 8010c26:	e7f9      	b.n	8010c1c <GUI__GetNumChars+0x8>
 8010c28:	4604      	mov	r4, r0
 8010c2a:	4620      	mov	r0, r4
 8010c2c:	b002      	add	sp, #8
 8010c2e:	bd10      	pop	{r4, pc}

08010c30 <_GetCursorPosX>:
 8010c30:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010c32:	4615      	mov	r5, r2
 8010c34:	9001      	str	r0, [sp, #4]
 8010c36:	2400      	movs	r4, #0
 8010c38:	b13d      	cbz	r5, 8010c4a <_GetCursorPosX+0x1a>
 8010c3a:	a801      	add	r0, sp, #4
 8010c3c:	f000 fa74 	bl	8011128 <GUI_UC__GetCharCodeInc>
 8010c40:	f002 f93a 	bl	8012eb8 <GUI_GetCharDistX>
 8010c44:	3d01      	subs	r5, #1
 8010c46:	4404      	add	r4, r0
 8010c48:	e7f6      	b.n	8010c38 <_GetCursorPosX+0x8>
 8010c4a:	4620      	mov	r0, r4
 8010c4c:	b003      	add	sp, #12
 8010c4e:	bd30      	pop	{r4, r5, pc}

08010c50 <_GetCursorCharacter>:
 8010c50:	b538      	push	{r3, r4, r5, lr}
 8010c52:	4604      	mov	r4, r0
 8010c54:	b10b      	cbz	r3, 8010c5a <_GetCursorCharacter+0xa>
 8010c56:	2200      	movs	r2, #0
 8010c58:	601a      	str	r2, [r3, #0]
 8010c5a:	460d      	mov	r5, r1
 8010c5c:	b13d      	cbz	r5, 8010c6e <_GetCursorCharacter+0x1e>
 8010c5e:	4b06      	ldr	r3, [pc, #24]	; (8010c78 <_GetCursorCharacter+0x28>)
 8010c60:	681b      	ldr	r3, [r3, #0]
 8010c62:	4620      	mov	r0, r4
 8010c64:	685b      	ldr	r3, [r3, #4]
 8010c66:	4798      	blx	r3
 8010c68:	3d01      	subs	r5, #1
 8010c6a:	4404      	add	r4, r0
 8010c6c:	e7f6      	b.n	8010c5c <_GetCursorCharacter+0xc>
 8010c6e:	4620      	mov	r0, r4
 8010c70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010c74:	f000 ba40 	b.w	80110f8 <GUI_UC_GetCharCode>
 8010c78:	20019c98 	.word	0x20019c98

08010c7c <_GetCursorPosChar>:
 8010c7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010c80:	4607      	mov	r7, r0
 8010c82:	460d      	mov	r5, r1
 8010c84:	4690      	mov	r8, r2
 8010c86:	4604      	mov	r4, r0
 8010c88:	2600      	movs	r6, #0
 8010c8a:	3d01      	subs	r5, #1
 8010c8c:	2d00      	cmp	r5, #0
 8010c8e:	dd09      	ble.n	8010ca4 <_GetCursorPosChar+0x28>
 8010c90:	4620      	mov	r0, r4
 8010c92:	f000 fa31 	bl	80110f8 <GUI_UC_GetCharCode>
 8010c96:	4681      	mov	r9, r0
 8010c98:	f002 f90e 	bl	8012eb8 <GUI_GetCharDistX>
 8010c9c:	4406      	add	r6, r0
 8010c9e:	f1b9 0f00 	cmp.w	r9, #0
 8010ca2:	d105      	bne.n	8010cb0 <_GetCursorPosChar+0x34>
 8010ca4:	4638      	mov	r0, r7
 8010ca6:	1be1      	subs	r1, r4, r7
 8010ca8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010cac:	f000 ba62 	b.w	8011174 <GUI_UC__NumBytes2NumChars>
 8010cb0:	4546      	cmp	r6, r8
 8010cb2:	dcf7      	bgt.n	8010ca4 <_GetCursorPosChar+0x28>
 8010cb4:	4620      	mov	r0, r4
 8010cb6:	f000 fa17 	bl	80110e8 <GUI_UC_GetCharSize>
 8010cba:	4404      	add	r4, r0
 8010cbc:	e7e5      	b.n	8010c8a <_GetCursorPosChar+0xe>
	...

08010cc0 <GUI__GetCursorPosX>:
 8010cc0:	b510      	push	{r4, lr}
 8010cc2:	4b03      	ldr	r3, [pc, #12]	; (8010cd0 <GUI__GetCursorPosX+0x10>)
 8010cc4:	460c      	mov	r4, r1
 8010cc6:	681b      	ldr	r3, [r3, #0]
 8010cc8:	4611      	mov	r1, r2
 8010cca:	4622      	mov	r2, r4
 8010ccc:	4798      	blx	r3
 8010cce:	bd10      	pop	{r4, pc}
 8010cd0:	2000014c 	.word	0x2000014c

08010cd4 <GUI__GetCursorPosChar>:
 8010cd4:	b510      	push	{r4, lr}
 8010cd6:	4b03      	ldr	r3, [pc, #12]	; (8010ce4 <GUI__GetCursorPosChar+0x10>)
 8010cd8:	460c      	mov	r4, r1
 8010cda:	681b      	ldr	r3, [r3, #0]
 8010cdc:	4611      	mov	r1, r2
 8010cde:	4622      	mov	r2, r4
 8010ce0:	4798      	blx	r3
 8010ce2:	bd10      	pop	{r4, pc}
 8010ce4:	20000144 	.word	0x20000144

08010ce8 <GUI__GetCursorCharacter>:
 8010ce8:	b510      	push	{r4, lr}
 8010cea:	4c02      	ldr	r4, [pc, #8]	; (8010cf4 <GUI__GetCursorCharacter+0xc>)
 8010cec:	6824      	ldr	r4, [r4, #0]
 8010cee:	47a0      	blx	r4
 8010cf0:	bd10      	pop	{r4, pc}
 8010cf2:	bf00      	nop
 8010cf4:	20000148 	.word	0x20000148

08010cf8 <GUI__CalcTextRect>:
 8010cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010cfc:	460c      	mov	r4, r1
 8010cfe:	4615      	mov	r5, r2
 8010d00:	4698      	mov	r8, r3
 8010d02:	2800      	cmp	r0, #0
 8010d04:	d03b      	beq.n	8010d7e <GUI__CalcTextRect+0x86>
 8010d06:	f001 fa57 	bl	80121b8 <GUI_GetStringDistX>
 8010d0a:	f008 0203 	and.w	r2, r8, #3
 8010d0e:	2a01      	cmp	r2, #1
 8010d10:	4607      	mov	r7, r0
 8010d12:	d00c      	beq.n	8010d2e <GUI__CalcTextRect+0x36>
 8010d14:	2a02      	cmp	r2, #2
 8010d16:	f9b4 6000 	ldrsh.w	r6, [r4]
 8010d1a:	d10c      	bne.n	8010d36 <GUI__CalcTextRect+0x3e>
 8010d1c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010d20:	1b9b      	subs	r3, r3, r6
 8010d22:	3301      	adds	r3, #1
 8010d24:	1a1b      	subs	r3, r3, r0
 8010d26:	fb93 f2f2 	sdiv	r2, r3, r2
 8010d2a:	4416      	add	r6, r2
 8010d2c:	e003      	b.n	8010d36 <GUI__CalcTextRect+0x3e>
 8010d2e:	f9b4 6004 	ldrsh.w	r6, [r4, #4]
 8010d32:	1a36      	subs	r6, r6, r0
 8010d34:	3601      	adds	r6, #1
 8010d36:	f008 080c 	and.w	r8, r8, #12
 8010d3a:	f002 f8b5 	bl	8012ea8 <GUI_GetFontDistY>
 8010d3e:	f1b8 0f04 	cmp.w	r8, #4
 8010d42:	d00e      	beq.n	8010d62 <GUI__CalcTextRect+0x6a>
 8010d44:	f1b8 0f0c 	cmp.w	r8, #12
 8010d48:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8010d4c:	d10d      	bne.n	8010d6a <GUI__CalcTextRect+0x72>
 8010d4e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010d52:	1ad2      	subs	r2, r2, r3
 8010d54:	3201      	adds	r2, #1
 8010d56:	1a12      	subs	r2, r2, r0
 8010d58:	2102      	movs	r1, #2
 8010d5a:	fb92 f2f1 	sdiv	r2, r2, r1
 8010d5e:	4413      	add	r3, r2
 8010d60:	e003      	b.n	8010d6a <GUI__CalcTextRect+0x72>
 8010d62:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010d66:	1a1b      	subs	r3, r3, r0
 8010d68:	3301      	adds	r3, #1
 8010d6a:	3f01      	subs	r7, #1
 8010d6c:	3801      	subs	r0, #1
 8010d6e:	802e      	strh	r6, [r5, #0]
 8010d70:	806b      	strh	r3, [r5, #2]
 8010d72:	443e      	add	r6, r7
 8010d74:	4403      	add	r3, r0
 8010d76:	80ae      	strh	r6, [r5, #4]
 8010d78:	80eb      	strh	r3, [r5, #6]
 8010d7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d7e:	680b      	ldr	r3, [r1, #0]
 8010d80:	6013      	str	r3, [r2, #0]
 8010d82:	684b      	ldr	r3, [r1, #4]
 8010d84:	6053      	str	r3, [r2, #4]
 8010d86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010d8a <GUI__MixColors>:
 8010d8a:	f001 437f 	and.w	r3, r1, #4278190080	; 0xff000000
 8010d8e:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
 8010d92:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d94:	d027      	beq.n	8010de6 <GUI__MixColors+0x5c>
 8010d96:	43d3      	mvns	r3, r2
 8010d98:	b2db      	uxtb	r3, r3
 8010d9a:	b2cd      	uxtb	r5, r1
 8010d9c:	b2c6      	uxtb	r6, r0
 8010d9e:	435d      	muls	r5, r3
 8010da0:	fb02 5506 	mla	r5, r2, r6, r5
 8010da4:	f401 467f 	and.w	r6, r1, #65280	; 0xff00
 8010da8:	f400 447f 	and.w	r4, r0, #65280	; 0xff00
 8010dac:	435e      	muls	r6, r3
 8010dae:	fb02 6604 	mla	r6, r2, r4, r6
 8010db2:	f401 047f 	and.w	r4, r1, #16711680	; 0xff0000
 8010db6:	f400 077f 	and.w	r7, r0, #16711680	; 0xff0000
 8010dba:	435c      	muls	r4, r3
 8010dbc:	0e09      	lsrs	r1, r1, #24
 8010dbe:	0e00      	lsrs	r0, r0, #24
 8010dc0:	fb02 4407 	mla	r4, r2, r7, r4
 8010dc4:	434b      	muls	r3, r1
 8010dc6:	0a36      	lsrs	r6, r6, #8
 8010dc8:	fb02 3200 	mla	r2, r2, r0, r3
 8010dcc:	0a24      	lsrs	r4, r4, #8
 8010dce:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8010dd2:	f406 407f 	and.w	r0, r6, #65280	; 0xff00
 8010dd6:	4318      	orrs	r0, r3
 8010dd8:	0412      	lsls	r2, r2, #16
 8010dda:	f404 037f 	and.w	r3, r4, #16711680	; 0xff0000
 8010dde:	4318      	orrs	r0, r3
 8010de0:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8010de4:	4310      	orrs	r0, r2
 8010de6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010de8 <_OnExit>:
 8010de8:	b570      	push	{r4, r5, r6, lr}
 8010dea:	4c0a      	ldr	r4, [pc, #40]	; (8010e14 <_OnExit+0x2c>)
 8010dec:	4d0a      	ldr	r5, [pc, #40]	; (8010e18 <_OnExit+0x30>)
 8010dee:	6820      	ldr	r0, [r4, #0]
 8010df0:	4e0a      	ldr	r6, [pc, #40]	; (8010e1c <_OnExit+0x34>)
 8010df2:	f002 f961 	bl	80130b8 <GUI_ALLOC_FreeFixedBlock>
 8010df6:	6828      	ldr	r0, [r5, #0]
 8010df8:	f002 f95e 	bl	80130b8 <GUI_ALLOC_FreeFixedBlock>
 8010dfc:	6830      	ldr	r0, [r6, #0]
 8010dfe:	f002 f95b 	bl	80130b8 <GUI_ALLOC_FreeFixedBlock>
 8010e02:	4a07      	ldr	r2, [pc, #28]	; (8010e20 <_OnExit+0x38>)
 8010e04:	2300      	movs	r3, #0
 8010e06:	6013      	str	r3, [r2, #0]
 8010e08:	4a06      	ldr	r2, [pc, #24]	; (8010e24 <_OnExit+0x3c>)
 8010e0a:	6033      	str	r3, [r6, #0]
 8010e0c:	602b      	str	r3, [r5, #0]
 8010e0e:	6023      	str	r3, [r4, #0]
 8010e10:	6013      	str	r3, [r2, #0]
 8010e12:	bd70      	pop	{r4, r5, r6, pc}
 8010e14:	20019488 	.word	0x20019488
 8010e18:	20019484 	.word	0x20019484
 8010e1c:	2001948c 	.word	0x2001948c
 8010e20:	20019490 	.word	0x20019490
 8010e24:	200194a0 	.word	0x200194a0

08010e28 <GUI__GetAlphaBuffer>:
 8010e28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010e2c:	461c      	mov	r4, r3
 8010e2e:	4b28      	ldr	r3, [pc, #160]	; (8010ed0 <GUI__GetAlphaBuffer+0xa8>)
 8010e30:	4617      	mov	r7, r2
 8010e32:	681a      	ldr	r2, [r3, #0]
 8010e34:	4606      	mov	r6, r0
 8010e36:	4688      	mov	r8, r1
 8010e38:	b932      	cbnz	r2, 8010e48 <GUI__GetAlphaBuffer+0x20>
 8010e3a:	2201      	movs	r2, #1
 8010e3c:	4825      	ldr	r0, [pc, #148]	; (8010ed4 <GUI__GetAlphaBuffer+0xac>)
 8010e3e:	601a      	str	r2, [r3, #0]
 8010e40:	4b25      	ldr	r3, [pc, #148]	; (8010ed8 <GUI__GetAlphaBuffer+0xb0>)
 8010e42:	6003      	str	r3, [r0, #0]
 8010e44:	f001 fd2c 	bl	80128a0 <GUI__RegisterExit>
 8010e48:	4d24      	ldr	r5, [pc, #144]	; (8010edc <GUI__GetAlphaBuffer+0xb4>)
 8010e4a:	682b      	ldr	r3, [r5, #0]
 8010e4c:	b933      	cbnz	r3, 8010e5c <GUI__GetAlphaBuffer+0x34>
 8010e4e:	4b24      	ldr	r3, [pc, #144]	; (8010ee0 <GUI__GetAlphaBuffer+0xb8>)
 8010e50:	681b      	ldr	r3, [r3, #0]
 8010e52:	602b      	str	r3, [r5, #0]
 8010e54:	b913      	cbnz	r3, 8010e5c <GUI__GetAlphaBuffer+0x34>
 8010e56:	f7ff f993 	bl	8010180 <LCD_GetVXSizeMax>
 8010e5a:	6028      	str	r0, [r5, #0]
 8010e5c:	b10c      	cbz	r4, 8010e62 <GUI__GetAlphaBuffer+0x3a>
 8010e5e:	682b      	ldr	r3, [r5, #0]
 8010e60:	6023      	str	r3, [r4, #0]
 8010e62:	b196      	cbz	r6, 8010e8a <GUI__GetAlphaBuffer+0x62>
 8010e64:	4b1f      	ldr	r3, [pc, #124]	; (8010ee4 <GUI__GetAlphaBuffer+0xbc>)
 8010e66:	681a      	ldr	r2, [r3, #0]
 8010e68:	4699      	mov	r9, r3
 8010e6a:	2400      	movs	r4, #0
 8010e6c:	b94a      	cbnz	r2, 8010e82 <GUI__GetAlphaBuffer+0x5a>
 8010e6e:	6828      	ldr	r0, [r5, #0]
 8010e70:	0080      	lsls	r0, r0, #2
 8010e72:	f002 fa8d 	bl	8013390 <GUI_ALLOC_GetFixedBlock>
 8010e76:	f1d0 0401 	rsbs	r4, r0, #1
 8010e7a:	f8c9 0000 	str.w	r0, [r9]
 8010e7e:	bf38      	it	cc
 8010e80:	2400      	movcc	r4, #0
 8010e82:	f8d9 3000 	ldr.w	r3, [r9]
 8010e86:	6033      	str	r3, [r6, #0]
 8010e88:	e000      	b.n	8010e8c <GUI__GetAlphaBuffer+0x64>
 8010e8a:	4634      	mov	r4, r6
 8010e8c:	f1b8 0f00 	cmp.w	r8, #0
 8010e90:	d00d      	beq.n	8010eae <GUI__GetAlphaBuffer+0x86>
 8010e92:	4e15      	ldr	r6, [pc, #84]	; (8010ee8 <GUI__GetAlphaBuffer+0xc0>)
 8010e94:	6833      	ldr	r3, [r6, #0]
 8010e96:	b93b      	cbnz	r3, 8010ea8 <GUI__GetAlphaBuffer+0x80>
 8010e98:	6828      	ldr	r0, [r5, #0]
 8010e9a:	0080      	lsls	r0, r0, #2
 8010e9c:	f002 fa78 	bl	8013390 <GUI_ALLOC_GetFixedBlock>
 8010ea0:	2800      	cmp	r0, #0
 8010ea2:	6030      	str	r0, [r6, #0]
 8010ea4:	bf08      	it	eq
 8010ea6:	2401      	moveq	r4, #1
 8010ea8:	6833      	ldr	r3, [r6, #0]
 8010eaa:	f8c8 3000 	str.w	r3, [r8]
 8010eae:	b167      	cbz	r7, 8010eca <GUI__GetAlphaBuffer+0xa2>
 8010eb0:	4e0e      	ldr	r6, [pc, #56]	; (8010eec <GUI__GetAlphaBuffer+0xc4>)
 8010eb2:	6833      	ldr	r3, [r6, #0]
 8010eb4:	b93b      	cbnz	r3, 8010ec6 <GUI__GetAlphaBuffer+0x9e>
 8010eb6:	6828      	ldr	r0, [r5, #0]
 8010eb8:	0080      	lsls	r0, r0, #2
 8010eba:	f002 fa69 	bl	8013390 <GUI_ALLOC_GetFixedBlock>
 8010ebe:	2800      	cmp	r0, #0
 8010ec0:	6030      	str	r0, [r6, #0]
 8010ec2:	bf08      	it	eq
 8010ec4:	2401      	moveq	r4, #1
 8010ec6:	6833      	ldr	r3, [r6, #0]
 8010ec8:	603b      	str	r3, [r7, #0]
 8010eca:	4620      	mov	r0, r4
 8010ecc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010ed0:	200194a0 	.word	0x200194a0
 8010ed4:	20019498 	.word	0x20019498
 8010ed8:	08010de9 	.word	0x08010de9
 8010edc:	20019490 	.word	0x20019490
 8010ee0:	20019ca8 	.word	0x20019ca8
 8010ee4:	20019488 	.word	0x20019488
 8010ee8:	20019484 	.word	0x20019484
 8010eec:	2001948c 	.word	0x2001948c

08010ef0 <GUI__DoAlphaBlending>:
 8010ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ef4:	b093      	sub	sp, #76	; 0x4c
 8010ef6:	2400      	movs	r4, #0
 8010ef8:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8010efa:	900b      	str	r0, [sp, #44]	; 0x2c
 8010efc:	910c      	str	r1, [sp, #48]	; 0x30
 8010efe:	4690      	mov	r8, r2
 8010f00:	461f      	mov	r7, r3
 8010f02:	6034      	str	r4, [r6, #0]
 8010f04:	a80f      	add	r0, sp, #60	; 0x3c
 8010f06:	a910      	add	r1, sp, #64	; 0x40
 8010f08:	4622      	mov	r2, r4
 8010f0a:	ab11      	add	r3, sp, #68	; 0x44
 8010f0c:	f7ff ff8c 	bl	8010e28 <GUI__GetAlphaBuffer>
 8010f10:	4605      	mov	r5, r0
 8010f12:	2800      	cmp	r0, #0
 8010f14:	f040 80c3 	bne.w	801109e <GUI__DoAlphaBlending+0x1ae>
 8010f18:	4c63      	ldr	r4, [pc, #396]	; (80110a8 <GUI__DoAlphaBlending+0x1b8>)
 8010f1a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010f1c:	6823      	ldr	r3, [r4, #0]
 8010f1e:	7c58      	ldrb	r0, [r3, #17]
 8010f20:	4b62      	ldr	r3, [pc, #392]	; (80110ac <GUI__DoAlphaBlending+0x1bc>)
 8010f22:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8010f26:	9307      	str	r3, [sp, #28]
 8010f28:	4297      	cmp	r7, r2
 8010f2a:	bfa8      	it	ge
 8010f2c:	4617      	movge	r7, r2
 8010f2e:	691a      	ldr	r2, [r3, #16]
 8010f30:	920d      	str	r2, [sp, #52]	; 0x34
 8010f32:	970a      	str	r7, [sp, #40]	; 0x28
 8010f34:	f7ff f8f0 	bl	8010118 <GUI_GetBitsPerPixelEx>
 8010f38:	6823      	ldr	r3, [r4, #0]
 8010f3a:	9008      	str	r0, [sp, #32]
 8010f3c:	7c58      	ldrb	r0, [r3, #17]
 8010f3e:	f7ff f909 	bl	8010154 <GUI_GetpfIndex2ColorEx>
 8010f42:	4b5b      	ldr	r3, [pc, #364]	; (80110b0 <GUI__DoAlphaBlending+0x1c0>)
 8010f44:	9004      	str	r0, [sp, #16]
 8010f46:	4298      	cmp	r0, r3
 8010f48:	d005      	beq.n	8010f56 <GUI__DoAlphaBlending+0x66>
 8010f4a:	4b5a      	ldr	r3, [pc, #360]	; (80110b4 <GUI__DoAlphaBlending+0x1c4>)
 8010f4c:	1ac3      	subs	r3, r0, r3
 8010f4e:	bf18      	it	ne
 8010f50:	2301      	movne	r3, #1
 8010f52:	9306      	str	r3, [sp, #24]
 8010f54:	e000      	b.n	8010f58 <GUI__DoAlphaBlending+0x68>
 8010f56:	9506      	str	r5, [sp, #24]
 8010f58:	2500      	movs	r5, #0
 8010f5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8010f5c:	46ab      	mov	fp, r5
 8010f5e:	4643      	mov	r3, r8
 8010f60:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010f62:	f853 0b04 	ldr.w	r0, [r3], #4
 8010f66:	9305      	str	r3, [sp, #20]
 8010f68:	4790      	blx	r2
 8010f6a:	0e03      	lsrs	r3, r0, #24
 8010f6c:	4681      	mov	r9, r0
 8010f6e:	9309      	str	r3, [sp, #36]	; 0x24
 8010f70:	f000 8085 	beq.w	801107e <GUI__DoAlphaBlending+0x18e>
 8010f74:	f1bb 0f00 	cmp.w	fp, #0
 8010f78:	d13f      	bne.n	8010ffa <GUI__DoAlphaBlending+0x10a>
 8010f7a:	4b4b      	ldr	r3, [pc, #300]	; (80110a8 <GUI__DoAlphaBlending+0x1b8>)
 8010f7c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8010f7e:	681b      	ldr	r3, [r3, #0]
 8010f80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010f82:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8010f86:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 8010f8a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010f8c:	442f      	add	r7, r5
 8010f8e:	42bb      	cmp	r3, r7
 8010f90:	bfc8      	it	gt
 8010f92:	ebc7 0b03 	rsbgt	fp, r7, r3
 8010f96:	eb0b 0a05 	add.w	sl, fp, r5
 8010f9a:	bfc8      	it	gt
 8010f9c:	461f      	movgt	r7, r3
 8010f9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010fa0:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8010fa4:	4453      	add	r3, sl
 8010fa6:	4494      	add	ip, r2
 8010fa8:	9300      	str	r3, [sp, #0]
 8010faa:	9b07      	ldr	r3, [sp, #28]
 8010fac:	9301      	str	r3, [sp, #4]
 8010fae:	f10c 32ff 	add.w	r2, ip, #4294967295
 8010fb2:	4638      	mov	r0, r7
 8010fb4:	460b      	mov	r3, r1
 8010fb6:	f8cd c00c 	str.w	ip, [sp, #12]
 8010fba:	f006 fce7 	bl	801798c <GUI_ReadRectEx>
 8010fbe:	9a08      	ldr	r2, [sp, #32]
 8010fc0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010fc2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8010fc6:	2a17      	cmp	r2, #23
 8010fc8:	dc06      	bgt.n	8010fd8 <GUI__DoAlphaBlending+0xe8>
 8010fca:	4450      	add	r0, sl
 8010fcc:	ebcb 0104 	rsb	r1, fp, r4
 8010fd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010fd2:	f006 fff3 	bl	8017fbc <GUI__ExpandPixelIndicesEx>
 8010fd6:	e001      	b.n	8010fdc <GUI__DoAlphaBlending+0xec>
 8010fd8:	9b06      	ldr	r3, [sp, #24]
 8010fda:	b913      	cbnz	r3, 8010fe2 <GUI__DoAlphaBlending+0xf2>
 8010fdc:	f04f 0b01 	mov.w	fp, #1
 8010fe0:	e00b      	b.n	8010ffa <GUI__DoAlphaBlending+0x10a>
 8010fe2:	ebc7 070c 	rsb	r7, r7, ip
 8010fe6:	4482      	add	sl, r0
 8010fe8:	f8da 0000 	ldr.w	r0, [sl]
 8010fec:	9a04      	ldr	r2, [sp, #16]
 8010fee:	4790      	blx	r2
 8010ff0:	3f01      	subs	r7, #1
 8010ff2:	f84a 0b04 	str.w	r0, [sl], #4
 8010ff6:	d1f7      	bne.n	8010fe8 <GUI__DoAlphaBlending+0xf8>
 8010ff8:	e7f0      	b.n	8010fdc <GUI__DoAlphaBlending+0xec>
 8010ffa:	4b2f      	ldr	r3, [pc, #188]	; (80110b8 <GUI__DoAlphaBlending+0x1c8>)
 8010ffc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8010ffe:	f8d3 c000 	ldr.w	ip, [r3]
 8011002:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8011004:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 8011008:	f1bc 0f00 	cmp.w	ip, #0
 801100c:	d024      	beq.n	8011058 <GUI__DoAlphaBlending+0x168>
 801100e:	eb07 020a 	add.w	r2, r7, sl
 8011012:	4451      	add	r1, sl
 8011014:	9210      	str	r2, [sp, #64]	; 0x40
 8011016:	4623      	mov	r3, r4
 8011018:	910f      	str	r1, [sp, #60]	; 0x3c
 801101a:	4640      	mov	r0, r8
 801101c:	47e0      	blx	ip
 801101e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8011020:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011022:	2300      	movs	r3, #0
 8011024:	f858 1003 	ldr.w	r1, [r8, r3]
 8011028:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 801102c:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 8011030:	58e8      	ldr	r0, [r5, r3]
 8011032:	d101      	bne.n	8011038 <GUI__DoAlphaBlending+0x148>
 8011034:	50d0      	str	r0, [r2, r3]
 8011036:	e005      	b.n	8011044 <GUI__DoAlphaBlending+0x154>
 8011038:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 801103c:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 8011040:	bf08      	it	eq
 8011042:	50d1      	streq	r1, [r2, r3]
 8011044:	3c01      	subs	r4, #1
 8011046:	f103 0304 	add.w	r3, r3, #4
 801104a:	d1eb      	bne.n	8011024 <GUI__DoAlphaBlending+0x134>
 801104c:	6833      	ldr	r3, [r6, #0]
 801104e:	9710      	str	r7, [sp, #64]	; 0x40
 8011050:	f043 0301 	orr.w	r3, r3, #1
 8011054:	6033      	str	r3, [r6, #0]
 8011056:	e020      	b.n	801109a <GUI__DoAlphaBlending+0x1aa>
 8011058:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801105a:	2bff      	cmp	r3, #255	; 0xff
 801105c:	d104      	bne.n	8011068 <GUI__DoAlphaBlending+0x178>
 801105e:	f851 300a 	ldr.w	r3, [r1, sl]
 8011062:	f847 300a 	str.w	r3, [r7, sl]
 8011066:	e011      	b.n	801108c <GUI__DoAlphaBlending+0x19c>
 8011068:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801106a:	f851 100a 	ldr.w	r1, [r1, sl]
 801106e:	43da      	mvns	r2, r3
 8011070:	4648      	mov	r0, r9
 8011072:	b2d2      	uxtb	r2, r2
 8011074:	f7ff fe89 	bl	8010d8a <GUI__MixColors>
 8011078:	f847 000a 	str.w	r0, [r7, sl]
 801107c:	e002      	b.n	8011084 <GUI__DoAlphaBlending+0x194>
 801107e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011080:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 8011084:	6833      	ldr	r3, [r6, #0]
 8011086:	f043 0301 	orr.w	r3, r3, #1
 801108a:	6033      	str	r3, [r6, #0]
 801108c:	3c01      	subs	r4, #1
 801108e:	f105 0501 	add.w	r5, r5, #1
 8011092:	d002      	beq.n	801109a <GUI__DoAlphaBlending+0x1aa>
 8011094:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8011098:	e761      	b.n	8010f5e <GUI__DoAlphaBlending+0x6e>
 801109a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801109c:	e000      	b.n	80110a0 <GUI__DoAlphaBlending+0x1b0>
 801109e:	4620      	mov	r0, r4
 80110a0:	b013      	add	sp, #76	; 0x4c
 80110a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110a6:	bf00      	nop
 80110a8:	2000016c 	.word	0x2000016c
 80110ac:	20019ca0 	.word	0x20019ca0
 80110b0:	08013723 	.word	0x08013723
 80110b4:	08013721 	.word	0x08013721
 80110b8:	20019494 	.word	0x20019494

080110bc <GUI__AllocAlphaBuffer>:
 80110bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80110be:	b108      	cbz	r0, 80110c4 <GUI__AllocAlphaBuffer+0x8>
 80110c0:	aa03      	add	r2, sp, #12
 80110c2:	e000      	b.n	80110c6 <GUI__AllocAlphaBuffer+0xa>
 80110c4:	4602      	mov	r2, r0
 80110c6:	a801      	add	r0, sp, #4
 80110c8:	a902      	add	r1, sp, #8
 80110ca:	2300      	movs	r3, #0
 80110cc:	f7ff feac 	bl	8010e28 <GUI__GetAlphaBuffer>
 80110d0:	b005      	add	sp, #20
 80110d2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080110d8 <GUI_SignalEvent>:
 80110d8:	b508      	push	{r3, lr}
 80110da:	4b02      	ldr	r3, [pc, #8]	; (80110e4 <GUI_SignalEvent+0xc>)
 80110dc:	681b      	ldr	r3, [r3, #0]
 80110de:	b103      	cbz	r3, 80110e2 <GUI_SignalEvent+0xa>
 80110e0:	4798      	blx	r3
 80110e2:	bd08      	pop	{r3, pc}
 80110e4:	200194a4 	.word	0x200194a4

080110e8 <GUI_UC_GetCharSize>:
 80110e8:	b508      	push	{r3, lr}
 80110ea:	4b02      	ldr	r3, [pc, #8]	; (80110f4 <GUI_UC_GetCharSize+0xc>)
 80110ec:	681b      	ldr	r3, [r3, #0]
 80110ee:	685b      	ldr	r3, [r3, #4]
 80110f0:	4798      	blx	r3
 80110f2:	bd08      	pop	{r3, pc}
 80110f4:	20019c98 	.word	0x20019c98

080110f8 <GUI_UC_GetCharCode>:
 80110f8:	b508      	push	{r3, lr}
 80110fa:	4b02      	ldr	r3, [pc, #8]	; (8011104 <GUI_UC_GetCharCode+0xc>)
 80110fc:	681b      	ldr	r3, [r3, #0]
 80110fe:	681b      	ldr	r3, [r3, #0]
 8011100:	4798      	blx	r3
 8011102:	bd08      	pop	{r3, pc}
 8011104:	20019c98 	.word	0x20019c98

08011108 <GUI_UC_Encode>:
 8011108:	b508      	push	{r3, lr}
 801110a:	4b02      	ldr	r3, [pc, #8]	; (8011114 <GUI_UC_Encode+0xc>)
 801110c:	681b      	ldr	r3, [r3, #0]
 801110e:	68db      	ldr	r3, [r3, #12]
 8011110:	4798      	blx	r3
 8011112:	bd08      	pop	{r3, pc}
 8011114:	20019c98 	.word	0x20019c98

08011118 <GUI_UC__CalcSizeOfChar>:
 8011118:	b508      	push	{r3, lr}
 801111a:	4b02      	ldr	r3, [pc, #8]	; (8011124 <GUI_UC__CalcSizeOfChar+0xc>)
 801111c:	681b      	ldr	r3, [r3, #0]
 801111e:	689b      	ldr	r3, [r3, #8]
 8011120:	4798      	blx	r3
 8011122:	bd08      	pop	{r3, pc}
 8011124:	20019c98 	.word	0x20019c98

08011128 <GUI_UC__GetCharCodeInc>:
 8011128:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801112a:	4e08      	ldr	r6, [pc, #32]	; (801114c <GUI_UC__GetCharCodeInc+0x24>)
 801112c:	6804      	ldr	r4, [r0, #0]
 801112e:	6833      	ldr	r3, [r6, #0]
 8011130:	4605      	mov	r5, r0
 8011132:	681b      	ldr	r3, [r3, #0]
 8011134:	4620      	mov	r0, r4
 8011136:	4798      	blx	r3
 8011138:	6833      	ldr	r3, [r6, #0]
 801113a:	4607      	mov	r7, r0
 801113c:	685b      	ldr	r3, [r3, #4]
 801113e:	4620      	mov	r0, r4
 8011140:	4798      	blx	r3
 8011142:	4420      	add	r0, r4
 8011144:	6028      	str	r0, [r5, #0]
 8011146:	4638      	mov	r0, r7
 8011148:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801114a:	bf00      	nop
 801114c:	20019c98 	.word	0x20019c98

08011150 <GUI_UC__NumChars2NumBytes>:
 8011150:	b570      	push	{r4, r5, r6, lr}
 8011152:	4604      	mov	r4, r0
 8011154:	460e      	mov	r6, r1
 8011156:	2500      	movs	r5, #0
 8011158:	b146      	cbz	r6, 801116c <GUI_UC__NumChars2NumBytes+0x1c>
 801115a:	4b05      	ldr	r3, [pc, #20]	; (8011170 <GUI_UC__NumChars2NumBytes+0x20>)
 801115c:	681b      	ldr	r3, [r3, #0]
 801115e:	4620      	mov	r0, r4
 8011160:	685b      	ldr	r3, [r3, #4]
 8011162:	4798      	blx	r3
 8011164:	3e01      	subs	r6, #1
 8011166:	4404      	add	r4, r0
 8011168:	4405      	add	r5, r0
 801116a:	e7f5      	b.n	8011158 <GUI_UC__NumChars2NumBytes+0x8>
 801116c:	4628      	mov	r0, r5
 801116e:	bd70      	pop	{r4, r5, r6, pc}
 8011170:	20019c98 	.word	0x20019c98

08011174 <GUI_UC__NumBytes2NumChars>:
 8011174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011176:	2400      	movs	r4, #0
 8011178:	4606      	mov	r6, r0
 801117a:	460f      	mov	r7, r1
 801117c:	4625      	mov	r5, r4
 801117e:	42a7      	cmp	r7, r4
 8011180:	dd07      	ble.n	8011192 <GUI_UC__NumBytes2NumChars+0x1e>
 8011182:	4b05      	ldr	r3, [pc, #20]	; (8011198 <GUI_UC__NumBytes2NumChars+0x24>)
 8011184:	681b      	ldr	r3, [r3, #0]
 8011186:	1930      	adds	r0, r6, r4
 8011188:	685b      	ldr	r3, [r3, #4]
 801118a:	4798      	blx	r3
 801118c:	3501      	adds	r5, #1
 801118e:	4404      	add	r4, r0
 8011190:	e7f5      	b.n	801117e <GUI_UC__NumBytes2NumChars+0xa>
 8011192:	4628      	mov	r0, r5
 8011194:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011196:	bf00      	nop
 8011198:	20019c98 	.word	0x20019c98

0801119c <_OnExit>:
 801119c:	4a03      	ldr	r2, [pc, #12]	; (80111ac <_OnExit+0x10>)
 801119e:	2300      	movs	r3, #0
 80111a0:	6013      	str	r3, [r2, #0]
 80111a2:	4a03      	ldr	r2, [pc, #12]	; (80111b0 <_OnExit+0x14>)
 80111a4:	6013      	str	r3, [r2, #0]
 80111a6:	4a03      	ldr	r2, [pc, #12]	; (80111b4 <_OnExit+0x18>)
 80111a8:	6013      	str	r3, [r2, #0]
 80111aa:	4770      	bx	lr
 80111ac:	200194a8 	.word	0x200194a8
 80111b0:	200194ac 	.word	0x200194ac
 80111b4:	200194b8 	.word	0x200194b8

080111b8 <GUI_TIMER_Exec>:
 80111b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80111bc:	4b19      	ldr	r3, [pc, #100]	; (8011224 <GUI_TIMER_Exec+0x6c>)
 80111be:	681f      	ldr	r7, [r3, #0]
 80111c0:	b085      	sub	sp, #20
 80111c2:	2500      	movs	r5, #0
 80111c4:	4698      	mov	r8, r3
 80111c6:	f8d8 3000 	ldr.w	r3, [r8]
 80111ca:	4c16      	ldr	r4, [pc, #88]	; (8011224 <GUI_TIMER_Exec+0x6c>)
 80111cc:	b333      	cbz	r3, 801121c <GUI_TIMER_Exec+0x64>
 80111ce:	f000 f991 	bl	80114f4 <GUI_GetTime>
 80111d2:	4606      	mov	r6, r0
 80111d4:	6820      	ldr	r0, [r4, #0]
 80111d6:	f001 ff83 	bl	80130e0 <GUI_ALLOC_LockH>
 80111da:	4603      	mov	r3, r0
 80111dc:	a804      	add	r0, sp, #16
 80111de:	6959      	ldr	r1, [r3, #20]
 80111e0:	f840 3d10 	str.w	r3, [r0, #-16]!
 80111e4:	1b89      	subs	r1, r1, r6
 80111e6:	2900      	cmp	r1, #0
 80111e8:	dc13      	bgt.n	8011212 <GUI_TIMER_Exec+0x5a>
 80111ea:	6821      	ldr	r1, [r4, #0]
 80111ec:	9103      	str	r1, [sp, #12]
 80111ee:	9601      	str	r6, [sp, #4]
 80111f0:	6919      	ldr	r1, [r3, #16]
 80111f2:	685e      	ldr	r6, [r3, #4]
 80111f4:	9102      	str	r1, [sp, #8]
 80111f6:	4668      	mov	r0, sp
 80111f8:	6026      	str	r6, [r4, #0]
 80111fa:	f8d3 9000 	ldr.w	r9, [r3]
 80111fe:	f001 ff7d 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011202:	a801      	add	r0, sp, #4
 8011204:	47c8      	blx	r9
 8011206:	b14e      	cbz	r6, 801121c <GUI_TIMER_Exec+0x64>
 8011208:	6823      	ldr	r3, [r4, #0]
 801120a:	42bb      	cmp	r3, r7
 801120c:	d005      	beq.n	801121a <GUI_TIMER_Exec+0x62>
 801120e:	2501      	movs	r5, #1
 8011210:	e7d9      	b.n	80111c6 <GUI_TIMER_Exec+0xe>
 8011212:	4668      	mov	r0, sp
 8011214:	f001 ff72 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011218:	e000      	b.n	801121c <GUI_TIMER_Exec+0x64>
 801121a:	2500      	movs	r5, #0
 801121c:	4628      	mov	r0, r5
 801121e:	b005      	add	sp, #20
 8011220:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011224:	200194ac 	.word	0x200194ac

08011228 <_Link>:
 8011228:	b5f0      	push	{r4, r5, r6, r7, lr}
 801122a:	4c25      	ldr	r4, [pc, #148]	; (80112c0 <_Link+0x98>)
 801122c:	b085      	sub	sp, #20
 801122e:	4605      	mov	r5, r0
 8011230:	f001 ff56 	bl	80130e0 <GUI_ALLOC_LockH>
 8011234:	6823      	ldr	r3, [r4, #0]
 8011236:	9001      	str	r0, [sp, #4]
 8011238:	b913      	cbnz	r3, 8011240 <_Link+0x18>
 801123a:	6025      	str	r5, [r4, #0]
 801123c:	6043      	str	r3, [r0, #4]
 801123e:	e039      	b.n	80112b4 <_Link+0x8c>
 8011240:	4618      	mov	r0, r3
 8011242:	f001 ff4d 	bl	80130e0 <GUI_ALLOC_LockH>
 8011246:	ab04      	add	r3, sp, #16
 8011248:	6946      	ldr	r6, [r0, #20]
 801124a:	f843 0d10 	str.w	r0, [r3, #-16]!
 801124e:	4668      	mov	r0, sp
 8011250:	f001 ff54 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011254:	9b01      	ldr	r3, [sp, #4]
 8011256:	695a      	ldr	r2, [r3, #20]
 8011258:	1b92      	subs	r2, r2, r6
 801125a:	2a00      	cmp	r2, #0
 801125c:	dc03      	bgt.n	8011266 <_Link+0x3e>
 801125e:	6822      	ldr	r2, [r4, #0]
 8011260:	605a      	str	r2, [r3, #4]
 8011262:	6025      	str	r5, [r4, #0]
 8011264:	e026      	b.n	80112b4 <_Link+0x8c>
 8011266:	6826      	ldr	r6, [r4, #0]
 8011268:	4630      	mov	r0, r6
 801126a:	f001 ff39 	bl	80130e0 <GUI_ALLOC_LockH>
 801126e:	ac04      	add	r4, sp, #16
 8011270:	6846      	ldr	r6, [r0, #4]
 8011272:	f844 0d08 	str.w	r0, [r4, #-8]!
 8011276:	b1be      	cbz	r6, 80112a8 <_Link+0x80>
 8011278:	4630      	mov	r0, r6
 801127a:	f001 ff31 	bl	80130e0 <GUI_ALLOC_LockH>
 801127e:	ab04      	add	r3, sp, #16
 8011280:	6947      	ldr	r7, [r0, #20]
 8011282:	f843 0d04 	str.w	r0, [r3, #-4]!
 8011286:	4618      	mov	r0, r3
 8011288:	f001 ff38 	bl	80130fc <GUI_ALLOC_UnlockH>
 801128c:	9a01      	ldr	r2, [sp, #4]
 801128e:	6953      	ldr	r3, [r2, #20]
 8011290:	1bdb      	subs	r3, r3, r7
 8011292:	2b00      	cmp	r3, #0
 8011294:	9b02      	ldr	r3, [sp, #8]
 8011296:	dc02      	bgt.n	801129e <_Link+0x76>
 8011298:	6056      	str	r6, [r2, #4]
 801129a:	605d      	str	r5, [r3, #4]
 801129c:	e007      	b.n	80112ae <_Link+0x86>
 801129e:	4620      	mov	r0, r4
 80112a0:	685e      	ldr	r6, [r3, #4]
 80112a2:	f001 ff2b 	bl	80130fc <GUI_ALLOC_UnlockH>
 80112a6:	e7df      	b.n	8011268 <_Link+0x40>
 80112a8:	9b01      	ldr	r3, [sp, #4]
 80112aa:	605e      	str	r6, [r3, #4]
 80112ac:	6045      	str	r5, [r0, #4]
 80112ae:	4620      	mov	r0, r4
 80112b0:	f001 ff24 	bl	80130fc <GUI_ALLOC_UnlockH>
 80112b4:	a801      	add	r0, sp, #4
 80112b6:	f001 ff21 	bl	80130fc <GUI_ALLOC_UnlockH>
 80112ba:	b005      	add	sp, #20
 80112bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80112be:	bf00      	nop
 80112c0:	200194ac 	.word	0x200194ac

080112c4 <_Unlink>:
 80112c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80112c6:	4605      	mov	r5, r0
 80112c8:	b1f0      	cbz	r0, 8011308 <_Unlink+0x44>
 80112ca:	f001 ff09 	bl	80130e0 <GUI_ALLOC_LockH>
 80112ce:	4b0f      	ldr	r3, [pc, #60]	; (801130c <_Unlink+0x48>)
 80112d0:	9000      	str	r0, [sp, #0]
 80112d2:	681c      	ldr	r4, [r3, #0]
 80112d4:	42ac      	cmp	r4, r5
 80112d6:	d104      	bne.n	80112e2 <_Unlink+0x1e>
 80112d8:	6842      	ldr	r2, [r0, #4]
 80112da:	601a      	str	r2, [r3, #0]
 80112dc:	e011      	b.n	8011302 <_Unlink+0x3e>
 80112de:	f001 ff0d 	bl	80130fc <GUI_ALLOC_UnlockH>
 80112e2:	b174      	cbz	r4, 8011302 <_Unlink+0x3e>
 80112e4:	4620      	mov	r0, r4
 80112e6:	f001 fefb 	bl	80130e0 <GUI_ALLOC_LockH>
 80112ea:	4603      	mov	r3, r0
 80112ec:	a802      	add	r0, sp, #8
 80112ee:	685c      	ldr	r4, [r3, #4]
 80112f0:	f840 3d04 	str.w	r3, [r0, #-4]!
 80112f4:	42ac      	cmp	r4, r5
 80112f6:	d1f2      	bne.n	80112de <_Unlink+0x1a>
 80112f8:	9a00      	ldr	r2, [sp, #0]
 80112fa:	6852      	ldr	r2, [r2, #4]
 80112fc:	605a      	str	r2, [r3, #4]
 80112fe:	f001 fefd 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011302:	4668      	mov	r0, sp
 8011304:	f001 fefa 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011308:	b003      	add	sp, #12
 801130a:	bd30      	pop	{r4, r5, pc}
 801130c:	200194ac 	.word	0x200194ac

08011310 <GUI_TIMER__GetFirstTimer>:
 8011310:	2300      	movs	r3, #0
 8011312:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011314:	6003      	str	r3, [r0, #0]
 8011316:	4b09      	ldr	r3, [pc, #36]	; (801133c <GUI_TIMER__GetFirstTimer+0x2c>)
 8011318:	681c      	ldr	r4, [r3, #0]
 801131a:	4605      	mov	r5, r0
 801131c:	b154      	cbz	r4, 8011334 <GUI_TIMER__GetFirstTimer+0x24>
 801131e:	4620      	mov	r0, r4
 8011320:	f001 fede 	bl	80130e0 <GUI_ALLOC_LockH>
 8011324:	ab02      	add	r3, sp, #8
 8011326:	6902      	ldr	r2, [r0, #16]
 8011328:	f843 0d04 	str.w	r0, [r3, #-4]!
 801132c:	602a      	str	r2, [r5, #0]
 801132e:	4618      	mov	r0, r3
 8011330:	f001 fee4 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011334:	4620      	mov	r0, r4
 8011336:	b003      	add	sp, #12
 8011338:	bd30      	pop	{r4, r5, pc}
 801133a:	bf00      	nop
 801133c:	200194a8 	.word	0x200194a8

08011340 <GUI_TIMER__GetNextTimerLin>:
 8011340:	2300      	movs	r3, #0
 8011342:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011344:	600b      	str	r3, [r1, #0]
 8011346:	460e      	mov	r6, r1
 8011348:	4604      	mov	r4, r0
 801134a:	b190      	cbz	r0, 8011372 <GUI_TIMER__GetNextTimerLin+0x32>
 801134c:	f001 fec8 	bl	80130e0 <GUI_ALLOC_LockH>
 8011350:	ad02      	add	r5, sp, #8
 8011352:	6884      	ldr	r4, [r0, #8]
 8011354:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011358:	b144      	cbz	r4, 801136c <GUI_TIMER__GetNextTimerLin+0x2c>
 801135a:	4628      	mov	r0, r5
 801135c:	f001 fece 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011360:	4620      	mov	r0, r4
 8011362:	f001 febd 	bl	80130e0 <GUI_ALLOC_LockH>
 8011366:	6903      	ldr	r3, [r0, #16]
 8011368:	9001      	str	r0, [sp, #4]
 801136a:	6033      	str	r3, [r6, #0]
 801136c:	4628      	mov	r0, r5
 801136e:	f001 fec5 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011372:	4620      	mov	r0, r4
 8011374:	b002      	add	sp, #8
 8011376:	bd70      	pop	{r4, r5, r6, pc}

08011378 <GUI_TIMER_Create>:
 8011378:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801137c:	4681      	mov	r9, r0
 801137e:	201c      	movs	r0, #28
 8011380:	460e      	mov	r6, r1
 8011382:	4690      	mov	r8, r2
 8011384:	461f      	mov	r7, r3
 8011386:	f002 f918 	bl	80135ba <GUI_ALLOC_AllocZero>
 801138a:	4604      	mov	r4, r0
 801138c:	2800      	cmp	r0, #0
 801138e:	d031      	beq.n	80113f4 <GUI_TIMER_Create+0x7c>
 8011390:	4b1a      	ldr	r3, [pc, #104]	; (80113fc <GUI_TIMER_Create+0x84>)
 8011392:	4a1b      	ldr	r2, [pc, #108]	; (8011400 <GUI_TIMER_Create+0x88>)
 8011394:	601a      	str	r2, [r3, #0]
 8011396:	f001 fea3 	bl	80130e0 <GUI_ALLOC_LockH>
 801139a:	9000      	str	r0, [sp, #0]
 801139c:	b916      	cbnz	r6, 80113a4 <GUI_TIMER_Create+0x2c>
 801139e:	f000 f8a9 	bl	80114f4 <GUI_GetTime>
 80113a2:	4606      	mov	r6, r0
 80113a4:	a802      	add	r0, sp, #8
 80113a6:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 80113aa:	4668      	mov	r0, sp
 80113ac:	616e      	str	r6, [r5, #20]
 80113ae:	f8c5 9000 	str.w	r9, [r5]
 80113b2:	f8c5 8010 	str.w	r8, [r5, #16]
 80113b6:	81af      	strh	r7, [r5, #12]
 80113b8:	f001 fea0 	bl	80130fc <GUI_ALLOC_UnlockH>
 80113bc:	4620      	mov	r0, r4
 80113be:	f7ff ff33 	bl	8011228 <_Link>
 80113c2:	4b10      	ldr	r3, [pc, #64]	; (8011404 <GUI_TIMER_Create+0x8c>)
 80113c4:	681a      	ldr	r2, [r3, #0]
 80113c6:	b932      	cbnz	r2, 80113d6 <GUI_TIMER_Create+0x5e>
 80113c8:	2201      	movs	r2, #1
 80113ca:	480f      	ldr	r0, [pc, #60]	; (8011408 <GUI_TIMER_Create+0x90>)
 80113cc:	601a      	str	r2, [r3, #0]
 80113ce:	4b0f      	ldr	r3, [pc, #60]	; (801140c <GUI_TIMER_Create+0x94>)
 80113d0:	6003      	str	r3, [r0, #0]
 80113d2:	f001 fa65 	bl	80128a0 <GUI__RegisterExit>
 80113d6:	4620      	mov	r0, r4
 80113d8:	f001 fe82 	bl	80130e0 <GUI_ALLOC_LockH>
 80113dc:	4a0c      	ldr	r2, [pc, #48]	; (8011410 <GUI_TIMER_Create+0x98>)
 80113de:	9001      	str	r0, [sp, #4]
 80113e0:	6813      	ldr	r3, [r2, #0]
 80113e2:	b913      	cbnz	r3, 80113ea <GUI_TIMER_Create+0x72>
 80113e4:	6014      	str	r4, [r2, #0]
 80113e6:	6083      	str	r3, [r0, #8]
 80113e8:	e001      	b.n	80113ee <GUI_TIMER_Create+0x76>
 80113ea:	6083      	str	r3, [r0, #8]
 80113ec:	6014      	str	r4, [r2, #0]
 80113ee:	a801      	add	r0, sp, #4
 80113f0:	f001 fe84 	bl	80130fc <GUI_ALLOC_UnlockH>
 80113f4:	4620      	mov	r0, r4
 80113f6:	b003      	add	sp, #12
 80113f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80113fc:	20019c84 	.word	0x20019c84
 8011400:	080111b9 	.word	0x080111b9
 8011404:	200194b8 	.word	0x200194b8
 8011408:	200194b0 	.word	0x200194b0
 801140c:	0801119d 	.word	0x0801119d
 8011410:	200194a8 	.word	0x200194a8

08011414 <GUI_TIMER_Delete>:
 8011414:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011416:	4604      	mov	r4, r0
 8011418:	b358      	cbz	r0, 8011472 <GUI_TIMER_Delete+0x5e>
 801141a:	4d17      	ldr	r5, [pc, #92]	; (8011478 <GUI_TIMER_Delete+0x64>)
 801141c:	682e      	ldr	r6, [r5, #0]
 801141e:	4286      	cmp	r6, r0
 8011420:	d10b      	bne.n	801143a <GUI_TIMER_Delete+0x26>
 8011422:	f001 fe5d 	bl	80130e0 <GUI_ALLOC_LockH>
 8011426:	ab02      	add	r3, sp, #8
 8011428:	6882      	ldr	r2, [r0, #8]
 801142a:	f843 0d04 	str.w	r0, [r3, #-4]!
 801142e:	602a      	str	r2, [r5, #0]
 8011430:	4618      	mov	r0, r3
 8011432:	e016      	b.n	8011462 <GUI_TIMER_Delete+0x4e>
 8011434:	4668      	mov	r0, sp
 8011436:	f001 fe61 	bl	80130fc <GUI_ALLOC_UnlockH>
 801143a:	4630      	mov	r0, r6
 801143c:	f001 fe50 	bl	80130e0 <GUI_ALLOC_LockH>
 8011440:	6886      	ldr	r6, [r0, #8]
 8011442:	ad02      	add	r5, sp, #8
 8011444:	42a6      	cmp	r6, r4
 8011446:	f845 0d08 	str.w	r0, [r5, #-8]!
 801144a:	d1f3      	bne.n	8011434 <GUI_TIMER_Delete+0x20>
 801144c:	4620      	mov	r0, r4
 801144e:	f001 fe47 	bl	80130e0 <GUI_ALLOC_LockH>
 8011452:	9b00      	ldr	r3, [sp, #0]
 8011454:	6882      	ldr	r2, [r0, #8]
 8011456:	9001      	str	r0, [sp, #4]
 8011458:	609a      	str	r2, [r3, #8]
 801145a:	a801      	add	r0, sp, #4
 801145c:	f001 fe4e 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011460:	4668      	mov	r0, sp
 8011462:	f001 fe4b 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011466:	4620      	mov	r0, r4
 8011468:	f7ff ff2c 	bl	80112c4 <_Unlink>
 801146c:	4620      	mov	r0, r4
 801146e:	f001 fe71 	bl	8013154 <GUI_ALLOC_Free>
 8011472:	b002      	add	sp, #8
 8011474:	bd70      	pop	{r4, r5, r6, pc}
 8011476:	bf00      	nop
 8011478:	200194a8 	.word	0x200194a8

0801147c <GUI_TIMER_SetPeriod>:
 801147c:	b513      	push	{r0, r1, r4, lr}
 801147e:	460c      	mov	r4, r1
 8011480:	b140      	cbz	r0, 8011494 <GUI_TIMER_SetPeriod+0x18>
 8011482:	f001 fe2d 	bl	80130e0 <GUI_ALLOC_LockH>
 8011486:	ab02      	add	r3, sp, #8
 8011488:	6184      	str	r4, [r0, #24]
 801148a:	f843 0d04 	str.w	r0, [r3, #-4]!
 801148e:	4618      	mov	r0, r3
 8011490:	f001 fe34 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011494:	b002      	add	sp, #8
 8011496:	bd10      	pop	{r4, pc}

08011498 <GUI_TIMER_Restart>:
 8011498:	b513      	push	{r0, r1, r4, lr}
 801149a:	4604      	mov	r4, r0
 801149c:	b198      	cbz	r0, 80114c6 <GUI_TIMER_Restart+0x2e>
 801149e:	f001 fe1f 	bl	80130e0 <GUI_ALLOC_LockH>
 80114a2:	9001      	str	r0, [sp, #4]
 80114a4:	f000 f826 	bl	80114f4 <GUI_GetTime>
 80114a8:	ab02      	add	r3, sp, #8
 80114aa:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80114ae:	6991      	ldr	r1, [r2, #24]
 80114b0:	4408      	add	r0, r1
 80114b2:	6150      	str	r0, [r2, #20]
 80114b4:	4618      	mov	r0, r3
 80114b6:	f001 fe21 	bl	80130fc <GUI_ALLOC_UnlockH>
 80114ba:	4620      	mov	r0, r4
 80114bc:	f7ff ff02 	bl	80112c4 <_Unlink>
 80114c0:	4620      	mov	r0, r4
 80114c2:	f7ff feb1 	bl	8011228 <_Link>
 80114c6:	b002      	add	sp, #8
 80114c8:	bd10      	pop	{r4, pc}

080114ca <GUI_TIMER_GetFlag>:
 80114ca:	b513      	push	{r0, r1, r4, lr}
 80114cc:	460c      	mov	r4, r1
 80114ce:	b168      	cbz	r0, 80114ec <GUI_TIMER_GetFlag+0x22>
 80114d0:	f001 fe06 	bl	80130e0 <GUI_ALLOC_LockH>
 80114d4:	ab02      	add	r3, sp, #8
 80114d6:	8982      	ldrh	r2, [r0, #12]
 80114d8:	f843 0d04 	str.w	r0, [r3, #-4]!
 80114dc:	4214      	tst	r4, r2
 80114de:	4618      	mov	r0, r3
 80114e0:	bf0c      	ite	eq
 80114e2:	2400      	moveq	r4, #0
 80114e4:	2401      	movne	r4, #1
 80114e6:	f001 fe09 	bl	80130fc <GUI_ALLOC_UnlockH>
 80114ea:	e000      	b.n	80114ee <GUI_TIMER_GetFlag+0x24>
 80114ec:	2401      	movs	r4, #1
 80114ee:	4620      	mov	r0, r4
 80114f0:	b002      	add	sp, #8
 80114f2:	bd10      	pop	{r4, pc}

080114f4 <GUI_GetTime>:
 80114f4:	f7f7 b98c 	b.w	8008810 <GUI_X_GetTime>

080114f8 <GUI_Delay>:
 80114f8:	b538      	push	{r3, r4, r5, lr}
 80114fa:	4605      	mov	r5, r0
 80114fc:	f7f7 f988 	bl	8008810 <GUI_X_GetTime>
 8011500:	4405      	add	r5, r0
 8011502:	f7f7 f985 	bl	8008810 <GUI_X_GetTime>
 8011506:	1a2c      	subs	r4, r5, r0
 8011508:	2c00      	cmp	r4, #0
 801150a:	dd08      	ble.n	801151e <GUI_Delay+0x26>
 801150c:	f000 feb4 	bl	8012278 <GUI_Exec>
 8011510:	2c05      	cmp	r4, #5
 8011512:	bfb4      	ite	lt
 8011514:	4620      	movlt	r0, r4
 8011516:	2005      	movge	r0, #5
 8011518:	f7f7 f980 	bl	800881c <GUI_X_Delay>
 801151c:	e7f1      	b.n	8011502 <GUI_Delay+0xa>
 801151e:	bd38      	pop	{r3, r4, r5, pc}

08011520 <GUI_TOUCH_Calibrate>:
 8011520:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011522:	2801      	cmp	r0, #1
 8011524:	9c08      	ldr	r4, [sp, #32]
 8011526:	d845      	bhi.n	80115b4 <GUI_TOUCH_Calibrate+0x94>
 8011528:	4d25      	ldr	r5, [pc, #148]	; (80115c0 <GUI_TOUCH_Calibrate+0xa0>)
 801152a:	d00c      	beq.n	8011546 <GUI_TOUCH_Calibrate+0x26>
 801152c:	4e25      	ldr	r6, [pc, #148]	; (80115c4 <GUI_TOUCH_Calibrate+0xa4>)
 801152e:	e886 0006 	stmia.w	r6, {r1, r2}
 8011532:	6829      	ldr	r1, [r5, #0]
 8011534:	f001 0206 	and.w	r2, r1, #6
 8011538:	2a06      	cmp	r2, #6
 801153a:	4a23      	ldr	r2, [pc, #140]	; (80115c8 <GUI_TOUCH_Calibrate+0xa8>)
 801153c:	d010      	beq.n	8011560 <GUI_TOUCH_Calibrate+0x40>
 801153e:	f001 0105 	and.w	r1, r1, #5
 8011542:	2901      	cmp	r1, #1
 8011544:	e00b      	b.n	801155e <GUI_TOUCH_Calibrate+0x3e>
 8011546:	4e21      	ldr	r6, [pc, #132]	; (80115cc <GUI_TOUCH_Calibrate+0xac>)
 8011548:	e886 0006 	stmia.w	r6, {r1, r2}
 801154c:	6829      	ldr	r1, [r5, #0]
 801154e:	f001 0205 	and.w	r2, r1, #5
 8011552:	2a05      	cmp	r2, #5
 8011554:	4a1e      	ldr	r2, [pc, #120]	; (80115d0 <GUI_TOUCH_Calibrate+0xb0>)
 8011556:	d003      	beq.n	8011560 <GUI_TOUCH_Calibrate+0x40>
 8011558:	f001 0106 	and.w	r1, r1, #6
 801155c:	2902      	cmp	r1, #2
 801155e:	d102      	bne.n	8011566 <GUI_TOUCH_Calibrate+0x46>
 8011560:	6014      	str	r4, [r2, #0]
 8011562:	6053      	str	r3, [r2, #4]
 8011564:	e001      	b.n	801156a <GUI_TOUCH_Calibrate+0x4a>
 8011566:	e882 0018 	stmia.w	r2, {r3, r4}
 801156a:	4b1a      	ldr	r3, [pc, #104]	; (80115d4 <GUI_TOUCH_Calibrate+0xb4>)
 801156c:	781a      	ldrb	r2, [r3, #0]
 801156e:	4102      	asrs	r2, r0
 8011570:	07d2      	lsls	r2, r2, #31
 8011572:	bf44      	itt	mi
 8011574:	2200      	movmi	r2, #0
 8011576:	701a      	strbmi	r2, [r3, #0]
 8011578:	2201      	movs	r2, #1
 801157a:	fa02 f000 	lsl.w	r0, r2, r0
 801157e:	781a      	ldrb	r2, [r3, #0]
 8011580:	4310      	orrs	r0, r2
 8011582:	b2c0      	uxtb	r0, r0
 8011584:	2803      	cmp	r0, #3
 8011586:	7018      	strb	r0, [r3, #0]
 8011588:	d116      	bne.n	80115b8 <GUI_TOUCH_Calibrate+0x98>
 801158a:	4c13      	ldr	r4, [pc, #76]	; (80115d8 <GUI_TOUCH_Calibrate+0xb8>)
 801158c:	6823      	ldr	r3, [r4, #0]
 801158e:	7c58      	ldrb	r0, [r3, #17]
 8011590:	f7fe fd98 	bl	80100c4 <LCD_GetXSizeEx>
 8011594:	6823      	ldr	r3, [r4, #0]
 8011596:	4605      	mov	r5, r0
 8011598:	7c58      	ldrb	r0, [r3, #17]
 801159a:	f7fe fd96 	bl	80100ca <LCD_GetYSizeEx>
 801159e:	4b0c      	ldr	r3, [pc, #48]	; (80115d0 <GUI_TOUCH_Calibrate+0xb0>)
 80115a0:	9002      	str	r0, [sp, #8]
 80115a2:	e88d 0028 	stmia.w	sp, {r3, r5}
 80115a6:	4907      	ldr	r1, [pc, #28]	; (80115c4 <GUI_TOUCH_Calibrate+0xa4>)
 80115a8:	4a08      	ldr	r2, [pc, #32]	; (80115cc <GUI_TOUCH_Calibrate+0xac>)
 80115aa:	4b07      	ldr	r3, [pc, #28]	; (80115c8 <GUI_TOUCH_Calibrate+0xa8>)
 80115ac:	2002      	movs	r0, #2
 80115ae:	f000 f8ff 	bl	80117b0 <GUI_TOUCH_CalcCoefficients>
 80115b2:	e002      	b.n	80115ba <GUI_TOUCH_Calibrate+0x9a>
 80115b4:	2001      	movs	r0, #1
 80115b6:	e000      	b.n	80115ba <GUI_TOUCH_Calibrate+0x9a>
 80115b8:	2000      	movs	r0, #0
 80115ba:	b004      	add	sp, #16
 80115bc:	bd70      	pop	{r4, r5, r6, pc}
 80115be:	bf00      	nop
 80115c0:	200194d0 	.word	0x200194d0
 80115c4:	200194bc 	.word	0x200194bc
 80115c8:	200194d8 	.word	0x200194d8
 80115cc:	200194e4 	.word	0x200194e4
 80115d0:	200194c4 	.word	0x200194c4
 80115d4:	200194cc 	.word	0x200194cc
 80115d8:	2000016c 	.word	0x2000016c

080115dc <GUI_TOUCH_Exec>:
 80115dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80115de:	4c29      	ldr	r4, [pc, #164]	; (8011684 <GUI_TOUCH_Exec+0xa8>)
 80115e0:	4d29      	ldr	r5, [pc, #164]	; (8011688 <GUI_TOUCH_Exec+0xac>)
 80115e2:	7823      	ldrb	r3, [r4, #0]
 80115e4:	b087      	sub	sp, #28
 80115e6:	4626      	mov	r6, r4
 80115e8:	b943      	cbnz	r3, 80115fc <GUI_TOUCH_Exec+0x20>
 80115ea:	f7f7 f92b 	bl	8008844 <GUI_TOUCH_X_MeasureY>
 80115ee:	6028      	str	r0, [r5, #0]
 80115f0:	f7f7 f922 	bl	8008838 <GUI_TOUCH_X_ActivateY>
 80115f4:	7823      	ldrb	r3, [r4, #0]
 80115f6:	3301      	adds	r3, #1
 80115f8:	7023      	strb	r3, [r4, #0]
 80115fa:	e040      	b.n	801167e <GUI_TOUCH_Exec+0xa2>
 80115fc:	f7f7 f91e 	bl	800883c <GUI_TOUCH_X_MeasureX>
 8011600:	4c22      	ldr	r4, [pc, #136]	; (801168c <GUI_TOUCH_Exec+0xb0>)
 8011602:	6020      	str	r0, [r4, #0]
 8011604:	f7f7 f916 	bl	8008834 <GUI_TOUCH_X_ActivateX>
 8011608:	6823      	ldr	r3, [r4, #0]
 801160a:	9301      	str	r3, [sp, #4]
 801160c:	682b      	ldr	r3, [r5, #0]
 801160e:	9302      	str	r3, [sp, #8]
 8011610:	f007 f9f4 	bl	80189fc <GUI_TOUCH_GetLayer>
 8011614:	a902      	add	r1, sp, #8
 8011616:	f88d 0015 	strb.w	r0, [sp, #21]
 801161a:	a801      	add	r0, sp, #4
 801161c:	f000 f88a 	bl	8011734 <GUI_TOUCH_CalibratePoint>
 8011620:	4c1b      	ldr	r4, [pc, #108]	; (8011690 <GUI_TOUCH_Exec+0xb4>)
 8011622:	b148      	cbz	r0, 8011638 <GUI_TOUCH_Exec+0x5c>
 8011624:	7823      	ldrb	r3, [r4, #0]
 8011626:	b343      	cbz	r3, 801167a <GUI_TOUCH_Exec+0x9e>
 8011628:	4b1a      	ldr	r3, [pc, #104]	; (8011694 <GUI_TOUCH_Exec+0xb8>)
 801162a:	681b      	ldr	r3, [r3, #0]
 801162c:	9303      	str	r3, [sp, #12]
 801162e:	4b1a      	ldr	r3, [pc, #104]	; (8011698 <GUI_TOUCH_Exec+0xbc>)
 8011630:	681b      	ldr	r3, [r3, #0]
 8011632:	9304      	str	r3, [sp, #16]
 8011634:	2500      	movs	r5, #0
 8011636:	e01a      	b.n	801166e <GUI_TOUCH_Exec+0x92>
 8011638:	4816      	ldr	r0, [pc, #88]	; (8011694 <GUI_TOUCH_Exec+0xb8>)
 801163a:	4917      	ldr	r1, [pc, #92]	; (8011698 <GUI_TOUCH_Exec+0xbc>)
 801163c:	f894 c000 	ldrb.w	ip, [r4]
 8011640:	9a01      	ldr	r2, [sp, #4]
 8011642:	6807      	ldr	r7, [r0, #0]
 8011644:	9b02      	ldr	r3, [sp, #8]
 8011646:	680d      	ldr	r5, [r1, #0]
 8011648:	f1bc 0f00 	cmp.w	ip, #0
 801164c:	d00a      	beq.n	8011664 <GUI_TOUCH_Exec+0x88>
 801164e:	1bd7      	subs	r7, r2, r7
 8011650:	1b5d      	subs	r5, r3, r5
 8011652:	2f00      	cmp	r7, #0
 8011654:	bfb8      	it	lt
 8011656:	427f      	neglt	r7, r7
 8011658:	2d00      	cmp	r5, #0
 801165a:	bfb8      	it	lt
 801165c:	426d      	neglt	r5, r5
 801165e:	443d      	add	r5, r7
 8011660:	2d02      	cmp	r5, #2
 8011662:	dd0a      	ble.n	801167a <GUI_TOUCH_Exec+0x9e>
 8011664:	6002      	str	r2, [r0, #0]
 8011666:	9203      	str	r2, [sp, #12]
 8011668:	600b      	str	r3, [r1, #0]
 801166a:	9304      	str	r3, [sp, #16]
 801166c:	2501      	movs	r5, #1
 801166e:	a803      	add	r0, sp, #12
 8011670:	f88d 5014 	strb.w	r5, [sp, #20]
 8011674:	f000 fae8 	bl	8011c48 <GUI_TOUCH_StoreStateEx>
 8011678:	7025      	strb	r5, [r4, #0]
 801167a:	2300      	movs	r3, #0
 801167c:	7033      	strb	r3, [r6, #0]
 801167e:	b007      	add	sp, #28
 8011680:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011682:	bf00      	nop
 8011684:	200194d5 	.word	0x200194d5
 8011688:	200194ec 	.word	0x200194ec
 801168c:	200194e0 	.word	0x200194e0
 8011690:	200194d4 	.word	0x200194d4
 8011694:	20000158 	.word	0x20000158
 8011698:	20000154 	.word	0x20000154

0801169c <GUI_TOUCH_TransformPoint>:
 801169c:	b570      	push	{r4, r5, r6, lr}
 801169e:	4b22      	ldr	r3, [pc, #136]	; (8011728 <GUI_TOUCH_TransformPoint+0x8c>)
 80116a0:	681b      	ldr	r3, [r3, #0]
 80116a2:	ed2d 8b02 	vpush	{d8}
 80116a6:	4606      	mov	r6, r0
 80116a8:	460d      	mov	r5, r1
 80116aa:	b3c3      	cbz	r3, 801171e <GUI_TOUCH_TransformPoint+0x82>
 80116ac:	edd0 7a00 	vldr	s15, [r0]
 80116b0:	4c1e      	ldr	r4, [pc, #120]	; (801172c <GUI_TOUCH_TransformPoint+0x90>)
 80116b2:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80116b6:	edd1 7a00 	vldr	s15, [r1]
 80116ba:	ed94 7a01 	vldr	s14, [r4, #4]
 80116be:	eef8 8ae7 	vcvt.f32.s32	s17, s15
 80116c2:	edd4 7a00 	vldr	s15, [r4]
 80116c6:	ee28 7a87 	vmul.f32	s14, s17, s14
 80116ca:	eea7 7a88 	vfma.f32	s14, s15, s16
 80116ce:	edd4 7a02 	vldr	s15, [r4, #8]
 80116d2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80116d6:	ee17 0a90 	vmov	r0, s15
 80116da:	f7ee ff55 	bl	8000588 <__aeabi_f2d>
 80116de:	2200      	movs	r2, #0
 80116e0:	4b13      	ldr	r3, [pc, #76]	; (8011730 <GUI_TOUCH_TransformPoint+0x94>)
 80116e2:	f7ee fdf3 	bl	80002cc <__adddf3>
 80116e6:	f7ef f9b9 	bl	8000a5c <__aeabi_d2iz>
 80116ea:	edd4 7a04 	vldr	s15, [r4, #16]
 80116ee:	ed94 7a03 	vldr	s14, [r4, #12]
 80116f2:	6030      	str	r0, [r6, #0]
 80116f4:	ee68 7aa7 	vmul.f32	s15, s17, s15
 80116f8:	eee7 7a08 	vfma.f32	s15, s14, s16
 80116fc:	ed94 7a05 	vldr	s14, [r4, #20]
 8011700:	ee37 7a87 	vadd.f32	s14, s15, s14
 8011704:	ee17 0a10 	vmov	r0, s14
 8011708:	f7ee ff3e 	bl	8000588 <__aeabi_f2d>
 801170c:	2200      	movs	r2, #0
 801170e:	4b08      	ldr	r3, [pc, #32]	; (8011730 <GUI_TOUCH_TransformPoint+0x94>)
 8011710:	f7ee fddc 	bl	80002cc <__adddf3>
 8011714:	f7ef f9a2 	bl	8000a5c <__aeabi_d2iz>
 8011718:	6028      	str	r0, [r5, #0]
 801171a:	2000      	movs	r0, #0
 801171c:	e000      	b.n	8011720 <GUI_TOUCH_TransformPoint+0x84>
 801171e:	2001      	movs	r0, #1
 8011720:	ecbd 8b02 	vpop	{d8}
 8011724:	bd70      	pop	{r4, r5, r6, pc}
 8011726:	bf00      	nop
 8011728:	20019500 	.word	0x20019500
 801172c:	20019504 	.word	0x20019504
 8011730:	3fe00000 	.word	0x3fe00000

08011734 <GUI_TOUCH_CalibratePoint>:
 8011734:	4b18      	ldr	r3, [pc, #96]	; (8011798 <GUI_TOUCH_CalibratePoint+0x64>)
 8011736:	6802      	ldr	r2, [r0, #0]
 8011738:	681b      	ldr	r3, [r3, #0]
 801173a:	429a      	cmp	r2, r3
 801173c:	b570      	push	{r4, r5, r6, lr}
 801173e:	4605      	mov	r5, r0
 8011740:	460c      	mov	r4, r1
 8011742:	db27      	blt.n	8011794 <GUI_TOUCH_CalibratePoint+0x60>
 8011744:	4e15      	ldr	r6, [pc, #84]	; (801179c <GUI_TOUCH_CalibratePoint+0x68>)
 8011746:	680b      	ldr	r3, [r1, #0]
 8011748:	6836      	ldr	r6, [r6, #0]
 801174a:	42b3      	cmp	r3, r6
 801174c:	db22      	blt.n	8011794 <GUI_TOUCH_CalibratePoint+0x60>
 801174e:	4e14      	ldr	r6, [pc, #80]	; (80117a0 <GUI_TOUCH_CalibratePoint+0x6c>)
 8011750:	6836      	ldr	r6, [r6, #0]
 8011752:	42b2      	cmp	r2, r6
 8011754:	dc1e      	bgt.n	8011794 <GUI_TOUCH_CalibratePoint+0x60>
 8011756:	4a13      	ldr	r2, [pc, #76]	; (80117a4 <GUI_TOUCH_CalibratePoint+0x70>)
 8011758:	6812      	ldr	r2, [r2, #0]
 801175a:	4293      	cmp	r3, r2
 801175c:	dc1a      	bgt.n	8011794 <GUI_TOUCH_CalibratePoint+0x60>
 801175e:	f7ff ff9d 	bl	801169c <GUI_TOUCH_TransformPoint>
 8011762:	b9c0      	cbnz	r0, 8011796 <GUI_TOUCH_CalibratePoint+0x62>
 8011764:	682a      	ldr	r2, [r5, #0]
 8011766:	2a00      	cmp	r2, #0
 8011768:	da01      	bge.n	801176e <GUI_TOUCH_CalibratePoint+0x3a>
 801176a:	6028      	str	r0, [r5, #0]
 801176c:	e006      	b.n	801177c <GUI_TOUCH_CalibratePoint+0x48>
 801176e:	4b0e      	ldr	r3, [pc, #56]	; (80117a8 <GUI_TOUCH_CalibratePoint+0x74>)
 8011770:	681b      	ldr	r3, [r3, #0]
 8011772:	429a      	cmp	r2, r3
 8011774:	bfa4      	itt	ge
 8011776:	f103 33ff 	addge.w	r3, r3, #4294967295
 801177a:	602b      	strge	r3, [r5, #0]
 801177c:	6822      	ldr	r2, [r4, #0]
 801177e:	2a00      	cmp	r2, #0
 8011780:	da01      	bge.n	8011786 <GUI_TOUCH_CalibratePoint+0x52>
 8011782:	2300      	movs	r3, #0
 8011784:	e004      	b.n	8011790 <GUI_TOUCH_CalibratePoint+0x5c>
 8011786:	4b09      	ldr	r3, [pc, #36]	; (80117ac <GUI_TOUCH_CalibratePoint+0x78>)
 8011788:	681b      	ldr	r3, [r3, #0]
 801178a:	429a      	cmp	r2, r3
 801178c:	db03      	blt.n	8011796 <GUI_TOUCH_CalibratePoint+0x62>
 801178e:	3b01      	subs	r3, #1
 8011790:	6023      	str	r3, [r4, #0]
 8011792:	bd70      	pop	{r4, r5, r6, pc}
 8011794:	2001      	movs	r0, #1
 8011796:	bd70      	pop	{r4, r5, r6, pc}
 8011798:	200194f0 	.word	0x200194f0
 801179c:	200194f4 	.word	0x200194f4
 80117a0:	20019520 	.word	0x20019520
 80117a4:	2001951c 	.word	0x2001951c
 80117a8:	200194f8 	.word	0x200194f8
 80117ac:	200194fc 	.word	0x200194fc

080117b0 <GUI_TOUCH_CalcCoefficients>:
 80117b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80117b4:	ed2d 8b02 	vpush	{d8}
 80117b8:	f8df c3bc 	ldr.w	ip, [pc, #956]	; 8011b78 <GUI_TOUCH_CalcCoefficients+0x3c8>
 80117bc:	b08c      	sub	sp, #48	; 0x30
 80117be:	2400      	movs	r4, #0
 80117c0:	2802      	cmp	r0, #2
 80117c2:	9f16      	ldr	r7, [sp, #88]	; 0x58
 80117c4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80117c6:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 80117ca:	f8cc 4000 	str.w	r4, [ip]
 80117ce:	d135      	bne.n	801183c <GUI_TOUCH_CalcCoefficients+0x8c>
 80117d0:	c912      	ldmia	r1, {r1, r4}
 80117d2:	6818      	ldr	r0, [r3, #0]
 80117d4:	685b      	ldr	r3, [r3, #4]
 80117d6:	1a61      	subs	r1, r4, r1
 80117d8:	1a1b      	subs	r3, r3, r0
 80117da:	ee00 1a10 	vmov	s0, r1
 80117de:	ee07 3a90 	vmov	s15, r3
 80117e2:	eeb8 7ac0 	vcvt.f32.s32	s14, s0
 80117e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80117ea:	ee05 0a10 	vmov	s10, r0
 80117ee:	eec7 7a27 	vdiv.f32	s15, s14, s15
 80117f2:	6850      	ldr	r0, [r2, #4]
 80117f4:	6812      	ldr	r2, [r2, #0]
 80117f6:	4bdb      	ldr	r3, [pc, #876]	; (8011b64 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 80117f8:	2100      	movs	r1, #0
 80117fa:	1a82      	subs	r2, r0, r2
 80117fc:	6059      	str	r1, [r3, #4]
 80117fe:	60d9      	str	r1, [r3, #12]
 8011800:	6839      	ldr	r1, [r7, #0]
 8011802:	eeb8 7ac5 	vcvt.f32.s32	s14, s10
 8011806:	ee06 2a10 	vmov	s12, r2
 801180a:	687a      	ldr	r2, [r7, #4]
 801180c:	edc3 7a00 	vstr	s15, [r3]
 8011810:	ee67 7a67 	vnmul.f32	s15, s14, s15
 8011814:	1a52      	subs	r2, r2, r1
 8011816:	edc3 7a02 	vstr	s15, [r3, #8]
 801181a:	ee07 2a90 	vmov	s15, r2
 801181e:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 8011822:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011826:	ee06 1a90 	vmov	s13, r1
 801182a:	eec7 7a27 	vdiv.f32	s15, s14, s15
 801182e:	eeb8 7ae6 	vcvt.f32.s32	s14, s13
 8011832:	edc3 7a04 	vstr	s15, [r3, #16]
 8011836:	ee67 7a67 	vnmul.f32	s15, s14, s15
 801183a:	e144      	b.n	8011ac6 <GUI_TOUCH_CalcCoefficients+0x316>
 801183c:	f340 8148 	ble.w	8011ad0 <GUI_TOUCH_CalcCoefficients+0x320>
 8011840:	2803      	cmp	r0, #3
 8011842:	d128      	bne.n	8011896 <GUI_TOUCH_CalcCoefficients+0xe6>
 8011844:	4620      	mov	r0, r4
 8011846:	581d      	ldr	r5, [r3, r0]
 8011848:	ee00 5a10 	vmov	s0, r5
 801184c:	583d      	ldr	r5, [r7, r0]
 801184e:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 8011852:	ac00      	add	r4, sp, #0
 8011854:	ee00 5a10 	vmov	s0, r5
 8011858:	580d      	ldr	r5, [r1, r0]
 801185a:	4404      	add	r4, r0
 801185c:	edc4 7a00 	vstr	s15, [r4]
 8011860:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 8011864:	ac03      	add	r4, sp, #12
 8011866:	ee00 5a10 	vmov	s0, r5
 801186a:	4404      	add	r4, r0
 801186c:	5815      	ldr	r5, [r2, r0]
 801186e:	edc4 7a00 	vstr	s15, [r4]
 8011872:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 8011876:	ac0c      	add	r4, sp, #48	; 0x30
 8011878:	4404      	add	r4, r0
 801187a:	ee00 5a10 	vmov	s0, r5
 801187e:	ed44 7a06 	vstr	s15, [r4, #-24]	; 0xffffffe8
 8011882:	ac0c      	add	r4, sp, #48	; 0x30
 8011884:	4404      	add	r4, r0
 8011886:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 801188a:	3004      	adds	r0, #4
 801188c:	280c      	cmp	r0, #12
 801188e:	ed44 7a03 	vstr	s15, [r4, #-12]
 8011892:	d1d8      	bne.n	8011846 <GUI_TOUCH_CalcCoefficients+0x96>
 8011894:	e09b      	b.n	80119ce <GUI_TOUCH_CalcCoefficients+0x21e>
 8011896:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 801189a:	44a1      	add	r9, r4
 801189c:	f04f 0800 	mov.w	r8, #0
 80118a0:	f849 8c0c 	str.w	r8, [r9, #-12]
 80118a4:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 80118a8:	44a1      	add	r9, r4
 80118aa:	f849 8c18 	str.w	r8, [r9, #-24]
 80118ae:	f10d 090c 	add.w	r9, sp, #12
 80118b2:	44a1      	add	r9, r4
 80118b4:	f8c9 8000 	str.w	r8, [r9]
 80118b8:	f10d 0900 	add.w	r9, sp, #0
 80118bc:	44a1      	add	r9, r4
 80118be:	3404      	adds	r4, #4
 80118c0:	2c0c      	cmp	r4, #12
 80118c2:	f8c9 8000 	str.w	r8, [r9]
 80118c6:	d1e6      	bne.n	8011896 <GUI_TOUCH_CalcCoefficients+0xe6>
 80118c8:	ed9d 7a02 	vldr	s14, [sp, #8]
 80118cc:	eddd 7a05 	vldr	s15, [sp, #20]
 80118d0:	eddd 3a08 	vldr	s7, [sp, #32]
 80118d4:	ed9d 4a0b 	vldr	s8, [sp, #44]	; 0x2c
 80118d8:	eddd 1a00 	vldr	s3, [sp]
 80118dc:	eddd 5a01 	vldr	s11, [sp, #4]
 80118e0:	ed9d 2a04 	vldr	s4, [sp, #16]
 80118e4:	eddd 2a06 	vldr	s5, [sp, #24]
 80118e8:	ed9d 3a07 	vldr	s6, [sp, #28]
 80118ec:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80118f0:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80118f4:	ea4f 0880 	mov.w	r8, r0, lsl #2
 80118f8:	2400      	movs	r4, #0
 80118fa:	591d      	ldr	r5, [r3, r4]
 80118fc:	ee00 5a10 	vmov	s0, r5
 8011900:	593d      	ldr	r5, [r7, r4]
 8011902:	eeb8 6ac0 	vcvt.f32.s32	s12, s0
 8011906:	ee00 5a10 	vmov	s0, r5
 801190a:	590d      	ldr	r5, [r1, r4]
 801190c:	eef8 6ac0 	vcvt.f32.s32	s13, s0
 8011910:	ee00 5a10 	vmov	s0, r5
 8011914:	5915      	ldr	r5, [r2, r4]
 8011916:	eef8 4ac0 	vcvt.f32.s32	s9, s0
 801191a:	ee00 5a10 	vmov	s0, r5
 801191e:	eeb8 5ac0 	vcvt.f32.s32	s10, s0
 8011922:	eee6 2a24 	vfma.f32	s5, s12, s9
 8011926:	3404      	adds	r4, #4
 8011928:	4544      	cmp	r4, r8
 801192a:	ee73 3aa4 	vadd.f32	s7, s7, s9
 801192e:	eea6 3aa4 	vfma.f32	s6, s13, s9
 8011932:	eef0 4a60 	vmov.f32	s9, s1
 8011936:	ee37 7a06 	vadd.f32	s14, s14, s12
 801193a:	eee6 1a06 	vfma.f32	s3, s12, s12
 801193e:	eee6 5a26 	vfma.f32	s11, s12, s13
 8011942:	eee6 4a05 	vfma.f32	s9, s12, s10
 8011946:	eeb0 6a41 	vmov.f32	s12, s2
 801194a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801194e:	ee34 4a05 	vadd.f32	s8, s8, s10
 8011952:	eea6 2aa6 	vfma.f32	s4, s13, s13
 8011956:	eea6 6a85 	vfma.f32	s12, s13, s10
 801195a:	d004      	beq.n	8011966 <GUI_TOUCH_CalcCoefficients+0x1b6>
 801195c:	eef0 0a64 	vmov.f32	s1, s9
 8011960:	eeb0 1a46 	vmov.f32	s2, s12
 8011964:	e7c9      	b.n	80118fa <GUI_TOUCH_CalcCoefficients+0x14a>
 8011966:	eec5 6aa7 	vdiv.f32	s13, s11, s15
 801196a:	ee05 0a10 	vmov	s10, r0
 801196e:	edcd 6a01 	vstr	s13, [sp, #4]
 8011972:	eef8 6ac5 	vcvt.f32.s32	s13, s10
 8011976:	eec1 1a87 	vdiv.f32	s3, s3, s14
 801197a:	eec5 5a87 	vdiv.f32	s11, s11, s14
 801197e:	ee82 2a27 	vdiv.f32	s4, s4, s15
 8011982:	eec2 2a87 	vdiv.f32	s5, s5, s14
 8011986:	ee83 3a27 	vdiv.f32	s6, s6, s15
 801198a:	eec4 4a87 	vdiv.f32	s9, s9, s14
 801198e:	ee86 6a27 	vdiv.f32	s12, s12, s15
 8011992:	ee87 7a26 	vdiv.f32	s14, s14, s13
 8011996:	eec7 7aa6 	vdiv.f32	s15, s15, s13
 801199a:	eec3 3aa6 	vdiv.f32	s7, s7, s13
 801199e:	eec4 6a26 	vdiv.f32	s13, s8, s13
 80119a2:	edcd 1a00 	vstr	s3, [sp]
 80119a6:	edcd 5a03 	vstr	s11, [sp, #12]
 80119aa:	ed8d 2a04 	vstr	s4, [sp, #16]
 80119ae:	edcd 2a06 	vstr	s5, [sp, #24]
 80119b2:	ed8d 3a07 	vstr	s6, [sp, #28]
 80119b6:	edcd 4a09 	vstr	s9, [sp, #36]	; 0x24
 80119ba:	ed8d 6a0a 	vstr	s12, [sp, #40]	; 0x28
 80119be:	ed8d 7a02 	vstr	s14, [sp, #8]
 80119c2:	edcd 7a05 	vstr	s15, [sp, #20]
 80119c6:	edcd 3a08 	vstr	s7, [sp, #32]
 80119ca:	edcd 6a0b 	vstr	s13, [sp, #44]	; 0x2c
 80119ce:	ed9d 7a02 	vldr	s14, [sp, #8]
 80119d2:	eddd 4a05 	vldr	s9, [sp, #20]
 80119d6:	ed9d 6a01 	vldr	s12, [sp, #4]
 80119da:	ed9d 3a03 	vldr	s6, [sp, #12]
 80119de:	eddd 5a00 	vldr	s11, [sp]
 80119e2:	eddd 2a04 	vldr	s5, [sp, #16]
 80119e6:	ee76 6a47 	vsub.f32	s13, s12, s14
 80119ea:	ee73 1a64 	vsub.f32	s3, s6, s9
 80119ee:	ee35 2ac7 	vsub.f32	s4, s11, s14
 80119f2:	ee32 1ae4 	vsub.f32	s2, s5, s9
 80119f6:	ee61 7ae6 	vnmul.f32	s15, s3, s13
 80119fa:	eee2 7a01 	vfma.f32	s15, s4, s2
 80119fe:	eef5 7a40 	vcmp.f32	s15, #0.0
 8011a02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011a06:	d063      	beq.n	8011ad0 <GUI_TOUCH_CalcCoefficients+0x320>
 8011a08:	ed9d 4a08 	vldr	s8, [sp, #32]
 8011a0c:	eddd 0a07 	vldr	s1, [sp, #28]
 8011a10:	eddd 3a06 	vldr	s7, [sp, #24]
 8011a14:	4b53      	ldr	r3, [pc, #332]	; (8011b64 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 8011a16:	ee30 8ac4 	vsub.f32	s16, s1, s8
 8011a1a:	ee33 5ac4 	vsub.f32	s10, s7, s8
 8011a1e:	ee21 0ac8 	vnmul.f32	s0, s3, s16
 8011a22:	eea5 0a01 	vfma.f32	s0, s10, s2
 8011a26:	ee26 5ac5 	vnmul.f32	s10, s13, s10
 8011a2a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8011a2e:	eea8 5a02 	vfma.f32	s10, s16, s4
 8011a32:	ed83 0a00 	vstr	s0, [r3]
 8011a36:	ee85 5a27 	vdiv.f32	s10, s10, s15
 8011a3a:	ed83 5a01 	vstr	s10, [r3, #4]
 8011a3e:	ee23 5ac7 	vnmul.f32	s10, s7, s14
 8011a42:	eea5 5a84 	vfma.f32	s10, s11, s8
 8011a46:	ee24 4a46 	vnmul.f32	s8, s8, s12
 8011a4a:	ee22 5a85 	vmul.f32	s10, s5, s10
 8011a4e:	eea7 4a20 	vfma.f32	s8, s14, s1
 8011a52:	eea3 5a04 	vfma.f32	s10, s6, s8
 8011a56:	ee20 4ae5 	vnmul.f32	s8, s1, s11
 8011a5a:	eea6 4a23 	vfma.f32	s8, s12, s7
 8011a5e:	eddd 3a0a 	vldr	s7, [sp, #40]	; 0x28
 8011a62:	eea4 5a84 	vfma.f32	s10, s9, s8
 8011a66:	ed9d 4a09 	vldr	s8, [sp, #36]	; 0x24
 8011a6a:	ee85 5a27 	vdiv.f32	s10, s10, s15
 8011a6e:	ed83 5a02 	vstr	s10, [r3, #8]
 8011a72:	ed9d 5a0b 	vldr	s10, [sp, #44]	; 0x2c
 8011a76:	ee34 0a45 	vsub.f32	s0, s8, s10
 8011a7a:	ee73 0ac5 	vsub.f32	s1, s7, s10
 8011a7e:	ee66 6ac0 	vnmul.f32	s13, s13, s0
 8011a82:	ee61 1ae0 	vnmul.f32	s3, s3, s1
 8011a86:	eee0 6a82 	vfma.f32	s13, s1, s4
 8011a8a:	eee0 1a01 	vfma.f32	s3, s0, s2
 8011a8e:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 8011a92:	eec1 1aa7 	vdiv.f32	s3, s3, s15
 8011a96:	edc3 6a04 	vstr	s13, [r3, #16]
 8011a9a:	ee64 6a47 	vnmul.f32	s13, s8, s14
 8011a9e:	edc3 1a03 	vstr	s3, [r3, #12]
 8011aa2:	eee5 6a85 	vfma.f32	s13, s11, s10
 8011aa6:	ee25 5a46 	vnmul.f32	s10, s10, s12
 8011aaa:	ee62 6aa6 	vmul.f32	s13, s5, s13
 8011aae:	eea7 5a23 	vfma.f32	s10, s14, s7
 8011ab2:	ee63 5ae5 	vnmul.f32	s11, s7, s11
 8011ab6:	eee3 6a05 	vfma.f32	s13, s6, s10
 8011aba:	eee6 5a04 	vfma.f32	s11, s12, s8
 8011abe:	eee4 6aa5 	vfma.f32	s13, s9, s11
 8011ac2:	eec6 7aa7 	vdiv.f32	s15, s13, s15
 8011ac6:	edc3 7a05 	vstr	s15, [r3, #20]
 8011aca:	2301      	movs	r3, #1
 8011acc:	f8cc 3000 	str.w	r3, [ip]
 8011ad0:	f8dc 0000 	ldr.w	r0, [ip]
 8011ad4:	2800      	cmp	r0, #0
 8011ad6:	f000 80a7 	beq.w	8011c28 <GUI_TOUCH_CalcCoefficients+0x478>
 8011ada:	4b23      	ldr	r3, [pc, #140]	; (8011b68 <GUI_TOUCH_CalcCoefficients+0x3b8>)
 8011adc:	eddf 7a23 	vldr	s15, [pc, #140]	; 8011b6c <GUI_TOUCH_CalcCoefficients+0x3bc>
 8011ae0:	601e      	str	r6, [r3, #0]
 8011ae2:	4b23      	ldr	r3, [pc, #140]	; (8011b70 <GUI_TOUCH_CalcCoefficients+0x3c0>)
 8011ae4:	f8c3 a000 	str.w	sl, [r3]
 8011ae8:	4b1e      	ldr	r3, [pc, #120]	; (8011b64 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 8011aea:	ed93 7a00 	vldr	s14, [r3]
 8011aee:	eeb4 7a67 	vcmp.f32	s14, s15
 8011af2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011af6:	d012      	beq.n	8011b1e <GUI_TOUCH_CalcCoefficients+0x36e>
 8011af8:	edd3 6a01 	vldr	s13, [r3, #4]
 8011afc:	eee6 7ae7 	vfms.f32	s15, s13, s15
 8011b00:	edd3 6a02 	vldr	s13, [r3, #8]
 8011b04:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011b08:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8011b0c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011b10:	eec7 7a87 	vdiv.f32	s15, s15, s14
 8011b14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011b18:	ee17 1a90 	vmov	r1, s15
 8011b1c:	e001      	b.n	8011b22 <GUI_TOUCH_CalcCoefficients+0x372>
 8011b1e:	f04f 31ff 	mov.w	r1, #4294967295
 8011b22:	edd3 7a04 	vldr	s15, [r3, #16]
 8011b26:	eddf 6a11 	vldr	s13, [pc, #68]	; 8011b6c <GUI_TOUCH_CalcCoefficients+0x3bc>
 8011b2a:	4c12      	ldr	r4, [pc, #72]	; (8011b74 <GUI_TOUCH_CalcCoefficients+0x3c4>)
 8011b2c:	4a0d      	ldr	r2, [pc, #52]	; (8011b64 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 8011b2e:	6021      	str	r1, [r4, #0]
 8011b30:	eef4 7a66 	vcmp.f32	s15, s13
 8011b34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b38:	4627      	mov	r7, r4
 8011b3a:	d01f      	beq.n	8011b7c <GUI_TOUCH_CalcCoefficients+0x3cc>
 8011b3c:	ed92 6a03 	vldr	s12, [r2, #12]
 8011b40:	eee6 6a66 	vfms.f32	s13, s12, s13
 8011b44:	ed92 6a05 	vldr	s12, [r2, #20]
 8011b48:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8011b4c:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8011b50:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8011b54:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 8011b58:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 8011b5c:	ee16 2a90 	vmov	r2, s13
 8011b60:	e00e      	b.n	8011b80 <GUI_TOUCH_CalcCoefficients+0x3d0>
 8011b62:	bf00      	nop
 8011b64:	20019504 	.word	0x20019504
 8011b68:	200194f8 	.word	0x200194f8
 8011b6c:	00000000 	.word	0x00000000
 8011b70:	200194fc 	.word	0x200194fc
 8011b74:	200194f0 	.word	0x200194f0
 8011b78:	20019500 	.word	0x20019500
 8011b7c:	f04f 32ff 	mov.w	r2, #4294967295
 8011b80:	4c2e      	ldr	r4, [pc, #184]	; (8011c3c <GUI_TOUCH_CalcCoefficients+0x48c>)
 8011b82:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8011b86:	3e01      	subs	r6, #1
 8011b88:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011b8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b90:	ee05 6a90 	vmov	s11, r6
 8011b94:	6022      	str	r2, [r4, #0]
 8011b96:	ee06 aa10 	vmov	s12, sl
 8011b9a:	4626      	mov	r6, r4
 8011b9c:	d016      	beq.n	8011bcc <GUI_TOUCH_CalcCoefficients+0x41c>
 8011b9e:	ed93 5a01 	vldr	s10, [r3, #4]
 8011ba2:	eef8 4ac6 	vcvt.f32.s32	s9, s12
 8011ba6:	eef8 6ae5 	vcvt.f32.s32	s13, s11
 8011baa:	eee4 6ac5 	vfms.f32	s13, s9, s10
 8011bae:	ed93 5a02 	vldr	s10, [r3, #8]
 8011bb2:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8011bb6:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 8011bba:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8011bbe:	ee86 7a87 	vdiv.f32	s14, s13, s14
 8011bc2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8011bc6:	ee17 4a10 	vmov	r4, s14
 8011bca:	e001      	b.n	8011bd0 <GUI_TOUCH_CalcCoefficients+0x420>
 8011bcc:	f04f 34ff 	mov.w	r4, #4294967295
 8011bd0:	4d1b      	ldr	r5, [pc, #108]	; (8011c40 <GUI_TOUCH_CalcCoefficients+0x490>)
 8011bd2:	eef5 7a40 	vcmp.f32	s15, #0.0
 8011bd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011bda:	602c      	str	r4, [r5, #0]
 8011bdc:	46ac      	mov	ip, r5
 8011bde:	d016      	beq.n	8011c0e <GUI_TOUCH_CalcCoefficients+0x45e>
 8011be0:	edd3 6a03 	vldr	s13, [r3, #12]
 8011be4:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8011be8:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 8011bec:	eea5 7ae6 	vfms.f32	s14, s11, s13
 8011bf0:	edd3 6a05 	vldr	s13, [r3, #20]
 8011bf4:	ee37 7a66 	vsub.f32	s14, s14, s13
 8011bf8:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8011bfc:	ee37 7a66 	vsub.f32	s14, s14, s13
 8011c00:	eec7 7a27 	vdiv.f32	s15, s14, s15
 8011c04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011c08:	ee17 3a90 	vmov	r3, s15
 8011c0c:	e001      	b.n	8011c12 <GUI_TOUCH_CalcCoefficients+0x462>
 8011c0e:	f04f 33ff 	mov.w	r3, #4294967295
 8011c12:	42a1      	cmp	r1, r4
 8011c14:	4d0b      	ldr	r5, [pc, #44]	; (8011c44 <GUI_TOUCH_CalcCoefficients+0x494>)
 8011c16:	bfc4      	itt	gt
 8011c18:	603c      	strgt	r4, [r7, #0]
 8011c1a:	f8cc 1000 	strgt.w	r1, [ip]
 8011c1e:	429a      	cmp	r2, r3
 8011c20:	602b      	str	r3, [r5, #0]
 8011c22:	bfc4      	itt	gt
 8011c24:	6033      	strgt	r3, [r6, #0]
 8011c26:	602a      	strgt	r2, [r5, #0]
 8011c28:	f1d0 0001 	rsbs	r0, r0, #1
 8011c2c:	bf38      	it	cc
 8011c2e:	2000      	movcc	r0, #0
 8011c30:	b00c      	add	sp, #48	; 0x30
 8011c32:	ecbd 8b02 	vpop	{d8}
 8011c36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011c3a:	bf00      	nop
 8011c3c:	200194f4 	.word	0x200194f4
 8011c40:	20019520 	.word	0x20019520
 8011c44:	2001951c 	.word	0x2001951c

08011c48 <GUI_TOUCH_StoreStateEx>:
 8011c48:	b530      	push	{r4, r5, lr}
 8011c4a:	4d0f      	ldr	r5, [pc, #60]	; (8011c88 <GUI_TOUCH_StoreStateEx+0x40>)
 8011c4c:	b085      	sub	sp, #20
 8011c4e:	4629      	mov	r1, r5
 8011c50:	220c      	movs	r2, #12
 8011c52:	4604      	mov	r4, r0
 8011c54:	f008 feee 	bl	801aa34 <memcmp>
 8011c58:	b1a0      	cbz	r0, 8011c84 <GUI_TOUCH_StoreStateEx+0x3c>
 8011c5a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8011c5e:	4b0b      	ldr	r3, [pc, #44]	; (8011c8c <GUI_TOUCH_StoreStateEx+0x44>)
 8011c60:	681b      	ldr	r3, [r3, #0]
 8011c62:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8011c66:	b153      	cbz	r3, 8011c7e <GUI_TOUCH_StoreStateEx+0x36>
 8011c68:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8011c6c:	ad01      	add	r5, sp, #4
 8011c6e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8011c72:	4628      	mov	r0, r5
 8011c74:	a902      	add	r1, sp, #8
 8011c76:	4798      	blx	r3
 8011c78:	b920      	cbnz	r0, 8011c84 <GUI_TOUCH_StoreStateEx+0x3c>
 8011c7a:	4628      	mov	r0, r5
 8011c7c:	e000      	b.n	8011c80 <GUI_TOUCH_StoreStateEx+0x38>
 8011c7e:	4620      	mov	r0, r4
 8011c80:	f000 f916 	bl	8011eb0 <GUI_PID_StoreState>
 8011c84:	b005      	add	sp, #20
 8011c86:	bd30      	pop	{r4, r5, pc}
 8011c88:	20019524 	.word	0x20019524
 8011c8c:	20019530 	.word	0x20019530

08011c90 <GUI_SetTextMode>:
 8011c90:	4b03      	ldr	r3, [pc, #12]	; (8011ca0 <GUI_SetTextMode+0x10>)
 8011c92:	681b      	ldr	r3, [r3, #0]
 8011c94:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 8011c98:	8558      	strh	r0, [r3, #42]	; 0x2a
 8011c9a:	4610      	mov	r0, r2
 8011c9c:	4770      	bx	lr
 8011c9e:	bf00      	nop
 8011ca0:	2000016c 	.word	0x2000016c

08011ca4 <GUI_SetFont>:
 8011ca4:	4b03      	ldr	r3, [pc, #12]	; (8011cb4 <GUI_SetFont+0x10>)
 8011ca6:	681b      	ldr	r3, [r3, #0]
 8011ca8:	69d9      	ldr	r1, [r3, #28]
 8011caa:	b100      	cbz	r0, 8011cae <GUI_SetFont+0xa>
 8011cac:	61d8      	str	r0, [r3, #28]
 8011cae:	4608      	mov	r0, r1
 8011cb0:	4770      	bx	lr
 8011cb2:	bf00      	nop
 8011cb4:	2000016c 	.word	0x2000016c

08011cb8 <GUI_SetDrawMode>:
 8011cb8:	f7fe bae6 	b.w	8010288 <LCD_SetDrawMode>

08011cbc <GL_SetDefault>:
 8011cbc:	b508      	push	{r3, lr}
 8011cbe:	2000      	movs	r0, #0
 8011cc0:	f000 f81c 	bl	8011cfc <GUI_SetBkColor>
 8011cc4:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8011cc8:	f000 f81a 	bl	8011d00 <GUI_SetColor>
 8011ccc:	2001      	movs	r0, #1
 8011cce:	f000 f8bd 	bl	8011e4c <GUI_SetPenSize>
 8011cd2:	2000      	movs	r0, #0
 8011cd4:	f006 fe98 	bl	8018a08 <GUI_SetTextAlign>
 8011cd8:	2000      	movs	r0, #0
 8011cda:	f7ff ffd9 	bl	8011c90 <GUI_SetTextMode>
 8011cde:	2000      	movs	r0, #0
 8011ce0:	f7ff ffea 	bl	8011cb8 <GUI_SetDrawMode>
 8011ce4:	4b04      	ldr	r3, [pc, #16]	; (8011cf8 <GL_SetDefault+0x3c>)
 8011ce6:	6818      	ldr	r0, [r3, #0]
 8011ce8:	f7ff ffdc 	bl	8011ca4 <GUI_SetFont>
 8011cec:	2000      	movs	r0, #0
 8011cee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011cf2:	f006 bead 	b.w	8018a50 <GUI_SetLineStyle>
 8011cf6:	bf00      	nop
 8011cf8:	20000170 	.word	0x20000170

08011cfc <GUI_SetBkColor>:
 8011cfc:	f7fe be0c 	b.w	8010918 <LCD_SetBkColor>

08011d00 <GUI_SetColor>:
 8011d00:	f7fe be12 	b.w	8010928 <LCD_SetColor>

08011d04 <GUI__AlphaPreserveTrans>:
 8011d04:	b510      	push	{r4, lr}
 8011d06:	4b07      	ldr	r3, [pc, #28]	; (8011d24 <GUI__AlphaPreserveTrans+0x20>)
 8011d08:	781c      	ldrb	r4, [r3, #0]
 8011d0a:	b120      	cbz	r0, 8011d16 <GUI__AlphaPreserveTrans+0x12>
 8011d0c:	2201      	movs	r2, #1
 8011d0e:	701a      	strb	r2, [r3, #0]
 8011d10:	f04f 30ff 	mov.w	r0, #4294967295
 8011d14:	e002      	b.n	8011d1c <GUI__AlphaPreserveTrans+0x18>
 8011d16:	7018      	strb	r0, [r3, #0]
 8011d18:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8011d1c:	f005 feca 	bl	8017ab4 <LCD_AA_SetAndMask>
 8011d20:	4620      	mov	r0, r4
 8011d22:	bd10      	pop	{r4, pc}
 8011d24:	20019c91 	.word	0x20019c91

08011d28 <GUI_GetCursorLayer>:
 8011d28:	2801      	cmp	r0, #1
 8011d2a:	bf9a      	itte	ls
 8011d2c:	4b02      	ldrls	r3, [pc, #8]	; (8011d38 <GUI_GetCursorLayer+0x10>)
 8011d2e:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 8011d32:	2000      	movhi	r0, #0
 8011d34:	4770      	bx	lr
 8011d36:	bf00      	nop
 8011d38:	20019534 	.word	0x20019534

08011d3c <GUI_GetLayerPosEx>:
 8011d3c:	b538      	push	{r3, r4, r5, lr}
 8011d3e:	460d      	mov	r5, r1
 8011d40:	4614      	mov	r4, r2
 8011d42:	f7fe f987 	bl	8010054 <LCD_GetPosEx>
 8011d46:	b110      	cbz	r0, 8011d4e <GUI_GetLayerPosEx+0x12>
 8011d48:	2300      	movs	r3, #0
 8011d4a:	602b      	str	r3, [r5, #0]
 8011d4c:	6023      	str	r3, [r4, #0]
 8011d4e:	bd38      	pop	{r3, r4, r5, pc}

08011d50 <GUI_SelectLayer>:
 8011d50:	b570      	push	{r4, r5, r6, lr}
 8011d52:	4d08      	ldr	r5, [pc, #32]	; (8011d74 <GUI_SelectLayer+0x24>)
 8011d54:	682b      	ldr	r3, [r5, #0]
 8011d56:	2801      	cmp	r0, #1
 8011d58:	4604      	mov	r4, r0
 8011d5a:	7c5e      	ldrb	r6, [r3, #17]
 8011d5c:	d808      	bhi.n	8011d70 <GUI_SelectLayer+0x20>
 8011d5e:	f000 fc65 	bl	801262c <GUI_DEVICE__GetpDriver>
 8011d62:	b128      	cbz	r0, 8011d70 <GUI_SelectLayer+0x20>
 8011d64:	682b      	ldr	r3, [r5, #0]
 8011d66:	745c      	strb	r4, [r3, #17]
 8011d68:	f000 f80a 	bl	8011d80 <GUI_SelectLCD>
 8011d6c:	4b02      	ldr	r3, [pc, #8]	; (8011d78 <GUI_SelectLayer+0x28>)
 8011d6e:	601c      	str	r4, [r3, #0]
 8011d70:	4630      	mov	r0, r6
 8011d72:	bd70      	pop	{r4, r5, r6, pc}
 8011d74:	2000016c 	.word	0x2000016c
 8011d78:	20019c28 	.word	0x20019c28

08011d7c <GUI_SetLayerPosEx>:
 8011d7c:	f7fe b93a 	b.w	800fff4 <LCD_SetPosEx>

08011d80 <GUI_SelectLCD>:
 8011d80:	b508      	push	{r3, lr}
 8011d82:	f005 fa75 	bl	8017270 <LCD_SelectLCD>
 8011d86:	f7fe f8db 	bl	800ff40 <LCD_UpdateColorIndices>
 8011d8a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011d8e:	f7fb bf05 	b.w	800db9c <WM_Activate>
	...

08011d94 <GUI_SaveContext_W>:
 8011d94:	b508      	push	{r3, lr}
 8011d96:	4b03      	ldr	r3, [pc, #12]	; (8011da4 <GUI_SaveContext_W+0x10>)
 8011d98:	2270      	movs	r2, #112	; 0x70
 8011d9a:	6819      	ldr	r1, [r3, #0]
 8011d9c:	f008 fe59 	bl	801aa52 <memcpy>
 8011da0:	bd08      	pop	{r3, pc}
 8011da2:	bf00      	nop
 8011da4:	2000016c 	.word	0x2000016c

08011da8 <GUI_RestoreContext>:
 8011da8:	b508      	push	{r3, lr}
 8011daa:	4b03      	ldr	r3, [pc, #12]	; (8011db8 <GUI_RestoreContext+0x10>)
 8011dac:	4601      	mov	r1, r0
 8011dae:	2270      	movs	r2, #112	; 0x70
 8011db0:	6818      	ldr	r0, [r3, #0]
 8011db2:	f008 fe4e 	bl	801aa52 <memcpy>
 8011db6:	bd08      	pop	{r3, pc}
 8011db8:	2000016c 	.word	0x2000016c

08011dbc <GUI_RectsIntersect>:
 8011dbc:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011dc0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011dc4:	429a      	cmp	r2, r3
 8011dc6:	dc14      	bgt.n	8011df2 <GUI_RectsIntersect+0x36>
 8011dc8:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 8011dcc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011dd0:	429a      	cmp	r2, r3
 8011dd2:	dc0e      	bgt.n	8011df2 <GUI_RectsIntersect+0x36>
 8011dd4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011dd8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011ddc:	429a      	cmp	r2, r3
 8011dde:	dc08      	bgt.n	8011df2 <GUI_RectsIntersect+0x36>
 8011de0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011de4:	f9b1 2000 	ldrsh.w	r2, [r1]
 8011de8:	429a      	cmp	r2, r3
 8011dea:	bfcc      	ite	gt
 8011dec:	2000      	movgt	r0, #0
 8011dee:	2001      	movle	r0, #1
 8011df0:	4770      	bx	lr
 8011df2:	2000      	movs	r0, #0
 8011df4:	4770      	bx	lr

08011df6 <GUI_ALLOC_Realloc>:
 8011df6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011df8:	4604      	mov	r4, r0
 8011dfa:	4608      	mov	r0, r1
 8011dfc:	460e      	mov	r6, r1
 8011dfe:	f001 fbc3 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 8011e02:	4605      	mov	r5, r0
 8011e04:	b1f8      	cbz	r0, 8011e46 <GUI_ALLOC_Realloc+0x50>
 8011e06:	b1f4      	cbz	r4, 8011e46 <GUI_ALLOC_Realloc+0x50>
 8011e08:	4620      	mov	r0, r4
 8011e0a:	f001 f997 	bl	801313c <GUI_ALLOC_GetSize>
 8011e0e:	42b0      	cmp	r0, r6
 8011e10:	bfb4      	ite	lt
 8011e12:	4607      	movlt	r7, r0
 8011e14:	4637      	movge	r7, r6
 8011e16:	4628      	mov	r0, r5
 8011e18:	f001 f962 	bl	80130e0 <GUI_ALLOC_LockH>
 8011e1c:	9000      	str	r0, [sp, #0]
 8011e1e:	4620      	mov	r0, r4
 8011e20:	f001 f95e 	bl	80130e0 <GUI_ALLOC_LockH>
 8011e24:	ae02      	add	r6, sp, #8
 8011e26:	4601      	mov	r1, r0
 8011e28:	463a      	mov	r2, r7
 8011e2a:	9001      	str	r0, [sp, #4]
 8011e2c:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 8011e30:	f008 fe0f 	bl	801aa52 <memcpy>
 8011e34:	4668      	mov	r0, sp
 8011e36:	f001 f961 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011e3a:	a801      	add	r0, sp, #4
 8011e3c:	f001 f95e 	bl	80130fc <GUI_ALLOC_UnlockH>
 8011e40:	4620      	mov	r0, r4
 8011e42:	f001 f987 	bl	8013154 <GUI_ALLOC_Free>
 8011e46:	4628      	mov	r0, r5
 8011e48:	b003      	add	sp, #12
 8011e4a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011e4c <GUI_SetPenSize>:
 8011e4c:	4b02      	ldr	r3, [pc, #8]	; (8011e58 <GUI_SetPenSize+0xc>)
 8011e4e:	681b      	ldr	r3, [r3, #0]
 8011e50:	7e1a      	ldrb	r2, [r3, #24]
 8011e52:	7618      	strb	r0, [r3, #24]
 8011e54:	4610      	mov	r0, r2
 8011e56:	4770      	bx	lr
 8011e58:	2000016c 	.word	0x2000016c

08011e5c <GUI_PID_GetState>:
 8011e5c:	4a11      	ldr	r2, [pc, #68]	; (8011ea4 <GUI_PID_GetState+0x48>)
 8011e5e:	4912      	ldr	r1, [pc, #72]	; (8011ea8 <GUI_PID_GetState+0x4c>)
 8011e60:	6813      	ldr	r3, [r2, #0]
 8011e62:	6809      	ldr	r1, [r1, #0]
 8011e64:	428b      	cmp	r3, r1
 8011e66:	b570      	push	{r4, r5, r6, lr}
 8011e68:	4604      	mov	r4, r0
 8011e6a:	4616      	mov	r6, r2
 8011e6c:	4d0f      	ldr	r5, [pc, #60]	; (8011eac <GUI_PID_GetState+0x50>)
 8011e6e:	d109      	bne.n	8011e84 <GUI_PID_GetState+0x28>
 8011e70:	42ab      	cmp	r3, r5
 8011e72:	bf06      	itte	eq
 8011e74:	333c      	addeq	r3, #60	; 0x3c
 8011e76:	e893 0007 	ldmiaeq.w	r3, {r0, r1, r2}
 8011e7a:	e913 0007 	ldmdbne	r3, {r0, r1, r2}
 8011e7e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011e82:	e00a      	b.n	8011e9a <GUI_PID_GetState+0x3e>
 8011e84:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8011e88:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011e8c:	f105 023c 	add.w	r2, r5, #60	; 0x3c
 8011e90:	4293      	cmp	r3, r2
 8011e92:	bf18      	it	ne
 8011e94:	f103 050c 	addne.w	r5, r3, #12
 8011e98:	6035      	str	r5, [r6, #0]
 8011e9a:	7a20      	ldrb	r0, [r4, #8]
 8011e9c:	3000      	adds	r0, #0
 8011e9e:	bf18      	it	ne
 8011ea0:	2001      	movne	r0, #1
 8011ea2:	bd70      	pop	{r4, r5, r6, pc}
 8011ea4:	20000160 	.word	0x20000160
 8011ea8:	2000015c 	.word	0x2000015c
 8011eac:	20019540 	.word	0x20019540

08011eb0 <GUI_PID_StoreState>:
 8011eb0:	4a21      	ldr	r2, [pc, #132]	; (8011f38 <GUI_PID_StoreState+0x88>)
 8011eb2:	4922      	ldr	r1, [pc, #136]	; (8011f3c <GUI_PID_StoreState+0x8c>)
 8011eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011eb8:	6011      	str	r1, [r2, #0]
 8011eba:	4f21      	ldr	r7, [pc, #132]	; (8011f40 <GUI_PID_StoreState+0x90>)
 8011ebc:	4921      	ldr	r1, [pc, #132]	; (8011f44 <GUI_PID_StoreState+0x94>)
 8011ebe:	683a      	ldr	r2, [r7, #0]
 8011ec0:	680c      	ldr	r4, [r1, #0]
 8011ec2:	4603      	mov	r3, r0
 8011ec4:	4820      	ldr	r0, [pc, #128]	; (8011f48 <GUI_PID_StoreState+0x98>)
 8011ec6:	4294      	cmp	r4, r2
 8011ec8:	468c      	mov	ip, r1
 8011eca:	f100 063c 	add.w	r6, r0, #60	; 0x3c
 8011ece:	d017      	beq.n	8011f00 <GUI_PID_StoreState+0x50>
 8011ed0:	4282      	cmp	r2, r0
 8011ed2:	bf14      	ite	ne
 8011ed4:	f1a2 010c 	subne.w	r1, r2, #12
 8011ed8:	4631      	moveq	r1, r6
 8011eda:	7a1d      	ldrb	r5, [r3, #8]
 8011edc:	f891 8008 	ldrb.w	r8, [r1, #8]
 8011ee0:	45a8      	cmp	r8, r5
 8011ee2:	d10d      	bne.n	8011f00 <GUI_PID_StoreState+0x50>
 8011ee4:	428c      	cmp	r4, r1
 8011ee6:	d00b      	beq.n	8011f00 <GUI_PID_StoreState+0x50>
 8011ee8:	4281      	cmp	r1, r0
 8011eea:	bf14      	ite	ne
 8011eec:	390c      	subne	r1, #12
 8011eee:	4917      	ldreq	r1, [pc, #92]	; (8011f4c <GUI_PID_StoreState+0x9c>)
 8011ef0:	7a09      	ldrb	r1, [r1, #8]
 8011ef2:	42a9      	cmp	r1, r5
 8011ef4:	d104      	bne.n	8011f00 <GUI_PID_StoreState+0x50>
 8011ef6:	4282      	cmp	r2, r0
 8011ef8:	bf14      	ite	ne
 8011efa:	3a0c      	subne	r2, #12
 8011efc:	4a13      	ldreq	r2, [pc, #76]	; (8011f4c <GUI_PID_StoreState+0x9c>)
 8011efe:	603a      	str	r2, [r7, #0]
 8011f00:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8011f04:	683d      	ldr	r5, [r7, #0]
 8011f06:	42b5      	cmp	r5, r6
 8011f08:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8011f0c:	bf0c      	ite	eq
 8011f0e:	4d0e      	ldreq	r5, [pc, #56]	; (8011f48 <GUI_PID_StoreState+0x98>)
 8011f10:	350c      	addne	r5, #12
 8011f12:	42ac      	cmp	r4, r5
 8011f14:	603d      	str	r5, [r7, #0]
 8011f16:	d105      	bne.n	8011f24 <GUI_PID_StoreState+0x74>
 8011f18:	42b4      	cmp	r4, r6
 8011f1a:	bf14      	ite	ne
 8011f1c:	340c      	addne	r4, #12
 8011f1e:	4c0a      	ldreq	r4, [pc, #40]	; (8011f48 <GUI_PID_StoreState+0x98>)
 8011f20:	f8cc 4000 	str.w	r4, [ip]
 8011f24:	4a0a      	ldr	r2, [pc, #40]	; (8011f50 <GUI_PID_StoreState+0xa0>)
 8011f26:	6812      	ldr	r2, [r2, #0]
 8011f28:	b10a      	cbz	r2, 8011f2e <GUI_PID_StoreState+0x7e>
 8011f2a:	4618      	mov	r0, r3
 8011f2c:	4790      	blx	r2
 8011f2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011f32:	f7ff b8d1 	b.w	80110d8 <GUI_SignalEvent>
 8011f36:	bf00      	nop
 8011f38:	20019cac 	.word	0x20019cac
 8011f3c:	08015739 	.word	0x08015739
 8011f40:	2000015c 	.word	0x2000015c
 8011f44:	20000160 	.word	0x20000160
 8011f48:	20019540 	.word	0x20019540
 8011f4c:	2001957c 	.word	0x2001957c
 8011f50:	2001953c 	.word	0x2001953c

08011f54 <GUI_PID_IsEmpty>:
 8011f54:	4b03      	ldr	r3, [pc, #12]	; (8011f64 <GUI_PID_IsEmpty+0x10>)
 8011f56:	6818      	ldr	r0, [r3, #0]
 8011f58:	4b03      	ldr	r3, [pc, #12]	; (8011f68 <GUI_PID_IsEmpty+0x14>)
 8011f5a:	681b      	ldr	r3, [r3, #0]
 8011f5c:	1ac3      	subs	r3, r0, r3
 8011f5e:	4258      	negs	r0, r3
 8011f60:	4158      	adcs	r0, r3
 8011f62:	4770      	bx	lr
 8011f64:	20000160 	.word	0x20000160
 8011f68:	2000015c 	.word	0x2000015c

08011f6c <GUI_GetKey>:
 8011f6c:	4b02      	ldr	r3, [pc, #8]	; (8011f78 <GUI_GetKey+0xc>)
 8011f6e:	2200      	movs	r2, #0
 8011f70:	6818      	ldr	r0, [r3, #0]
 8011f72:	601a      	str	r2, [r3, #0]
 8011f74:	4770      	bx	lr
 8011f76:	bf00      	nop
 8011f78:	20019588 	.word	0x20019588

08011f7c <GUI_StoreKey>:
 8011f7c:	4b02      	ldr	r3, [pc, #8]	; (8011f88 <GUI_StoreKey+0xc>)
 8011f7e:	681a      	ldr	r2, [r3, #0]
 8011f80:	b902      	cbnz	r2, 8011f84 <GUI_StoreKey+0x8>
 8011f82:	6018      	str	r0, [r3, #0]
 8011f84:	f7ff b8a8 	b.w	80110d8 <GUI_SignalEvent>
 8011f88:	20019588 	.word	0x20019588

08011f8c <GUI_PollKeyMsg>:
 8011f8c:	4a0a      	ldr	r2, [pc, #40]	; (8011fb8 <GUI_PollKeyMsg+0x2c>)
 8011f8e:	490b      	ldr	r1, [pc, #44]	; (8011fbc <GUI_PollKeyMsg+0x30>)
 8011f90:	6813      	ldr	r3, [r2, #0]
 8011f92:	6809      	ldr	r1, [r1, #0]
 8011f94:	428b      	cmp	r3, r1
 8011f96:	b510      	push	{r4, lr}
 8011f98:	d00b      	beq.n	8011fb2 <GUI_PollKeyMsg+0x26>
 8011f9a:	4c09      	ldr	r4, [pc, #36]	; (8011fc0 <GUI_PollKeyMsg+0x34>)
 8011f9c:	42a3      	cmp	r3, r4
 8011f9e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011fa2:	bf14      	ite	ne
 8011fa4:	3308      	addne	r3, #8
 8011fa6:	3b50      	subeq	r3, #80	; 0x50
 8011fa8:	6013      	str	r3, [r2, #0]
 8011faa:	f003 fd9d 	bl	8015ae8 <WM_OnKey>
 8011fae:	2001      	movs	r0, #1
 8011fb0:	bd10      	pop	{r4, pc}
 8011fb2:	2000      	movs	r0, #0
 8011fb4:	bd10      	pop	{r4, pc}
 8011fb6:	bf00      	nop
 8011fb8:	20000168 	.word	0x20000168
 8011fbc:	20000164 	.word	0x20000164
 8011fc0:	200195dc 	.word	0x200195dc

08011fc4 <GUI_MoveRect>:
 8011fc4:	b168      	cbz	r0, 8011fe2 <GUI_MoveRect+0x1e>
 8011fc6:	8803      	ldrh	r3, [r0, #0]
 8011fc8:	b289      	uxth	r1, r1
 8011fca:	440b      	add	r3, r1
 8011fcc:	8003      	strh	r3, [r0, #0]
 8011fce:	8883      	ldrh	r3, [r0, #4]
 8011fd0:	4419      	add	r1, r3
 8011fd2:	8843      	ldrh	r3, [r0, #2]
 8011fd4:	8081      	strh	r1, [r0, #4]
 8011fd6:	b292      	uxth	r2, r2
 8011fd8:	4413      	add	r3, r2
 8011fda:	8043      	strh	r3, [r0, #2]
 8011fdc:	88c3      	ldrh	r3, [r0, #6]
 8011fde:	441a      	add	r2, r3
 8011fe0:	80c2      	strh	r2, [r0, #6]
 8011fe2:	4770      	bx	lr

08011fe4 <GUI_MergeRect>:
 8011fe4:	b510      	push	{r4, lr}
 8011fe6:	b338      	cbz	r0, 8012038 <GUI_MergeRect+0x54>
 8011fe8:	b309      	cbz	r1, 801202e <GUI_MergeRect+0x4a>
 8011fea:	b30a      	cbz	r2, 8012030 <GUI_MergeRect+0x4c>
 8011fec:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011ff0:	f9b2 3000 	ldrsh.w	r3, [r2]
 8011ff4:	429c      	cmp	r4, r3
 8011ff6:	bfb8      	it	lt
 8011ff8:	4623      	movlt	r3, r4
 8011ffa:	8003      	strh	r3, [r0, #0]
 8011ffc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012000:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012004:	429c      	cmp	r4, r3
 8012006:	bfb8      	it	lt
 8012008:	4623      	movlt	r3, r4
 801200a:	8043      	strh	r3, [r0, #2]
 801200c:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 8012010:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8012014:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8012018:	429c      	cmp	r4, r3
 801201a:	bfa8      	it	ge
 801201c:	4623      	movge	r3, r4
 801201e:	8083      	strh	r3, [r0, #4]
 8012020:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8012024:	4299      	cmp	r1, r3
 8012026:	bfa8      	it	ge
 8012028:	460b      	movge	r3, r1
 801202a:	80c3      	strh	r3, [r0, #6]
 801202c:	bd10      	pop	{r4, pc}
 801202e:	4611      	mov	r1, r2
 8012030:	680b      	ldr	r3, [r1, #0]
 8012032:	6003      	str	r3, [r0, #0]
 8012034:	684b      	ldr	r3, [r1, #4]
 8012036:	6043      	str	r3, [r0, #4]
 8012038:	bd10      	pop	{r4, pc}
	...

0801203c <GUI_MULTIBUF_BeginEx>:
 801203c:	4b1a      	ldr	r3, [pc, #104]	; (80120a8 <GUI_MULTIBUF_BeginEx+0x6c>)
 801203e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012040:	681b      	ldr	r3, [r3, #0]
 8012042:	4a1a      	ldr	r2, [pc, #104]	; (80120ac <GUI_MULTIBUF_BeginEx+0x70>)
 8012044:	2b00      	cmp	r3, #0
 8012046:	bf0c      	ite	eq
 8012048:	4603      	moveq	r3, r0
 801204a:	2300      	movne	r3, #0
 801204c:	56d2      	ldrsb	r2, [r2, r3]
 801204e:	2a01      	cmp	r2, #1
 8012050:	dd28      	ble.n	80120a4 <GUI_MULTIBUF_BeginEx+0x68>
 8012052:	4c17      	ldr	r4, [pc, #92]	; (80120b0 <GUI_MULTIBUF_BeginEx+0x74>)
 8012054:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 8012058:	1c4d      	adds	r5, r1, #1
 801205a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801205e:	bb09      	cbnz	r1, 80120a4 <GUI_MULTIBUF_BeginEx+0x68>
 8012060:	4d14      	ldr	r5, [pc, #80]	; (80120b4 <GUI_MULTIBUF_BeginEx+0x78>)
 8012062:	4915      	ldr	r1, [pc, #84]	; (80120b8 <GUI_MULTIBUF_BeginEx+0x7c>)
 8012064:	f855 6023 	ldr.w	r6, [r5, r3, lsl #2]
 8012068:	f851 7023 	ldr.w	r7, [r1, r3, lsl #2]
 801206c:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
 8012070:	4910      	ldr	r1, [pc, #64]	; (80120b4 <GUI_MULTIBUF_BeginEx+0x78>)
 8012072:	3401      	adds	r4, #1
 8012074:	4294      	cmp	r4, r2
 8012076:	bf08      	it	eq
 8012078:	2400      	moveq	r4, #0
 801207a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 801207e:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
 8012082:	42bc      	cmp	r4, r7
 8012084:	d0f2      	beq.n	801206c <GUI_MULTIBUF_BeginEx+0x30>
 8012086:	f000 fad1 	bl	801262c <GUI_DEVICE__GetpDriver>
 801208a:	9001      	str	r0, [sp, #4]
 801208c:	b150      	cbz	r0, 80120a4 <GUI_MULTIBUF_BeginEx+0x68>
 801208e:	68c3      	ldr	r3, [r0, #12]
 8012090:	2121      	movs	r1, #33	; 0x21
 8012092:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012094:	a801      	add	r0, sp, #4
 8012096:	4798      	blx	r3
 8012098:	4603      	mov	r3, r0
 801209a:	b118      	cbz	r0, 80120a4 <GUI_MULTIBUF_BeginEx+0x68>
 801209c:	9801      	ldr	r0, [sp, #4]
 801209e:	4631      	mov	r1, r6
 80120a0:	4622      	mov	r2, r4
 80120a2:	4798      	blx	r3
 80120a4:	b003      	add	sp, #12
 80120a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80120a8:	20019604 	.word	0x20019604
 80120ac:	20019c70 	.word	0x20019c70
 80120b0:	200195fc 	.word	0x200195fc
 80120b4:	200195f4 	.word	0x200195f4
 80120b8:	200195e4 	.word	0x200195e4

080120bc <GUI_MULTIBUF_Begin>:
 80120bc:	4b02      	ldr	r3, [pc, #8]	; (80120c8 <GUI_MULTIBUF_Begin+0xc>)
 80120be:	681b      	ldr	r3, [r3, #0]
 80120c0:	7c58      	ldrb	r0, [r3, #17]
 80120c2:	f7ff bfbb 	b.w	801203c <GUI_MULTIBUF_BeginEx>
 80120c6:	bf00      	nop
 80120c8:	2000016c 	.word	0x2000016c

080120cc <GUI_MULTIBUF_EndEx>:
 80120cc:	4b13      	ldr	r3, [pc, #76]	; (801211c <GUI_MULTIBUF_EndEx+0x50>)
 80120ce:	4a14      	ldr	r2, [pc, #80]	; (8012120 <GUI_MULTIBUF_EndEx+0x54>)
 80120d0:	681b      	ldr	r3, [r3, #0]
 80120d2:	b513      	push	{r0, r1, r4, lr}
 80120d4:	2b00      	cmp	r3, #0
 80120d6:	bf0c      	ite	eq
 80120d8:	4603      	moveq	r3, r0
 80120da:	2300      	movne	r3, #0
 80120dc:	56d2      	ldrsb	r2, [r2, r3]
 80120de:	2a01      	cmp	r2, #1
 80120e0:	dd1a      	ble.n	8012118 <GUI_MULTIBUF_EndEx+0x4c>
 80120e2:	4910      	ldr	r1, [pc, #64]	; (8012124 <GUI_MULTIBUF_EndEx+0x58>)
 80120e4:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
 80120e8:	3a01      	subs	r2, #1
 80120ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80120ee:	b99a      	cbnz	r2, 8012118 <GUI_MULTIBUF_EndEx+0x4c>
 80120f0:	4a0d      	ldr	r2, [pc, #52]	; (8012128 <GUI_MULTIBUF_EndEx+0x5c>)
 80120f2:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80120f6:	4a0d      	ldr	r2, [pc, #52]	; (801212c <GUI_MULTIBUF_EndEx+0x60>)
 80120f8:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 80120fc:	f000 fa96 	bl	801262c <GUI_DEVICE__GetpDriver>
 8012100:	9001      	str	r0, [sp, #4]
 8012102:	b148      	cbz	r0, 8012118 <GUI_MULTIBUF_EndEx+0x4c>
 8012104:	68c3      	ldr	r3, [r0, #12]
 8012106:	2122      	movs	r1, #34	; 0x22
 8012108:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801210a:	a801      	add	r0, sp, #4
 801210c:	4798      	blx	r3
 801210e:	4603      	mov	r3, r0
 8012110:	b110      	cbz	r0, 8012118 <GUI_MULTIBUF_EndEx+0x4c>
 8012112:	9801      	ldr	r0, [sp, #4]
 8012114:	4621      	mov	r1, r4
 8012116:	4798      	blx	r3
 8012118:	b002      	add	sp, #8
 801211a:	bd10      	pop	{r4, pc}
 801211c:	20019604 	.word	0x20019604
 8012120:	20019c70 	.word	0x20019c70
 8012124:	200195fc 	.word	0x200195fc
 8012128:	200195f4 	.word	0x200195f4
 801212c:	200195ec 	.word	0x200195ec

08012130 <GUI_MULTIBUF_End>:
 8012130:	4b02      	ldr	r3, [pc, #8]	; (801213c <GUI_MULTIBUF_End+0xc>)
 8012132:	681b      	ldr	r3, [r3, #0]
 8012134:	7c58      	ldrb	r0, [r3, #17]
 8012136:	f7ff bfc9 	b.w	80120cc <GUI_MULTIBUF_EndEx>
 801213a:	bf00      	nop
 801213c:	2000016c 	.word	0x2000016c

08012140 <GUI_InvertRect>:
 8012140:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012144:	4607      	mov	r7, r0
 8012146:	2001      	movs	r0, #1
 8012148:	469a      	mov	sl, r3
 801214a:	460e      	mov	r6, r1
 801214c:	4691      	mov	r9, r2
 801214e:	f7ff fdb3 	bl	8011cb8 <GUI_SetDrawMode>
 8012152:	4b12      	ldr	r3, [pc, #72]	; (801219c <GUI_InvertRect+0x5c>)
 8012154:	681c      	ldr	r4, [r3, #0]
 8012156:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8012158:	6d24      	ldr	r4, [r4, #80]	; 0x50
 801215a:	442f      	add	r7, r5
 801215c:	4426      	add	r6, r4
 801215e:	4680      	mov	r8, r0
 8012160:	444d      	add	r5, r9
 8012162:	4454      	add	r4, sl
 8012164:	4668      	mov	r0, sp
 8012166:	f8ad 7000 	strh.w	r7, [sp]
 801216a:	f8ad 5004 	strh.w	r5, [sp, #4]
 801216e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012172:	f8ad 4006 	strh.w	r4, [sp, #6]
 8012176:	f7fb fb3d 	bl	800d7f4 <WM__InitIVRSearch>
 801217a:	b928      	cbnz	r0, 8012188 <GUI_InvertRect+0x48>
 801217c:	4640      	mov	r0, r8
 801217e:	f7ff fd9b 	bl	8011cb8 <GUI_SetDrawMode>
 8012182:	b002      	add	sp, #8
 8012184:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012188:	4638      	mov	r0, r7
 801218a:	4631      	mov	r1, r6
 801218c:	462a      	mov	r2, r5
 801218e:	4623      	mov	r3, r4
 8012190:	f7fe f8fc 	bl	801038c <LCD_FillRect>
 8012194:	f7fb fa6c 	bl	800d670 <WM__GetNextIVR>
 8012198:	e7ef      	b.n	801217a <GUI_InvertRect+0x3a>
 801219a:	bf00      	nop
 801219c:	2000016c 	.word	0x2000016c

080121a0 <GUI_GotoXY>:
 80121a0:	4b02      	ldr	r3, [pc, #8]	; (80121ac <GUI_GotoXY+0xc>)
 80121a2:	681b      	ldr	r3, [r3, #0]
 80121a4:	8458      	strh	r0, [r3, #34]	; 0x22
 80121a6:	8499      	strh	r1, [r3, #36]	; 0x24
 80121a8:	2000      	movs	r0, #0
 80121aa:	4770      	bx	lr
 80121ac:	2000016c 	.word	0x2000016c

080121b0 <GUI_GetYSizeOfFont>:
 80121b0:	7e02      	ldrb	r2, [r0, #24]
 80121b2:	7ec0      	ldrb	r0, [r0, #27]
 80121b4:	4350      	muls	r0, r2
 80121b6:	4770      	bx	lr

080121b8 <GUI_GetStringDistX>:
 80121b8:	b510      	push	{r4, lr}
 80121ba:	4604      	mov	r4, r0
 80121bc:	f7fe fd2a 	bl	8010c14 <GUI__GetNumChars>
 80121c0:	4601      	mov	r1, r0
 80121c2:	4620      	mov	r0, r4
 80121c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80121c8:	f000 bdd2 	b.w	8012d70 <GUI__GetLineDistX>

080121cc <GUI_GetOrg>:
 80121cc:	4b04      	ldr	r3, [pc, #16]	; (80121e0 <GUI_GetOrg+0x14>)
 80121ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 80121d2:	6003      	str	r3, [r0, #0]
 80121d4:	4b03      	ldr	r3, [pc, #12]	; (80121e4 <GUI_GetOrg+0x18>)
 80121d6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80121da:	600b      	str	r3, [r1, #0]
 80121dc:	4770      	bx	lr
 80121de:	bf00      	nop
 80121e0:	20019c88 	.word	0x20019c88
 80121e4:	20019c7c 	.word	0x20019c7c

080121e8 <GUI_FillRectEx>:
 80121e8:	4603      	mov	r3, r0
 80121ea:	f9b0 0000 	ldrsh.w	r0, [r0]
 80121ee:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 80121f2:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 80121f6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80121fa:	f000 b801 	b.w	8012200 <GUI_FillRect>
	...

08012200 <GUI_FillRect>:
 8012200:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012202:	4c0f      	ldr	r4, [pc, #60]	; (8012240 <GUI_FillRect+0x40>)
 8012204:	6824      	ldr	r4, [r4, #0]
 8012206:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8012208:	6d24      	ldr	r4, [r4, #80]	; 0x50
 801220a:	1947      	adds	r7, r0, r5
 801220c:	190e      	adds	r6, r1, r4
 801220e:	4415      	add	r5, r2
 8012210:	441c      	add	r4, r3
 8012212:	4668      	mov	r0, sp
 8012214:	f8ad 7000 	strh.w	r7, [sp]
 8012218:	f8ad 5004 	strh.w	r5, [sp, #4]
 801221c:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012220:	f8ad 4006 	strh.w	r4, [sp, #6]
 8012224:	f7fb fae6 	bl	800d7f4 <WM__InitIVRSearch>
 8012228:	b140      	cbz	r0, 801223c <GUI_FillRect+0x3c>
 801222a:	4638      	mov	r0, r7
 801222c:	4631      	mov	r1, r6
 801222e:	462a      	mov	r2, r5
 8012230:	4623      	mov	r3, r4
 8012232:	f7fe f8ab 	bl	801038c <LCD_FillRect>
 8012236:	f7fb fa1b 	bl	800d670 <WM__GetNextIVR>
 801223a:	e7f5      	b.n	8012228 <GUI_FillRect+0x28>
 801223c:	b003      	add	sp, #12
 801223e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012240:	2000016c 	.word	0x2000016c

08012244 <GUI_Exec1>:
 8012244:	4b0a      	ldr	r3, [pc, #40]	; (8012270 <GUI_Exec1+0x2c>)
 8012246:	b510      	push	{r4, lr}
 8012248:	681c      	ldr	r4, [r3, #0]
 801224a:	b11c      	cbz	r4, 8012254 <GUI_Exec1+0x10>
 801224c:	47a0      	blx	r4
 801224e:	1c04      	adds	r4, r0, #0
 8012250:	bf18      	it	ne
 8012252:	2401      	movne	r4, #1
 8012254:	f7fb fbf4 	bl	800da40 <WM_Exec>
 8012258:	4b06      	ldr	r3, [pc, #24]	; (8012274 <GUI_Exec1+0x30>)
 801225a:	681b      	ldr	r3, [r3, #0]
 801225c:	2800      	cmp	r0, #0
 801225e:	bf18      	it	ne
 8012260:	2401      	movne	r4, #1
 8012262:	b11b      	cbz	r3, 801226c <GUI_Exec1+0x28>
 8012264:	4798      	blx	r3
 8012266:	2800      	cmp	r0, #0
 8012268:	bf18      	it	ne
 801226a:	2401      	movne	r4, #1
 801226c:	4620      	mov	r0, r4
 801226e:	bd10      	pop	{r4, pc}
 8012270:	20019c84 	.word	0x20019c84
 8012274:	20019c9c 	.word	0x20019c9c

08012278 <GUI_Exec>:
 8012278:	b510      	push	{r4, lr}
 801227a:	2400      	movs	r4, #0
 801227c:	f7ff ffe2 	bl	8012244 <GUI_Exec1>
 8012280:	b108      	cbz	r0, 8012286 <GUI_Exec+0xe>
 8012282:	2401      	movs	r4, #1
 8012284:	e7fa      	b.n	801227c <GUI_Exec+0x4>
 8012286:	4620      	mov	r0, r4
 8012288:	bd10      	pop	{r4, pc}
	...

0801228c <GUI_DrawVLine>:
 801228c:	4b0f      	ldr	r3, [pc, #60]	; (80122cc <GUI_DrawVLine+0x40>)
 801228e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012290:	681b      	ldr	r3, [r3, #0]
 8012292:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012294:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8012296:	4406      	add	r6, r0
 8012298:	190d      	adds	r5, r1, r4
 801229a:	b2b3      	uxth	r3, r6
 801229c:	4414      	add	r4, r2
 801229e:	4668      	mov	r0, sp
 80122a0:	f8ad 3000 	strh.w	r3, [sp]
 80122a4:	f8ad 3004 	strh.w	r3, [sp, #4]
 80122a8:	f8ad 5002 	strh.w	r5, [sp, #2]
 80122ac:	f8ad 4006 	strh.w	r4, [sp, #6]
 80122b0:	f7fb faa0 	bl	800d7f4 <WM__InitIVRSearch>
 80122b4:	b138      	cbz	r0, 80122c6 <GUI_DrawVLine+0x3a>
 80122b6:	4630      	mov	r0, r6
 80122b8:	4629      	mov	r1, r5
 80122ba:	4622      	mov	r2, r4
 80122bc:	f7fe f840 	bl	8010340 <LCD_DrawVLine>
 80122c0:	f7fb f9d6 	bl	800d670 <WM__GetNextIVR>
 80122c4:	e7f6      	b.n	80122b4 <GUI_DrawVLine+0x28>
 80122c6:	b002      	add	sp, #8
 80122c8:	bd70      	pop	{r4, r5, r6, pc}
 80122ca:	bf00      	nop
 80122cc:	2000016c 	.word	0x2000016c

080122d0 <GUI_DrawHLine>:
 80122d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80122d2:	4f10      	ldr	r7, [pc, #64]	; (8012314 <GUI_DrawHLine+0x44>)
 80122d4:	683b      	ldr	r3, [r7, #0]
 80122d6:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 80122d8:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80122da:	4405      	add	r5, r0
 80122dc:	190e      	adds	r6, r1, r4
 80122de:	b2ab      	uxth	r3, r5
 80122e0:	4414      	add	r4, r2
 80122e2:	4668      	mov	r0, sp
 80122e4:	f8ad 6000 	strh.w	r6, [sp]
 80122e8:	f8ad 4004 	strh.w	r4, [sp, #4]
 80122ec:	f8ad 3002 	strh.w	r3, [sp, #2]
 80122f0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80122f4:	f7fb fa7e 	bl	800d7f4 <WM__InitIVRSearch>
 80122f8:	b148      	cbz	r0, 801230e <GUI_DrawHLine+0x3e>
 80122fa:	683b      	ldr	r3, [r7, #0]
 80122fc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80122fe:	4630      	mov	r0, r6
 8012300:	681b      	ldr	r3, [r3, #0]
 8012302:	4629      	mov	r1, r5
 8012304:	4622      	mov	r2, r4
 8012306:	4798      	blx	r3
 8012308:	f7fb f9b2 	bl	800d670 <WM__GetNextIVR>
 801230c:	e7f4      	b.n	80122f8 <GUI_DrawHLine+0x28>
 801230e:	b003      	add	sp, #12
 8012310:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012312:	bf00      	nop
 8012314:	2000016c 	.word	0x2000016c

08012318 <GUI_DrawFocusRect>:
 8012318:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801231a:	4603      	mov	r3, r0
 801231c:	460a      	mov	r2, r1
 801231e:	4668      	mov	r0, sp
 8012320:	4619      	mov	r1, r3
 8012322:	f7fe fb9c 	bl	8010a5e <GUI__ReduceRect>
 8012326:	4b23      	ldr	r3, [pc, #140]	; (80123b4 <GUI_DrawFocusRect+0x9c>)
 8012328:	f8bd 1000 	ldrh.w	r1, [sp]
 801232c:	681b      	ldr	r3, [r3, #0]
 801232e:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 8012332:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8012336:	4411      	add	r1, r2
 8012338:	f8ad 1000 	strh.w	r1, [sp]
 801233c:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8012340:	4419      	add	r1, r3
 8012342:	f8ad 1002 	strh.w	r1, [sp, #2]
 8012346:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801234a:	440a      	add	r2, r1
 801234c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012350:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012354:	4668      	mov	r0, sp
 8012356:	4413      	add	r3, r2
 8012358:	f8ad 3006 	strh.w	r3, [sp, #6]
 801235c:	f7fb fa4a 	bl	800d7f4 <WM__InitIVRSearch>
 8012360:	b328      	cbz	r0, 80123ae <GUI_DrawFocusRect+0x96>
 8012362:	f9bd 5000 	ldrsh.w	r5, [sp]
 8012366:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801236a:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 801236e:	429d      	cmp	r5, r3
 8012370:	dc09      	bgt.n	8012386 <GUI_DrawFocusRect+0x6e>
 8012372:	4628      	mov	r0, r5
 8012374:	f7fd ff90 	bl	8010298 <LCD_DrawPixel>
 8012378:	4628      	mov	r0, r5
 801237a:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 801237e:	f7fd ff8b 	bl	8010298 <LCD_DrawPixel>
 8012382:	3502      	adds	r5, #2
 8012384:	e7ef      	b.n	8012366 <GUI_DrawFocusRect+0x4e>
 8012386:	460c      	mov	r4, r1
 8012388:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801238c:	429c      	cmp	r4, r3
 801238e:	dc0b      	bgt.n	80123a8 <GUI_DrawFocusRect+0x90>
 8012390:	4621      	mov	r1, r4
 8012392:	f9bd 0000 	ldrsh.w	r0, [sp]
 8012396:	f7fd ff7f 	bl	8010298 <LCD_DrawPixel>
 801239a:	4621      	mov	r1, r4
 801239c:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 80123a0:	f7fd ff7a 	bl	8010298 <LCD_DrawPixel>
 80123a4:	3402      	adds	r4, #2
 80123a6:	e7ef      	b.n	8012388 <GUI_DrawFocusRect+0x70>
 80123a8:	f7fb f962 	bl	800d670 <WM__GetNextIVR>
 80123ac:	e7d8      	b.n	8012360 <GUI_DrawFocusRect+0x48>
 80123ae:	b003      	add	sp, #12
 80123b0:	bd30      	pop	{r4, r5, pc}
 80123b2:	bf00      	nop
 80123b4:	2000016c 	.word	0x2000016c

080123b8 <GUI_WrapGetNumLines>:
 80123b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80123ba:	4605      	mov	r5, r0
 80123bc:	460e      	mov	r6, r1
 80123be:	4617      	mov	r7, r2
 80123c0:	2400      	movs	r4, #0
 80123c2:	4628      	mov	r0, r5
 80123c4:	4631      	mov	r1, r6
 80123c6:	463a      	mov	r2, r7
 80123c8:	f005 fdee 	bl	8017fa8 <GUI__WrapGetNumBytesToNextLine>
 80123cc:	b110      	cbz	r0, 80123d4 <GUI_WrapGetNumLines+0x1c>
 80123ce:	4405      	add	r5, r0
 80123d0:	3401      	adds	r4, #1
 80123d2:	e7f6      	b.n	80123c2 <GUI_WrapGetNumLines+0xa>
 80123d4:	4620      	mov	r0, r4
 80123d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080123d8 <GUI_DispStringInRectWrap>:
 80123d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123dc:	b089      	sub	sp, #36	; 0x24
 80123de:	460c      	mov	r4, r1
 80123e0:	9202      	str	r2, [sp, #8]
 80123e2:	9303      	str	r3, [sp, #12]
 80123e4:	4605      	mov	r5, r0
 80123e6:	2800      	cmp	r0, #0
 80123e8:	f000 8091 	beq.w	801250e <GUI_DispStringInRectWrap+0x136>
 80123ec:	f8b1 a000 	ldrh.w	sl, [r1]
 80123f0:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 80123f4:	884e      	ldrh	r6, [r1, #2]
 80123f6:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 80123fa:	fa0f f289 	sxth.w	r2, r9
 80123fe:	fa0f f38a 	sxth.w	r3, sl
 8012402:	1ad3      	subs	r3, r2, r3
 8012404:	3301      	adds	r3, #1
 8012406:	9301      	str	r3, [sp, #4]
 8012408:	f000 fd4e 	bl	8012ea8 <GUI_GetFontDistY>
 801240c:	9902      	ldr	r1, [sp, #8]
 801240e:	f011 070c 	ands.w	r7, r1, #12
 8012412:	4680      	mov	r8, r0
 8012414:	d01b      	beq.n	801244e <GUI_DispStringInRectWrap+0x76>
 8012416:	4628      	mov	r0, r5
 8012418:	9901      	ldr	r1, [sp, #4]
 801241a:	9a03      	ldr	r2, [sp, #12]
 801241c:	f7ff ffcc 	bl	80123b8 <GUI_WrapGetNumLines>
 8012420:	2f08      	cmp	r7, #8
 8012422:	d003      	beq.n	801242c <GUI_DispStringInRectWrap+0x54>
 8012424:	2f0c      	cmp	r7, #12
 8012426:	d006      	beq.n	8012436 <GUI_DispStringInRectWrap+0x5e>
 8012428:	2f04      	cmp	r7, #4
 801242a:	d110      	bne.n	801244e <GUI_DispStringInRectWrap+0x76>
 801242c:	f10b 0601 	add.w	r6, fp, #1
 8012430:	fb00 6618 	mls	r6, r0, r8, r6
 8012434:	e00a      	b.n	801244c <GUI_DispStringInRectWrap+0x74>
 8012436:	b232      	sxth	r2, r6
 8012438:	fa0f f38b 	sxth.w	r3, fp
 801243c:	1a9b      	subs	r3, r3, r2
 801243e:	3301      	adds	r3, #1
 8012440:	fb08 3010 	mls	r0, r8, r0, r3
 8012444:	2302      	movs	r3, #2
 8012446:	fb90 f0f3 	sdiv	r0, r0, r3
 801244a:	4406      	add	r6, r0
 801244c:	b2b6      	uxth	r6, r6
 801244e:	4620      	mov	r0, r4
 8012450:	f7f9 fe06 	bl	800c060 <WM_SetUserClipRect>
 8012454:	4607      	mov	r7, r0
 8012456:	b178      	cbz	r0, 8012478 <GUI_DispStringInRectWrap+0xa0>
 8012458:	a804      	add	r0, sp, #16
 801245a:	4621      	mov	r1, r4
 801245c:	463a      	mov	r2, r7
 801245e:	f8ad a010 	strh.w	sl, [sp, #16]
 8012462:	f8ad 6012 	strh.w	r6, [sp, #18]
 8012466:	f8ad 9014 	strh.w	r9, [sp, #20]
 801246a:	f8ad b016 	strh.w	fp, [sp, #22]
 801246e:	f7fe fb81 	bl	8010b74 <GUI__IntersectRects>
 8012472:	a804      	add	r0, sp, #16
 8012474:	f7f9 fdf4 	bl	800c060 <WM_SetUserClipRect>
 8012478:	9901      	ldr	r1, [sp, #4]
 801247a:	9a03      	ldr	r2, [sp, #12]
 801247c:	4628      	mov	r0, r5
 801247e:	f005 fd61 	bl	8017f44 <GUI__WrapGetNumCharsDisp>
 8012482:	eb06 0b08 	add.w	fp, r6, r8
 8012486:	4602      	mov	r2, r0
 8012488:	fa1f fb8b 	uxth.w	fp, fp
 801248c:	f10b 33ff 	add.w	r3, fp, #4294967295
 8012490:	4611      	mov	r1, r2
 8012492:	4628      	mov	r0, r5
 8012494:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012498:	9200      	str	r2, [sp, #0]
 801249a:	f8ad a018 	strh.w	sl, [sp, #24]
 801249e:	f8ad 601a 	strh.w	r6, [sp, #26]
 80124a2:	f8ad 901c 	strh.w	r9, [sp, #28]
 80124a6:	f000 fc63 	bl	8012d70 <GUI__GetLineDistX>
 80124aa:	9902      	ldr	r1, [sp, #8]
 80124ac:	9a00      	ldr	r2, [sp, #0]
 80124ae:	f001 0303 	and.w	r3, r1, #3
 80124b2:	2b01      	cmp	r3, #1
 80124b4:	d013      	beq.n	80124de <GUI_DispStringInRectWrap+0x106>
 80124b6:	2b02      	cmp	r3, #2
 80124b8:	d004      	beq.n	80124c4 <GUI_DispStringInRectWrap+0xec>
 80124ba:	b9ab      	cbnz	r3, 80124e8 <GUI_DispStringInRectWrap+0x110>
 80124bc:	8823      	ldrh	r3, [r4, #0]
 80124be:	f8ad 3018 	strh.w	r3, [sp, #24]
 80124c2:	e011      	b.n	80124e8 <GUI_DispStringInRectWrap+0x110>
 80124c4:	8821      	ldrh	r1, [r4, #0]
 80124c6:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 80124ca:	b20e      	sxth	r6, r1
 80124cc:	ebc6 060e 	rsb	r6, r6, lr
 80124d0:	1a30      	subs	r0, r6, r0
 80124d2:	fb90 f3f3 	sdiv	r3, r0, r3
 80124d6:	4419      	add	r1, r3
 80124d8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80124dc:	e004      	b.n	80124e8 <GUI_DispStringInRectWrap+0x110>
 80124de:	88a3      	ldrh	r3, [r4, #4]
 80124e0:	3301      	adds	r3, #1
 80124e2:	1a18      	subs	r0, r3, r0
 80124e4:	f8ad 0018 	strh.w	r0, [sp, #24]
 80124e8:	4628      	mov	r0, r5
 80124ea:	4611      	mov	r1, r2
 80124ec:	aa06      	add	r2, sp, #24
 80124ee:	f000 fc6f 	bl	8012dd0 <GUI__DispLine>
 80124f2:	4628      	mov	r0, r5
 80124f4:	9901      	ldr	r1, [sp, #4]
 80124f6:	9a03      	ldr	r2, [sp, #12]
 80124f8:	f005 fd56 	bl	8017fa8 <GUI__WrapGetNumBytesToNextLine>
 80124fc:	4405      	add	r5, r0
 80124fe:	fa1f f68b 	uxth.w	r6, fp
 8012502:	782b      	ldrb	r3, [r5, #0]
 8012504:	2b00      	cmp	r3, #0
 8012506:	d1b7      	bne.n	8012478 <GUI_DispStringInRectWrap+0xa0>
 8012508:	4638      	mov	r0, r7
 801250a:	f7f9 fda9 	bl	800c060 <WM_SetUserClipRect>
 801250e:	b009      	add	sp, #36	; 0x24
 8012510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012514 <GUI_DispStringAt>:
 8012514:	4b02      	ldr	r3, [pc, #8]	; (8012520 <GUI_DispStringAt+0xc>)
 8012516:	681b      	ldr	r3, [r3, #0]
 8012518:	8459      	strh	r1, [r3, #34]	; 0x22
 801251a:	849a      	strh	r2, [r3, #36]	; 0x24
 801251c:	f000 b802 	b.w	8012524 <GUI_DispString>
 8012520:	2000016c 	.word	0x2000016c

08012524 <GUI_DispString>:
 8012524:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012528:	4604      	mov	r4, r0
 801252a:	2800      	cmp	r0, #0
 801252c:	d079      	beq.n	8012622 <GUI_DispString+0xfe>
 801252e:	4d3e      	ldr	r5, [pc, #248]	; (8012628 <GUI_DispString+0x104>)
 8012530:	f000 fcba 	bl	8012ea8 <GUI_GetFontDistY>
 8012534:	682b      	ldr	r3, [r5, #0]
 8012536:	4680      	mov	r8, r0
 8012538:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 801253c:	f000 fc9c 	bl	8012e78 <GUI_GetYAdjust>
 8012540:	682b      	ldr	r3, [r5, #0]
 8012542:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 8012544:	b287      	uxth	r7, r0
 8012546:	1bd2      	subs	r2, r2, r7
 8012548:	849a      	strh	r2, [r3, #36]	; 0x24
 801254a:	7823      	ldrb	r3, [r4, #0]
 801254c:	2b00      	cmp	r3, #0
 801254e:	d05d      	beq.n	801260c <GUI_DispString+0xe8>
 8012550:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012554:	4620      	mov	r0, r4
 8012556:	f000 fbdd 	bl	8012d14 <GUI__GetLineNumChars>
 801255a:	4606      	mov	r6, r0
 801255c:	4631      	mov	r1, r6
 801255e:	4620      	mov	r0, r4
 8012560:	f000 fc06 	bl	8012d70 <GUI__GetLineDistX>
 8012564:	682b      	ldr	r3, [r5, #0]
 8012566:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8012568:	f002 0203 	and.w	r2, r2, #3
 801256c:	2a01      	cmp	r2, #1
 801256e:	d005      	beq.n	801257c <GUI_DispString+0x58>
 8012570:	2a02      	cmp	r2, #2
 8012572:	bf14      	ite	ne
 8012574:	2200      	movne	r2, #0
 8012576:	fb90 f2f2 	sdiveq	r2, r0, r2
 801257a:	e000      	b.n	801257e <GUI_DispString+0x5a>
 801257c:	4602      	mov	r2, r0
 801257e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012580:	1a8a      	subs	r2, r1, r2
 8012582:	b292      	uxth	r2, r2
 8012584:	b291      	uxth	r1, r2
 8012586:	8459      	strh	r1, [r3, #34]	; 0x22
 8012588:	fa1f fa80 	uxth.w	sl, r0
 801258c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 801258e:	f8ad 1000 	strh.w	r1, [sp]
 8012592:	f10a 31ff 	add.w	r1, sl, #4294967295
 8012596:	440a      	add	r2, r1
 8012598:	f8ad 3002 	strh.w	r3, [sp, #2]
 801259c:	fa1f fb88 	uxth.w	fp, r8
 80125a0:	3b01      	subs	r3, #1
 80125a2:	445b      	add	r3, fp
 80125a4:	f8ad 2004 	strh.w	r2, [sp, #4]
 80125a8:	4620      	mov	r0, r4
 80125aa:	4631      	mov	r1, r6
 80125ac:	466a      	mov	r2, sp
 80125ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 80125b2:	f000 fc0d 	bl	8012dd0 <GUI__DispLine>
 80125b6:	682b      	ldr	r3, [r5, #0]
 80125b8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80125bc:	849a      	strh	r2, [r3, #36]	; 0x24
 80125be:	4620      	mov	r0, r4
 80125c0:	4631      	mov	r1, r6
 80125c2:	f7fe fdc5 	bl	8011150 <GUI_UC__NumChars2NumBytes>
 80125c6:	5c23      	ldrb	r3, [r4, r0]
 80125c8:	2b0a      	cmp	r3, #10
 80125ca:	eb04 0200 	add.w	r2, r4, r0
 80125ce:	d001      	beq.n	80125d4 <GUI_DispString+0xb0>
 80125d0:	2b0d      	cmp	r3, #13
 80125d2:	d112      	bne.n	80125fa <GUI_DispString+0xd6>
 80125d4:	682b      	ldr	r3, [r5, #0]
 80125d6:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 80125d8:	f001 0103 	and.w	r1, r1, #3
 80125dc:	3901      	subs	r1, #1
 80125de:	2901      	cmp	r1, #1
 80125e0:	bf8a      	itet	hi
 80125e2:	8c19      	ldrhhi	r1, [r3, #32]
 80125e4:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 80125e8:	8459      	strhhi	r1, [r3, #34]	; 0x22
 80125ea:	7811      	ldrb	r1, [r2, #0]
 80125ec:	290a      	cmp	r1, #10
 80125ee:	d10b      	bne.n	8012608 <GUI_DispString+0xe4>
 80125f0:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 80125f2:	448b      	add	fp, r1
 80125f4:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 80125f8:	e006      	b.n	8012608 <GUI_DispString+0xe4>
 80125fa:	4b0b      	ldr	r3, [pc, #44]	; (8012628 <GUI_DispString+0x104>)
 80125fc:	f8bd 0000 	ldrh.w	r0, [sp]
 8012600:	681b      	ldr	r3, [r3, #0]
 8012602:	4482      	add	sl, r0
 8012604:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 8012608:	7813      	ldrb	r3, [r2, #0]
 801260a:	b943      	cbnz	r3, 801261e <GUI_DispString+0xfa>
 801260c:	682b      	ldr	r3, [r5, #0]
 801260e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 8012610:	4417      	add	r7, r2
 8012612:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8012614:	849f      	strh	r7, [r3, #36]	; 0x24
 8012616:	f022 0203 	bic.w	r2, r2, #3
 801261a:	859a      	strh	r2, [r3, #44]	; 0x2c
 801261c:	e001      	b.n	8012622 <GUI_DispString+0xfe>
 801261e:	1c54      	adds	r4, r2, #1
 8012620:	e793      	b.n	801254a <GUI_DispString+0x26>
 8012622:	b003      	add	sp, #12
 8012624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012628:	2000016c 	.word	0x2000016c

0801262c <GUI_DEVICE__GetpDriver>:
 801262c:	2801      	cmp	r0, #1
 801262e:	dc09      	bgt.n	8012644 <GUI_DEVICE__GetpDriver+0x18>
 8012630:	4b05      	ldr	r3, [pc, #20]	; (8012648 <GUI_DEVICE__GetpDriver+0x1c>)
 8012632:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8012636:	b120      	cbz	r0, 8012642 <GUI_DEVICE__GetpDriver+0x16>
 8012638:	68c3      	ldr	r3, [r0, #12]
 801263a:	681b      	ldr	r3, [r3, #0]
 801263c:	b11b      	cbz	r3, 8012646 <GUI_DEVICE__GetpDriver+0x1a>
 801263e:	6800      	ldr	r0, [r0, #0]
 8012640:	e7f9      	b.n	8012636 <GUI_DEVICE__GetpDriver+0xa>
 8012642:	4770      	bx	lr
 8012644:	2000      	movs	r0, #0
 8012646:	4770      	bx	lr
 8012648:	20019ca0 	.word	0x20019ca0

0801264c <GUI_DEVICE_Delete>:
 801264c:	f000 bd34 	b.w	80130b8 <GUI_ALLOC_FreeFixedBlock>

08012650 <GUI_DEVICE_Create>:
 8012650:	2b01      	cmp	r3, #1
 8012652:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012654:	4606      	mov	r6, r0
 8012656:	460d      	mov	r5, r1
 8012658:	4617      	mov	r7, r2
 801265a:	461c      	mov	r4, r3
 801265c:	dd01      	ble.n	8012662 <GUI_DEVICE_Create+0x12>
 801265e:	2000      	movs	r0, #0
 8012660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012662:	201c      	movs	r0, #28
 8012664:	f000 fe94 	bl	8013390 <GUI_ALLOC_GetFixedBlock>
 8012668:	2800      	cmp	r0, #0
 801266a:	d0f8      	beq.n	801265e <GUI_DEVICE_Create+0xe>
 801266c:	b10d      	cbz	r5, 8012672 <GUI_DEVICE_Create+0x22>
 801266e:	6105      	str	r5, [r0, #16]
 8012670:	e009      	b.n	8012686 <GUI_DEVICE_Create+0x36>
 8012672:	4b09      	ldr	r3, [pc, #36]	; (8012698 <GUI_DEVICE_Create+0x48>)
 8012674:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 8012678:	b129      	cbz	r1, 8012686 <GUI_DEVICE_Create+0x36>
 801267a:	680b      	ldr	r3, [r1, #0]
 801267c:	b10b      	cbz	r3, 8012682 <GUI_DEVICE_Create+0x32>
 801267e:	4619      	mov	r1, r3
 8012680:	e7fb      	b.n	801267a <GUI_DEVICE_Create+0x2a>
 8012682:	690b      	ldr	r3, [r1, #16]
 8012684:	6103      	str	r3, [r0, #16]
 8012686:	2300      	movs	r3, #0
 8012688:	6083      	str	r3, [r0, #8]
 801268a:	6184      	str	r4, [r0, #24]
 801268c:	8287      	strh	r7, [r0, #20]
 801268e:	60c6      	str	r6, [r0, #12]
 8012690:	6003      	str	r3, [r0, #0]
 8012692:	6043      	str	r3, [r0, #4]
 8012694:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012696:	bf00      	nop
 8012698:	20019ca0 	.word	0x20019ca0

0801269c <GUI_DEVICE_Unlink>:
 801269c:	4b09      	ldr	r3, [pc, #36]	; (80126c4 <GUI_DEVICE_Unlink+0x28>)
 801269e:	6982      	ldr	r2, [r0, #24]
 80126a0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80126a4:	4281      	cmp	r1, r0
 80126a6:	bf04      	itt	eq
 80126a8:	6801      	ldreq	r1, [r0, #0]
 80126aa:	f843 1022 	streq.w	r1, [r3, r2, lsl #2]
 80126ae:	6843      	ldr	r3, [r0, #4]
 80126b0:	b10b      	cbz	r3, 80126b6 <GUI_DEVICE_Unlink+0x1a>
 80126b2:	6802      	ldr	r2, [r0, #0]
 80126b4:	601a      	str	r2, [r3, #0]
 80126b6:	6802      	ldr	r2, [r0, #0]
 80126b8:	b102      	cbz	r2, 80126bc <GUI_DEVICE_Unlink+0x20>
 80126ba:	6053      	str	r3, [r2, #4]
 80126bc:	2300      	movs	r3, #0
 80126be:	6003      	str	r3, [r0, #0]
 80126c0:	6043      	str	r3, [r0, #4]
 80126c2:	4770      	bx	lr
 80126c4:	20019ca0 	.word	0x20019ca0

080126c8 <GUI_DEVICE_Link>:
 80126c8:	b570      	push	{r4, r5, r6, lr}
 80126ca:	b338      	cbz	r0, 801271c <GUI_DEVICE_Link+0x54>
 80126cc:	6982      	ldr	r2, [r0, #24]
 80126ce:	2a01      	cmp	r2, #1
 80126d0:	dc24      	bgt.n	801271c <GUI_DEVICE_Link+0x54>
 80126d2:	4919      	ldr	r1, [pc, #100]	; (8012738 <GUI_DEVICE_Link+0x70>)
 80126d4:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 80126d8:	460d      	mov	r5, r1
 80126da:	b913      	cbnz	r3, 80126e2 <GUI_DEVICE_Link+0x1a>
 80126dc:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 80126e0:	e01a      	b.n	8012718 <GUI_DEVICE_Link+0x50>
 80126e2:	6859      	ldr	r1, [r3, #4]
 80126e4:	b109      	cbz	r1, 80126ea <GUI_DEVICE_Link+0x22>
 80126e6:	460b      	mov	r3, r1
 80126e8:	e7fb      	b.n	80126e2 <GUI_DEVICE_Link+0x1a>
 80126ea:	68c1      	ldr	r1, [r0, #12]
 80126ec:	680e      	ldr	r6, [r1, #0]
 80126ee:	68d9      	ldr	r1, [r3, #12]
 80126f0:	680c      	ldr	r4, [r1, #0]
 80126f2:	42b4      	cmp	r4, r6
 80126f4:	dd03      	ble.n	80126fe <GUI_DEVICE_Link+0x36>
 80126f6:	681b      	ldr	r3, [r3, #0]
 80126f8:	2b00      	cmp	r3, #0
 80126fa:	d1f8      	bne.n	80126ee <GUI_DEVICE_Link+0x26>
 80126fc:	e00e      	b.n	801271c <GUI_DEVICE_Link+0x54>
 80126fe:	d102      	bne.n	8012706 <GUI_DEVICE_Link+0x3e>
 8012700:	8a81      	ldrh	r1, [r0, #20]
 8012702:	2901      	cmp	r1, #1
 8012704:	d011      	beq.n	801272a <GUI_DEVICE_Link+0x62>
 8012706:	6859      	ldr	r1, [r3, #4]
 8012708:	b199      	cbz	r1, 8012732 <GUI_DEVICE_Link+0x6a>
 801270a:	6008      	str	r0, [r1, #0]
 801270c:	6041      	str	r1, [r0, #4]
 801270e:	6058      	str	r0, [r3, #4]
 8012710:	4298      	cmp	r0, r3
 8012712:	bf08      	it	eq
 8012714:	2300      	moveq	r3, #0
 8012716:	6003      	str	r3, [r0, #0]
 8012718:	2000      	movs	r0, #0
 801271a:	bd70      	pop	{r4, r5, r6, pc}
 801271c:	2001      	movs	r0, #1
 801271e:	bd70      	pop	{r4, r5, r6, pc}
 8012720:	68cb      	ldr	r3, [r1, #12]
 8012722:	681b      	ldr	r3, [r3, #0]
 8012724:	42a3      	cmp	r3, r4
 8012726:	460b      	mov	r3, r1
 8012728:	dbed      	blt.n	8012706 <GUI_DEVICE_Link+0x3e>
 801272a:	6819      	ldr	r1, [r3, #0]
 801272c:	2900      	cmp	r1, #0
 801272e:	d1f7      	bne.n	8012720 <GUI_DEVICE_Link+0x58>
 8012730:	e7e9      	b.n	8012706 <GUI_DEVICE_Link+0x3e>
 8012732:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 8012736:	e7ea      	b.n	801270e <GUI_DEVICE_Link+0x46>
 8012738:	20019ca0 	.word	0x20019ca0

0801273c <GUI_DEVICE_CreateAndLink>:
 801273c:	b538      	push	{r3, r4, r5, lr}
 801273e:	461d      	mov	r5, r3
 8012740:	f7ff ff86 	bl	8012650 <GUI_DEVICE_Create>
 8012744:	4604      	mov	r4, r0
 8012746:	b148      	cbz	r0, 801275c <GUI_DEVICE_CreateAndLink+0x20>
 8012748:	f7ff ffbe 	bl	80126c8 <GUI_DEVICE_Link>
 801274c:	68e3      	ldr	r3, [r4, #12]
 801274e:	681b      	ldr	r3, [r3, #0]
 8012750:	b923      	cbnz	r3, 801275c <GUI_DEVICE_CreateAndLink+0x20>
 8012752:	4b03      	ldr	r3, [pc, #12]	; (8012760 <GUI_DEVICE_CreateAndLink+0x24>)
 8012754:	3516      	adds	r5, #22
 8012756:	681b      	ldr	r3, [r3, #0]
 8012758:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 801275c:	4620      	mov	r0, r4
 801275e:	bd38      	pop	{r3, r4, r5, pc}
 8012760:	2000016c 	.word	0x2000016c

08012764 <_OnExit>:
 8012764:	b510      	push	{r4, lr}
 8012766:	4b07      	ldr	r3, [pc, #28]	; (8012784 <_OnExit+0x20>)
 8012768:	4807      	ldr	r0, [pc, #28]	; (8012788 <_OnExit+0x24>)
 801276a:	2400      	movs	r4, #0
 801276c:	4621      	mov	r1, r4
 801276e:	2270      	movs	r2, #112	; 0x70
 8012770:	601c      	str	r4, [r3, #0]
 8012772:	f7fe f90f 	bl	8010994 <GUI__memset>
 8012776:	4621      	mov	r1, r4
 8012778:	4804      	ldr	r0, [pc, #16]	; (801278c <_OnExit+0x28>)
 801277a:	2208      	movs	r2, #8
 801277c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012780:	f7fe b908 	b.w	8010994 <GUI__memset>
 8012784:	20019684 	.word	0x20019684
 8012788:	2001960c 	.word	0x2001960c
 801278c:	20019ca0 	.word	0x20019ca0

08012790 <_InitContext>:
 8012790:	b538      	push	{r3, r4, r5, lr}
 8012792:	4d19      	ldr	r5, [pc, #100]	; (80127f8 <_InitContext+0x68>)
 8012794:	682b      	ldr	r3, [r5, #0]
 8012796:	1d1a      	adds	r2, r3, #4
 8012798:	63da      	str	r2, [r3, #60]	; 0x3c
 801279a:	f103 0208 	add.w	r2, r3, #8
 801279e:	639b      	str	r3, [r3, #56]	; 0x38
 80127a0:	641b      	str	r3, [r3, #64]	; 0x40
 80127a2:	6142      	str	r2, [r0, #20]
 80127a4:	7c5a      	ldrb	r2, [r3, #17]
 80127a6:	4b15      	ldr	r3, [pc, #84]	; (80127fc <_InitContext+0x6c>)
 80127a8:	4604      	mov	r4, r0
 80127aa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80127ae:	68c3      	ldr	r3, [r0, #12]
 80127b0:	f104 0108 	add.w	r1, r4, #8
 80127b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80127b6:	4798      	blx	r3
 80127b8:	4b11      	ldr	r3, [pc, #68]	; (8012800 <_InitContext+0x70>)
 80127ba:	6663      	str	r3, [r4, #100]	; 0x64
 80127bc:	4b11      	ldr	r3, [pc, #68]	; (8012804 <_InitContext+0x74>)
 80127be:	681b      	ldr	r3, [r3, #0]
 80127c0:	61e3      	str	r3, [r4, #28]
 80127c2:	682b      	ldr	r3, [r5, #0]
 80127c4:	3308      	adds	r3, #8
 80127c6:	6163      	str	r3, [r4, #20]
 80127c8:	2301      	movs	r3, #1
 80127ca:	7623      	strb	r3, [r4, #24]
 80127cc:	f7fa f848 	bl	800c860 <WM_GetDesktopWindow>
 80127d0:	2303      	movs	r3, #3
 80127d2:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 80127d6:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80127da:	6323      	str	r3, [r4, #48]	; 0x30
 80127dc:	6363      	str	r3, [r4, #52]	; 0x34
 80127de:	64a0      	str	r0, [r4, #72]	; 0x48
 80127e0:	2000      	movs	r0, #0
 80127e2:	f7fe f899 	bl	8010918 <LCD_SetBkColor>
 80127e6:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80127ea:	f7fe f89d 	bl	8010928 <LCD_SetColor>
 80127ee:	4b06      	ldr	r3, [pc, #24]	; (8012808 <_InitContext+0x78>)
 80127f0:	4a06      	ldr	r2, [pc, #24]	; (801280c <_InitContext+0x7c>)
 80127f2:	601a      	str	r2, [r3, #0]
 80127f4:	bd38      	pop	{r3, r4, r5, pc}
 80127f6:	bf00      	nop
 80127f8:	2000016c 	.word	0x2000016c
 80127fc:	20019ca0 	.word	0x20019ca0
 8012800:	08020fc8 	.word	0x08020fc8
 8012804:	20000170 	.word	0x20000170
 8012808:	20019c98 	.word	0x20019c98
 801280c:	08021bcc 	.word	0x08021bcc

08012810 <GUI_SetDefaultFont>:
 8012810:	4b01      	ldr	r3, [pc, #4]	; (8012818 <GUI_SetDefaultFont+0x8>)
 8012812:	6018      	str	r0, [r3, #0]
 8012814:	4770      	bx	lr
 8012816:	bf00      	nop
 8012818:	20000170 	.word	0x20000170

0801281c <GUI_ClearRect>:
 801281c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012820:	4607      	mov	r7, r0
 8012822:	2004      	movs	r0, #4
 8012824:	469a      	mov	sl, r3
 8012826:	460e      	mov	r6, r1
 8012828:	4691      	mov	r9, r2
 801282a:	f7fd fd2d 	bl	8010288 <LCD_SetDrawMode>
 801282e:	4b13      	ldr	r3, [pc, #76]	; (801287c <GUI_ClearRect+0x60>)
 8012830:	681c      	ldr	r4, [r3, #0]
 8012832:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8012834:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8012836:	442f      	add	r7, r5
 8012838:	4426      	add	r6, r4
 801283a:	4680      	mov	r8, r0
 801283c:	444d      	add	r5, r9
 801283e:	4454      	add	r4, sl
 8012840:	4668      	mov	r0, sp
 8012842:	f8ad 7000 	strh.w	r7, [sp]
 8012846:	f8ad 5004 	strh.w	r5, [sp, #4]
 801284a:	f8ad 6002 	strh.w	r6, [sp, #2]
 801284e:	f8ad 4006 	strh.w	r4, [sp, #6]
 8012852:	f7fa ffcf 	bl	800d7f4 <WM__InitIVRSearch>
 8012856:	b928      	cbnz	r0, 8012864 <GUI_ClearRect+0x48>
 8012858:	4640      	mov	r0, r8
 801285a:	f7fd fd15 	bl	8010288 <LCD_SetDrawMode>
 801285e:	b002      	add	sp, #8
 8012860:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012864:	4638      	mov	r0, r7
 8012866:	4631      	mov	r1, r6
 8012868:	462a      	mov	r2, r5
 801286a:	4623      	mov	r3, r4
 801286c:	f7fd fd8e 	bl	801038c <LCD_FillRect>
 8012870:	f7fa fefe 	bl	800d670 <WM__GetNextIVR>
 8012874:	2800      	cmp	r0, #0
 8012876:	d1f5      	bne.n	8012864 <GUI_ClearRect+0x48>
 8012878:	e7ee      	b.n	8012858 <GUI_ClearRect+0x3c>
 801287a:	bf00      	nop
 801287c:	2000016c 	.word	0x2000016c

08012880 <GUI_Clear>:
 8012880:	b510      	push	{r4, lr}
 8012882:	2000      	movs	r0, #0
 8012884:	4601      	mov	r1, r0
 8012886:	f7ff fc8b 	bl	80121a0 <GUI_GotoXY>
 801288a:	4804      	ldr	r0, [pc, #16]	; (801289c <GUI_Clear+0x1c>)
 801288c:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8012890:	4601      	mov	r1, r0
 8012892:	4613      	mov	r3, r2
 8012894:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012898:	f7ff bfc0 	b.w	801281c <GUI_ClearRect>
 801289c:	ffffc001 	.word	0xffffc001

080128a0 <GUI__RegisterExit>:
 80128a0:	b480      	push	{r7}
 80128a2:	b083      	sub	sp, #12
 80128a4:	af00      	add	r7, sp, #0
 80128a6:	6078      	str	r0, [r7, #4]
 80128a8:	4b05      	ldr	r3, [pc, #20]	; (80128c0 <GUI__RegisterExit+0x20>)
 80128aa:	681a      	ldr	r2, [r3, #0]
 80128ac:	687b      	ldr	r3, [r7, #4]
 80128ae:	605a      	str	r2, [r3, #4]
 80128b0:	4b03      	ldr	r3, [pc, #12]	; (80128c0 <GUI__RegisterExit+0x20>)
 80128b2:	687a      	ldr	r2, [r7, #4]
 80128b4:	601a      	str	r2, [r3, #0]
 80128b6:	370c      	adds	r7, #12
 80128b8:	46bd      	mov	sp, r7
 80128ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80128be:	4770      	bx	lr
 80128c0:	20019608 	.word	0x20019608

080128c4 <GUI__Config>:
 80128c4:	b508      	push	{r3, lr}
 80128c6:	4b08      	ldr	r3, [pc, #32]	; (80128e8 <GUI__Config+0x24>)
 80128c8:	681a      	ldr	r2, [r3, #0]
 80128ca:	b962      	cbnz	r2, 80128e6 <GUI__Config+0x22>
 80128cc:	2201      	movs	r2, #1
 80128ce:	601a      	str	r2, [r3, #0]
 80128d0:	f7f5 ff8e 	bl	80087f0 <GUI_X_Config>
 80128d4:	f7f5 ffba 	bl	800884c <LCD_X_Config>
 80128d8:	4804      	ldr	r0, [pc, #16]	; (80128ec <GUI__Config+0x28>)
 80128da:	4b05      	ldr	r3, [pc, #20]	; (80128f0 <GUI__Config+0x2c>)
 80128dc:	6003      	str	r3, [r0, #0]
 80128de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80128e2:	f7ff bfdd 	b.w	80128a0 <GUI__RegisterExit>
 80128e6:	bd08      	pop	{r3, pc}
 80128e8:	20019684 	.word	0x20019684
 80128ec:	2001967c 	.word	0x2001967c
 80128f0:	08012765 	.word	0x08012765

080128f4 <GUI_Init>:
 80128f4:	b590      	push	{r4, r7, lr}
 80128f6:	b083      	sub	sp, #12
 80128f8:	af00      	add	r7, sp, #0
 80128fa:	4b20      	ldr	r3, [pc, #128]	; (801297c <GUI_Init+0x88>)
 80128fc:	4a1f      	ldr	r2, [pc, #124]	; (801297c <GUI_Init+0x88>)
 80128fe:	6812      	ldr	r2, [r2, #0]
 8012900:	f022 0201 	bic.w	r2, r2, #1
 8012904:	601a      	str	r2, [r3, #0]
 8012906:	4b1e      	ldr	r3, [pc, #120]	; (8012980 <GUI_Init+0x8c>)
 8012908:	2201      	movs	r2, #1
 801290a:	601a      	str	r2, [r3, #0]
 801290c:	4b1d      	ldr	r3, [pc, #116]	; (8012984 <GUI_Init+0x90>)
 801290e:	4a1e      	ldr	r2, [pc, #120]	; (8012988 <GUI_Init+0x94>)
 8012910:	601a      	str	r2, [r3, #0]
 8012912:	4b1c      	ldr	r3, [pc, #112]	; (8012984 <GUI_Init+0x90>)
 8012914:	681a      	ldr	r2, [r3, #0]
 8012916:	4b1d      	ldr	r3, [pc, #116]	; (801298c <GUI_Init+0x98>)
 8012918:	429a      	cmp	r2, r3
 801291a:	d000      	beq.n	801291e <GUI_Init+0x2a>
 801291c:	e7fe      	b.n	801291c <GUI_Init+0x28>
 801291e:	f7ff ffd1 	bl	80128c4 <GUI__Config>
 8012922:	4b1b      	ldr	r3, [pc, #108]	; (8012990 <GUI_Init+0x9c>)
 8012924:	222e      	movs	r2, #46	; 0x2e
 8012926:	701a      	strb	r2, [r3, #0]
 8012928:	f7f5 ff82 	bl	8008830 <GUI_X_Init>
 801292c:	4819      	ldr	r0, [pc, #100]	; (8012994 <GUI_Init+0xa0>)
 801292e:	f7ff ff2f 	bl	8012790 <_InitContext>
 8012932:	f7fd ff4f 	bl	80107d4 <emWin_LCD_Init>
 8012936:	6078      	str	r0, [r7, #4]
 8012938:	f7fd fc30 	bl	801019c <LCD_GetXSizeDisplay>
 801293c:	4603      	mov	r3, r0
 801293e:	2b00      	cmp	r3, #0
 8012940:	d004      	beq.n	801294c <GUI_Init+0x58>
 8012942:	f7fd fc31 	bl	80101a8 <LCD_GetYSizeDisplay>
 8012946:	4603      	mov	r3, r0
 8012948:	2b00      	cmp	r3, #0
 801294a:	d109      	bne.n	8012960 <GUI_Init+0x6c>
 801294c:	f7fd fc12 	bl	8010174 <LCD_GetXSizeMax>
 8012950:	4604      	mov	r4, r0
 8012952:	f7fd fc12 	bl	801017a <LCD_GetYSizeMax>
 8012956:	4603      	mov	r3, r0
 8012958:	4620      	mov	r0, r4
 801295a:	4619      	mov	r1, r3
 801295c:	f7fd fc14 	bl	8010188 <LCD_SetDisplaySize>
 8012960:	2000      	movs	r0, #0
 8012962:	2100      	movs	r1, #0
 8012964:	f006 f85a 	bl	8018a1c <GUI_SetOrg>
 8012968:	f7fb f982 	bl	800dc70 <WM_Init>
 801296c:	4b0a      	ldr	r3, [pc, #40]	; (8012998 <GUI_Init+0xa4>)
 801296e:	2201      	movs	r2, #1
 8012970:	701a      	strb	r2, [r3, #0]
 8012972:	687b      	ldr	r3, [r7, #4]
 8012974:	4618      	mov	r0, r3
 8012976:	370c      	adds	r7, #12
 8012978:	46bd      	mov	sp, r7
 801297a:	bd90      	pop	{r4, r7, pc}
 801297c:	e0002000 	.word	0xe0002000
 8012980:	40023008 	.word	0x40023008
 8012984:	40023000 	.word	0x40023000
 8012988:	f407a5c2 	.word	0xf407a5c2
 801298c:	b5e8b5cd 	.word	0xb5e8b5cd
 8012990:	20019c72 	.word	0x20019c72
 8012994:	2001960c 	.word	0x2001960c
 8012998:	20019c90 	.word	0x20019c90

0801299c <GUIPROP__FindChar>:
 801299c:	b138      	cbz	r0, 80129ae <GUIPROP__FindChar+0x12>
 801299e:	8803      	ldrh	r3, [r0, #0]
 80129a0:	428b      	cmp	r3, r1
 80129a2:	d802      	bhi.n	80129aa <GUIPROP__FindChar+0xe>
 80129a4:	8843      	ldrh	r3, [r0, #2]
 80129a6:	428b      	cmp	r3, r1
 80129a8:	d201      	bcs.n	80129ae <GUIPROP__FindChar+0x12>
 80129aa:	6880      	ldr	r0, [r0, #8]
 80129ac:	e7f6      	b.n	801299c <GUIPROP__FindChar>
 80129ae:	4770      	bx	lr

080129b0 <GUIPROP_DispChar>:
 80129b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129b4:	4c38      	ldr	r4, [pc, #224]	; (8012a98 <GUIPROP_DispChar+0xe8>)
 80129b6:	6823      	ldr	r3, [r4, #0]
 80129b8:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 80129bc:	69db      	ldr	r3, [r3, #28]
 80129be:	4605      	mov	r5, r0
 80129c0:	b089      	sub	sp, #36	; 0x24
 80129c2:	69d8      	ldr	r0, [r3, #28]
 80129c4:	4629      	mov	r1, r5
 80129c6:	f7ff ffe9 	bl	801299c <GUIPROP__FindChar>
 80129ca:	2800      	cmp	r0, #0
 80129cc:	d061      	beq.n	8012a92 <GUIPROP_DispChar+0xe2>
 80129ce:	f8b0 8000 	ldrh.w	r8, [r0]
 80129d2:	6847      	ldr	r7, [r0, #4]
 80129d4:	ebc8 0805 	rsb	r8, r8, r5
 80129d8:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 80129dc:	4648      	mov	r0, r9
 80129de:	f896 b002 	ldrb.w	fp, [r6, #2]
 80129e2:	f7fd fc51 	bl	8010288 <LCD_SetDrawMode>
 80129e6:	6825      	ldr	r5, [r4, #0]
 80129e8:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 80129ec:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 80129f0:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 80129f4:	f89e c01a 	ldrb.w	ip, [lr, #26]
 80129f8:	f89e 3018 	ldrb.w	r3, [lr, #24]
 80129fc:	9306      	str	r3, [sp, #24]
 80129fe:	4682      	mov	sl, r0
 8012a00:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 8012a04:	f8cd c000 	str.w	ip, [sp]
 8012a08:	f89e e01b 	ldrb.w	lr, [lr, #27]
 8012a0c:	f8cd e004 	str.w	lr, [sp, #4]
 8012a10:	f04f 0e01 	mov.w	lr, #1
 8012a14:	f8cd b00c 	str.w	fp, [sp, #12]
 8012a18:	f8cd e008 	str.w	lr, [sp, #8]
 8012a1c:	6873      	ldr	r3, [r6, #4]
 8012a1e:	9304      	str	r3, [sp, #16]
 8012a20:	6bad      	ldr	r5, [r5, #56]	; 0x38
 8012a22:	9b06      	ldr	r3, [sp, #24]
 8012a24:	9505      	str	r5, [sp, #20]
 8012a26:	f7fd fdb9 	bl	801059c <LCD_DrawBitmap>
 8012a2a:	6823      	ldr	r3, [r4, #0]
 8012a2c:	69da      	ldr	r2, [r3, #28]
 8012a2e:	f892 b019 	ldrb.w	fp, [r2, #25]
 8012a32:	7e11      	ldrb	r1, [r2, #24]
 8012a34:	458b      	cmp	fp, r1
 8012a36:	d920      	bls.n	8012a7a <GUIPROP_DispChar+0xca>
 8012a38:	f1b9 0f02 	cmp.w	r9, #2
 8012a3c:	7ed5      	ldrb	r5, [r2, #27]
 8012a3e:	d01c      	beq.n	8012a7a <GUIPROP_DispChar+0xca>
 8012a40:	9107      	str	r1, [sp, #28]
 8012a42:	f006 f828 	bl	8018a96 <GUI_GetColor>
 8012a46:	4681      	mov	r9, r0
 8012a48:	f006 f81e 	bl	8018a88 <GUI_GetBkColor>
 8012a4c:	f7ff f958 	bl	8011d00 <GUI_SetColor>
 8012a50:	6824      	ldr	r4, [r4, #0]
 8012a52:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 8012a56:	69e2      	ldr	r2, [r4, #28]
 8012a58:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 8012a5c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8012a60:	7ed2      	ldrb	r2, [r2, #27]
 8012a62:	9907      	ldr	r1, [sp, #28]
 8012a64:	fb07 0202 	mla	r2, r7, r2, r0
 8012a68:	fb01 3105 	mla	r1, r1, r5, r3
 8012a6c:	fb0b 3305 	mla	r3, fp, r5, r3
 8012a70:	f7fd fc8c 	bl	801038c <LCD_FillRect>
 8012a74:	4648      	mov	r0, r9
 8012a76:	f7ff f943 	bl	8011d00 <GUI_SetColor>
 8012a7a:	4650      	mov	r0, sl
 8012a7c:	f7fd fc04 	bl	8010288 <LCD_SetDrawMode>
 8012a80:	4b05      	ldr	r3, [pc, #20]	; (8012a98 <GUIPROP_DispChar+0xe8>)
 8012a82:	681b      	ldr	r3, [r3, #0]
 8012a84:	69da      	ldr	r2, [r3, #28]
 8012a86:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012a88:	7e90      	ldrb	r0, [r2, #26]
 8012a8a:	7872      	ldrb	r2, [r6, #1]
 8012a8c:	fb00 1202 	mla	r2, r0, r2, r1
 8012a90:	845a      	strh	r2, [r3, #34]	; 0x22
 8012a92:	b009      	add	sp, #36	; 0x24
 8012a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a98:	2000016c 	.word	0x2000016c

08012a9c <GUIPROP_GetCharDistX>:
 8012a9c:	4b0d      	ldr	r3, [pc, #52]	; (8012ad4 <GUIPROP_GetCharDistX+0x38>)
 8012a9e:	b570      	push	{r4, r5, r6, lr}
 8012aa0:	681b      	ldr	r3, [r3, #0]
 8012aa2:	69dd      	ldr	r5, [r3, #28]
 8012aa4:	4606      	mov	r6, r0
 8012aa6:	460c      	mov	r4, r1
 8012aa8:	69e8      	ldr	r0, [r5, #28]
 8012aaa:	4631      	mov	r1, r6
 8012aac:	f7ff ff76 	bl	801299c <GUIPROP__FindChar>
 8012ab0:	b170      	cbz	r0, 8012ad0 <GUIPROP_GetCharDistX+0x34>
 8012ab2:	8803      	ldrh	r3, [r0, #0]
 8012ab4:	6842      	ldr	r2, [r0, #4]
 8012ab6:	1af6      	subs	r6, r6, r3
 8012ab8:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 8012abc:	7858      	ldrb	r0, [r3, #1]
 8012abe:	7eab      	ldrb	r3, [r5, #26]
 8012ac0:	fb10 f003 	smulbb	r0, r0, r3
 8012ac4:	b124      	cbz	r4, 8012ad0 <GUIPROP_GetCharDistX+0x34>
 8012ac6:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 8012aca:	fb12 f303 	smulbb	r3, r2, r3
 8012ace:	6023      	str	r3, [r4, #0]
 8012ad0:	bd70      	pop	{r4, r5, r6, pc}
 8012ad2:	bf00      	nop
 8012ad4:	2000016c 	.word	0x2000016c

08012ad8 <GUIPROP_GetFontInfo>:
 8012ad8:	2301      	movs	r3, #1
 8012ada:	800b      	strh	r3, [r1, #0]
 8012adc:	4770      	bx	lr

08012ade <GUIPROP_IsInFont>:
 8012ade:	b508      	push	{r3, lr}
 8012ae0:	69c0      	ldr	r0, [r0, #28]
 8012ae2:	f7ff ff5b 	bl	801299c <GUIPROP__FindChar>
 8012ae6:	3000      	adds	r0, #0
 8012ae8:	bf18      	it	ne
 8012aea:	2001      	movne	r0, #1
 8012aec:	bd08      	pop	{r3, pc}
	...

08012af0 <GUIMONO_DispChar>:
 8012af0:	4b52      	ldr	r3, [pc, #328]	; (8012c3c <GUIMONO_DispChar+0x14c>)
 8012af2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012af6:	681b      	ldr	r3, [r3, #0]
 8012af8:	69d9      	ldr	r1, [r3, #28]
 8012afa:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 8012afc:	69cc      	ldr	r4, [r1, #28]
 8012afe:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 8012b00:	89a2      	ldrh	r2, [r4, #12]
 8012b02:	4290      	cmp	r0, r2
 8012b04:	b08b      	sub	sp, #44	; 0x2c
 8012b06:	d308      	bcc.n	8012b1a <GUIMONO_DispChar+0x2a>
 8012b08:	89e6      	ldrh	r6, [r4, #14]
 8012b0a:	4286      	cmp	r6, r0
 8012b0c:	d305      	bcc.n	8012b1a <GUIMONO_DispChar+0x2a>
 8012b0e:	f8d4 9000 	ldr.w	r9, [r4]
 8012b12:	1a82      	subs	r2, r0, r2
 8012b14:	f04f 3bff 	mov.w	fp, #4294967295
 8012b18:	e015      	b.n	8012b46 <GUIMONO_DispChar+0x56>
 8012b1a:	68a2      	ldr	r2, [r4, #8]
 8012b1c:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8012b20:	2a00      	cmp	r2, #0
 8012b22:	f000 8081 	beq.w	8012c28 <GUIMONO_DispChar+0x138>
 8012b26:	8816      	ldrh	r6, [r2, #0]
 8012b28:	42b0      	cmp	r0, r6
 8012b2a:	d37d      	bcc.n	8012c28 <GUIMONO_DispChar+0x138>
 8012b2c:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 8012b30:	4584      	cmp	ip, r0
 8012b32:	d379      	bcc.n	8012c28 <GUIMONO_DispChar+0x138>
 8012b34:	6852      	ldr	r2, [r2, #4]
 8012b36:	1b80      	subs	r0, r0, r6
 8012b38:	b280      	uxth	r0, r0
 8012b3a:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 8012b3e:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 8012b42:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 8012b46:	1c50      	adds	r0, r2, #1
 8012b48:	d06e      	beq.n	8012c28 <GUIMONO_DispChar+0x138>
 8012b4a:	f891 8018 	ldrb.w	r8, [r1, #24]
 8012b4e:	7ca1      	ldrb	r1, [r4, #18]
 8012b50:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 8012b54:	7c26      	ldrb	r6, [r4, #16]
 8012b56:	9206      	str	r2, [sp, #24]
 8012b58:	fb18 f101 	smulbb	r1, r8, r1
 8012b5c:	9107      	str	r1, [sp, #28]
 8012b5e:	fa0f f18a 	sxth.w	r1, sl
 8012b62:	4608      	mov	r0, r1
 8012b64:	9108      	str	r1, [sp, #32]
 8012b66:	f7fd fb8f 	bl	8010288 <LCD_SetDrawMode>
 8012b6a:	4934      	ldr	r1, [pc, #208]	; (8012c3c <GUIMONO_DispChar+0x14c>)
 8012b6c:	9009      	str	r0, [sp, #36]	; 0x24
 8012b6e:	680b      	ldr	r3, [r1, #0]
 8012b70:	9a06      	ldr	r2, [sp, #24]
 8012b72:	69d9      	ldr	r1, [r3, #28]
 8012b74:	7e88      	ldrb	r0, [r1, #26]
 8012b76:	9000      	str	r0, [sp, #0]
 8012b78:	7ec9      	ldrb	r1, [r1, #27]
 8012b7a:	9101      	str	r1, [sp, #4]
 8012b7c:	2101      	movs	r1, #1
 8012b7e:	9102      	str	r1, [sp, #8]
 8012b80:	7ca1      	ldrb	r1, [r4, #18]
 8012b82:	9103      	str	r1, [sp, #12]
 8012b84:	9907      	ldr	r1, [sp, #28]
 8012b86:	fb01 9202 	mla	r2, r1, r2, r9
 8012b8a:	9204      	str	r2, [sp, #16]
 8012b8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b8e:	9305      	str	r3, [sp, #20]
 8012b90:	b23f      	sxth	r7, r7
 8012b92:	b22d      	sxth	r5, r5
 8012b94:	4638      	mov	r0, r7
 8012b96:	4629      	mov	r1, r5
 8012b98:	4632      	mov	r2, r6
 8012b9a:	4643      	mov	r3, r8
 8012b9c:	f7fd fcfe 	bl	801059c <LCD_DrawBitmap>
 8012ba0:	f1bb 3fff 	cmp.w	fp, #4294967295
 8012ba4:	d01b      	beq.n	8012bde <GUIMONO_DispChar+0xee>
 8012ba6:	f04a 0002 	orr.w	r0, sl, #2
 8012baa:	b200      	sxth	r0, r0
 8012bac:	f7fd fb6c 	bl	8010288 <LCD_SetDrawMode>
 8012bb0:	4a22      	ldr	r2, [pc, #136]	; (8012c3c <GUIMONO_DispChar+0x14c>)
 8012bb2:	6813      	ldr	r3, [r2, #0]
 8012bb4:	69da      	ldr	r2, [r3, #28]
 8012bb6:	7e91      	ldrb	r1, [r2, #26]
 8012bb8:	9100      	str	r1, [sp, #0]
 8012bba:	7ed2      	ldrb	r2, [r2, #27]
 8012bbc:	9201      	str	r2, [sp, #4]
 8012bbe:	2101      	movs	r1, #1
 8012bc0:	9102      	str	r1, [sp, #8]
 8012bc2:	9907      	ldr	r1, [sp, #28]
 8012bc4:	7ca2      	ldrb	r2, [r4, #18]
 8012bc6:	9203      	str	r2, [sp, #12]
 8012bc8:	fb01 920b 	mla	r2, r1, fp, r9
 8012bcc:	9204      	str	r2, [sp, #16]
 8012bce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012bd0:	9305      	str	r3, [sp, #20]
 8012bd2:	4638      	mov	r0, r7
 8012bd4:	4629      	mov	r1, r5
 8012bd6:	4632      	mov	r2, r6
 8012bd8:	4643      	mov	r3, r8
 8012bda:	f7fd fcdf 	bl	801059c <LCD_DrawBitmap>
 8012bde:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8012c3c <GUIMONO_DispChar+0x14c>
 8012be2:	f8d8 3000 	ldr.w	r3, [r8]
 8012be6:	69db      	ldr	r3, [r3, #28]
 8012be8:	7e5a      	ldrb	r2, [r3, #25]
 8012bea:	7e1b      	ldrb	r3, [r3, #24]
 8012bec:	429a      	cmp	r2, r3
 8012bee:	d917      	bls.n	8012c20 <GUIMONO_DispChar+0x130>
 8012bf0:	9a08      	ldr	r2, [sp, #32]
 8012bf2:	2a02      	cmp	r2, #2
 8012bf4:	d014      	beq.n	8012c20 <GUIMONO_DispChar+0x130>
 8012bf6:	f08a 0004 	eor.w	r0, sl, #4
 8012bfa:	b200      	sxth	r0, r0
 8012bfc:	f7fd fb44 	bl	8010288 <LCD_SetDrawMode>
 8012c00:	f8d8 3000 	ldr.w	r3, [r8]
 8012c04:	69db      	ldr	r3, [r3, #28]
 8012c06:	f893 e018 	ldrb.w	lr, [r3, #24]
 8012c0a:	7ed9      	ldrb	r1, [r3, #27]
 8012c0c:	7e9a      	ldrb	r2, [r3, #26]
 8012c0e:	7e5b      	ldrb	r3, [r3, #25]
 8012c10:	4638      	mov	r0, r7
 8012c12:	fb0e 5101 	mla	r1, lr, r1, r5
 8012c16:	fb06 7202 	mla	r2, r6, r2, r7
 8012c1a:	442b      	add	r3, r5
 8012c1c:	f7fd fbb6 	bl	801038c <LCD_FillRect>
 8012c20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c22:	b2d8      	uxtb	r0, r3
 8012c24:	f7fd fb30 	bl	8010288 <LCD_SetDrawMode>
 8012c28:	4b04      	ldr	r3, [pc, #16]	; (8012c3c <GUIMONO_DispChar+0x14c>)
 8012c2a:	7c61      	ldrb	r1, [r4, #17]
 8012c2c:	681b      	ldr	r3, [r3, #0]
 8012c2e:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 8012c30:	440a      	add	r2, r1
 8012c32:	845a      	strh	r2, [r3, #34]	; 0x22
 8012c34:	b00b      	add	sp, #44	; 0x2c
 8012c36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c3a:	bf00      	nop
 8012c3c:	2000016c 	.word	0x2000016c

08012c40 <GUIMONO_GetCharDistX>:
 8012c40:	4b04      	ldr	r3, [pc, #16]	; (8012c54 <GUIMONO_GetCharDistX+0x14>)
 8012c42:	681b      	ldr	r3, [r3, #0]
 8012c44:	69db      	ldr	r3, [r3, #28]
 8012c46:	69db      	ldr	r3, [r3, #28]
 8012c48:	b109      	cbz	r1, 8012c4e <GUIMONO_GetCharDistX+0xe>
 8012c4a:	7c1a      	ldrb	r2, [r3, #16]
 8012c4c:	600a      	str	r2, [r1, #0]
 8012c4e:	7c58      	ldrb	r0, [r3, #17]
 8012c50:	4770      	bx	lr
 8012c52:	bf00      	nop
 8012c54:	2000016c 	.word	0x2000016c

08012c58 <GUIMONO_GetFontInfo>:
 8012c58:	2302      	movs	r3, #2
 8012c5a:	800b      	strh	r3, [r1, #0]
 8012c5c:	4770      	bx	lr

08012c5e <GUIMONO_IsInFont>:
 8012c5e:	69c3      	ldr	r3, [r0, #28]
 8012c60:	899a      	ldrh	r2, [r3, #12]
 8012c62:	428a      	cmp	r2, r1
 8012c64:	d802      	bhi.n	8012c6c <GUIMONO_IsInFont+0xe>
 8012c66:	89da      	ldrh	r2, [r3, #14]
 8012c68:	428a      	cmp	r2, r1
 8012c6a:	d20f      	bcs.n	8012c8c <GUIMONO_IsInFont+0x2e>
 8012c6c:	6898      	ldr	r0, [r3, #8]
 8012c6e:	b180      	cbz	r0, 8012c92 <GUIMONO_IsInFont+0x34>
 8012c70:	8803      	ldrh	r3, [r0, #0]
 8012c72:	4299      	cmp	r1, r3
 8012c74:	d30c      	bcc.n	8012c90 <GUIMONO_IsInFont+0x32>
 8012c76:	8842      	ldrh	r2, [r0, #2]
 8012c78:	428a      	cmp	r2, r1
 8012c7a:	d309      	bcc.n	8012c90 <GUIMONO_IsInFont+0x32>
 8012c7c:	1ac9      	subs	r1, r1, r3
 8012c7e:	6842      	ldr	r2, [r0, #4]
 8012c80:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 8012c84:	43c0      	mvns	r0, r0
 8012c86:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8012c8a:	4770      	bx	lr
 8012c8c:	2001      	movs	r0, #1
 8012c8e:	4770      	bx	lr
 8012c90:	2000      	movs	r0, #0
 8012c92:	4770      	bx	lr

08012c94 <_Log2VisBuffered>:
 8012c94:	4770      	bx	lr
	...

08012c98 <_DispLine>:
 8012c98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012c9a:	4615      	mov	r5, r2
 8012c9c:	ab02      	add	r3, sp, #8
 8012c9e:	4a1a      	ldr	r2, [pc, #104]	; (8012d08 <_DispLine+0x70>)
 8012ca0:	f843 1d08 	str.w	r1, [r3, #-8]!
 8012ca4:	9001      	str	r0, [sp, #4]
 8012ca6:	6812      	ldr	r2, [r2, #0]
 8012ca8:	4c18      	ldr	r4, [pc, #96]	; (8012d0c <_DispLine+0x74>)
 8012caa:	4669      	mov	r1, sp
 8012cac:	4790      	blx	r2
 8012cae:	6823      	ldr	r3, [r4, #0]
 8012cb0:	9001      	str	r0, [sp, #4]
 8012cb2:	6958      	ldr	r0, [r3, #20]
 8012cb4:	b958      	cbnz	r0, 8012cce <_DispLine+0x36>
 8012cb6:	2001      	movs	r0, #1
 8012cb8:	f7fd ff54 	bl	8010b64 <GUI__ManageCache>
 8012cbc:	6823      	ldr	r3, [r4, #0]
 8012cbe:	69db      	ldr	r3, [r3, #28]
 8012cc0:	695b      	ldr	r3, [r3, #20]
 8012cc2:	b1bb      	cbz	r3, 8012cf4 <_DispLine+0x5c>
 8012cc4:	689b      	ldr	r3, [r3, #8]
 8012cc6:	9801      	ldr	r0, [sp, #4]
 8012cc8:	9900      	ldr	r1, [sp, #0]
 8012cca:	4798      	blx	r3
 8012ccc:	e017      	b.n	8012cfe <_DispLine+0x66>
 8012cce:	4629      	mov	r1, r5
 8012cd0:	f7ff f874 	bl	8011dbc <GUI_RectsIntersect>
 8012cd4:	2800      	cmp	r0, #0
 8012cd6:	d1ee      	bne.n	8012cb6 <_DispLine+0x1e>
 8012cd8:	e014      	b.n	8012d04 <_DispLine+0x6c>
 8012cda:	a801      	add	r0, sp, #4
 8012cdc:	f7fe fa24 	bl	8011128 <GUI_UC__GetCharCodeInc>
 8012ce0:	6823      	ldr	r3, [r4, #0]
 8012ce2:	69db      	ldr	r3, [r3, #28]
 8012ce4:	681b      	ldr	r3, [r3, #0]
 8012ce6:	4605      	mov	r5, r0
 8012ce8:	4798      	blx	r3
 8012cea:	4b09      	ldr	r3, [pc, #36]	; (8012d10 <_DispLine+0x78>)
 8012cec:	681b      	ldr	r3, [r3, #0]
 8012cee:	b10b      	cbz	r3, 8012cf4 <_DispLine+0x5c>
 8012cf0:	4628      	mov	r0, r5
 8012cf2:	4798      	blx	r3
 8012cf4:	9b00      	ldr	r3, [sp, #0]
 8012cf6:	3b01      	subs	r3, #1
 8012cf8:	2b00      	cmp	r3, #0
 8012cfa:	9300      	str	r3, [sp, #0]
 8012cfc:	daed      	bge.n	8012cda <_DispLine+0x42>
 8012cfe:	2000      	movs	r0, #0
 8012d00:	f7fd ff30 	bl	8010b64 <GUI__ManageCache>
 8012d04:	b003      	add	sp, #12
 8012d06:	bd30      	pop	{r4, r5, pc}
 8012d08:	20000174 	.word	0x20000174
 8012d0c:	2000016c 	.word	0x2000016c
 8012d10:	20019c8c 	.word	0x20019c8c

08012d14 <GUI__GetLineNumChars>:
 8012d14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012d16:	460d      	mov	r5, r1
 8012d18:	9001      	str	r0, [sp, #4]
 8012d1a:	4604      	mov	r4, r0
 8012d1c:	b198      	cbz	r0, 8012d46 <GUI__GetLineNumChars+0x32>
 8012d1e:	4b0b      	ldr	r3, [pc, #44]	; (8012d4c <GUI__GetLineNumChars+0x38>)
 8012d20:	681b      	ldr	r3, [r3, #0]
 8012d22:	69db      	ldr	r3, [r3, #28]
 8012d24:	695b      	ldr	r3, [r3, #20]
 8012d26:	b10b      	cbz	r3, 8012d2c <GUI__GetLineNumChars+0x18>
 8012d28:	685b      	ldr	r3, [r3, #4]
 8012d2a:	b90b      	cbnz	r3, 8012d30 <GUI__GetLineNumChars+0x1c>
 8012d2c:	2400      	movs	r4, #0
 8012d2e:	e008      	b.n	8012d42 <GUI__GetLineNumChars+0x2e>
 8012d30:	4798      	blx	r3
 8012d32:	e009      	b.n	8012d48 <GUI__GetLineNumChars+0x34>
 8012d34:	a801      	add	r0, sp, #4
 8012d36:	f7fe f9f7 	bl	8011128 <GUI_UC__GetCharCodeInc>
 8012d3a:	b120      	cbz	r0, 8012d46 <GUI__GetLineNumChars+0x32>
 8012d3c:	280a      	cmp	r0, #10
 8012d3e:	d002      	beq.n	8012d46 <GUI__GetLineNumChars+0x32>
 8012d40:	3401      	adds	r4, #1
 8012d42:	42ac      	cmp	r4, r5
 8012d44:	dbf6      	blt.n	8012d34 <GUI__GetLineNumChars+0x20>
 8012d46:	4620      	mov	r0, r4
 8012d48:	b003      	add	sp, #12
 8012d4a:	bd30      	pop	{r4, r5, pc}
 8012d4c:	2000016c 	.word	0x2000016c

08012d50 <GUI__GetOverlap>:
 8012d50:	b513      	push	{r0, r1, r4, lr}
 8012d52:	a902      	add	r1, sp, #8
 8012d54:	2400      	movs	r4, #0
 8012d56:	f841 4d04 	str.w	r4, [r1, #-4]!
 8012d5a:	f000 f8b7 	bl	8012ecc <GUI_GetCharDistXEx>
 8012d5e:	9b01      	ldr	r3, [sp, #4]
 8012d60:	4283      	cmp	r3, r0
 8012d62:	bfcc      	ite	gt
 8012d64:	ebc0 0003 	rsbgt	r0, r0, r3
 8012d68:	4620      	movle	r0, r4
 8012d6a:	b002      	add	sp, #8
 8012d6c:	bd10      	pop	{r4, pc}
	...

08012d70 <GUI__GetLineDistX>:
 8012d70:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012d72:	4a15      	ldr	r2, [pc, #84]	; (8012dc8 <GUI__GetLineDistX+0x58>)
 8012d74:	9001      	str	r0, [sp, #4]
 8012d76:	ab02      	add	r3, sp, #8
 8012d78:	6812      	ldr	r2, [r2, #0]
 8012d7a:	f843 1d08 	str.w	r1, [r3, #-8]!
 8012d7e:	4669      	mov	r1, sp
 8012d80:	4790      	blx	r2
 8012d82:	9001      	str	r0, [sp, #4]
 8012d84:	b1f0      	cbz	r0, 8012dc4 <GUI__GetLineDistX+0x54>
 8012d86:	4b11      	ldr	r3, [pc, #68]	; (8012dcc <GUI__GetLineDistX+0x5c>)
 8012d88:	681b      	ldr	r3, [r3, #0]
 8012d8a:	69db      	ldr	r3, [r3, #28]
 8012d8c:	695b      	ldr	r3, [r3, #20]
 8012d8e:	b10b      	cbz	r3, 8012d94 <GUI__GetLineDistX+0x24>
 8012d90:	681b      	ldr	r3, [r3, #0]
 8012d92:	b913      	cbnz	r3, 8012d9a <GUI__GetLineDistX+0x2a>
 8012d94:	2500      	movs	r5, #0
 8012d96:	462c      	mov	r4, r5
 8012d98:	e002      	b.n	8012da0 <GUI__GetLineDistX+0x30>
 8012d9a:	9900      	ldr	r1, [sp, #0]
 8012d9c:	4798      	blx	r3
 8012d9e:	e011      	b.n	8012dc4 <GUI__GetLineDistX+0x54>
 8012da0:	9b00      	ldr	r3, [sp, #0]
 8012da2:	3b01      	subs	r3, #1
 8012da4:	2b00      	cmp	r3, #0
 8012da6:	9300      	str	r3, [sp, #0]
 8012da8:	db07      	blt.n	8012dba <GUI__GetLineDistX+0x4a>
 8012daa:	a801      	add	r0, sp, #4
 8012dac:	f7fe f9bc 	bl	8011128 <GUI_UC__GetCharCodeInc>
 8012db0:	4605      	mov	r5, r0
 8012db2:	f000 f881 	bl	8012eb8 <GUI_GetCharDistX>
 8012db6:	4404      	add	r4, r0
 8012db8:	e7f2      	b.n	8012da0 <GUI__GetLineDistX+0x30>
 8012dba:	4628      	mov	r0, r5
 8012dbc:	f7ff ffc8 	bl	8012d50 <GUI__GetOverlap>
 8012dc0:	4420      	add	r0, r4
 8012dc2:	e7ff      	b.n	8012dc4 <GUI__GetLineDistX+0x54>
 8012dc4:	b003      	add	sp, #12
 8012dc6:	bd30      	pop	{r4, r5, pc}
 8012dc8:	20000174 	.word	0x20000174
 8012dcc:	2000016c 	.word	0x2000016c

08012dd0 <GUI__DispLine>:
 8012dd0:	4b27      	ldr	r3, [pc, #156]	; (8012e70 <GUI__DispLine+0xa0>)
 8012dd2:	681b      	ldr	r3, [r3, #0]
 8012dd4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012dd6:	4605      	mov	r5, r0
 8012dd8:	460c      	mov	r4, r1
 8012dda:	b163      	cbz	r3, 8012df6 <GUI__DispLine+0x26>
 8012ddc:	2000      	movs	r0, #0
 8012dde:	f7fa fd09 	bl	800d7f4 <WM__InitIVRSearch>
 8012de2:	2800      	cmp	r0, #0
 8012de4:	d041      	beq.n	8012e6a <GUI__DispLine+0x9a>
 8012de6:	4628      	mov	r0, r5
 8012de8:	4621      	mov	r1, r4
 8012dea:	466a      	mov	r2, sp
 8012dec:	f7ff ff54 	bl	8012c98 <_DispLine>
 8012df0:	f7fa fc3e 	bl	800d670 <WM__GetNextIVR>
 8012df4:	e7f5      	b.n	8012de2 <GUI__DispLine+0x12>
 8012df6:	6810      	ldr	r0, [r2, #0]
 8012df8:	6851      	ldr	r1, [r2, #4]
 8012dfa:	4e1e      	ldr	r6, [pc, #120]	; (8012e74 <GUI__DispLine+0xa4>)
 8012dfc:	466b      	mov	r3, sp
 8012dfe:	c303      	stmia	r3!, {r0, r1}
 8012e00:	6833      	ldr	r3, [r6, #0]
 8012e02:	f8bd 1000 	ldrh.w	r1, [sp]
 8012e06:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 8012e0a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8012e0e:	4411      	add	r1, r2
 8012e10:	f8ad 1000 	strh.w	r1, [sp]
 8012e14:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8012e18:	4419      	add	r1, r3
 8012e1a:	f8ad 1002 	strh.w	r1, [sp, #2]
 8012e1e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012e22:	440a      	add	r2, r1
 8012e24:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012e28:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012e2c:	4668      	mov	r0, sp
 8012e2e:	4413      	add	r3, r2
 8012e30:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012e34:	f7fa fcde 	bl	800d7f4 <WM__InitIVRSearch>
 8012e38:	6833      	ldr	r3, [r6, #0]
 8012e3a:	b940      	cbnz	r0, 8012e4e <GUI__DispLine+0x7e>
 8012e3c:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012e3e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012e40:	1a8a      	subs	r2, r1, r2
 8012e42:	845a      	strh	r2, [r3, #34]	; 0x22
 8012e44:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 8012e46:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8012e48:	1a8a      	subs	r2, r1, r2
 8012e4a:	849a      	strh	r2, [r3, #36]	; 0x24
 8012e4c:	e00d      	b.n	8012e6a <GUI__DispLine+0x9a>
 8012e4e:	f8bd 2000 	ldrh.w	r2, [sp]
 8012e52:	845a      	strh	r2, [r3, #34]	; 0x22
 8012e54:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012e58:	849a      	strh	r2, [r3, #36]	; 0x24
 8012e5a:	4628      	mov	r0, r5
 8012e5c:	4621      	mov	r1, r4
 8012e5e:	466a      	mov	r2, sp
 8012e60:	f7ff ff1a 	bl	8012c98 <_DispLine>
 8012e64:	f7fa fc04 	bl	800d670 <WM__GetNextIVR>
 8012e68:	e7e6      	b.n	8012e38 <GUI__DispLine+0x68>
 8012e6a:	b002      	add	sp, #8
 8012e6c:	bd70      	pop	{r4, r5, r6, pc}
 8012e6e:	bf00      	nop
 8012e70:	20019c74 	.word	0x20019c74
 8012e74:	2000016c 	.word	0x2000016c

08012e78 <GUI_GetYAdjust>:
 8012e78:	4b0a      	ldr	r3, [pc, #40]	; (8012ea4 <GUI_GetYAdjust+0x2c>)
 8012e7a:	681b      	ldr	r3, [r3, #0]
 8012e7c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8012e7e:	f002 020c 	and.w	r2, r2, #12
 8012e82:	2a08      	cmp	r2, #8
 8012e84:	d007      	beq.n	8012e96 <GUI_GetYAdjust+0x1e>
 8012e86:	2a0c      	cmp	r2, #12
 8012e88:	d005      	beq.n	8012e96 <GUI_GetYAdjust+0x1e>
 8012e8a:	2a04      	cmp	r2, #4
 8012e8c:	d107      	bne.n	8012e9e <GUI_GetYAdjust+0x26>
 8012e8e:	69db      	ldr	r3, [r3, #28]
 8012e90:	7e18      	ldrb	r0, [r3, #24]
 8012e92:	3801      	subs	r0, #1
 8012e94:	4770      	bx	lr
 8012e96:	69db      	ldr	r3, [r3, #28]
 8012e98:	7e18      	ldrb	r0, [r3, #24]
 8012e9a:	0840      	lsrs	r0, r0, #1
 8012e9c:	4770      	bx	lr
 8012e9e:	2000      	movs	r0, #0
 8012ea0:	4770      	bx	lr
 8012ea2:	bf00      	nop
 8012ea4:	2000016c 	.word	0x2000016c

08012ea8 <GUI_GetFontDistY>:
 8012ea8:	4b02      	ldr	r3, [pc, #8]	; (8012eb4 <GUI_GetFontDistY+0xc>)
 8012eaa:	681b      	ldr	r3, [r3, #0]
 8012eac:	69db      	ldr	r3, [r3, #28]
 8012eae:	7e58      	ldrb	r0, [r3, #25]
 8012eb0:	4770      	bx	lr
 8012eb2:	bf00      	nop
 8012eb4:	2000016c 	.word	0x2000016c

08012eb8 <GUI_GetCharDistX>:
 8012eb8:	b508      	push	{r3, lr}
 8012eba:	4b03      	ldr	r3, [pc, #12]	; (8012ec8 <GUI_GetCharDistX+0x10>)
 8012ebc:	681b      	ldr	r3, [r3, #0]
 8012ebe:	69db      	ldr	r3, [r3, #28]
 8012ec0:	2100      	movs	r1, #0
 8012ec2:	685b      	ldr	r3, [r3, #4]
 8012ec4:	4798      	blx	r3
 8012ec6:	bd08      	pop	{r3, pc}
 8012ec8:	2000016c 	.word	0x2000016c

08012ecc <GUI_GetCharDistXEx>:
 8012ecc:	b508      	push	{r3, lr}
 8012ece:	4b03      	ldr	r3, [pc, #12]	; (8012edc <GUI_GetCharDistXEx+0x10>)
 8012ed0:	681b      	ldr	r3, [r3, #0]
 8012ed2:	69db      	ldr	r3, [r3, #28]
 8012ed4:	685b      	ldr	r3, [r3, #4]
 8012ed6:	4798      	blx	r3
 8012ed8:	bd08      	pop	{r3, pc}
 8012eda:	bf00      	nop
 8012edc:	2000016c 	.word	0x2000016c

08012ee0 <_PushFreeBlock>:
 8012ee0:	4b07      	ldr	r3, [pc, #28]	; (8012f00 <_PushFreeBlock+0x20>)
 8012ee2:	685a      	ldr	r2, [r3, #4]
 8012ee4:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8012ee6:	3201      	adds	r2, #1
 8012ee8:	b510      	push	{r4, lr}
 8012eea:	605a      	str	r2, [r3, #4]
 8012eec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8012eee:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 8012ef2:	6061      	str	r1, [r4, #4]
 8012ef4:	2100      	movs	r1, #0
 8012ef6:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 8012efa:	6258      	str	r0, [r3, #36]	; 0x24
 8012efc:	bd10      	pop	{r4, pc}
 8012efe:	bf00      	nop
 8012f00:	20019cb0 	.word	0x20019cb0

08012f04 <_OnExit>:
 8012f04:	b538      	push	{r3, r4, r5, lr}
 8012f06:	4d0b      	ldr	r5, [pc, #44]	; (8012f34 <_OnExit+0x30>)
 8012f08:	2400      	movs	r4, #0
 8012f0a:	f105 0040 	add.w	r0, r5, #64	; 0x40
 8012f0e:	4621      	mov	r1, r4
 8012f10:	2280      	movs	r2, #128	; 0x80
 8012f12:	f885 4028 	strb.w	r4, [r5, #40]	; 0x28
 8012f16:	f7fd fd3d 	bl	8010994 <GUI__memset>
 8012f1a:	4628      	mov	r0, r5
 8012f1c:	4621      	mov	r1, r4
 8012f1e:	22c0      	movs	r2, #192	; 0xc0
 8012f20:	f7fd fd38 	bl	8010994 <GUI__memset>
 8012f24:	4621      	mov	r1, r4
 8012f26:	4804      	ldr	r0, [pc, #16]	; (8012f38 <_OnExit+0x34>)
 8012f28:	220c      	movs	r2, #12
 8012f2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012f2e:	f7fd bd31 	b.w	8010994 <GUI__memset>
 8012f32:	bf00      	nop
 8012f34:	20019cb0 	.word	0x20019cb0
 8012f38:	20019688 	.word	0x20019688

08012f3c <_RemoveFreeBlock>:
 8012f3c:	b510      	push	{r4, lr}
 8012f3e:	6842      	ldr	r2, [r0, #4]
 8012f40:	230f      	movs	r3, #15
 8012f42:	490d      	ldr	r1, [pc, #52]	; (8012f78 <_RemoveFreeBlock+0x3c>)
 8012f44:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 8012f48:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8012f4a:	42a2      	cmp	r2, r4
 8012f4c:	d203      	bcs.n	8012f56 <_RemoveFreeBlock+0x1a>
 8012f4e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8012f52:	d2f6      	bcs.n	8012f42 <_RemoveFreeBlock+0x6>
 8012f54:	bd10      	pop	{r4, pc}
 8012f56:	2b0f      	cmp	r3, #15
 8012f58:	d80c      	bhi.n	8012f74 <_RemoveFreeBlock+0x38>
 8012f5a:	680c      	ldr	r4, [r1, #0]
 8012f5c:	1aa2      	subs	r2, r4, r2
 8012f5e:	600a      	str	r2, [r1, #0]
 8012f60:	6882      	ldr	r2, [r0, #8]
 8012f62:	68c0      	ldr	r0, [r0, #12]
 8012f64:	b102      	cbz	r2, 8012f68 <_RemoveFreeBlock+0x2c>
 8012f66:	6050      	str	r0, [r2, #4]
 8012f68:	b108      	cbz	r0, 8012f6e <_RemoveFreeBlock+0x32>
 8012f6a:	6002      	str	r2, [r0, #0]
 8012f6c:	bd10      	pop	{r4, pc}
 8012f6e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8012f72:	645a      	str	r2, [r3, #68]	; 0x44
 8012f74:	bd10      	pop	{r4, pc}
 8012f76:	bf00      	nop
 8012f78:	20019cb0 	.word	0x20019cb0

08012f7c <_AddFreeMemory>:
 8012f7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012f7e:	4e26      	ldr	r6, [pc, #152]	; (8013018 <_AddFreeMemory+0x9c>)
 8012f80:	68f3      	ldr	r3, [r6, #12]
 8012f82:	1e5a      	subs	r2, r3, #1
 8012f84:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8012f86:	4605      	mov	r5, r0
 8012f88:	4413      	add	r3, r2
 8012f8a:	1808      	adds	r0, r1, r0
 8012f8c:	4298      	cmp	r0, r3
 8012f8e:	460c      	mov	r4, r1
 8012f90:	d805      	bhi.n	8012f9e <_AddFreeMemory+0x22>
 8012f92:	594b      	ldr	r3, [r1, r5]
 8012f94:	b91b      	cbnz	r3, 8012f9e <_AddFreeMemory+0x22>
 8012f96:	6843      	ldr	r3, [r0, #4]
 8012f98:	441d      	add	r5, r3
 8012f9a:	f7ff ffcf 	bl	8012f3c <_RemoveFreeBlock>
 8012f9e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8012fa0:	429c      	cmp	r4, r3
 8012fa2:	d90a      	bls.n	8012fba <_AddFreeMemory+0x3e>
 8012fa4:	f854 7c04 	ldr.w	r7, [r4, #-4]
 8012fa8:	1be7      	subs	r7, r4, r7
 8012faa:	683b      	ldr	r3, [r7, #0]
 8012fac:	b92b      	cbnz	r3, 8012fba <_AddFreeMemory+0x3e>
 8012fae:	687b      	ldr	r3, [r7, #4]
 8012fb0:	4638      	mov	r0, r7
 8012fb2:	441d      	add	r5, r3
 8012fb4:	f7ff ffc2 	bl	8012f3c <_RemoveFreeBlock>
 8012fb8:	463c      	mov	r4, r7
 8012fba:	230f      	movs	r3, #15
 8012fbc:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8012fc0:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8012fc2:	4295      	cmp	r5, r2
 8012fc4:	d203      	bcs.n	8012fce <_AddFreeMemory+0x52>
 8012fc6:	f113 33ff 	adds.w	r3, r3, #4294967295
 8012fca:	d2f7      	bcs.n	8012fbc <_AddFreeMemory+0x40>
 8012fcc:	e022      	b.n	8013014 <_AddFreeMemory+0x98>
 8012fce:	2b0f      	cmp	r3, #15
 8012fd0:	d820      	bhi.n	8013014 <_AddFreeMemory+0x98>
 8012fd2:	3308      	adds	r3, #8
 8012fd4:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8012fd8:	1961      	adds	r1, r4, r5
 8012fda:	6852      	ldr	r2, [r2, #4]
 8012fdc:	60a2      	str	r2, [r4, #8]
 8012fde:	2000      	movs	r0, #0
 8012fe0:	e884 0021 	stmia.w	r4, {r0, r5}
 8012fe4:	6124      	str	r4, [r4, #16]
 8012fe6:	f841 5c04 	str.w	r5, [r1, #-4]
 8012fea:	f104 0108 	add.w	r1, r4, #8
 8012fee:	b102      	cbz	r2, 8012ff2 <_AddFreeMemory+0x76>
 8012ff0:	6051      	str	r1, [r2, #4]
 8012ff2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8012ff6:	60e0      	str	r0, [r4, #12]
 8012ff8:	6059      	str	r1, [r3, #4]
 8012ffa:	6833      	ldr	r3, [r6, #0]
 8012ffc:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 8013000:	4a05      	ldr	r2, [pc, #20]	; (8013018 <_AddFreeMemory+0x9c>)
 8013002:	442b      	add	r3, r5
 8013004:	6033      	str	r3, [r6, #0]
 8013006:	b929      	cbnz	r1, 8013014 <_AddFreeMemory+0x98>
 8013008:	68d1      	ldr	r1, [r2, #12]
 801300a:	1acb      	subs	r3, r1, r3
 801300c:	6891      	ldr	r1, [r2, #8]
 801300e:	4299      	cmp	r1, r3
 8013010:	bf38      	it	cc
 8013012:	6093      	strcc	r3, [r2, #8]
 8013014:	4628      	mov	r0, r5
 8013016:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013018:	20019cb0 	.word	0x20019cb0

0801301c <_RemoveHoles>:
 801301c:	4b25      	ldr	r3, [pc, #148]	; (80130b4 <_RemoveHoles+0x98>)
 801301e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013022:	68da      	ldr	r2, [r3, #12]
 8013024:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8013026:	3a01      	subs	r2, #1
 8013028:	4682      	mov	sl, r0
 801302a:	eb02 0904 	add.w	r9, r2, r4
 801302e:	469b      	mov	fp, r3
 8013030:	e894 0028 	ldmia.w	r4, {r3, r5}
 8013034:	2b00      	cmp	r3, #0
 8013036:	d133      	bne.n	80130a0 <_RemoveHoles+0x84>
 8013038:	eb04 0805 	add.w	r8, r4, r5
 801303c:	45c8      	cmp	r8, r9
 801303e:	d22f      	bcs.n	80130a0 <_RemoveHoles+0x84>
 8013040:	f854 c005 	ldr.w	ip, [r4, r5]
 8013044:	f8d8 6004 	ldr.w	r6, [r8, #4]
 8013048:	f1bc 0f00 	cmp.w	ip, #0
 801304c:	d028      	beq.n	80130a0 <_RemoveHoles+0x84>
 801304e:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 8013052:	4f18      	ldr	r7, [pc, #96]	; (80130b4 <_RemoveHoles+0x98>)
 8013054:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 8013058:	2b01      	cmp	r3, #1
 801305a:	d121      	bne.n	80130a0 <_RemoveHoles+0x84>
 801305c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801305e:	4620      	mov	r0, r4
 8013060:	e88d 1008 	stmia.w	sp, {r3, ip}
 8013064:	f7ff ff6a 	bl	8012f3c <_RemoveFreeBlock>
 8013068:	f8d8 1000 	ldr.w	r1, [r8]
 801306c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801306e:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 8013072:	4620      	mov	r0, r4
 8013074:	6054      	str	r4, [r2, #4]
 8013076:	4641      	mov	r1, r8
 8013078:	4632      	mov	r2, r6
 801307a:	f007 fcf5 	bl	801aa68 <memmove>
 801307e:	e89d 1008 	ldmia.w	sp, {r3, ip}
 8013082:	459c      	cmp	ip, r3
 8013084:	d102      	bne.n	801308c <_RemoveHoles+0x70>
 8013086:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8013088:	1b5b      	subs	r3, r3, r5
 801308a:	637b      	str	r3, [r7, #52]	; 0x34
 801308c:	4628      	mov	r0, r5
 801308e:	19a1      	adds	r1, r4, r6
 8013090:	f7ff ff74 	bl	8012f7c <_AddFreeMemory>
 8013094:	f1ba 0f00 	cmp.w	sl, #0
 8013098:	d001      	beq.n	801309e <_RemoveHoles+0x82>
 801309a:	4582      	cmp	sl, r0
 801309c:	d905      	bls.n	80130aa <_RemoveHoles+0x8e>
 801309e:	4635      	mov	r5, r6
 80130a0:	442c      	add	r4, r5
 80130a2:	454c      	cmp	r4, r9
 80130a4:	d3c4      	bcc.n	8013030 <_RemoveHoles+0x14>
 80130a6:	2001      	movs	r0, #1
 80130a8:	e000      	b.n	80130ac <_RemoveHoles+0x90>
 80130aa:	2000      	movs	r0, #0
 80130ac:	b003      	add	sp, #12
 80130ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130b2:	bf00      	nop
 80130b4:	20019cb0 	.word	0x20019cb0

080130b8 <GUI_ALLOC_FreeFixedBlock>:
 80130b8:	b128      	cbz	r0, 80130c6 <GUI_ALLOC_FreeFixedBlock+0xe>
 80130ba:	4a03      	ldr	r2, [pc, #12]	; (80130c8 <GUI_ALLOC_FreeFixedBlock+0x10>)
 80130bc:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 80130be:	6003      	str	r3, [r0, #0]
 80130c0:	b103      	cbz	r3, 80130c4 <GUI_ALLOC_FreeFixedBlock+0xc>
 80130c2:	6058      	str	r0, [r3, #4]
 80130c4:	63d0      	str	r0, [r2, #60]	; 0x3c
 80130c6:	4770      	bx	lr
 80130c8:	20019cb0 	.word	0x20019cb0

080130cc <GUI_ALLOC_h2p>:
 80130cc:	b128      	cbz	r0, 80130da <GUI_ALLOC_h2p+0xe>
 80130ce:	4b03      	ldr	r3, [pc, #12]	; (80130dc <GUI_ALLOC_h2p+0x10>)
 80130d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80130d2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80130d6:	6840      	ldr	r0, [r0, #4]
 80130d8:	3008      	adds	r0, #8
 80130da:	4770      	bx	lr
 80130dc:	20019cb0 	.word	0x20019cb0

080130e0 <GUI_ALLOC_LockH>:
 80130e0:	4b05      	ldr	r3, [pc, #20]	; (80130f8 <GUI_ALLOC_LockH+0x18>)
 80130e2:	69d9      	ldr	r1, [r3, #28]
 80130e4:	3101      	adds	r1, #1
 80130e6:	61d9      	str	r1, [r3, #28]
 80130e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80130ea:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 80130ee:	3101      	adds	r1, #1
 80130f0:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 80130f4:	f7ff bfea 	b.w	80130cc <GUI_ALLOC_h2p>
 80130f8:	20019cb0 	.word	0x20019cb0

080130fc <GUI_ALLOC_UnlockH>:
 80130fc:	b530      	push	{r4, r5, lr}
 80130fe:	6802      	ldr	r2, [r0, #0]
 8013100:	4b09      	ldr	r3, [pc, #36]	; (8013128 <GUI_ALLOC_UnlockH+0x2c>)
 8013102:	f852 1c08 	ldr.w	r1, [r2, #-8]
 8013106:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8013108:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 801310c:	2c01      	cmp	r4, #1
 801310e:	d903      	bls.n	8013118 <GUI_ALLOC_UnlockH+0x1c>
 8013110:	69dd      	ldr	r5, [r3, #28]
 8013112:	b10d      	cbz	r5, 8013118 <GUI_ALLOC_UnlockH+0x1c>
 8013114:	3d01      	subs	r5, #1
 8013116:	61dd      	str	r5, [r3, #28]
 8013118:	3c01      	subs	r4, #1
 801311a:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 801311e:	2300      	movs	r3, #0
 8013120:	6003      	str	r3, [r0, #0]
 8013122:	4618      	mov	r0, r3
 8013124:	bd30      	pop	{r4, r5, pc}
 8013126:	bf00      	nop
 8013128:	20019cb0 	.word	0x20019cb0

0801312c <GUI_ALLOC_AssignMemory>:
 801312c:	4b02      	ldr	r3, [pc, #8]	; (8013138 <GUI_ALLOC_AssignMemory+0xc>)
 801312e:	f021 0103 	bic.w	r1, r1, #3
 8013132:	6018      	str	r0, [r3, #0]
 8013134:	6059      	str	r1, [r3, #4]
 8013136:	4770      	bx	lr
 8013138:	20019688 	.word	0x20019688

0801313c <GUI_ALLOC_GetSize>:
 801313c:	b130      	cbz	r0, 801314c <GUI_ALLOC_GetSize+0x10>
 801313e:	4b04      	ldr	r3, [pc, #16]	; (8013150 <GUI_ALLOC_GetSize+0x14>)
 8013140:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013142:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8013146:	6843      	ldr	r3, [r0, #4]
 8013148:	6858      	ldr	r0, [r3, #4]
 801314a:	380c      	subs	r0, #12
 801314c:	4770      	bx	lr
 801314e:	bf00      	nop
 8013150:	20019cb0 	.word	0x20019cb0

08013154 <GUI_ALLOC_Free>:
 8013154:	b510      	push	{r4, lr}
 8013156:	4604      	mov	r4, r0
 8013158:	b180      	cbz	r0, 801317c <GUI_ALLOC_Free+0x28>
 801315a:	4b09      	ldr	r3, [pc, #36]	; (8013180 <GUI_ALLOC_Free+0x2c>)
 801315c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801315e:	eb03 02c0 	add.w	r2, r3, r0, lsl #3
 8013162:	f813 3030 	ldrb.w	r3, [r3, r0, lsl #3]
 8013166:	2b01      	cmp	r3, #1
 8013168:	d108      	bne.n	801317c <GUI_ALLOC_Free+0x28>
 801316a:	6851      	ldr	r1, [r2, #4]
 801316c:	6848      	ldr	r0, [r1, #4]
 801316e:	f7ff ff05 	bl	8012f7c <_AddFreeMemory>
 8013172:	4620      	mov	r0, r4
 8013174:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013178:	f7ff beb2 	b.w	8012ee0 <_PushFreeBlock>
 801317c:	bd10      	pop	{r4, pc}
 801317e:	bf00      	nop
 8013180:	20019cb0 	.word	0x20019cb0

08013184 <_EnlargeBlocks>:
 8013184:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013188:	4c22      	ldr	r4, [pc, #136]	; (8013214 <_EnlargeBlocks+0x90>)
 801318a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801318c:	b93b      	cbnz	r3, 801319e <_EnlargeBlocks+0x1a>
 801318e:	4b22      	ldr	r3, [pc, #136]	; (8013218 <_EnlargeBlocks+0x94>)
 8013190:	689d      	ldr	r5, [r3, #8]
 8013192:	685b      	ldr	r3, [r3, #4]
 8013194:	3508      	adds	r5, #8
 8013196:	fbb3 f5f5 	udiv	r5, r3, r5
 801319a:	3502      	adds	r5, #2
 801319c:	e003      	b.n	80131a6 <_EnlargeBlocks+0x22>
 801319e:	6923      	ldr	r3, [r4, #16]
 80131a0:	1d1d      	adds	r5, r3, #4
 80131a2:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 80131a6:	00e8      	lsls	r0, r5, #3
 80131a8:	f000 f978 	bl	801349c <_Alloc>
 80131ac:	4680      	mov	r8, r0
 80131ae:	b360      	cbz	r0, 801320a <_EnlargeBlocks+0x86>
 80131b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80131b2:	6922      	ldr	r2, [r4, #16]
 80131b4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80131b6:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 80131ba:	00d2      	lsls	r2, r2, #3
 80131bc:	685e      	ldr	r6, [r3, #4]
 80131be:	3608      	adds	r6, #8
 80131c0:	4630      	mov	r0, r6
 80131c2:	f007 fc46 	bl	801aa52 <memcpy>
 80131c6:	6922      	ldr	r2, [r4, #16]
 80131c8:	6366      	str	r6, [r4, #52]	; 0x34
 80131ca:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 80131ce:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 80131d2:	3104      	adds	r1, #4
 80131d4:	4613      	mov	r3, r2
 80131d6:	1e68      	subs	r0, r5, #1
 80131d8:	4283      	cmp	r3, r0
 80131da:	f101 0108 	add.w	r1, r1, #8
 80131de:	d203      	bcs.n	80131e8 <_EnlargeBlocks+0x64>
 80131e0:	3301      	adds	r3, #1
 80131e2:	f841 3c08 	str.w	r3, [r1, #-8]
 80131e6:	e7f6      	b.n	80131d6 <_EnlargeBlocks+0x52>
 80131e8:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80131ec:	2600      	movs	r6, #0
 80131ee:	605e      	str	r6, [r3, #4]
 80131f0:	6863      	ldr	r3, [r4, #4]
 80131f2:	6262      	str	r2, [r4, #36]	; 0x24
 80131f4:	1a9b      	subs	r3, r3, r2
 80131f6:	442b      	add	r3, r5
 80131f8:	6063      	str	r3, [r4, #4]
 80131fa:	6125      	str	r5, [r4, #16]
 80131fc:	4638      	mov	r0, r7
 80131fe:	b13f      	cbz	r7, 8013210 <_EnlargeBlocks+0x8c>
 8013200:	f7ff ffa8 	bl	8013154 <GUI_ALLOC_Free>
 8013204:	4630      	mov	r0, r6
 8013206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801320a:	2001      	movs	r0, #1
 801320c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013210:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013214:	20019cb0 	.word	0x20019cb0
 8013218:	20019688 	.word	0x20019688

0801321c <_InitOnce>:
 801321c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801321e:	4e58      	ldr	r6, [pc, #352]	; (8013380 <_InitOnce+0x164>)
 8013220:	f896 1028 	ldrb.w	r1, [r6, #40]	; 0x28
 8013224:	2900      	cmp	r1, #0
 8013226:	f040 80aa 	bne.w	801337e <_InitOnce+0x162>
 801322a:	4d56      	ldr	r5, [pc, #344]	; (8013384 <_InitOnce+0x168>)
 801322c:	686a      	ldr	r2, [r5, #4]
 801322e:	2301      	movs	r3, #1
 8013230:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
 8013234:	f5b2 5f20 	cmp.w	r2, #10240	; 0x2800
 8013238:	bf28      	it	cs
 801323a:	f44f 5220 	movcs.w	r2, #10240	; 0x2800
 801323e:	682b      	ldr	r3, [r5, #0]
 8013240:	0894      	lsrs	r4, r2, #2
 8013242:	2000      	movs	r0, #0
 8013244:	42a0      	cmp	r0, r4
 8013246:	d00c      	beq.n	8013262 <_InitOnce+0x46>
 8013248:	1847      	adds	r7, r0, r1
 801324a:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801324e:	fbb7 fefe 	udiv	lr, r7, lr
 8013252:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8013256:	ebce 0707 	rsb	r7, lr, r7
 801325a:	f843 7020 	str.w	r7, [r3, r0, lsl #2]
 801325e:	3001      	adds	r0, #1
 8013260:	e7f0      	b.n	8013244 <_InitOnce+0x28>
 8013262:	2000      	movs	r0, #0
 8013264:	42a0      	cmp	r0, r4
 8013266:	d016      	beq.n	8013296 <_InitOnce+0x7a>
 8013268:	1847      	adds	r7, r0, r1
 801326a:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801326e:	fbb7 fefe 	udiv	lr, r7, lr
 8013272:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8013276:	ebce 0e07 	rsb	lr, lr, r7
 801327a:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 801327e:	4577      	cmp	r7, lr
 8013280:	d007      	beq.n	8013292 <_InitOnce+0x76>
 8013282:	68aa      	ldr	r2, [r5, #8]
 8013284:	4b3f      	ldr	r3, [pc, #252]	; (8013384 <_InitOnce+0x168>)
 8013286:	2a00      	cmp	r2, #0
 8013288:	d155      	bne.n	8013336 <_InitOnce+0x11a>
 801328a:	685a      	ldr	r2, [r3, #4]
 801328c:	0892      	lsrs	r2, r2, #2
 801328e:	609a      	str	r2, [r3, #8]
 8013290:	e051      	b.n	8013336 <_InitOnce+0x11a>
 8013292:	3001      	adds	r0, #1
 8013294:	e7e6      	b.n	8013264 <_InitOnce+0x48>
 8013296:	3101      	adds	r1, #1
 8013298:	2902      	cmp	r1, #2
 801329a:	d1d2      	bne.n	8013242 <_InitOnce+0x26>
 801329c:	0854      	lsrs	r4, r2, #1
 801329e:	2100      	movs	r1, #0
 80132a0:	2000      	movs	r0, #0
 80132a2:	42a0      	cmp	r0, r4
 80132a4:	d00c      	beq.n	80132c0 <_InitOnce+0xa4>
 80132a6:	1847      	adds	r7, r0, r1
 80132a8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 80132ac:	fbb7 fefe 	udiv	lr, r7, lr
 80132b0:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 80132b4:	ebce 0707 	rsb	r7, lr, r7
 80132b8:	f823 7010 	strh.w	r7, [r3, r0, lsl #1]
 80132bc:	3001      	adds	r0, #1
 80132be:	e7f0      	b.n	80132a2 <_InitOnce+0x86>
 80132c0:	2000      	movs	r0, #0
 80132c2:	42a0      	cmp	r0, r4
 80132c4:	d00f      	beq.n	80132e6 <_InitOnce+0xca>
 80132c6:	1847      	adds	r7, r0, r1
 80132c8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 80132cc:	fbb7 fefe 	udiv	lr, r7, lr
 80132d0:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 80132d4:	ebce 0707 	rsb	r7, lr, r7
 80132d8:	f833 c010 	ldrh.w	ip, [r3, r0, lsl #1]
 80132dc:	b2bf      	uxth	r7, r7
 80132de:	45bc      	cmp	ip, r7
 80132e0:	d1cf      	bne.n	8013282 <_InitOnce+0x66>
 80132e2:	3001      	adds	r0, #1
 80132e4:	e7ed      	b.n	80132c2 <_InitOnce+0xa6>
 80132e6:	3101      	adds	r1, #1
 80132e8:	2902      	cmp	r1, #2
 80132ea:	d1d9      	bne.n	80132a0 <_InitOnce+0x84>
 80132ec:	2100      	movs	r1, #0
 80132ee:	2000      	movs	r0, #0
 80132f0:	4290      	cmp	r0, r2
 80132f2:	d007      	beq.n	8013304 <_InitOnce+0xe8>
 80132f4:	1844      	adds	r4, r0, r1
 80132f6:	27ff      	movs	r7, #255	; 0xff
 80132f8:	fbb4 f7f7 	udiv	r7, r4, r7
 80132fc:	443c      	add	r4, r7
 80132fe:	541c      	strb	r4, [r3, r0]
 8013300:	3001      	adds	r0, #1
 8013302:	e7f5      	b.n	80132f0 <_InitOnce+0xd4>
 8013304:	2000      	movs	r0, #0
 8013306:	4290      	cmp	r0, r2
 8013308:	d00b      	beq.n	8013322 <_InitOnce+0x106>
 801330a:	1844      	adds	r4, r0, r1
 801330c:	27ff      	movs	r7, #255	; 0xff
 801330e:	fbb4 f7f7 	udiv	r7, r4, r7
 8013312:	443c      	add	r4, r7
 8013314:	5c1f      	ldrb	r7, [r3, r0]
 8013316:	f004 04ff 	and.w	r4, r4, #255	; 0xff
 801331a:	42a7      	cmp	r7, r4
 801331c:	d1b1      	bne.n	8013282 <_InitOnce+0x66>
 801331e:	3001      	adds	r0, #1
 8013320:	e7f1      	b.n	8013306 <_InitOnce+0xea>
 8013322:	3101      	adds	r1, #1
 8013324:	2902      	cmp	r1, #2
 8013326:	d1e2      	bne.n	80132ee <_InitOnce+0xd2>
 8013328:	2100      	movs	r1, #0
 801332a:	4291      	cmp	r1, r2
 801332c:	d0a9      	beq.n	8013282 <_InitOnce+0x66>
 801332e:	2000      	movs	r0, #0
 8013330:	5458      	strb	r0, [r3, r1]
 8013332:	3101      	adds	r1, #1
 8013334:	e7f9      	b.n	801332a <_InitOnce+0x10e>
 8013336:	4814      	ldr	r0, [pc, #80]	; (8013388 <_InitOnce+0x16c>)
 8013338:	4b14      	ldr	r3, [pc, #80]	; (801338c <_InitOnce+0x170>)
 801333a:	6003      	str	r3, [r0, #0]
 801333c:	f7ff fab0 	bl	80128a0 <GUI__RegisterExit>
 8013340:	235a      	movs	r3, #90	; 0x5a
 8013342:	6233      	str	r3, [r6, #32]
 8013344:	2300      	movs	r3, #0
 8013346:	2110      	movs	r1, #16
 8013348:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 801334c:	4099      	lsls	r1, r3
 801334e:	3301      	adds	r3, #1
 8013350:	2b10      	cmp	r3, #16
 8013352:	4c0b      	ldr	r4, [pc, #44]	; (8013380 <_InitOnce+0x164>)
 8013354:	6411      	str	r1, [r2, #64]	; 0x40
 8013356:	d1f6      	bne.n	8013346 <_InitOnce+0x12a>
 8013358:	6868      	ldr	r0, [r5, #4]
 801335a:	6829      	ldr	r1, [r5, #0]
 801335c:	63a1      	str	r1, [r4, #56]	; 0x38
 801335e:	2302      	movs	r3, #2
 8013360:	6123      	str	r3, [r4, #16]
 8013362:	f1a0 0314 	sub.w	r3, r0, #20
 8013366:	440b      	add	r3, r1
 8013368:	2501      	movs	r5, #1
 801336a:	6363      	str	r3, [r4, #52]	; 0x34
 801336c:	60e0      	str	r0, [r4, #12]
 801336e:	605d      	str	r5, [r3, #4]
 8013370:	6265      	str	r5, [r4, #36]	; 0x24
 8013372:	6065      	str	r5, [r4, #4]
 8013374:	f7ff fe02 	bl	8012f7c <_AddFreeMemory>
 8013378:	f7ff ff04 	bl	8013184 <_EnlargeBlocks>
 801337c:	6325      	str	r5, [r4, #48]	; 0x30
 801337e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013380:	20019cb0 	.word	0x20019cb0
 8013384:	20019688 	.word	0x20019688
 8013388:	20019694 	.word	0x20019694
 801338c:	08012f05 	.word	0x08012f05

08013390 <GUI_ALLOC_GetFixedBlock>:
 8013390:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013394:	4605      	mov	r5, r0
 8013396:	4e26      	ldr	r6, [pc, #152]	; (8013430 <GUI_ALLOC_GetFixedBlock+0xa0>)
 8013398:	3503      	adds	r5, #3
 801339a:	f7ff ff3f 	bl	801321c <_InitOnce>
 801339e:	f025 0503 	bic.w	r5, r5, #3
 80133a2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80133a4:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 80133a6:	3504      	adds	r5, #4
 80133a8:	429d      	cmp	r5, r3
 80133aa:	bf38      	it	cc
 80133ac:	461d      	movcc	r5, r3
 80133ae:	4614      	mov	r4, r2
 80133b0:	b12c      	cbz	r4, 80133be <GUI_ALLOC_GetFixedBlock+0x2e>
 80133b2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80133b6:	42ab      	cmp	r3, r5
 80133b8:	d02c      	beq.n	8013414 <GUI_ALLOC_GetFixedBlock+0x84>
 80133ba:	6824      	ldr	r4, [r4, #0]
 80133bc:	e7f8      	b.n	80133b0 <GUI_ALLOC_GetFixedBlock+0x20>
 80133be:	68f3      	ldr	r3, [r6, #12]
 80133c0:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 80133c2:	eb02 0803 	add.w	r8, r2, r3
 80133c6:	f858 7c04 	ldr.w	r7, [r8, #-4]
 80133ca:	ebc7 0708 	rsb	r7, r7, r8
 80133ce:	683b      	ldr	r3, [r7, #0]
 80133d0:	b133      	cbz	r3, 80133e0 <GUI_ALLOC_GetFixedBlock+0x50>
 80133d2:	4620      	mov	r0, r4
 80133d4:	f7ff fe22 	bl	801301c <_RemoveHoles>
 80133d8:	f858 7c04 	ldr.w	r7, [r8, #-4]
 80133dc:	ebc7 0708 	rsb	r7, r7, r8
 80133e0:	683b      	ldr	r3, [r7, #0]
 80133e2:	bb13      	cbnz	r3, 801342a <GUI_ALLOC_GetFixedBlock+0x9a>
 80133e4:	687b      	ldr	r3, [r7, #4]
 80133e6:	42ab      	cmp	r3, r5
 80133e8:	db1f      	blt.n	801342a <GUI_ALLOC_GetFixedBlock+0x9a>
 80133ea:	4638      	mov	r0, r7
 80133ec:	1d1c      	adds	r4, r3, #4
 80133ee:	f7ff fda5 	bl	8012f3c <_RemoveFreeBlock>
 80133f2:	68f3      	ldr	r3, [r6, #12]
 80133f4:	6878      	ldr	r0, [r7, #4]
 80133f6:	1b5b      	subs	r3, r3, r5
 80133f8:	60f3      	str	r3, [r6, #12]
 80133fa:	6973      	ldr	r3, [r6, #20]
 80133fc:	1b64      	subs	r4, r4, r5
 80133fe:	442b      	add	r3, r5
 8013400:	1b40      	subs	r0, r0, r5
 8013402:	443c      	add	r4, r7
 8013404:	6173      	str	r3, [r6, #20]
 8013406:	d002      	beq.n	801340e <GUI_ALLOC_GetFixedBlock+0x7e>
 8013408:	4639      	mov	r1, r7
 801340a:	f7ff fdb7 	bl	8012f7c <_AddFreeMemory>
 801340e:	f844 5c04 	str.w	r5, [r4, #-4]
 8013412:	e00a      	b.n	801342a <GUI_ALLOC_GetFixedBlock+0x9a>
 8013414:	6823      	ldr	r3, [r4, #0]
 8013416:	b10b      	cbz	r3, 801341c <GUI_ALLOC_GetFixedBlock+0x8c>
 8013418:	6861      	ldr	r1, [r4, #4]
 801341a:	6059      	str	r1, [r3, #4]
 801341c:	6861      	ldr	r1, [r4, #4]
 801341e:	b101      	cbz	r1, 8013422 <GUI_ALLOC_GetFixedBlock+0x92>
 8013420:	600b      	str	r3, [r1, #0]
 8013422:	42a2      	cmp	r2, r4
 8013424:	d101      	bne.n	801342a <GUI_ALLOC_GetFixedBlock+0x9a>
 8013426:	6823      	ldr	r3, [r4, #0]
 8013428:	63f3      	str	r3, [r6, #60]	; 0x3c
 801342a:	4620      	mov	r0, r4
 801342c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013430:	20019cb0 	.word	0x20019cb0

08013434 <GUI_ALLOC_GetMaxSize>:
 8013434:	b508      	push	{r3, lr}
 8013436:	f7ff fef1 	bl	801321c <_InitOnce>
 801343a:	2200      	movs	r2, #0
 801343c:	4b0b      	ldr	r3, [pc, #44]	; (801346c <GUI_ALLOC_GetMaxSize+0x38>)
 801343e:	4413      	add	r3, r2
 8013440:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8013444:	b113      	cbz	r3, 801344c <GUI_ALLOC_GetMaxSize+0x18>
 8013446:	689b      	ldr	r3, [r3, #8]
 8013448:	2000      	movs	r0, #0
 801344a:	e00b      	b.n	8013464 <GUI_ALLOC_GetMaxSize+0x30>
 801344c:	3a08      	subs	r2, #8
 801344e:	f112 0f80 	cmn.w	r2, #128	; 0x80
 8013452:	d1f3      	bne.n	801343c <GUI_ALLOC_GetMaxSize+0x8>
 8013454:	e7f8      	b.n	8013448 <GUI_ALLOC_GetMaxSize+0x14>
 8013456:	685a      	ldr	r2, [r3, #4]
 8013458:	689b      	ldr	r3, [r3, #8]
 801345a:	4290      	cmp	r0, r2
 801345c:	bf38      	it	cc
 801345e:	4610      	movcc	r0, r2
 8013460:	b113      	cbz	r3, 8013468 <GUI_ALLOC_GetMaxSize+0x34>
 8013462:	689b      	ldr	r3, [r3, #8]
 8013464:	2b00      	cmp	r3, #0
 8013466:	d1f6      	bne.n	8013456 <GUI_ALLOC_GetMaxSize+0x22>
 8013468:	380c      	subs	r0, #12
 801346a:	bd08      	pop	{r3, pc}
 801346c:	20019cb0 	.word	0x20019cb0

08013470 <GUI_ALLOC_RequestSize>:
 8013470:	b508      	push	{r3, lr}
 8013472:	f7ff ffdf 	bl	8013434 <GUI_ALLOC_GetMaxSize>
 8013476:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 801347a:	f04f 0364 	mov.w	r3, #100	; 0x64
 801347e:	4a06      	ldr	r2, [pc, #24]	; (8013498 <GUI_ALLOC_RequestSize+0x28>)
 8013480:	d904      	bls.n	801348c <GUI_ALLOC_RequestSize+0x1c>
 8013482:	fb90 f0f3 	sdiv	r0, r0, r3
 8013486:	6a13      	ldr	r3, [r2, #32]
 8013488:	4358      	muls	r0, r3
 801348a:	bd08      	pop	{r3, pc}
 801348c:	6a12      	ldr	r2, [r2, #32]
 801348e:	4350      	muls	r0, r2
 8013490:	fbb0 f0f3 	udiv	r0, r0, r3
 8013494:	bd08      	pop	{r3, pc}
 8013496:	bf00      	nop
 8013498:	20019cb0 	.word	0x20019cb0

0801349c <_Alloc>:
 801349c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80134a0:	4d38      	ldr	r5, [pc, #224]	; (8013584 <_Alloc+0xe8>)
 80134a2:	4604      	mov	r4, r0
 80134a4:	f7ff feba 	bl	801321c <_InitOnce>
 80134a8:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 80134aa:	682b      	ldr	r3, [r5, #0]
 80134ac:	42bc      	cmp	r4, r7
 80134ae:	bf24      	itt	cs
 80134b0:	1ce7      	addcs	r7, r4, #3
 80134b2:	f027 0703 	biccs.w	r7, r7, #3
 80134b6:	370c      	adds	r7, #12
 80134b8:	429f      	cmp	r7, r3
 80134ba:	4c32      	ldr	r4, [pc, #200]	; (8013584 <_Alloc+0xe8>)
 80134bc:	d83e      	bhi.n	801353c <_Alloc+0xa0>
 80134be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80134c0:	6862      	ldr	r2, [r4, #4]
 80134c2:	429a      	cmp	r2, r3
 80134c4:	d90f      	bls.n	80134e6 <_Alloc+0x4a>
 80134c6:	686b      	ldr	r3, [r5, #4]
 80134c8:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 80134ca:	3b01      	subs	r3, #1
 80134cc:	606b      	str	r3, [r5, #4]
 80134ce:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80134d0:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 80134d4:	eb03 0209 	add.w	r2, r3, r9
 80134d8:	6852      	ldr	r2, [r2, #4]
 80134da:	626a      	str	r2, [r5, #36]	; 0x24
 80134dc:	2201      	movs	r2, #1
 80134de:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 80134e2:	b956      	cbnz	r6, 80134fa <_Alloc+0x5e>
 80134e4:	e02a      	b.n	801353c <_Alloc+0xa0>
 80134e6:	3b01      	subs	r3, #1
 80134e8:	6323      	str	r3, [r4, #48]	; 0x30
 80134ea:	f7ff fe4b 	bl	8013184 <_EnlargeBlocks>
 80134ee:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80134f0:	3301      	adds	r3, #1
 80134f2:	6323      	str	r3, [r4, #48]	; 0x30
 80134f4:	2800      	cmp	r0, #0
 80134f6:	d0e6      	beq.n	80134c6 <_Alloc+0x2a>
 80134f8:	e020      	b.n	801353c <_Alloc+0xa0>
 80134fa:	230f      	movs	r3, #15
 80134fc:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8013500:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8013502:	4297      	cmp	r7, r2
 8013504:	d20c      	bcs.n	8013520 <_Alloc+0x84>
 8013506:	f113 33ff 	adds.w	r3, r3, #4294967295
 801350a:	d2f7      	bcs.n	80134fc <_Alloc+0x60>
 801350c:	e008      	b.n	8013520 <_Alloc+0x84>
 801350e:	6894      	ldr	r4, [r2, #8]
 8013510:	b12c      	cbz	r4, 801351e <_Alloc+0x82>
 8013512:	6862      	ldr	r2, [r4, #4]
 8013514:	4297      	cmp	r7, r2
 8013516:	d914      	bls.n	8013542 <_Alloc+0xa6>
 8013518:	68a2      	ldr	r2, [r4, #8]
 801351a:	2a00      	cmp	r2, #0
 801351c:	d1f7      	bne.n	801350e <_Alloc+0x72>
 801351e:	3301      	adds	r3, #1
 8013520:	2b0f      	cmp	r3, #15
 8013522:	d803      	bhi.n	801352c <_Alloc+0x90>
 8013524:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8013528:	6c52      	ldr	r2, [r2, #68]	; 0x44
 801352a:	e7f6      	b.n	801351a <_Alloc+0x7e>
 801352c:	4638      	mov	r0, r7
 801352e:	f7ff fd75 	bl	801301c <_RemoveHoles>
 8013532:	2800      	cmp	r0, #0
 8013534:	d0e1      	beq.n	80134fa <_Alloc+0x5e>
 8013536:	4630      	mov	r0, r6
 8013538:	f7ff fcd2 	bl	8012ee0 <_PushFreeBlock>
 801353c:	2000      	movs	r0, #0
 801353e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013542:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8013546:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8013548:	ebc7 0208 	rsb	r2, r7, r8
 801354c:	330c      	adds	r3, #12
 801354e:	4620      	mov	r0, r4
 8013550:	429a      	cmp	r2, r3
 8013552:	bf38      	it	cc
 8013554:	4647      	movcc	r7, r8
 8013556:	f7ff fcf1 	bl	8012f3c <_RemoveFreeBlock>
 801355a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 801355c:	444b      	add	r3, r9
 801355e:	19e1      	adds	r1, r4, r7
 8013560:	605c      	str	r4, [r3, #4]
 8013562:	45b8      	cmp	r8, r7
 8013564:	f04f 0300 	mov.w	r3, #0
 8013568:	e884 00c0 	stmia.w	r4, {r6, r7}
 801356c:	60a3      	str	r3, [r4, #8]
 801356e:	6124      	str	r4, [r4, #16]
 8013570:	f841 7c04 	str.w	r7, [r1, #-4]
 8013574:	dd03      	ble.n	801357e <_Alloc+0xe2>
 8013576:	ebc7 0008 	rsb	r0, r7, r8
 801357a:	f7ff fcff 	bl	8012f7c <_AddFreeMemory>
 801357e:	4630      	mov	r0, r6
 8013580:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013584:	20019cb0 	.word	0x20019cb0

08013588 <GUI_ALLOC_AllocNoInit>:
 8013588:	b108      	cbz	r0, 801358e <GUI_ALLOC_AllocNoInit+0x6>
 801358a:	f7ff bf87 	b.w	801349c <_Alloc>
 801358e:	4770      	bx	lr

08013590 <GUI_ALLOC_FreePtr>:
 8013590:	b510      	push	{r4, lr}
 8013592:	4604      	mov	r4, r0
 8013594:	6800      	ldr	r0, [r0, #0]
 8013596:	f7ff fddd 	bl	8013154 <GUI_ALLOC_Free>
 801359a:	2300      	movs	r3, #0
 801359c:	6023      	str	r3, [r4, #0]
 801359e:	bd10      	pop	{r4, pc}

080135a0 <GUI_ALLOC_FreePtrArray>:
 80135a0:	b570      	push	{r4, r5, r6, lr}
 80135a2:	4605      	mov	r5, r0
 80135a4:	460e      	mov	r6, r1
 80135a6:	2400      	movs	r4, #0
 80135a8:	42b4      	cmp	r4, r6
 80135aa:	da05      	bge.n	80135b8 <GUI_ALLOC_FreePtrArray+0x18>
 80135ac:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 80135b0:	f7ff ffee 	bl	8013590 <GUI_ALLOC_FreePtr>
 80135b4:	3401      	adds	r4, #1
 80135b6:	e7f7      	b.n	80135a8 <GUI_ALLOC_FreePtrArray+0x8>
 80135b8:	bd70      	pop	{r4, r5, r6, pc}

080135ba <GUI_ALLOC_AllocZero>:
 80135ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80135bc:	4605      	mov	r5, r0
 80135be:	f7ff ffe3 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 80135c2:	4606      	mov	r6, r0
 80135c4:	b158      	cbz	r0, 80135de <GUI_ALLOC_AllocZero+0x24>
 80135c6:	f7ff fd8b 	bl	80130e0 <GUI_ALLOC_LockH>
 80135ca:	ac02      	add	r4, sp, #8
 80135cc:	2100      	movs	r1, #0
 80135ce:	f844 0d04 	str.w	r0, [r4, #-4]!
 80135d2:	462a      	mov	r2, r5
 80135d4:	f7fd f9de 	bl	8010994 <GUI__memset>
 80135d8:	4620      	mov	r0, r4
 80135da:	f7ff fd8f 	bl	80130fc <GUI_ALLOC_UnlockH>
 80135de:	4630      	mov	r0, r6
 80135e0:	b002      	add	sp, #8
 80135e2:	bd70      	pop	{r4, r5, r6, pc}

080135e4 <GUI_ALLOC_AllocInit>:
 80135e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80135e6:	4605      	mov	r5, r0
 80135e8:	460c      	mov	r4, r1
 80135ea:	b909      	cbnz	r1, 80135f0 <GUI_ALLOC_AllocInit+0xc>
 80135ec:	2000      	movs	r0, #0
 80135ee:	e014      	b.n	801361a <GUI_ALLOC_AllocInit+0x36>
 80135f0:	4608      	mov	r0, r1
 80135f2:	f7ff ffc9 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 80135f6:	4606      	mov	r6, r0
 80135f8:	2800      	cmp	r0, #0
 80135fa:	d0f7      	beq.n	80135ec <GUI_ALLOC_AllocInit+0x8>
 80135fc:	f7ff fd70 	bl	80130e0 <GUI_ALLOC_LockH>
 8013600:	4629      	mov	r1, r5
 8013602:	9001      	str	r0, [sp, #4]
 8013604:	4622      	mov	r2, r4
 8013606:	b115      	cbz	r5, 801360e <GUI_ALLOC_AllocInit+0x2a>
 8013608:	f007 fa23 	bl	801aa52 <memcpy>
 801360c:	e001      	b.n	8013612 <GUI_ALLOC_AllocInit+0x2e>
 801360e:	f7fd f9c1 	bl	8010994 <GUI__memset>
 8013612:	a801      	add	r0, sp, #4
 8013614:	f7ff fd72 	bl	80130fc <GUI_ALLOC_UnlockH>
 8013618:	4630      	mov	r0, r6
 801361a:	b002      	add	sp, #8
 801361c:	bd70      	pop	{r4, r5, r6, pc}
	...

08013620 <LCD_Index2Color_M565>:
 8013620:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 8013624:	4b06      	ldr	r3, [pc, #24]	; (8013640 <LCD_Index2Color_M565+0x20>)
 8013626:	f000 021f 	and.w	r2, r0, #31
 801362a:	f3c0 1045 	ubfx	r0, r0, #5, #6
 801362e:	5c9a      	ldrb	r2, [r3, r2]
 8013630:	5c5b      	ldrb	r3, [r3, r1]
 8013632:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 8013636:	4a03      	ldr	r2, [pc, #12]	; (8013644 <LCD_Index2Color_M565+0x24>)
 8013638:	5c10      	ldrb	r0, [r2, r0]
 801363a:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 801363e:	4770      	bx	lr
 8013640:	080219aa 	.word	0x080219aa
 8013644:	0802196a 	.word	0x0802196a

08013648 <_Color2Index_M565>:
 8013648:	f3c0 4107 	ubfx	r1, r0, #16, #8
 801364c:	4b06      	ldr	r3, [pc, #24]	; (8013668 <_Color2Index_M565+0x20>)
 801364e:	b2c2      	uxtb	r2, r0
 8013650:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8013654:	5c9a      	ldrb	r2, [r3, r2]
 8013656:	5c5b      	ldrb	r3, [r3, r1]
 8013658:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 801365c:	4a03      	ldr	r2, [pc, #12]	; (801366c <_Color2Index_M565+0x24>)
 801365e:	5c10      	ldrb	r0, [r2, r0]
 8013660:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 8013664:	4770      	bx	lr
 8013666:	bf00      	nop
 8013668:	08021aca 	.word	0x08021aca
 801366c:	080219ca 	.word	0x080219ca

08013670 <_GetIndexMask_M565>:
 8013670:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8013674:	4770      	bx	lr
	...

08013678 <_Color2IndexBulk>:
 8013678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801367a:	4f0f      	ldr	r7, [pc, #60]	; (80136b8 <_Color2IndexBulk+0x40>)
 801367c:	683f      	ldr	r7, [r7, #0]
 801367e:	4606      	mov	r6, r0
 8013680:	460d      	mov	r5, r1
 8013682:	4614      	mov	r4, r2
 8013684:	469c      	mov	ip, r3
 8013686:	b10f      	cbz	r7, 801368c <_Color2IndexBulk+0x14>
 8013688:	47b8      	blx	r7
 801368a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801368c:	f856 2b04 	ldr.w	r2, [r6], #4
 8013690:	490a      	ldr	r1, [pc, #40]	; (80136bc <_Color2IndexBulk+0x44>)
 8013692:	b2d3      	uxtb	r3, r2
 8013694:	3c01      	subs	r4, #1
 8013696:	5cc8      	ldrb	r0, [r1, r3]
 8013698:	f3c2 4307 	ubfx	r3, r2, #16, #8
 801369c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80136a0:	5ccb      	ldrb	r3, [r1, r3]
 80136a2:	4907      	ldr	r1, [pc, #28]	; (80136c0 <_Color2IndexBulk+0x48>)
 80136a4:	5c8a      	ldrb	r2, [r1, r2]
 80136a6:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 80136aa:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 80136ae:	802b      	strh	r3, [r5, #0]
 80136b0:	4465      	add	r5, ip
 80136b2:	d1eb      	bne.n	801368c <_Color2IndexBulk+0x14>
 80136b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80136b6:	bf00      	nop
 80136b8:	200196a0 	.word	0x200196a0
 80136bc:	08021aca 	.word	0x08021aca
 80136c0:	080219ca 	.word	0x080219ca

080136c4 <_Index2ColorBulk>:
 80136c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80136c6:	4e13      	ldr	r6, [pc, #76]	; (8013714 <_Index2ColorBulk+0x50>)
 80136c8:	6836      	ldr	r6, [r6, #0]
 80136ca:	4684      	mov	ip, r0
 80136cc:	4614      	mov	r4, r2
 80136ce:	461d      	mov	r5, r3
 80136d0:	b10e      	cbz	r6, 80136d6 <_Index2ColorBulk+0x12>
 80136d2:	47b0      	blx	r6
 80136d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80136d6:	1e50      	subs	r0, r2, #1
 80136d8:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80136dc:	3a01      	subs	r2, #1
 80136de:	fb03 c000 	mla	r0, r3, r0, ip
 80136e2:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80136e6:	8802      	ldrh	r2, [r0, #0]
 80136e8:	4b0b      	ldr	r3, [pc, #44]	; (8013718 <_Index2ColorBulk+0x54>)
 80136ea:	f002 061f 	and.w	r6, r2, #31
 80136ee:	0ad7      	lsrs	r7, r2, #11
 80136f0:	5d9e      	ldrb	r6, [r3, r6]
 80136f2:	5ddb      	ldrb	r3, [r3, r7]
 80136f4:	f3c2 1245 	ubfx	r2, r2, #5, #6
 80136f8:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 80136fc:	4e07      	ldr	r6, [pc, #28]	; (801371c <_Index2ColorBulk+0x58>)
 80136fe:	5cb2      	ldrb	r2, [r6, r2]
 8013700:	3c01      	subs	r4, #1
 8013702:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8013706:	f841 3904 	str.w	r3, [r1], #-4
 801370a:	ebc5 0000 	rsb	r0, r5, r0
 801370e:	d1ea      	bne.n	80136e6 <_Index2ColorBulk+0x22>
 8013710:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013712:	bf00      	nop
 8013714:	2001969c 	.word	0x2001969c
 8013718:	080219aa 	.word	0x080219aa
 801371c:	0802196a 	.word	0x0802196a

08013720 <LCD_Index2Color_888>:
 8013720:	4770      	bx	lr

08013722 <LCD_Index2Color_8888>:
 8013722:	4770      	bx	lr

08013724 <_Color2Index_8888>:
 8013724:	4770      	bx	lr

08013726 <_GetIndexMask_8888>:
 8013726:	f04f 30ff 	mov.w	r0, #4294967295
 801372a:	4770      	bx	lr

0801372c <_Color2IndexBulk>:
 801372c:	b510      	push	{r4, lr}
 801372e:	f850 4b04 	ldr.w	r4, [r0], #4
 8013732:	600c      	str	r4, [r1, #0]
 8013734:	3a01      	subs	r2, #1
 8013736:	4419      	add	r1, r3
 8013738:	d1f9      	bne.n	801372e <_Color2IndexBulk+0x2>
 801373a:	bd10      	pop	{r4, pc}

0801373c <_Index2ColorBulk>:
 801373c:	b510      	push	{r4, lr}
 801373e:	6804      	ldr	r4, [r0, #0]
 8013740:	f841 4b04 	str.w	r4, [r1], #4
 8013744:	3a01      	subs	r2, #1
 8013746:	4418      	add	r0, r3
 8013748:	d1f9      	bne.n	801373e <_Index2ColorBulk+0x2>
 801374a:	bd10      	pop	{r4, pc}

0801374c <WIDGET_SetEffect>:
 801374c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801374e:	2300      	movs	r3, #0
 8013750:	9302      	str	r3, [sp, #8]
 8013752:	9103      	str	r1, [sp, #12]
 8013754:	f44f 7340 	mov.w	r3, #768	; 0x300
 8013758:	4669      	mov	r1, sp
 801375a:	9300      	str	r3, [sp, #0]
 801375c:	f7f9 fdb6 	bl	800d2cc <WM_SendMessage>
 8013760:	b005      	add	sp, #20
 8013762:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013768 <WIDGET__FillStringInRect>:
 8013768:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801376c:	461e      	mov	r6, r3
 801376e:	4b3f      	ldr	r3, [pc, #252]	; (801386c <WIDGET__FillStringInRect+0x104>)
 8013770:	681b      	ldr	r3, [r3, #0]
 8013772:	4690      	mov	r8, r2
 8013774:	695a      	ldr	r2, [r3, #20]
 8013776:	4607      	mov	r7, r0
 8013778:	460c      	mov	r4, r1
 801377a:	b90a      	cbnz	r2, 8013780 <WIDGET__FillStringInRect+0x18>
 801377c:	bb1f      	cbnz	r7, 80137c6 <WIDGET__FillStringInRect+0x5e>
 801377e:	e06f      	b.n	8013860 <WIDGET__FillStringInRect+0xf8>
 8013780:	6808      	ldr	r0, [r1, #0]
 8013782:	6849      	ldr	r1, [r1, #4]
 8013784:	466d      	mov	r5, sp
 8013786:	c503      	stmia	r5!, {r0, r1}
 8013788:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 801378c:	f8bd 0000 	ldrh.w	r0, [sp]
 8013790:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8013794:	4408      	add	r0, r1
 8013796:	f8ad 0000 	strh.w	r0, [sp]
 801379a:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801379e:	4418      	add	r0, r3
 80137a0:	f8ad 0002 	strh.w	r0, [sp, #2]
 80137a4:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 80137a8:	4401      	add	r1, r0
 80137aa:	f8ad 1004 	strh.w	r1, [sp, #4]
 80137ae:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 80137b2:	4610      	mov	r0, r2
 80137b4:	440b      	add	r3, r1
 80137b6:	4669      	mov	r1, sp
 80137b8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80137bc:	f7fe fafe 	bl	8011dbc <GUI_RectsIntersect>
 80137c0:	2800      	cmp	r0, #0
 80137c2:	d050      	beq.n	8013866 <WIDGET__FillStringInRect+0xfe>
 80137c4:	e7da      	b.n	801377c <WIDGET__FillStringInRect+0x14>
 80137c6:	783b      	ldrb	r3, [r7, #0]
 80137c8:	2b00      	cmp	r3, #0
 80137ca:	d049      	beq.n	8013860 <WIDGET__FillStringInRect+0xf8>
 80137cc:	f005 f95c 	bl	8018a88 <GUI_GetBkColor>
 80137d0:	0e00      	lsrs	r0, r0, #24
 80137d2:	d003      	beq.n	80137dc <WIDGET__FillStringInRect+0x74>
 80137d4:	2002      	movs	r0, #2
 80137d6:	f7fe fa5b 	bl	8011c90 <GUI_SetTextMode>
 80137da:	e032      	b.n	8013842 <WIDGET__FillStringInRect+0xda>
 80137dc:	f7fe fa58 	bl	8011c90 <GUI_SetTextMode>
 80137e0:	4641      	mov	r1, r8
 80137e2:	4632      	mov	r2, r6
 80137e4:	a802      	add	r0, sp, #8
 80137e6:	f7fd f9c5 	bl	8010b74 <GUI__IntersectRects>
 80137ea:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80137ee:	f9b4 0000 	ldrsh.w	r0, [r4]
 80137f2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80137f6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80137fa:	3b01      	subs	r3, #1
 80137fc:	f7ff f80e 	bl	801281c <GUI_ClearRect>
 8013800:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8013804:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013808:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 801380c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013810:	3a01      	subs	r2, #1
 8013812:	f7ff f803 	bl	801281c <GUI_ClearRect>
 8013816:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 801381a:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 801381e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013822:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013826:	3001      	adds	r0, #1
 8013828:	f7fe fff8 	bl	801281c <GUI_ClearRect>
 801382c:	f9bd 100e 	ldrsh.w	r1, [sp, #14]
 8013830:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013834:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013838:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801383c:	3101      	adds	r1, #1
 801383e:	f7fe ffed 	bl	801281c <GUI_ClearRect>
 8013842:	4640      	mov	r0, r8
 8013844:	f7f8 fc0c 	bl	800c060 <WM_SetUserClipRect>
 8013848:	f9b6 1000 	ldrsh.w	r1, [r6]
 801384c:	f9b6 2002 	ldrsh.w	r2, [r6, #2]
 8013850:	4604      	mov	r4, r0
 8013852:	4638      	mov	r0, r7
 8013854:	f7fe fe5e 	bl	8012514 <GUI_DispStringAt>
 8013858:	4620      	mov	r0, r4
 801385a:	f7f8 fc01 	bl	800c060 <WM_SetUserClipRect>
 801385e:	e002      	b.n	8013866 <WIDGET__FillStringInRect+0xfe>
 8013860:	4620      	mov	r0, r4
 8013862:	f005 fe21 	bl	80194a8 <GUI_ClearRectEx>
 8013866:	b004      	add	sp, #16
 8013868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801386c:	2000016c 	.word	0x2000016c

08013870 <_DrawDownRect>:
 8013870:	b510      	push	{r4, lr}
 8013872:	b09c      	sub	sp, #112	; 0x70
 8013874:	4604      	mov	r4, r0
 8013876:	4668      	mov	r0, sp
 8013878:	f7fe fa8c 	bl	8011d94 <GUI_SaveContext_W>
 801387c:	4b09      	ldr	r3, [pc, #36]	; (80138a4 <_DrawDownRect+0x34>)
 801387e:	6818      	ldr	r0, [r3, #0]
 8013880:	f7fd f852 	bl	8010928 <LCD_SetColor>
 8013884:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013888:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801388c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013890:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8013894:	f005 fe14 	bl	80194c0 <GUI_DrawRect>
 8013898:	4668      	mov	r0, sp
 801389a:	f7fe fa85 	bl	8011da8 <GUI_RestoreContext>
 801389e:	b01c      	add	sp, #112	; 0x70
 80138a0:	bd10      	pop	{r4, pc}
 80138a2:	bf00      	nop
 80138a4:	200196a4 	.word	0x200196a4

080138a8 <_DrawUpRect>:
 80138a8:	b510      	push	{r4, lr}
 80138aa:	b09c      	sub	sp, #112	; 0x70
 80138ac:	4604      	mov	r4, r0
 80138ae:	4668      	mov	r0, sp
 80138b0:	f7fe fa70 	bl	8011d94 <GUI_SaveContext_W>
 80138b4:	4b09      	ldr	r3, [pc, #36]	; (80138dc <_DrawUpRect+0x34>)
 80138b6:	6818      	ldr	r0, [r3, #0]
 80138b8:	f7fd f836 	bl	8010928 <LCD_SetColor>
 80138bc:	f9b4 0000 	ldrsh.w	r0, [r4]
 80138c0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80138c4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80138c8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80138cc:	f005 fdf8 	bl	80194c0 <GUI_DrawRect>
 80138d0:	4668      	mov	r0, sp
 80138d2:	f7fe fa69 	bl	8011da8 <GUI_RestoreContext>
 80138d6:	b01c      	add	sp, #112	; 0x70
 80138d8:	bd10      	pop	{r4, pc}
 80138da:	bf00      	nop
 80138dc:	200196a4 	.word	0x200196a4

080138e0 <_DrawDown>:
 80138e0:	b507      	push	{r0, r1, r2, lr}
 80138e2:	4668      	mov	r0, sp
 80138e4:	f7f8 ffea 	bl	800c8bc <WM_GetClientRect>
 80138e8:	4668      	mov	r0, sp
 80138ea:	f7ff ffc1 	bl	8013870 <_DrawDownRect>
 80138ee:	b003      	add	sp, #12
 80138f0:	f85d fb04 	ldr.w	pc, [sp], #4

080138f4 <_DrawUp>:
 80138f4:	b507      	push	{r0, r1, r2, lr}
 80138f6:	4668      	mov	r0, sp
 80138f8:	f7f8 ffe0 	bl	800c8bc <WM_GetClientRect>
 80138fc:	4668      	mov	r0, sp
 80138fe:	f7ff ffd3 	bl	80138a8 <_DrawUpRect>
 8013902:	b003      	add	sp, #12
 8013904:	f85d fb04 	ldr.w	pc, [sp], #4

08013908 <SLIDER_DrawSkinFlex>:
 8013908:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801390c:	6a03      	ldr	r3, [r0, #32]
 801390e:	4604      	mov	r4, r0
 8013910:	2b00      	cmp	r3, #0
 8013912:	f000 81d7 	beq.w	8013cc4 <SLIDER_DrawSkinFlex+0x3bc>
 8013916:	68da      	ldr	r2, [r3, #12]
 8013918:	4984      	ldr	r1, [pc, #528]	; (8013b2c <SLIDER_DrawSkinFlex+0x224>)
 801391a:	4d85      	ldr	r5, [pc, #532]	; (8013b30 <SLIDER_DrawSkinFlex+0x228>)
 801391c:	2a00      	cmp	r2, #0
 801391e:	bf18      	it	ne
 8013920:	460d      	movne	r5, r1
 8013922:	6842      	ldr	r2, [r0, #4]
 8013924:	3a0a      	subs	r2, #10
 8013926:	2a0a      	cmp	r2, #10
 8013928:	f200 81cc 	bhi.w	8013cc4 <SLIDER_DrawSkinFlex+0x3bc>
 801392c:	e8df f012 	tbh	[pc, r2, lsl #1]
 8013930:	01ca01b2 	.word	0x01ca01b2
 8013934:	01ca01ca 	.word	0x01ca01ca
 8013938:	000b01ca 	.word	0x000b01ca
 801393c:	01ca01ca 	.word	0x01ca01ca
 8013940:	008001ca 	.word	0x008001ca
 8013944:	017a      	.short	0x017a
 8013946:	6919      	ldr	r1, [r3, #16]
 8013948:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 801394a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 801394c:	2900      	cmp	r1, #0
 801394e:	d035      	beq.n	80139bc <SLIDER_DrawSkinFlex+0xb4>
 8013950:	6901      	ldr	r1, [r0, #16]
 8013952:	6980      	ldr	r0, [r0, #24]
 8013954:	1a46      	subs	r6, r0, r1
 8013956:	1af6      	subs	r6, r6, r3
 8013958:	1ab6      	subs	r6, r6, r2
 801395a:	2702      	movs	r7, #2
 801395c:	fb96 f6f7 	sdiv	r6, r6, r7
 8013960:	440e      	add	r6, r1
 8013962:	eb06 0802 	add.w	r8, r6, r2
 8013966:	f108 37ff 	add.w	r7, r8, #4294967295
 801396a:	6928      	ldr	r0, [r5, #16]
 801396c:	f7fe f9c8 	bl	8011d00 <GUI_SetColor>
 8013970:	4631      	mov	r1, r6
 8013972:	6960      	ldr	r0, [r4, #20]
 8013974:	463a      	mov	r2, r7
 8013976:	f7fe fcab 	bl	80122d0 <GUI_DrawHLine>
 801397a:	6961      	ldr	r1, [r4, #20]
 801397c:	69e2      	ldr	r2, [r4, #28]
 801397e:	4630      	mov	r0, r6
 8013980:	3101      	adds	r1, #1
 8013982:	f7fe fc83 	bl	801228c <GUI_DrawVLine>
 8013986:	3601      	adds	r6, #1
 8013988:	6968      	ldr	r0, [r5, #20]
 801398a:	f1a8 0802 	sub.w	r8, r8, #2
 801398e:	f7fe f9b7 	bl	8011d00 <GUI_SetColor>
 8013992:	69e0      	ldr	r0, [r4, #28]
 8013994:	4631      	mov	r1, r6
 8013996:	4642      	mov	r2, r8
 8013998:	f7fe fc9a 	bl	80122d0 <GUI_DrawHLine>
 801399c:	6961      	ldr	r1, [r4, #20]
 801399e:	69e2      	ldr	r2, [r4, #28]
 80139a0:	3101      	adds	r1, #1
 80139a2:	4638      	mov	r0, r7
 80139a4:	f7fe fc72 	bl	801228c <GUI_DrawVLine>
 80139a8:	69a8      	ldr	r0, [r5, #24]
 80139aa:	f7fe f9a9 	bl	8011d00 <GUI_SetColor>
 80139ae:	6961      	ldr	r1, [r4, #20]
 80139b0:	69e3      	ldr	r3, [r4, #28]
 80139b2:	4630      	mov	r0, r6
 80139b4:	3101      	adds	r1, #1
 80139b6:	4642      	mov	r2, r8
 80139b8:	3b01      	subs	r3, #1
 80139ba:	e036      	b.n	8013a2a <SLIDER_DrawSkinFlex+0x122>
 80139bc:	6941      	ldr	r1, [r0, #20]
 80139be:	69c0      	ldr	r0, [r0, #28]
 80139c0:	18ce      	adds	r6, r1, r3
 80139c2:	1a41      	subs	r1, r0, r1
 80139c4:	1acb      	subs	r3, r1, r3
 80139c6:	1a9b      	subs	r3, r3, r2
 80139c8:	2702      	movs	r7, #2
 80139ca:	fb93 f3f7 	sdiv	r3, r3, r7
 80139ce:	3601      	adds	r6, #1
 80139d0:	441e      	add	r6, r3
 80139d2:	eb06 0802 	add.w	r8, r6, r2
 80139d6:	f108 37ff 	add.w	r7, r8, #4294967295
 80139da:	6928      	ldr	r0, [r5, #16]
 80139dc:	f7fe f990 	bl	8011d00 <GUI_SetColor>
 80139e0:	4631      	mov	r1, r6
 80139e2:	6920      	ldr	r0, [r4, #16]
 80139e4:	463a      	mov	r2, r7
 80139e6:	f7fe fc51 	bl	801228c <GUI_DrawVLine>
 80139ea:	6921      	ldr	r1, [r4, #16]
 80139ec:	69a2      	ldr	r2, [r4, #24]
 80139ee:	4630      	mov	r0, r6
 80139f0:	3101      	adds	r1, #1
 80139f2:	f7fe fc6d 	bl	80122d0 <GUI_DrawHLine>
 80139f6:	3601      	adds	r6, #1
 80139f8:	6968      	ldr	r0, [r5, #20]
 80139fa:	f1a8 0802 	sub.w	r8, r8, #2
 80139fe:	f7fe f97f 	bl	8011d00 <GUI_SetColor>
 8013a02:	69a0      	ldr	r0, [r4, #24]
 8013a04:	4631      	mov	r1, r6
 8013a06:	4642      	mov	r2, r8
 8013a08:	f7fe fc40 	bl	801228c <GUI_DrawVLine>
 8013a0c:	6921      	ldr	r1, [r4, #16]
 8013a0e:	69a2      	ldr	r2, [r4, #24]
 8013a10:	3101      	adds	r1, #1
 8013a12:	4638      	mov	r0, r7
 8013a14:	f7fe fc5c 	bl	80122d0 <GUI_DrawHLine>
 8013a18:	69a8      	ldr	r0, [r5, #24]
 8013a1a:	f7fe f971 	bl	8011d00 <GUI_SetColor>
 8013a1e:	6920      	ldr	r0, [r4, #16]
 8013a20:	69a2      	ldr	r2, [r4, #24]
 8013a22:	3001      	adds	r0, #1
 8013a24:	4631      	mov	r1, r6
 8013a26:	3a01      	subs	r2, #1
 8013a28:	4643      	mov	r3, r8
 8013a2a:	f7fe fbe9 	bl	8012200 <GUI_FillRect>
 8013a2e:	e149      	b.n	8013cc4 <SLIDER_DrawSkinFlex+0x3bc>
 8013a30:	681e      	ldr	r6, [r3, #0]
 8013a32:	6919      	ldr	r1, [r3, #16]
 8013a34:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8013a36:	3601      	adds	r6, #1
 8013a38:	1076      	asrs	r6, r6, #1
 8013a3a:	2900      	cmp	r1, #0
 8013a3c:	d07a      	beq.n	8013b34 <SLIDER_DrawSkinFlex+0x22c>
 8013a3e:	6983      	ldr	r3, [r0, #24]
 8013a40:	6828      	ldr	r0, [r5, #0]
 8013a42:	ebc2 0a03 	rsb	sl, r2, r3
 8013a46:	f10a 39ff 	add.w	r9, sl, #4294967295
 8013a4a:	f7fe f959 	bl	8011d00 <GUI_SetColor>
 8013a4e:	6961      	ldr	r1, [r4, #20]
 8013a50:	ebc6 0809 	rsb	r8, r6, r9
 8013a54:	f108 0701 	add.w	r7, r8, #1
 8013a58:	198b      	adds	r3, r1, r6
 8013a5a:	4638      	mov	r0, r7
 8013a5c:	464a      	mov	r2, r9
 8013a5e:	3b01      	subs	r3, #1
 8013a60:	f005 fa5c 	bl	8018f1c <GUI_DrawLine>
 8013a64:	69e1      	ldr	r1, [r4, #28]
 8013a66:	1b8b      	subs	r3, r1, r6
 8013a68:	3301      	adds	r3, #1
 8013a6a:	4638      	mov	r0, r7
 8013a6c:	464a      	mov	r2, r9
 8013a6e:	f005 fa55 	bl	8018f1c <GUI_DrawLine>
 8013a72:	6960      	ldr	r0, [r4, #20]
 8013a74:	6921      	ldr	r1, [r4, #16]
 8013a76:	4642      	mov	r2, r8
 8013a78:	f7fe fc2a 	bl	80122d0 <GUI_DrawHLine>
 8013a7c:	69e0      	ldr	r0, [r4, #28]
 8013a7e:	6921      	ldr	r1, [r4, #16]
 8013a80:	4642      	mov	r2, r8
 8013a82:	f7fe fc25 	bl	80122d0 <GUI_DrawHLine>
 8013a86:	6961      	ldr	r1, [r4, #20]
 8013a88:	69e2      	ldr	r2, [r4, #28]
 8013a8a:	6920      	ldr	r0, [r4, #16]
 8013a8c:	f7fe fbfe 	bl	801228c <GUI_DrawVLine>
 8013a90:	6868      	ldr	r0, [r5, #4]
 8013a92:	f7fe f935 	bl	8011d00 <GUI_SetColor>
 8013a96:	6961      	ldr	r1, [r4, #20]
 8013a98:	f1aa 0a02 	sub.w	sl, sl, #2
 8013a9c:	198b      	adds	r3, r1, r6
 8013a9e:	4638      	mov	r0, r7
 8013aa0:	3101      	adds	r1, #1
 8013aa2:	4652      	mov	r2, sl
 8013aa4:	3b01      	subs	r3, #1
 8013aa6:	f005 fa39 	bl	8018f1c <GUI_DrawLine>
 8013aaa:	69e1      	ldr	r1, [r4, #28]
 8013aac:	1b8b      	subs	r3, r1, r6
 8013aae:	3301      	adds	r3, #1
 8013ab0:	4638      	mov	r0, r7
 8013ab2:	3901      	subs	r1, #1
 8013ab4:	4652      	mov	r2, sl
 8013ab6:	f005 fa31 	bl	8018f1c <GUI_DrawLine>
 8013aba:	6960      	ldr	r0, [r4, #20]
 8013abc:	6921      	ldr	r1, [r4, #16]
 8013abe:	3001      	adds	r0, #1
 8013ac0:	3101      	adds	r1, #1
 8013ac2:	4642      	mov	r2, r8
 8013ac4:	f7fe fc04 	bl	80122d0 <GUI_DrawHLine>
 8013ac8:	69e0      	ldr	r0, [r4, #28]
 8013aca:	6921      	ldr	r1, [r4, #16]
 8013acc:	3801      	subs	r0, #1
 8013ace:	3101      	adds	r1, #1
 8013ad0:	4642      	mov	r2, r8
 8013ad2:	f7fe fbfd 	bl	80122d0 <GUI_DrawHLine>
 8013ad6:	6920      	ldr	r0, [r4, #16]
 8013ad8:	6961      	ldr	r1, [r4, #20]
 8013ada:	69e2      	ldr	r2, [r4, #28]
 8013adc:	3001      	adds	r0, #1
 8013ade:	3101      	adds	r1, #1
 8013ae0:	3a01      	subs	r2, #1
 8013ae2:	f7fe fbd3 	bl	801228c <GUI_DrawVLine>
 8013ae6:	68aa      	ldr	r2, [r5, #8]
 8013ae8:	6920      	ldr	r0, [r4, #16]
 8013aea:	6961      	ldr	r1, [r4, #20]
 8013aec:	69e3      	ldr	r3, [r4, #28]
 8013aee:	9200      	str	r2, [sp, #0]
 8013af0:	68ea      	ldr	r2, [r5, #12]
 8013af2:	9201      	str	r2, [sp, #4]
 8013af4:	3002      	adds	r0, #2
 8013af6:	3102      	adds	r1, #2
 8013af8:	463a      	mov	r2, r7
 8013afa:	3b02      	subs	r3, #2
 8013afc:	f005 fb4c 	bl	8019198 <GUI_DrawGradientH>
 8013b00:	68e8      	ldr	r0, [r5, #12]
 8013b02:	f7fe f8fd 	bl	8011d00 <GUI_SetColor>
 8013b06:	2502      	movs	r5, #2
 8013b08:	1e73      	subs	r3, r6, #1
 8013b0a:	429d      	cmp	r5, r3
 8013b0c:	f280 80da 	bge.w	8013cc4 <SLIDER_DrawSkinFlex+0x3bc>
 8013b10:	6963      	ldr	r3, [r4, #20]
 8013b12:	4433      	add	r3, r6
 8013b14:	1b59      	subs	r1, r3, r5
 8013b16:	69e3      	ldr	r3, [r4, #28]
 8013b18:	1b9b      	subs	r3, r3, r6
 8013b1a:	195a      	adds	r2, r3, r5
 8013b1c:	ebc5 0009 	rsb	r0, r5, r9
 8013b20:	3101      	adds	r1, #1
 8013b22:	3a01      	subs	r2, #1
 8013b24:	f7fe fbb2 	bl	801228c <GUI_DrawVLine>
 8013b28:	3501      	adds	r5, #1
 8013b2a:	e7ed      	b.n	8013b08 <SLIDER_DrawSkinFlex+0x200>
 8013b2c:	20000178 	.word	0x20000178
 8013b30:	200001a4 	.word	0x200001a4
 8013b34:	6943      	ldr	r3, [r0, #20]
 8013b36:	6828      	ldr	r0, [r5, #0]
 8013b38:	eb03 0a02 	add.w	sl, r3, r2
 8013b3c:	f10a 0901 	add.w	r9, sl, #1
 8013b40:	f7fe f8de 	bl	8011d00 <GUI_SetColor>
 8013b44:	6922      	ldr	r2, [r4, #16]
 8013b46:	eb09 0806 	add.w	r8, r9, r6
 8013b4a:	f108 37ff 	add.w	r7, r8, #4294967295
 8013b4e:	1990      	adds	r0, r2, r6
 8013b50:	3801      	subs	r0, #1
 8013b52:	4649      	mov	r1, r9
 8013b54:	463b      	mov	r3, r7
 8013b56:	f005 f9e1 	bl	8018f1c <GUI_DrawLine>
 8013b5a:	69a2      	ldr	r2, [r4, #24]
 8013b5c:	1b90      	subs	r0, r2, r6
 8013b5e:	463b      	mov	r3, r7
 8013b60:	3001      	adds	r0, #1
 8013b62:	4649      	mov	r1, r9
 8013b64:	f005 f9da 	bl	8018f1c <GUI_DrawLine>
 8013b68:	6920      	ldr	r0, [r4, #16]
 8013b6a:	69e2      	ldr	r2, [r4, #28]
 8013b6c:	4641      	mov	r1, r8
 8013b6e:	f7fe fb8d 	bl	801228c <GUI_DrawVLine>
 8013b72:	69a0      	ldr	r0, [r4, #24]
 8013b74:	69e2      	ldr	r2, [r4, #28]
 8013b76:	4641      	mov	r1, r8
 8013b78:	f7fe fb88 	bl	801228c <GUI_DrawVLine>
 8013b7c:	6921      	ldr	r1, [r4, #16]
 8013b7e:	69a2      	ldr	r2, [r4, #24]
 8013b80:	69e0      	ldr	r0, [r4, #28]
 8013b82:	3101      	adds	r1, #1
 8013b84:	3a01      	subs	r2, #1
 8013b86:	f7fe fba3 	bl	80122d0 <GUI_DrawHLine>
 8013b8a:	6868      	ldr	r0, [r5, #4]
 8013b8c:	f7fe f8b8 	bl	8011d00 <GUI_SetColor>
 8013b90:	6922      	ldr	r2, [r4, #16]
 8013b92:	f10a 0a02 	add.w	sl, sl, #2
 8013b96:	1990      	adds	r0, r2, r6
 8013b98:	3801      	subs	r0, #1
 8013b9a:	4651      	mov	r1, sl
 8013b9c:	3201      	adds	r2, #1
 8013b9e:	463b      	mov	r3, r7
 8013ba0:	f005 f9bc 	bl	8018f1c <GUI_DrawLine>
 8013ba4:	69a2      	ldr	r2, [r4, #24]
 8013ba6:	1b90      	subs	r0, r2, r6
 8013ba8:	463b      	mov	r3, r7
 8013baa:	3001      	adds	r0, #1
 8013bac:	4651      	mov	r1, sl
 8013bae:	3a01      	subs	r2, #1
 8013bb0:	f005 f9b4 	bl	8018f1c <GUI_DrawLine>
 8013bb4:	6920      	ldr	r0, [r4, #16]
 8013bb6:	69e2      	ldr	r2, [r4, #28]
 8013bb8:	3001      	adds	r0, #1
 8013bba:	4641      	mov	r1, r8
 8013bbc:	3a01      	subs	r2, #1
 8013bbe:	f7fe fb65 	bl	801228c <GUI_DrawVLine>
 8013bc2:	69a0      	ldr	r0, [r4, #24]
 8013bc4:	69e2      	ldr	r2, [r4, #28]
 8013bc6:	3801      	subs	r0, #1
 8013bc8:	4641      	mov	r1, r8
 8013bca:	3a01      	subs	r2, #1
 8013bcc:	f7fe fb5e 	bl	801228c <GUI_DrawVLine>
 8013bd0:	69e0      	ldr	r0, [r4, #28]
 8013bd2:	6921      	ldr	r1, [r4, #16]
 8013bd4:	69a2      	ldr	r2, [r4, #24]
 8013bd6:	3801      	subs	r0, #1
 8013bd8:	3102      	adds	r1, #2
 8013bda:	3a02      	subs	r2, #2
 8013bdc:	f7fe fb78 	bl	80122d0 <GUI_DrawHLine>
 8013be0:	68a9      	ldr	r1, [r5, #8]
 8013be2:	6920      	ldr	r0, [r4, #16]
 8013be4:	69a2      	ldr	r2, [r4, #24]
 8013be6:	69e3      	ldr	r3, [r4, #28]
 8013be8:	9100      	str	r1, [sp, #0]
 8013bea:	68e9      	ldr	r1, [r5, #12]
 8013bec:	9101      	str	r1, [sp, #4]
 8013bee:	3002      	adds	r0, #2
 8013bf0:	4639      	mov	r1, r7
 8013bf2:	3a02      	subs	r2, #2
 8013bf4:	3b02      	subs	r3, #2
 8013bf6:	f005 fa9d 	bl	8019134 <GUI_DrawGradientV>
 8013bfa:	68a8      	ldr	r0, [r5, #8]
 8013bfc:	f7fe f880 	bl	8011d00 <GUI_SetColor>
 8013c00:	2502      	movs	r5, #2
 8013c02:	1e73      	subs	r3, r6, #1
 8013c04:	429d      	cmp	r5, r3
 8013c06:	da5d      	bge.n	8013cc4 <SLIDER_DrawSkinFlex+0x3bc>
 8013c08:	6923      	ldr	r3, [r4, #16]
 8013c0a:	4433      	add	r3, r6
 8013c0c:	1b59      	subs	r1, r3, r5
 8013c0e:	69a3      	ldr	r3, [r4, #24]
 8013c10:	1b9b      	subs	r3, r3, r6
 8013c12:	195a      	adds	r2, r3, r5
 8013c14:	eb09 0005 	add.w	r0, r9, r5
 8013c18:	3101      	adds	r1, #1
 8013c1a:	3a01      	subs	r2, #1
 8013c1c:	f7fe fb58 	bl	80122d0 <GUI_DrawHLine>
 8013c20:	3501      	adds	r5, #1
 8013c22:	e7ee      	b.n	8013c02 <SLIDER_DrawSkinFlex+0x2fa>
 8013c24:	691e      	ldr	r6, [r3, #16]
 8013c26:	69e8      	ldr	r0, [r5, #28]
 8013c28:	b1d6      	cbz	r6, 8013c60 <SLIDER_DrawSkinFlex+0x358>
 8013c2a:	f7fe f869 	bl	8011d00 <GUI_SetColor>
 8013c2e:	6a27      	ldr	r7, [r4, #32]
 8013c30:	2600      	movs	r6, #0
 8013c32:	687b      	ldr	r3, [r7, #4]
 8013c34:	429e      	cmp	r6, r3
 8013c36:	da45      	bge.n	8013cc4 <SLIDER_DrawSkinFlex+0x3bc>
 8013c38:	6839      	ldr	r1, [r7, #0]
 8013c3a:	69a2      	ldr	r2, [r4, #24]
 8013c3c:	2002      	movs	r0, #2
 8013c3e:	fb91 f0f0 	sdiv	r0, r1, r0
 8013c42:	6961      	ldr	r1, [r4, #20]
 8013c44:	4408      	add	r0, r1
 8013c46:	68b9      	ldr	r1, [r7, #8]
 8013c48:	3b01      	subs	r3, #1
 8013c4a:	4371      	muls	r1, r6
 8013c4c:	fb91 f3f3 	sdiv	r3, r1, r3
 8013c50:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8013c52:	1a51      	subs	r1, r2, r1
 8013c54:	4418      	add	r0, r3
 8013c56:	3101      	adds	r1, #1
 8013c58:	f7fe fb3a 	bl	80122d0 <GUI_DrawHLine>
 8013c5c:	3601      	adds	r6, #1
 8013c5e:	e7e8      	b.n	8013c32 <SLIDER_DrawSkinFlex+0x32a>
 8013c60:	f7fe f84e 	bl	8011d00 <GUI_SetColor>
 8013c64:	6a27      	ldr	r7, [r4, #32]
 8013c66:	687b      	ldr	r3, [r7, #4]
 8013c68:	429e      	cmp	r6, r3
 8013c6a:	da2b      	bge.n	8013cc4 <SLIDER_DrawSkinFlex+0x3bc>
 8013c6c:	683a      	ldr	r2, [r7, #0]
 8013c6e:	6961      	ldr	r1, [r4, #20]
 8013c70:	2002      	movs	r0, #2
 8013c72:	fb92 f0f0 	sdiv	r0, r2, r0
 8013c76:	6922      	ldr	r2, [r4, #16]
 8013c78:	4410      	add	r0, r2
 8013c7a:	68ba      	ldr	r2, [r7, #8]
 8013c7c:	3b01      	subs	r3, #1
 8013c7e:	4372      	muls	r2, r6
 8013c80:	fb92 f3f3 	sdiv	r3, r2, r3
 8013c84:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8013c86:	440a      	add	r2, r1
 8013c88:	4418      	add	r0, r3
 8013c8a:	3a01      	subs	r2, #1
 8013c8c:	f7fe fafe 	bl	801228c <GUI_DrawVLine>
 8013c90:	3601      	adds	r6, #1
 8013c92:	e7e8      	b.n	8013c66 <SLIDER_DrawSkinFlex+0x35e>
 8013c94:	6800      	ldr	r0, [r0, #0]
 8013c96:	2101      	movs	r1, #1
 8013c98:	f7f6 f84c 	bl	8009d34 <SLIDER_GetFlag>
 8013c9c:	b190      	cbz	r0, 8013cc4 <SLIDER_DrawSkinFlex+0x3bc>
 8013c9e:	6a28      	ldr	r0, [r5, #32]
 8013ca0:	f7fe f82e 	bl	8011d00 <GUI_SetColor>
 8013ca4:	6923      	ldr	r3, [r4, #16]
 8013ca6:	f8ad 3008 	strh.w	r3, [sp, #8]
 8013caa:	6963      	ldr	r3, [r4, #20]
 8013cac:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013cb0:	69a3      	ldr	r3, [r4, #24]
 8013cb2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013cb6:	a802      	add	r0, sp, #8
 8013cb8:	69e3      	ldr	r3, [r4, #28]
 8013cba:	f8ad 300e 	strh.w	r3, [sp, #14]
 8013cbe:	2100      	movs	r1, #0
 8013cc0:	f7fe fb2a 	bl	8012318 <GUI_DrawFocusRect>
 8013cc4:	2000      	movs	r0, #0
 8013cc6:	b004      	add	sp, #16
 8013cc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08013ccc <_Create>:
 8013ccc:	b530      	push	{r4, r5, lr}
 8013cce:	b08b      	sub	sp, #44	; 0x2c
 8013cd0:	4605      	mov	r5, r0
 8013cd2:	f7ff fa05 	bl	80130e0 <GUI_ALLOC_LockH>
 8013cd6:	ab0a      	add	r3, sp, #40	; 0x28
 8013cd8:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8013cda:	f843 0d28 	str.w	r0, [r3, #-40]!
 8013cde:	4668      	mov	r0, sp
 8013ce0:	f7ff fa0c 	bl	80130fc <GUI_ALLOC_UnlockH>
 8013ce4:	2300      	movs	r3, #0
 8013ce6:	9302      	str	r3, [sp, #8]
 8013ce8:	9501      	str	r5, [sp, #4]
 8013cea:	9309      	str	r3, [sp, #36]	; 0x24
 8013cec:	a801      	add	r0, sp, #4
 8013cee:	47a0      	blx	r4
 8013cf0:	b00b      	add	sp, #44	; 0x2c
 8013cf2:	bd30      	pop	{r4, r5, pc}

08013cf4 <_Paint>:
 8013cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cf8:	b097      	sub	sp, #92	; 0x5c
 8013cfa:	4607      	mov	r7, r0
 8013cfc:	f7ff f9f0 	bl	80130e0 <GUI_ALLOC_LockH>
 8013d00:	f100 0350 	add.w	r3, r0, #80	; 0x50
 8013d04:	e893 0168 	ldmia.w	r3, {r3, r5, r6, r8}
 8013d08:	9309      	str	r3, [sp, #36]	; 0x24
 8013d0a:	f9b0 3060 	ldrsh.w	r3, [r0, #96]	; 0x60
 8013d0e:	9308      	str	r3, [sp, #32]
 8013d10:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8013d12:	9003      	str	r0, [sp, #12]
 8013d14:	f3c3 2200 	ubfx	r2, r3, #8, #1
 8013d18:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8013d1a:	920b      	str	r2, [sp, #44]	; 0x2c
 8013d1c:	a803      	add	r0, sp, #12
 8013d1e:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8013d22:	f003 0301 	and.w	r3, r3, #1
 8013d26:	920c      	str	r2, [sp, #48]	; 0x30
 8013d28:	9301      	str	r3, [sp, #4]
 8013d2a:	f7ff f9e7 	bl	80130fc <GUI_ALLOC_UnlockH>
 8013d2e:	a904      	add	r1, sp, #16
 8013d30:	4638      	mov	r0, r7
 8013d32:	f7f8 fdc0 	bl	800c8b6 <WM_GetClientRectEx>
 8013d36:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8013d3a:	f9bd c016 	ldrsh.w	ip, [sp, #22]
 8013d3e:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8013d42:	9b08      	ldr	r3, [sp, #32]
 8013d44:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 8013d48:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013d4c:	42b5      	cmp	r5, r6
 8013d4e:	bf14      	ite	ne
 8013d50:	ebc6 0505 	rsbne	r5, r6, r5
 8013d54:	2501      	moveq	r5, #1
 8013d56:	f1ba 0f00 	cmp.w	sl, #0
 8013d5a:	d002      	beq.n	8013d62 <_Paint+0x6e>
 8013d5c:	ebc1 090c 	rsb	r9, r1, ip
 8013d60:	e001      	b.n	8013d66 <_Paint+0x72>
 8013d62:	ebc2 090e 	rsb	r9, r2, lr
 8013d66:	43d8      	mvns	r0, r3
 8013d68:	4481      	add	r9, r0
 8013d6a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013d6c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8013d70:	2800      	cmp	r0, #0
 8013d72:	da08      	bge.n	8013d86 <_Paint+0x92>
 8013d74:	f04f 0b05 	mov.w	fp, #5
 8013d78:	1c68      	adds	r0, r5, #1
 8013d7a:	fb99 f9fb 	sdiv	r9, r9, fp
 8013d7e:	4548      	cmp	r0, r9
 8013d80:	bfc8      	it	gt
 8013d82:	200b      	movgt	r0, #11
 8013d84:	9009      	str	r0, [sp, #36]	; 0x24
 8013d86:	ebc6 0608 	rsb	r6, r6, r8
 8013d8a:	f1ba 0f00 	cmp.w	sl, #0
 8013d8e:	d003      	beq.n	8013d98 <_Paint+0xa4>
 8013d90:	1c48      	adds	r0, r1, #1
 8013d92:	ebc1 080c 	rsb	r8, r1, ip
 8013d96:	e002      	b.n	8013d9e <_Paint+0xaa>
 8013d98:	1c50      	adds	r0, r2, #1
 8013d9a:	ebc2 080e 	rsb	r8, r2, lr
 8013d9e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013da2:	ebc3 0808 	rsb	r8, r3, r8
 8013da6:	fb06 f608 	mul.w	r6, r6, r8
 8013daa:	fb96 f6f5 	sdiv	r6, r6, r5
 8013dae:	4605      	mov	r5, r0
 8013db0:	4435      	add	r5, r6
 8013db2:	442b      	add	r3, r5
 8013db4:	1e5e      	subs	r6, r3, #1
 8013db6:	ab08      	add	r3, sp, #32
 8013db8:	f10e 30ff 	add.w	r0, lr, #4294967295
 8013dbc:	9315      	str	r3, [sp, #84]	; 0x54
 8013dbe:	230f      	movs	r3, #15
 8013dc0:	3101      	adds	r1, #1
 8013dc2:	3201      	adds	r2, #1
 8013dc4:	930e      	str	r3, [sp, #56]	; 0x38
 8013dc6:	9013      	str	r0, [sp, #76]	; 0x4c
 8013dc8:	f10c 33ff 	add.w	r3, ip, #4294967295
 8013dcc:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013dd0:	a806      	add	r0, sp, #24
 8013dd2:	9314      	str	r3, [sp, #80]	; 0x50
 8013dd4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013dd8:	9112      	str	r1, [sp, #72]	; 0x48
 8013dda:	9211      	str	r2, [sp, #68]	; 0x44
 8013ddc:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013de0:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013de4:	970d      	str	r7, [sp, #52]	; 0x34
 8013de6:	f7f8 f93b 	bl	800c060 <WM_SetUserClipRect>
 8013dea:	a80d      	add	r0, sp, #52	; 0x34
 8013dec:	47a0      	blx	r4
 8013dee:	2000      	movs	r0, #0
 8013df0:	f7f8 f936 	bl	800c060 <WM_SetUserClipRect>
 8013df4:	2313      	movs	r3, #19
 8013df6:	930e      	str	r3, [sp, #56]	; 0x38
 8013df8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013dfa:	b113      	cbz	r3, 8013e02 <_Paint+0x10e>
 8013dfc:	9512      	str	r5, [sp, #72]	; 0x48
 8013dfe:	9614      	str	r6, [sp, #80]	; 0x50
 8013e00:	e001      	b.n	8013e06 <_Paint+0x112>
 8013e02:	9511      	str	r5, [sp, #68]	; 0x44
 8013e04:	9613      	str	r6, [sp, #76]	; 0x4c
 8013e06:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013e08:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013e0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013e0e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013e12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013e14:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e18:	a806      	add	r0, sp, #24
 8013e1a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013e1c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013e20:	f7f8 f91e 	bl	800c060 <WM_SetUserClipRect>
 8013e24:	a80d      	add	r0, sp, #52	; 0x34
 8013e26:	47a0      	blx	r4
 8013e28:	2000      	movs	r0, #0
 8013e2a:	f7f8 f919 	bl	800c060 <WM_SetUserClipRect>
 8013e2e:	2314      	movs	r3, #20
 8013e30:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8013e34:	930e      	str	r3, [sp, #56]	; 0x38
 8013e36:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8013e3a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013e3e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8013e42:	3001      	adds	r0, #1
 8013e44:	3b01      	subs	r3, #1
 8013e46:	3101      	adds	r1, #1
 8013e48:	3a01      	subs	r2, #1
 8013e4a:	9011      	str	r0, [sp, #68]	; 0x44
 8013e4c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013e50:	a806      	add	r0, sp, #24
 8013e52:	9314      	str	r3, [sp, #80]	; 0x50
 8013e54:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013e58:	9112      	str	r1, [sp, #72]	; 0x48
 8013e5a:	9213      	str	r2, [sp, #76]	; 0x4c
 8013e5c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013e60:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013e64:	f7f8 f8fc 	bl	800c060 <WM_SetUserClipRect>
 8013e68:	a80d      	add	r0, sp, #52	; 0x34
 8013e6a:	47a0      	blx	r4
 8013e6c:	2000      	movs	r0, #0
 8013e6e:	f7f8 f8f7 	bl	800c060 <WM_SetUserClipRect>
 8013e72:	9b01      	ldr	r3, [sp, #4]
 8013e74:	b30b      	cbz	r3, 8013eba <_Paint+0x1c6>
 8013e76:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8013e7a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8013e7e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013e82:	230a      	movs	r3, #10
 8013e84:	930e      	str	r3, [sp, #56]	; 0x38
 8013e86:	b20b      	sxth	r3, r1
 8013e88:	9312      	str	r3, [sp, #72]	; 0x48
 8013e8a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013e8e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013e92:	b21a      	sxth	r2, r3
 8013e94:	9214      	str	r2, [sp, #80]	; 0x50
 8013e96:	b202      	sxth	r2, r0
 8013e98:	9211      	str	r2, [sp, #68]	; 0x44
 8013e9a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013e9e:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013ea2:	b215      	sxth	r5, r2
 8013ea4:	a806      	add	r0, sp, #24
 8013ea6:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013eaa:	9513      	str	r5, [sp, #76]	; 0x4c
 8013eac:	f7f8 f8d8 	bl	800c060 <WM_SetUserClipRect>
 8013eb0:	a80d      	add	r0, sp, #52	; 0x34
 8013eb2:	47a0      	blx	r4
 8013eb4:	2000      	movs	r0, #0
 8013eb6:	f7f8 f8d3 	bl	800c060 <WM_SetUserClipRect>
 8013eba:	b017      	add	sp, #92	; 0x5c
 8013ebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013ec0 <SCROLLBAR_GetValue>:
 8013ec0:	b513      	push	{r0, r1, r4, lr}
 8013ec2:	4604      	mov	r4, r0
 8013ec4:	b140      	cbz	r0, 8013ed8 <SCROLLBAR_GetValue+0x18>
 8013ec6:	f7ff f90b 	bl	80130e0 <GUI_ALLOC_LockH>
 8013eca:	ab02      	add	r3, sp, #8
 8013ecc:	6d04      	ldr	r4, [r0, #80]	; 0x50
 8013ece:	f843 0d04 	str.w	r0, [r3, #-4]!
 8013ed2:	4618      	mov	r0, r3
 8013ed4:	f7ff f912 	bl	80130fc <GUI_ALLOC_UnlockH>
 8013ed8:	4620      	mov	r0, r4
 8013eda:	b002      	add	sp, #8
 8013edc:	bd10      	pop	{r4, pc}

08013ede <SCROLLBAR_Create>:
 8013ede:	b530      	push	{r4, r5, lr}
 8013ee0:	9c05      	ldr	r4, [sp, #20]
 8013ee2:	9d04      	ldr	r5, [sp, #16]
 8013ee4:	9404      	str	r4, [sp, #16]
 8013ee6:	9c06      	ldr	r4, [sp, #24]
 8013ee8:	9405      	str	r4, [sp, #20]
 8013eea:	9506      	str	r5, [sp, #24]
 8013eec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013ef0:	f000 b8a6 	b.w	8014040 <SCROLLBAR_CreateEx>

08013ef4 <_DeleteTimer>:
 8013ef4:	b507      	push	{r0, r1, r2, lr}
 8013ef6:	f7ff f8f3 	bl	80130e0 <GUI_ALLOC_LockH>
 8013efa:	9001      	str	r0, [sp, #4]
 8013efc:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8013efe:	f7f8 f809 	bl	800bf14 <WM_DeleteTimer>
 8013f02:	a802      	add	r0, sp, #8
 8013f04:	2200      	movs	r2, #0
 8013f06:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8013f0a:	665a      	str	r2, [r3, #100]	; 0x64
 8013f0c:	65da      	str	r2, [r3, #92]	; 0x5c
 8013f0e:	f7ff f8f5 	bl	80130fc <GUI_ALLOC_UnlockH>
 8013f12:	b003      	add	sp, #12
 8013f14:	f85d fb04 	ldr.w	pc, [sp], #4

08013f18 <SCROLLBAR__Rect2VRect>:
 8013f18:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8013f1a:	071b      	lsls	r3, r3, #28
 8013f1c:	b510      	push	{r4, lr}
 8013f1e:	d512      	bpl.n	8013f46 <SCROLLBAR__Rect2VRect+0x2e>
 8013f20:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8013f24:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013f28:	8808      	ldrh	r0, [r1, #0]
 8013f2a:	884c      	ldrh	r4, [r1, #2]
 8013f2c:	800c      	strh	r4, [r1, #0]
 8013f2e:	1ad3      	subs	r3, r2, r3
 8013f30:	888a      	ldrh	r2, [r1, #4]
 8013f32:	88cc      	ldrh	r4, [r1, #6]
 8013f34:	808c      	strh	r4, [r1, #4]
 8013f36:	3301      	adds	r3, #1
 8013f38:	b29b      	uxth	r3, r3
 8013f3a:	43c0      	mvns	r0, r0
 8013f3c:	43d2      	mvns	r2, r2
 8013f3e:	4418      	add	r0, r3
 8013f40:	4413      	add	r3, r2
 8013f42:	80c8      	strh	r0, [r1, #6]
 8013f44:	804b      	strh	r3, [r1, #2]
 8013f46:	bd10      	pop	{r4, pc}

08013f48 <SCROLLBAR__InvalidatePartner>:
 8013f48:	b510      	push	{r4, lr}
 8013f4a:	4604      	mov	r4, r0
 8013f4c:	f001 fe05 	bl	8015b5a <WM_GetScrollPartner>
 8013f50:	f7f9 fa13 	bl	800d37a <WM_InvalidateWindow>
 8013f54:	4620      	mov	r0, r4
 8013f56:	f7f8 fc1d 	bl	800c794 <WM_GetParent>
 8013f5a:	2125      	movs	r1, #37	; 0x25
 8013f5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f60:	f7f8 b9cc 	b.w	800c2fc <WM_SendMessageNoPara>

08013f64 <SCROLLBAR_CreateUser>:
 8013f64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f66:	b089      	sub	sp, #36	; 0x24
 8013f68:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013f6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8013f6c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013f6e:	b9fa      	cbnz	r2, 8013fb0 <SCROLLBAR_CreateUser+0x4c>
 8013f70:	b9f3      	cbnz	r3, 8013fb0 <SCROLLBAR_CreateUser+0x4c>
 8013f72:	4630      	mov	r0, r6
 8013f74:	a906      	add	r1, sp, #24
 8013f76:	f001 fe04 	bl	8015b82 <WM_GetInsideRectEx>
 8013f7a:	f014 0f08 	tst.w	r4, #8
 8013f7e:	4b2c      	ldr	r3, [pc, #176]	; (8014030 <SCROLLBAR_CreateUser+0xcc>)
 8013f80:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 8013f84:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 8013f88:	d009      	beq.n	8013f9e <SCROLLBAR_CreateUser+0x3a>
 8013f8a:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8013f8e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f92:	1c78      	adds	r0, r7, #1
 8013f94:	ebc1 030e 	rsb	r3, r1, lr
 8013f98:	1a80      	subs	r0, r0, r2
 8013f9a:	3301      	adds	r3, #1
 8013f9c:	e008      	b.n	8013fb0 <SCROLLBAR_CreateUser+0x4c>
 8013f9e:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8013fa2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013fa6:	f10e 0101 	add.w	r1, lr, #1
 8013faa:	1a3a      	subs	r2, r7, r0
 8013fac:	1ac9      	subs	r1, r1, r3
 8013fae:	3201      	adds	r2, #1
 8013fb0:	9600      	str	r6, [sp, #0]
 8013fb2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8013fb4:	9601      	str	r6, [sp, #4]
 8013fb6:	4e1f      	ldr	r6, [pc, #124]	; (8014034 <SCROLLBAR_CreateUser+0xd0>)
 8013fb8:	9602      	str	r6, [sp, #8]
 8013fba:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8013fbc:	363c      	adds	r6, #60	; 0x3c
 8013fbe:	9603      	str	r6, [sp, #12]
 8013fc0:	f7f9 fa1c 	bl	800d3fc <WM_CreateWindowAsChild>
 8013fc4:	4606      	mov	r6, r0
 8013fc6:	2800      	cmp	r0, #0
 8013fc8:	d02f      	beq.n	801402a <SCROLLBAR_CreateUser+0xc6>
 8013fca:	f7ff f889 	bl	80130e0 <GUI_ALLOC_LockH>
 8013fce:	f004 0208 	and.w	r2, r4, #8
 8013fd2:	06e3      	lsls	r3, r4, #27
 8013fd4:	bf48      	it	mi
 8013fd6:	f042 0210 	orrmi.w	r2, r2, #16
 8013fda:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 8013fde:	bf48      	it	mi
 8013fe0:	b292      	uxthmi	r2, r2
 8013fe2:	2b01      	cmp	r3, #1
 8013fe4:	bf88      	it	hi
 8013fe6:	f042 0210 	orrhi.w	r2, r2, #16
 8013fea:	4629      	mov	r1, r5
 8013fec:	9005      	str	r0, [sp, #20]
 8013fee:	f7f5 fc53 	bl	8009898 <WIDGET__Init>
 8013ff2:	4b11      	ldr	r3, [pc, #68]	; (8014038 <SCROLLBAR_CreateUser+0xd4>)
 8013ff4:	af08      	add	r7, sp, #32
 8013ff6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8013ff8:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 8013ffc:	f104 0534 	add.w	r5, r4, #52	; 0x34
 8014000:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8014004:	2364      	movs	r3, #100	; 0x64
 8014006:	64e3      	str	r3, [r4, #76]	; 0x4c
 8014008:	4d0c      	ldr	r5, [pc, #48]	; (801403c <SCROLLBAR_CreateUser+0xd8>)
 801400a:	230a      	movs	r3, #10
 801400c:	6563      	str	r3, [r4, #84]	; 0x54
 801400e:	2300      	movs	r3, #0
 8014010:	6523      	str	r3, [r4, #80]	; 0x50
 8014012:	682b      	ldr	r3, [r5, #0]
 8014014:	6463      	str	r3, [r4, #68]	; 0x44
 8014016:	4638      	mov	r0, r7
 8014018:	f7ff f870 	bl	80130fc <GUI_ALLOC_UnlockH>
 801401c:	682b      	ldr	r3, [r5, #0]
 801401e:	4630      	mov	r0, r6
 8014020:	685b      	ldr	r3, [r3, #4]
 8014022:	4798      	blx	r3
 8014024:	4630      	mov	r0, r6
 8014026:	f7ff ff8f 	bl	8013f48 <SCROLLBAR__InvalidatePartner>
 801402a:	4630      	mov	r0, r6
 801402c:	b009      	add	sp, #36	; 0x24
 801402e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014030:	200001f0 	.word	0x200001f0
 8014034:	080140e3 	.word	0x080140e3
 8014038:	200001dc 	.word	0x200001dc
 801403c:	200001ec 	.word	0x200001ec

08014040 <SCROLLBAR_CreateEx>:
 8014040:	b510      	push	{r4, lr}
 8014042:	b086      	sub	sp, #24
 8014044:	9c08      	ldr	r4, [sp, #32]
 8014046:	9400      	str	r4, [sp, #0]
 8014048:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801404a:	9401      	str	r4, [sp, #4]
 801404c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801404e:	9402      	str	r4, [sp, #8]
 8014050:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014052:	9403      	str	r4, [sp, #12]
 8014054:	2400      	movs	r4, #0
 8014056:	9404      	str	r4, [sp, #16]
 8014058:	f7ff ff84 	bl	8013f64 <SCROLLBAR_CreateUser>
 801405c:	b006      	add	sp, #24
 801405e:	bd10      	pop	{r4, pc}

08014060 <SCROLLBAR_SetValue>:
 8014060:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014062:	460c      	mov	r4, r1
 8014064:	4605      	mov	r5, r0
 8014066:	b300      	cbz	r0, 80140aa <SCROLLBAR_SetValue+0x4a>
 8014068:	f7ff f83a 	bl	80130e0 <GUI_ALLOC_LockH>
 801406c:	2c00      	cmp	r4, #0
 801406e:	9001      	str	r0, [sp, #4]
 8014070:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8014072:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8014074:	db05      	blt.n	8014082 <SCROLLBAR_SetValue+0x22>
 8014076:	1a8a      	subs	r2, r1, r2
 8014078:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801407c:	4294      	cmp	r4, r2
 801407e:	dc02      	bgt.n	8014086 <SCROLLBAR_SetValue+0x26>
 8014080:	e000      	b.n	8014084 <SCROLLBAR_SetValue+0x24>
 8014082:	2400      	movs	r4, #0
 8014084:	4622      	mov	r2, r4
 8014086:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8014088:	4291      	cmp	r1, r2
 801408a:	d00b      	beq.n	80140a4 <SCROLLBAR_SetValue+0x44>
 801408c:	6502      	str	r2, [r0, #80]	; 0x50
 801408e:	4628      	mov	r0, r5
 8014090:	f7f9 f973 	bl	800d37a <WM_InvalidateWindow>
 8014094:	a801      	add	r0, sp, #4
 8014096:	f7ff f831 	bl	80130fc <GUI_ALLOC_UnlockH>
 801409a:	4628      	mov	r0, r5
 801409c:	2105      	movs	r1, #5
 801409e:	f7f8 fa18 	bl	800c4d2 <WM_NotifyParent>
 80140a2:	e002      	b.n	80140aa <SCROLLBAR_SetValue+0x4a>
 80140a4:	a801      	add	r0, sp, #4
 80140a6:	f7ff f829 	bl	80130fc <GUI_ALLOC_UnlockH>
 80140aa:	b003      	add	sp, #12
 80140ac:	bd30      	pop	{r4, r5, pc}

080140ae <SCROLLBAR_AddValue>:
 80140ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80140b0:	460d      	mov	r5, r1
 80140b2:	4606      	mov	r6, r0
 80140b4:	b160      	cbz	r0, 80140d0 <SCROLLBAR_AddValue+0x22>
 80140b6:	f7ff f813 	bl	80130e0 <GUI_ALLOC_LockH>
 80140ba:	4602      	mov	r2, r0
 80140bc:	a802      	add	r0, sp, #8
 80140be:	6d14      	ldr	r4, [r2, #80]	; 0x50
 80140c0:	f840 2d04 	str.w	r2, [r0, #-4]!
 80140c4:	f7ff f81a 	bl	80130fc <GUI_ALLOC_UnlockH>
 80140c8:	4630      	mov	r0, r6
 80140ca:	1961      	adds	r1, r4, r5
 80140cc:	f7ff ffc8 	bl	8014060 <SCROLLBAR_SetValue>
 80140d0:	b002      	add	sp, #8
 80140d2:	bd70      	pop	{r4, r5, r6, pc}

080140d4 <SCROLLBAR_Dec>:
 80140d4:	f04f 31ff 	mov.w	r1, #4294967295
 80140d8:	f7ff bfe9 	b.w	80140ae <SCROLLBAR_AddValue>

080140dc <SCROLLBAR_Inc>:
 80140dc:	2101      	movs	r1, #1
 80140de:	f7ff bfe6 	b.w	80140ae <SCROLLBAR_AddValue>

080140e2 <SCROLLBAR_Callback>:
 80140e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140e6:	6844      	ldr	r4, [r0, #4]
 80140e8:	4680      	mov	r8, r0
 80140ea:	b08f      	sub	sp, #60	; 0x3c
 80140ec:	4620      	mov	r0, r4
 80140ee:	4641      	mov	r1, r8
 80140f0:	f7f5 fbda 	bl	80098a8 <WIDGET_HandleActive>
 80140f4:	2800      	cmp	r0, #0
 80140f6:	f000 81c0 	beq.w	801447a <SCROLLBAR_Callback+0x398>
 80140fa:	f8d8 3000 	ldr.w	r3, [r8]
 80140fe:	2b23      	cmp	r3, #35	; 0x23
 8014100:	f000 8182 	beq.w	8014408 <SCROLLBAR_Callback+0x326>
 8014104:	dc0b      	bgt.n	801411e <SCROLLBAR_Callback+0x3c>
 8014106:	2b0e      	cmp	r3, #14
 8014108:	f000 812a 	beq.w	8014360 <SCROLLBAR_Callback+0x27e>
 801410c:	2b0f      	cmp	r3, #15
 801410e:	d012      	beq.n	8014136 <SCROLLBAR_Callback+0x54>
 8014110:	2b0b      	cmp	r3, #11
 8014112:	f040 81af 	bne.w	8014474 <SCROLLBAR_Callback+0x392>
 8014116:	4620      	mov	r0, r4
 8014118:	f7ff ff16 	bl	8013f48 <SCROLLBAR__InvalidatePartner>
 801411c:	e1aa      	b.n	8014474 <SCROLLBAR_Callback+0x392>
 801411e:	f240 1213 	movw	r2, #275	; 0x113
 8014122:	4293      	cmp	r3, r2
 8014124:	f000 817f 	beq.w	8014426 <SCROLLBAR_Callback+0x344>
 8014128:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 801412c:	d012      	beq.n	8014154 <SCROLLBAR_Callback+0x72>
 801412e:	2b24      	cmp	r3, #36	; 0x24
 8014130:	f040 81a0 	bne.w	8014474 <SCROLLBAR_Callback+0x392>
 8014134:	e143      	b.n	80143be <SCROLLBAR_Callback+0x2dc>
 8014136:	4620      	mov	r0, r4
 8014138:	f7fe ffd2 	bl	80130e0 <GUI_ALLOC_LockH>
 801413c:	9005      	str	r0, [sp, #20]
 801413e:	2800      	cmp	r0, #0
 8014140:	f000 819b 	beq.w	801447a <SCROLLBAR_Callback+0x398>
 8014144:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8014146:	a805      	add	r0, sp, #20
 8014148:	681d      	ldr	r5, [r3, #0]
 801414a:	f7fe ffd7 	bl	80130fc <GUI_ALLOC_UnlockH>
 801414e:	4620      	mov	r0, r4
 8014150:	47a8      	blx	r5
 8014152:	e192      	b.n	801447a <SCROLLBAR_Callback+0x398>
 8014154:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8014158:	2f00      	cmp	r7, #0
 801415a:	f000 818b 	beq.w	8014474 <SCROLLBAR_Callback+0x392>
 801415e:	7a3b      	ldrb	r3, [r7, #8]
 8014160:	4620      	mov	r0, r4
 8014162:	2b00      	cmp	r3, #0
 8014164:	f000 80d6 	beq.w	8014314 <SCROLLBAR_Callback+0x232>
 8014168:	f7fe ffba 	bl	80130e0 <GUI_ALLOC_LockH>
 801416c:	a905      	add	r1, sp, #20
 801416e:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8014170:	9003      	str	r0, [sp, #12]
 8014172:	6d06      	ldr	r6, [r0, #80]	; 0x50
 8014174:	4620      	mov	r0, r4
 8014176:	4798      	blx	r3
 8014178:	9b03      	ldr	r3, [sp, #12]
 801417a:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 801417e:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8014180:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8014182:	f01a 0f08 	tst.w	sl, #8
 8014186:	ebc5 0902 	rsb	r9, r5, r2
 801418a:	d003      	beq.n	8014194 <SCROLLBAR_Callback+0xb2>
 801418c:	e897 0006 	ldmia.w	r7, {r1, r2}
 8014190:	603a      	str	r2, [r7, #0]
 8014192:	6079      	str	r1, [r7, #4]
 8014194:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8014196:	683f      	ldr	r7, [r7, #0]
 8014198:	2a03      	cmp	r2, #3
 801419a:	d114      	bne.n	80141c6 <SCROLLBAR_Callback+0xe4>
 801419c:	4620      	mov	r0, r4
 801419e:	f7ff fea9 	bl	8013ef4 <_DeleteTimer>
 80141a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141a4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80141a6:	2002      	movs	r0, #2
 80141a8:	fb93 f3f0 	sdiv	r3, r3, r0
 80141ac:	1aff      	subs	r7, r7, r3
 80141ae:	9b06      	ldr	r3, [sp, #24]
 80141b0:	1afb      	subs	r3, r7, r3
 80141b2:	1e58      	subs	r0, r3, #1
 80141b4:	fb00 f009 	mul.w	r0, r0, r9
 80141b8:	f004 fa78 	bl	80186ac <GUI__DivideRound32>
 80141bc:	9b03      	ldr	r3, [sp, #12]
 80141be:	4606      	mov	r6, r0
 80141c0:	6618      	str	r0, [r3, #96]	; 0x60
 80141c2:	a803      	add	r0, sp, #12
 80141c4:	e07e      	b.n	80142c4 <SCROLLBAR_Callback+0x1e2>
 80141c6:	9806      	ldr	r0, [sp, #24]
 80141c8:	4287      	cmp	r7, r0
 80141ca:	dc0b      	bgt.n	80141e4 <SCROLLBAR_Callback+0x102>
 80141cc:	2a02      	cmp	r2, #2
 80141ce:	d039      	beq.n	8014244 <SCROLLBAR_Callback+0x162>
 80141d0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80141d2:	b113      	cbz	r3, 80141da <SCROLLBAR_Callback+0xf8>
 80141d4:	4620      	mov	r0, r4
 80141d6:	f7ff fe8d 	bl	8013ef4 <_DeleteTimer>
 80141da:	9b03      	ldr	r3, [sp, #12]
 80141dc:	2202      	movs	r2, #2
 80141de:	3e01      	subs	r6, #1
 80141e0:	659a      	str	r2, [r3, #88]	; 0x58
 80141e2:	e02f      	b.n	8014244 <SCROLLBAR_Callback+0x162>
 80141e4:	9907      	ldr	r1, [sp, #28]
 80141e6:	428f      	cmp	r7, r1
 80141e8:	da02      	bge.n	80141f0 <SCROLLBAR_Callback+0x10e>
 80141ea:	1b76      	subs	r6, r6, r5
 80141ec:	426d      	negs	r5, r5
 80141ee:	e02f      	b.n	8014250 <SCROLLBAR_Callback+0x16e>
 80141f0:	9908      	ldr	r1, [sp, #32]
 80141f2:	428f      	cmp	r7, r1
 80141f4:	dc12      	bgt.n	801421c <SCROLLBAR_Callback+0x13a>
 80141f6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80141f8:	2900      	cmp	r1, #0
 80141fa:	dd0b      	ble.n	8014214 <SCROLLBAR_Callback+0x132>
 80141fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141fe:	2202      	movs	r2, #2
 8014200:	fb93 f3f2 	sdiv	r3, r3, r2
 8014204:	1aff      	subs	r7, r7, r3
 8014206:	1a3f      	subs	r7, r7, r0
 8014208:	3f01      	subs	r7, #1
 801420a:	fb07 f009 	mul.w	r0, r7, r9
 801420e:	f004 fa4d 	bl	80186ac <GUI__DivideRound32>
 8014212:	4606      	mov	r6, r0
 8014214:	9b03      	ldr	r3, [sp, #12]
 8014216:	2203      	movs	r2, #3
 8014218:	659a      	str	r2, [r3, #88]	; 0x58
 801421a:	e016      	b.n	801424a <SCROLLBAR_Callback+0x168>
 801421c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801421e:	428f      	cmp	r7, r1
 8014220:	da01      	bge.n	8014226 <SCROLLBAR_Callback+0x144>
 8014222:	442e      	add	r6, r5
 8014224:	e014      	b.n	8014250 <SCROLLBAR_Callback+0x16e>
 8014226:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014228:	428f      	cmp	r7, r1
 801422a:	dc0e      	bgt.n	801424a <SCROLLBAR_Callback+0x168>
 801422c:	2a01      	cmp	r2, #1
 801422e:	d00e      	beq.n	801424e <SCROLLBAR_Callback+0x16c>
 8014230:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8014232:	b113      	cbz	r3, 801423a <SCROLLBAR_Callback+0x158>
 8014234:	4620      	mov	r0, r4
 8014236:	f7ff fe5d 	bl	8013ef4 <_DeleteTimer>
 801423a:	9b03      	ldr	r3, [sp, #12]
 801423c:	2501      	movs	r5, #1
 801423e:	3601      	adds	r6, #1
 8014240:	659d      	str	r5, [r3, #88]	; 0x58
 8014242:	e005      	b.n	8014250 <SCROLLBAR_Callback+0x16e>
 8014244:	f04f 35ff 	mov.w	r5, #4294967295
 8014248:	e002      	b.n	8014250 <SCROLLBAR_Callback+0x16e>
 801424a:	2500      	movs	r5, #0
 801424c:	e000      	b.n	8014250 <SCROLLBAR_Callback+0x16e>
 801424e:	4615      	mov	r5, r2
 8014250:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8014254:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014256:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 801425a:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 801425e:	9a06      	ldr	r2, [sp, #24]
 8014260:	b171      	cbz	r1, 8014280 <SCROLLBAR_Callback+0x19e>
 8014262:	2002      	movs	r0, #2
 8014264:	fb9e f0f0 	sdiv	r0, lr, r0
 8014268:	1a38      	subs	r0, r7, r0
 801426a:	1a80      	subs	r0, r0, r2
 801426c:	3801      	subs	r0, #1
 801426e:	fb00 f009 	mul.w	r0, r0, r9
 8014272:	9301      	str	r3, [sp, #4]
 8014274:	f004 fa1a 	bl	80186ac <GUI__DivideRound32>
 8014278:	9b01      	ldr	r3, [sp, #4]
 801427a:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 801427e:	e009      	b.n	8014294 <SCROLLBAR_Callback+0x1b2>
 8014280:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 8014284:	2a01      	cmp	r2, #1
 8014286:	bf04      	itt	eq
 8014288:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 801428c:	f101 31ff 	addeq.w	r1, r1, #4294967295
 8014290:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 8014294:	a803      	add	r0, sp, #12
 8014296:	9301      	str	r3, [sp, #4]
 8014298:	f7fe ff30 	bl	80130fc <GUI_ALLOC_UnlockH>
 801429c:	9b01      	ldr	r3, [sp, #4]
 801429e:	b1a5      	cbz	r5, 80142ca <SCROLLBAR_Callback+0x1e8>
 80142a0:	b9bb      	cbnz	r3, 80142d2 <SCROLLBAR_Callback+0x1f0>
 80142a2:	f44f 72c8 	mov.w	r2, #400	; 0x190
 80142a6:	f240 41d2 	movw	r1, #1234	; 0x4d2
 80142aa:	4620      	mov	r0, r4
 80142ac:	f7f7 fe6a 	bl	800bf84 <WM_CreateTimer>
 80142b0:	4607      	mov	r7, r0
 80142b2:	4620      	mov	r0, r4
 80142b4:	f7fe ff14 	bl	80130e0 <GUI_ALLOC_LockH>
 80142b8:	4602      	mov	r2, r0
 80142ba:	a80e      	add	r0, sp, #56	; 0x38
 80142bc:	f840 2d28 	str.w	r2, [r0, #-40]!
 80142c0:	6657      	str	r7, [r2, #100]	; 0x64
 80142c2:	65d5      	str	r5, [r2, #92]	; 0x5c
 80142c4:	f7fe ff1a 	bl	80130fc <GUI_ALLOC_UnlockH>
 80142c8:	e003      	b.n	80142d2 <SCROLLBAR_Callback+0x1f0>
 80142ca:	b113      	cbz	r3, 80142d2 <SCROLLBAR_Callback+0x1f0>
 80142cc:	4620      	mov	r0, r4
 80142ce:	f7ff fe11 	bl	8013ef4 <_DeleteTimer>
 80142d2:	4620      	mov	r0, r4
 80142d4:	2101      	movs	r1, #1
 80142d6:	f7f7 fff5 	bl	800c2c4 <WM_SetCapture>
 80142da:	4620      	mov	r0, r4
 80142dc:	4631      	mov	r1, r6
 80142de:	f7ff febf 	bl	8014060 <SCROLLBAR_SetValue>
 80142e2:	f41a 7f80 	tst.w	sl, #256	; 0x100
 80142e6:	f040 80c5 	bne.w	8014474 <SCROLLBAR_Callback+0x392>
 80142ea:	4620      	mov	r0, r4
 80142ec:	f7fe fef8 	bl	80130e0 <GUI_ALLOC_LockH>
 80142f0:	ab0e      	add	r3, sp, #56	; 0x38
 80142f2:	6a85      	ldr	r5, [r0, #40]	; 0x28
 80142f4:	f843 0d28 	str.w	r0, [r3, #-40]!
 80142f8:	4618      	mov	r0, r3
 80142fa:	f7fe feff 	bl	80130fc <GUI_ALLOC_UnlockH>
 80142fe:	f44f 7180 	mov.w	r1, #256	; 0x100
 8014302:	4620      	mov	r0, r4
 8014304:	f7f5 fa9d 	bl	8009842 <WIDGET_OrState>
 8014308:	07a9      	lsls	r1, r5, #30
 801430a:	f140 80b3 	bpl.w	8014474 <SCROLLBAR_Callback+0x392>
 801430e:	4620      	mov	r0, r4
 8014310:	2101      	movs	r1, #1
 8014312:	e074      	b.n	80143fe <SCROLLBAR_Callback+0x31c>
 8014314:	f7fe fee4 	bl	80130e0 <GUI_ALLOC_LockH>
 8014318:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 801431a:	9003      	str	r0, [sp, #12]
 801431c:	a803      	add	r0, sp, #12
 801431e:	f7fe feed 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014322:	05ea      	lsls	r2, r5, #23
 8014324:	f140 80a6 	bpl.w	8014474 <SCROLLBAR_Callback+0x392>
 8014328:	4620      	mov	r0, r4
 801432a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801432e:	f7f5 fa9e 	bl	800986e <WIDGET_AndState>
 8014332:	4620      	mov	r0, r4
 8014334:	f7fe fed4 	bl	80130e0 <GUI_ALLOC_LockH>
 8014338:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 801433a:	9005      	str	r0, [sp, #20]
 801433c:	b113      	cbz	r3, 8014344 <SCROLLBAR_Callback+0x262>
 801433e:	4620      	mov	r0, r4
 8014340:	f7ff fdd8 	bl	8013ef4 <_DeleteTimer>
 8014344:	a80e      	add	r0, sp, #56	; 0x38
 8014346:	2200      	movs	r2, #0
 8014348:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 801434c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 801434e:	659a      	str	r2, [r3, #88]	; 0x58
 8014350:	f7fe fed4 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014354:	07ab      	lsls	r3, r5, #30
 8014356:	f140 808d 	bpl.w	8014474 <SCROLLBAR_Callback+0x392>
 801435a:	4620      	mov	r0, r4
 801435c:	2102      	movs	r1, #2
 801435e:	e04e      	b.n	80143fe <SCROLLBAR_Callback+0x31c>
 8014360:	4620      	mov	r0, r4
 8014362:	f7fe febd 	bl	80130e0 <GUI_ALLOC_LockH>
 8014366:	ab0e      	add	r3, sp, #56	; 0x38
 8014368:	6d45      	ldr	r5, [r0, #84]	; 0x54
 801436a:	f843 0d24 	str.w	r0, [r3, #-36]!
 801436e:	4618      	mov	r0, r3
 8014370:	f7fe fec4 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014374:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8014378:	6813      	ldr	r3, [r2, #0]
 801437a:	6852      	ldr	r2, [r2, #4]
 801437c:	2a00      	cmp	r2, #0
 801437e:	dd79      	ble.n	8014474 <SCROLLBAR_Callback+0x392>
 8014380:	3b10      	subs	r3, #16
 8014382:	2b12      	cmp	r3, #18
 8014384:	d876      	bhi.n	8014474 <SCROLLBAR_Callback+0x392>
 8014386:	e8df f003 	tbb	[pc, r3]
 801438a:	1616      	.short	0x1616
 801438c:	75751212 	.word	0x75751212
 8014390:	75757575 	.word	0x75757575
 8014394:	75757575 	.word	0x75757575
 8014398:	0a757575 	.word	0x0a757575
 801439c:	0d          	.byte	0x0d
 801439d:	00          	.byte	0x00
 801439e:	4620      	mov	r0, r4
 80143a0:	4629      	mov	r1, r5
 80143a2:	e001      	b.n	80143a8 <SCROLLBAR_Callback+0x2c6>
 80143a4:	4620      	mov	r0, r4
 80143a6:	4269      	negs	r1, r5
 80143a8:	f7ff fe81 	bl	80140ae <SCROLLBAR_AddValue>
 80143ac:	e062      	b.n	8014474 <SCROLLBAR_Callback+0x392>
 80143ae:	4620      	mov	r0, r4
 80143b0:	f7ff fe94 	bl	80140dc <SCROLLBAR_Inc>
 80143b4:	e05e      	b.n	8014474 <SCROLLBAR_Callback+0x392>
 80143b6:	4620      	mov	r0, r4
 80143b8:	f7ff fe8c 	bl	80140d4 <SCROLLBAR_Dec>
 80143bc:	e05a      	b.n	8014474 <SCROLLBAR_Callback+0x392>
 80143be:	4620      	mov	r0, r4
 80143c0:	f8d8 600c 	ldr.w	r6, [r8, #12]
 80143c4:	f7fe fe8c 	bl	80130e0 <GUI_ALLOC_LockH>
 80143c8:	ad0e      	add	r5, sp, #56	; 0x38
 80143ca:	4603      	mov	r3, r0
 80143cc:	f845 0d24 	str.w	r0, [r5, #-36]!
 80143d0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80143d2:	6830      	ldr	r0, [r6, #0]
 80143d4:	68b1      	ldr	r1, [r6, #8]
 80143d6:	4290      	cmp	r0, r2
 80143d8:	6872      	ldr	r2, [r6, #4]
 80143da:	d105      	bne.n	80143e8 <SCROLLBAR_Callback+0x306>
 80143dc:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 80143de:	428e      	cmp	r6, r1
 80143e0:	d102      	bne.n	80143e8 <SCROLLBAR_Callback+0x306>
 80143e2:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 80143e4:	4296      	cmp	r6, r2
 80143e6:	d00d      	beq.n	8014404 <SCROLLBAR_Callback+0x322>
 80143e8:	64d8      	str	r0, [r3, #76]	; 0x4c
 80143ea:	6559      	str	r1, [r3, #84]	; 0x54
 80143ec:	651a      	str	r2, [r3, #80]	; 0x50
 80143ee:	4620      	mov	r0, r4
 80143f0:	f7f8 ffc3 	bl	800d37a <WM_InvalidateWindow>
 80143f4:	4628      	mov	r0, r5
 80143f6:	f7fe fe81 	bl	80130fc <GUI_ALLOC_UnlockH>
 80143fa:	4620      	mov	r0, r4
 80143fc:	2105      	movs	r1, #5
 80143fe:	f7f8 f868 	bl	800c4d2 <WM_NotifyParent>
 8014402:	e037      	b.n	8014474 <SCROLLBAR_Callback+0x392>
 8014404:	4628      	mov	r0, r5
 8014406:	e033      	b.n	8014470 <SCROLLBAR_Callback+0x38e>
 8014408:	4620      	mov	r0, r4
 801440a:	f7fe fe69 	bl	80130e0 <GUI_ALLOC_LockH>
 801440e:	9005      	str	r0, [sp, #20]
 8014410:	2800      	cmp	r0, #0
 8014412:	d02f      	beq.n	8014474 <SCROLLBAR_Callback+0x392>
 8014414:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8014418:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 801441a:	601a      	str	r2, [r3, #0]
 801441c:	6d42      	ldr	r2, [r0, #84]	; 0x54
 801441e:	609a      	str	r2, [r3, #8]
 8014420:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8014422:	605a      	str	r2, [r3, #4]
 8014424:	e023      	b.n	801446e <SCROLLBAR_Callback+0x38c>
 8014426:	4620      	mov	r0, r4
 8014428:	f7fe fe5a 	bl	80130e0 <GUI_ALLOC_LockH>
 801442c:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 801442e:	9005      	str	r0, [sp, #20]
 8014430:	b111      	cbz	r1, 8014438 <SCROLLBAR_Callback+0x356>
 8014432:	4620      	mov	r0, r4
 8014434:	f7ff fe3b 	bl	80140ae <SCROLLBAR_AddValue>
 8014438:	9b05      	ldr	r3, [sp, #20]
 801443a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 801443c:	6d19      	ldr	r1, [r3, #80]	; 0x50
 801443e:	2a00      	cmp	r2, #0
 8014440:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8014442:	dd05      	ble.n	8014450 <SCROLLBAR_Callback+0x36e>
 8014444:	4291      	cmp	r1, r2
 8014446:	bfb4      	ite	lt
 8014448:	2100      	movlt	r1, #0
 801444a:	2101      	movge	r1, #1
 801444c:	dd06      	ble.n	801445c <SCROLLBAR_Callback+0x37a>
 801444e:	e004      	b.n	801445a <SCROLLBAR_Callback+0x378>
 8014450:	4291      	cmp	r1, r2
 8014452:	bfcc      	ite	gt
 8014454:	2100      	movgt	r1, #0
 8014456:	2101      	movle	r1, #1
 8014458:	da00      	bge.n	801445c <SCROLLBAR_Callback+0x37a>
 801445a:	651a      	str	r2, [r3, #80]	; 0x50
 801445c:	b119      	cbz	r1, 8014466 <SCROLLBAR_Callback+0x384>
 801445e:	4620      	mov	r0, r4
 8014460:	f7ff fd48 	bl	8013ef4 <_DeleteTimer>
 8014464:	e003      	b.n	801446e <SCROLLBAR_Callback+0x38c>
 8014466:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8014468:	2132      	movs	r1, #50	; 0x32
 801446a:	f7f7 fdbb 	bl	800bfe4 <WM_RestartTimer>
 801446e:	a805      	add	r0, sp, #20
 8014470:	f7fe fe44 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014474:	4640      	mov	r0, r8
 8014476:	f7f9 fba3 	bl	800dbc0 <WM_DefaultProc>
 801447a:	b00f      	add	sp, #60	; 0x3c
 801447c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014480 <SCROLLBAR_SetNumItems>:
 8014480:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014482:	460c      	mov	r4, r1
 8014484:	4605      	mov	r5, r0
 8014486:	b160      	cbz	r0, 80144a2 <SCROLLBAR_SetNumItems+0x22>
 8014488:	f7fe fe2a 	bl	80130e0 <GUI_ALLOC_LockH>
 801448c:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 801448e:	9001      	str	r0, [sp, #4]
 8014490:	42a2      	cmp	r2, r4
 8014492:	d003      	beq.n	801449c <SCROLLBAR_SetNumItems+0x1c>
 8014494:	64c4      	str	r4, [r0, #76]	; 0x4c
 8014496:	4628      	mov	r0, r5
 8014498:	f7f8 ff6f 	bl	800d37a <WM_InvalidateWindow>
 801449c:	a801      	add	r0, sp, #4
 801449e:	f7fe fe2d 	bl	80130fc <GUI_ALLOC_UnlockH>
 80144a2:	b003      	add	sp, #12
 80144a4:	bd30      	pop	{r4, r5, pc}

080144a6 <SCROLLBAR_SetPageSize>:
 80144a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80144a8:	460c      	mov	r4, r1
 80144aa:	4605      	mov	r5, r0
 80144ac:	b160      	cbz	r0, 80144c8 <SCROLLBAR_SetPageSize+0x22>
 80144ae:	f7fe fe17 	bl	80130e0 <GUI_ALLOC_LockH>
 80144b2:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80144b4:	9001      	str	r0, [sp, #4]
 80144b6:	42a2      	cmp	r2, r4
 80144b8:	d003      	beq.n	80144c2 <SCROLLBAR_SetPageSize+0x1c>
 80144ba:	6544      	str	r4, [r0, #84]	; 0x54
 80144bc:	4628      	mov	r0, r5
 80144be:	f7f8 ff5c 	bl	800d37a <WM_InvalidateWindow>
 80144c2:	a801      	add	r0, sp, #4
 80144c4:	f7fe fe1a 	bl	80130fc <GUI_ALLOC_UnlockH>
 80144c8:	b003      	add	sp, #12
 80144ca:	bd30      	pop	{r4, r5, pc}

080144cc <RADIO_DrawSkinFlex>:
 80144cc:	b530      	push	{r4, r5, lr}
 80144ce:	4604      	mov	r4, r0
 80144d0:	b089      	sub	sp, #36	; 0x24
 80144d2:	6800      	ldr	r0, [r0, #0]
 80144d4:	f7fe fe04 	bl	80130e0 <GUI_ALLOC_LockH>
 80144d8:	aa08      	add	r2, sp, #32
 80144da:	f9b0 5060 	ldrsh.w	r5, [r0, #96]	; 0x60
 80144de:	f842 0d10 	str.w	r0, [r2, #-16]!
 80144e2:	4610      	mov	r0, r2
 80144e4:	f7fe fe0a 	bl	80130fc <GUI_ALLOC_UnlockH>
 80144e8:	68a2      	ldr	r2, [r4, #8]
 80144ea:	4b28      	ldr	r3, [pc, #160]	; (801458c <RADIO_DrawSkinFlex+0xc0>)
 80144ec:	4928      	ldr	r1, [pc, #160]	; (8014590 <RADIO_DrawSkinFlex+0xc4>)
 80144ee:	42aa      	cmp	r2, r5
 80144f0:	bf18      	it	ne
 80144f2:	460b      	movne	r3, r1
 80144f4:	6862      	ldr	r2, [r4, #4]
 80144f6:	2a0a      	cmp	r2, #10
 80144f8:	d028      	beq.n	801454c <RADIO_DrawSkinFlex+0x80>
 80144fa:	dc0e      	bgt.n	801451a <RADIO_DrawSkinFlex+0x4e>
 80144fc:	2a07      	cmp	r2, #7
 80144fe:	d142      	bne.n	8014586 <RADIO_DrawSkinFlex+0xba>
 8014500:	685a      	ldr	r2, [r3, #4]
 8014502:	9200      	str	r2, [sp, #0]
 8014504:	689a      	ldr	r2, [r3, #8]
 8014506:	9201      	str	r2, [sp, #4]
 8014508:	68da      	ldr	r2, [r3, #12]
 801450a:	9202      	str	r2, [sp, #8]
 801450c:	691a      	ldr	r2, [r3, #16]
 801450e:	6920      	ldr	r0, [r4, #16]
 8014510:	6961      	ldr	r1, [r4, #20]
 8014512:	681b      	ldr	r3, [r3, #0]
 8014514:	f003 ff64 	bl	80183e0 <GUI__FillTrippleArc>
 8014518:	e035      	b.n	8014586 <RADIO_DrawSkinFlex+0xba>
 801451a:	2a12      	cmp	r2, #18
 801451c:	d003      	beq.n	8014526 <RADIO_DrawSkinFlex+0x5a>
 801451e:	2a19      	cmp	r2, #25
 8014520:	d131      	bne.n	8014586 <RADIO_DrawSkinFlex+0xba>
 8014522:	6918      	ldr	r0, [r3, #16]
 8014524:	e030      	b.n	8014588 <RADIO_DrawSkinFlex+0xbc>
 8014526:	6820      	ldr	r0, [r4, #0]
 8014528:	f7fe fdda 	bl	80130e0 <GUI_ALLOC_LockH>
 801452c:	ab08      	add	r3, sp, #32
 801452e:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8014530:	f843 0d08 	str.w	r0, [r3, #-8]!
 8014534:	4618      	mov	r0, r3
 8014536:	f7fe fde1 	bl	80130fc <GUI_ALLOC_UnlockH>
 801453a:	4628      	mov	r0, r5
 801453c:	f7fc f9f4 	bl	8010928 <LCD_SetColor>
 8014540:	6a20      	ldr	r0, [r4, #32]
 8014542:	6921      	ldr	r1, [r4, #16]
 8014544:	6962      	ldr	r2, [r4, #20]
 8014546:	f7fd ffe5 	bl	8012514 <GUI_DispStringAt>
 801454a:	e01c      	b.n	8014586 <RADIO_DrawSkinFlex+0xba>
 801454c:	6820      	ldr	r0, [r4, #0]
 801454e:	f7fe fdc7 	bl	80130e0 <GUI_ALLOC_LockH>
 8014552:	ab08      	add	r3, sp, #32
 8014554:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8014556:	f843 0d0c 	str.w	r0, [r3, #-12]!
 801455a:	4618      	mov	r0, r3
 801455c:	f7fe fdce 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014560:	6923      	ldr	r3, [r4, #16]
 8014562:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014566:	6963      	ldr	r3, [r4, #20]
 8014568:	f8ad 301a 	strh.w	r3, [sp, #26]
 801456c:	69a3      	ldr	r3, [r4, #24]
 801456e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014572:	4628      	mov	r0, r5
 8014574:	69e3      	ldr	r3, [r4, #28]
 8014576:	f8ad 301e 	strh.w	r3, [sp, #30]
 801457a:	f7fc f9d5 	bl	8010928 <LCD_SetColor>
 801457e:	a806      	add	r0, sp, #24
 8014580:	2100      	movs	r1, #0
 8014582:	f7fd fec9 	bl	8012318 <GUI_DrawFocusRect>
 8014586:	2000      	movs	r0, #0
 8014588:	b009      	add	sp, #36	; 0x24
 801458a:	bd30      	pop	{r4, r5, pc}
 801458c:	20000208 	.word	0x20000208
 8014590:	200001f4 	.word	0x200001f4

08014594 <_Create>:
 8014594:	b530      	push	{r4, r5, lr}
 8014596:	b08b      	sub	sp, #44	; 0x2c
 8014598:	4605      	mov	r5, r0
 801459a:	f7fe fda1 	bl	80130e0 <GUI_ALLOC_LockH>
 801459e:	ab0a      	add	r3, sp, #40	; 0x28
 80145a0:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80145a2:	f843 0d28 	str.w	r0, [r3, #-40]!
 80145a6:	4668      	mov	r0, sp
 80145a8:	6894      	ldr	r4, [r2, #8]
 80145aa:	f7fe fda7 	bl	80130fc <GUI_ALLOC_UnlockH>
 80145ae:	a80a      	add	r0, sp, #40	; 0x28
 80145b0:	2300      	movs	r3, #0
 80145b2:	9302      	str	r3, [sp, #8]
 80145b4:	f840 5d24 	str.w	r5, [r0, #-36]!
 80145b8:	6863      	ldr	r3, [r4, #4]
 80145ba:	4798      	blx	r3
 80145bc:	b00b      	add	sp, #44	; 0x2c
 80145be:	bd30      	pop	{r4, r5, pc}

080145c0 <_Paint>:
 80145c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145c4:	b099      	sub	sp, #100	; 0x64
 80145c6:	4607      	mov	r7, r0
 80145c8:	f7fe fd8a 	bl	80130e0 <GUI_ALLOC_LockH>
 80145cc:	6d83      	ldr	r3, [r0, #88]	; 0x58
 80145ce:	f8b0 2064 	ldrh.w	r2, [r0, #100]	; 0x64
 80145d2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80145d6:	9009      	str	r0, [sp, #36]	; 0x24
 80145d8:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 80145da:	6d46      	ldr	r6, [r0, #84]	; 0x54
 80145dc:	f8b0 5062 	ldrh.w	r5, [r0, #98]	; 0x62
 80145e0:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 80145e4:	9202      	str	r2, [sp, #8]
 80145e6:	4638      	mov	r0, r7
 80145e8:	9305      	str	r3, [sp, #20]
 80145ea:	f7f5 fcdf 	bl	8009fac <RADIO__GetButtonSize>
 80145ee:	1d04      	adds	r4, r0, #4
 80145f0:	a818      	add	r0, sp, #96	; 0x60
 80145f2:	f850 3d3c 	ldr.w	r3, [r0, #-60]!
 80145f6:	f9b3 2060 	ldrsh.w	r2, [r3, #96]	; 0x60
 80145fa:	9206      	str	r2, [sp, #24]
 80145fc:	f893 2066 	ldrb.w	r2, [r3, #102]	; 0x66
 8014600:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8014602:	9207      	str	r2, [sp, #28]
 8014604:	f003 0301 	and.w	r3, r3, #1
 8014608:	9303      	str	r3, [sp, #12]
 801460a:	f7fe fd77 	bl	80130fc <GUI_ALLOC_UnlockH>
 801460e:	a80d      	add	r0, sp, #52	; 0x34
 8014610:	f7f8 f954 	bl	800c8bc <WM_GetClientRect>
 8014614:	f8d9 3000 	ldr.w	r3, [r9]
 8014618:	4638      	mov	r0, r7
 801461a:	4798      	blx	r3
 801461c:	2307      	movs	r3, #7
 801461e:	9310      	str	r3, [sp, #64]	; 0x40
 8014620:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8014624:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8014628:	970f      	str	r7, [sp, #60]	; 0x3c
 801462a:	3202      	adds	r2, #2
 801462c:	3302      	adds	r3, #2
 801462e:	9213      	str	r2, [sp, #76]	; 0x4c
 8014630:	9314      	str	r3, [sp, #80]	; 0x50
 8014632:	4402      	add	r2, r0
 8014634:	4403      	add	r3, r0
 8014636:	3a01      	subs	r2, #1
 8014638:	3b01      	subs	r3, #1
 801463a:	4681      	mov	r9, r0
 801463c:	9215      	str	r2, [sp, #84]	; 0x54
 801463e:	9316      	str	r3, [sp, #88]	; 0x58
 8014640:	2700      	movs	r7, #0
 8014642:	9b02      	ldr	r3, [sp, #8]
 8014644:	429f      	cmp	r7, r3
 8014646:	da0a      	bge.n	801465e <_Paint+0x9e>
 8014648:	9711      	str	r7, [sp, #68]	; 0x44
 801464a:	a80f      	add	r0, sp, #60	; 0x3c
 801464c:	47b0      	blx	r6
 801464e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014650:	442b      	add	r3, r5
 8014652:	9314      	str	r3, [sp, #80]	; 0x50
 8014654:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014656:	442b      	add	r3, r5
 8014658:	9316      	str	r3, [sp, #88]	; 0x58
 801465a:	3701      	adds	r7, #1
 801465c:	e7f1      	b.n	8014642 <_Paint+0x82>
 801465e:	a90b      	add	r1, sp, #44	; 0x2c
 8014660:	4640      	mov	r0, r8
 8014662:	f004 f9fd 	bl	8018a60 <GUI_GetFontInfo>
 8014666:	4640      	mov	r0, r8
 8014668:	f7fd fb1c 	bl	8011ca4 <GUI_SetFont>
 801466c:	2002      	movs	r0, #2
 801466e:	f7fd fb0f 	bl	8011c90 <GUI_SetTextMode>
 8014672:	f7fe fc19 	bl	8012ea8 <GUI_GetFontDistY>
 8014676:	2312      	movs	r3, #18
 8014678:	9310      	str	r3, [sp, #64]	; 0x40
 801467a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801467e:	f89d a030 	ldrb.w	sl, [sp, #48]	; 0x30
 8014682:	f89d c02e 	ldrb.w	ip, [sp, #46]	; 0x2e
 8014686:	3306      	adds	r3, #6
 8014688:	45a2      	cmp	sl, r4
 801468a:	444b      	add	r3, r9
 801468c:	bfdc      	itt	le
 801468e:	ebca 0404 	rsble	r4, sl, r4
 8014692:	2102      	movle	r1, #2
 8014694:	9313      	str	r3, [sp, #76]	; 0x4c
 8014696:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801469a:	bfd4      	ite	le
 801469c:	fb94 f4f1 	sdivle	r4, r4, r1
 80146a0:	2400      	movgt	r4, #0
 80146a2:	ebca 0c0c 	rsb	ip, sl, ip
 80146a6:	fa5f fb8c 	uxtb.w	fp, ip
 80146aa:	441c      	add	r4, r3
 80146ac:	ebcb 0404 	rsb	r4, fp, r4
 80146b0:	280c      	cmp	r0, #12
 80146b2:	9414      	str	r4, [sp, #80]	; 0x50
 80146b4:	bfd4      	ite	le
 80146b6:	2202      	movle	r2, #2
 80146b8:	2203      	movgt	r2, #3
 80146ba:	2400      	movs	r4, #0
 80146bc:	9201      	str	r2, [sp, #4]
 80146be:	4627      	mov	r7, r4
 80146c0:	9404      	str	r4, [sp, #16]
 80146c2:	46a1      	mov	r9, r4
 80146c4:	9400      	str	r4, [sp, #0]
 80146c6:	46a0      	mov	r8, r4
 80146c8:	9b02      	ldr	r3, [sp, #8]
 80146ca:	4598      	cmp	r8, r3
 80146cc:	da3e      	bge.n	801474c <_Paint+0x18c>
 80146ce:	9805      	ldr	r0, [sp, #20]
 80146d0:	4641      	mov	r1, r8
 80146d2:	f7f6 fc9f 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 80146d6:	900a      	str	r0, [sp, #40]	; 0x28
 80146d8:	2800      	cmp	r0, #0
 80146da:	d02e      	beq.n	801473a <_Paint+0x17a>
 80146dc:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 80146e0:	f7fd fd6a 	bl	80121b8 <GUI_GetStringDistX>
 80146e4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80146e6:	4408      	add	r0, r1
 80146e8:	1e81      	subs	r1, r0, #2
 80146ea:	9115      	str	r1, [sp, #84]	; 0x54
 80146ec:	990a      	ldr	r1, [sp, #40]	; 0x28
 80146ee:	9117      	str	r1, [sp, #92]	; 0x5c
 80146f0:	a80f      	add	r0, sp, #60	; 0x3c
 80146f2:	47b0      	blx	r6
 80146f4:	a80a      	add	r0, sp, #40	; 0x28
 80146f6:	f7fe fd01 	bl	80130fc <GUI_ALLOC_UnlockH>
 80146fa:	9b03      	ldr	r3, [sp, #12]
 80146fc:	b1eb      	cbz	r3, 801473a <_Paint+0x17a>
 80146fe:	9a06      	ldr	r2, [sp, #24]
 8014700:	4542      	cmp	r2, r8
 8014702:	d001      	beq.n	8014708 <_Paint+0x148>
 8014704:	9b07      	ldr	r3, [sp, #28]
 8014706:	b1c3      	cbz	r3, 801473a <_Paint+0x17a>
 8014708:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801470a:	9a01      	ldr	r2, [sp, #4]
 801470c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801470e:	9f15      	ldr	r7, [sp, #84]	; 0x54
 8014710:	eb04 010b 	add.w	r1, r4, fp
 8014714:	4291      	cmp	r1, r2
 8014716:	bfb8      	it	lt
 8014718:	b2e1      	uxtblt	r1, r4
 801471a:	b2a3      	uxth	r3, r4
 801471c:	4454      	add	r4, sl
 801471e:	bfa8      	it	ge
 8014720:	9901      	ldrge	r1, [sp, #4]
 8014722:	9304      	str	r3, [sp, #16]
 8014724:	3c01      	subs	r4, #1
 8014726:	445c      	add	r4, fp
 8014728:	1a40      	subs	r0, r0, r1
 801472a:	440f      	add	r7, r1
 801472c:	440c      	add	r4, r1
 801472e:	2201      	movs	r2, #1
 8014730:	fa1f f980 	uxth.w	r9, r0
 8014734:	b2bf      	uxth	r7, r7
 8014736:	b2a4      	uxth	r4, r4
 8014738:	9200      	str	r2, [sp, #0]
 801473a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801473c:	4429      	add	r1, r5
 801473e:	9114      	str	r1, [sp, #80]	; 0x50
 8014740:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014742:	4429      	add	r1, r5
 8014744:	9116      	str	r1, [sp, #88]	; 0x58
 8014746:	f108 0801 	add.w	r8, r8, #1
 801474a:	e7bd      	b.n	80146c8 <_Paint+0x108>
 801474c:	9b00      	ldr	r3, [sp, #0]
 801474e:	9a03      	ldr	r2, [sp, #12]
 8014750:	4213      	tst	r3, r2
 8014752:	d00d      	beq.n	8014770 <_Paint+0x1b0>
 8014754:	230a      	movs	r3, #10
 8014756:	9a04      	ldr	r2, [sp, #16]
 8014758:	9310      	str	r3, [sp, #64]	; 0x40
 801475a:	fa0f f389 	sxth.w	r3, r9
 801475e:	9313      	str	r3, [sp, #76]	; 0x4c
 8014760:	b23f      	sxth	r7, r7
 8014762:	b213      	sxth	r3, r2
 8014764:	b224      	sxth	r4, r4
 8014766:	9314      	str	r3, [sp, #80]	; 0x50
 8014768:	9715      	str	r7, [sp, #84]	; 0x54
 801476a:	9416      	str	r4, [sp, #88]	; 0x58
 801476c:	a80f      	add	r0, sp, #60	; 0x3c
 801476e:	47b0      	blx	r6
 8014770:	b019      	add	sp, #100	; 0x64
 8014772:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014778 <MULTIPAGE_DrawSkinFlex>:
 8014778:	b570      	push	{r4, r5, r6, lr}
 801477a:	6843      	ldr	r3, [r0, #4]
 801477c:	b086      	sub	sp, #24
 801477e:	4604      	mov	r4, r0
 8014780:	b993      	cbnz	r3, 80147a8 <MULTIPAGE_DrawSkinFlex+0x30>
 8014782:	6800      	ldr	r0, [r0, #0]
 8014784:	f7fe fcac 	bl	80130e0 <GUI_ALLOC_LockH>
 8014788:	4a94      	ldr	r2, [pc, #592]	; (80149dc <MULTIPAGE_DrawSkinFlex+0x264>)
 801478a:	4603      	mov	r3, r0
 801478c:	6812      	ldr	r2, [r2, #0]
 801478e:	655a      	str	r2, [r3, #84]	; 0x54
 8014790:	a806      	add	r0, sp, #24
 8014792:	2202      	movs	r2, #2
 8014794:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8014798:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 801479c:	4a90      	ldr	r2, [pc, #576]	; (80149e0 <MULTIPAGE_DrawSkinFlex+0x268>)
 801479e:	f840 3d0c 	str.w	r3, [r0, #-12]!
 80147a2:	675a      	str	r2, [r3, #116]	; 0x74
 80147a4:	f7fe fcaa 	bl	80130fc <GUI_ALLOC_UnlockH>
 80147a8:	6a26      	ldr	r6, [r4, #32]
 80147aa:	2e00      	cmp	r6, #0
 80147ac:	f000 8113 	beq.w	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 80147b0:	68a2      	ldr	r2, [r4, #8]
 80147b2:	68b1      	ldr	r1, [r6, #8]
 80147b4:	428a      	cmp	r2, r1
 80147b6:	d007      	beq.n	80147c8 <MULTIPAGE_DrawSkinFlex+0x50>
 80147b8:	7bf3      	ldrb	r3, [r6, #15]
 80147ba:	4d8a      	ldr	r5, [pc, #552]	; (80149e4 <MULTIPAGE_DrawSkinFlex+0x26c>)
 80147bc:	f013 0f01 	tst.w	r3, #1
 80147c0:	4b89      	ldr	r3, [pc, #548]	; (80149e8 <MULTIPAGE_DrawSkinFlex+0x270>)
 80147c2:	bf18      	it	ne
 80147c4:	461d      	movne	r5, r3
 80147c6:	e000      	b.n	80147ca <MULTIPAGE_DrawSkinFlex+0x52>
 80147c8:	4d84      	ldr	r5, [pc, #528]	; (80149dc <MULTIPAGE_DrawSkinFlex+0x264>)
 80147ca:	6863      	ldr	r3, [r4, #4]
 80147cc:	2b06      	cmp	r3, #6
 80147ce:	f000 80c3 	beq.w	8014958 <MULTIPAGE_DrawSkinFlex+0x1e0>
 80147d2:	dc02      	bgt.n	80147da <MULTIPAGE_DrawSkinFlex+0x62>
 80147d4:	2b05      	cmp	r3, #5
 80147d6:	d041      	beq.n	801485c <MULTIPAGE_DrawSkinFlex+0xe4>
 80147d8:	e0fd      	b.n	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 80147da:	2b0b      	cmp	r3, #11
 80147dc:	d003      	beq.n	80147e6 <MULTIPAGE_DrawSkinFlex+0x6e>
 80147de:	2b12      	cmp	r3, #18
 80147e0:	f000 80c4 	beq.w	801496c <MULTIPAGE_DrawSkinFlex+0x1f4>
 80147e4:	e0f7      	b.n	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 80147e6:	3201      	adds	r2, #1
 80147e8:	d113      	bne.n	8014812 <MULTIPAGE_DrawSkinFlex+0x9a>
 80147ea:	4d7c      	ldr	r5, [pc, #496]	; (80149dc <MULTIPAGE_DrawSkinFlex+0x264>)
 80147ec:	6968      	ldr	r0, [r5, #20]
 80147ee:	f7fd fa87 	bl	8011d00 <GUI_SetColor>
 80147f2:	f104 0010 	add.w	r0, r4, #16
 80147f6:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80147f8:	f004 fe62 	bl	80194c0 <GUI_DrawRect>
 80147fc:	6828      	ldr	r0, [r5, #0]
 80147fe:	f7fd fa7f 	bl	8011d00 <GUI_SetColor>
 8014802:	f104 0010 	add.w	r0, r4, #16
 8014806:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8014808:	3001      	adds	r0, #1
 801480a:	3101      	adds	r1, #1
 801480c:	3a01      	subs	r2, #1
 801480e:	3b01      	subs	r3, #1
 8014810:	e02c      	b.n	801486c <MULTIPAGE_DrawSkinFlex+0xf4>
 8014812:	6968      	ldr	r0, [r5, #20]
 8014814:	f7fd fa74 	bl	8011d00 <GUI_SetColor>
 8014818:	7bb3      	ldrb	r3, [r6, #14]
 801481a:	0718      	lsls	r0, r3, #28
 801481c:	d504      	bpl.n	8014828 <MULTIPAGE_DrawSkinFlex+0xb0>
 801481e:	69e0      	ldr	r0, [r4, #28]
 8014820:	6921      	ldr	r1, [r4, #16]
 8014822:	69a2      	ldr	r2, [r4, #24]
 8014824:	f7fd fd54 	bl	80122d0 <GUI_DrawHLine>
 8014828:	7bb3      	ldrb	r3, [r6, #14]
 801482a:	0759      	lsls	r1, r3, #29
 801482c:	d504      	bpl.n	8014838 <MULTIPAGE_DrawSkinFlex+0xc0>
 801482e:	6960      	ldr	r0, [r4, #20]
 8014830:	6921      	ldr	r1, [r4, #16]
 8014832:	69a2      	ldr	r2, [r4, #24]
 8014834:	f7fd fd4c 	bl	80122d0 <GUI_DrawHLine>
 8014838:	7bb3      	ldrb	r3, [r6, #14]
 801483a:	07da      	lsls	r2, r3, #31
 801483c:	d504      	bpl.n	8014848 <MULTIPAGE_DrawSkinFlex+0xd0>
 801483e:	6920      	ldr	r0, [r4, #16]
 8014840:	6961      	ldr	r1, [r4, #20]
 8014842:	69e2      	ldr	r2, [r4, #28]
 8014844:	f7fd fd22 	bl	801228c <GUI_DrawVLine>
 8014848:	7bb3      	ldrb	r3, [r6, #14]
 801484a:	079b      	lsls	r3, r3, #30
 801484c:	f140 80c3 	bpl.w	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8014850:	69a0      	ldr	r0, [r4, #24]
 8014852:	6961      	ldr	r1, [r4, #20]
 8014854:	69e2      	ldr	r2, [r4, #28]
 8014856:	f7fd fd19 	bl	801228c <GUI_DrawVLine>
 801485a:	e0bc      	b.n	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 801485c:	428a      	cmp	r2, r1
 801485e:	d108      	bne.n	8014872 <MULTIPAGE_DrawSkinFlex+0xfa>
 8014860:	6828      	ldr	r0, [r5, #0]
 8014862:	f7fd fa4d 	bl	8011d00 <GUI_SetColor>
 8014866:	f104 0010 	add.w	r0, r4, #16
 801486a:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 801486c:	f7fd fcc8 	bl	8012200 <GUI_FillRect>
 8014870:	e0b1      	b.n	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8014872:	89b3      	ldrh	r3, [r6, #12]
 8014874:	f013 0f08 	tst.w	r3, #8
 8014878:	6873      	ldr	r3, [r6, #4]
 801487a:	d036      	beq.n	80148ea <MULTIPAGE_DrawSkinFlex+0x172>
 801487c:	f013 0f04 	tst.w	r3, #4
 8014880:	69a2      	ldr	r2, [r4, #24]
 8014882:	6923      	ldr	r3, [r4, #16]
 8014884:	f04f 0602 	mov.w	r6, #2
 8014888:	ebc3 0102 	rsb	r1, r3, r2
 801488c:	fb91 f1f6 	sdiv	r1, r1, r6
 8014890:	eb03 0001 	add.w	r0, r3, r1
 8014894:	d011      	beq.n	80148ba <MULTIPAGE_DrawSkinFlex+0x142>
 8014896:	68e9      	ldr	r1, [r5, #12]
 8014898:	9100      	str	r1, [sp, #0]
 801489a:	6929      	ldr	r1, [r5, #16]
 801489c:	9101      	str	r1, [sp, #4]
 801489e:	3001      	adds	r0, #1
 80148a0:	69e3      	ldr	r3, [r4, #28]
 80148a2:	6961      	ldr	r1, [r4, #20]
 80148a4:	f004 fc78 	bl	8019198 <GUI_DrawGradientH>
 80148a8:	6920      	ldr	r0, [r4, #16]
 80148aa:	69a3      	ldr	r3, [r4, #24]
 80148ac:	1a1b      	subs	r3, r3, r0
 80148ae:	fb93 f2f6 	sdiv	r2, r3, r6
 80148b2:	686b      	ldr	r3, [r5, #4]
 80148b4:	9300      	str	r3, [sp, #0]
 80148b6:	68ab      	ldr	r3, [r5, #8]
 80148b8:	e010      	b.n	80148dc <MULTIPAGE_DrawSkinFlex+0x164>
 80148ba:	68a9      	ldr	r1, [r5, #8]
 80148bc:	9100      	str	r1, [sp, #0]
 80148be:	6869      	ldr	r1, [r5, #4]
 80148c0:	9101      	str	r1, [sp, #4]
 80148c2:	3001      	adds	r0, #1
 80148c4:	69e3      	ldr	r3, [r4, #28]
 80148c6:	6961      	ldr	r1, [r4, #20]
 80148c8:	f004 fc66 	bl	8019198 <GUI_DrawGradientH>
 80148cc:	6920      	ldr	r0, [r4, #16]
 80148ce:	69a3      	ldr	r3, [r4, #24]
 80148d0:	1a1b      	subs	r3, r3, r0
 80148d2:	fb93 f2f6 	sdiv	r2, r3, r6
 80148d6:	692b      	ldr	r3, [r5, #16]
 80148d8:	9300      	str	r3, [sp, #0]
 80148da:	68eb      	ldr	r3, [r5, #12]
 80148dc:	9301      	str	r3, [sp, #4]
 80148de:	6961      	ldr	r1, [r4, #20]
 80148e0:	69e3      	ldr	r3, [r4, #28]
 80148e2:	4402      	add	r2, r0
 80148e4:	f004 fc58 	bl	8019198 <GUI_DrawGradientH>
 80148e8:	e075      	b.n	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 80148ea:	f013 0f04 	tst.w	r3, #4
 80148ee:	6961      	ldr	r1, [r4, #20]
 80148f0:	69e3      	ldr	r3, [r4, #28]
 80148f2:	f04f 0602 	mov.w	r6, #2
 80148f6:	ebc1 0303 	rsb	r3, r1, r3
 80148fa:	fb93 f3f6 	sdiv	r3, r3, r6
 80148fe:	d012      	beq.n	8014926 <MULTIPAGE_DrawSkinFlex+0x1ae>
 8014900:	692a      	ldr	r2, [r5, #16]
 8014902:	9200      	str	r2, [sp, #0]
 8014904:	68ea      	ldr	r2, [r5, #12]
 8014906:	9201      	str	r2, [sp, #4]
 8014908:	440b      	add	r3, r1
 801490a:	6920      	ldr	r0, [r4, #16]
 801490c:	69a2      	ldr	r2, [r4, #24]
 801490e:	f004 fc11 	bl	8019134 <GUI_DrawGradientV>
 8014912:	6962      	ldr	r2, [r4, #20]
 8014914:	69e3      	ldr	r3, [r4, #28]
 8014916:	68a8      	ldr	r0, [r5, #8]
 8014918:	9000      	str	r0, [sp, #0]
 801491a:	1a99      	subs	r1, r3, r2
 801491c:	fb91 f6f6 	sdiv	r6, r1, r6
 8014920:	1991      	adds	r1, r2, r6
 8014922:	6868      	ldr	r0, [r5, #4]
 8014924:	e011      	b.n	801494a <MULTIPAGE_DrawSkinFlex+0x1d2>
 8014926:	686a      	ldr	r2, [r5, #4]
 8014928:	9200      	str	r2, [sp, #0]
 801492a:	68aa      	ldr	r2, [r5, #8]
 801492c:	9201      	str	r2, [sp, #4]
 801492e:	440b      	add	r3, r1
 8014930:	6920      	ldr	r0, [r4, #16]
 8014932:	69a2      	ldr	r2, [r4, #24]
 8014934:	f004 fbfe 	bl	8019134 <GUI_DrawGradientV>
 8014938:	6962      	ldr	r2, [r4, #20]
 801493a:	69e3      	ldr	r3, [r4, #28]
 801493c:	68e8      	ldr	r0, [r5, #12]
 801493e:	9000      	str	r0, [sp, #0]
 8014940:	1a99      	subs	r1, r3, r2
 8014942:	fb91 f6f6 	sdiv	r6, r1, r6
 8014946:	6928      	ldr	r0, [r5, #16]
 8014948:	1991      	adds	r1, r2, r6
 801494a:	9001      	str	r0, [sp, #4]
 801494c:	6920      	ldr	r0, [r4, #16]
 801494e:	69a2      	ldr	r2, [r4, #24]
 8014950:	3101      	adds	r1, #1
 8014952:	f004 fbef 	bl	8019134 <GUI_DrawGradientV>
 8014956:	e03e      	b.n	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 8014958:	6933      	ldr	r3, [r6, #16]
 801495a:	2b00      	cmp	r3, #0
 801495c:	d03b      	beq.n	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 801495e:	6818      	ldr	r0, [r3, #0]
 8014960:	6821      	ldr	r1, [r4, #0]
 8014962:	6922      	ldr	r2, [r4, #16]
 8014964:	6963      	ldr	r3, [r4, #20]
 8014966:	f7f6 fa75 	bl	800ae54 <GUI_DRAW__Draw>
 801496a:	e034      	b.n	80149d6 <MULTIPAGE_DrawSkinFlex+0x25e>
 801496c:	6820      	ldr	r0, [r4, #0]
 801496e:	f7f6 fa3c 	bl	800adea <MULTIPAGE_GetFont>
 8014972:	f7fd f997 	bl	8011ca4 <GUI_SetFont>
 8014976:	69a8      	ldr	r0, [r5, #24]
 8014978:	f7fd f9c2 	bl	8011d00 <GUI_SetColor>
 801497c:	2002      	movs	r0, #2
 801497e:	f7fd f987 	bl	8011c90 <GUI_SetTextMode>
 8014982:	6820      	ldr	r0, [r4, #0]
 8014984:	f7fe fbac 	bl	80130e0 <GUI_ALLOC_LockH>
 8014988:	68a1      	ldr	r1, [r4, #8]
 801498a:	9003      	str	r0, [sp, #12]
 801498c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801498e:	f7f6 fb41 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 8014992:	6923      	ldr	r3, [r4, #16]
 8014994:	f8ad 3010 	strh.w	r3, [sp, #16]
 8014998:	6963      	ldr	r3, [r4, #20]
 801499a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801499e:	69a3      	ldr	r3, [r4, #24]
 80149a0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80149a4:	69e3      	ldr	r3, [r4, #28]
 80149a6:	9002      	str	r0, [sp, #8]
 80149a8:	f110 0418 	adds.w	r4, r0, #24
 80149ac:	f8ad 3016 	strh.w	r3, [sp, #22]
 80149b0:	d00b      	beq.n	80149ca <MULTIPAGE_DrawSkinFlex+0x252>
 80149b2:	4620      	mov	r0, r4
 80149b4:	f7eb fc2c 	bl	8000210 <strlen>
 80149b8:	6832      	ldr	r2, [r6, #0]
 80149ba:	9200      	str	r2, [sp, #0]
 80149bc:	9a03      	ldr	r2, [sp, #12]
 80149be:	4603      	mov	r3, r0
 80149c0:	a904      	add	r1, sp, #16
 80149c2:	4620      	mov	r0, r4
 80149c4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80149c6:	f004 fc19 	bl	80191fc <GUI_DispStringInRectEx>
 80149ca:	a802      	add	r0, sp, #8
 80149cc:	f7fe fb96 	bl	80130fc <GUI_ALLOC_UnlockH>
 80149d0:	a803      	add	r0, sp, #12
 80149d2:	f7fe fb93 	bl	80130fc <GUI_ALLOC_UnlockH>
 80149d6:	2000      	movs	r0, #0
 80149d8:	b006      	add	sp, #24
 80149da:	bd70      	pop	{r4, r5, r6, pc}
 80149dc:	20000228 	.word	0x20000228
 80149e0:	080150f7 	.word	0x080150f7
 80149e4:	20000260 	.word	0x20000260
 80149e8:	20000244 	.word	0x20000244

080149ec <MULTIPAGE__DrawTextItemH>:
 80149ec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80149f0:	4604      	mov	r4, r0
 80149f2:	4688      	mov	r8, r1
 80149f4:	6818      	ldr	r0, [r3, #0]
 80149f6:	6859      	ldr	r1, [r3, #4]
 80149f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80149fa:	466d      	mov	r5, sp
 80149fc:	c503      	stmia	r5!, {r0, r1}
 80149fe:	4617      	mov	r7, r2
 8014a00:	f8bd 2000 	ldrh.w	r2, [sp]
 8014a04:	4413      	add	r3, r2
 8014a06:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014a08:	b29b      	uxth	r3, r3
 8014a0a:	f8ad 3000 	strh.w	r3, [sp]
 8014a0e:	4413      	add	r3, r2
 8014a10:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014a14:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014a16:	4668      	mov	r0, sp
 8014a18:	689b      	ldr	r3, [r3, #8]
 8014a1a:	4798      	blx	r3
 8014a1c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014a1e:	4668      	mov	r0, sp
 8014a20:	4669      	mov	r1, sp
 8014a22:	681a      	ldr	r2, [r3, #0]
 8014a24:	f7fc f81b 	bl	8010a5e <GUI__ReduceRect>
 8014a28:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8014a2c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8014a2e:	ae02      	add	r6, sp, #8
 8014a30:	42bb      	cmp	r3, r7
 8014a32:	e886 0003 	stmia.w	r6, {r0, r1}
 8014a36:	d144      	bne.n	8014ac2 <MULTIPAGE__DrawTextItemH+0xd6>
 8014a38:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8014a3a:	f013 0f04 	tst.w	r3, #4
 8014a3e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014a40:	681b      	ldr	r3, [r3, #0]
 8014a42:	d01d      	beq.n	8014a80 <MULTIPAGE__DrawTextItemH+0x94>
 8014a44:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8014a48:	3a01      	subs	r2, #1
 8014a4a:	1ad2      	subs	r2, r2, r3
 8014a4c:	2b01      	cmp	r3, #1
 8014a4e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8014a52:	dd36      	ble.n	8014ac2 <MULTIPAGE__DrawTextItemH+0xd6>
 8014a54:	4f2e      	ldr	r7, [pc, #184]	; (8014b10 <MULTIPAGE__DrawTextItemH+0x124>)
 8014a56:	6838      	ldr	r0, [r7, #0]
 8014a58:	f7fb ff66 	bl	8010928 <LCD_SetColor>
 8014a5c:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8014a60:	f9bd 0000 	ldrsh.w	r0, [sp]
 8014a64:	1c4a      	adds	r2, r1, #1
 8014a66:	3801      	subs	r0, #1
 8014a68:	f7fd fc10 	bl	801228c <GUI_DrawVLine>
 8014a6c:	6878      	ldr	r0, [r7, #4]
 8014a6e:	f7fb ff5b 	bl	8010928 <LCD_SetColor>
 8014a72:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8014a76:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8014a7a:	1c4a      	adds	r2, r1, #1
 8014a7c:	3001      	adds	r0, #1
 8014a7e:	e01e      	b.n	8014abe <MULTIPAGE__DrawTextItemH+0xd2>
 8014a80:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014a84:	441a      	add	r2, r3
 8014a86:	3201      	adds	r2, #1
 8014a88:	2b01      	cmp	r3, #1
 8014a8a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014a8e:	dd18      	ble.n	8014ac2 <MULTIPAGE__DrawTextItemH+0xd6>
 8014a90:	4f1f      	ldr	r7, [pc, #124]	; (8014b10 <MULTIPAGE__DrawTextItemH+0x124>)
 8014a92:	6838      	ldr	r0, [r7, #0]
 8014a94:	f7fb ff48 	bl	8010928 <LCD_SetColor>
 8014a98:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8014a9c:	f9bd 0000 	ldrsh.w	r0, [sp]
 8014aa0:	1e91      	subs	r1, r2, #2
 8014aa2:	3801      	subs	r0, #1
 8014aa4:	3a01      	subs	r2, #1
 8014aa6:	f7fd fbf1 	bl	801228c <GUI_DrawVLine>
 8014aaa:	6878      	ldr	r0, [r7, #4]
 8014aac:	f7fb ff3c 	bl	8010928 <LCD_SetColor>
 8014ab0:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8014ab4:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8014ab8:	1e91      	subs	r1, r2, #2
 8014aba:	3001      	adds	r0, #1
 8014abc:	3a01      	subs	r2, #1
 8014abe:	f7fd fbe5 	bl	801228c <GUI_DrawVLine>
 8014ac2:	2002      	movs	r0, #2
 8014ac4:	f7fd f8e4 	bl	8011c90 <GUI_SetTextMode>
 8014ac8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8014aca:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 8014ace:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8014ad0:	f7fb ff2a 	bl	8010928 <LCD_SetColor>
 8014ad4:	4669      	mov	r1, sp
 8014ad6:	4620      	mov	r0, r4
 8014ad8:	f7f4 ff84 	bl	80099e4 <WIDGET__FillRectEx>
 8014adc:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8014ade:	f7fb ff1b 	bl	8010918 <LCD_SetBkColor>
 8014ae2:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8014ae4:	f7fb ff20 	bl	8010928 <LCD_SetColor>
 8014ae8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014aea:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8014aee:	881b      	ldrh	r3, [r3, #0]
 8014af0:	441a      	add	r2, r3
 8014af2:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014af6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8014afa:	4640      	mov	r0, r8
 8014afc:	1ad3      	subs	r3, r2, r3
 8014afe:	4631      	mov	r1, r6
 8014b00:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
 8014b02:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014b06:	f004 fc96 	bl	8019436 <GUI_DispStringInRect>
 8014b0a:	b004      	add	sp, #16
 8014b0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014b10:	200000cc 	.word	0x200000cc

08014b14 <_IsBetween>:
 8014b14:	4291      	cmp	r1, r2
 8014b16:	dd06      	ble.n	8014b26 <_IsBetween+0x12>
 8014b18:	4288      	cmp	r0, r1
 8014b1a:	dc0b      	bgt.n	8014b34 <_IsBetween+0x20>
 8014b1c:	4290      	cmp	r0, r2
 8014b1e:	bfb4      	ite	lt
 8014b20:	2000      	movlt	r0, #0
 8014b22:	2001      	movge	r0, #1
 8014b24:	4770      	bx	lr
 8014b26:	4288      	cmp	r0, r1
 8014b28:	db04      	blt.n	8014b34 <_IsBetween+0x20>
 8014b2a:	4290      	cmp	r0, r2
 8014b2c:	bfcc      	ite	gt
 8014b2e:	2000      	movgt	r0, #0
 8014b30:	2001      	movle	r0, #1
 8014b32:	4770      	bx	lr
 8014b34:	2000      	movs	r0, #0
 8014b36:	4770      	bx	lr

08014b38 <_Create>:
 8014b38:	b530      	push	{r4, r5, lr}
 8014b3a:	b08b      	sub	sp, #44	; 0x2c
 8014b3c:	2100      	movs	r1, #0
 8014b3e:	4604      	mov	r4, r0
 8014b40:	2224      	movs	r2, #36	; 0x24
 8014b42:	a801      	add	r0, sp, #4
 8014b44:	f005 ffa9 	bl	801aa9a <memset>
 8014b48:	4620      	mov	r0, r4
 8014b4a:	f7fe fac9 	bl	80130e0 <GUI_ALLOC_LockH>
 8014b4e:	ab0a      	add	r3, sp, #40	; 0x28
 8014b50:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
 8014b52:	f843 0d28 	str.w	r0, [r3, #-40]!
 8014b56:	6895      	ldr	r5, [r2, #8]
 8014b58:	4668      	mov	r0, sp
 8014b5a:	f7fe facf 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014b5e:	2300      	movs	r3, #0
 8014b60:	9302      	str	r3, [sp, #8]
 8014b62:	9401      	str	r4, [sp, #4]
 8014b64:	682b      	ldr	r3, [r5, #0]
 8014b66:	a801      	add	r0, sp, #4
 8014b68:	4798      	blx	r3
 8014b6a:	b00b      	add	sp, #44	; 0x2c
 8014b6c:	bd30      	pop	{r4, r5, pc}

08014b6e <MULTIPAGE_SKIN__GetPagePos>:
 8014b6e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014b72:	4689      	mov	r9, r1
 8014b74:	4607      	mov	r7, r0
 8014b76:	f7fe fab3 	bl	80130e0 <GUI_ALLOC_LockH>
 8014b7a:	ae02      	add	r6, sp, #8
 8014b7c:	f890 4080 	ldrb.w	r4, [r0, #128]	; 0x80
 8014b80:	f846 0d04 	str.w	r0, [r6, #-4]!
 8014b84:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8014b86:	f7f6 f9c3 	bl	800af10 <GUI_ARRAY_GetNumItems>
 8014b8a:	4680      	mov	r8, r0
 8014b8c:	4630      	mov	r0, r6
 8014b8e:	f7fe fab5 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014b92:	2500      	movs	r5, #0
 8014b94:	454d      	cmp	r5, r9
 8014b96:	d006      	beq.n	8014ba6 <MULTIPAGE_SKIN__GetPagePos+0x38>
 8014b98:	4629      	mov	r1, r5
 8014b9a:	4638      	mov	r0, r7
 8014b9c:	f7f5 fcd4 	bl	800a548 <MULTIPAGE__GetPageWidth>
 8014ba0:	3501      	adds	r5, #1
 8014ba2:	4404      	add	r4, r0
 8014ba4:	e7f6      	b.n	8014b94 <MULTIPAGE_SKIN__GetPagePos+0x26>
 8014ba6:	4545      	cmp	r5, r8
 8014ba8:	d109      	bne.n	8014bbe <MULTIPAGE_SKIN__GetPagePos+0x50>
 8014baa:	4638      	mov	r0, r7
 8014bac:	f7fe fa98 	bl	80130e0 <GUI_ALLOC_LockH>
 8014bb0:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
 8014bb4:	9001      	str	r0, [sp, #4]
 8014bb6:	4630      	mov	r0, r6
 8014bb8:	441c      	add	r4, r3
 8014bba:	f7fe fa9f 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014bbe:	4620      	mov	r0, r4
 8014bc0:	b003      	add	sp, #12
 8014bc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08014bc8 <_Paint>:
 8014bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bcc:	b0a9      	sub	sp, #164	; 0xa4
 8014bce:	9006      	str	r0, [sp, #24]
 8014bd0:	901f      	str	r0, [sp, #124]	; 0x7c
 8014bd2:	f7fe fa85 	bl	80130e0 <GUI_ALLOC_LockH>
 8014bd6:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8014bd8:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8014bda:	9209      	str	r2, [sp, #36]	; 0x24
 8014bdc:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8014be0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8014be2:	930c      	str	r3, [sp, #48]	; 0x30
 8014be4:	9205      	str	r2, [sp, #20]
 8014be6:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8014be8:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8014bea:	9017      	str	r0, [sp, #92]	; 0x5c
 8014bec:	6cc7      	ldr	r7, [r0, #76]	; 0x4c
 8014bee:	6c06      	ldr	r6, [r0, #64]	; 0x40
 8014bf0:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 8014bf2:	f890 8080 	ldrb.w	r8, [r0, #128]	; 0x80
 8014bf6:	f890 b081 	ldrb.w	fp, [r0, #129]	; 0x81
 8014bfa:	9302      	str	r3, [sp, #8]
 8014bfc:	9201      	str	r2, [sp, #4]
 8014bfe:	b90c      	cbnz	r4, 8014c04 <_Paint+0x3c>
 8014c00:	f8d0 4088 	ldr.w	r4, [r0, #136]	; 0x88
 8014c04:	f10d 09a0 	add.w	r9, sp, #160	; 0xa0
 8014c08:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8014c0a:	f7fd f84b 	bl	8011ca4 <GUI_SetFont>
 8014c0e:	f859 0d44 	ldr.w	r0, [r9, #-68]!
 8014c12:	a918      	add	r1, sp, #96	; 0x60
 8014c14:	f7f5 fc65 	bl	800a4e2 <MULTIPAGE__CalcBorderRect>
 8014c18:	4648      	mov	r0, r9
 8014c1a:	f7fe fa6f 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014c1e:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 8014c22:	9223      	str	r2, [sp, #140]	; 0x8c
 8014c24:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	; 0x62
 8014c28:	9224      	str	r2, [sp, #144]	; 0x90
 8014c2a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8014c2e:	9225      	str	r2, [sp, #148]	; 0x94
 8014c30:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	; 0x66
 8014c34:	9226      	str	r2, [sp, #152]	; 0x98
 8014c36:	ab1a      	add	r3, sp, #104	; 0x68
 8014c38:	220b      	movs	r2, #11
 8014c3a:	f04f 39ff 	mov.w	r9, #4294967295
 8014c3e:	9327      	str	r3, [sp, #156]	; 0x9c
 8014c40:	9220      	str	r2, [sp, #128]	; 0x80
 8014c42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c44:	971b      	str	r7, [sp, #108]	; 0x6c
 8014c46:	961c      	str	r6, [sp, #112]	; 0x70
 8014c48:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
 8014c4c:	f8cd 9084 	str.w	r9, [sp, #132]	; 0x84
 8014c50:	a81f      	add	r0, sp, #124	; 0x7c
 8014c52:	4798      	blx	r3
 8014c54:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014c56:	f7f6 f95b 	bl	800af10 <GUI_ARRAY_GetNumItems>
 8014c5a:	900d      	str	r0, [sp, #52]	; 0x34
 8014c5c:	2800      	cmp	r0, #0
 8014c5e:	f000 8230 	beq.w	80150c2 <_Paint+0x4fa>
 8014c62:	2100      	movs	r1, #0
 8014c64:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014c66:	f7f6 f9d5 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 8014c6a:	2100      	movs	r1, #0
 8014c6c:	9016      	str	r0, [sp, #88]	; 0x58
 8014c6e:	9806      	ldr	r0, [sp, #24]
 8014c70:	f7f5 fc6a 	bl	800a548 <MULTIPAGE__GetPageWidth>
 8014c74:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8014c76:	9003      	str	r0, [sp, #12]
 8014c78:	7912      	ldrb	r2, [r2, #4]
 8014c7a:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 8014c7e:	a816      	add	r0, sp, #88	; 0x58
 8014c80:	f7fe fa3c 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014c84:	f005 0508 	and.w	r5, r5, #8
 8014c88:	9806      	ldr	r0, [sp, #24]
 8014c8a:	a918      	add	r1, sp, #96	; 0x60
 8014c8c:	f7f5 fca3 	bl	800a5d6 <MULTIPAGE__GetTabBarRect>
 8014c90:	b2ad      	uxth	r5, r5
 8014c92:	a818      	add	r0, sp, #96	; 0x60
 8014c94:	f7f7 f9e4 	bl	800c060 <WM_SetUserClipRect>
 8014c98:	950b      	str	r5, [sp, #44]	; 0x2c
 8014c9a:	b1f5      	cbz	r5, 8014cda <_Paint+0x112>
 8014c9c:	f8bd 1062 	ldrh.w	r1, [sp, #98]	; 0x62
 8014ca0:	9a03      	ldr	r2, [sp, #12]
 8014ca2:	f9bd 3066 	ldrsh.w	r3, [sp, #102]	; 0x66
 8014ca6:	9311      	str	r3, [sp, #68]	; 0x44
 8014ca8:	eb08 0501 	add.w	r5, r8, r1
 8014cac:	b2ad      	uxth	r5, r5
 8014cae:	fa1f fa85 	uxth.w	sl, r5
 8014cb2:	444d      	add	r5, r9
 8014cb4:	b209      	sxth	r1, r1
 8014cb6:	4415      	add	r5, r2
 8014cb8:	f017 0f04 	tst.w	r7, #4
 8014cbc:	9110      	str	r1, [sp, #64]	; 0x40
 8014cbe:	b2ad      	uxth	r5, r5
 8014cc0:	f8bd 1060 	ldrh.w	r1, [sp, #96]	; 0x60
 8014cc4:	f8bd 0064 	ldrh.w	r0, [sp, #100]	; 0x64
 8014cc8:	d004      	beq.n	8014cd4 <_Paint+0x10c>
 8014cca:	2201      	movs	r2, #1
 8014ccc:	9108      	str	r1, [sp, #32]
 8014cce:	9004      	str	r0, [sp, #16]
 8014cd0:	9207      	str	r2, [sp, #28]
 8014cd2:	e022      	b.n	8014d1a <_Paint+0x152>
 8014cd4:	9008      	str	r0, [sp, #32]
 8014cd6:	9104      	str	r1, [sp, #16]
 8014cd8:	e018      	b.n	8014d0c <_Paint+0x144>
 8014cda:	f8bd 1060 	ldrh.w	r1, [sp, #96]	; 0x60
 8014cde:	9b03      	ldr	r3, [sp, #12]
 8014ce0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8014ce4:	9211      	str	r2, [sp, #68]	; 0x44
 8014ce6:	eb08 0501 	add.w	r5, r8, r1
 8014cea:	b2ad      	uxth	r5, r5
 8014cec:	fa1f fa85 	uxth.w	sl, r5
 8014cf0:	3d01      	subs	r5, #1
 8014cf2:	b209      	sxth	r1, r1
 8014cf4:	441d      	add	r5, r3
 8014cf6:	f017 0f04 	tst.w	r7, #4
 8014cfa:	9110      	str	r1, [sp, #64]	; 0x40
 8014cfc:	b2ad      	uxth	r5, r5
 8014cfe:	f8bd 0062 	ldrh.w	r0, [sp, #98]	; 0x62
 8014d02:	f8bd 1066 	ldrh.w	r1, [sp, #102]	; 0x66
 8014d06:	d004      	beq.n	8014d12 <_Paint+0x14a>
 8014d08:	9108      	str	r1, [sp, #32]
 8014d0a:	9004      	str	r0, [sp, #16]
 8014d0c:	f8cd 901c 	str.w	r9, [sp, #28]
 8014d10:	e003      	b.n	8014d1a <_Paint+0x152>
 8014d12:	2301      	movs	r3, #1
 8014d14:	9008      	str	r0, [sp, #32]
 8014d16:	9104      	str	r1, [sp, #16]
 8014d18:	9307      	str	r3, [sp, #28]
 8014d1a:	9a05      	ldr	r2, [sp, #20]
 8014d1c:	b152      	cbz	r2, 8014d34 <_Paint+0x16c>
 8014d1e:	4611      	mov	r1, r2
 8014d20:	9806      	ldr	r0, [sp, #24]
 8014d22:	f7ff ff24 	bl	8014b6e <MULTIPAGE_SKIN__GetPagePos>
 8014d26:	b280      	uxth	r0, r0
 8014d28:	ebc0 020a 	rsb	r2, r0, sl
 8014d2c:	1a2d      	subs	r5, r5, r0
 8014d2e:	fa1f fa82 	uxth.w	sl, r2
 8014d32:	b2ad      	uxth	r5, r5
 8014d34:	9b07      	ldr	r3, [sp, #28]
 8014d36:	9a08      	ldr	r2, [sp, #32]
 8014d38:	fb03 2b0b 	mla	fp, r3, fp, r2
 8014d3c:	9a01      	ldr	r2, [sp, #4]
 8014d3e:	2302      	movs	r3, #2
 8014d40:	fb92 f2f3 	sdiv	r2, r2, r3
 8014d44:	920e      	str	r2, [sp, #56]	; 0x38
 8014d46:	9a04      	ldr	r2, [sp, #16]
 8014d48:	b212      	sxth	r2, r2
 8014d4a:	4611      	mov	r1, r2
 8014d4c:	9201      	str	r2, [sp, #4]
 8014d4e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014d50:	fb94 f4f3 	sdiv	r4, r4, r3
 8014d54:	4411      	add	r1, r2
 8014d56:	4622      	mov	r2, r4
 8014d58:	440a      	add	r2, r1
 8014d5a:	9212      	str	r2, [sp, #72]	; 0x48
 8014d5c:	9a02      	ldr	r2, [sp, #8]
 8014d5e:	940f      	str	r4, [sp, #60]	; 0x3c
 8014d60:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d64:	fa1f fb8b 	uxth.w	fp, fp
 8014d68:	9302      	str	r3, [sp, #8]
 8014d6a:	425b      	negs	r3, r3
 8014d6c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8014d70:	9313      	str	r3, [sp, #76]	; 0x4c
 8014d72:	2400      	movs	r4, #0
 8014d74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014d76:	429c      	cmp	r4, r3
 8014d78:	f280 81a0 	bge.w	80150bc <_Paint+0x4f4>
 8014d7c:	b1bc      	cbz	r4, 8014dae <_Paint+0x1e6>
 8014d7e:	4621      	mov	r1, r4
 8014d80:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014d82:	f7f6 f947 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 8014d86:	4621      	mov	r1, r4
 8014d88:	9016      	str	r0, [sp, #88]	; 0x58
 8014d8a:	9806      	ldr	r0, [sp, #24]
 8014d8c:	f7f5 fbdc 	bl	800a548 <MULTIPAGE__GetPageWidth>
 8014d90:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014d92:	9003      	str	r0, [sp, #12]
 8014d94:	791b      	ldrb	r3, [r3, #4]
 8014d96:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 8014d9a:	b2ad      	uxth	r5, r5
 8014d9c:	a816      	add	r0, sp, #88	; 0x58
 8014d9e:	f7fe f9ad 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014da2:	1c6a      	adds	r2, r5, #1
 8014da4:	fa1f fa82 	uxth.w	sl, r2
 8014da8:	9a03      	ldr	r2, [sp, #12]
 8014daa:	4415      	add	r5, r2
 8014dac:	b2ad      	uxth	r5, r5
 8014dae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014db0:	b22b      	sxth	r3, r5
 8014db2:	4293      	cmp	r3, r2
 8014db4:	f2c0 8180 	blt.w	80150b8 <_Paint+0x4f0>
 8014db8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014dba:	fa0f f38a 	sxth.w	r3, sl
 8014dbe:	4293      	cmp	r3, r2
 8014dc0:	f300 817a 	bgt.w	80150b8 <_Paint+0x4f0>
 8014dc4:	42b4      	cmp	r4, r6
 8014dc6:	9421      	str	r4, [sp, #132]	; 0x84
 8014dc8:	d114      	bne.n	8014df4 <_Paint+0x22c>
 8014dca:	b144      	cbz	r4, 8014dde <_Paint+0x216>
 8014dcc:	9b05      	ldr	r3, [sp, #20]
 8014dce:	429c      	cmp	r4, r3
 8014dd0:	d105      	bne.n	8014dde <_Paint+0x216>
 8014dd2:	eb08 020a 	add.w	r2, r8, sl
 8014dd6:	4445      	add	r5, r8
 8014dd8:	fa1f fa82 	uxth.w	sl, r2
 8014ddc:	b2ad      	uxth	r5, r5
 8014dde:	ebc8 090a 	rsb	r9, r8, sl
 8014de2:	eb08 0105 	add.w	r1, r8, r5
 8014de6:	fa1f f989 	uxth.w	r9, r9
 8014dea:	b289      	uxth	r1, r1
 8014dec:	9b04      	ldr	r3, [sp, #16]
 8014dee:	f8dd b020 	ldr.w	fp, [sp, #32]
 8014df2:	e036      	b.n	8014e62 <_Paint+0x29a>
 8014df4:	1c73      	adds	r3, r6, #1
 8014df6:	9a04      	ldr	r2, [sp, #16]
 8014df8:	9907      	ldr	r1, [sp, #28]
 8014dfa:	429c      	cmp	r4, r3
 8014dfc:	ebc1 0302 	rsb	r3, r1, r2
 8014e00:	d11f      	bne.n	8014e42 <_Paint+0x27a>
 8014e02:	07fa      	lsls	r2, r7, #31
 8014e04:	b29b      	uxth	r3, r3
 8014e06:	d514      	bpl.n	8014e32 <_Paint+0x26a>
 8014e08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014e0a:	1e51      	subs	r1, r2, #1
 8014e0c:	9a05      	ldr	r2, [sp, #20]
 8014e0e:	428c      	cmp	r4, r1
 8014e10:	bf08      	it	eq
 8014e12:	ebc8 0105 	rsbeq	r1, r8, r5
 8014e16:	ebc2 0004 	rsb	r0, r2, r4
 8014e1a:	bf0c      	ite	eq
 8014e1c:	b289      	uxtheq	r1, r1
 8014e1e:	4629      	movne	r1, r5
 8014e20:	2800      	cmp	r0, #0
 8014e22:	dd1b      	ble.n	8014e5c <_Paint+0x294>
 8014e24:	eb08 090a 	add.w	r9, r8, sl
 8014e28:	fa1f f989 	uxth.w	r9, r9
 8014e2c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8014e30:	e017      	b.n	8014e62 <_Paint+0x29a>
 8014e32:	eb08 090a 	add.w	r9, r8, sl
 8014e36:	fa1f f989 	uxth.w	r9, r9
 8014e3a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8014e3e:	4629      	mov	r1, r5
 8014e40:	e00f      	b.n	8014e62 <_Paint+0x29a>
 8014e42:	1e71      	subs	r1, r6, #1
 8014e44:	428c      	cmp	r4, r1
 8014e46:	d104      	bne.n	8014e52 <_Paint+0x28a>
 8014e48:	ebc8 0105 	rsb	r1, r8, r5
 8014e4c:	b289      	uxth	r1, r1
 8014e4e:	b29b      	uxth	r3, r3
 8014e50:	e004      	b.n	8014e5c <_Paint+0x294>
 8014e52:	b29b      	uxth	r3, r3
 8014e54:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8014e58:	4629      	mov	r1, r5
 8014e5a:	e001      	b.n	8014e60 <_Paint+0x298>
 8014e5c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8014e60:	46d1      	mov	r9, sl
 8014e62:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014e64:	200f      	movs	r0, #15
 8014e66:	f88d 0076 	strb.w	r0, [sp, #118]	; 0x76
 8014e6a:	b209      	sxth	r1, r1
 8014e6c:	fa0f f089 	sxth.w	r0, r9
 8014e70:	b342      	cbz	r2, 8014ec4 <_Paint+0x2fc>
 8014e72:	9126      	str	r1, [sp, #152]	; 0x98
 8014e74:	1c71      	adds	r1, r6, #1
 8014e76:	4a94      	ldr	r2, [pc, #592]	; (80150c8 <_Paint+0x500>)
 8014e78:	921a      	str	r2, [sp, #104]	; 0x68
 8014e7a:	428c      	cmp	r4, r1
 8014e7c:	9024      	str	r0, [sp, #144]	; 0x90
 8014e7e:	d104      	bne.n	8014e8a <_Paint+0x2c2>
 8014e80:	9a05      	ldr	r2, [sp, #20]
 8014e82:	4294      	cmp	r4, r2
 8014e84:	d007      	beq.n	8014e96 <_Paint+0x2ce>
 8014e86:	210b      	movs	r1, #11
 8014e88:	e003      	b.n	8014e92 <_Paint+0x2ca>
 8014e8a:	1e71      	subs	r1, r6, #1
 8014e8c:	428c      	cmp	r4, r1
 8014e8e:	d102      	bne.n	8014e96 <_Paint+0x2ce>
 8014e90:	2107      	movs	r1, #7
 8014e92:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 8014e96:	f017 0f04 	tst.w	r7, #4
 8014e9a:	f89d 1076 	ldrb.w	r1, [sp, #118]	; 0x76
 8014e9e:	b21b      	sxth	r3, r3
 8014ea0:	d007      	beq.n	8014eb2 <_Paint+0x2ea>
 8014ea2:	f021 0102 	bic.w	r1, r1, #2
 8014ea6:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 8014eaa:	fa0f f18b 	sxth.w	r1, fp
 8014eae:	9123      	str	r1, [sp, #140]	; 0x8c
 8014eb0:	e006      	b.n	8014ec0 <_Paint+0x2f8>
 8014eb2:	f021 0101 	bic.w	r1, r1, #1
 8014eb6:	9323      	str	r3, [sp, #140]	; 0x8c
 8014eb8:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 8014ebc:	fa0f f38b 	sxth.w	r3, fp
 8014ec0:	9325      	str	r3, [sp, #148]	; 0x94
 8014ec2:	e027      	b.n	8014f14 <_Paint+0x34c>
 8014ec4:	9125      	str	r1, [sp, #148]	; 0x94
 8014ec6:	1c71      	adds	r1, r6, #1
 8014ec8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014eca:	921a      	str	r2, [sp, #104]	; 0x68
 8014ecc:	428c      	cmp	r4, r1
 8014ece:	9023      	str	r0, [sp, #140]	; 0x8c
 8014ed0:	d104      	bne.n	8014edc <_Paint+0x314>
 8014ed2:	9a05      	ldr	r2, [sp, #20]
 8014ed4:	4294      	cmp	r4, r2
 8014ed6:	d007      	beq.n	8014ee8 <_Paint+0x320>
 8014ed8:	210e      	movs	r1, #14
 8014eda:	e003      	b.n	8014ee4 <_Paint+0x31c>
 8014edc:	1e71      	subs	r1, r6, #1
 8014ede:	428c      	cmp	r4, r1
 8014ee0:	d102      	bne.n	8014ee8 <_Paint+0x320>
 8014ee2:	210d      	movs	r1, #13
 8014ee4:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 8014ee8:	f017 0f04 	tst.w	r7, #4
 8014eec:	f89d 1076 	ldrb.w	r1, [sp, #118]	; 0x76
 8014ef0:	b21b      	sxth	r3, r3
 8014ef2:	d007      	beq.n	8014f04 <_Paint+0x33c>
 8014ef4:	f021 0104 	bic.w	r1, r1, #4
 8014ef8:	9324      	str	r3, [sp, #144]	; 0x90
 8014efa:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 8014efe:	fa0f f38b 	sxth.w	r3, fp
 8014f02:	e006      	b.n	8014f12 <_Paint+0x34a>
 8014f04:	f021 0108 	bic.w	r1, r1, #8
 8014f08:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 8014f0c:	fa0f f18b 	sxth.w	r1, fp
 8014f10:	9124      	str	r1, [sp, #144]	; 0x90
 8014f12:	9326      	str	r3, [sp, #152]	; 0x98
 8014f14:	230b      	movs	r3, #11
 8014f16:	9320      	str	r3, [sp, #128]	; 0x80
 8014f18:	a81f      	add	r0, sp, #124	; 0x7c
 8014f1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f1c:	4798      	blx	r3
 8014f1e:	f89d 3076 	ldrb.w	r3, [sp, #118]	; 0x76
 8014f22:	07d8      	lsls	r0, r3, #31
 8014f24:	d502      	bpl.n	8014f2c <_Paint+0x364>
 8014f26:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8014f28:	3101      	adds	r1, #1
 8014f2a:	9123      	str	r1, [sp, #140]	; 0x8c
 8014f2c:	0799      	lsls	r1, r3, #30
 8014f2e:	d502      	bpl.n	8014f36 <_Paint+0x36e>
 8014f30:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014f32:	3901      	subs	r1, #1
 8014f34:	9125      	str	r1, [sp, #148]	; 0x94
 8014f36:	075a      	lsls	r2, r3, #29
 8014f38:	d502      	bpl.n	8014f40 <_Paint+0x378>
 8014f3a:	9924      	ldr	r1, [sp, #144]	; 0x90
 8014f3c:	3101      	adds	r1, #1
 8014f3e:	9124      	str	r1, [sp, #144]	; 0x90
 8014f40:	0718      	lsls	r0, r3, #28
 8014f42:	d502      	bpl.n	8014f4a <_Paint+0x382>
 8014f44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014f46:	3b01      	subs	r3, #1
 8014f48:	9326      	str	r3, [sp, #152]	; 0x98
 8014f4a:	2305      	movs	r3, #5
 8014f4c:	9320      	str	r3, [sp, #128]	; 0x80
 8014f4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014f50:	a81f      	add	r0, sp, #124	; 0x7c
 8014f52:	4790      	blx	r2
 8014f54:	4621      	mov	r1, r4
 8014f56:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014f58:	f7f6 f85c 	bl	800b014 <GUI_ARRAY_GetpItemLocked>
 8014f5c:	4621      	mov	r1, r4
 8014f5e:	9016      	str	r0, [sp, #88]	; 0x58
 8014f60:	9806      	ldr	r0, [sp, #24]
 8014f62:	f7f5 ff73 	bl	800ae4c <MULTIPAGE_IsPageEnabled>
 8014f66:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014f68:	b908      	cbnz	r0, 8014f6e <_Paint+0x3a6>
 8014f6a:	6959      	ldr	r1, [r3, #20]
 8014f6c:	e002      	b.n	8014f74 <_Paint+0x3ac>
 8014f6e:	42b4      	cmp	r4, r6
 8014f70:	d103      	bne.n	8014f7a <_Paint+0x3b2>
 8014f72:	68d9      	ldr	r1, [r3, #12]
 8014f74:	b109      	cbz	r1, 8014f7a <_Paint+0x3b2>
 8014f76:	460b      	mov	r3, r1
 8014f78:	e000      	b.n	8014f7c <_Paint+0x3b4>
 8014f7a:	691b      	ldr	r3, [r3, #16]
 8014f7c:	a816      	add	r0, sp, #88	; 0x58
 8014f7e:	9315      	str	r3, [sp, #84]	; 0x54
 8014f80:	f7fe f8bc 	bl	80130fc <GUI_ALLOC_UnlockH>
 8014f84:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014f86:	2800      	cmp	r0, #0
 8014f88:	d063      	beq.n	8015052 <_Paint+0x48a>
 8014f8a:	f7f5 ff8e 	bl	800aeaa <GUI_DRAW__GetYSize>
 8014f8e:	4601      	mov	r1, r0
 8014f90:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014f92:	9100      	str	r1, [sp, #0]
 8014f94:	f7f5 ff77 	bl	800ae86 <GUI_DRAW__GetXSize>
 8014f98:	9900      	ldr	r1, [sp, #0]
 8014f9a:	2900      	cmp	r1, #0
 8014f9c:	d059      	beq.n	8015052 <_Paint+0x48a>
 8014f9e:	2800      	cmp	r0, #0
 8014fa0:	d057      	beq.n	8015052 <_Paint+0x48a>
 8014fa2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014fa4:	2302      	movs	r3, #2
 8014fa6:	fa0f fe8a 	sxth.w	lr, sl
 8014faa:	b322      	cbz	r2, 8014ff6 <_Paint+0x42e>
 8014fac:	9a03      	ldr	r2, [sp, #12]
 8014fae:	fb92 fcf3 	sdiv	ip, r2, r3
 8014fb2:	fb91 f1f3 	sdiv	r1, r1, r3
 8014fb6:	44e6      	add	lr, ip
 8014fb8:	ebc1 010e 	rsb	r1, r1, lr
 8014fbc:	9124      	str	r1, [sp, #144]	; 0x90
 8014fbe:	f017 0f04 	tst.w	r7, #4
 8014fc2:	b229      	sxth	r1, r5
 8014fc4:	9126      	str	r1, [sp, #152]	; 0x98
 8014fc6:	fb90 f3f3 	sdiv	r3, r0, r3
 8014fca:	d009      	beq.n	8014fe0 <_Paint+0x418>
 8014fcc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014fce:	fa02 f08b 	sxtah	r0, r2, fp
 8014fd2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014fd4:	4410      	add	r0, r2
 8014fd6:	1ac3      	subs	r3, r0, r3
 8014fd8:	9323      	str	r3, [sp, #140]	; 0x8c
 8014fda:	9b01      	ldr	r3, [sp, #4]
 8014fdc:	9325      	str	r3, [sp, #148]	; 0x94
 8014fde:	e02e      	b.n	801503e <_Paint+0x476>
 8014fe0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014fe2:	fa0f f18b 	sxth.w	r1, fp
 8014fe6:	1ad3      	subs	r3, r2, r3
 8014fe8:	42b4      	cmp	r4, r6
 8014fea:	9323      	str	r3, [sp, #140]	; 0x8c
 8014fec:	9125      	str	r1, [sp, #148]	; 0x94
 8014fee:	d126      	bne.n	801503e <_Paint+0x476>
 8014ff0:	3302      	adds	r3, #2
 8014ff2:	9323      	str	r3, [sp, #140]	; 0x8c
 8014ff4:	e023      	b.n	801503e <_Paint+0x476>
 8014ff6:	9a03      	ldr	r2, [sp, #12]
 8014ff8:	fb92 fcf3 	sdiv	ip, r2, r3
 8014ffc:	fb90 f0f3 	sdiv	r0, r0, r3
 8015000:	44e6      	add	lr, ip
 8015002:	ebc0 000e 	rsb	r0, r0, lr
 8015006:	9023      	str	r0, [sp, #140]	; 0x8c
 8015008:	f017 0f04 	tst.w	r7, #4
 801500c:	b228      	sxth	r0, r5
 801500e:	9025      	str	r0, [sp, #148]	; 0x94
 8015010:	fb91 f3f3 	sdiv	r3, r1, r3
 8015014:	d00a      	beq.n	801502c <_Paint+0x464>
 8015016:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015018:	fa0f f18b 	sxth.w	r1, fp
 801501c:	1ad3      	subs	r3, r2, r3
 801501e:	42b4      	cmp	r4, r6
 8015020:	9324      	str	r3, [sp, #144]	; 0x90
 8015022:	9126      	str	r1, [sp, #152]	; 0x98
 8015024:	d10b      	bne.n	801503e <_Paint+0x476>
 8015026:	3302      	adds	r3, #2
 8015028:	9324      	str	r3, [sp, #144]	; 0x90
 801502a:	e008      	b.n	801503e <_Paint+0x476>
 801502c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801502e:	fa02 f18b 	sxtah	r1, r2, fp
 8015032:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015034:	4411      	add	r1, r2
 8015036:	1acb      	subs	r3, r1, r3
 8015038:	9324      	str	r3, [sp, #144]	; 0x90
 801503a:	9b01      	ldr	r3, [sp, #4]
 801503c:	9326      	str	r3, [sp, #152]	; 0x98
 801503e:	ab15      	add	r3, sp, #84	; 0x54
 8015040:	931e      	str	r3, [sp, #120]	; 0x78
 8015042:	2306      	movs	r3, #6
 8015044:	9320      	str	r3, [sp, #128]	; 0x80
 8015046:	a81f      	add	r0, sp, #124	; 0x7c
 8015048:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801504a:	4790      	blx	r2
 801504c:	2300      	movs	r3, #0
 801504e:	931e      	str	r3, [sp, #120]	; 0x78
 8015050:	9315      	str	r3, [sp, #84]	; 0x54
 8015052:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015054:	fa0f f38b 	sxth.w	r3, fp
 8015058:	b1a2      	cbz	r2, 8015084 <_Paint+0x4bc>
 801505a:	9a02      	ldr	r2, [sp, #8]
 801505c:	b91c      	cbnz	r4, 8015066 <_Paint+0x49e>
 801505e:	b116      	cbz	r6, 8015066 <_Paint+0x49e>
 8015060:	fa02 f189 	sxtah	r1, r2, r9
 8015064:	e001      	b.n	801506a <_Paint+0x4a2>
 8015066:	fa02 f18a 	sxtah	r1, r2, sl
 801506a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801506c:	9124      	str	r1, [sp, #144]	; 0x90
 801506e:	fa02 f185 	sxtah	r1, r2, r5
 8015072:	9126      	str	r1, [sp, #152]	; 0x98
 8015074:	0779      	lsls	r1, r7, #29
 8015076:	bf4b      	itete	mi
 8015078:	9323      	strmi	r3, [sp, #140]	; 0x8c
 801507a:	9a01      	ldrpl	r2, [sp, #4]
 801507c:	9b01      	ldrmi	r3, [sp, #4]
 801507e:	9223      	strpl	r2, [sp, #140]	; 0x8c
 8015080:	9325      	str	r3, [sp, #148]	; 0x94
 8015082:	e014      	b.n	80150ae <_Paint+0x4e6>
 8015084:	9a02      	ldr	r2, [sp, #8]
 8015086:	b91c      	cbnz	r4, 8015090 <_Paint+0x4c8>
 8015088:	b116      	cbz	r6, 8015090 <_Paint+0x4c8>
 801508a:	fa02 f189 	sxtah	r1, r2, r9
 801508e:	e001      	b.n	8015094 <_Paint+0x4cc>
 8015090:	fa02 f18a 	sxtah	r1, r2, sl
 8015094:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015096:	9123      	str	r1, [sp, #140]	; 0x8c
 8015098:	fa02 f185 	sxtah	r1, r2, r5
 801509c:	077a      	lsls	r2, r7, #29
 801509e:	bf4e      	itee	mi
 80150a0:	9a01      	ldrmi	r2, [sp, #4]
 80150a2:	9324      	strpl	r3, [sp, #144]	; 0x90
 80150a4:	9b01      	ldrpl	r3, [sp, #4]
 80150a6:	9125      	str	r1, [sp, #148]	; 0x94
 80150a8:	bf48      	it	mi
 80150aa:	9224      	strmi	r2, [sp, #144]	; 0x90
 80150ac:	9326      	str	r3, [sp, #152]	; 0x98
 80150ae:	2312      	movs	r3, #18
 80150b0:	9320      	str	r3, [sp, #128]	; 0x80
 80150b2:	a81f      	add	r0, sp, #124	; 0x7c
 80150b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80150b6:	4790      	blx	r2
 80150b8:	3401      	adds	r4, #1
 80150ba:	e65b      	b.n	8014d74 <_Paint+0x1ac>
 80150bc:	2000      	movs	r0, #0
 80150be:	f7f6 ffcf 	bl	800c060 <WM_SetUserClipRect>
 80150c2:	b029      	add	sp, #164	; 0xa4
 80150c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80150c8:	20000318 	.word	0x20000318

080150cc <MULTIPAGE_SKIN__GetTabBarWidth>:
 80150cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80150ce:	4606      	mov	r6, r0
 80150d0:	f7fe f806 	bl	80130e0 <GUI_ALLOC_LockH>
 80150d4:	ac02      	add	r4, sp, #8
 80150d6:	f844 0d04 	str.w	r0, [r4, #-4]!
 80150da:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80150dc:	f7f5 ff18 	bl	800af10 <GUI_ARRAY_GetNumItems>
 80150e0:	4605      	mov	r5, r0
 80150e2:	4620      	mov	r0, r4
 80150e4:	f7fe f80a 	bl	80130fc <GUI_ALLOC_UnlockH>
 80150e8:	4630      	mov	r0, r6
 80150ea:	4629      	mov	r1, r5
 80150ec:	f7ff fd3f 	bl	8014b6e <MULTIPAGE_SKIN__GetPagePos>
 80150f0:	3801      	subs	r0, #1
 80150f2:	b002      	add	sp, #8
 80150f4:	bd70      	pop	{r4, r5, r6, pc}

080150f6 <MULTIPAGE_SKIN__GetTouchedPage>:
 80150f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150fa:	b08b      	sub	sp, #44	; 0x2c
 80150fc:	460f      	mov	r7, r1
 80150fe:	4690      	mov	r8, r2
 8015100:	4682      	mov	sl, r0
 8015102:	f7fd ffed 	bl	80130e0 <GUI_ALLOC_LockH>
 8015106:	9007      	str	r0, [sp, #28]
 8015108:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801510a:	f7f5 ff01 	bl	800af10 <GUI_ARRAY_GetNumItems>
 801510e:	9005      	str	r0, [sp, #20]
 8015110:	a80a      	add	r0, sp, #40	; 0x28
 8015112:	fa1f f888 	uxth.w	r8, r8
 8015116:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 801511a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 801511c:	f8b3 9032 	ldrh.w	r9, [r3, #50]	; 0x32
 8015120:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8015122:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 8015124:	f893 6080 	ldrb.w	r6, [r3, #128]	; 0x80
 8015128:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 801512c:	9202      	str	r2, [sp, #8]
 801512e:	9303      	str	r3, [sp, #12]
 8015130:	f7fd ffe4 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015134:	4650      	mov	r0, sl
 8015136:	a908      	add	r1, sp, #32
 8015138:	f7f5 fa4d 	bl	800a5d6 <MULTIPAGE__GetTabBarRect>
 801513c:	f019 0f08 	tst.w	r9, #8
 8015140:	b2b8      	uxth	r0, r7
 8015142:	f004 0404 	and.w	r4, r4, #4
 8015146:	d014      	beq.n	8015172 <MULTIPAGE_SKIN__GetTouchedPage+0x7c>
 8015148:	af0a      	add	r7, sp, #40	; 0x28
 801514a:	f8cd 8004 	str.w	r8, [sp, #4]
 801514e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015152:	f837 2d04 	ldrh.w	r2, [r7, #-4]!
 8015156:	b12c      	cbz	r4, 8015164 <MULTIPAGE_SKIN__GetTouchedPage+0x6e>
 8015158:	46b8      	mov	r8, r7
 801515a:	4619      	mov	r1, r3
 801515c:	af08      	add	r7, sp, #32
 801515e:	f10d 0422 	add.w	r4, sp, #34	; 0x22
 8015162:	e01d      	b.n	80151a0 <MULTIPAGE_SKIN__GetTouchedPage+0xaa>
 8015164:	4611      	mov	r1, r2
 8015166:	f10d 0820 	add.w	r8, sp, #32
 801516a:	461a      	mov	r2, r3
 801516c:	f10d 0422 	add.w	r4, sp, #34	; 0x22
 8015170:	e00c      	b.n	801518c <MULTIPAGE_SKIN__GetTouchedPage+0x96>
 8015172:	9001      	str	r0, [sp, #4]
 8015174:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8015178:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801517c:	4640      	mov	r0, r8
 801517e:	b144      	cbz	r4, 8015192 <MULTIPAGE_SKIN__GetTouchedPage+0x9c>
 8015180:	4619      	mov	r1, r3
 8015182:	f10d 0822 	add.w	r8, sp, #34	; 0x22
 8015186:	f10d 0726 	add.w	r7, sp, #38	; 0x26
 801518a:	ac08      	add	r4, sp, #32
 801518c:	f04f 3bff 	mov.w	fp, #4294967295
 8015190:	e008      	b.n	80151a4 <MULTIPAGE_SKIN__GetTouchedPage+0xae>
 8015192:	4611      	mov	r1, r2
 8015194:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 8015198:	461a      	mov	r2, r3
 801519a:	f10d 0722 	add.w	r7, sp, #34	; 0x22
 801519e:	ac08      	add	r4, sp, #32
 80151a0:	f04f 0b01 	mov.w	fp, #1
 80151a4:	b200      	sxth	r0, r0
 80151a6:	b209      	sxth	r1, r1
 80151a8:	b212      	sxth	r2, r2
 80151aa:	9004      	str	r0, [sp, #16]
 80151ac:	f7ff fcb2 	bl	8014b14 <_IsBetween>
 80151b0:	b910      	cbnz	r0, 80151b8 <MULTIPAGE_SKIN__GetTouchedPage+0xc2>
 80151b2:	f04f 30ff 	mov.w	r0, #4294967295
 80151b6:	e053      	b.n	8015260 <MULTIPAGE_SKIN__GetTouchedPage+0x16a>
 80151b8:	f9b4 c000 	ldrsh.w	ip, [r4]
 80151bc:	b10d      	cbz	r5, 80151c2 <MULTIPAGE_SKIN__GetTouchedPage+0xcc>
 80151be:	46e1      	mov	r9, ip
 80151c0:	e001      	b.n	80151c6 <MULTIPAGE_SKIN__GetTouchedPage+0xd0>
 80151c2:	eb0c 0906 	add.w	r9, ip, r6
 80151c6:	4650      	mov	r0, sl
 80151c8:	4629      	mov	r1, r5
 80151ca:	f7f5 f9bd 	bl	800a548 <MULTIPAGE__GetPageWidth>
 80151ce:	9b03      	ldr	r3, [sp, #12]
 80151d0:	4448      	add	r0, r9
 80151d2:	fb03 fb0b 	mul.w	fp, r3, fp
 80151d6:	f8cd b00c 	str.w	fp, [sp, #12]
 80151da:	1e44      	subs	r4, r0, #1
 80151dc:	46ab      	mov	fp, r5
 80151de:	9b05      	ldr	r3, [sp, #20]
 80151e0:	459b      	cmp	fp, r3
 80151e2:	dae6      	bge.n	80151b2 <MULTIPAGE_SKIN__GetTouchedPage+0xbc>
 80151e4:	45ab      	cmp	fp, r5
 80151e6:	db37      	blt.n	8015258 <MULTIPAGE_SKIN__GetTouchedPage+0x162>
 80151e8:	9b02      	ldr	r3, [sp, #8]
 80151ea:	459b      	cmp	fp, r3
 80151ec:	d10b      	bne.n	8015206 <MULTIPAGE_SKIN__GetTouchedPage+0x110>
 80151ee:	9b01      	ldr	r3, [sp, #4]
 80151f0:	ebc6 0c09 	rsb	ip, r6, r9
 80151f4:	b218      	sxth	r0, r3
 80151f6:	19a2      	adds	r2, r4, r6
 80151f8:	4661      	mov	r1, ip
 80151fa:	f1bb 0f00 	cmp.w	fp, #0
 80151fe:	d120      	bne.n	8015242 <MULTIPAGE_SKIN__GetTouchedPage+0x14c>
 8015200:	4611      	mov	r1, r2
 8015202:	4662      	mov	r2, ip
 8015204:	e01d      	b.n	8015242 <MULTIPAGE_SKIN__GetTouchedPage+0x14c>
 8015206:	f9b7 1000 	ldrsh.w	r1, [r7]
 801520a:	9b03      	ldr	r3, [sp, #12]
 801520c:	9804      	ldr	r0, [sp, #16]
 801520e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8015212:	4419      	add	r1, r3
 8015214:	f7ff fc7e 	bl	8014b14 <_IsBetween>
 8015218:	b1b0      	cbz	r0, 8015248 <MULTIPAGE_SKIN__GetTouchedPage+0x152>
 801521a:	9b02      	ldr	r3, [sp, #8]
 801521c:	1c5a      	adds	r2, r3, #1
 801521e:	9b01      	ldr	r3, [sp, #4]
 8015220:	4593      	cmp	fp, r2
 8015222:	b218      	sxth	r0, r3
 8015224:	d104      	bne.n	8015230 <MULTIPAGE_SKIN__GetTouchedPage+0x13a>
 8015226:	45ab      	cmp	fp, r5
 8015228:	dd02      	ble.n	8015230 <MULTIPAGE_SKIN__GetTouchedPage+0x13a>
 801522a:	eb09 0106 	add.w	r1, r9, r6
 801522e:	e007      	b.n	8015240 <MULTIPAGE_SKIN__GetTouchedPage+0x14a>
 8015230:	9b02      	ldr	r3, [sp, #8]
 8015232:	1e5a      	subs	r2, r3, #1
 8015234:	4593      	cmp	fp, r2
 8015236:	4649      	mov	r1, r9
 8015238:	bf08      	it	eq
 801523a:	ebc6 0204 	rsbeq	r2, r6, r4
 801523e:	d000      	beq.n	8015242 <MULTIPAGE_SKIN__GetTouchedPage+0x14c>
 8015240:	4622      	mov	r2, r4
 8015242:	f7ff fc67 	bl	8014b14 <_IsBetween>
 8015246:	b950      	cbnz	r0, 801525e <MULTIPAGE_SKIN__GetTouchedPage+0x168>
 8015248:	4650      	mov	r0, sl
 801524a:	f10b 0101 	add.w	r1, fp, #1
 801524e:	f7f5 f97b 	bl	800a548 <MULTIPAGE__GetPageWidth>
 8015252:	f104 0901 	add.w	r9, r4, #1
 8015256:	4404      	add	r4, r0
 8015258:	f10b 0b01 	add.w	fp, fp, #1
 801525c:	e7bf      	b.n	80151de <MULTIPAGE_SKIN__GetTouchedPage+0xe8>
 801525e:	4658      	mov	r0, fp
 8015260:	b00b      	add	sp, #44	; 0x2c
 8015262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015268 <BUTTON_DrawSkinFlex>:
 8015268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801526c:	6883      	ldr	r3, [r0, #8]
 801526e:	4a8a      	ldr	r2, [pc, #552]	; (8015498 <BUTTON_DrawSkinFlex+0x230>)
 8015270:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 8015274:	6843      	ldr	r3, [r0, #4]
 8015276:	2b05      	cmp	r3, #5
 8015278:	b088      	sub	sp, #32
 801527a:	4604      	mov	r4, r0
 801527c:	d00e      	beq.n	801529c <BUTTON_DrawSkinFlex+0x34>
 801527e:	dc06      	bgt.n	801528e <BUTTON_DrawSkinFlex+0x26>
 8015280:	2b00      	cmp	r3, #0
 8015282:	f040 8104 	bne.w	801548e <BUTTON_DrawSkinFlex+0x226>
 8015286:	6800      	ldr	r0, [r0, #0]
 8015288:	f7f6 fef6 	bl	800c078 <WM_SetHasTrans>
 801528c:	e0ff      	b.n	801548e <BUTTON_DrawSkinFlex+0x226>
 801528e:	2b06      	cmp	r3, #6
 8015290:	f000 8088 	beq.w	80153a4 <BUTTON_DrawSkinFlex+0x13c>
 8015294:	2b12      	cmp	r3, #18
 8015296:	f000 80a9 	beq.w	80153ec <BUTTON_DrawSkinFlex+0x184>
 801529a:	e0f8      	b.n	801548e <BUTTON_DrawSkinFlex+0x226>
 801529c:	69ee      	ldr	r6, [r5, #28]
 801529e:	2e00      	cmp	r6, #0
 80152a0:	d051      	beq.n	8015346 <BUTTON_DrawSkinFlex+0xde>
 80152a2:	9600      	str	r6, [sp, #0]
 80152a4:	682b      	ldr	r3, [r5, #0]
 80152a6:	9301      	str	r3, [sp, #4]
 80152a8:	686b      	ldr	r3, [r5, #4]
 80152aa:	9302      	str	r3, [sp, #8]
 80152ac:	68ab      	ldr	r3, [r5, #8]
 80152ae:	9303      	str	r3, [sp, #12]
 80152b0:	3010      	adds	r0, #16
 80152b2:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80152b4:	f002 ffa2 	bl	80181fc <GUI__DrawTwinArc4>
 80152b8:	2600      	movs	r6, #0
 80152ba:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 80152be:	f7fc fd1f 	bl	8011d00 <GUI_SetColor>
 80152c2:	69eb      	ldr	r3, [r5, #28]
 80152c4:	6960      	ldr	r0, [r4, #20]
 80152c6:	6921      	ldr	r1, [r4, #16]
 80152c8:	69a2      	ldr	r2, [r4, #24]
 80152ca:	4430      	add	r0, r6
 80152cc:	4419      	add	r1, r3
 80152ce:	1ad2      	subs	r2, r2, r3
 80152d0:	f7fc fffe 	bl	80122d0 <GUI_DrawHLine>
 80152d4:	69eb      	ldr	r3, [r5, #28]
 80152d6:	69e0      	ldr	r0, [r4, #28]
 80152d8:	6921      	ldr	r1, [r4, #16]
 80152da:	69a2      	ldr	r2, [r4, #24]
 80152dc:	1b80      	subs	r0, r0, r6
 80152de:	4419      	add	r1, r3
 80152e0:	1ad2      	subs	r2, r2, r3
 80152e2:	f7fc fff5 	bl	80122d0 <GUI_DrawHLine>
 80152e6:	69eb      	ldr	r3, [r5, #28]
 80152e8:	6920      	ldr	r0, [r4, #16]
 80152ea:	6961      	ldr	r1, [r4, #20]
 80152ec:	69e2      	ldr	r2, [r4, #28]
 80152ee:	4430      	add	r0, r6
 80152f0:	4419      	add	r1, r3
 80152f2:	1ad2      	subs	r2, r2, r3
 80152f4:	f7fc ffca 	bl	801228c <GUI_DrawVLine>
 80152f8:	69eb      	ldr	r3, [r5, #28]
 80152fa:	69a0      	ldr	r0, [r4, #24]
 80152fc:	6961      	ldr	r1, [r4, #20]
 80152fe:	69e2      	ldr	r2, [r4, #28]
 8015300:	1b80      	subs	r0, r0, r6
 8015302:	4419      	add	r1, r3
 8015304:	1ad2      	subs	r2, r2, r3
 8015306:	3601      	adds	r6, #1
 8015308:	f7fc ffc0 	bl	801228c <GUI_DrawVLine>
 801530c:	2e02      	cmp	r6, #2
 801530e:	d1d4      	bne.n	80152ba <BUTTON_DrawSkinFlex+0x52>
 8015310:	68a8      	ldr	r0, [r5, #8]
 8015312:	f7fc fcf5 	bl	8011d00 <GUI_SetColor>
 8015316:	69eb      	ldr	r3, [r5, #28]
 8015318:	6920      	ldr	r0, [r4, #16]
 801531a:	69e6      	ldr	r6, [r4, #28]
 801531c:	6961      	ldr	r1, [r4, #20]
 801531e:	18c2      	adds	r2, r0, r3
 8015320:	4419      	add	r1, r3
 8015322:	3002      	adds	r0, #2
 8015324:	1af3      	subs	r3, r6, r3
 8015326:	3a01      	subs	r2, #1
 8015328:	f7fc ff6a 	bl	8012200 <GUI_FillRect>
 801532c:	69eb      	ldr	r3, [r5, #28]
 801532e:	69a2      	ldr	r2, [r4, #24]
 8015330:	69e6      	ldr	r6, [r4, #28]
 8015332:	6961      	ldr	r1, [r4, #20]
 8015334:	1ad0      	subs	r0, r2, r3
 8015336:	4419      	add	r1, r3
 8015338:	3001      	adds	r0, #1
 801533a:	1af3      	subs	r3, r6, r3
 801533c:	3a02      	subs	r2, #2
 801533e:	f7fc ff5f 	bl	8012200 <GUI_FillRect>
 8015342:	69ee      	ldr	r6, [r5, #28]
 8015344:	e00f      	b.n	8015366 <BUTTON_DrawSkinFlex+0xfe>
 8015346:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 801534a:	f7fc fcd9 	bl	8011d00 <GUI_SetColor>
 801534e:	f104 0010 	add.w	r0, r4, #16
 8015352:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8015354:	4430      	add	r0, r6
 8015356:	4431      	add	r1, r6
 8015358:	1b92      	subs	r2, r2, r6
 801535a:	1b9b      	subs	r3, r3, r6
 801535c:	3601      	adds	r6, #1
 801535e:	f004 f8af 	bl	80194c0 <GUI_DrawRect>
 8015362:	2e02      	cmp	r6, #2
 8015364:	d1ef      	bne.n	8015346 <BUTTON_DrawSkinFlex+0xde>
 8015366:	f104 0010 	add.w	r0, r4, #16
 801536a:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 801536c:	68ef      	ldr	r7, [r5, #12]
 801536e:	9700      	str	r7, [sp, #0]
 8015370:	692f      	ldr	r7, [r5, #16]
 8015372:	9701      	str	r7, [sp, #4]
 8015374:	440b      	add	r3, r1
 8015376:	4430      	add	r0, r6
 8015378:	1b92      	subs	r2, r2, r6
 801537a:	3102      	adds	r1, #2
 801537c:	105b      	asrs	r3, r3, #1
 801537e:	f003 fed9 	bl	8019134 <GUI_DrawGradientV>
 8015382:	69e3      	ldr	r3, [r4, #28]
 8015384:	6962      	ldr	r2, [r4, #20]
 8015386:	6920      	ldr	r0, [r4, #16]
 8015388:	441a      	add	r2, r3
 801538a:	1051      	asrs	r1, r2, #1
 801538c:	69a2      	ldr	r2, [r4, #24]
 801538e:	696c      	ldr	r4, [r5, #20]
 8015390:	9400      	str	r4, [sp, #0]
 8015392:	69ac      	ldr	r4, [r5, #24]
 8015394:	9401      	str	r4, [sp, #4]
 8015396:	4430      	add	r0, r6
 8015398:	3101      	adds	r1, #1
 801539a:	1b92      	subs	r2, r2, r6
 801539c:	3b02      	subs	r3, #2
 801539e:	f003 fec9 	bl	8019134 <GUI_DrawGradientV>
 80153a2:	e074      	b.n	801548e <BUTTON_DrawSkinFlex+0x226>
 80153a4:	6800      	ldr	r0, [r0, #0]
 80153a6:	f7fd fe9b 	bl	80130e0 <GUI_ALLOC_LockH>
 80153aa:	9004      	str	r0, [sp, #16]
 80153ac:	6820      	ldr	r0, [r4, #0]
 80153ae:	f7f6 fd67 	bl	800be80 <WM__IsEnabled>
 80153b2:	9b04      	ldr	r3, [sp, #16]
 80153b4:	b130      	cbz	r0, 80153c4 <BUTTON_DrawSkinFlex+0x15c>
 80153b6:	68a2      	ldr	r2, [r4, #8]
 80153b8:	b952      	cbnz	r2, 80153d0 <BUTTON_DrawSkinFlex+0x168>
 80153ba:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80153bc:	3200      	adds	r2, #0
 80153be:	bf18      	it	ne
 80153c0:	2201      	movne	r2, #1
 80153c2:	e006      	b.n	80153d2 <BUTTON_DrawSkinFlex+0x16a>
 80153c4:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80153c6:	2a00      	cmp	r2, #0
 80153c8:	bf0c      	ite	eq
 80153ca:	2200      	moveq	r2, #0
 80153cc:	2202      	movne	r2, #2
 80153ce:	e000      	b.n	80153d2 <BUTTON_DrawSkinFlex+0x16a>
 80153d0:	2200      	movs	r2, #0
 80153d2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80153d6:	a804      	add	r0, sp, #16
 80153d8:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 80153da:	f7fd fe8f 	bl	80130fc <GUI_ALLOC_UnlockH>
 80153de:	2200      	movs	r2, #0
 80153e0:	4628      	mov	r0, r5
 80153e2:	6821      	ldr	r1, [r4, #0]
 80153e4:	4613      	mov	r3, r2
 80153e6:	f7f5 fd35 	bl	800ae54 <GUI_DRAW__Draw>
 80153ea:	e050      	b.n	801548e <BUTTON_DrawSkinFlex+0x226>
 80153ec:	6800      	ldr	r0, [r0, #0]
 80153ee:	f7fd fe77 	bl	80130e0 <GUI_ALLOC_LockH>
 80153f2:	ae08      	add	r6, sp, #32
 80153f4:	6e87      	ldr	r7, [r0, #104]	; 0x68
 80153f6:	f846 0d10 	str.w	r0, [r6, #-16]!
 80153fa:	2f00      	cmp	r7, #0
 80153fc:	d044      	beq.n	8015488 <BUTTON_DrawSkinFlex+0x220>
 80153fe:	68a2      	ldr	r2, [r4, #8]
 8015400:	f9b0 805c 	ldrsh.w	r8, [r0, #92]	; 0x5c
 8015404:	b122      	cbz	r2, 8015410 <BUTTON_DrawSkinFlex+0x1a8>
 8015406:	2a03      	cmp	r2, #3
 8015408:	bf14      	ite	ne
 801540a:	2100      	movne	r1, #0
 801540c:	2102      	moveq	r1, #2
 801540e:	e000      	b.n	8015412 <BUTTON_DrawSkinFlex+0x1aa>
 8015410:	2101      	movs	r1, #1
 8015412:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8015416:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8015418:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 801541a:	f7fc fc43 	bl	8011ca4 <GUI_SetFont>
 801541e:	4620      	mov	r0, r4
 8015420:	f7fc fc6e 	bl	8011d00 <GUI_SetColor>
 8015424:	a806      	add	r0, sp, #24
 8015426:	f003 fb3d 	bl	8018aa4 <GUI_GetClientRect>
 801542a:	8bab      	ldrh	r3, [r5, #28]
 801542c:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8015430:	441a      	add	r2, r3
 8015432:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015436:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 801543a:	1ad3      	subs	r3, r2, r3
 801543c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015440:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8015444:	3302      	adds	r3, #2
 8015446:	f8ad 301a 	strh.w	r3, [sp, #26]
 801544a:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 801544e:	3b02      	subs	r3, #2
 8015450:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015454:	9b04      	ldr	r3, [sp, #16]
 8015456:	a806      	add	r0, sp, #24
 8015458:	f9b3 105e 	ldrsh.w	r1, [r3, #94]	; 0x5e
 801545c:	f9b3 2060 	ldrsh.w	r2, [r3, #96]	; 0x60
 8015460:	f7fc fdb0 	bl	8011fc4 <GUI_MoveRect>
 8015464:	4630      	mov	r0, r6
 8015466:	f7fd fe49 	bl	80130fc <GUI_ALLOC_UnlockH>
 801546a:	2002      	movs	r0, #2
 801546c:	f7fc fc10 	bl	8011c90 <GUI_SetTextMode>
 8015470:	4638      	mov	r0, r7
 8015472:	f7fd fe35 	bl	80130e0 <GUI_ALLOC_LockH>
 8015476:	ac08      	add	r4, sp, #32
 8015478:	a906      	add	r1, sp, #24
 801547a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 801547e:	4642      	mov	r2, r8
 8015480:	f003 ffd9 	bl	8019436 <GUI_DispStringInRect>
 8015484:	4620      	mov	r0, r4
 8015486:	e000      	b.n	801548a <BUTTON_DrawSkinFlex+0x222>
 8015488:	4630      	mov	r0, r6
 801548a:	f7fd fe37 	bl	80130fc <GUI_ALLOC_UnlockH>
 801548e:	2000      	movs	r0, #0
 8015490:	b008      	add	sp, #32
 8015492:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015496:	bf00      	nop
 8015498:	080210cc 	.word	0x080210cc

0801549c <_Create>:
 801549c:	b530      	push	{r4, r5, lr}
 801549e:	b08b      	sub	sp, #44	; 0x2c
 80154a0:	2100      	movs	r1, #0
 80154a2:	4604      	mov	r4, r0
 80154a4:	2224      	movs	r2, #36	; 0x24
 80154a6:	a801      	add	r0, sp, #4
 80154a8:	f005 faf7 	bl	801aa9a <memset>
 80154ac:	4620      	mov	r0, r4
 80154ae:	f7fd fe17 	bl	80130e0 <GUI_ALLOC_LockH>
 80154b2:	ab0a      	add	r3, sp, #40	; 0x28
 80154b4:	6e42      	ldr	r2, [r0, #100]	; 0x64
 80154b6:	f843 0d28 	str.w	r0, [r3, #-40]!
 80154ba:	6895      	ldr	r5, [r2, #8]
 80154bc:	4668      	mov	r0, sp
 80154be:	f7fd fe1d 	bl	80130fc <GUI_ALLOC_UnlockH>
 80154c2:	2300      	movs	r3, #0
 80154c4:	9302      	str	r3, [sp, #8]
 80154c6:	9401      	str	r4, [sp, #4]
 80154c8:	682b      	ldr	r3, [r5, #0]
 80154ca:	a801      	add	r0, sp, #4
 80154cc:	4798      	blx	r3
 80154ce:	b00b      	add	sp, #44	; 0x2c
 80154d0:	bd30      	pop	{r4, r5, pc}

080154d2 <_Paint>:
 80154d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80154d6:	b08a      	sub	sp, #40	; 0x28
 80154d8:	4605      	mov	r5, r0
 80154da:	f7fd fe01 	bl	80130e0 <GUI_ALLOC_LockH>
 80154de:	4603      	mov	r3, r0
 80154e0:	a80a      	add	r0, sp, #40	; 0x28
 80154e2:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 80154e4:	f840 3d28 	str.w	r3, [r0, #-40]!
 80154e8:	4668      	mov	r0, sp
 80154ea:	6d9c      	ldr	r4, [r3, #88]	; 0x58
 80154ec:	8e5f      	ldrh	r7, [r3, #50]	; 0x32
 80154ee:	f7fd fe05 	bl	80130fc <GUI_ALLOC_UnlockH>
 80154f2:	4628      	mov	r0, r5
 80154f4:	f7f7 f924 	bl	800c740 <WM_GetWindowSizeX>
 80154f8:	4680      	mov	r8, r0
 80154fa:	4628      	mov	r0, r5
 80154fc:	f7f7 f935 	bl	800c76a <WM_GetWindowSizeY>
 8015500:	2300      	movs	r3, #0
 8015502:	9306      	str	r3, [sp, #24]
 8015504:	9305      	str	r3, [sp, #20]
 8015506:	3801      	subs	r0, #1
 8015508:	f108 33ff 	add.w	r3, r8, #4294967295
 801550c:	f016 0610 	ands.w	r6, r6, #16
 8015510:	9501      	str	r5, [sp, #4]
 8015512:	9307      	str	r3, [sp, #28]
 8015514:	9008      	str	r0, [sp, #32]
 8015516:	d001      	beq.n	801551c <_Paint+0x4a>
 8015518:	2303      	movs	r3, #3
 801551a:	e007      	b.n	801552c <_Paint+0x5a>
 801551c:	05fa      	lsls	r2, r7, #23
 801551e:	d501      	bpl.n	8015524 <_Paint+0x52>
 8015520:	9603      	str	r6, [sp, #12]
 8015522:	e004      	b.n	801552e <_Paint+0x5c>
 8015524:	07fb      	lsls	r3, r7, #31
 8015526:	bf4c      	ite	mi
 8015528:	2301      	movmi	r3, #1
 801552a:	2302      	movpl	r3, #2
 801552c:	9303      	str	r3, [sp, #12]
 801552e:	2305      	movs	r3, #5
 8015530:	9302      	str	r3, [sp, #8]
 8015532:	a801      	add	r0, sp, #4
 8015534:	47a0      	blx	r4
 8015536:	2306      	movs	r3, #6
 8015538:	9302      	str	r3, [sp, #8]
 801553a:	a801      	add	r0, sp, #4
 801553c:	47a0      	blx	r4
 801553e:	2312      	movs	r3, #18
 8015540:	9302      	str	r3, [sp, #8]
 8015542:	a801      	add	r0, sp, #4
 8015544:	47a0      	blx	r4
 8015546:	230a      	movs	r3, #10
 8015548:	9302      	str	r3, [sp, #8]
 801554a:	a801      	add	r0, sp, #4
 801554c:	47a0      	blx	r4
 801554e:	b00a      	add	sp, #40	; 0x28
 8015550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015554 <WM__SendMessageNoPara>:
 8015554:	b530      	push	{r4, r5, lr}
 8015556:	b085      	sub	sp, #20
 8015558:	4604      	mov	r4, r0
 801555a:	2210      	movs	r2, #16
 801555c:	460d      	mov	r5, r1
 801555e:	4668      	mov	r0, sp
 8015560:	2100      	movs	r1, #0
 8015562:	f005 fa9a 	bl	801aa9a <memset>
 8015566:	4620      	mov	r0, r4
 8015568:	f7fd fdb0 	bl	80130cc <GUI_ALLOC_h2p>
 801556c:	6903      	ldr	r3, [r0, #16]
 801556e:	b11b      	cbz	r3, 8015578 <WM__SendMessageNoPara+0x24>
 8015570:	9401      	str	r4, [sp, #4]
 8015572:	9500      	str	r5, [sp, #0]
 8015574:	4668      	mov	r0, sp
 8015576:	4798      	blx	r3
 8015578:	b005      	add	sp, #20
 801557a:	bd30      	pop	{r4, r5, pc}

0801557c <WM__SendMessage>:
 801557c:	b570      	push	{r4, r5, r6, lr}
 801557e:	4c0d      	ldr	r4, [pc, #52]	; (80155b4 <WM__SendMessage+0x38>)
 8015580:	6823      	ldr	r3, [r4, #0]
 8015582:	2b13      	cmp	r3, #19
 8015584:	4606      	mov	r6, r0
 8015586:	460d      	mov	r5, r1
 8015588:	dc12      	bgt.n	80155b0 <WM__SendMessage+0x34>
 801558a:	f7fd fd9f 	bl	80130cc <GUI_ALLOC_h2p>
 801558e:	6903      	ldr	r3, [r0, #16]
 8015590:	606e      	str	r6, [r5, #4]
 8015592:	b143      	cbz	r3, 80155a6 <WM__SendMessage+0x2a>
 8015594:	6822      	ldr	r2, [r4, #0]
 8015596:	4628      	mov	r0, r5
 8015598:	3201      	adds	r2, #1
 801559a:	6022      	str	r2, [r4, #0]
 801559c:	4798      	blx	r3
 801559e:	6823      	ldr	r3, [r4, #0]
 80155a0:	3b01      	subs	r3, #1
 80155a2:	6023      	str	r3, [r4, #0]
 80155a4:	bd70      	pop	{r4, r5, r6, pc}
 80155a6:	4628      	mov	r0, r5
 80155a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80155ac:	f7f8 bb08 	b.w	800dbc0 <WM_DefaultProc>
 80155b0:	bd70      	pop	{r4, r5, r6, pc}
 80155b2:	bf00      	nop
 80155b4:	200196a8 	.word	0x200196a8

080155b8 <WM__GetPrevSibling>:
 80155b8:	b538      	push	{r3, r4, r5, lr}
 80155ba:	4605      	mov	r5, r0
 80155bc:	f000 f82e 	bl	801561c <WM__GetFirstSibling>
 80155c0:	4604      	mov	r4, r0
 80155c2:	b154      	cbz	r4, 80155da <WM__GetPrevSibling+0x22>
 80155c4:	42ac      	cmp	r4, r5
 80155c6:	d007      	beq.n	80155d8 <WM__GetPrevSibling+0x20>
 80155c8:	4620      	mov	r0, r4
 80155ca:	f7fd fd7f 	bl	80130cc <GUI_ALLOC_h2p>
 80155ce:	6a03      	ldr	r3, [r0, #32]
 80155d0:	42ab      	cmp	r3, r5
 80155d2:	d002      	beq.n	80155da <WM__GetPrevSibling+0x22>
 80155d4:	461c      	mov	r4, r3
 80155d6:	e7f4      	b.n	80155c2 <WM__GetPrevSibling+0xa>
 80155d8:	2400      	movs	r4, #0
 80155da:	4620      	mov	r0, r4
 80155dc:	bd38      	pop	{r3, r4, r5, pc}

080155de <WM__GetLastSibling>:
 80155de:	b510      	push	{r4, lr}
 80155e0:	4604      	mov	r4, r0
 80155e2:	b130      	cbz	r0, 80155f2 <WM__GetLastSibling+0x14>
 80155e4:	4620      	mov	r0, r4
 80155e6:	f7fd fd71 	bl	80130cc <GUI_ALLOC_h2p>
 80155ea:	6a03      	ldr	r3, [r0, #32]
 80155ec:	b10b      	cbz	r3, 80155f2 <WM__GetLastSibling+0x14>
 80155ee:	461c      	mov	r4, r3
 80155f0:	e7f8      	b.n	80155e4 <WM__GetLastSibling+0x6>
 80155f2:	4620      	mov	r0, r4
 80155f4:	bd10      	pop	{r4, pc}
	...

080155f8 <WM__GetFocussedChild>:
 80155f8:	b538      	push	{r3, r4, r5, lr}
 80155fa:	4d06      	ldr	r5, [pc, #24]	; (8015614 <WM__GetFocussedChild+0x1c>)
 80155fc:	4c06      	ldr	r4, [pc, #24]	; (8015618 <WM__GetFocussedChild+0x20>)
 80155fe:	682b      	ldr	r3, [r5, #0]
 8015600:	4601      	mov	r1, r0
 8015602:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015606:	f7f6 fc44 	bl	800be92 <WM__IsChild>
 801560a:	b110      	cbz	r0, 8015612 <WM__GetFocussedChild+0x1a>
 801560c:	682b      	ldr	r3, [r5, #0]
 801560e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015612:	bd38      	pop	{r3, r4, r5, pc}
 8015614:	20019c28 	.word	0x20019c28
 8015618:	20019c18 	.word	0x20019c18

0801561c <WM__GetFirstSibling>:
 801561c:	b508      	push	{r3, lr}
 801561e:	f7f7 f8b9 	bl	800c794 <WM_GetParent>
 8015622:	b118      	cbz	r0, 801562c <WM__GetFirstSibling+0x10>
 8015624:	f7fd fd52 	bl	80130cc <GUI_ALLOC_h2p>
 8015628:	69c0      	ldr	r0, [r0, #28]
 801562a:	bd08      	pop	{r3, pc}
 801562c:	bd08      	pop	{r3, pc}
	...

08015630 <WM_ValidateWindow>:
 8015630:	b507      	push	{r0, r1, r2, lr}
 8015632:	b178      	cbz	r0, 8015654 <WM_ValidateWindow+0x24>
 8015634:	f7fd fd54 	bl	80130e0 <GUI_ALLOC_LockH>
 8015638:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801563a:	9001      	str	r0, [sp, #4]
 801563c:	069a      	lsls	r2, r3, #26
 801563e:	d506      	bpl.n	801564e <WM_ValidateWindow+0x1e>
 8015640:	f023 0320 	bic.w	r3, r3, #32
 8015644:	6283      	str	r3, [r0, #40]	; 0x28
 8015646:	4b05      	ldr	r3, [pc, #20]	; (801565c <WM_ValidateWindow+0x2c>)
 8015648:	881a      	ldrh	r2, [r3, #0]
 801564a:	3a01      	subs	r2, #1
 801564c:	801a      	strh	r2, [r3, #0]
 801564e:	a801      	add	r0, sp, #4
 8015650:	f7fd fd54 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015654:	b003      	add	sp, #12
 8015656:	f85d fb04 	ldr.w	pc, [sp], #4
 801565a:	bf00      	nop
 801565c:	20019c20 	.word	0x20019c20

08015660 <WM__IsInModalArea>:
 8015660:	4b12      	ldr	r3, [pc, #72]	; (80156ac <WM__IsInModalArea+0x4c>)
 8015662:	681b      	ldr	r3, [r3, #0]
 8015664:	2b00      	cmp	r3, #0
 8015666:	b570      	push	{r4, r5, r6, lr}
 8015668:	4604      	mov	r4, r0
 801566a:	da0f      	bge.n	801568c <WM__IsInModalArea+0x2c>
 801566c:	4e10      	ldr	r6, [pc, #64]	; (80156b0 <WM__IsInModalArea+0x50>)
 801566e:	4d11      	ldr	r5, [pc, #68]	; (80156b4 <WM__IsInModalArea+0x54>)
 8015670:	6833      	ldr	r3, [r6, #0]
 8015672:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
 8015676:	4620      	mov	r0, r4
 8015678:	6859      	ldr	r1, [r3, #4]
 801567a:	f7f6 fc1e 	bl	800beba <WM__IsAncestor>
 801567e:	6833      	ldr	r3, [r6, #0]
 8015680:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8015684:	686a      	ldr	r2, [r5, #4]
 8015686:	686b      	ldr	r3, [r5, #4]
 8015688:	b942      	cbnz	r2, 801569c <WM__IsInModalArea+0x3c>
 801568a:	e00c      	b.n	80156a6 <WM__IsInModalArea+0x46>
 801568c:	4a0a      	ldr	r2, [pc, #40]	; (80156b8 <WM__IsInModalArea+0x58>)
 801568e:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8015692:	f7f6 fc12 	bl	800beba <WM__IsAncestor>
 8015696:	2800      	cmp	r0, #0
 8015698:	d1e8      	bne.n	801566c <WM__IsInModalArea+0xc>
 801569a:	bd70      	pop	{r4, r5, r6, pc}
 801569c:	b918      	cbnz	r0, 80156a6 <WM__IsInModalArea+0x46>
 801569e:	1ae3      	subs	r3, r4, r3
 80156a0:	4258      	negs	r0, r3
 80156a2:	4158      	adcs	r0, r3
 80156a4:	bd70      	pop	{r4, r5, r6, pc}
 80156a6:	2001      	movs	r0, #1
 80156a8:	bd70      	pop	{r4, r5, r6, pc}
 80156aa:	bf00      	nop
 80156ac:	20000314 	.word	0x20000314
 80156b0:	20019c28 	.word	0x20019c28
 80156b4:	20019d90 	.word	0x20019d90
 80156b8:	20019c08 	.word	0x20019c08

080156bc <WM__SendPIDMessage>:
 80156bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80156be:	4606      	mov	r6, r0
 80156c0:	460c      	mov	r4, r1
 80156c2:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 80156c4:	b085      	sub	sp, #20
 80156c6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 80156ca:	230d      	movs	r3, #13
 80156cc:	9602      	str	r6, [sp, #8]
 80156ce:	9300      	str	r3, [sp, #0]
 80156d0:	4637      	mov	r7, r6
 80156d2:	4638      	mov	r0, r7
 80156d4:	f7f6 ffec 	bl	800c6b0 <WM_IsWindow>
 80156d8:	b150      	cbz	r0, 80156f0 <WM__SendPIDMessage+0x34>
 80156da:	4638      	mov	r0, r7
 80156dc:	f7f7 f85a 	bl	800c794 <WM_GetParent>
 80156e0:	4607      	mov	r7, r0
 80156e2:	2800      	cmp	r0, #0
 80156e4:	d0f5      	beq.n	80156d2 <WM__SendPIDMessage+0x16>
 80156e6:	4669      	mov	r1, sp
 80156e8:	9403      	str	r4, [sp, #12]
 80156ea:	f004 facc 	bl	8019c86 <WM__SendMessageIfEnabled>
 80156ee:	e7f0      	b.n	80156d2 <WM__SendPIDMessage+0x16>
 80156f0:	4630      	mov	r0, r6
 80156f2:	4621      	mov	r1, r4
 80156f4:	f004 fac7 	bl	8019c86 <WM__SendMessageIfEnabled>
 80156f8:	b005      	add	sp, #20
 80156fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080156fc <WM__SendTouchMessage>:
 80156fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80156fe:	68cc      	ldr	r4, [r1, #12]
 8015700:	4606      	mov	r6, r0
 8015702:	460d      	mov	r5, r1
 8015704:	b194      	cbz	r4, 801572c <WM__SendTouchMessage+0x30>
 8015706:	f7fd fceb 	bl	80130e0 <GUI_ALLOC_LockH>
 801570a:	ab02      	add	r3, sp, #8
 801570c:	4602      	mov	r2, r0
 801570e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8015712:	6821      	ldr	r1, [r4, #0]
 8015714:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015718:	1a09      	subs	r1, r1, r0
 801571a:	6021      	str	r1, [r4, #0]
 801571c:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 8015720:	6862      	ldr	r2, [r4, #4]
 8015722:	1a52      	subs	r2, r2, r1
 8015724:	6062      	str	r2, [r4, #4]
 8015726:	4618      	mov	r0, r3
 8015728:	f7fd fce8 	bl	80130fc <GUI_ALLOC_UnlockH>
 801572c:	4630      	mov	r0, r6
 801572e:	4629      	mov	r1, r5
 8015730:	f7ff ffc4 	bl	80156bc <WM__SendPIDMessage>
 8015734:	b002      	add	sp, #8
 8015736:	bd70      	pop	{r4, r5, r6, pc}

08015738 <WM_HandlePID>:
 8015738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801573c:	b097      	sub	sp, #92	; 0x5c
 801573e:	ae06      	add	r6, sp, #24
 8015740:	f04f 080c 	mov.w	r8, #12
 8015744:	2100      	movs	r1, #0
 8015746:	4642      	mov	r2, r8
 8015748:	4630      	mov	r0, r6
 801574a:	f005 f9a6 	bl	801aa9a <memset>
 801574e:	f7fc fc01 	bl	8011f54 <GUI_PID_IsEmpty>
 8015752:	b108      	cbz	r0, 8015758 <WM_HandlePID+0x20>
 8015754:	2000      	movs	r0, #0
 8015756:	e1aa      	b.n	8015aae <WM_HandlePID+0x376>
 8015758:	ac09      	add	r4, sp, #36	; 0x24
 801575a:	4620      	mov	r0, r4
 801575c:	f7fc fb7e 	bl	8011e5c <GUI_PID_GetState>
 8015760:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015762:	4dad      	ldr	r5, [pc, #692]	; (8015a18 <WM_HandlePID+0x2e0>)
 8015764:	4fad      	ldr	r7, [pc, #692]	; (8015a1c <WM_HandlePID+0x2e4>)
 8015766:	1c5a      	adds	r2, r3, #1
 8015768:	d112      	bne.n	8015790 <WM_HandlePID+0x58>
 801576a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801576c:	3301      	adds	r3, #1
 801576e:	d11e      	bne.n	80157ae <WM_HandlePID+0x76>
 8015770:	682b      	ldr	r3, [r5, #0]
 8015772:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8015776:	fb08 f803 	mul.w	r8, r8, r3
 801577a:	eb07 0308 	add.w	r3, r7, r8
 801577e:	7a19      	ldrb	r1, [r3, #8]
 8015780:	4291      	cmp	r1, r2
 8015782:	d0e7      	beq.n	8015754 <WM_HandlePID+0x1c>
 8015784:	f857 2008 	ldr.w	r2, [r7, r8]
 8015788:	685b      	ldr	r3, [r3, #4]
 801578a:	9209      	str	r2, [sp, #36]	; 0x24
 801578c:	930a      	str	r3, [sp, #40]	; 0x28
 801578e:	e00e      	b.n	80157ae <WM_HandlePID+0x76>
 8015790:	2b00      	cmp	r3, #0
 8015792:	db0c      	blt.n	80157ae <WM_HandlePID+0x76>
 8015794:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015796:	2a00      	cmp	r2, #0
 8015798:	db09      	blt.n	80157ae <WM_HandlePID+0x76>
 801579a:	49a1      	ldr	r1, [pc, #644]	; (8015a20 <WM_HandlePID+0x2e8>)
 801579c:	f9b1 1000 	ldrsh.w	r1, [r1]
 80157a0:	440b      	add	r3, r1
 80157a2:	9309      	str	r3, [sp, #36]	; 0x24
 80157a4:	4b9f      	ldr	r3, [pc, #636]	; (8015a24 <WM_HandlePID+0x2ec>)
 80157a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80157aa:	441a      	add	r2, r3
 80157ac:	920a      	str	r2, [sp, #40]	; 0x28
 80157ae:	a804      	add	r0, sp, #16
 80157b0:	f000 f9f6 	bl	8015ba0 <WM__AddCriticalHandle>
 80157b4:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80157b8:	2b01      	cmp	r3, #1
 80157ba:	bf98      	it	ls
 80157bc:	602b      	strls	r3, [r5, #0]
 80157be:	6828      	ldr	r0, [r5, #0]
 80157c0:	a901      	add	r1, sp, #4
 80157c2:	aa02      	add	r2, sp, #8
 80157c4:	f7fc faba 	bl	8011d3c <GUI_GetLayerPosEx>
 80157c8:	9b01      	ldr	r3, [sp, #4]
 80157ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80157cc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80157ce:	1ac0      	subs	r0, r0, r3
 80157d0:	9b02      	ldr	r3, [sp, #8]
 80157d2:	9009      	str	r0, [sp, #36]	; 0x24
 80157d4:	1ac9      	subs	r1, r1, r3
 80157d6:	682b      	ldr	r3, [r5, #0]
 80157d8:	910a      	str	r1, [sp, #40]	; 0x28
 80157da:	220c      	movs	r2, #12
 80157dc:	435a      	muls	r2, r3
 80157de:	18bb      	adds	r3, r7, r2
 80157e0:	58ba      	ldr	r2, [r7, r2]
 80157e2:	4282      	cmp	r2, r0
 80157e4:	d108      	bne.n	80157f8 <WM_HandlePID+0xc0>
 80157e6:	685a      	ldr	r2, [r3, #4]
 80157e8:	428a      	cmp	r2, r1
 80157ea:	d105      	bne.n	80157f8 <WM_HandlePID+0xc0>
 80157ec:	7a1a      	ldrb	r2, [r3, #8]
 80157ee:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 80157f2:	429a      	cmp	r2, r3
 80157f4:	f000 8156 	beq.w	8015aa4 <WM_HandlePID+0x36c>
 80157f8:	f89d 202d 	ldrb.w	r2, [sp, #45]	; 0x2d
 80157fc:	f003 fe20 	bl	8019440 <GUI_CURSOR_SetPositionEx>
 8015800:	4b89      	ldr	r3, [pc, #548]	; (8015a28 <WM_HandlePID+0x2f0>)
 8015802:	681b      	ldr	r3, [r3, #0]
 8015804:	b113      	cbz	r3, 801580c <WM_HandlePID+0xd4>
 8015806:	4620      	mov	r0, r4
 8015808:	2100      	movs	r1, #0
 801580a:	4798      	blx	r3
 801580c:	682b      	ldr	r3, [r5, #0]
 801580e:	4a87      	ldr	r2, [pc, #540]	; (8015a2c <WM_HandlePID+0x2f4>)
 8015810:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015814:	b918      	cbnz	r0, 801581e <WM_HandlePID+0xe6>
 8015816:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015818:	990a      	ldr	r1, [sp, #40]	; 0x28
 801581a:	f7f6 fdbd 	bl	800c398 <WM_Screen2hWin>
 801581e:	4b84      	ldr	r3, [pc, #528]	; (8015a30 <WM_HandlePID+0x2f8>)
 8015820:	9005      	str	r0, [sp, #20]
 8015822:	681b      	ldr	r3, [r3, #0]
 8015824:	b113      	cbz	r3, 801582c <WM_HandlePID+0xf4>
 8015826:	9905      	ldr	r1, [sp, #20]
 8015828:	4620      	mov	r0, r4
 801582a:	4798      	blx	r3
 801582c:	4981      	ldr	r1, [pc, #516]	; (8015a34 <WM_HandlePID+0x2fc>)
 801582e:	682b      	ldr	r3, [r5, #0]
 8015830:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 8015a18 <WM_HandlePID+0x2e0>
 8015834:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8015838:	4688      	mov	r8, r1
 801583a:	685a      	ldr	r2, [r3, #4]
 801583c:	9805      	ldr	r0, [sp, #20]
 801583e:	b312      	cbz	r2, 8015886 <WM_HandlePID+0x14e>
 8015840:	4282      	cmp	r2, r0
 8015842:	d020      	beq.n	8015886 <WM_HandlePID+0x14e>
 8015844:	6858      	ldr	r0, [r3, #4]
 8015846:	f7ff ff0b 	bl	8015660 <WM__IsInModalArea>
 801584a:	b1e0      	cbz	r0, 8015886 <WM_HandlePID+0x14e>
 801584c:	f8d9 3000 	ldr.w	r3, [r9]
 8015850:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8015854:	6858      	ldr	r0, [r3, #4]
 8015856:	f7f6 fb13 	bl	800be80 <WM__IsEnabled>
 801585a:	b1a0      	cbz	r0, 8015886 <WM_HandlePID+0x14e>
 801585c:	2312      	movs	r3, #18
 801585e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8015862:	9312      	str	r3, [sp, #72]	; 0x48
 8015864:	f8d9 3000 	ldr.w	r3, [r9]
 8015868:	9615      	str	r6, [sp, #84]	; 0x54
 801586a:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 801586e:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8015872:	6858      	ldr	r0, [r3, #4]
 8015874:	a912      	add	r1, sp, #72	; 0x48
 8015876:	f7ff ff41 	bl	80156fc <WM__SendTouchMessage>
 801587a:	f8d9 3000 	ldr.w	r3, [r9]
 801587e:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8015882:	2200      	movs	r2, #0
 8015884:	605a      	str	r2, [r3, #4]
 8015886:	9805      	ldr	r0, [sp, #20]
 8015888:	f7ff feea 	bl	8015660 <WM__IsInModalArea>
 801588c:	b908      	cbnz	r0, 8015892 <WM_HandlePID+0x15a>
 801588e:	2600      	movs	r6, #0
 8015890:	e0fb      	b.n	8015a8a <WM_HandlePID+0x352>
 8015892:	682b      	ldr	r3, [r5, #0]
 8015894:	9905      	ldr	r1, [sp, #20]
 8015896:	f8df a180 	ldr.w	sl, [pc, #384]	; 8015a18 <WM_HandlePID+0x2e0>
 801589a:	f8df 9180 	ldr.w	r9, [pc, #384]	; 8015a1c <WM_HandlePID+0x2e4>
 801589e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80158a2:	f04f 080c 	mov.w	r8, #12
 80158a6:	fb08 7303 	mla	r3, r8, r3, r7
 80158aa:	6051      	str	r1, [r2, #4]
 80158ac:	7a1a      	ldrb	r2, [r3, #8]
 80158ae:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 80158b2:	429a      	cmp	r2, r3
 80158b4:	d062      	beq.n	801597c <WM_HandlePID+0x244>
 80158b6:	9b05      	ldr	r3, [sp, #20]
 80158b8:	2b00      	cmp	r3, #0
 80158ba:	d05f      	beq.n	801597c <WM_HandlePID+0x244>
 80158bc:	9805      	ldr	r0, [sp, #20]
 80158be:	f7fd fc0f 	bl	80130e0 <GUI_ALLOC_LockH>
 80158c2:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 80158c6:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
 80158ca:	f8da 3000 	ldr.w	r3, [sl]
 80158ce:	9003      	str	r0, [sp, #12]
 80158d0:	fb08 9303 	mla	r3, r8, r3, r9
 80158d4:	7a1b      	ldrb	r3, [r3, #8]
 80158d6:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
 80158da:	f9b0 2000 	ldrsh.w	r2, [r0]
 80158de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80158e0:	1a9b      	subs	r3, r3, r2
 80158e2:	930f      	str	r3, [sp, #60]	; 0x3c
 80158e4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80158e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80158ea:	eb0d 0008 	add.w	r0, sp, r8
 80158ee:	1a9b      	subs	r3, r3, r2
 80158f0:	9310      	str	r3, [sp, #64]	; 0x40
 80158f2:	f7fd fc03 	bl	80130fc <GUI_ALLOC_UnlockH>
 80158f6:	f8da e000 	ldr.w	lr, [sl]
 80158fa:	f8df a13c 	ldr.w	sl, [pc, #316]	; 8015a38 <WM_HandlePID+0x300>
 80158fe:	ab0f      	add	r3, sp, #60	; 0x3c
 8015900:	9315      	str	r3, [sp, #84]	; 0x54
 8015902:	2311      	movs	r3, #17
 8015904:	9312      	str	r3, [sp, #72]	; 0x48
 8015906:	fb08 930e 	mla	r3, r8, lr, r9
 801590a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 801590e:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8015912:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8015916:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 801591a:	721a      	strb	r2, [r3, #8]
 801591c:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015920:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015924:	b133      	cbz	r3, 8015934 <WM_HandlePID+0x1fc>
 8015926:	eb0a 030e 	add.w	r3, sl, lr
 801592a:	f8d3 9004 	ldr.w	r9, [r3, #4]
 801592e:	9a05      	ldr	r2, [sp, #20]
 8015930:	605a      	str	r2, [r3, #4]
 8015932:	e000      	b.n	8015936 <WM_HandlePID+0x1fe>
 8015934:	4699      	mov	r9, r3
 8015936:	eb0a 030e 	add.w	r3, sl, lr
 801593a:	a912      	add	r1, sp, #72	; 0x48
 801593c:	f8d3 b004 	ldr.w	fp, [r3, #4]
 8015940:	9805      	ldr	r0, [sp, #20]
 8015942:	f004 f9a0 	bl	8019c86 <WM__SendMessageIfEnabled>
 8015946:	682b      	ldr	r3, [r5, #0]
 8015948:	eb0a 02c3 	add.w	r2, sl, r3, lsl #3
 801594c:	6851      	ldr	r1, [r2, #4]
 801594e:	458b      	cmp	fp, r1
 8015950:	bf1c      	itt	ne
 8015952:	6852      	ldrne	r2, [r2, #4]
 8015954:	9205      	strne	r2, [sp, #20]
 8015956:	220c      	movs	r2, #12
 8015958:	fb02 7303 	mla	r3, r2, r3, r7
 801595c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8015960:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8015964:	f1b9 0f00 	cmp.w	r9, #0
 8015968:	d008      	beq.n	801597c <WM_HandlePID+0x244>
 801596a:	4648      	mov	r0, r9
 801596c:	f7f6 fea0 	bl	800c6b0 <WM_IsWindow>
 8015970:	b120      	cbz	r0, 801597c <WM_HandlePID+0x244>
 8015972:	682b      	ldr	r3, [r5, #0]
 8015974:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 8015978:	f8c3 9004 	str.w	r9, [r3, #4]
 801597c:	682a      	ldr	r2, [r5, #0]
 801597e:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8015982:	210c      	movs	r1, #12
 8015984:	4351      	muls	r1, r2
 8015986:	1878      	adds	r0, r7, r1
 8015988:	f890 8008 	ldrb.w	r8, [r0, #8]
 801598c:	ea53 0808 	orrs.w	r8, r3, r8
 8015990:	d064      	beq.n	8015a5c <WM_HandlePID+0x324>
 8015992:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 8015a38 <WM_HandlePID+0x300>
 8015996:	f44f 7e10 	mov.w	lr, #576	; 0x240
 801599a:	00d2      	lsls	r2, r2, #3
 801599c:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
 80159a0:	eb08 0e02 	add.w	lr, r8, r2
 80159a4:	f8de 9004 	ldr.w	r9, [lr, #4]
 80159a8:	f8dd c014 	ldr.w	ip, [sp, #20]
 80159ac:	45e1      	cmp	r9, ip
 80159ae:	d01c      	beq.n	80159ea <WM_HandlePID+0x2b2>
 80159b0:	f8de e004 	ldr.w	lr, [lr, #4]
 80159b4:	f1be 0f00 	cmp.w	lr, #0
 80159b8:	d017      	beq.n	80159ea <WM_HandlePID+0x2b2>
 80159ba:	b113      	cbz	r3, 80159c2 <WM_HandlePID+0x28a>
 80159bc:	2300      	movs	r3, #0
 80159be:	9315      	str	r3, [sp, #84]	; 0x54
 80159c0:	e009      	b.n	80159d6 <WM_HandlePID+0x29e>
 80159c2:	f8df e058 	ldr.w	lr, [pc, #88]	; 8015a1c <WM_HandlePID+0x2e4>
 80159c6:	f88d 3020 	strb.w	r3, [sp, #32]
 80159ca:	f85e 1001 	ldr.w	r1, [lr, r1]
 80159ce:	9106      	str	r1, [sp, #24]
 80159d0:	6841      	ldr	r1, [r0, #4]
 80159d2:	9107      	str	r1, [sp, #28]
 80159d4:	9615      	str	r6, [sp, #84]	; 0x54
 80159d6:	4442      	add	r2, r8
 80159d8:	a912      	add	r1, sp, #72	; 0x48
 80159da:	6850      	ldr	r0, [r2, #4]
 80159dc:	f7ff fe8e 	bl	80156fc <WM__SendTouchMessage>
 80159e0:	682b      	ldr	r3, [r5, #0]
 80159e2:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 80159e6:	2200      	movs	r2, #0
 80159e8:	605a      	str	r2, [r3, #4]
 80159ea:	682b      	ldr	r3, [r5, #0]
 80159ec:	f89d e02c 	ldrb.w	lr, [sp, #44]	; 0x2c
 80159f0:	220c      	movs	r2, #12
 80159f2:	fb02 7203 	mla	r2, r2, r3, r7
 80159f6:	f882 e008 	strb.w	lr, [r2, #8]
 80159fa:	9a05      	ldr	r2, [sp, #20]
 80159fc:	2a00      	cmp	r2, #0
 80159fe:	d043      	beq.n	8015a88 <WM_HandlePID+0x350>
 8015a00:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8015a04:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8015a08:	f1be 0f00 	cmp.w	lr, #0
 8015a0c:	d016      	beq.n	8015a3c <WM_HandlePID+0x304>
 8015a0e:	9a05      	ldr	r2, [sp, #20]
 8015a10:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8015a14:	e01b      	b.n	8015a4e <WM_HandlePID+0x316>
 8015a16:	bf00      	nop
 8015a18:	20019c28 	.word	0x20019c28
 8015a1c:	200196b4 	.word	0x200196b4
 8015a20:	20019c88 	.word	0x20019c88
 8015a24:	20019c7c 	.word	0x20019c7c
 8015a28:	200196ac 	.word	0x200196ac
 8015a2c:	20019c44 	.word	0x20019c44
 8015a30:	200196b0 	.word	0x200196b0
 8015a34:	20019d70 	.word	0x20019d70
 8015a38:	20019d80 	.word	0x20019d80
 8015a3c:	4b1d      	ldr	r3, [pc, #116]	; (8015ab4 <WM_HandlePID+0x37c>)
 8015a3e:	781b      	ldrb	r3, [r3, #0]
 8015a40:	b10b      	cbz	r3, 8015a46 <WM_HandlePID+0x30e>
 8015a42:	f7f6 fc59 	bl	800c2f8 <WM_ReleaseCapture>
 8015a46:	682b      	ldr	r3, [r5, #0]
 8015a48:	2200      	movs	r2, #0
 8015a4a:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8015a4e:	605a      	str	r2, [r3, #4]
 8015a50:	9805      	ldr	r0, [sp, #20]
 8015a52:	9615      	str	r6, [sp, #84]	; 0x54
 8015a54:	a912      	add	r1, sp, #72	; 0x48
 8015a56:	f7ff fe51 	bl	80156fc <WM__SendTouchMessage>
 8015a5a:	e015      	b.n	8015a88 <WM_HandlePID+0x350>
 8015a5c:	9b05      	ldr	r3, [sp, #20]
 8015a5e:	2b00      	cmp	r3, #0
 8015a60:	f43f af15 	beq.w	801588e <WM_HandlePID+0x156>
 8015a64:	9805      	ldr	r0, [sp, #20]
 8015a66:	f7f6 fa0b 	bl	800be80 <WM__IsEnabled>
 8015a6a:	2800      	cmp	r0, #0
 8015a6c:	f43f af0f 	beq.w	801588e <WM_HandlePID+0x156>
 8015a70:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8015a74:	2310      	movs	r3, #16
 8015a76:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8015a7a:	9805      	ldr	r0, [sp, #20]
 8015a7c:	9312      	str	r3, [sp, #72]	; 0x48
 8015a7e:	a912      	add	r1, sp, #72	; 0x48
 8015a80:	9615      	str	r6, [sp, #84]	; 0x54
 8015a82:	f7ff fe3b 	bl	80156fc <WM__SendTouchMessage>
 8015a86:	e702      	b.n	801588e <WM_HandlePID+0x156>
 8015a88:	2601      	movs	r6, #1
 8015a8a:	682b      	ldr	r3, [r5, #0]
 8015a8c:	220c      	movs	r2, #12
 8015a8e:	fb02 7703 	mla	r7, r2, r3, r7
 8015a92:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8015a96:	e887 0007 	stmia.w	r7, {r0, r1, r2}
 8015a9a:	4620      	mov	r0, r4
 8015a9c:	4619      	mov	r1, r3
 8015a9e:	f000 f819 	bl	8015ad4 <WM_PID__SetPrevState>
 8015aa2:	e000      	b.n	8015aa6 <WM_HandlePID+0x36e>
 8015aa4:	2600      	movs	r6, #0
 8015aa6:	a804      	add	r0, sp, #16
 8015aa8:	f000 f882 	bl	8015bb0 <WM__RemoveCriticalHandle>
 8015aac:	4630      	mov	r0, r6
 8015aae:	b017      	add	sp, #92	; 0x5c
 8015ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ab4:	20019c2c 	.word	0x20019c2c

08015ab8 <WM_SendToParent>:
 8015ab8:	b538      	push	{r3, r4, r5, lr}
 8015aba:	4605      	mov	r5, r0
 8015abc:	460c      	mov	r4, r1
 8015abe:	b141      	cbz	r1, 8015ad2 <WM_SendToParent+0x1a>
 8015ac0:	f7f6 fe68 	bl	800c794 <WM_GetParent>
 8015ac4:	b128      	cbz	r0, 8015ad2 <WM_SendToParent+0x1a>
 8015ac6:	60a5      	str	r5, [r4, #8]
 8015ac8:	4621      	mov	r1, r4
 8015aca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015ace:	f7ff bd55 	b.w	801557c <WM__SendMessage>
 8015ad2:	bd38      	pop	{r3, r4, r5, pc}

08015ad4 <WM_PID__SetPrevState>:
 8015ad4:	4b03      	ldr	r3, [pc, #12]	; (8015ae4 <WM_PID__SetPrevState+0x10>)
 8015ad6:	220c      	movs	r2, #12
 8015ad8:	fb02 3301 	mla	r3, r2, r1, r3
 8015adc:	c807      	ldmia	r0, {r0, r1, r2}
 8015ade:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8015ae2:	4770      	bx	lr
 8015ae4:	200196cc 	.word	0x200196cc

08015ae8 <WM_OnKey>:
 8015ae8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8015aea:	4a0a      	ldr	r2, [pc, #40]	; (8015b14 <WM_OnKey+0x2c>)
 8015aec:	4603      	mov	r3, r0
 8015aee:	6810      	ldr	r0, [r2, #0]
 8015af0:	4a09      	ldr	r2, [pc, #36]	; (8015b18 <WM_OnKey+0x30>)
 8015af2:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8015af6:	b148      	cbz	r0, 8015b0c <WM_OnKey+0x24>
 8015af8:	9300      	str	r3, [sp, #0]
 8015afa:	230e      	movs	r3, #14
 8015afc:	9101      	str	r1, [sp, #4]
 8015afe:	9302      	str	r3, [sp, #8]
 8015b00:	a902      	add	r1, sp, #8
 8015b02:	ab00      	add	r3, sp, #0
 8015b04:	9305      	str	r3, [sp, #20]
 8015b06:	f7ff fd39 	bl	801557c <WM__SendMessage>
 8015b0a:	2001      	movs	r0, #1
 8015b0c:	b007      	add	sp, #28
 8015b0e:	f85d fb04 	ldr.w	pc, [sp], #4
 8015b12:	bf00      	nop
 8015b14:	20019c28 	.word	0x20019c28
 8015b18:	20019c18 	.word	0x20019c18

08015b1c <WM_GetWindowRect>:
 8015b1c:	b510      	push	{r4, lr}
 8015b1e:	4604      	mov	r4, r0
 8015b20:	b158      	cbz	r0, 8015b3a <WM_GetWindowRect+0x1e>
 8015b22:	4b06      	ldr	r3, [pc, #24]	; (8015b3c <WM_GetWindowRect+0x20>)
 8015b24:	6818      	ldr	r0, [r3, #0]
 8015b26:	b910      	cbnz	r0, 8015b2e <WM_GetWindowRect+0x12>
 8015b28:	4b05      	ldr	r3, [pc, #20]	; (8015b40 <WM_GetWindowRect+0x24>)
 8015b2a:	681b      	ldr	r3, [r3, #0]
 8015b2c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8015b2e:	f7fd facd 	bl	80130cc <GUI_ALLOC_h2p>
 8015b32:	4603      	mov	r3, r0
 8015b34:	cb03      	ldmia	r3!, {r0, r1}
 8015b36:	6020      	str	r0, [r4, #0]
 8015b38:	6061      	str	r1, [r4, #4]
 8015b3a:	bd10      	pop	{r4, pc}
 8015b3c:	20019c04 	.word	0x20019c04
 8015b40:	2000016c 	.word	0x2000016c

08015b44 <WM_GetWindowRectEx>:
 8015b44:	b510      	push	{r4, lr}
 8015b46:	460c      	mov	r4, r1
 8015b48:	b130      	cbz	r0, 8015b58 <WM_GetWindowRectEx+0x14>
 8015b4a:	b129      	cbz	r1, 8015b58 <WM_GetWindowRectEx+0x14>
 8015b4c:	f7fd fabe 	bl	80130cc <GUI_ALLOC_h2p>
 8015b50:	4603      	mov	r3, r0
 8015b52:	cb03      	ldmia	r3!, {r0, r1}
 8015b54:	6020      	str	r0, [r4, #0]
 8015b56:	6061      	str	r1, [r4, #4]
 8015b58:	bd10      	pop	{r4, pc}

08015b5a <WM_GetScrollPartner>:
 8015b5a:	b538      	push	{r3, r4, r5, lr}
 8015b5c:	4605      	mov	r5, r0
 8015b5e:	f7f6 fe31 	bl	800c7c4 <WM_GetId>
 8015b62:	28ff      	cmp	r0, #255	; 0xff
 8015b64:	4604      	mov	r4, r0
 8015b66:	d003      	beq.n	8015b70 <WM_GetScrollPartner+0x16>
 8015b68:	28fe      	cmp	r0, #254	; 0xfe
 8015b6a:	bf08      	it	eq
 8015b6c:	24ff      	moveq	r4, #255	; 0xff
 8015b6e:	e000      	b.n	8015b72 <WM_GetScrollPartner+0x18>
 8015b70:	24fe      	movs	r4, #254	; 0xfe
 8015b72:	4628      	mov	r0, r5
 8015b74:	f7f6 fe0e 	bl	800c794 <WM_GetParent>
 8015b78:	4621      	mov	r1, r4
 8015b7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015b7e:	f7f6 be60 	b.w	800c842 <WM_GetDialogItem>

08015b82 <WM_GetInsideRectEx>:
 8015b82:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015b84:	9103      	str	r1, [sp, #12]
 8015b86:	a904      	add	r1, sp, #16
 8015b88:	2314      	movs	r3, #20
 8015b8a:	f841 3d10 	str.w	r3, [r1, #-16]!
 8015b8e:	4669      	mov	r1, sp
 8015b90:	f7f7 fb9c 	bl	800d2cc <WM_SendMessage>
 8015b94:	b005      	add	sp, #20
 8015b96:	f85d fb04 	ldr.w	pc, [sp], #4

08015b9a <WM_ForEachDesc>:
 8015b9a:	f004 b881 	b.w	8019ca0 <WM__ForEachDesc>
	...

08015ba0 <WM__AddCriticalHandle>:
 8015ba0:	4b02      	ldr	r3, [pc, #8]	; (8015bac <WM__AddCriticalHandle+0xc>)
 8015ba2:	681a      	ldr	r2, [r3, #0]
 8015ba4:	6002      	str	r2, [r0, #0]
 8015ba6:	6018      	str	r0, [r3, #0]
 8015ba8:	4770      	bx	lr
 8015baa:	bf00      	nop
 8015bac:	20019c3c 	.word	0x20019c3c

08015bb0 <WM__RemoveCriticalHandle>:
 8015bb0:	4a09      	ldr	r2, [pc, #36]	; (8015bd8 <WM__RemoveCriticalHandle+0x28>)
 8015bb2:	6813      	ldr	r3, [r2, #0]
 8015bb4:	b510      	push	{r4, lr}
 8015bb6:	4614      	mov	r4, r2
 8015bb8:	b16b      	cbz	r3, 8015bd6 <WM__RemoveCriticalHandle+0x26>
 8015bba:	2200      	movs	r2, #0
 8015bbc:	4283      	cmp	r3, r0
 8015bbe:	d105      	bne.n	8015bcc <WM__RemoveCriticalHandle+0x1c>
 8015bc0:	681b      	ldr	r3, [r3, #0]
 8015bc2:	b10a      	cbz	r2, 8015bc8 <WM__RemoveCriticalHandle+0x18>
 8015bc4:	6013      	str	r3, [r2, #0]
 8015bc6:	bd10      	pop	{r4, pc}
 8015bc8:	6023      	str	r3, [r4, #0]
 8015bca:	bd10      	pop	{r4, pc}
 8015bcc:	6819      	ldr	r1, [r3, #0]
 8015bce:	b111      	cbz	r1, 8015bd6 <WM__RemoveCriticalHandle+0x26>
 8015bd0:	461a      	mov	r2, r3
 8015bd2:	460b      	mov	r3, r1
 8015bd4:	e7f2      	b.n	8015bbc <WM__RemoveCriticalHandle+0xc>
 8015bd6:	bd10      	pop	{r4, pc}
 8015bd8:	20019c3c 	.word	0x20019c3c

08015bdc <WM_BringToBottom>:
 8015bdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015be0:	4604      	mov	r4, r0
 8015be2:	b087      	sub	sp, #28
 8015be4:	2800      	cmp	r0, #0
 8015be6:	d039      	beq.n	8015c5c <WM_BringToBottom+0x80>
 8015be8:	f7fd fa7a 	bl	80130e0 <GUI_ALLOC_LockH>
 8015bec:	4603      	mov	r3, r0
 8015bee:	9001      	str	r0, [sp, #4]
 8015bf0:	c803      	ldmia	r0, {r0, r1}
 8015bf2:	ad04      	add	r5, sp, #16
 8015bf4:	e885 0003 	stmia.w	r5, {r0, r1}
 8015bf8:	a801      	add	r0, sp, #4
 8015bfa:	6a1e      	ldr	r6, [r3, #32]
 8015bfc:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 8015c00:	f7fd fa7c 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015c04:	4620      	mov	r0, r4
 8015c06:	f7ff fcd7 	bl	80155b8 <WM__GetPrevSibling>
 8015c0a:	4607      	mov	r7, r0
 8015c0c:	b330      	cbz	r0, 8015c5c <WM_BringToBottom+0x80>
 8015c0e:	4620      	mov	r0, r4
 8015c10:	f7f6 fdc0 	bl	800c794 <WM_GetParent>
 8015c14:	f019 0f02 	tst.w	r9, #2
 8015c18:	4680      	mov	r8, r0
 8015c1a:	d004      	beq.n	8015c26 <WM_BringToBottom+0x4a>
 8015c1c:	4628      	mov	r0, r5
 8015c1e:	4641      	mov	r1, r8
 8015c20:	4632      	mov	r2, r6
 8015c22:	f7f7 fb3b 	bl	800d29c <WM__InvalidateRectEx>
 8015c26:	4620      	mov	r0, r4
 8015c28:	f7fd fa5a 	bl	80130e0 <GUI_ALLOC_LockH>
 8015c2c:	9001      	str	r0, [sp, #4]
 8015c2e:	4640      	mov	r0, r8
 8015c30:	f7fd fa56 	bl	80130e0 <GUI_ALLOC_LockH>
 8015c34:	9003      	str	r0, [sp, #12]
 8015c36:	4638      	mov	r0, r7
 8015c38:	f7fd fa52 	bl	80130e0 <GUI_ALLOC_LockH>
 8015c3c:	9b03      	ldr	r3, [sp, #12]
 8015c3e:	9a01      	ldr	r2, [sp, #4]
 8015c40:	69d9      	ldr	r1, [r3, #28]
 8015c42:	6206      	str	r6, [r0, #32]
 8015c44:	9002      	str	r0, [sp, #8]
 8015c46:	6211      	str	r1, [r2, #32]
 8015c48:	a801      	add	r0, sp, #4
 8015c4a:	61dc      	str	r4, [r3, #28]
 8015c4c:	f7fd fa56 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015c50:	a803      	add	r0, sp, #12
 8015c52:	f7fd fa53 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015c56:	a802      	add	r0, sp, #8
 8015c58:	f7fd fa50 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015c5c:	b007      	add	sp, #28
 8015c5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08015c62 <_Convert16>:
 8015c62:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c66:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8015c6a:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8015c6e:	4605      	mov	r5, r0
 8015c70:	460e      	mov	r6, r1
 8015c72:	4690      	mov	r8, r2
 8015c74:	461f      	mov	r7, r3
 8015c76:	4614      	mov	r4, r2
 8015c78:	4689      	mov	r9, r1
 8015c7a:	f835 0b02 	ldrh.w	r0, [r5], #2
 8015c7e:	47d8      	blx	fp
 8015c80:	47d0      	blx	sl
 8015c82:	3c01      	subs	r4, #1
 8015c84:	f849 0b04 	str.w	r0, [r9], #4
 8015c88:	d1f7      	bne.n	8015c7a <_Convert16+0x18>
 8015c8a:	2f1f      	cmp	r7, #31
 8015c8c:	d806      	bhi.n	8015c9c <_Convert16+0x3a>
 8015c8e:	4630      	mov	r0, r6
 8015c90:	4641      	mov	r1, r8
 8015c92:	463a      	mov	r2, r7
 8015c94:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c98:	f002 bd15 	b.w	80186c6 <GUI__CompactPixelIndices>
 8015c9c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015ca0 <_Convert8>:
 8015ca0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ca4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8015ca8:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8015cac:	4605      	mov	r5, r0
 8015cae:	460e      	mov	r6, r1
 8015cb0:	4690      	mov	r8, r2
 8015cb2:	461f      	mov	r7, r3
 8015cb4:	4689      	mov	r9, r1
 8015cb6:	4604      	mov	r4, r0
 8015cb8:	f814 0b01 	ldrb.w	r0, [r4], #1
 8015cbc:	47d8      	blx	fp
 8015cbe:	47d0      	blx	sl
 8015cc0:	1b2b      	subs	r3, r5, r4
 8015cc2:	4443      	add	r3, r8
 8015cc4:	f849 0b04 	str.w	r0, [r9], #4
 8015cc8:	2b00      	cmp	r3, #0
 8015cca:	d1f5      	bne.n	8015cb8 <_Convert8+0x18>
 8015ccc:	2f1f      	cmp	r7, #31
 8015cce:	d806      	bhi.n	8015cde <_Convert8+0x3e>
 8015cd0:	4630      	mov	r0, r6
 8015cd2:	4641      	mov	r1, r8
 8015cd4:	463a      	mov	r2, r7
 8015cd6:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cda:	f002 bcf4 	b.w	80186c6 <GUI__CompactPixelIndices>
 8015cde:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015ce4 <GUI_MEMDEV__WriteToActiveOpaque>:
 8015ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ce8:	b09d      	sub	sp, #116	; 0x74
 8015cea:	4606      	mov	r6, r0
 8015cec:	910f      	str	r1, [sp, #60]	; 0x3c
 8015cee:	920d      	str	r2, [sp, #52]	; 0x34
 8015cf0:	2800      	cmp	r0, #0
 8015cf2:	f000 8386 	beq.w	8016402 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8015cf6:	f7fd f9f3 	bl	80130e0 <GUI_ALLOC_LockH>
 8015cfa:	ab1c      	add	r3, sp, #112	; 0x70
 8015cfc:	6944      	ldr	r4, [r0, #20]
 8015cfe:	f843 0d1c 	str.w	r0, [r3, #-28]!
 8015d02:	4618      	mov	r0, r3
 8015d04:	f7fd f9fa 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015d08:	4630      	mov	r0, r6
 8015d0a:	f7f8 ff95 	bl	800ec38 <GUI_MEMDEV_GetBitsPerPixel>
 8015d0e:	2808      	cmp	r0, #8
 8015d10:	4601      	mov	r1, r0
 8015d12:	dd02      	ble.n	8015d1a <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 8015d14:	2c00      	cmp	r4, #0
 8015d16:	f000 81c3 	beq.w	80160a0 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 8015d1a:	2201      	movs	r2, #1
 8015d1c:	f04f 0800 	mov.w	r8, #0
 8015d20:	4630      	mov	r0, r6
 8015d22:	921b      	str	r2, [sp, #108]	; 0x6c
 8015d24:	920b      	str	r2, [sp, #44]	; 0x2c
 8015d26:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 8015d2a:	f7fd f9d9 	bl	80130e0 <GUI_ALLOC_LockH>
 8015d2e:	6803      	ldr	r3, [r0, #0]
 8015d30:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 8016340 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 8015d34:	691b      	ldr	r3, [r3, #16]
 8015d36:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 8015d3a:	685b      	ldr	r3, [r3, #4]
 8015d3c:	930e      	str	r3, [sp, #56]	; 0x38
 8015d3e:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 8015d42:	f8da 3000 	ldr.w	r3, [sl]
 8015d46:	f84b 0d14 	str.w	r0, [fp, #-20]!
 8015d4a:	6904      	ldr	r4, [r0, #16]
 8015d4c:	6945      	ldr	r5, [r0, #20]
 8015d4e:	f8d0 900c 	ldr.w	r9, [r0, #12]
 8015d52:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 8015d56:	7c58      	ldrb	r0, [r3, #17]
 8015d58:	9112      	str	r1, [sp, #72]	; 0x48
 8015d5a:	f7fa f9dd 	bl	8010118 <GUI_GetBitsPerPixelEx>
 8015d5e:	f8da 3000 	ldr.w	r3, [sl]
 8015d62:	9010      	str	r0, [sp, #64]	; 0x40
 8015d64:	7c58      	ldrb	r0, [r3, #17]
 8015d66:	f7fa f9f5 	bl	8010154 <GUI_GetpfIndex2ColorEx>
 8015d6a:	4603      	mov	r3, r0
 8015d6c:	4658      	mov	r0, fp
 8015d6e:	9309      	str	r3, [sp, #36]	; 0x24
 8015d70:	f7fd f9c4 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015d74:	2c08      	cmp	r4, #8
 8015d76:	4651      	mov	r1, sl
 8015d78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015d7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d7c:	d904      	bls.n	8015d88 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 8015d7e:	2c10      	cmp	r4, #16
 8015d80:	bf8c      	ite	hi
 8015d82:	2204      	movhi	r2, #4
 8015d84:	2202      	movls	r2, #2
 8015d86:	e005      	b.n	8015d94 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 8015d88:	2c01      	cmp	r4, #1
 8015d8a:	d103      	bne.n	8015d94 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 8015d8c:	9411      	str	r4, [sp, #68]	; 0x44
 8015d8e:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 8015d92:	e000      	b.n	8015d96 <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 8015d94:	9211      	str	r2, [sp, #68]	; 0x44
 8015d96:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015d98:	4298      	cmp	r0, r3
 8015d9a:	f000 80e2 	beq.w	8015f62 <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 8015d9e:	680b      	ldr	r3, [r1, #0]
 8015da0:	7c58      	ldrb	r0, [r3, #17]
 8015da2:	f7fa f9df 	bl	8010164 <GUI_GetpfColor2IndexEx>
 8015da6:	9013      	str	r0, [sp, #76]	; 0x4c
 8015da8:	00b8      	lsls	r0, r7, #2
 8015daa:	f7fd fbed 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 8015dae:	900c      	str	r0, [sp, #48]	; 0x30
 8015db0:	2800      	cmp	r0, #0
 8015db2:	f000 8326 	beq.w	8016402 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8015db6:	4630      	mov	r0, r6
 8015db8:	f7f8 f8da 	bl	800df70 <GUI_MEMDEV_GetDataPtr>
 8015dbc:	4606      	mov	r6, r0
 8015dbe:	2d00      	cmp	r5, #0
 8015dc0:	f000 80be 	beq.w	8015f40 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 8015dc4:	4628      	mov	r0, r5
 8015dc6:	f7fd f98b 	bl	80130e0 <GUI_ALLOC_LockH>
 8015dca:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 8015dce:	9018      	str	r0, [sp, #96]	; 0x60
 8015dd0:	f04f 0a00 	mov.w	sl, #0
 8015dd4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015dd6:	4592      	cmp	sl, r2
 8015dd8:	f280 80ae 	bge.w	8015f38 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 8015ddc:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015dde:	2300      	movs	r3, #0
 8015de0:	9319      	str	r3, [sp, #100]	; 0x64
 8015de2:	6883      	ldr	r3, [r0, #8]
 8015de4:	a919      	add	r1, sp, #100	; 0x64
 8015de6:	695b      	ldr	r3, [r3, #20]
 8015de8:	4652      	mov	r2, sl
 8015dea:	4798      	blx	r3
 8015dec:	42b8      	cmp	r0, r7
 8015dee:	4605      	mov	r5, r0
 8015df0:	d12f      	bne.n	8015e52 <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 8015df2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015df4:	f7fd f974 	bl	80130e0 <GUI_ALLOC_LockH>
 8015df8:	2c08      	cmp	r4, #8
 8015dfa:	4601      	mov	r1, r0
 8015dfc:	9016      	str	r0, [sp, #88]	; 0x58
 8015dfe:	d909      	bls.n	8015e14 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 8015e00:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015e02:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015e04:	9200      	str	r2, [sp, #0]
 8015e06:	9301      	str	r3, [sp, #4]
 8015e08:	4630      	mov	r0, r6
 8015e0a:	463a      	mov	r2, r7
 8015e0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e0e:	f7ff ff28 	bl	8015c62 <_Convert16>
 8015e12:	e008      	b.n	8015e26 <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 8015e14:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015e16:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015e18:	9000      	str	r0, [sp, #0]
 8015e1a:	9201      	str	r2, [sp, #4]
 8015e1c:	4630      	mov	r0, r6
 8015e1e:	463a      	mov	r2, r7
 8015e20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e22:	f7ff ff3d 	bl	8015ca0 <_Convert8>
 8015e26:	2301      	movs	r3, #1
 8015e28:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015e2a:	9002      	str	r0, [sp, #8]
 8015e2c:	ad1c      	add	r5, sp, #112	; 0x70
 8015e2e:	2200      	movs	r2, #0
 8015e30:	9300      	str	r3, [sp, #0]
 8015e32:	9301      	str	r3, [sp, #4]
 8015e34:	9203      	str	r2, [sp, #12]
 8015e36:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 8015e3a:	9204      	str	r2, [sp, #16]
 8015e3c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015e3e:	f8cd 8014 	str.w	r8, [sp, #20]
 8015e42:	4659      	mov	r1, fp
 8015e44:	463a      	mov	r2, r7
 8015e46:	f7fa fba9 	bl	801059c <LCD_DrawBitmap>
 8015e4a:	4628      	mov	r0, r5
 8015e4c:	f7fd f956 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015e50:	e060      	b.n	8015f14 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 8015e52:	2c01      	cmp	r4, #1
 8015e54:	d15c      	bne.n	8015f10 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 8015e56:	2d00      	cmp	r5, #0
 8015e58:	d05c      	beq.n	8015f14 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 8015e5a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015e5c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015e5e:	f8cd 900c 	str.w	r9, [sp, #12]
 8015e62:	2208      	movs	r2, #8
 8015e64:	fb90 f2f2 	sdiv	r2, r0, r2
 8015e68:	4432      	add	r2, r6
 8015e6a:	2301      	movs	r3, #1
 8015e6c:	9204      	str	r2, [sp, #16]
 8015e6e:	f000 0207 	and.w	r2, r0, #7
 8015e72:	9300      	str	r3, [sp, #0]
 8015e74:	4408      	add	r0, r1
 8015e76:	9301      	str	r3, [sp, #4]
 8015e78:	9302      	str	r3, [sp, #8]
 8015e7a:	9206      	str	r2, [sp, #24]
 8015e7c:	4659      	mov	r1, fp
 8015e7e:	462a      	mov	r2, r5
 8015e80:	f8cd 8014 	str.w	r8, [sp, #20]
 8015e84:	f7fa faae 	bl	80103e4 <LCD__DrawBitmap_1bpp>
 8015e88:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015e8a:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015e8c:	441d      	add	r5, r3
 8015e8e:	6883      	ldr	r3, [r0, #8]
 8015e90:	9519      	str	r5, [sp, #100]	; 0x64
 8015e92:	695b      	ldr	r3, [r3, #20]
 8015e94:	a919      	add	r1, sp, #100	; 0x64
 8015e96:	4652      	mov	r2, sl
 8015e98:	4798      	blx	r3
 8015e9a:	4605      	mov	r5, r0
 8015e9c:	e7db      	b.n	8015e56 <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 8015e9e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015ea0:	f7fd f91e 	bl	80130e0 <GUI_ALLOC_LockH>
 8015ea4:	2c08      	cmp	r4, #8
 8015ea6:	4601      	mov	r1, r0
 8015ea8:	9016      	str	r0, [sp, #88]	; 0x58
 8015eaa:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015eac:	d938      	bls.n	8015f20 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 8015eae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015eb0:	9200      	str	r2, [sp, #0]
 8015eb2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015eb4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015eb6:	9301      	str	r3, [sp, #4]
 8015eb8:	fb00 6002 	mla	r0, r0, r2, r6
 8015ebc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ebe:	462a      	mov	r2, r5
 8015ec0:	f7ff fecf 	bl	8015c62 <_Convert16>
 8015ec4:	2301      	movs	r3, #1
 8015ec6:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 8015eca:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015ecc:	9300      	str	r3, [sp, #0]
 8015ece:	2200      	movs	r2, #0
 8015ed0:	9301      	str	r3, [sp, #4]
 8015ed2:	9002      	str	r0, [sp, #8]
 8015ed4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015ed6:	9203      	str	r2, [sp, #12]
 8015ed8:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015eda:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 8015ede:	9204      	str	r2, [sp, #16]
 8015ee0:	4408      	add	r0, r1
 8015ee2:	462a      	mov	r2, r5
 8015ee4:	4659      	mov	r1, fp
 8015ee6:	f8cd 8014 	str.w	r8, [sp, #20]
 8015eea:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 8015eee:	f7fa fb55 	bl	801059c <LCD_DrawBitmap>
 8015ef2:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 8015ef6:	4660      	mov	r0, ip
 8015ef8:	f7fd f900 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015efc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015efe:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015f00:	441d      	add	r5, r3
 8015f02:	6883      	ldr	r3, [r0, #8]
 8015f04:	9519      	str	r5, [sp, #100]	; 0x64
 8015f06:	695b      	ldr	r3, [r3, #20]
 8015f08:	a919      	add	r1, sp, #100	; 0x64
 8015f0a:	4652      	mov	r2, sl
 8015f0c:	4798      	blx	r3
 8015f0e:	4605      	mov	r5, r0
 8015f10:	2d00      	cmp	r5, #0
 8015f12:	d1c4      	bne.n	8015e9e <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 8015f14:	444e      	add	r6, r9
 8015f16:	f10a 0a01 	add.w	sl, sl, #1
 8015f1a:	f10b 0b01 	add.w	fp, fp, #1
 8015f1e:	e759      	b.n	8015dd4 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 8015f20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f22:	9300      	str	r3, [sp, #0]
 8015f24:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015f26:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015f28:	9201      	str	r2, [sp, #4]
 8015f2a:	fb00 6003 	mla	r0, r0, r3, r6
 8015f2e:	462a      	mov	r2, r5
 8015f30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015f32:	f7ff feb5 	bl	8015ca0 <_Convert8>
 8015f36:	e7c5      	b.n	8015ec4 <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 8015f38:	a818      	add	r0, sp, #96	; 0x60
 8015f3a:	f7fd f8df 	bl	80130fc <GUI_ALLOC_UnlockH>
 8015f3e:	e00e      	b.n	8015f5e <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 8015f40:	2301      	movs	r3, #1
 8015f42:	9300      	str	r3, [sp, #0]
 8015f44:	9301      	str	r3, [sp, #4]
 8015f46:	9004      	str	r0, [sp, #16]
 8015f48:	9402      	str	r4, [sp, #8]
 8015f4a:	f8cd 900c 	str.w	r9, [sp, #12]
 8015f4e:	f8cd 8014 	str.w	r8, [sp, #20]
 8015f52:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015f54:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015f56:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015f58:	463a      	mov	r2, r7
 8015f5a:	f7fa fb1f 	bl	801059c <LCD_DrawBitmap>
 8015f5e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015f60:	e24d      	b.n	80163fe <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 8015f62:	4630      	mov	r0, r6
 8015f64:	f7f8 f804 	bl	800df70 <GUI_MEMDEV_GetDataPtr>
 8015f68:	4606      	mov	r6, r0
 8015f6a:	2d00      	cmp	r5, #0
 8015f6c:	f000 808a 	beq.w	8016084 <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 8015f70:	4628      	mov	r0, r5
 8015f72:	f7fd f8b5 	bl	80130e0 <GUI_ALLOC_LockH>
 8015f76:	2500      	movs	r5, #0
 8015f78:	9018      	str	r0, [sp, #96]	; 0x60
 8015f7a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015f7c:	429d      	cmp	r5, r3
 8015f7e:	da7d      	bge.n	801607c <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 8015f80:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015f82:	2300      	movs	r3, #0
 8015f84:	9319      	str	r3, [sp, #100]	; 0x64
 8015f86:	6883      	ldr	r3, [r0, #8]
 8015f88:	a919      	add	r1, sp, #100	; 0x64
 8015f8a:	695b      	ldr	r3, [r3, #20]
 8015f8c:	462a      	mov	r2, r5
 8015f8e:	4798      	blx	r3
 8015f90:	42b8      	cmp	r0, r7
 8015f92:	4682      	mov	sl, r0
 8015f94:	d124      	bne.n	8015fe0 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 8015f96:	46aa      	mov	sl, r5
 8015f98:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015f9a:	6883      	ldr	r3, [r0, #8]
 8015f9c:	f10a 0b01 	add.w	fp, sl, #1
 8015fa0:	695b      	ldr	r3, [r3, #20]
 8015fa2:	a919      	add	r1, sp, #100	; 0x64
 8015fa4:	465a      	mov	r2, fp
 8015fa6:	4798      	blx	r3
 8015fa8:	42b8      	cmp	r0, r7
 8015faa:	d101      	bne.n	8015fb0 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 8015fac:	46da      	mov	sl, fp
 8015fae:	e7f3      	b.n	8015f98 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 8015fb0:	ebc5 0b0a 	rsb	fp, r5, sl
 8015fb4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015fb6:	9604      	str	r6, [sp, #16]
 8015fb8:	2301      	movs	r3, #1
 8015fba:	f10b 0b01 	add.w	fp, fp, #1
 8015fbe:	9300      	str	r3, [sp, #0]
 8015fc0:	9301      	str	r3, [sp, #4]
 8015fc2:	4429      	add	r1, r5
 8015fc4:	9402      	str	r4, [sp, #8]
 8015fc6:	f8cd 900c 	str.w	r9, [sp, #12]
 8015fca:	f8cd 8014 	str.w	r8, [sp, #20]
 8015fce:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015fd0:	463a      	mov	r2, r7
 8015fd2:	465b      	mov	r3, fp
 8015fd4:	f7fa fae2 	bl	801059c <LCD_DrawBitmap>
 8015fd8:	fb09 660b 	mla	r6, r9, fp, r6
 8015fdc:	4655      	mov	r5, sl
 8015fde:	e04b      	b.n	8016078 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 8015fe0:	2c01      	cmp	r4, #1
 8015fe2:	d127      	bne.n	8016034 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 8015fe4:	f1ba 0f00 	cmp.w	sl, #0
 8015fe8:	d022      	beq.n	8016030 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 8015fea:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015fec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015fee:	f8cd 900c 	str.w	r9, [sp, #12]
 8015ff2:	2208      	movs	r2, #8
 8015ff4:	fb90 f2f2 	sdiv	r2, r0, r2
 8015ff8:	4432      	add	r2, r6
 8015ffa:	9204      	str	r2, [sp, #16]
 8015ffc:	f000 0207 	and.w	r2, r0, #7
 8016000:	4408      	add	r0, r1
 8016002:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016004:	9206      	str	r2, [sp, #24]
 8016006:	2301      	movs	r3, #1
 8016008:	4652      	mov	r2, sl
 801600a:	9300      	str	r3, [sp, #0]
 801600c:	9301      	str	r3, [sp, #4]
 801600e:	9302      	str	r3, [sp, #8]
 8016010:	4429      	add	r1, r5
 8016012:	f8cd 8014 	str.w	r8, [sp, #20]
 8016016:	f7fa f9e5 	bl	80103e4 <LCD__DrawBitmap_1bpp>
 801601a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801601c:	9818      	ldr	r0, [sp, #96]	; 0x60
 801601e:	4453      	add	r3, sl
 8016020:	9319      	str	r3, [sp, #100]	; 0x64
 8016022:	6883      	ldr	r3, [r0, #8]
 8016024:	a919      	add	r1, sp, #100	; 0x64
 8016026:	695b      	ldr	r3, [r3, #20]
 8016028:	462a      	mov	r2, r5
 801602a:	4798      	blx	r3
 801602c:	4682      	mov	sl, r0
 801602e:	e7d9      	b.n	8015fe4 <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 8016030:	444e      	add	r6, r9
 8016032:	e021      	b.n	8016078 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 8016034:	f1ba 0f00 	cmp.w	sl, #0
 8016038:	d0fa      	beq.n	8016030 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 801603a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801603c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801603e:	9402      	str	r4, [sp, #8]
 8016040:	fb00 6201 	mla	r2, r0, r1, r6
 8016044:	9204      	str	r2, [sp, #16]
 8016046:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016048:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801604a:	f8cd 900c 	str.w	r9, [sp, #12]
 801604e:	2301      	movs	r3, #1
 8016050:	4410      	add	r0, r2
 8016052:	9300      	str	r3, [sp, #0]
 8016054:	4652      	mov	r2, sl
 8016056:	9301      	str	r3, [sp, #4]
 8016058:	4429      	add	r1, r5
 801605a:	f8cd 8014 	str.w	r8, [sp, #20]
 801605e:	f7fa fa9d 	bl	801059c <LCD_DrawBitmap>
 8016062:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016064:	9818      	ldr	r0, [sp, #96]	; 0x60
 8016066:	4453      	add	r3, sl
 8016068:	9319      	str	r3, [sp, #100]	; 0x64
 801606a:	6883      	ldr	r3, [r0, #8]
 801606c:	a919      	add	r1, sp, #100	; 0x64
 801606e:	695b      	ldr	r3, [r3, #20]
 8016070:	462a      	mov	r2, r5
 8016072:	4798      	blx	r3
 8016074:	4682      	mov	sl, r0
 8016076:	e7dd      	b.n	8016034 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 8016078:	3501      	adds	r5, #1
 801607a:	e77e      	b.n	8015f7a <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 801607c:	a818      	add	r0, sp, #96	; 0x60
 801607e:	f7fd f83d 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016082:	e1be      	b.n	8016402 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8016084:	2301      	movs	r3, #1
 8016086:	9300      	str	r3, [sp, #0]
 8016088:	9301      	str	r3, [sp, #4]
 801608a:	9004      	str	r0, [sp, #16]
 801608c:	9402      	str	r4, [sp, #8]
 801608e:	f8cd 900c 	str.w	r9, [sp, #12]
 8016092:	f8cd 8014 	str.w	r8, [sp, #20]
 8016096:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016098:	990d      	ldr	r1, [sp, #52]	; 0x34
 801609a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801609c:	463a      	mov	r2, r7
 801609e:	e041      	b.n	8016124 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 80160a0:	4630      	mov	r0, r6
 80160a2:	910a      	str	r1, [sp, #40]	; 0x28
 80160a4:	f7fd f81c 	bl	80130e0 <GUI_ALLOC_LockH>
 80160a8:	4682      	mov	sl, r0
 80160aa:	a81c      	add	r0, sp, #112	; 0x70
 80160ac:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 80160b0:	f840 ad10 	str.w	sl, [r0, #-16]!
 80160b4:	f8da 4000 	ldr.w	r4, [sl]
 80160b8:	9210      	str	r2, [sp, #64]	; 0x40
 80160ba:	f8d4 9010 	ldr.w	r9, [r4, #16]
 80160be:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 80160c2:	4c9e      	ldr	r4, [pc, #632]	; (801633c <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 80160c4:	b213      	sxth	r3, r2
 80160c6:	f8da 200c 	ldr.w	r2, [sl, #12]
 80160ca:	920b      	str	r2, [sp, #44]	; 0x2c
 80160cc:	9309      	str	r3, [sp, #36]	; 0x24
 80160ce:	f7fd f815 	bl	80130fc <GUI_ALLOC_UnlockH>
 80160d2:	f8d9 0004 	ldr.w	r0, [r9, #4]
 80160d6:	900e      	str	r0, [sp, #56]	; 0x38
 80160d8:	4899      	ldr	r0, [pc, #612]	; (8016340 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 80160da:	6800      	ldr	r0, [r0, #0]
 80160dc:	7c40      	ldrb	r0, [r0, #17]
 80160de:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 80160e2:	6925      	ldr	r5, [r4, #16]
 80160e4:	f8d5 8000 	ldr.w	r8, [r5]
 80160e8:	f7fa f816 	bl	8010118 <GUI_GetBitsPerPixelEx>
 80160ec:	2808      	cmp	r0, #8
 80160ee:	fa0f fb87 	sxth.w	fp, r7
 80160f2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80160f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80160f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80160f8:	d904      	bls.n	8016104 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 80160fa:	2810      	cmp	r0, #16
 80160fc:	bf8c      	ite	hi
 80160fe:	2404      	movhi	r4, #4
 8016100:	2402      	movls	r4, #2
 8016102:	e000      	b.n	8016106 <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 8016104:	2401      	movs	r4, #1
 8016106:	45a9      	cmp	r9, r5
 8016108:	d10f      	bne.n	801612a <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 801610a:	2001      	movs	r0, #1
 801610c:	9203      	str	r2, [sp, #12]
 801610e:	f10a 0218 	add.w	r2, sl, #24
 8016112:	9000      	str	r0, [sp, #0]
 8016114:	9001      	str	r0, [sp, #4]
 8016116:	9102      	str	r1, [sp, #8]
 8016118:	9204      	str	r2, [sp, #16]
 801611a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801611c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801611e:	2200      	movs	r2, #0
 8016120:	9205      	str	r2, [sp, #20]
 8016122:	465a      	mov	r2, fp
 8016124:	f7fa fa3a 	bl	801059c <LCD_DrawBitmap>
 8016128:	e16b      	b.n	8016402 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 801612a:	2920      	cmp	r1, #32
 801612c:	f040 808e 	bne.w	801624c <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 8016130:	fb0b f004 	mul.w	r0, fp, r4
 8016134:	f7fd fa28 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 8016138:	900e      	str	r0, [sp, #56]	; 0x38
 801613a:	2800      	cmp	r0, #0
 801613c:	f000 8161 	beq.w	8016402 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8016140:	f7fc ffce 	bl	80130e0 <GUI_ALLOC_LockH>
 8016144:	901a      	str	r0, [sp, #104]	; 0x68
 8016146:	4630      	mov	r0, r6
 8016148:	f7fc ffca 	bl	80130e0 <GUI_ALLOC_LockH>
 801614c:	9018      	str	r0, [sp, #96]	; 0x60
 801614e:	692b      	ldr	r3, [r5, #16]
 8016150:	f100 0a18 	add.w	sl, r0, #24
 8016154:	ea4f 068b 	mov.w	r6, fp, lsl #2
 8016158:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 801615c:	2b00      	cmp	r3, #0
 801615e:	d02f      	beq.n	80161c0 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 8016160:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8016164:	2c02      	cmp	r4, #2
 8016166:	d003      	beq.n	8016170 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 8016168:	2c04      	cmp	r4, #4
 801616a:	d001      	beq.n	8016170 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 801616c:	2c01      	cmp	r4, #1
 801616e:	d106      	bne.n	801617e <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 8016170:	4650      	mov	r0, sl
 8016172:	692f      	ldr	r7, [r5, #16]
 8016174:	991a      	ldr	r1, [sp, #104]	; 0x68
 8016176:	465a      	mov	r2, fp
 8016178:	4623      	mov	r3, r4
 801617a:	47b8      	blx	r7
 801617c:	44b2      	add	sl, r6
 801617e:	2301      	movs	r3, #1
 8016180:	2200      	movs	r2, #0
 8016182:	991a      	ldr	r1, [sp, #104]	; 0x68
 8016184:	9300      	str	r3, [sp, #0]
 8016186:	9301      	str	r3, [sp, #4]
 8016188:	9203      	str	r2, [sp, #12]
 801618a:	9104      	str	r1, [sp, #16]
 801618c:	9205      	str	r2, [sp, #20]
 801618e:	4641      	mov	r1, r8
 8016190:	465a      	mov	r2, fp
 8016192:	f8cd 9008 	str.w	r9, [sp, #8]
 8016196:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016198:	f7fa fa00 	bl	801059c <LCD_DrawBitmap>
 801619c:	9910      	ldr	r1, [sp, #64]	; 0x40
 801619e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80161a0:	f108 0701 	add.w	r7, r8, #1
 80161a4:	fa02 f381 	sxtah	r3, r2, r1
 80161a8:	42bb      	cmp	r3, r7
 80161aa:	d107      	bne.n	80161bc <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 80161ac:	a818      	add	r0, sp, #96	; 0x60
 80161ae:	f7fc ffa5 	bl	80130fc <GUI_ALLOC_UnlockH>
 80161b2:	a81a      	add	r0, sp, #104	; 0x68
 80161b4:	f7fc ffa2 	bl	80130fc <GUI_ALLOC_UnlockH>
 80161b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80161ba:	e120      	b.n	80163fe <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 80161bc:	46b8      	mov	r8, r7
 80161be:	e7d1      	b.n	8016164 <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 80161c0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80161c2:	2c02      	cmp	r4, #2
 80161c4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80161c6:	d00e      	beq.n	80161e6 <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 80161c8:	2c04      	cmp	r4, #4
 80161ca:	d018      	beq.n	80161fe <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 80161cc:	2c01      	cmp	r4, #1
 80161ce:	d125      	bne.n	801621c <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 80161d0:	2300      	movs	r3, #0
 80161d2:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 80161d6:	9309      	str	r3, [sp, #36]	; 0x24
 80161d8:	47c0      	blx	r8
 80161da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161dc:	54f8      	strb	r0, [r7, r3]
 80161de:	3301      	adds	r3, #1
 80161e0:	459b      	cmp	fp, r3
 80161e2:	d1f6      	bne.n	80161d2 <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 80161e4:	e019      	b.n	801621a <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 80161e6:	2300      	movs	r3, #0
 80161e8:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 80161ec:	9309      	str	r3, [sp, #36]	; 0x24
 80161ee:	47c0      	blx	r8
 80161f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161f2:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 80161f6:	3301      	adds	r3, #1
 80161f8:	459b      	cmp	fp, r3
 80161fa:	d1f5      	bne.n	80161e8 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 80161fc:	e00d      	b.n	801621a <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 80161fe:	465a      	mov	r2, fp
 8016200:	2300      	movs	r3, #0
 8016202:	f85a 0003 	ldr.w	r0, [sl, r3]
 8016206:	920b      	str	r2, [sp, #44]	; 0x2c
 8016208:	9309      	str	r3, [sp, #36]	; 0x24
 801620a:	47c0      	blx	r8
 801620c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801620e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016210:	3a01      	subs	r2, #1
 8016212:	50f8      	str	r0, [r7, r3]
 8016214:	f103 0304 	add.w	r3, r3, #4
 8016218:	d1f3      	bne.n	8016202 <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 801621a:	44b2      	add	sl, r6
 801621c:	2301      	movs	r3, #1
 801621e:	2200      	movs	r2, #0
 8016220:	991a      	ldr	r1, [sp, #104]	; 0x68
 8016222:	9300      	str	r3, [sp, #0]
 8016224:	9301      	str	r3, [sp, #4]
 8016226:	9203      	str	r2, [sp, #12]
 8016228:	9104      	str	r1, [sp, #16]
 801622a:	9205      	str	r2, [sp, #20]
 801622c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801622e:	f8cd 9008 	str.w	r9, [sp, #8]
 8016232:	4629      	mov	r1, r5
 8016234:	465a      	mov	r2, fp
 8016236:	f7fa f9b1 	bl	801059c <LCD_DrawBitmap>
 801623a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801623c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801623e:	1c6f      	adds	r7, r5, #1
 8016240:	fa01 f380 	sxtah	r3, r1, r0
 8016244:	42bb      	cmp	r3, r7
 8016246:	d0b1      	beq.n	80161ac <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 8016248:	463d      	mov	r5, r7
 801624a:	e7ba      	b.n	80161c2 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 801624c:	2910      	cmp	r1, #16
 801624e:	f040 80d8 	bne.w	8016402 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8016252:	fa0f fa87 	sxth.w	sl, r7
 8016256:	fb0a f004 	mul.w	r0, sl, r4
 801625a:	f7fd f995 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 801625e:	9012      	str	r0, [sp, #72]	; 0x48
 8016260:	2800      	cmp	r0, #0
 8016262:	f000 80ce 	beq.w	8016402 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8016266:	f7fc ff3b 	bl	80130e0 <GUI_ALLOC_LockH>
 801626a:	901a      	str	r0, [sp, #104]	; 0x68
 801626c:	4630      	mov	r0, r6
 801626e:	f7fc ff37 	bl	80130e0 <GUI_ALLOC_LockH>
 8016272:	9018      	str	r0, [sp, #96]	; 0x60
 8016274:	692b      	ldr	r3, [r5, #16]
 8016276:	f100 0618 	add.w	r6, r0, #24
 801627a:	b113      	cbz	r3, 8016282 <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 801627c:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8016280:	b92b      	cbnz	r3, 801628e <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 8016282:	00e2      	lsls	r2, r4, #3
 8016284:	b23f      	sxth	r7, r7
 8016286:	9211      	str	r2, [sp, #68]	; 0x44
 8016288:	007f      	lsls	r7, r7, #1
 801628a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801628c:	e088      	b.n	80163a0 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 801628e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8016292:	0080      	lsls	r0, r0, #2
 8016294:	f7fd f978 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 8016298:	9011      	str	r0, [sp, #68]	; 0x44
 801629a:	b118      	cbz	r0, 80162a4 <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 801629c:	f7fc ff20 	bl	80130e0 <GUI_ALLOC_LockH>
 80162a0:	9019      	str	r0, [sp, #100]	; 0x64
 80162a2:	e001      	b.n	80162a8 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 80162a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80162a6:	9319      	str	r3, [sp, #100]	; 0x64
 80162a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80162aa:	2b00      	cmp	r3, #0
 80162ac:	f000 80a0 	beq.w	80163f0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 80162b0:	b23f      	sxth	r7, r7
 80162b2:	007f      	lsls	r7, r7, #1
 80162b4:	970e      	str	r7, [sp, #56]	; 0x38
 80162b6:	00e7      	lsls	r7, r4, #3
 80162b8:	9713      	str	r7, [sp, #76]	; 0x4c
 80162ba:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80162bc:	970c      	str	r7, [sp, #48]	; 0x30
 80162be:	2c02      	cmp	r4, #2
 80162c0:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80162c4:	d004      	beq.n	80162d0 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 80162c6:	2c04      	cmp	r4, #4
 80162c8:	d007      	beq.n	80162da <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 80162ca:	2c01      	cmp	r4, #1
 80162cc:	d114      	bne.n	80162f8 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 80162ce:	e004      	b.n	80162da <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 80162d0:	4630      	mov	r0, r6
 80162d2:	9919      	ldr	r1, [sp, #100]	; 0x64
 80162d4:	4652      	mov	r2, sl
 80162d6:	4623      	mov	r3, r4
 80162d8:	e003      	b.n	80162e2 <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 80162da:	9919      	ldr	r1, [sp, #100]	; 0x64
 80162dc:	4630      	mov	r0, r6
 80162de:	4652      	mov	r2, sl
 80162e0:	2302      	movs	r3, #2
 80162e2:	f8d9 7014 	ldr.w	r7, [r9, #20]
 80162e6:	47b8      	blx	r7
 80162e8:	692f      	ldr	r7, [r5, #16]
 80162ea:	9819      	ldr	r0, [sp, #100]	; 0x64
 80162ec:	4641      	mov	r1, r8
 80162ee:	4652      	mov	r2, sl
 80162f0:	4623      	mov	r3, r4
 80162f2:	47b8      	blx	r7
 80162f4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80162f6:	443e      	add	r6, r7
 80162f8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80162fa:	991a      	ldr	r1, [sp, #104]	; 0x68
 80162fc:	9104      	str	r1, [sp, #16]
 80162fe:	2301      	movs	r3, #1
 8016300:	2200      	movs	r2, #0
 8016302:	f107 0801 	add.w	r8, r7, #1
 8016306:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8016308:	9300      	str	r3, [sp, #0]
 801630a:	9301      	str	r3, [sp, #4]
 801630c:	9702      	str	r7, [sp, #8]
 801630e:	9203      	str	r2, [sp, #12]
 8016310:	9205      	str	r2, [sp, #20]
 8016312:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016314:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016316:	465a      	mov	r2, fp
 8016318:	f7fa f940 	bl	801059c <LCD_DrawBitmap>
 801631c:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801631e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8016320:	fa00 f387 	sxtah	r3, r0, r7
 8016324:	4543      	cmp	r3, r8
 8016326:	d002      	beq.n	801632e <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 8016328:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 801632c:	e7c7      	b.n	80162be <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 801632e:	a819      	add	r0, sp, #100	; 0x64
 8016330:	f7fc fee4 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016334:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016336:	f7fc ff0d 	bl	8013154 <GUI_ALLOC_Free>
 801633a:	e059      	b.n	80163f0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 801633c:	20019ca0 	.word	0x20019ca0
 8016340:	2000016c 	.word	0x2000016c
 8016344:	2c04      	cmp	r4, #4
 8016346:	d041      	beq.n	80163cc <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 8016348:	2c01      	cmp	r4, #1
 801634a:	d111      	bne.n	8016370 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 801634c:	464a      	mov	r2, r9
 801634e:	4631      	mov	r1, r6
 8016350:	f831 0b02 	ldrh.w	r0, [r1], #2
 8016354:	910a      	str	r1, [sp, #40]	; 0x28
 8016356:	920b      	str	r2, [sp, #44]	; 0x2c
 8016358:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801635a:	4798      	blx	r3
 801635c:	47c0      	blx	r8
 801635e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016360:	f802 0b01 	strb.w	r0, [r2], #1
 8016364:	eb09 000a 	add.w	r0, r9, sl
 8016368:	4282      	cmp	r2, r0
 801636a:	990a      	ldr	r1, [sp, #40]	; 0x28
 801636c:	d1f0      	bne.n	8016350 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 801636e:	443e      	add	r6, r7
 8016370:	2301      	movs	r3, #1
 8016372:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016374:	991a      	ldr	r1, [sp, #104]	; 0x68
 8016376:	9300      	str	r3, [sp, #0]
 8016378:	2200      	movs	r2, #0
 801637a:	9301      	str	r3, [sp, #4]
 801637c:	9002      	str	r0, [sp, #8]
 801637e:	9203      	str	r2, [sp, #12]
 8016380:	9104      	str	r1, [sp, #16]
 8016382:	9205      	str	r2, [sp, #20]
 8016384:	4629      	mov	r1, r5
 8016386:	465a      	mov	r2, fp
 8016388:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801638a:	f7fa f907 	bl	801059c <LCD_DrawBitmap>
 801638e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016390:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016392:	f105 0901 	add.w	r9, r5, #1
 8016396:	fa02 f381 	sxtah	r3, r2, r1
 801639a:	454b      	cmp	r3, r9
 801639c:	d028      	beq.n	80163f0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 801639e:	464d      	mov	r5, r9
 80163a0:	2c02      	cmp	r4, #2
 80163a2:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 80163a6:	d1cd      	bne.n	8016344 <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 80163a8:	464b      	mov	r3, r9
 80163aa:	4631      	mov	r1, r6
 80163ac:	46d9      	mov	r9, fp
 80163ae:	f831 0b02 	ldrh.w	r0, [r1], #2
 80163b2:	910a      	str	r1, [sp, #40]	; 0x28
 80163b4:	9309      	str	r3, [sp, #36]	; 0x24
 80163b6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80163b8:	4790      	blx	r2
 80163ba:	47c0      	blx	r8
 80163bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80163be:	990a      	ldr	r1, [sp, #40]	; 0x28
 80163c0:	f823 0b02 	strh.w	r0, [r3], #2
 80163c4:	f1b9 0901 	subs.w	r9, r9, #1
 80163c8:	d1f1      	bne.n	80163ae <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 80163ca:	e7d0      	b.n	801636e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 80163cc:	464b      	mov	r3, r9
 80163ce:	4631      	mov	r1, r6
 80163d0:	46d9      	mov	r9, fp
 80163d2:	f831 0b02 	ldrh.w	r0, [r1], #2
 80163d6:	910a      	str	r1, [sp, #40]	; 0x28
 80163d8:	9309      	str	r3, [sp, #36]	; 0x24
 80163da:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80163dc:	4790      	blx	r2
 80163de:	47c0      	blx	r8
 80163e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80163e2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80163e4:	f843 0b04 	str.w	r0, [r3], #4
 80163e8:	f1b9 0901 	subs.w	r9, r9, #1
 80163ec:	d1f1      	bne.n	80163d2 <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 80163ee:	e7be      	b.n	801636e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 80163f0:	a818      	add	r0, sp, #96	; 0x60
 80163f2:	f7fc fe83 	bl	80130fc <GUI_ALLOC_UnlockH>
 80163f6:	a81a      	add	r0, sp, #104	; 0x68
 80163f8:	f7fc fe80 	bl	80130fc <GUI_ALLOC_UnlockH>
 80163fc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80163fe:	f7fc fea9 	bl	8013154 <GUI_ALLOC_Free>
 8016402:	b01d      	add	sp, #116	; 0x74
 8016404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016408 <GUI_MEMDEV__WriteToActiveAlpha>:
 8016408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801640c:	b091      	sub	sp, #68	; 0x44
 801640e:	460e      	mov	r6, r1
 8016410:	4614      	mov	r4, r2
 8016412:	900d      	str	r0, [sp, #52]	; 0x34
 8016414:	f7fc fe64 	bl	80130e0 <GUI_ALLOC_LockH>
 8016418:	4602      	mov	r2, r0
 801641a:	a810      	add	r0, sp, #64	; 0x40
 801641c:	6813      	ldr	r3, [r2, #0]
 801641e:	4d5b      	ldr	r5, [pc, #364]	; (801658c <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 8016420:	691b      	ldr	r3, [r3, #16]
 8016422:	f840 2d08 	str.w	r2, [r0, #-8]!
 8016426:	685b      	ldr	r3, [r3, #4]
 8016428:	f8b2 b008 	ldrh.w	fp, [r2, #8]
 801642c:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 8016430:	9309      	str	r3, [sp, #36]	; 0x24
 8016432:	f7fc fe63 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016436:	682b      	ldr	r3, [r5, #0]
 8016438:	4f55      	ldr	r7, [pc, #340]	; (8016590 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 801643a:	7c5b      	ldrb	r3, [r3, #17]
 801643c:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8016440:	68c3      	ldr	r3, [r0, #12]
 8016442:	2108      	movs	r1, #8
 8016444:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016446:	4798      	blx	r3
 8016448:	682b      	ldr	r3, [r5, #0]
 801644a:	7c5b      	ldrb	r3, [r3, #17]
 801644c:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8016450:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8016454:	2817      	cmp	r0, #23
 8016456:	bf88      	it	hi
 8016458:	2020      	movhi	r0, #32
 801645a:	9008      	str	r0, [sp, #32]
 801645c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8016460:	f8d8 2000 	ldr.w	r2, [r8]
 8016464:	910a      	str	r1, [sp, #40]	; 0x28
 8016466:	2000      	movs	r0, #0
 8016468:	920b      	str	r2, [sp, #44]	; 0x2c
 801646a:	f7fa fe27 	bl	80110bc <GUI__AllocAlphaBuffer>
 801646e:	2800      	cmp	r0, #0
 8016470:	f040 8089 	bne.w	8016586 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8016474:	682a      	ldr	r2, [r5, #0]
 8016476:	fa0f f78b 	sxth.w	r7, fp
 801647a:	19f5      	adds	r5, r6, r7
 801647c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 8016480:	3d01      	subs	r5, #1
 8016482:	1aed      	subs	r5, r5, r3
 8016484:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 8016488:	2d00      	cmp	r5, #0
 801648a:	bfcc      	ite	gt
 801648c:	ebc5 0507 	rsbgt	r5, r5, r7
 8016490:	463d      	movle	r5, r7
 8016492:	42b3      	cmp	r3, r6
 8016494:	bfc3      	ittte	gt
 8016496:	ebc6 0103 	rsbgt	r1, r6, r3
 801649a:	ebc1 0505 	rsbgt	r5, r1, r5
 801649e:	461e      	movgt	r6, r3
 80164a0:	2100      	movle	r1, #0
 80164a2:	2d00      	cmp	r5, #0
 80164a4:	dd6f      	ble.n	8016586 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 80164a6:	fa0f f389 	sxth.w	r3, r9
 80164aa:	18e0      	adds	r0, r4, r3
 80164ac:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 80164b0:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 80164b4:	3801      	subs	r0, #1
 80164b6:	ebcc 0000 	rsb	r0, ip, r0
 80164ba:	2800      	cmp	r0, #0
 80164bc:	bfc8      	it	gt
 80164be:	ebc0 0303 	rsbgt	r3, r0, r3
 80164c2:	4294      	cmp	r4, r2
 80164c4:	bfbd      	ittte	lt
 80164c6:	ebc4 0a02 	rsblt	sl, r4, r2
 80164ca:	ebca 0303 	rsblt	r3, sl, r3
 80164ce:	4614      	movlt	r4, r2
 80164d0:	f04f 0a00 	movge.w	sl, #0
 80164d4:	2b00      	cmp	r3, #0
 80164d6:	dd56      	ble.n	8016586 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 80164d8:	fb07 1a0a 	mla	sl, r7, sl, r1
 80164dc:	18e3      	adds	r3, r4, r3
 80164de:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 80164e2:	930c      	str	r3, [sp, #48]	; 0x30
 80164e4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80164e6:	f7f7 fd43 	bl	800df70 <GUI_MEMDEV_GetDataPtr>
 80164ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80164ec:	9300      	str	r3, [sp, #0]
 80164ee:	ab0f      	add	r3, sp, #60	; 0x3c
 80164f0:	eb00 020a 	add.w	r2, r0, sl
 80164f4:	9301      	str	r3, [sp, #4]
 80164f6:	4630      	mov	r0, r6
 80164f8:	4621      	mov	r1, r4
 80164fa:	462b      	mov	r3, r5
 80164fc:	f7fa fcf8 	bl	8010ef0 <GUI__DoAlphaBlending>
 8016500:	4681      	mov	r9, r0
 8016502:	2800      	cmp	r0, #0
 8016504:	d03f      	beq.n	8016586 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8016506:	4b23      	ldr	r3, [pc, #140]	; (8016594 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 8016508:	990a      	ldr	r1, [sp, #40]	; 0x28
 801650a:	4299      	cmp	r1, r3
 801650c:	d01e      	beq.n	801654c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 801650e:	4629      	mov	r1, r5
 8016510:	9a08      	ldr	r2, [sp, #32]
 8016512:	4643      	mov	r3, r8
 8016514:	f002 fa61 	bl	80189da <GUI__CompactPixelIndicesEx>
 8016518:	b9c0      	cbnz	r0, 801654c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 801651a:	f8d8 c010 	ldr.w	ip, [r8, #16]
 801651e:	f1bc 0f00 	cmp.w	ip, #0
 8016522:	d006      	beq.n	8016532 <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 8016524:	4648      	mov	r0, r9
 8016526:	4649      	mov	r1, r9
 8016528:	fa0f f28b 	sxth.w	r2, fp
 801652c:	2304      	movs	r3, #4
 801652e:	47e0      	blx	ip
 8016530:	e00c      	b.n	801654c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8016532:	464a      	mov	r2, r9
 8016534:	463b      	mov	r3, r7
 8016536:	6810      	ldr	r0, [r2, #0]
 8016538:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801653a:	9206      	str	r2, [sp, #24]
 801653c:	9307      	str	r3, [sp, #28]
 801653e:	4788      	blx	r1
 8016540:	9b07      	ldr	r3, [sp, #28]
 8016542:	9a06      	ldr	r2, [sp, #24]
 8016544:	3b01      	subs	r3, #1
 8016546:	f842 0b04 	str.w	r0, [r2], #4
 801654a:	d1f4      	bne.n	8016536 <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 801654c:	9a08      	ldr	r2, [sp, #32]
 801654e:	9202      	str	r2, [sp, #8]
 8016550:	2301      	movs	r3, #1
 8016552:	2200      	movs	r2, #0
 8016554:	f104 0c01 	add.w	ip, r4, #1
 8016558:	9300      	str	r3, [sp, #0]
 801655a:	9301      	str	r3, [sp, #4]
 801655c:	9203      	str	r2, [sp, #12]
 801655e:	9205      	str	r2, [sp, #20]
 8016560:	f8cd 9010 	str.w	r9, [sp, #16]
 8016564:	4630      	mov	r0, r6
 8016566:	4621      	mov	r1, r4
 8016568:	462a      	mov	r2, r5
 801656a:	f8cd c01c 	str.w	ip, [sp, #28]
 801656e:	f7fa f815 	bl	801059c <LCD_DrawBitmap>
 8016572:	2304      	movs	r3, #4
 8016574:	fb1b aa03 	smlabb	sl, fp, r3, sl
 8016578:	f8dd c01c 	ldr.w	ip, [sp, #28]
 801657c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801657e:	459c      	cmp	ip, r3
 8016580:	d001      	beq.n	8016586 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8016582:	4664      	mov	r4, ip
 8016584:	e7ae      	b.n	80164e4 <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 8016586:	b011      	add	sp, #68	; 0x44
 8016588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801658c:	2000016c 	.word	0x2000016c
 8016590:	20019ca0 	.word	0x20019ca0
 8016594:	08013723 	.word	0x08013723

08016598 <GUI_MEMDEV_WriteAt>:
 8016598:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801659a:	460c      	mov	r4, r1
 801659c:	4615      	mov	r5, r2
 801659e:	4606      	mov	r6, r0
 80165a0:	b330      	cbz	r0, 80165f0 <GUI_MEMDEV_WriteAt+0x58>
 80165a2:	f7fc fd9d 	bl	80130e0 <GUI_ALLOC_LockH>
 80165a6:	4a13      	ldr	r2, [pc, #76]	; (80165f4 <GUI_MEMDEV_WriteAt+0x5c>)
 80165a8:	8943      	ldrh	r3, [r0, #10]
 80165aa:	9001      	str	r0, [sp, #4]
 80165ac:	4294      	cmp	r4, r2
 80165ae:	8902      	ldrh	r2, [r0, #8]
 80165b0:	bf04      	itt	eq
 80165b2:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 80165b6:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 80165ba:	f8ad 4008 	strh.w	r4, [sp, #8]
 80165be:	3a01      	subs	r2, #1
 80165c0:	3b01      	subs	r3, #1
 80165c2:	4422      	add	r2, r4
 80165c4:	442b      	add	r3, r5
 80165c6:	a801      	add	r0, sp, #4
 80165c8:	f8ad 200c 	strh.w	r2, [sp, #12]
 80165cc:	f8ad 500a 	strh.w	r5, [sp, #10]
 80165d0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80165d4:	f7fc fd92 	bl	80130fc <GUI_ALLOC_UnlockH>
 80165d8:	a802      	add	r0, sp, #8
 80165da:	f7f7 f90b 	bl	800d7f4 <WM__InitIVRSearch>
 80165de:	b138      	cbz	r0, 80165f0 <GUI_MEMDEV_WriteAt+0x58>
 80165e0:	4630      	mov	r0, r6
 80165e2:	4621      	mov	r1, r4
 80165e4:	462a      	mov	r2, r5
 80165e6:	f7f8 fa89 	bl	800eafc <GUI_MEMDEV__WriteToActiveAt>
 80165ea:	f7f7 f841 	bl	800d670 <WM__GetNextIVR>
 80165ee:	e7f6      	b.n	80165de <GUI_MEMDEV_WriteAt+0x46>
 80165f0:	b004      	add	sp, #16
 80165f2:	bd70      	pop	{r4, r5, r6, pc}
 80165f4:	fffff001 	.word	0xfffff001

080165f8 <GUI_MEMDEV_Write>:
 80165f8:	4901      	ldr	r1, [pc, #4]	; (8016600 <GUI_MEMDEV_Write+0x8>)
 80165fa:	460a      	mov	r2, r1
 80165fc:	f7ff bfcc 	b.w	8016598 <GUI_MEMDEV_WriteAt>
 8016600:	fffff001 	.word	0xfffff001

08016604 <GUI_USAGE_BM_AddPixel>:
 8016604:	4603      	mov	r3, r0
 8016606:	b510      	push	{r4, lr}
 8016608:	f933 4b14 	ldrsh.w	r4, [r3], #20
 801660c:	1b09      	subs	r1, r1, r4
 801660e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8016612:	6900      	ldr	r0, [r0, #16]
 8016614:	1b12      	subs	r2, r2, r4
 8016616:	fb00 3302 	mla	r3, r0, r2, r3
 801661a:	10c8      	asrs	r0, r1, #3
 801661c:	2280      	movs	r2, #128	; 0x80
 801661e:	f001 0107 	and.w	r1, r1, #7
 8016622:	fa42 f101 	asr.w	r1, r2, r1
 8016626:	5c1a      	ldrb	r2, [r3, r0]
 8016628:	4311      	orrs	r1, r2
 801662a:	5419      	strb	r1, [r3, r0]
 801662c:	bd10      	pop	{r4, pc}

0801662e <GUI_USAGE_BM_GetNextDirty>:
 801662e:	b570      	push	{r4, r5, r6, lr}
 8016630:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8016634:	680b      	ldr	r3, [r1, #0]
 8016636:	8886      	ldrh	r6, [r0, #4]
 8016638:	42a2      	cmp	r2, r4
 801663a:	da41      	bge.n	80166c0 <GUI_USAGE_BM_GetNextDirty+0x92>
 801663c:	b236      	sxth	r6, r6
 801663e:	42b3      	cmp	r3, r6
 8016640:	6904      	ldr	r4, [r0, #16]
 8016642:	da3d      	bge.n	80166c0 <GUI_USAGE_BM_GetNextDirty+0x92>
 8016644:	3014      	adds	r0, #20
 8016646:	fb04 0202 	mla	r2, r4, r2, r0
 801664a:	10dd      	asrs	r5, r3, #3
 801664c:	1e70      	subs	r0, r6, #1
 801664e:	1954      	adds	r4, r2, r5
 8016650:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 8016654:	5d55      	ldrb	r5, [r2, r5]
 8016656:	f003 0207 	and.w	r2, r3, #7
 801665a:	fa05 f202 	lsl.w	r2, r5, r2
 801665e:	3401      	adds	r4, #1
 8016660:	b2d2      	uxtb	r2, r2
 8016662:	b93a      	cbnz	r2, 8016674 <GUI_USAGE_BM_GetNextDirty+0x46>
 8016664:	b368      	cbz	r0, 80166c2 <GUI_USAGE_BM_GetNextDirty+0x94>
 8016666:	3308      	adds	r3, #8
 8016668:	f814 2b01 	ldrb.w	r2, [r4], #1
 801666c:	3801      	subs	r0, #1
 801666e:	f023 0307 	bic.w	r3, r3, #7
 8016672:	e7f6      	b.n	8016662 <GUI_USAGE_BM_GetNextDirty+0x34>
 8016674:	0615      	lsls	r5, r2, #24
 8016676:	d403      	bmi.n	8016680 <GUI_USAGE_BM_GetNextDirty+0x52>
 8016678:	0052      	lsls	r2, r2, #1
 801667a:	b2d2      	uxtb	r2, r2
 801667c:	3301      	adds	r3, #1
 801667e:	e7f9      	b.n	8016674 <GUI_USAGE_BM_GetNextDirty+0x46>
 8016680:	2aff      	cmp	r2, #255	; 0xff
 8016682:	461d      	mov	r5, r3
 8016684:	d005      	beq.n	8016692 <GUI_USAGE_BM_GetNextDirty+0x64>
 8016686:	0656      	lsls	r6, r2, #25
 8016688:	d504      	bpl.n	8016694 <GUI_USAGE_BM_GetNextDirty+0x66>
 801668a:	0052      	lsls	r2, r2, #1
 801668c:	b2d2      	uxtb	r2, r2
 801668e:	3301      	adds	r3, #1
 8016690:	e7f9      	b.n	8016686 <GUI_USAGE_BM_GetNextDirty+0x58>
 8016692:	3307      	adds	r3, #7
 8016694:	f003 0207 	and.w	r2, r3, #7
 8016698:	2a07      	cmp	r2, #7
 801669a:	d10d      	bne.n	80166b8 <GUI_USAGE_BM_GetNextDirty+0x8a>
 801669c:	3801      	subs	r0, #1
 801669e:	d40b      	bmi.n	80166b8 <GUI_USAGE_BM_GetNextDirty+0x8a>
 80166a0:	f814 2b01 	ldrb.w	r2, [r4], #1
 80166a4:	2aff      	cmp	r2, #255	; 0xff
 80166a6:	d101      	bne.n	80166ac <GUI_USAGE_BM_GetNextDirty+0x7e>
 80166a8:	3308      	adds	r3, #8
 80166aa:	e7f7      	b.n	801669c <GUI_USAGE_BM_GetNextDirty+0x6e>
 80166ac:	0610      	lsls	r0, r2, #24
 80166ae:	d503      	bpl.n	80166b8 <GUI_USAGE_BM_GetNextDirty+0x8a>
 80166b0:	0052      	lsls	r2, r2, #1
 80166b2:	b2d2      	uxtb	r2, r2
 80166b4:	3301      	adds	r3, #1
 80166b6:	e7f9      	b.n	80166ac <GUI_USAGE_BM_GetNextDirty+0x7e>
 80166b8:	1b58      	subs	r0, r3, r5
 80166ba:	600d      	str	r5, [r1, #0]
 80166bc:	3001      	adds	r0, #1
 80166be:	bd70      	pop	{r4, r5, r6, pc}
 80166c0:	2000      	movs	r0, #0
 80166c2:	bd70      	pop	{r4, r5, r6, pc}

080166c4 <_GUI_USAGE_BM_Delete>:
 80166c4:	f7fc bd46 	b.w	8013154 <GUI_ALLOC_Free>

080166c8 <GUI_USAGE_BM_Clear>:
 80166c8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80166cc:	6902      	ldr	r2, [r0, #16]
 80166ce:	2100      	movs	r1, #0
 80166d0:	3014      	adds	r0, #20
 80166d2:	435a      	muls	r2, r3
 80166d4:	f004 b9e1 	b.w	801aa9a <memset>

080166d8 <GUI_USAGE_BM_AddHLine>:
 80166d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80166da:	f9b0 4000 	ldrsh.w	r4, [r0]
 80166de:	1b09      	subs	r1, r1, r4
 80166e0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80166e4:	42a1      	cmp	r1, r4
 80166e6:	da2f      	bge.n	8016748 <GUI_USAGE_BM_AddHLine+0x70>
 80166e8:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 80166ec:	440b      	add	r3, r1
 80166ee:	f100 0414 	add.w	r4, r0, #20
 80166f2:	3b01      	subs	r3, #1
 80166f4:	6900      	ldr	r0, [r0, #16]
 80166f6:	1b52      	subs	r2, r2, r5
 80166f8:	43de      	mvns	r6, r3
 80166fa:	fb00 4202 	mla	r2, r0, r2, r4
 80166fe:	f001 0707 	and.w	r7, r1, #7
 8016702:	10cc      	asrs	r4, r1, #3
 8016704:	f006 0607 	and.w	r6, r6, #7
 8016708:	21ff      	movs	r1, #255	; 0xff
 801670a:	fa41 f707 	asr.w	r7, r1, r7
 801670e:	fa01 f606 	lsl.w	r6, r1, r6
 8016712:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 8016716:	eb02 0504 	add.w	r5, r2, r4
 801671a:	b2ff      	uxtb	r7, r7
 801671c:	b2f6      	uxtb	r6, r6
 801671e:	5d10      	ldrb	r0, [r2, r4]
 8016720:	d103      	bne.n	801672a <GUI_USAGE_BM_AddHLine+0x52>
 8016722:	403e      	ands	r6, r7
 8016724:	4330      	orrs	r0, r6
 8016726:	5510      	strb	r0, [r2, r4]
 8016728:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801672a:	4338      	orrs	r0, r7
 801672c:	5510      	strb	r0, [r2, r4]
 801672e:	1e5c      	subs	r4, r3, #1
 8016730:	2c00      	cmp	r4, #0
 8016732:	f105 0501 	add.w	r5, r5, #1
 8016736:	dd04      	ble.n	8016742 <GUI_USAGE_BM_AddHLine+0x6a>
 8016738:	4628      	mov	r0, r5
 801673a:	4622      	mov	r2, r4
 801673c:	f004 f9ad 	bl	801aa9a <memset>
 8016740:	4425      	add	r5, r4
 8016742:	782b      	ldrb	r3, [r5, #0]
 8016744:	431e      	orrs	r6, r3
 8016746:	702e      	strb	r6, [r5, #0]
 8016748:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801674c <GUI_USAGE_BM_Create>:
 801674c:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 8016750:	f102 060f 	add.w	r6, r2, #15
 8016754:	1136      	asrs	r6, r6, #4
 8016756:	0076      	lsls	r6, r6, #1
 8016758:	4682      	mov	sl, r0
 801675a:	fb06 f003 	mul.w	r0, r6, r3
 801675e:	3014      	adds	r0, #20
 8016760:	4689      	mov	r9, r1
 8016762:	4690      	mov	r8, r2
 8016764:	461f      	mov	r7, r3
 8016766:	f7fc ff28 	bl	80135ba <GUI_ALLOC_AllocZero>
 801676a:	4683      	mov	fp, r0
 801676c:	b198      	cbz	r0, 8016796 <GUI_USAGE_BM_Create+0x4a>
 801676e:	f7fc fcb7 	bl	80130e0 <GUI_ALLOC_LockH>
 8016772:	4604      	mov	r4, r0
 8016774:	4b0a      	ldr	r3, [pc, #40]	; (80167a0 <GUI_USAGE_BM_Create+0x54>)
 8016776:	60a3      	str	r3, [r4, #8]
 8016778:	a802      	add	r0, sp, #8
 801677a:	2301      	movs	r3, #1
 801677c:	f840 4d04 	str.w	r4, [r0, #-4]!
 8016780:	f8a4 8004 	strh.w	r8, [r4, #4]
 8016784:	f8a4 a000 	strh.w	sl, [r4]
 8016788:	f8a4 9002 	strh.w	r9, [r4, #2]
 801678c:	80e7      	strh	r7, [r4, #6]
 801678e:	81a3      	strh	r3, [r4, #12]
 8016790:	6126      	str	r6, [r4, #16]
 8016792:	f7fc fcb3 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016796:	4658      	mov	r0, fp
 8016798:	b002      	add	sp, #8
 801679a:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 801679e:	bf00      	nop
 80167a0:	080210dc 	.word	0x080210dc

080167a4 <GUI_USAGE_DecUseCnt>:
 80167a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80167a6:	4605      	mov	r5, r0
 80167a8:	f7fc fc9a 	bl	80130e0 <GUI_ALLOC_LockH>
 80167ac:	4602      	mov	r2, r0
 80167ae:	a802      	add	r0, sp, #8
 80167b0:	8994      	ldrh	r4, [r2, #12]
 80167b2:	f840 2d04 	str.w	r2, [r0, #-4]!
 80167b6:	3c01      	subs	r4, #1
 80167b8:	b2a4      	uxth	r4, r4
 80167ba:	8194      	strh	r4, [r2, #12]
 80167bc:	f7fc fc9e 	bl	80130fc <GUI_ALLOC_UnlockH>
 80167c0:	b914      	cbnz	r4, 80167c8 <GUI_USAGE_DecUseCnt+0x24>
 80167c2:	4628      	mov	r0, r5
 80167c4:	f7fc fcc6 	bl	8013154 <GUI_ALLOC_Free>
 80167c8:	b003      	add	sp, #12
 80167ca:	bd30      	pop	{r4, r5, pc}

080167cc <GUI_USAGE_AddRect>:
 80167cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80167d0:	4605      	mov	r5, r0
 80167d2:	4688      	mov	r8, r1
 80167d4:	4617      	mov	r7, r2
 80167d6:	4699      	mov	r9, r3
 80167d8:	68a8      	ldr	r0, [r5, #8]
 80167da:	464b      	mov	r3, r9
 80167dc:	6846      	ldr	r6, [r0, #4]
 80167de:	4641      	mov	r1, r8
 80167e0:	4628      	mov	r0, r5
 80167e2:	1c54      	adds	r4, r2, #1
 80167e4:	47b0      	blx	r6
 80167e6:	9b08      	ldr	r3, [sp, #32]
 80167e8:	443b      	add	r3, r7
 80167ea:	42a3      	cmp	r3, r4
 80167ec:	d001      	beq.n	80167f2 <GUI_USAGE_AddRect+0x26>
 80167ee:	4622      	mov	r2, r4
 80167f0:	e7f2      	b.n	80167d8 <GUI_USAGE_AddRect+0xc>
 80167f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

080167f8 <GUI_MEMDEV_ReduceYSize>:
 80167f8:	b513      	push	{r0, r1, r4, lr}
 80167fa:	460c      	mov	r4, r1
 80167fc:	b918      	cbnz	r0, 8016806 <GUI_MEMDEV_ReduceYSize+0xe>
 80167fe:	4b08      	ldr	r3, [pc, #32]	; (8016820 <GUI_MEMDEV_ReduceYSize+0x28>)
 8016800:	681b      	ldr	r3, [r3, #0]
 8016802:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016804:	b150      	cbz	r0, 801681c <GUI_MEMDEV_ReduceYSize+0x24>
 8016806:	f7fc fc6b 	bl	80130e0 <GUI_ALLOC_LockH>
 801680a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801680e:	9001      	str	r0, [sp, #4]
 8016810:	429c      	cmp	r4, r3
 8016812:	bfb8      	it	lt
 8016814:	8144      	strhlt	r4, [r0, #10]
 8016816:	a801      	add	r0, sp, #4
 8016818:	f7fc fc70 	bl	80130fc <GUI_ALLOC_UnlockH>
 801681c:	b002      	add	sp, #8
 801681e:	bd10      	pop	{r4, pc}
 8016820:	2000016c 	.word	0x2000016c

08016824 <GUI_MEMDEV_Clear>:
 8016824:	b513      	push	{r0, r1, r4, lr}
 8016826:	b918      	cbnz	r0, 8016830 <GUI_MEMDEV_Clear+0xc>
 8016828:	4b0d      	ldr	r3, [pc, #52]	; (8016860 <GUI_MEMDEV_Clear+0x3c>)
 801682a:	681b      	ldr	r3, [r3, #0]
 801682c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 801682e:	b1a8      	cbz	r0, 801685c <GUI_MEMDEV_Clear+0x38>
 8016830:	f7fc fc56 	bl	80130e0 <GUI_ALLOC_LockH>
 8016834:	ab02      	add	r3, sp, #8
 8016836:	6944      	ldr	r4, [r0, #20]
 8016838:	f843 0d08 	str.w	r0, [r3, #-8]!
 801683c:	4668      	mov	r0, sp
 801683e:	f7fc fc5d 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016842:	b15c      	cbz	r4, 801685c <GUI_MEMDEV_Clear+0x38>
 8016844:	4620      	mov	r0, r4
 8016846:	f7fc fc4b 	bl	80130e0 <GUI_ALLOC_LockH>
 801684a:	ac02      	add	r4, sp, #8
 801684c:	6883      	ldr	r3, [r0, #8]
 801684e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8016852:	689b      	ldr	r3, [r3, #8]
 8016854:	4798      	blx	r3
 8016856:	4620      	mov	r0, r4
 8016858:	f7fc fc50 	bl	80130fc <GUI_ALLOC_UnlockH>
 801685c:	b002      	add	sp, #8
 801685e:	bd10      	pop	{r4, pc}
 8016860:	2000016c 	.word	0x2000016c

08016864 <_GetDevData>:
 8016864:	4802      	ldr	r0, [pc, #8]	; (8016870 <_GetDevData+0xc>)
 8016866:	2901      	cmp	r1, #1
 8016868:	bf18      	it	ne
 801686a:	2000      	movne	r0, #0
 801686c:	4770      	bx	lr
 801686e:	bf00      	nop
 8016870:	08021134 	.word	0x08021134

08016874 <_GetDevFunc>:
 8016874:	4802      	ldr	r0, [pc, #8]	; (8016880 <_GetDevFunc+0xc>)
 8016876:	2916      	cmp	r1, #22
 8016878:	bf18      	it	ne
 801687a:	2000      	movne	r0, #0
 801687c:	4770      	bx	lr
 801687e:	bf00      	nop
 8016880:	08015ce5 	.word	0x08015ce5

08016884 <_SetOrg>:
 8016884:	6800      	ldr	r0, [r0, #0]
 8016886:	b508      	push	{r3, lr}
 8016888:	b110      	cbz	r0, 8016890 <_SetOrg+0xc>
 801688a:	68c3      	ldr	r3, [r0, #12]
 801688c:	6a1b      	ldr	r3, [r3, #32]
 801688e:	4798      	blx	r3
 8016890:	bd08      	pop	{r3, pc}

08016892 <_GetDevProp>:
 8016892:	6800      	ldr	r0, [r0, #0]
 8016894:	b508      	push	{r3, lr}
 8016896:	b118      	cbz	r0, 80168a0 <_GetDevProp+0xe>
 8016898:	68c3      	ldr	r3, [r0, #12]
 801689a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801689c:	4798      	blx	r3
 801689e:	bd08      	pop	{r3, pc}
 80168a0:	f04f 30ff 	mov.w	r0, #4294967295
 80168a4:	bd08      	pop	{r3, pc}

080168a6 <_GetRect>:
 80168a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80168a8:	6880      	ldr	r0, [r0, #8]
 80168aa:	460c      	mov	r4, r1
 80168ac:	f7fc fc18 	bl	80130e0 <GUI_ALLOC_LockH>
 80168b0:	4603      	mov	r3, r0
 80168b2:	a802      	add	r0, sp, #8
 80168b4:	8899      	ldrh	r1, [r3, #4]
 80168b6:	88da      	ldrh	r2, [r3, #6]
 80168b8:	891d      	ldrh	r5, [r3, #8]
 80168ba:	f840 3d04 	str.w	r3, [r0, #-4]!
 80168be:	895b      	ldrh	r3, [r3, #10]
 80168c0:	8021      	strh	r1, [r4, #0]
 80168c2:	8062      	strh	r2, [r4, #2]
 80168c4:	4429      	add	r1, r5
 80168c6:	441a      	add	r2, r3
 80168c8:	3901      	subs	r1, #1
 80168ca:	3a01      	subs	r2, #1
 80168cc:	80a1      	strh	r1, [r4, #4]
 80168ce:	80e2      	strh	r2, [r4, #6]
 80168d0:	f7fc fc14 	bl	80130fc <GUI_ALLOC_UnlockH>
 80168d4:	b003      	add	sp, #12
 80168d6:	bd30      	pop	{r4, r5, pc}

080168d8 <_XY2PTR>:
 80168d8:	4b0e      	ldr	r3, [pc, #56]	; (8016914 <_XY2PTR+0x3c>)
 80168da:	681b      	ldr	r3, [r3, #0]
 80168dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80168de:	4605      	mov	r5, r0
 80168e0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80168e2:	460e      	mov	r6, r1
 80168e4:	f7fc fbfc 	bl	80130e0 <GUI_ALLOC_LockH>
 80168e8:	4603      	mov	r3, r0
 80168ea:	a802      	add	r0, sp, #8
 80168ec:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 80168f0:	f840 3d04 	str.w	r3, [r0, #-4]!
 80168f4:	f103 0118 	add.w	r1, r3, #24
 80168f8:	1b36      	subs	r6, r6, r4
 80168fa:	68dc      	ldr	r4, [r3, #12]
 80168fc:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8016900:	fb04 1406 	mla	r4, r4, r6, r1
 8016904:	1aed      	subs	r5, r5, r3
 8016906:	f7fc fbf9 	bl	80130fc <GUI_ALLOC_UnlockH>
 801690a:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 801690e:	4620      	mov	r0, r4
 8016910:	b002      	add	sp, #8
 8016912:	bd70      	pop	{r4, r5, r6, pc}
 8016914:	2000016c 	.word	0x2000016c

08016918 <_GetPixelIndex>:
 8016918:	b508      	push	{r3, lr}
 801691a:	4608      	mov	r0, r1
 801691c:	4611      	mov	r1, r2
 801691e:	f7ff ffdb 	bl	80168d8 <_XY2PTR>
 8016922:	8800      	ldrh	r0, [r0, #0]
 8016924:	bd08      	pop	{r3, pc}
	...

08016928 <_XorPixel>:
 8016928:	4b14      	ldr	r3, [pc, #80]	; (801697c <_XorPixel+0x54>)
 801692a:	681b      	ldr	r3, [r3, #0]
 801692c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801692e:	4607      	mov	r7, r0
 8016930:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016932:	4615      	mov	r5, r2
 8016934:	460e      	mov	r6, r1
 8016936:	f7fc fbd3 	bl	80130e0 <GUI_ALLOC_LockH>
 801693a:	4629      	mov	r1, r5
 801693c:	9000      	str	r0, [sp, #0]
 801693e:	4630      	mov	r0, r6
 8016940:	f7ff ffca 	bl	80168d8 <_XY2PTR>
 8016944:	693b      	ldr	r3, [r7, #16]
 8016946:	4604      	mov	r4, r0
 8016948:	689b      	ldr	r3, [r3, #8]
 801694a:	4798      	blx	r3
 801694c:	8823      	ldrh	r3, [r4, #0]
 801694e:	4058      	eors	r0, r3
 8016950:	9b00      	ldr	r3, [sp, #0]
 8016952:	8020      	strh	r0, [r4, #0]
 8016954:	6958      	ldr	r0, [r3, #20]
 8016956:	b160      	cbz	r0, 8016972 <_XorPixel+0x4a>
 8016958:	f7fc fbc2 	bl	80130e0 <GUI_ALLOC_LockH>
 801695c:	ac02      	add	r4, sp, #8
 801695e:	6883      	ldr	r3, [r0, #8]
 8016960:	f844 0d04 	str.w	r0, [r4, #-4]!
 8016964:	681b      	ldr	r3, [r3, #0]
 8016966:	4631      	mov	r1, r6
 8016968:	462a      	mov	r2, r5
 801696a:	4798      	blx	r3
 801696c:	4620      	mov	r0, r4
 801696e:	f7fc fbc5 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016972:	4668      	mov	r0, sp
 8016974:	f7fc fbc2 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016978:	b003      	add	sp, #12
 801697a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801697c:	2000016c 	.word	0x2000016c

08016980 <_SetPixelIndex>:
 8016980:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016982:	461c      	mov	r4, r3
 8016984:	4b10      	ldr	r3, [pc, #64]	; (80169c8 <_SetPixelIndex+0x48>)
 8016986:	681b      	ldr	r3, [r3, #0]
 8016988:	6e18      	ldr	r0, [r3, #96]	; 0x60
 801698a:	460e      	mov	r6, r1
 801698c:	4615      	mov	r5, r2
 801698e:	f7fc fba7 	bl	80130e0 <GUI_ALLOC_LockH>
 8016992:	4629      	mov	r1, r5
 8016994:	9000      	str	r0, [sp, #0]
 8016996:	4630      	mov	r0, r6
 8016998:	f7ff ff9e 	bl	80168d8 <_XY2PTR>
 801699c:	9b00      	ldr	r3, [sp, #0]
 801699e:	8004      	strh	r4, [r0, #0]
 80169a0:	6958      	ldr	r0, [r3, #20]
 80169a2:	b160      	cbz	r0, 80169be <_SetPixelIndex+0x3e>
 80169a4:	f7fc fb9c 	bl	80130e0 <GUI_ALLOC_LockH>
 80169a8:	ac02      	add	r4, sp, #8
 80169aa:	6883      	ldr	r3, [r0, #8]
 80169ac:	f844 0d04 	str.w	r0, [r4, #-4]!
 80169b0:	681b      	ldr	r3, [r3, #0]
 80169b2:	4631      	mov	r1, r6
 80169b4:	462a      	mov	r2, r5
 80169b6:	4798      	blx	r3
 80169b8:	4620      	mov	r0, r4
 80169ba:	f7fc fb9f 	bl	80130fc <GUI_ALLOC_UnlockH>
 80169be:	4668      	mov	r0, sp
 80169c0:	f7fc fb9c 	bl	80130fc <GUI_ALLOC_UnlockH>
 80169c4:	b002      	add	sp, #8
 80169c6:	bd70      	pop	{r4, r5, r6, pc}
 80169c8:	2000016c 	.word	0x2000016c

080169cc <_DrawVLine>:
 80169cc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80169d0:	4d2c      	ldr	r5, [pc, #176]	; (8016a84 <_DrawVLine+0xb8>)
 80169d2:	461e      	mov	r6, r3
 80169d4:	682b      	ldr	r3, [r5, #0]
 80169d6:	4681      	mov	r9, r0
 80169d8:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80169da:	460f      	mov	r7, r1
 80169dc:	4614      	mov	r4, r2
 80169de:	f7fc fb7f 	bl	80130e0 <GUI_ALLOC_LockH>
 80169e2:	9000      	str	r0, [sp, #0]
 80169e4:	6940      	ldr	r0, [r0, #20]
 80169e6:	46aa      	mov	sl, r5
 80169e8:	b108      	cbz	r0, 80169ee <_DrawVLine+0x22>
 80169ea:	f7fc fb79 	bl	80130e0 <GUI_ALLOC_LockH>
 80169ee:	9001      	str	r0, [sp, #4]
 80169f0:	4621      	mov	r1, r4
 80169f2:	4638      	mov	r0, r7
 80169f4:	f7ff ff70 	bl	80168d8 <_XY2PTR>
 80169f8:	9b00      	ldr	r3, [sp, #0]
 80169fa:	f8d3 800c 	ldr.w	r8, [r3, #12]
 80169fe:	f8da 3000 	ldr.w	r3, [sl]
 8016a02:	7c1a      	ldrb	r2, [r3, #16]
 8016a04:	07d2      	lsls	r2, r2, #31
 8016a06:	4605      	mov	r5, r0
 8016a08:	d51f      	bpl.n	8016a4a <_DrawVLine+0x7e>
 8016a0a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8016a0e:	689b      	ldr	r3, [r3, #8]
 8016a10:	4798      	blx	r3
 8016a12:	fa1f f880 	uxth.w	r8, r0
 8016a16:	9801      	ldr	r0, [sp, #4]
 8016a18:	b120      	cbz	r0, 8016a24 <_DrawVLine+0x58>
 8016a1a:	6883      	ldr	r3, [r0, #8]
 8016a1c:	4639      	mov	r1, r7
 8016a1e:	681b      	ldr	r3, [r3, #0]
 8016a20:	4622      	mov	r2, r4
 8016a22:	4798      	blx	r3
 8016a24:	882b      	ldrh	r3, [r5, #0]
 8016a26:	ea88 0303 	eor.w	r3, r8, r3
 8016a2a:	802b      	strh	r3, [r5, #0]
 8016a2c:	9b00      	ldr	r3, [sp, #0]
 8016a2e:	3401      	adds	r4, #1
 8016a30:	68db      	ldr	r3, [r3, #12]
 8016a32:	42b4      	cmp	r4, r6
 8016a34:	441d      	add	r5, r3
 8016a36:	ddee      	ble.n	8016a16 <_DrawVLine+0x4a>
 8016a38:	4668      	mov	r0, sp
 8016a3a:	f7fc fb5f 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016a3e:	9b01      	ldr	r3, [sp, #4]
 8016a40:	b1eb      	cbz	r3, 8016a7e <_DrawVLine+0xb2>
 8016a42:	a801      	add	r0, sp, #4
 8016a44:	f7fc fb5a 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016a48:	e019      	b.n	8016a7e <_DrawVLine+0xb2>
 8016a4a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016a4c:	f8d3 9000 	ldr.w	r9, [r3]
 8016a50:	9b01      	ldr	r3, [sp, #4]
 8016a52:	b163      	cbz	r3, 8016a6e <_DrawVLine+0xa2>
 8016a54:	9801      	ldr	r0, [sp, #4]
 8016a56:	6883      	ldr	r3, [r0, #8]
 8016a58:	4622      	mov	r2, r4
 8016a5a:	681b      	ldr	r3, [r3, #0]
 8016a5c:	4639      	mov	r1, r7
 8016a5e:	3401      	adds	r4, #1
 8016a60:	4798      	blx	r3
 8016a62:	42b4      	cmp	r4, r6
 8016a64:	f8a5 9000 	strh.w	r9, [r5]
 8016a68:	4445      	add	r5, r8
 8016a6a:	ddf3      	ble.n	8016a54 <_DrawVLine+0x88>
 8016a6c:	e7e4      	b.n	8016a38 <_DrawVLine+0x6c>
 8016a6e:	1b34      	subs	r4, r6, r4
 8016a70:	3401      	adds	r4, #1
 8016a72:	3c01      	subs	r4, #1
 8016a74:	f8a5 9000 	strh.w	r9, [r5]
 8016a78:	4445      	add	r5, r8
 8016a7a:	d1fa      	bne.n	8016a72 <_DrawVLine+0xa6>
 8016a7c:	e7dc      	b.n	8016a38 <_DrawVLine+0x6c>
 8016a7e:	b002      	add	sp, #8
 8016a80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016a84:	2000016c 	.word	0x2000016c

08016a88 <_FillRect>:
 8016a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a8c:	4f2a      	ldr	r7, [pc, #168]	; (8016b38 <_FillRect+0xb0>)
 8016a8e:	4614      	mov	r4, r2
 8016a90:	683a      	ldr	r2, [r7, #0]
 8016a92:	4698      	mov	r8, r3
 8016a94:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8016a96:	b087      	sub	sp, #28
 8016a98:	681b      	ldr	r3, [r3, #0]
 8016a9a:	9302      	str	r3, [sp, #8]
 8016a9c:	4682      	mov	sl, r0
 8016a9e:	6e10      	ldr	r0, [r2, #96]	; 0x60
 8016aa0:	460e      	mov	r6, r1
 8016aa2:	f7fc fb1d 	bl	80130e0 <GUI_ALLOC_LockH>
 8016aa6:	4621      	mov	r1, r4
 8016aa8:	9004      	str	r0, [sp, #16]
 8016aaa:	4630      	mov	r0, r6
 8016aac:	f7ff ff14 	bl	80168d8 <_XY2PTR>
 8016ab0:	9a04      	ldr	r2, [sp, #16]
 8016ab2:	4605      	mov	r5, r0
 8016ab4:	6950      	ldr	r0, [r2, #20]
 8016ab6:	68d3      	ldr	r3, [r2, #12]
 8016ab8:	9303      	str	r3, [sp, #12]
 8016aba:	ebc6 0908 	rsb	r9, r6, r8
 8016abe:	f109 0801 	add.w	r8, r9, #1
 8016ac2:	46bb      	mov	fp, r7
 8016ac4:	b180      	cbz	r0, 8016ae8 <_FillRect+0x60>
 8016ac6:	f7fc fb0b 	bl	80130e0 <GUI_ALLOC_LockH>
 8016aca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016acc:	af06      	add	r7, sp, #24
 8016ace:	1b13      	subs	r3, r2, r4
 8016ad0:	f847 0d04 	str.w	r0, [r7, #-4]!
 8016ad4:	3301      	adds	r3, #1
 8016ad6:	9300      	str	r3, [sp, #0]
 8016ad8:	4631      	mov	r1, r6
 8016ada:	4622      	mov	r2, r4
 8016adc:	4643      	mov	r3, r8
 8016ade:	f7ff fe75 	bl	80167cc <GUI_USAGE_AddRect>
 8016ae2:	4638      	mov	r0, r7
 8016ae4:	f7fc fb0a 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016ae8:	ea4f 0649 	mov.w	r6, r9, lsl #1
 8016aec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016aee:	429c      	cmp	r4, r3
 8016af0:	dc1c      	bgt.n	8016b2c <_FillRect+0xa4>
 8016af2:	f8db 3000 	ldr.w	r3, [fp]
 8016af6:	7c1b      	ldrb	r3, [r3, #16]
 8016af8:	07db      	lsls	r3, r3, #31
 8016afa:	d50d      	bpl.n	8016b18 <_FillRect+0x90>
 8016afc:	f8da 3010 	ldr.w	r3, [sl, #16]
 8016b00:	689b      	ldr	r3, [r3, #8]
 8016b02:	4798      	blx	r3
 8016b04:	19aa      	adds	r2, r5, r6
 8016b06:	b280      	uxth	r0, r0
 8016b08:	1eab      	subs	r3, r5, #2
 8016b0a:	8859      	ldrh	r1, [r3, #2]
 8016b0c:	4041      	eors	r1, r0
 8016b0e:	f823 1f02 	strh.w	r1, [r3, #2]!
 8016b12:	4293      	cmp	r3, r2
 8016b14:	d1f9      	bne.n	8016b0a <_FillRect+0x82>
 8016b16:	e005      	b.n	8016b24 <_FillRect+0x9c>
 8016b18:	9b02      	ldr	r3, [sp, #8]
 8016b1a:	4628      	mov	r0, r5
 8016b1c:	b299      	uxth	r1, r3
 8016b1e:	4642      	mov	r2, r8
 8016b20:	f7f9 ff0a 	bl	8010938 <GUI__memset16>
 8016b24:	9a03      	ldr	r2, [sp, #12]
 8016b26:	3401      	adds	r4, #1
 8016b28:	4415      	add	r5, r2
 8016b2a:	e7df      	b.n	8016aec <_FillRect+0x64>
 8016b2c:	a804      	add	r0, sp, #16
 8016b2e:	f7fc fae5 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016b32:	b007      	add	sp, #28
 8016b34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b38:	2000016c 	.word	0x2000016c

08016b3c <_DrawHLine>:
 8016b3c:	b507      	push	{r0, r1, r2, lr}
 8016b3e:	9200      	str	r2, [sp, #0]
 8016b40:	f7ff ffa2 	bl	8016a88 <_FillRect>
 8016b44:	b003      	add	sp, #12
 8016b46:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08016b4c <_DrawBitmap>:
 8016b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b50:	4c8a      	ldr	r4, [pc, #552]	; (8016d7c <_DrawBitmap+0x230>)
 8016b52:	b093      	sub	sp, #76	; 0x4c
 8016b54:	469b      	mov	fp, r3
 8016b56:	6823      	ldr	r3, [r4, #0]
 8016b58:	900d      	str	r0, [sp, #52]	; 0x34
 8016b5a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016b5c:	9207      	str	r2, [sp, #28]
 8016b5e:	460d      	mov	r5, r1
 8016b60:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 8016b64:	f7fc fabc 	bl	80130e0 <GUI_ALLOC_LockH>
 8016b68:	9010      	str	r0, [sp, #64]	; 0x40
 8016b6a:	6940      	ldr	r0, [r0, #20]
 8016b6c:	b108      	cbz	r0, 8016b72 <_DrawBitmap+0x26>
 8016b6e:	f7fc fab7 	bl	80130e0 <GUI_ALLOC_LockH>
 8016b72:	9011      	str	r0, [sp, #68]	; 0x44
 8016b74:	a812      	add	r0, sp, #72	; 0x48
 8016b76:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8016b7a:	68db      	ldr	r3, [r3, #12]
 8016b7c:	9308      	str	r3, [sp, #32]
 8016b7e:	f7fc fabd 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016b82:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8016b84:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016b86:	442e      	add	r6, r5
 8016b88:	9604      	str	r6, [sp, #16]
 8016b8a:	b150      	cbz	r0, 8016ba2 <_DrawBitmap+0x56>
 8016b8c:	6823      	ldr	r3, [r4, #0]
 8016b8e:	7c1b      	ldrb	r3, [r3, #16]
 8016b90:	0799      	lsls	r1, r3, #30
 8016b92:	d106      	bne.n	8016ba2 <_DrawBitmap+0x56>
 8016b94:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8016b96:	9700      	str	r7, [sp, #0]
 8016b98:	4631      	mov	r1, r6
 8016b9a:	9a07      	ldr	r2, [sp, #28]
 8016b9c:	465b      	mov	r3, fp
 8016b9e:	f7ff fe15 	bl	80167cc <GUI_USAGE_AddRect>
 8016ba2:	9804      	ldr	r0, [sp, #16]
 8016ba4:	9907      	ldr	r1, [sp, #28]
 8016ba6:	f7ff fe97 	bl	80168d8 <_XY2PTR>
 8016baa:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8016bac:	2e10      	cmp	r6, #16
 8016bae:	4604      	mov	r4, r0
 8016bb0:	d139      	bne.n	8016c26 <_DrawBitmap+0xda>
 8016bb2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016bb4:	b11b      	cbz	r3, 8016bbe <_DrawBitmap+0x72>
 8016bb6:	ea4f 064b 	mov.w	r6, fp, lsl #1
 8016bba:	2500      	movs	r5, #0
 8016bbc:	e014      	b.n	8016be8 <_DrawBitmap+0x9c>
 8016bbe:	4b70      	ldr	r3, [pc, #448]	; (8016d80 <_DrawBitmap+0x234>)
 8016bc0:	681d      	ldr	r5, [r3, #0]
 8016bc2:	2d00      	cmp	r5, #0
 8016bc4:	d0f7      	beq.n	8016bb6 <_DrawBitmap+0x6a>
 8016bc6:	9e08      	ldr	r6, [sp, #32]
 8016bc8:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8016bca:	9600      	str	r6, [sp, #0]
 8016bcc:	9701      	str	r7, [sp, #4]
 8016bce:	4651      	mov	r1, sl
 8016bd0:	465a      	mov	r2, fp
 8016bd2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016bd4:	47a8      	blx	r5
 8016bd6:	e345      	b.n	8017264 <_DrawBitmap+0x718>
 8016bd8:	f1ba 0f00 	cmp.w	sl, #0
 8016bdc:	d10a      	bne.n	8016bf4 <_DrawBitmap+0xa8>
 8016bde:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8016be0:	44ba      	add	sl, r7
 8016be2:	9f08      	ldr	r7, [sp, #32]
 8016be4:	3501      	adds	r5, #1
 8016be6:	443c      	add	r4, r7
 8016be8:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8016bea:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 8016bee:	42bd      	cmp	r5, r7
 8016bf0:	dbf2      	blt.n	8016bd8 <_DrawBitmap+0x8c>
 8016bf2:	e013      	b.n	8016c1c <_DrawBitmap+0xd0>
 8016bf4:	2c00      	cmp	r4, #0
 8016bf6:	d0f2      	beq.n	8016bde <_DrawBitmap+0x92>
 8016bf8:	4620      	mov	r0, r4
 8016bfa:	4651      	mov	r1, sl
 8016bfc:	4632      	mov	r2, r6
 8016bfe:	f003 ff28 	bl	801aa52 <memcpy>
 8016c02:	f1b8 0f00 	cmp.w	r8, #0
 8016c06:	d0ea      	beq.n	8016bde <_DrawBitmap+0x92>
 8016c08:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8016c0c:	9a07      	ldr	r2, [sp, #28]
 8016c0e:	685f      	ldr	r7, [r3, #4]
 8016c10:	9904      	ldr	r1, [sp, #16]
 8016c12:	4640      	mov	r0, r8
 8016c14:	442a      	add	r2, r5
 8016c16:	465b      	mov	r3, fp
 8016c18:	47b8      	blx	r7
 8016c1a:	e7e0      	b.n	8016bde <_DrawBitmap+0x92>
 8016c1c:	f1b8 0f00 	cmp.w	r8, #0
 8016c20:	f040 831d 	bne.w	801725e <_DrawBitmap+0x712>
 8016c24:	e31e      	b.n	8017264 <_DrawBitmap+0x718>
 8016c26:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8016c28:	2e17      	cmp	r6, #23
 8016c2a:	dd38      	ble.n	8016c9e <_DrawBitmap+0x152>
 8016c2c:	2600      	movs	r6, #0
 8016c2e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8016c30:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016c32:	42be      	cmp	r6, r7
 8016c34:	f280 809d 	bge.w	8016d72 <_DrawBitmap+0x226>
 8016c38:	9f07      	ldr	r7, [sp, #28]
 8016c3a:	4437      	add	r7, r6
 8016c3c:	f1ba 0f00 	cmp.w	sl, #0
 8016c40:	d027      	beq.n	8016c92 <_DrawBitmap+0x146>
 8016c42:	b334      	cbz	r4, 8016c92 <_DrawBitmap+0x146>
 8016c44:	b13d      	cbz	r5, 8016c56 <_DrawBitmap+0x10a>
 8016c46:	68ab      	ldr	r3, [r5, #8]
 8016c48:	9904      	ldr	r1, [sp, #16]
 8016c4a:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8016c4e:	4628      	mov	r0, r5
 8016c50:	463a      	mov	r2, r7
 8016c52:	465b      	mov	r3, fp
 8016c54:	47e0      	blx	ip
 8016c56:	1ea3      	subs	r3, r4, #2
 8016c58:	f1aa 0904 	sub.w	r9, sl, #4
 8016c5c:	9303      	str	r3, [sp, #12]
 8016c5e:	46d8      	mov	r8, fp
 8016c60:	9b04      	ldr	r3, [sp, #16]
 8016c62:	980d      	ldr	r0, [sp, #52]	; 0x34
 8016c64:	445b      	add	r3, fp
 8016c66:	ebc8 0103 	rsb	r1, r8, r3
 8016c6a:	6903      	ldr	r3, [r0, #16]
 8016c6c:	f859 0f04 	ldr.w	r0, [r9, #4]!
 8016c70:	681b      	ldr	r3, [r3, #0]
 8016c72:	9102      	str	r1, [sp, #8]
 8016c74:	4798      	blx	r3
 8016c76:	9b03      	ldr	r3, [sp, #12]
 8016c78:	9902      	ldr	r1, [sp, #8]
 8016c7a:	f823 0f02 	strh.w	r0, [r3, #2]!
 8016c7e:	9303      	str	r3, [sp, #12]
 8016c80:	b125      	cbz	r5, 8016c8c <_DrawBitmap+0x140>
 8016c82:	68ab      	ldr	r3, [r5, #8]
 8016c84:	4628      	mov	r0, r5
 8016c86:	681b      	ldr	r3, [r3, #0]
 8016c88:	463a      	mov	r2, r7
 8016c8a:	4798      	blx	r3
 8016c8c:	f1b8 0801 	subs.w	r8, r8, #1
 8016c90:	d1e6      	bne.n	8016c60 <_DrawBitmap+0x114>
 8016c92:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8016c94:	44ba      	add	sl, r7
 8016c96:	9f08      	ldr	r7, [sp, #32]
 8016c98:	3601      	adds	r6, #1
 8016c9a:	443c      	add	r4, r7
 8016c9c:	e7c7      	b.n	8016c2e <_DrawBitmap+0xe2>
 8016c9e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8016ca0:	2e08      	cmp	r6, #8
 8016ca2:	f100 0402 	add.w	r4, r0, #2
 8016ca6:	d16d      	bne.n	8016d84 <_DrawBitmap+0x238>
 8016ca8:	9e07      	ldr	r6, [sp, #28]
 8016caa:	9f07      	ldr	r7, [sp, #28]
 8016cac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016cae:	1bf3      	subs	r3, r6, r7
 8016cb0:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8016cb2:	42bb      	cmp	r3, r7
 8016cb4:	f1a4 0002 	sub.w	r0, r4, #2
 8016cb8:	da5b      	bge.n	8016d72 <_DrawBitmap+0x226>
 8016cba:	4b30      	ldr	r3, [pc, #192]	; (8016d7c <_DrawBitmap+0x230>)
 8016cbc:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8016cbe:	681b      	ldr	r3, [r3, #0]
 8016cc0:	7c1b      	ldrb	r3, [r3, #16]
 8016cc2:	b367      	cbz	r7, 8016d1e <_DrawBitmap+0x1d2>
 8016cc4:	f013 0303 	ands.w	r3, r3, #3
 8016cc8:	d004      	beq.n	8016cd4 <_DrawBitmap+0x188>
 8016cca:	2b02      	cmp	r3, #2
 8016ccc:	d14b      	bne.n	8016d66 <_DrawBitmap+0x21a>
 8016cce:	46a0      	mov	r8, r4
 8016cd0:	9f04      	ldr	r7, [sp, #16]
 8016cd2:	e01d      	b.n	8016d10 <_DrawBitmap+0x1c4>
 8016cd4:	f81a 2003 	ldrb.w	r2, [sl, r3]
 8016cd8:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8016cda:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8016cde:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 8016ce2:	3301      	adds	r3, #1
 8016ce4:	455b      	cmp	r3, fp
 8016ce6:	d1f5      	bne.n	8016cd4 <_DrawBitmap+0x188>
 8016ce8:	e03d      	b.n	8016d66 <_DrawBitmap+0x21a>
 8016cea:	9921      	ldr	r1, [sp, #132]	; 0x84
 8016cec:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8016cf0:	f828 3c02 	strh.w	r3, [r8, #-2]
 8016cf4:	b12d      	cbz	r5, 8016d02 <_DrawBitmap+0x1b6>
 8016cf6:	68ab      	ldr	r3, [r5, #8]
 8016cf8:	4628      	mov	r0, r5
 8016cfa:	681b      	ldr	r3, [r3, #0]
 8016cfc:	4639      	mov	r1, r7
 8016cfe:	4632      	mov	r2, r6
 8016d00:	4798      	blx	r3
 8016d02:	9b04      	ldr	r3, [sp, #16]
 8016d04:	3701      	adds	r7, #1
 8016d06:	445b      	add	r3, fp
 8016d08:	42bb      	cmp	r3, r7
 8016d0a:	f108 0802 	add.w	r8, r8, #2
 8016d0e:	d02a      	beq.n	8016d66 <_DrawBitmap+0x21a>
 8016d10:	9804      	ldr	r0, [sp, #16]
 8016d12:	ebc0 030a 	rsb	r3, r0, sl
 8016d16:	5ddb      	ldrb	r3, [r3, r7]
 8016d18:	2b00      	cmp	r3, #0
 8016d1a:	d0f2      	beq.n	8016d02 <_DrawBitmap+0x1b6>
 8016d1c:	e7e5      	b.n	8016cea <_DrawBitmap+0x19e>
 8016d1e:	f013 0303 	ands.w	r3, r3, #3
 8016d22:	d004      	beq.n	8016d2e <_DrawBitmap+0x1e2>
 8016d24:	2b02      	cmp	r3, #2
 8016d26:	d11e      	bne.n	8016d66 <_DrawBitmap+0x21a>
 8016d28:	46a0      	mov	r8, r4
 8016d2a:	9f04      	ldr	r7, [sp, #16]
 8016d2c:	e014      	b.n	8016d58 <_DrawBitmap+0x20c>
 8016d2e:	4651      	mov	r1, sl
 8016d30:	465a      	mov	r2, fp
 8016d32:	f003 fe8e 	bl	801aa52 <memcpy>
 8016d36:	e016      	b.n	8016d66 <_DrawBitmap+0x21a>
 8016d38:	f828 3c02 	strh.w	r3, [r8, #-2]
 8016d3c:	b12d      	cbz	r5, 8016d4a <_DrawBitmap+0x1fe>
 8016d3e:	68ab      	ldr	r3, [r5, #8]
 8016d40:	4628      	mov	r0, r5
 8016d42:	681b      	ldr	r3, [r3, #0]
 8016d44:	4639      	mov	r1, r7
 8016d46:	4632      	mov	r2, r6
 8016d48:	4798      	blx	r3
 8016d4a:	9b04      	ldr	r3, [sp, #16]
 8016d4c:	3701      	adds	r7, #1
 8016d4e:	445b      	add	r3, fp
 8016d50:	42bb      	cmp	r3, r7
 8016d52:	f108 0802 	add.w	r8, r8, #2
 8016d56:	d006      	beq.n	8016d66 <_DrawBitmap+0x21a>
 8016d58:	9a04      	ldr	r2, [sp, #16]
 8016d5a:	ebc2 030a 	rsb	r3, r2, sl
 8016d5e:	5ddb      	ldrb	r3, [r3, r7]
 8016d60:	2b00      	cmp	r3, #0
 8016d62:	d0f2      	beq.n	8016d4a <_DrawBitmap+0x1fe>
 8016d64:	e7e8      	b.n	8016d38 <_DrawBitmap+0x1ec>
 8016d66:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8016d68:	44ba      	add	sl, r7
 8016d6a:	9f08      	ldr	r7, [sp, #32]
 8016d6c:	3601      	adds	r6, #1
 8016d6e:	443c      	add	r4, r7
 8016d70:	e79b      	b.n	8016caa <_DrawBitmap+0x15e>
 8016d72:	2d00      	cmp	r5, #0
 8016d74:	f040 8273 	bne.w	801725e <_DrawBitmap+0x712>
 8016d78:	e274      	b.n	8017264 <_DrawBitmap+0x718>
 8016d7a:	bf00      	nop
 8016d7c:	2000016c 	.word	0x2000016c
 8016d80:	200196e4 	.word	0x200196e4
 8016d84:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8016d86:	4bab      	ldr	r3, [pc, #684]	; (8017034 <_DrawBitmap+0x4e8>)
 8016d88:	9f20      	ldr	r7, [sp, #128]	; 0x80
 8016d8a:	9409      	str	r4, [sp, #36]	; 0x24
 8016d8c:	2e00      	cmp	r6, #0
 8016d8e:	bf08      	it	eq
 8016d90:	461e      	moveq	r6, r3
 8016d92:	9621      	str	r6, [sp, #132]	; 0x84
 8016d94:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8016d96:	0076      	lsls	r6, r6, #1
 8016d98:	960e      	str	r6, [sp, #56]	; 0x38
 8016d9a:	00bf      	lsls	r7, r7, #2
 8016d9c:	9e07      	ldr	r6, [sp, #28]
 8016d9e:	970f      	str	r7, [sp, #60]	; 0x3c
 8016da0:	9605      	str	r6, [sp, #20]
 8016da2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016da4:	9e05      	ldr	r6, [sp, #20]
 8016da6:	9f07      	ldr	r7, [sp, #28]
 8016da8:	1e9c      	subs	r4, r3, #2
 8016daa:	1bf3      	subs	r3, r6, r7
 8016dac:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8016dae:	42b3      	cmp	r3, r6
 8016db0:	f280 8253 	bge.w	801725a <_DrawBitmap+0x70e>
 8016db4:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8016db6:	2f02      	cmp	r7, #2
 8016db8:	f000 80d9 	beq.w	8016f6e <_DrawBitmap+0x422>
 8016dbc:	2f04      	cmp	r7, #4
 8016dbe:	f000 8178 	beq.w	80170b2 <_DrawBitmap+0x566>
 8016dc2:	2f01      	cmp	r7, #1
 8016dc4:	f040 823f 	bne.w	8017246 <_DrawBitmap+0x6fa>
 8016dc8:	f8df 9270 	ldr.w	r9, [pc, #624]	; 801703c <_DrawBitmap+0x4f0>
 8016dcc:	f8d9 3000 	ldr.w	r3, [r9]
 8016dd0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016dd2:	f7fc f985 	bl	80130e0 <GUI_ALLOC_LockH>
 8016dd6:	f89a 3000 	ldrb.w	r3, [sl]
 8016dda:	4a97      	ldr	r2, [pc, #604]	; (8017038 <_DrawBitmap+0x4ec>)
 8016ddc:	9010      	str	r0, [sp, #64]	; 0x40
 8016dde:	5cd5      	ldrb	r5, [r2, r3]
 8016de0:	f8d9 3000 	ldr.w	r3, [r9]
 8016de4:	9820      	ldr	r0, [sp, #128]	; 0x80
 8016de6:	7c1b      	ldrb	r3, [r3, #16]
 8016de8:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8016dea:	f003 0303 	and.w	r3, r3, #3
 8016dee:	2b02      	cmp	r3, #2
 8016df0:	465e      	mov	r6, fp
 8016df2:	f1c0 0808 	rsb	r8, r0, #8
 8016df6:	fa45 f500 	asr.w	r5, r5, r0
 8016dfa:	d022      	beq.n	8016e42 <_DrawBitmap+0x2f6>
 8016dfc:	2b03      	cmp	r3, #3
 8016dfe:	d062      	beq.n	8016ec6 <_DrawBitmap+0x37a>
 8016e00:	2b01      	cmp	r3, #1
 8016e02:	d060      	beq.n	8016ec6 <_DrawBitmap+0x37a>
 8016e04:	4652      	mov	r2, sl
 8016e06:	4546      	cmp	r6, r8
 8016e08:	bf38      	it	cc
 8016e0a:	46b0      	movcc	r8, r6
 8016e0c:	ebc8 0606 	rsb	r6, r8, r6
 8016e10:	4643      	mov	r3, r8
 8016e12:	4621      	mov	r1, r4
 8016e14:	f005 0001 	and.w	r0, r5, #1
 8016e18:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8016e1a:	3b01      	subs	r3, #1
 8016e1c:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8016e20:	f821 0b02 	strh.w	r0, [r1], #2
 8016e24:	ea4f 0555 	mov.w	r5, r5, lsr #1
 8016e28:	d1f4      	bne.n	8016e14 <_DrawBitmap+0x2c8>
 8016e2a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8016e2e:	2e00      	cmp	r6, #0
 8016e30:	f000 8099 	beq.w	8016f66 <_DrawBitmap+0x41a>
 8016e34:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8016e38:	497f      	ldr	r1, [pc, #508]	; (8017038 <_DrawBitmap+0x4ec>)
 8016e3a:	f04f 0808 	mov.w	r8, #8
 8016e3e:	5ccd      	ldrb	r5, [r1, r3]
 8016e40:	e7e1      	b.n	8016e06 <_DrawBitmap+0x2ba>
 8016e42:	9821      	ldr	r0, [sp, #132]	; 0x84
 8016e44:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8016e48:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 8016e4c:	f8cd a018 	str.w	sl, [sp, #24]
 8016e50:	4546      	cmp	r6, r8
 8016e52:	bf38      	it	cc
 8016e54:	46b0      	movcc	r8, r6
 8016e56:	ebc8 0606 	rsb	r6, r8, r6
 8016e5a:	b32f      	cbz	r7, 8016ea8 <_DrawBitmap+0x35c>
 8016e5c:	b91d      	cbnz	r5, 8016e66 <_DrawBitmap+0x31a>
 8016e5e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8016e62:	44c1      	add	r9, r8
 8016e64:	e024      	b.n	8016eb0 <_DrawBitmap+0x364>
 8016e66:	07ea      	lsls	r2, r5, #31
 8016e68:	d50b      	bpl.n	8016e82 <_DrawBitmap+0x336>
 8016e6a:	68bb      	ldr	r3, [r7, #8]
 8016e6c:	9a05      	ldr	r2, [sp, #20]
 8016e6e:	681b      	ldr	r3, [r3, #0]
 8016e70:	f8cd c008 	str.w	ip, [sp, #8]
 8016e74:	4638      	mov	r0, r7
 8016e76:	4649      	mov	r1, r9
 8016e78:	4798      	blx	r3
 8016e7a:	f8dd c008 	ldr.w	ip, [sp, #8]
 8016e7e:	f8a4 c000 	strh.w	ip, [r4]
 8016e82:	f1b8 0801 	subs.w	r8, r8, #1
 8016e86:	f109 0901 	add.w	r9, r9, #1
 8016e8a:	f104 0402 	add.w	r4, r4, #2
 8016e8e:	d00f      	beq.n	8016eb0 <_DrawBitmap+0x364>
 8016e90:	086d      	lsrs	r5, r5, #1
 8016e92:	e7e3      	b.n	8016e5c <_DrawBitmap+0x310>
 8016e94:	07eb      	lsls	r3, r5, #31
 8016e96:	bf48      	it	mi
 8016e98:	f8a4 c000 	strhmi.w	ip, [r4]
 8016e9c:	f1b8 0801 	subs.w	r8, r8, #1
 8016ea0:	f104 0402 	add.w	r4, r4, #2
 8016ea4:	d004      	beq.n	8016eb0 <_DrawBitmap+0x364>
 8016ea6:	086d      	lsrs	r5, r5, #1
 8016ea8:	2d00      	cmp	r5, #0
 8016eaa:	d1f3      	bne.n	8016e94 <_DrawBitmap+0x348>
 8016eac:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8016eb0:	2e00      	cmp	r6, #0
 8016eb2:	d058      	beq.n	8016f66 <_DrawBitmap+0x41a>
 8016eb4:	9906      	ldr	r1, [sp, #24]
 8016eb6:	4a60      	ldr	r2, [pc, #384]	; (8017038 <_DrawBitmap+0x4ec>)
 8016eb8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8016ebc:	9106      	str	r1, [sp, #24]
 8016ebe:	5cd5      	ldrb	r5, [r2, r3]
 8016ec0:	f04f 0808 	mov.w	r8, #8
 8016ec4:	e7c4      	b.n	8016e50 <_DrawBitmap+0x304>
 8016ec6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016ec8:	6913      	ldr	r3, [r2, #16]
 8016eca:	689b      	ldr	r3, [r3, #8]
 8016ecc:	4798      	blx	r3
 8016ece:	9b04      	ldr	r3, [sp, #16]
 8016ed0:	930b      	str	r3, [sp, #44]	; 0x2c
 8016ed2:	b280      	uxth	r0, r0
 8016ed4:	900a      	str	r0, [sp, #40]	; 0x28
 8016ed6:	f10a 0901 	add.w	r9, sl, #1
 8016eda:	4546      	cmp	r6, r8
 8016edc:	bf38      	it	cc
 8016ede:	46b0      	movcc	r8, r6
 8016ee0:	ebc8 0606 	rsb	r6, r8, r6
 8016ee4:	1ca3      	adds	r3, r4, #2
 8016ee6:	b31f      	cbz	r7, 8016f30 <_DrawBitmap+0x3e4>
 8016ee8:	f8cd 8018 	str.w	r8, [sp, #24]
 8016eec:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016eee:	9a06      	ldr	r2, [sp, #24]
 8016ef0:	4440      	add	r0, r8
 8016ef2:	900c      	str	r0, [sp, #48]	; 0x30
 8016ef4:	1a81      	subs	r1, r0, r2
 8016ef6:	07e8      	lsls	r0, r5, #31
 8016ef8:	d50d      	bpl.n	8016f16 <_DrawBitmap+0x3ca>
 8016efa:	68ba      	ldr	r2, [r7, #8]
 8016efc:	4638      	mov	r0, r7
 8016efe:	f8d2 c000 	ldr.w	ip, [r2]
 8016f02:	9a05      	ldr	r2, [sp, #20]
 8016f04:	9302      	str	r3, [sp, #8]
 8016f06:	47e0      	blx	ip
 8016f08:	9b02      	ldr	r3, [sp, #8]
 8016f0a:	980a      	ldr	r0, [sp, #40]	; 0x28
 8016f0c:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 8016f10:	4042      	eors	r2, r0
 8016f12:	f823 2c02 	strh.w	r2, [r3, #-2]
 8016f16:	9906      	ldr	r1, [sp, #24]
 8016f18:	3901      	subs	r1, #1
 8016f1a:	ea4f 0555 	mov.w	r5, r5, lsr #1
 8016f1e:	f103 0302 	add.w	r3, r3, #2
 8016f22:	9106      	str	r1, [sp, #24]
 8016f24:	d1e2      	bne.n	8016eec <_DrawBitmap+0x3a0>
 8016f26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016f28:	930b      	str	r3, [sp, #44]	; 0x2c
 8016f2a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8016f2e:	e010      	b.n	8016f52 <_DrawBitmap+0x406>
 8016f30:	4642      	mov	r2, r8
 8016f32:	07e9      	lsls	r1, r5, #31
 8016f34:	d505      	bpl.n	8016f42 <_DrawBitmap+0x3f6>
 8016f36:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 8016f3a:	980a      	ldr	r0, [sp, #40]	; 0x28
 8016f3c:	4041      	eors	r1, r0
 8016f3e:	f823 1c02 	strh.w	r1, [r3, #-2]
 8016f42:	3a01      	subs	r2, #1
 8016f44:	ea4f 0555 	mov.w	r5, r5, lsr #1
 8016f48:	f103 0302 	add.w	r3, r3, #2
 8016f4c:	d1f1      	bne.n	8016f32 <_DrawBitmap+0x3e6>
 8016f4e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8016f52:	b146      	cbz	r6, 8016f66 <_DrawBitmap+0x41a>
 8016f54:	f899 3000 	ldrb.w	r3, [r9]
 8016f58:	4a37      	ldr	r2, [pc, #220]	; (8017038 <_DrawBitmap+0x4ec>)
 8016f5a:	f109 0901 	add.w	r9, r9, #1
 8016f5e:	5cd5      	ldrb	r5, [r2, r3]
 8016f60:	f04f 0808 	mov.w	r8, #8
 8016f64:	e7b9      	b.n	8016eda <_DrawBitmap+0x38e>
 8016f66:	a810      	add	r0, sp, #64	; 0x40
 8016f68:	f7fc f8c8 	bl	80130fc <GUI_ALLOC_UnlockH>
 8016f6c:	e16b      	b.n	8017246 <_DrawBitmap+0x6fa>
 8016f6e:	4b33      	ldr	r3, [pc, #204]	; (801703c <_DrawBitmap+0x4f0>)
 8016f70:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8016f72:	681b      	ldr	r3, [r3, #0]
 8016f74:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016f76:	7c1b      	ldrb	r3, [r3, #16]
 8016f78:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 8016f7c:	f1c6 0504 	rsb	r5, r6, #4
 8016f80:	f89a 6000 	ldrb.w	r6, [sl]
 8016f84:	f003 0303 	and.w	r3, r3, #3
 8016f88:	40be      	lsls	r6, r7
 8016f8a:	2b01      	cmp	r3, #1
 8016f8c:	b2ed      	uxtb	r5, r5
 8016f8e:	b2f6      	uxtb	r6, r6
 8016f90:	d06a      	beq.n	8017068 <_DrawBitmap+0x51c>
 8016f92:	d308      	bcc.n	8016fa6 <_DrawBitmap+0x45a>
 8016f94:	2b02      	cmp	r3, #2
 8016f96:	f040 8156 	bne.w	8017246 <_DrawBitmap+0x6fa>
 8016f9a:	f8cd a018 	str.w	sl, [sp, #24]
 8016f9e:	465f      	mov	r7, fp
 8016fa0:	f8dd c010 	ldr.w	ip, [sp, #16]
 8016fa4:	e03e      	b.n	8017024 <_DrawBitmap+0x4d8>
 8016fa6:	4652      	mov	r2, sl
 8016fa8:	465b      	mov	r3, fp
 8016faa:	429d      	cmp	r5, r3
 8016fac:	bfc8      	it	gt
 8016fae:	b2dd      	uxtbgt	r5, r3
 8016fb0:	1b5b      	subs	r3, r3, r5
 8016fb2:	4629      	mov	r1, r5
 8016fb4:	4620      	mov	r0, r4
 8016fb6:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 8016fba:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8016fbc:	3901      	subs	r1, #1
 8016fbe:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 8016fc2:	f820 cb02 	strh.w	ip, [r0], #2
 8016fc6:	00b6      	lsls	r6, r6, #2
 8016fc8:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8016fcc:	b2f6      	uxtb	r6, r6
 8016fce:	d1f2      	bne.n	8016fb6 <_DrawBitmap+0x46a>
 8016fd0:	3d01      	subs	r5, #1
 8016fd2:	b2ed      	uxtb	r5, r5
 8016fd4:	3501      	adds	r5, #1
 8016fd6:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8016fda:	2b00      	cmp	r3, #0
 8016fdc:	f000 8133 	beq.w	8017246 <_DrawBitmap+0x6fa>
 8016fe0:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8016fe4:	2504      	movs	r5, #4
 8016fe6:	e7e0      	b.n	8016faa <_DrawBitmap+0x45e>
 8016fe8:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8016fec:	eb08 010c 	add.w	r1, r8, ip
 8016ff0:	d126      	bne.n	8017040 <_DrawBitmap+0x4f4>
 8016ff2:	f108 0801 	add.w	r8, r8, #1
 8016ff6:	fa5f f388 	uxtb.w	r3, r8
 8016ffa:	00b6      	lsls	r6, r6, #2
 8016ffc:	429d      	cmp	r5, r3
 8016ffe:	b2f6      	uxtb	r6, r6
 8017000:	d1f2      	bne.n	8016fe8 <_DrawBitmap+0x49c>
 8017002:	3d01      	subs	r5, #1
 8017004:	b2ed      	uxtb	r5, r5
 8017006:	1c6b      	adds	r3, r5, #1
 8017008:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801700c:	f10c 0301 	add.w	r3, ip, #1
 8017010:	eb03 0c05 	add.w	ip, r3, r5
 8017014:	2f00      	cmp	r7, #0
 8017016:	f000 8116 	beq.w	8017246 <_DrawBitmap+0x6fa>
 801701a:	9b06      	ldr	r3, [sp, #24]
 801701c:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8017020:	9306      	str	r3, [sp, #24]
 8017022:	2504      	movs	r5, #4
 8017024:	42bd      	cmp	r5, r7
 8017026:	bfc8      	it	gt
 8017028:	b2fd      	uxtbgt	r5, r7
 801702a:	1b7f      	subs	r7, r7, r5
 801702c:	f04f 0800 	mov.w	r8, #0
 8017030:	e7da      	b.n	8016fe8 <_DrawBitmap+0x49c>
 8017032:	bf00      	nop
 8017034:	080210f4 	.word	0x080210f4
 8017038:	08020eb4 	.word	0x08020eb4
 801703c:	2000016c 	.word	0x2000016c
 8017040:	09b3      	lsrs	r3, r6, #6
 8017042:	9821      	ldr	r0, [sp, #132]	; 0x84
 8017044:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017048:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 801704c:	f1b9 0f00 	cmp.w	r9, #0
 8017050:	d0cf      	beq.n	8016ff2 <_DrawBitmap+0x4a6>
 8017052:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8017056:	9a05      	ldr	r2, [sp, #20]
 8017058:	681b      	ldr	r3, [r3, #0]
 801705a:	f8cd c008 	str.w	ip, [sp, #8]
 801705e:	4648      	mov	r0, r9
 8017060:	4798      	blx	r3
 8017062:	f8dd c008 	ldr.w	ip, [sp, #8]
 8017066:	e7c4      	b.n	8016ff2 <_DrawBitmap+0x4a6>
 8017068:	4651      	mov	r1, sl
 801706a:	465b      	mov	r3, fp
 801706c:	429d      	cmp	r5, r3
 801706e:	bfc8      	it	gt
 8017070:	b2dd      	uxtbgt	r5, r3
 8017072:	1b5b      	subs	r3, r3, r5
 8017074:	1ca2      	adds	r2, r4, #2
 8017076:	4628      	mov	r0, r5
 8017078:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 801707c:	d005      	beq.n	801708a <_DrawBitmap+0x53e>
 801707e:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 8017082:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8017086:	f822 7c02 	strh.w	r7, [r2, #-2]
 801708a:	3801      	subs	r0, #1
 801708c:	00b6      	lsls	r6, r6, #2
 801708e:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 8017092:	b2f6      	uxtb	r6, r6
 8017094:	f102 0202 	add.w	r2, r2, #2
 8017098:	d1ee      	bne.n	8017078 <_DrawBitmap+0x52c>
 801709a:	3d01      	subs	r5, #1
 801709c:	b2ed      	uxtb	r5, r5
 801709e:	3501      	adds	r5, #1
 80170a0:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 80170a4:	2b00      	cmp	r3, #0
 80170a6:	f000 80ce 	beq.w	8017246 <_DrawBitmap+0x6fa>
 80170aa:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 80170ae:	2504      	movs	r5, #4
 80170b0:	e7dc      	b.n	801706c <_DrawBitmap+0x520>
 80170b2:	4a6e      	ldr	r2, [pc, #440]	; (801726c <_DrawBitmap+0x720>)
 80170b4:	f89a 3000 	ldrb.w	r3, [sl]
 80170b8:	6812      	ldr	r2, [r2, #0]
 80170ba:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80170bc:	7c12      	ldrb	r2, [r2, #16]
 80170be:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80170c0:	f002 0203 	and.w	r2, r2, #3
 80170c4:	40bb      	lsls	r3, r7
 80170c6:	2a01      	cmp	r2, #1
 80170c8:	b2dd      	uxtb	r5, r3
 80170ca:	f000 8095 	beq.w	80171f8 <_DrawBitmap+0x6ac>
 80170ce:	d302      	bcc.n	80170d6 <_DrawBitmap+0x58a>
 80170d0:	2a02      	cmp	r2, #2
 80170d2:	d036      	beq.n	8017142 <_DrawBitmap+0x5f6>
 80170d4:	e0b7      	b.n	8017246 <_DrawBitmap+0x6fa>
 80170d6:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80170d8:	b166      	cbz	r6, 80170f4 <_DrawBitmap+0x5a8>
 80170da:	092d      	lsrs	r5, r5, #4
 80170dc:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80170de:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 80170e2:	8023      	strh	r3, [r4, #0]
 80170e4:	f10a 0201 	add.w	r2, sl, #1
 80170e8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80170ea:	f89a 5001 	ldrb.w	r5, [sl, #1]
 80170ee:	f10b 33ff 	add.w	r3, fp, #4294967295
 80170f2:	e001      	b.n	80170f8 <_DrawBitmap+0x5ac>
 80170f4:	465b      	mov	r3, fp
 80170f6:	4652      	mov	r2, sl
 80170f8:	2b01      	cmp	r3, #1
 80170fa:	dd19      	ble.n	8017130 <_DrawBitmap+0x5e4>
 80170fc:	1058      	asrs	r0, r3, #1
 80170fe:	1d21      	adds	r1, r4, #4
 8017100:	f003 0301 	and.w	r3, r3, #1
 8017104:	eb02 0c00 	add.w	ip, r2, r0
 8017108:	092f      	lsrs	r7, r5, #4
 801710a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801710c:	f005 050f 	and.w	r5, r5, #15
 8017110:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 8017114:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8017118:	f821 7c04 	strh.w	r7, [r1, #-4]
 801711c:	f821 5c02 	strh.w	r5, [r1, #-2]
 8017120:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8017124:	4562      	cmp	r2, ip
 8017126:	f101 0104 	add.w	r1, r1, #4
 801712a:	d1ed      	bne.n	8017108 <_DrawBitmap+0x5bc>
 801712c:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 8017130:	2b00      	cmp	r3, #0
 8017132:	f000 8088 	beq.w	8017246 <_DrawBitmap+0x6fa>
 8017136:	092d      	lsrs	r5, r5, #4
 8017138:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801713a:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 801713e:	8023      	strh	r3, [r4, #0]
 8017140:	e081      	b.n	8017246 <_DrawBitmap+0x6fa>
 8017142:	9f20      	ldr	r7, [sp, #128]	; 0x80
 8017144:	b1c7      	cbz	r7, 8017178 <_DrawBitmap+0x62c>
 8017146:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 801714a:	d00b      	beq.n	8017164 <_DrawBitmap+0x618>
 801714c:	092d      	lsrs	r5, r5, #4
 801714e:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8017150:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8017154:	8023      	strh	r3, [r4, #0]
 8017156:	b12e      	cbz	r6, 8017164 <_DrawBitmap+0x618>
 8017158:	68b3      	ldr	r3, [r6, #8]
 801715a:	9904      	ldr	r1, [sp, #16]
 801715c:	681b      	ldr	r3, [r3, #0]
 801715e:	9a05      	ldr	r2, [sp, #20]
 8017160:	4630      	mov	r0, r6
 8017162:	4798      	blx	r3
 8017164:	9804      	ldr	r0, [sp, #16]
 8017166:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017168:	f89a 5001 	ldrb.w	r5, [sl, #1]
 801716c:	1c47      	adds	r7, r0, #1
 801716e:	f10b 39ff 	add.w	r9, fp, #4294967295
 8017172:	f10a 0801 	add.w	r8, sl, #1
 8017176:	e00f      	b.n	8017198 <_DrawBitmap+0x64c>
 8017178:	46d9      	mov	r9, fp
 801717a:	46d0      	mov	r8, sl
 801717c:	9f04      	ldr	r7, [sp, #16]
 801717e:	e00b      	b.n	8017198 <_DrawBitmap+0x64c>
 8017180:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 8017184:	d10c      	bne.n	80171a0 <_DrawBitmap+0x654>
 8017186:	f015 050f 	ands.w	r5, r5, #15
 801718a:	d117      	bne.n	80171bc <_DrawBitmap+0x670>
 801718c:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 8017190:	3404      	adds	r4, #4
 8017192:	3702      	adds	r7, #2
 8017194:	f1a9 0902 	sub.w	r9, r9, #2
 8017198:	f1b9 0f01 	cmp.w	r9, #1
 801719c:	dcf0      	bgt.n	8017180 <_DrawBitmap+0x634>
 801719e:	e01a      	b.n	80171d6 <_DrawBitmap+0x68a>
 80171a0:	092b      	lsrs	r3, r5, #4
 80171a2:	9921      	ldr	r1, [sp, #132]	; 0x84
 80171a4:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80171a8:	8023      	strh	r3, [r4, #0]
 80171aa:	2e00      	cmp	r6, #0
 80171ac:	d0eb      	beq.n	8017186 <_DrawBitmap+0x63a>
 80171ae:	68b3      	ldr	r3, [r6, #8]
 80171b0:	9a05      	ldr	r2, [sp, #20]
 80171b2:	681b      	ldr	r3, [r3, #0]
 80171b4:	4630      	mov	r0, r6
 80171b6:	4639      	mov	r1, r7
 80171b8:	4798      	blx	r3
 80171ba:	e7e4      	b.n	8017186 <_DrawBitmap+0x63a>
 80171bc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80171be:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 80171c2:	8063      	strh	r3, [r4, #2]
 80171c4:	2e00      	cmp	r6, #0
 80171c6:	d0e1      	beq.n	801718c <_DrawBitmap+0x640>
 80171c8:	68b3      	ldr	r3, [r6, #8]
 80171ca:	9a05      	ldr	r2, [sp, #20]
 80171cc:	681b      	ldr	r3, [r3, #0]
 80171ce:	4630      	mov	r0, r6
 80171d0:	1c79      	adds	r1, r7, #1
 80171d2:	4798      	blx	r3
 80171d4:	e7da      	b.n	801718c <_DrawBitmap+0x640>
 80171d6:	f1b9 0f00 	cmp.w	r9, #0
 80171da:	d034      	beq.n	8017246 <_DrawBitmap+0x6fa>
 80171dc:	092d      	lsrs	r5, r5, #4
 80171de:	d032      	beq.n	8017246 <_DrawBitmap+0x6fa>
 80171e0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80171e2:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 80171e6:	8023      	strh	r3, [r4, #0]
 80171e8:	b36e      	cbz	r6, 8017246 <_DrawBitmap+0x6fa>
 80171ea:	68b3      	ldr	r3, [r6, #8]
 80171ec:	9a05      	ldr	r2, [sp, #20]
 80171ee:	681b      	ldr	r3, [r3, #0]
 80171f0:	4630      	mov	r0, r6
 80171f2:	4639      	mov	r1, r7
 80171f4:	4798      	blx	r3
 80171f6:	e026      	b.n	8017246 <_DrawBitmap+0x6fa>
 80171f8:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80171fa:	f1c6 0302 	rsb	r3, r6, #2
 80171fe:	b2db      	uxtb	r3, r3
 8017200:	4650      	mov	r0, sl
 8017202:	465a      	mov	r2, fp
 8017204:	4293      	cmp	r3, r2
 8017206:	bfc8      	it	gt
 8017208:	b2d3      	uxtbgt	r3, r2
 801720a:	1ad2      	subs	r2, r2, r3
 801720c:	1ca1      	adds	r1, r4, #2
 801720e:	461e      	mov	r6, r3
 8017210:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 8017214:	d005      	beq.n	8017222 <_DrawBitmap+0x6d6>
 8017216:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 801721a:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 801721e:	f821 7c02 	strh.w	r7, [r1, #-2]
 8017222:	3e01      	subs	r6, #1
 8017224:	012d      	lsls	r5, r5, #4
 8017226:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 801722a:	b2ed      	uxtb	r5, r5
 801722c:	f101 0102 	add.w	r1, r1, #2
 8017230:	d1ee      	bne.n	8017210 <_DrawBitmap+0x6c4>
 8017232:	3b01      	subs	r3, #1
 8017234:	b2db      	uxtb	r3, r3
 8017236:	3301      	adds	r3, #1
 8017238:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801723c:	b11a      	cbz	r2, 8017246 <_DrawBitmap+0x6fa>
 801723e:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8017242:	2302      	movs	r3, #2
 8017244:	e7de      	b.n	8017204 <_DrawBitmap+0x6b8>
 8017246:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8017248:	9b05      	ldr	r3, [sp, #20]
 801724a:	9e08      	ldr	r6, [sp, #32]
 801724c:	44ba      	add	sl, r7
 801724e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017250:	3301      	adds	r3, #1
 8017252:	4437      	add	r7, r6
 8017254:	9305      	str	r3, [sp, #20]
 8017256:	9709      	str	r7, [sp, #36]	; 0x24
 8017258:	e5a3      	b.n	8016da2 <_DrawBitmap+0x256>
 801725a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801725c:	b113      	cbz	r3, 8017264 <_DrawBitmap+0x718>
 801725e:	a811      	add	r0, sp, #68	; 0x44
 8017260:	f7fb ff4c 	bl	80130fc <GUI_ALLOC_UnlockH>
 8017264:	b013      	add	sp, #76	; 0x4c
 8017266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801726a:	bf00      	nop
 801726c:	2000016c 	.word	0x2000016c

08017270 <LCD_SelectLCD>:
 8017270:	b510      	push	{r4, lr}
 8017272:	4b0d      	ldr	r3, [pc, #52]	; (80172a8 <LCD_SelectLCD+0x38>)
 8017274:	681a      	ldr	r2, [r3, #0]
 8017276:	7c51      	ldrb	r1, [r2, #17]
 8017278:	4a0c      	ldr	r2, [pc, #48]	; (80172ac <LCD_SelectLCD+0x3c>)
 801727a:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 801727e:	461c      	mov	r4, r3
 8017280:	b140      	cbz	r0, 8017294 <LCD_SelectLCD+0x24>
 8017282:	68c3      	ldr	r3, [r0, #12]
 8017284:	b113      	cbz	r3, 801728c <LCD_SelectLCD+0x1c>
 8017286:	681b      	ldr	r3, [r3, #0]
 8017288:	2b04      	cmp	r3, #4
 801728a:	d001      	beq.n	8017290 <LCD_SelectLCD+0x20>
 801728c:	6800      	ldr	r0, [r0, #0]
 801728e:	e7f7      	b.n	8017280 <LCD_SelectLCD+0x10>
 8017290:	f7fb fa04 	bl	801269c <GUI_DEVICE_Unlink>
 8017294:	6823      	ldr	r3, [r4, #0]
 8017296:	2200      	movs	r2, #0
 8017298:	661a      	str	r2, [r3, #96]	; 0x60
 801729a:	f103 0208 	add.w	r2, r3, #8
 801729e:	615a      	str	r2, [r3, #20]
 80172a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80172a4:	f7f9 ba86 	b.w	80107b4 <LCD_SetClipRectMax>
 80172a8:	2000016c 	.word	0x2000016c
 80172ac:	20019ca0 	.word	0x20019ca0

080172b0 <_Rect2TextRect>:
 80172b0:	8803      	ldrh	r3, [r0, #0]
 80172b2:	8881      	ldrh	r1, [r0, #4]
 80172b4:	8842      	ldrh	r2, [r0, #2]
 80172b6:	b510      	push	{r4, lr}
 80172b8:	88c4      	ldrh	r4, [r0, #6]
 80172ba:	441c      	add	r4, r3
 80172bc:	1aa4      	subs	r4, r4, r2
 80172be:	440a      	add	r2, r1
 80172c0:	1ad3      	subs	r3, r2, r3
 80172c2:	8084      	strh	r4, [r0, #4]
 80172c4:	80c3      	strh	r3, [r0, #6]
 80172c6:	bd10      	pop	{r4, pc}

080172c8 <_TransformPoint>:
 80172c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80172ca:	460d      	mov	r5, r1
 80172cc:	4604      	mov	r4, r0
 80172ce:	2300      	movs	r3, #0
 80172d0:	4668      	mov	r0, sp
 80172d2:	9300      	str	r3, [sp, #0]
 80172d4:	9301      	str	r3, [sp, #4]
 80172d6:	f7fe fc21 	bl	8015b1c <WM_GetWindowRect>
 80172da:	f7f8 ff05 	bl	80100e8 <LCD_GetXSize>
 80172de:	f7f8 ff0b 	bl	80100f8 <LCD_GetYSize>
 80172e2:	682b      	ldr	r3, [r5, #0]
 80172e4:	f9bd 1000 	ldrsh.w	r1, [sp]
 80172e8:	6822      	ldr	r2, [r4, #0]
 80172ea:	1acb      	subs	r3, r1, r3
 80172ec:	6023      	str	r3, [r4, #0]
 80172ee:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80172f2:	4413      	add	r3, r2
 80172f4:	602b      	str	r3, [r5, #0]
 80172f6:	4b08      	ldr	r3, [pc, #32]	; (8017318 <_TransformPoint+0x50>)
 80172f8:	6821      	ldr	r1, [r4, #0]
 80172fa:	f9b3 0004 	ldrsh.w	r0, [r3, #4]
 80172fe:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8017302:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017306:	4401      	add	r1, r0
 8017308:	4411      	add	r1, r2
 801730a:	6021      	str	r1, [r4, #0]
 801730c:	6829      	ldr	r1, [r5, #0]
 801730e:	440a      	add	r2, r1
 8017310:	1ad2      	subs	r2, r2, r3
 8017312:	602a      	str	r2, [r5, #0]
 8017314:	b003      	add	sp, #12
 8017316:	bd30      	pop	{r4, r5, pc}
 8017318:	20019da4 	.word	0x20019da4

0801731c <_TransformRect>:
 801731c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801731e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8017322:	9300      	str	r3, [sp, #0]
 8017324:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8017328:	9301      	str	r3, [sp, #4]
 801732a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801732e:	9302      	str	r3, [sp, #8]
 8017330:	4604      	mov	r4, r0
 8017332:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8017336:	9303      	str	r3, [sp, #12]
 8017338:	4668      	mov	r0, sp
 801733a:	a901      	add	r1, sp, #4
 801733c:	f7ff ffc4 	bl	80172c8 <_TransformPoint>
 8017340:	a802      	add	r0, sp, #8
 8017342:	a903      	add	r1, sp, #12
 8017344:	f7ff ffc0 	bl	80172c8 <_TransformPoint>
 8017348:	9b02      	ldr	r3, [sp, #8]
 801734a:	8023      	strh	r3, [r4, #0]
 801734c:	9b01      	ldr	r3, [sp, #4]
 801734e:	8063      	strh	r3, [r4, #2]
 8017350:	9b00      	ldr	r3, [sp, #0]
 8017352:	80a3      	strh	r3, [r4, #4]
 8017354:	9b03      	ldr	r3, [sp, #12]
 8017356:	80e3      	strh	r3, [r4, #6]
 8017358:	b004      	add	sp, #16
 801735a:	bd10      	pop	{r4, pc}

0801735c <_DrawBitmapCW>:
 801735c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017360:	b091      	sub	sp, #68	; 0x44
 8017362:	4693      	mov	fp, r2
 8017364:	9009      	str	r0, [sp, #36]	; 0x24
 8017366:	9108      	str	r1, [sp, #32]
 8017368:	4410      	add	r0, r2
 801736a:	4419      	add	r1, r3
 801736c:	3901      	subs	r1, #1
 801736e:	3801      	subs	r0, #1
 8017370:	910b      	str	r1, [sp, #44]	; 0x2c
 8017372:	900a      	str	r0, [sp, #40]	; 0x28
 8017374:	a908      	add	r1, sp, #32
 8017376:	a809      	add	r0, sp, #36	; 0x24
 8017378:	461d      	mov	r5, r3
 801737a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801737c:	f7ff ffa4 	bl	80172c8 <_TransformPoint>
 8017380:	a90b      	add	r1, sp, #44	; 0x2c
 8017382:	a80a      	add	r0, sp, #40	; 0x28
 8017384:	f7ff ffa0 	bl	80172c8 <_TransformPoint>
 8017388:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 801738a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801738c:	2f01      	cmp	r7, #1
 801738e:	f040 81a4 	bne.w	80176da <_DrawBitmapCW+0x37e>
 8017392:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8017394:	2f01      	cmp	r7, #1
 8017396:	f040 81a0 	bne.w	80176da <_DrawBitmapCW+0x37e>
 801739a:	4ba6      	ldr	r3, [pc, #664]	; (8017634 <_DrawBitmapCW+0x2d8>)
 801739c:	681a      	ldr	r2, [r3, #0]
 801739e:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 80173a2:	4299      	cmp	r1, r3
 80173a4:	dd07      	ble.n	80173b6 <_DrawBitmapCW+0x5a>
 80173a6:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80173a8:	9309      	str	r3, [sp, #36]	; 0x24
 80173aa:	ebc3 0901 	rsb	r9, r3, r1
 80173ae:	ebc9 0505 	rsb	r5, r9, r5
 80173b2:	fb07 4409 	mla	r4, r7, r9, r4
 80173b6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80173b8:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 80173bc:	4299      	cmp	r1, r3
 80173be:	da02      	bge.n	80173c6 <_DrawBitmapCW+0x6a>
 80173c0:	930a      	str	r3, [sp, #40]	; 0x28
 80173c2:	1a5b      	subs	r3, r3, r1
 80173c4:	1aed      	subs	r5, r5, r3
 80173c6:	f9b2 300e 	ldrsh.w	r3, [r2, #14]
 80173ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80173cc:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 80173d0:	4299      	cmp	r1, r3
 80173d2:	bfc4      	itt	gt
 80173d4:	ebc3 0301 	rsbgt	r3, r3, r1
 80173d8:	ebc3 0b0b 	rsbgt	fp, r3, fp
 80173dc:	9b08      	ldr	r3, [sp, #32]
 80173de:	4293      	cmp	r3, r2
 80173e0:	da2a      	bge.n	8017438 <_DrawBitmapCW+0xdc>
 80173e2:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80173e4:	1ad6      	subs	r6, r2, r3
 80173e6:	1e79      	subs	r1, r7, #1
 80173e8:	ebc6 0b0b 	rsb	fp, r6, fp
 80173ec:	2907      	cmp	r1, #7
 80173ee:	d824      	bhi.n	801743a <_DrawBitmapCW+0xde>
 80173f0:	e8df f001 	tbb	[pc, r1]
 80173f4:	16230d04 	.word	0x16230d04
 80173f8:	1f232323 	.word	0x1f232323
 80173fc:	f026 0207 	bic.w	r2, r6, #7
 8017400:	4413      	add	r3, r2
 8017402:	eb04 04e6 	add.w	r4, r4, r6, asr #3
 8017406:	9308      	str	r3, [sp, #32]
 8017408:	f006 0607 	and.w	r6, r6, #7
 801740c:	e015      	b.n	801743a <_DrawBitmapCW+0xde>
 801740e:	f026 0203 	bic.w	r2, r6, #3
 8017412:	4413      	add	r3, r2
 8017414:	eb04 04a6 	add.w	r4, r4, r6, asr #2
 8017418:	9308      	str	r3, [sp, #32]
 801741a:	f006 0603 	and.w	r6, r6, #3
 801741e:	e00c      	b.n	801743a <_DrawBitmapCW+0xde>
 8017420:	f026 0201 	bic.w	r2, r6, #1
 8017424:	4413      	add	r3, r2
 8017426:	eb04 0466 	add.w	r4, r4, r6, asr #1
 801742a:	9308      	str	r3, [sp, #32]
 801742c:	f006 0601 	and.w	r6, r6, #1
 8017430:	e003      	b.n	801743a <_DrawBitmapCW+0xde>
 8017432:	4434      	add	r4, r6
 8017434:	9208      	str	r2, [sp, #32]
 8017436:	e000      	b.n	801743a <_DrawBitmapCW+0xde>
 8017438:	2600      	movs	r6, #0
 801743a:	f1bb 0f00 	cmp.w	fp, #0
 801743e:	f340 81ab 	ble.w	8017798 <_DrawBitmapCW+0x43c>
 8017442:	2d00      	cmp	r5, #0
 8017444:	f340 81a8 	ble.w	8017798 <_DrawBitmapCW+0x43c>
 8017448:	9f08      	ldr	r7, [sp, #32]
 801744a:	9702      	str	r7, [sp, #8]
 801744c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801744e:	9706      	str	r7, [sp, #24]
 8017450:	1b7d      	subs	r5, r7, r5
 8017452:	9505      	str	r5, [sp, #20]
 8017454:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8017456:	1e6b      	subs	r3, r5, #1
 8017458:	2b07      	cmp	r3, #7
 801745a:	f200 8134 	bhi.w	80176c6 <_DrawBitmapCW+0x36a>
 801745e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8017462:	0008      	.short	0x0008
 8017464:	013200ae 	.word	0x013200ae
 8017468:	013200ef 	.word	0x013200ef
 801746c:	01320132 	.word	0x01320132
 8017470:	0121      	.short	0x0121
 8017472:	4b70      	ldr	r3, [pc, #448]	; (8017634 <_DrawBitmapCW+0x2d8>)
 8017474:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8017476:	681b      	ldr	r3, [r3, #0]
 8017478:	682d      	ldr	r5, [r5, #0]
 801747a:	7c1a      	ldrb	r2, [r3, #16]
 801747c:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 801747e:	9504      	str	r5, [sp, #16]
 8017480:	f002 0203 	and.w	r2, r2, #3
 8017484:	9d02      	ldr	r5, [sp, #8]
 8017486:	687f      	ldr	r7, [r7, #4]
 8017488:	9703      	str	r7, [sp, #12]
 801748a:	2a01      	cmp	r2, #1
 801748c:	4435      	add	r5, r6
 801748e:	d052      	beq.n	8017536 <_DrawBitmapCW+0x1da>
 8017490:	d307      	bcc.n	80174a2 <_DrawBitmapCW+0x146>
 8017492:	2a02      	cmp	r2, #2
 8017494:	f040 8117 	bne.w	80176c6 <_DrawBitmapCW+0x36a>
 8017498:	eb05 0a0b 	add.w	sl, r5, fp
 801749c:	46b0      	mov	r8, r6
 801749e:	46a1      	mov	r9, r4
 80174a0:	e034      	b.n	801750c <_DrawBitmapCW+0x1b0>
 80174a2:	eb05 0a0b 	add.w	sl, r5, fp
 80174a6:	46b0      	mov	r8, r6
 80174a8:	46a1      	mov	r9, r4
 80174aa:	4b62      	ldr	r3, [pc, #392]	; (8017634 <_DrawBitmapCW+0x2d8>)
 80174ac:	9f03      	ldr	r7, [sp, #12]
 80174ae:	681b      	ldr	r3, [r3, #0]
 80174b0:	9906      	ldr	r1, [sp, #24]
 80174b2:	7c5a      	ldrb	r2, [r3, #17]
 80174b4:	4b60      	ldr	r3, [pc, #384]	; (8017638 <_DrawBitmapCW+0x2dc>)
 80174b6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80174ba:	f899 2000 	ldrb.w	r2, [r9]
 80174be:	68c3      	ldr	r3, [r0, #12]
 80174c0:	f8d3 c018 	ldr.w	ip, [r3, #24]
 80174c4:	2380      	movs	r3, #128	; 0x80
 80174c6:	fa43 f308 	asr.w	r3, r3, r8
 80174ca:	421a      	tst	r2, r3
 80174cc:	9b04      	ldr	r3, [sp, #16]
 80174ce:	462a      	mov	r2, r5
 80174d0:	bf18      	it	ne
 80174d2:	463b      	movne	r3, r7
 80174d4:	f108 0801 	add.w	r8, r8, #1
 80174d8:	47e0      	blx	ip
 80174da:	3501      	adds	r5, #1
 80174dc:	f1b8 0f08 	cmp.w	r8, #8
 80174e0:	bf04      	itt	eq
 80174e2:	f109 0901 	addeq.w	r9, r9, #1
 80174e6:	f04f 0800 	moveq.w	r8, #0
 80174ea:	4555      	cmp	r5, sl
 80174ec:	d1dd      	bne.n	80174aa <_DrawBitmapCW+0x14e>
 80174ee:	e0ea      	b.n	80176c6 <_DrawBitmapCW+0x36a>
 80174f0:	f108 0801 	add.w	r8, r8, #1
 80174f4:	f1b8 0f08 	cmp.w	r8, #8
 80174f8:	f105 0501 	add.w	r5, r5, #1
 80174fc:	bf04      	itt	eq
 80174fe:	f109 0901 	addeq.w	r9, r9, #1
 8017502:	f04f 0800 	moveq.w	r8, #0
 8017506:	4555      	cmp	r5, sl
 8017508:	f000 80dd 	beq.w	80176c6 <_DrawBitmapCW+0x36a>
 801750c:	f899 2000 	ldrb.w	r2, [r9]
 8017510:	2380      	movs	r3, #128	; 0x80
 8017512:	fa43 f308 	asr.w	r3, r3, r8
 8017516:	421a      	tst	r2, r3
 8017518:	d0ea      	beq.n	80174f0 <_DrawBitmapCW+0x194>
 801751a:	4b46      	ldr	r3, [pc, #280]	; (8017634 <_DrawBitmapCW+0x2d8>)
 801751c:	9906      	ldr	r1, [sp, #24]
 801751e:	681b      	ldr	r3, [r3, #0]
 8017520:	7c5a      	ldrb	r2, [r3, #17]
 8017522:	4b45      	ldr	r3, [pc, #276]	; (8017638 <_DrawBitmapCW+0x2dc>)
 8017524:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8017528:	68c3      	ldr	r3, [r0, #12]
 801752a:	462a      	mov	r2, r5
 801752c:	f8d3 c018 	ldr.w	ip, [r3, #24]
 8017530:	9b03      	ldr	r3, [sp, #12]
 8017532:	47e0      	blx	ip
 8017534:	e7dc      	b.n	80174f0 <_DrawBitmapCW+0x194>
 8017536:	7c5a      	ldrb	r2, [r3, #17]
 8017538:	4b3f      	ldr	r3, [pc, #252]	; (8017638 <_DrawBitmapCW+0x2dc>)
 801753a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801753e:	691b      	ldr	r3, [r3, #16]
 8017540:	689b      	ldr	r3, [r3, #8]
 8017542:	4798      	blx	r3
 8017544:	eb05 070b 	add.w	r7, r5, fp
 8017548:	9004      	str	r0, [sp, #16]
 801754a:	9703      	str	r7, [sp, #12]
 801754c:	46b0      	mov	r8, r6
 801754e:	46a1      	mov	r9, r4
 8017550:	f899 2000 	ldrb.w	r2, [r9]
 8017554:	2380      	movs	r3, #128	; 0x80
 8017556:	fa43 f308 	asr.w	r3, r3, r8
 801755a:	421a      	tst	r2, r3
 801755c:	d020      	beq.n	80175a0 <_DrawBitmapCW+0x244>
 801755e:	f8df c0d4 	ldr.w	ip, [pc, #212]	; 8017634 <_DrawBitmapCW+0x2d8>
 8017562:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8017638 <_DrawBitmapCW+0x2dc>
 8017566:	f8dc 3000 	ldr.w	r3, [ip]
 801756a:	9906      	ldr	r1, [sp, #24]
 801756c:	7c5b      	ldrb	r3, [r3, #17]
 801756e:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8017572:	68c3      	ldr	r3, [r0, #12]
 8017574:	462a      	mov	r2, r5
 8017576:	695b      	ldr	r3, [r3, #20]
 8017578:	f8cd c000 	str.w	ip, [sp]
 801757c:	4798      	blx	r3
 801757e:	f8dd c000 	ldr.w	ip, [sp]
 8017582:	9f04      	ldr	r7, [sp, #16]
 8017584:	f8dc 3000 	ldr.w	r3, [ip]
 8017588:	7c5b      	ldrb	r3, [r3, #17]
 801758a:	f85a 2023 	ldr.w	r2, [sl, r3, lsl #2]
 801758e:	68d1      	ldr	r1, [r2, #12]
 8017590:	ea80 0307 	eor.w	r3, r0, r7
 8017594:	f8d1 c018 	ldr.w	ip, [r1, #24]
 8017598:	9906      	ldr	r1, [sp, #24]
 801759a:	4610      	mov	r0, r2
 801759c:	462a      	mov	r2, r5
 801759e:	47e0      	blx	ip
 80175a0:	f108 0801 	add.w	r8, r8, #1
 80175a4:	9f03      	ldr	r7, [sp, #12]
 80175a6:	f1b8 0f08 	cmp.w	r8, #8
 80175aa:	f105 0501 	add.w	r5, r5, #1
 80175ae:	bf04      	itt	eq
 80175b0:	f109 0901 	addeq.w	r9, r9, #1
 80175b4:	f04f 0800 	moveq.w	r8, #0
 80175b8:	42bd      	cmp	r5, r7
 80175ba:	d1c9      	bne.n	8017550 <_DrawBitmapCW+0x1f4>
 80175bc:	e083      	b.n	80176c6 <_DrawBitmapCW+0x36a>
 80175be:	4b1f      	ldr	r3, [pc, #124]	; (801763c <_DrawBitmapCW+0x2e0>)
 80175c0:	f894 a000 	ldrb.w	sl, [r4]
 80175c4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80175c6:	ad10      	add	r5, sp, #64	; 0x40
 80175c8:	e905 000f 	stmdb	r5, {r0, r1, r2, r3}
 80175cc:	2002      	movs	r0, #2
 80175ce:	9d02      	ldr	r5, [sp, #8]
 80175d0:	f000 fbfc 	bl	8017dcc <LCD__GetPfSetPixel>
 80175d4:	4435      	add	r5, r6
 80175d6:	4603      	mov	r3, r0
 80175d8:	eb05 0c0b 	add.w	ip, r5, fp
 80175dc:	46b0      	mov	r8, r6
 80175de:	46a1      	mov	r9, r4
 80175e0:	f1c8 0203 	rsb	r2, r8, #3
 80175e4:	0052      	lsls	r2, r2, #1
 80175e6:	f1c2 0106 	rsb	r1, r2, #6
 80175ea:	20c0      	movs	r0, #192	; 0xc0
 80175ec:	fa40 f101 	asr.w	r1, r0, r1
 80175f0:	ea01 010a 	and.w	r1, r1, sl
 80175f4:	fa21 f202 	lsr.w	r2, r1, r2
 80175f8:	af10      	add	r7, sp, #64	; 0x40
 80175fa:	eb07 0282 	add.w	r2, r7, r2, lsl #2
 80175fe:	4629      	mov	r1, r5
 8017600:	f812 2c10 	ldrb.w	r2, [r2, #-16]
 8017604:	9806      	ldr	r0, [sp, #24]
 8017606:	9301      	str	r3, [sp, #4]
 8017608:	f8cd c000 	str.w	ip, [sp]
 801760c:	f108 0801 	add.w	r8, r8, #1
 8017610:	4798      	blx	r3
 8017612:	f1b8 0f04 	cmp.w	r8, #4
 8017616:	f105 0501 	add.w	r5, r5, #1
 801761a:	9b01      	ldr	r3, [sp, #4]
 801761c:	f8dd c000 	ldr.w	ip, [sp]
 8017620:	d105      	bne.n	801762e <_DrawBitmapCW+0x2d2>
 8017622:	f899 a001 	ldrb.w	sl, [r9, #1]
 8017626:	f04f 0800 	mov.w	r8, #0
 801762a:	f109 0901 	add.w	r9, r9, #1
 801762e:	4565      	cmp	r5, ip
 8017630:	d1d6      	bne.n	80175e0 <_DrawBitmapCW+0x284>
 8017632:	e048      	b.n	80176c6 <_DrawBitmapCW+0x36a>
 8017634:	2000016c 	.word	0x2000016c
 8017638:	20019ca0 	.word	0x20019ca0
 801763c:	0801b30c 	.word	0x0801b30c
 8017640:	2004      	movs	r0, #4
 8017642:	9d02      	ldr	r5, [sp, #8]
 8017644:	f894 a000 	ldrb.w	sl, [r4]
 8017648:	f000 fbc0 	bl	8017dcc <LCD__GetPfSetPixel>
 801764c:	4435      	add	r5, r6
 801764e:	4603      	mov	r3, r0
 8017650:	eb05 0c0b 	add.w	ip, r5, fp
 8017654:	46b0      	mov	r8, r6
 8017656:	46a1      	mov	r9, r4
 8017658:	f1c8 0201 	rsb	r2, r8, #1
 801765c:	0092      	lsls	r2, r2, #2
 801765e:	f1c2 0104 	rsb	r1, r2, #4
 8017662:	20f0      	movs	r0, #240	; 0xf0
 8017664:	fa40 f101 	asr.w	r1, r0, r1
 8017668:	ea01 010a 	and.w	r1, r1, sl
 801766c:	fa21 f202 	lsr.w	r2, r1, r2
 8017670:	9301      	str	r3, [sp, #4]
 8017672:	4629      	mov	r1, r5
 8017674:	f8cd c000 	str.w	ip, [sp]
 8017678:	9806      	ldr	r0, [sp, #24]
 801767a:	b2d2      	uxtb	r2, r2
 801767c:	f108 0801 	add.w	r8, r8, #1
 8017680:	4798      	blx	r3
 8017682:	f1b8 0f02 	cmp.w	r8, #2
 8017686:	f105 0501 	add.w	r5, r5, #1
 801768a:	9b01      	ldr	r3, [sp, #4]
 801768c:	f8dd c000 	ldr.w	ip, [sp]
 8017690:	d105      	bne.n	801769e <_DrawBitmapCW+0x342>
 8017692:	f899 a001 	ldrb.w	sl, [r9, #1]
 8017696:	f04f 0800 	mov.w	r8, #0
 801769a:	f109 0901 	add.w	r9, r9, #1
 801769e:	4565      	cmp	r5, ip
 80176a0:	d1da      	bne.n	8017658 <_DrawBitmapCW+0x2fc>
 80176a2:	e010      	b.n	80176c6 <_DrawBitmapCW+0x36a>
 80176a4:	2008      	movs	r0, #8
 80176a6:	f000 fb91 	bl	8017dcc <LCD__GetPfSetPixel>
 80176aa:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80176ae:	9d02      	ldr	r5, [sp, #8]
 80176b0:	4681      	mov	r9, r0
 80176b2:	44d8      	add	r8, fp
 80176b4:	9f02      	ldr	r7, [sp, #8]
 80176b6:	9806      	ldr	r0, [sp, #24]
 80176b8:	1be3      	subs	r3, r4, r7
 80176ba:	4629      	mov	r1, r5
 80176bc:	5d5a      	ldrb	r2, [r3, r5]
 80176be:	3501      	adds	r5, #1
 80176c0:	47c8      	blx	r9
 80176c2:	4545      	cmp	r5, r8
 80176c4:	d1f6      	bne.n	80176b4 <_DrawBitmapCW+0x358>
 80176c6:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80176c8:	9f06      	ldr	r7, [sp, #24]
 80176ca:	442c      	add	r4, r5
 80176cc:	9d05      	ldr	r5, [sp, #20]
 80176ce:	3f01      	subs	r7, #1
 80176d0:	42af      	cmp	r7, r5
 80176d2:	9706      	str	r7, [sp, #24]
 80176d4:	f47f aebe 	bne.w	8017454 <_DrawBitmapCW+0xf8>
 80176d8:	e05e      	b.n	8017798 <_DrawBitmapCW+0x43c>
 80176da:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80176dc:	f1c7 0708 	rsb	r7, r7, #8
 80176e0:	9706      	str	r7, [sp, #24]
 80176e2:	2700      	movs	r7, #0
 80176e4:	4689      	mov	r9, r1
 80176e6:	46b8      	mov	r8, r7
 80176e8:	42af      	cmp	r7, r5
 80176ea:	da55      	bge.n	8017798 <_DrawBitmapCW+0x43c>
 80176ec:	4b2c      	ldr	r3, [pc, #176]	; (80177a0 <_DrawBitmapCW+0x444>)
 80176ee:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80176f0:	681b      	ldr	r3, [r3, #0]
 80176f2:	ebc0 0009 	rsb	r0, r0, r9
 80176f6:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 80176fa:	9004      	str	r0, [sp, #16]
 80176fc:	1c41      	adds	r1, r0, #1
 80176fe:	4291      	cmp	r1, r2
 8017700:	9105      	str	r1, [sp, #20]
 8017702:	db43      	blt.n	801778c <_DrawBitmapCW+0x430>
 8017704:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8017708:	4599      	cmp	r9, r3
 801770a:	dc3f      	bgt.n	801778c <_DrawBitmapCW+0x430>
 801770c:	2600      	movs	r6, #0
 801770e:	f8dd a020 	ldr.w	sl, [sp, #32]
 8017712:	9402      	str	r4, [sp, #8]
 8017714:	46b4      	mov	ip, r6
 8017716:	45dc      	cmp	ip, fp
 8017718:	da38      	bge.n	801778c <_DrawBitmapCW+0x430>
 801771a:	b92e      	cbnz	r6, 8017728 <_DrawBitmapCW+0x3cc>
 801771c:	9a02      	ldr	r2, [sp, #8]
 801771e:	f892 8000 	ldrb.w	r8, [r2]
 8017722:	3201      	adds	r2, #1
 8017724:	9202      	str	r2, [sp, #8]
 8017726:	2608      	movs	r6, #8
 8017728:	9806      	ldr	r0, [sp, #24]
 801772a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801772c:	4a1c      	ldr	r2, [pc, #112]	; (80177a0 <_DrawBitmapCW+0x444>)
 801772e:	fa48 f300 	asr.w	r3, r8, r0
 8017732:	1a76      	subs	r6, r6, r1
 8017734:	fa08 f801 	lsl.w	r8, r8, r1
 8017738:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 801773c:	fa5f f888 	uxtb.w	r8, r8
 8017740:	d103      	bne.n	801774a <_DrawBitmapCW+0x3ee>
 8017742:	6810      	ldr	r0, [r2, #0]
 8017744:	7c00      	ldrb	r0, [r0, #16]
 8017746:	0780      	lsls	r0, r0, #30
 8017748:	d41b      	bmi.n	8017782 <_DrawBitmapCW+0x426>
 801774a:	6812      	ldr	r2, [r2, #0]
 801774c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 801774e:	6810      	ldr	r0, [r2, #0]
 8017750:	9007      	str	r0, [sp, #28]
 8017752:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8017754:	b110      	cbz	r0, 801775c <_DrawBitmapCW+0x400>
 8017756:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 801775a:	e000      	b.n	801775e <_DrawBitmapCW+0x402>
 801775c:	b2db      	uxtb	r3, r3
 801775e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8017760:	6013      	str	r3, [r2, #0]
 8017762:	1e4b      	subs	r3, r1, #1
 8017764:	464a      	mov	r2, r9
 8017766:	4453      	add	r3, sl
 8017768:	9805      	ldr	r0, [sp, #20]
 801776a:	f8cd c000 	str.w	ip, [sp]
 801776e:	4651      	mov	r1, sl
 8017770:	f7f8 fe0c 	bl	801038c <LCD_FillRect>
 8017774:	4b0a      	ldr	r3, [pc, #40]	; (80177a0 <_DrawBitmapCW+0x444>)
 8017776:	9a07      	ldr	r2, [sp, #28]
 8017778:	681b      	ldr	r3, [r3, #0]
 801777a:	f8dd c000 	ldr.w	ip, [sp]
 801777e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017780:	601a      	str	r2, [r3, #0]
 8017782:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017784:	f10c 0c01 	add.w	ip, ip, #1
 8017788:	449a      	add	sl, r3
 801778a:	e7c4      	b.n	8017716 <_DrawBitmapCW+0x3ba>
 801778c:	981d      	ldr	r0, [sp, #116]	; 0x74
 801778e:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8017792:	3701      	adds	r7, #1
 8017794:	4404      	add	r4, r0
 8017796:	e7a7      	b.n	80176e8 <_DrawBitmapCW+0x38c>
 8017798:	b011      	add	sp, #68	; 0x44
 801779a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801779e:	bf00      	nop
 80177a0:	2000016c 	.word	0x2000016c

080177a4 <LCD_ReadRectEx>:
 80177a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177a8:	b087      	sub	sp, #28
 80177aa:	4617      	mov	r7, r2
 80177ac:	9304      	str	r3, [sp, #16]
 80177ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80177b0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80177b2:	68da      	ldr	r2, [r3, #12]
 80177b4:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80177b6:	f8d2 8014 	ldr.w	r8, [r2, #20]
 80177ba:	4606      	mov	r6, r0
 80177bc:	460d      	mov	r5, r1
 80177be:	b973      	cbnz	r3, 80177de <LCD_ReadRectEx+0x3a>
 80177c0:	4b71      	ldr	r3, [pc, #452]	; (8017988 <LCD_ReadRectEx+0x1e4>)
 80177c2:	681b      	ldr	r3, [r3, #0]
 80177c4:	7c58      	ldrb	r0, [r3, #17]
 80177c6:	f7f8 fca7 	bl	8010118 <GUI_GetBitsPerPixelEx>
 80177ca:	2808      	cmp	r0, #8
 80177cc:	4682      	mov	sl, r0
 80177ce:	dd15      	ble.n	80177fc <LCD_ReadRectEx+0x58>
 80177d0:	2810      	cmp	r0, #16
 80177d2:	bfcc      	ite	gt
 80177d4:	f04f 0904 	movgt.w	r9, #4
 80177d8:	f04f 0902 	movle.w	r9, #2
 80177dc:	e010      	b.n	8017800 <LCD_ReadRectEx+0x5c>
 80177de:	a811      	add	r0, sp, #68	; 0x44
 80177e0:	2101      	movs	r1, #1
 80177e2:	4798      	blx	r3
 80177e4:	4684      	mov	ip, r0
 80177e6:	2800      	cmp	r0, #0
 80177e8:	d0ea      	beq.n	80177c0 <LCD_ReadRectEx+0x1c>
 80177ea:	9b04      	ldr	r3, [sp, #16]
 80177ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80177ee:	e88d 0018 	stmia.w	sp, {r3, r4}
 80177f2:	4631      	mov	r1, r6
 80177f4:	462a      	mov	r2, r5
 80177f6:	463b      	mov	r3, r7
 80177f8:	47e0      	blx	ip
 80177fa:	e0c1      	b.n	8017980 <LCD_ReadRectEx+0x1dc>
 80177fc:	f04f 0901 	mov.w	r9, #1
 8017800:	f04f 0b00 	mov.w	fp, #0
 8017804:	9b04      	ldr	r3, [sp, #16]
 8017806:	429d      	cmp	r5, r3
 8017808:	f300 80ba 	bgt.w	8017980 <LCD_ReadRectEx+0x1dc>
 801780c:	f1b9 0f02 	cmp.w	r9, #2
 8017810:	d009      	beq.n	8017826 <LCD_ReadRectEx+0x82>
 8017812:	f1b9 0f04 	cmp.w	r9, #4
 8017816:	d004      	beq.n	8017822 <LCD_ReadRectEx+0x7e>
 8017818:	f1b9 0f01 	cmp.w	r9, #1
 801781c:	f040 80ae 	bne.w	801797c <LCD_ReadRectEx+0x1d8>
 8017820:	e003      	b.n	801782a <LCD_ReadRectEx+0x86>
 8017822:	46b4      	mov	ip, r6
 8017824:	e09b      	b.n	801795e <LCD_ReadRectEx+0x1ba>
 8017826:	46b4      	mov	ip, r6
 8017828:	e08a      	b.n	8017940 <LCD_ReadRectEx+0x19c>
 801782a:	f10a 32ff 	add.w	r2, sl, #4294967295
 801782e:	2a07      	cmp	r2, #7
 8017830:	f200 80a4 	bhi.w	801797c <LCD_ReadRectEx+0x1d8>
 8017834:	e8df f002 	tbb	[pc, r2]
 8017838:	0606080a 	.word	0x0606080a
 801783c:	04040404 	.word	0x04040404
 8017840:	46b4      	mov	ip, r6
 8017842:	e066      	b.n	8017912 <LCD_ReadRectEx+0x16e>
 8017844:	46b4      	mov	ip, r6
 8017846:	e047      	b.n	80178d8 <LCD_ReadRectEx+0x134>
 8017848:	46b4      	mov	ip, r6
 801784a:	e022      	b.n	8017892 <LCD_ReadRectEx+0xee>
 801784c:	46b4      	mov	ip, r6
 801784e:	45bc      	cmp	ip, r7
 8017850:	f300 8094 	bgt.w	801797c <LCD_ReadRectEx+0x1d8>
 8017854:	4661      	mov	r1, ip
 8017856:	462a      	mov	r2, r5
 8017858:	f8cd c00c 	str.w	ip, [sp, #12]
 801785c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801785e:	47c0      	blx	r8
 8017860:	f1cb 0207 	rsb	r2, fp, #7
 8017864:	fa00 f202 	lsl.w	r2, r0, r2
 8017868:	f64f 717f 	movw	r1, #65407	; 0xff7f
 801786c:	7820      	ldrb	r0, [r4, #0]
 801786e:	fa41 f10b 	asr.w	r1, r1, fp
 8017872:	4001      	ands	r1, r0
 8017874:	430a      	orrs	r2, r1
 8017876:	7022      	strb	r2, [r4, #0]
 8017878:	f10b 0301 	add.w	r3, fp, #1
 801787c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017880:	f023 0207 	bic.w	r2, r3, #7
 8017884:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8017888:	fa43 fb02 	asr.w	fp, r3, r2
 801788c:	f10c 0c01 	add.w	ip, ip, #1
 8017890:	e7dd      	b.n	801784e <LCD_ReadRectEx+0xaa>
 8017892:	45bc      	cmp	ip, r7
 8017894:	dc72      	bgt.n	801797c <LCD_ReadRectEx+0x1d8>
 8017896:	4661      	mov	r1, ip
 8017898:	462a      	mov	r2, r5
 801789a:	f8cd c00c 	str.w	ip, [sp, #12]
 801789e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80178a0:	47c0      	blx	r8
 80178a2:	ea4f 024b 	mov.w	r2, fp, lsl #1
 80178a6:	f1c2 0106 	rsb	r1, r2, #6
 80178aa:	fa00 f101 	lsl.w	r1, r0, r1
 80178ae:	f64f 703f 	movw	r0, #65343	; 0xff3f
 80178b2:	fa40 f202 	asr.w	r2, r0, r2
 80178b6:	7820      	ldrb	r0, [r4, #0]
 80178b8:	4002      	ands	r2, r0
 80178ba:	4311      	orrs	r1, r2
 80178bc:	7021      	strb	r1, [r4, #0]
 80178be:	f10b 0301 	add.w	r3, fp, #1
 80178c2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80178c6:	f023 0203 	bic.w	r2, r3, #3
 80178ca:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 80178ce:	fa43 fb02 	asr.w	fp, r3, r2
 80178d2:	f10c 0c01 	add.w	ip, ip, #1
 80178d6:	e7dc      	b.n	8017892 <LCD_ReadRectEx+0xee>
 80178d8:	45bc      	cmp	ip, r7
 80178da:	dc4f      	bgt.n	801797c <LCD_ReadRectEx+0x1d8>
 80178dc:	4661      	mov	r1, ip
 80178de:	462a      	mov	r2, r5
 80178e0:	f8cd c00c 	str.w	ip, [sp, #12]
 80178e4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80178e6:	47c0      	blx	r8
 80178e8:	ea4f 028b 	mov.w	r2, fp, lsl #2
 80178ec:	f1c2 0104 	rsb	r1, r2, #4
 80178f0:	fa00 f101 	lsl.w	r1, r0, r1
 80178f4:	200f      	movs	r0, #15
 80178f6:	fa00 f202 	lsl.w	r2, r0, r2
 80178fa:	7820      	ldrb	r0, [r4, #0]
 80178fc:	4002      	ands	r2, r0
 80178fe:	4311      	orrs	r1, r2
 8017900:	7021      	strb	r1, [r4, #0]
 8017902:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017906:	445c      	add	r4, fp
 8017908:	f10c 0c01 	add.w	ip, ip, #1
 801790c:	f08b 0b01 	eor.w	fp, fp, #1
 8017910:	e7e2      	b.n	80178d8 <LCD_ReadRectEx+0x134>
 8017912:	4273      	negs	r3, r6
 8017914:	1ba2      	subs	r2, r4, r6
 8017916:	45bc      	cmp	ip, r7
 8017918:	9305      	str	r3, [sp, #20]
 801791a:	4462      	add	r2, ip
 801791c:	dc0e      	bgt.n	801793c <LCD_ReadRectEx+0x198>
 801791e:	4661      	mov	r1, ip
 8017920:	462a      	mov	r2, r5
 8017922:	f8cd c00c 	str.w	ip, [sp, #12]
 8017926:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017928:	47c0      	blx	r8
 801792a:	9a05      	ldr	r2, [sp, #20]
 801792c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017930:	4422      	add	r2, r4
 8017932:	f802 000c 	strb.w	r0, [r2, ip]
 8017936:	f10c 0c01 	add.w	ip, ip, #1
 801793a:	e7ea      	b.n	8017912 <LCD_ReadRectEx+0x16e>
 801793c:	4614      	mov	r4, r2
 801793e:	e01d      	b.n	801797c <LCD_ReadRectEx+0x1d8>
 8017940:	45bc      	cmp	ip, r7
 8017942:	dc1b      	bgt.n	801797c <LCD_ReadRectEx+0x1d8>
 8017944:	4661      	mov	r1, ip
 8017946:	f8cd c00c 	str.w	ip, [sp, #12]
 801794a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801794c:	462a      	mov	r2, r5
 801794e:	47c0      	blx	r8
 8017950:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017954:	f824 0b02 	strh.w	r0, [r4], #2
 8017958:	f10c 0c01 	add.w	ip, ip, #1
 801795c:	e7f0      	b.n	8017940 <LCD_ReadRectEx+0x19c>
 801795e:	45bc      	cmp	ip, r7
 8017960:	dc0c      	bgt.n	801797c <LCD_ReadRectEx+0x1d8>
 8017962:	4661      	mov	r1, ip
 8017964:	f8cd c00c 	str.w	ip, [sp, #12]
 8017968:	9811      	ldr	r0, [sp, #68]	; 0x44
 801796a:	462a      	mov	r2, r5
 801796c:	47c0      	blx	r8
 801796e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017972:	f844 0b04 	str.w	r0, [r4], #4
 8017976:	f10c 0c01 	add.w	ip, ip, #1
 801797a:	e7f0      	b.n	801795e <LCD_ReadRectEx+0x1ba>
 801797c:	3501      	adds	r5, #1
 801797e:	e741      	b.n	8017804 <LCD_ReadRectEx+0x60>
 8017980:	b007      	add	sp, #28
 8017982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017986:	bf00      	nop
 8017988:	2000016c 	.word	0x2000016c

0801798c <GUI_ReadRectEx>:
 801798c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801798e:	4d16      	ldr	r5, [pc, #88]	; (80179e8 <GUI_ReadRectEx+0x5c>)
 8017990:	9e05      	ldr	r6, [sp, #20]
 8017992:	682d      	ldr	r5, [r5, #0]
 8017994:	9c06      	ldr	r4, [sp, #24]
 8017996:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 801799a:	42b8      	cmp	r0, r7
 801799c:	bfb8      	it	lt
 801799e:	4638      	movlt	r0, r7
 80179a0:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 80179a4:	42ba      	cmp	r2, r7
 80179a6:	bfa8      	it	ge
 80179a8:	463a      	movge	r2, r7
 80179aa:	4282      	cmp	r2, r0
 80179ac:	db1b      	blt.n	80179e6 <GUI_ReadRectEx+0x5a>
 80179ae:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 80179b2:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 80179b6:	42b9      	cmp	r1, r7
 80179b8:	bfb8      	it	lt
 80179ba:	4639      	movlt	r1, r7
 80179bc:	42ab      	cmp	r3, r5
 80179be:	bfa8      	it	ge
 80179c0:	462b      	movge	r3, r5
 80179c2:	428b      	cmp	r3, r1
 80179c4:	db0f      	blt.n	80179e6 <GUI_ReadRectEx+0x5a>
 80179c6:	68e5      	ldr	r5, [r4, #12]
 80179c8:	682d      	ldr	r5, [r5, #0]
 80179ca:	f035 0704 	bics.w	r7, r5, #4
 80179ce:	d105      	bne.n	80179dc <GUI_ReadRectEx+0x50>
 80179d0:	9605      	str	r6, [sp, #20]
 80179d2:	9406      	str	r4, [sp, #24]
 80179d4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80179d8:	f7ff bee4 	b.w	80177a4 <LCD_ReadRectEx>
 80179dc:	6825      	ldr	r5, [r4, #0]
 80179de:	2d00      	cmp	r5, #0
 80179e0:	d0f6      	beq.n	80179d0 <GUI_ReadRectEx+0x44>
 80179e2:	462c      	mov	r4, r5
 80179e4:	e7ef      	b.n	80179c6 <GUI_ReadRectEx+0x3a>
 80179e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80179e8:	2000016c 	.word	0x2000016c

080179ec <_OnExit>:
 80179ec:	b510      	push	{r4, lr}
 80179ee:	4c03      	ldr	r4, [pc, #12]	; (80179fc <_OnExit+0x10>)
 80179f0:	6820      	ldr	r0, [r4, #0]
 80179f2:	f7fb fb61 	bl	80130b8 <GUI_ALLOC_FreeFixedBlock>
 80179f6:	2300      	movs	r3, #0
 80179f8:	6023      	str	r3, [r4, #0]
 80179fa:	bd10      	pop	{r4, pc}
 80179fc:	20019da0 	.word	0x20019da0

08017a00 <LCD_InitColors>:
 8017a00:	b538      	push	{r3, r4, r5, lr}
 8017a02:	4d09      	ldr	r5, [pc, #36]	; (8017a28 <LCD_InitColors+0x28>)
 8017a04:	682c      	ldr	r4, [r5, #0]
 8017a06:	b95c      	cbnz	r4, 8017a20 <LCD_InitColors+0x20>
 8017a08:	4b08      	ldr	r3, [pc, #32]	; (8017a2c <LCD_InitColors+0x2c>)
 8017a0a:	6818      	ldr	r0, [r3, #0]
 8017a0c:	0080      	lsls	r0, r0, #2
 8017a0e:	f7fb fcbf 	bl	8013390 <GUI_ALLOC_GetFixedBlock>
 8017a12:	6028      	str	r0, [r5, #0]
 8017a14:	b130      	cbz	r0, 8017a24 <LCD_InitColors+0x24>
 8017a16:	4806      	ldr	r0, [pc, #24]	; (8017a30 <LCD_InitColors+0x30>)
 8017a18:	4b06      	ldr	r3, [pc, #24]	; (8017a34 <LCD_InitColors+0x34>)
 8017a1a:	6003      	str	r3, [r0, #0]
 8017a1c:	f7fa ff40 	bl	80128a0 <GUI__RegisterExit>
 8017a20:	2000      	movs	r0, #0
 8017a22:	bd38      	pop	{r3, r4, r5, pc}
 8017a24:	2001      	movs	r0, #1
 8017a26:	bd38      	pop	{r3, r4, r5, pc}
 8017a28:	20019da0 	.word	0x20019da0
 8017a2c:	20000324 	.word	0x20000324
 8017a30:	200196e8 	.word	0x200196e8
 8017a34:	080179ed 	.word	0x080179ed

08017a38 <LCD_InitLUT>:
 8017a38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017a3c:	f002 f9a6 	bl	8019d8c <LCD_GetNumLayers>
 8017a40:	2400      	movs	r4, #0
 8017a42:	4680      	mov	r8, r0
 8017a44:	4544      	cmp	r4, r8
 8017a46:	da2c      	bge.n	8017aa2 <LCD_InitLUT+0x6a>
 8017a48:	4620      	mov	r0, r4
 8017a4a:	f7fa fdef 	bl	801262c <GUI_DEVICE__GetpDriver>
 8017a4e:	b330      	cbz	r0, 8017a9e <LCD_InitLUT+0x66>
 8017a50:	4e15      	ldr	r6, [pc, #84]	; (8017aa8 <LCD_InitLUT+0x70>)
 8017a52:	6833      	ldr	r3, [r6, #0]
 8017a54:	4620      	mov	r0, r4
 8017a56:	f893 9011 	ldrb.w	r9, [r3, #17]
 8017a5a:	745c      	strb	r4, [r3, #17]
 8017a5c:	f7f8 fb3e 	bl	80100dc <LCD_GetBitsPerPixelEx>
 8017a60:	2808      	cmp	r0, #8
 8017a62:	dd03      	ble.n	8017a6c <LCD_InitLUT+0x34>
 8017a64:	6833      	ldr	r3, [r6, #0]
 8017a66:	f883 9011 	strb.w	r9, [r3, #17]
 8017a6a:	e018      	b.n	8017a9e <LCD_InitLUT+0x66>
 8017a6c:	4b0f      	ldr	r3, [pc, #60]	; (8017aac <LCD_InitLUT+0x74>)
 8017a6e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8017a72:	691a      	ldr	r2, [r3, #16]
 8017a74:	4b0e      	ldr	r3, [pc, #56]	; (8017ab0 <LCD_InitLUT+0x78>)
 8017a76:	429a      	cmp	r2, r3
 8017a78:	d0f4      	beq.n	8017a64 <LCD_InitLUT+0x2c>
 8017a7a:	4620      	mov	r0, r4
 8017a7c:	f7f8 fb31 	bl	80100e2 <LCD_GetNumColorsEx>
 8017a80:	2500      	movs	r5, #0
 8017a82:	4682      	mov	sl, r0
 8017a84:	4555      	cmp	r5, sl
 8017a86:	daed      	bge.n	8017a64 <LCD_InitLUT+0x2c>
 8017a88:	b2ef      	uxtb	r7, r5
 8017a8a:	4638      	mov	r0, r7
 8017a8c:	f7f8 fefc 	bl	8010888 <LCD_Index2Color>
 8017a90:	4639      	mov	r1, r7
 8017a92:	4602      	mov	r2, r0
 8017a94:	4620      	mov	r0, r4
 8017a96:	f7f8 fac5 	bl	8010024 <LCD_SetLUTEntryEx>
 8017a9a:	3501      	adds	r5, #1
 8017a9c:	e7f2      	b.n	8017a84 <LCD_InitLUT+0x4c>
 8017a9e:	3401      	adds	r4, #1
 8017aa0:	e7d0      	b.n	8017a44 <LCD_InitLUT+0xc>
 8017aa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017aa6:	bf00      	nop
 8017aa8:	2000016c 	.word	0x2000016c
 8017aac:	20019ca0 	.word	0x20019ca0
 8017ab0:	08021c20 	.word	0x08021c20

08017ab4 <LCD_AA_SetAndMask>:
 8017ab4:	4b02      	ldr	r3, [pc, #8]	; (8017ac0 <LCD_AA_SetAndMask+0xc>)
 8017ab6:	681a      	ldr	r2, [r3, #0]
 8017ab8:	6018      	str	r0, [r3, #0]
 8017aba:	4610      	mov	r0, r2
 8017abc:	4770      	bx	lr
 8017abe:	bf00      	nop
 8017ac0:	20000328 	.word	0x20000328

08017ac4 <LCD_AA_MixColors16>:
 8017ac4:	b538      	push	{r3, r4, r5, lr}
 8017ac6:	0e0d      	lsrs	r5, r1, #24
 8017ac8:	2dff      	cmp	r5, #255	; 0xff
 8017aca:	460b      	mov	r3, r1
 8017acc:	d11e      	bne.n	8017b0c <LCD_AA_MixColors16+0x48>
 8017ace:	0e01      	lsrs	r1, r0, #24
 8017ad0:	d109      	bne.n	8017ae6 <LCD_AA_MixColors16+0x22>
 8017ad2:	f06f 0310 	mvn.w	r3, #16
 8017ad6:	4353      	muls	r3, r2
 8017ad8:	4a12      	ldr	r2, [pc, #72]	; (8017b24 <LCD_AA_MixColors16+0x60>)
 8017ada:	33ff      	adds	r3, #255	; 0xff
 8017adc:	6811      	ldr	r1, [r2, #0]
 8017ade:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8017ae2:	400b      	ands	r3, r1
 8017ae4:	e01b      	b.n	8017b1e <LCD_AA_MixColors16+0x5a>
 8017ae6:	29fe      	cmp	r1, #254	; 0xfe
 8017ae8:	d819      	bhi.n	8017b1e <LCD_AA_MixColors16+0x5a>
 8017aea:	f06f 0310 	mvn.w	r3, #16
 8017aee:	435a      	muls	r2, r3
 8017af0:	32ff      	adds	r2, #255	; 0xff
 8017af2:	f1c2 03ff 	rsb	r3, r2, #255	; 0xff
 8017af6:	434b      	muls	r3, r1
 8017af8:	fbb3 f3f5 	udiv	r3, r3, r5
 8017afc:	4413      	add	r3, r2
 8017afe:	4a09      	ldr	r2, [pc, #36]	; (8017b24 <LCD_AA_MixColors16+0x60>)
 8017b00:	f020 447f 	bic.w	r4, r0, #4278190080	; 0xff000000
 8017b04:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
 8017b08:	6810      	ldr	r0, [r2, #0]
 8017b0a:	e007      	b.n	8017b1c <LCD_AA_MixColors16+0x58>
 8017b0c:	4b06      	ldr	r3, [pc, #24]	; (8017b28 <LCD_AA_MixColors16+0x64>)
 8017b0e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017b12:	681d      	ldr	r5, [r3, #0]
 8017b14:	b2d2      	uxtb	r2, r2
 8017b16:	47a8      	blx	r5
 8017b18:	4b02      	ldr	r3, [pc, #8]	; (8017b24 <LCD_AA_MixColors16+0x60>)
 8017b1a:	681b      	ldr	r3, [r3, #0]
 8017b1c:	4003      	ands	r3, r0
 8017b1e:	4618      	mov	r0, r3
 8017b20:	bd38      	pop	{r3, r4, r5, pc}
 8017b22:	bf00      	nop
 8017b24:	20000328 	.word	0x20000328
 8017b28:	20000150 	.word	0x20000150

08017b2c <LCD_SetPixelAA4_Trans>:
 8017b2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017b30:	4605      	mov	r5, r0
 8017b32:	460c      	mov	r4, r1
 8017b34:	4616      	mov	r6, r2
 8017b36:	2a00      	cmp	r2, #0
 8017b38:	d03d      	beq.n	8017bb6 <LCD_SetPixelAA4_Trans+0x8a>
 8017b3a:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8017bc0 <LCD_SetPixelAA4_Trans+0x94>
 8017b3e:	f8d8 3000 	ldr.w	r3, [r8]
 8017b42:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8017b46:	4291      	cmp	r1, r2
 8017b48:	db35      	blt.n	8017bb6 <LCD_SetPixelAA4_Trans+0x8a>
 8017b4a:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 8017b4e:	4291      	cmp	r1, r2
 8017b50:	dc31      	bgt.n	8017bb6 <LCD_SetPixelAA4_Trans+0x8a>
 8017b52:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8017b56:	4290      	cmp	r0, r2
 8017b58:	db2d      	blt.n	8017bb6 <LCD_SetPixelAA4_Trans+0x8a>
 8017b5a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017b5e:	4290      	cmp	r0, r2
 8017b60:	dc29      	bgt.n	8017bb6 <LCD_SetPixelAA4_Trans+0x8a>
 8017b62:	2e0e      	cmp	r6, #14
 8017b64:	4f15      	ldr	r7, [pc, #84]	; (8017bbc <LCD_SetPixelAA4_Trans+0x90>)
 8017b66:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8017b6a:	d909      	bls.n	8017b80 <LCD_SetPixelAA4_Trans+0x54>
 8017b6c:	7c5b      	ldrb	r3, [r3, #17]
 8017b6e:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8017b72:	68c3      	ldr	r3, [r0, #12]
 8017b74:	4629      	mov	r1, r5
 8017b76:	699e      	ldr	r6, [r3, #24]
 8017b78:	f8de 3000 	ldr.w	r3, [lr]
 8017b7c:	4622      	mov	r2, r4
 8017b7e:	e019      	b.n	8017bb4 <LCD_SetPixelAA4_Trans+0x88>
 8017b80:	f8de 0000 	ldr.w	r0, [lr]
 8017b84:	f7f8 fe80 	bl	8010888 <LCD_Index2Color>
 8017b88:	4621      	mov	r1, r4
 8017b8a:	4681      	mov	r9, r0
 8017b8c:	4628      	mov	r0, r5
 8017b8e:	f002 f8c8 	bl	8019d22 <LCD_GetPixelColor>
 8017b92:	4632      	mov	r2, r6
 8017b94:	4601      	mov	r1, r0
 8017b96:	4648      	mov	r0, r9
 8017b98:	f7ff ff94 	bl	8017ac4 <LCD_AA_MixColors16>
 8017b9c:	f7f8 fe64 	bl	8010868 <LCD_Color2Index>
 8017ba0:	f8d8 2000 	ldr.w	r2, [r8]
 8017ba4:	7c52      	ldrb	r2, [r2, #17]
 8017ba6:	4603      	mov	r3, r0
 8017ba8:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
 8017bac:	68c1      	ldr	r1, [r0, #12]
 8017bae:	4622      	mov	r2, r4
 8017bb0:	698e      	ldr	r6, [r1, #24]
 8017bb2:	4629      	mov	r1, r5
 8017bb4:	47b0      	blx	r6
 8017bb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017bba:	bf00      	nop
 8017bbc:	20019ca0 	.word	0x20019ca0
 8017bc0:	2000016c 	.word	0x2000016c

08017bc4 <LCD_SetPixelAA4_NoTrans>:
 8017bc4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017bc8:	4f27      	ldr	r7, [pc, #156]	; (8017c68 <LCD_SetPixelAA4_NoTrans+0xa4>)
 8017bca:	683b      	ldr	r3, [r7, #0]
 8017bcc:	4690      	mov	r8, r2
 8017bce:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8017bd2:	4291      	cmp	r1, r2
 8017bd4:	4605      	mov	r5, r0
 8017bd6:	460c      	mov	r4, r1
 8017bd8:	db43      	blt.n	8017c62 <LCD_SetPixelAA4_NoTrans+0x9e>
 8017bda:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 8017bde:	4291      	cmp	r1, r2
 8017be0:	dc3f      	bgt.n	8017c62 <LCD_SetPixelAA4_NoTrans+0x9e>
 8017be2:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8017be6:	4290      	cmp	r0, r2
 8017be8:	db3b      	blt.n	8017c62 <LCD_SetPixelAA4_NoTrans+0x9e>
 8017bea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017bee:	4290      	cmp	r0, r2
 8017bf0:	dc37      	bgt.n	8017c62 <LCD_SetPixelAA4_NoTrans+0x9e>
 8017bf2:	4e1e      	ldr	r6, [pc, #120]	; (8017c6c <LCD_SetPixelAA4_NoTrans+0xa8>)
 8017bf4:	f1b8 0f00 	cmp.w	r8, #0
 8017bf8:	d109      	bne.n	8017c0e <LCD_SetPixelAA4_NoTrans+0x4a>
 8017bfa:	7c5a      	ldrb	r2, [r3, #17]
 8017bfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017bfe:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 8017c02:	681b      	ldr	r3, [r3, #0]
 8017c04:	68c2      	ldr	r2, [r0, #12]
 8017c06:	4629      	mov	r1, r5
 8017c08:	6996      	ldr	r6, [r2, #24]
 8017c0a:	4622      	mov	r2, r4
 8017c0c:	e028      	b.n	8017c60 <LCD_SetPixelAA4_NoTrans+0x9c>
 8017c0e:	f1b8 0f0f 	cmp.w	r8, #15
 8017c12:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8017c16:	d109      	bne.n	8017c2c <LCD_SetPixelAA4_NoTrans+0x68>
 8017c18:	7c5b      	ldrb	r3, [r3, #17]
 8017c1a:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 8017c1e:	68c3      	ldr	r3, [r0, #12]
 8017c20:	4629      	mov	r1, r5
 8017c22:	699e      	ldr	r6, [r3, #24]
 8017c24:	f8de 3000 	ldr.w	r3, [lr]
 8017c28:	4622      	mov	r2, r4
 8017c2a:	e019      	b.n	8017c60 <LCD_SetPixelAA4_NoTrans+0x9c>
 8017c2c:	f8de 0000 	ldr.w	r0, [lr]
 8017c30:	f7f8 fe2a 	bl	8010888 <LCD_Index2Color>
 8017c34:	683b      	ldr	r3, [r7, #0]
 8017c36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017c38:	4681      	mov	r9, r0
 8017c3a:	6818      	ldr	r0, [r3, #0]
 8017c3c:	f7f8 fe24 	bl	8010888 <LCD_Index2Color>
 8017c40:	4642      	mov	r2, r8
 8017c42:	4601      	mov	r1, r0
 8017c44:	4648      	mov	r0, r9
 8017c46:	f7ff ff3d 	bl	8017ac4 <LCD_AA_MixColors16>
 8017c4a:	f7f8 fe0d 	bl	8010868 <LCD_Color2Index>
 8017c4e:	683a      	ldr	r2, [r7, #0]
 8017c50:	7c52      	ldrb	r2, [r2, #17]
 8017c52:	4603      	mov	r3, r0
 8017c54:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 8017c58:	68c1      	ldr	r1, [r0, #12]
 8017c5a:	4622      	mov	r2, r4
 8017c5c:	698e      	ldr	r6, [r1, #24]
 8017c5e:	4629      	mov	r1, r5
 8017c60:	47b0      	blx	r6
 8017c62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017c66:	bf00      	nop
 8017c68:	2000016c 	.word	0x2000016c
 8017c6c:	20019ca0 	.word	0x20019ca0

08017c70 <LCD_AA_MixColors256>:
 8017c70:	b508      	push	{r3, lr}
 8017c72:	4b03      	ldr	r3, [pc, #12]	; (8017c80 <LCD_AA_MixColors256+0x10>)
 8017c74:	681b      	ldr	r3, [r3, #0]
 8017c76:	4798      	blx	r3
 8017c78:	4b02      	ldr	r3, [pc, #8]	; (8017c84 <LCD_AA_MixColors256+0x14>)
 8017c7a:	681b      	ldr	r3, [r3, #0]
 8017c7c:	4018      	ands	r0, r3
 8017c7e:	bd08      	pop	{r3, pc}
 8017c80:	20000150 	.word	0x20000150
 8017c84:	20000328 	.word	0x20000328

08017c88 <LCD_SetPixelAA8_Trans>:
 8017c88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017c8c:	4605      	mov	r5, r0
 8017c8e:	460c      	mov	r4, r1
 8017c90:	4616      	mov	r6, r2
 8017c92:	2a00      	cmp	r2, #0
 8017c94:	d03d      	beq.n	8017d12 <LCD_SetPixelAA8_Trans+0x8a>
 8017c96:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8017d1c <LCD_SetPixelAA8_Trans+0x94>
 8017c9a:	f8d8 3000 	ldr.w	r3, [r8]
 8017c9e:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8017ca2:	4291      	cmp	r1, r2
 8017ca4:	db35      	blt.n	8017d12 <LCD_SetPixelAA8_Trans+0x8a>
 8017ca6:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 8017caa:	4291      	cmp	r1, r2
 8017cac:	dc31      	bgt.n	8017d12 <LCD_SetPixelAA8_Trans+0x8a>
 8017cae:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8017cb2:	4290      	cmp	r0, r2
 8017cb4:	db2d      	blt.n	8017d12 <LCD_SetPixelAA8_Trans+0x8a>
 8017cb6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017cba:	4290      	cmp	r0, r2
 8017cbc:	dc29      	bgt.n	8017d12 <LCD_SetPixelAA8_Trans+0x8a>
 8017cbe:	2eff      	cmp	r6, #255	; 0xff
 8017cc0:	4f15      	ldr	r7, [pc, #84]	; (8017d18 <LCD_SetPixelAA8_Trans+0x90>)
 8017cc2:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8017cc6:	d109      	bne.n	8017cdc <LCD_SetPixelAA8_Trans+0x54>
 8017cc8:	7c5b      	ldrb	r3, [r3, #17]
 8017cca:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8017cce:	68c3      	ldr	r3, [r0, #12]
 8017cd0:	4629      	mov	r1, r5
 8017cd2:	699e      	ldr	r6, [r3, #24]
 8017cd4:	f8de 3000 	ldr.w	r3, [lr]
 8017cd8:	4622      	mov	r2, r4
 8017cda:	e019      	b.n	8017d10 <LCD_SetPixelAA8_Trans+0x88>
 8017cdc:	f8de 0000 	ldr.w	r0, [lr]
 8017ce0:	f7f8 fdd2 	bl	8010888 <LCD_Index2Color>
 8017ce4:	4621      	mov	r1, r4
 8017ce6:	4681      	mov	r9, r0
 8017ce8:	4628      	mov	r0, r5
 8017cea:	f002 f81a 	bl	8019d22 <LCD_GetPixelColor>
 8017cee:	4632      	mov	r2, r6
 8017cf0:	4601      	mov	r1, r0
 8017cf2:	4648      	mov	r0, r9
 8017cf4:	f7ff ffbc 	bl	8017c70 <LCD_AA_MixColors256>
 8017cf8:	f7f8 fdb6 	bl	8010868 <LCD_Color2Index>
 8017cfc:	f8d8 2000 	ldr.w	r2, [r8]
 8017d00:	7c52      	ldrb	r2, [r2, #17]
 8017d02:	4603      	mov	r3, r0
 8017d04:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
 8017d08:	68c1      	ldr	r1, [r0, #12]
 8017d0a:	4622      	mov	r2, r4
 8017d0c:	698e      	ldr	r6, [r1, #24]
 8017d0e:	4629      	mov	r1, r5
 8017d10:	47b0      	blx	r6
 8017d12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017d16:	bf00      	nop
 8017d18:	20019ca0 	.word	0x20019ca0
 8017d1c:	2000016c 	.word	0x2000016c

08017d20 <LCD_SetPixelAA8_NoTrans>:
 8017d20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017d24:	4f27      	ldr	r7, [pc, #156]	; (8017dc4 <LCD_SetPixelAA8_NoTrans+0xa4>)
 8017d26:	683b      	ldr	r3, [r7, #0]
 8017d28:	4690      	mov	r8, r2
 8017d2a:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8017d2e:	4291      	cmp	r1, r2
 8017d30:	4605      	mov	r5, r0
 8017d32:	460c      	mov	r4, r1
 8017d34:	db43      	blt.n	8017dbe <LCD_SetPixelAA8_NoTrans+0x9e>
 8017d36:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 8017d3a:	4291      	cmp	r1, r2
 8017d3c:	dc3f      	bgt.n	8017dbe <LCD_SetPixelAA8_NoTrans+0x9e>
 8017d3e:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8017d42:	4290      	cmp	r0, r2
 8017d44:	db3b      	blt.n	8017dbe <LCD_SetPixelAA8_NoTrans+0x9e>
 8017d46:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017d4a:	4290      	cmp	r0, r2
 8017d4c:	dc37      	bgt.n	8017dbe <LCD_SetPixelAA8_NoTrans+0x9e>
 8017d4e:	4e1e      	ldr	r6, [pc, #120]	; (8017dc8 <LCD_SetPixelAA8_NoTrans+0xa8>)
 8017d50:	f1b8 0f00 	cmp.w	r8, #0
 8017d54:	d109      	bne.n	8017d6a <LCD_SetPixelAA8_NoTrans+0x4a>
 8017d56:	7c5a      	ldrb	r2, [r3, #17]
 8017d58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d5a:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 8017d5e:	681b      	ldr	r3, [r3, #0]
 8017d60:	68c2      	ldr	r2, [r0, #12]
 8017d62:	4629      	mov	r1, r5
 8017d64:	6996      	ldr	r6, [r2, #24]
 8017d66:	4622      	mov	r2, r4
 8017d68:	e028      	b.n	8017dbc <LCD_SetPixelAA8_NoTrans+0x9c>
 8017d6a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017d6e:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8017d72:	d109      	bne.n	8017d88 <LCD_SetPixelAA8_NoTrans+0x68>
 8017d74:	7c5b      	ldrb	r3, [r3, #17]
 8017d76:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 8017d7a:	68c3      	ldr	r3, [r0, #12]
 8017d7c:	4629      	mov	r1, r5
 8017d7e:	699e      	ldr	r6, [r3, #24]
 8017d80:	f8de 3000 	ldr.w	r3, [lr]
 8017d84:	4622      	mov	r2, r4
 8017d86:	e019      	b.n	8017dbc <LCD_SetPixelAA8_NoTrans+0x9c>
 8017d88:	f8de 0000 	ldr.w	r0, [lr]
 8017d8c:	f7f8 fd7c 	bl	8010888 <LCD_Index2Color>
 8017d90:	683b      	ldr	r3, [r7, #0]
 8017d92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d94:	4681      	mov	r9, r0
 8017d96:	6818      	ldr	r0, [r3, #0]
 8017d98:	f7f8 fd76 	bl	8010888 <LCD_Index2Color>
 8017d9c:	4642      	mov	r2, r8
 8017d9e:	4601      	mov	r1, r0
 8017da0:	4648      	mov	r0, r9
 8017da2:	f7ff ff65 	bl	8017c70 <LCD_AA_MixColors256>
 8017da6:	f7f8 fd5f 	bl	8010868 <LCD_Color2Index>
 8017daa:	683a      	ldr	r2, [r7, #0]
 8017dac:	7c52      	ldrb	r2, [r2, #17]
 8017dae:	4603      	mov	r3, r0
 8017db0:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 8017db4:	68c1      	ldr	r1, [r0, #12]
 8017db6:	4622      	mov	r2, r4
 8017db8:	698e      	ldr	r6, [r1, #24]
 8017dba:	4629      	mov	r1, r5
 8017dbc:	47b0      	blx	r6
 8017dbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017dc2:	bf00      	nop
 8017dc4:	2000016c 	.word	0x2000016c
 8017dc8:	20019ca0 	.word	0x20019ca0

08017dcc <LCD__GetPfSetPixel>:
 8017dcc:	2804      	cmp	r0, #4
 8017dce:	d003      	beq.n	8017dd8 <LCD__GetPfSetPixel+0xc>
 8017dd0:	2808      	cmp	r0, #8
 8017dd2:	d009      	beq.n	8017de8 <LCD__GetPfSetPixel+0x1c>
 8017dd4:	2802      	cmp	r0, #2
 8017dd6:	d111      	bne.n	8017dfc <LCD__GetPfSetPixel+0x30>
 8017dd8:	4b09      	ldr	r3, [pc, #36]	; (8017e00 <LCD__GetPfSetPixel+0x34>)
 8017dda:	480a      	ldr	r0, [pc, #40]	; (8017e04 <LCD__GetPfSetPixel+0x38>)
 8017ddc:	681b      	ldr	r3, [r3, #0]
 8017dde:	7c1b      	ldrb	r3, [r3, #16]
 8017de0:	f013 0f02 	tst.w	r3, #2
 8017de4:	4b08      	ldr	r3, [pc, #32]	; (8017e08 <LCD__GetPfSetPixel+0x3c>)
 8017de6:	e006      	b.n	8017df6 <LCD__GetPfSetPixel+0x2a>
 8017de8:	4b05      	ldr	r3, [pc, #20]	; (8017e00 <LCD__GetPfSetPixel+0x34>)
 8017dea:	4808      	ldr	r0, [pc, #32]	; (8017e0c <LCD__GetPfSetPixel+0x40>)
 8017dec:	681b      	ldr	r3, [r3, #0]
 8017dee:	7c1b      	ldrb	r3, [r3, #16]
 8017df0:	f013 0f02 	tst.w	r3, #2
 8017df4:	4b06      	ldr	r3, [pc, #24]	; (8017e10 <LCD__GetPfSetPixel+0x44>)
 8017df6:	bf08      	it	eq
 8017df8:	4618      	moveq	r0, r3
 8017dfa:	4770      	bx	lr
 8017dfc:	2000      	movs	r0, #0
 8017dfe:	4770      	bx	lr
 8017e00:	2000016c 	.word	0x2000016c
 8017e04:	08017b2d 	.word	0x08017b2d
 8017e08:	08017bc5 	.word	0x08017bc5
 8017e0c:	08017c89 	.word	0x08017c89
 8017e10:	08017d21 	.word	0x08017d21

08017e14 <GUI__strlen>:
 8017e14:	f04f 33ff 	mov.w	r3, #4294967295
 8017e18:	b118      	cbz	r0, 8017e22 <GUI__strlen+0xe>
 8017e1a:	3301      	adds	r3, #1
 8017e1c:	5cc2      	ldrb	r2, [r0, r3]
 8017e1e:	2a00      	cmp	r2, #0
 8017e20:	d1fb      	bne.n	8017e1a <GUI__strlen+0x6>
 8017e22:	4618      	mov	r0, r3
 8017e24:	4770      	bx	lr
	...

08017e28 <GUI__strcmp>:
 8017e28:	b510      	push	{r4, lr}
 8017e2a:	4b09      	ldr	r3, [pc, #36]	; (8017e50 <GUI__strcmp+0x28>)
 8017e2c:	2800      	cmp	r0, #0
 8017e2e:	bf08      	it	eq
 8017e30:	4618      	moveq	r0, r3
 8017e32:	2900      	cmp	r1, #0
 8017e34:	bf08      	it	eq
 8017e36:	4619      	moveq	r1, r3
 8017e38:	2300      	movs	r3, #0
 8017e3a:	5cc4      	ldrb	r4, [r0, r3]
 8017e3c:	5cca      	ldrb	r2, [r1, r3]
 8017e3e:	42a2      	cmp	r2, r4
 8017e40:	d104      	bne.n	8017e4c <GUI__strcmp+0x24>
 8017e42:	3301      	adds	r3, #1
 8017e44:	2a00      	cmp	r2, #0
 8017e46:	d1f8      	bne.n	8017e3a <GUI__strcmp+0x12>
 8017e48:	4610      	mov	r0, r2
 8017e4a:	bd10      	pop	{r4, pc}
 8017e4c:	2001      	movs	r0, #1
 8017e4e:	bd10      	pop	{r4, pc}
 8017e50:	08021c3d 	.word	0x08021c3d

08017e54 <GUI__strcmp_hp>:
 8017e54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017e56:	460d      	mov	r5, r1
 8017e58:	b160      	cbz	r0, 8017e74 <GUI__strcmp_hp+0x20>
 8017e5a:	f7fb f941 	bl	80130e0 <GUI_ALLOC_LockH>
 8017e5e:	ac02      	add	r4, sp, #8
 8017e60:	4629      	mov	r1, r5
 8017e62:	f844 0d04 	str.w	r0, [r4, #-4]!
 8017e66:	f7ff ffdf 	bl	8017e28 <GUI__strcmp>
 8017e6a:	4605      	mov	r5, r0
 8017e6c:	4620      	mov	r0, r4
 8017e6e:	f7fb f945 	bl	80130fc <GUI_ALLOC_UnlockH>
 8017e72:	e000      	b.n	8017e76 <GUI__strcmp_hp+0x22>
 8017e74:	2501      	movs	r5, #1
 8017e76:	4628      	mov	r0, r5
 8017e78:	b003      	add	sp, #12
 8017e7a:	bd30      	pop	{r4, r5, pc}

08017e7c <_GetWordWrap>:
 8017e7c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017e80:	2500      	movs	r5, #0
 8017e82:	9001      	str	r0, [sp, #4]
 8017e84:	468a      	mov	sl, r1
 8017e86:	4691      	mov	r9, r2
 8017e88:	46a8      	mov	r8, r5
 8017e8a:	462e      	mov	r6, r5
 8017e8c:	462c      	mov	r4, r5
 8017e8e:	462f      	mov	r7, r5
 8017e90:	a801      	add	r0, sp, #4
 8017e92:	f7f9 f949 	bl	8011128 <GUI_UC__GetCharCodeInc>
 8017e96:	2d00      	cmp	r5, #0
 8017e98:	bf08      	it	eq
 8017e9a:	4605      	moveq	r5, r0
 8017e9c:	b108      	cbz	r0, 8017ea2 <_GetWordWrap+0x26>
 8017e9e:	280a      	cmp	r0, #10
 8017ea0:	d10b      	bne.n	8017eba <_GetWordWrap+0x3e>
 8017ea2:	4626      	mov	r6, r4
 8017ea4:	2e00      	cmp	r6, #0
 8017ea6:	bf18      	it	ne
 8017ea8:	4634      	movne	r4, r6
 8017eaa:	f1b9 0f00 	cmp.w	r9, #0
 8017eae:	d016      	beq.n	8017ede <_GetWordWrap+0x62>
 8017eb0:	ebc8 0707 	rsb	r7, r8, r7
 8017eb4:	f8c9 7000 	str.w	r7, [r9]
 8017eb8:	e011      	b.n	8017ede <_GetWordWrap+0x62>
 8017eba:	2820      	cmp	r0, #32
 8017ebc:	d00d      	beq.n	8017eda <_GetWordWrap+0x5e>
 8017ebe:	2d20      	cmp	r5, #32
 8017ec0:	bf04      	itt	eq
 8017ec2:	4626      	moveq	r6, r4
 8017ec4:	2500      	moveq	r5, #0
 8017ec6:	f7fa fff7 	bl	8012eb8 <GUI_GetCharDistX>
 8017eca:	4407      	add	r7, r0
 8017ecc:	4557      	cmp	r7, sl
 8017ece:	4680      	mov	r8, r0
 8017ed0:	dd01      	ble.n	8017ed6 <_GetWordWrap+0x5a>
 8017ed2:	2c00      	cmp	r4, #0
 8017ed4:	d1e6      	bne.n	8017ea4 <_GetWordWrap+0x28>
 8017ed6:	3401      	adds	r4, #1
 8017ed8:	e7da      	b.n	8017e90 <_GetWordWrap+0x14>
 8017eda:	4626      	mov	r6, r4
 8017edc:	e7f3      	b.n	8017ec6 <_GetWordWrap+0x4a>
 8017ede:	4620      	mov	r0, r4
 8017ee0:	b002      	add	sp, #8
 8017ee2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08017ee6 <_GetCharWrap>:
 8017ee6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8017ee8:	2400      	movs	r4, #0
 8017eea:	9001      	str	r0, [sp, #4]
 8017eec:	460e      	mov	r6, r1
 8017eee:	4625      	mov	r5, r4
 8017ef0:	a801      	add	r0, sp, #4
 8017ef2:	f7f9 f919 	bl	8011128 <GUI_UC__GetCharCodeInc>
 8017ef6:	4607      	mov	r7, r0
 8017ef8:	b148      	cbz	r0, 8017f0e <_GetCharWrap+0x28>
 8017efa:	f7fa ffdd 	bl	8012eb8 <GUI_GetCharDistX>
 8017efe:	4405      	add	r5, r0
 8017f00:	b10c      	cbz	r4, 8017f06 <_GetCharWrap+0x20>
 8017f02:	42b5      	cmp	r5, r6
 8017f04:	dc03      	bgt.n	8017f0e <_GetCharWrap+0x28>
 8017f06:	2f0a      	cmp	r7, #10
 8017f08:	d001      	beq.n	8017f0e <_GetCharWrap+0x28>
 8017f0a:	3401      	adds	r4, #1
 8017f0c:	e7f0      	b.n	8017ef0 <_GetCharWrap+0xa>
 8017f0e:	4620      	mov	r0, r4
 8017f10:	b003      	add	sp, #12
 8017f12:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017f14 <_WrapGetNumCharsDisp>:
 8017f14:	2a01      	cmp	r2, #1
 8017f16:	b510      	push	{r4, lr}
 8017f18:	d005      	beq.n	8017f26 <_WrapGetNumCharsDisp+0x12>
 8017f1a:	2a02      	cmp	r2, #2
 8017f1c:	d108      	bne.n	8017f30 <_WrapGetNumCharsDisp+0x1c>
 8017f1e:	4b07      	ldr	r3, [pc, #28]	; (8017f3c <_WrapGetNumCharsDisp+0x28>)
 8017f20:	681b      	ldr	r3, [r3, #0]
 8017f22:	4798      	blx	r3
 8017f24:	bd10      	pop	{r4, pc}
 8017f26:	4a06      	ldr	r2, [pc, #24]	; (8017f40 <_WrapGetNumCharsDisp+0x2c>)
 8017f28:	6814      	ldr	r4, [r2, #0]
 8017f2a:	461a      	mov	r2, r3
 8017f2c:	47a0      	blx	r4
 8017f2e:	bd10      	pop	{r4, pc}
 8017f30:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8017f34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017f38:	f7fa beec 	b.w	8012d14 <GUI__GetLineNumChars>
 8017f3c:	2000032c 	.word	0x2000032c
 8017f40:	20000330 	.word	0x20000330

08017f44 <GUI__WrapGetNumCharsDisp>:
 8017f44:	2300      	movs	r3, #0
 8017f46:	f7ff bfe5 	b.w	8017f14 <_WrapGetNumCharsDisp>

08017f4a <GUI__WrapGetNumCharsToNextLine>:
 8017f4a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017f4c:	b085      	sub	sp, #20
 8017f4e:	ab03      	add	r3, sp, #12
 8017f50:	4617      	mov	r7, r2
 8017f52:	460e      	mov	r6, r1
 8017f54:	9001      	str	r0, [sp, #4]
 8017f56:	f7ff ffdd 	bl	8017f14 <_WrapGetNumCharsDisp>
 8017f5a:	9d01      	ldr	r5, [sp, #4]
 8017f5c:	4604      	mov	r4, r0
 8017f5e:	4621      	mov	r1, r4
 8017f60:	4628      	mov	r0, r5
 8017f62:	f7f9 f8f5 	bl	8011150 <GUI_UC__NumChars2NumBytes>
 8017f66:	4428      	add	r0, r5
 8017f68:	ad04      	add	r5, sp, #16
 8017f6a:	f845 0d0c 	str.w	r0, [r5, #-12]!
 8017f6e:	4628      	mov	r0, r5
 8017f70:	f7f9 f8da 	bl	8011128 <GUI_UC__GetCharCodeInc>
 8017f74:	280a      	cmp	r0, #10
 8017f76:	d101      	bne.n	8017f7c <GUI__WrapGetNumCharsToNextLine+0x32>
 8017f78:	3401      	adds	r4, #1
 8017f7a:	e012      	b.n	8017fa2 <GUI__WrapGetNumCharsToNextLine+0x58>
 8017f7c:	2f01      	cmp	r7, #1
 8017f7e:	d110      	bne.n	8017fa2 <GUI__WrapGetNumCharsToNextLine+0x58>
 8017f80:	2820      	cmp	r0, #32
 8017f82:	d10e      	bne.n	8017fa2 <GUI__WrapGetNumCharsToNextLine+0x58>
 8017f84:	f7fa ff98 	bl	8012eb8 <GUI_GetCharDistX>
 8017f88:	4607      	mov	r7, r0
 8017f8a:	9b03      	ldr	r3, [sp, #12]
 8017f8c:	429e      	cmp	r6, r3
 8017f8e:	db08      	blt.n	8017fa2 <GUI__WrapGetNumCharsToNextLine+0x58>
 8017f90:	443b      	add	r3, r7
 8017f92:	4628      	mov	r0, r5
 8017f94:	9303      	str	r3, [sp, #12]
 8017f96:	f7f9 f8c7 	bl	8011128 <GUI_UC__GetCharCodeInc>
 8017f9a:	2820      	cmp	r0, #32
 8017f9c:	f104 0401 	add.w	r4, r4, #1
 8017fa0:	d0f3      	beq.n	8017f8a <GUI__WrapGetNumCharsToNextLine+0x40>
 8017fa2:	4620      	mov	r0, r4
 8017fa4:	b005      	add	sp, #20
 8017fa6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017fa8 <GUI__WrapGetNumBytesToNextLine>:
 8017fa8:	b510      	push	{r4, lr}
 8017faa:	4604      	mov	r4, r0
 8017fac:	f7ff ffcd 	bl	8017f4a <GUI__WrapGetNumCharsToNextLine>
 8017fb0:	4601      	mov	r1, r0
 8017fb2:	4620      	mov	r0, r4
 8017fb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017fb8:	f7f9 b8ca 	b.w	8011150 <GUI_UC__NumChars2NumBytes>

08017fbc <GUI__ExpandPixelIndicesEx>:
 8017fbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017fc0:	1e0c      	subs	r4, r1, #0
 8017fc2:	4605      	mov	r5, r0
 8017fc4:	f340 80b3 	ble.w	801812e <GUI__ExpandPixelIndicesEx+0x172>
 8017fc8:	2a08      	cmp	r2, #8
 8017fca:	685f      	ldr	r7, [r3, #4]
 8017fcc:	dd04      	ble.n	8017fd8 <GUI__ExpandPixelIndicesEx+0x1c>
 8017fce:	2a10      	cmp	r2, #16
 8017fd0:	f340 8098 	ble.w	8018104 <GUI__ExpandPixelIndicesEx+0x148>
 8017fd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017fd8:	3a01      	subs	r2, #1
 8017fda:	2a07      	cmp	r2, #7
 8017fdc:	f200 80a7 	bhi.w	801812e <GUI__ExpandPixelIndicesEx+0x172>
 8017fe0:	e8df f002 	tbb	[pc, r2]
 8017fe4:	58a52d04 	.word	0x58a52d04
 8017fe8:	83a5a5a5 	.word	0x83a5a5a5
 8017fec:	1e66      	subs	r6, r4, #1
 8017fee:	10f2      	asrs	r2, r6, #3
 8017ff0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 8017ff4:	3b01      	subs	r3, #1
 8017ff6:	eb05 0802 	add.w	r8, r5, r2
 8017ffa:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 8017ffe:	f006 0607 	and.w	r6, r6, #7
 8018002:	f815 a002 	ldrb.w	sl, [r5, r2]
 8018006:	2580      	movs	r5, #128	; 0x80
 8018008:	4135      	asrs	r5, r6
 801800a:	f108 38ff 	add.w	r8, r8, #4294967295
 801800e:	b2ed      	uxtb	r5, r5
 8018010:	f1c6 0307 	rsb	r3, r6, #7
 8018014:	ea0a 0005 	and.w	r0, sl, r5
 8018018:	4118      	asrs	r0, r3
 801801a:	47b8      	blx	r7
 801801c:	f849 0904 	str.w	r0, [r9], #-4
 8018020:	b936      	cbnz	r6, 8018030 <GUI__ExpandPixelIndicesEx+0x74>
 8018022:	f898 a000 	ldrb.w	sl, [r8]
 8018026:	2501      	movs	r5, #1
 8018028:	f108 38ff 	add.w	r8, r8, #4294967295
 801802c:	2607      	movs	r6, #7
 801802e:	e002      	b.n	8018036 <GUI__ExpandPixelIndicesEx+0x7a>
 8018030:	006d      	lsls	r5, r5, #1
 8018032:	3e01      	subs	r6, #1
 8018034:	b2ed      	uxtb	r5, r5
 8018036:	3c01      	subs	r4, #1
 8018038:	d1ea      	bne.n	8018010 <GUI__ExpandPixelIndicesEx+0x54>
 801803a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801803e:	1e66      	subs	r6, r4, #1
 8018040:	10b2      	asrs	r2, r6, #2
 8018042:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 8018046:	3b01      	subs	r3, #1
 8018048:	f006 0603 	and.w	r6, r6, #3
 801804c:	eb05 0802 	add.w	r8, r5, r2
 8018050:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 8018054:	f815 a002 	ldrb.w	sl, [r5, r2]
 8018058:	0073      	lsls	r3, r6, #1
 801805a:	25c0      	movs	r5, #192	; 0xc0
 801805c:	411d      	asrs	r5, r3
 801805e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018062:	b2ed      	uxtb	r5, r5
 8018064:	0073      	lsls	r3, r6, #1
 8018066:	f1c3 0306 	rsb	r3, r3, #6
 801806a:	ea0a 0005 	and.w	r0, sl, r5
 801806e:	4118      	asrs	r0, r3
 8018070:	47b8      	blx	r7
 8018072:	f849 0904 	str.w	r0, [r9], #-4
 8018076:	b936      	cbnz	r6, 8018086 <GUI__ExpandPixelIndicesEx+0xca>
 8018078:	2503      	movs	r5, #3
 801807a:	f898 a000 	ldrb.w	sl, [r8]
 801807e:	462e      	mov	r6, r5
 8018080:	f108 38ff 	add.w	r8, r8, #4294967295
 8018084:	e002      	b.n	801808c <GUI__ExpandPixelIndicesEx+0xd0>
 8018086:	00ad      	lsls	r5, r5, #2
 8018088:	3e01      	subs	r6, #1
 801808a:	b2ed      	uxtb	r5, r5
 801808c:	3c01      	subs	r4, #1
 801808e:	d1e9      	bne.n	8018064 <GUI__ExpandPixelIndicesEx+0xa8>
 8018090:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018094:	1e66      	subs	r6, r4, #1
 8018096:	1072      	asrs	r2, r6, #1
 8018098:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 801809c:	3b01      	subs	r3, #1
 801809e:	f006 0601 	and.w	r6, r6, #1
 80180a2:	eb05 0802 	add.w	r8, r5, r2
 80180a6:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 80180aa:	f815 a002 	ldrb.w	sl, [r5, r2]
 80180ae:	00b3      	lsls	r3, r6, #2
 80180b0:	25f0      	movs	r5, #240	; 0xf0
 80180b2:	411d      	asrs	r5, r3
 80180b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80180b8:	b2ed      	uxtb	r5, r5
 80180ba:	00b3      	lsls	r3, r6, #2
 80180bc:	f1c3 0304 	rsb	r3, r3, #4
 80180c0:	ea0a 0005 	and.w	r0, sl, r5
 80180c4:	4118      	asrs	r0, r3
 80180c6:	47b8      	blx	r7
 80180c8:	f849 0904 	str.w	r0, [r9], #-4
 80180cc:	b936      	cbnz	r6, 80180dc <GUI__ExpandPixelIndicesEx+0x120>
 80180ce:	f898 a000 	ldrb.w	sl, [r8]
 80180d2:	250f      	movs	r5, #15
 80180d4:	f108 38ff 	add.w	r8, r8, #4294967295
 80180d8:	2601      	movs	r6, #1
 80180da:	e002      	b.n	80180e2 <GUI__ExpandPixelIndicesEx+0x126>
 80180dc:	012d      	lsls	r5, r5, #4
 80180de:	b2ed      	uxtb	r5, r5
 80180e0:	2600      	movs	r6, #0
 80180e2:	3c01      	subs	r4, #1
 80180e4:	d1e9      	bne.n	80180ba <GUI__ExpandPixelIndicesEx+0xfe>
 80180e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80180ea:	192e      	adds	r6, r5, r4
 80180ec:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 80180f0:	1b34      	subs	r4, r6, r4
 80180f2:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 80180f6:	47b8      	blx	r7
 80180f8:	42a6      	cmp	r6, r4
 80180fa:	f845 0d04 	str.w	r0, [r5, #-4]!
 80180fe:	d1f8      	bne.n	80180f2 <GUI__ExpandPixelIndicesEx+0x136>
 8018100:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018104:	695e      	ldr	r6, [r3, #20]
 8018106:	b12e      	cbz	r6, 8018114 <GUI__ExpandPixelIndicesEx+0x158>
 8018108:	4629      	mov	r1, r5
 801810a:	4622      	mov	r2, r4
 801810c:	2302      	movs	r3, #2
 801810e:	47b0      	blx	r6
 8018110:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018114:	0064      	lsls	r4, r4, #1
 8018116:	4425      	add	r5, r4
 8018118:	192e      	adds	r6, r5, r4
 801811a:	1b2c      	subs	r4, r5, r4
 801811c:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 8018120:	47b8      	blx	r7
 8018122:	42a5      	cmp	r5, r4
 8018124:	f846 0d04 	str.w	r0, [r6, #-4]!
 8018128:	d1f8      	bne.n	801811c <GUI__ExpandPixelIndicesEx+0x160>
 801812a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801812e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08018132 <_GetTwinArcPara>:
 8018132:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018136:	fb01 f901 	mul.w	r9, r1, r1
 801813a:	1e47      	subs	r7, r0, #1
 801813c:	4604      	mov	r4, r0
 801813e:	4340      	muls	r0, r0
 8018140:	ebc9 0000 	rsb	r0, r9, r0
 8018144:	460d      	mov	r5, r1
 8018146:	4692      	mov	sl, r2
 8018148:	4698      	mov	r8, r3
 801814a:	9e08      	ldr	r6, [sp, #32]
 801814c:	f001 fe3e 	bl	8019dcc <GUI__sqrt32>
 8018150:	42bd      	cmp	r5, r7
 8018152:	f8ca 0000 	str.w	r0, [sl]
 8018156:	da10      	bge.n	801817a <_GetTwinArcPara+0x48>
 8018158:	fb07 f007 	mul.w	r0, r7, r7
 801815c:	ebc9 0000 	rsb	r0, r9, r0
 8018160:	f001 fe34 	bl	8019dcc <GUI__sqrt32>
 8018164:	3c02      	subs	r4, #2
 8018166:	42a5      	cmp	r5, r4
 8018168:	f8c8 0000 	str.w	r0, [r8]
 801816c:	da03      	bge.n	8018176 <_GetTwinArcPara+0x44>
 801816e:	3801      	subs	r0, #1
 8018170:	6030      	str	r0, [r6, #0]
 8018172:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018176:	2300      	movs	r3, #0
 8018178:	e002      	b.n	8018180 <_GetTwinArcPara+0x4e>
 801817a:	2300      	movs	r3, #0
 801817c:	f8c8 3000 	str.w	r3, [r8]
 8018180:	6033      	str	r3, [r6, #0]
 8018182:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08018186 <_GetTrippleArcPara>:
 8018186:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801818a:	fb01 f801 	mul.w	r8, r1, r1
 801818e:	f100 3aff 	add.w	sl, r0, #4294967295
 8018192:	4604      	mov	r4, r0
 8018194:	4340      	muls	r0, r0
 8018196:	ebc8 0000 	rsb	r0, r8, r0
 801819a:	460d      	mov	r5, r1
 801819c:	4691      	mov	r9, r2
 801819e:	469b      	mov	fp, r3
 80181a0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80181a2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80181a4:	f001 fe12 	bl	8019dcc <GUI__sqrt32>
 80181a8:	4555      	cmp	r5, sl
 80181aa:	f8c9 0000 	str.w	r0, [r9]
 80181ae:	da1d      	bge.n	80181ec <_GetTrippleArcPara+0x66>
 80181b0:	fb0a f00a 	mul.w	r0, sl, sl
 80181b4:	ebc8 0000 	rsb	r0, r8, r0
 80181b8:	f001 fe08 	bl	8019dcc <GUI__sqrt32>
 80181bc:	f1a4 0902 	sub.w	r9, r4, #2
 80181c0:	454d      	cmp	r5, r9
 80181c2:	f8cb 0000 	str.w	r0, [fp]
 80181c6:	da0f      	bge.n	80181e8 <_GetTrippleArcPara+0x62>
 80181c8:	fb09 f009 	mul.w	r0, r9, r9
 80181cc:	ebc8 0000 	rsb	r0, r8, r0
 80181d0:	f001 fdfc 	bl	8019dcc <GUI__sqrt32>
 80181d4:	3c03      	subs	r4, #3
 80181d6:	42a5      	cmp	r5, r4
 80181d8:	6038      	str	r0, [r7, #0]
 80181da:	da03      	bge.n	80181e4 <_GetTrippleArcPara+0x5e>
 80181dc:	3801      	subs	r0, #1
 80181de:	6030      	str	r0, [r6, #0]
 80181e0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181e4:	2300      	movs	r3, #0
 80181e6:	e005      	b.n	80181f4 <_GetTrippleArcPara+0x6e>
 80181e8:	2300      	movs	r3, #0
 80181ea:	e002      	b.n	80181f2 <_GetTrippleArcPara+0x6c>
 80181ec:	2300      	movs	r3, #0
 80181ee:	f8cb 3000 	str.w	r3, [fp]
 80181f2:	603b      	str	r3, [r7, #0]
 80181f4:	6033      	str	r3, [r6, #0]
 80181f6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080181fc <GUI__DrawTwinArc4>:
 80181fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018200:	4d76      	ldr	r5, [pc, #472]	; (80183dc <GUI__DrawTwinArc4+0x1e0>)
 8018202:	682d      	ldr	r5, [r5, #0]
 8018204:	6cee      	ldr	r6, [r5, #76]	; 0x4c
 8018206:	6d2f      	ldr	r7, [r5, #80]	; 0x50
 8018208:	b08f      	sub	sp, #60	; 0x3c
 801820a:	4430      	add	r0, r6
 801820c:	4439      	add	r1, r7
 801820e:	9005      	str	r0, [sp, #20]
 8018210:	4416      	add	r6, r2
 8018212:	441f      	add	r7, r3
 8018214:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8018218:	a80c      	add	r0, sp, #48	; 0x30
 801821a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801821c:	9106      	str	r1, [sp, #24]
 801821e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8018222:	f8ad 6034 	strh.w	r6, [sp, #52]	; 0x34
 8018226:	f8ad 7036 	strh.w	r7, [sp, #54]	; 0x36
 801822a:	f7f5 fae3 	bl	800d7f4 <WM__InitIVRSearch>
 801822e:	2800      	cmp	r0, #0
 8018230:	f000 80d0 	beq.w	80183d4 <GUI__DrawTwinArc4+0x1d8>
 8018234:	2c00      	cmp	r4, #0
 8018236:	dc02      	bgt.n	801823e <GUI__DrawTwinArc4+0x42>
 8018238:	f7f5 fa1a 	bl	800d670 <WM__GetNextIVR>
 801823c:	e7f7      	b.n	801822e <GUI__DrawTwinArc4+0x32>
 801823e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8018240:	f7f9 fd5e 	bl	8011d00 <GUI_SetColor>
 8018244:	9b06      	ldr	r3, [sp, #24]
 8018246:	4423      	add	r3, r4
 8018248:	9307      	str	r3, [sp, #28]
 801824a:	9b06      	ldr	r3, [sp, #24]
 801824c:	1e65      	subs	r5, r4, #1
 801824e:	f103 0801 	add.w	r8, r3, #1
 8018252:	2d00      	cmp	r5, #0
 8018254:	d037      	beq.n	80182c6 <GUI__DrawTwinArc4+0xca>
 8018256:	ab0b      	add	r3, sp, #44	; 0x2c
 8018258:	4629      	mov	r1, r5
 801825a:	9300      	str	r3, [sp, #0]
 801825c:	4620      	mov	r0, r4
 801825e:	aa09      	add	r2, sp, #36	; 0x24
 8018260:	ab0a      	add	r3, sp, #40	; 0x28
 8018262:	f7ff ff66 	bl	8018132 <_GetTwinArcPara>
 8018266:	9b05      	ldr	r3, [sp, #20]
 8018268:	9909      	ldr	r1, [sp, #36]	; 0x24
 801826a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801826c:	4423      	add	r3, r4
 801826e:	ebc1 0c03 	rsb	ip, r1, r3
 8018272:	ebc4 0b06 	rsb	fp, r4, r6
 8018276:	1a9b      	subs	r3, r3, r2
 8018278:	3b01      	subs	r3, #1
 801827a:	eb0b 0901 	add.w	r9, fp, r1
 801827e:	4493      	add	fp, r2
 8018280:	4660      	mov	r0, ip
 8018282:	461a      	mov	r2, r3
 8018284:	4641      	mov	r1, r8
 8018286:	f10b 0b01 	add.w	fp, fp, #1
 801828a:	9303      	str	r3, [sp, #12]
 801828c:	f8cd c010 	str.w	ip, [sp, #16]
 8018290:	f7f8 f830 	bl	80102f4 <LCD_DrawHLine>
 8018294:	4641      	mov	r1, r8
 8018296:	4658      	mov	r0, fp
 8018298:	464a      	mov	r2, r9
 801829a:	f7f8 f82b 	bl	80102f4 <LCD_DrawHLine>
 801829e:	ebc4 0a07 	rsb	sl, r4, r7
 80182a2:	f8dd c010 	ldr.w	ip, [sp, #16]
 80182a6:	9b03      	ldr	r3, [sp, #12]
 80182a8:	44aa      	add	sl, r5
 80182aa:	4660      	mov	r0, ip
 80182ac:	461a      	mov	r2, r3
 80182ae:	4651      	mov	r1, sl
 80182b0:	f7f8 f820 	bl	80102f4 <LCD_DrawHLine>
 80182b4:	4658      	mov	r0, fp
 80182b6:	4651      	mov	r1, sl
 80182b8:	464a      	mov	r2, r9
 80182ba:	f7f8 f81b 	bl	80102f4 <LCD_DrawHLine>
 80182be:	3d01      	subs	r5, #1
 80182c0:	f108 0801 	add.w	r8, r8, #1
 80182c4:	e7c5      	b.n	8018252 <GUI__DrawTwinArc4+0x56>
 80182c6:	2c01      	cmp	r4, #1
 80182c8:	d0b6      	beq.n	8018238 <GUI__DrawTwinArc4+0x3c>
 80182ca:	981a      	ldr	r0, [sp, #104]	; 0x68
 80182cc:	f7f9 fd18 	bl	8011d00 <GUI_SetColor>
 80182d0:	9b07      	ldr	r3, [sp, #28]
 80182d2:	f1c4 0802 	rsb	r8, r4, #2
 80182d6:	1ea5      	subs	r5, r4, #2
 80182d8:	4498      	add	r8, r3
 80182da:	2d00      	cmp	r5, #0
 80182dc:	d037      	beq.n	801834e <GUI__DrawTwinArc4+0x152>
 80182de:	ab0b      	add	r3, sp, #44	; 0x2c
 80182e0:	4629      	mov	r1, r5
 80182e2:	9300      	str	r3, [sp, #0]
 80182e4:	4620      	mov	r0, r4
 80182e6:	aa09      	add	r2, sp, #36	; 0x24
 80182e8:	ab0a      	add	r3, sp, #40	; 0x28
 80182ea:	f7ff ff22 	bl	8018132 <_GetTwinArcPara>
 80182ee:	9b05      	ldr	r3, [sp, #20]
 80182f0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80182f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80182f4:	4423      	add	r3, r4
 80182f6:	ebc1 0c03 	rsb	ip, r1, r3
 80182fa:	ebc4 0b06 	rsb	fp, r4, r6
 80182fe:	1a9b      	subs	r3, r3, r2
 8018300:	3b01      	subs	r3, #1
 8018302:	eb0b 0901 	add.w	r9, fp, r1
 8018306:	4493      	add	fp, r2
 8018308:	4660      	mov	r0, ip
 801830a:	461a      	mov	r2, r3
 801830c:	4641      	mov	r1, r8
 801830e:	f10b 0b01 	add.w	fp, fp, #1
 8018312:	9303      	str	r3, [sp, #12]
 8018314:	f8cd c010 	str.w	ip, [sp, #16]
 8018318:	f7f7 ffec 	bl	80102f4 <LCD_DrawHLine>
 801831c:	4641      	mov	r1, r8
 801831e:	4658      	mov	r0, fp
 8018320:	464a      	mov	r2, r9
 8018322:	f7f7 ffe7 	bl	80102f4 <LCD_DrawHLine>
 8018326:	ebc4 0a07 	rsb	sl, r4, r7
 801832a:	f8dd c010 	ldr.w	ip, [sp, #16]
 801832e:	9b03      	ldr	r3, [sp, #12]
 8018330:	44aa      	add	sl, r5
 8018332:	4660      	mov	r0, ip
 8018334:	461a      	mov	r2, r3
 8018336:	4651      	mov	r1, sl
 8018338:	f7f7 ffdc 	bl	80102f4 <LCD_DrawHLine>
 801833c:	4658      	mov	r0, fp
 801833e:	4651      	mov	r1, sl
 8018340:	464a      	mov	r2, r9
 8018342:	f7f7 ffd7 	bl	80102f4 <LCD_DrawHLine>
 8018346:	3d01      	subs	r5, #1
 8018348:	f108 0801 	add.w	r8, r8, #1
 801834c:	e7c5      	b.n	80182da <GUI__DrawTwinArc4+0xde>
 801834e:	2c02      	cmp	r4, #2
 8018350:	f43f af72 	beq.w	8018238 <GUI__DrawTwinArc4+0x3c>
 8018354:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8018356:	f7f9 fcd3 	bl	8011d00 <GUI_SetColor>
 801835a:	9b07      	ldr	r3, [sp, #28]
 801835c:	f1c4 0803 	rsb	r8, r4, #3
 8018360:	1ee5      	subs	r5, r4, #3
 8018362:	4498      	add	r8, r3
 8018364:	2d00      	cmp	r5, #0
 8018366:	f43f af67 	beq.w	8018238 <GUI__DrawTwinArc4+0x3c>
 801836a:	ab0b      	add	r3, sp, #44	; 0x2c
 801836c:	4629      	mov	r1, r5
 801836e:	9300      	str	r3, [sp, #0]
 8018370:	4620      	mov	r0, r4
 8018372:	aa09      	add	r2, sp, #36	; 0x24
 8018374:	ab0a      	add	r3, sp, #40	; 0x28
 8018376:	f7ff fedc 	bl	8018132 <_GetTwinArcPara>
 801837a:	9b05      	ldr	r3, [sp, #20]
 801837c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801837e:	4423      	add	r3, r4
 8018380:	ebc2 0c03 	rsb	ip, r2, r3
 8018384:	ebc4 0b06 	rsb	fp, r4, r6
 8018388:	3b01      	subs	r3, #1
 801838a:	eb0b 0902 	add.w	r9, fp, r2
 801838e:	4660      	mov	r0, ip
 8018390:	461a      	mov	r2, r3
 8018392:	4641      	mov	r1, r8
 8018394:	f10b 0b01 	add.w	fp, fp, #1
 8018398:	9303      	str	r3, [sp, #12]
 801839a:	f8cd c010 	str.w	ip, [sp, #16]
 801839e:	f7f7 ffa9 	bl	80102f4 <LCD_DrawHLine>
 80183a2:	4641      	mov	r1, r8
 80183a4:	4658      	mov	r0, fp
 80183a6:	464a      	mov	r2, r9
 80183a8:	f7f7 ffa4 	bl	80102f4 <LCD_DrawHLine>
 80183ac:	ebc4 0a07 	rsb	sl, r4, r7
 80183b0:	f8dd c010 	ldr.w	ip, [sp, #16]
 80183b4:	9b03      	ldr	r3, [sp, #12]
 80183b6:	44aa      	add	sl, r5
 80183b8:	4660      	mov	r0, ip
 80183ba:	461a      	mov	r2, r3
 80183bc:	4651      	mov	r1, sl
 80183be:	f7f7 ff99 	bl	80102f4 <LCD_DrawHLine>
 80183c2:	4658      	mov	r0, fp
 80183c4:	4651      	mov	r1, sl
 80183c6:	464a      	mov	r2, r9
 80183c8:	f7f7 ff94 	bl	80102f4 <LCD_DrawHLine>
 80183cc:	3d01      	subs	r5, #1
 80183ce:	f108 0801 	add.w	r8, r8, #1
 80183d2:	e7c7      	b.n	8018364 <GUI__DrawTwinArc4+0x168>
 80183d4:	b00f      	add	sp, #60	; 0x3c
 80183d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183da:	bf00      	nop
 80183dc:	2000016c 	.word	0x2000016c

080183e0 <GUI__FillTrippleArc>:
 80183e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183e4:	b095      	sub	sp, #84	; 0x54
 80183e6:	930d      	str	r3, [sp, #52]	; 0x34
 80183e8:	4baf      	ldr	r3, [pc, #700]	; (80186a8 <GUI__FillTrippleArc+0x2c8>)
 80183ea:	9205      	str	r2, [sp, #20]
 80183ec:	681b      	ldr	r3, [r3, #0]
 80183ee:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80183f0:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 80183f2:	1882      	adds	r2, r0, r2
 80183f4:	9805      	ldr	r0, [sp, #20]
 80183f6:	9206      	str	r2, [sp, #24]
 80183f8:	1e43      	subs	r3, r0, #1
 80183fa:	440e      	add	r6, r1
 80183fc:	b29b      	uxth	r3, r3
 80183fe:	f8ad 2048 	strh.w	r2, [sp, #72]	; 0x48
 8018402:	a812      	add	r0, sp, #72	; 0x48
 8018404:	441a      	add	r2, r3
 8018406:	4433      	add	r3, r6
 8018408:	f8ad 604a 	strh.w	r6, [sp, #74]	; 0x4a
 801840c:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 8018410:	f8ad 304e 	strh.w	r3, [sp, #78]	; 0x4e
 8018414:	f7f5 f9ee 	bl	800d7f4 <WM__InitIVRSearch>
 8018418:	2800      	cmp	r0, #0
 801841a:	f000 8141 	beq.w	80186a0 <GUI__FillTrippleArc+0x2c0>
 801841e:	9a05      	ldr	r2, [sp, #20]
 8018420:	1055      	asrs	r5, r2, #1
 8018422:	1c6b      	adds	r3, r5, #1
 8018424:	1e68      	subs	r0, r5, #1
 8018426:	1eaa      	subs	r2, r5, #2
 8018428:	1cac      	adds	r4, r5, #2
 801842a:	930a      	str	r3, [sp, #40]	; 0x28
 801842c:	900b      	str	r0, [sp, #44]	; 0x2c
 801842e:	920c      	str	r2, [sp, #48]	; 0x30
 8018430:	9b05      	ldr	r3, [sp, #20]
 8018432:	07da      	lsls	r2, r3, #31
 8018434:	f100 812f 	bmi.w	8018696 <GUI__FillTrippleArc+0x2b6>
 8018438:	2c00      	cmp	r4, #0
 801843a:	f340 812c 	ble.w	8018696 <GUI__FillTrippleArc+0x2b6>
 801843e:	9806      	ldr	r0, [sp, #24]
 8018440:	9a06      	ldr	r2, [sp, #24]
 8018442:	3801      	subs	r0, #1
 8018444:	9007      	str	r0, [sp, #28]
 8018446:	9805      	ldr	r0, [sp, #20]
 8018448:	441a      	add	r2, r3
 801844a:	1e73      	subs	r3, r6, #1
 801844c:	4418      	add	r0, r3
 801844e:	9009      	str	r0, [sp, #36]	; 0x24
 8018450:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018452:	9208      	str	r2, [sp, #32]
 8018454:	f7f9 fc54 	bl	8011d00 <GUI_SetColor>
 8018458:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801845a:	2f01      	cmp	r7, #1
 801845c:	dd48      	ble.n	80184f0 <GUI__FillTrippleArc+0x110>
 801845e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018460:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8018464:	ab10      	add	r3, sp, #64	; 0x40
 8018466:	9300      	str	r3, [sp, #0]
 8018468:	ea6f 0a05 	mvn.w	sl, r5
 801846c:	ab11      	add	r3, sp, #68	; 0x44
 801846e:	4492      	add	sl, r2
 8018470:	9301      	str	r3, [sp, #4]
 8018472:	4620      	mov	r0, r4
 8018474:	4639      	mov	r1, r7
 8018476:	aa0e      	add	r2, sp, #56	; 0x38
 8018478:	ab0f      	add	r3, sp, #60	; 0x3c
 801847a:	f7ff fe84 	bl	8018186 <_GetTrippleArcPara>
 801847e:	9808      	ldr	r0, [sp, #32]
 8018480:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8018484:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018486:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018488:	1b02      	subs	r2, r0, r4
 801848a:	44a4      	add	ip, r4
 801848c:	ebc1 090c 	rsb	r9, r1, ip
 8018490:	ebc3 0c0c 	rsb	ip, r3, ip
 8018494:	4413      	add	r3, r2
 8018496:	44b3      	add	fp, r6
 8018498:	f10c 3cff 	add.w	ip, ip, #4294967295
 801849c:	3301      	adds	r3, #1
 801849e:	ebc7 0b0b 	rsb	fp, r7, fp
 80184a2:	4563      	cmp	r3, ip
 80184a4:	eb02 0801 	add.w	r8, r2, r1
 80184a8:	44ba      	add	sl, r7
 80184aa:	4648      	mov	r0, r9
 80184ac:	4659      	mov	r1, fp
 80184ae:	da04      	bge.n	80184ba <GUI__FillTrippleArc+0xda>
 80184b0:	4642      	mov	r2, r8
 80184b2:	f7f7 ff1f 	bl	80102f4 <LCD_DrawHLine>
 80184b6:	4648      	mov	r0, r9
 80184b8:	e014      	b.n	80184e4 <GUI__FillTrippleArc+0x104>
 80184ba:	4662      	mov	r2, ip
 80184bc:	f8cd c010 	str.w	ip, [sp, #16]
 80184c0:	9303      	str	r3, [sp, #12]
 80184c2:	f7f7 ff17 	bl	80102f4 <LCD_DrawHLine>
 80184c6:	9b03      	ldr	r3, [sp, #12]
 80184c8:	4659      	mov	r1, fp
 80184ca:	4618      	mov	r0, r3
 80184cc:	4642      	mov	r2, r8
 80184ce:	f7f7 ff11 	bl	80102f4 <LCD_DrawHLine>
 80184d2:	f8dd c010 	ldr.w	ip, [sp, #16]
 80184d6:	4648      	mov	r0, r9
 80184d8:	4651      	mov	r1, sl
 80184da:	4662      	mov	r2, ip
 80184dc:	f7f7 ff0a 	bl	80102f4 <LCD_DrawHLine>
 80184e0:	9b03      	ldr	r3, [sp, #12]
 80184e2:	4618      	mov	r0, r3
 80184e4:	4651      	mov	r1, sl
 80184e6:	4642      	mov	r2, r8
 80184e8:	f7f7 ff04 	bl	80102f4 <LCD_DrawHLine>
 80184ec:	3f01      	subs	r7, #1
 80184ee:	e7b4      	b.n	801845a <GUI__FillTrippleArc+0x7a>
 80184f0:	2c01      	cmp	r4, #1
 80184f2:	f000 80d0 	beq.w	8018696 <GUI__FillTrippleArc+0x2b6>
 80184f6:	981e      	ldr	r0, [sp, #120]	; 0x78
 80184f8:	f7f9 fc02 	bl	8011d00 <GUI_SetColor>
 80184fc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80184fe:	4437      	add	r7, r6
 8018500:	1b7f      	subs	r7, r7, r5
 8018502:	46a8      	mov	r8, r5
 8018504:	f1b8 0f01 	cmp.w	r8, #1
 8018508:	dd45      	ble.n	8018596 <GUI__FillTrippleArc+0x1b6>
 801850a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801850c:	ab10      	add	r3, sp, #64	; 0x40
 801850e:	9300      	str	r3, [sp, #0]
 8018510:	ea6f 0b05 	mvn.w	fp, r5
 8018514:	ab11      	add	r3, sp, #68	; 0x44
 8018516:	4493      	add	fp, r2
 8018518:	9301      	str	r3, [sp, #4]
 801851a:	4620      	mov	r0, r4
 801851c:	4641      	mov	r1, r8
 801851e:	aa0e      	add	r2, sp, #56	; 0x38
 8018520:	ab0f      	add	r3, sp, #60	; 0x3c
 8018522:	f7ff fe30 	bl	8018186 <_GetTrippleArcPara>
 8018526:	9808      	ldr	r0, [sp, #32]
 8018528:	f8dd c01c 	ldr.w	ip, [sp, #28]
 801852c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801852e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018530:	1b02      	subs	r2, r0, r4
 8018532:	44a4      	add	ip, r4
 8018534:	ebc1 0a0c 	rsb	sl, r1, ip
 8018538:	ebc3 0c0c 	rsb	ip, r3, ip
 801853c:	4413      	add	r3, r2
 801853e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018542:	3301      	adds	r3, #1
 8018544:	4563      	cmp	r3, ip
 8018546:	eb02 0901 	add.w	r9, r2, r1
 801854a:	44c3      	add	fp, r8
 801854c:	4650      	mov	r0, sl
 801854e:	4639      	mov	r1, r7
 8018550:	da04      	bge.n	801855c <GUI__FillTrippleArc+0x17c>
 8018552:	464a      	mov	r2, r9
 8018554:	f7f7 fece 	bl	80102f4 <LCD_DrawHLine>
 8018558:	4650      	mov	r0, sl
 801855a:	e014      	b.n	8018586 <GUI__FillTrippleArc+0x1a6>
 801855c:	4662      	mov	r2, ip
 801855e:	f8cd c010 	str.w	ip, [sp, #16]
 8018562:	9303      	str	r3, [sp, #12]
 8018564:	f7f7 fec6 	bl	80102f4 <LCD_DrawHLine>
 8018568:	9b03      	ldr	r3, [sp, #12]
 801856a:	4639      	mov	r1, r7
 801856c:	4618      	mov	r0, r3
 801856e:	464a      	mov	r2, r9
 8018570:	f7f7 fec0 	bl	80102f4 <LCD_DrawHLine>
 8018574:	f8dd c010 	ldr.w	ip, [sp, #16]
 8018578:	4650      	mov	r0, sl
 801857a:	4659      	mov	r1, fp
 801857c:	4662      	mov	r2, ip
 801857e:	f7f7 feb9 	bl	80102f4 <LCD_DrawHLine>
 8018582:	9b03      	ldr	r3, [sp, #12]
 8018584:	4618      	mov	r0, r3
 8018586:	4659      	mov	r1, fp
 8018588:	464a      	mov	r2, r9
 801858a:	f7f7 feb3 	bl	80102f4 <LCD_DrawHLine>
 801858e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018592:	3701      	adds	r7, #1
 8018594:	e7b6      	b.n	8018504 <GUI__FillTrippleArc+0x124>
 8018596:	2c02      	cmp	r4, #2
 8018598:	d07d      	beq.n	8018696 <GUI__FillTrippleArc+0x2b6>
 801859a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801859c:	f7f9 fbb0 	bl	8011d00 <GUI_SetColor>
 80185a0:	19a7      	adds	r7, r4, r6
 80185a2:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
 80185a6:	1b7f      	subs	r7, r7, r5
 80185a8:	f1b8 0f01 	cmp.w	r8, #1
 80185ac:	dd45      	ble.n	801863a <GUI__FillTrippleArc+0x25a>
 80185ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80185b0:	ab10      	add	r3, sp, #64	; 0x40
 80185b2:	9300      	str	r3, [sp, #0]
 80185b4:	ea6f 0b05 	mvn.w	fp, r5
 80185b8:	ab11      	add	r3, sp, #68	; 0x44
 80185ba:	4493      	add	fp, r2
 80185bc:	9301      	str	r3, [sp, #4]
 80185be:	4620      	mov	r0, r4
 80185c0:	4641      	mov	r1, r8
 80185c2:	aa0e      	add	r2, sp, #56	; 0x38
 80185c4:	ab0f      	add	r3, sp, #60	; 0x3c
 80185c6:	f7ff fdde 	bl	8018186 <_GetTrippleArcPara>
 80185ca:	9808      	ldr	r0, [sp, #32]
 80185cc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80185d0:	9910      	ldr	r1, [sp, #64]	; 0x40
 80185d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80185d4:	1b02      	subs	r2, r0, r4
 80185d6:	44a4      	add	ip, r4
 80185d8:	ebc1 0a0c 	rsb	sl, r1, ip
 80185dc:	ebc3 0c0c 	rsb	ip, r3, ip
 80185e0:	4413      	add	r3, r2
 80185e2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80185e6:	3301      	adds	r3, #1
 80185e8:	4563      	cmp	r3, ip
 80185ea:	eb02 0901 	add.w	r9, r2, r1
 80185ee:	44c3      	add	fp, r8
 80185f0:	4650      	mov	r0, sl
 80185f2:	4639      	mov	r1, r7
 80185f4:	da04      	bge.n	8018600 <GUI__FillTrippleArc+0x220>
 80185f6:	464a      	mov	r2, r9
 80185f8:	f7f7 fe7c 	bl	80102f4 <LCD_DrawHLine>
 80185fc:	4650      	mov	r0, sl
 80185fe:	e014      	b.n	801862a <GUI__FillTrippleArc+0x24a>
 8018600:	4662      	mov	r2, ip
 8018602:	f8cd c010 	str.w	ip, [sp, #16]
 8018606:	9303      	str	r3, [sp, #12]
 8018608:	f7f7 fe74 	bl	80102f4 <LCD_DrawHLine>
 801860c:	9b03      	ldr	r3, [sp, #12]
 801860e:	4639      	mov	r1, r7
 8018610:	4618      	mov	r0, r3
 8018612:	464a      	mov	r2, r9
 8018614:	f7f7 fe6e 	bl	80102f4 <LCD_DrawHLine>
 8018618:	f8dd c010 	ldr.w	ip, [sp, #16]
 801861c:	4650      	mov	r0, sl
 801861e:	4659      	mov	r1, fp
 8018620:	4662      	mov	r2, ip
 8018622:	f7f7 fe67 	bl	80102f4 <LCD_DrawHLine>
 8018626:	9b03      	ldr	r3, [sp, #12]
 8018628:	4618      	mov	r0, r3
 801862a:	4659      	mov	r1, fp
 801862c:	464a      	mov	r2, r9
 801862e:	f7f7 fe61 	bl	80102f4 <LCD_DrawHLine>
 8018632:	f108 38ff 	add.w	r8, r8, #4294967295
 8018636:	3701      	adds	r7, #1
 8018638:	e7b6      	b.n	80185a8 <GUI__FillTrippleArc+0x1c8>
 801863a:	2c03      	cmp	r4, #3
 801863c:	d02b      	beq.n	8018696 <GUI__FillTrippleArc+0x2b6>
 801863e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8018640:	f7f9 fb5e 	bl	8011d00 <GUI_SetColor>
 8018644:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8018646:	f106 0803 	add.w	r8, r6, #3
 801864a:	b327      	cbz	r7, 8018696 <GUI__FillTrippleArc+0x2b6>
 801864c:	ab10      	add	r3, sp, #64	; 0x40
 801864e:	9300      	str	r3, [sp, #0]
 8018650:	ab11      	add	r3, sp, #68	; 0x44
 8018652:	4639      	mov	r1, r7
 8018654:	9301      	str	r3, [sp, #4]
 8018656:	4620      	mov	r0, r4
 8018658:	aa0e      	add	r2, sp, #56	; 0x38
 801865a:	ab0f      	add	r3, sp, #60	; 0x3c
 801865c:	f7ff fd93 	bl	8018186 <_GetTrippleArcPara>
 8018660:	9a08      	ldr	r2, [sp, #32]
 8018662:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8018666:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018668:	ebc4 0902 	rsb	r9, r4, r2
 801866c:	44a2      	add	sl, r4
 801866e:	ebc3 0a0a 	rsb	sl, r3, sl
 8018672:	4499      	add	r9, r3
 8018674:	4641      	mov	r1, r8
 8018676:	4650      	mov	r0, sl
 8018678:	464a      	mov	r2, r9
 801867a:	f7f7 fe3b 	bl	80102f4 <LCD_DrawHLine>
 801867e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018680:	43e9      	mvns	r1, r5
 8018682:	4419      	add	r1, r3
 8018684:	4439      	add	r1, r7
 8018686:	4650      	mov	r0, sl
 8018688:	464a      	mov	r2, r9
 801868a:	f7f7 fe33 	bl	80102f4 <LCD_DrawHLine>
 801868e:	3f01      	subs	r7, #1
 8018690:	f108 0801 	add.w	r8, r8, #1
 8018694:	e7d9      	b.n	801864a <GUI__FillTrippleArc+0x26a>
 8018696:	f7f4 ffeb 	bl	800d670 <WM__GetNextIVR>
 801869a:	2800      	cmp	r0, #0
 801869c:	f47f aec8 	bne.w	8018430 <GUI__FillTrippleArc+0x50>
 80186a0:	b015      	add	sp, #84	; 0x54
 80186a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186a6:	bf00      	nop
 80186a8:	2000016c 	.word	0x2000016c

080186ac <GUI__DivideRound32>:
 80186ac:	b149      	cbz	r1, 80186c2 <GUI__DivideRound32+0x16>
 80186ae:	2800      	cmp	r0, #0
 80186b0:	ea4f 0361 	mov.w	r3, r1, asr #1
 80186b4:	bfb4      	ite	lt
 80186b6:	ebc3 0000 	rsblt	r0, r3, r0
 80186ba:	18c0      	addge	r0, r0, r3
 80186bc:	fb90 f0f1 	sdiv	r0, r0, r1
 80186c0:	4770      	bx	lr
 80186c2:	4608      	mov	r0, r1
 80186c4:	4770      	bx	lr

080186c6 <GUI__CompactPixelIndices>:
 80186c6:	2a08      	cmp	r2, #8
 80186c8:	b510      	push	{r4, lr}
 80186ca:	dd0e      	ble.n	80186ea <GUI__CompactPixelIndices+0x24>
 80186cc:	2a10      	cmp	r2, #16
 80186ce:	dc0a      	bgt.n	80186e6 <GUI__CompactPixelIndices+0x20>
 80186d0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80186d4:	4603      	mov	r3, r0
 80186d6:	f850 2b04 	ldr.w	r2, [r0], #4
 80186da:	f823 2b02 	strh.w	r2, [r3], #2
 80186de:	428b      	cmp	r3, r1
 80186e0:	d1f9      	bne.n	80186d6 <GUI__CompactPixelIndices+0x10>
 80186e2:	2001      	movs	r0, #1
 80186e4:	bd10      	pop	{r4, pc}
 80186e6:	2000      	movs	r0, #0
 80186e8:	bd10      	pop	{r4, pc}
 80186ea:	2a02      	cmp	r2, #2
 80186ec:	d06d      	beq.n	80187ca <GUI__CompactPixelIndices+0x104>
 80186ee:	2a04      	cmp	r2, #4
 80186f0:	d054      	beq.n	801879c <GUI__CompactPixelIndices+0xd6>
 80186f2:	2a01      	cmp	r2, #1
 80186f4:	f040 8095 	bne.w	8018822 <GUI__CompactPixelIndices+0x15c>
 80186f8:	4604      	mov	r4, r0
 80186fa:	6803      	ldr	r3, [r0, #0]
 80186fc:	2901      	cmp	r1, #1
 80186fe:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 8018702:	b2db      	uxtb	r3, r3
 8018704:	d047      	beq.n	8018796 <GUI__CompactPixelIndices+0xd0>
 8018706:	6842      	ldr	r2, [r0, #4]
 8018708:	2902      	cmp	r1, #2
 801870a:	f002 0201 	and.w	r2, r2, #1
 801870e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8018712:	d102      	bne.n	801871a <GUI__CompactPixelIndices+0x54>
 8018714:	f100 0208 	add.w	r2, r0, #8
 8018718:	e03e      	b.n	8018798 <GUI__CompactPixelIndices+0xd2>
 801871a:	6882      	ldr	r2, [r0, #8]
 801871c:	2903      	cmp	r1, #3
 801871e:	f002 0201 	and.w	r2, r2, #1
 8018722:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8018726:	d102      	bne.n	801872e <GUI__CompactPixelIndices+0x68>
 8018728:	f100 020c 	add.w	r2, r0, #12
 801872c:	e034      	b.n	8018798 <GUI__CompactPixelIndices+0xd2>
 801872e:	68c2      	ldr	r2, [r0, #12]
 8018730:	2904      	cmp	r1, #4
 8018732:	f002 0201 	and.w	r2, r2, #1
 8018736:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 801873a:	d102      	bne.n	8018742 <GUI__CompactPixelIndices+0x7c>
 801873c:	f100 0210 	add.w	r2, r0, #16
 8018740:	e02a      	b.n	8018798 <GUI__CompactPixelIndices+0xd2>
 8018742:	6902      	ldr	r2, [r0, #16]
 8018744:	2905      	cmp	r1, #5
 8018746:	f002 0201 	and.w	r2, r2, #1
 801874a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801874e:	d102      	bne.n	8018756 <GUI__CompactPixelIndices+0x90>
 8018750:	f100 0214 	add.w	r2, r0, #20
 8018754:	e020      	b.n	8018798 <GUI__CompactPixelIndices+0xd2>
 8018756:	6942      	ldr	r2, [r0, #20]
 8018758:	2906      	cmp	r1, #6
 801875a:	f002 0201 	and.w	r2, r2, #1
 801875e:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8018762:	d102      	bne.n	801876a <GUI__CompactPixelIndices+0xa4>
 8018764:	f100 0218 	add.w	r2, r0, #24
 8018768:	e016      	b.n	8018798 <GUI__CompactPixelIndices+0xd2>
 801876a:	6982      	ldr	r2, [r0, #24]
 801876c:	3907      	subs	r1, #7
 801876e:	f002 0201 	and.w	r2, r2, #1
 8018772:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 8018776:	d102      	bne.n	801877e <GUI__CompactPixelIndices+0xb8>
 8018778:	f100 021c 	add.w	r2, r0, #28
 801877c:	e005      	b.n	801878a <GUI__CompactPixelIndices+0xc4>
 801877e:	f100 0220 	add.w	r2, r0, #32
 8018782:	69c0      	ldr	r0, [r0, #28]
 8018784:	f000 0001 	and.w	r0, r0, #1
 8018788:	4303      	orrs	r3, r0
 801878a:	f804 3b01 	strb.w	r3, [r4], #1
 801878e:	2900      	cmp	r1, #0
 8018790:	d0a7      	beq.n	80186e2 <GUI__CompactPixelIndices+0x1c>
 8018792:	4610      	mov	r0, r2
 8018794:	e7b1      	b.n	80186fa <GUI__CompactPixelIndices+0x34>
 8018796:	1d02      	adds	r2, r0, #4
 8018798:	2100      	movs	r1, #0
 801879a:	e7f6      	b.n	801878a <GUI__CompactPixelIndices+0xc4>
 801879c:	4602      	mov	r2, r0
 801879e:	6803      	ldr	r3, [r0, #0]
 80187a0:	2901      	cmp	r1, #1
 80187a2:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80187a6:	b2db      	uxtb	r3, r3
 80187a8:	d102      	bne.n	80187b0 <GUI__CompactPixelIndices+0xea>
 80187aa:	1d04      	adds	r4, r0, #4
 80187ac:	2100      	movs	r1, #0
 80187ae:	e006      	b.n	80187be <GUI__CompactPixelIndices+0xf8>
 80187b0:	f100 0408 	add.w	r4, r0, #8
 80187b4:	6840      	ldr	r0, [r0, #4]
 80187b6:	f000 000f 	and.w	r0, r0, #15
 80187ba:	4303      	orrs	r3, r0
 80187bc:	3902      	subs	r1, #2
 80187be:	f802 3b01 	strb.w	r3, [r2], #1
 80187c2:	2900      	cmp	r1, #0
 80187c4:	d08d      	beq.n	80186e2 <GUI__CompactPixelIndices+0x1c>
 80187c6:	4620      	mov	r0, r4
 80187c8:	e7e9      	b.n	801879e <GUI__CompactPixelIndices+0xd8>
 80187ca:	4604      	mov	r4, r0
 80187cc:	6803      	ldr	r3, [r0, #0]
 80187ce:	2901      	cmp	r1, #1
 80187d0:	ea4f 1383 	mov.w	r3, r3, lsl #6
 80187d4:	b2db      	uxtb	r3, r3
 80187d6:	d021      	beq.n	801881c <GUI__CompactPixelIndices+0x156>
 80187d8:	6842      	ldr	r2, [r0, #4]
 80187da:	2902      	cmp	r1, #2
 80187dc:	f002 0203 	and.w	r2, r2, #3
 80187e0:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 80187e4:	d102      	bne.n	80187ec <GUI__CompactPixelIndices+0x126>
 80187e6:	f100 0208 	add.w	r2, r0, #8
 80187ea:	e018      	b.n	801881e <GUI__CompactPixelIndices+0x158>
 80187ec:	6882      	ldr	r2, [r0, #8]
 80187ee:	2903      	cmp	r1, #3
 80187f0:	f002 0203 	and.w	r2, r2, #3
 80187f4:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 80187f8:	d102      	bne.n	8018800 <GUI__CompactPixelIndices+0x13a>
 80187fa:	f100 020c 	add.w	r2, r0, #12
 80187fe:	e00e      	b.n	801881e <GUI__CompactPixelIndices+0x158>
 8018800:	f100 0210 	add.w	r2, r0, #16
 8018804:	68c0      	ldr	r0, [r0, #12]
 8018806:	f000 0003 	and.w	r0, r0, #3
 801880a:	4303      	orrs	r3, r0
 801880c:	3904      	subs	r1, #4
 801880e:	f804 3b01 	strb.w	r3, [r4], #1
 8018812:	2900      	cmp	r1, #0
 8018814:	f43f af65 	beq.w	80186e2 <GUI__CompactPixelIndices+0x1c>
 8018818:	4610      	mov	r0, r2
 801881a:	e7d7      	b.n	80187cc <GUI__CompactPixelIndices+0x106>
 801881c:	1d02      	adds	r2, r0, #4
 801881e:	2100      	movs	r1, #0
 8018820:	e7f5      	b.n	801880e <GUI__CompactPixelIndices+0x148>
 8018822:	2300      	movs	r3, #0
 8018824:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 8018828:	54c2      	strb	r2, [r0, r3]
 801882a:	3301      	adds	r3, #1
 801882c:	428b      	cmp	r3, r1
 801882e:	d1f9      	bne.n	8018824 <GUI__CompactPixelIndices+0x15e>
 8018830:	e757      	b.n	80186e2 <GUI__CompactPixelIndices+0x1c>

08018832 <GUI__ConvertColor2Index>:
 8018832:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018836:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801883a:	681e      	ldr	r6, [r3, #0]
 801883c:	f1b8 0f00 	cmp.w	r8, #0
 8018840:	bf08      	it	eq
 8018842:	4680      	moveq	r8, r0
 8018844:	2a08      	cmp	r2, #8
 8018846:	4604      	mov	r4, r0
 8018848:	460d      	mov	r5, r1
 801884a:	dd05      	ble.n	8018858 <GUI__ConvertColor2Index+0x26>
 801884c:	2a10      	cmp	r2, #16
 801884e:	f340 80b6 	ble.w	80189be <GUI__ConvertColor2Index+0x18c>
 8018852:	2000      	movs	r0, #0
 8018854:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018858:	3a01      	subs	r2, #1
 801885a:	2a07      	cmp	r2, #7
 801885c:	f200 80a4 	bhi.w	80189a8 <GUI__ConvertColor2Index+0x176>
 8018860:	e8df f002 	tbb	[pc, r2]
 8018864:	87a26111 	.word	0x87a26111
 8018868:	92a2a2a2 	.word	0x92a2a2a2
 801886c:	69e0      	ldr	r0, [r4, #28]
 801886e:	47b0      	blx	r6
 8018870:	4338      	orrs	r0, r7
 8018872:	f104 0920 	add.w	r9, r4, #32
 8018876:	b2c7      	uxtb	r7, r0
 8018878:	3d08      	subs	r5, #8
 801887a:	f808 7b01 	strb.w	r7, [r8], #1
 801887e:	2d00      	cmp	r5, #0
 8018880:	f000 8092 	beq.w	80189a8 <GUI__ConvertColor2Index+0x176>
 8018884:	464c      	mov	r4, r9
 8018886:	6820      	ldr	r0, [r4, #0]
 8018888:	47b0      	blx	r6
 801888a:	2d01      	cmp	r5, #1
 801888c:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 8018890:	b2c7      	uxtb	r7, r0
 8018892:	f000 808c 	beq.w	80189ae <GUI__ConvertColor2Index+0x17c>
 8018896:	6860      	ldr	r0, [r4, #4]
 8018898:	47b0      	blx	r6
 801889a:	2d02      	cmp	r5, #2
 801889c:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 80188a0:	b2c7      	uxtb	r7, r0
 80188a2:	d102      	bne.n	80188aa <GUI__ConvertColor2Index+0x78>
 80188a4:	f104 0908 	add.w	r9, r4, #8
 80188a8:	e083      	b.n	80189b2 <GUI__ConvertColor2Index+0x180>
 80188aa:	68a0      	ldr	r0, [r4, #8]
 80188ac:	47b0      	blx	r6
 80188ae:	2d03      	cmp	r5, #3
 80188b0:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 80188b4:	b2c7      	uxtb	r7, r0
 80188b6:	d102      	bne.n	80188be <GUI__ConvertColor2Index+0x8c>
 80188b8:	f104 090c 	add.w	r9, r4, #12
 80188bc:	e079      	b.n	80189b2 <GUI__ConvertColor2Index+0x180>
 80188be:	68e0      	ldr	r0, [r4, #12]
 80188c0:	47b0      	blx	r6
 80188c2:	2d04      	cmp	r5, #4
 80188c4:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 80188c8:	b2c7      	uxtb	r7, r0
 80188ca:	d102      	bne.n	80188d2 <GUI__ConvertColor2Index+0xa0>
 80188cc:	f104 0910 	add.w	r9, r4, #16
 80188d0:	e06f      	b.n	80189b2 <GUI__ConvertColor2Index+0x180>
 80188d2:	6920      	ldr	r0, [r4, #16]
 80188d4:	47b0      	blx	r6
 80188d6:	2d05      	cmp	r5, #5
 80188d8:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 80188dc:	b2c7      	uxtb	r7, r0
 80188de:	d102      	bne.n	80188e6 <GUI__ConvertColor2Index+0xb4>
 80188e0:	f104 0914 	add.w	r9, r4, #20
 80188e4:	e065      	b.n	80189b2 <GUI__ConvertColor2Index+0x180>
 80188e6:	6960      	ldr	r0, [r4, #20]
 80188e8:	47b0      	blx	r6
 80188ea:	2d06      	cmp	r5, #6
 80188ec:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 80188f0:	b2c7      	uxtb	r7, r0
 80188f2:	d102      	bne.n	80188fa <GUI__ConvertColor2Index+0xc8>
 80188f4:	f104 0918 	add.w	r9, r4, #24
 80188f8:	e05b      	b.n	80189b2 <GUI__ConvertColor2Index+0x180>
 80188fa:	69a0      	ldr	r0, [r4, #24]
 80188fc:	47b0      	blx	r6
 80188fe:	2d07      	cmp	r5, #7
 8018900:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 8018904:	b2c7      	uxtb	r7, r0
 8018906:	d1b1      	bne.n	801886c <GUI__ConvertColor2Index+0x3a>
 8018908:	f104 091c 	add.w	r9, r4, #28
 801890c:	e051      	b.n	80189b2 <GUI__ConvertColor2Index+0x180>
 801890e:	68e0      	ldr	r0, [r4, #12]
 8018910:	47b0      	blx	r6
 8018912:	4338      	orrs	r0, r7
 8018914:	f104 0910 	add.w	r9, r4, #16
 8018918:	b2c7      	uxtb	r7, r0
 801891a:	3d04      	subs	r5, #4
 801891c:	f808 7b01 	strb.w	r7, [r8], #1
 8018920:	2d00      	cmp	r5, #0
 8018922:	d041      	beq.n	80189a8 <GUI__ConvertColor2Index+0x176>
 8018924:	464c      	mov	r4, r9
 8018926:	6820      	ldr	r0, [r4, #0]
 8018928:	47b0      	blx	r6
 801892a:	2d01      	cmp	r5, #1
 801892c:	ea4f 1080 	mov.w	r0, r0, lsl #6
 8018930:	b2c7      	uxtb	r7, r0
 8018932:	d040      	beq.n	80189b6 <GUI__ConvertColor2Index+0x184>
 8018934:	6860      	ldr	r0, [r4, #4]
 8018936:	47b0      	blx	r6
 8018938:	2d02      	cmp	r5, #2
 801893a:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 801893e:	b2c7      	uxtb	r7, r0
 8018940:	d102      	bne.n	8018948 <GUI__ConvertColor2Index+0x116>
 8018942:	f104 0908 	add.w	r9, r4, #8
 8018946:	e038      	b.n	80189ba <GUI__ConvertColor2Index+0x188>
 8018948:	68a0      	ldr	r0, [r4, #8]
 801894a:	47b0      	blx	r6
 801894c:	2d03      	cmp	r5, #3
 801894e:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 8018952:	b2c7      	uxtb	r7, r0
 8018954:	d1db      	bne.n	801890e <GUI__ConvertColor2Index+0xdc>
 8018956:	f104 090c 	add.w	r9, r4, #12
 801895a:	e02e      	b.n	80189ba <GUI__ConvertColor2Index+0x188>
 801895c:	6860      	ldr	r0, [r4, #4]
 801895e:	47b0      	blx	r6
 8018960:	4338      	orrs	r0, r7
 8018962:	f104 0908 	add.w	r9, r4, #8
 8018966:	b2c7      	uxtb	r7, r0
 8018968:	3d02      	subs	r5, #2
 801896a:	f808 7b01 	strb.w	r7, [r8], #1
 801896e:	b1dd      	cbz	r5, 80189a8 <GUI__ConvertColor2Index+0x176>
 8018970:	464c      	mov	r4, r9
 8018972:	6820      	ldr	r0, [r4, #0]
 8018974:	47b0      	blx	r6
 8018976:	2d01      	cmp	r5, #1
 8018978:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801897c:	b2c7      	uxtb	r7, r0
 801897e:	d1ed      	bne.n	801895c <GUI__ConvertColor2Index+0x12a>
 8018980:	f104 0904 	add.w	r9, r4, #4
 8018984:	2500      	movs	r5, #0
 8018986:	e7f0      	b.n	801896a <GUI__ConvertColor2Index+0x138>
 8018988:	691f      	ldr	r7, [r3, #16]
 801898a:	b12f      	cbz	r7, 8018998 <GUI__ConvertColor2Index+0x166>
 801898c:	4620      	mov	r0, r4
 801898e:	4641      	mov	r1, r8
 8018990:	462a      	mov	r2, r5
 8018992:	2301      	movs	r3, #1
 8018994:	47b8      	blx	r7
 8018996:	e007      	b.n	80189a8 <GUI__ConvertColor2Index+0x176>
 8018998:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 801899c:	47b0      	blx	r6
 801899e:	f808 0007 	strb.w	r0, [r8, r7]
 80189a2:	3701      	adds	r7, #1
 80189a4:	42bd      	cmp	r5, r7
 80189a6:	d1f7      	bne.n	8018998 <GUI__ConvertColor2Index+0x166>
 80189a8:	2001      	movs	r0, #1
 80189aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80189ae:	f104 0904 	add.w	r9, r4, #4
 80189b2:	2500      	movs	r5, #0
 80189b4:	e761      	b.n	801887a <GUI__ConvertColor2Index+0x48>
 80189b6:	f104 0904 	add.w	r9, r4, #4
 80189ba:	2500      	movs	r5, #0
 80189bc:	e7ae      	b.n	801891c <GUI__ConvertColor2Index+0xea>
 80189be:	691f      	ldr	r7, [r3, #16]
 80189c0:	b11f      	cbz	r7, 80189ca <GUI__ConvertColor2Index+0x198>
 80189c2:	4641      	mov	r1, r8
 80189c4:	462a      	mov	r2, r5
 80189c6:	2302      	movs	r3, #2
 80189c8:	e7e4      	b.n	8018994 <GUI__ConvertColor2Index+0x162>
 80189ca:	f854 0b04 	ldr.w	r0, [r4], #4
 80189ce:	47b0      	blx	r6
 80189d0:	3d01      	subs	r5, #1
 80189d2:	f828 0b02 	strh.w	r0, [r8], #2
 80189d6:	d1f8      	bne.n	80189ca <GUI__ConvertColor2Index+0x198>
 80189d8:	e7e6      	b.n	80189a8 <GUI__ConvertColor2Index+0x176>

080189da <GUI__CompactPixelIndicesEx>:
 80189da:	b513      	push	{r0, r1, r4, lr}
 80189dc:	2400      	movs	r4, #0
 80189de:	9400      	str	r4, [sp, #0]
 80189e0:	f7ff ff27 	bl	8018832 <GUI__ConvertColor2Index>
 80189e4:	b002      	add	sp, #8
 80189e6:	bd10      	pop	{r4, pc}

080189e8 <_GetCharCode>:
 80189e8:	7800      	ldrb	r0, [r0, #0]
 80189ea:	4770      	bx	lr

080189ec <_GetCharSize>:
 80189ec:	2001      	movs	r0, #1
 80189ee:	4770      	bx	lr

080189f0 <_CalcSizeOfChar>:
 80189f0:	2001      	movs	r0, #1
 80189f2:	4770      	bx	lr

080189f4 <_Encode>:
 80189f4:	7001      	strb	r1, [r0, #0]
 80189f6:	2001      	movs	r0, #1
 80189f8:	4770      	bx	lr
	...

080189fc <GUI_TOUCH_GetLayer>:
 80189fc:	4b01      	ldr	r3, [pc, #4]	; (8018a04 <GUI_TOUCH_GetLayer+0x8>)
 80189fe:	7a58      	ldrb	r0, [r3, #9]
 8018a00:	4770      	bx	lr
 8018a02:	bf00      	nop
 8018a04:	200196f0 	.word	0x200196f0

08018a08 <GUI_SetTextAlign>:
 8018a08:	4b03      	ldr	r3, [pc, #12]	; (8018a18 <GUI_SetTextAlign+0x10>)
 8018a0a:	681b      	ldr	r3, [r3, #0]
 8018a0c:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 8018a10:	8598      	strh	r0, [r3, #44]	; 0x2c
 8018a12:	4610      	mov	r0, r2
 8018a14:	4770      	bx	lr
 8018a16:	bf00      	nop
 8018a18:	2000016c 	.word	0x2000016c

08018a1c <GUI_SetOrg>:
 8018a1c:	460a      	mov	r2, r1
 8018a1e:	4908      	ldr	r1, [pc, #32]	; (8018a40 <GUI_SetOrg+0x24>)
 8018a20:	b510      	push	{r4, lr}
 8018a22:	8008      	strh	r0, [r1, #0]
 8018a24:	4907      	ldr	r1, [pc, #28]	; (8018a44 <GUI_SetOrg+0x28>)
 8018a26:	800a      	strh	r2, [r1, #0]
 8018a28:	4907      	ldr	r1, [pc, #28]	; (8018a48 <GUI_SetOrg+0x2c>)
 8018a2a:	6809      	ldr	r1, [r1, #0]
 8018a2c:	4603      	mov	r3, r0
 8018a2e:	7c48      	ldrb	r0, [r1, #17]
 8018a30:	4906      	ldr	r1, [pc, #24]	; (8018a4c <GUI_SetOrg+0x30>)
 8018a32:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8018a36:	68c1      	ldr	r1, [r0, #12]
 8018a38:	6a0c      	ldr	r4, [r1, #32]
 8018a3a:	4619      	mov	r1, r3
 8018a3c:	47a0      	blx	r4
 8018a3e:	bd10      	pop	{r4, pc}
 8018a40:	20019c88 	.word	0x20019c88
 8018a44:	20019c7c 	.word	0x20019c7c
 8018a48:	2000016c 	.word	0x2000016c
 8018a4c:	20019ca0 	.word	0x20019ca0

08018a50 <GUI_SetLineStyle>:
 8018a50:	4b02      	ldr	r3, [pc, #8]	; (8018a5c <GUI_SetLineStyle+0xc>)
 8018a52:	681b      	ldr	r3, [r3, #0]
 8018a54:	7e9a      	ldrb	r2, [r3, #26]
 8018a56:	7698      	strb	r0, [r3, #26]
 8018a58:	4610      	mov	r0, r2
 8018a5a:	4770      	bx	lr
 8018a5c:	2000016c 	.word	0x2000016c

08018a60 <GUI_GetFontInfo>:
 8018a60:	b508      	push	{r3, lr}
 8018a62:	b910      	cbnz	r0, 8018a6a <GUI_GetFontInfo+0xa>
 8018a64:	4b07      	ldr	r3, [pc, #28]	; (8018a84 <GUI_GetFontInfo+0x24>)
 8018a66:	681b      	ldr	r3, [r3, #0]
 8018a68:	69d8      	ldr	r0, [r3, #28]
 8018a6a:	f890 3020 	ldrb.w	r3, [r0, #32]
 8018a6e:	708b      	strb	r3, [r1, #2]
 8018a70:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8018a74:	710b      	strb	r3, [r1, #4]
 8018a76:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 8018a7a:	70cb      	strb	r3, [r1, #3]
 8018a7c:	6883      	ldr	r3, [r0, #8]
 8018a7e:	4798      	blx	r3
 8018a80:	bd08      	pop	{r3, pc}
 8018a82:	bf00      	nop
 8018a84:	2000016c 	.word	0x2000016c

08018a88 <GUI_GetBkColor>:
 8018a88:	b508      	push	{r3, lr}
 8018a8a:	f001 f98f 	bl	8019dac <LCD_GetBkColorIndex>
 8018a8e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8018a92:	f7f7 bef9 	b.w	8010888 <LCD_Index2Color>

08018a96 <GUI_GetColor>:
 8018a96:	b508      	push	{r3, lr}
 8018a98:	f001 f990 	bl	8019dbc <LCD_GetColorIndex>
 8018a9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8018aa0:	f7f7 bef2 	b.w	8010888 <LCD_Index2Color>

08018aa4 <GUI_GetClientRect>:
 8018aa4:	b108      	cbz	r0, 8018aaa <GUI_GetClientRect+0x6>
 8018aa6:	f7f3 bf09 	b.w	800c8bc <WM_GetClientRect>
 8018aaa:	4770      	bx	lr

08018aac <_SetLineColor>:
 8018aac:	4b1e      	ldr	r3, [pc, #120]	; (8018b28 <_SetLineColor+0x7c>)
 8018aae:	681b      	ldr	r3, [r3, #0]
 8018ab0:	7e9b      	ldrb	r3, [r3, #26]
 8018ab2:	3b01      	subs	r3, #1
 8018ab4:	2b03      	cmp	r3, #3
 8018ab6:	d832      	bhi.n	8018b1e <_SetLineColor+0x72>
 8018ab8:	e8df f003 	tbb	[pc, r3]
 8018abc:	221a0d02 	.word	0x221a0d02
 8018ac0:	4b1a      	ldr	r3, [pc, #104]	; (8018b2c <_SetLineColor+0x80>)
 8018ac2:	3006      	adds	r0, #6
 8018ac4:	4003      	ands	r3, r0
 8018ac6:	2b00      	cmp	r3, #0
 8018ac8:	da03      	bge.n	8018ad2 <_SetLineColor+0x26>
 8018aca:	3b01      	subs	r3, #1
 8018acc:	f063 030f 	orn	r3, r3, #15
 8018ad0:	3301      	adds	r3, #1
 8018ad2:	2b0b      	cmp	r3, #11
 8018ad4:	e008      	b.n	8018ae8 <_SetLineColor+0x3c>
 8018ad6:	4b16      	ldr	r3, [pc, #88]	; (8018b30 <_SetLineColor+0x84>)
 8018ad8:	4003      	ands	r3, r0
 8018ada:	2b00      	cmp	r3, #0
 8018adc:	da03      	bge.n	8018ae6 <_SetLineColor+0x3a>
 8018ade:	3b01      	subs	r3, #1
 8018ae0:	f063 0303 	orn	r3, r3, #3
 8018ae4:	3301      	adds	r3, #1
 8018ae6:	2b01      	cmp	r3, #1
 8018ae8:	bfcc      	ite	gt
 8018aea:	2000      	movgt	r0, #0
 8018aec:	2001      	movle	r0, #1
 8018aee:	4770      	bx	lr
 8018af0:	2314      	movs	r3, #20
 8018af2:	fb90 f2f3 	sdiv	r2, r0, r3
 8018af6:	fb03 0012 	mls	r0, r3, r2, r0
 8018afa:	280b      	cmp	r0, #11
 8018afc:	dc09      	bgt.n	8018b12 <_SetLineColor+0x66>
 8018afe:	e010      	b.n	8018b22 <_SetLineColor+0x76>
 8018b00:	2318      	movs	r3, #24
 8018b02:	fb90 f2f3 	sdiv	r2, r0, r3
 8018b06:	fb03 0012 	mls	r0, r3, r2, r0
 8018b0a:	280b      	cmp	r0, #11
 8018b0c:	dd09      	ble.n	8018b22 <_SetLineColor+0x76>
 8018b0e:	f020 0004 	bic.w	r0, r0, #4
 8018b12:	3810      	subs	r0, #16
 8018b14:	2801      	cmp	r0, #1
 8018b16:	bf8c      	ite	hi
 8018b18:	2000      	movhi	r0, #0
 8018b1a:	2001      	movls	r0, #1
 8018b1c:	4770      	bx	lr
 8018b1e:	2000      	movs	r0, #0
 8018b20:	4770      	bx	lr
 8018b22:	2001      	movs	r0, #1
 8018b24:	4770      	bx	lr
 8018b26:	bf00      	nop
 8018b28:	2000016c 	.word	0x2000016c
 8018b2c:	8000000f 	.word	0x8000000f
 8018b30:	80000003 	.word	0x80000003

08018b34 <GUI_sin>:
 8018b34:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8018b38:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8018b3c:	bfc6      	itte	gt
 8018b3e:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 8018b42:	2101      	movgt	r1, #1
 8018b44:	2100      	movle	r1, #0
 8018b46:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8018b4a:	bfc8      	it	gt
 8018b4c:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 8018b50:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 8018b54:	b510      	push	{r4, lr}
 8018b56:	1182      	asrs	r2, r0, #6
 8018b58:	4c0b      	ldr	r4, [pc, #44]	; (8018b88 <GUI_sin+0x54>)
 8018b5a:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8018b5e:	b29b      	uxth	r3, r3
 8018b60:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 8018b64:	2b40      	cmp	r3, #64	; 0x40
 8018b66:	fb00 f003 	mul.w	r0, r0, r3
 8018b6a:	d008      	beq.n	8018b7e <GUI_sin+0x4a>
 8018b6c:	2a10      	cmp	r2, #16
 8018b6e:	d006      	beq.n	8018b7e <GUI_sin+0x4a>
 8018b70:	3201      	adds	r2, #1
 8018b72:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8018b76:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 8018b7a:	fb03 0002 	mla	r0, r3, r2, r0
 8018b7e:	3020      	adds	r0, #32
 8018b80:	0980      	lsrs	r0, r0, #6
 8018b82:	b101      	cbz	r1, 8018b86 <GUI_sin+0x52>
 8018b84:	4240      	negs	r0, r0
 8018b86:	bd10      	pop	{r4, pc}
 8018b88:	08021bdc 	.word	0x08021bdc

08018b8c <GUI_cos>:
 8018b8c:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8018b90:	f7ff bfd0 	b.w	8018b34 <GUI_sin>

08018b94 <GL_DrawLine1Ex>:
 8018b94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b98:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8018b9c:	1a17      	subs	r7, r2, r0
 8018b9e:	1a5c      	subs	r4, r3, r1
 8018ba0:	ea54 0c07 	orrs.w	ip, r4, r7
 8018ba4:	4605      	mov	r5, r0
 8018ba6:	460e      	mov	r6, r1
 8018ba8:	f8d8 b000 	ldr.w	fp, [r8]
 8018bac:	d104      	bne.n	8018bb8 <GL_DrawLine1Ex+0x24>
 8018bae:	b003      	add	sp, #12
 8018bb0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bb4:	f001 be54 	b.w	801a860 <GL_DrawPoint>
 8018bb8:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 8018bbc:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 8018bc0:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8018bc4:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8018bc8:	4288      	cmp	r0, r1
 8018bca:	db04      	blt.n	8018bd6 <GL_DrawLine1Ex+0x42>
 8018bcc:	4621      	mov	r1, r4
 8018bce:	463c      	mov	r4, r7
 8018bd0:	460f      	mov	r7, r1
 8018bd2:	2100      	movs	r1, #0
 8018bd4:	e006      	b.n	8018be4 <GL_DrawLine1Ex+0x50>
 8018bd6:	4611      	mov	r1, r2
 8018bd8:	461a      	mov	r2, r3
 8018bda:	460b      	mov	r3, r1
 8018bdc:	4629      	mov	r1, r5
 8018bde:	4635      	mov	r5, r6
 8018be0:	460e      	mov	r6, r1
 8018be2:	2101      	movs	r1, #1
 8018be4:	9100      	str	r1, [sp, #0]
 8018be6:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8018bea:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8018bee:	428c      	cmp	r4, r1
 8018bf0:	d008      	beq.n	8018c04 <GL_DrawLine1Ex+0x70>
 8018bf2:	461e      	mov	r6, r3
 8018bf4:	462b      	mov	r3, r5
 8018bf6:	4264      	negs	r4, r4
 8018bf8:	4615      	mov	r5, r2
 8018bfa:	427f      	negs	r7, r7
 8018bfc:	461a      	mov	r2, r3
 8018bfe:	f04f 3aff 	mov.w	sl, #4294967295
 8018c02:	e001      	b.n	8018c08 <GL_DrawLine1Ex+0x74>
 8018c04:	f04f 0a01 	mov.w	sl, #1
 8018c08:	2f00      	cmp	r7, #0
 8018c0a:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8018d54 <GL_DrawLine1Ex+0x1c0>
 8018c0e:	d13e      	bne.n	8018c8e <GL_DrawLine1Ex+0xfa>
 8018c10:	9b00      	ldr	r3, [sp, #0]
 8018c12:	b1d3      	cbz	r3, 8018c4a <GL_DrawLine1Ex+0xb6>
 8018c14:	f8d9 3000 	ldr.w	r3, [r9]
 8018c18:	7e9b      	ldrb	r3, [r3, #26]
 8018c1a:	b98b      	cbnz	r3, 8018c40 <GL_DrawLine1Ex+0xac>
 8018c1c:	4630      	mov	r0, r6
 8018c1e:	4629      	mov	r1, r5
 8018c20:	b003      	add	sp, #12
 8018c22:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c26:	f7f7 bb8b 	b.w	8010340 <LCD_DrawVLine>
 8018c2a:	f7ff ff3f 	bl	8018aac <_SetLineColor>
 8018c2e:	b930      	cbnz	r0, 8018c3e <GL_DrawLine1Ex+0xaa>
 8018c30:	f8d9 3000 	ldr.w	r3, [r9]
 8018c34:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018c36:	4630      	mov	r0, r6
 8018c38:	685b      	ldr	r3, [r3, #4]
 8018c3a:	1979      	adds	r1, r7, r5
 8018c3c:	4798      	blx	r3
 8018c3e:	3701      	adds	r7, #1
 8018c40:	42a7      	cmp	r7, r4
 8018c42:	eb07 000b 	add.w	r0, r7, fp
 8018c46:	ddf0      	ble.n	8018c2a <GL_DrawLine1Ex+0x96>
 8018c48:	e01d      	b.n	8018c86 <GL_DrawLine1Ex+0xf2>
 8018c4a:	f8d9 3000 	ldr.w	r3, [r9]
 8018c4e:	7e99      	ldrb	r1, [r3, #26]
 8018c50:	b111      	cbz	r1, 8018c58 <GL_DrawLine1Ex+0xc4>
 8018c52:	f8dd a000 	ldr.w	sl, [sp]
 8018c56:	e012      	b.n	8018c7e <GL_DrawLine1Ex+0xea>
 8018c58:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018c5a:	4628      	mov	r0, r5
 8018c5c:	681b      	ldr	r3, [r3, #0]
 8018c5e:	4631      	mov	r1, r6
 8018c60:	4798      	blx	r3
 8018c62:	e074      	b.n	8018d4e <GL_DrawLine1Ex+0x1ba>
 8018c64:	f7ff ff22 	bl	8018aac <_SetLineColor>
 8018c68:	b938      	cbnz	r0, 8018c7a <GL_DrawLine1Ex+0xe6>
 8018c6a:	f8d9 3000 	ldr.w	r3, [r9]
 8018c6e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018c70:	eb0a 0005 	add.w	r0, sl, r5
 8018c74:	685b      	ldr	r3, [r3, #4]
 8018c76:	4631      	mov	r1, r6
 8018c78:	4798      	blx	r3
 8018c7a:	f10a 0a01 	add.w	sl, sl, #1
 8018c7e:	45a2      	cmp	sl, r4
 8018c80:	eb0a 000b 	add.w	r0, sl, fp
 8018c84:	ddee      	ble.n	8018c64 <GL_DrawLine1Ex+0xd0>
 8018c86:	3801      	subs	r0, #1
 8018c88:	f8c8 0000 	str.w	r0, [r8]
 8018c8c:	e05f      	b.n	8018d4e <GL_DrawLine1Ex+0x1ba>
 8018c8e:	f8d9 1000 	ldr.w	r1, [r9]
 8018c92:	f04f 0202 	mov.w	r2, #2
 8018c96:	7e89      	ldrb	r1, [r1, #26]
 8018c98:	fb94 f2f2 	sdiv	r2, r4, r2
 8018c9c:	bfb8      	it	lt
 8018c9e:	4252      	neglt	r2, r2
 8018ca0:	b9d9      	cbnz	r1, 8018cda <GL_DrawLine1Ex+0x146>
 8018ca2:	4693      	mov	fp, r2
 8018ca4:	46a8      	mov	r8, r5
 8018ca6:	ebc5 0308 	rsb	r3, r5, r8
 8018caa:	42a3      	cmp	r3, r4
 8018cac:	dc4f      	bgt.n	8018d4e <GL_DrawLine1Ex+0x1ba>
 8018cae:	9b00      	ldr	r3, [sp, #0]
 8018cb0:	fb9b f1f4 	sdiv	r1, fp, r4
 8018cb4:	4431      	add	r1, r6
 8018cb6:	b92b      	cbnz	r3, 8018cc4 <GL_DrawLine1Ex+0x130>
 8018cb8:	f8d9 3000 	ldr.w	r3, [r9]
 8018cbc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018cbe:	4640      	mov	r0, r8
 8018cc0:	685b      	ldr	r3, [r3, #4]
 8018cc2:	e005      	b.n	8018cd0 <GL_DrawLine1Ex+0x13c>
 8018cc4:	f8d9 3000 	ldr.w	r3, [r9]
 8018cc8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018cca:	685b      	ldr	r3, [r3, #4]
 8018ccc:	4608      	mov	r0, r1
 8018cce:	4641      	mov	r1, r8
 8018cd0:	4798      	blx	r3
 8018cd2:	f108 0801 	add.w	r8, r8, #1
 8018cd6:	44bb      	add	fp, r7
 8018cd8:	e7e5      	b.n	8018ca6 <GL_DrawLine1Ex+0x112>
 8018cda:	f1ba 3fff 	cmp.w	sl, #4294967295
 8018cde:	bf04      	itt	eq
 8018ce0:	eb04 010b 	addeq.w	r1, r4, fp
 8018ce4:	f8c8 1000 	streq.w	r1, [r8]
 8018ce8:	9201      	str	r2, [sp, #4]
 8018cea:	46ab      	mov	fp, r5
 8018cec:	ebc5 010b 	rsb	r1, r5, fp
 8018cf0:	42a1      	cmp	r1, r4
 8018cf2:	f8d8 0000 	ldr.w	r0, [r8]
 8018cf6:	dc1e      	bgt.n	8018d36 <GL_DrawLine1Ex+0x1a2>
 8018cf8:	4450      	add	r0, sl
 8018cfa:	f8c8 0000 	str.w	r0, [r8]
 8018cfe:	f7ff fed5 	bl	8018aac <_SetLineColor>
 8018d02:	b980      	cbnz	r0, 8018d26 <GL_DrawLine1Ex+0x192>
 8018d04:	f8dd c004 	ldr.w	ip, [sp, #4]
 8018d08:	f8d9 0000 	ldr.w	r0, [r9]
 8018d0c:	9b00      	ldr	r3, [sp, #0]
 8018d0e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018d10:	fb9c f1f4 	sdiv	r1, ip, r4
 8018d14:	4431      	add	r1, r6
 8018d16:	b913      	cbnz	r3, 8018d1e <GL_DrawLine1Ex+0x18a>
 8018d18:	6843      	ldr	r3, [r0, #4]
 8018d1a:	4658      	mov	r0, fp
 8018d1c:	e002      	b.n	8018d24 <GL_DrawLine1Ex+0x190>
 8018d1e:	6843      	ldr	r3, [r0, #4]
 8018d20:	4608      	mov	r0, r1
 8018d22:	4659      	mov	r1, fp
 8018d24:	4798      	blx	r3
 8018d26:	f8dd c004 	ldr.w	ip, [sp, #4]
 8018d2a:	44bc      	add	ip, r7
 8018d2c:	f10b 0b01 	add.w	fp, fp, #1
 8018d30:	f8cd c004 	str.w	ip, [sp, #4]
 8018d34:	e7da      	b.n	8018cec <GL_DrawLine1Ex+0x158>
 8018d36:	f1ba 3fff 	cmp.w	sl, #4294967295
 8018d3a:	bf04      	itt	eq
 8018d3c:	1824      	addeq	r4, r4, r0
 8018d3e:	f8c8 4000 	streq.w	r4, [r8]
 8018d42:	f8d8 2000 	ldr.w	r2, [r8]
 8018d46:	ebca 0302 	rsb	r3, sl, r2
 8018d4a:	f8c8 3000 	str.w	r3, [r8]
 8018d4e:	b003      	add	sp, #12
 8018d50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d54:	2000016c 	.word	0x2000016c

08018d58 <GL_DrawLineEx>:
 8018d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d5c:	4d67      	ldr	r5, [pc, #412]	; (8018efc <GL_DrawLineEx+0x1a4>)
 8018d5e:	682c      	ldr	r4, [r5, #0]
 8018d60:	f894 b018 	ldrb.w	fp, [r4, #24]
 8018d64:	f1bb 0f01 	cmp.w	fp, #1
 8018d68:	b087      	sub	sp, #28
 8018d6a:	4681      	mov	r9, r0
 8018d6c:	4688      	mov	r8, r1
 8018d6e:	4617      	mov	r7, r2
 8018d70:	461e      	mov	r6, r3
 8018d72:	46aa      	mov	sl, r5
 8018d74:	d104      	bne.n	8018d80 <GL_DrawLineEx+0x28>
 8018d76:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018d78:	9400      	str	r4, [sp, #0]
 8018d7a:	f7ff ff0b 	bl	8018b94 <GL_DrawLine1Ex>
 8018d7e:	e0ba      	b.n	8018ef6 <GL_DrawLineEx+0x19e>
 8018d80:	1a84      	subs	r4, r0, r2
 8018d82:	1acd      	subs	r5, r1, r3
 8018d84:	ea54 0305 	orrs.w	r3, r4, r5
 8018d88:	f000 80b5 	beq.w	8018ef6 <GL_DrawLineEx+0x19e>
 8018d8c:	2c00      	cmp	r4, #0
 8018d8e:	bfba      	itte	lt
 8018d90:	4264      	neglt	r4, r4
 8018d92:	2301      	movlt	r3, #1
 8018d94:	2300      	movge	r3, #0
 8018d96:	2d00      	cmp	r5, #0
 8018d98:	bfbc      	itt	lt
 8018d9a:	426d      	neglt	r5, r5
 8018d9c:	f043 0302 	orrlt.w	r3, r3, #2
 8018da0:	42a5      	cmp	r5, r4
 8018da2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018da6:	dd04      	ble.n	8018db2 <GL_DrawLineEx+0x5a>
 8018da8:	4622      	mov	r2, r4
 8018daa:	f043 0304 	orr.w	r3, r3, #4
 8018dae:	462c      	mov	r4, r5
 8018db0:	4615      	mov	r5, r2
 8018db2:	2202      	movs	r2, #2
 8018db4:	fb94 f2f2 	sdiv	r2, r4, r2
 8018db8:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 8018dbc:	fb95 f4f4 	sdiv	r4, r5, r4
 8018dc0:	11a1      	asrs	r1, r4, #6
 8018dc2:	4a4f      	ldr	r2, [pc, #316]	; (8018f00 <GL_DrawLineEx+0x1a8>)
 8018dc4:	f3c4 0483 	ubfx	r4, r4, #2, #4
 8018dc8:	f1c4 0510 	rsb	r5, r4, #16
 8018dcc:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 8018dd0:	2d10      	cmp	r5, #16
 8018dd2:	fb05 f000 	mul.w	r0, r5, r0
 8018dd6:	d004      	beq.n	8018de2 <GL_DrawLineEx+0x8a>
 8018dd8:	3101      	adds	r1, #1
 8018dda:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 8018dde:	fb04 0002 	mla	r0, r4, r2, r0
 8018de2:	2210      	movs	r2, #16
 8018de4:	3008      	adds	r0, #8
 8018de6:	fb90 f0f2 	sdiv	r0, r0, r2
 8018dea:	0759      	lsls	r1, r3, #29
 8018dec:	bf48      	it	mi
 8018dee:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 8018df2:	07da      	lsls	r2, r3, #31
 8018df4:	bf48      	it	mi
 8018df6:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 8018dfa:	079b      	lsls	r3, r3, #30
 8018dfc:	bf48      	it	mi
 8018dfe:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 8018e02:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 8018e06:	4628      	mov	r0, r5
 8018e08:	f7ff fec0 	bl	8018b8c <GUI_cos>
 8018e0c:	fb00 f40b 	mul.w	r4, r0, fp
 8018e10:	4628      	mov	r0, r5
 8018e12:	f7ff fe8f 	bl	8018b34 <GUI_sin>
 8018e16:	2c00      	cmp	r4, #0
 8018e18:	fb00 f00b 	mul.w	r0, r0, fp
 8018e1c:	da04      	bge.n	8018e28 <GL_DrawLineEx+0xd0>
 8018e1e:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 8018e22:	129b      	asrs	r3, r3, #10
 8018e24:	425b      	negs	r3, r3
 8018e26:	e002      	b.n	8018e2e <GL_DrawLineEx+0xd6>
 8018e28:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8018e2c:	129b      	asrs	r3, r3, #10
 8018e2e:	2800      	cmp	r0, #0
 8018e30:	da06      	bge.n	8018e40 <GL_DrawLineEx+0xe8>
 8018e32:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 8018e36:	ea4f 2bab 	mov.w	fp, fp, asr #10
 8018e3a:	f1cb 0b00 	rsb	fp, fp, #0
 8018e3e:	e003      	b.n	8018e48 <GL_DrawLineEx+0xf0>
 8018e40:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 8018e44:	ea4f 2bab 	mov.w	fp, fp, asr #10
 8018e48:	2b00      	cmp	r3, #0
 8018e4a:	dd03      	ble.n	8018e54 <GL_DrawLineEx+0xfc>
 8018e4c:	1c58      	adds	r0, r3, #1
 8018e4e:	1040      	asrs	r0, r0, #1
 8018e50:	105b      	asrs	r3, r3, #1
 8018e52:	e005      	b.n	8018e60 <GL_DrawLineEx+0x108>
 8018e54:	2202      	movs	r2, #2
 8018e56:	fb93 f0f2 	sdiv	r0, r3, r2
 8018e5a:	3b01      	subs	r3, #1
 8018e5c:	fb93 f3f2 	sdiv	r3, r3, r2
 8018e60:	f1bb 0f00 	cmp.w	fp, #0
 8018e64:	dd05      	ble.n	8018e72 <GL_DrawLineEx+0x11a>
 8018e66:	f10b 0201 	add.w	r2, fp, #1
 8018e6a:	1052      	asrs	r2, r2, #1
 8018e6c:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 8018e70:	e006      	b.n	8018e80 <GL_DrawLineEx+0x128>
 8018e72:	2102      	movs	r1, #2
 8018e74:	fb9b f2f1 	sdiv	r2, fp, r1
 8018e78:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018e7c:	fb9b fbf1 	sdiv	fp, fp, r1
 8018e80:	b280      	uxth	r0, r0
 8018e82:	fa1f f489 	uxth.w	r4, r9
 8018e86:	1901      	adds	r1, r0, r4
 8018e88:	b292      	uxth	r2, r2
 8018e8a:	f8ad 1008 	strh.w	r1, [sp, #8]
 8018e8e:	fa1f fb8b 	uxth.w	fp, fp
 8018e92:	fa1f f188 	uxth.w	r1, r8
 8018e96:	1855      	adds	r5, r2, r1
 8018e98:	ebcb 0101 	rsb	r1, fp, r1
 8018e9c:	b29b      	uxth	r3, r3
 8018e9e:	f8ad 100e 	strh.w	r1, [sp, #14]
 8018ea2:	b2b9      	uxth	r1, r7
 8018ea4:	1ae4      	subs	r4, r4, r3
 8018ea6:	1acb      	subs	r3, r1, r3
 8018ea8:	f8ad 3010 	strh.w	r3, [sp, #16]
 8018eac:	b2b3      	uxth	r3, r6
 8018eae:	4401      	add	r1, r0
 8018eb0:	ebcb 0b03 	rsb	fp, fp, r3
 8018eb4:	4413      	add	r3, r2
 8018eb6:	2200      	movs	r2, #0
 8018eb8:	f8ad 1014 	strh.w	r1, [sp, #20]
 8018ebc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018ec0:	a802      	add	r0, sp, #8
 8018ec2:	4613      	mov	r3, r2
 8018ec4:	2104      	movs	r1, #4
 8018ec6:	f8ad 500a 	strh.w	r5, [sp, #10]
 8018eca:	f8ad 400c 	strh.w	r4, [sp, #12]
 8018ece:	f8ad b012 	strh.w	fp, [sp, #18]
 8018ed2:	f001 fbe3 	bl	801a69c <GL_FillPolygon>
 8018ed6:	f8da 3000 	ldr.w	r3, [sl]
 8018eda:	7e5b      	ldrb	r3, [r3, #25]
 8018edc:	b91b      	cbnz	r3, 8018ee6 <GL_DrawLineEx+0x18e>
 8018ede:	4648      	mov	r0, r9
 8018ee0:	4641      	mov	r1, r8
 8018ee2:	f001 fcbd 	bl	801a860 <GL_DrawPoint>
 8018ee6:	f8da 3000 	ldr.w	r3, [sl]
 8018eea:	7e5b      	ldrb	r3, [r3, #25]
 8018eec:	b91b      	cbnz	r3, 8018ef6 <GL_DrawLineEx+0x19e>
 8018eee:	4638      	mov	r0, r7
 8018ef0:	4631      	mov	r1, r6
 8018ef2:	f001 fcb5 	bl	801a860 <GL_DrawPoint>
 8018ef6:	b007      	add	sp, #28
 8018ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018efc:	2000016c 	.word	0x2000016c
 8018f00:	08021bfe 	.word	0x08021bfe

08018f04 <GL_DrawLine>:
 8018f04:	b530      	push	{r4, r5, lr}
 8018f06:	b085      	sub	sp, #20
 8018f08:	ac04      	add	r4, sp, #16
 8018f0a:	2500      	movs	r5, #0
 8018f0c:	f844 5d04 	str.w	r5, [r4, #-4]!
 8018f10:	9400      	str	r4, [sp, #0]
 8018f12:	f7ff ff21 	bl	8018d58 <GL_DrawLineEx>
 8018f16:	b005      	add	sp, #20
 8018f18:	bd30      	pop	{r4, r5, pc}
	...

08018f1c <GUI_DrawLine>:
 8018f1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018f20:	461e      	mov	r6, r3
 8018f22:	4b0c      	ldr	r3, [pc, #48]	; (8018f54 <GUI_DrawLine+0x38>)
 8018f24:	681c      	ldr	r4, [r3, #0]
 8018f26:	4681      	mov	r9, r0
 8018f28:	2000      	movs	r0, #0
 8018f2a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8018f2c:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8018f2e:	4688      	mov	r8, r1
 8018f30:	4617      	mov	r7, r2
 8018f32:	f7f4 fc5f 	bl	800d7f4 <WM__InitIVRSearch>
 8018f36:	b150      	cbz	r0, 8018f4e <GUI_DrawLine+0x32>
 8018f38:	eb09 0005 	add.w	r0, r9, r5
 8018f3c:	eb08 0104 	add.w	r1, r8, r4
 8018f40:	197a      	adds	r2, r7, r5
 8018f42:	1933      	adds	r3, r6, r4
 8018f44:	f7ff ffde 	bl	8018f04 <GL_DrawLine>
 8018f48:	f7f4 fb92 	bl	800d670 <WM__GetNextIVR>
 8018f4c:	e7f3      	b.n	8018f36 <GUI_DrawLine+0x1a>
 8018f4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018f52:	bf00      	nop
 8018f54:	2000016c 	.word	0x2000016c

08018f58 <_DrawGradient>:
 8018f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f5c:	b091      	sub	sp, #68	; 0x44
 8018f5e:	4605      	mov	r5, r0
 8018f60:	4689      	mov	r9, r1
 8018f62:	981c      	ldr	r0, [sp, #112]	; 0x70
 8018f64:	991d      	ldr	r1, [sp, #116]	; 0x74
 8018f66:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
 8018f6a:	9002      	str	r0, [sp, #8]
 8018f6c:	4614      	mov	r4, r2
 8018f6e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8018f70:	9200      	str	r2, [sp, #0]
 8018f72:	461e      	mov	r6, r3
 8018f74:	9101      	str	r1, [sp, #4]
 8018f76:	f7ff fd8e 	bl	8018a96 <GUI_GetColor>
 8018f7a:	9a00      	ldr	r2, [sp, #0]
 8018f7c:	900b      	str	r0, [sp, #44]	; 0x2c
 8018f7e:	4542      	cmp	r2, r8
 8018f80:	d109      	bne.n	8018f96 <_DrawGradient+0x3e>
 8018f82:	4610      	mov	r0, r2
 8018f84:	f7f7 fcd0 	bl	8010928 <LCD_SetColor>
 8018f88:	9a01      	ldr	r2, [sp, #4]
 8018f8a:	b112      	cbz	r2, 8018f92 <_DrawGradient+0x3a>
 8018f8c:	4628      	mov	r0, r5
 8018f8e:	4649      	mov	r1, r9
 8018f90:	e0b5      	b.n	80190fe <_DrawGradient+0x1a6>
 8018f92:	4648      	mov	r0, r9
 8018f94:	e0b9      	b.n	801910a <_DrawGradient+0x1b2>
 8018f96:	fa5f fc82 	uxtb.w	ip, r2
 8018f9a:	f8cd c018 	str.w	ip, [sp, #24]
 8018f9e:	f3c2 2c07 	ubfx	ip, r2, #8, #8
 8018fa2:	f8cd c01c 	str.w	ip, [sp, #28]
 8018fa6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8018faa:	f8cd c020 	str.w	ip, [sp, #32]
 8018fae:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8018fb2:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 8018fb6:	f8dd c018 	ldr.w	ip, [sp, #24]
 8018fba:	fa5f f388 	uxtb.w	r3, r8
 8018fbe:	ebcc 0303 	rsb	r3, ip, r3
 8018fc2:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8018fc6:	930d      	str	r3, [sp, #52]	; 0x34
 8018fc8:	f3c8 2307 	ubfx	r3, r8, #8, #8
 8018fcc:	ebcc 0303 	rsb	r3, ip, r3
 8018fd0:	f8dd c020 	ldr.w	ip, [sp, #32]
 8018fd4:	930c      	str	r3, [sp, #48]	; 0x30
 8018fd6:	f3c8 4307 	ubfx	r3, r8, #16, #8
 8018fda:	ebcc 0303 	rsb	r3, ip, r3
 8018fde:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8018fe2:	930e      	str	r3, [sp, #56]	; 0x38
 8018fe4:	ebcc 6818 	rsb	r8, ip, r8, lsr #24
 8018fe8:	ebb6 0709 	subs.w	r7, r6, r9
 8018fec:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8018ff0:	f04f 0800 	mov.w	r8, #0
 8018ff4:	bf08      	it	eq
 8018ff6:	2701      	moveq	r7, #1
 8018ff8:	f109 33ff 	add.w	r3, r9, #4294967295
 8018ffc:	f8cd 8010 	str.w	r8, [sp, #16]
 8019000:	f8cd 800c 	str.w	r8, [sp, #12]
 8019004:	f8cd 8014 	str.w	r8, [sp, #20]
 8019008:	f04f 0a01 	mov.w	sl, #1
 801900c:	f103 0b01 	add.w	fp, r3, #1
 8019010:	45b3      	cmp	fp, r6
 8019012:	dc68      	bgt.n	80190e6 <_DrawGradient+0x18e>
 8019014:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8019018:	fb98 f1f7 	sdiv	r1, r8, r7
 801901c:	4461      	add	r1, ip
 801901e:	f8dd c010 	ldr.w	ip, [sp, #16]
 8019022:	fb9c f0f7 	sdiv	r0, ip, r7
 8019026:	f8dd c020 	ldr.w	ip, [sp, #32]
 801902a:	4460      	add	r0, ip
 801902c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8019030:	fb9c fef7 	sdiv	lr, ip, r7
 8019034:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8019038:	b2c0      	uxtb	r0, r0
 801903a:	44e6      	add	lr, ip
 801903c:	f8dd c014 	ldr.w	ip, [sp, #20]
 8019040:	0400      	lsls	r0, r0, #16
 8019042:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
 8019046:	fb9c f1f7 	sdiv	r1, ip, r7
 801904a:	f8dd c018 	ldr.w	ip, [sp, #24]
 801904e:	4461      	add	r1, ip
 8019050:	fa5f fe8e 	uxtb.w	lr, lr
 8019054:	b2c9      	uxtb	r1, r1
 8019056:	ea41 210e 	orr.w	r1, r1, lr, lsl #8
 801905a:	4301      	orrs	r1, r0
 801905c:	45cb      	cmp	fp, r9
 801905e:	910a      	str	r1, [sp, #40]	; 0x28
 8019060:	dd26      	ble.n	80190b0 <_DrawGradient+0x158>
 8019062:	4291      	cmp	r1, r2
 8019064:	d102      	bne.n	801906c <_DrawGradient+0x114>
 8019066:	f10a 0a01 	add.w	sl, sl, #1
 801906a:	e021      	b.n	80190b0 <_DrawGradient+0x158>
 801906c:	4610      	mov	r0, r2
 801906e:	9300      	str	r3, [sp, #0]
 8019070:	f7f7 fc5a 	bl	8010928 <LCD_SetColor>
 8019074:	f1ba 0f01 	cmp.w	sl, #1
 8019078:	9b00      	ldr	r3, [sp, #0]
 801907a:	d00f      	beq.n	801909c <_DrawGradient+0x144>
 801907c:	9801      	ldr	r0, [sp, #4]
 801907e:	ebca 010b 	rsb	r1, sl, fp
 8019082:	b110      	cbz	r0, 801908a <_DrawGradient+0x132>
 8019084:	4628      	mov	r0, r5
 8019086:	4622      	mov	r2, r4
 8019088:	e003      	b.n	8019092 <_DrawGradient+0x13a>
 801908a:	4608      	mov	r0, r1
 801908c:	461a      	mov	r2, r3
 801908e:	4629      	mov	r1, r5
 8019090:	4623      	mov	r3, r4
 8019092:	f7f7 f97b 	bl	801038c <LCD_FillRect>
 8019096:	f04f 0a01 	mov.w	sl, #1
 801909a:	e009      	b.n	80190b0 <_DrawGradient+0x158>
 801909c:	9901      	ldr	r1, [sp, #4]
 801909e:	b111      	cbz	r1, 80190a6 <_DrawGradient+0x14e>
 80190a0:	4628      	mov	r0, r5
 80190a2:	4619      	mov	r1, r3
 80190a4:	e001      	b.n	80190aa <_DrawGradient+0x152>
 80190a6:	4618      	mov	r0, r3
 80190a8:	4629      	mov	r1, r5
 80190aa:	4622      	mov	r2, r4
 80190ac:	9b02      	ldr	r3, [sp, #8]
 80190ae:	4798      	blx	r3
 80190b0:	f8dd c014 	ldr.w	ip, [sp, #20]
 80190b4:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 80190b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80190ba:	44f4      	add	ip, lr
 80190bc:	f8cd c014 	str.w	ip, [sp, #20]
 80190c0:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 80190c4:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80190c8:	44f4      	add	ip, lr
 80190ca:	f8cd c00c 	str.w	ip, [sp, #12]
 80190ce:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 80190d2:	f8dd c010 	ldr.w	ip, [sp, #16]
 80190d6:	44f4      	add	ip, lr
 80190d8:	f8cd c010 	str.w	ip, [sp, #16]
 80190dc:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 80190e0:	465b      	mov	r3, fp
 80190e2:	44e0      	add	r8, ip
 80190e4:	e792      	b.n	801900c <_DrawGradient+0xb4>
 80190e6:	4610      	mov	r0, r2
 80190e8:	f7f7 fc1e 	bl	8010928 <LCD_SetColor>
 80190ec:	f1ba 0f01 	cmp.w	sl, #1
 80190f0:	d00f      	beq.n	8019112 <_DrawGradient+0x1ba>
 80190f2:	9801      	ldr	r0, [sp, #4]
 80190f4:	ebca 0106 	rsb	r1, sl, r6
 80190f8:	b130      	cbz	r0, 8019108 <_DrawGradient+0x1b0>
 80190fa:	4628      	mov	r0, r5
 80190fc:	3101      	adds	r1, #1
 80190fe:	4622      	mov	r2, r4
 8019100:	4633      	mov	r3, r6
 8019102:	f7f7 f943 	bl	801038c <LCD_FillRect>
 8019106:	e00e      	b.n	8019126 <_DrawGradient+0x1ce>
 8019108:	1c48      	adds	r0, r1, #1
 801910a:	4629      	mov	r1, r5
 801910c:	4632      	mov	r2, r6
 801910e:	4623      	mov	r3, r4
 8019110:	e7f7      	b.n	8019102 <_DrawGradient+0x1aa>
 8019112:	9901      	ldr	r1, [sp, #4]
 8019114:	b111      	cbz	r1, 801911c <_DrawGradient+0x1c4>
 8019116:	4628      	mov	r0, r5
 8019118:	4631      	mov	r1, r6
 801911a:	e001      	b.n	8019120 <_DrawGradient+0x1c8>
 801911c:	4630      	mov	r0, r6
 801911e:	4629      	mov	r1, r5
 8019120:	4622      	mov	r2, r4
 8019122:	9b02      	ldr	r3, [sp, #8]
 8019124:	4798      	blx	r3
 8019126:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019128:	b011      	add	sp, #68	; 0x44
 801912a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801912e:	f7f7 bbfb 	b.w	8010928 <LCD_SetColor>
	...

08019134 <GUI_DrawGradientV>:
 8019134:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019138:	4c15      	ldr	r4, [pc, #84]	; (8019190 <GUI_DrawGradientV+0x5c>)
 801913a:	6824      	ldr	r4, [r4, #0]
 801913c:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 801913e:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8019140:	b087      	sub	sp, #28
 8019142:	eb00 0905 	add.w	r9, r0, r5
 8019146:	eb01 0804 	add.w	r8, r1, r4
 801914a:	4415      	add	r5, r2
 801914c:	441c      	add	r4, r3
 801914e:	a804      	add	r0, sp, #16
 8019150:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019152:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8019154:	f8ad 9010 	strh.w	r9, [sp, #16]
 8019158:	f8ad 5014 	strh.w	r5, [sp, #20]
 801915c:	f8ad 8012 	strh.w	r8, [sp, #18]
 8019160:	f8ad 4016 	strh.w	r4, [sp, #22]
 8019164:	f7f4 fb46 	bl	800d7f4 <WM__InitIVRSearch>
 8019168:	b170      	cbz	r0, 8019188 <GUI_DrawGradientV+0x54>
 801916a:	4b0a      	ldr	r3, [pc, #40]	; (8019194 <GUI_DrawGradientV+0x60>)
 801916c:	9302      	str	r3, [sp, #8]
 801916e:	2301      	movs	r3, #1
 8019170:	9303      	str	r3, [sp, #12]
 8019172:	4648      	mov	r0, r9
 8019174:	4641      	mov	r1, r8
 8019176:	462a      	mov	r2, r5
 8019178:	4623      	mov	r3, r4
 801917a:	9700      	str	r7, [sp, #0]
 801917c:	9601      	str	r6, [sp, #4]
 801917e:	f7ff feeb 	bl	8018f58 <_DrawGradient>
 8019182:	f7f4 fa75 	bl	800d670 <WM__GetNextIVR>
 8019186:	e7ef      	b.n	8019168 <GUI_DrawGradientV+0x34>
 8019188:	b007      	add	sp, #28
 801918a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801918e:	bf00      	nop
 8019190:	2000016c 	.word	0x2000016c
 8019194:	080102f5 	.word	0x080102f5

08019198 <GUI_DrawGradientH>:
 8019198:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801919c:	4c15      	ldr	r4, [pc, #84]	; (80191f4 <GUI_DrawGradientH+0x5c>)
 801919e:	6825      	ldr	r5, [r4, #0]
 80191a0:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 80191a2:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 80191a4:	b087      	sub	sp, #28
 80191a6:	eb00 0804 	add.w	r8, r0, r4
 80191aa:	eb01 0905 	add.w	r9, r1, r5
 80191ae:	4414      	add	r4, r2
 80191b0:	441d      	add	r5, r3
 80191b2:	a804      	add	r0, sp, #16
 80191b4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80191b6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80191b8:	f8ad 8010 	strh.w	r8, [sp, #16]
 80191bc:	f8ad 4014 	strh.w	r4, [sp, #20]
 80191c0:	f8ad 9012 	strh.w	r9, [sp, #18]
 80191c4:	f8ad 5016 	strh.w	r5, [sp, #22]
 80191c8:	f7f4 fb14 	bl	800d7f4 <WM__InitIVRSearch>
 80191cc:	b170      	cbz	r0, 80191ec <GUI_DrawGradientH+0x54>
 80191ce:	4b0a      	ldr	r3, [pc, #40]	; (80191f8 <GUI_DrawGradientH+0x60>)
 80191d0:	9302      	str	r3, [sp, #8]
 80191d2:	2300      	movs	r3, #0
 80191d4:	9303      	str	r3, [sp, #12]
 80191d6:	4648      	mov	r0, r9
 80191d8:	4641      	mov	r1, r8
 80191da:	462a      	mov	r2, r5
 80191dc:	4623      	mov	r3, r4
 80191de:	9700      	str	r7, [sp, #0]
 80191e0:	9601      	str	r6, [sp, #4]
 80191e2:	f7ff feb9 	bl	8018f58 <_DrawGradient>
 80191e6:	f7f4 fa43 	bl	800d670 <WM__GetNextIVR>
 80191ea:	e7ef      	b.n	80191cc <GUI_DrawGradientH+0x34>
 80191ec:	b007      	add	sp, #28
 80191ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80191f2:	bf00      	nop
 80191f4:	2000016c 	.word	0x2000016c
 80191f8:	08010341 	.word	0x08010341

080191fc <GUI_DispStringInRectEx>:
 80191fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019200:	b085      	sub	sp, #20
 8019202:	4681      	mov	r9, r0
 8019204:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019206:	460c      	mov	r4, r1
 8019208:	4690      	mov	r8, r2
 801920a:	461f      	mov	r7, r3
 801920c:	b915      	cbnz	r5, 8019214 <GUI_DispStringInRectEx+0x18>
 801920e:	f000 f8ef 	bl	80193f0 <GUI_DispStringInRectMax>
 8019212:	e03d      	b.n	8019290 <GUI_DispStringInRectEx+0x94>
 8019214:	b919      	cbnz	r1, 801921e <GUI_DispStringInRectEx+0x22>
 8019216:	9102      	str	r1, [sp, #8]
 8019218:	9103      	str	r1, [sp, #12]
 801921a:	460d      	mov	r5, r1
 801921c:	e015      	b.n	801924a <GUI_DispStringInRectEx+0x4e>
 801921e:	6808      	ldr	r0, [r1, #0]
 8019220:	6849      	ldr	r1, [r1, #4]
 8019222:	4b1d      	ldr	r3, [pc, #116]	; (8019298 <GUI_DispStringInRectEx+0x9c>)
 8019224:	ad02      	add	r5, sp, #8
 8019226:	c503      	stmia	r5!, {r0, r1}
 8019228:	ad02      	add	r5, sp, #8
 801922a:	cd03      	ldmia	r5!, {r0, r1}
 801922c:	6018      	str	r0, [r3, #0]
 801922e:	4620      	mov	r0, r4
 8019230:	6059      	str	r1, [r3, #4]
 8019232:	f7f2 ff15 	bl	800c060 <WM_SetUserClipRect>
 8019236:	4605      	mov	r5, r0
 8019238:	b138      	cbz	r0, 801924a <GUI_DispStringInRectEx+0x4e>
 801923a:	4668      	mov	r0, sp
 801923c:	4621      	mov	r1, r4
 801923e:	462a      	mov	r2, r5
 8019240:	f7f7 fc98 	bl	8010b74 <GUI__IntersectRects>
 8019244:	4668      	mov	r0, sp
 8019246:	f7f2 ff0b 	bl	800c060 <WM_SetUserClipRect>
 801924a:	4c14      	ldr	r4, [pc, #80]	; (801929c <GUI_DispStringInRectEx+0xa0>)
 801924c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801924e:	f8df a050 	ldr.w	sl, [pc, #80]	; 80192a0 <GUI_DispStringInRectEx+0xa4>
 8019252:	6823      	ldr	r3, [r4, #0]
 8019254:	f8da b000 	ldr.w	fp, [sl]
 8019258:	f8ca 2000 	str.w	r2, [sl]
 801925c:	2600      	movs	r6, #0
 801925e:	615e      	str	r6, [r3, #20]
 8019260:	a802      	add	r0, sp, #8
 8019262:	6853      	ldr	r3, [r2, #4]
 8019264:	4798      	blx	r3
 8019266:	4642      	mov	r2, r8
 8019268:	463b      	mov	r3, r7
 801926a:	4648      	mov	r0, r9
 801926c:	a902      	add	r1, sp, #8
 801926e:	f000 f819 	bl	80192a4 <GUI__DispStringInRect>
 8019272:	4628      	mov	r0, r5
 8019274:	f7f2 fef4 	bl	800c060 <WM_SetUserClipRect>
 8019278:	4652      	mov	r2, sl
 801927a:	6823      	ldr	r3, [r4, #0]
 801927c:	f1bb 0f00 	cmp.w	fp, #0
 8019280:	d001      	beq.n	8019286 <GUI_DispStringInRectEx+0x8a>
 8019282:	615e      	str	r6, [r3, #20]
 8019284:	e002      	b.n	801928c <GUI_DispStringInRectEx+0x90>
 8019286:	f103 0108 	add.w	r1, r3, #8
 801928a:	6159      	str	r1, [r3, #20]
 801928c:	f8c2 b000 	str.w	fp, [r2]
 8019290:	b005      	add	sp, #20
 8019292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019296:	bf00      	nop
 8019298:	20019da4 	.word	0x20019da4
 801929c:	2000016c 	.word	0x2000016c
 80192a0:	20019c74 	.word	0x20019c74

080192a4 <GUI__DispStringInRect>:
 80192a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192a8:	b087      	sub	sp, #28
 80192aa:	460c      	mov	r4, r1
 80192ac:	9001      	str	r0, [sp, #4]
 80192ae:	4691      	mov	r9, r2
 80192b0:	461d      	mov	r5, r3
 80192b2:	f7f9 fdf9 	bl	8012ea8 <GUI_GetFontDistY>
 80192b6:	9f01      	ldr	r7, [sp, #4]
 80192b8:	4680      	mov	r8, r0
 80192ba:	b124      	cbz	r4, 80192c6 <GUI__DispStringInRect+0x22>
 80192bc:	6820      	ldr	r0, [r4, #0]
 80192be:	6861      	ldr	r1, [r4, #4]
 80192c0:	ab04      	add	r3, sp, #16
 80192c2:	c303      	stmia	r3!, {r0, r1}
 80192c4:	e002      	b.n	80192cc <GUI__DispStringInRect+0x28>
 80192c6:	a804      	add	r0, sp, #16
 80192c8:	f7ff fbec 	bl	8018aa4 <GUI_GetClientRect>
 80192cc:	f019 0a0c 	ands.w	sl, r9, #12
 80192d0:	d002      	beq.n	80192d8 <GUI__DispStringInRect+0x34>
 80192d2:	462c      	mov	r4, r5
 80192d4:	2600      	movs	r6, #0
 80192d6:	e016      	b.n	8019306 <GUI__DispStringInRect+0x62>
 80192d8:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 80192dc:	e032      	b.n	8019344 <GUI__DispStringInRect+0xa0>
 80192de:	4621      	mov	r1, r4
 80192e0:	9801      	ldr	r0, [sp, #4]
 80192e2:	f7f9 fd17 	bl	8012d14 <GUI__GetLineNumChars>
 80192e6:	f8dd b004 	ldr.w	fp, [sp, #4]
 80192ea:	4601      	mov	r1, r0
 80192ec:	1a24      	subs	r4, r4, r0
 80192ee:	4658      	mov	r0, fp
 80192f0:	f7f7 ff2e 	bl	8011150 <GUI_UC__NumChars2NumBytes>
 80192f4:	eb0b 0300 	add.w	r3, fp, r0
 80192f8:	a806      	add	r0, sp, #24
 80192fa:	3601      	adds	r6, #1
 80192fc:	f840 3d14 	str.w	r3, [r0, #-20]!
 8019300:	f000 fd77 	bl	8019df2 <GUI__HandleEOLine>
 8019304:	b908      	cbnz	r0, 801930a <GUI__DispStringInRect+0x66>
 8019306:	2c00      	cmp	r4, #0
 8019308:	d1e9      	bne.n	80192de <GUI__DispStringInRect+0x3a>
 801930a:	f1ba 0f08 	cmp.w	sl, #8
 801930e:	d005      	beq.n	801931c <GUI__DispStringInRect+0x78>
 8019310:	f1ba 0f0c 	cmp.w	sl, #12
 8019314:	d008      	beq.n	8019328 <GUI__DispStringInRect+0x84>
 8019316:	f1ba 0f04 	cmp.w	sl, #4
 801931a:	d112      	bne.n	8019342 <GUI__DispStringInRect+0x9e>
 801931c:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8019320:	fb08 4416 	mls	r4, r8, r6, r4
 8019324:	3401      	adds	r4, #1
 8019326:	e00d      	b.n	8019344 <GUI__DispStringInRect+0xa0>
 8019328:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801932c:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8019330:	1ae4      	subs	r4, r4, r3
 8019332:	3401      	adds	r4, #1
 8019334:	fb08 4416 	mls	r4, r8, r6, r4
 8019338:	2202      	movs	r2, #2
 801933a:	fb94 f4f2 	sdiv	r4, r4, r2
 801933e:	441c      	add	r4, r3
 8019340:	e000      	b.n	8019344 <GUI__DispStringInRect+0xa0>
 8019342:	2400      	movs	r4, #0
 8019344:	9701      	str	r7, [sp, #4]
 8019346:	2600      	movs	r6, #0
 8019348:	2d00      	cmp	r5, #0
 801934a:	d04b      	beq.n	80193e4 <GUI__DispStringInRect+0x140>
 801934c:	4629      	mov	r1, r5
 801934e:	9801      	ldr	r0, [sp, #4]
 8019350:	f7f9 fce0 	bl	8012d14 <GUI__GetLineNumChars>
 8019354:	4607      	mov	r7, r0
 8019356:	1a2d      	subs	r5, r5, r0
 8019358:	4639      	mov	r1, r7
 801935a:	9801      	ldr	r0, [sp, #4]
 801935c:	f7f9 fd08 	bl	8012d70 <GUI__GetLineDistX>
 8019360:	f009 0303 	and.w	r3, r9, #3
 8019364:	2b01      	cmp	r3, #1
 8019366:	d00f      	beq.n	8019388 <GUI__DispStringInRect+0xe4>
 8019368:	2b02      	cmp	r3, #2
 801936a:	d003      	beq.n	8019374 <GUI__DispStringInRect+0xd0>
 801936c:	b983      	cbnz	r3, 8019390 <GUI__DispStringInRect+0xec>
 801936e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 8019372:	e00d      	b.n	8019390 <GUI__DispStringInRect+0xec>
 8019374:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019378:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 801937c:	1ab6      	subs	r6, r6, r2
 801937e:	1a36      	subs	r6, r6, r0
 8019380:	fb96 f6f3 	sdiv	r6, r6, r3
 8019384:	4416      	add	r6, r2
 8019386:	e003      	b.n	8019390 <GUI__DispStringInRect+0xec>
 8019388:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 801938c:	1a36      	subs	r6, r6, r0
 801938e:	3601      	adds	r6, #1
 8019390:	4b16      	ldr	r3, [pc, #88]	; (80193ec <GUI__DispStringInRect+0x148>)
 8019392:	6819      	ldr	r1, [r3, #0]
 8019394:	3801      	subs	r0, #1
 8019396:	b2a3      	uxth	r3, r4
 8019398:	b2b2      	uxth	r2, r6
 801939a:	848b      	strh	r3, [r1, #36]	; 0x24
 801939c:	4430      	add	r0, r6
 801939e:	f8ad 300a 	strh.w	r3, [sp, #10]
 80193a2:	f108 33ff 	add.w	r3, r8, #4294967295
 80193a6:	4423      	add	r3, r4
 80193a8:	844a      	strh	r2, [r1, #34]	; 0x22
 80193aa:	f8ad 2008 	strh.w	r2, [sp, #8]
 80193ae:	4639      	mov	r1, r7
 80193b0:	aa02      	add	r2, sp, #8
 80193b2:	f8ad 000c 	strh.w	r0, [sp, #12]
 80193b6:	9801      	ldr	r0, [sp, #4]
 80193b8:	f8ad 300e 	strh.w	r3, [sp, #14]
 80193bc:	f7f9 fd08 	bl	8012dd0 <GUI__DispLine>
 80193c0:	f8dd a004 	ldr.w	sl, [sp, #4]
 80193c4:	4639      	mov	r1, r7
 80193c6:	4650      	mov	r0, sl
 80193c8:	f7f7 fec2 	bl	8011150 <GUI_UC__NumChars2NumBytes>
 80193cc:	af06      	add	r7, sp, #24
 80193ce:	4450      	add	r0, sl
 80193d0:	f847 0d14 	str.w	r0, [r7, #-20]!
 80193d4:	f7f9 fd68 	bl	8012ea8 <GUI_GetFontDistY>
 80193d8:	4404      	add	r4, r0
 80193da:	4638      	mov	r0, r7
 80193dc:	f000 fd09 	bl	8019df2 <GUI__HandleEOLine>
 80193e0:	2800      	cmp	r0, #0
 80193e2:	d0b1      	beq.n	8019348 <GUI__DispStringInRect+0xa4>
 80193e4:	b007      	add	sp, #28
 80193e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193ea:	bf00      	nop
 80193ec:	2000016c 	.word	0x2000016c

080193f0 <GUI_DispStringInRectMax>:
 80193f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80193f4:	460c      	mov	r4, r1
 80193f6:	4690      	mov	r8, r2
 80193f8:	461f      	mov	r7, r3
 80193fa:	4606      	mov	r6, r0
 80193fc:	b1c0      	cbz	r0, 8019430 <GUI_DispStringInRectMax+0x40>
 80193fe:	b169      	cbz	r1, 801941c <GUI_DispStringInRectMax+0x2c>
 8019400:	4608      	mov	r0, r1
 8019402:	f7f2 fe2d 	bl	800c060 <WM_SetUserClipRect>
 8019406:	4605      	mov	r5, r0
 8019408:	b148      	cbz	r0, 801941e <GUI_DispStringInRectMax+0x2e>
 801940a:	4668      	mov	r0, sp
 801940c:	4621      	mov	r1, r4
 801940e:	462a      	mov	r2, r5
 8019410:	f7f7 fbb0 	bl	8010b74 <GUI__IntersectRects>
 8019414:	4668      	mov	r0, sp
 8019416:	f7f2 fe23 	bl	800c060 <WM_SetUserClipRect>
 801941a:	e000      	b.n	801941e <GUI_DispStringInRectMax+0x2e>
 801941c:	460d      	mov	r5, r1
 801941e:	4630      	mov	r0, r6
 8019420:	4621      	mov	r1, r4
 8019422:	4642      	mov	r2, r8
 8019424:	463b      	mov	r3, r7
 8019426:	f7ff ff3d 	bl	80192a4 <GUI__DispStringInRect>
 801942a:	4628      	mov	r0, r5
 801942c:	f7f2 fe18 	bl	800c060 <WM_SetUserClipRect>
 8019430:	b002      	add	sp, #8
 8019432:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019436 <GUI_DispStringInRect>:
 8019436:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801943a:	f7ff bfd9 	b.w	80193f0 <GUI_DispStringInRectMax>
	...

08019440 <GUI_CURSOR_SetPositionEx>:
 8019440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019442:	4606      	mov	r6, r0
 8019444:	4610      	mov	r0, r2
 8019446:	460d      	mov	r5, r1
 8019448:	4614      	mov	r4, r2
 801944a:	f7f8 fc6d 	bl	8011d28 <GUI_GetCursorLayer>
 801944e:	4f15      	ldr	r7, [pc, #84]	; (80194a4 <GUI_CURSOR_SetPositionEx+0x64>)
 8019450:	2314      	movs	r3, #20
 8019452:	b148      	cbz	r0, 8019468 <GUI_CURSOR_SetPositionEx+0x28>
 8019454:	435c      	muls	r4, r3
 8019456:	593b      	ldr	r3, [r7, r4]
 8019458:	6859      	ldr	r1, [r3, #4]
 801945a:	689a      	ldr	r2, [r3, #8]
 801945c:	1a71      	subs	r1, r6, r1
 801945e:	1aaa      	subs	r2, r5, r2
 8019460:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8019464:	f7f8 bc8a 	b.w	8011d7c <GUI_SetLayerPosEx>
 8019468:	fb03 7304 	mla	r3, r3, r4, r7
 801946c:	f103 0208 	add.w	r2, r3, #8
 8019470:	689b      	ldr	r3, [r3, #8]
 8019472:	42b3      	cmp	r3, r6
 8019474:	d102      	bne.n	801947c <GUI_CURSOR_SetPositionEx+0x3c>
 8019476:	6853      	ldr	r3, [r2, #4]
 8019478:	42ab      	cmp	r3, r5
 801947a:	d011      	beq.n	80194a0 <GUI_CURSOR_SetPositionEx+0x60>
 801947c:	2314      	movs	r3, #20
 801947e:	4363      	muls	r3, r4
 8019480:	18fa      	adds	r2, r7, r3
 8019482:	6910      	ldr	r0, [r2, #16]
 8019484:	b138      	cbz	r0, 8019496 <GUI_CURSOR_SetPositionEx+0x56>
 8019486:	4a07      	ldr	r2, [pc, #28]	; (80194a4 <GUI_CURSOR_SetPositionEx+0x64>)
 8019488:	58d3      	ldr	r3, [r2, r3]
 801948a:	6859      	ldr	r1, [r3, #4]
 801948c:	689a      	ldr	r2, [r3, #8]
 801948e:	1a71      	subs	r1, r6, r1
 8019490:	1aaa      	subs	r2, r5, r2
 8019492:	f000 fe0f 	bl	801a0b4 <GUI_SPRITE_SetPosition>
 8019496:	2314      	movs	r3, #20
 8019498:	fb03 7404 	mla	r4, r3, r4, r7
 801949c:	60a6      	str	r6, [r4, #8]
 801949e:	60e5      	str	r5, [r4, #12]
 80194a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80194a2:	bf00      	nop
 80194a4:	200196fc 	.word	0x200196fc

080194a8 <GUI_ClearRectEx>:
 80194a8:	4603      	mov	r3, r0
 80194aa:	f9b0 0000 	ldrsh.w	r0, [r0]
 80194ae:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 80194b2:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 80194b6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80194ba:	f7f9 b9af 	b.w	801281c <GUI_ClearRect>
	...

080194c0 <GUI_DrawRect>:
 80194c0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80194c4:	4c1e      	ldr	r4, [pc, #120]	; (8019540 <GUI_DrawRect+0x80>)
 80194c6:	f8d4 e000 	ldr.w	lr, [r4]
 80194ca:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 80194ce:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 80194d2:	1905      	adds	r5, r0, r4
 80194d4:	4414      	add	r4, r2
 80194d6:	f89e 2018 	ldrb.w	r2, [lr, #24]
 80194da:	3a01      	subs	r2, #1
 80194dc:	b292      	uxth	r2, r2
 80194de:	198f      	adds	r7, r1, r6
 80194e0:	441e      	add	r6, r3
 80194e2:	1aab      	subs	r3, r5, r2
 80194e4:	f8ad 3000 	strh.w	r3, [sp]
 80194e8:	1913      	adds	r3, r2, r4
 80194ea:	f8ad 3004 	strh.w	r3, [sp, #4]
 80194ee:	4668      	mov	r0, sp
 80194f0:	1abb      	subs	r3, r7, r2
 80194f2:	4432      	add	r2, r6
 80194f4:	f8ad 3002 	strh.w	r3, [sp, #2]
 80194f8:	f8ad 2006 	strh.w	r2, [sp, #6]
 80194fc:	f7f4 f97a 	bl	800d7f4 <WM__InitIVRSearch>
 8019500:	b1d0      	cbz	r0, 8019538 <GUI_DrawRect+0x78>
 8019502:	4628      	mov	r0, r5
 8019504:	4639      	mov	r1, r7
 8019506:	4622      	mov	r2, r4
 8019508:	f7f6 fef4 	bl	80102f4 <LCD_DrawHLine>
 801950c:	f107 0901 	add.w	r9, r7, #1
 8019510:	4628      	mov	r0, r5
 8019512:	4631      	mov	r1, r6
 8019514:	4622      	mov	r2, r4
 8019516:	f106 38ff 	add.w	r8, r6, #4294967295
 801951a:	f7f6 feeb 	bl	80102f4 <LCD_DrawHLine>
 801951e:	4628      	mov	r0, r5
 8019520:	4649      	mov	r1, r9
 8019522:	4642      	mov	r2, r8
 8019524:	f7f6 ff0c 	bl	8010340 <LCD_DrawVLine>
 8019528:	4620      	mov	r0, r4
 801952a:	4649      	mov	r1, r9
 801952c:	4642      	mov	r2, r8
 801952e:	f7f6 ff07 	bl	8010340 <LCD_DrawVLine>
 8019532:	f7f4 f89d 	bl	800d670 <WM__GetNextIVR>
 8019536:	e7e3      	b.n	8019500 <GUI_DrawRect+0x40>
 8019538:	b003      	add	sp, #12
 801953a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801953e:	bf00      	nop
 8019540:	2000016c 	.word	0x2000016c

08019544 <_GetIndexMask_0>:
 8019544:	b508      	push	{r3, lr}
 8019546:	f7f6 fddf 	bl	8010108 <LCD_GetNumColors>
 801954a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801954e:	d010      	beq.n	8019572 <_GetIndexMask_0+0x2e>
 8019550:	287f      	cmp	r0, #127	; 0x7f
 8019552:	d810      	bhi.n	8019576 <_GetIndexMask_0+0x32>
 8019554:	283f      	cmp	r0, #63	; 0x3f
 8019556:	d810      	bhi.n	801957a <_GetIndexMask_0+0x36>
 8019558:	281f      	cmp	r0, #31
 801955a:	d810      	bhi.n	801957e <_GetIndexMask_0+0x3a>
 801955c:	280f      	cmp	r0, #15
 801955e:	d810      	bhi.n	8019582 <_GetIndexMask_0+0x3e>
 8019560:	2807      	cmp	r0, #7
 8019562:	d810      	bhi.n	8019586 <_GetIndexMask_0+0x42>
 8019564:	2803      	cmp	r0, #3
 8019566:	d810      	bhi.n	801958a <_GetIndexMask_0+0x46>
 8019568:	2801      	cmp	r0, #1
 801956a:	bf94      	ite	ls
 801956c:	2000      	movls	r0, #0
 801956e:	2001      	movhi	r0, #1
 8019570:	e00c      	b.n	801958c <_GetIndexMask_0+0x48>
 8019572:	2008      	movs	r0, #8
 8019574:	e00a      	b.n	801958c <_GetIndexMask_0+0x48>
 8019576:	2007      	movs	r0, #7
 8019578:	e008      	b.n	801958c <_GetIndexMask_0+0x48>
 801957a:	2006      	movs	r0, #6
 801957c:	e006      	b.n	801958c <_GetIndexMask_0+0x48>
 801957e:	2005      	movs	r0, #5
 8019580:	e004      	b.n	801958c <_GetIndexMask_0+0x48>
 8019582:	2004      	movs	r0, #4
 8019584:	e002      	b.n	801958c <_GetIndexMask_0+0x48>
 8019586:	2003      	movs	r0, #3
 8019588:	e000      	b.n	801958c <_GetIndexMask_0+0x48>
 801958a:	2002      	movs	r0, #2
 801958c:	2301      	movs	r3, #1
 801958e:	fa03 f000 	lsl.w	r0, r3, r0
 8019592:	3801      	subs	r0, #1
 8019594:	bd08      	pop	{r3, pc}

08019596 <_Index2Color_0>:
 8019596:	b538      	push	{r3, r4, r5, lr}
 8019598:	4604      	mov	r4, r0
 801959a:	f7f6 fdb5 	bl	8010108 <LCD_GetNumColors>
 801959e:	4605      	mov	r5, r0
 80195a0:	f7f6 fdd0 	bl	8010144 <LCD_GetPalette>
 80195a4:	42ac      	cmp	r4, r5
 80195a6:	d203      	bcs.n	80195b0 <_Index2Color_0+0x1a>
 80195a8:	b118      	cbz	r0, 80195b2 <_Index2Color_0+0x1c>
 80195aa:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 80195ae:	bd38      	pop	{r3, r4, r5, pc}
 80195b0:	2000      	movs	r0, #0
 80195b2:	bd38      	pop	{r3, r4, r5, pc}

080195b4 <_Color2Index_0>:
 80195b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80195b8:	4681      	mov	r9, r0
 80195ba:	f7f6 fda5 	bl	8010108 <LCD_GetNumColors>
 80195be:	4680      	mov	r8, r0
 80195c0:	f7f6 fdc0 	bl	8010144 <LCD_GetPalette>
 80195c4:	4606      	mov	r6, r0
 80195c6:	b1d8      	cbz	r0, 8019600 <_Color2Index_0+0x4c>
 80195c8:	2300      	movs	r3, #0
 80195ca:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 80195ce:	4591      	cmp	r9, r2
 80195d0:	d01a      	beq.n	8019608 <_Color2Index_0+0x54>
 80195d2:	3301      	adds	r3, #1
 80195d4:	4543      	cmp	r3, r8
 80195d6:	dbf8      	blt.n	80195ca <_Color2Index_0+0x16>
 80195d8:	2500      	movs	r5, #0
 80195da:	f06f 477f 	mvn.w	r7, #4278190080	; 0xff000000
 80195de:	462c      	mov	r4, r5
 80195e0:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 80195e4:	4648      	mov	r0, r9
 80195e6:	f001 f9d3 	bl	801a990 <GUI_CalcColorDist>
 80195ea:	42b8      	cmp	r0, r7
 80195ec:	bf38      	it	cc
 80195ee:	4625      	movcc	r5, r4
 80195f0:	f104 0401 	add.w	r4, r4, #1
 80195f4:	bf28      	it	cs
 80195f6:	4638      	movcs	r0, r7
 80195f8:	4544      	cmp	r4, r8
 80195fa:	da02      	bge.n	8019602 <_Color2Index_0+0x4e>
 80195fc:	4607      	mov	r7, r0
 80195fe:	e7ef      	b.n	80195e0 <_Color2Index_0+0x2c>
 8019600:	4605      	mov	r5, r0
 8019602:	4628      	mov	r0, r5
 8019604:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019608:	4618      	mov	r0, r3
 801960a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0801960e <_GetArrowPara>:
 801960e:	b510      	push	{r4, lr}
 8019610:	b121      	cbz	r1, 801961c <_GetArrowPara+0xe>
 8019612:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8019616:	f9b0 1000 	ldrsh.w	r1, [r0]
 801961a:	e003      	b.n	8019624 <_GetArrowPara+0x16>
 801961c:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8019620:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8019624:	1a61      	subs	r1, r4, r1
 8019626:	3101      	adds	r1, #1
 8019628:	1f0c      	subs	r4, r1, #4
 801962a:	2003      	movs	r0, #3
 801962c:	fb94 f0f0 	sdiv	r0, r4, r0
 8019630:	6010      	str	r0, [r2, #0]
 8019632:	1a08      	subs	r0, r1, r0
 8019634:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 8019638:	3901      	subs	r1, #1
 801963a:	6019      	str	r1, [r3, #0]
 801963c:	bd10      	pop	{r4, pc}

0801963e <_DrawGraspH>:
 801963e:	b570      	push	{r4, r5, r6, lr}
 8019640:	f9b0 3000 	ldrsh.w	r3, [r0]
 8019644:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8019648:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 801964c:	441e      	add	r6, r3
 801964e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8019652:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8019654:	1b5c      	subs	r4, r3, r5
 8019656:	3403      	adds	r4, #3
 8019658:	10a4      	asrs	r4, r4, #2
 801965a:	4425      	add	r5, r4
 801965c:	1076      	asrs	r6, r6, #1
 801965e:	1b1c      	subs	r4, r3, r4
 8019660:	f7f8 fb4e 	bl	8011d00 <GUI_SetColor>
 8019664:	4630      	mov	r0, r6
 8019666:	4629      	mov	r1, r5
 8019668:	4622      	mov	r2, r4
 801966a:	f7f8 fe0f 	bl	801228c <GUI_DrawVLine>
 801966e:	1cb0      	adds	r0, r6, #2
 8019670:	4629      	mov	r1, r5
 8019672:	4622      	mov	r2, r4
 8019674:	f7f8 fe0a 	bl	801228c <GUI_DrawVLine>
 8019678:	1d30      	adds	r0, r6, #4
 801967a:	4629      	mov	r1, r5
 801967c:	4622      	mov	r2, r4
 801967e:	f7f8 fe05 	bl	801228c <GUI_DrawVLine>
 8019682:	1eb0      	subs	r0, r6, #2
 8019684:	4629      	mov	r1, r5
 8019686:	4622      	mov	r2, r4
 8019688:	f7f8 fe00 	bl	801228c <GUI_DrawVLine>
 801968c:	1f30      	subs	r0, r6, #4
 801968e:	4629      	mov	r1, r5
 8019690:	4622      	mov	r2, r4
 8019692:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019696:	f7f8 bdf9 	b.w	801228c <GUI_DrawVLine>

0801969a <_DrawGraspV>:
 801969a:	b570      	push	{r4, r5, r6, lr}
 801969c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80196a0:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 80196a4:	f9b0 5000 	ldrsh.w	r5, [r0]
 80196a8:	441e      	add	r6, r3
 80196aa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80196ae:	6a88      	ldr	r0, [r1, #40]	; 0x28
 80196b0:	1b5c      	subs	r4, r3, r5
 80196b2:	3403      	adds	r4, #3
 80196b4:	10a4      	asrs	r4, r4, #2
 80196b6:	4425      	add	r5, r4
 80196b8:	1076      	asrs	r6, r6, #1
 80196ba:	1b1c      	subs	r4, r3, r4
 80196bc:	f7f8 fb20 	bl	8011d00 <GUI_SetColor>
 80196c0:	4630      	mov	r0, r6
 80196c2:	4629      	mov	r1, r5
 80196c4:	4622      	mov	r2, r4
 80196c6:	f7f8 fe03 	bl	80122d0 <GUI_DrawHLine>
 80196ca:	1cb0      	adds	r0, r6, #2
 80196cc:	4629      	mov	r1, r5
 80196ce:	4622      	mov	r2, r4
 80196d0:	f7f8 fdfe 	bl	80122d0 <GUI_DrawHLine>
 80196d4:	1d30      	adds	r0, r6, #4
 80196d6:	4629      	mov	r1, r5
 80196d8:	4622      	mov	r2, r4
 80196da:	f7f8 fdf9 	bl	80122d0 <GUI_DrawHLine>
 80196de:	1eb0      	subs	r0, r6, #2
 80196e0:	4629      	mov	r1, r5
 80196e2:	4622      	mov	r2, r4
 80196e4:	f7f8 fdf4 	bl	80122d0 <GUI_DrawHLine>
 80196e8:	1f30      	subs	r0, r6, #4
 80196ea:	4629      	mov	r1, r5
 80196ec:	4622      	mov	r2, r4
 80196ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80196f2:	f7f8 bded 	b.w	80122d0 <GUI_DrawHLine>

080196f6 <_DrawFrame>:
 80196f6:	b538      	push	{r3, r4, r5, lr}
 80196f8:	4604      	mov	r4, r0
 80196fa:	6808      	ldr	r0, [r1, #0]
 80196fc:	460d      	mov	r5, r1
 80196fe:	f7f8 faff 	bl	8011d00 <GUI_SetColor>
 8019702:	f9b4 1000 	ldrsh.w	r1, [r4]
 8019706:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801970a:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801970e:	3101      	adds	r1, #1
 8019710:	3a01      	subs	r2, #1
 8019712:	f7f8 fddd 	bl	80122d0 <GUI_DrawHLine>
 8019716:	f9b4 1000 	ldrsh.w	r1, [r4]
 801971a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801971e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8019722:	3101      	adds	r1, #1
 8019724:	3a01      	subs	r2, #1
 8019726:	f7f8 fdd3 	bl	80122d0 <GUI_DrawHLine>
 801972a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801972e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8019732:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019736:	3101      	adds	r1, #1
 8019738:	3a01      	subs	r2, #1
 801973a:	f7f8 fda7 	bl	801228c <GUI_DrawVLine>
 801973e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8019742:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8019746:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801974a:	3101      	adds	r1, #1
 801974c:	3a01      	subs	r2, #1
 801974e:	f7f8 fd9d 	bl	801228c <GUI_DrawVLine>
 8019752:	6868      	ldr	r0, [r5, #4]
 8019754:	f7f8 fad4 	bl	8011d00 <GUI_SetColor>
 8019758:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801975c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8019760:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8019764:	3001      	adds	r0, #1
 8019766:	3101      	adds	r1, #1
 8019768:	3a01      	subs	r2, #1
 801976a:	f7f8 fdb1 	bl	80122d0 <GUI_DrawHLine>
 801976e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8019772:	f9b4 1000 	ldrsh.w	r1, [r4]
 8019776:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801977a:	3801      	subs	r0, #1
 801977c:	3101      	adds	r1, #1
 801977e:	3a01      	subs	r2, #1
 8019780:	f7f8 fda6 	bl	80122d0 <GUI_DrawHLine>
 8019784:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019788:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801978c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8019790:	3001      	adds	r0, #1
 8019792:	3102      	adds	r1, #2
 8019794:	3a02      	subs	r2, #2
 8019796:	f7f8 fd79 	bl	801228c <GUI_DrawVLine>
 801979a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801979e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80197a2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80197a6:	3102      	adds	r1, #2
 80197a8:	3a02      	subs	r2, #2
 80197aa:	3801      	subs	r0, #1
 80197ac:	f7f8 fd6e 	bl	801228c <GUI_DrawVLine>
 80197b0:	68a8      	ldr	r0, [r5, #8]
 80197b2:	f7f8 faa5 	bl	8011d00 <GUI_SetColor>
 80197b6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80197ba:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80197be:	f001 f863 	bl	801a888 <GUI_DrawPixel>
 80197c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80197c6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80197ca:	f001 f85d 	bl	801a888 <GUI_DrawPixel>
 80197ce:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80197d2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80197d6:	f001 f857 	bl	801a888 <GUI_DrawPixel>
 80197da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80197de:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80197e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80197e6:	f001 b84f 	b.w	801a888 <GUI_DrawPixel>

080197ea <_DrawBackgroundH>:
 80197ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80197ec:	4604      	mov	r4, r0
 80197ee:	460d      	mov	r5, r1
 80197f0:	f7ff ff81 	bl	80196f6 <_DrawFrame>
 80197f4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80197f8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80197fc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019800:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8019804:	68ee      	ldr	r6, [r5, #12]
 8019806:	9600      	str	r6, [sp, #0]
 8019808:	440b      	add	r3, r1
 801980a:	692e      	ldr	r6, [r5, #16]
 801980c:	9601      	str	r6, [sp, #4]
 801980e:	3002      	adds	r0, #2
 8019810:	3102      	adds	r1, #2
 8019812:	3a02      	subs	r2, #2
 8019814:	105b      	asrs	r3, r3, #1
 8019816:	f7ff fc8d 	bl	8019134 <GUI_DrawGradientV>
 801981a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801981e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8019822:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019826:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801982a:	696c      	ldr	r4, [r5, #20]
 801982c:	9400      	str	r4, [sp, #0]
 801982e:	4419      	add	r1, r3
 8019830:	69ac      	ldr	r4, [r5, #24]
 8019832:	9401      	str	r4, [sp, #4]
 8019834:	1049      	asrs	r1, r1, #1
 8019836:	3002      	adds	r0, #2
 8019838:	3101      	adds	r1, #1
 801983a:	3a02      	subs	r2, #2
 801983c:	3b02      	subs	r3, #2
 801983e:	f7ff fc79 	bl	8019134 <GUI_DrawGradientV>
 8019842:	b002      	add	sp, #8
 8019844:	bd70      	pop	{r4, r5, r6, pc}

08019846 <_DrawBackgroundV>:
 8019846:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019848:	4604      	mov	r4, r0
 801984a:	460d      	mov	r5, r1
 801984c:	f7ff ff53 	bl	80196f6 <_DrawFrame>
 8019850:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019854:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8019858:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801985c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019860:	68ee      	ldr	r6, [r5, #12]
 8019862:	9600      	str	r6, [sp, #0]
 8019864:	4402      	add	r2, r0
 8019866:	692e      	ldr	r6, [r5, #16]
 8019868:	9601      	str	r6, [sp, #4]
 801986a:	3002      	adds	r0, #2
 801986c:	3102      	adds	r1, #2
 801986e:	1052      	asrs	r2, r2, #1
 8019870:	3b02      	subs	r3, #2
 8019872:	f7ff fc91 	bl	8019198 <GUI_DrawGradientH>
 8019876:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801987a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801987e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8019882:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019886:	696c      	ldr	r4, [r5, #20]
 8019888:	9400      	str	r4, [sp, #0]
 801988a:	4410      	add	r0, r2
 801988c:	69ac      	ldr	r4, [r5, #24]
 801988e:	9401      	str	r4, [sp, #4]
 8019890:	1040      	asrs	r0, r0, #1
 8019892:	3001      	adds	r0, #1
 8019894:	3102      	adds	r1, #2
 8019896:	3a02      	subs	r2, #2
 8019898:	3b02      	subs	r3, #2
 801989a:	f7ff fc7d 	bl	8019198 <GUI_DrawGradientH>
 801989e:	b002      	add	sp, #8
 80198a0:	bd70      	pop	{r4, r5, r6, pc}
	...

080198a4 <SCROLLBAR_DrawSkinFlex>:
 80198a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80198a8:	4604      	mov	r4, r0
 80198aa:	b08b      	sub	sp, #44	; 0x2c
 80198ac:	6800      	ldr	r0, [r0, #0]
 80198ae:	f7f9 fc17 	bl	80130e0 <GUI_ALLOC_LockH>
 80198b2:	4607      	mov	r7, r0
 80198b4:	a80a      	add	r0, sp, #40	; 0x28
 80198b6:	ae06      	add	r6, sp, #24
 80198b8:	f840 7d1c 	str.w	r7, [r0, #-28]!
 80198bc:	f7f9 fc1e 	bl	80130fc <GUI_ALLOC_UnlockH>
 80198c0:	6923      	ldr	r3, [r4, #16]
 80198c2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80198c6:	6963      	ldr	r3, [r4, #20]
 80198c8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80198cc:	69a3      	ldr	r3, [r4, #24]
 80198ce:	f8ad 301c 	strh.w	r3, [sp, #28]
 80198d2:	69e3      	ldr	r3, [r4, #28]
 80198d4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80198d8:	6a25      	ldr	r5, [r4, #32]
 80198da:	e896 0003 	ldmia.w	r6, {r0, r1}
 80198de:	682b      	ldr	r3, [r5, #0]
 80198e0:	f10d 0820 	add.w	r8, sp, #32
 80198e4:	e888 0003 	stmia.w	r8, {r0, r1}
 80198e8:	b153      	cbz	r3, 8019900 <SCROLLBAR_DrawSkinFlex+0x5c>
 80198ea:	4638      	mov	r0, r7
 80198ec:	4631      	mov	r1, r6
 80198ee:	4632      	mov	r2, r6
 80198f0:	f7ef ff47 	bl	8009782 <WIDGET__RotateRect90>
 80198f4:	f8df 913c 	ldr.w	r9, [pc, #316]	; 8019a34 <SCROLLBAR_DrawSkinFlex+0x190>
 80198f8:	f8df c13c 	ldr.w	ip, [pc, #316]	; 8019a38 <SCROLLBAR_DrawSkinFlex+0x194>
 80198fc:	4b49      	ldr	r3, [pc, #292]	; (8019a24 <SCROLLBAR_DrawSkinFlex+0x180>)
 80198fe:	e004      	b.n	801990a <SCROLLBAR_DrawSkinFlex+0x66>
 8019900:	f8df 9138 	ldr.w	r9, [pc, #312]	; 8019a3c <SCROLLBAR_DrawSkinFlex+0x198>
 8019904:	f8df c138 	ldr.w	ip, [pc, #312]	; 8019a40 <SCROLLBAR_DrawSkinFlex+0x19c>
 8019908:	4b47      	ldr	r3, [pc, #284]	; (8019a28 <SCROLLBAR_DrawSkinFlex+0x184>)
 801990a:	6862      	ldr	r2, [r4, #4]
 801990c:	3a08      	subs	r2, #8
 801990e:	2a11      	cmp	r2, #17
 8019910:	f200 8083 	bhi.w	8019a1a <SCROLLBAR_DrawSkinFlex+0x176>
 8019914:	e8df f002 	tbb	[pc, r2]
 8019918:	81815f13 	.word	0x81815f13
 801991c:	81818134 	.word	0x81818134
 8019920:	43813434 	.word	0x43813434
 8019924:	81818181 	.word	0x81818181
 8019928:	0981      	.short	0x0981
 801992a:	682b      	ldr	r3, [r5, #0]
 801992c:	b113      	cbz	r3, 8019934 <SCROLLBAR_DrawSkinFlex+0x90>
 801992e:	69a0      	ldr	r0, [r4, #24]
 8019930:	6923      	ldr	r3, [r4, #16]
 8019932:	e001      	b.n	8019938 <SCROLLBAR_DrawSkinFlex+0x94>
 8019934:	69e0      	ldr	r0, [r4, #28]
 8019936:	6963      	ldr	r3, [r4, #20]
 8019938:	1ac0      	subs	r0, r0, r3
 801993a:	3001      	adds	r0, #1
 801993c:	e06e      	b.n	8019a1c <SCROLLBAR_DrawSkinFlex+0x178>
 801993e:	686a      	ldr	r2, [r5, #4]
 8019940:	493a      	ldr	r1, [pc, #232]	; (8019a2c <SCROLLBAR_DrawSkinFlex+0x188>)
 8019942:	4c3b      	ldr	r4, [pc, #236]	; (8019a30 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8019944:	2a02      	cmp	r2, #2
 8019946:	bf08      	it	eq
 8019948:	460c      	moveq	r4, r1
 801994a:	4630      	mov	r0, r6
 801994c:	4621      	mov	r1, r4
 801994e:	4798      	blx	r3
 8019950:	6829      	ldr	r1, [r5, #0]
 8019952:	aa04      	add	r2, sp, #16
 8019954:	ab05      	add	r3, sp, #20
 8019956:	4640      	mov	r0, r8
 8019958:	f7ff fe59 	bl	801960e <_GetArrowPara>
 801995c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 801995e:	f7f8 f9cf 	bl	8011d00 <GUI_SetColor>
 8019962:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8019966:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 801996a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801996e:	1ad2      	subs	r2, r2, r3
 8019970:	f04f 33ff 	mov.w	r3, #4294967295
 8019974:	9300      	str	r3, [sp, #0]
 8019976:	9b05      	ldr	r3, [sp, #20]
 8019978:	3201      	adds	r2, #1
 801997a:	4638      	mov	r0, r7
 801997c:	4419      	add	r1, r3
 801997e:	e048      	b.n	8019a12 <SCROLLBAR_DrawSkinFlex+0x16e>
 8019980:	4c2b      	ldr	r4, [pc, #172]	; (8019a30 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8019982:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8019986:	69e5      	ldr	r5, [r4, #28]
 8019988:	9500      	str	r5, [sp, #0]
 801998a:	6a24      	ldr	r4, [r4, #32]
 801998c:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8019990:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8019994:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8019998:	9401      	str	r4, [sp, #4]
 801999a:	47e0      	blx	ip
 801999c:	e03d      	b.n	8019a1a <SCROLLBAR_DrawSkinFlex+0x176>
 801999e:	686a      	ldr	r2, [r5, #4]
 80199a0:	4922      	ldr	r1, [pc, #136]	; (8019a2c <SCROLLBAR_DrawSkinFlex+0x188>)
 80199a2:	4c23      	ldr	r4, [pc, #140]	; (8019a30 <SCROLLBAR_DrawSkinFlex+0x18c>)
 80199a4:	2a03      	cmp	r2, #3
 80199a6:	bf08      	it	eq
 80199a8:	460c      	moveq	r4, r1
 80199aa:	4630      	mov	r0, r6
 80199ac:	4621      	mov	r1, r4
 80199ae:	4798      	blx	r3
 80199b0:	682b      	ldr	r3, [r5, #0]
 80199b2:	b123      	cbz	r3, 80199be <SCROLLBAR_DrawSkinFlex+0x11a>
 80199b4:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 80199b8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80199bc:	e003      	b.n	80199c6 <SCROLLBAR_DrawSkinFlex+0x122>
 80199be:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 80199c2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80199c6:	1ad3      	subs	r3, r2, r3
 80199c8:	3301      	adds	r3, #1
 80199ca:	2b0e      	cmp	r3, #14
 80199cc:	dd25      	ble.n	8019a1a <SCROLLBAR_DrawSkinFlex+0x176>
 80199ce:	4630      	mov	r0, r6
 80199d0:	4621      	mov	r1, r4
 80199d2:	47c8      	blx	r9
 80199d4:	e021      	b.n	8019a1a <SCROLLBAR_DrawSkinFlex+0x176>
 80199d6:	686a      	ldr	r2, [r5, #4]
 80199d8:	4914      	ldr	r1, [pc, #80]	; (8019a2c <SCROLLBAR_DrawSkinFlex+0x188>)
 80199da:	4c15      	ldr	r4, [pc, #84]	; (8019a30 <SCROLLBAR_DrawSkinFlex+0x18c>)
 80199dc:	2a01      	cmp	r2, #1
 80199de:	bf08      	it	eq
 80199e0:	460c      	moveq	r4, r1
 80199e2:	4630      	mov	r0, r6
 80199e4:	4621      	mov	r1, r4
 80199e6:	4798      	blx	r3
 80199e8:	6829      	ldr	r1, [r5, #0]
 80199ea:	aa04      	add	r2, sp, #16
 80199ec:	ab05      	add	r3, sp, #20
 80199ee:	4640      	mov	r0, r8
 80199f0:	f7ff fe0d 	bl	801960e <_GetArrowPara>
 80199f4:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80199f6:	f7f8 f983 	bl	8011d00 <GUI_SetColor>
 80199fa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80199fe:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 8019a02:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 8019a06:	1ad2      	subs	r2, r2, r3
 8019a08:	2301      	movs	r3, #1
 8019a0a:	9300      	str	r3, [sp, #0]
 8019a0c:	9b05      	ldr	r3, [sp, #20]
 8019a0e:	4638      	mov	r0, r7
 8019a10:	1ac9      	subs	r1, r1, r3
 8019a12:	1052      	asrs	r2, r2, #1
 8019a14:	9b04      	ldr	r3, [sp, #16]
 8019a16:	f7ef fff4 	bl	8009a02 <WIDGET__DrawTriangle>
 8019a1a:	2000      	movs	r0, #0
 8019a1c:	b00b      	add	sp, #44	; 0x2c
 8019a1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019a22:	bf00      	nop
 8019a24:	08019847 	.word	0x08019847
 8019a28:	080197eb 	.word	0x080197eb
 8019a2c:	20000334 	.word	0x20000334
 8019a30:	20000360 	.word	0x20000360
 8019a34:	0801969b 	.word	0x0801969b
 8019a38:	08019199 	.word	0x08019199
 8019a3c:	0801963f 	.word	0x0801963f
 8019a40:	08019135 	.word	0x08019135

08019a44 <_Create>:
 8019a44:	b530      	push	{r4, r5, lr}
 8019a46:	b08d      	sub	sp, #52	; 0x34
 8019a48:	4605      	mov	r5, r0
 8019a4a:	f7f9 fb49 	bl	80130e0 <GUI_ALLOC_LockH>
 8019a4e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8019a50:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8019a52:	9000      	str	r0, [sp, #0]
 8019a54:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8019a58:	9301      	str	r3, [sp, #4]
 8019a5a:	4b07      	ldr	r3, [pc, #28]	; (8019a78 <_Create+0x34>)
 8019a5c:	6483      	str	r3, [r0, #72]	; 0x48
 8019a5e:	4668      	mov	r0, sp
 8019a60:	f7f9 fb4c 	bl	80130fc <GUI_ALLOC_UnlockH>
 8019a64:	2300      	movs	r3, #0
 8019a66:	9304      	str	r3, [sp, #16]
 8019a68:	ab01      	add	r3, sp, #4
 8019a6a:	9503      	str	r5, [sp, #12]
 8019a6c:	930b      	str	r3, [sp, #44]	; 0x2c
 8019a6e:	a803      	add	r0, sp, #12
 8019a70:	47a0      	blx	r4
 8019a72:	b00d      	add	sp, #52	; 0x34
 8019a74:	bd30      	pop	{r4, r5, pc}
 8019a76:	bf00      	nop
 8019a78:	08019a7d 	.word	0x08019a7d

08019a7c <_CalcPositions>:
 8019a7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019a80:	b090      	sub	sp, #64	; 0x40
 8019a82:	4605      	mov	r5, r0
 8019a84:	460c      	mov	r4, r1
 8019a86:	f7f9 fb2b 	bl	80130e0 <GUI_ALLOC_LockH>
 8019a8a:	4603      	mov	r3, r0
 8019a8c:	9000      	str	r0, [sp, #0]
 8019a8e:	c803      	ldmia	r0, {r0, r1}
 8019a90:	ae03      	add	r6, sp, #12
 8019a92:	e886 0003 	stmia.w	r6, {r0, r1}
 8019a96:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 8019a98:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8019a9c:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8019aa0:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8019aa4:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8019aa8:	920e      	str	r2, [sp, #56]	; 0x38
 8019aaa:	f000 0008 	and.w	r0, r0, #8
 8019aae:	2800      	cmp	r0, #0
 8019ab0:	bf0c      	ite	eq
 8019ab2:	4608      	moveq	r0, r1
 8019ab4:	4610      	movne	r0, r2
 8019ab6:	61a0      	str	r0, [r4, #24]
 8019ab8:	bf0c      	ite	eq
 8019aba:	2000      	moveq	r0, #0
 8019abc:	2001      	movne	r0, #1
 8019abe:	aa01      	add	r2, sp, #4
 8019ac0:	9001      	str	r0, [sp, #4]
 8019ac2:	2019      	movs	r0, #25
 8019ac4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019ac6:	9008      	str	r0, [sp, #32]
 8019ac8:	9507      	str	r5, [sp, #28]
 8019aca:	920f      	str	r2, [sp, #60]	; 0x3c
 8019acc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8019ad0:	970c      	str	r7, [sp, #48]	; 0x30
 8019ad2:	910d      	str	r1, [sp, #52]	; 0x34
 8019ad4:	a807      	add	r0, sp, #28
 8019ad6:	4798      	blx	r3
 8019ad8:	9b00      	ldr	r3, [sp, #0]
 8019ada:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 8019ade:	2aff      	cmp	r2, #255	; 0xff
 8019ae0:	4605      	mov	r5, r0
 8019ae2:	d111      	bne.n	8019b08 <_CalcPositions+0x8c>
 8019ae4:	6998      	ldr	r0, [r3, #24]
 8019ae6:	f000 f917 	bl	8019d18 <WM_GetScrollbarV>
 8019aea:	b168      	cbz	r0, 8019b08 <_CalcPositions+0x8c>
 8019aec:	a905      	add	r1, sp, #20
 8019aee:	f7fc f829 	bl	8015b44 <WM_GetWindowRectEx>
 8019af2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019af6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8019afa:	429a      	cmp	r2, r3
 8019afc:	d104      	bne.n	8019b08 <_CalcPositions+0x8c>
 8019afe:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8019b02:	3b01      	subs	r3, #1
 8019b04:	f8ad 3010 	strh.w	r3, [sp, #16]
 8019b08:	9b00      	ldr	r3, [sp, #0]
 8019b0a:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 8019b0e:	2afe      	cmp	r2, #254	; 0xfe
 8019b10:	d111      	bne.n	8019b36 <_CalcPositions+0xba>
 8019b12:	6998      	ldr	r0, [r3, #24]
 8019b14:	f000 f8fb 	bl	8019d0e <WM_GetScrollbarH>
 8019b18:	b168      	cbz	r0, 8019b36 <_CalcPositions+0xba>
 8019b1a:	a905      	add	r1, sp, #20
 8019b1c:	f7fc f812 	bl	8015b44 <WM_GetWindowRectEx>
 8019b20:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8019b24:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8019b28:	429a      	cmp	r2, r3
 8019b2a:	d104      	bne.n	8019b36 <_CalcPositions+0xba>
 8019b2c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8019b30:	3b01      	subs	r3, #1
 8019b32:	f8ad 3012 	strh.w	r3, [sp, #18]
 8019b36:	427a      	negs	r2, r7
 8019b38:	4630      	mov	r0, r6
 8019b3a:	f1c8 0100 	rsb	r1, r8, #0
 8019b3e:	f7f8 fa41 	bl	8011fc4 <GUI_MoveRect>
 8019b42:	9800      	ldr	r0, [sp, #0]
 8019b44:	4631      	mov	r1, r6
 8019b46:	f7fa f9e7 	bl	8013f18 <SCROLLBAR__Rect2VRect>
 8019b4a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8019b4e:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 8019b52:	9b00      	ldr	r3, [sp, #0]
 8019b54:	ebc2 0a0a 	rsb	sl, r2, sl
 8019b58:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 8019b5c:	6d58      	ldr	r0, [r3, #84]	; 0x54
 8019b5e:	f10a 0601 	add.w	r6, sl, #1
 8019b62:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 8019b66:	4649      	mov	r1, r9
 8019b68:	4370      	muls	r0, r6
 8019b6a:	f7fe fd9f 	bl	80186ac <GUI__DivideRound32>
 8019b6e:	4b17      	ldr	r3, [pc, #92]	; (8019bcc <_CalcPositions+0x150>)
 8019b70:	f8c4 a014 	str.w	sl, [r4, #20]
 8019b74:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019b78:	1c5a      	adds	r2, r3, #1
 8019b7a:	4282      	cmp	r2, r0
 8019b7c:	bfa8      	it	ge
 8019b7e:	1c98      	addge	r0, r3, #2
 8019b80:	42b0      	cmp	r0, r6
 8019b82:	bfb4      	ite	lt
 8019b84:	4607      	movlt	r7, r0
 8019b86:	4637      	movge	r7, r6
 8019b88:	ebc7 0806 	rsb	r8, r7, r6
 8019b8c:	442e      	add	r6, r5
 8019b8e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8019b92:	6126      	str	r6, [r4, #16]
 8019b94:	ae10      	add	r6, sp, #64	; 0x40
 8019b96:	6023      	str	r3, [r4, #0]
 8019b98:	1e6b      	subs	r3, r5, #1
 8019b9a:	6063      	str	r3, [r4, #4]
 8019b9c:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 8019ba0:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8019ba2:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8019ba4:	fb00 f008 	mul.w	r0, r0, r8
 8019ba8:	ebc1 0109 	rsb	r1, r1, r9
 8019bac:	f7fe fd7e 	bl	80186ac <GUI__DivideRound32>
 8019bb0:	4428      	add	r0, r5
 8019bb2:	19c5      	adds	r5, r0, r7
 8019bb4:	3d01      	subs	r5, #1
 8019bb6:	60a0      	str	r0, [r4, #8]
 8019bb8:	60e5      	str	r5, [r4, #12]
 8019bba:	f8c4 801c 	str.w	r8, [r4, #28]
 8019bbe:	6227      	str	r7, [r4, #32]
 8019bc0:	4668      	mov	r0, sp
 8019bc2:	f7f9 fa9b 	bl	80130fc <GUI_ALLOC_UnlockH>
 8019bc6:	b010      	add	sp, #64	; 0x40
 8019bc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019bcc:	200001f2 	.word	0x200001f2

08019bd0 <_Paint>:
 8019bd0:	b570      	push	{r4, r5, r6, lr}
 8019bd2:	b098      	sub	sp, #96	; 0x60
 8019bd4:	4606      	mov	r6, r0
 8019bd6:	f7f9 fa83 	bl	80130e0 <GUI_ALLOC_LockH>
 8019bda:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8019bdc:	9305      	str	r3, [sp, #20]
 8019bde:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8019be0:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8019be2:	9001      	str	r0, [sp, #4]
 8019be4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8019be8:	a906      	add	r1, sp, #24
 8019bea:	4605      	mov	r5, r0
 8019bec:	4630      	mov	r0, r6
 8019bee:	9304      	str	r3, [sp, #16]
 8019bf0:	f7ff ff44 	bl	8019a7c <_CalcPositions>
 8019bf4:	a801      	add	r0, sp, #4
 8019bf6:	f7f9 fa81 	bl	80130fc <GUI_ALLOC_UnlockH>
 8019bfa:	a902      	add	r1, sp, #8
 8019bfc:	4628      	mov	r0, r5
 8019bfe:	f7ef fdd2 	bl	80097a6 <WIDGET__GetClientRect>
 8019c02:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8019c06:	9314      	str	r3, [sp, #80]	; 0x50
 8019c08:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8019c0c:	9316      	str	r3, [sp, #88]	; 0x58
 8019c0e:	ab04      	add	r3, sp, #16
 8019c10:	9317      	str	r3, [sp, #92]	; 0x5c
 8019c12:	2308      	movs	r3, #8
 8019c14:	9310      	str	r3, [sp, #64]	; 0x40
 8019c16:	9b06      	ldr	r3, [sp, #24]
 8019c18:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c1a:	9b07      	ldr	r3, [sp, #28]
 8019c1c:	9315      	str	r3, [sp, #84]	; 0x54
 8019c1e:	960f      	str	r6, [sp, #60]	; 0x3c
 8019c20:	a80f      	add	r0, sp, #60	; 0x3c
 8019c22:	47a0      	blx	r4
 8019c24:	2310      	movs	r3, #16
 8019c26:	9310      	str	r3, [sp, #64]	; 0x40
 8019c28:	9b07      	ldr	r3, [sp, #28]
 8019c2a:	3301      	adds	r3, #1
 8019c2c:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c2e:	9b08      	ldr	r3, [sp, #32]
 8019c30:	3b01      	subs	r3, #1
 8019c32:	9315      	str	r3, [sp, #84]	; 0x54
 8019c34:	a80f      	add	r0, sp, #60	; 0x3c
 8019c36:	47a0      	blx	r4
 8019c38:	2311      	movs	r3, #17
 8019c3a:	9310      	str	r3, [sp, #64]	; 0x40
 8019c3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c3e:	3301      	adds	r3, #1
 8019c40:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c44:	3b01      	subs	r3, #1
 8019c46:	9315      	str	r3, [sp, #84]	; 0x54
 8019c48:	a80f      	add	r0, sp, #60	; 0x3c
 8019c4a:	47a0      	blx	r4
 8019c4c:	2313      	movs	r3, #19
 8019c4e:	9310      	str	r3, [sp, #64]	; 0x40
 8019c50:	9b08      	ldr	r3, [sp, #32]
 8019c52:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c56:	9315      	str	r3, [sp, #84]	; 0x54
 8019c58:	a80f      	add	r0, sp, #60	; 0x3c
 8019c5a:	47a0      	blx	r4
 8019c5c:	2309      	movs	r3, #9
 8019c5e:	9310      	str	r3, [sp, #64]	; 0x40
 8019c60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c62:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019c66:	9315      	str	r3, [sp, #84]	; 0x54
 8019c68:	a80f      	add	r0, sp, #60	; 0x3c
 8019c6a:	47a0      	blx	r4
 8019c6c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019c6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019c70:	429a      	cmp	r2, r3
 8019c72:	d006      	beq.n	8019c82 <_Paint+0xb2>
 8019c74:	210c      	movs	r1, #12
 8019c76:	3201      	adds	r2, #1
 8019c78:	9110      	str	r1, [sp, #64]	; 0x40
 8019c7a:	9213      	str	r2, [sp, #76]	; 0x4c
 8019c7c:	9315      	str	r3, [sp, #84]	; 0x54
 8019c7e:	a80f      	add	r0, sp, #60	; 0x3c
 8019c80:	47a0      	blx	r4
 8019c82:	b018      	add	sp, #96	; 0x60
 8019c84:	bd70      	pop	{r4, r5, r6, pc}

08019c86 <WM__SendMessageIfEnabled>:
 8019c86:	b538      	push	{r3, r4, r5, lr}
 8019c88:	4604      	mov	r4, r0
 8019c8a:	460d      	mov	r5, r1
 8019c8c:	f7f2 f8f8 	bl	800be80 <WM__IsEnabled>
 8019c90:	b128      	cbz	r0, 8019c9e <WM__SendMessageIfEnabled+0x18>
 8019c92:	4620      	mov	r0, r4
 8019c94:	4629      	mov	r1, r5
 8019c96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019c9a:	f7fb bc6f 	b.w	801557c <WM__SendMessage>
 8019c9e:	bd38      	pop	{r3, r4, r5, pc}

08019ca0 <WM__ForEachDesc>:
 8019ca0:	b570      	push	{r4, r5, r6, lr}
 8019ca2:	460d      	mov	r5, r1
 8019ca4:	4616      	mov	r6, r2
 8019ca6:	f7f9 fa11 	bl	80130cc <GUI_ALLOC_h2p>
 8019caa:	69c4      	ldr	r4, [r0, #28]
 8019cac:	b164      	cbz	r4, 8019cc8 <WM__ForEachDesc+0x28>
 8019cae:	4620      	mov	r0, r4
 8019cb0:	4631      	mov	r1, r6
 8019cb2:	47a8      	blx	r5
 8019cb4:	4620      	mov	r0, r4
 8019cb6:	4629      	mov	r1, r5
 8019cb8:	4632      	mov	r2, r6
 8019cba:	f7ff fff1 	bl	8019ca0 <WM__ForEachDesc>
 8019cbe:	4620      	mov	r0, r4
 8019cc0:	f7f9 fa04 	bl	80130cc <GUI_ALLOC_h2p>
 8019cc4:	6a04      	ldr	r4, [r0, #32]
 8019cc6:	e7f1      	b.n	8019cac <WM__ForEachDesc+0xc>
 8019cc8:	bd70      	pop	{r4, r5, r6, pc}

08019cca <_GetDialogItem>:
 8019cca:	b570      	push	{r4, r5, r6, lr}
 8019ccc:	4606      	mov	r6, r0
 8019cce:	460d      	mov	r5, r1
 8019cd0:	f7f9 f9fc 	bl	80130cc <GUI_ALLOC_h2p>
 8019cd4:	69c4      	ldr	r4, [r0, #28]
 8019cd6:	b14c      	cbz	r4, 8019cec <_GetDialogItem+0x22>
 8019cd8:	4620      	mov	r0, r4
 8019cda:	f7f2 fd73 	bl	800c7c4 <WM_GetId>
 8019cde:	42a8      	cmp	r0, r5
 8019ce0:	4620      	mov	r0, r4
 8019ce2:	d013      	beq.n	8019d0c <_GetDialogItem+0x42>
 8019ce4:	f7f9 f9f2 	bl	80130cc <GUI_ALLOC_h2p>
 8019ce8:	6a04      	ldr	r4, [r0, #32]
 8019cea:	e7f4      	b.n	8019cd6 <_GetDialogItem+0xc>
 8019cec:	4630      	mov	r0, r6
 8019cee:	f7f9 f9ed 	bl	80130cc <GUI_ALLOC_h2p>
 8019cf2:	69c4      	ldr	r4, [r0, #28]
 8019cf4:	4620      	mov	r0, r4
 8019cf6:	b144      	cbz	r4, 8019d0a <_GetDialogItem+0x40>
 8019cf8:	4629      	mov	r1, r5
 8019cfa:	f7ff ffe6 	bl	8019cca <_GetDialogItem>
 8019cfe:	b928      	cbnz	r0, 8019d0c <_GetDialogItem+0x42>
 8019d00:	4620      	mov	r0, r4
 8019d02:	f7f9 f9e3 	bl	80130cc <GUI_ALLOC_h2p>
 8019d06:	6a04      	ldr	r4, [r0, #32]
 8019d08:	e7f4      	b.n	8019cf4 <_GetDialogItem+0x2a>
 8019d0a:	bd70      	pop	{r4, r5, r6, pc}
 8019d0c:	bd70      	pop	{r4, r5, r6, pc}

08019d0e <WM_GetScrollbarH>:
 8019d0e:	b110      	cbz	r0, 8019d16 <WM_GetScrollbarH+0x8>
 8019d10:	21ff      	movs	r1, #255	; 0xff
 8019d12:	f7ff bfda 	b.w	8019cca <_GetDialogItem>
 8019d16:	4770      	bx	lr

08019d18 <WM_GetScrollbarV>:
 8019d18:	b110      	cbz	r0, 8019d20 <WM_GetScrollbarV+0x8>
 8019d1a:	21fe      	movs	r1, #254	; 0xfe
 8019d1c:	f7ff bfd5 	b.w	8019cca <_GetDialogItem>
 8019d20:	4770      	bx	lr

08019d22 <LCD_GetPixelColor>:
 8019d22:	b508      	push	{r3, lr}
 8019d24:	f000 f804 	bl	8019d30 <LCD_GetPixelIndex>
 8019d28:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8019d2c:	f7f6 bdac 	b.w	8010888 <LCD_Index2Color>

08019d30 <LCD_GetPixelIndex>:
 8019d30:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8019d32:	4f14      	ldr	r7, [pc, #80]	; (8019d84 <LCD_GetPixelIndex+0x54>)
 8019d34:	4e14      	ldr	r6, [pc, #80]	; (8019d88 <LCD_GetPixelIndex+0x58>)
 8019d36:	683b      	ldr	r3, [r7, #0]
 8019d38:	7c5b      	ldrb	r3, [r3, #17]
 8019d3a:	4605      	mov	r5, r0
 8019d3c:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 8019d40:	68c3      	ldr	r3, [r0, #12]
 8019d42:	460c      	mov	r4, r1
 8019d44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019d46:	4669      	mov	r1, sp
 8019d48:	4798      	blx	r3
 8019d4a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8019d4e:	429d      	cmp	r5, r3
 8019d50:	db15      	blt.n	8019d7e <LCD_GetPixelIndex+0x4e>
 8019d52:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8019d56:	429d      	cmp	r5, r3
 8019d58:	dc11      	bgt.n	8019d7e <LCD_GetPixelIndex+0x4e>
 8019d5a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8019d5e:	429c      	cmp	r4, r3
 8019d60:	db0d      	blt.n	8019d7e <LCD_GetPixelIndex+0x4e>
 8019d62:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8019d66:	429c      	cmp	r4, r3
 8019d68:	dc09      	bgt.n	8019d7e <LCD_GetPixelIndex+0x4e>
 8019d6a:	683b      	ldr	r3, [r7, #0]
 8019d6c:	7c5b      	ldrb	r3, [r3, #17]
 8019d6e:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 8019d72:	68c3      	ldr	r3, [r0, #12]
 8019d74:	4629      	mov	r1, r5
 8019d76:	695b      	ldr	r3, [r3, #20]
 8019d78:	4622      	mov	r2, r4
 8019d7a:	4798      	blx	r3
 8019d7c:	e000      	b.n	8019d80 <LCD_GetPixelIndex+0x50>
 8019d7e:	2000      	movs	r0, #0
 8019d80:	b003      	add	sp, #12
 8019d82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019d84:	2000016c 	.word	0x2000016c
 8019d88:	20019ca0 	.word	0x20019ca0

08019d8c <LCD_GetNumLayers>:
 8019d8c:	b510      	push	{r4, lr}
 8019d8e:	2000      	movs	r0, #0
 8019d90:	f7f8 fc4c 	bl	801262c <GUI_DEVICE__GetpDriver>
 8019d94:	1c04      	adds	r4, r0, #0
 8019d96:	f04f 0001 	mov.w	r0, #1
 8019d9a:	bf18      	it	ne
 8019d9c:	2401      	movne	r4, #1
 8019d9e:	f7f8 fc45 	bl	801262c <GUI_DEVICE__GetpDriver>
 8019da2:	b100      	cbz	r0, 8019da6 <LCD_GetNumLayers+0x1a>
 8019da4:	3401      	adds	r4, #1
 8019da6:	4620      	mov	r0, r4
 8019da8:	bd10      	pop	{r4, pc}
	...

08019dac <LCD_GetBkColorIndex>:
 8019dac:	4b02      	ldr	r3, [pc, #8]	; (8019db8 <LCD_GetBkColorIndex+0xc>)
 8019dae:	681b      	ldr	r3, [r3, #0]
 8019db0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019db2:	6818      	ldr	r0, [r3, #0]
 8019db4:	4770      	bx	lr
 8019db6:	bf00      	nop
 8019db8:	2000016c 	.word	0x2000016c

08019dbc <LCD_GetColorIndex>:
 8019dbc:	4b02      	ldr	r3, [pc, #8]	; (8019dc8 <LCD_GetColorIndex+0xc>)
 8019dbe:	681b      	ldr	r3, [r3, #0]
 8019dc0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019dc2:	6818      	ldr	r0, [r3, #0]
 8019dc4:	4770      	bx	lr
 8019dc6:	bf00      	nop
 8019dc8:	2000016c 	.word	0x2000016c

08019dcc <GUI__sqrt32>:
 8019dcc:	b510      	push	{r4, lr}
 8019dce:	2110      	movs	r1, #16
 8019dd0:	2300      	movs	r3, #0
 8019dd2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8019dd6:	189c      	adds	r4, r3, r2
 8019dd8:	4284      	cmp	r4, r0
 8019dda:	bf9c      	itt	ls
 8019ddc:	18a3      	addls	r3, r4, r2
 8019dde:	ebc4 0000 	rsbls	r0, r4, r0
 8019de2:	3901      	subs	r1, #1
 8019de4:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8019de8:	ea4f 0292 	mov.w	r2, r2, lsr #2
 8019dec:	d1f3      	bne.n	8019dd6 <GUI__sqrt32+0xa>
 8019dee:	4618      	mov	r0, r3
 8019df0:	bd10      	pop	{r4, pc}

08019df2 <GUI__HandleEOLine>:
 8019df2:	6803      	ldr	r3, [r0, #0]
 8019df4:	781a      	ldrb	r2, [r3, #0]
 8019df6:	b122      	cbz	r2, 8019e02 <GUI__HandleEOLine+0x10>
 8019df8:	2a0a      	cmp	r2, #10
 8019dfa:	d104      	bne.n	8019e06 <GUI__HandleEOLine+0x14>
 8019dfc:	3301      	adds	r3, #1
 8019dfe:	6003      	str	r3, [r0, #0]
 8019e00:	e001      	b.n	8019e06 <GUI__HandleEOLine+0x14>
 8019e02:	2001      	movs	r0, #1
 8019e04:	4770      	bx	lr
 8019e06:	2000      	movs	r0, #0
 8019e08:	4770      	bx	lr

08019e0a <_CreateBuffer>:
 8019e0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019e0c:	6943      	ldr	r3, [r0, #20]
 8019e0e:	4605      	mov	r5, r0
 8019e10:	8818      	ldrh	r0, [r3, #0]
 8019e12:	300d      	adds	r0, #13
 8019e14:	0080      	lsls	r0, r0, #2
 8019e16:	460e      	mov	r6, r1
 8019e18:	f7f9 fbb6 	bl	8013588 <GUI_ALLOC_AllocNoInit>
 8019e1c:	4607      	mov	r7, r0
 8019e1e:	b908      	cbnz	r0, 8019e24 <_CreateBuffer+0x1a>
 8019e20:	2000      	movs	r0, #0
 8019e22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019e24:	f7f9 f95c 	bl	80130e0 <GUI_ALLOC_LockH>
 8019e28:	682b      	ldr	r3, [r5, #0]
 8019e2a:	4604      	mov	r4, r0
 8019e2c:	6998      	ldr	r0, [r3, #24]
 8019e2e:	f7f8 fbfd 	bl	801262c <GUI_DEVICE__GetpDriver>
 8019e32:	2800      	cmp	r0, #0
 8019e34:	d0f4      	beq.n	8019e20 <_CreateBuffer+0x16>
 8019e36:	68c3      	ldr	r3, [r0, #12]
 8019e38:	2108      	movs	r1, #8
 8019e3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019e3c:	4798      	blx	r3
 8019e3e:	2802      	cmp	r0, #2
 8019e40:	dd0b      	ble.n	8019e5a <_CreateBuffer+0x50>
 8019e42:	2804      	cmp	r0, #4
 8019e44:	dd06      	ble.n	8019e54 <_CreateBuffer+0x4a>
 8019e46:	2808      	cmp	r0, #8
 8019e48:	dd06      	ble.n	8019e58 <_CreateBuffer+0x4e>
 8019e4a:	2811      	cmp	r0, #17
 8019e4c:	bfb4      	ite	lt
 8019e4e:	2010      	movlt	r0, #16
 8019e50:	2020      	movge	r0, #32
 8019e52:	e002      	b.n	8019e5a <_CreateBuffer+0x50>
 8019e54:	2004      	movs	r0, #4
 8019e56:	e000      	b.n	8019e5a <_CreateBuffer+0x50>
 8019e58:	2008      	movs	r0, #8
 8019e5a:	2808      	cmp	r0, #8
 8019e5c:	61a0      	str	r0, [r4, #24]
 8019e5e:	dd04      	ble.n	8019e6a <_CreateBuffer+0x60>
 8019e60:	2810      	cmp	r0, #16
 8019e62:	bfcc      	ite	gt
 8019e64:	2304      	movgt	r3, #4
 8019e66:	2302      	movle	r3, #2
 8019e68:	e000      	b.n	8019e6c <_CreateBuffer+0x62>
 8019e6a:	2301      	movs	r3, #1
 8019e6c:	696a      	ldr	r2, [r5, #20]
 8019e6e:	6123      	str	r3, [r4, #16]
 8019e70:	8812      	ldrh	r2, [r2, #0]
 8019e72:	61e2      	str	r2, [r4, #28]
 8019e74:	4353      	muls	r3, r2
 8019e76:	6163      	str	r3, [r4, #20]
 8019e78:	f7f9 fadc 	bl	8013434 <GUI_ALLOC_GetMaxSize>
 8019e7c:	6963      	ldr	r3, [r4, #20]
 8019e7e:	f884 6030 	strb.w	r6, [r4, #48]	; 0x30
 8019e82:	4283      	cmp	r3, r0
 8019e84:	f04f 0200 	mov.w	r2, #0
 8019e88:	bfc8      	it	gt
 8019e8a:	6160      	strgt	r0, [r4, #20]
 8019e8c:	2e01      	cmp	r6, #1
 8019e8e:	60e2      	str	r2, [r4, #12]
 8019e90:	bf18      	it	ne
 8019e92:	69e2      	ldrne	r2, [r4, #28]
 8019e94:	60a7      	str	r7, [r4, #8]
 8019e96:	bf18      	it	ne
 8019e98:	f102 4280 	addne.w	r2, r2, #1073741824	; 0x40000000
 8019e9c:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8019ea0:	bf18      	it	ne
 8019ea2:	f102 32ff 	addne.w	r2, r2, #4294967295
 8019ea6:	6023      	str	r3, [r4, #0]
 8019ea8:	bf18      	it	ne
 8019eaa:	eb03 0382 	addne.w	r3, r3, r2, lsl #2
 8019eae:	6063      	str	r3, [r4, #4]
 8019eb0:	4620      	mov	r0, r4
 8019eb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08019eb4 <_GetBkIndex.isra.0>:
 8019eb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019eb8:	f9b3 8004 	ldrsh.w	r8, [r3, #4]
 8019ebc:	4540      	cmp	r0, r8
 8019ebe:	4606      	mov	r6, r0
 8019ec0:	460d      	mov	r5, r1
 8019ec2:	4691      	mov	r9, r2
 8019ec4:	461c      	mov	r4, r3
 8019ec6:	da04      	bge.n	8019ed2 <_GetBkIndex.isra.0+0x1e>
 8019ec8:	f8d9 0000 	ldr.w	r0, [r9]
 8019ecc:	bb28      	cbnz	r0, 8019f1a <_GetBkIndex.isra.0+0x66>
 8019ece:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019ed2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019ed6:	4298      	cmp	r0, r3
 8019ed8:	dcf6      	bgt.n	8019ec8 <_GetBkIndex.isra.0+0x14>
 8019eda:	f9b4 7006 	ldrsh.w	r7, [r4, #6]
 8019ede:	42b9      	cmp	r1, r7
 8019ee0:	dbf2      	blt.n	8019ec8 <_GetBkIndex.isra.0+0x14>
 8019ee2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8019ee6:	4299      	cmp	r1, r3
 8019ee8:	dcee      	bgt.n	8019ec8 <_GetBkIndex.isra.0+0x14>
 8019eea:	ebc8 0800 	rsb	r8, r8, r0
 8019eee:	1bcf      	subs	r7, r1, r7
 8019ef0:	6960      	ldr	r0, [r4, #20]
 8019ef2:	4641      	mov	r1, r8
 8019ef4:	463a      	mov	r2, r7
 8019ef6:	f000 fba3 	bl	801a640 <GUI_GetBitmapPixelIndex>
 8019efa:	2800      	cmp	r0, #0
 8019efc:	d0e4      	beq.n	8019ec8 <_GetBkIndex.isra.0+0x14>
 8019efe:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8019f02:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8019f06:	1a8a      	subs	r2, r1, r2
 8019f08:	fb02 7707 	mla	r7, r2, r7, r7
 8019f0c:	f104 0320 	add.w	r3, r4, #32
 8019f10:	44b8      	add	r8, r7
 8019f12:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8019f16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019f1a:	68c3      	ldr	r3, [r0, #12]
 8019f1c:	4631      	mov	r1, r6
 8019f1e:	695b      	ldr	r3, [r3, #20]
 8019f20:	462a      	mov	r2, r5
 8019f22:	4798      	blx	r3
 8019f24:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08019f28 <_GetBkIndexAlpha.isra.2>:
 8019f28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019f2c:	f9b3 6004 	ldrsh.w	r6, [r3, #4]
 8019f30:	42b0      	cmp	r0, r6
 8019f32:	4680      	mov	r8, r0
 8019f34:	460f      	mov	r7, r1
 8019f36:	4691      	mov	r9, r2
 8019f38:	461d      	mov	r5, r3
 8019f3a:	db14      	blt.n	8019f66 <_GetBkIndexAlpha.isra.2+0x3e>
 8019f3c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019f40:	4298      	cmp	r0, r3
 8019f42:	dc10      	bgt.n	8019f66 <_GetBkIndexAlpha.isra.2+0x3e>
 8019f44:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
 8019f48:	42a1      	cmp	r1, r4
 8019f4a:	db0c      	blt.n	8019f66 <_GetBkIndexAlpha.isra.2+0x3e>
 8019f4c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8019f50:	4299      	cmp	r1, r3
 8019f52:	dc08      	bgt.n	8019f66 <_GetBkIndexAlpha.isra.2+0x3e>
 8019f54:	1b86      	subs	r6, r0, r6
 8019f56:	6968      	ldr	r0, [r5, #20]
 8019f58:	1b0c      	subs	r4, r1, r4
 8019f5a:	b130      	cbz	r0, 8019f6a <_GetBkIndexAlpha.isra.2+0x42>
 8019f5c:	4631      	mov	r1, r6
 8019f5e:	4622      	mov	r2, r4
 8019f60:	f000 fb6e 	bl	801a640 <GUI_GetBitmapPixelIndex>
 8019f64:	e003      	b.n	8019f6e <_GetBkIndexAlpha.isra.2+0x46>
 8019f66:	2400      	movs	r4, #0
 8019f68:	4626      	mov	r6, r4
 8019f6a:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8019f6e:	0e00      	lsrs	r0, r0, #24
 8019f70:	28ff      	cmp	r0, #255	; 0xff
 8019f72:	d109      	bne.n	8019f88 <_GetBkIndexAlpha.isra.2+0x60>
 8019f74:	f8d9 0000 	ldr.w	r0, [r9]
 8019f78:	b190      	cbz	r0, 8019fa0 <_GetBkIndexAlpha.isra.2+0x78>
 8019f7a:	68c3      	ldr	r3, [r0, #12]
 8019f7c:	4641      	mov	r1, r8
 8019f7e:	695b      	ldr	r3, [r3, #20]
 8019f80:	463a      	mov	r2, r7
 8019f82:	4798      	blx	r3
 8019f84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019f88:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8019f8c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8019f90:	1a8a      	subs	r2, r1, r2
 8019f92:	fb02 4404 	mla	r4, r2, r4, r4
 8019f96:	f105 0320 	add.w	r3, r5, #32
 8019f9a:	4426      	add	r6, r4
 8019f9c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8019fa0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08019fa4 <_GetDeviceRect>:
 8019fa4:	b538      	push	{r3, r4, r5, lr}
 8019fa6:	4a0c      	ldr	r2, [pc, #48]	; (8019fd8 <_GetDeviceRect+0x34>)
 8019fa8:	6983      	ldr	r3, [r0, #24]
 8019faa:	56d2      	ldrsb	r2, [r2, r3]
 8019fac:	2a01      	cmp	r2, #1
 8019fae:	4605      	mov	r5, r0
 8019fb0:	460c      	mov	r4, r1
 8019fb2:	dd0d      	ble.n	8019fd0 <_GetDeviceRect+0x2c>
 8019fb4:	2200      	movs	r2, #0
 8019fb6:	804a      	strh	r2, [r1, #2]
 8019fb8:	800a      	strh	r2, [r1, #0]
 8019fba:	4618      	mov	r0, r3
 8019fbc:	f7f6 f882 	bl	80100c4 <LCD_GetXSizeEx>
 8019fc0:	3801      	subs	r0, #1
 8019fc2:	80a0      	strh	r0, [r4, #4]
 8019fc4:	69a8      	ldr	r0, [r5, #24]
 8019fc6:	f7f6 f880 	bl	80100ca <LCD_GetYSizeEx>
 8019fca:	3801      	subs	r0, #1
 8019fcc:	80e0      	strh	r0, [r4, #6]
 8019fce:	bd38      	pop	{r3, r4, r5, pc}
 8019fd0:	68c3      	ldr	r3, [r0, #12]
 8019fd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019fd4:	4798      	blx	r3
 8019fd6:	bd38      	pop	{r3, r4, r5, pc}
 8019fd8:	20019c70 	.word	0x20019c70

08019fdc <_FlushBuffer.isra.5>:
 8019fdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019fde:	460c      	mov	r4, r1
 8019fe0:	68c9      	ldr	r1, [r1, #12]
 8019fe2:	b087      	sub	sp, #28
 8019fe4:	2900      	cmp	r1, #0
 8019fe6:	d030      	beq.n	801a04a <_FlushBuffer.isra.5+0x6e>
 8019fe8:	f994 3030 	ldrsb.w	r3, [r4, #48]	; 0x30
 8019fec:	6822      	ldr	r2, [r4, #0]
 8019fee:	2b01      	cmp	r3, #1
 8019ff0:	d103      	bne.n	8019ffa <_FlushBuffer.isra.5+0x1e>
 8019ff2:	4615      	mov	r5, r2
 8019ff4:	6062      	str	r2, [r4, #4]
 8019ff6:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8019ff8:	e009      	b.n	801a00e <_FlushBuffer.isra.5+0x32>
 8019ffa:	69e3      	ldr	r3, [r4, #28]
 8019ffc:	6865      	ldr	r5, [r4, #4]
 8019ffe:	6a27      	ldr	r7, [r4, #32]
 801a000:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a004:	3b01      	subs	r3, #1
 801a006:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801a00a:	3504      	adds	r5, #4
 801a00c:	6063      	str	r3, [r4, #4]
 801a00e:	6806      	ldr	r6, [r0, #0]
 801a010:	b1b6      	cbz	r6, 801a040 <_FlushBuffer.isra.5+0x64>
 801a012:	69a2      	ldr	r2, [r4, #24]
 801a014:	4628      	mov	r0, r5
 801a016:	f7fe fb56 	bl	80186c6 <GUI__CompactPixelIndices>
 801a01a:	2301      	movs	r3, #1
 801a01c:	68f2      	ldr	r2, [r6, #12]
 801a01e:	9300      	str	r3, [sp, #0]
 801a020:	69a3      	ldr	r3, [r4, #24]
 801a022:	9301      	str	r3, [sp, #4]
 801a024:	9503      	str	r5, [sp, #12]
 801a026:	6963      	ldr	r3, [r4, #20]
 801a028:	9302      	str	r3, [sp, #8]
 801a02a:	2500      	movs	r5, #0
 801a02c:	9504      	str	r5, [sp, #16]
 801a02e:	9505      	str	r5, [sp, #20]
 801a030:	f8d2 c004 	ldr.w	ip, [r2, #4]
 801a034:	68e3      	ldr	r3, [r4, #12]
 801a036:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801a038:	4630      	mov	r0, r6
 801a03a:	4639      	mov	r1, r7
 801a03c:	47e0      	blx	ip
 801a03e:	e000      	b.n	801a042 <_FlushBuffer.isra.5+0x66>
 801a040:	2501      	movs	r5, #1
 801a042:	2300      	movs	r3, #0
 801a044:	60e3      	str	r3, [r4, #12]
 801a046:	b2e8      	uxtb	r0, r5
 801a048:	e000      	b.n	801a04c <_FlushBuffer.isra.5+0x70>
 801a04a:	4608      	mov	r0, r1
 801a04c:	b007      	add	sp, #28
 801a04e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a050 <_SetBkIndexBuffered>:
 801a050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a052:	9c06      	ldr	r4, [sp, #24]
 801a054:	460d      	mov	r5, r1
 801a056:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801a058:	428d      	cmp	r5, r1
 801a05a:	4606      	mov	r6, r0
 801a05c:	4617      	mov	r7, r2
 801a05e:	d105      	bne.n	801a06c <_SetBkIndexBuffered+0x1c>
 801a060:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 801a064:	6a21      	ldr	r1, [r4, #32]
 801a066:	4411      	add	r1, r2
 801a068:	4288      	cmp	r0, r1
 801a06a:	d003      	beq.n	801a074 <_SetBkIndexBuffered+0x24>
 801a06c:	4618      	mov	r0, r3
 801a06e:	4621      	mov	r1, r4
 801a070:	f7ff ffb4 	bl	8019fdc <_FlushBuffer.isra.5>
 801a074:	6863      	ldr	r3, [r4, #4]
 801a076:	601f      	str	r7, [r3, #0]
 801a078:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 801a07c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801a080:	6063      	str	r3, [r4, #4]
 801a082:	68e3      	ldr	r3, [r4, #12]
 801a084:	b90b      	cbnz	r3, 801a08a <_SetBkIndexBuffered+0x3a>
 801a086:	62a6      	str	r6, [r4, #40]	; 0x28
 801a088:	62e5      	str	r5, [r4, #44]	; 0x2c
 801a08a:	3301      	adds	r3, #1
 801a08c:	60e3      	str	r3, [r4, #12]
 801a08e:	6226      	str	r6, [r4, #32]
 801a090:	6265      	str	r5, [r4, #36]	; 0x24
 801a092:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801a094 <_ReleaseBuffer.isra.6>:
 801a094:	b513      	push	{r0, r1, r4, lr}
 801a096:	9101      	str	r1, [sp, #4]
 801a098:	f7ff ffa0 	bl	8019fdc <_FlushBuffer.isra.5>
 801a09c:	a802      	add	r0, sp, #8
 801a09e:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 801a0a2:	6894      	ldr	r4, [r2, #8]
 801a0a4:	f7f9 f82a 	bl	80130fc <GUI_ALLOC_UnlockH>
 801a0a8:	4620      	mov	r0, r4
 801a0aa:	f7f9 f853 	bl	8013154 <GUI_ALLOC_Free>
 801a0ae:	b002      	add	sp, #8
 801a0b0:	bd10      	pop	{r4, pc}
	...

0801a0b4 <GUI_SPRITE_SetPosition>:
 801a0b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0b8:	b0a7      	sub	sp, #156	; 0x9c
 801a0ba:	9116      	str	r1, [sp, #88]	; 0x58
 801a0bc:	9217      	str	r2, [sp, #92]	; 0x5c
 801a0be:	2800      	cmp	r0, #0
 801a0c0:	f000 8275 	beq.w	801a5ae <GUI_SPRITE_SetPosition+0x4fa>
 801a0c4:	f7f9 f80c 	bl	80130e0 <GUI_ALLOC_LockH>
 801a0c8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801a0ca:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801a0ce:	6801      	ldr	r1, [r0, #0]
 801a0d0:	9023      	str	r0, [sp, #140]	; 0x8c
 801a0d2:	429a      	cmp	r2, r3
 801a0d4:	9106      	str	r1, [sp, #24]
 801a0d6:	d106      	bne.n	801a0e6 <GUI_SPRITE_SetPosition+0x32>
 801a0d8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801a0dc:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 801a0e0:	459e      	cmp	lr, r3
 801a0e2:	f000 8239 	beq.w	801a558 <GUI_SPRITE_SetPosition+0x4a4>
 801a0e6:	2000      	movs	r0, #0
 801a0e8:	f7f4 fe1a 	bl	800ed20 <GUI_MEMDEV_Select>
 801a0ec:	4ba0      	ldr	r3, [pc, #640]	; (801a370 <GUI_SPRITE_SetPosition+0x2bc>)
 801a0ee:	9906      	ldr	r1, [sp, #24]
 801a0f0:	681b      	ldr	r3, [r3, #0]
 801a0f2:	6989      	ldr	r1, [r1, #24]
 801a0f4:	7c5a      	ldrb	r2, [r3, #17]
 801a0f6:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 801a0f8:	9108      	str	r1, [sp, #32]
 801a0fa:	4291      	cmp	r1, r2
 801a0fc:	bf18      	it	ne
 801a0fe:	7459      	strbne	r1, [r3, #17]
 801a100:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801a104:	9310      	str	r3, [sp, #64]	; 0x40
 801a106:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 801a10a:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 801a10e:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 801a112:	921a      	str	r2, [sp, #104]	; 0x68
 801a114:	ebce 0303 	rsb	r3, lr, r3
 801a118:	1c59      	adds	r1, r3, #1
 801a11a:	9307      	str	r3, [sp, #28]
 801a11c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 801a120:	901f      	str	r0, [sp, #124]	; 0x7c
 801a122:	1b9b      	subs	r3, r3, r6
 801a124:	1c5a      	adds	r2, r3, #1
 801a126:	930e      	str	r3, [sp, #56]	; 0x38
 801a128:	8a2b      	ldrh	r3, [r5, #16]
 801a12a:	910d      	str	r1, [sp, #52]	; 0x34
 801a12c:	079b      	lsls	r3, r3, #30
 801a12e:	921e      	str	r2, [sp, #120]	; 0x78
 801a130:	f140 81f7 	bpl.w	801a522 <GUI_SPRITE_SetPosition+0x46e>
 801a134:	9916      	ldr	r1, [sp, #88]	; 0x58
 801a136:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 801a138:	696b      	ldr	r3, [r5, #20]
 801a13a:	9311      	str	r3, [sp, #68]	; 0x44
 801a13c:	ebce 0a01 	rsb	sl, lr, r1
 801a140:	f1ba 0f00 	cmp.w	sl, #0
 801a144:	ebc6 0902 	rsb	r9, r6, r2
 801a148:	dc0c      	bgt.n	801a164 <GUI_SPRITE_SetPosition+0xb0>
 801a14a:	9b07      	ldr	r3, [sp, #28]
 801a14c:	930a      	str	r3, [sp, #40]	; 0x28
 801a14e:	469e      	mov	lr, r3
 801a150:	f04f 32ff 	mov.w	r2, #4294967295
 801a154:	44d6      	add	lr, sl
 801a156:	2100      	movs	r1, #0
 801a158:	f8cd e01c 	str.w	lr, [sp, #28]
 801a15c:	911c      	str	r1, [sp, #112]	; 0x70
 801a15e:	9214      	str	r2, [sp, #80]	; 0x50
 801a160:	9204      	str	r2, [sp, #16]
 801a162:	e009      	b.n	801a178 <GUI_SPRITE_SetPosition+0xc4>
 801a164:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a166:	f8cd a070 	str.w	sl, [sp, #112]	; 0x70
 801a16a:	f04f 0e01 	mov.w	lr, #1
 801a16e:	2100      	movs	r1, #0
 801a170:	9314      	str	r3, [sp, #80]	; 0x50
 801a172:	f8cd e010 	str.w	lr, [sp, #16]
 801a176:	910a      	str	r1, [sp, #40]	; 0x28
 801a178:	f1b9 0f00 	cmp.w	r9, #0
 801a17c:	dc0c      	bgt.n	801a198 <GUI_SPRITE_SetPosition+0xe4>
 801a17e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a180:	4622      	mov	r2, r4
 801a182:	f04f 3eff 	mov.w	lr, #4294967295
 801a186:	444a      	add	r2, r9
 801a188:	2300      	movs	r3, #0
 801a18a:	920e      	str	r2, [sp, #56]	; 0x38
 801a18c:	931b      	str	r3, [sp, #108]	; 0x6c
 801a18e:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
 801a192:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
 801a196:	e006      	b.n	801a1a6 <GUI_SPRITE_SetPosition+0xf2>
 801a198:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801a19a:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
 801a19e:	2301      	movs	r3, #1
 801a1a0:	9215      	str	r2, [sp, #84]	; 0x54
 801a1a2:	9309      	str	r3, [sp, #36]	; 0x24
 801a1a4:	2400      	movs	r4, #0
 801a1a6:	9806      	ldr	r0, [sp, #24]
 801a1a8:	a924      	add	r1, sp, #144	; 0x90
 801a1aa:	f7ff fefb 	bl	8019fa4 <_GetDeviceRect>
 801a1ae:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801a1b0:	9904      	ldr	r1, [sp, #16]
 801a1b2:	f7ff fe2a 	bl	8019e0a <_CreateBuffer>
 801a1b6:	9012      	str	r0, [sp, #72]	; 0x48
 801a1b8:	2800      	cmp	r0, #0
 801a1ba:	f000 81b2 	beq.w	801a522 <GUI_SPRITE_SetPosition+0x46e>
 801a1be:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801a1c0:	9904      	ldr	r1, [sp, #16]
 801a1c2:	f7ff fe22 	bl	8019e0a <_CreateBuffer>
 801a1c6:	9013      	str	r0, [sp, #76]	; 0x4c
 801a1c8:	2800      	cmp	r0, #0
 801a1ca:	f000 81a5 	beq.w	801a518 <GUI_SPRITE_SetPosition+0x464>
 801a1ce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a1d0:	68d8      	ldr	r0, [r3, #12]
 801a1d2:	4426      	add	r6, r4
 801a1d4:	b990      	cbnz	r0, 801a1fc <GUI_SPRITE_SetPosition+0x148>
 801a1d6:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 801a1da:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a1dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a1de:	9019      	str	r0, [sp, #100]	; 0x64
 801a1e0:	ea4f 038e 	mov.w	r3, lr, lsl #2
 801a1e4:	434b      	muls	r3, r1
 801a1e6:	9321      	str	r3, [sp, #132]	; 0x84
 801a1e8:	fb0e 2304 	mla	r3, lr, r4, r2
 801a1ec:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801a1f0:	930c      	str	r3, [sp, #48]	; 0x30
 801a1f2:	9b04      	ldr	r3, [sp, #16]
 801a1f4:	009b      	lsls	r3, r3, #2
 801a1f6:	444e      	add	r6, r9
 801a1f8:	9320      	str	r3, [sp, #128]	; 0x80
 801a1fa:	e0db      	b.n	801a3b4 <GUI_SPRITE_SetPosition+0x300>
 801a1fc:	f7f8 ff70 	bl	80130e0 <GUI_ALLOC_LockH>
 801a200:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 801a204:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a206:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a208:	9022      	str	r0, [sp, #136]	; 0x88
 801a20a:	ea4f 038e 	mov.w	r3, lr, lsl #2
 801a20e:	434b      	muls	r3, r1
 801a210:	9319      	str	r3, [sp, #100]	; 0x64
 801a212:	fb0e 2304 	mla	r3, lr, r4, r2
 801a216:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801a21a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a21c:	9b04      	ldr	r3, [sp, #16]
 801a21e:	009b      	lsls	r3, r3, #2
 801a220:	444e      	add	r6, r9
 801a222:	931d      	str	r3, [sp, #116]	; 0x74
 801a224:	9915      	ldr	r1, [sp, #84]	; 0x54
 801a226:	428c      	cmp	r4, r1
 801a228:	f000 809e 	beq.w	801a368 <GUI_SPRITE_SetPosition+0x2b4>
 801a22c:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 801a230:	4574      	cmp	r4, lr
 801a232:	db05      	blt.n	801a240 <GUI_SPRITE_SetPosition+0x18c>
 801a234:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a236:	428c      	cmp	r4, r1
 801a238:	bfcc      	ite	gt
 801a23a:	2300      	movgt	r3, #0
 801a23c:	2301      	movle	r3, #1
 801a23e:	e000      	b.n	801a242 <GUI_SPRITE_SetPosition+0x18e>
 801a240:	2300      	movs	r3, #0
 801a242:	b2db      	uxtb	r3, r3
 801a244:	9318      	str	r3, [sp, #96]	; 0x60
 801a246:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801a248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a24a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a24c:	9105      	str	r1, [sp, #20]
 801a24e:	ebc9 0206 	rsb	r2, r9, r6
 801a252:	441f      	add	r7, r3
 801a254:	920c      	str	r2, [sp, #48]	; 0x30
 801a256:	4457      	add	r7, sl
 801a258:	461d      	mov	r5, r3
 801a25a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801a25c:	428d      	cmp	r5, r1
 801a25e:	d07a      	beq.n	801a356 <GUI_SPRITE_SetPosition+0x2a2>
 801a260:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a262:	4629      	mov	r1, r5
 801a264:	4622      	mov	r2, r4
 801a266:	f000 f9eb 	bl	801a640 <GUI_GetBitmapPixelIndex>
 801a26a:	900f      	str	r0, [sp, #60]	; 0x3c
 801a26c:	2800      	cmp	r0, #0
 801a26e:	d069      	beq.n	801a344 <GUI_SPRITE_SetPosition+0x290>
 801a270:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801a272:	4295      	cmp	r5, r2
 801a274:	ebca 0c07 	rsb	ip, sl, r7
 801a278:	db07      	blt.n	801a28a <GUI_SPRITE_SetPosition+0x1d6>
 801a27a:	9b07      	ldr	r3, [sp, #28]
 801a27c:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801a280:	429d      	cmp	r5, r3
 801a282:	bfc8      	it	gt
 801a284:	f04f 0b00 	movgt.w	fp, #0
 801a288:	e001      	b.n	801a28e <GUI_SPRITE_SetPosition+0x1da>
 801a28a:	f04f 0b00 	mov.w	fp, #0
 801a28e:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801a292:	429f      	cmp	r7, r3
 801a294:	fa5f fb8b 	uxtb.w	fp, fp
 801a298:	db17      	blt.n	801a2ca <GUI_SPRITE_SetPosition+0x216>
 801a29a:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 801a29e:	429e      	cmp	r6, r3
 801a2a0:	db13      	blt.n	801a2ca <GUI_SPRITE_SetPosition+0x216>
 801a2a2:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 801a2a6:	429f      	cmp	r7, r3
 801a2a8:	dc0f      	bgt.n	801a2ca <GUI_SPRITE_SetPosition+0x216>
 801a2aa:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 801a2ae:	429e      	cmp	r6, r3
 801a2b0:	dc0b      	bgt.n	801a2ca <GUI_SPRITE_SetPosition+0x216>
 801a2b2:	4638      	mov	r0, r7
 801a2b4:	4631      	mov	r1, r6
 801a2b6:	9a06      	ldr	r2, [sp, #24]
 801a2b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a2ba:	f8cd c00c 	str.w	ip, [sp, #12]
 801a2be:	f7ff fdf9 	bl	8019eb4 <_GetBkIndex.isra.0>
 801a2c2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 801a2c6:	4680      	mov	r8, r0
 801a2c8:	e001      	b.n	801a2ce <GUI_SPRITE_SetPosition+0x21a>
 801a2ca:	f04f 0800 	mov.w	r8, #0
 801a2ce:	f1bb 0f00 	cmp.w	fp, #0
 801a2d2:	d00d      	beq.n	801a2f0 <GUI_SPRITE_SetPosition+0x23c>
 801a2d4:	ebb5 010a 	subs.w	r1, r5, sl
 801a2d8:	d415      	bmi.n	801a306 <GUI_SPRITE_SetPosition+0x252>
 801a2da:	ebb4 0209 	subs.w	r2, r4, r9
 801a2de:	d412      	bmi.n	801a306 <GUI_SPRITE_SetPosition+0x252>
 801a2e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a2e2:	f8cd c00c 	str.w	ip, [sp, #12]
 801a2e6:	f000 f9ab 	bl	801a640 <GUI_GetBitmapPixelIndex>
 801a2ea:	f8dd c00c 	ldr.w	ip, [sp, #12]
 801a2ee:	b950      	cbnz	r0, 801a306 <GUI_SPRITE_SetPosition+0x252>
 801a2f0:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801a2f4:	459c      	cmp	ip, r3
 801a2f6:	db06      	blt.n	801a306 <GUI_SPRITE_SetPosition+0x252>
 801a2f8:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 801a2fc:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 801a300:	459e      	cmp	lr, r3
 801a302:	f280 812d 	bge.w	801a560 <GUI_SPRITE_SetPosition+0x4ac>
 801a306:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801a30a:	429f      	cmp	r7, r3
 801a30c:	db17      	blt.n	801a33e <GUI_SPRITE_SetPosition+0x28a>
 801a30e:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 801a312:	429e      	cmp	r6, r3
 801a314:	db13      	blt.n	801a33e <GUI_SPRITE_SetPosition+0x28a>
 801a316:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 801a31a:	429f      	cmp	r7, r3
 801a31c:	dc0f      	bgt.n	801a33e <GUI_SPRITE_SetPosition+0x28a>
 801a31e:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 801a322:	429e      	cmp	r6, r3
 801a324:	dc0b      	bgt.n	801a33e <GUI_SPRITE_SetPosition+0x28a>
 801a326:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a328:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a32a:	f8dd e03c 	ldr.w	lr, [sp, #60]	; 0x3c
 801a32e:	9100      	str	r1, [sp, #0]
 801a330:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 801a334:	9b06      	ldr	r3, [sp, #24]
 801a336:	4638      	mov	r0, r7
 801a338:	4631      	mov	r1, r6
 801a33a:	f7ff fe89 	bl	801a050 <_SetBkIndexBuffered>
 801a33e:	9905      	ldr	r1, [sp, #20]
 801a340:	f8c1 8020 	str.w	r8, [r1, #32]
 801a344:	9b05      	ldr	r3, [sp, #20]
 801a346:	f8dd e074 	ldr.w	lr, [sp, #116]	; 0x74
 801a34a:	9a04      	ldr	r2, [sp, #16]
 801a34c:	4473      	add	r3, lr
 801a34e:	4415      	add	r5, r2
 801a350:	9305      	str	r3, [sp, #20]
 801a352:	4417      	add	r7, r2
 801a354:	e781      	b.n	801a25a <GUI_SPRITE_SetPosition+0x1a6>
 801a356:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a358:	f8dd e064 	ldr.w	lr, [sp, #100]	; 0x64
 801a35c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a35e:	4473      	add	r3, lr
 801a360:	4414      	add	r4, r2
 801a362:	930b      	str	r3, [sp, #44]	; 0x2c
 801a364:	4416      	add	r6, r2
 801a366:	e75d      	b.n	801a224 <GUI_SPRITE_SetPosition+0x170>
 801a368:	a822      	add	r0, sp, #136	; 0x88
 801a36a:	f7f8 fec7 	bl	80130fc <GUI_ALLOC_UnlockH>
 801a36e:	e0ce      	b.n	801a50e <GUI_SPRITE_SetPosition+0x45a>
 801a370:	2000016c 	.word	0x2000016c
 801a374:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801a376:	4294      	cmp	r4, r2
 801a378:	db20      	blt.n	801a3bc <GUI_SPRITE_SetPosition+0x308>
 801a37a:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 801a37e:	4574      	cmp	r4, lr
 801a380:	bfcc      	ite	gt
 801a382:	2300      	movgt	r3, #0
 801a384:	2301      	movle	r3, #1
 801a386:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a388:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801a38a:	b2db      	uxtb	r3, r3
 801a38c:	931d      	str	r3, [sp, #116]	; 0x74
 801a38e:	ebc9 0106 	rsb	r1, r9, r6
 801a392:	4417      	add	r7, r2
 801a394:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a396:	910f      	str	r1, [sp, #60]	; 0x3c
 801a398:	4457      	add	r7, sl
 801a39a:	9305      	str	r3, [sp, #20]
 801a39c:	4615      	mov	r5, r2
 801a39e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801a3a0:	428d      	cmp	r5, r1
 801a3a2:	d10d      	bne.n	801a3c0 <GUI_SPRITE_SetPosition+0x30c>
 801a3a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a3a6:	f8dd e084 	ldr.w	lr, [sp, #132]	; 0x84
 801a3aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a3ac:	4473      	add	r3, lr
 801a3ae:	4414      	add	r4, r2
 801a3b0:	930c      	str	r3, [sp, #48]	; 0x30
 801a3b2:	4416      	add	r6, r2
 801a3b4:	9915      	ldr	r1, [sp, #84]	; 0x54
 801a3b6:	428c      	cmp	r4, r1
 801a3b8:	d1dc      	bne.n	801a374 <GUI_SPRITE_SetPosition+0x2c0>
 801a3ba:	e0a8      	b.n	801a50e <GUI_SPRITE_SetPosition+0x45a>
 801a3bc:	2300      	movs	r3, #0
 801a3be:	e7e2      	b.n	801a386 <GUI_SPRITE_SetPosition+0x2d2>
 801a3c0:	4629      	mov	r1, r5
 801a3c2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a3c4:	4622      	mov	r2, r4
 801a3c6:	f000 f93b 	bl	801a640 <GUI_GetBitmapPixelIndex>
 801a3ca:	0e01      	lsrs	r1, r0, #24
 801a3cc:	29ff      	cmp	r1, #255	; 0xff
 801a3ce:	9018      	str	r0, [sp, #96]	; 0x60
 801a3d0:	910b      	str	r1, [sp, #44]	; 0x2c
 801a3d2:	f000 8093 	beq.w	801a4fc <GUI_SPRITE_SetPosition+0x448>
 801a3d6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801a3d8:	4295      	cmp	r5, r2
 801a3da:	ebca 0c07 	rsb	ip, sl, r7
 801a3de:	db07      	blt.n	801a3f0 <GUI_SPRITE_SetPosition+0x33c>
 801a3e0:	9b07      	ldr	r3, [sp, #28]
 801a3e2:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 801a3e6:	429d      	cmp	r5, r3
 801a3e8:	bfc8      	it	gt
 801a3ea:	f04f 0b00 	movgt.w	fp, #0
 801a3ee:	e001      	b.n	801a3f4 <GUI_SPRITE_SetPosition+0x340>
 801a3f0:	f04f 0b00 	mov.w	fp, #0
 801a3f4:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801a3f8:	429f      	cmp	r7, r3
 801a3fa:	fa5f fb8b 	uxtb.w	fp, fp
 801a3fe:	db22      	blt.n	801a446 <GUI_SPRITE_SetPosition+0x392>
 801a400:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 801a404:	429e      	cmp	r6, r3
 801a406:	db1e      	blt.n	801a446 <GUI_SPRITE_SetPosition+0x392>
 801a408:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 801a40c:	429f      	cmp	r7, r3
 801a40e:	dc1a      	bgt.n	801a446 <GUI_SPRITE_SetPosition+0x392>
 801a410:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 801a414:	429e      	cmp	r6, r3
 801a416:	dc16      	bgt.n	801a446 <GUI_SPRITE_SetPosition+0x392>
 801a418:	4631      	mov	r1, r6
 801a41a:	9a06      	ldr	r2, [sp, #24]
 801a41c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a41e:	f8cd c00c 	str.w	ip, [sp, #12]
 801a422:	4638      	mov	r0, r7
 801a424:	f7ff fd80 	bl	8019f28 <_GetBkIndexAlpha.isra.2>
 801a428:	f8dd e020 	ldr.w	lr, [sp, #32]
 801a42c:	4b61      	ldr	r3, [pc, #388]	; (801a5b4 <GUI_SPRITE_SetPosition+0x500>)
 801a42e:	f853 302e 	ldr.w	r3, [r3, lr, lsl #2]
 801a432:	691b      	ldr	r3, [r3, #16]
 801a434:	4680      	mov	r8, r0
 801a436:	685b      	ldr	r3, [r3, #4]
 801a438:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 801a43c:	4798      	blx	r3
 801a43e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 801a442:	9019      	str	r0, [sp, #100]	; 0x64
 801a444:	e001      	b.n	801a44a <GUI_SPRITE_SetPosition+0x396>
 801a446:	f04f 0800 	mov.w	r8, #0
 801a44a:	f1bb 0f00 	cmp.w	fp, #0
 801a44e:	d00f      	beq.n	801a470 <GUI_SPRITE_SetPosition+0x3bc>
 801a450:	ebb5 010a 	subs.w	r1, r5, sl
 801a454:	d416      	bmi.n	801a484 <GUI_SPRITE_SetPosition+0x3d0>
 801a456:	ebb4 0209 	subs.w	r2, r4, r9
 801a45a:	d413      	bmi.n	801a484 <GUI_SPRITE_SetPosition+0x3d0>
 801a45c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a45e:	f8cd c00c 	str.w	ip, [sp, #12]
 801a462:	f000 f8ed 	bl	801a640 <GUI_GetBitmapPixelIndex>
 801a466:	0e00      	lsrs	r0, r0, #24
 801a468:	28ff      	cmp	r0, #255	; 0xff
 801a46a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 801a46e:	d109      	bne.n	801a484 <GUI_SPRITE_SetPosition+0x3d0>
 801a470:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801a474:	459c      	cmp	ip, r3
 801a476:	db05      	blt.n	801a484 <GUI_SPRITE_SetPosition+0x3d0>
 801a478:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 801a47c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a47e:	4299      	cmp	r1, r3
 801a480:	f280 8082 	bge.w	801a588 <GUI_SPRITE_SetPosition+0x4d4>
 801a484:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801a488:	429f      	cmp	r7, r3
 801a48a:	db34      	blt.n	801a4f6 <GUI_SPRITE_SetPosition+0x442>
 801a48c:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 801a490:	429e      	cmp	r6, r3
 801a492:	db30      	blt.n	801a4f6 <GUI_SPRITE_SetPosition+0x442>
 801a494:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 801a498:	429f      	cmp	r7, r3
 801a49a:	dc2c      	bgt.n	801a4f6 <GUI_SPRITE_SetPosition+0x442>
 801a49c:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 801a4a0:	429e      	cmp	r6, r3
 801a4a2:	dc28      	bgt.n	801a4f6 <GUI_SPRITE_SetPosition+0x442>
 801a4a4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a4a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a4aa:	f8df b108 	ldr.w	fp, [pc, #264]	; 801a5b4 <GUI_SPRITE_SetPosition+0x500>
 801a4ae:	f02e 407f 	bic.w	r0, lr, #4278190080	; 0xff000000
 801a4b2:	b191      	cbz	r1, 801a4da <GUI_SPRITE_SetPosition+0x426>
 801a4b4:	9a08      	ldr	r2, [sp, #32]
 801a4b6:	f85b 3022 	ldr.w	r3, [fp, r2, lsl #2]
 801a4ba:	691b      	ldr	r3, [r3, #16]
 801a4bc:	685b      	ldr	r3, [r3, #4]
 801a4be:	4798      	blx	r3
 801a4c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a4c2:	9919      	ldr	r1, [sp, #100]	; 0x64
 801a4c4:	43da      	mvns	r2, r3
 801a4c6:	b2d2      	uxtb	r2, r2
 801a4c8:	f7f6 fc5f 	bl	8010d8a <GUI__MixColors>
 801a4cc:	f8dd e020 	ldr.w	lr, [sp, #32]
 801a4d0:	f85b 302e 	ldr.w	r3, [fp, lr, lsl #2]
 801a4d4:	691b      	ldr	r3, [r3, #16]
 801a4d6:	681b      	ldr	r3, [r3, #0]
 801a4d8:	e004      	b.n	801a4e4 <GUI_SPRITE_SetPosition+0x430>
 801a4da:	9908      	ldr	r1, [sp, #32]
 801a4dc:	f85b 3021 	ldr.w	r3, [fp, r1, lsl #2]
 801a4e0:	691b      	ldr	r3, [r3, #16]
 801a4e2:	685b      	ldr	r3, [r3, #4]
 801a4e4:	4798      	blx	r3
 801a4e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a4e8:	9300      	str	r3, [sp, #0]
 801a4ea:	4602      	mov	r2, r0
 801a4ec:	4631      	mov	r1, r6
 801a4ee:	4638      	mov	r0, r7
 801a4f0:	9b06      	ldr	r3, [sp, #24]
 801a4f2:	f7ff fdad 	bl	801a050 <_SetBkIndexBuffered>
 801a4f6:	9905      	ldr	r1, [sp, #20]
 801a4f8:	f8c1 8020 	str.w	r8, [r1, #32]
 801a4fc:	9b05      	ldr	r3, [sp, #20]
 801a4fe:	f8dd e080 	ldr.w	lr, [sp, #128]	; 0x80
 801a502:	9a04      	ldr	r2, [sp, #16]
 801a504:	4473      	add	r3, lr
 801a506:	4415      	add	r5, r2
 801a508:	9305      	str	r3, [sp, #20]
 801a50a:	4417      	add	r7, r2
 801a50c:	e747      	b.n	801a39e <GUI_SPRITE_SetPosition+0x2ea>
 801a50e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a510:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801a512:	6818      	ldr	r0, [r3, #0]
 801a514:	f7ff fdbe 	bl	801a094 <_ReleaseBuffer.isra.6>
 801a518:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a51a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a51c:	6818      	ldr	r0, [r3, #0]
 801a51e:	f7ff fdb9 	bl	801a094 <_ReleaseBuffer.isra.6>
 801a522:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a524:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801a526:	990d      	ldr	r1, [sp, #52]	; 0x34
 801a528:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 801a52c:	809a      	strh	r2, [r3, #4]
 801a52e:	440a      	add	r2, r1
 801a530:	3a01      	subs	r2, #1
 801a532:	f8a3 e006 	strh.w	lr, [r3, #6]
 801a536:	811a      	strh	r2, [r3, #8]
 801a538:	f10e 32ff 	add.w	r2, lr, #4294967295
 801a53c:	f8dd e078 	ldr.w	lr, [sp, #120]	; 0x78
 801a540:	9908      	ldr	r1, [sp, #32]
 801a542:	4472      	add	r2, lr
 801a544:	815a      	strh	r2, [r3, #10]
 801a546:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801a548:	4291      	cmp	r1, r2
 801a54a:	d002      	beq.n	801a552 <GUI_SPRITE_SetPosition+0x49e>
 801a54c:	4b1a      	ldr	r3, [pc, #104]	; (801a5b8 <GUI_SPRITE_SetPosition+0x504>)
 801a54e:	681b      	ldr	r3, [r3, #0]
 801a550:	745a      	strb	r2, [r3, #17]
 801a552:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a554:	f7f4 fbe4 	bl	800ed20 <GUI_MEMDEV_Select>
 801a558:	a823      	add	r0, sp, #140	; 0x8c
 801a55a:	f7f8 fdcf 	bl	80130fc <GUI_ALLOC_UnlockH>
 801a55e:	e026      	b.n	801a5ae <GUI_SPRITE_SetPosition+0x4fa>
 801a560:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 801a564:	459c      	cmp	ip, r3
 801a566:	f73f aece 	bgt.w	801a306 <GUI_SPRITE_SetPosition+0x252>
 801a56a:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 801a56e:	459e      	cmp	lr, r3
 801a570:	f73f aec9 	bgt.w	801a306 <GUI_SPRITE_SetPosition+0x252>
 801a574:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801a576:	9b05      	ldr	r3, [sp, #20]
 801a578:	9100      	str	r1, [sp, #0]
 801a57a:	6a1a      	ldr	r2, [r3, #32]
 801a57c:	9b06      	ldr	r3, [sp, #24]
 801a57e:	4660      	mov	r0, ip
 801a580:	4671      	mov	r1, lr
 801a582:	f7ff fd65 	bl	801a050 <_SetBkIndexBuffered>
 801a586:	e6be      	b.n	801a306 <GUI_SPRITE_SetPosition+0x252>
 801a588:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 801a58c:	459c      	cmp	ip, r3
 801a58e:	f73f af79 	bgt.w	801a484 <GUI_SPRITE_SetPosition+0x3d0>
 801a592:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 801a596:	4299      	cmp	r1, r3
 801a598:	f73f af74 	bgt.w	801a484 <GUI_SPRITE_SetPosition+0x3d0>
 801a59c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a59e:	9b05      	ldr	r3, [sp, #20]
 801a5a0:	9200      	str	r2, [sp, #0]
 801a5a2:	6a1a      	ldr	r2, [r3, #32]
 801a5a4:	9b06      	ldr	r3, [sp, #24]
 801a5a6:	4660      	mov	r0, ip
 801a5a8:	f7ff fd52 	bl	801a050 <_SetBkIndexBuffered>
 801a5ac:	e76a      	b.n	801a484 <GUI_SPRITE_SetPosition+0x3d0>
 801a5ae:	b027      	add	sp, #156	; 0x9c
 801a5b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5b4:	20019ca0 	.word	0x20019ca0
 801a5b8:	2000016c 	.word	0x2000016c

0801a5bc <GUI_GetBitmapPixelIndexEx>:
 801a5bc:	b510      	push	{r4, lr}
 801a5be:	2804      	cmp	r0, #4
 801a5c0:	9c02      	ldr	r4, [sp, #8]
 801a5c2:	d025      	beq.n	801a610 <GUI_GetBitmapPixelIndexEx+0x54>
 801a5c4:	dc0f      	bgt.n	801a5e6 <GUI_GetBitmapPixelIndexEx+0x2a>
 801a5c6:	2801      	cmp	r0, #1
 801a5c8:	d017      	beq.n	801a5fa <GUI_GetBitmapPixelIndexEx+0x3e>
 801a5ca:	2802      	cmp	r0, #2
 801a5cc:	d136      	bne.n	801a63c <GUI_GetBitmapPixelIndexEx+0x80>
 801a5ce:	0898      	lsrs	r0, r3, #2
 801a5d0:	fb04 2101 	mla	r1, r4, r1, r2
 801a5d4:	ea6f 0343 	mvn.w	r3, r3, lsl #1
 801a5d8:	5c08      	ldrb	r0, [r1, r0]
 801a5da:	f003 0306 	and.w	r3, r3, #6
 801a5de:	40d8      	lsrs	r0, r3
 801a5e0:	f000 0003 	and.w	r0, r0, #3
 801a5e4:	bd10      	pop	{r4, pc}
 801a5e6:	2810      	cmp	r0, #16
 801a5e8:	d01c      	beq.n	801a624 <GUI_GetBitmapPixelIndexEx+0x68>
 801a5ea:	2820      	cmp	r0, #32
 801a5ec:	d020      	beq.n	801a630 <GUI_GetBitmapPixelIndexEx+0x74>
 801a5ee:	2808      	cmp	r0, #8
 801a5f0:	d124      	bne.n	801a63c <GUI_GetBitmapPixelIndexEx+0x80>
 801a5f2:	fb04 2101 	mla	r1, r4, r1, r2
 801a5f6:	5cc8      	ldrb	r0, [r1, r3]
 801a5f8:	bd10      	pop	{r4, pc}
 801a5fa:	08d8      	lsrs	r0, r3, #3
 801a5fc:	fb04 2101 	mla	r1, r4, r1, r2
 801a600:	43db      	mvns	r3, r3
 801a602:	5c08      	ldrb	r0, [r1, r0]
 801a604:	f003 0307 	and.w	r3, r3, #7
 801a608:	40d8      	lsrs	r0, r3
 801a60a:	f000 0001 	and.w	r0, r0, #1
 801a60e:	bd10      	pop	{r4, pc}
 801a610:	0858      	lsrs	r0, r3, #1
 801a612:	fb04 2101 	mla	r1, r4, r1, r2
 801a616:	07db      	lsls	r3, r3, #31
 801a618:	5c08      	ldrb	r0, [r1, r0]
 801a61a:	bf4c      	ite	mi
 801a61c:	f000 000f 	andmi.w	r0, r0, #15
 801a620:	0900      	lsrpl	r0, r0, #4
 801a622:	bd10      	pop	{r4, pc}
 801a624:	1049      	asrs	r1, r1, #1
 801a626:	fb04 3301 	mla	r3, r4, r1, r3
 801a62a:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
 801a62e:	bd10      	pop	{r4, pc}
 801a630:	1089      	asrs	r1, r1, #2
 801a632:	fb04 3301 	mla	r3, r4, r1, r3
 801a636:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a63a:	bd10      	pop	{r4, pc}
 801a63c:	2000      	movs	r0, #0
 801a63e:	bd10      	pop	{r4, pc}

0801a640 <GUI_GetBitmapPixelIndex>:
 801a640:	b513      	push	{r0, r1, r4, lr}
 801a642:	460b      	mov	r3, r1
 801a644:	4604      	mov	r4, r0
 801a646:	b130      	cbz	r0, 801a656 <GUI_GetBitmapPixelIndex+0x16>
 801a648:	88c0      	ldrh	r0, [r0, #6]
 801a64a:	88a1      	ldrh	r1, [r4, #4]
 801a64c:	9200      	str	r2, [sp, #0]
 801a64e:	68a2      	ldr	r2, [r4, #8]
 801a650:	f7ff ffb4 	bl	801a5bc <GUI_GetBitmapPixelIndexEx>
 801a654:	e7ff      	b.n	801a656 <GUI_GetBitmapPixelIndex+0x16>
 801a656:	b002      	add	sp, #8
 801a658:	bd10      	pop	{r4, pc}
	...

0801a65c <_Add>:
 801a65c:	4a0d      	ldr	r2, [pc, #52]	; (801a694 <_Add+0x38>)
 801a65e:	6813      	ldr	r3, [r2, #0]
 801a660:	2b0b      	cmp	r3, #11
 801a662:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a664:	4615      	mov	r5, r2
 801a666:	dc14      	bgt.n	801a692 <_Add+0x36>
 801a668:	4c0b      	ldr	r4, [pc, #44]	; (801a698 <_Add+0x3c>)
 801a66a:	461a      	mov	r2, r3
 801a66c:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 801a670:	4626      	mov	r6, r4
 801a672:	b152      	cbz	r2, 801a68a <_Add+0x2e>
 801a674:	f831 4d02 	ldrh.w	r4, [r1, #-2]!
 801a678:	fa0f fc84 	sxth.w	ip, r4
 801a67c:	4584      	cmp	ip, r0
 801a67e:	f102 37ff 	add.w	r7, r2, #4294967295
 801a682:	db02      	blt.n	801a68a <_Add+0x2e>
 801a684:	804c      	strh	r4, [r1, #2]
 801a686:	463a      	mov	r2, r7
 801a688:	e7f3      	b.n	801a672 <_Add+0x16>
 801a68a:	3301      	adds	r3, #1
 801a68c:	f826 0012 	strh.w	r0, [r6, r2, lsl #1]
 801a690:	602b      	str	r3, [r5, #0]
 801a692:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a694:	20019724 	.word	0x20019724
 801a698:	20019728 	.word	0x20019728

0801a69c <GL_FillPolygon>:
 801a69c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6a0:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 801a85c <GL_FillPolygon+0x1c0>
 801a6a4:	9101      	str	r1, [sp, #4]
 801a6a6:	4692      	mov	sl, r2
 801a6a8:	4606      	mov	r6, r0
 801a6aa:	f643 74ff 	movw	r4, #16383	; 0x3fff
 801a6ae:	2200      	movs	r2, #0
 801a6b0:	9901      	ldr	r1, [sp, #4]
 801a6b2:	428a      	cmp	r2, r1
 801a6b4:	da0b      	bge.n	801a6ce <GL_FillPolygon+0x32>
 801a6b6:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 801a6ba:	3201      	adds	r2, #1
 801a6bc:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801a6c0:	428c      	cmp	r4, r1
 801a6c2:	bfa8      	it	ge
 801a6c4:	460c      	movge	r4, r1
 801a6c6:	4589      	cmp	r9, r1
 801a6c8:	bfb8      	it	lt
 801a6ca:	4689      	movlt	r9, r1
 801a6cc:	e7f0      	b.n	801a6b0 <GL_FillPolygon+0x14>
 801a6ce:	4960      	ldr	r1, [pc, #384]	; (801a850 <GL_FillPolygon+0x1b4>)
 801a6d0:	680a      	ldr	r2, [r1, #0]
 801a6d2:	6952      	ldr	r2, [r2, #20]
 801a6d4:	468b      	mov	fp, r1
 801a6d6:	b15a      	cbz	r2, 801a6f0 <GL_FillPolygon+0x54>
 801a6d8:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 801a6dc:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 801a6e0:	1ac9      	subs	r1, r1, r3
 801a6e2:	1ad2      	subs	r2, r2, r3
 801a6e4:	4589      	cmp	r9, r1
 801a6e6:	bfa8      	it	ge
 801a6e8:	4689      	movge	r9, r1
 801a6ea:	4294      	cmp	r4, r2
 801a6ec:	bfb8      	it	lt
 801a6ee:	4614      	movlt	r4, r2
 801a6f0:	eb04 0803 	add.w	r8, r4, r3
 801a6f4:	454c      	cmp	r4, r9
 801a6f6:	f300 80a7 	bgt.w	801a848 <GL_FillPolygon+0x1ac>
 801a6fa:	4b56      	ldr	r3, [pc, #344]	; (801a854 <GL_FillPolygon+0x1b8>)
 801a6fc:	2700      	movs	r7, #0
 801a6fe:	601f      	str	r7, [r3, #0]
 801a700:	4635      	mov	r5, r6
 801a702:	9901      	ldr	r1, [sp, #4]
 801a704:	428f      	cmp	r7, r1
 801a706:	da55      	bge.n	801a7b4 <GL_FillPolygon+0x118>
 801a708:	9b01      	ldr	r3, [sp, #4]
 801a70a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801a70e:	1e59      	subs	r1, r3, #1
 801a710:	428f      	cmp	r7, r1
 801a712:	bfb4      	ite	lt
 801a714:	f107 0c01 	addlt.w	ip, r7, #1
 801a718:	f04f 0c00 	movge.w	ip, #0
 801a71c:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 801a720:	eb06 030c 	add.w	r3, r6, ip
 801a724:	42a2      	cmp	r2, r4
 801a726:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801a72a:	d136      	bne.n	801a79a <GL_FillPolygon+0xfe>
 801a72c:	42a3      	cmp	r3, r4
 801a72e:	d002      	beq.n	801a736 <GL_FillPolygon+0x9a>
 801a730:	463a      	mov	r2, r7
 801a732:	2000      	movs	r0, #0
 801a734:	e01b      	b.n	801a76e <GL_FillPolygon+0xd2>
 801a736:	f9b5 e000 	ldrsh.w	lr, [r5]
 801a73a:	f936 200c 	ldrsh.w	r2, [r6, ip]
 801a73e:	f8db 3000 	ldr.w	r3, [fp]
 801a742:	44d6      	add	lr, sl
 801a744:	4452      	add	r2, sl
 801a746:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a748:	4596      	cmp	lr, r2
 801a74a:	681b      	ldr	r3, [r3, #0]
 801a74c:	da02      	bge.n	801a754 <GL_FillPolygon+0xb8>
 801a74e:	4670      	mov	r0, lr
 801a750:	4641      	mov	r1, r8
 801a752:	e020      	b.n	801a796 <GL_FillPolygon+0xfa>
 801a754:	4610      	mov	r0, r2
 801a756:	4641      	mov	r1, r8
 801a758:	4672      	mov	r2, lr
 801a75a:	e01c      	b.n	801a796 <GL_FillPolygon+0xfa>
 801a75c:	b152      	cbz	r2, 801a774 <GL_FillPolygon+0xd8>
 801a75e:	3a01      	subs	r2, #1
 801a760:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 801a764:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 801a768:	45a4      	cmp	ip, r4
 801a76a:	d105      	bne.n	801a778 <GL_FillPolygon+0xdc>
 801a76c:	3001      	adds	r0, #1
 801a76e:	4288      	cmp	r0, r1
 801a770:	dbf4      	blt.n	801a75c <GL_FillPolygon+0xc0>
 801a772:	e01c      	b.n	801a7ae <GL_FillPolygon+0x112>
 801a774:	460a      	mov	r2, r1
 801a776:	e7f3      	b.n	801a760 <GL_FillPolygon+0xc4>
 801a778:	ebc4 0c0c 	rsb	ip, r4, ip
 801a77c:	1b1b      	subs	r3, r3, r4
 801a77e:	ea9c 0f03 	teq	ip, r3
 801a782:	f9b5 0000 	ldrsh.w	r0, [r5]
 801a786:	d44d      	bmi.n	801a824 <GL_FillPolygon+0x188>
 801a788:	f8db 3000 	ldr.w	r3, [fp]
 801a78c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a78e:	4450      	add	r0, sl
 801a790:	681b      	ldr	r3, [r3, #0]
 801a792:	4641      	mov	r1, r8
 801a794:	4602      	mov	r2, r0
 801a796:	4798      	blx	r3
 801a798:	e009      	b.n	801a7ae <GL_FillPolygon+0x112>
 801a79a:	42a3      	cmp	r3, r4
 801a79c:	d007      	beq.n	801a7ae <GL_FillPolygon+0x112>
 801a79e:	db44      	blt.n	801a82a <GL_FillPolygon+0x18e>
 801a7a0:	42a2      	cmp	r2, r4
 801a7a2:	dd27      	ble.n	801a7f4 <GL_FillPolygon+0x158>
 801a7a4:	42a3      	cmp	r3, r4
 801a7a6:	dd42      	ble.n	801a82e <GL_FillPolygon+0x192>
 801a7a8:	e001      	b.n	801a7ae <GL_FillPolygon+0x112>
 801a7aa:	42a3      	cmp	r3, r4
 801a7ac:	dd49      	ble.n	801a842 <GL_FillPolygon+0x1a6>
 801a7ae:	3701      	adds	r7, #1
 801a7b0:	3504      	adds	r5, #4
 801a7b2:	e7a6      	b.n	801a702 <GL_FillPolygon+0x66>
 801a7b4:	2500      	movs	r5, #0
 801a7b6:	4628      	mov	r0, r5
 801a7b8:	462f      	mov	r7, r5
 801a7ba:	4b26      	ldr	r3, [pc, #152]	; (801a854 <GL_FillPolygon+0x1b8>)
 801a7bc:	681b      	ldr	r3, [r3, #0]
 801a7be:	429f      	cmp	r7, r3
 801a7c0:	da14      	bge.n	801a7ec <GL_FillPolygon+0x150>
 801a7c2:	4b25      	ldr	r3, [pc, #148]	; (801a858 <GL_FillPolygon+0x1bc>)
 801a7c4:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 801a7c8:	b15d      	cbz	r5, 801a7e2 <GL_FillPolygon+0x146>
 801a7ca:	f8db 2000 	ldr.w	r2, [fp]
 801a7ce:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a7d0:	4450      	add	r0, sl
 801a7d2:	f8d2 c000 	ldr.w	ip, [r2]
 801a7d6:	9300      	str	r3, [sp, #0]
 801a7d8:	eb0a 0203 	add.w	r2, sl, r3
 801a7dc:	4641      	mov	r1, r8
 801a7de:	47e0      	blx	ip
 801a7e0:	9b00      	ldr	r3, [sp, #0]
 801a7e2:	f085 0501 	eor.w	r5, r5, #1
 801a7e6:	3701      	adds	r7, #1
 801a7e8:	4618      	mov	r0, r3
 801a7ea:	e7e6      	b.n	801a7ba <GL_FillPolygon+0x11e>
 801a7ec:	3401      	adds	r4, #1
 801a7ee:	f108 0801 	add.w	r8, r8, #1
 801a7f2:	e77f      	b.n	801a6f4 <GL_FillPolygon+0x58>
 801a7f4:	429a      	cmp	r2, r3
 801a7f6:	dcd8      	bgt.n	801a7aa <GL_FillPolygon+0x10e>
 801a7f8:	f9b5 1000 	ldrsh.w	r1, [r5]
 801a7fc:	f936 000c 	ldrsh.w	r0, [r6, ip]
 801a800:	ebc2 0e04 	rsb	lr, r2, r4
 801a804:	1a40      	subs	r0, r0, r1
 801a806:	fb0e f000 	mul.w	r0, lr, r0
 801a80a:	2800      	cmp	r0, #0
 801a80c:	ebc2 0303 	rsb	r3, r2, r3
 801a810:	bfdb      	ittet	le
 801a812:	105a      	asrle	r2, r3, #1
 801a814:	f1c2 0201 	rsble	r2, r2, #1
 801a818:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 801a81c:	1880      	addle	r0, r0, r2
 801a81e:	fb90 f0f3 	sdiv	r0, r0, r3
 801a822:	4408      	add	r0, r1
 801a824:	f7ff ff1a 	bl	801a65c <_Add>
 801a828:	e7c1      	b.n	801a7ae <GL_FillPolygon+0x112>
 801a82a:	42a2      	cmp	r2, r4
 801a82c:	dbbf      	blt.n	801a7ae <GL_FillPolygon+0x112>
 801a82e:	429a      	cmp	r2, r3
 801a830:	ddbd      	ble.n	801a7ae <GL_FillPolygon+0x112>
 801a832:	4696      	mov	lr, r2
 801a834:	f936 100c 	ldrsh.w	r1, [r6, ip]
 801a838:	f9b5 0000 	ldrsh.w	r0, [r5]
 801a83c:	461a      	mov	r2, r3
 801a83e:	4673      	mov	r3, lr
 801a840:	e7de      	b.n	801a800 <GL_FillPolygon+0x164>
 801a842:	42a2      	cmp	r2, r4
 801a844:	daf5      	bge.n	801a832 <GL_FillPolygon+0x196>
 801a846:	e7b2      	b.n	801a7ae <GL_FillPolygon+0x112>
 801a848:	b003      	add	sp, #12
 801a84a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a84e:	bf00      	nop
 801a850:	2000016c 	.word	0x2000016c
 801a854:	20019724 	.word	0x20019724
 801a858:	20019728 	.word	0x20019728
 801a85c:	ffffc001 	.word	0xffffc001

0801a860 <GL_DrawPoint>:
 801a860:	b508      	push	{r3, lr}
 801a862:	4b08      	ldr	r3, [pc, #32]	; (801a884 <GL_DrawPoint+0x24>)
 801a864:	681b      	ldr	r3, [r3, #0]
 801a866:	7e1a      	ldrb	r2, [r3, #24]
 801a868:	2a01      	cmp	r2, #1
 801a86a:	d103      	bne.n	801a874 <GL_DrawPoint+0x14>
 801a86c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a86e:	685b      	ldr	r3, [r3, #4]
 801a870:	4798      	blx	r3
 801a872:	bd08      	pop	{r3, pc}
 801a874:	2302      	movs	r3, #2
 801a876:	3a01      	subs	r2, #1
 801a878:	fb92 f2f3 	sdiv	r2, r2, r3
 801a87c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801a880:	f000 b824 	b.w	801a8cc <GL_FillCircle>
 801a884:	2000016c 	.word	0x2000016c

0801a888 <GUI_DrawPixel>:
 801a888:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a88a:	4e0f      	ldr	r6, [pc, #60]	; (801a8c8 <GUI_DrawPixel+0x40>)
 801a88c:	6833      	ldr	r3, [r6, #0]
 801a88e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 801a890:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 801a892:	4405      	add	r5, r0
 801a894:	b2ab      	uxth	r3, r5
 801a896:	440c      	add	r4, r1
 801a898:	f8ad 3004 	strh.w	r3, [sp, #4]
 801a89c:	f8ad 3000 	strh.w	r3, [sp]
 801a8a0:	4668      	mov	r0, sp
 801a8a2:	b2a3      	uxth	r3, r4
 801a8a4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a8a8:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a8ac:	f7f2 ffa2 	bl	800d7f4 <WM__InitIVRSearch>
 801a8b0:	b140      	cbz	r0, 801a8c4 <GUI_DrawPixel+0x3c>
 801a8b2:	6833      	ldr	r3, [r6, #0]
 801a8b4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a8b6:	4628      	mov	r0, r5
 801a8b8:	685b      	ldr	r3, [r3, #4]
 801a8ba:	4621      	mov	r1, r4
 801a8bc:	4798      	blx	r3
 801a8be:	f7f2 fed7 	bl	800d670 <WM__GetNextIVR>
 801a8c2:	e7f5      	b.n	801a8b0 <GUI_DrawPixel+0x28>
 801a8c4:	b002      	add	sp, #8
 801a8c6:	bd70      	pop	{r4, r5, r6, pc}
 801a8c8:	2000016c 	.word	0x2000016c

0801a8cc <GL_FillCircle>:
 801a8cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8d0:	f240 29c3 	movw	r9, #707	; 0x2c3
 801a8d4:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 801a98c <GL_FillCircle+0xc0>
 801a8d8:	fb09 f902 	mul.w	r9, r9, r2
 801a8dc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801a8e0:	fb99 f9f3 	sdiv	r9, r9, r3
 801a8e4:	f8d8 3000 	ldr.w	r3, [r8]
 801a8e8:	f04f 0b02 	mov.w	fp, #2
 801a8ec:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a8ee:	4606      	mov	r6, r0
 801a8f0:	fb92 fbfb 	sdiv	fp, r2, fp
 801a8f4:	1a80      	subs	r0, r0, r2
 801a8f6:	4614      	mov	r4, r2
 801a8f8:	fb02 bb02 	mla	fp, r2, r2, fp
 801a8fc:	681b      	ldr	r3, [r3, #0]
 801a8fe:	18b2      	adds	r2, r6, r2
 801a900:	460f      	mov	r7, r1
 801a902:	4798      	blx	r3
 801a904:	f109 0901 	add.w	r9, r9, #1
 801a908:	2501      	movs	r5, #1
 801a90a:	454d      	cmp	r5, r9
 801a90c:	dc3a      	bgt.n	801a984 <GL_FillCircle+0xb8>
 801a90e:	fb04 f304 	mul.w	r3, r4, r4
 801a912:	fb05 3305 	mla	r3, r5, r5, r3
 801a916:	455b      	cmp	r3, fp
 801a918:	dd1b      	ble.n	801a952 <GL_FillCircle+0x86>
 801a91a:	454c      	cmp	r4, r9
 801a91c:	dd18      	ble.n	801a950 <GL_FillCircle+0x84>
 801a91e:	f8d8 2000 	ldr.w	r2, [r8]
 801a922:	1c73      	adds	r3, r6, #1
 801a924:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a926:	f106 3aff 	add.w	sl, r6, #4294967295
 801a92a:	1b5b      	subs	r3, r3, r5
 801a92c:	44aa      	add	sl, r5
 801a92e:	f8d2 c000 	ldr.w	ip, [r2]
 801a932:	9301      	str	r3, [sp, #4]
 801a934:	4618      	mov	r0, r3
 801a936:	1939      	adds	r1, r7, r4
 801a938:	4652      	mov	r2, sl
 801a93a:	47e0      	blx	ip
 801a93c:	f8d8 2000 	ldr.w	r2, [r8]
 801a940:	9b01      	ldr	r3, [sp, #4]
 801a942:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a944:	4618      	mov	r0, r3
 801a946:	f8d2 c000 	ldr.w	ip, [r2]
 801a94a:	1b39      	subs	r1, r7, r4
 801a94c:	4652      	mov	r2, sl
 801a94e:	47e0      	blx	ip
 801a950:	3c01      	subs	r4, #1
 801a952:	f8d8 2000 	ldr.w	r2, [r8]
 801a956:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a958:	1b33      	subs	r3, r6, r4
 801a95a:	eb06 0a04 	add.w	sl, r6, r4
 801a95e:	f8d2 c000 	ldr.w	ip, [r2]
 801a962:	9301      	str	r3, [sp, #4]
 801a964:	4618      	mov	r0, r3
 801a966:	19e9      	adds	r1, r5, r7
 801a968:	4652      	mov	r2, sl
 801a96a:	47e0      	blx	ip
 801a96c:	f8d8 2000 	ldr.w	r2, [r8]
 801a970:	9b01      	ldr	r3, [sp, #4]
 801a972:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a974:	1b79      	subs	r1, r7, r5
 801a976:	f8d2 c000 	ldr.w	ip, [r2]
 801a97a:	4618      	mov	r0, r3
 801a97c:	4652      	mov	r2, sl
 801a97e:	47e0      	blx	ip
 801a980:	3501      	adds	r5, #1
 801a982:	e7c2      	b.n	801a90a <GL_FillCircle+0x3e>
 801a984:	b003      	add	sp, #12
 801a986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a98a:	bf00      	nop
 801a98c:	2000016c 	.word	0x2000016c

0801a990 <GUI_CalcColorDist>:
 801a990:	b2cb      	uxtb	r3, r1
 801a992:	b2c2      	uxtb	r2, r0
 801a994:	1ad2      	subs	r2, r2, r3
 801a996:	b292      	uxth	r2, r2
 801a998:	b293      	uxth	r3, r2
 801a99a:	b530      	push	{r4, r5, lr}
 801a99c:	041c      	lsls	r4, r3, #16
 801a99e:	bf48      	it	mi
 801a9a0:	4253      	negmi	r3, r2
 801a9a2:	f3c1 2507 	ubfx	r5, r1, #8, #8
 801a9a6:	f3c0 2207 	ubfx	r2, r0, #8, #8
 801a9aa:	ebc5 0202 	rsb	r2, r5, r2
 801a9ae:	bf48      	it	mi
 801a9b0:	b29b      	uxthmi	r3, r3
 801a9b2:	b292      	uxth	r2, r2
 801a9b4:	0c09      	lsrs	r1, r1, #16
 801a9b6:	fb13 f403 	smulbb	r4, r3, r3
 801a9ba:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 801a9be:	b293      	uxth	r3, r2
 801a9c0:	041d      	lsls	r5, r3, #16
 801a9c2:	b289      	uxth	r1, r1
 801a9c4:	b288      	uxth	r0, r1
 801a9c6:	bf44      	itt	mi
 801a9c8:	4253      	negmi	r3, r2
 801a9ca:	b29b      	uxthmi	r3, r3
 801a9cc:	0402      	lsls	r2, r0, #16
 801a9ce:	bf48      	it	mi
 801a9d0:	4248      	negmi	r0, r1
 801a9d2:	fb13 4303 	smlabb	r3, r3, r3, r4
 801a9d6:	bf48      	it	mi
 801a9d8:	b280      	uxthmi	r0, r0
 801a9da:	fb00 3000 	mla	r0, r0, r0, r3
 801a9de:	bd30      	pop	{r4, r5, pc}

0801a9e0 <__errno>:
 801a9e0:	4b01      	ldr	r3, [pc, #4]	; (801a9e8 <__errno+0x8>)
 801a9e2:	6818      	ldr	r0, [r3, #0]
 801a9e4:	4770      	bx	lr
 801a9e6:	bf00      	nop
 801a9e8:	20000398 	.word	0x20000398

0801a9ec <__libc_init_array>:
 801a9ec:	b570      	push	{r4, r5, r6, lr}
 801a9ee:	4e0d      	ldr	r6, [pc, #52]	; (801aa24 <__libc_init_array+0x38>)
 801a9f0:	4c0d      	ldr	r4, [pc, #52]	; (801aa28 <__libc_init_array+0x3c>)
 801a9f2:	1ba4      	subs	r4, r4, r6
 801a9f4:	10a4      	asrs	r4, r4, #2
 801a9f6:	2500      	movs	r5, #0
 801a9f8:	42a5      	cmp	r5, r4
 801a9fa:	d109      	bne.n	801aa10 <__libc_init_array+0x24>
 801a9fc:	4e0b      	ldr	r6, [pc, #44]	; (801aa2c <__libc_init_array+0x40>)
 801a9fe:	4c0c      	ldr	r4, [pc, #48]	; (801aa30 <__libc_init_array+0x44>)
 801aa00:	f000 fc54 	bl	801b2ac <_init>
 801aa04:	1ba4      	subs	r4, r4, r6
 801aa06:	10a4      	asrs	r4, r4, #2
 801aa08:	2500      	movs	r5, #0
 801aa0a:	42a5      	cmp	r5, r4
 801aa0c:	d105      	bne.n	801aa1a <__libc_init_array+0x2e>
 801aa0e:	bd70      	pop	{r4, r5, r6, pc}
 801aa10:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801aa14:	4798      	blx	r3
 801aa16:	3501      	adds	r5, #1
 801aa18:	e7ee      	b.n	801a9f8 <__libc_init_array+0xc>
 801aa1a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801aa1e:	4798      	blx	r3
 801aa20:	3501      	adds	r5, #1
 801aa22:	e7f2      	b.n	801aa0a <__libc_init_array+0x1e>
 801aa24:	08021c74 	.word	0x08021c74
 801aa28:	08021c74 	.word	0x08021c74
 801aa2c:	08021c74 	.word	0x08021c74
 801aa30:	08021c78 	.word	0x08021c78

0801aa34 <memcmp>:
 801aa34:	b530      	push	{r4, r5, lr}
 801aa36:	2400      	movs	r4, #0
 801aa38:	42a2      	cmp	r2, r4
 801aa3a:	d101      	bne.n	801aa40 <memcmp+0xc>
 801aa3c:	2000      	movs	r0, #0
 801aa3e:	e007      	b.n	801aa50 <memcmp+0x1c>
 801aa40:	5d03      	ldrb	r3, [r0, r4]
 801aa42:	3401      	adds	r4, #1
 801aa44:	190d      	adds	r5, r1, r4
 801aa46:	f815 5c01 	ldrb.w	r5, [r5, #-1]
 801aa4a:	42ab      	cmp	r3, r5
 801aa4c:	d0f4      	beq.n	801aa38 <memcmp+0x4>
 801aa4e:	1b58      	subs	r0, r3, r5
 801aa50:	bd30      	pop	{r4, r5, pc}

0801aa52 <memcpy>:
 801aa52:	b510      	push	{r4, lr}
 801aa54:	1e43      	subs	r3, r0, #1
 801aa56:	440a      	add	r2, r1
 801aa58:	4291      	cmp	r1, r2
 801aa5a:	d100      	bne.n	801aa5e <memcpy+0xc>
 801aa5c:	bd10      	pop	{r4, pc}
 801aa5e:	f811 4b01 	ldrb.w	r4, [r1], #1
 801aa62:	f803 4f01 	strb.w	r4, [r3, #1]!
 801aa66:	e7f7      	b.n	801aa58 <memcpy+0x6>

0801aa68 <memmove>:
 801aa68:	4288      	cmp	r0, r1
 801aa6a:	b510      	push	{r4, lr}
 801aa6c:	eb01 0302 	add.w	r3, r1, r2
 801aa70:	d807      	bhi.n	801aa82 <memmove+0x1a>
 801aa72:	1e42      	subs	r2, r0, #1
 801aa74:	4299      	cmp	r1, r3
 801aa76:	d00a      	beq.n	801aa8e <memmove+0x26>
 801aa78:	f811 4b01 	ldrb.w	r4, [r1], #1
 801aa7c:	f802 4f01 	strb.w	r4, [r2, #1]!
 801aa80:	e7f8      	b.n	801aa74 <memmove+0xc>
 801aa82:	4283      	cmp	r3, r0
 801aa84:	d9f5      	bls.n	801aa72 <memmove+0xa>
 801aa86:	1881      	adds	r1, r0, r2
 801aa88:	1ad2      	subs	r2, r2, r3
 801aa8a:	42d3      	cmn	r3, r2
 801aa8c:	d100      	bne.n	801aa90 <memmove+0x28>
 801aa8e:	bd10      	pop	{r4, pc}
 801aa90:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801aa94:	f801 4d01 	strb.w	r4, [r1, #-1]!
 801aa98:	e7f7      	b.n	801aa8a <memmove+0x22>

0801aa9a <memset>:
 801aa9a:	4402      	add	r2, r0
 801aa9c:	4603      	mov	r3, r0
 801aa9e:	4293      	cmp	r3, r2
 801aaa0:	d100      	bne.n	801aaa4 <memset+0xa>
 801aaa2:	4770      	bx	lr
 801aaa4:	f803 1b01 	strb.w	r1, [r3], #1
 801aaa8:	e7f9      	b.n	801aa9e <memset+0x4>
	...

0801aaac <siprintf>:
 801aaac:	b40e      	push	{r1, r2, r3}
 801aaae:	b500      	push	{lr}
 801aab0:	b09c      	sub	sp, #112	; 0x70
 801aab2:	ab1d      	add	r3, sp, #116	; 0x74
 801aab4:	9002      	str	r0, [sp, #8]
 801aab6:	9006      	str	r0, [sp, #24]
 801aab8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801aabc:	4809      	ldr	r0, [pc, #36]	; (801aae4 <siprintf+0x38>)
 801aabe:	9107      	str	r1, [sp, #28]
 801aac0:	9104      	str	r1, [sp, #16]
 801aac2:	4909      	ldr	r1, [pc, #36]	; (801aae8 <siprintf+0x3c>)
 801aac4:	f853 2b04 	ldr.w	r2, [r3], #4
 801aac8:	9105      	str	r1, [sp, #20]
 801aaca:	6800      	ldr	r0, [r0, #0]
 801aacc:	9301      	str	r3, [sp, #4]
 801aace:	a902      	add	r1, sp, #8
 801aad0:	f000 f884 	bl	801abdc <_svfiprintf_r>
 801aad4:	9b02      	ldr	r3, [sp, #8]
 801aad6:	2200      	movs	r2, #0
 801aad8:	701a      	strb	r2, [r3, #0]
 801aada:	b01c      	add	sp, #112	; 0x70
 801aadc:	f85d eb04 	ldr.w	lr, [sp], #4
 801aae0:	b003      	add	sp, #12
 801aae2:	4770      	bx	lr
 801aae4:	20000398 	.word	0x20000398
 801aae8:	ffff0208 	.word	0xffff0208

0801aaec <strcpy>:
 801aaec:	4603      	mov	r3, r0
 801aaee:	f811 2b01 	ldrb.w	r2, [r1], #1
 801aaf2:	f803 2b01 	strb.w	r2, [r3], #1
 801aaf6:	2a00      	cmp	r2, #0
 801aaf8:	d1f9      	bne.n	801aaee <strcpy+0x2>
 801aafa:	4770      	bx	lr

0801aafc <strncpy>:
 801aafc:	b570      	push	{r4, r5, r6, lr}
 801aafe:	3901      	subs	r1, #1
 801ab00:	4604      	mov	r4, r0
 801ab02:	b902      	cbnz	r2, 801ab06 <strncpy+0xa>
 801ab04:	bd70      	pop	{r4, r5, r6, pc}
 801ab06:	4623      	mov	r3, r4
 801ab08:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 801ab0c:	f803 5b01 	strb.w	r5, [r3], #1
 801ab10:	1e56      	subs	r6, r2, #1
 801ab12:	b92d      	cbnz	r5, 801ab20 <strncpy+0x24>
 801ab14:	4414      	add	r4, r2
 801ab16:	42a3      	cmp	r3, r4
 801ab18:	d0f4      	beq.n	801ab04 <strncpy+0x8>
 801ab1a:	f803 5b01 	strb.w	r5, [r3], #1
 801ab1e:	e7fa      	b.n	801ab16 <strncpy+0x1a>
 801ab20:	461c      	mov	r4, r3
 801ab22:	4632      	mov	r2, r6
 801ab24:	e7ed      	b.n	801ab02 <strncpy+0x6>

0801ab26 <__ssputs_r>:
 801ab26:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ab2a:	688e      	ldr	r6, [r1, #8]
 801ab2c:	429e      	cmp	r6, r3
 801ab2e:	4682      	mov	sl, r0
 801ab30:	460c      	mov	r4, r1
 801ab32:	4690      	mov	r8, r2
 801ab34:	4699      	mov	r9, r3
 801ab36:	d837      	bhi.n	801aba8 <__ssputs_r+0x82>
 801ab38:	898a      	ldrh	r2, [r1, #12]
 801ab3a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 801ab3e:	d031      	beq.n	801aba4 <__ssputs_r+0x7e>
 801ab40:	6825      	ldr	r5, [r4, #0]
 801ab42:	6909      	ldr	r1, [r1, #16]
 801ab44:	1a6f      	subs	r7, r5, r1
 801ab46:	6965      	ldr	r5, [r4, #20]
 801ab48:	2302      	movs	r3, #2
 801ab4a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ab4e:	fb95 f5f3 	sdiv	r5, r5, r3
 801ab52:	f109 0301 	add.w	r3, r9, #1
 801ab56:	443b      	add	r3, r7
 801ab58:	429d      	cmp	r5, r3
 801ab5a:	bf38      	it	cc
 801ab5c:	461d      	movcc	r5, r3
 801ab5e:	0553      	lsls	r3, r2, #21
 801ab60:	d530      	bpl.n	801abc4 <__ssputs_r+0x9e>
 801ab62:	4629      	mov	r1, r5
 801ab64:	f000 fb08 	bl	801b178 <_malloc_r>
 801ab68:	4606      	mov	r6, r0
 801ab6a:	b950      	cbnz	r0, 801ab82 <__ssputs_r+0x5c>
 801ab6c:	230c      	movs	r3, #12
 801ab6e:	f8ca 3000 	str.w	r3, [sl]
 801ab72:	89a3      	ldrh	r3, [r4, #12]
 801ab74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801ab78:	81a3      	strh	r3, [r4, #12]
 801ab7a:	f04f 30ff 	mov.w	r0, #4294967295
 801ab7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ab82:	463a      	mov	r2, r7
 801ab84:	6921      	ldr	r1, [r4, #16]
 801ab86:	f7ff ff64 	bl	801aa52 <memcpy>
 801ab8a:	89a3      	ldrh	r3, [r4, #12]
 801ab8c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 801ab90:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801ab94:	81a3      	strh	r3, [r4, #12]
 801ab96:	6126      	str	r6, [r4, #16]
 801ab98:	6165      	str	r5, [r4, #20]
 801ab9a:	443e      	add	r6, r7
 801ab9c:	1bed      	subs	r5, r5, r7
 801ab9e:	6026      	str	r6, [r4, #0]
 801aba0:	60a5      	str	r5, [r4, #8]
 801aba2:	464e      	mov	r6, r9
 801aba4:	454e      	cmp	r6, r9
 801aba6:	d900      	bls.n	801abaa <__ssputs_r+0x84>
 801aba8:	464e      	mov	r6, r9
 801abaa:	4632      	mov	r2, r6
 801abac:	4641      	mov	r1, r8
 801abae:	6820      	ldr	r0, [r4, #0]
 801abb0:	f7ff ff5a 	bl	801aa68 <memmove>
 801abb4:	68a3      	ldr	r3, [r4, #8]
 801abb6:	1b9b      	subs	r3, r3, r6
 801abb8:	60a3      	str	r3, [r4, #8]
 801abba:	6823      	ldr	r3, [r4, #0]
 801abbc:	441e      	add	r6, r3
 801abbe:	6026      	str	r6, [r4, #0]
 801abc0:	2000      	movs	r0, #0
 801abc2:	e7dc      	b.n	801ab7e <__ssputs_r+0x58>
 801abc4:	462a      	mov	r2, r5
 801abc6:	f000 fb31 	bl	801b22c <_realloc_r>
 801abca:	4606      	mov	r6, r0
 801abcc:	2800      	cmp	r0, #0
 801abce:	d1e2      	bne.n	801ab96 <__ssputs_r+0x70>
 801abd0:	6921      	ldr	r1, [r4, #16]
 801abd2:	4650      	mov	r0, sl
 801abd4:	f000 fa82 	bl	801b0dc <_free_r>
 801abd8:	e7c8      	b.n	801ab6c <__ssputs_r+0x46>
	...

0801abdc <_svfiprintf_r>:
 801abdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abe0:	461d      	mov	r5, r3
 801abe2:	898b      	ldrh	r3, [r1, #12]
 801abe4:	061f      	lsls	r7, r3, #24
 801abe6:	b09d      	sub	sp, #116	; 0x74
 801abe8:	4680      	mov	r8, r0
 801abea:	460c      	mov	r4, r1
 801abec:	4616      	mov	r6, r2
 801abee:	d50f      	bpl.n	801ac10 <_svfiprintf_r+0x34>
 801abf0:	690b      	ldr	r3, [r1, #16]
 801abf2:	b96b      	cbnz	r3, 801ac10 <_svfiprintf_r+0x34>
 801abf4:	2140      	movs	r1, #64	; 0x40
 801abf6:	f000 fabf 	bl	801b178 <_malloc_r>
 801abfa:	6020      	str	r0, [r4, #0]
 801abfc:	6120      	str	r0, [r4, #16]
 801abfe:	b928      	cbnz	r0, 801ac0c <_svfiprintf_r+0x30>
 801ac00:	230c      	movs	r3, #12
 801ac02:	f8c8 3000 	str.w	r3, [r8]
 801ac06:	f04f 30ff 	mov.w	r0, #4294967295
 801ac0a:	e0c8      	b.n	801ad9e <_svfiprintf_r+0x1c2>
 801ac0c:	2340      	movs	r3, #64	; 0x40
 801ac0e:	6163      	str	r3, [r4, #20]
 801ac10:	2300      	movs	r3, #0
 801ac12:	9309      	str	r3, [sp, #36]	; 0x24
 801ac14:	2320      	movs	r3, #32
 801ac16:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801ac1a:	2330      	movs	r3, #48	; 0x30
 801ac1c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801ac20:	9503      	str	r5, [sp, #12]
 801ac22:	f04f 0b01 	mov.w	fp, #1
 801ac26:	4637      	mov	r7, r6
 801ac28:	463d      	mov	r5, r7
 801ac2a:	f815 3b01 	ldrb.w	r3, [r5], #1
 801ac2e:	b10b      	cbz	r3, 801ac34 <_svfiprintf_r+0x58>
 801ac30:	2b25      	cmp	r3, #37	; 0x25
 801ac32:	d13e      	bne.n	801acb2 <_svfiprintf_r+0xd6>
 801ac34:	ebb7 0a06 	subs.w	sl, r7, r6
 801ac38:	d00b      	beq.n	801ac52 <_svfiprintf_r+0x76>
 801ac3a:	4653      	mov	r3, sl
 801ac3c:	4632      	mov	r2, r6
 801ac3e:	4621      	mov	r1, r4
 801ac40:	4640      	mov	r0, r8
 801ac42:	f7ff ff70 	bl	801ab26 <__ssputs_r>
 801ac46:	3001      	adds	r0, #1
 801ac48:	f000 80a4 	beq.w	801ad94 <_svfiprintf_r+0x1b8>
 801ac4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac4e:	4453      	add	r3, sl
 801ac50:	9309      	str	r3, [sp, #36]	; 0x24
 801ac52:	783b      	ldrb	r3, [r7, #0]
 801ac54:	2b00      	cmp	r3, #0
 801ac56:	f000 809d 	beq.w	801ad94 <_svfiprintf_r+0x1b8>
 801ac5a:	2300      	movs	r3, #0
 801ac5c:	f04f 32ff 	mov.w	r2, #4294967295
 801ac60:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801ac64:	9304      	str	r3, [sp, #16]
 801ac66:	9307      	str	r3, [sp, #28]
 801ac68:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801ac6c:	931a      	str	r3, [sp, #104]	; 0x68
 801ac6e:	462f      	mov	r7, r5
 801ac70:	2205      	movs	r2, #5
 801ac72:	f817 1b01 	ldrb.w	r1, [r7], #1
 801ac76:	4850      	ldr	r0, [pc, #320]	; (801adb8 <_svfiprintf_r+0x1dc>)
 801ac78:	f7e5 fad2 	bl	8000220 <memchr>
 801ac7c:	9b04      	ldr	r3, [sp, #16]
 801ac7e:	b9d0      	cbnz	r0, 801acb6 <_svfiprintf_r+0xda>
 801ac80:	06d9      	lsls	r1, r3, #27
 801ac82:	bf44      	itt	mi
 801ac84:	2220      	movmi	r2, #32
 801ac86:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801ac8a:	071a      	lsls	r2, r3, #28
 801ac8c:	bf44      	itt	mi
 801ac8e:	222b      	movmi	r2, #43	; 0x2b
 801ac90:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801ac94:	782a      	ldrb	r2, [r5, #0]
 801ac96:	2a2a      	cmp	r2, #42	; 0x2a
 801ac98:	d015      	beq.n	801acc6 <_svfiprintf_r+0xea>
 801ac9a:	9a07      	ldr	r2, [sp, #28]
 801ac9c:	462f      	mov	r7, r5
 801ac9e:	2000      	movs	r0, #0
 801aca0:	250a      	movs	r5, #10
 801aca2:	4639      	mov	r1, r7
 801aca4:	f811 3b01 	ldrb.w	r3, [r1], #1
 801aca8:	3b30      	subs	r3, #48	; 0x30
 801acaa:	2b09      	cmp	r3, #9
 801acac:	d94d      	bls.n	801ad4a <_svfiprintf_r+0x16e>
 801acae:	b1b8      	cbz	r0, 801ace0 <_svfiprintf_r+0x104>
 801acb0:	e00f      	b.n	801acd2 <_svfiprintf_r+0xf6>
 801acb2:	462f      	mov	r7, r5
 801acb4:	e7b8      	b.n	801ac28 <_svfiprintf_r+0x4c>
 801acb6:	4a40      	ldr	r2, [pc, #256]	; (801adb8 <_svfiprintf_r+0x1dc>)
 801acb8:	1a80      	subs	r0, r0, r2
 801acba:	fa0b f000 	lsl.w	r0, fp, r0
 801acbe:	4318      	orrs	r0, r3
 801acc0:	9004      	str	r0, [sp, #16]
 801acc2:	463d      	mov	r5, r7
 801acc4:	e7d3      	b.n	801ac6e <_svfiprintf_r+0x92>
 801acc6:	9a03      	ldr	r2, [sp, #12]
 801acc8:	1d11      	adds	r1, r2, #4
 801acca:	6812      	ldr	r2, [r2, #0]
 801accc:	9103      	str	r1, [sp, #12]
 801acce:	2a00      	cmp	r2, #0
 801acd0:	db01      	blt.n	801acd6 <_svfiprintf_r+0xfa>
 801acd2:	9207      	str	r2, [sp, #28]
 801acd4:	e004      	b.n	801ace0 <_svfiprintf_r+0x104>
 801acd6:	4252      	negs	r2, r2
 801acd8:	f043 0302 	orr.w	r3, r3, #2
 801acdc:	9207      	str	r2, [sp, #28]
 801acde:	9304      	str	r3, [sp, #16]
 801ace0:	783b      	ldrb	r3, [r7, #0]
 801ace2:	2b2e      	cmp	r3, #46	; 0x2e
 801ace4:	d10c      	bne.n	801ad00 <_svfiprintf_r+0x124>
 801ace6:	787b      	ldrb	r3, [r7, #1]
 801ace8:	2b2a      	cmp	r3, #42	; 0x2a
 801acea:	d133      	bne.n	801ad54 <_svfiprintf_r+0x178>
 801acec:	9b03      	ldr	r3, [sp, #12]
 801acee:	1d1a      	adds	r2, r3, #4
 801acf0:	681b      	ldr	r3, [r3, #0]
 801acf2:	9203      	str	r2, [sp, #12]
 801acf4:	2b00      	cmp	r3, #0
 801acf6:	bfb8      	it	lt
 801acf8:	f04f 33ff 	movlt.w	r3, #4294967295
 801acfc:	3702      	adds	r7, #2
 801acfe:	9305      	str	r3, [sp, #20]
 801ad00:	4d2e      	ldr	r5, [pc, #184]	; (801adbc <_svfiprintf_r+0x1e0>)
 801ad02:	7839      	ldrb	r1, [r7, #0]
 801ad04:	2203      	movs	r2, #3
 801ad06:	4628      	mov	r0, r5
 801ad08:	f7e5 fa8a 	bl	8000220 <memchr>
 801ad0c:	b138      	cbz	r0, 801ad1e <_svfiprintf_r+0x142>
 801ad0e:	2340      	movs	r3, #64	; 0x40
 801ad10:	1b40      	subs	r0, r0, r5
 801ad12:	fa03 f000 	lsl.w	r0, r3, r0
 801ad16:	9b04      	ldr	r3, [sp, #16]
 801ad18:	4303      	orrs	r3, r0
 801ad1a:	3701      	adds	r7, #1
 801ad1c:	9304      	str	r3, [sp, #16]
 801ad1e:	7839      	ldrb	r1, [r7, #0]
 801ad20:	4827      	ldr	r0, [pc, #156]	; (801adc0 <_svfiprintf_r+0x1e4>)
 801ad22:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801ad26:	2206      	movs	r2, #6
 801ad28:	1c7e      	adds	r6, r7, #1
 801ad2a:	f7e5 fa79 	bl	8000220 <memchr>
 801ad2e:	2800      	cmp	r0, #0
 801ad30:	d038      	beq.n	801ada4 <_svfiprintf_r+0x1c8>
 801ad32:	4b24      	ldr	r3, [pc, #144]	; (801adc4 <_svfiprintf_r+0x1e8>)
 801ad34:	bb13      	cbnz	r3, 801ad7c <_svfiprintf_r+0x1a0>
 801ad36:	9b03      	ldr	r3, [sp, #12]
 801ad38:	3307      	adds	r3, #7
 801ad3a:	f023 0307 	bic.w	r3, r3, #7
 801ad3e:	3308      	adds	r3, #8
 801ad40:	9303      	str	r3, [sp, #12]
 801ad42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad44:	444b      	add	r3, r9
 801ad46:	9309      	str	r3, [sp, #36]	; 0x24
 801ad48:	e76d      	b.n	801ac26 <_svfiprintf_r+0x4a>
 801ad4a:	fb05 3202 	mla	r2, r5, r2, r3
 801ad4e:	2001      	movs	r0, #1
 801ad50:	460f      	mov	r7, r1
 801ad52:	e7a6      	b.n	801aca2 <_svfiprintf_r+0xc6>
 801ad54:	2300      	movs	r3, #0
 801ad56:	3701      	adds	r7, #1
 801ad58:	9305      	str	r3, [sp, #20]
 801ad5a:	4619      	mov	r1, r3
 801ad5c:	250a      	movs	r5, #10
 801ad5e:	4638      	mov	r0, r7
 801ad60:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ad64:	3a30      	subs	r2, #48	; 0x30
 801ad66:	2a09      	cmp	r2, #9
 801ad68:	d903      	bls.n	801ad72 <_svfiprintf_r+0x196>
 801ad6a:	2b00      	cmp	r3, #0
 801ad6c:	d0c8      	beq.n	801ad00 <_svfiprintf_r+0x124>
 801ad6e:	9105      	str	r1, [sp, #20]
 801ad70:	e7c6      	b.n	801ad00 <_svfiprintf_r+0x124>
 801ad72:	fb05 2101 	mla	r1, r5, r1, r2
 801ad76:	2301      	movs	r3, #1
 801ad78:	4607      	mov	r7, r0
 801ad7a:	e7f0      	b.n	801ad5e <_svfiprintf_r+0x182>
 801ad7c:	ab03      	add	r3, sp, #12
 801ad7e:	9300      	str	r3, [sp, #0]
 801ad80:	4622      	mov	r2, r4
 801ad82:	4b11      	ldr	r3, [pc, #68]	; (801adc8 <_svfiprintf_r+0x1ec>)
 801ad84:	a904      	add	r1, sp, #16
 801ad86:	4640      	mov	r0, r8
 801ad88:	f3af 8000 	nop.w
 801ad8c:	f1b0 3fff 	cmp.w	r0, #4294967295
 801ad90:	4681      	mov	r9, r0
 801ad92:	d1d6      	bne.n	801ad42 <_svfiprintf_r+0x166>
 801ad94:	89a3      	ldrh	r3, [r4, #12]
 801ad96:	065b      	lsls	r3, r3, #25
 801ad98:	f53f af35 	bmi.w	801ac06 <_svfiprintf_r+0x2a>
 801ad9c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801ad9e:	b01d      	add	sp, #116	; 0x74
 801ada0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ada4:	ab03      	add	r3, sp, #12
 801ada6:	9300      	str	r3, [sp, #0]
 801ada8:	4622      	mov	r2, r4
 801adaa:	4b07      	ldr	r3, [pc, #28]	; (801adc8 <_svfiprintf_r+0x1ec>)
 801adac:	a904      	add	r1, sp, #16
 801adae:	4640      	mov	r0, r8
 801adb0:	f000 f882 	bl	801aeb8 <_printf_i>
 801adb4:	e7ea      	b.n	801ad8c <_svfiprintf_r+0x1b0>
 801adb6:	bf00      	nop
 801adb8:	08021c38 	.word	0x08021c38
 801adbc:	08021c3e 	.word	0x08021c3e
 801adc0:	08021c42 	.word	0x08021c42
 801adc4:	00000000 	.word	0x00000000
 801adc8:	0801ab27 	.word	0x0801ab27

0801adcc <_printf_common>:
 801adcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801add0:	4691      	mov	r9, r2
 801add2:	461f      	mov	r7, r3
 801add4:	688a      	ldr	r2, [r1, #8]
 801add6:	690b      	ldr	r3, [r1, #16]
 801add8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801addc:	4293      	cmp	r3, r2
 801adde:	bfb8      	it	lt
 801ade0:	4613      	movlt	r3, r2
 801ade2:	f8c9 3000 	str.w	r3, [r9]
 801ade6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801adea:	4606      	mov	r6, r0
 801adec:	460c      	mov	r4, r1
 801adee:	b112      	cbz	r2, 801adf6 <_printf_common+0x2a>
 801adf0:	3301      	adds	r3, #1
 801adf2:	f8c9 3000 	str.w	r3, [r9]
 801adf6:	6823      	ldr	r3, [r4, #0]
 801adf8:	0699      	lsls	r1, r3, #26
 801adfa:	bf42      	ittt	mi
 801adfc:	f8d9 3000 	ldrmi.w	r3, [r9]
 801ae00:	3302      	addmi	r3, #2
 801ae02:	f8c9 3000 	strmi.w	r3, [r9]
 801ae06:	6825      	ldr	r5, [r4, #0]
 801ae08:	f015 0506 	ands.w	r5, r5, #6
 801ae0c:	d107      	bne.n	801ae1e <_printf_common+0x52>
 801ae0e:	f104 0a19 	add.w	sl, r4, #25
 801ae12:	68e3      	ldr	r3, [r4, #12]
 801ae14:	f8d9 2000 	ldr.w	r2, [r9]
 801ae18:	1a9b      	subs	r3, r3, r2
 801ae1a:	42ab      	cmp	r3, r5
 801ae1c:	dc28      	bgt.n	801ae70 <_printf_common+0xa4>
 801ae1e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801ae22:	6822      	ldr	r2, [r4, #0]
 801ae24:	3300      	adds	r3, #0
 801ae26:	bf18      	it	ne
 801ae28:	2301      	movne	r3, #1
 801ae2a:	0692      	lsls	r2, r2, #26
 801ae2c:	d42d      	bmi.n	801ae8a <_printf_common+0xbe>
 801ae2e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801ae32:	4639      	mov	r1, r7
 801ae34:	4630      	mov	r0, r6
 801ae36:	47c0      	blx	r8
 801ae38:	3001      	adds	r0, #1
 801ae3a:	d020      	beq.n	801ae7e <_printf_common+0xb2>
 801ae3c:	6823      	ldr	r3, [r4, #0]
 801ae3e:	68e5      	ldr	r5, [r4, #12]
 801ae40:	f8d9 2000 	ldr.w	r2, [r9]
 801ae44:	f003 0306 	and.w	r3, r3, #6
 801ae48:	2b04      	cmp	r3, #4
 801ae4a:	bf08      	it	eq
 801ae4c:	1aad      	subeq	r5, r5, r2
 801ae4e:	68a3      	ldr	r3, [r4, #8]
 801ae50:	6922      	ldr	r2, [r4, #16]
 801ae52:	bf0c      	ite	eq
 801ae54:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801ae58:	2500      	movne	r5, #0
 801ae5a:	4293      	cmp	r3, r2
 801ae5c:	bfc4      	itt	gt
 801ae5e:	1a9b      	subgt	r3, r3, r2
 801ae60:	18ed      	addgt	r5, r5, r3
 801ae62:	f04f 0900 	mov.w	r9, #0
 801ae66:	341a      	adds	r4, #26
 801ae68:	454d      	cmp	r5, r9
 801ae6a:	d11a      	bne.n	801aea2 <_printf_common+0xd6>
 801ae6c:	2000      	movs	r0, #0
 801ae6e:	e008      	b.n	801ae82 <_printf_common+0xb6>
 801ae70:	2301      	movs	r3, #1
 801ae72:	4652      	mov	r2, sl
 801ae74:	4639      	mov	r1, r7
 801ae76:	4630      	mov	r0, r6
 801ae78:	47c0      	blx	r8
 801ae7a:	3001      	adds	r0, #1
 801ae7c:	d103      	bne.n	801ae86 <_printf_common+0xba>
 801ae7e:	f04f 30ff 	mov.w	r0, #4294967295
 801ae82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ae86:	3501      	adds	r5, #1
 801ae88:	e7c3      	b.n	801ae12 <_printf_common+0x46>
 801ae8a:	18e1      	adds	r1, r4, r3
 801ae8c:	1c5a      	adds	r2, r3, #1
 801ae8e:	2030      	movs	r0, #48	; 0x30
 801ae90:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801ae94:	4422      	add	r2, r4
 801ae96:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801ae9a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801ae9e:	3302      	adds	r3, #2
 801aea0:	e7c5      	b.n	801ae2e <_printf_common+0x62>
 801aea2:	2301      	movs	r3, #1
 801aea4:	4622      	mov	r2, r4
 801aea6:	4639      	mov	r1, r7
 801aea8:	4630      	mov	r0, r6
 801aeaa:	47c0      	blx	r8
 801aeac:	3001      	adds	r0, #1
 801aeae:	d0e6      	beq.n	801ae7e <_printf_common+0xb2>
 801aeb0:	f109 0901 	add.w	r9, r9, #1
 801aeb4:	e7d8      	b.n	801ae68 <_printf_common+0x9c>
	...

0801aeb8 <_printf_i>:
 801aeb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801aebc:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801aec0:	460c      	mov	r4, r1
 801aec2:	7e09      	ldrb	r1, [r1, #24]
 801aec4:	b085      	sub	sp, #20
 801aec6:	296e      	cmp	r1, #110	; 0x6e
 801aec8:	4617      	mov	r7, r2
 801aeca:	4606      	mov	r6, r0
 801aecc:	4698      	mov	r8, r3
 801aece:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801aed0:	f000 80b3 	beq.w	801b03a <_printf_i+0x182>
 801aed4:	d822      	bhi.n	801af1c <_printf_i+0x64>
 801aed6:	2963      	cmp	r1, #99	; 0x63
 801aed8:	d036      	beq.n	801af48 <_printf_i+0x90>
 801aeda:	d80a      	bhi.n	801aef2 <_printf_i+0x3a>
 801aedc:	2900      	cmp	r1, #0
 801aede:	f000 80b9 	beq.w	801b054 <_printf_i+0x19c>
 801aee2:	2958      	cmp	r1, #88	; 0x58
 801aee4:	f000 8083 	beq.w	801afee <_printf_i+0x136>
 801aee8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801aeec:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801aef0:	e032      	b.n	801af58 <_printf_i+0xa0>
 801aef2:	2964      	cmp	r1, #100	; 0x64
 801aef4:	d001      	beq.n	801aefa <_printf_i+0x42>
 801aef6:	2969      	cmp	r1, #105	; 0x69
 801aef8:	d1f6      	bne.n	801aee8 <_printf_i+0x30>
 801aefa:	6820      	ldr	r0, [r4, #0]
 801aefc:	6813      	ldr	r3, [r2, #0]
 801aefe:	0605      	lsls	r5, r0, #24
 801af00:	f103 0104 	add.w	r1, r3, #4
 801af04:	d52a      	bpl.n	801af5c <_printf_i+0xa4>
 801af06:	681b      	ldr	r3, [r3, #0]
 801af08:	6011      	str	r1, [r2, #0]
 801af0a:	2b00      	cmp	r3, #0
 801af0c:	da03      	bge.n	801af16 <_printf_i+0x5e>
 801af0e:	222d      	movs	r2, #45	; 0x2d
 801af10:	425b      	negs	r3, r3
 801af12:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801af16:	486f      	ldr	r0, [pc, #444]	; (801b0d4 <_printf_i+0x21c>)
 801af18:	220a      	movs	r2, #10
 801af1a:	e039      	b.n	801af90 <_printf_i+0xd8>
 801af1c:	2973      	cmp	r1, #115	; 0x73
 801af1e:	f000 809d 	beq.w	801b05c <_printf_i+0x1a4>
 801af22:	d808      	bhi.n	801af36 <_printf_i+0x7e>
 801af24:	296f      	cmp	r1, #111	; 0x6f
 801af26:	d020      	beq.n	801af6a <_printf_i+0xb2>
 801af28:	2970      	cmp	r1, #112	; 0x70
 801af2a:	d1dd      	bne.n	801aee8 <_printf_i+0x30>
 801af2c:	6823      	ldr	r3, [r4, #0]
 801af2e:	f043 0320 	orr.w	r3, r3, #32
 801af32:	6023      	str	r3, [r4, #0]
 801af34:	e003      	b.n	801af3e <_printf_i+0x86>
 801af36:	2975      	cmp	r1, #117	; 0x75
 801af38:	d017      	beq.n	801af6a <_printf_i+0xb2>
 801af3a:	2978      	cmp	r1, #120	; 0x78
 801af3c:	d1d4      	bne.n	801aee8 <_printf_i+0x30>
 801af3e:	2378      	movs	r3, #120	; 0x78
 801af40:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801af44:	4864      	ldr	r0, [pc, #400]	; (801b0d8 <_printf_i+0x220>)
 801af46:	e055      	b.n	801aff4 <_printf_i+0x13c>
 801af48:	6813      	ldr	r3, [r2, #0]
 801af4a:	1d19      	adds	r1, r3, #4
 801af4c:	681b      	ldr	r3, [r3, #0]
 801af4e:	6011      	str	r1, [r2, #0]
 801af50:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801af54:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801af58:	2301      	movs	r3, #1
 801af5a:	e08c      	b.n	801b076 <_printf_i+0x1be>
 801af5c:	681b      	ldr	r3, [r3, #0]
 801af5e:	6011      	str	r1, [r2, #0]
 801af60:	f010 0f40 	tst.w	r0, #64	; 0x40
 801af64:	bf18      	it	ne
 801af66:	b21b      	sxthne	r3, r3
 801af68:	e7cf      	b.n	801af0a <_printf_i+0x52>
 801af6a:	6813      	ldr	r3, [r2, #0]
 801af6c:	6825      	ldr	r5, [r4, #0]
 801af6e:	1d18      	adds	r0, r3, #4
 801af70:	6010      	str	r0, [r2, #0]
 801af72:	0628      	lsls	r0, r5, #24
 801af74:	d501      	bpl.n	801af7a <_printf_i+0xc2>
 801af76:	681b      	ldr	r3, [r3, #0]
 801af78:	e002      	b.n	801af80 <_printf_i+0xc8>
 801af7a:	0668      	lsls	r0, r5, #25
 801af7c:	d5fb      	bpl.n	801af76 <_printf_i+0xbe>
 801af7e:	881b      	ldrh	r3, [r3, #0]
 801af80:	4854      	ldr	r0, [pc, #336]	; (801b0d4 <_printf_i+0x21c>)
 801af82:	296f      	cmp	r1, #111	; 0x6f
 801af84:	bf14      	ite	ne
 801af86:	220a      	movne	r2, #10
 801af88:	2208      	moveq	r2, #8
 801af8a:	2100      	movs	r1, #0
 801af8c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801af90:	6865      	ldr	r5, [r4, #4]
 801af92:	60a5      	str	r5, [r4, #8]
 801af94:	2d00      	cmp	r5, #0
 801af96:	f2c0 8095 	blt.w	801b0c4 <_printf_i+0x20c>
 801af9a:	6821      	ldr	r1, [r4, #0]
 801af9c:	f021 0104 	bic.w	r1, r1, #4
 801afa0:	6021      	str	r1, [r4, #0]
 801afa2:	2b00      	cmp	r3, #0
 801afa4:	d13d      	bne.n	801b022 <_printf_i+0x16a>
 801afa6:	2d00      	cmp	r5, #0
 801afa8:	f040 808e 	bne.w	801b0c8 <_printf_i+0x210>
 801afac:	4665      	mov	r5, ip
 801afae:	2a08      	cmp	r2, #8
 801afb0:	d10b      	bne.n	801afca <_printf_i+0x112>
 801afb2:	6823      	ldr	r3, [r4, #0]
 801afb4:	07db      	lsls	r3, r3, #31
 801afb6:	d508      	bpl.n	801afca <_printf_i+0x112>
 801afb8:	6923      	ldr	r3, [r4, #16]
 801afba:	6862      	ldr	r2, [r4, #4]
 801afbc:	429a      	cmp	r2, r3
 801afbe:	bfde      	ittt	le
 801afc0:	2330      	movle	r3, #48	; 0x30
 801afc2:	f805 3c01 	strble.w	r3, [r5, #-1]
 801afc6:	f105 35ff 	addle.w	r5, r5, #4294967295
 801afca:	ebac 0305 	sub.w	r3, ip, r5
 801afce:	6123      	str	r3, [r4, #16]
 801afd0:	f8cd 8000 	str.w	r8, [sp]
 801afd4:	463b      	mov	r3, r7
 801afd6:	aa03      	add	r2, sp, #12
 801afd8:	4621      	mov	r1, r4
 801afda:	4630      	mov	r0, r6
 801afdc:	f7ff fef6 	bl	801adcc <_printf_common>
 801afe0:	3001      	adds	r0, #1
 801afe2:	d14d      	bne.n	801b080 <_printf_i+0x1c8>
 801afe4:	f04f 30ff 	mov.w	r0, #4294967295
 801afe8:	b005      	add	sp, #20
 801afea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801afee:	4839      	ldr	r0, [pc, #228]	; (801b0d4 <_printf_i+0x21c>)
 801aff0:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801aff4:	6813      	ldr	r3, [r2, #0]
 801aff6:	6821      	ldr	r1, [r4, #0]
 801aff8:	1d1d      	adds	r5, r3, #4
 801affa:	681b      	ldr	r3, [r3, #0]
 801affc:	6015      	str	r5, [r2, #0]
 801affe:	060a      	lsls	r2, r1, #24
 801b000:	d50b      	bpl.n	801b01a <_printf_i+0x162>
 801b002:	07ca      	lsls	r2, r1, #31
 801b004:	bf44      	itt	mi
 801b006:	f041 0120 	orrmi.w	r1, r1, #32
 801b00a:	6021      	strmi	r1, [r4, #0]
 801b00c:	b91b      	cbnz	r3, 801b016 <_printf_i+0x15e>
 801b00e:	6822      	ldr	r2, [r4, #0]
 801b010:	f022 0220 	bic.w	r2, r2, #32
 801b014:	6022      	str	r2, [r4, #0]
 801b016:	2210      	movs	r2, #16
 801b018:	e7b7      	b.n	801af8a <_printf_i+0xd2>
 801b01a:	064d      	lsls	r5, r1, #25
 801b01c:	bf48      	it	mi
 801b01e:	b29b      	uxthmi	r3, r3
 801b020:	e7ef      	b.n	801b002 <_printf_i+0x14a>
 801b022:	4665      	mov	r5, ip
 801b024:	fbb3 f1f2 	udiv	r1, r3, r2
 801b028:	fb02 3311 	mls	r3, r2, r1, r3
 801b02c:	5cc3      	ldrb	r3, [r0, r3]
 801b02e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801b032:	460b      	mov	r3, r1
 801b034:	2900      	cmp	r1, #0
 801b036:	d1f5      	bne.n	801b024 <_printf_i+0x16c>
 801b038:	e7b9      	b.n	801afae <_printf_i+0xf6>
 801b03a:	6813      	ldr	r3, [r2, #0]
 801b03c:	6825      	ldr	r5, [r4, #0]
 801b03e:	6961      	ldr	r1, [r4, #20]
 801b040:	1d18      	adds	r0, r3, #4
 801b042:	6010      	str	r0, [r2, #0]
 801b044:	0628      	lsls	r0, r5, #24
 801b046:	681b      	ldr	r3, [r3, #0]
 801b048:	d501      	bpl.n	801b04e <_printf_i+0x196>
 801b04a:	6019      	str	r1, [r3, #0]
 801b04c:	e002      	b.n	801b054 <_printf_i+0x19c>
 801b04e:	066a      	lsls	r2, r5, #25
 801b050:	d5fb      	bpl.n	801b04a <_printf_i+0x192>
 801b052:	8019      	strh	r1, [r3, #0]
 801b054:	2300      	movs	r3, #0
 801b056:	6123      	str	r3, [r4, #16]
 801b058:	4665      	mov	r5, ip
 801b05a:	e7b9      	b.n	801afd0 <_printf_i+0x118>
 801b05c:	6813      	ldr	r3, [r2, #0]
 801b05e:	1d19      	adds	r1, r3, #4
 801b060:	6011      	str	r1, [r2, #0]
 801b062:	681d      	ldr	r5, [r3, #0]
 801b064:	6862      	ldr	r2, [r4, #4]
 801b066:	2100      	movs	r1, #0
 801b068:	4628      	mov	r0, r5
 801b06a:	f7e5 f8d9 	bl	8000220 <memchr>
 801b06e:	b108      	cbz	r0, 801b074 <_printf_i+0x1bc>
 801b070:	1b40      	subs	r0, r0, r5
 801b072:	6060      	str	r0, [r4, #4]
 801b074:	6863      	ldr	r3, [r4, #4]
 801b076:	6123      	str	r3, [r4, #16]
 801b078:	2300      	movs	r3, #0
 801b07a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801b07e:	e7a7      	b.n	801afd0 <_printf_i+0x118>
 801b080:	6923      	ldr	r3, [r4, #16]
 801b082:	462a      	mov	r2, r5
 801b084:	4639      	mov	r1, r7
 801b086:	4630      	mov	r0, r6
 801b088:	47c0      	blx	r8
 801b08a:	3001      	adds	r0, #1
 801b08c:	d0aa      	beq.n	801afe4 <_printf_i+0x12c>
 801b08e:	6823      	ldr	r3, [r4, #0]
 801b090:	079b      	lsls	r3, r3, #30
 801b092:	d413      	bmi.n	801b0bc <_printf_i+0x204>
 801b094:	68e0      	ldr	r0, [r4, #12]
 801b096:	9b03      	ldr	r3, [sp, #12]
 801b098:	4298      	cmp	r0, r3
 801b09a:	bfb8      	it	lt
 801b09c:	4618      	movlt	r0, r3
 801b09e:	e7a3      	b.n	801afe8 <_printf_i+0x130>
 801b0a0:	2301      	movs	r3, #1
 801b0a2:	464a      	mov	r2, r9
 801b0a4:	4639      	mov	r1, r7
 801b0a6:	4630      	mov	r0, r6
 801b0a8:	47c0      	blx	r8
 801b0aa:	3001      	adds	r0, #1
 801b0ac:	d09a      	beq.n	801afe4 <_printf_i+0x12c>
 801b0ae:	3501      	adds	r5, #1
 801b0b0:	68e3      	ldr	r3, [r4, #12]
 801b0b2:	9a03      	ldr	r2, [sp, #12]
 801b0b4:	1a9b      	subs	r3, r3, r2
 801b0b6:	42ab      	cmp	r3, r5
 801b0b8:	dcf2      	bgt.n	801b0a0 <_printf_i+0x1e8>
 801b0ba:	e7eb      	b.n	801b094 <_printf_i+0x1dc>
 801b0bc:	2500      	movs	r5, #0
 801b0be:	f104 0919 	add.w	r9, r4, #25
 801b0c2:	e7f5      	b.n	801b0b0 <_printf_i+0x1f8>
 801b0c4:	2b00      	cmp	r3, #0
 801b0c6:	d1ac      	bne.n	801b022 <_printf_i+0x16a>
 801b0c8:	7803      	ldrb	r3, [r0, #0]
 801b0ca:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801b0ce:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b0d2:	e76c      	b.n	801afae <_printf_i+0xf6>
 801b0d4:	08021c49 	.word	0x08021c49
 801b0d8:	08021c5a 	.word	0x08021c5a

0801b0dc <_free_r>:
 801b0dc:	b538      	push	{r3, r4, r5, lr}
 801b0de:	4605      	mov	r5, r0
 801b0e0:	2900      	cmp	r1, #0
 801b0e2:	d045      	beq.n	801b170 <_free_r+0x94>
 801b0e4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b0e8:	1f0c      	subs	r4, r1, #4
 801b0ea:	2b00      	cmp	r3, #0
 801b0ec:	bfb8      	it	lt
 801b0ee:	18e4      	addlt	r4, r4, r3
 801b0f0:	f000 f8d2 	bl	801b298 <__malloc_lock>
 801b0f4:	4a1f      	ldr	r2, [pc, #124]	; (801b174 <_free_r+0x98>)
 801b0f6:	6813      	ldr	r3, [r2, #0]
 801b0f8:	4610      	mov	r0, r2
 801b0fa:	b933      	cbnz	r3, 801b10a <_free_r+0x2e>
 801b0fc:	6063      	str	r3, [r4, #4]
 801b0fe:	6014      	str	r4, [r2, #0]
 801b100:	4628      	mov	r0, r5
 801b102:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b106:	f000 b8c8 	b.w	801b29a <__malloc_unlock>
 801b10a:	42a3      	cmp	r3, r4
 801b10c:	d90c      	bls.n	801b128 <_free_r+0x4c>
 801b10e:	6821      	ldr	r1, [r4, #0]
 801b110:	1862      	adds	r2, r4, r1
 801b112:	4293      	cmp	r3, r2
 801b114:	bf04      	itt	eq
 801b116:	681a      	ldreq	r2, [r3, #0]
 801b118:	685b      	ldreq	r3, [r3, #4]
 801b11a:	6063      	str	r3, [r4, #4]
 801b11c:	bf04      	itt	eq
 801b11e:	1852      	addeq	r2, r2, r1
 801b120:	6022      	streq	r2, [r4, #0]
 801b122:	6004      	str	r4, [r0, #0]
 801b124:	e7ec      	b.n	801b100 <_free_r+0x24>
 801b126:	4613      	mov	r3, r2
 801b128:	685a      	ldr	r2, [r3, #4]
 801b12a:	b10a      	cbz	r2, 801b130 <_free_r+0x54>
 801b12c:	42a2      	cmp	r2, r4
 801b12e:	d9fa      	bls.n	801b126 <_free_r+0x4a>
 801b130:	6819      	ldr	r1, [r3, #0]
 801b132:	1858      	adds	r0, r3, r1
 801b134:	42a0      	cmp	r0, r4
 801b136:	d10b      	bne.n	801b150 <_free_r+0x74>
 801b138:	6820      	ldr	r0, [r4, #0]
 801b13a:	4401      	add	r1, r0
 801b13c:	1858      	adds	r0, r3, r1
 801b13e:	4282      	cmp	r2, r0
 801b140:	6019      	str	r1, [r3, #0]
 801b142:	d1dd      	bne.n	801b100 <_free_r+0x24>
 801b144:	6810      	ldr	r0, [r2, #0]
 801b146:	6852      	ldr	r2, [r2, #4]
 801b148:	605a      	str	r2, [r3, #4]
 801b14a:	4401      	add	r1, r0
 801b14c:	6019      	str	r1, [r3, #0]
 801b14e:	e7d7      	b.n	801b100 <_free_r+0x24>
 801b150:	d902      	bls.n	801b158 <_free_r+0x7c>
 801b152:	230c      	movs	r3, #12
 801b154:	602b      	str	r3, [r5, #0]
 801b156:	e7d3      	b.n	801b100 <_free_r+0x24>
 801b158:	6820      	ldr	r0, [r4, #0]
 801b15a:	1821      	adds	r1, r4, r0
 801b15c:	428a      	cmp	r2, r1
 801b15e:	bf04      	itt	eq
 801b160:	6811      	ldreq	r1, [r2, #0]
 801b162:	6852      	ldreq	r2, [r2, #4]
 801b164:	6062      	str	r2, [r4, #4]
 801b166:	bf04      	itt	eq
 801b168:	1809      	addeq	r1, r1, r0
 801b16a:	6021      	streq	r1, [r4, #0]
 801b16c:	605c      	str	r4, [r3, #4]
 801b16e:	e7c7      	b.n	801b100 <_free_r+0x24>
 801b170:	bd38      	pop	{r3, r4, r5, pc}
 801b172:	bf00      	nop
 801b174:	20019740 	.word	0x20019740

0801b178 <_malloc_r>:
 801b178:	b570      	push	{r4, r5, r6, lr}
 801b17a:	1ccd      	adds	r5, r1, #3
 801b17c:	f025 0503 	bic.w	r5, r5, #3
 801b180:	3508      	adds	r5, #8
 801b182:	2d0c      	cmp	r5, #12
 801b184:	bf38      	it	cc
 801b186:	250c      	movcc	r5, #12
 801b188:	2d00      	cmp	r5, #0
 801b18a:	4606      	mov	r6, r0
 801b18c:	db01      	blt.n	801b192 <_malloc_r+0x1a>
 801b18e:	42a9      	cmp	r1, r5
 801b190:	d903      	bls.n	801b19a <_malloc_r+0x22>
 801b192:	230c      	movs	r3, #12
 801b194:	6033      	str	r3, [r6, #0]
 801b196:	2000      	movs	r0, #0
 801b198:	bd70      	pop	{r4, r5, r6, pc}
 801b19a:	f000 f87d 	bl	801b298 <__malloc_lock>
 801b19e:	4a21      	ldr	r2, [pc, #132]	; (801b224 <_malloc_r+0xac>)
 801b1a0:	6814      	ldr	r4, [r2, #0]
 801b1a2:	4621      	mov	r1, r4
 801b1a4:	b991      	cbnz	r1, 801b1cc <_malloc_r+0x54>
 801b1a6:	4c20      	ldr	r4, [pc, #128]	; (801b228 <_malloc_r+0xb0>)
 801b1a8:	6823      	ldr	r3, [r4, #0]
 801b1aa:	b91b      	cbnz	r3, 801b1b4 <_malloc_r+0x3c>
 801b1ac:	4630      	mov	r0, r6
 801b1ae:	f000 f863 	bl	801b278 <_sbrk_r>
 801b1b2:	6020      	str	r0, [r4, #0]
 801b1b4:	4629      	mov	r1, r5
 801b1b6:	4630      	mov	r0, r6
 801b1b8:	f000 f85e 	bl	801b278 <_sbrk_r>
 801b1bc:	1c43      	adds	r3, r0, #1
 801b1be:	d124      	bne.n	801b20a <_malloc_r+0x92>
 801b1c0:	230c      	movs	r3, #12
 801b1c2:	6033      	str	r3, [r6, #0]
 801b1c4:	4630      	mov	r0, r6
 801b1c6:	f000 f868 	bl	801b29a <__malloc_unlock>
 801b1ca:	e7e4      	b.n	801b196 <_malloc_r+0x1e>
 801b1cc:	680b      	ldr	r3, [r1, #0]
 801b1ce:	1b5b      	subs	r3, r3, r5
 801b1d0:	d418      	bmi.n	801b204 <_malloc_r+0x8c>
 801b1d2:	2b0b      	cmp	r3, #11
 801b1d4:	d90f      	bls.n	801b1f6 <_malloc_r+0x7e>
 801b1d6:	600b      	str	r3, [r1, #0]
 801b1d8:	50cd      	str	r5, [r1, r3]
 801b1da:	18cc      	adds	r4, r1, r3
 801b1dc:	4630      	mov	r0, r6
 801b1de:	f000 f85c 	bl	801b29a <__malloc_unlock>
 801b1e2:	f104 000b 	add.w	r0, r4, #11
 801b1e6:	1d23      	adds	r3, r4, #4
 801b1e8:	f020 0007 	bic.w	r0, r0, #7
 801b1ec:	1ac3      	subs	r3, r0, r3
 801b1ee:	d0d3      	beq.n	801b198 <_malloc_r+0x20>
 801b1f0:	425a      	negs	r2, r3
 801b1f2:	50e2      	str	r2, [r4, r3]
 801b1f4:	e7d0      	b.n	801b198 <_malloc_r+0x20>
 801b1f6:	428c      	cmp	r4, r1
 801b1f8:	684b      	ldr	r3, [r1, #4]
 801b1fa:	bf16      	itet	ne
 801b1fc:	6063      	strne	r3, [r4, #4]
 801b1fe:	6013      	streq	r3, [r2, #0]
 801b200:	460c      	movne	r4, r1
 801b202:	e7eb      	b.n	801b1dc <_malloc_r+0x64>
 801b204:	460c      	mov	r4, r1
 801b206:	6849      	ldr	r1, [r1, #4]
 801b208:	e7cc      	b.n	801b1a4 <_malloc_r+0x2c>
 801b20a:	1cc4      	adds	r4, r0, #3
 801b20c:	f024 0403 	bic.w	r4, r4, #3
 801b210:	42a0      	cmp	r0, r4
 801b212:	d005      	beq.n	801b220 <_malloc_r+0xa8>
 801b214:	1a21      	subs	r1, r4, r0
 801b216:	4630      	mov	r0, r6
 801b218:	f000 f82e 	bl	801b278 <_sbrk_r>
 801b21c:	3001      	adds	r0, #1
 801b21e:	d0cf      	beq.n	801b1c0 <_malloc_r+0x48>
 801b220:	6025      	str	r5, [r4, #0]
 801b222:	e7db      	b.n	801b1dc <_malloc_r+0x64>
 801b224:	20019740 	.word	0x20019740
 801b228:	20019744 	.word	0x20019744

0801b22c <_realloc_r>:
 801b22c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b22e:	4607      	mov	r7, r0
 801b230:	4614      	mov	r4, r2
 801b232:	460e      	mov	r6, r1
 801b234:	b921      	cbnz	r1, 801b240 <_realloc_r+0x14>
 801b236:	4611      	mov	r1, r2
 801b238:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801b23c:	f7ff bf9c 	b.w	801b178 <_malloc_r>
 801b240:	b922      	cbnz	r2, 801b24c <_realloc_r+0x20>
 801b242:	f7ff ff4b 	bl	801b0dc <_free_r>
 801b246:	4625      	mov	r5, r4
 801b248:	4628      	mov	r0, r5
 801b24a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b24c:	f000 f826 	bl	801b29c <_malloc_usable_size_r>
 801b250:	42a0      	cmp	r0, r4
 801b252:	d20f      	bcs.n	801b274 <_realloc_r+0x48>
 801b254:	4621      	mov	r1, r4
 801b256:	4638      	mov	r0, r7
 801b258:	f7ff ff8e 	bl	801b178 <_malloc_r>
 801b25c:	4605      	mov	r5, r0
 801b25e:	2800      	cmp	r0, #0
 801b260:	d0f2      	beq.n	801b248 <_realloc_r+0x1c>
 801b262:	4631      	mov	r1, r6
 801b264:	4622      	mov	r2, r4
 801b266:	f7ff fbf4 	bl	801aa52 <memcpy>
 801b26a:	4631      	mov	r1, r6
 801b26c:	4638      	mov	r0, r7
 801b26e:	f7ff ff35 	bl	801b0dc <_free_r>
 801b272:	e7e9      	b.n	801b248 <_realloc_r+0x1c>
 801b274:	4635      	mov	r5, r6
 801b276:	e7e7      	b.n	801b248 <_realloc_r+0x1c>

0801b278 <_sbrk_r>:
 801b278:	b538      	push	{r3, r4, r5, lr}
 801b27a:	4c06      	ldr	r4, [pc, #24]	; (801b294 <_sbrk_r+0x1c>)
 801b27c:	2300      	movs	r3, #0
 801b27e:	4605      	mov	r5, r0
 801b280:	4608      	mov	r0, r1
 801b282:	6023      	str	r3, [r4, #0]
 801b284:	f7ed ffa4 	bl	80091d0 <_sbrk>
 801b288:	1c43      	adds	r3, r0, #1
 801b28a:	d102      	bne.n	801b292 <_sbrk_r+0x1a>
 801b28c:	6823      	ldr	r3, [r4, #0]
 801b28e:	b103      	cbz	r3, 801b292 <_sbrk_r+0x1a>
 801b290:	602b      	str	r3, [r5, #0]
 801b292:	bd38      	pop	{r3, r4, r5, pc}
 801b294:	20019dac 	.word	0x20019dac

0801b298 <__malloc_lock>:
 801b298:	4770      	bx	lr

0801b29a <__malloc_unlock>:
 801b29a:	4770      	bx	lr

0801b29c <_malloc_usable_size_r>:
 801b29c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b2a0:	1f18      	subs	r0, r3, #4
 801b2a2:	2b00      	cmp	r3, #0
 801b2a4:	bfbc      	itt	lt
 801b2a6:	580b      	ldrlt	r3, [r1, r0]
 801b2a8:	18c0      	addlt	r0, r0, r3
 801b2aa:	4770      	bx	lr

0801b2ac <_init>:
 801b2ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b2ae:	bf00      	nop
 801b2b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b2b2:	bc08      	pop	{r3}
 801b2b4:	469e      	mov	lr, r3
 801b2b6:	4770      	bx	lr

0801b2b8 <_fini>:
 801b2b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b2ba:	bf00      	nop
 801b2bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b2be:	bc08      	pop	{r3}
 801b2c0:	469e      	mov	lr, r3
 801b2c2:	4770      	bx	lr
