
LightRanger4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001a984  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00006998  0801ab54  0801ab54  0002ab54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080214ec  080214ec  000403fc  2**0
                  CONTENTS
  4 .ARM          00000008  080214ec  080214ec  000314ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080214f4  080214f4  000403fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080214f4  080214f4  000314f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080214f8  080214f8  000314f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000003fc  20000000  080214fc  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000199b0  200003fc  080218f8  000403fc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20019dac  080218f8  00049dac  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000403fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0004c69b  00000000  00000000  0004042a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00005f18  00000000  00000000  0008cac5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000291d3  00000000  00000000  000929dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00001910  00000000  00000000  000bbbb0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00006e70  00000000  00000000  000bd4c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  0003253d  00000000  00000000  000c4330  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   0001fcc0  00000000  00000000  000f686d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    0012b52d  00000000  00000000  0011652d  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      000000fd  00000000  00000000  00241a5a  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00005efc  00000000  00000000  00241b58  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200003fc 	.word	0x200003fc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0801ab3c 	.word	0x0801ab3c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000400 	.word	0x20000400
 800020c:	0801ab3c 	.word	0x0801ab3c

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__aeabi_d2iz>:
 8000a5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a60:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a64:	d215      	bcs.n	8000a92 <__aeabi_d2iz+0x36>
 8000a66:	d511      	bpl.n	8000a8c <__aeabi_d2iz+0x30>
 8000a68:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a6c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a70:	d912      	bls.n	8000a98 <__aeabi_d2iz+0x3c>
 8000a72:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a76:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a7a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a82:	fa23 f002 	lsr.w	r0, r3, r2
 8000a86:	bf18      	it	ne
 8000a88:	4240      	negne	r0, r0
 8000a8a:	4770      	bx	lr
 8000a8c:	f04f 0000 	mov.w	r0, #0
 8000a90:	4770      	bx	lr
 8000a92:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a96:	d105      	bne.n	8000aa4 <__aeabi_d2iz+0x48>
 8000a98:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a9c:	bf08      	it	eq
 8000a9e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000aa2:	4770      	bx	lr
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	bf00      	nop

08000aac <__aeabi_d2f>:
 8000aac:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ab0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ab4:	bf24      	itt	cs
 8000ab6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000aba:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000abe:	d90d      	bls.n	8000adc <__aeabi_d2f+0x30>
 8000ac0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ac4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ac8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000acc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000ad0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000ad4:	bf08      	it	eq
 8000ad6:	f020 0001 	biceq.w	r0, r0, #1
 8000ada:	4770      	bx	lr
 8000adc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000ae0:	d121      	bne.n	8000b26 <__aeabi_d2f+0x7a>
 8000ae2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000ae6:	bfbc      	itt	lt
 8000ae8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000aec:	4770      	bxlt	lr
 8000aee:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000af2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000af6:	f1c2 0218 	rsb	r2, r2, #24
 8000afa:	f1c2 0c20 	rsb	ip, r2, #32
 8000afe:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b02:	fa20 f002 	lsr.w	r0, r0, r2
 8000b06:	bf18      	it	ne
 8000b08:	f040 0001 	orrne.w	r0, r0, #1
 8000b0c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b10:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b14:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b18:	ea40 000c 	orr.w	r0, r0, ip
 8000b1c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b20:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b24:	e7cc      	b.n	8000ac0 <__aeabi_d2f+0x14>
 8000b26:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b2a:	d107      	bne.n	8000b3c <__aeabi_d2f+0x90>
 8000b2c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b30:	bf1e      	ittt	ne
 8000b32:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b36:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b3a:	4770      	bxne	lr
 8000b3c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b40:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b44:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b48:	4770      	bx	lr
 8000b4a:	bf00      	nop

08000b4c <__aeabi_uldivmod>:
 8000b4c:	b953      	cbnz	r3, 8000b64 <__aeabi_uldivmod+0x18>
 8000b4e:	b94a      	cbnz	r2, 8000b64 <__aeabi_uldivmod+0x18>
 8000b50:	2900      	cmp	r1, #0
 8000b52:	bf08      	it	eq
 8000b54:	2800      	cmpeq	r0, #0
 8000b56:	bf1c      	itt	ne
 8000b58:	f04f 31ff 	movne.w	r1, #4294967295
 8000b5c:	f04f 30ff 	movne.w	r0, #4294967295
 8000b60:	f000 b972 	b.w	8000e48 <__aeabi_idiv0>
 8000b64:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b68:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b6c:	f000 f806 	bl	8000b7c <__udivmoddi4>
 8000b70:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b78:	b004      	add	sp, #16
 8000b7a:	4770      	bx	lr

08000b7c <__udivmoddi4>:
 8000b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b80:	9e08      	ldr	r6, [sp, #32]
 8000b82:	4604      	mov	r4, r0
 8000b84:	4688      	mov	r8, r1
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	d14b      	bne.n	8000c22 <__udivmoddi4+0xa6>
 8000b8a:	428a      	cmp	r2, r1
 8000b8c:	4615      	mov	r5, r2
 8000b8e:	d967      	bls.n	8000c60 <__udivmoddi4+0xe4>
 8000b90:	fab2 f282 	clz	r2, r2
 8000b94:	b14a      	cbz	r2, 8000baa <__udivmoddi4+0x2e>
 8000b96:	f1c2 0720 	rsb	r7, r2, #32
 8000b9a:	fa01 f302 	lsl.w	r3, r1, r2
 8000b9e:	fa20 f707 	lsr.w	r7, r0, r7
 8000ba2:	4095      	lsls	r5, r2
 8000ba4:	ea47 0803 	orr.w	r8, r7, r3
 8000ba8:	4094      	lsls	r4, r2
 8000baa:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000bae:	0c23      	lsrs	r3, r4, #16
 8000bb0:	fbb8 f7fe 	udiv	r7, r8, lr
 8000bb4:	fa1f fc85 	uxth.w	ip, r5
 8000bb8:	fb0e 8817 	mls	r8, lr, r7, r8
 8000bbc:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bc0:	fb07 f10c 	mul.w	r1, r7, ip
 8000bc4:	4299      	cmp	r1, r3
 8000bc6:	d909      	bls.n	8000bdc <__udivmoddi4+0x60>
 8000bc8:	18eb      	adds	r3, r5, r3
 8000bca:	f107 30ff 	add.w	r0, r7, #4294967295
 8000bce:	f080 811b 	bcs.w	8000e08 <__udivmoddi4+0x28c>
 8000bd2:	4299      	cmp	r1, r3
 8000bd4:	f240 8118 	bls.w	8000e08 <__udivmoddi4+0x28c>
 8000bd8:	3f02      	subs	r7, #2
 8000bda:	442b      	add	r3, r5
 8000bdc:	1a5b      	subs	r3, r3, r1
 8000bde:	b2a4      	uxth	r4, r4
 8000be0:	fbb3 f0fe 	udiv	r0, r3, lr
 8000be4:	fb0e 3310 	mls	r3, lr, r0, r3
 8000be8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000bec:	fb00 fc0c 	mul.w	ip, r0, ip
 8000bf0:	45a4      	cmp	ip, r4
 8000bf2:	d909      	bls.n	8000c08 <__udivmoddi4+0x8c>
 8000bf4:	192c      	adds	r4, r5, r4
 8000bf6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000bfa:	f080 8107 	bcs.w	8000e0c <__udivmoddi4+0x290>
 8000bfe:	45a4      	cmp	ip, r4
 8000c00:	f240 8104 	bls.w	8000e0c <__udivmoddi4+0x290>
 8000c04:	3802      	subs	r0, #2
 8000c06:	442c      	add	r4, r5
 8000c08:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000c0c:	eba4 040c 	sub.w	r4, r4, ip
 8000c10:	2700      	movs	r7, #0
 8000c12:	b11e      	cbz	r6, 8000c1c <__udivmoddi4+0xa0>
 8000c14:	40d4      	lsrs	r4, r2
 8000c16:	2300      	movs	r3, #0
 8000c18:	e9c6 4300 	strd	r4, r3, [r6]
 8000c1c:	4639      	mov	r1, r7
 8000c1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c22:	428b      	cmp	r3, r1
 8000c24:	d909      	bls.n	8000c3a <__udivmoddi4+0xbe>
 8000c26:	2e00      	cmp	r6, #0
 8000c28:	f000 80eb 	beq.w	8000e02 <__udivmoddi4+0x286>
 8000c2c:	2700      	movs	r7, #0
 8000c2e:	e9c6 0100 	strd	r0, r1, [r6]
 8000c32:	4638      	mov	r0, r7
 8000c34:	4639      	mov	r1, r7
 8000c36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c3a:	fab3 f783 	clz	r7, r3
 8000c3e:	2f00      	cmp	r7, #0
 8000c40:	d147      	bne.n	8000cd2 <__udivmoddi4+0x156>
 8000c42:	428b      	cmp	r3, r1
 8000c44:	d302      	bcc.n	8000c4c <__udivmoddi4+0xd0>
 8000c46:	4282      	cmp	r2, r0
 8000c48:	f200 80fa 	bhi.w	8000e40 <__udivmoddi4+0x2c4>
 8000c4c:	1a84      	subs	r4, r0, r2
 8000c4e:	eb61 0303 	sbc.w	r3, r1, r3
 8000c52:	2001      	movs	r0, #1
 8000c54:	4698      	mov	r8, r3
 8000c56:	2e00      	cmp	r6, #0
 8000c58:	d0e0      	beq.n	8000c1c <__udivmoddi4+0xa0>
 8000c5a:	e9c6 4800 	strd	r4, r8, [r6]
 8000c5e:	e7dd      	b.n	8000c1c <__udivmoddi4+0xa0>
 8000c60:	b902      	cbnz	r2, 8000c64 <__udivmoddi4+0xe8>
 8000c62:	deff      	udf	#255	; 0xff
 8000c64:	fab2 f282 	clz	r2, r2
 8000c68:	2a00      	cmp	r2, #0
 8000c6a:	f040 808f 	bne.w	8000d8c <__udivmoddi4+0x210>
 8000c6e:	1b49      	subs	r1, r1, r5
 8000c70:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c74:	fa1f f885 	uxth.w	r8, r5
 8000c78:	2701      	movs	r7, #1
 8000c7a:	fbb1 fcfe 	udiv	ip, r1, lr
 8000c7e:	0c23      	lsrs	r3, r4, #16
 8000c80:	fb0e 111c 	mls	r1, lr, ip, r1
 8000c84:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c88:	fb08 f10c 	mul.w	r1, r8, ip
 8000c8c:	4299      	cmp	r1, r3
 8000c8e:	d907      	bls.n	8000ca0 <__udivmoddi4+0x124>
 8000c90:	18eb      	adds	r3, r5, r3
 8000c92:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000c96:	d202      	bcs.n	8000c9e <__udivmoddi4+0x122>
 8000c98:	4299      	cmp	r1, r3
 8000c9a:	f200 80cd 	bhi.w	8000e38 <__udivmoddi4+0x2bc>
 8000c9e:	4684      	mov	ip, r0
 8000ca0:	1a59      	subs	r1, r3, r1
 8000ca2:	b2a3      	uxth	r3, r4
 8000ca4:	fbb1 f0fe 	udiv	r0, r1, lr
 8000ca8:	fb0e 1410 	mls	r4, lr, r0, r1
 8000cac:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000cb0:	fb08 f800 	mul.w	r8, r8, r0
 8000cb4:	45a0      	cmp	r8, r4
 8000cb6:	d907      	bls.n	8000cc8 <__udivmoddi4+0x14c>
 8000cb8:	192c      	adds	r4, r5, r4
 8000cba:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cbe:	d202      	bcs.n	8000cc6 <__udivmoddi4+0x14a>
 8000cc0:	45a0      	cmp	r8, r4
 8000cc2:	f200 80b6 	bhi.w	8000e32 <__udivmoddi4+0x2b6>
 8000cc6:	4618      	mov	r0, r3
 8000cc8:	eba4 0408 	sub.w	r4, r4, r8
 8000ccc:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000cd0:	e79f      	b.n	8000c12 <__udivmoddi4+0x96>
 8000cd2:	f1c7 0c20 	rsb	ip, r7, #32
 8000cd6:	40bb      	lsls	r3, r7
 8000cd8:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000cdc:	ea4e 0e03 	orr.w	lr, lr, r3
 8000ce0:	fa01 f407 	lsl.w	r4, r1, r7
 8000ce4:	fa20 f50c 	lsr.w	r5, r0, ip
 8000ce8:	fa21 f30c 	lsr.w	r3, r1, ip
 8000cec:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000cf0:	4325      	orrs	r5, r4
 8000cf2:	fbb3 f9f8 	udiv	r9, r3, r8
 8000cf6:	0c2c      	lsrs	r4, r5, #16
 8000cf8:	fb08 3319 	mls	r3, r8, r9, r3
 8000cfc:	fa1f fa8e 	uxth.w	sl, lr
 8000d00:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000d04:	fb09 f40a 	mul.w	r4, r9, sl
 8000d08:	429c      	cmp	r4, r3
 8000d0a:	fa02 f207 	lsl.w	r2, r2, r7
 8000d0e:	fa00 f107 	lsl.w	r1, r0, r7
 8000d12:	d90b      	bls.n	8000d2c <__udivmoddi4+0x1b0>
 8000d14:	eb1e 0303 	adds.w	r3, lr, r3
 8000d18:	f109 30ff 	add.w	r0, r9, #4294967295
 8000d1c:	f080 8087 	bcs.w	8000e2e <__udivmoddi4+0x2b2>
 8000d20:	429c      	cmp	r4, r3
 8000d22:	f240 8084 	bls.w	8000e2e <__udivmoddi4+0x2b2>
 8000d26:	f1a9 0902 	sub.w	r9, r9, #2
 8000d2a:	4473      	add	r3, lr
 8000d2c:	1b1b      	subs	r3, r3, r4
 8000d2e:	b2ad      	uxth	r5, r5
 8000d30:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d34:	fb08 3310 	mls	r3, r8, r0, r3
 8000d38:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000d3c:	fb00 fa0a 	mul.w	sl, r0, sl
 8000d40:	45a2      	cmp	sl, r4
 8000d42:	d908      	bls.n	8000d56 <__udivmoddi4+0x1da>
 8000d44:	eb1e 0404 	adds.w	r4, lr, r4
 8000d48:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d4c:	d26b      	bcs.n	8000e26 <__udivmoddi4+0x2aa>
 8000d4e:	45a2      	cmp	sl, r4
 8000d50:	d969      	bls.n	8000e26 <__udivmoddi4+0x2aa>
 8000d52:	3802      	subs	r0, #2
 8000d54:	4474      	add	r4, lr
 8000d56:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000d5a:	fba0 8902 	umull	r8, r9, r0, r2
 8000d5e:	eba4 040a 	sub.w	r4, r4, sl
 8000d62:	454c      	cmp	r4, r9
 8000d64:	46c2      	mov	sl, r8
 8000d66:	464b      	mov	r3, r9
 8000d68:	d354      	bcc.n	8000e14 <__udivmoddi4+0x298>
 8000d6a:	d051      	beq.n	8000e10 <__udivmoddi4+0x294>
 8000d6c:	2e00      	cmp	r6, #0
 8000d6e:	d069      	beq.n	8000e44 <__udivmoddi4+0x2c8>
 8000d70:	ebb1 050a 	subs.w	r5, r1, sl
 8000d74:	eb64 0403 	sbc.w	r4, r4, r3
 8000d78:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000d7c:	40fd      	lsrs	r5, r7
 8000d7e:	40fc      	lsrs	r4, r7
 8000d80:	ea4c 0505 	orr.w	r5, ip, r5
 8000d84:	e9c6 5400 	strd	r5, r4, [r6]
 8000d88:	2700      	movs	r7, #0
 8000d8a:	e747      	b.n	8000c1c <__udivmoddi4+0xa0>
 8000d8c:	f1c2 0320 	rsb	r3, r2, #32
 8000d90:	fa20 f703 	lsr.w	r7, r0, r3
 8000d94:	4095      	lsls	r5, r2
 8000d96:	fa01 f002 	lsl.w	r0, r1, r2
 8000d9a:	fa21 f303 	lsr.w	r3, r1, r3
 8000d9e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000da2:	4338      	orrs	r0, r7
 8000da4:	0c01      	lsrs	r1, r0, #16
 8000da6:	fbb3 f7fe 	udiv	r7, r3, lr
 8000daa:	fa1f f885 	uxth.w	r8, r5
 8000dae:	fb0e 3317 	mls	r3, lr, r7, r3
 8000db2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000db6:	fb07 f308 	mul.w	r3, r7, r8
 8000dba:	428b      	cmp	r3, r1
 8000dbc:	fa04 f402 	lsl.w	r4, r4, r2
 8000dc0:	d907      	bls.n	8000dd2 <__udivmoddi4+0x256>
 8000dc2:	1869      	adds	r1, r5, r1
 8000dc4:	f107 3cff 	add.w	ip, r7, #4294967295
 8000dc8:	d22f      	bcs.n	8000e2a <__udivmoddi4+0x2ae>
 8000dca:	428b      	cmp	r3, r1
 8000dcc:	d92d      	bls.n	8000e2a <__udivmoddi4+0x2ae>
 8000dce:	3f02      	subs	r7, #2
 8000dd0:	4429      	add	r1, r5
 8000dd2:	1acb      	subs	r3, r1, r3
 8000dd4:	b281      	uxth	r1, r0
 8000dd6:	fbb3 f0fe 	udiv	r0, r3, lr
 8000dda:	fb0e 3310 	mls	r3, lr, r0, r3
 8000dde:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000de2:	fb00 f308 	mul.w	r3, r0, r8
 8000de6:	428b      	cmp	r3, r1
 8000de8:	d907      	bls.n	8000dfa <__udivmoddi4+0x27e>
 8000dea:	1869      	adds	r1, r5, r1
 8000dec:	f100 3cff 	add.w	ip, r0, #4294967295
 8000df0:	d217      	bcs.n	8000e22 <__udivmoddi4+0x2a6>
 8000df2:	428b      	cmp	r3, r1
 8000df4:	d915      	bls.n	8000e22 <__udivmoddi4+0x2a6>
 8000df6:	3802      	subs	r0, #2
 8000df8:	4429      	add	r1, r5
 8000dfa:	1ac9      	subs	r1, r1, r3
 8000dfc:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000e00:	e73b      	b.n	8000c7a <__udivmoddi4+0xfe>
 8000e02:	4637      	mov	r7, r6
 8000e04:	4630      	mov	r0, r6
 8000e06:	e709      	b.n	8000c1c <__udivmoddi4+0xa0>
 8000e08:	4607      	mov	r7, r0
 8000e0a:	e6e7      	b.n	8000bdc <__udivmoddi4+0x60>
 8000e0c:	4618      	mov	r0, r3
 8000e0e:	e6fb      	b.n	8000c08 <__udivmoddi4+0x8c>
 8000e10:	4541      	cmp	r1, r8
 8000e12:	d2ab      	bcs.n	8000d6c <__udivmoddi4+0x1f0>
 8000e14:	ebb8 0a02 	subs.w	sl, r8, r2
 8000e18:	eb69 020e 	sbc.w	r2, r9, lr
 8000e1c:	3801      	subs	r0, #1
 8000e1e:	4613      	mov	r3, r2
 8000e20:	e7a4      	b.n	8000d6c <__udivmoddi4+0x1f0>
 8000e22:	4660      	mov	r0, ip
 8000e24:	e7e9      	b.n	8000dfa <__udivmoddi4+0x27e>
 8000e26:	4618      	mov	r0, r3
 8000e28:	e795      	b.n	8000d56 <__udivmoddi4+0x1da>
 8000e2a:	4667      	mov	r7, ip
 8000e2c:	e7d1      	b.n	8000dd2 <__udivmoddi4+0x256>
 8000e2e:	4681      	mov	r9, r0
 8000e30:	e77c      	b.n	8000d2c <__udivmoddi4+0x1b0>
 8000e32:	3802      	subs	r0, #2
 8000e34:	442c      	add	r4, r5
 8000e36:	e747      	b.n	8000cc8 <__udivmoddi4+0x14c>
 8000e38:	f1ac 0c02 	sub.w	ip, ip, #2
 8000e3c:	442b      	add	r3, r5
 8000e3e:	e72f      	b.n	8000ca0 <__udivmoddi4+0x124>
 8000e40:	4638      	mov	r0, r7
 8000e42:	e708      	b.n	8000c56 <__udivmoddi4+0xda>
 8000e44:	4637      	mov	r7, r6
 8000e46:	e6e9      	b.n	8000c1c <__udivmoddi4+0xa0>

08000e48 <__aeabi_idiv0>:
 8000e48:	4770      	bx	lr
 8000e4a:	bf00      	nop

08000e4c <HAL_InitTick>:
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000e4c:	4a0e      	ldr	r2, [pc, #56]	; (8000e88 <HAL_InitTick+0x3c>)
 8000e4e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000e52:	490e      	ldr	r1, [pc, #56]	; (8000e8c <HAL_InitTick+0x40>)
 8000e54:	7812      	ldrb	r2, [r2, #0]
 8000e56:	fbb3 f3f2 	udiv	r3, r3, r2
{
 8000e5a:	b510      	push	{r4, lr}
 8000e5c:	4604      	mov	r4, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000e5e:	6808      	ldr	r0, [r1, #0]
 8000e60:	fbb0 f0f3 	udiv	r0, r0, r3
 8000e64:	f000 fb12 	bl	800148c <HAL_SYSTICK_Config>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000e68:	b908      	cbnz	r0, 8000e6e <HAL_InitTick+0x22>
 8000e6a:	2c0f      	cmp	r4, #15
 8000e6c:	d901      	bls.n	8000e72 <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 8000e6e:	2001      	movs	r0, #1
  }

  /* Return function status */
  return HAL_OK;
}
 8000e70:	bd10      	pop	{r4, pc}
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000e72:	2200      	movs	r2, #0
 8000e74:	4621      	mov	r1, r4
 8000e76:	f04f 30ff 	mov.w	r0, #4294967295
 8000e7a:	f000 fac3 	bl	8001404 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8000e7e:	4b04      	ldr	r3, [pc, #16]	; (8000e90 <HAL_InitTick+0x44>)
 8000e80:	2000      	movs	r0, #0
 8000e82:	601c      	str	r4, [r3, #0]
}
 8000e84:	bd10      	pop	{r4, pc}
 8000e86:	bf00      	nop
 8000e88:	20000000 	.word	0x20000000
 8000e8c:	20000038 	.word	0x20000038
 8000e90:	20000004 	.word	0x20000004

08000e94 <HAL_Init>:
{
 8000e94:	b508      	push	{r3, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000e96:	2003      	movs	r0, #3
 8000e98:	f000 faa0 	bl	80013dc <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8000e9c:	2000      	movs	r0, #0
 8000e9e:	f7ff ffd5 	bl	8000e4c <HAL_InitTick>
  HAL_MspInit();
 8000ea2:	f007 fc2b 	bl	80086fc <HAL_MspInit>
}
 8000ea6:	2000      	movs	r0, #0
 8000ea8:	bd08      	pop	{r3, pc}
 8000eaa:	bf00      	nop

08000eac <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8000eac:	4a03      	ldr	r2, [pc, #12]	; (8000ebc <HAL_IncTick+0x10>)
 8000eae:	4b04      	ldr	r3, [pc, #16]	; (8000ec0 <HAL_IncTick+0x14>)
 8000eb0:	6811      	ldr	r1, [r2, #0]
 8000eb2:	781b      	ldrb	r3, [r3, #0]
 8000eb4:	440b      	add	r3, r1
 8000eb6:	6013      	str	r3, [r2, #0]
}
 8000eb8:	4770      	bx	lr
 8000eba:	bf00      	nop
 8000ebc:	20019744 	.word	0x20019744
 8000ec0:	20000000 	.word	0x20000000

08000ec4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8000ec4:	4b01      	ldr	r3, [pc, #4]	; (8000ecc <HAL_GetTick+0x8>)
 8000ec6:	6818      	ldr	r0, [r3, #0]
}
 8000ec8:	4770      	bx	lr
 8000eca:	bf00      	nop
 8000ecc:	20019744 	.word	0x20019744

08000ed0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000ed0:	b538      	push	{r3, r4, r5, lr}
 8000ed2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8000ed4:	f7ff fff6 	bl	8000ec4 <HAL_GetTick>
 8000ed8:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000eda:	1c63      	adds	r3, r4, #1
 8000edc:	d002      	beq.n	8000ee4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8000ede:	4b04      	ldr	r3, [pc, #16]	; (8000ef0 <HAL_Delay+0x20>)
 8000ee0:	781b      	ldrb	r3, [r3, #0]
 8000ee2:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8000ee4:	f7ff ffee 	bl	8000ec4 <HAL_GetTick>
 8000ee8:	1b40      	subs	r0, r0, r5
 8000eea:	42a0      	cmp	r0, r4
 8000eec:	d3fa      	bcc.n	8000ee4 <HAL_Delay+0x14>
  {
  }
}
 8000eee:	bd38      	pop	{r3, r4, r5, pc}
 8000ef0:	20000000 	.word	0x20000000

08000ef4 <HAL_ADC_Init>:
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8000ef4:	2800      	cmp	r0, #0
 8000ef6:	f000 8092 	beq.w	800101e <HAL_ADC_Init+0x12a>
{
 8000efa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if(hadc->State == HAL_ADC_STATE_RESET)
 8000efc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8000efe:	4604      	mov	r4, r0
 8000f00:	2d00      	cmp	r5, #0
 8000f02:	f000 8082 	beq.w	800100a <HAL_ADC_Init+0x116>
    hadc->Lock = HAL_UNLOCKED;
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8000f06:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f08:	06db      	lsls	r3, r3, #27
 8000f0a:	d504      	bpl.n	8000f16 <HAL_ADC_Init+0x22>
  {
    tmp_hal_status = HAL_ERROR;
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8000f0c:	2300      	movs	r3, #0
    tmp_hal_status = HAL_ERROR;
 8000f0e:	2001      	movs	r0, #1
  __HAL_UNLOCK(hadc);
 8000f10:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
}
 8000f14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ADC_STATE_CLR_SET(hadc->State,
 8000f16:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f18:	4a4e      	ldr	r2, [pc, #312]	; (8001054 <HAL_ADC_Init+0x160>)
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
  /* Set ADC parameters */
  /* Set the ADC clock prescaler */
  ADC->CCR &= ~(ADC_CCR_ADCPRE);
 8000f1a:	494f      	ldr	r1, [pc, #316]	; (8001058 <HAL_ADC_Init+0x164>)
    ADC_STATE_CLR_SET(hadc->State,
 8000f1c:	401a      	ands	r2, r3
  ADC->CCR |=  hadc->Init.ClockPrescaler;
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8000f1e:	6823      	ldr	r3, [r4, #0]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8000f20:	4d4e      	ldr	r5, [pc, #312]	; (800105c <HAL_ADC_Init+0x168>)
    ADC_STATE_CLR_SET(hadc->State,
 8000f22:	f042 0202 	orr.w	r2, r2, #2
 8000f26:	6422      	str	r2, [r4, #64]	; 0x40
  ADC->CCR &= ~(ADC_CCR_ADCPRE);
 8000f28:	684a      	ldr	r2, [r1, #4]
 8000f2a:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000f2e:	604a      	str	r2, [r1, #4]
  ADC->CCR |=  hadc->Init.ClockPrescaler;
 8000f30:	684a      	ldr	r2, [r1, #4]
 8000f32:	6860      	ldr	r0, [r4, #4]
 8000f34:	4302      	orrs	r2, r0
 8000f36:	604a      	str	r2, [r1, #4]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8000f38:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8000f3a:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8000f3c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8000f40:	f8d4 c008 	ldr.w	ip, [r4, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8000f44:	68e7      	ldr	r7, [r4, #12]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8000f46:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8000f48:	6858      	ldr	r0, [r3, #4]
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8000f4a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8000f4c:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8000f50:	42ae      	cmp	r6, r5
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8000f52:	6058      	str	r0, [r3, #4]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8000f54:	6858      	ldr	r0, [r3, #4]
 8000f56:	f020 7040 	bic.w	r0, r0, #50331648	; 0x3000000
 8000f5a:	6058      	str	r0, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8000f5c:	6859      	ldr	r1, [r3, #4]
 8000f5e:	ea41 010c 	orr.w	r1, r1, ip
 8000f62:	6059      	str	r1, [r3, #4]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8000f64:	6899      	ldr	r1, [r3, #8]
 8000f66:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 8000f6a:	6099      	str	r1, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8000f6c:	689a      	ldr	r2, [r3, #8]
 8000f6e:	ea42 0207 	orr.w	r2, r2, r7
 8000f72:	609a      	str	r2, [r3, #8]
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8000f74:	d055      	beq.n	8001022 <HAL_ADC_Init+0x12e>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8000f76:	6899      	ldr	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8000f78:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8000f7a:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8000f7e:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8000f80:	689a      	ldr	r2, [r3, #8]
 8000f82:	4316      	orrs	r6, r2
 8000f84:	609e      	str	r6, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8000f86:	6899      	ldr	r1, [r3, #8]
 8000f88:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
 8000f8c:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8000f8e:	689a      	ldr	r2, [r3, #8]
 8000f90:	4302      	orrs	r2, r0
 8000f92:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8000f94:	6899      	ldr	r1, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8000f96:	69a5      	ldr	r5, [r4, #24]
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8000f98:	f021 0102 	bic.w	r1, r1, #2
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8000f9c:	f894 0020 	ldrb.w	r0, [r4, #32]
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8000fa0:	6099      	str	r1, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8000fa2:	689a      	ldr	r2, [r3, #8]
 8000fa4:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8000fa8:	609a      	str	r2, [r3, #8]
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8000faa:	2800      	cmp	r0, #0
 8000fac:	d142      	bne.n	8001034 <HAL_ADC_Init+0x140>
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8000fae:	685a      	ldr	r2, [r3, #4]
 8000fb0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8000fb4:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8000fb6:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
    ADC_CLEAR_ERRORCODE(hadc);
 8000fb8:	2600      	movs	r6, #0
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8000fba:	69e5      	ldr	r5, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8000fbc:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8000fc0:	f894 c030 	ldrb.w	ip, [r4, #48]	; 0x30
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8000fc4:	1e6a      	subs	r2, r5, #1
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8000fc6:	6967      	ldr	r7, [r4, #20]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8000fc8:	62d8      	str	r0, [r3, #44]	; 0x2c
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8000fca:	4630      	mov	r0, r6
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8000fcc:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8000fce:	ea45 5502 	orr.w	r5, r5, r2, lsl #20
 8000fd2:	62dd      	str	r5, [r3, #44]	; 0x2c
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8000fd4:	689d      	ldr	r5, [r3, #8]
 8000fd6:	f425 7500 	bic.w	r5, r5, #512	; 0x200
 8000fda:	609d      	str	r5, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8000fdc:	6899      	ldr	r1, [r3, #8]
 8000fde:	ea41 214c 	orr.w	r1, r1, ip, lsl #9
 8000fe2:	6099      	str	r1, [r3, #8]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8000fe4:	6899      	ldr	r1, [r3, #8]
 8000fe6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8000fea:	6099      	str	r1, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8000fec:	689a      	ldr	r2, [r3, #8]
 8000fee:	ea42 2287 	orr.w	r2, r2, r7, lsl #10
 8000ff2:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8000ff4:	6466      	str	r6, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8000ff6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000ff8:	f023 0303 	bic.w	r3, r3, #3
 8000ffc:	f043 0301 	orr.w	r3, r3, #1
 8001000:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8001002:	2300      	movs	r3, #0
 8001004:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8001008:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    HAL_ADC_MspInit(hadc);
 800100a:	f007 fb8f 	bl	800872c <HAL_ADC_MspInit>
    ADC_CLEAR_ERRORCODE(hadc);
 800100e:	6465      	str	r5, [r4, #68]	; 0x44
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8001010:	6c23      	ldr	r3, [r4, #64]	; 0x40
    hadc->Lock = HAL_UNLOCKED;
 8001012:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8001016:	06db      	lsls	r3, r3, #27
 8001018:	f53f af78 	bmi.w	8000f0c <HAL_ADC_Init+0x18>
 800101c:	e77b      	b.n	8000f16 <HAL_ADC_Init+0x22>
    return HAL_ERROR;
 800101e:	2001      	movs	r0, #1
}
 8001020:	4770      	bx	lr
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8001022:	689a      	ldr	r2, [r3, #8]
 8001024:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001028:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800102a:	689a      	ldr	r2, [r3, #8]
 800102c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8001030:	609a      	str	r2, [r3, #8]
 8001032:	e7af      	b.n	8000f94 <HAL_ADC_Init+0xa0>
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8001034:	6858      	ldr	r0, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8001036:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8001038:	f440 6000 	orr.w	r0, r0, #2048	; 0x800
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800103c:	1e51      	subs	r1, r2, #1
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800103e:	6058      	str	r0, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8001040:	685a      	ldr	r2, [r3, #4]
 8001042:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8001046:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8001048:	685a      	ldr	r2, [r3, #4]
 800104a:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
 800104e:	605a      	str	r2, [r3, #4]
 8001050:	e7b1      	b.n	8000fb6 <HAL_ADC_Init+0xc2>
 8001052:	bf00      	nop
 8001054:	ffffeefd 	.word	0xffffeefd
 8001058:	40012300 	.word	0x40012300
 800105c:	0f000001 	.word	0x0f000001

08001060 <HAL_ADC_Start_DMA>:
{
 8001060:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001062:	4604      	mov	r4, r0
 8001064:	b083      	sub	sp, #12
  __IO uint32_t counter = 0;
 8001066:	2000      	movs	r0, #0
  __HAL_LOCK(hadc);
 8001068:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
  __IO uint32_t counter = 0;
 800106c:	9001      	str	r0, [sp, #4]
  __HAL_LOCK(hadc);
 800106e:	2b01      	cmp	r3, #1
 8001070:	f000 8089 	beq.w	8001186 <HAL_ADC_Start_DMA+0x126>
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8001074:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hadc);
 8001076:	2001      	movs	r0, #1
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8001078:	68ab      	ldr	r3, [r5, #8]
  __HAL_LOCK(hadc);
 800107a:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800107e:	07de      	lsls	r6, r3, #31
 8001080:	d414      	bmi.n	80010ac <HAL_ADC_Start_DMA+0x4c>
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 8001082:	4b47      	ldr	r3, [pc, #284]	; (80011a0 <HAL_ADC_Start_DMA+0x140>)
 8001084:	4e47      	ldr	r6, [pc, #284]	; (80011a4 <HAL_ADC_Start_DMA+0x144>)
 8001086:	6818      	ldr	r0, [r3, #0]
    __HAL_ADC_ENABLE(hadc);
 8001088:	68ab      	ldr	r3, [r5, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 800108a:	fba6 6000 	umull	r6, r0, r6, r0
    __HAL_ADC_ENABLE(hadc);
 800108e:	f043 0301 	orr.w	r3, r3, #1
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 8001092:	0c80      	lsrs	r0, r0, #18
    __HAL_ADC_ENABLE(hadc);
 8001094:	60ab      	str	r3, [r5, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 8001096:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800109a:	9001      	str	r0, [sp, #4]
    while(counter != 0)
 800109c:	9b01      	ldr	r3, [sp, #4]
 800109e:	b12b      	cbz	r3, 80010ac <HAL_ADC_Start_DMA+0x4c>
      counter--;
 80010a0:	9801      	ldr	r0, [sp, #4]
 80010a2:	3801      	subs	r0, #1
 80010a4:	9001      	str	r0, [sp, #4]
    while(counter != 0)
 80010a6:	9801      	ldr	r0, [sp, #4]
 80010a8:	2800      	cmp	r0, #0
 80010aa:	d1f9      	bne.n	80010a0 <HAL_ADC_Start_DMA+0x40>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80010ac:	68a8      	ldr	r0, [r5, #8]
    ADC_STATE_CLR_SET(hadc->State,
 80010ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80010b0:	f010 0001 	ands.w	r0, r0, #1
 80010b4:	d044      	beq.n	8001140 <HAL_ADC_Start_DMA+0xe0>
    ADC_STATE_CLR_SET(hadc->State,
 80010b6:	483c      	ldr	r0, [pc, #240]	; (80011a8 <HAL_ADC_Start_DMA+0x148>)
 80010b8:	4018      	ands	r0, r3
 80010ba:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80010be:	6420      	str	r0, [r4, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 80010c0:	686b      	ldr	r3, [r5, #4]
 80010c2:	0558      	lsls	r0, r3, #21
 80010c4:	d505      	bpl.n	80010d2 <HAL_ADC_Start_DMA+0x72>
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 80010c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010c8:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80010cc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80010d0:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80010d2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010d4:	f413 5380 	ands.w	r3, r3, #4096	; 0x1000
 80010d8:	d047      	beq.n	800116a <HAL_ADC_Start_DMA+0x10a>
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 80010da:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80010dc:	f023 0306 	bic.w	r3, r3, #6
 80010e0:	6463      	str	r3, [r4, #68]	; 0x44
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 80010e2:	6ba7      	ldr	r7, [r4, #56]	; 0x38
 80010e4:	4613      	mov	r3, r2
 80010e6:	f8df e0d8 	ldr.w	lr, [pc, #216]	; 80011c0 <HAL_ADC_Start_DMA+0x160>
 80010ea:	460a      	mov	r2, r1
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 80010ec:	f06f 0c22 	mvn.w	ip, #34	; 0x22
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 80010f0:	482e      	ldr	r0, [pc, #184]	; (80011ac <HAL_ADC_Start_DMA+0x14c>)
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 80010f2:	492f      	ldr	r1, [pc, #188]	; (80011b0 <HAL_ADC_Start_DMA+0x150>)
    __HAL_UNLOCK(hadc);   
 80010f4:	2600      	movs	r6, #0
 80010f6:	f884 603c 	strb.w	r6, [r4, #60]	; 0x3c
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 80010fa:	64f9      	str	r1, [r7, #76]	; 0x4c
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 80010fc:	f105 014c 	add.w	r1, r5, #76	; 0x4c
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8001100:	e9c7 e00f 	strd	lr, r0, [r7, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8001104:	f8c5 c000 	str.w	ip, [r5]
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8001108:	4638      	mov	r0, r7
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 800110a:	686f      	ldr	r7, [r5, #4]
 800110c:	f047 6780 	orr.w	r7, r7, #67108864	; 0x4000000
 8001110:	606f      	str	r7, [r5, #4]
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8001112:	68af      	ldr	r7, [r5, #8]
 8001114:	f447 7780 	orr.w	r7, r7, #256	; 0x100
 8001118:	60af      	str	r7, [r5, #8]
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 800111a:	f000 fa6f 	bl	80015fc <HAL_DMA_Start_IT>
    if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 800111e:	4b25      	ldr	r3, [pc, #148]	; (80011b4 <HAL_ADC_Start_DMA+0x154>)
      if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 8001120:	6822      	ldr	r2, [r4, #0]
    if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 8001122:	6858      	ldr	r0, [r3, #4]
 8001124:	f010 001f 	ands.w	r0, r0, #31
 8001128:	d113      	bne.n	8001152 <HAL_ADC_Start_DMA+0xf2>
      if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 800112a:	6893      	ldr	r3, [r2, #8]
 800112c:	f013 5340 	ands.w	r3, r3, #805306368	; 0x30000000
 8001130:	d10d      	bne.n	800114e <HAL_ADC_Start_DMA+0xee>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001132:	6891      	ldr	r1, [r2, #8]
  return HAL_OK;
 8001134:	4618      	mov	r0, r3
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001136:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 800113a:	6091      	str	r1, [r2, #8]
}
 800113c:	b003      	add	sp, #12
 800113e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8001140:	f043 0310 	orr.w	r3, r3, #16
 8001144:	6423      	str	r3, [r4, #64]	; 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8001146:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001148:	f043 0301 	orr.w	r3, r3, #1
 800114c:	6463      	str	r3, [r4, #68]	; 0x44
}
 800114e:	b003      	add	sp, #12
 8001150:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8001152:	4919      	ldr	r1, [pc, #100]	; (80011b8 <HAL_ADC_Start_DMA+0x158>)
 8001154:	428a      	cmp	r2, r1
 8001156:	d00a      	beq.n	800116e <HAL_ADC_Start_DMA+0x10e>
      if( HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI_4) )
 8001158:	685b      	ldr	r3, [r3, #4]
        if((hadc->Instance == ADC3) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800115a:	06db      	lsls	r3, r3, #27
 800115c:	d402      	bmi.n	8001164 <HAL_ADC_Start_DMA+0x104>
 800115e:	4917      	ldr	r1, [pc, #92]	; (80011bc <HAL_ADC_Start_DMA+0x15c>)
 8001160:	428a      	cmp	r2, r1
 8001162:	d013      	beq.n	800118c <HAL_ADC_Start_DMA+0x12c>
  return HAL_OK;
 8001164:	2000      	movs	r0, #0
}
 8001166:	b003      	add	sp, #12
 8001168:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ADC_CLEAR_ERRORCODE(hadc);
 800116a:	6463      	str	r3, [r4, #68]	; 0x44
 800116c:	e7b9      	b.n	80010e2 <HAL_ADC_Start_DMA+0x82>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800116e:	6893      	ldr	r3, [r2, #8]
 8001170:	f013 5f40 	tst.w	r3, #805306368	; 0x30000000
 8001174:	d103      	bne.n	800117e <HAL_ADC_Start_DMA+0x11e>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001176:	6893      	ldr	r3, [r2, #8]
 8001178:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800117c:	6093      	str	r3, [r2, #8]
      if( HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI_4) )
 800117e:	4b0d      	ldr	r3, [pc, #52]	; (80011b4 <HAL_ADC_Start_DMA+0x154>)
  return HAL_OK;
 8001180:	2000      	movs	r0, #0
      if( HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI_4) )
 8001182:	685b      	ldr	r3, [r3, #4]
 8001184:	e7e3      	b.n	800114e <HAL_ADC_Start_DMA+0xee>
  __HAL_LOCK(hadc);
 8001186:	2002      	movs	r0, #2
}
 8001188:	b003      	add	sp, #12
 800118a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if((hadc->Instance == ADC3) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800118c:	6888      	ldr	r0, [r1, #8]
 800118e:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8001192:	d1e7      	bne.n	8001164 <HAL_ADC_Start_DMA+0x104>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001194:	688b      	ldr	r3, [r1, #8]
 8001196:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800119a:	608b      	str	r3, [r1, #8]
 800119c:	e7d7      	b.n	800114e <HAL_ADC_Start_DMA+0xee>
 800119e:	bf00      	nop
 80011a0:	20000038 	.word	0x20000038
 80011a4:	431bde83 	.word	0x431bde83
 80011a8:	fffff8fe 	.word	0xfffff8fe
 80011ac:	080011c9 	.word	0x080011c9
 80011b0:	080011d9 	.word	0x080011d9
 80011b4:	40012300 	.word	0x40012300
 80011b8:	40012000 	.word	0x40012000
 80011bc:	40012200 	.word	0x40012200
 80011c0:	080011f1 	.word	0x080011f1

080011c4 <HAL_ADC_ConvHalfCpltCallback>:
 80011c4:	4770      	bx	lr
 80011c6:	bf00      	nop

080011c8 <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
{
 80011c8:	b508      	push	{r3, lr}
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
   /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 80011ca:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80011cc:	f7ff fffa 	bl	80011c4 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80011d0:	bd08      	pop	{r3, pc}
 80011d2:	bf00      	nop

080011d4 <HAL_ADC_ErrorCallback>:
 80011d4:	4770      	bx	lr
 80011d6:	bf00      	nop

080011d8 <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
{
 80011d8:	b508      	push	{r3, lr}
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  hadc->State= HAL_ADC_STATE_ERROR_DMA;
 80011da:	2240      	movs	r2, #64	; 0x40
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 80011dc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  hadc->State= HAL_ADC_STATE_ERROR_DMA;
 80011de:	641a      	str	r2, [r3, #64]	; 0x40
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 80011e0:	4618      	mov	r0, r3
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 80011e2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80011e4:	f042 0204 	orr.w	r2, r2, #4
 80011e8:	645a      	str	r2, [r3, #68]	; 0x44
  HAL_ADC_ErrorCallback(hadc);
 80011ea:	f7ff fff3 	bl	80011d4 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80011ee:	bd08      	pop	{r3, pc}

080011f0 <ADC_DMAConvCplt>:
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 80011f0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 80011f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80011f4:	f012 0f50 	tst.w	r2, #80	; 0x50
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80011f8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 80011fa:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 80011fc:	d123      	bne.n	8001246 <ADC_DMAConvCplt+0x56>
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80011fe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001202:	6819      	ldr	r1, [r3, #0]
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8001204:	641a      	str	r2, [r3, #64]	; 0x40
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001206:	688a      	ldr	r2, [r1, #8]
 8001208:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 800120c:	d117      	bne.n	800123e <ADC_DMAConvCplt+0x4e>
 800120e:	699a      	ldr	r2, [r3, #24]
 8001210:	b9aa      	cbnz	r2, 800123e <ADC_DMAConvCplt+0x4e>
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 8001212:	6aca      	ldr	r2, [r1, #44]	; 0x2c
       (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8001214:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 8001218:	d002      	beq.n	8001220 <ADC_DMAConvCplt+0x30>
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800121a:	688a      	ldr	r2, [r1, #8]
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 800121c:	0550      	lsls	r0, r2, #21
 800121e:	d40e      	bmi.n	800123e <ADC_DMAConvCplt+0x4e>
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8001220:	684a      	ldr	r2, [r1, #4]
 8001222:	f022 0220 	bic.w	r2, r2, #32
 8001226:	604a      	str	r2, [r1, #4]
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8001228:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800122a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800122e:	641a      	str	r2, [r3, #64]	; 0x40
      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8001230:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001232:	04d1      	lsls	r1, r2, #19
 8001234:	d403      	bmi.n	800123e <ADC_DMAConvCplt+0x4e>
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8001236:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001238:	f042 0201 	orr.w	r2, r2, #1
 800123c:	641a      	str	r2, [r3, #64]	; 0x40
    HAL_ADC_ConvCpltCallback(hadc);
 800123e:	4618      	mov	r0, r3
 8001240:	f006 ffde 	bl	8008200 <HAL_ADC_ConvCpltCallback>
}
 8001244:	bd10      	pop	{r4, pc}
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 8001246:	06d2      	lsls	r2, r2, #27
 8001248:	d404      	bmi.n	8001254 <ADC_DMAConvCplt+0x64>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 800124a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
}
 800124c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hadc->DMA_Handle->XferErrorCallback(hdma);
 8001250:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001252:	4718      	bx	r3
      HAL_ADC_ErrorCallback(hadc);
 8001254:	4618      	mov	r0, r3
 8001256:	f7ff ffbd 	bl	80011d4 <HAL_ADC_ErrorCallback>
}
 800125a:	bd10      	pop	{r4, pc}

0800125c <HAL_ADC_ConfigChannel>:
  __HAL_LOCK(hadc);
 800125c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
  __IO uint32_t counter = 0;
 8001260:	2200      	movs	r2, #0
{
 8001262:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hadc);
 8001264:	2b01      	cmp	r3, #1
{
 8001266:	b083      	sub	sp, #12
  __IO uint32_t counter = 0;
 8001268:	9201      	str	r2, [sp, #4]
  __HAL_LOCK(hadc);
 800126a:	f000 809d 	beq.w	80013a8 <HAL_ADC_ConfigChannel+0x14c>
  if ((sConfig->Channel > ADC_CHANNEL_9) && (sConfig->Channel != ADC_INTERNAL_NONE))
 800126e:	680e      	ldr	r6, [r1, #0]
  __HAL_LOCK(hadc);
 8001270:	2201      	movs	r2, #1
 8001272:	6803      	ldr	r3, [r0, #0]
 8001274:	b2b7      	uxth	r7, r6
  if ((sConfig->Channel > ADC_CHANNEL_9) && (sConfig->Channel != ADC_INTERNAL_NONE))
 8001276:	2e09      	cmp	r6, #9
  __HAL_LOCK(hadc);
 8001278:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 800127c:	eb07 0547 	add.w	r5, r7, r7, lsl #1
 8001280:	688a      	ldr	r2, [r1, #8]
  if ((sConfig->Channel > ADC_CHANNEL_9) && (sConfig->Channel != ADC_INTERNAL_NONE))
 8001282:	d92f      	bls.n	80012e4 <HAL_ADC_ConfigChannel+0x88>
 8001284:	f1b6 4f00 	cmp.w	r6, #2147483648	; 0x80000000
 8001288:	d02c      	beq.n	80012e4 <HAL_ADC_ConfigChannel+0x88>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800128a:	3d1e      	subs	r5, #30
 800128c:	f04f 0c07 	mov.w	ip, #7
 8001290:	68dc      	ldr	r4, [r3, #12]
 8001292:	fa0c fc05 	lsl.w	ip, ip, r5
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8001296:	f8df e138 	ldr.w	lr, [pc, #312]	; 80013d0 <HAL_ADC_ConfigChannel+0x174>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800129a:	ea24 040c 	bic.w	r4, r4, ip
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800129e:	4576      	cmp	r6, lr
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80012a0:	60dc      	str	r4, [r3, #12]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 80012a2:	f000 8084 	beq.w	80013ae <HAL_ADC_ConfigChannel+0x152>
      hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80012a6:	fa02 f505 	lsl.w	r5, r2, r5
 80012aa:	68da      	ldr	r2, [r3, #12]
 80012ac:	4315      	orrs	r5, r2
 80012ae:	60dd      	str	r5, [r3, #12]
  if (sConfig->Rank < 7)
 80012b0:	6849      	ldr	r1, [r1, #4]
 80012b2:	2906      	cmp	r1, #6
 80012b4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 80012b8:	d826      	bhi.n	8001308 <HAL_ADC_ConfigChannel+0xac>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80012ba:	3a05      	subs	r2, #5
 80012bc:	241f      	movs	r4, #31
 80012be:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80012c0:	4094      	lsls	r4, r2
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80012c2:	fa07 f202 	lsl.w	r2, r7, r2
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80012c6:	ea21 0104 	bic.w	r1, r1, r4
 80012ca:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80012cc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80012ce:	430a      	orrs	r2, r1
 80012d0:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_INTERNAL_NONE))
 80012d2:	4a3e      	ldr	r2, [pc, #248]	; (80013cc <HAL_ADC_ConfigChannel+0x170>)
 80012d4:	4293      	cmp	r3, r2
 80012d6:	d029      	beq.n	800132c <HAL_ADC_ConfigChannel+0xd0>
  __HAL_UNLOCK(hadc);
 80012d8:	2300      	movs	r3, #0
 80012da:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80012de:	4618      	mov	r0, r3
}
 80012e0:	b003      	add	sp, #12
 80012e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80012e4:	f04f 0c07 	mov.w	ip, #7
 80012e8:	691c      	ldr	r4, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80012ea:	40aa      	lsls	r2, r5
  if (sConfig->Rank < 7)
 80012ec:	6849      	ldr	r1, [r1, #4]
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80012ee:	fa0c f505 	lsl.w	r5, ip, r5
  if (sConfig->Rank < 7)
 80012f2:	2906      	cmp	r1, #6
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80012f4:	ea24 0505 	bic.w	r5, r4, r5
 80012f8:	611d      	str	r5, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80012fa:	691d      	ldr	r5, [r3, #16]
 80012fc:	ea45 0502 	orr.w	r5, r5, r2
 8001300:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8001304:	611d      	str	r5, [r3, #16]
  if (sConfig->Rank < 7)
 8001306:	d9d8      	bls.n	80012ba <HAL_ADC_ConfigChannel+0x5e>
  else if (sConfig->Rank < 13)
 8001308:	290c      	cmp	r1, #12
 800130a:	d838      	bhi.n	800137e <HAL_ADC_ConfigChannel+0x122>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800130c:	f1a2 0423 	sub.w	r4, r2, #35	; 0x23
 8001310:	251f      	movs	r5, #31
 8001312:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001314:	40a5      	lsls	r5, r4
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8001316:	fa07 f204 	lsl.w	r2, r7, r4
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800131a:	ea21 0105 	bic.w	r1, r1, r5
 800131e:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8001320:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8001322:	4314      	orrs	r4, r2
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_INTERNAL_NONE))
 8001324:	4a29      	ldr	r2, [pc, #164]	; (80013cc <HAL_ADC_ConfigChannel+0x170>)
 8001326:	4293      	cmp	r3, r2
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8001328:	631c      	str	r4, [r3, #48]	; 0x30
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_INTERNAL_NONE))
 800132a:	d1d5      	bne.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
 800132c:	f1b6 4f00 	cmp.w	r6, #2147483648	; 0x80000000
 8001330:	d033      	beq.n	800139a <HAL_ADC_ConfigChannel+0x13e>
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8001332:	2e12      	cmp	r6, #18
 8001334:	d040      	beq.n	80013b8 <HAL_ADC_ConfigChannel+0x15c>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8001336:	4b26      	ldr	r3, [pc, #152]	; (80013d0 <HAL_ADC_ConfigChannel+0x174>)
 8001338:	429e      	cmp	r6, r3
 800133a:	d143      	bne.n	80013c4 <HAL_ADC_ConfigChannel+0x168>
    ADC->CCR |= ADC_CCR_TSVREFE;
 800133c:	4a25      	ldr	r2, [pc, #148]	; (80013d4 <HAL_ADC_ConfigChannel+0x178>)
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800133e:	4924      	ldr	r1, [pc, #144]	; (80013d0 <HAL_ADC_ConfigChannel+0x174>)
    ADC->CCR |= ADC_CCR_TSVREFE;
 8001340:	6853      	ldr	r3, [r2, #4]
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8001342:	428e      	cmp	r6, r1
    ADC->CCR |= ADC_CCR_TSVREFE;
 8001344:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001348:	6053      	str	r3, [r2, #4]
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800134a:	d1c5      	bne.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000));
 800134c:	f102 7246 	add.w	r2, r2, #51904512	; 0x3180000
 8001350:	4b21      	ldr	r3, [pc, #132]	; (80013d8 <HAL_ADC_ConfigChannel+0x17c>)
 8001352:	f502 322e 	add.w	r2, r2, #178176	; 0x2b800
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	f202 3283 	addw	r2, r2, #899	; 0x383
 800135c:	fba2 2303 	umull	r2, r3, r2, r3
 8001360:	0c9b      	lsrs	r3, r3, #18
 8001362:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001366:	005b      	lsls	r3, r3, #1
 8001368:	9301      	str	r3, [sp, #4]
      while(counter != 0)
 800136a:	9b01      	ldr	r3, [sp, #4]
 800136c:	2b00      	cmp	r3, #0
 800136e:	d0b3      	beq.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
        counter--;
 8001370:	9b01      	ldr	r3, [sp, #4]
 8001372:	3b01      	subs	r3, #1
 8001374:	9301      	str	r3, [sp, #4]
      while(counter != 0)
 8001376:	9b01      	ldr	r3, [sp, #4]
 8001378:	2b00      	cmp	r3, #0
 800137a:	d1f9      	bne.n	8001370 <HAL_ADC_ConfigChannel+0x114>
 800137c:	e7ac      	b.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800137e:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 8001382:	251f      	movs	r5, #31
 8001384:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8001386:	408d      	lsls	r5, r1
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8001388:	fa07 f201 	lsl.w	r2, r7, r1
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800138c:	ea24 0405 	bic.w	r4, r4, r5
 8001390:	62dc      	str	r4, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8001392:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001394:	430a      	orrs	r2, r1
 8001396:	62da      	str	r2, [r3, #44]	; 0x2c
 8001398:	e79b      	b.n	80012d2 <HAL_ADC_ConfigChannel+0x76>
    ADC->CCR &= ~(ADC_CCR_VBATE | ADC_CCR_TSVREFE);
 800139a:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
 800139e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80013a2:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
 80013a6:	e797      	b.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
  __HAL_LOCK(hadc);
 80013a8:	2002      	movs	r0, #2
}
 80013aa:	b003      	add	sp, #12
 80013ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
      hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, ADC_CHANNEL_18);
 80013ae:	68dd      	ldr	r5, [r3, #12]
 80013b0:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80013b4:	60dd      	str	r5, [r3, #12]
 80013b6:	e77b      	b.n	80012b0 <HAL_ADC_ConfigChannel+0x54>
    ADC->CCR |= ADC_CCR_VBATE;
 80013b8:	4a06      	ldr	r2, [pc, #24]	; (80013d4 <HAL_ADC_ConfigChannel+0x178>)
 80013ba:	6853      	ldr	r3, [r2, #4]
 80013bc:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80013c0:	6053      	str	r3, [r2, #4]
 80013c2:	e789      	b.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 80013c4:	2e11      	cmp	r6, #17
 80013c6:	d0b9      	beq.n	800133c <HAL_ADC_ConfigChannel+0xe0>
 80013c8:	e786      	b.n	80012d8 <HAL_ADC_ConfigChannel+0x7c>
 80013ca:	bf00      	nop
 80013cc:	40012000 	.word	0x40012000
 80013d0:	10000012 	.word	0x10000012
 80013d4:	40012300 	.word	0x40012300
 80013d8:	20000038 	.word	0x20000038

080013dc <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80013dc:	4907      	ldr	r1, [pc, #28]	; (80013fc <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80013de:	0200      	lsls	r0, r0, #8
 80013e0:	4b07      	ldr	r3, [pc, #28]	; (8001400 <HAL_NVIC_SetPriorityGrouping+0x24>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80013e2:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80013e4:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80013e8:	b410      	push	{r4}
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80013ea:	f64f 04ff 	movw	r4, #63743	; 0xf8ff
 80013ee:	4022      	ands	r2, r4
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80013f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80013f4:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80013f6:	4318      	orrs	r0, r3
  SCB->AIRCR =  reg_value;
 80013f8:	60c8      	str	r0, [r1, #12]
 80013fa:	4770      	bx	lr
 80013fc:	e000ed00 	.word	0xe000ed00
 8001400:	05fa0000 	.word	0x05fa0000

08001404 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001404:	4b17      	ldr	r3, [pc, #92]	; (8001464 <HAL_NVIC_SetPriority+0x60>)
 8001406:	68db      	ldr	r3, [r3, #12]
 8001408:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800140c:	b430      	push	{r4, r5}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800140e:	f1c3 0507 	rsb	r5, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001412:	1d1c      	adds	r4, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001414:	2d04      	cmp	r5, #4
 8001416:	bf28      	it	cs
 8001418:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800141a:	2c06      	cmp	r4, #6
 800141c:	d918      	bls.n	8001450 <HAL_NVIC_SetPriority+0x4c>
 800141e:	3b03      	subs	r3, #3
 8001420:	f04f 34ff 	mov.w	r4, #4294967295
 8001424:	409c      	lsls	r4, r3
 8001426:	ea22 0404 	bic.w	r4, r2, r4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800142a:	f04f 32ff 	mov.w	r2, #4294967295
  if ((int32_t)(IRQn) >= 0)
 800142e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001430:	fa02 f205 	lsl.w	r2, r2, r5
 8001434:	ea21 0102 	bic.w	r1, r1, r2
 8001438:	fa01 f203 	lsl.w	r2, r1, r3
 800143c:	ea42 0204 	orr.w	r2, r2, r4
 8001440:	ea4f 1202 	mov.w	r2, r2, lsl #4
 8001444:	b2d2      	uxtb	r2, r2
  if ((int32_t)(IRQn) >= 0)
 8001446:	db06      	blt.n	8001456 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001448:	4b07      	ldr	r3, [pc, #28]	; (8001468 <HAL_NVIC_SetPriority+0x64>)
 800144a:	541a      	strb	r2, [r3, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800144c:	bc30      	pop	{r4, r5}
 800144e:	4770      	bx	lr
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001450:	2400      	movs	r4, #0
 8001452:	4623      	mov	r3, r4
 8001454:	e7e9      	b.n	800142a <HAL_NVIC_SetPriority+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001456:	f000 000f 	and.w	r0, r0, #15
 800145a:	4b04      	ldr	r3, [pc, #16]	; (800146c <HAL_NVIC_SetPriority+0x68>)
 800145c:	541a      	strb	r2, [r3, r0]
 800145e:	bc30      	pop	{r4, r5}
 8001460:	4770      	bx	lr
 8001462:	bf00      	nop
 8001464:	e000ed00 	.word	0xe000ed00
 8001468:	e000e400 	.word	0xe000e400
 800146c:	e000ed14 	.word	0xe000ed14

08001470 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8001470:	2800      	cmp	r0, #0
 8001472:	db07      	blt.n	8001484 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001474:	f000 011f 	and.w	r1, r0, #31
 8001478:	2301      	movs	r3, #1
 800147a:	0940      	lsrs	r0, r0, #5
 800147c:	4a02      	ldr	r2, [pc, #8]	; (8001488 <HAL_NVIC_EnableIRQ+0x18>)
 800147e:	408b      	lsls	r3, r1
 8001480:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8001484:	4770      	bx	lr
 8001486:	bf00      	nop
 8001488:	e000e100 	.word	0xe000e100

0800148c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800148c:	3801      	subs	r0, #1
 800148e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8001492:	d20d      	bcs.n	80014b0 <HAL_SYSTICK_Config+0x24>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001494:	4b07      	ldr	r3, [pc, #28]	; (80014b4 <HAL_SYSTICK_Config+0x28>)
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001496:	2200      	movs	r2, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001498:	2107      	movs	r1, #7
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800149a:	b430      	push	{r4, r5}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800149c:	25f0      	movs	r5, #240	; 0xf0
 800149e:	4c06      	ldr	r4, [pc, #24]	; (80014b8 <HAL_SYSTICK_Config+0x2c>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80014a0:	6058      	str	r0, [r3, #4]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80014a2:	4610      	mov	r0, r2
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80014a4:	f884 5023 	strb.w	r5, [r4, #35]	; 0x23
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80014a8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80014aa:	6019      	str	r1, [r3, #0]
   return SysTick_Config(TicksNumb);
}
 80014ac:	bc30      	pop	{r4, r5}
 80014ae:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80014b0:	2001      	movs	r0, #1
 80014b2:	4770      	bx	lr
 80014b4:	e000e010 	.word	0xe000e010
 80014b8:	e000ed00 	.word	0xe000ed00

080014bc <HAL_SYSTICK_IRQHandler>:
/**
  * @brief  This function handles SYSTICK interrupt request.
  * @retval None
  */
void HAL_SYSTICK_IRQHandler(void)
{
 80014bc:	b508      	push	{r3, lr}
  HAL_SYSTICK_Callback();
 80014be:	f006 fe97 	bl	80081f0 <HAL_SYSTICK_Callback>
}
 80014c2:	bd08      	pop	{r3, pc}

080014c4 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80014c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014c6:	4604      	mov	r4, r0
  uint32_t tmp = 0U;
  uint32_t tickstart = HAL_GetTick();
 80014c8:	f7ff fcfc 	bl	8000ec4 <HAL_GetTick>
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 80014cc:	2c00      	cmp	r4, #0
 80014ce:	d053      	beq.n	8001578 <HAL_DMA_Init+0xb4>
  
  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 80014d0:	2202      	movs	r2, #2
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80014d2:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hdma);
 80014d4:	2100      	movs	r1, #0
 80014d6:	4605      	mov	r5, r0
  hdma->State = HAL_DMA_STATE_BUSY;
 80014d8:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 80014dc:	681a      	ldr	r2, [r3, #0]
  __HAL_UNLOCK(hdma);
 80014de:	f884 1034 	strb.w	r1, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 80014e2:	f022 0201 	bic.w	r2, r2, #1
 80014e6:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80014e8:	e005      	b.n	80014f6 <HAL_DMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80014ea:	f7ff fceb 	bl	8000ec4 <HAL_GetTick>
 80014ee:	1b40      	subs	r0, r0, r5
 80014f0:	2805      	cmp	r0, #5
 80014f2:	d83a      	bhi.n	800156a <HAL_DMA_Init+0xa6>
 80014f4:	6823      	ldr	r3, [r4, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80014f6:	681a      	ldr	r2, [r3, #0]
 80014f8:	07d1      	lsls	r1, r2, #31
 80014fa:	d4f6      	bmi.n	80014ea <HAL_DMA_Init+0x26>
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80014fc:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8001500:	68e1      	ldr	r1, [r4, #12]
 8001502:	4302      	orrs	r2, r0
  tmp = hdma->Instance->CR;
 8001504:	681f      	ldr	r7, [r3, #0]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8001506:	e9d4 0504 	ldrd	r0, r5, [r4, #16]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800150a:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800150c:	4302      	orrs	r2, r0
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
          hdma->Init.Mode                | hdma->Init.Priority;
 800150e:	6a20      	ldr	r0, [r4, #32]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8001510:	e9d4 6106 	ldrd	r6, r1, [r4, #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8001514:	432a      	orrs	r2, r5
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8001516:	4d35      	ldr	r5, [pc, #212]	; (80015ec <HAL_DMA_Init+0x128>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8001518:	4332      	orrs	r2, r6
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800151a:	403d      	ands	r5, r7
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800151c:	430a      	orrs	r2, r1

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800151e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hdma->Init.Mode                | hdma->Init.Priority;
 8001520:	4302      	orrs	r2, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8001522:	2904      	cmp	r1, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8001524:	ea42 0205 	orr.w	r2, r2, r5
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8001528:	d028      	beq.n	800157c <HAL_DMA_Init+0xb8>
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 800152a:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800152c:	695a      	ldr	r2, [r3, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800152e:	f022 0207 	bic.w	r2, r2, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8001532:	4311      	orrs	r1, r2
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8001534:	b2da      	uxtb	r2, r3
 8001536:	4d2e      	ldr	r5, [pc, #184]	; (80015f0 <HAL_DMA_Init+0x12c>)
  hdma->Instance->FCR = tmp;
 8001538:	6159      	str	r1, [r3, #20]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800153a:	3a10      	subs	r2, #16
 800153c:	492d      	ldr	r1, [pc, #180]	; (80015f4 <HAL_DMA_Init+0x130>)
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800153e:	482e      	ldr	r0, [pc, #184]	; (80015f8 <HAL_DMA_Init+0x134>)
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8001540:	fba5 5202 	umull	r5, r2, r5, r2
 8001544:	4019      	ands	r1, r3
  hdma->State = HAL_DMA_STATE_READY;
 8001546:	2501      	movs	r5, #1
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8001548:	0913      	lsrs	r3, r2, #4
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800154a:	2200      	movs	r2, #0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800154c:	5cc0      	ldrb	r0, [r0, r3]
  
  if (stream_number > 3U)
 800154e:	2b03      	cmp	r3, #3
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001550:	f04f 033f 	mov.w	r3, #63	; 0x3f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8001554:	bf88      	it	hi
 8001556:	3104      	addhi	r1, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8001558:	65e0      	str	r0, [r4, #92]	; 0x5c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800155a:	4083      	lsls	r3, r0
  return HAL_OK;
 800155c:	4610      	mov	r0, r2
 800155e:	65a1      	str	r1, [r4, #88]	; 0x58
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001560:	608b      	str	r3, [r1, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8001562:	6562      	str	r2, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8001564:	f884 5035 	strb.w	r5, [r4, #53]	; 0x35
}
 8001568:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800156a:	2303      	movs	r3, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800156c:	2220      	movs	r2, #32
      return HAL_TIMEOUT;
 800156e:	4618      	mov	r0, r3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001570:	6562      	str	r2, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8001572:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 8001576:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
 8001578:	2001      	movs	r0, #1
}
 800157a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800157c:	e9d4 510b 	ldrd	r5, r1, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8001580:	6aa7      	ldr	r7, [r4, #40]	; 0x28
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8001582:	ea45 0001 	orr.w	r0, r5, r1
    tmp |= hdma->Init.FIFOThreshold;
 8001586:	f047 0104 	orr.w	r1, r7, #4
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800158a:	4302      	orrs	r2, r0
  hdma->Instance->CR = tmp;  
 800158c:	601a      	str	r2, [r3, #0]
  tmp = hdma->Instance->FCR;
 800158e:	695a      	ldr	r2, [r3, #20]
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8001590:	f022 0207 	bic.w	r2, r2, #7
    tmp |= hdma->Init.FIFOThreshold;
 8001594:	4311      	orrs	r1, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8001596:	2d00      	cmp	r5, #0
 8001598:	d0cc      	beq.n	8001534 <HAL_DMA_Init+0x70>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800159a:	b17e      	cbz	r6, 80015bc <HAL_DMA_Init+0xf8>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800159c:	f5b6 5f00 	cmp.w	r6, #8192	; 0x2000
 80015a0:	d016      	beq.n	80015d0 <HAL_DMA_Init+0x10c>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 80015a2:	2f02      	cmp	r7, #2
 80015a4:	d903      	bls.n	80015ae <HAL_DMA_Init+0xea>
 80015a6:	2f03      	cmp	r7, #3
 80015a8:	d1c4      	bne.n	8001534 <HAL_DMA_Init+0x70>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80015aa:	01ea      	lsls	r2, r5, #7
 80015ac:	d5c2      	bpl.n	8001534 <HAL_DMA_Init+0x70>
        hdma->State = HAL_DMA_STATE_READY;
 80015ae:	2301      	movs	r3, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80015b0:	2240      	movs	r2, #64	; 0x40
        return HAL_ERROR; 
 80015b2:	4618      	mov	r0, r3
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80015b4:	6562      	str	r2, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 80015b6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 80015ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (tmp)
 80015bc:	2f01      	cmp	r7, #1
 80015be:	d003      	beq.n	80015c8 <HAL_DMA_Init+0x104>
 80015c0:	d3f3      	bcc.n	80015aa <HAL_DMA_Init+0xe6>
 80015c2:	2f02      	cmp	r7, #2
 80015c4:	d1b6      	bne.n	8001534 <HAL_DMA_Init+0x70>
 80015c6:	e7f0      	b.n	80015aa <HAL_DMA_Init+0xe6>
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80015c8:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 80015cc:	d1b2      	bne.n	8001534 <HAL_DMA_Init+0x70>
 80015ce:	e7ee      	b.n	80015ae <HAL_DMA_Init+0xea>
    switch (tmp)
 80015d0:	2f03      	cmp	r7, #3
 80015d2:	d8af      	bhi.n	8001534 <HAL_DMA_Init+0x70>
 80015d4:	a201      	add	r2, pc, #4	; (adr r2, 80015dc <HAL_DMA_Init+0x118>)
 80015d6:	f852 f027 	ldr.w	pc, [r2, r7, lsl #2]
 80015da:	bf00      	nop
 80015dc:	080015af 	.word	0x080015af
 80015e0:	080015ab 	.word	0x080015ab
 80015e4:	080015af 	.word	0x080015af
 80015e8:	080015c9 	.word	0x080015c9
 80015ec:	f010803f 	.word	0xf010803f
 80015f0:	aaaaaaab 	.word	0xaaaaaaab
 80015f4:	fffffc00 	.word	0xfffffc00
 80015f8:	0801abac 	.word	0x0801abac

080015fc <HAL_DMA_Start_IT>:
{
 80015fc:	b4f0      	push	{r4, r5, r6, r7}
  __HAL_LOCK(hdma);
 80015fe:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8001602:	2c01      	cmp	r4, #1
 8001604:	d038      	beq.n	8001678 <HAL_DMA_Start_IT+0x7c>
 8001606:	2501      	movs	r5, #1
  if(HAL_DMA_STATE_READY == hdma->State)
 8001608:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800160c:	6d86      	ldr	r6, [r0, #88]	; 0x58
  if(HAL_DMA_STATE_READY == hdma->State)
 800160e:	42ac      	cmp	r4, r5
  __HAL_LOCK(hdma);
 8001610:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 8001614:	d129      	bne.n	800166a <HAL_DMA_Start_IT+0x6e>
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8001616:	6804      	ldr	r4, [r0, #0]
    hdma->State = HAL_DMA_STATE_BUSY;
 8001618:	2702      	movs	r7, #2
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800161a:	2500      	movs	r5, #0
    hdma->State = HAL_DMA_STATE_BUSY;
 800161c:	f880 7035 	strb.w	r7, [r0, #53]	; 0x35
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8001620:	6545      	str	r5, [r0, #84]	; 0x54
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8001622:	6887      	ldr	r7, [r0, #8]
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8001624:	6825      	ldr	r5, [r4, #0]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8001626:	2f40      	cmp	r7, #64	; 0x40
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8001628:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 800162c:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 800162e:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8001630:	d026      	beq.n	8001680 <HAL_DMA_Start_IT+0x84>
    hdma->Instance->PAR = SrcAddress;
 8001632:	60a1      	str	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 8001634:	60e2      	str	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001636:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8001638:	233f      	movs	r3, #63	; 0x3f
    if(hdma->XferHalfCpltCallback != NULL)
 800163a:	6c02      	ldr	r2, [r0, #64]	; 0x40
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800163c:	408b      	lsls	r3, r1
 800163e:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8001640:	6823      	ldr	r3, [r4, #0]
 8001642:	f043 0316 	orr.w	r3, r3, #22
 8001646:	6023      	str	r3, [r4, #0]
    hdma->Instance->FCR |= DMA_IT_FE;
 8001648:	6963      	ldr	r3, [r4, #20]
 800164a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800164e:	6163      	str	r3, [r4, #20]
    if(hdma->XferHalfCpltCallback != NULL)
 8001650:	b11a      	cbz	r2, 800165a <HAL_DMA_Start_IT+0x5e>
      hdma->Instance->CR  |= DMA_IT_HT;
 8001652:	6823      	ldr	r3, [r4, #0]
 8001654:	f043 0308 	orr.w	r3, r3, #8
 8001658:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 800165a:	6822      	ldr	r2, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800165c:	2300      	movs	r3, #0
    __HAL_DMA_ENABLE(hdma);
 800165e:	f042 0201 	orr.w	r2, r2, #1
}
 8001662:	4618      	mov	r0, r3
    __HAL_DMA_ENABLE(hdma);
 8001664:	6022      	str	r2, [r4, #0]
}
 8001666:	bcf0      	pop	{r4, r5, r6, r7}
 8001668:	4770      	bx	lr
    __HAL_UNLOCK(hdma);	  
 800166a:	2200      	movs	r2, #0
    status = HAL_BUSY;
 800166c:	2302      	movs	r3, #2
    __HAL_UNLOCK(hdma);	  
 800166e:	f880 2034 	strb.w	r2, [r0, #52]	; 0x34
}
 8001672:	4618      	mov	r0, r3
 8001674:	bcf0      	pop	{r4, r5, r6, r7}
 8001676:	4770      	bx	lr
  __HAL_LOCK(hdma);
 8001678:	2302      	movs	r3, #2
}
 800167a:	bcf0      	pop	{r4, r5, r6, r7}
 800167c:	4618      	mov	r0, r3
 800167e:	4770      	bx	lr
    hdma->Instance->PAR = DstAddress;
 8001680:	60a2      	str	r2, [r4, #8]
    hdma->Instance->M0AR = SrcAddress;
 8001682:	60e1      	str	r1, [r4, #12]
 8001684:	e7d7      	b.n	8001636 <HAL_DMA_Start_IT+0x3a>
 8001686:	bf00      	nop

08001688 <HAL_DMA_Abort>:
{
 8001688:	b570      	push	{r4, r5, r6, lr}
 800168a:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800168c:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800168e:	f7ff fc19 	bl	8000ec4 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001692:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8001696:	2b02      	cmp	r3, #2
 8001698:	d006      	beq.n	80016a8 <HAL_DMA_Abort+0x20>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800169a:	2280      	movs	r2, #128	; 0x80
    __HAL_UNLOCK(hdma);
 800169c:	2300      	movs	r3, #0
    return HAL_ERROR;
 800169e:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80016a0:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 80016a2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
}
 80016a6:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80016a8:	6823      	ldr	r3, [r4, #0]
 80016aa:	4605      	mov	r5, r0
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80016ac:	6c21      	ldr	r1, [r4, #64]	; 0x40
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80016ae:	681a      	ldr	r2, [r3, #0]
 80016b0:	f022 0216 	bic.w	r2, r2, #22
 80016b4:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80016b6:	695a      	ldr	r2, [r3, #20]
 80016b8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80016bc:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80016be:	b339      	cbz	r1, 8001710 <HAL_DMA_Abort+0x88>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 80016c0:	681a      	ldr	r2, [r3, #0]
 80016c2:	f022 0208 	bic.w	r2, r2, #8
 80016c6:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 80016c8:	681a      	ldr	r2, [r3, #0]
 80016ca:	f022 0201 	bic.w	r2, r2, #1
 80016ce:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80016d0:	e005      	b.n	80016de <HAL_DMA_Abort+0x56>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80016d2:	f7ff fbf7 	bl	8000ec4 <HAL_GetTick>
 80016d6:	1b40      	subs	r0, r0, r5
 80016d8:	2805      	cmp	r0, #5
 80016da:	d80f      	bhi.n	80016fc <HAL_DMA_Abort+0x74>
 80016dc:	6823      	ldr	r3, [r4, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	f013 0301 	ands.w	r3, r3, #1
 80016e4:	d1f5      	bne.n	80016d2 <HAL_DMA_Abort+0x4a>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80016e6:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 80016e8:	223f      	movs	r2, #63	; 0x3f
  return HAL_OK;
 80016ea:	4618      	mov	r0, r3
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80016ec:	408a      	lsls	r2, r1
    hdma->State = HAL_DMA_STATE_READY;
 80016ee:	2101      	movs	r1, #1
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80016f0:	60b2      	str	r2, [r6, #8]
    __HAL_UNLOCK(hdma);
 80016f2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    hdma->State = HAL_DMA_STATE_READY;
 80016f6:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
}
 80016fa:	bd70      	pop	{r4, r5, r6, pc}
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80016fc:	2303      	movs	r3, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80016fe:	2120      	movs	r1, #32
        __HAL_UNLOCK(hdma);
 8001700:	2200      	movs	r2, #0
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001702:	6561      	str	r1, [r4, #84]	; 0x54
        return HAL_TIMEOUT;
 8001704:	4618      	mov	r0, r3
        __HAL_UNLOCK(hdma);
 8001706:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800170a:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 800170e:	bd70      	pop	{r4, r5, r6, pc}
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001710:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8001712:	2a00      	cmp	r2, #0
 8001714:	d1d4      	bne.n	80016c0 <HAL_DMA_Abort+0x38>
 8001716:	e7d7      	b.n	80016c8 <HAL_DMA_Abort+0x40>

08001718 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001718:	f890 2035 	ldrb.w	r2, [r0, #53]	; 0x35
{
 800171c:	4603      	mov	r3, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800171e:	2a02      	cmp	r2, #2
 8001720:	d003      	beq.n	800172a <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001722:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
 8001724:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001726:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8001728:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 800172a:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800172c:	2105      	movs	r1, #5
  return HAL_OK;
 800172e:	2000      	movs	r0, #0
    hdma->State = HAL_DMA_STATE_ABORT;
 8001730:	f883 1035 	strb.w	r1, [r3, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8001734:	6813      	ldr	r3, [r2, #0]
 8001736:	f023 0301 	bic.w	r3, r3, #1
 800173a:	6013      	str	r3, [r2, #0]
}
 800173c:	4770      	bx	lr
 800173e:	bf00      	nop

08001740 <HAL_DMA_IRQHandler>:
{
 8001740:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001742:	4604      	mov	r4, r0
 8001744:	b083      	sub	sp, #12
  __IO uint32_t count = 0;
 8001746:	2000      	movs	r0, #0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8001748:	2208      	movs	r2, #8
  uint32_t timeout = SystemCoreClock / 9600;
 800174a:	4966      	ldr	r1, [pc, #408]	; (80018e4 <HAL_DMA_IRQHandler+0x1a4>)
  __IO uint32_t count = 0;
 800174c:	9001      	str	r0, [sp, #4]
  uint32_t timeout = SystemCoreClock / 9600;
 800174e:	680e      	ldr	r6, [r1, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8001750:	e9d4 7316 	ldrd	r7, r3, [r4, #88]	; 0x58
 8001754:	409a      	lsls	r2, r3
  tmpisr = regs->ISR;
 8001756:	683d      	ldr	r5, [r7, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8001758:	422a      	tst	r2, r5
 800175a:	d003      	beq.n	8001764 <HAL_DMA_IRQHandler+0x24>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 800175c:	6821      	ldr	r1, [r4, #0]
 800175e:	6808      	ldr	r0, [r1, #0]
 8001760:	0740      	lsls	r0, r0, #29
 8001762:	d459      	bmi.n	8001818 <HAL_DMA_IRQHandler+0xd8>
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8001764:	2201      	movs	r2, #1
 8001766:	409a      	lsls	r2, r3
 8001768:	422a      	tst	r2, r5
 800176a:	d003      	beq.n	8001774 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 800176c:	6821      	ldr	r1, [r4, #0]
 800176e:	6949      	ldr	r1, [r1, #20]
 8001770:	0608      	lsls	r0, r1, #24
 8001772:	d474      	bmi.n	800185e <HAL_DMA_IRQHandler+0x11e>
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8001774:	2204      	movs	r2, #4
 8001776:	409a      	lsls	r2, r3
 8001778:	422a      	tst	r2, r5
 800177a:	d003      	beq.n	8001784 <HAL_DMA_IRQHandler+0x44>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800177c:	6821      	ldr	r1, [r4, #0]
 800177e:	6809      	ldr	r1, [r1, #0]
 8001780:	0789      	lsls	r1, r1, #30
 8001782:	d466      	bmi.n	8001852 <HAL_DMA_IRQHandler+0x112>
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8001784:	2210      	movs	r2, #16
 8001786:	409a      	lsls	r2, r3
 8001788:	422a      	tst	r2, r5
 800178a:	d003      	beq.n	8001794 <HAL_DMA_IRQHandler+0x54>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 800178c:	6821      	ldr	r1, [r4, #0]
 800178e:	6808      	ldr	r0, [r1, #0]
 8001790:	0700      	lsls	r0, r0, #28
 8001792:	d44b      	bmi.n	800182c <HAL_DMA_IRQHandler+0xec>
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8001794:	2220      	movs	r2, #32
 8001796:	409a      	lsls	r2, r3
 8001798:	422a      	tst	r2, r5
 800179a:	d014      	beq.n	80017c6 <HAL_DMA_IRQHandler+0x86>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 800179c:	6821      	ldr	r1, [r4, #0]
 800179e:	6808      	ldr	r0, [r1, #0]
 80017a0:	06c0      	lsls	r0, r0, #27
 80017a2:	d510      	bpl.n	80017c6 <HAL_DMA_IRQHandler+0x86>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 80017a4:	60ba      	str	r2, [r7, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 80017a6:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 80017aa:	2a05      	cmp	r2, #5
 80017ac:	d063      	beq.n	8001876 <HAL_DMA_IRQHandler+0x136>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80017ae:	680b      	ldr	r3, [r1, #0]
 80017b0:	f413 2f80 	tst.w	r3, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80017b4:	680b      	ldr	r3, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80017b6:	d07e      	beq.n	80018b6 <HAL_DMA_IRQHandler+0x176>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80017b8:	0319      	lsls	r1, r3, #12
 80017ba:	f140 8089 	bpl.w	80018d0 <HAL_DMA_IRQHandler+0x190>
        if(hdma->XferCpltCallback != NULL)
 80017be:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80017c0:	b10b      	cbz	r3, 80017c6 <HAL_DMA_IRQHandler+0x86>
          hdma->XferCpltCallback(hdma);
 80017c2:	4620      	mov	r0, r4
 80017c4:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80017c6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80017c8:	b323      	cbz	r3, 8001814 <HAL_DMA_IRQHandler+0xd4>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 80017ca:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80017cc:	07da      	lsls	r2, r3, #31
 80017ce:	d51a      	bpl.n	8001806 <HAL_DMA_IRQHandler+0xc6>
      __HAL_DMA_DISABLE(hdma);
 80017d0:	6822      	ldr	r2, [r4, #0]
      hdma->State = HAL_DMA_STATE_ABORT;
 80017d2:	2105      	movs	r1, #5
  uint32_t timeout = SystemCoreClock / 9600;
 80017d4:	4b44      	ldr	r3, [pc, #272]	; (80018e8 <HAL_DMA_IRQHandler+0x1a8>)
      hdma->State = HAL_DMA_STATE_ABORT;
 80017d6:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
  uint32_t timeout = SystemCoreClock / 9600;
 80017da:	fba3 3606 	umull	r3, r6, r3, r6
      __HAL_DMA_DISABLE(hdma);
 80017de:	6813      	ldr	r3, [r2, #0]
 80017e0:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600;
 80017e4:	0ab6      	lsrs	r6, r6, #10
      __HAL_DMA_DISABLE(hdma);
 80017e6:	6013      	str	r3, [r2, #0]
 80017e8:	e002      	b.n	80017f0 <HAL_DMA_IRQHandler+0xb0>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 80017ea:	6813      	ldr	r3, [r2, #0]
 80017ec:	07db      	lsls	r3, r3, #31
 80017ee:	d504      	bpl.n	80017fa <HAL_DMA_IRQHandler+0xba>
        if (++count > timeout)
 80017f0:	9b01      	ldr	r3, [sp, #4]
 80017f2:	3301      	adds	r3, #1
 80017f4:	42b3      	cmp	r3, r6
 80017f6:	9301      	str	r3, [sp, #4]
 80017f8:	d9f7      	bls.n	80017ea <HAL_DMA_IRQHandler+0xaa>
      __HAL_UNLOCK(hdma);
 80017fa:	2200      	movs	r2, #0
      hdma->State = HAL_DMA_STATE_READY;
 80017fc:	2301      	movs	r3, #1
      __HAL_UNLOCK(hdma);
 80017fe:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
      hdma->State = HAL_DMA_STATE_READY;
 8001802:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    if(hdma->XferErrorCallback != NULL)
 8001806:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8001808:	b123      	cbz	r3, 8001814 <HAL_DMA_IRQHandler+0xd4>
      hdma->XferErrorCallback(hdma);
 800180a:	4620      	mov	r0, r4
}
 800180c:	b003      	add	sp, #12
 800180e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 8001812:	4718      	bx	r3
}
 8001814:	b003      	add	sp, #12
 8001816:	bdf0      	pop	{r4, r5, r6, r7, pc}
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8001818:	6808      	ldr	r0, [r1, #0]
 800181a:	f020 0004 	bic.w	r0, r0, #4
 800181e:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8001820:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8001822:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8001824:	f042 0201 	orr.w	r2, r2, #1
 8001828:	6562      	str	r2, [r4, #84]	; 0x54
 800182a:	e79b      	b.n	8001764 <HAL_DMA_IRQHandler+0x24>
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 800182c:	60ba      	str	r2, [r7, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800182e:	680a      	ldr	r2, [r1, #0]
 8001830:	f412 2f80 	tst.w	r2, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8001834:	680a      	ldr	r2, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8001836:	d118      	bne.n	800186a <HAL_DMA_IRQHandler+0x12a>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8001838:	05d2      	lsls	r2, r2, #23
 800183a:	d403      	bmi.n	8001844 <HAL_DMA_IRQHandler+0x104>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800183c:	680a      	ldr	r2, [r1, #0]
 800183e:	f022 0208 	bic.w	r2, r2, #8
 8001842:	600a      	str	r2, [r1, #0]
        if(hdma->XferHalfCpltCallback != NULL)
 8001844:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8001846:	2a00      	cmp	r2, #0
 8001848:	d0a4      	beq.n	8001794 <HAL_DMA_IRQHandler+0x54>
          hdma->XferHalfCpltCallback(hdma);
 800184a:	4620      	mov	r0, r4
 800184c:	4790      	blx	r2
 800184e:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8001850:	e7a0      	b.n	8001794 <HAL_DMA_IRQHandler+0x54>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8001852:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8001854:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8001856:	f042 0204 	orr.w	r2, r2, #4
 800185a:	6562      	str	r2, [r4, #84]	; 0x54
 800185c:	e792      	b.n	8001784 <HAL_DMA_IRQHandler+0x44>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 800185e:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8001860:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8001862:	f042 0202 	orr.w	r2, r2, #2
 8001866:	6562      	str	r2, [r4, #84]	; 0x54
 8001868:	e784      	b.n	8001774 <HAL_DMA_IRQHandler+0x34>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800186a:	0311      	lsls	r1, r2, #12
 800186c:	d5ea      	bpl.n	8001844 <HAL_DMA_IRQHandler+0x104>
          if(hdma->XferM1HalfCpltCallback != NULL)
 800186e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8001870:	2a00      	cmp	r2, #0
 8001872:	d1ea      	bne.n	800184a <HAL_DMA_IRQHandler+0x10a>
 8001874:	e78e      	b.n	8001794 <HAL_DMA_IRQHandler+0x54>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8001876:	680a      	ldr	r2, [r1, #0]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001878:	6c20      	ldr	r0, [r4, #64]	; 0x40
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800187a:	f022 0216 	bic.w	r2, r2, #22
 800187e:	600a      	str	r2, [r1, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8001880:	694a      	ldr	r2, [r1, #20]
 8001882:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001886:	614a      	str	r2, [r1, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001888:	b338      	cbz	r0, 80018da <HAL_DMA_IRQHandler+0x19a>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800188a:	680a      	ldr	r2, [r1, #0]
 800188c:	f022 0208 	bic.w	r2, r2, #8
 8001890:	600a      	str	r2, [r1, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001892:	223f      	movs	r2, #63	; 0x3f
        __HAL_UNLOCK(hdma);
 8001894:	2000      	movs	r0, #0
        hdma->State = HAL_DMA_STATE_READY;
 8001896:	2101      	movs	r1, #1
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001898:	fa02 f303 	lsl.w	r3, r2, r3
        if(hdma->XferAbortCallback != NULL)
 800189c:	6d22      	ldr	r2, [r4, #80]	; 0x50
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800189e:	60bb      	str	r3, [r7, #8]
        __HAL_UNLOCK(hdma);
 80018a0:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_READY;
 80018a4:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
        if(hdma->XferAbortCallback != NULL)
 80018a8:	2a00      	cmp	r2, #0
 80018aa:	d0b3      	beq.n	8001814 <HAL_DMA_IRQHandler+0xd4>
          hdma->XferAbortCallback(hdma);
 80018ac:	4620      	mov	r0, r4
}
 80018ae:	b003      	add	sp, #12
 80018b0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
          hdma->XferAbortCallback(hdma);
 80018b4:	4710      	bx	r2
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80018b6:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 80018ba:	d180      	bne.n	80017be <HAL_DMA_IRQHandler+0x7e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80018bc:	680a      	ldr	r2, [r1, #0]
          hdma->State = HAL_DMA_STATE_READY;
 80018be:	2001      	movs	r0, #1
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80018c0:	f022 0210 	bic.w	r2, r2, #16
 80018c4:	600a      	str	r2, [r1, #0]
          __HAL_UNLOCK(hdma);
 80018c6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
          hdma->State = HAL_DMA_STATE_READY;
 80018ca:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
 80018ce:	e776      	b.n	80017be <HAL_DMA_IRQHandler+0x7e>
          if(hdma->XferM1CpltCallback != NULL)
 80018d0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80018d2:	2b00      	cmp	r3, #0
 80018d4:	f47f af75 	bne.w	80017c2 <HAL_DMA_IRQHandler+0x82>
 80018d8:	e775      	b.n	80017c6 <HAL_DMA_IRQHandler+0x86>
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80018da:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80018dc:	2a00      	cmp	r2, #0
 80018de:	d1d4      	bne.n	800188a <HAL_DMA_IRQHandler+0x14a>
 80018e0:	e7d7      	b.n	8001892 <HAL_DMA_IRQHandler+0x152>
 80018e2:	bf00      	nop
 80018e4:	20000038 	.word	0x20000038
 80018e8:	1b4e81b5 	.word	0x1b4e81b5

080018ec <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80018ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80018f0:	4688      	mov	r8, r1
 80018f2:	b083      	sub	sp, #12
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 80018f4:	2400      	movs	r4, #0
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80018f6:	f8d1 9000 	ldr.w	r9, [r1]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80018fa:	f8df e1f8 	ldr.w	lr, [pc, #504]	; 8001af4 <HAL_GPIO_Init+0x208>
 80018fe:	e003      	b.n	8001908 <HAL_GPIO_Init+0x1c>
  for(position = 0; position < GPIO_NUMBER; position++)
 8001900:	3401      	adds	r4, #1
 8001902:	2c10      	cmp	r4, #16
 8001904:	f000 80b6 	beq.w	8001a74 <HAL_GPIO_Init+0x188>
    ioposition = ((uint32_t)0x01) << position;
 8001908:	2301      	movs	r3, #1
 800190a:	40a3      	lsls	r3, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800190c:	ea09 0203 	and.w	r2, r9, r3
    if(iocurrent == ioposition)
 8001910:	4293      	cmp	r3, r2
 8001912:	d1f5      	bne.n	8001900 <HAL_GPIO_Init+0x14>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001914:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8001918:	0067      	lsls	r7, r4, #1
 800191a:	2103      	movs	r1, #3
 800191c:	f025 0c10 	bic.w	ip, r5, #16
 8001920:	40b9      	lsls	r1, r7
 8001922:	f10c 33ff 	add.w	r3, ip, #4294967295
 8001926:	43c9      	mvns	r1, r1
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001928:	2b01      	cmp	r3, #1
 800192a:	d810      	bhi.n	800194e <HAL_GPIO_Init+0x62>
        temp = GPIOx->OSPEEDR; 
 800192c:	6886      	ldr	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800192e:	f3c5 1300 	ubfx	r3, r5, #4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8001932:	ea06 0a01 	and.w	sl, r6, r1
        temp |= (GPIO_Init->Speed << (position * 2));
 8001936:	f8d8 600c 	ldr.w	r6, [r8, #12]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800193a:	40a3      	lsls	r3, r4
        temp |= (GPIO_Init->Speed << (position * 2));
 800193c:	40be      	lsls	r6, r7
 800193e:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
 8001942:	6086      	str	r6, [r0, #8]
        temp = GPIOx->OTYPER;
 8001944:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001946:	ea26 0602 	bic.w	r6, r6, r2
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 800194a:	4333      	orrs	r3, r6
        GPIOx->OTYPER = temp;
 800194c:	6043      	str	r3, [r0, #4]
      temp = GPIOx->PUPDR;
 800194e:	68c3      	ldr	r3, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001950:	f1bc 0f02 	cmp.w	ip, #2
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8001954:	f8d8 6008 	ldr.w	r6, [r8, #8]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8001958:	ea03 0301 	and.w	r3, r3, r1
      temp |= ((GPIO_Init->Pull) << (position * 2));
 800195c:	fa06 f607 	lsl.w	r6, r6, r7
 8001960:	ea46 0603 	orr.w	r6, r6, r3
      GPIOx->PUPDR = temp;
 8001964:	60c6      	str	r6, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001966:	d115      	bne.n	8001994 <HAL_GPIO_Init+0xa8>
        temp = GPIOx->AFR[position >> 3];
 8001968:	08e3      	lsrs	r3, r4, #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800196a:	f004 0c07 	and.w	ip, r4, #7
 800196e:	f04f 0b0f 	mov.w	fp, #15
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8001972:	f8d8 6010 	ldr.w	r6, [r8, #16]
 8001976:	eb00 0383 	add.w	r3, r0, r3, lsl #2
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800197a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp = GPIOx->AFR[position >> 3];
 800197e:	f8d3 a020 	ldr.w	sl, [r3, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8001982:	fa0b fb0c 	lsl.w	fp, fp, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8001986:	fa06 f60c 	lsl.w	r6, r6, ip
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800198a:	ea2a 0a0b 	bic.w	sl, sl, fp
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800198e:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3] = temp;
 8001992:	621e      	str	r6, [r3, #32]
      temp = GPIOx->MODER;
 8001994:	6806      	ldr	r6, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8001996:	f005 0303 	and.w	r3, r5, #3
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 800199a:	4031      	ands	r1, r6
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 800199c:	40bb      	lsls	r3, r7
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800199e:	00ef      	lsls	r7, r5, #3
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80019a0:	ea43 0301 	orr.w	r3, r3, r1
      GPIOx->MODER = temp;
 80019a4:	6003      	str	r3, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80019a6:	d5ab      	bpl.n	8001900 <HAL_GPIO_Init+0x14>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019a8:	4b48      	ldr	r3, [pc, #288]	; (8001acc <HAL_GPIO_Init+0x1e0>)
 80019aa:	f024 0603 	bic.w	r6, r4, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019ae:	f04f 0c0f 	mov.w	ip, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019b2:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80019b4:	4619      	mov	r1, r3
 80019b6:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019ba:	f004 0303 	and.w	r3, r4, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019be:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80019c2:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019c6:	009b      	lsls	r3, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019c8:	644f      	str	r7, [r1, #68]	; 0x44
 80019ca:	6c4f      	ldr	r7, [r1, #68]	; 0x44
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019cc:	fa0c f103 	lsl.w	r1, ip, r3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019d0:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80019d4:	9701      	str	r7, [sp, #4]
 80019d6:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 80019d8:	68b7      	ldr	r7, [r6, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80019da:	ea27 0101 	bic.w	r1, r7, r1
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80019de:	4f3c      	ldr	r7, [pc, #240]	; (8001ad0 <HAL_GPIO_Init+0x1e4>)
 80019e0:	42b8      	cmp	r0, r7
 80019e2:	d020      	beq.n	8001a26 <HAL_GPIO_Init+0x13a>
 80019e4:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80019e8:	42b8      	cmp	r0, r7
 80019ea:	d046      	beq.n	8001a7a <HAL_GPIO_Init+0x18e>
 80019ec:	4f39      	ldr	r7, [pc, #228]	; (8001ad4 <HAL_GPIO_Init+0x1e8>)
 80019ee:	42b8      	cmp	r0, r7
 80019f0:	d048      	beq.n	8001a84 <HAL_GPIO_Init+0x198>
 80019f2:	4f39      	ldr	r7, [pc, #228]	; (8001ad8 <HAL_GPIO_Init+0x1ec>)
 80019f4:	42b8      	cmp	r0, r7
 80019f6:	d04a      	beq.n	8001a8e <HAL_GPIO_Init+0x1a2>
 80019f8:	4f38      	ldr	r7, [pc, #224]	; (8001adc <HAL_GPIO_Init+0x1f0>)
 80019fa:	42b8      	cmp	r0, r7
 80019fc:	d04c      	beq.n	8001a98 <HAL_GPIO_Init+0x1ac>
 80019fe:	4f38      	ldr	r7, [pc, #224]	; (8001ae0 <HAL_GPIO_Init+0x1f4>)
 8001a00:	42b8      	cmp	r0, r7
 8001a02:	d053      	beq.n	8001aac <HAL_GPIO_Init+0x1c0>
 8001a04:	4f37      	ldr	r7, [pc, #220]	; (8001ae4 <HAL_GPIO_Init+0x1f8>)
 8001a06:	42b8      	cmp	r0, r7
 8001a08:	d055      	beq.n	8001ab6 <HAL_GPIO_Init+0x1ca>
 8001a0a:	4f37      	ldr	r7, [pc, #220]	; (8001ae8 <HAL_GPIO_Init+0x1fc>)
 8001a0c:	42b8      	cmp	r0, r7
 8001a0e:	d048      	beq.n	8001aa2 <HAL_GPIO_Init+0x1b6>
 8001a10:	4f36      	ldr	r7, [pc, #216]	; (8001aec <HAL_GPIO_Init+0x200>)
 8001a12:	42b8      	cmp	r0, r7
 8001a14:	d054      	beq.n	8001ac0 <HAL_GPIO_Init+0x1d4>
 8001a16:	4f36      	ldr	r7, [pc, #216]	; (8001af0 <HAL_GPIO_Init+0x204>)
 8001a18:	42b8      	cmp	r0, r7
 8001a1a:	bf0c      	ite	eq
 8001a1c:	2709      	moveq	r7, #9
 8001a1e:	270a      	movne	r7, #10
 8001a20:	fa07 f303 	lsl.w	r3, r7, r3
 8001a24:	4319      	orrs	r1, r3
        SYSCFG->EXTICR[position >> 2] = temp;
 8001a26:	60b1      	str	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8001a28:	43d1      	mvns	r1, r2
        temp = EXTI->IMR;
 8001a2a:	f8de 3000 	ldr.w	r3, [lr]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001a2e:	03ee      	lsls	r6, r5, #15
  for(position = 0; position < GPIO_NUMBER; position++)
 8001a30:	f104 0401 	add.w	r4, r4, #1
        temp &= ~((uint32_t)iocurrent);
 8001a34:	bf54      	ite	pl
 8001a36:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 8001a38:	4313      	orrmi	r3, r2
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001a3a:	03af      	lsls	r7, r5, #14
        EXTI->IMR = temp;
 8001a3c:	f8ce 3000 	str.w	r3, [lr]
        temp = EXTI->EMR;
 8001a40:	f8de 3004 	ldr.w	r3, [lr, #4]
        temp &= ~((uint32_t)iocurrent);
 8001a44:	bf54      	ite	pl
 8001a46:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 8001a48:	4313      	orrmi	r3, r2
        EXTI->EMR = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001a4a:	02ee      	lsls	r6, r5, #11
        EXTI->EMR = temp;
 8001a4c:	f8ce 3004 	str.w	r3, [lr, #4]
        temp = EXTI->RTSR;
 8001a50:	f8de 3008 	ldr.w	r3, [lr, #8]
        temp &= ~((uint32_t)iocurrent);
 8001a54:	bf54      	ite	pl
 8001a56:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 8001a58:	4313      	orrmi	r3, r2
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001a5a:	02ad      	lsls	r5, r5, #10
        EXTI->RTSR = temp;
 8001a5c:	f8ce 3008 	str.w	r3, [lr, #8]
        temp = EXTI->FTSR;
 8001a60:	f8de 300c 	ldr.w	r3, [lr, #12]
        temp &= ~((uint32_t)iocurrent);
 8001a64:	bf54      	ite	pl
 8001a66:	400b      	andpl	r3, r1
        {
          temp |= iocurrent;
 8001a68:	4313      	orrmi	r3, r2
  for(position = 0; position < GPIO_NUMBER; position++)
 8001a6a:	2c10      	cmp	r4, #16
        }
        EXTI->FTSR = temp;
 8001a6c:	f8ce 300c 	str.w	r3, [lr, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 8001a70:	f47f af4a 	bne.w	8001908 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001a74:	b003      	add	sp, #12
 8001a76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001a7a:	2701      	movs	r7, #1
 8001a7c:	fa07 f303 	lsl.w	r3, r7, r3
 8001a80:	4319      	orrs	r1, r3
 8001a82:	e7d0      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001a84:	2702      	movs	r7, #2
 8001a86:	fa07 f303 	lsl.w	r3, r7, r3
 8001a8a:	4319      	orrs	r1, r3
 8001a8c:	e7cb      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001a8e:	2703      	movs	r7, #3
 8001a90:	fa07 f303 	lsl.w	r3, r7, r3
 8001a94:	4319      	orrs	r1, r3
 8001a96:	e7c6      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001a98:	2704      	movs	r7, #4
 8001a9a:	fa07 f303 	lsl.w	r3, r7, r3
 8001a9e:	4319      	orrs	r1, r3
 8001aa0:	e7c1      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001aa2:	2707      	movs	r7, #7
 8001aa4:	fa07 f303 	lsl.w	r3, r7, r3
 8001aa8:	4319      	orrs	r1, r3
 8001aaa:	e7bc      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001aac:	2705      	movs	r7, #5
 8001aae:	fa07 f303 	lsl.w	r3, r7, r3
 8001ab2:	4319      	orrs	r1, r3
 8001ab4:	e7b7      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001ab6:	2706      	movs	r7, #6
 8001ab8:	fa07 f303 	lsl.w	r3, r7, r3
 8001abc:	4319      	orrs	r1, r3
 8001abe:	e7b2      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001ac0:	2708      	movs	r7, #8
 8001ac2:	fa07 f303 	lsl.w	r3, r7, r3
 8001ac6:	4319      	orrs	r1, r3
 8001ac8:	e7ad      	b.n	8001a26 <HAL_GPIO_Init+0x13a>
 8001aca:	bf00      	nop
 8001acc:	40023800 	.word	0x40023800
 8001ad0:	40020000 	.word	0x40020000
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020c00 	.word	0x40020c00
 8001adc:	40021000 	.word	0x40021000
 8001ae0:	40021400 	.word	0x40021400
 8001ae4:	40021800 	.word	0x40021800
 8001ae8:	40021c00 	.word	0x40021c00
 8001aec:	40022000 	.word	0x40022000
 8001af0:	40022400 	.word	0x40022400
 8001af4:	40013c00 	.word	0x40013c00

08001af8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001af8:	b902      	cbnz	r2, 8001afc <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8001afa:	0409      	lsls	r1, r1, #16
 8001afc:	6181      	str	r1, [r0, #24]
  }
}
 8001afe:	4770      	bx	lr

08001b00 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8001b00:	b570      	push	{r4, r5, r6, lr}
 8001b02:	4604      	mov	r4, r0
 8001b04:	460d      	mov	r5, r1
 8001b06:	4616      	mov	r6, r2
 8001b08:	1c6a      	adds	r2, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8001b0a:	6823      	ldr	r3, [r4, #0]
 8001b0c:	d12c      	bne.n	8001b68 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8001b0e:	699a      	ldr	r2, [r3, #24]
 8001b10:	0790      	lsls	r0, r2, #30
 8001b12:	d427      	bmi.n	8001b64 <I2C_WaitOnTXISFlagUntilTimeout+0x64>
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001b14:	699a      	ldr	r2, [r3, #24]
 8001b16:	06d1      	lsls	r1, r2, #27
 8001b18:	d5f9      	bpl.n	8001b0e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
  {
    /* Wait until STOP Flag is reset */
    /* AutoEnd should be initiate after AF */
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001b1a:	699a      	ldr	r2, [r3, #24]
 8001b1c:	0691      	lsls	r1, r2, #26
 8001b1e:	d5fc      	bpl.n	8001b1a <I2C_WaitOnTXISFlagUntilTimeout+0x1a>

    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001b20:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001b22:	2110      	movs	r1, #16
 8001b24:	61d9      	str	r1, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001b26:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8001b28:	699a      	ldr	r2, [r3, #24]
 8001b2a:	0790      	lsls	r0, r2, #30
 8001b2c:	d501      	bpl.n	8001b32 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    hi2c->Instance->TXDR = 0x00U;
 8001b2e:	2200      	movs	r2, #0
 8001b30:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8001b32:	699a      	ldr	r2, [r3, #24]
 8001b34:	07d1      	lsls	r1, r2, #31
 8001b36:	d403      	bmi.n	8001b40 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8001b38:	699a      	ldr	r2, [r3, #24]
 8001b3a:	f042 0201 	orr.w	r2, r2, #1
 8001b3e:	619a      	str	r2, [r3, #24]

    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8001b40:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001b42:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
 8001b44:	4e1b      	ldr	r6, [pc, #108]	; (8001bb4 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>)
    hi2c->State = HAL_I2C_STATE_READY;
 8001b46:	2520      	movs	r5, #32
      return HAL_ERROR;
 8001b48:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8001b4a:	4032      	ands	r2, r6
 8001b4c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001b4e:	6c63      	ldr	r3, [r4, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8001b50:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001b54:	f043 0304 	orr.w	r3, r3, #4
 8001b58:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8001b5a:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001b5e:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 8001b62:	bd70      	pop	{r4, r5, r6, pc}
  return HAL_OK;
 8001b64:	2000      	movs	r0, #0
}
 8001b66:	bd70      	pop	{r4, r5, r6, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8001b68:	699a      	ldr	r2, [r3, #24]
 8001b6a:	0792      	lsls	r2, r2, #30
 8001b6c:	d4fa      	bmi.n	8001b64 <I2C_WaitOnTXISFlagUntilTimeout+0x64>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001b6e:	699a      	ldr	r2, [r3, #24]
 8001b70:	06d0      	lsls	r0, r2, #27
 8001b72:	d41b      	bmi.n	8001bac <I2C_WaitOnTXISFlagUntilTimeout+0xac>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001b74:	f7ff f9a6 	bl	8000ec4 <HAL_GetTick>
 8001b78:	1b80      	subs	r0, r0, r6
 8001b7a:	42a8      	cmp	r0, r5
 8001b7c:	d801      	bhi.n	8001b82 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
 8001b7e:	2d00      	cmp	r5, #0
 8001b80:	d1c2      	bne.n	8001b08 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001b82:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001b84:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001b86:	2200      	movs	r2, #0
        __HAL_UNLOCK(hi2c);
 8001b88:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001b8a:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001b8c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001b90:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001b92:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001b96:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
 8001b9a:	bd70      	pop	{r4, r5, r6, pc}
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001b9c:	f7ff f992 	bl	8000ec4 <HAL_GetTick>
 8001ba0:	1b80      	subs	r0, r0, r6
 8001ba2:	4285      	cmp	r5, r0
 8001ba4:	d3ed      	bcc.n	8001b82 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
 8001ba6:	2d00      	cmp	r5, #0
 8001ba8:	d0eb      	beq.n	8001b82 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
 8001baa:	6823      	ldr	r3, [r4, #0]
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001bac:	699a      	ldr	r2, [r3, #24]
 8001bae:	0692      	lsls	r2, r2, #26
 8001bb0:	d5f4      	bpl.n	8001b9c <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
 8001bb2:	e7b5      	b.n	8001b20 <I2C_WaitOnTXISFlagUntilTimeout+0x20>
 8001bb4:	fe00e800 	.word	0xfe00e800

08001bb8 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8001bb8:	b570      	push	{r4, r5, r6, lr}
 8001bba:	4604      	mov	r4, r0
 8001bbc:	460d      	mov	r5, r1
 8001bbe:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001bc0:	6823      	ldr	r3, [r4, #0]
 8001bc2:	699a      	ldr	r2, [r3, #24]
 8001bc4:	0692      	lsls	r2, r2, #26
 8001bc6:	d449      	bmi.n	8001c5c <I2C_WaitOnSTOPFlagUntilTimeout+0xa4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001bc8:	699a      	ldr	r2, [r3, #24]
 8001bca:	06d2      	lsls	r2, r2, #27
 8001bcc:	d526      	bpl.n	8001c1c <I2C_WaitOnSTOPFlagUntilTimeout+0x64>
 8001bce:	1c68      	adds	r0, r5, #1
 8001bd0:	d138      	bne.n	8001c44 <I2C_WaitOnSTOPFlagUntilTimeout+0x8c>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001bd2:	699a      	ldr	r2, [r3, #24]
 8001bd4:	0691      	lsls	r1, r2, #26
 8001bd6:	d5fc      	bpl.n	8001bd2 <I2C_WaitOnSTOPFlagUntilTimeout+0x1a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001bd8:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001bda:	2110      	movs	r1, #16
 8001bdc:	61d9      	str	r1, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001bde:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8001be0:	699a      	ldr	r2, [r3, #24]
 8001be2:	0790      	lsls	r0, r2, #30
 8001be4:	d501      	bpl.n	8001bea <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    hi2c->Instance->TXDR = 0x00U;
 8001be6:	2200      	movs	r2, #0
 8001be8:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8001bea:	699a      	ldr	r2, [r3, #24]
 8001bec:	07d1      	lsls	r1, r2, #31
 8001bee:	d403      	bmi.n	8001bf8 <I2C_WaitOnSTOPFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8001bf0:	699a      	ldr	r2, [r3, #24]
 8001bf2:	f042 0201 	orr.w	r2, r2, #1
 8001bf6:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
 8001bf8:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001bfa:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
 8001bfc:	4e18      	ldr	r6, [pc, #96]	; (8001c60 <I2C_WaitOnSTOPFlagUntilTimeout+0xa8>)
    hi2c->State = HAL_I2C_STATE_READY;
 8001bfe:	2520      	movs	r5, #32
      return HAL_ERROR;
 8001c00:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8001c02:	4032      	ands	r2, r6
 8001c04:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001c06:	6c63      	ldr	r3, [r4, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
 8001c08:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001c0c:	f043 0304 	orr.w	r3, r3, #4
 8001c10:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8001c12:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001c16:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 8001c1a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001c1c:	f7ff f952 	bl	8000ec4 <HAL_GetTick>
 8001c20:	1b80      	subs	r0, r0, r6
 8001c22:	42a8      	cmp	r0, r5
 8001c24:	d801      	bhi.n	8001c2a <I2C_WaitOnSTOPFlagUntilTimeout+0x72>
 8001c26:	2d00      	cmp	r5, #0
 8001c28:	d1ca      	bne.n	8001bc0 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001c2a:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001c2c:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001c2e:	2200      	movs	r2, #0
        __HAL_UNLOCK(hi2c);
 8001c30:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001c32:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001c34:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001c38:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001c3a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001c3e:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
 8001c42:	bd70      	pop	{r4, r5, r6, pc}
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001c44:	699a      	ldr	r2, [r3, #24]
 8001c46:	0692      	lsls	r2, r2, #26
 8001c48:	d4c6      	bmi.n	8001bd8 <I2C_WaitOnSTOPFlagUntilTimeout+0x20>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001c4a:	f7ff f93b 	bl	8000ec4 <HAL_GetTick>
 8001c4e:	1b80      	subs	r0, r0, r6
 8001c50:	4285      	cmp	r5, r0
 8001c52:	d3ea      	bcc.n	8001c2a <I2C_WaitOnSTOPFlagUntilTimeout+0x72>
 8001c54:	2d00      	cmp	r5, #0
 8001c56:	d0e8      	beq.n	8001c2a <I2C_WaitOnSTOPFlagUntilTimeout+0x72>
 8001c58:	6823      	ldr	r3, [r4, #0]
 8001c5a:	e7b8      	b.n	8001bce <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
 8001c5c:	2000      	movs	r0, #0
}
 8001c5e:	bd70      	pop	{r4, r5, r6, pc}
 8001c60:	fe00e800 	.word	0xfe00e800

08001c64 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8001c64:	2800      	cmp	r0, #0
 8001c66:	d04d      	beq.n	8001d04 <HAL_I2C_Init+0xa0>
{
 8001c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8001c6a:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8001c6e:	4604      	mov	r4, r0
 8001c70:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001c74:	2b00      	cmp	r3, #0
 8001c76:	d040      	beq.n	8001cfa <HAL_I2C_Init+0x96>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8001c78:	2124      	movs	r1, #36	; 0x24
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001c7a:	68e5      	ldr	r5, [r4, #12]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001c7c:	e9d4 3200 	ldrd	r3, r2, [r4]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8001c80:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001c84:	2d01      	cmp	r5, #1
  __HAL_I2C_DISABLE(hi2c);
 8001c86:	6818      	ldr	r0, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001c88:	f022 6170 	bic.w	r1, r2, #251658240	; 0xf000000
 8001c8c:	68a2      	ldr	r2, [r4, #8]
  __HAL_I2C_DISABLE(hi2c);
 8001c8e:	f020 0001 	bic.w	r0, r0, #1
 8001c92:	6018      	str	r0, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001c94:	6119      	str	r1, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8001c96:	6899      	ldr	r1, [r3, #8]
 8001c98:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
 8001c9c:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001c9e:	d028      	beq.n	8001cf2 <HAL_I2C_Init+0x8e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8001ca0:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8001ca4:	2d02      	cmp	r5, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8001ca6:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8001ca8:	d102      	bne.n	8001cb0 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8001caa:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001cae:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001cb0:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001cb2:	2100      	movs	r1, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001cb4:	4814      	ldr	r0, [pc, #80]	; (8001d08 <HAL_I2C_Init+0xa4>)
  hi2c->State = HAL_I2C_STATE_READY;
 8001cb6:	2720      	movs	r7, #32
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cb8:	69a6      	ldr	r6, [r4, #24]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001cba:	4310      	orrs	r0, r2
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cbc:	e9d4 2504 	ldrd	r2, r5, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001cc0:	6058      	str	r0, [r3, #4]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cc2:	432a      	orrs	r2, r5
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8001cc4:	68d8      	ldr	r0, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001cc6:	69e5      	ldr	r5, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cc8:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001ccc:	6a26      	ldr	r6, [r4, #32]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8001cce:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001cd2:	4335      	orrs	r5, r6
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8001cd4:	60d8      	str	r0, [r3, #12]
  return HAL_OK;
 8001cd6:	4608      	mov	r0, r1
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8001cd8:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001cda:	601d      	str	r5, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8001cdc:	681a      	ldr	r2, [r3, #0]
 8001cde:	f042 0201 	orr.w	r2, r2, #1
 8001ce2:	601a      	str	r2, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001ce4:	6461      	str	r1, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8001ce6:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8001cea:	6321      	str	r1, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8001cec:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 8001cf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8001cf2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001cf6:	609a      	str	r2, [r3, #8]
 8001cf8:	e7da      	b.n	8001cb0 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
 8001cfa:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 8001cfe:	f006 fd6d 	bl	80087dc <HAL_I2C_MspInit>
 8001d02:	e7b9      	b.n	8001c78 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
 8001d04:	2001      	movs	r0, #1
}
 8001d06:	4770      	bx	lr
 8001d08:	02008000 	.word	0x02008000

08001d0c <HAL_I2C_Master_Transmit>:
{
 8001d0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001d10:	f890 4041 	ldrb.w	r4, [r0, #65]	; 0x41
{
 8001d14:	9e08      	ldr	r6, [sp, #32]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001d16:	2c20      	cmp	r4, #32
 8001d18:	d16f      	bne.n	8001dfa <HAL_I2C_Master_Transmit+0xee>
    __HAL_LOCK(hi2c);
 8001d1a:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8001d1e:	2c01      	cmp	r4, #1
 8001d20:	d06b      	beq.n	8001dfa <HAL_I2C_Master_Transmit+0xee>
 8001d22:	4698      	mov	r8, r3
 8001d24:	2301      	movs	r3, #1
 8001d26:	4691      	mov	r9, r2
 8001d28:	460f      	mov	r7, r1
 8001d2a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8001d2e:	4604      	mov	r4, r0
    tickstart = HAL_GetTick();
 8001d30:	f7ff f8c8 	bl	8000ec4 <HAL_GetTick>
 8001d34:	4605      	mov	r5, r0
 8001d36:	e004      	b.n	8001d42 <HAL_I2C_Master_Transmit+0x36>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001d38:	f7ff f8c4 	bl	8000ec4 <HAL_GetTick>
 8001d3c:	1b40      	subs	r0, r0, r5
 8001d3e:	2819      	cmp	r0, #25
 8001d40:	d875      	bhi.n	8001e2e <HAL_I2C_Master_Transmit+0x122>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001d42:	6823      	ldr	r3, [r4, #0]
 8001d44:	6998      	ldr	r0, [r3, #24]
 8001d46:	f410 4000 	ands.w	r0, r0, #32768	; 0x8000
 8001d4a:	d1f5      	bne.n	8001d38 <HAL_I2C_Master_Transmit+0x2c>
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001d4c:	2210      	movs	r2, #16
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8001d4e:	2121      	movs	r1, #33	; 0x21
    hi2c->pBuffPtr  = pData;
 8001d50:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 8001d54:	f3c7 0709 	ubfx	r7, r7, #0, #10
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8001d58:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001d5c:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001d60:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->XferCount = Size;
 8001d62:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001d66:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8001d68:	6360      	str	r0, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001d6a:	2aff      	cmp	r2, #255	; 0xff
 8001d6c:	d848      	bhi.n	8001e00 <HAL_I2C_Master_Transmit+0xf4>
      hi2c->XferSize = hi2c->XferCount;
 8001d6e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2,
 8001d70:	4a48      	ldr	r2, [pc, #288]	; (8001e94 <HAL_I2C_Master_Transmit+0x188>)
      hi2c->XferSize = hi2c->XferCount;
 8001d72:	b289      	uxth	r1, r1
  MODIFY_REG(hi2c->Instance->CR2,
 8001d74:	6858      	ldr	r0, [r3, #4]
 8001d76:	433a      	orrs	r2, r7
 8001d78:	f8df e124 	ldr.w	lr, [pc, #292]	; 8001ea0 <HAL_I2C_Master_Transmit+0x194>
 8001d7c:	fa5f fc81 	uxtb.w	ip, r1
      hi2c->XferSize = hi2c->XferCount;
 8001d80:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001d82:	ea00 010e 	and.w	r1, r0, lr
 8001d86:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8001d8a:	430a      	orrs	r2, r1
 8001d8c:	605a      	str	r2, [r3, #4]
 8001d8e:	f8df 8114 	ldr.w	r8, [pc, #276]	; 8001ea4 <HAL_I2C_Master_Transmit+0x198>
 8001d92:	f8df 9114 	ldr.w	r9, [pc, #276]	; 8001ea8 <HAL_I2C_Master_Transmit+0x19c>
 8001d96:	ea47 0808 	orr.w	r8, r7, r8
    while (hi2c->XferCount > 0U)
 8001d9a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001d9c:	462a      	mov	r2, r5
 8001d9e:	4631      	mov	r1, r6
 8001da0:	4620      	mov	r0, r4
    while (hi2c->XferCount > 0U)
 8001da2:	b29b      	uxth	r3, r3
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	d062      	beq.n	8001e6e <HAL_I2C_Master_Transmit+0x162>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001da8:	f7ff feaa 	bl	8001b00 <I2C_WaitOnTXISFlagUntilTimeout>
 8001dac:	2800      	cmp	r0, #0
 8001dae:	d15b      	bne.n	8001e68 <HAL_I2C_Master_Transmit+0x15c>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8001db0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001db2:	6821      	ldr	r1, [r4, #0]
 8001db4:	f810 2b01 	ldrb.w	r2, [r0], #1
      hi2c->XferSize--;
 8001db8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8001dba:	628a      	str	r2, [r1, #40]	; 0x28
      hi2c->XferCount--;
 8001dbc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8001dbe:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 8001dc0:	6260      	str	r0, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8001dc2:	3a01      	subs	r2, #1
      hi2c->XferSize--;
 8001dc4:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
 8001dc6:	b292      	uxth	r2, r2
      hi2c->XferSize--;
 8001dc8:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8001dca:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8001dcc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8001dce:	b292      	uxth	r2, r2
 8001dd0:	2a00      	cmp	r2, #0
 8001dd2:	d0e2      	beq.n	8001d9a <HAL_I2C_Master_Transmit+0x8e>
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d1e0      	bne.n	8001d9a <HAL_I2C_Master_Transmit+0x8e>
 8001dd8:	1c70      	adds	r0, r6, #1
 8001dda:	d11d      	bne.n	8001e18 <HAL_I2C_Master_Transmit+0x10c>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001ddc:	698b      	ldr	r3, [r1, #24]
 8001dde:	061a      	lsls	r2, r3, #24
 8001de0:	d5fc      	bpl.n	8001ddc <HAL_I2C_Master_Transmit+0xd0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001de2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001de4:	2bff      	cmp	r3, #255	; 0xff
 8001de6:	d930      	bls.n	8001e4a <HAL_I2C_Master_Transmit+0x13e>
  MODIFY_REG(hi2c->Instance->CR2,
 8001de8:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8001dea:	22ff      	movs	r2, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8001dec:	ea03 0309 	and.w	r3, r3, r9
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8001df0:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001df2:	ea43 0308 	orr.w	r3, r3, r8
 8001df6:	604b      	str	r3, [r1, #4]
 8001df8:	e7cf      	b.n	8001d9a <HAL_I2C_Master_Transmit+0x8e>
    return HAL_BUSY;
 8001dfa:	2002      	movs	r0, #2
}
 8001dfc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  MODIFY_REG(hi2c->Instance->CR2,
 8001e00:	685a      	ldr	r2, [r3, #4]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001e02:	20ff      	movs	r0, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8001e04:	f8df c098 	ldr.w	ip, [pc, #152]	; 8001ea0 <HAL_I2C_Master_Transmit+0x194>
 8001e08:	4923      	ldr	r1, [pc, #140]	; (8001e98 <HAL_I2C_Master_Transmit+0x18c>)
 8001e0a:	ea02 020c 	and.w	r2, r2, ip
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001e0e:	8520      	strh	r0, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001e10:	4339      	orrs	r1, r7
 8001e12:	430a      	orrs	r2, r1
 8001e14:	605a      	str	r2, [r3, #4]
 8001e16:	e7ba      	b.n	8001d8e <HAL_I2C_Master_Transmit+0x82>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001e18:	698b      	ldr	r3, [r1, #24]
 8001e1a:	061b      	lsls	r3, r3, #24
 8001e1c:	d4e1      	bmi.n	8001de2 <HAL_I2C_Master_Transmit+0xd6>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001e1e:	f7ff f851 	bl	8000ec4 <HAL_GetTick>
 8001e22:	1b40      	subs	r0, r0, r5
 8001e24:	4286      	cmp	r6, r0
 8001e26:	d302      	bcc.n	8001e2e <HAL_I2C_Master_Transmit+0x122>
 8001e28:	b10e      	cbz	r6, 8001e2e <HAL_I2C_Master_Transmit+0x122>
 8001e2a:	6821      	ldr	r1, [r4, #0]
 8001e2c:	e7d4      	b.n	8001dd8 <HAL_I2C_Master_Transmit+0xcc>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001e2e:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001e30:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001e32:	2200      	movs	r2, #0
          return HAL_ERROR;
 8001e34:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001e36:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001e38:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001e3c:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001e3e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001e42:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
 8001e46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
          hi2c->XferSize = hi2c->XferCount;
 8001e4a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 8001e4c:	f047 7300 	orr.w	r3, r7, #33554432	; 0x2000000
 8001e50:	6848      	ldr	r0, [r1, #4]
          hi2c->XferSize = hi2c->XferCount;
 8001e52:	b292      	uxth	r2, r2
  MODIFY_REG(hi2c->Instance->CR2,
 8001e54:	ea00 0009 	and.w	r0, r0, r9
 8001e58:	fa5f fc82 	uxtb.w	ip, r2
          hi2c->XferSize = hi2c->XferCount;
 8001e5c:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001e5e:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 8001e62:	4303      	orrs	r3, r0
 8001e64:	604b      	str	r3, [r1, #4]
 8001e66:	e798      	b.n	8001d9a <HAL_I2C_Master_Transmit+0x8e>
        return HAL_ERROR;
 8001e68:	2001      	movs	r0, #1
}
 8001e6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001e6e:	f7ff fea3 	bl	8001bb8 <I2C_WaitOnSTOPFlagUntilTimeout>
 8001e72:	2800      	cmp	r0, #0
 8001e74:	d1f8      	bne.n	8001e68 <HAL_I2C_Master_Transmit+0x15c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001e76:	6823      	ldr	r3, [r4, #0]
 8001e78:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
 8001e7a:	4d08      	ldr	r5, [pc, #32]	; (8001e9c <HAL_I2C_Master_Transmit+0x190>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001e7c:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8001e7e:	685a      	ldr	r2, [r3, #4]
 8001e80:	402a      	ands	r2, r5
 8001e82:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8001e84:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8001e88:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8001e8c:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8001e90:	e7b4      	b.n	8001dfc <HAL_I2C_Master_Transmit+0xf0>
 8001e92:	bf00      	nop
 8001e94:	82002000 	.word	0x82002000
 8001e98:	81ff2000 	.word	0x81ff2000
 8001e9c:	fe00e800 	.word	0xfe00e800
 8001ea0:	fc009800 	.word	0xfc009800
 8001ea4:	01ff0000 	.word	0x01ff0000
 8001ea8:	fc009c00 	.word	0xfc009c00

08001eac <HAL_I2C_Master_Receive>:
{
 8001eac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001eb0:	f890 4041 	ldrb.w	r4, [r0, #65]	; 0x41
{
 8001eb4:	9d08      	ldr	r5, [sp, #32]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8001eb6:	2c20      	cmp	r4, #32
 8001eb8:	d17f      	bne.n	8001fba <HAL_I2C_Master_Receive+0x10e>
    __HAL_LOCK(hi2c);
 8001eba:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8001ebe:	2c01      	cmp	r4, #1
 8001ec0:	d07b      	beq.n	8001fba <HAL_I2C_Master_Receive+0x10e>
 8001ec2:	4698      	mov	r8, r3
 8001ec4:	2301      	movs	r3, #1
 8001ec6:	4691      	mov	r9, r2
 8001ec8:	460f      	mov	r7, r1
 8001eca:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8001ece:	4604      	mov	r4, r0
    tickstart = HAL_GetTick();
 8001ed0:	f7fe fff8 	bl	8000ec4 <HAL_GetTick>
 8001ed4:	4606      	mov	r6, r0
 8001ed6:	e004      	b.n	8001ee2 <HAL_I2C_Master_Receive+0x36>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001ed8:	f7fe fff4 	bl	8000ec4 <HAL_GetTick>
 8001edc:	1b80      	subs	r0, r0, r6
 8001ede:	2819      	cmp	r0, #25
 8001ee0:	d878      	bhi.n	8001fd4 <HAL_I2C_Master_Receive+0x128>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001ee2:	6823      	ldr	r3, [r4, #0]
 8001ee4:	6998      	ldr	r0, [r3, #24]
 8001ee6:	f410 4000 	ands.w	r0, r0, #32768	; 0x8000
 8001eea:	d1f5      	bne.n	8001ed8 <HAL_I2C_Master_Receive+0x2c>
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001eec:	2210      	movs	r2, #16
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8001eee:	2122      	movs	r1, #34	; 0x22
    hi2c->pBuffPtr  = pData;
 8001ef0:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 8001ef4:	f3c7 0709 	ubfx	r7, r7, #0, #10
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8001ef8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8001efc:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001f00:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->XferCount = Size;
 8001f02:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001f06:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8001f08:	6360      	str	r0, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8001f0a:	2aff      	cmp	r2, #255	; 0xff
 8001f0c:	d86f      	bhi.n	8001fee <HAL_I2C_Master_Receive+0x142>
      hi2c->XferSize = hi2c->XferCount;
 8001f0e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 8001f10:	4a7c      	ldr	r2, [pc, #496]	; (8002104 <HAL_I2C_Master_Receive+0x258>)
      hi2c->XferSize = hi2c->XferCount;
 8001f12:	b289      	uxth	r1, r1
  MODIFY_REG(hi2c->Instance->CR2,
 8001f14:	6858      	ldr	r0, [r3, #4]
 8001f16:	433a      	orrs	r2, r7
 8001f18:	f8df e1f4 	ldr.w	lr, [pc, #500]	; 8002110 <HAL_I2C_Master_Receive+0x264>
 8001f1c:	fa5f fc81 	uxtb.w	ip, r1
      hi2c->XferSize = hi2c->XferCount;
 8001f20:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001f22:	ea00 010e 	and.w	r1, r0, lr
 8001f26:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8001f2a:	430a      	orrs	r2, r1
 8001f2c:	605a      	str	r2, [r3, #4]
 8001f2e:	f8df 81e4 	ldr.w	r8, [pc, #484]	; 8002114 <HAL_I2C_Master_Receive+0x268>
 8001f32:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 8002118 <HAL_I2C_Master_Receive+0x26c>
 8001f36:	ea47 0808 	orr.w	r8, r7, r8
    while (hi2c->XferCount > 0U)
 8001f3a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001f3c:	b29b      	uxth	r3, r3
 8001f3e:	b96b      	cbnz	r3, 8001f5c <HAL_I2C_Master_Receive+0xb0>
 8001f40:	e099      	b.n	8002076 <HAL_I2C_Master_Receive+0x1ca>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8001f42:	699a      	ldr	r2, [r3, #24]
 8001f44:	0690      	lsls	r0, r2, #26
 8001f46:	f100 80b6 	bmi.w	80020b6 <HAL_I2C_Master_Receive+0x20a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001f4a:	f7fe ffbb 	bl	8000ec4 <HAL_GetTick>
 8001f4e:	1b80      	subs	r0, r0, r6
 8001f50:	4285      	cmp	r5, r0
 8001f52:	f0c0 80a5 	bcc.w	80020a0 <HAL_I2C_Master_Receive+0x1f4>
 8001f56:	2d00      	cmp	r5, #0
 8001f58:	f000 80a2 	beq.w	80020a0 <HAL_I2C_Master_Receive+0x1f4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8001f5c:	6823      	ldr	r3, [r4, #0]
 8001f5e:	699a      	ldr	r2, [r3, #24]
 8001f60:	0752      	lsls	r2, r2, #29
 8001f62:	d45c      	bmi.n	800201e <HAL_I2C_Master_Receive+0x172>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001f64:	699a      	ldr	r2, [r3, #24]
 8001f66:	06d0      	lsls	r0, r2, #27
 8001f68:	d5eb      	bpl.n	8001f42 <HAL_I2C_Master_Receive+0x96>
 8001f6a:	1c69      	adds	r1, r5, #1
 8001f6c:	d14b      	bne.n	8002006 <HAL_I2C_Master_Receive+0x15a>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001f6e:	699a      	ldr	r2, [r3, #24]
 8001f70:	0692      	lsls	r2, r2, #26
 8001f72:	d5fc      	bpl.n	8001f6e <HAL_I2C_Master_Receive+0xc2>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001f74:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001f76:	2110      	movs	r1, #16
 8001f78:	61d9      	str	r1, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001f7a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8001f7c:	699a      	ldr	r2, [r3, #24]
 8001f7e:	0796      	lsls	r6, r2, #30
 8001f80:	d501      	bpl.n	8001f86 <HAL_I2C_Master_Receive+0xda>
    hi2c->Instance->TXDR = 0x00U;
 8001f82:	2200      	movs	r2, #0
 8001f84:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8001f86:	699a      	ldr	r2, [r3, #24]
 8001f88:	07d5      	lsls	r5, r2, #31
 8001f8a:	d403      	bmi.n	8001f94 <HAL_I2C_Master_Receive+0xe8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8001f8c:	699a      	ldr	r2, [r3, #24]
 8001f8e:	f042 0201 	orr.w	r2, r2, #1
 8001f92:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
 8001f94:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001f96:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
 8001f98:	4e5b      	ldr	r6, [pc, #364]	; (8002108 <HAL_I2C_Master_Receive+0x25c>)
    hi2c->State = HAL_I2C_STATE_READY;
 8001f9a:	2520      	movs	r5, #32
        return HAL_ERROR;
 8001f9c:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8001f9e:	4032      	ands	r2, r6
 8001fa0:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001fa2:	6c63      	ldr	r3, [r4, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
 8001fa4:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8001fa8:	f043 0304 	orr.w	r3, r3, #4
 8001fac:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8001fae:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001fb2:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
 8001fb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    return HAL_BUSY;
 8001fba:	2002      	movs	r0, #2
}
 8001fbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001fc0:	6993      	ldr	r3, [r2, #24]
 8001fc2:	061b      	lsls	r3, r3, #24
 8001fc4:	d447      	bmi.n	8002056 <HAL_I2C_Master_Receive+0x1aa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001fc6:	f7fe ff7d 	bl	8000ec4 <HAL_GetTick>
 8001fca:	1b80      	subs	r0, r0, r6
 8001fcc:	4285      	cmp	r5, r0
 8001fce:	d301      	bcc.n	8001fd4 <HAL_I2C_Master_Receive+0x128>
 8001fd0:	2d00      	cmp	r5, #0
 8001fd2:	d13a      	bne.n	800204a <HAL_I2C_Master_Receive+0x19e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001fd4:	6c63      	ldr	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001fd6:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001fd8:	2200      	movs	r2, #0
          return HAL_ERROR;
 8001fda:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001fdc:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
 8001fde:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001fe2:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001fe4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001fe8:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8001fec:	e7e6      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
  MODIFY_REG(hi2c->Instance->CR2,
 8001fee:	685a      	ldr	r2, [r3, #4]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001ff0:	20ff      	movs	r0, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8001ff2:	f8df c11c 	ldr.w	ip, [pc, #284]	; 8002110 <HAL_I2C_Master_Receive+0x264>
 8001ff6:	4945      	ldr	r1, [pc, #276]	; (800210c <HAL_I2C_Master_Receive+0x260>)
 8001ff8:	ea02 020c 	and.w	r2, r2, ip
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8001ffc:	8520      	strh	r0, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8001ffe:	4339      	orrs	r1, r7
 8002000:	430a      	orrs	r2, r1
 8002002:	605a      	str	r2, [r3, #4]
 8002004:	e793      	b.n	8001f2e <HAL_I2C_Master_Receive+0x82>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8002006:	699a      	ldr	r2, [r3, #24]
 8002008:	0697      	lsls	r7, r2, #26
 800200a:	d4b3      	bmi.n	8001f74 <HAL_I2C_Master_Receive+0xc8>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800200c:	f7fe ff5a 	bl	8000ec4 <HAL_GetTick>
 8002010:	1b80      	subs	r0, r0, r6
 8002012:	4285      	cmp	r5, r0
 8002014:	d3de      	bcc.n	8001fd4 <HAL_I2C_Master_Receive+0x128>
 8002016:	2d00      	cmp	r5, #0
 8002018:	d0dc      	beq.n	8001fd4 <HAL_I2C_Master_Receive+0x128>
 800201a:	6823      	ldr	r3, [r4, #0]
 800201c:	e7a5      	b.n	8001f6a <HAL_I2C_Master_Receive+0xbe>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 800201e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002020:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002022:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
 8002024:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8002026:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8002028:	3901      	subs	r1, #1
      hi2c->pBuffPtr++;
 800202a:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800202c:	3b01      	subs	r3, #1
      hi2c->XferCount--;
 800202e:	b289      	uxth	r1, r1
      hi2c->pBuffPtr++;
 8002030:	3201      	adds	r2, #1
      hi2c->XferSize--;
 8002032:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
 8002034:	8561      	strh	r1, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8002036:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8002038:	8523      	strh	r3, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800203a:	b289      	uxth	r1, r1
      hi2c->pBuffPtr++;
 800203c:	6262      	str	r2, [r4, #36]	; 0x24
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800203e:	2b00      	cmp	r3, #0
 8002040:	f47f af7b 	bne.w	8001f3a <HAL_I2C_Master_Receive+0x8e>
 8002044:	2900      	cmp	r1, #0
 8002046:	f43f af78 	beq.w	8001f3a <HAL_I2C_Master_Receive+0x8e>
 800204a:	1c68      	adds	r0, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800204c:	6822      	ldr	r2, [r4, #0]
 800204e:	d1b7      	bne.n	8001fc0 <HAL_I2C_Master_Receive+0x114>
 8002050:	6993      	ldr	r3, [r2, #24]
 8002052:	0619      	lsls	r1, r3, #24
 8002054:	d5fc      	bpl.n	8002050 <HAL_I2C_Master_Receive+0x1a4>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8002056:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002058:	2bff      	cmp	r3, #255	; 0xff
 800205a:	d942      	bls.n	80020e2 <HAL_I2C_Master_Receive+0x236>
  MODIFY_REG(hi2c->Instance->CR2,
 800205c:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800205e:	21ff      	movs	r1, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
 8002060:	ea03 0309 	and.w	r3, r3, r9
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8002064:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 8002066:	ea43 0308 	orr.w	r3, r3, r8
 800206a:	6053      	str	r3, [r2, #4]
    while (hi2c->XferCount > 0U)
 800206c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800206e:	b29b      	uxth	r3, r3
 8002070:	2b00      	cmp	r3, #0
 8002072:	f47f af73 	bne.w	8001f5c <HAL_I2C_Master_Receive+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002076:	4632      	mov	r2, r6
 8002078:	4629      	mov	r1, r5
 800207a:	4620      	mov	r0, r4
 800207c:	f7ff fd9c 	bl	8001bb8 <I2C_WaitOnSTOPFlagUntilTimeout>
 8002080:	2800      	cmp	r0, #0
 8002082:	d13d      	bne.n	8002100 <HAL_I2C_Master_Receive+0x254>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002084:	6823      	ldr	r3, [r4, #0]
 8002086:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
 8002088:	4d1f      	ldr	r5, [pc, #124]	; (8002108 <HAL_I2C_Master_Receive+0x25c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800208a:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 800208c:	685a      	ldr	r2, [r3, #4]
 800208e:	402a      	ands	r2, r5
 8002090:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8002092:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8002096:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800209a:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 800209e:	e78d      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80020a0:	6c63      	ldr	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 80020a2:	2220      	movs	r2, #32
      __HAL_UNLOCK(hi2c);
 80020a4:	2100      	movs	r1, #0
        return HAL_ERROR;
 80020a6:	2001      	movs	r0, #1
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80020a8:	4313      	orrs	r3, r2
      __HAL_UNLOCK(hi2c);
 80020aa:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80020ae:	6463      	str	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 80020b0:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
 80020b4:	e782      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
 80020b6:	699a      	ldr	r2, [r3, #24]
 80020b8:	0751      	lsls	r1, r2, #29
 80020ba:	d502      	bpl.n	80020c2 <HAL_I2C_Master_Receive+0x216>
 80020bc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80020be:	2a00      	cmp	r2, #0
 80020c0:	d1ad      	bne.n	800201e <HAL_I2C_Master_Receive+0x172>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80020c2:	2520      	movs	r5, #32
        I2C_RESET_CR2(hi2c);
 80020c4:	4e10      	ldr	r6, [pc, #64]	; (8002108 <HAL_I2C_Master_Receive+0x25c>)
        hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80020c6:	2200      	movs	r2, #0
        return HAL_ERROR;
 80020c8:	2001      	movs	r0, #1
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80020ca:	61dd      	str	r5, [r3, #28]
        I2C_RESET_CR2(hi2c);
 80020cc:	6859      	ldr	r1, [r3, #4]
 80020ce:	4031      	ands	r1, r6
 80020d0:	6059      	str	r1, [r3, #4]
        hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80020d2:	6462      	str	r2, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 80020d4:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
        hi2c->State = HAL_I2C_STATE_READY;
 80020d8:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80020dc:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 80020e0:	e76c      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
          hi2c->XferSize = hi2c->XferCount;
 80020e2:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
 80020e4:	f047 7300 	orr.w	r3, r7, #33554432	; 0x2000000
 80020e8:	6850      	ldr	r0, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
 80020ea:	b289      	uxth	r1, r1
  MODIFY_REG(hi2c->Instance->CR2,
 80020ec:	ea00 0009 	and.w	r0, r0, r9
 80020f0:	fa5f fc81 	uxtb.w	ip, r1
          hi2c->XferSize = hi2c->XferCount;
 80020f4:	8521      	strh	r1, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
 80020f6:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 80020fa:	4303      	orrs	r3, r0
 80020fc:	6053      	str	r3, [r2, #4]
 80020fe:	e71c      	b.n	8001f3a <HAL_I2C_Master_Receive+0x8e>
      return HAL_ERROR;
 8002100:	2001      	movs	r0, #1
 8002102:	e75b      	b.n	8001fbc <HAL_I2C_Master_Receive+0x110>
 8002104:	82002400 	.word	0x82002400
 8002108:	fe00e800 	.word	0xfe00e800
 800210c:	81ff2400 	.word	0x81ff2400
 8002110:	fc009800 	.word	0xfc009800
 8002114:	01ff0000 	.word	0x01ff0000
 8002118:	fc009c00 	.word	0xfc009c00

0800211c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800211c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8002120:	b2db      	uxtb	r3, r3
 8002122:	2b20      	cmp	r3, #32
{
 8002124:	b470      	push	{r4, r5, r6}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002126:	d11f      	bne.n	8002168 <HAL_I2CEx_ConfigAnalogFilter+0x4c>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8002128:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
 800212c:	2a01      	cmp	r2, #1
 800212e:	d01b      	beq.n	8002168 <HAL_I2CEx_ConfigAnalogFilter+0x4c>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8002130:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002132:	2424      	movs	r4, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8002134:	2600      	movs	r6, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002136:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
 800213a:	6815      	ldr	r5, [r2, #0]

    return HAL_OK;
 800213c:	4634      	mov	r4, r6
    __HAL_I2C_DISABLE(hi2c);
 800213e:	f025 0501 	bic.w	r5, r5, #1
 8002142:	6015      	str	r5, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8002144:	6815      	ldr	r5, [r2, #0]
 8002146:	f425 5580 	bic.w	r5, r5, #4096	; 0x1000
 800214a:	6015      	str	r5, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
 800214c:	6815      	ldr	r5, [r2, #0]
 800214e:	4329      	orrs	r1, r5
 8002150:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8002152:	6811      	ldr	r1, [r2, #0]
 8002154:	f041 0101 	orr.w	r1, r1, #1
 8002158:	6011      	str	r1, [r2, #0]
    __HAL_UNLOCK(hi2c);
 800215a:	f880 6040 	strb.w	r6, [r0, #64]	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 800215e:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  }
  else
  {
    return HAL_BUSY;
  }
}
 8002162:	4620      	mov	r0, r4
 8002164:	bc70      	pop	{r4, r5, r6}
 8002166:	4770      	bx	lr
    return HAL_BUSY;
 8002168:	2402      	movs	r4, #2
}
 800216a:	4620      	mov	r0, r4
 800216c:	bc70      	pop	{r4, r5, r6}
 800216e:	4770      	bx	lr

08002170 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8002170:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8002174:	b2db      	uxtb	r3, r3
 8002176:	2b20      	cmp	r3, #32
{
 8002178:	b470      	push	{r4, r5, r6}
  if (hi2c->State == HAL_I2C_STATE_READY)
 800217a:	d11e      	bne.n	80021ba <HAL_I2CEx_ConfigDigitalFilter+0x4a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800217c:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
 8002180:	2a01      	cmp	r2, #1
 8002182:	d01a      	beq.n	80021ba <HAL_I2CEx_ConfigDigitalFilter+0x4a>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8002184:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002186:	2424      	movs	r4, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8002188:	2600      	movs	r6, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
 800218a:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
 800218e:	6814      	ldr	r4, [r2, #0]

    return HAL_OK;
 8002190:	4635      	mov	r5, r6
    __HAL_I2C_DISABLE(hi2c);
 8002192:	f024 0401 	bic.w	r4, r4, #1
 8002196:	6014      	str	r4, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
 8002198:	6814      	ldr	r4, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
 800219a:	f424 6470 	bic.w	r4, r4, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
 800219e:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
    hi2c->Instance->CR1 = tmpreg;
 80021a2:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 80021a4:	6811      	ldr	r1, [r2, #0]
 80021a6:	f041 0101 	orr.w	r1, r1, #1
 80021aa:	6011      	str	r1, [r2, #0]
    __HAL_UNLOCK(hi2c);
 80021ac:	f880 6040 	strb.w	r6, [r0, #64]	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 80021b0:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  }
  else
  {
    return HAL_BUSY;
  }
}
 80021b4:	4628      	mov	r0, r5
 80021b6:	bc70      	pop	{r4, r5, r6}
 80021b8:	4770      	bx	lr
    return HAL_BUSY;
 80021ba:	2502      	movs	r5, #2
}
 80021bc:	4628      	mov	r0, r5
 80021be:	bc70      	pop	{r4, r5, r6}
 80021c0:	4770      	bx	lr
 80021c2:	bf00      	nop

080021c4 <HAL_PWR_EnableBkUpAccess>:
  * @retval None
  */
void HAL_PWR_EnableBkUpAccess(void)
{
  /* Enable access to RTC and backup registers */
  SET_BIT(PWR->CR1, PWR_CR1_DBP);
 80021c4:	4a02      	ldr	r2, [pc, #8]	; (80021d0 <HAL_PWR_EnableBkUpAccess+0xc>)
 80021c6:	6813      	ldr	r3, [r2, #0]
 80021c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80021cc:	6013      	str	r3, [r2, #0]
}
 80021ce:	4770      	bx	lr
 80021d0:	40007000 	.word	0x40007000

080021d4 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 80021d4:	4a1b      	ldr	r2, [pc, #108]	; (8002244 <HAL_PWREx_EnableOverDrive+0x70>)
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80021d6:	4b1c      	ldr	r3, [pc, #112]	; (8002248 <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80021d8:	6c11      	ldr	r1, [r2, #64]	; 0x40
 80021da:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
{
 80021de:	b530      	push	{r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 80021e0:	6411      	str	r1, [r2, #64]	; 0x40
{
 80021e2:	b083      	sub	sp, #12
  __HAL_RCC_PWR_CLK_ENABLE();
 80021e4:	6c12      	ldr	r2, [r2, #64]	; 0x40

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80021e6:	461c      	mov	r4, r3
  __HAL_RCC_PWR_CLK_ENABLE();
 80021e8:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80021ec:	9201      	str	r2, [sp, #4]
 80021ee:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80021f0:	681a      	ldr	r2, [r3, #0]
 80021f2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80021f6:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 80021f8:	f7fe fe64 	bl	8000ec4 <HAL_GetTick>
 80021fc:	4605      	mov	r5, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80021fe:	e005      	b.n	800220c <HAL_PWREx_EnableOverDrive+0x38>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002200:	f7fe fe60 	bl	8000ec4 <HAL_GetTick>
 8002204:	1b40      	subs	r0, r0, r5
 8002206:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800220a:	d817      	bhi.n	800223c <HAL_PWREx_EnableOverDrive+0x68>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800220c:	6863      	ldr	r3, [r4, #4]
 800220e:	03da      	lsls	r2, r3, #15
 8002210:	d5f6      	bpl.n	8002200 <HAL_PWREx_EnableOverDrive+0x2c>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8002212:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002214:	4d0c      	ldr	r5, [pc, #48]	; (8002248 <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8002216:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800221a:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 800221c:	f7fe fe52 	bl	8000ec4 <HAL_GetTick>
 8002220:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002222:	e005      	b.n	8002230 <HAL_PWREx_EnableOverDrive+0x5c>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002224:	f7fe fe4e 	bl	8000ec4 <HAL_GetTick>
 8002228:	1b00      	subs	r0, r0, r4
 800222a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800222e:	d805      	bhi.n	800223c <HAL_PWREx_EnableOverDrive+0x68>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002230:	686b      	ldr	r3, [r5, #4]
 8002232:	039b      	lsls	r3, r3, #14
 8002234:	d5f6      	bpl.n	8002224 <HAL_PWREx_EnableOverDrive+0x50>
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8002236:	2000      	movs	r0, #0
}
 8002238:	b003      	add	sp, #12
 800223a:	bd30      	pop	{r4, r5, pc}
      return HAL_TIMEOUT;
 800223c:	2003      	movs	r0, #3
}
 800223e:	b003      	add	sp, #12
 8002240:	bd30      	pop	{r4, r5, pc}
 8002242:	bf00      	nop
 8002244:	40023800 	.word	0x40023800
 8002248:	40007000 	.word	0x40007000

0800224c <HAL_RCC_OscConfig>:
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800224c:	2800      	cmp	r0, #0
 800224e:	f000 814c 	beq.w	80024ea <HAL_RCC_OscConfig+0x29e>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002252:	6803      	ldr	r3, [r0, #0]
{
 8002254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002258:	07dd      	lsls	r5, r3, #31
{
 800225a:	b082      	sub	sp, #8
 800225c:	4604      	mov	r4, r0
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800225e:	d535      	bpl.n	80022cc <HAL_RCC_OscConfig+0x80>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8002260:	49ac      	ldr	r1, [pc, #688]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002262:	688a      	ldr	r2, [r1, #8]
 8002264:	f002 020c 	and.w	r2, r2, #12
 8002268:	2a04      	cmp	r2, #4
 800226a:	f000 80ff 	beq.w	800246c <HAL_RCC_OscConfig+0x220>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800226e:	688a      	ldr	r2, [r1, #8]
 8002270:	f002 020c 	and.w	r2, r2, #12
 8002274:	2a08      	cmp	r2, #8
 8002276:	f000 80f5 	beq.w	8002464 <HAL_RCC_OscConfig+0x218>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800227a:	6863      	ldr	r3, [r4, #4]
 800227c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002280:	d010      	beq.n	80022a4 <HAL_RCC_OscConfig+0x58>
 8002282:	2b00      	cmp	r3, #0
 8002284:	f000 811a 	beq.w	80024bc <HAL_RCC_OscConfig+0x270>
 8002288:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800228c:	4ba1      	ldr	r3, [pc, #644]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 800228e:	681a      	ldr	r2, [r3, #0]
 8002290:	f000 8164 	beq.w	800255c <HAL_RCC_OscConfig+0x310>
 8002294:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002298:	601a      	str	r2, [r3, #0]
 800229a:	681a      	ldr	r2, [r3, #0]
 800229c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80022a0:	601a      	str	r2, [r3, #0]
 80022a2:	e004      	b.n	80022ae <HAL_RCC_OscConfig+0x62>
 80022a4:	4a9b      	ldr	r2, [pc, #620]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80022a6:	6813      	ldr	r3, [r2, #0]
 80022a8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80022ac:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80022ae:	f7fe fe09 	bl	8000ec4 <HAL_GetTick>

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80022b2:	4d98      	ldr	r5, [pc, #608]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
        tickstart = HAL_GetTick();
 80022b4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80022b6:	e005      	b.n	80022c4 <HAL_RCC_OscConfig+0x78>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80022b8:	f7fe fe04 	bl	8000ec4 <HAL_GetTick>
 80022bc:	1b80      	subs	r0, r0, r6
 80022be:	2864      	cmp	r0, #100	; 0x64
 80022c0:	f200 80ef 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80022c4:	682b      	ldr	r3, [r5, #0]
 80022c6:	039a      	lsls	r2, r3, #14
 80022c8:	d5f6      	bpl.n	80022b8 <HAL_RCC_OscConfig+0x6c>
 80022ca:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80022cc:	079f      	lsls	r7, r3, #30
 80022ce:	d442      	bmi.n	8002356 <HAL_RCC_OscConfig+0x10a>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80022d0:	071a      	lsls	r2, r3, #28
 80022d2:	d517      	bpl.n	8002304 <HAL_RCC_OscConfig+0xb8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80022d4:	6963      	ldr	r3, [r4, #20]
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	f000 80b1 	beq.w	800243e <HAL_RCC_OscConfig+0x1f2>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80022dc:	4b8d      	ldr	r3, [pc, #564]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80022de:	6f5a      	ldr	r2, [r3, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80022e0:	461d      	mov	r5, r3
      __HAL_RCC_LSI_ENABLE();
 80022e2:	f042 0201 	orr.w	r2, r2, #1
 80022e6:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
 80022e8:	f7fe fdec 	bl	8000ec4 <HAL_GetTick>
 80022ec:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80022ee:	e005      	b.n	80022fc <HAL_RCC_OscConfig+0xb0>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80022f0:	f7fe fde8 	bl	8000ec4 <HAL_GetTick>
 80022f4:	1b80      	subs	r0, r0, r6
 80022f6:	2802      	cmp	r0, #2
 80022f8:	f200 80d3 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80022fc:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80022fe:	079b      	lsls	r3, r3, #30
 8002300:	d5f6      	bpl.n	80022f0 <HAL_RCC_OscConfig+0xa4>
 8002302:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002304:	075d      	lsls	r5, r3, #29
 8002306:	d56b      	bpl.n	80023e0 <HAL_RCC_OscConfig+0x194>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002308:	4b82      	ldr	r3, [pc, #520]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 800230a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800230c:	00d0      	lsls	r0, r2, #3
 800230e:	f100 80ee 	bmi.w	80024ee <HAL_RCC_OscConfig+0x2a2>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 8002312:	6c1a      	ldr	r2, [r3, #64]	; 0x40
      pwrclkchanged = SET;
 8002314:	2501      	movs	r5, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8002316:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800231a:	641a      	str	r2, [r3, #64]	; 0x40
 800231c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800231e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002322:	9301      	str	r3, [sp, #4]
 8002324:	9b01      	ldr	r3, [sp, #4]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002326:	4b7c      	ldr	r3, [pc, #496]	; (8002518 <HAL_RCC_OscConfig+0x2cc>)
 8002328:	681a      	ldr	r2, [r3, #0]
 800232a:	05d1      	lsls	r1, r2, #23
 800232c:	f140 80a8 	bpl.w	8002480 <HAL_RCC_OscConfig+0x234>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002330:	68a3      	ldr	r3, [r4, #8]
 8002332:	2b01      	cmp	r3, #1
 8002334:	d039      	beq.n	80023aa <HAL_RCC_OscConfig+0x15e>
 8002336:	2b00      	cmp	r3, #0
 8002338:	f000 80db 	beq.w	80024f2 <HAL_RCC_OscConfig+0x2a6>
 800233c:	2b05      	cmp	r3, #5
 800233e:	4b75      	ldr	r3, [pc, #468]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002340:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002342:	f000 8113 	beq.w	800256c <HAL_RCC_OscConfig+0x320>
 8002346:	f022 0201 	bic.w	r2, r2, #1
 800234a:	671a      	str	r2, [r3, #112]	; 0x70
 800234c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800234e:	f022 0204 	bic.w	r2, r2, #4
 8002352:	671a      	str	r2, [r3, #112]	; 0x70
 8002354:	e02e      	b.n	80023b4 <HAL_RCC_OscConfig+0x168>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002356:	4a6f      	ldr	r2, [pc, #444]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002358:	6891      	ldr	r1, [r2, #8]
 800235a:	f011 0f0c 	tst.w	r1, #12
 800235e:	d063      	beq.n	8002428 <HAL_RCC_OscConfig+0x1dc>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8002360:	6891      	ldr	r1, [r2, #8]
 8002362:	f001 010c 	and.w	r1, r1, #12
 8002366:	2908      	cmp	r1, #8
 8002368:	d05b      	beq.n	8002422 <HAL_RCC_OscConfig+0x1d6>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800236a:	68e3      	ldr	r3, [r4, #12]
 800236c:	2b00      	cmp	r3, #0
 800236e:	f000 80e1 	beq.w	8002534 <HAL_RCC_OscConfig+0x2e8>
        __HAL_RCC_HSI_ENABLE();
 8002372:	4b68      	ldr	r3, [pc, #416]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002374:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002376:	461d      	mov	r5, r3
        __HAL_RCC_HSI_ENABLE();
 8002378:	f042 0201 	orr.w	r2, r2, #1
 800237c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800237e:	f7fe fda1 	bl	8000ec4 <HAL_GetTick>
 8002382:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002384:	e005      	b.n	8002392 <HAL_RCC_OscConfig+0x146>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002386:	f7fe fd9d 	bl	8000ec4 <HAL_GetTick>
 800238a:	1b80      	subs	r0, r0, r6
 800238c:	2802      	cmp	r0, #2
 800238e:	f200 8088 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002392:	682b      	ldr	r3, [r5, #0]
 8002394:	0798      	lsls	r0, r3, #30
 8002396:	d5f6      	bpl.n	8002386 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002398:	682b      	ldr	r3, [r5, #0]
 800239a:	6922      	ldr	r2, [r4, #16]
 800239c:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80023a0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80023a4:	602b      	str	r3, [r5, #0]
 80023a6:	6823      	ldr	r3, [r4, #0]
 80023a8:	e792      	b.n	80022d0 <HAL_RCC_OscConfig+0x84>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80023aa:	4a5a      	ldr	r2, [pc, #360]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80023ac:	6f13      	ldr	r3, [r2, #112]	; 0x70
 80023ae:	f043 0301 	orr.w	r3, r3, #1
 80023b2:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80023b4:	f7fe fd86 	bl	8000ec4 <HAL_GetTick>

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80023b8:	4e56      	ldr	r6, [pc, #344]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
      tickstart = HAL_GetTick();
 80023ba:	4680      	mov	r8, r0
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80023bc:	f241 3788 	movw	r7, #5000	; 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80023c0:	e005      	b.n	80023ce <HAL_RCC_OscConfig+0x182>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80023c2:	f7fe fd7f 	bl	8000ec4 <HAL_GetTick>
 80023c6:	eba0 0008 	sub.w	r0, r0, r8
 80023ca:	42b8      	cmp	r0, r7
 80023cc:	d869      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80023ce:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80023d0:	079b      	lsls	r3, r3, #30
 80023d2:	d5f6      	bpl.n	80023c2 <HAL_RCC_OscConfig+0x176>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 80023d4:	b125      	cbz	r5, 80023e0 <HAL_RCC_OscConfig+0x194>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80023d6:	4a4f      	ldr	r2, [pc, #316]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80023d8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80023da:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80023de:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80023e0:	69a0      	ldr	r0, [r4, #24]
 80023e2:	b1d0      	cbz	r0, 800241a <HAL_RCC_OscConfig+0x1ce>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80023e4:	4b4b      	ldr	r3, [pc, #300]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80023e6:	689a      	ldr	r2, [r3, #8]
 80023e8:	f002 020c 	and.w	r2, r2, #12
 80023ec:	2a08      	cmp	r2, #8
 80023ee:	f000 80c5 	beq.w	800257c <HAL_RCC_OscConfig+0x330>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80023f2:	2802      	cmp	r0, #2
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80023f4:	681a      	ldr	r2, [r3, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80023f6:	f000 80eb 	beq.w	80025d0 <HAL_RCC_OscConfig+0x384>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80023fa:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80023fe:	461c      	mov	r4, r3
        __HAL_RCC_PLL_DISABLE();
 8002400:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8002402:	f7fe fd5f 	bl	8000ec4 <HAL_GetTick>
 8002406:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002408:	e004      	b.n	8002414 <HAL_RCC_OscConfig+0x1c8>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800240a:	f7fe fd5b 	bl	8000ec4 <HAL_GetTick>
 800240e:	1b40      	subs	r0, r0, r5
 8002410:	2802      	cmp	r0, #2
 8002412:	d846      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002414:	6823      	ldr	r3, [r4, #0]
 8002416:	019b      	lsls	r3, r3, #6
 8002418:	d4f7      	bmi.n	800240a <HAL_RCC_OscConfig+0x1be>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 800241a:	2000      	movs	r0, #0
}
 800241c:	b002      	add	sp, #8
 800241e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8002422:	6852      	ldr	r2, [r2, #4]
 8002424:	0256      	lsls	r6, r2, #9
 8002426:	d4a0      	bmi.n	800236a <HAL_RCC_OscConfig+0x11e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002428:	4a3a      	ldr	r2, [pc, #232]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 800242a:	6812      	ldr	r2, [r2, #0]
 800242c:	0795      	lsls	r5, r2, #30
 800242e:	d53c      	bpl.n	80024aa <HAL_RCC_OscConfig+0x25e>
 8002430:	68e2      	ldr	r2, [r4, #12]
 8002432:	2a01      	cmp	r2, #1
 8002434:	d039      	beq.n	80024aa <HAL_RCC_OscConfig+0x25e>
        return HAL_ERROR;
 8002436:	2001      	movs	r0, #1
}
 8002438:	b002      	add	sp, #8
 800243a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800243e:	4b35      	ldr	r3, [pc, #212]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 8002440:	6f5a      	ldr	r2, [r3, #116]	; 0x74
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002442:	461d      	mov	r5, r3
      __HAL_RCC_LSI_DISABLE();
 8002444:	f022 0201 	bic.w	r2, r2, #1
 8002448:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
 800244a:	f7fe fd3b 	bl	8000ec4 <HAL_GetTick>
 800244e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002450:	e004      	b.n	800245c <HAL_RCC_OscConfig+0x210>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8002452:	f7fe fd37 	bl	8000ec4 <HAL_GetTick>
 8002456:	1b80      	subs	r0, r0, r6
 8002458:	2802      	cmp	r0, #2
 800245a:	d822      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800245c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800245e:	079f      	lsls	r7, r3, #30
 8002460:	d4f7      	bmi.n	8002452 <HAL_RCC_OscConfig+0x206>
 8002462:	e74e      	b.n	8002302 <HAL_RCC_OscConfig+0xb6>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8002464:	684a      	ldr	r2, [r1, #4]
 8002466:	0250      	lsls	r0, r2, #9
 8002468:	f57f af07 	bpl.w	800227a <HAL_RCC_OscConfig+0x2e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800246c:	4a29      	ldr	r2, [pc, #164]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 800246e:	6812      	ldr	r2, [r2, #0]
 8002470:	0391      	lsls	r1, r2, #14
 8002472:	f57f af2b 	bpl.w	80022cc <HAL_RCC_OscConfig+0x80>
 8002476:	6862      	ldr	r2, [r4, #4]
 8002478:	2a00      	cmp	r2, #0
 800247a:	f47f af27 	bne.w	80022cc <HAL_RCC_OscConfig+0x80>
 800247e:	e7da      	b.n	8002436 <HAL_RCC_OscConfig+0x1ea>
      PWR->CR1 |= PWR_CR1_DBP;
 8002480:	681a      	ldr	r2, [r3, #0]
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002482:	461e      	mov	r6, r3
      PWR->CR1 |= PWR_CR1_DBP;
 8002484:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002488:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800248a:	f7fe fd1b 	bl	8000ec4 <HAL_GetTick>
 800248e:	4607      	mov	r7, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002490:	6833      	ldr	r3, [r6, #0]
 8002492:	05da      	lsls	r2, r3, #23
 8002494:	f53f af4c 	bmi.w	8002330 <HAL_RCC_OscConfig+0xe4>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002498:	f7fe fd14 	bl	8000ec4 <HAL_GetTick>
 800249c:	1bc0      	subs	r0, r0, r7
 800249e:	2864      	cmp	r0, #100	; 0x64
 80024a0:	d9f6      	bls.n	8002490 <HAL_RCC_OscConfig+0x244>
            return HAL_TIMEOUT;
 80024a2:	2003      	movs	r0, #3
}
 80024a4:	b002      	add	sp, #8
 80024a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80024aa:	491a      	ldr	r1, [pc, #104]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80024ac:	6920      	ldr	r0, [r4, #16]
 80024ae:	680a      	ldr	r2, [r1, #0]
 80024b0:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 80024b4:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 80024b8:	600a      	str	r2, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80024ba:	e709      	b.n	80022d0 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80024bc:	4b15      	ldr	r3, [pc, #84]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
 80024be:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80024c0:	461d      	mov	r5, r3
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80024c2:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80024c6:	601a      	str	r2, [r3, #0]
 80024c8:	681a      	ldr	r2, [r3, #0]
 80024ca:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80024ce:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80024d0:	f7fe fcf8 	bl	8000ec4 <HAL_GetTick>
 80024d4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80024d6:	e004      	b.n	80024e2 <HAL_RCC_OscConfig+0x296>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80024d8:	f7fe fcf4 	bl	8000ec4 <HAL_GetTick>
 80024dc:	1b80      	subs	r0, r0, r6
 80024de:	2864      	cmp	r0, #100	; 0x64
 80024e0:	d8df      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80024e2:	682b      	ldr	r3, [r5, #0]
 80024e4:	039b      	lsls	r3, r3, #14
 80024e6:	d4f7      	bmi.n	80024d8 <HAL_RCC_OscConfig+0x28c>
 80024e8:	e6ef      	b.n	80022ca <HAL_RCC_OscConfig+0x7e>
    return HAL_ERROR;
 80024ea:	2001      	movs	r0, #1
}
 80024ec:	4770      	bx	lr
  FlagStatus pwrclkchanged = RESET;
 80024ee:	2500      	movs	r5, #0
 80024f0:	e719      	b.n	8002326 <HAL_RCC_OscConfig+0xda>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80024f2:	4b08      	ldr	r3, [pc, #32]	; (8002514 <HAL_RCC_OscConfig+0x2c8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80024f4:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80024f8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80024fa:	461e      	mov	r6, r3
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80024fc:	f022 0201 	bic.w	r2, r2, #1
 8002500:	671a      	str	r2, [r3, #112]	; 0x70
 8002502:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002504:	f022 0204 	bic.w	r2, r2, #4
 8002508:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
 800250a:	f7fe fcdb 	bl	8000ec4 <HAL_GetTick>
 800250e:	4607      	mov	r7, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002510:	e009      	b.n	8002526 <HAL_RCC_OscConfig+0x2da>
 8002512:	bf00      	nop
 8002514:	40023800 	.word	0x40023800
 8002518:	40007000 	.word	0x40007000
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800251c:	f7fe fcd2 	bl	8000ec4 <HAL_GetTick>
 8002520:	1bc0      	subs	r0, r0, r7
 8002522:	4540      	cmp	r0, r8
 8002524:	d8bd      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002526:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8002528:	0798      	lsls	r0, r3, #30
 800252a:	d4f7      	bmi.n	800251c <HAL_RCC_OscConfig+0x2d0>
    if (pwrclkchanged == SET)
 800252c:	2d00      	cmp	r5, #0
 800252e:	f43f af57 	beq.w	80023e0 <HAL_RCC_OscConfig+0x194>
 8002532:	e750      	b.n	80023d6 <HAL_RCC_OscConfig+0x18a>
        __HAL_RCC_HSI_DISABLE();
 8002534:	4b41      	ldr	r3, [pc, #260]	; (800263c <HAL_RCC_OscConfig+0x3f0>)
 8002536:	681a      	ldr	r2, [r3, #0]
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002538:	461d      	mov	r5, r3
        __HAL_RCC_HSI_DISABLE();
 800253a:	f022 0201 	bic.w	r2, r2, #1
 800253e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8002540:	f7fe fcc0 	bl	8000ec4 <HAL_GetTick>
 8002544:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002546:	e004      	b.n	8002552 <HAL_RCC_OscConfig+0x306>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002548:	f7fe fcbc 	bl	8000ec4 <HAL_GetTick>
 800254c:	1b80      	subs	r0, r0, r6
 800254e:	2802      	cmp	r0, #2
 8002550:	d8a7      	bhi.n	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002552:	682b      	ldr	r3, [r5, #0]
 8002554:	0799      	lsls	r1, r3, #30
 8002556:	d4f7      	bmi.n	8002548 <HAL_RCC_OscConfig+0x2fc>
 8002558:	6823      	ldr	r3, [r4, #0]
 800255a:	e6b9      	b.n	80022d0 <HAL_RCC_OscConfig+0x84>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800255c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8002560:	601a      	str	r2, [r3, #0]
 8002562:	681a      	ldr	r2, [r3, #0]
 8002564:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002568:	601a      	str	r2, [r3, #0]
 800256a:	e6a0      	b.n	80022ae <HAL_RCC_OscConfig+0x62>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800256c:	f042 0204 	orr.w	r2, r2, #4
 8002570:	671a      	str	r2, [r3, #112]	; 0x70
 8002572:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8002574:	f042 0201 	orr.w	r2, r2, #1
 8002578:	671a      	str	r2, [r3, #112]	; 0x70
 800257a:	e71b      	b.n	80023b4 <HAL_RCC_OscConfig+0x168>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800257c:	2801      	cmp	r0, #1
      pll_config = RCC->PLLCFGR;
 800257e:	685a      	ldr	r2, [r3, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8002580:	f43f af5a 	beq.w	8002438 <HAL_RCC_OscConfig+0x1ec>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002584:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8002588:	69e1      	ldr	r1, [r4, #28]
 800258a:	428b      	cmp	r3, r1
 800258c:	f47f af53 	bne.w	8002436 <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8002590:	f002 033f 	and.w	r3, r2, #63	; 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002594:	6a21      	ldr	r1, [r4, #32]
 8002596:	428b      	cmp	r3, r1
 8002598:	f47f af4d 	bne.w	8002436 <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800259c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80025a0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80025a2:	4013      	ands	r3, r2
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80025a4:	ebb3 1f81 	cmp.w	r3, r1, lsl #6
 80025a8:	f47f af45 	bne.w	8002436 <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80025ac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80025ae:	f402 3140 	and.w	r1, r2, #196608	; 0x30000
 80025b2:	085b      	lsrs	r3, r3, #1
 80025b4:	3b01      	subs	r3, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80025b6:	ebb1 4f03 	cmp.w	r1, r3, lsl #16
 80025ba:	f47f af3c 	bne.w	8002436 <HAL_RCC_OscConfig+0x1ea>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80025be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80025c0:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80025c4:	ebb2 6f03 	cmp.w	r2, r3, lsl #24
    return HAL_ERROR;
 80025c8:	bf14      	ite	ne
 80025ca:	2001      	movne	r0, #1
 80025cc:	2000      	moveq	r0, #0
 80025ce:	e733      	b.n	8002438 <HAL_RCC_OscConfig+0x1ec>
        __HAL_RCC_PLL_DISABLE();
 80025d0:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80025d4:	461d      	mov	r5, r3
        __HAL_RCC_PLL_DISABLE();
 80025d6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80025d8:	f7fe fc74 	bl	8000ec4 <HAL_GetTick>
 80025dc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80025de:	e005      	b.n	80025ec <HAL_RCC_OscConfig+0x3a0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80025e0:	f7fe fc70 	bl	8000ec4 <HAL_GetTick>
 80025e4:	1b80      	subs	r0, r0, r6
 80025e6:	2802      	cmp	r0, #2
 80025e8:	f63f af5b 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80025ec:	682b      	ldr	r3, [r5, #0]
 80025ee:	0199      	lsls	r1, r3, #6
 80025f0:	d4f6      	bmi.n	80025e0 <HAL_RCC_OscConfig+0x394>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80025f2:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80025f6:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80025f8:	4313      	orrs	r3, r2
 80025fa:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 80025fe:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002602:	4c0e      	ldr	r4, [pc, #56]	; (800263c <HAL_RCC_OscConfig+0x3f0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002604:	0852      	lsrs	r2, r2, #1
 8002606:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800260a:	3a01      	subs	r2, #1
 800260c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8002610:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002614:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8002616:	682b      	ldr	r3, [r5, #0]
 8002618:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800261c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800261e:	f7fe fc51 	bl	8000ec4 <HAL_GetTick>
 8002622:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002624:	e005      	b.n	8002632 <HAL_RCC_OscConfig+0x3e6>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8002626:	f7fe fc4d 	bl	8000ec4 <HAL_GetTick>
 800262a:	1b40      	subs	r0, r0, r5
 800262c:	2802      	cmp	r0, #2
 800262e:	f63f af38 	bhi.w	80024a2 <HAL_RCC_OscConfig+0x256>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002632:	6823      	ldr	r3, [r4, #0]
 8002634:	019a      	lsls	r2, r3, #6
 8002636:	d5f6      	bpl.n	8002626 <HAL_RCC_OscConfig+0x3da>
 8002638:	e6ef      	b.n	800241a <HAL_RCC_OscConfig+0x1ce>
 800263a:	bf00      	nop
 800263c:	40023800 	.word	0x40023800

08002640 <HAL_RCC_ClockConfig>:
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
  uint32_t tickstart = 0;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8002640:	b178      	cbz	r0, 8002662 <HAL_RCC_ClockConfig+0x22>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8002642:	4a5e      	ldr	r2, [pc, #376]	; (80027bc <HAL_RCC_ClockConfig+0x17c>)
 8002644:	6813      	ldr	r3, [r2, #0]
 8002646:	f003 030f 	and.w	r3, r3, #15
 800264a:	428b      	cmp	r3, r1
 800264c:	d20b      	bcs.n	8002666 <HAL_RCC_ClockConfig+0x26>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800264e:	6813      	ldr	r3, [r2, #0]
 8002650:	f023 030f 	bic.w	r3, r3, #15
 8002654:	430b      	orrs	r3, r1
 8002656:	6013      	str	r3, [r2, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8002658:	6813      	ldr	r3, [r2, #0]
 800265a:	f003 030f 	and.w	r3, r3, #15
 800265e:	428b      	cmp	r3, r1
 8002660:	d001      	beq.n	8002666 <HAL_RCC_ClockConfig+0x26>
    return HAL_ERROR;
 8002662:	2001      	movs	r0, #1

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);

  return HAL_OK;
}
 8002664:	4770      	bx	lr
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002666:	6803      	ldr	r3, [r0, #0]
{
 8002668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800266c:	079d      	lsls	r5, r3, #30
 800266e:	d514      	bpl.n	800269a <HAL_RCC_ClockConfig+0x5a>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002670:	075c      	lsls	r4, r3, #29
 8002672:	d504      	bpl.n	800267e <HAL_RCC_ClockConfig+0x3e>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8002674:	4c52      	ldr	r4, [pc, #328]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002676:	68a2      	ldr	r2, [r4, #8]
 8002678:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800267c:	60a2      	str	r2, [r4, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800267e:	071a      	lsls	r2, r3, #28
 8002680:	d504      	bpl.n	800268c <HAL_RCC_ClockConfig+0x4c>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8002682:	4c4f      	ldr	r4, [pc, #316]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002684:	68a2      	ldr	r2, [r4, #8]
 8002686:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800268a:	60a2      	str	r2, [r4, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800268c:	4c4c      	ldr	r4, [pc, #304]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 800268e:	6885      	ldr	r5, [r0, #8]
 8002690:	68a2      	ldr	r2, [r4, #8]
 8002692:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8002696:	432a      	orrs	r2, r5
 8002698:	60a2      	str	r2, [r4, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800269a:	07df      	lsls	r7, r3, #31
 800269c:	4604      	mov	r4, r0
 800269e:	460d      	mov	r5, r1
 80026a0:	d521      	bpl.n	80026e6 <HAL_RCC_ClockConfig+0xa6>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80026a2:	6842      	ldr	r2, [r0, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80026a4:	4b46      	ldr	r3, [pc, #280]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80026a6:	2a01      	cmp	r2, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80026a8:	681b      	ldr	r3, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80026aa:	d063      	beq.n	8002774 <HAL_RCC_ClockConfig+0x134>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80026ac:	2a02      	cmp	r2, #2
 80026ae:	d079      	beq.n	80027a4 <HAL_RCC_ClockConfig+0x164>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80026b0:	0799      	lsls	r1, r3, #30
 80026b2:	d528      	bpl.n	8002706 <HAL_RCC_ClockConfig+0xc6>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80026b4:	4942      	ldr	r1, [pc, #264]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80026b6:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80026ba:	688b      	ldr	r3, [r1, #8]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80026bc:	460e      	mov	r6, r1
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80026be:	f023 0303 	bic.w	r3, r3, #3
 80026c2:	4313      	orrs	r3, r2
 80026c4:	608b      	str	r3, [r1, #8]
    tickstart = HAL_GetTick();
 80026c6:	f7fe fbfd 	bl	8000ec4 <HAL_GetTick>
 80026ca:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80026cc:	e004      	b.n	80026d8 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80026ce:	f7fe fbf9 	bl	8000ec4 <HAL_GetTick>
 80026d2:	1bc0      	subs	r0, r0, r7
 80026d4:	4540      	cmp	r0, r8
 80026d6:	d863      	bhi.n	80027a0 <HAL_RCC_ClockConfig+0x160>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80026d8:	68b3      	ldr	r3, [r6, #8]
 80026da:	6862      	ldr	r2, [r4, #4]
 80026dc:	f003 030c 	and.w	r3, r3, #12
 80026e0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80026e4:	d1f3      	bne.n	80026ce <HAL_RCC_ClockConfig+0x8e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80026e6:	4a35      	ldr	r2, [pc, #212]	; (80027bc <HAL_RCC_ClockConfig+0x17c>)
 80026e8:	6813      	ldr	r3, [r2, #0]
 80026ea:	f003 030f 	and.w	r3, r3, #15
 80026ee:	42ab      	cmp	r3, r5
 80026f0:	d90c      	bls.n	800270c <HAL_RCC_ClockConfig+0xcc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80026f2:	6813      	ldr	r3, [r2, #0]
 80026f4:	f023 030f 	bic.w	r3, r3, #15
 80026f8:	432b      	orrs	r3, r5
 80026fa:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80026fc:	6813      	ldr	r3, [r2, #0]
 80026fe:	f003 030f 	and.w	r3, r3, #15
 8002702:	42ab      	cmp	r3, r5
 8002704:	d002      	beq.n	800270c <HAL_RCC_ClockConfig+0xcc>
    return HAL_ERROR;
 8002706:	2001      	movs	r0, #1
}
 8002708:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800270c:	6823      	ldr	r3, [r4, #0]
 800270e:	075a      	lsls	r2, r3, #29
 8002710:	d506      	bpl.n	8002720 <HAL_RCC_ClockConfig+0xe0>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002712:	492b      	ldr	r1, [pc, #172]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002714:	68e0      	ldr	r0, [r4, #12]
 8002716:	688a      	ldr	r2, [r1, #8]
 8002718:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800271c:	4302      	orrs	r2, r0
 800271e:	608a      	str	r2, [r1, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002720:	071b      	lsls	r3, r3, #28
 8002722:	d507      	bpl.n	8002734 <HAL_RCC_ClockConfig+0xf4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8002724:	4a26      	ldr	r2, [pc, #152]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002726:	6921      	ldr	r1, [r4, #16]
 8002728:	6893      	ldr	r3, [r2, #8]
 800272a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800272e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8002732:	6093      	str	r3, [r2, #8]
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002734:	4922      	ldr	r1, [pc, #136]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002736:	688b      	ldr	r3, [r1, #8]
 8002738:	f003 030c 	and.w	r3, r3, #12
 800273c:	2b04      	cmp	r3, #4
 800273e:	d01c      	beq.n	800277a <HAL_RCC_ClockConfig+0x13a>
 8002740:	2b08      	cmp	r3, #8
 8002742:	d12b      	bne.n	800279c <HAL_RCC_ClockConfig+0x15c>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002744:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8002746:	684b      	ldr	r3, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002748:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800274c:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 800274e:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
 8002752:	d12a      	bne.n	80027aa <HAL_RCC_ClockConfig+0x16a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002754:	481b      	ldr	r0, [pc, #108]	; (80027c4 <HAL_RCC_ClockConfig+0x184>)
 8002756:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800275a:	fba1 0100 	umull	r0, r1, r1, r0
 800275e:	f7fe f9f5 	bl	8000b4c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8002762:	4b17      	ldr	r3, [pc, #92]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 8002764:	685b      	ldr	r3, [r3, #4]
 8002766:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800276a:	3301      	adds	r3, #1
 800276c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800276e:	fbb0 f3f3 	udiv	r3, r0, r3
 8002772:	e003      	b.n	800277c <HAL_RCC_ClockConfig+0x13c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002774:	039e      	lsls	r6, r3, #14
 8002776:	d49d      	bmi.n	80026b4 <HAL_RCC_ClockConfig+0x74>
 8002778:	e7c5      	b.n	8002706 <HAL_RCC_ClockConfig+0xc6>
      sysclockfreq = HSE_VALUE;
 800277a:	4b13      	ldr	r3, [pc, #76]	; (80027c8 <HAL_RCC_ClockConfig+0x188>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800277c:	4a10      	ldr	r2, [pc, #64]	; (80027c0 <HAL_RCC_ClockConfig+0x180>)
 800277e:	4c13      	ldr	r4, [pc, #76]	; (80027cc <HAL_RCC_ClockConfig+0x18c>)
 8002780:	6892      	ldr	r2, [r2, #8]
  HAL_InitTick(uwTickPrio);
 8002782:	4813      	ldr	r0, [pc, #76]	; (80027d0 <HAL_RCC_ClockConfig+0x190>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8002784:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8002788:	4912      	ldr	r1, [pc, #72]	; (80027d4 <HAL_RCC_ClockConfig+0x194>)
  HAL_InitTick(uwTickPrio);
 800278a:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800278c:	5ca2      	ldrb	r2, [r4, r2]
 800278e:	40d3      	lsrs	r3, r2
 8002790:	600b      	str	r3, [r1, #0]
  HAL_InitTick(uwTickPrio);
 8002792:	f7fe fb5b 	bl	8000e4c <HAL_InitTick>
  return HAL_OK;
 8002796:	2000      	movs	r0, #0
}
 8002798:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      sysclockfreq = HSI_VALUE;
 800279c:	4b09      	ldr	r3, [pc, #36]	; (80027c4 <HAL_RCC_ClockConfig+0x184>)
 800279e:	e7ed      	b.n	800277c <HAL_RCC_ClockConfig+0x13c>
        return HAL_TIMEOUT;
 80027a0:	2003      	movs	r0, #3
 80027a2:	e7b1      	b.n	8002708 <HAL_RCC_ClockConfig+0xc8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80027a4:	0198      	lsls	r0, r3, #6
 80027a6:	d485      	bmi.n	80026b4 <HAL_RCC_ClockConfig+0x74>
 80027a8:	e7ad      	b.n	8002706 <HAL_RCC_ClockConfig+0xc6>
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80027aa:	4807      	ldr	r0, [pc, #28]	; (80027c8 <HAL_RCC_ClockConfig+0x188>)
 80027ac:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80027b0:	2300      	movs	r3, #0
 80027b2:	fba1 0100 	umull	r0, r1, r1, r0
 80027b6:	f7fe f9c9 	bl	8000b4c <__aeabi_uldivmod>
 80027ba:	e7d2      	b.n	8002762 <HAL_RCC_ClockConfig+0x122>
 80027bc:	40023c00 	.word	0x40023c00
 80027c0:	40023800 	.word	0x40023800
 80027c4:	00f42400 	.word	0x00f42400
 80027c8:	017d7840 	.word	0x017d7840
 80027cc:	0801abd4 	.word	0x0801abd4
 80027d0:	20000004 	.word	0x20000004
 80027d4:	20000038 	.word	0x20000038

080027d8 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80027d8:	4916      	ldr	r1, [pc, #88]	; (8002834 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 80027da:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80027dc:	688b      	ldr	r3, [r1, #8]
 80027de:	f003 030c 	and.w	r3, r3, #12
 80027e2:	2b04      	cmp	r3, #4
 80027e4:	d01b      	beq.n	800281e <HAL_RCC_GetSysClockFreq+0x46>
 80027e6:	2b08      	cmp	r3, #8
 80027e8:	d117      	bne.n	800281a <HAL_RCC_GetSysClockFreq+0x42>
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80027ea:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80027ec:	684b      	ldr	r3, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80027ee:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80027f2:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80027f4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
 80027f8:	d113      	bne.n	8002822 <HAL_RCC_GetSysClockFreq+0x4a>
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80027fa:	480f      	ldr	r0, [pc, #60]	; (8002838 <HAL_RCC_GetSysClockFreq+0x60>)
 80027fc:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8002800:	fba1 0100 	umull	r0, r1, r1, r0
 8002804:	f7fe f9a2 	bl	8000b4c <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8002808:	4b0a      	ldr	r3, [pc, #40]	; (8002834 <HAL_RCC_GetSysClockFreq+0x5c>)
 800280a:	685b      	ldr	r3, [r3, #4]
 800280c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8002810:	3301      	adds	r3, #1
 8002812:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco / pllp;
 8002814:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8002818:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800281a:	4807      	ldr	r0, [pc, #28]	; (8002838 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800281c:	bd08      	pop	{r3, pc}
      sysclockfreq = HSE_VALUE;
 800281e:	4807      	ldr	r0, [pc, #28]	; (800283c <HAL_RCC_GetSysClockFreq+0x64>)
}
 8002820:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002822:	4806      	ldr	r0, [pc, #24]	; (800283c <HAL_RCC_GetSysClockFreq+0x64>)
 8002824:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8002828:	2300      	movs	r3, #0
 800282a:	fba1 0100 	umull	r0, r1, r1, r0
 800282e:	f7fe f98d 	bl	8000b4c <__aeabi_uldivmod>
 8002832:	e7e9      	b.n	8002808 <HAL_RCC_GetSysClockFreq+0x30>
 8002834:	40023800 	.word	0x40023800
 8002838:	00f42400 	.word	0x00f42400
 800283c:	017d7840 	.word	0x017d7840

08002840 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8002840:	4b04      	ldr	r3, [pc, #16]	; (8002854 <HAL_RCC_GetPCLK1Freq+0x14>)
 8002842:	4a05      	ldr	r2, [pc, #20]	; (8002858 <HAL_RCC_GetPCLK1Freq+0x18>)
 8002844:	689b      	ldr	r3, [r3, #8]
  return SystemCoreClock;
 8002846:	4905      	ldr	r1, [pc, #20]	; (800285c <HAL_RCC_GetPCLK1Freq+0x1c>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8002848:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800284c:	6808      	ldr	r0, [r1, #0]
 800284e:	5cd3      	ldrb	r3, [r2, r3]
}
 8002850:	40d8      	lsrs	r0, r3
 8002852:	4770      	bx	lr
 8002854:	40023800 	.word	0x40023800
 8002858:	0801abe4 	.word	0x0801abe4
 800285c:	20000038 	.word	0x20000038

08002860 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8002860:	4b04      	ldr	r3, [pc, #16]	; (8002874 <HAL_RCC_GetPCLK2Freq+0x14>)
 8002862:	4a05      	ldr	r2, [pc, #20]	; (8002878 <HAL_RCC_GetPCLK2Freq+0x18>)
 8002864:	689b      	ldr	r3, [r3, #8]
  return SystemCoreClock;
 8002866:	4905      	ldr	r1, [pc, #20]	; (800287c <HAL_RCC_GetPCLK2Freq+0x1c>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8002868:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800286c:	6808      	ldr	r0, [r1, #0]
 800286e:	5cd3      	ldrb	r3, [r2, r3]
}
 8002870:	40d8      	lsrs	r0, r3
 8002872:	4770      	bx	lr
 8002874:	40023800 	.word	0x40023800
 8002878:	0801abe4 	.word	0x0801abe4
 800287c:	20000038 	.word	0x20000038

08002880 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8002880:	6803      	ldr	r3, [r0, #0]
{
 8002882:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8002886:	f013 0601 	ands.w	r6, r3, #1
{
 800288a:	b083      	sub	sp, #12
 800288c:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800288e:	d00b      	beq.n	80028a8 <HAL_RCCEx_PeriphCLKConfig+0x28>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8002890:	4ab6      	ldr	r2, [pc, #728]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002892:	6891      	ldr	r1, [r2, #8]
 8002894:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 8002898:	6091      	str	r1, [r2, #8]
 800289a:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800289c:	6891      	ldr	r1, [r2, #8]
 800289e:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 80028a0:	fab6 f686 	clz	r6, r6
 80028a4:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80028a6:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 80028a8:	f413 2500 	ands.w	r5, r3, #524288	; 0x80000
 80028ac:	d010      	beq.n	80028d0 <HAL_RCCEx_PeriphCLKConfig+0x50>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80028ae:	49af      	ldr	r1, [pc, #700]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80028b0:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 80028b2:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 80028b6:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80028ba:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 80028be:	ea42 0205 	orr.w	r2, r2, r5
 80028c2:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 80028c6:	f000 821a 	beq.w	8002cfe <HAL_RCCEx_PeriphCLKConfig+0x47e>
    {
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 80028ca:	fab5 f585 	clz	r5, r5
 80028ce:	096d      	lsrs	r5, r5, #5
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 80028d0:	02d9      	lsls	r1, r3, #11
 80028d2:	d510      	bpl.n	80028f6 <HAL_RCCEx_PeriphCLKConfig+0x76>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 80028d4:	48a5      	ldr	r0, [pc, #660]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80028d6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80028d8:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 80028dc:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 80028e0:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80028e4:	ea42 0201 	orr.w	r2, r2, r1
 80028e8:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 80028ec:	f000 820a 	beq.w	8002d04 <HAL_RCCEx_PeriphCLKConfig+0x484>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 80028f0:	2900      	cmp	r1, #0
 80028f2:	bf08      	it	eq
 80028f4:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 80028f6:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 80028fa:	bf18      	it	ne
 80028fc:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80028fe:	069a      	lsls	r2, r3, #26
 8002900:	f100 81b7 	bmi.w	8002c72 <HAL_RCCEx_PeriphCLKConfig+0x3f2>
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8002904:	06d9      	lsls	r1, r3, #27
 8002906:	d50c      	bpl.n	8002922 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8002908:	4a98      	ldr	r2, [pc, #608]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800290a:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 800290e:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 8002912:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
 8002916:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 800291a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800291c:	4301      	orrs	r1, r0
 800291e:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8002922:	045a      	lsls	r2, r3, #17
 8002924:	d508      	bpl.n	8002938 <HAL_RCCEx_PeriphCLKConfig+0xb8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8002926:	4991      	ldr	r1, [pc, #580]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002928:	6e60      	ldr	r0, [r4, #100]	; 0x64
 800292a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800292e:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8002932:	4302      	orrs	r2, r0
 8002934:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8002938:	041f      	lsls	r7, r3, #16
 800293a:	d508      	bpl.n	800294e <HAL_RCCEx_PeriphCLKConfig+0xce>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 800293c:	498b      	ldr	r1, [pc, #556]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800293e:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8002940:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002944:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8002948:	4302      	orrs	r2, r0
 800294a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 800294e:	03d8      	lsls	r0, r3, #15
 8002950:	d508      	bpl.n	8002964 <HAL_RCCEx_PeriphCLKConfig+0xe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8002952:	4986      	ldr	r1, [pc, #536]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002954:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8002956:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800295a:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 800295e:	4302      	orrs	r2, r0
 8002960:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8002964:	0399      	lsls	r1, r3, #14
 8002966:	d508      	bpl.n	800297a <HAL_RCCEx_PeriphCLKConfig+0xfa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8002968:	4980      	ldr	r1, [pc, #512]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800296a:	6f20      	ldr	r0, [r4, #112]	; 0x70
 800296c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002970:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8002974:	4302      	orrs	r2, r0
 8002976:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800297a:	065a      	lsls	r2, r3, #25
 800297c:	d508      	bpl.n	8002990 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800297e:	497b      	ldr	r1, [pc, #492]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002980:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002982:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002986:	f022 0203 	bic.w	r2, r2, #3
 800298a:	4302      	orrs	r2, r0
 800298c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8002990:	061f      	lsls	r7, r3, #24
 8002992:	d508      	bpl.n	80029a6 <HAL_RCCEx_PeriphCLKConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8002994:	4975      	ldr	r1, [pc, #468]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002996:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8002998:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800299c:	f022 020c 	bic.w	r2, r2, #12
 80029a0:	4302      	orrs	r2, r0
 80029a2:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 80029a6:	05d8      	lsls	r0, r3, #23
 80029a8:	d508      	bpl.n	80029bc <HAL_RCCEx_PeriphCLKConfig+0x13c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 80029aa:	4970      	ldr	r1, [pc, #448]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80029ac:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80029ae:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80029b2:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 80029b6:	4302      	orrs	r2, r0
 80029b8:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 80029bc:	0599      	lsls	r1, r3, #22
 80029be:	d508      	bpl.n	80029d2 <HAL_RCCEx_PeriphCLKConfig+0x152>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 80029c0:	496a      	ldr	r1, [pc, #424]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80029c2:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80029c4:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80029c8:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 80029cc:	4302      	orrs	r2, r0
 80029ce:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80029d2:	055a      	lsls	r2, r3, #21
 80029d4:	d508      	bpl.n	80029e8 <HAL_RCCEx_PeriphCLKConfig+0x168>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 80029d6:	4965      	ldr	r1, [pc, #404]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80029d8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80029da:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80029de:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80029e2:	4302      	orrs	r2, r0
 80029e4:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80029e8:	051f      	lsls	r7, r3, #20
 80029ea:	d508      	bpl.n	80029fe <HAL_RCCEx_PeriphCLKConfig+0x17e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 80029ec:	495f      	ldr	r1, [pc, #380]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80029ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80029f0:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80029f4:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 80029f8:	4302      	orrs	r2, r0
 80029fa:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 80029fe:	04d8      	lsls	r0, r3, #19
 8002a00:	d508      	bpl.n	8002a14 <HAL_RCCEx_PeriphCLKConfig+0x194>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8002a02:	495a      	ldr	r1, [pc, #360]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a04:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8002a06:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002a0a:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8002a0e:	4302      	orrs	r2, r0
 8002a10:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8002a14:	0499      	lsls	r1, r3, #18
 8002a16:	d508      	bpl.n	8002a2a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8002a18:	4954      	ldr	r1, [pc, #336]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a1a:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8002a1c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002a20:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8002a24:	4302      	orrs	r2, r0
 8002a26:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8002a2a:	025a      	lsls	r2, r3, #9
 8002a2c:	d508      	bpl.n	8002a40 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8002a2e:	494f      	ldr	r1, [pc, #316]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a30:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8002a32:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002a36:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 8002a3a:	4302      	orrs	r2, r0
 8002a3c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8002a40:	029f      	lsls	r7, r3, #10
 8002a42:	d50c      	bpl.n	8002a5e <HAL_RCCEx_PeriphCLKConfig+0x1de>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002a44:	4949      	ldr	r1, [pc, #292]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a46:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 8002a48:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8002a4c:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002a50:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
      pllsaiused = 1;
 8002a54:	bf08      	it	eq
 8002a56:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002a58:	4302      	orrs	r2, r0
 8002a5a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 8002a5e:	f013 0f08 	tst.w	r3, #8
 8002a62:	bf18      	it	ne
 8002a64:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8002a66:	0358      	lsls	r0, r3, #13
 8002a68:	d508      	bpl.n	8002a7c <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8002a6a:	4940      	ldr	r1, [pc, #256]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a6c:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8002a6e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002a72:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8002a76:	4302      	orrs	r2, r0
 8002a78:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8002a7c:	0219      	lsls	r1, r3, #8
 8002a7e:	f100 80ed 	bmi.w	8002c5c <HAL_RCCEx_PeriphCLKConfig+0x3dc>
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8002a82:	2e01      	cmp	r6, #1
 8002a84:	d001      	beq.n	8002a8a <HAL_RCCEx_PeriphCLKConfig+0x20a>
 8002a86:	019a      	lsls	r2, r3, #6
 8002a88:	d560      	bpl.n	8002b4c <HAL_RCCEx_PeriphCLKConfig+0x2cc>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8002a8a:	4b38      	ldr	r3, [pc, #224]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002a8c:	681a      	ldr	r2, [r3, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8002a8e:	461e      	mov	r6, r3
    __HAL_RCC_PLLI2S_DISABLE();
 8002a90:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 8002a94:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002a96:	f7fe fa15 	bl	8000ec4 <HAL_GetTick>
 8002a9a:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8002a9c:	e005      	b.n	8002aaa <HAL_RCCEx_PeriphCLKConfig+0x22a>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8002a9e:	f7fe fa11 	bl	8000ec4 <HAL_GetTick>
 8002aa2:	1bc0      	subs	r0, r0, r7
 8002aa4:	2864      	cmp	r0, #100	; 0x64
 8002aa6:	f200 80d5 	bhi.w	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8002aaa:	6833      	ldr	r3, [r6, #0]
 8002aac:	011b      	lsls	r3, r3, #4
 8002aae:	d4f6      	bmi.n	8002a9e <HAL_RCCEx_PeriphCLKConfig+0x21e>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8002ab0:	6823      	ldr	r3, [r4, #0]
 8002ab2:	07df      	lsls	r7, r3, #31
 8002ab4:	d512      	bpl.n	8002adc <HAL_RCCEx_PeriphCLKConfig+0x25c>
 8002ab6:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8002ab8:	b982      	cbnz	r2, 8002adc <HAL_RCCEx_PeriphCLKConfig+0x25c>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8002aba:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8002abe:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8002ac2:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8002ac6:	6860      	ldr	r0, [r4, #4]
 8002ac8:	f007 6770 	and.w	r7, r7, #251658240	; 0xf000000
 8002acc:	68a1      	ldr	r1, [r4, #8]
 8002ace:	433a      	orrs	r2, r7
 8002ad0:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002ad4:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
 8002ad8:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8002adc:	031e      	lsls	r6, r3, #12
 8002ade:	d504      	bpl.n	8002aea <HAL_RCCEx_PeriphCLKConfig+0x26a>
 8002ae0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8002ae2:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 8002ae6:	f000 811e 	beq.w	8002d26 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 8002aea:	02d8      	lsls	r0, r3, #11
 8002aec:	d504      	bpl.n	8002af8 <HAL_RCCEx_PeriphCLKConfig+0x278>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8002aee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8002af0:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 8002af4:	f000 8117 	beq.w	8002d26 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8002af8:	01d9      	lsls	r1, r3, #7
 8002afa:	d511      	bpl.n	8002b20 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8002afc:	4e1b      	ldr	r6, [pc, #108]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8002afe:	6860      	ldr	r0, [r4, #4]
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8002b00:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8002b04:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8002b08:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8002b0c:	6921      	ldr	r1, [r4, #16]
 8002b0e:	f007 47e0 	and.w	r7, r7, #1879048192	; 0x70000000
 8002b12:	433a      	orrs	r2, r7
 8002b14:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002b18:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002b1c:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8002b20:	019a      	lsls	r2, r3, #6
 8002b22:	f100 80f1 	bmi.w	8002d08 <HAL_RCCEx_PeriphCLKConfig+0x488>
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8002b26:	4b11      	ldr	r3, [pc, #68]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002b28:	681a      	ldr	r2, [r3, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002b2a:	461e      	mov	r6, r3
    __HAL_RCC_PLLI2S_ENABLE();
 8002b2c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002b30:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002b32:	f7fe f9c7 	bl	8000ec4 <HAL_GetTick>
 8002b36:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002b38:	e005      	b.n	8002b46 <HAL_RCCEx_PeriphCLKConfig+0x2c6>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8002b3a:	f7fe f9c3 	bl	8000ec4 <HAL_GetTick>
 8002b3e:	1bc0      	subs	r0, r0, r7
 8002b40:	2864      	cmp	r0, #100	; 0x64
 8002b42:	f200 8087 	bhi.w	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002b46:	6833      	ldr	r3, [r6, #0]
 8002b48:	011b      	lsls	r3, r3, #4
 8002b4a:	d5f6      	bpl.n	8002b3a <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8002b4c:	2d01      	cmp	r5, #1
 8002b4e:	d003      	beq.n	8002b58 <HAL_RCCEx_PeriphCLKConfig+0x2d8>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8002b50:	2000      	movs	r0, #0
}
 8002b52:	b003      	add	sp, #12
 8002b54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 8002b58:	4b04      	ldr	r3, [pc, #16]	; (8002b6c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8002b5a:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002b5c:	461d      	mov	r5, r3
    __HAL_RCC_PLLSAI_DISABLE();
 8002b5e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002b62:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002b64:	f7fe f9ae 	bl	8000ec4 <HAL_GetTick>
 8002b68:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002b6a:	e006      	b.n	8002b7a <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 8002b6c:	40023800 	.word	0x40023800
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8002b70:	f7fe f9a8 	bl	8000ec4 <HAL_GetTick>
 8002b74:	1b80      	subs	r0, r0, r6
 8002b76:	2864      	cmp	r0, #100	; 0x64
 8002b78:	d86c      	bhi.n	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002b7a:	682b      	ldr	r3, [r5, #0]
 8002b7c:	009f      	lsls	r7, r3, #2
 8002b7e:	d4f7      	bmi.n	8002b70 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8002b80:	6823      	ldr	r3, [r4, #0]
 8002b82:	031d      	lsls	r5, r3, #12
 8002b84:	d501      	bpl.n	8002b8a <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8002b86:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8002b88:	b11a      	cbz	r2, 8002b92 <HAL_RCCEx_PeriphCLKConfig+0x312>
 8002b8a:	02d8      	lsls	r0, r3, #11
 8002b8c:	d51d      	bpl.n	8002bca <HAL_RCCEx_PeriphCLKConfig+0x34a>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8002b8e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8002b90:	b9da      	cbnz	r2, 8002bca <HAL_RCCEx_PeriphCLKConfig+0x34a>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8002b92:	4982      	ldr	r1, [pc, #520]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8002b94:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8002b96:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8002b9a:	f8d1 6088 	ldr.w	r6, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8002b9e:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8002ba2:	69a0      	ldr	r0, [r4, #24]
 8002ba4:	f006 46e0 	and.w	r6, r6, #1879048192	; 0x70000000
 8002ba8:	4332      	orrs	r2, r6
 8002baa:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 8002bae:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8002bb2:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8002bb6:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 8002bba:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8002bbc:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8002bc0:	3801      	subs	r0, #1
 8002bc2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8002bc6:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8002bca:	0299      	lsls	r1, r3, #10
 8002bcc:	d515      	bpl.n	8002bfa <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8002bce:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8002bd0:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
 8002bd4:	d111      	bne.n	8002bfa <HAL_RCCEx_PeriphCLKConfig+0x37a>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002bd6:	4971      	ldr	r1, [pc, #452]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8002bd8:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002bda:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8002bde:	f8d1 6088 	ldr.w	r6, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8002be2:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8002be6:	6a20      	ldr	r0, [r4, #32]
 8002be8:	f006 46e0 	and.w	r6, r6, #1879048192	; 0x70000000
 8002bec:	4332      	orrs	r2, r6
 8002bee:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 8002bf2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8002bf6:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8002bfa:	071a      	lsls	r2, r3, #28
 8002bfc:	d519      	bpl.n	8002c32 <HAL_RCCEx_PeriphCLKConfig+0x3b2>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002bfe:	4a67      	ldr	r2, [pc, #412]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8002c00:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002c02:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8002c06:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8002c0a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8002c0e:	69e0      	ldr	r0, [r4, #28]
 8002c10:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002c14:	430b      	orrs	r3, r1
 8002c16:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8002c1a:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8002c1e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8002c22:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8002c26:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002c28:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8002c2c:	430b      	orrs	r3, r1
 8002c2e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 8002c32:	4b5a      	ldr	r3, [pc, #360]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002c34:	681a      	ldr	r2, [r3, #0]
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8002c36:	461c      	mov	r4, r3
    __HAL_RCC_PLLSAI_ENABLE();
 8002c38:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8002c3c:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002c3e:	f7fe f941 	bl	8000ec4 <HAL_GetTick>
 8002c42:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8002c44:	6823      	ldr	r3, [r4, #0]
 8002c46:	009b      	lsls	r3, r3, #2
 8002c48:	d482      	bmi.n	8002b50 <HAL_RCCEx_PeriphCLKConfig+0x2d0>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8002c4a:	f7fe f93b 	bl	8000ec4 <HAL_GetTick>
 8002c4e:	1b40      	subs	r0, r0, r5
 8002c50:	2864      	cmp	r0, #100	; 0x64
 8002c52:	d9f7      	bls.n	8002c44 <HAL_RCCEx_PeriphCLKConfig+0x3c4>
        return HAL_TIMEOUT;
 8002c54:	2003      	movs	r0, #3
}
 8002c56:	b003      	add	sp, #12
 8002c58:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8002c5c:	494f      	ldr	r1, [pc, #316]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002c5e:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 8002c62:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002c66:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002c6a:	4302      	orrs	r2, r0
 8002c6c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
 8002c70:	e707      	b.n	8002a82 <HAL_RCCEx_PeriphCLKConfig+0x202>
    __HAL_RCC_PWR_CLK_ENABLE();
 8002c72:	4a4a      	ldr	r2, [pc, #296]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
    PWR->CR1 |= PWR_CR1_DBP;
 8002c74:	4b4a      	ldr	r3, [pc, #296]	; (8002da0 <HAL_RCCEx_PeriphCLKConfig+0x520>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8002c76:	6c11      	ldr	r1, [r2, #64]	; 0x40
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8002c78:	461f      	mov	r7, r3
    __HAL_RCC_PWR_CLK_ENABLE();
 8002c7a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8002c7e:	6411      	str	r1, [r2, #64]	; 0x40
 8002c80:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8002c82:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8002c86:	9201      	str	r2, [sp, #4]
 8002c88:	9a01      	ldr	r2, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8002c8a:	681a      	ldr	r2, [r3, #0]
 8002c8c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002c90:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002c92:	f7fe f917 	bl	8000ec4 <HAL_GetTick>
 8002c96:	4680      	mov	r8, r0
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8002c98:	e005      	b.n	8002ca6 <HAL_RCCEx_PeriphCLKConfig+0x426>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002c9a:	f7fe f913 	bl	8000ec4 <HAL_GetTick>
 8002c9e:	eba0 0008 	sub.w	r0, r0, r8
 8002ca2:	2864      	cmp	r0, #100	; 0x64
 8002ca4:	d8d6      	bhi.n	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8002ca6:	683b      	ldr	r3, [r7, #0]
 8002ca8:	05db      	lsls	r3, r3, #23
 8002caa:	d5f6      	bpl.n	8002c9a <HAL_RCCEx_PeriphCLKConfig+0x41a>
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8002cac:	4a3b      	ldr	r2, [pc, #236]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002cae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002cb0:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8002cb2:	f403 7040 	and.w	r0, r3, #768	; 0x300
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8002cb6:	f411 7140 	ands.w	r1, r1, #768	; 0x300
 8002cba:	d010      	beq.n	8002cde <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8002cbc:	4281      	cmp	r1, r0
 8002cbe:	d00e      	beq.n	8002cde <HAL_RCCEx_PeriphCLKConfig+0x45e>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8002cc0:	6f11      	ldr	r1, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8002cc2:	6f17      	ldr	r7, [r2, #112]	; 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8002cc4:	f421 7140 	bic.w	r1, r1, #768	; 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 8002cc8:	f447 3780 	orr.w	r7, r7, #65536	; 0x10000
 8002ccc:	6717      	str	r7, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8002cce:	6f17      	ldr	r7, [r2, #112]	; 0x70
 8002cd0:	f427 3780 	bic.w	r7, r7, #65536	; 0x10000
 8002cd4:	6717      	str	r7, [r2, #112]	; 0x70
      RCC->BDCR = tmpreg0;
 8002cd6:	6711      	str	r1, [r2, #112]	; 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8002cd8:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8002cda:	07cf      	lsls	r7, r1, #31
 8002cdc:	d448      	bmi.n	8002d70 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8002cde:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
 8002ce2:	d03c      	beq.n	8002d5e <HAL_RCCEx_PeriphCLKConfig+0x4de>
 8002ce4:	492d      	ldr	r1, [pc, #180]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002ce6:	688a      	ldr	r2, [r1, #8]
 8002ce8:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 8002cec:	608a      	str	r2, [r1, #8]
 8002cee:	4a2b      	ldr	r2, [pc, #172]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002cf0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002cf4:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8002cf6:	430b      	orrs	r3, r1
 8002cf8:	6713      	str	r3, [r2, #112]	; 0x70
 8002cfa:	6823      	ldr	r3, [r4, #0]
 8002cfc:	e602      	b.n	8002904 <HAL_RCCEx_PeriphCLKConfig+0x84>
  uint32_t pllsaiused = 0;
 8002cfe:	2500      	movs	r5, #0
      plli2sused = 1;
 8002d00:	2601      	movs	r6, #1
 8002d02:	e5e5      	b.n	80028d0 <HAL_RCCEx_PeriphCLKConfig+0x50>
      plli2sused = 1;
 8002d04:	2601      	movs	r6, #1
 8002d06:	e5f6      	b.n	80028f6 <HAL_RCCEx_PeriphCLKConfig+0x76>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8002d08:	6923      	ldr	r3, [r4, #16]
 8002d0a:	6862      	ldr	r2, [r4, #4]
 8002d0c:	041b      	lsls	r3, r3, #16
 8002d0e:	e9d4 1002 	ldrd	r1, r0, [r4, #8]
 8002d12:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8002d16:	4a21      	ldr	r2, [pc, #132]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002d18:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8002d1c:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8002d20:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8002d24:	e6ff      	b.n	8002b26 <HAL_RCCEx_PeriphCLKConfig+0x2a6>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8002d26:	4e1d      	ldr	r6, [pc, #116]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8002d28:	6860      	ldr	r0, [r4, #4]
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8002d2a:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8002d2e:	f8d6 7084 	ldr.w	r7, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8002d32:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8002d36:	68e1      	ldr	r1, [r4, #12]
 8002d38:	f007 47e0 	and.w	r7, r7, #1879048192	; 0x70000000
 8002d3c:	433a      	orrs	r2, r7
 8002d3e:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002d42:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8002d46:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8002d4a:	f8d6 108c 	ldr.w	r1, [r6, #140]	; 0x8c
 8002d4e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002d50:	f021 011f 	bic.w	r1, r1, #31
 8002d54:	3a01      	subs	r2, #1
 8002d56:	430a      	orrs	r2, r1
 8002d58:	f8c6 208c 	str.w	r2, [r6, #140]	; 0x8c
 8002d5c:	e6cc      	b.n	8002af8 <HAL_RCCEx_PeriphCLKConfig+0x278>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8002d5e:	480f      	ldr	r0, [pc, #60]	; (8002d9c <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002d60:	4910      	ldr	r1, [pc, #64]	; (8002da4 <HAL_RCCEx_PeriphCLKConfig+0x524>)
 8002d62:	6882      	ldr	r2, [r0, #8]
 8002d64:	4019      	ands	r1, r3
 8002d66:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 8002d6a:	430a      	orrs	r2, r1
 8002d6c:	6082      	str	r2, [r0, #8]
 8002d6e:	e7be      	b.n	8002cee <HAL_RCCEx_PeriphCLKConfig+0x46e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002d70:	4617      	mov	r7, r2
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002d72:	f241 3888 	movw	r8, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8002d76:	f7fe f8a5 	bl	8000ec4 <HAL_GetTick>
 8002d7a:	4681      	mov	r9, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002d7c:	e006      	b.n	8002d8c <HAL_RCCEx_PeriphCLKConfig+0x50c>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002d7e:	f7fe f8a1 	bl	8000ec4 <HAL_GetTick>
 8002d82:	eba0 0009 	sub.w	r0, r0, r9
 8002d86:	4540      	cmp	r0, r8
 8002d88:	f63f af64 	bhi.w	8002c54 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002d8c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002d8e:	0798      	lsls	r0, r3, #30
 8002d90:	d5f5      	bpl.n	8002d7e <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 8002d92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002d94:	f403 7040 	and.w	r0, r3, #768	; 0x300
 8002d98:	e7a1      	b.n	8002cde <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8002d9a:	bf00      	nop
 8002d9c:	40023800 	.word	0x40023800
 8002da0:	40007000 	.word	0x40007000
 8002da4:	0ffffcff 	.word	0x0ffffcff

08002da8 <HAL_RTC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
{
  /* Check the RTC peripheral state */
  if(hrtc == NULL)
 8002da8:	2800      	cmp	r0, #0
 8002daa:	d066      	beq.n	8002e7a <HAL_RTC_Init+0xd2>
{
 8002dac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    {
      hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
    }
  }
#else
  if(hrtc->State == HAL_RTC_STATE_RESET)
 8002dae:	7f43      	ldrb	r3, [r0, #29]
 8002db0:	4604      	mov	r4, r0
 8002db2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	d043      	beq.n	8002e42 <HAL_RTC_Init+0x9a>

  /* Set RTC state */
  hrtc->State = HAL_RTC_STATE_BUSY;

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8002dba:	6823      	ldr	r3, [r4, #0]
 8002dbc:	2253      	movs	r2, #83	; 0x53
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002dbe:	2002      	movs	r0, #2
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8002dc0:	21ca      	movs	r1, #202	; 0xca
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002dc2:	7760      	strb	r0, [r4, #29]
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8002dc4:	6259      	str	r1, [r3, #36]	; 0x24
 8002dc6:	625a      	str	r2, [r3, #36]	; 0x24
HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
{
  uint32_t tickstart = 0;

  /* Check if the Initialization mode is set */
  if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8002dc8:	68da      	ldr	r2, [r3, #12]
 8002dca:	0655      	lsls	r5, r2, #25
 8002dcc:	d527      	bpl.n	8002e1e <HAL_RTC_Init+0x76>
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8002dce:	6898      	ldr	r0, [r3, #8]
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002dd0:	6925      	ldr	r5, [r4, #16]
 8002dd2:	6862      	ldr	r2, [r4, #4]
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8002dd4:	492a      	ldr	r1, [pc, #168]	; (8002e80 <HAL_RTC_Init+0xd8>)
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002dd6:	432a      	orrs	r2, r5
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8002dd8:	4001      	ands	r1, r0
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002dda:	6960      	ldr	r0, [r4, #20]
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8002ddc:	6099      	str	r1, [r3, #8]
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002dde:	4302      	orrs	r2, r0
 8002de0:	689d      	ldr	r5, [r3, #8]
    hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16);
 8002de2:	e9d4 1002 	ldrd	r1, r0, [r4, #8]
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8002de6:	432a      	orrs	r2, r5
 8002de8:	609a      	str	r2, [r3, #8]
    hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 8002dea:	6118      	str	r0, [r3, #16]
    hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16);
 8002dec:	691a      	ldr	r2, [r3, #16]
 8002dee:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002df2:	611a      	str	r2, [r3, #16]
    hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 8002df4:	68da      	ldr	r2, [r3, #12]
 8002df6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002dfa:	60da      	str	r2, [r3, #12]
    if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 8002dfc:	689a      	ldr	r2, [r3, #8]
 8002dfe:	0691      	lsls	r1, r2, #26
 8002e00:	d523      	bpl.n	8002e4a <HAL_RTC_Init+0xa2>
    hrtc->Instance->OR &= (uint32_t)~RTC_OR_ALARMTYPE;
 8002e02:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002e04:	26ff      	movs	r6, #255	; 0xff
    hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType);
 8002e06:	69a7      	ldr	r7, [r4, #24]
    hrtc->State = HAL_RTC_STATE_READY;
 8002e08:	2501      	movs	r5, #1
    hrtc->Instance->OR &= (uint32_t)~RTC_OR_ALARMTYPE;
 8002e0a:	f021 0108 	bic.w	r1, r1, #8
    return HAL_OK;
 8002e0e:	2000      	movs	r0, #0
    hrtc->Instance->OR &= (uint32_t)~RTC_OR_ALARMTYPE;
 8002e10:	64d9      	str	r1, [r3, #76]	; 0x4c
    hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType);
 8002e12:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002e14:	433a      	orrs	r2, r7
 8002e16:	64da      	str	r2, [r3, #76]	; 0x4c
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002e18:	625e      	str	r6, [r3, #36]	; 0x24
    hrtc->State = HAL_RTC_STATE_READY;
 8002e1a:	7765      	strb	r5, [r4, #29]
}
 8002e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  {
    /* Set the Initialization mode */
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 8002e1e:	f04f 32ff 	mov.w	r2, #4294967295
 8002e22:	60da      	str	r2, [r3, #12]

    /* Get tick */
    tickstart = HAL_GetTick();
 8002e24:	f7fe f84e 	bl	8000ec4 <HAL_GetTick>
 8002e28:	4605      	mov	r5, r0
 8002e2a:	e005      	b.n	8002e38 <HAL_RTC_Init+0x90>

    /* Wait till RTC is in INIT state and if Time out is reached exit */
    while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
    {
      if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 8002e2c:	f7fe f84a 	bl	8000ec4 <HAL_GetTick>
 8002e30:	1b40      	subs	r0, r0, r5
 8002e32:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002e36:	d819      	bhi.n	8002e6c <HAL_RTC_Init+0xc4>
    while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8002e38:	6823      	ldr	r3, [r4, #0]
 8002e3a:	68da      	ldr	r2, [r3, #12]
 8002e3c:	0650      	lsls	r0, r2, #25
 8002e3e:	d5f5      	bpl.n	8002e2c <HAL_RTC_Init+0x84>
 8002e40:	e7c5      	b.n	8002dce <HAL_RTC_Init+0x26>
    hrtc->Lock = HAL_UNLOCKED;
 8002e42:	7702      	strb	r2, [r0, #28]
    HAL_RTC_MspInit(hrtc);
 8002e44:	f005 fd2a 	bl	800889c <HAL_RTC_MspInit>
 8002e48:	e7b7      	b.n	8002dba <HAL_RTC_Init+0x12>
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 8002e4a:	68da      	ldr	r2, [r3, #12]
 8002e4c:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8002e50:	60da      	str	r2, [r3, #12]
    tickstart = HAL_GetTick();
 8002e52:	f7fe f837 	bl	8000ec4 <HAL_GetTick>
 8002e56:	4605      	mov	r5, r0
  while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 8002e58:	6823      	ldr	r3, [r4, #0]
 8002e5a:	68da      	ldr	r2, [r3, #12]
 8002e5c:	0692      	lsls	r2, r2, #26
 8002e5e:	d4d0      	bmi.n	8002e02 <HAL_RTC_Init+0x5a>
    if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 8002e60:	f7fe f830 	bl	8000ec4 <HAL_GetTick>
 8002e64:	1b40      	subs	r0, r0, r5
 8002e66:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002e6a:	d9f5      	bls.n	8002e58 <HAL_RTC_Init+0xb0>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002e6c:	6822      	ldr	r2, [r4, #0]
 8002e6e:	21ff      	movs	r1, #255	; 0xff
        hrtc->State = HAL_RTC_STATE_ERROR;
 8002e70:	2304      	movs	r3, #4
        return HAL_ERROR;
 8002e72:	2001      	movs	r0, #1
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002e74:	6251      	str	r1, [r2, #36]	; 0x24
        hrtc->State = HAL_RTC_STATE_ERROR;
 8002e76:	7763      	strb	r3, [r4, #29]
}
 8002e78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     return HAL_ERROR;
 8002e7a:	2001      	movs	r0, #1
}
 8002e7c:	4770      	bx	lr
 8002e7e:	bf00      	nop
 8002e80:	ff8fffbf 	.word	0xff8fffbf

08002e84 <HAL_RTC_SetTime>:
{
 8002e84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(hrtc);
 8002e88:	7f03      	ldrb	r3, [r0, #28]
 8002e8a:	2b01      	cmp	r3, #1
 8002e8c:	f000 808c 	beq.w	8002fa8 <HAL_RTC_SetTime+0x124>
 8002e90:	460d      	mov	r5, r1
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002e92:	2302      	movs	r3, #2
  __HAL_LOCK(hrtc);
 8002e94:	2101      	movs	r1, #1
 8002e96:	6806      	ldr	r6, [r0, #0]
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002e98:	7743      	strb	r3, [r0, #29]
 8002e9a:	4604      	mov	r4, r0
  __HAL_LOCK(hrtc);
 8002e9c:	7701      	strb	r1, [r0, #28]
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 8002e9e:	68b7      	ldr	r7, [r6, #8]
  if(Format == RTC_FORMAT_BIN)
 8002ea0:	2a00      	cmp	r2, #0
 8002ea2:	d030      	beq.n	8002f06 <HAL_RTC_SetTime+0x82>
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 8002ea4:	f017 0740 	ands.w	r7, r7, #64	; 0x40
 8002ea8:	d07a      	beq.n	8002fa0 <HAL_RTC_SetTime+0x11c>
 8002eaa:	7b2f      	ldrb	r7, [r5, #12]
 8002eac:	043f      	lsls	r7, r7, #16
              ((uint32_t)(sTime->Minutes) << 8) | \
 8002eae:	7868      	ldrb	r0, [r5, #1]
    tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 8002eb0:	782a      	ldrb	r2, [r5, #0]
              ((uint32_t)(sTime->Minutes) << 8) | \
 8002eb2:	0200      	lsls	r0, r0, #8
              ((uint32_t)sTime->Seconds) | \
 8002eb4:	78ab      	ldrb	r3, [r5, #2]
    tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 8002eb6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
              ((uint32_t)(sTime->Minutes) << 8) | \
 8002eba:	4318      	orrs	r0, r3
    tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 8002ebc:	4307      	orrs	r7, r0
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8002ebe:	22ca      	movs	r2, #202	; 0xca
 8002ec0:	2353      	movs	r3, #83	; 0x53
 8002ec2:	6272      	str	r2, [r6, #36]	; 0x24
 8002ec4:	6273      	str	r3, [r6, #36]	; 0x24
  if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8002ec6:	68f3      	ldr	r3, [r6, #12]
 8002ec8:	065a      	lsls	r2, r3, #25
 8002eca:	d54d      	bpl.n	8002f68 <HAL_RTC_SetTime+0xe4>
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 8002ecc:	4a46      	ldr	r2, [pc, #280]	; (8002fe8 <HAL_RTC_SetTime+0x164>)
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8002ece:	692b      	ldr	r3, [r5, #16]
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 8002ed0:	403a      	ands	r2, r7
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8002ed2:	6969      	ldr	r1, [r5, #20]
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 8002ed4:	6032      	str	r2, [r6, #0]
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8002ed6:	430b      	orrs	r3, r1
    hrtc->Instance->CR &= (uint32_t)~RTC_CR_BKP;
 8002ed8:	68b2      	ldr	r2, [r6, #8]
 8002eda:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002ede:	60b2      	str	r2, [r6, #8]
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8002ee0:	68b2      	ldr	r2, [r6, #8]
 8002ee2:	4313      	orrs	r3, r2
 8002ee4:	60b3      	str	r3, [r6, #8]
    hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 8002ee6:	68f3      	ldr	r3, [r6, #12]
 8002ee8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002eec:	60f3      	str	r3, [r6, #12]
    if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 8002eee:	68b3      	ldr	r3, [r6, #8]
 8002ef0:	069b      	lsls	r3, r3, #26
 8002ef2:	d55c      	bpl.n	8002fae <HAL_RTC_SetTime+0x12a>
   __HAL_UNLOCK(hrtc);
 8002ef4:	2300      	movs	r3, #0
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002ef6:	21ff      	movs	r1, #255	; 0xff
   hrtc->State = HAL_RTC_STATE_READY;
 8002ef8:	2201      	movs	r2, #1
   return HAL_OK;
 8002efa:	4618      	mov	r0, r3
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002efc:	6271      	str	r1, [r6, #36]	; 0x24
   hrtc->State = HAL_RTC_STATE_READY;
 8002efe:	7762      	strb	r2, [r4, #29]
   __HAL_UNLOCK(hrtc);
 8002f00:	7723      	strb	r3, [r4, #28]
}
 8002f02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 8002f06:	f017 0740 	ands.w	r7, r7, #64	; 0x40
 8002f0a:	d04b      	beq.n	8002fa4 <HAL_RTC_SetTime+0x120>
 8002f0c:	7b2f      	ldrb	r7, [r5, #12]
 8002f0e:	043f      	lsls	r7, r7, #16
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f10:	782b      	ldrb	r3, [r5, #0]
  * @param  Value Byte to be converted
  * @retval Converted byte
  */
uint8_t RTC_ByteToBcd2(uint8_t Value)
{
  uint32_t bcdhigh = 0;
 8002f12:	2100      	movs	r1, #0

  while(Value >= 10)
 8002f14:	2b09      	cmp	r3, #9
 8002f16:	d906      	bls.n	8002f26 <HAL_RTC_SetTime+0xa2>
  {
    bcdhigh++;
    Value -= 10;
 8002f18:	3b0a      	subs	r3, #10
    bcdhigh++;
 8002f1a:	3101      	adds	r1, #1
    Value -= 10;
 8002f1c:	b2db      	uxtb	r3, r3
  while(Value >= 10)
 8002f1e:	2b09      	cmp	r3, #9
 8002f20:	d8fa      	bhi.n	8002f18 <HAL_RTC_SetTime+0x94>
 8002f22:	0109      	lsls	r1, r1, #4
 8002f24:	b2c9      	uxtb	r1, r1
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f26:	4319      	orrs	r1, r3
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 8002f28:	786b      	ldrb	r3, [r5, #1]
  uint32_t bcdhigh = 0;
 8002f2a:	2000      	movs	r0, #0
  while(Value >= 10)
 8002f2c:	2b09      	cmp	r3, #9
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f2e:	ea4f 4101 	mov.w	r1, r1, lsl #16
  while(Value >= 10)
 8002f32:	d906      	bls.n	8002f42 <HAL_RTC_SetTime+0xbe>
    Value -= 10;
 8002f34:	3b0a      	subs	r3, #10
    bcdhigh++;
 8002f36:	3001      	adds	r0, #1
    Value -= 10;
 8002f38:	b2db      	uxtb	r3, r3
  while(Value >= 10)
 8002f3a:	2b09      	cmp	r3, #9
 8002f3c:	d8fa      	bhi.n	8002f34 <HAL_RTC_SetTime+0xb0>
 8002f3e:	0100      	lsls	r0, r0, #4
 8002f40:	b2c0      	uxtb	r0, r0
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 8002f42:	4303      	orrs	r3, r0
                        ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 8002f44:	78a8      	ldrb	r0, [r5, #2]
  while(Value >= 10)
 8002f46:	2809      	cmp	r0, #9
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 8002f48:	ea4f 2303 	mov.w	r3, r3, lsl #8
  while(Value >= 10)
 8002f4c:	d949      	bls.n	8002fe2 <HAL_RTC_SetTime+0x15e>
    Value -= 10;
 8002f4e:	380a      	subs	r0, #10
    bcdhigh++;
 8002f50:	3201      	adds	r2, #1
    Value -= 10;
 8002f52:	b2c0      	uxtb	r0, r0
  while(Value >= 10)
 8002f54:	2809      	cmp	r0, #9
 8002f56:	d8fa      	bhi.n	8002f4e <HAL_RTC_SetTime+0xca>
 8002f58:	0112      	lsls	r2, r2, #4
 8002f5a:	b2d2      	uxtb	r2, r2
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f5c:	430f      	orrs	r7, r1
                        ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 8002f5e:	4310      	orrs	r0, r2
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 8002f60:	433b      	orrs	r3, r7
 8002f62:	ea43 0700 	orr.w	r7, r3, r0
 8002f66:	e7aa      	b.n	8002ebe <HAL_RTC_SetTime+0x3a>
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 8002f68:	f04f 33ff 	mov.w	r3, #4294967295
 8002f6c:	60f3      	str	r3, [r6, #12]
    tickstart = HAL_GetTick();
 8002f6e:	f7fd ffa9 	bl	8000ec4 <HAL_GetTick>
 8002f72:	4681      	mov	r9, r0
    while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8002f74:	6826      	ldr	r6, [r4, #0]
 8002f76:	68f3      	ldr	r3, [r6, #12]
 8002f78:	f013 0840 	ands.w	r8, r3, #64	; 0x40
 8002f7c:	d1a6      	bne.n	8002ecc <HAL_RTC_SetTime+0x48>
      if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 8002f7e:	f7fd ffa1 	bl	8000ec4 <HAL_GetTick>
 8002f82:	eba0 0009 	sub.w	r0, r0, r9
 8002f86:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002f8a:	d9f3      	bls.n	8002f74 <HAL_RTC_SetTime+0xf0>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002f8c:	6822      	ldr	r2, [r4, #0]
 8002f8e:	21ff      	movs	r1, #255	; 0xff
    hrtc->State = HAL_RTC_STATE_ERROR;
 8002f90:	2304      	movs	r3, #4
    return HAL_ERROR;
 8002f92:	2001      	movs	r0, #1
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002f94:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_UNLOCK(hrtc);
 8002f96:	f884 801c 	strb.w	r8, [r4, #28]
    hrtc->State = HAL_RTC_STATE_ERROR;
 8002f9a:	7763      	strb	r3, [r4, #29]
}
 8002f9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      sTime->TimeFormat = 0x00;
 8002fa0:	732f      	strb	r7, [r5, #12]
 8002fa2:	e784      	b.n	8002eae <HAL_RTC_SetTime+0x2a>
      sTime->TimeFormat = 0x00;
 8002fa4:	732f      	strb	r7, [r5, #12]
 8002fa6:	e7b3      	b.n	8002f10 <HAL_RTC_SetTime+0x8c>
  __HAL_LOCK(hrtc);
 8002fa8:	2002      	movs	r0, #2
}
 8002faa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 8002fae:	68f3      	ldr	r3, [r6, #12]
 8002fb0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002fb4:	60f3      	str	r3, [r6, #12]
    tickstart = HAL_GetTick();
 8002fb6:	f7fd ff85 	bl	8000ec4 <HAL_GetTick>
 8002fba:	4607      	mov	r7, r0
  while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 8002fbc:	6826      	ldr	r6, [r4, #0]
 8002fbe:	68f5      	ldr	r5, [r6, #12]
 8002fc0:	f015 0520 	ands.w	r5, r5, #32
 8002fc4:	d196      	bne.n	8002ef4 <HAL_RTC_SetTime+0x70>
    if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 8002fc6:	f7fd ff7d 	bl	8000ec4 <HAL_GetTick>
 8002fca:	1bc0      	subs	r0, r0, r7
 8002fcc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002fd0:	d9f4      	bls.n	8002fbc <HAL_RTC_SetTime+0x138>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002fd2:	6822      	ldr	r2, [r4, #0]
 8002fd4:	21ff      	movs	r1, #255	; 0xff
        hrtc->State = HAL_RTC_STATE_ERROR;
 8002fd6:	2304      	movs	r3, #4
        return HAL_ERROR;
 8002fd8:	2001      	movs	r0, #1
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8002fda:	6251      	str	r1, [r2, #36]	; 0x24
        __HAL_UNLOCK(hrtc);
 8002fdc:	7725      	strb	r5, [r4, #28]
        hrtc->State = HAL_RTC_STATE_ERROR;
 8002fde:	7763      	strb	r3, [r4, #29]
        return HAL_ERROR;
 8002fe0:	e78f      	b.n	8002f02 <HAL_RTC_SetTime+0x7e>
  while(Value >= 10)
 8002fe2:	2200      	movs	r2, #0
 8002fe4:	e7ba      	b.n	8002f5c <HAL_RTC_SetTime+0xd8>
 8002fe6:	bf00      	nop
 8002fe8:	007f7f7f 	.word	0x007f7f7f

08002fec <HAL_RTC_SetDate>:
{
 8002fec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 __HAL_LOCK(hrtc);
 8002fee:	7f03      	ldrb	r3, [r0, #28]
 8002ff0:	2b01      	cmp	r3, #1
 8002ff2:	d074      	beq.n	80030de <HAL_RTC_SetDate+0xf2>
 8002ff4:	4605      	mov	r5, r0
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002ff6:	2302      	movs	r3, #2
 __HAL_LOCK(hrtc);
 8002ff8:	2001      	movs	r0, #1
  hrtc->State = HAL_RTC_STATE_BUSY;
 8002ffa:	776b      	strb	r3, [r5, #29]
 __HAL_LOCK(hrtc);
 8002ffc:	7728      	strb	r0, [r5, #28]
 8002ffe:	780e      	ldrb	r6, [r1, #0]
 8003000:	78cb      	ldrb	r3, [r1, #3]
 8003002:	0376      	lsls	r6, r6, #13
 8003004:	7848      	ldrb	r0, [r1, #1]
 8003006:	788c      	ldrb	r4, [r1, #2]
  if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 8003008:	bb8a      	cbnz	r2, 800306e <HAL_RTC_SetDate+0x82>
 800300a:	06c7      	lsls	r7, r0, #27
 800300c:	d504      	bpl.n	8003018 <HAL_RTC_SetDate+0x2c>
    sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 800300e:	f020 0010 	bic.w	r0, r0, #16
 8003012:	300a      	adds	r0, #10
 8003014:	b2c0      	uxtb	r0, r0
 8003016:	7048      	strb	r0, [r1, #1]
  while(Value >= 10)
 8003018:	2b09      	cmp	r3, #9
  uint32_t bcdhigh = 0;
 800301a:	f04f 0100 	mov.w	r1, #0
  while(Value >= 10)
 800301e:	d906      	bls.n	800302e <HAL_RTC_SetDate+0x42>
    Value -= 10;
 8003020:	3b0a      	subs	r3, #10
    bcdhigh++;
 8003022:	3101      	adds	r1, #1
    Value -= 10;
 8003024:	b2db      	uxtb	r3, r3
  while(Value >= 10)
 8003026:	2b09      	cmp	r3, #9
 8003028:	d8fa      	bhi.n	8003020 <HAL_RTC_SetDate+0x34>
 800302a:	0109      	lsls	r1, r1, #4
 800302c:	b2c9      	uxtb	r1, r1
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 800302e:	430b      	orrs	r3, r1
  while(Value >= 10)
 8003030:	2809      	cmp	r0, #9
  uint32_t bcdhigh = 0;
 8003032:	f04f 0100 	mov.w	r1, #0
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 8003036:	ea4f 4303 	mov.w	r3, r3, lsl #16
  while(Value >= 10)
 800303a:	d906      	bls.n	800304a <HAL_RTC_SetDate+0x5e>
    Value -= 10;
 800303c:	380a      	subs	r0, #10
    bcdhigh++;
 800303e:	3101      	adds	r1, #1
    Value -= 10;
 8003040:	b2c0      	uxtb	r0, r0
  while(Value >= 10)
 8003042:	2809      	cmp	r0, #9
 8003044:	d8fa      	bhi.n	800303c <HAL_RTC_SetDate+0x50>
 8003046:	0109      	lsls	r1, r1, #4
 8003048:	b2c9      	uxtb	r1, r1
                 ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 800304a:	4308      	orrs	r0, r1
  while(Value >= 10)
 800304c:	2c09      	cmp	r4, #9
                 ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 800304e:	ea4f 2100 	mov.w	r1, r0, lsl #8
  while(Value >= 10)
 8003052:	d960      	bls.n	8003116 <HAL_RTC_SetDate+0x12a>
    Value -= 10;
 8003054:	3c0a      	subs	r4, #10
    bcdhigh++;
 8003056:	3201      	adds	r2, #1
    Value -= 10;
 8003058:	b2e4      	uxtb	r4, r4
  while(Value >= 10)
 800305a:	2c09      	cmp	r4, #9
 800305c:	d8fa      	bhi.n	8003054 <HAL_RTC_SetDate+0x68>
 800305e:	0112      	lsls	r2, r2, #4
 8003060:	b2d0      	uxtb	r0, r2
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 8003062:	431e      	orrs	r6, r3
                 ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 8003064:	4304      	orrs	r4, r0
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 8003066:	ea46 0001 	orr.w	r0, r6, r1
 800306a:	4304      	orrs	r4, r0
 800306c:	e004      	b.n	8003078 <HAL_RTC_SetDate+0x8c>
    datetmpreg = ((((uint32_t)sDate->Year) << 16) | \
 800306e:	ea46 4303 	orr.w	r3, r6, r3, lsl #16
 8003072:	431c      	orrs	r4, r3
 8003074:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8003078:	682b      	ldr	r3, [r5, #0]
 800307a:	21ca      	movs	r1, #202	; 0xca
 800307c:	2253      	movs	r2, #83	; 0x53
 800307e:	6259      	str	r1, [r3, #36]	; 0x24
 8003080:	625a      	str	r2, [r3, #36]	; 0x24
  if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 8003082:	68da      	ldr	r2, [r3, #12]
 8003084:	0651      	lsls	r1, r2, #25
 8003086:	d511      	bpl.n	80030ac <HAL_RTC_SetDate+0xc0>
    hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 8003088:	4a24      	ldr	r2, [pc, #144]	; (800311c <HAL_RTC_SetDate+0x130>)
 800308a:	4022      	ands	r2, r4
 800308c:	605a      	str	r2, [r3, #4]
    hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 800308e:	68da      	ldr	r2, [r3, #12]
 8003090:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003094:	60da      	str	r2, [r3, #12]
    if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 8003096:	689a      	ldr	r2, [r3, #8]
 8003098:	0692      	lsls	r2, r2, #26
 800309a:	d522      	bpl.n	80030e2 <HAL_RTC_SetDate+0xf6>
    __HAL_UNLOCK(hrtc);
 800309c:	2200      	movs	r2, #0
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800309e:	20ff      	movs	r0, #255	; 0xff
    hrtc->State = HAL_RTC_STATE_READY ;
 80030a0:	2101      	movs	r1, #1
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80030a2:	6258      	str	r0, [r3, #36]	; 0x24
    return HAL_OK;
 80030a4:	4610      	mov	r0, r2
    hrtc->State = HAL_RTC_STATE_READY ;
 80030a6:	7769      	strb	r1, [r5, #29]
    __HAL_UNLOCK(hrtc);
 80030a8:	772a      	strb	r2, [r5, #28]
}
 80030aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 80030ac:	f04f 32ff 	mov.w	r2, #4294967295
 80030b0:	60da      	str	r2, [r3, #12]
    tickstart = HAL_GetTick();
 80030b2:	f7fd ff07 	bl	8000ec4 <HAL_GetTick>
 80030b6:	4606      	mov	r6, r0
    while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 80030b8:	682b      	ldr	r3, [r5, #0]
 80030ba:	68df      	ldr	r7, [r3, #12]
 80030bc:	f017 0740 	ands.w	r7, r7, #64	; 0x40
 80030c0:	d1e2      	bne.n	8003088 <HAL_RTC_SetDate+0x9c>
      if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 80030c2:	f7fd feff 	bl	8000ec4 <HAL_GetTick>
 80030c6:	1b80      	subs	r0, r0, r6
 80030c8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80030cc:	d9f4      	bls.n	80030b8 <HAL_RTC_SetDate+0xcc>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80030ce:	682a      	ldr	r2, [r5, #0]
 80030d0:	21ff      	movs	r1, #255	; 0xff
    hrtc->State = HAL_RTC_STATE_ERROR;
 80030d2:	2304      	movs	r3, #4
    return HAL_ERROR;
 80030d4:	2001      	movs	r0, #1
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80030d6:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_UNLOCK(hrtc);
 80030d8:	772f      	strb	r7, [r5, #28]
    hrtc->State = HAL_RTC_STATE_ERROR;
 80030da:	776b      	strb	r3, [r5, #29]
}
 80030dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 __HAL_LOCK(hrtc);
 80030de:	2002      	movs	r0, #2
}
 80030e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 80030e2:	68da      	ldr	r2, [r3, #12]
 80030e4:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80030e8:	60da      	str	r2, [r3, #12]
    tickstart = HAL_GetTick();
 80030ea:	f7fd feeb 	bl	8000ec4 <HAL_GetTick>
 80030ee:	4606      	mov	r6, r0
  while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 80030f0:	682b      	ldr	r3, [r5, #0]
 80030f2:	68dc      	ldr	r4, [r3, #12]
 80030f4:	f014 0420 	ands.w	r4, r4, #32
 80030f8:	d1d0      	bne.n	800309c <HAL_RTC_SetDate+0xb0>
    if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 80030fa:	f7fd fee3 	bl	8000ec4 <HAL_GetTick>
 80030fe:	1b80      	subs	r0, r0, r6
 8003100:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003104:	d9f4      	bls.n	80030f0 <HAL_RTC_SetDate+0x104>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8003106:	682a      	ldr	r2, [r5, #0]
 8003108:	21ff      	movs	r1, #255	; 0xff
        hrtc->State = HAL_RTC_STATE_ERROR;
 800310a:	2304      	movs	r3, #4
        return HAL_ERROR;
 800310c:	2001      	movs	r0, #1
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800310e:	6251      	str	r1, [r2, #36]	; 0x24
        __HAL_UNLOCK(hrtc);
 8003110:	772c      	strb	r4, [r5, #28]
        hrtc->State = HAL_RTC_STATE_ERROR;
 8003112:	776b      	strb	r3, [r5, #29]
}
 8003114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  while(Value >= 10)
 8003116:	2000      	movs	r0, #0
 8003118:	e7a3      	b.n	8003062 <HAL_RTC_SetDate+0x76>
 800311a:	bf00      	nop
 800311c:	00ffff3f 	.word	0x00ffff3f

08003120 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8003120:	2800      	cmp	r0, #0
 8003122:	d07b      	beq.n	800321c <HAL_TIM_Base_Init+0xfc>
{
 8003124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8003126:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800312a:	4604      	mov	r4, r0
 800312c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003130:	2b00      	cmp	r3, #0
 8003132:	d03b      	beq.n	80031ac <HAL_TIM_Base_Init+0x8c>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8003134:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8003136:	2002      	movs	r0, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8003138:	4e41      	ldr	r6, [pc, #260]	; (8003240 <HAL_TIM_Base_Init+0x120>)
 800313a:	4f42      	ldr	r7, [pc, #264]	; (8003244 <HAL_TIM_Base_Init+0x124>)
 800313c:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8003140:	eba2 0606 	sub.w	r6, r2, r6
  htim->State = HAL_TIM_STATE_BUSY;
 8003144:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
 8003148:	eba2 0707 	sub.w	r7, r2, r7
  tmpcr1 = TIMx->CR1;
 800314c:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800314e:	fab6 f686 	clz	r6, r6
 8003152:	fab7 f787 	clz	r7, r7
 8003156:	ea4f 1656 	mov.w	r6, r6, lsr #5
 800315a:	ea4f 1757 	mov.w	r7, r7, lsr #5
 800315e:	d02a      	beq.n	80031b6 <HAL_TIM_Base_Init+0x96>
 8003160:	bb4e      	cbnz	r6, 80031b6 <HAL_TIM_Base_Init+0x96>
 8003162:	4939      	ldr	r1, [pc, #228]	; (8003248 <HAL_TIM_Base_Init+0x128>)
 8003164:	428a      	cmp	r2, r1
 8003166:	d05b      	beq.n	8003220 <HAL_TIM_Base_Init+0x100>
 8003168:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800316c:	428a      	cmp	r2, r1
 800316e:	d057      	beq.n	8003220 <HAL_TIM_Base_Init+0x100>
 8003170:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8003174:	428a      	cmp	r2, r1
 8003176:	d058      	beq.n	800322a <HAL_TIM_Base_Init+0x10a>
 8003178:	2f00      	cmp	r7, #0
 800317a:	d156      	bne.n	800322a <HAL_TIM_Base_Init+0x10a>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800317c:	4933      	ldr	r1, [pc, #204]	; (800324c <HAL_TIM_Base_Init+0x12c>)
 800317e:	428a      	cmp	r2, r1
 8003180:	d01e      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 8003182:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8003186:	428a      	cmp	r2, r1
 8003188:	d01a      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 800318a:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800318e:	428a      	cmp	r2, r1
 8003190:	d016      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 8003192:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 8003196:	428a      	cmp	r2, r1
 8003198:	d012      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 800319a:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800319e:	428a      	cmp	r2, r1
 80031a0:	d00e      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 80031a2:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80031a6:	428a      	cmp	r2, r1
 80031a8:	d10e      	bne.n	80031c8 <HAL_TIM_Base_Init+0xa8>
 80031aa:	e009      	b.n	80031c0 <HAL_TIM_Base_Init+0xa0>
    htim->Lock = HAL_UNLOCKED;
 80031ac:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80031b0:	f005 fb82 	bl	80088b8 <HAL_TIM_Base_MspInit>
 80031b4:	e7be      	b.n	8003134 <HAL_TIM_Base_Init+0x14>
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80031b6:	f023 0570 	bic.w	r5, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80031ba:	68a0      	ldr	r0, [r4, #8]
 80031bc:	ea45 0300 	orr.w	r3, r5, r0
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80031c0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80031c4:	6920      	ldr	r0, [r4, #16]
 80031c6:	4303      	orrs	r3, r0
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80031c8:	69a1      	ldr	r1, [r4, #24]
 80031ca:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80031ce:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80031d0:	430b      	orrs	r3, r1

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80031d2:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 80031d4:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 80031d6:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 80031d8:	6291      	str	r1, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80031da:	b9e6      	cbnz	r6, 8003216 <HAL_TIM_Base_Init+0xf6>
 80031dc:	b9df      	cbnz	r7, 8003216 <HAL_TIM_Base_Init+0xf6>
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80031de:	2301      	movs	r3, #1
  return HAL_OK;
 80031e0:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
 80031e2:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80031e4:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80031e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80031ec:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80031f0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80031f4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 80031f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80031fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8003200:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8003204:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003208:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 800320c:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 8003210:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8003214:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    TIMx->RCR = Structure->RepetitionCounter;
 8003216:	6963      	ldr	r3, [r4, #20]
 8003218:	6313      	str	r3, [r2, #48]	; 0x30
 800321a:	e7e0      	b.n	80031de <HAL_TIM_Base_Init+0xbe>
    return HAL_ERROR;
 800321c:	2001      	movs	r0, #1
}
 800321e:	4770      	bx	lr
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8003220:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8003224:	68a1      	ldr	r1, [r4, #8]
 8003226:	430b      	orrs	r3, r1
 8003228:	e7ca      	b.n	80031c0 <HAL_TIM_Base_Init+0xa0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800322a:	4909      	ldr	r1, [pc, #36]	; (8003250 <HAL_TIM_Base_Init+0x130>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800322c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8003230:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003232:	428a      	cmp	r2, r1
    tmpcr1 |= Structure->CounterMode;
 8003234:	ea43 0300 	orr.w	r3, r3, r0
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003238:	d0c2      	beq.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 800323a:	2f00      	cmp	r7, #0
 800323c:	d1c0      	bne.n	80031c0 <HAL_TIM_Base_Init+0xa0>
 800323e:	e79d      	b.n	800317c <HAL_TIM_Base_Init+0x5c>
 8003240:	40010000 	.word	0x40010000
 8003244:	40010400 	.word	0x40010400
 8003248:	40000400 	.word	0x40000400
 800324c:	40014000 	.word	0x40014000
 8003250:	40000c00 	.word	0x40000c00

08003254 <HAL_TIM_PWM_MspInit>:
 8003254:	4770      	bx	lr
 8003256:	bf00      	nop

08003258 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 8003258:	2800      	cmp	r0, #0
 800325a:	d07b      	beq.n	8003354 <HAL_TIM_PWM_Init+0xfc>
{
 800325c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800325e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8003262:	4604      	mov	r4, r0
 8003264:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003268:	2b00      	cmp	r3, #0
 800326a:	d03b      	beq.n	80032e4 <HAL_TIM_PWM_Init+0x8c>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800326c:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800326e:	2002      	movs	r0, #2
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8003270:	4e41      	ldr	r6, [pc, #260]	; (8003378 <HAL_TIM_PWM_Init+0x120>)
 8003272:	4f42      	ldr	r7, [pc, #264]	; (800337c <HAL_TIM_PWM_Init+0x124>)
 8003274:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8003278:	eba2 0606 	sub.w	r6, r2, r6
  htim->State = HAL_TIM_STATE_BUSY;
 800327c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
 8003280:	eba2 0707 	sub.w	r7, r2, r7
  tmpcr1 = TIMx->CR1;
 8003284:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8003286:	fab6 f686 	clz	r6, r6
 800328a:	fab7 f787 	clz	r7, r7
 800328e:	ea4f 1656 	mov.w	r6, r6, lsr #5
 8003292:	ea4f 1757 	mov.w	r7, r7, lsr #5
 8003296:	d02a      	beq.n	80032ee <HAL_TIM_PWM_Init+0x96>
 8003298:	bb4e      	cbnz	r6, 80032ee <HAL_TIM_PWM_Init+0x96>
 800329a:	4939      	ldr	r1, [pc, #228]	; (8003380 <HAL_TIM_PWM_Init+0x128>)
 800329c:	428a      	cmp	r2, r1
 800329e:	d05b      	beq.n	8003358 <HAL_TIM_PWM_Init+0x100>
 80032a0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032a4:	428a      	cmp	r2, r1
 80032a6:	d057      	beq.n	8003358 <HAL_TIM_PWM_Init+0x100>
 80032a8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032ac:	428a      	cmp	r2, r1
 80032ae:	d058      	beq.n	8003362 <HAL_TIM_PWM_Init+0x10a>
 80032b0:	2f00      	cmp	r7, #0
 80032b2:	d156      	bne.n	8003362 <HAL_TIM_PWM_Init+0x10a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80032b4:	4933      	ldr	r1, [pc, #204]	; (8003384 <HAL_TIM_PWM_Init+0x12c>)
 80032b6:	428a      	cmp	r2, r1
 80032b8:	d01e      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032ba:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032be:	428a      	cmp	r2, r1
 80032c0:	d01a      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032c2:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032c6:	428a      	cmp	r2, r1
 80032c8:	d016      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032ca:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 80032ce:	428a      	cmp	r2, r1
 80032d0:	d012      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032d2:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032d6:	428a      	cmp	r2, r1
 80032d8:	d00e      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 80032da:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80032de:	428a      	cmp	r2, r1
 80032e0:	d10e      	bne.n	8003300 <HAL_TIM_PWM_Init+0xa8>
 80032e2:	e009      	b.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
    htim->Lock = HAL_UNLOCKED;
 80032e4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 80032e8:	f7ff ffb4 	bl	8003254 <HAL_TIM_PWM_MspInit>
 80032ec:	e7be      	b.n	800326c <HAL_TIM_PWM_Init+0x14>
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80032ee:	f023 0570 	bic.w	r5, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80032f2:	68a0      	ldr	r0, [r4, #8]
 80032f4:	ea45 0300 	orr.w	r3, r5, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 80032f8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80032fc:	6920      	ldr	r0, [r4, #16]
 80032fe:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8003300:	69a1      	ldr	r1, [r4, #24]
 8003302:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 8003306:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8003308:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800330a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800330c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800330e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8003310:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8003312:	b9e6      	cbnz	r6, 800334e <HAL_TIM_PWM_Init+0xf6>
 8003314:	b9df      	cbnz	r7, 800334e <HAL_TIM_PWM_Init+0xf6>
  TIMx->EGR = TIM_EGR_UG;
 8003316:	2301      	movs	r3, #1
  return HAL_OK;
 8003318:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
 800331a:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800331c:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8003320:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8003324:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8003328:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800332c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8003330:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003334:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8003338:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800333c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003340:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8003344:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 8003348:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800334c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    TIMx->RCR = Structure->RepetitionCounter;
 800334e:	6963      	ldr	r3, [r4, #20]
 8003350:	6313      	str	r3, [r2, #48]	; 0x30
 8003352:	e7e0      	b.n	8003316 <HAL_TIM_PWM_Init+0xbe>
    return HAL_ERROR;
 8003354:	2001      	movs	r0, #1
}
 8003356:	4770      	bx	lr
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8003358:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800335c:	68a1      	ldr	r1, [r4, #8]
 800335e:	430b      	orrs	r3, r1
 8003360:	e7ca      	b.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003362:	4909      	ldr	r1, [pc, #36]	; (8003388 <HAL_TIM_PWM_Init+0x130>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8003364:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8003368:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800336a:	428a      	cmp	r2, r1
    tmpcr1 |= Structure->CounterMode;
 800336c:	ea43 0300 	orr.w	r3, r3, r0
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003370:	d0c2      	beq.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 8003372:	2f00      	cmp	r7, #0
 8003374:	d1c0      	bne.n	80032f8 <HAL_TIM_PWM_Init+0xa0>
 8003376:	e79d      	b.n	80032b4 <HAL_TIM_PWM_Init+0x5c>
 8003378:	40010000 	.word	0x40010000
 800337c:	40010400 	.word	0x40010400
 8003380:	40000400 	.word	0x40000400
 8003384:	40014000 	.word	0x40014000
 8003388:	40000c00 	.word	0x40000c00

0800338c <HAL_TIM_PWM_Start>:
 800338c:	2900      	cmp	r1, #0
 800338e:	d14b      	bne.n	8003428 <HAL_TIM_PWM_Start+0x9c>
 8003390:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 8003394:	2b01      	cmp	r3, #1
 8003396:	d15b      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 8003398:	2302      	movs	r3, #2
 800339a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800339e:	6803      	ldr	r3, [r0, #0]
 80033a0:	2201      	movs	r2, #1
 80033a2:	f001 011f 	and.w	r1, r1, #31
 80033a6:	6a18      	ldr	r0, [r3, #32]
 80033a8:	fa02 f101 	lsl.w	r1, r2, r1
 80033ac:	ea20 0001 	bic.w	r0, r0, r1
 80033b0:	b410      	push	{r4}
 80033b2:	6218      	str	r0, [r3, #32]
 80033b4:	4c3e      	ldr	r4, [pc, #248]	; (80034b0 <HAL_TIM_PWM_Start+0x124>)
 80033b6:	6a1a      	ldr	r2, [r3, #32]
 80033b8:	42a3      	cmp	r3, r4
 80033ba:	ea41 0102 	orr.w	r1, r1, r2
 80033be:	6219      	str	r1, [r3, #32]
 80033c0:	d048      	beq.n	8003454 <HAL_TIM_PWM_Start+0xc8>
 80033c2:	4a3c      	ldr	r2, [pc, #240]	; (80034b4 <HAL_TIM_PWM_Start+0x128>)
 80033c4:	4293      	cmp	r3, r2
 80033c6:	d045      	beq.n	8003454 <HAL_TIM_PWM_Start+0xc8>
 80033c8:	4a3b      	ldr	r2, [pc, #236]	; (80034b8 <HAL_TIM_PWM_Start+0x12c>)
 80033ca:	4c3c      	ldr	r4, [pc, #240]	; (80034bc <HAL_TIM_PWM_Start+0x130>)
 80033cc:	4293      	cmp	r3, r2
 80033ce:	bf18      	it	ne
 80033d0:	f1b3 4f80 	cmpne.w	r3, #1073741824	; 0x40000000
 80033d4:	483a      	ldr	r0, [pc, #232]	; (80034c0 <HAL_TIM_PWM_Start+0x134>)
 80033d6:	493b      	ldr	r1, [pc, #236]	; (80034c4 <HAL_TIM_PWM_Start+0x138>)
 80033d8:	bf0c      	ite	eq
 80033da:	2201      	moveq	r2, #1
 80033dc:	2200      	movne	r2, #0
 80033de:	42a3      	cmp	r3, r4
 80033e0:	bf08      	it	eq
 80033e2:	f042 0201 	orreq.w	r2, r2, #1
 80033e6:	4283      	cmp	r3, r0
 80033e8:	bf08      	it	eq
 80033ea:	f042 0201 	orreq.w	r2, r2, #1
 80033ee:	428b      	cmp	r3, r1
 80033f0:	bf08      	it	eq
 80033f2:	f042 0201 	orreq.w	r2, r2, #1
 80033f6:	b93a      	cbnz	r2, 8003408 <HAL_TIM_PWM_Start+0x7c>
 80033f8:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
 80033fc:	1a18      	subs	r0, r3, r0
 80033fe:	fab0 f080 	clz	r0, r0
 8003402:	0940      	lsrs	r0, r0, #5
 8003404:	2800      	cmp	r0, #0
 8003406:	d046      	beq.n	8003496 <HAL_TIM_PWM_Start+0x10a>
 8003408:	6899      	ldr	r1, [r3, #8]
 800340a:	4a2f      	ldr	r2, [pc, #188]	; (80034c8 <HAL_TIM_PWM_Start+0x13c>)
 800340c:	400a      	ands	r2, r1
 800340e:	2a06      	cmp	r2, #6
 8003410:	d029      	beq.n	8003466 <HAL_TIM_PWM_Start+0xda>
 8003412:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003416:	d026      	beq.n	8003466 <HAL_TIM_PWM_Start+0xda>
 8003418:	681a      	ldr	r2, [r3, #0]
 800341a:	2000      	movs	r0, #0
 800341c:	f042 0201 	orr.w	r2, r2, #1
 8003420:	601a      	str	r2, [r3, #0]
 8003422:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003426:	4770      	bx	lr
 8003428:	2904      	cmp	r1, #4
 800342a:	d020      	beq.n	800346e <HAL_TIM_PWM_Start+0xe2>
 800342c:	2908      	cmp	r1, #8
 800342e:	d026      	beq.n	800347e <HAL_TIM_PWM_Start+0xf2>
 8003430:	290c      	cmp	r1, #12
 8003432:	d009      	beq.n	8003448 <HAL_TIM_PWM_Start+0xbc>
 8003434:	2910      	cmp	r1, #16
 8003436:	d033      	beq.n	80034a0 <HAL_TIM_PWM_Start+0x114>
 8003438:	f890 3043 	ldrb.w	r3, [r0, #67]	; 0x43
 800343c:	2b01      	cmp	r3, #1
 800343e:	d107      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 8003440:	2302      	movs	r3, #2
 8003442:	f880 3043 	strb.w	r3, [r0, #67]	; 0x43
 8003446:	e7aa      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 8003448:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800344c:	2b01      	cmp	r3, #1
 800344e:	d01e      	beq.n	800348e <HAL_TIM_PWM_Start+0x102>
 8003450:	2001      	movs	r0, #1
 8003452:	4770      	bx	lr
 8003454:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003456:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800345a:	645a      	str	r2, [r3, #68]	; 0x44
 800345c:	4a1a      	ldr	r2, [pc, #104]	; (80034c8 <HAL_TIM_PWM_Start+0x13c>)
 800345e:	6899      	ldr	r1, [r3, #8]
 8003460:	400a      	ands	r2, r1
 8003462:	2a06      	cmp	r2, #6
 8003464:	d1d5      	bne.n	8003412 <HAL_TIM_PWM_Start+0x86>
 8003466:	2000      	movs	r0, #0
 8003468:	f85d 4b04 	ldr.w	r4, [sp], #4
 800346c:	4770      	bx	lr
 800346e:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 8003472:	2b01      	cmp	r3, #1
 8003474:	d1ec      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 8003476:	2302      	movs	r3, #2
 8003478:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800347c:	e78f      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 800347e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8003482:	2b01      	cmp	r3, #1
 8003484:	d1e4      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 8003486:	2302      	movs	r3, #2
 8003488:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800348c:	e787      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 800348e:	2302      	movs	r3, #2
 8003490:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 8003494:	e783      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 8003496:	681a      	ldr	r2, [r3, #0]
 8003498:	f042 0201 	orr.w	r2, r2, #1
 800349c:	601a      	str	r2, [r3, #0]
 800349e:	e7c0      	b.n	8003422 <HAL_TIM_PWM_Start+0x96>
 80034a0:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
 80034a4:	2b01      	cmp	r3, #1
 80034a6:	d1d3      	bne.n	8003450 <HAL_TIM_PWM_Start+0xc4>
 80034a8:	2302      	movs	r3, #2
 80034aa:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
 80034ae:	e776      	b.n	800339e <HAL_TIM_PWM_Start+0x12>
 80034b0:	40010000 	.word	0x40010000
 80034b4:	40010400 	.word	0x40010400
 80034b8:	40000400 	.word	0x40000400
 80034bc:	40000800 	.word	0x40000800
 80034c0:	40000c00 	.word	0x40000c00
 80034c4:	40014000 	.word	0x40014000
 80034c8:	00010007 	.word	0x00010007

080034cc <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 80034cc:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80034d0:	2b01      	cmp	r3, #1
 80034d2:	f000 8153 	beq.w	800377c <HAL_TIM_PWM_ConfigChannel+0x2b0>
 80034d6:	2301      	movs	r3, #1
{
 80034d8:	b4f0      	push	{r4, r5, r6, r7}
  __HAL_LOCK(htim);
 80034da:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 80034de:	2a14      	cmp	r2, #20
 80034e0:	d843      	bhi.n	800356a <HAL_TIM_PWM_ConfigChannel+0x9e>
 80034e2:	e8df f012 	tbh	[pc, r2, lsl #1]
 80034e6:	0015      	.short	0x0015
 80034e8:	00420042 	.word	0x00420042
 80034ec:	007d0042 	.word	0x007d0042
 80034f0:	00420042 	.word	0x00420042
 80034f4:	00e60042 	.word	0x00e60042
 80034f8:	00420042 	.word	0x00420042
 80034fc:	00b10042 	.word	0x00b10042
 8003500:	00420042 	.word	0x00420042
 8003504:	01190042 	.word	0x01190042
 8003508:	00420042 	.word	0x00420042
 800350c:	00480042 	.word	0x00480042
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8003510:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8003512:	f8d1 c008 	ldr.w	ip, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003516:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= OC_Config->OCMode;
 8003518:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800351a:	f025 0501 	bic.w	r5, r5, #1
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800351e:	4cb0      	ldr	r4, [pc, #704]	; (80037e0 <HAL_TIM_PWM_ConfigChannel+0x314>)
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003520:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 8003522:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 8003524:	685e      	ldr	r6, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 8003526:	699d      	ldr	r5, [r3, #24]
  tmpccer &= ~TIM_CCER_CC1P;
 8003528:	f022 0202 	bic.w	r2, r2, #2
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800352c:	402c      	ands	r4, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800352e:	4dad      	ldr	r5, [pc, #692]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccer |= OC_Config->OCPolarity;
 8003530:	ea42 020c 	orr.w	r2, r2, ip
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8003534:	42ab      	cmp	r3, r5
  tmpccmrx |= OC_Config->OCMode;
 8003536:	ea44 0407 	orr.w	r4, r4, r7
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800353a:	f000 812d 	beq.w	8003798 <HAL_TIM_PWM_ConfigChannel+0x2cc>
 800353e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8003542:	42ab      	cmp	r3, r5
 8003544:	f000 8128 	beq.w	8003798 <HAL_TIM_PWM_ConfigChannel+0x2cc>

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8003548:	684d      	ldr	r5, [r1, #4]
  TIMx->CR2 = tmpcr2;
 800354a:	605e      	str	r6, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800354c:	619c      	str	r4, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800354e:	635d      	str	r5, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8003550:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8003552:	699c      	ldr	r4, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8003554:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8003556:	f044 0408 	orr.w	r4, r4, #8
 800355a:	619c      	str	r4, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800355c:	6999      	ldr	r1, [r3, #24]
 800355e:	f021 0104 	bic.w	r1, r1, #4
 8003562:	6199      	str	r1, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8003564:	699a      	ldr	r2, [r3, #24]
 8003566:	432a      	orrs	r2, r5
 8003568:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800356a:	2300      	movs	r3, #0
}
 800356c:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 800356e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8003572:	4618      	mov	r0, r3
}
 8003574:	4770      	bx	lr
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 8003576:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8003578:	688e      	ldr	r6, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC6E;
 800357a:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800357c:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC6E;
 800357e:	f425 1580 	bic.w	r5, r5, #1048576	; 0x100000
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 8003582:	4c99      	ldr	r4, [pc, #612]	; (80037e8 <HAL_TIM_PWM_ConfigChannel+0x31c>)
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8003584:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 8003586:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 8003588:	685d      	ldr	r5, [r3, #4]
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 800358a:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  tmpccmrx = TIMx->CCMR3;
 800358e:	f8d3 c054 	ldr.w	ip, [r3, #84]	; 0x54
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8003592:	ea42 5206 	orr.w	r2, r2, r6, lsl #20

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003596:	4e93      	ldr	r6, [pc, #588]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 8003598:	ea0c 0404 	and.w	r4, ip, r4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800359c:	42b3      	cmp	r3, r6
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800359e:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80035a2:	f000 80ed 	beq.w	8003780 <HAL_TIM_PWM_ConfigChannel+0x2b4>
 80035a6:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80035aa:	42b3      	cmp	r3, r6
 80035ac:	f000 80e8 	beq.w	8003780 <HAL_TIM_PWM_ConfigChannel+0x2b4>

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 80035b0:	684e      	ldr	r6, [r1, #4]
  TIMx->CR2 = tmpcr2;
 80035b2:	605d      	str	r5, [r3, #4]
  TIMx->CCMR3 = tmpccmrx;
 80035b4:	655c      	str	r4, [r3, #84]	; 0x54
  TIMx->CCR6 = OC_Config->Pulse;
 80035b6:	65de      	str	r6, [r3, #92]	; 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80035b8:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 80035ba:	6d5c      	ldr	r4, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 80035bc:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 80035be:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 80035c2:	655c      	str	r4, [r3, #84]	; 0x54
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 80035c4:	6d59      	ldr	r1, [r3, #84]	; 0x54
 80035c6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80035ca:	6559      	str	r1, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 80035cc:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80035ce:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80035d2:	655a      	str	r2, [r3, #84]	; 0x54
  __HAL_UNLOCK(htim);
 80035d4:	2300      	movs	r3, #0
}
 80035d6:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 80035d8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80035dc:	4618      	mov	r0, r3
}
 80035de:	4770      	bx	lr
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80035e0:	6803      	ldr	r3, [r0, #0]
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80035e2:	f8d1 c008 	ldr.w	ip, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80035e6:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80035e8:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80035ea:	f025 0510 	bic.w	r5, r5, #16
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80035ee:	4c7f      	ldr	r4, [pc, #508]	; (80037ec <HAL_TIM_PWM_ConfigChannel+0x320>)
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80035f0:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 80035f2:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 80035f4:	685e      	ldr	r6, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 80035f6:	699d      	ldr	r5, [r3, #24]
  tmpccer &= ~TIM_CCER_CC2P;
 80035f8:	f022 0220 	bic.w	r2, r2, #32
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80035fc:	402c      	ands	r4, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 80035fe:	4d79      	ldr	r5, [pc, #484]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8003600:	ea42 120c 	orr.w	r2, r2, ip, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8003604:	42ab      	cmp	r3, r5
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8003606:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800360a:	f000 80d9 	beq.w	80037c0 <HAL_TIM_PWM_ConfigChannel+0x2f4>
 800360e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8003612:	42ab      	cmp	r3, r5
 8003614:	f000 80d4 	beq.w	80037c0 <HAL_TIM_PWM_ConfigChannel+0x2f4>
  TIMx->CCR2 = OC_Config->Pulse;
 8003618:	684d      	ldr	r5, [r1, #4]
  TIMx->CR2 = tmpcr2;
 800361a:	605e      	str	r6, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800361c:	619c      	str	r4, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800361e:	639d      	str	r5, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 8003620:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8003622:	699c      	ldr	r4, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8003624:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8003626:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 800362a:	619c      	str	r4, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800362c:	6999      	ldr	r1, [r3, #24]
 800362e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8003632:	6199      	str	r1, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8003634:	699a      	ldr	r2, [r3, #24]
 8003636:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800363a:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800363c:	2300      	movs	r3, #0
}
 800363e:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 8003640:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8003644:	4618      	mov	r0, r3
}
 8003646:	4770      	bx	lr
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8003648:	6803      	ldr	r3, [r0, #0]
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800364a:	688e      	ldr	r6, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800364c:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800364e:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8003650:	f425 5580 	bic.w	r5, r5, #4096	; 0x1000
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8003654:	4c65      	ldr	r4, [pc, #404]	; (80037ec <HAL_TIM_PWM_ConfigChannel+0x320>)
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8003656:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 8003658:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800365a:	685d      	ldr	r5, [r3, #4]
  tmpccer &= ~TIM_CCER_CC4P;
 800365c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccmrx = TIMx->CCMR2;
 8003660:	f8d3 c01c 	ldr.w	ip, [r3, #28]
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8003664:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003668:	4e5e      	ldr	r6, [pc, #376]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800366a:	ea0c 0404 	and.w	r4, ip, r4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800366e:	42b3      	cmp	r3, r6
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8003670:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003674:	f000 809e 	beq.w	80037b4 <HAL_TIM_PWM_ConfigChannel+0x2e8>
 8003678:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800367c:	42b3      	cmp	r3, r6
 800367e:	f000 8099 	beq.w	80037b4 <HAL_TIM_PWM_ConfigChannel+0x2e8>
  TIMx->CCR4 = OC_Config->Pulse;
 8003682:	684e      	ldr	r6, [r1, #4]
  TIMx->CR2 = tmpcr2;
 8003684:	605d      	str	r5, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 8003686:	61dc      	str	r4, [r3, #28]
  TIMx->CCR4 = OC_Config->Pulse;
 8003688:	641e      	str	r6, [r3, #64]	; 0x40
  TIMx->CCER = tmpccer;
 800368a:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800368c:	69dc      	ldr	r4, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800368e:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8003690:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 8003694:	61dc      	str	r4, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8003696:	69d9      	ldr	r1, [r3, #28]
 8003698:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800369c:	61d9      	str	r1, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800369e:	69da      	ldr	r2, [r3, #28]
 80036a0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80036a4:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 80036a6:	2300      	movs	r3, #0
}
 80036a8:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 80036aa:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80036ae:	4618      	mov	r0, r3
}
 80036b0:	4770      	bx	lr
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80036b2:	6803      	ldr	r3, [r0, #0]
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80036b4:	f8d1 c008 	ldr.w	ip, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80036b8:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= OC_Config->OCMode;
 80036ba:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80036bc:	f425 7580 	bic.w	r5, r5, #256	; 0x100
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80036c0:	4c47      	ldr	r4, [pc, #284]	; (80037e0 <HAL_TIM_PWM_ConfigChannel+0x314>)
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80036c2:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 80036c4:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 80036c6:	685e      	ldr	r6, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 80036c8:	69dd      	ldr	r5, [r3, #28]
  tmpccer &= ~TIM_CCER_CC3P;
 80036ca:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80036ce:	402c      	ands	r4, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80036d0:	4d44      	ldr	r5, [pc, #272]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80036d2:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80036d6:	42ab      	cmp	r3, r5
  tmpccmrx |= OC_Config->OCMode;
 80036d8:	ea44 0407 	orr.w	r4, r4, r7
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80036dc:	f000 808a 	beq.w	80037f4 <HAL_TIM_PWM_ConfigChannel+0x328>
 80036e0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80036e4:	42ab      	cmp	r3, r5
 80036e6:	f000 8085 	beq.w	80037f4 <HAL_TIM_PWM_ConfigChannel+0x328>
  TIMx->CCR3 = OC_Config->Pulse;
 80036ea:	684d      	ldr	r5, [r1, #4]
  TIMx->CR2 = tmpcr2;
 80036ec:	605e      	str	r6, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 80036ee:	61dc      	str	r4, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 80036f0:	63dd      	str	r5, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 80036f2:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80036f4:	69dc      	ldr	r4, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80036f6:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80036f8:	f044 0408 	orr.w	r4, r4, #8
 80036fc:	61dc      	str	r4, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80036fe:	69d9      	ldr	r1, [r3, #28]
 8003700:	f021 0104 	bic.w	r1, r1, #4
 8003704:	61d9      	str	r1, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8003706:	69da      	ldr	r2, [r3, #28]
 8003708:	432a      	orrs	r2, r5
 800370a:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800370c:	2300      	movs	r3, #0
}
 800370e:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 8003710:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8003714:	4618      	mov	r0, r3
}
 8003716:	4770      	bx	lr
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 8003718:	6803      	ldr	r3, [r0, #0]
  tmpccer |= (OC_Config->OCPolarity << 16U);
 800371a:	688e      	ldr	r6, [r1, #8]
  TIMx->CCER &= ~TIM_CCER_CC5E;
 800371c:	6a1d      	ldr	r5, [r3, #32]
  tmpccmrx |= OC_Config->OCMode;
 800371e:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8003720:	f425 3580 	bic.w	r5, r5, #65536	; 0x10000
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8003724:	4c32      	ldr	r4, [pc, #200]	; (80037f0 <HAL_TIM_PWM_ConfigChannel+0x324>)
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8003726:	621d      	str	r5, [r3, #32]
  tmpccer = TIMx->CCER;
 8003728:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800372a:	685d      	ldr	r5, [r3, #4]
  tmpccer &= ~TIM_CCER_CC5P;
 800372c:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  tmpccmrx = TIMx->CCMR3;
 8003730:	f8d3 c054 	ldr.w	ip, [r3, #84]	; 0x54
  tmpccer |= (OC_Config->OCPolarity << 16U);
 8003734:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003738:	4e2a      	ldr	r6, [pc, #168]	; (80037e4 <HAL_TIM_PWM_ConfigChannel+0x318>)
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 800373a:	ea0c 0404 	and.w	r4, ip, r4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800373e:	42b3      	cmp	r3, r6
  tmpccmrx |= OC_Config->OCMode;
 8003740:	ea44 0407 	orr.w	r4, r4, r7
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8003744:	d022      	beq.n	800378c <HAL_TIM_PWM_ConfigChannel+0x2c0>
 8003746:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800374a:	42b3      	cmp	r3, r6
 800374c:	d01e      	beq.n	800378c <HAL_TIM_PWM_ConfigChannel+0x2c0>
  TIMx->CCR5 = OC_Config->Pulse;
 800374e:	684e      	ldr	r6, [r1, #4]
  TIMx->CR2 = tmpcr2;
 8003750:	605d      	str	r5, [r3, #4]
  TIMx->CCMR3 = tmpccmrx;
 8003752:	655c      	str	r4, [r3, #84]	; 0x54
  TIMx->CCR5 = OC_Config->Pulse;
 8003754:	659e      	str	r6, [r3, #88]	; 0x58
  TIMx->CCER = tmpccer;
 8003756:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 8003758:	6d5c      	ldr	r4, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 800375a:	690d      	ldr	r5, [r1, #16]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 800375c:	f044 0408 	orr.w	r4, r4, #8
 8003760:	655c      	str	r4, [r3, #84]	; 0x54
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 8003762:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8003764:	f021 0104 	bic.w	r1, r1, #4
 8003768:	6559      	str	r1, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 800376a:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800376c:	432a      	orrs	r2, r5
 800376e:	655a      	str	r2, [r3, #84]	; 0x54
  __HAL_UNLOCK(htim);
 8003770:	2300      	movs	r3, #0
}
 8003772:	bcf0      	pop	{r4, r5, r6, r7}
  __HAL_UNLOCK(htim);
 8003774:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8003778:	4618      	mov	r0, r3
}
 800377a:	4770      	bx	lr
  __HAL_LOCK(htim);
 800377c:	2002      	movs	r0, #2
}
 800377e:	4770      	bx	lr
    tmpcr2 &= ~TIM_CR2_OIS6;
 8003780:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 8003784:	694e      	ldr	r6, [r1, #20]
 8003786:	ea45 2586 	orr.w	r5, r5, r6, lsl #10
 800378a:	e711      	b.n	80035b0 <HAL_TIM_PWM_ConfigChannel+0xe4>
    tmpcr2 &= ~TIM_CR2_OIS5;
 800378c:	f425 3580 	bic.w	r5, r5, #65536	; 0x10000
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 8003790:	694e      	ldr	r6, [r1, #20]
 8003792:	ea45 2506 	orr.w	r5, r5, r6, lsl #8
 8003796:	e7da      	b.n	800374e <HAL_TIM_PWM_ConfigChannel+0x282>
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8003798:	f426 7c40 	bic.w	ip, r6, #768	; 0x300
    tmpccer &= ~TIM_CCER_CC1NP;
 800379c:	f022 0208 	bic.w	r2, r2, #8
    tmpcr2 |= OC_Config->OCNIdleState;
 80037a0:	698e      	ldr	r6, [r1, #24]
    tmpccer |= OC_Config->OCNPolarity;
 80037a2:	68cf      	ldr	r7, [r1, #12]
    tmpcr2 |= OC_Config->OCNIdleState;
 80037a4:	694d      	ldr	r5, [r1, #20]
    tmpccer |= OC_Config->OCNPolarity;
 80037a6:	433a      	orrs	r2, r7
    tmpcr2 |= OC_Config->OCNIdleState;
 80037a8:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC1NE;
 80037aa:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 80037ae:	ea45 060c 	orr.w	r6, r5, ip
 80037b2:	e6c9      	b.n	8003548 <HAL_TIM_PWM_ConfigChannel+0x7c>
    tmpcr2 &= ~TIM_CR2_OIS4;
 80037b4:	f425 4580 	bic.w	r5, r5, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 80037b8:	694e      	ldr	r6, [r1, #20]
 80037ba:	ea45 1586 	orr.w	r5, r5, r6, lsl #6
 80037be:	e760      	b.n	8003682 <HAL_TIM_PWM_ConfigChannel+0x1b6>
    tmpcr2 &= ~TIM_CR2_OIS2N;
 80037c0:	f426 6c40 	bic.w	ip, r6, #3072	; 0xc00
    tmpccer &= ~TIM_CCER_CC2NP;
 80037c4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80037c8:	698e      	ldr	r6, [r1, #24]
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80037ca:	68cf      	ldr	r7, [r1, #12]
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 80037cc:	694d      	ldr	r5, [r1, #20]
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80037ce:	ea42 1207 	orr.w	r2, r2, r7, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80037d2:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC2NE;
 80037d4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80037d8:	ea4c 0685 	orr.w	r6, ip, r5, lsl #2
 80037dc:	e71c      	b.n	8003618 <HAL_TIM_PWM_ConfigChannel+0x14c>
 80037de:	bf00      	nop
 80037e0:	fffeff8c 	.word	0xfffeff8c
 80037e4:	40010000 	.word	0x40010000
 80037e8:	feff8fff 	.word	0xfeff8fff
 80037ec:	feff8cff 	.word	0xfeff8cff
 80037f0:	fffeff8f 	.word	0xfffeff8f
    tmpcr2 &= ~TIM_CR2_OIS3N;
 80037f4:	f426 5c40 	bic.w	ip, r6, #12288	; 0x3000
    tmpccer &= ~TIM_CCER_CC3NP;
 80037f8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80037fc:	698e      	ldr	r6, [r1, #24]
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80037fe:	68cf      	ldr	r7, [r1, #12]
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8003800:	694d      	ldr	r5, [r1, #20]
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8003802:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8003806:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC3NE;
 8003808:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800380c:	ea4c 1605 	orr.w	r6, ip, r5, lsl #4
 8003810:	e76b      	b.n	80036ea <HAL_TIM_PWM_ConfigChannel+0x21e>
 8003812:	bf00      	nop

08003814 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 8003814:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8003818:	2b01      	cmp	r3, #1
 800381a:	d05b      	beq.n	80038d4 <HAL_TIM_ConfigClockSource+0xc0>
 800381c:	4602      	mov	r2, r0
  htim->State = HAL_TIM_STATE_BUSY;
 800381e:	2002      	movs	r0, #2
  tmpsmcr = htim->Instance->SMCR;
 8003820:	6813      	ldr	r3, [r2, #0]
{
 8003822:	b470      	push	{r4, r5, r6}
  htim->State = HAL_TIM_STATE_BUSY;
 8003824:	f882 003d 	strb.w	r0, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 8003828:	2501      	movs	r5, #1
  tmpsmcr = htim->Instance->SMCR;
 800382a:	6898      	ldr	r0, [r3, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800382c:	4c4c      	ldr	r4, [pc, #304]	; (8003960 <HAL_TIM_ConfigClockSource+0x14c>)
  __HAL_LOCK(htim);
 800382e:	f882 503c 	strb.w	r5, [r2, #60]	; 0x3c
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003832:	4004      	ands	r4, r0
  switch (sClockSourceConfig->ClockSource)
 8003834:	6808      	ldr	r0, [r1, #0]
 8003836:	2840      	cmp	r0, #64	; 0x40
  htim->Instance->SMCR = tmpsmcr;
 8003838:	609c      	str	r4, [r3, #8]
  switch (sClockSourceConfig->ClockSource)
 800383a:	d076      	beq.n	800392a <HAL_TIM_ConfigClockSource+0x116>
 800383c:	d94c      	bls.n	80038d8 <HAL_TIM_ConfigClockSource+0xc4>
 800383e:	2860      	cmp	r0, #96	; 0x60
 8003840:	d02f      	beq.n	80038a2 <HAL_TIM_ConfigClockSource+0x8e>
 8003842:	d958      	bls.n	80038f6 <HAL_TIM_ConfigClockSource+0xe2>
 8003844:	2870      	cmp	r0, #112	; 0x70
 8003846:	d01b      	beq.n	8003880 <HAL_TIM_ConfigClockSource+0x6c>
 8003848:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800384c:	d10f      	bne.n	800386e <HAL_TIM_ConfigClockSource+0x5a>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800384e:	68cc      	ldr	r4, [r1, #12]
 8003850:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 8003854:	ea40 0105 	orr.w	r1, r0, r5
  tmpsmcr = TIMx->SMCR;
 8003858:	6898      	ldr	r0, [r3, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800385a:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800385e:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003862:	4301      	orrs	r1, r0

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8003864:	6099      	str	r1, [r3, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8003866:	6899      	ldr	r1, [r3, #8]
 8003868:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800386c:	6099      	str	r1, [r3, #8]
  __HAL_UNLOCK(htim);
 800386e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 8003870:	2101      	movs	r1, #1
  return HAL_OK;
 8003872:	4618      	mov	r0, r3
  htim->State = HAL_TIM_STATE_READY;
 8003874:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8003878:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800387c:	bc70      	pop	{r4, r5, r6}
 800387e:	4770      	bx	lr
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003880:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 8003884:	68cc      	ldr	r4, [r1, #12]
 8003886:	ea40 0105 	orr.w	r1, r0, r5
  tmpsmcr = TIMx->SMCR;
 800388a:	6898      	ldr	r0, [r3, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800388c:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003890:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8003894:	4301      	orrs	r1, r0
  TIMx->SMCR = tmpsmcr;
 8003896:	6099      	str	r1, [r3, #8]
      tmpsmcr = htim->Instance->SMCR;
 8003898:	6899      	ldr	r1, [r3, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800389a:	f041 0177 	orr.w	r1, r1, #119	; 0x77
      htim->Instance->SMCR = tmpsmcr;
 800389e:	6099      	str	r1, [r3, #8]
      break;
 80038a0:	e7e5      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80038a2:	6a1c      	ldr	r4, [r3, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 80038a4:	684d      	ldr	r5, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80038a6:	f024 0410 	bic.w	r4, r4, #16
      TIM_TI2_ConfigInputStage(htim->Instance,
 80038aa:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80038ac:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80038ae:	6998      	ldr	r0, [r3, #24]
  tmpccer = TIMx->CCER;
 80038b0:	6a19      	ldr	r1, [r3, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80038b2:	f420 4070 	bic.w	r0, r0, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80038b6:	f021 01a0 	bic.w	r1, r1, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80038ba:	ea40 3006 	orr.w	r0, r0, r6, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 80038be:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 80038c2:	6198      	str	r0, [r3, #24]
  TIMx->CCER = tmpccer;
 80038c4:	6219      	str	r1, [r3, #32]
  tmpsmcr = TIMx->SMCR;
 80038c6:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80038c8:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80038cc:	f041 0167 	orr.w	r1, r1, #103	; 0x67
  TIMx->SMCR = tmpsmcr;
 80038d0:	6099      	str	r1, [r3, #8]
 80038d2:	e7cc      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  __HAL_LOCK(htim);
 80038d4:	2002      	movs	r0, #2
}
 80038d6:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 80038d8:	2810      	cmp	r0, #16
 80038da:	d004      	beq.n	80038e6 <HAL_TIM_ConfigClockSource+0xd2>
 80038dc:	d93d      	bls.n	800395a <HAL_TIM_ConfigClockSource+0x146>
 80038de:	2820      	cmp	r0, #32
 80038e0:	d001      	beq.n	80038e6 <HAL_TIM_ConfigClockSource+0xd2>
 80038e2:	2830      	cmp	r0, #48	; 0x30
 80038e4:	d1c3      	bne.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  tmpsmcr = TIMx->SMCR;
 80038e6:	6899      	ldr	r1, [r3, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80038e8:	f040 0007 	orr.w	r0, r0, #7
  tmpsmcr &= ~TIM_SMCR_TS;
 80038ec:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80038f0:	4308      	orrs	r0, r1
  TIMx->SMCR = tmpsmcr;
 80038f2:	6098      	str	r0, [r3, #8]
 80038f4:	e7bb      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  switch (sClockSourceConfig->ClockSource)
 80038f6:	2850      	cmp	r0, #80	; 0x50
 80038f8:	d1b9      	bne.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  tmpccer = TIMx->CCER;
 80038fa:	6a1d      	ldr	r5, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80038fc:	6a1c      	ldr	r4, [r3, #32]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80038fe:	6848      	ldr	r0, [r1, #4]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003900:	f025 050a 	bic.w	r5, r5, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003904:	f024 0401 	bic.w	r4, r4, #1
      TIM_TI1_ConfigInputStage(htim->Instance,
 8003908:	68ce      	ldr	r6, [r1, #12]
  tmpccer |= TIM_ICPolarity;
 800390a:	4328      	orrs	r0, r5
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800390c:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800390e:	6999      	ldr	r1, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003910:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003914:	ea41 1106 	orr.w	r1, r1, r6, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 8003918:	6199      	str	r1, [r3, #24]
  TIMx->CCER = tmpccer;
 800391a:	6218      	str	r0, [r3, #32]
  tmpsmcr = TIMx->SMCR;
 800391c:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800391e:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8003922:	f041 0157 	orr.w	r1, r1, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 8003926:	6099      	str	r1, [r3, #8]
 8003928:	e7a1      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  tmpccer = TIMx->CCER;
 800392a:	6a1d      	ldr	r5, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800392c:	6a1c      	ldr	r4, [r3, #32]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800392e:	6848      	ldr	r0, [r1, #4]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003930:	f025 050a 	bic.w	r5, r5, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003934:	f024 0401 	bic.w	r4, r4, #1
      TIM_TI1_ConfigInputStage(htim->Instance,
 8003938:	68ce      	ldr	r6, [r1, #12]
  tmpccer |= TIM_ICPolarity;
 800393a:	4328      	orrs	r0, r5
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800393c:	621c      	str	r4, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800393e:	6999      	ldr	r1, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003940:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003944:	ea41 1106 	orr.w	r1, r1, r6, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 8003948:	6199      	str	r1, [r3, #24]
  TIMx->CCER = tmpccer;
 800394a:	6218      	str	r0, [r3, #32]
  tmpsmcr = TIMx->SMCR;
 800394c:	6899      	ldr	r1, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800394e:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8003952:	f041 0147 	orr.w	r1, r1, #71	; 0x47
  TIMx->SMCR = tmpsmcr;
 8003956:	6099      	str	r1, [r3, #8]
 8003958:	e789      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
  switch (sClockSourceConfig->ClockSource)
 800395a:	2800      	cmp	r0, #0
 800395c:	d0c3      	beq.n	80038e6 <HAL_TIM_ConfigClockSource+0xd2>
 800395e:	e786      	b.n	800386e <HAL_TIM_ConfigClockSource+0x5a>
 8003960:	fffe0088 	.word	0xfffe0088

08003964 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8003964:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8003968:	2b01      	cmp	r3, #1
 800396a:	d04b      	beq.n	8003a04 <HAL_TIMEx_MasterConfigSynchronization+0xa0>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800396c:	6803      	ldr	r3, [r0, #0]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800396e:	4a27      	ldr	r2, [pc, #156]	; (8003a0c <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
{
 8003970:	b4f0      	push	{r4, r5, r6, r7}
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8003972:	4e27      	ldr	r6, [pc, #156]	; (8003a10 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
  htim->State = HAL_TIM_STATE_BUSY;
 8003974:	2502      	movs	r5, #2
  __HAL_LOCK(htim);
 8003976:	2401      	movs	r4, #1
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8003978:	4293      	cmp	r3, r2
 800397a:	bf18      	it	ne
 800397c:	42b3      	cmpne	r3, r6
  htim->State = HAL_TIM_STATE_BUSY;
 800397e:	f880 503d 	strb.w	r5, [r0, #61]	; 0x3d
  __HAL_LOCK(htim);
 8003982:	f880 403c 	strb.w	r4, [r0, #60]	; 0x3c
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8003986:	bf08      	it	eq
 8003988:	2601      	moveq	r6, #1
  tmpcr2 = htim->Instance->CR2;
 800398a:	685c      	ldr	r4, [r3, #4]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800398c:	bf18      	it	ne
 800398e:	2600      	movne	r6, #0
  tmpsmcr = htim->Instance->SMCR;
 8003990:	689d      	ldr	r5, [r3, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8003992:	d103      	bne.n	800399c <HAL_TIMEx_MasterConfigSynchronization+0x38>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 8003994:	f424 0470 	bic.w	r4, r4, #15728640	; 0xf00000
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8003998:	684a      	ldr	r2, [r1, #4]
 800399a:	4314      	orrs	r4, r2
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800399c:	4a1d      	ldr	r2, [pc, #116]	; (8003a14 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
  tmpcr2 &= ~TIM_CR2_MMS;
 800399e:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80039a2:	680f      	ldr	r7, [r1, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80039a4:	4293      	cmp	r3, r2
 80039a6:	bf18      	it	ne
 80039a8:	f1b3 4f80 	cmpne.w	r3, #1073741824	; 0x40000000
 80039ac:	f8df c070 	ldr.w	ip, [pc, #112]	; 8003a20 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80039b0:	ea44 0407 	orr.w	r4, r4, r7
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80039b4:	4f18      	ldr	r7, [pc, #96]	; (8003a18 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80039b6:	bf0c      	ite	eq
 80039b8:	2201      	moveq	r2, #1
 80039ba:	2200      	movne	r2, #0
  htim->Instance->CR2 = tmpcr2;
 80039bc:	605c      	str	r4, [r3, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80039be:	4563      	cmp	r3, ip
 80039c0:	bf08      	it	eq
 80039c2:	f042 0201 	orreq.w	r2, r2, #1
 80039c6:	4c15      	ldr	r4, [pc, #84]	; (8003a1c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 80039c8:	42bb      	cmp	r3, r7
 80039ca:	bf08      	it	eq
 80039cc:	f042 0201 	orreq.w	r2, r2, #1
 80039d0:	f507 379a 	add.w	r7, r7, #78848	; 0x13400
 80039d4:	42bb      	cmp	r3, r7
 80039d6:	bf08      	it	eq
 80039d8:	f042 0201 	orreq.w	r2, r2, #1
 80039dc:	42a3      	cmp	r3, r4
 80039de:	bf08      	it	eq
 80039e0:	f042 0201 	orreq.w	r2, r2, #1
 80039e4:	b902      	cbnz	r2, 80039e8 <HAL_TIMEx_MasterConfigSynchronization+0x84>
 80039e6:	b126      	cbz	r6, 80039f2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80039e8:	688a      	ldr	r2, [r1, #8]
    tmpsmcr &= ~TIM_SMCR_MSM;
 80039ea:	f025 0580 	bic.w	r5, r5, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80039ee:	4315      	orrs	r5, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 80039f0:	609d      	str	r5, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 80039f2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 80039f4:	2201      	movs	r2, #1
  __HAL_UNLOCK(htim);
 80039f6:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_READY;
 80039fa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

  return HAL_OK;
}
 80039fe:	4618      	mov	r0, r3
 8003a00:	bcf0      	pop	{r4, r5, r6, r7}
 8003a02:	4770      	bx	lr
  __HAL_LOCK(htim);
 8003a04:	2202      	movs	r2, #2
}
 8003a06:	4610      	mov	r0, r2
 8003a08:	4770      	bx	lr
 8003a0a:	bf00      	nop
 8003a0c:	40010400 	.word	0x40010400
 8003a10:	40010000 	.word	0x40010000
 8003a14:	40000400 	.word	0x40000400
 8003a18:	40000c00 	.word	0x40000c00
 8003a1c:	40001800 	.word	0x40001800
 8003a20:	40000800 	.word	0x40000800

08003a24 <HAL_UART_TxCpltCallback>:
 8003a24:	4770      	bx	lr
 8003a26:	bf00      	nop

08003a28 <HAL_UART_ErrorCallback>:
 8003a28:	4770      	bx	lr
 8003a2a:	bf00      	nop

08003a2c <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8003a2c:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
  huart->RxXferCount = 0U;
 8003a2e:	2200      	movs	r2, #0
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8003a30:	6b83      	ldr	r3, [r0, #56]	; 0x38
  huart->RxXferCount = 0U;
 8003a32:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8003a36:	4618      	mov	r0, r3
  huart->TxXferCount = 0U;
 8003a38:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
  HAL_UART_ErrorCallback(huart);
 8003a3c:	f7ff fff4 	bl	8003a28 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8003a40:	bd08      	pop	{r3, pc}
 8003a42:	bf00      	nop

08003a44 <HAL_UARTEx_RxEventCallback>:
}
 8003a44:	4770      	bx	lr
 8003a46:	bf00      	nop

08003a48 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8003a48:	6803      	ldr	r3, [r0, #0]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 8003a4a:	f640 010f 	movw	r1, #2063	; 0x80f
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8003a4e:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
 8003a50:	420a      	tst	r2, r1
{
 8003a52:	b570      	push	{r4, r5, r6, lr}
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8003a54:	681e      	ldr	r6, [r3, #0]
{
 8003a56:	4604      	mov	r4, r0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8003a58:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 8003a5a:	d068      	beq.n	8003b2e <HAL_UART_IRQHandler+0xe6>
      && (((cr3its & USART_CR3_EIE) != 0U)
 8003a5c:	f015 0501 	ands.w	r5, r5, #1
 8003a60:	d06c      	beq.n	8003b3c <HAL_UART_IRQHandler+0xf4>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8003a62:	07d1      	lsls	r1, r2, #31
 8003a64:	d509      	bpl.n	8003a7a <HAL_UART_IRQHandler+0x32>
 8003a66:	05f0      	lsls	r0, r6, #23
 8003a68:	d507      	bpl.n	8003a7a <HAL_UART_IRQHandler+0x32>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8003a6a:	2101      	movs	r1, #1
 8003a6c:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8003a6e:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003a72:	f041 0101 	orr.w	r1, r1, #1
 8003a76:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003a7a:	0791      	lsls	r1, r2, #30
 8003a7c:	f100 80b9 	bmi.w	8003bf2 <HAL_UART_IRQHandler+0x1aa>
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003a80:	0751      	lsls	r1, r2, #29
 8003a82:	d502      	bpl.n	8003a8a <HAL_UART_IRQHandler+0x42>
 8003a84:	2d00      	cmp	r5, #0
 8003a86:	f040 80c2 	bne.w	8003c0e <HAL_UART_IRQHandler+0x1c6>
    if (((isrflags & USART_ISR_ORE) != 0U)
 8003a8a:	0710      	lsls	r0, r2, #28
 8003a8c:	d505      	bpl.n	8003a9a <HAL_UART_IRQHandler+0x52>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8003a8e:	06b1      	lsls	r1, r6, #26
 8003a90:	f100 80c6 	bmi.w	8003c20 <HAL_UART_IRQHandler+0x1d8>
 8003a94:	2d00      	cmp	r5, #0
 8003a96:	f040 80c3 	bne.w	8003c20 <HAL_UART_IRQHandler+0x1d8>
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 8003a9a:	0515      	lsls	r5, r2, #20
 8003a9c:	d50a      	bpl.n	8003ab4 <HAL_UART_IRQHandler+0x6c>
 8003a9e:	0170      	lsls	r0, r6, #5
 8003aa0:	d508      	bpl.n	8003ab4 <HAL_UART_IRQHandler+0x6c>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003aa2:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003aa6:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 8003aa8:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003aac:	f041 0120 	orr.w	r1, r1, #32
 8003ab0:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8003ab4:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003ab8:	2900      	cmp	r1, #0
 8003aba:	d03e      	beq.n	8003b3a <HAL_UART_IRQHandler+0xf2>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 8003abc:	0691      	lsls	r1, r2, #26
 8003abe:	d502      	bpl.n	8003ac6 <HAL_UART_IRQHandler+0x7e>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8003ac0:	06b2      	lsls	r2, r6, #26
 8003ac2:	f100 80ba 	bmi.w	8003c3a <HAL_UART_IRQHandler+0x1f2>
      errorcode = huart->ErrorCode;
 8003ac6:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8003aca:	6899      	ldr	r1, [r3, #8]
 8003acc:	064e      	lsls	r6, r1, #25
 8003ace:	d403      	bmi.n	8003ad8 <HAL_UART_IRQHandler+0x90>
 8003ad0:	f015 0528 	ands.w	r5, r5, #40	; 0x28
 8003ad4:	f000 80b9 	beq.w	8003c4a <HAL_UART_IRQHandler+0x202>
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003ad8:	681a      	ldr	r2, [r3, #0]
 8003ada:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8003ade:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003ae0:	689a      	ldr	r2, [r3, #8]
 8003ae2:	f022 0201 	bic.w	r2, r2, #1
 8003ae6:	609a      	str	r2, [r3, #8]
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003ae8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8003aea:	2a01      	cmp	r2, #1
 8003aec:	d103      	bne.n	8003af6 <HAL_UART_IRQHandler+0xae>
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003aee:	681a      	ldr	r2, [r3, #0]
 8003af0:	f022 0210 	bic.w	r2, r2, #16
 8003af4:	601a      	str	r2, [r3, #0]
  huart->RxState = HAL_UART_STATE_READY;
 8003af6:	2120      	movs	r1, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003af8:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
 8003afa:	67e1      	str	r1, [r4, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003afc:	6622      	str	r2, [r4, #96]	; 0x60
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8003afe:	6899      	ldr	r1, [r3, #8]
  huart->RxISR = NULL;
 8003b00:	6662      	str	r2, [r4, #100]	; 0x64
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8003b02:	064d      	lsls	r5, r1, #25
 8003b04:	f140 8095 	bpl.w	8003c32 <HAL_UART_IRQHandler+0x1ea>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8003b08:	689a      	ldr	r2, [r3, #8]
          if (huart->hdmarx != NULL)
 8003b0a:	6f21      	ldr	r1, [r4, #112]	; 0x70
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8003b0c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003b10:	609a      	str	r2, [r3, #8]
          if (huart->hdmarx != NULL)
 8003b12:	2900      	cmp	r1, #0
 8003b14:	f000 808d 	beq.w	8003c32 <HAL_UART_IRQHandler+0x1ea>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8003b18:	4b60      	ldr	r3, [pc, #384]	; (8003c9c <HAL_UART_IRQHandler+0x254>)
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8003b1a:	4608      	mov	r0, r1
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8003b1c:	650b      	str	r3, [r1, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8003b1e:	f7fd fdfb 	bl	8001718 <HAL_DMA_Abort_IT>
 8003b22:	b150      	cbz	r0, 8003b3a <HAL_UART_IRQHandler+0xf2>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8003b24:	6f20      	ldr	r0, [r4, #112]	; 0x70
}
 8003b26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8003b2a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8003b2c:	4718      	bx	r3
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8003b2e:	0691      	lsls	r1, r2, #26
 8003b30:	d507      	bpl.n	8003b42 <HAL_UART_IRQHandler+0xfa>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8003b32:	06b5      	lsls	r5, r6, #26
 8003b34:	d505      	bpl.n	8003b42 <HAL_UART_IRQHandler+0xfa>
      if (huart->RxISR != NULL)
 8003b36:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8003b38:	b9f3      	cbnz	r3, 8003b78 <HAL_UART_IRQHandler+0x130>
}
 8003b3a:	bd70      	pop	{r4, r5, r6, pc}
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8003b3c:	4958      	ldr	r1, [pc, #352]	; (8003ca0 <HAL_UART_IRQHandler+0x258>)
 8003b3e:	420e      	tst	r6, r1
 8003b40:	d18f      	bne.n	8003a62 <HAL_UART_IRQHandler+0x1a>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003b42:	6e21      	ldr	r1, [r4, #96]	; 0x60
 8003b44:	2901      	cmp	r1, #1
 8003b46:	d01a      	beq.n	8003b7e <HAL_UART_IRQHandler+0x136>
  if (((isrflags & USART_ISR_TXE) != 0U)
 8003b48:	0615      	lsls	r5, r2, #24
 8003b4a:	d40f      	bmi.n	8003b6c <HAL_UART_IRQHandler+0x124>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 8003b4c:	0651      	lsls	r1, r2, #25
 8003b4e:	d5f4      	bpl.n	8003b3a <HAL_UART_IRQHandler+0xf2>
 8003b50:	0672      	lsls	r2, r6, #25
 8003b52:	d5f2      	bpl.n	8003b3a <HAL_UART_IRQHandler+0xf2>
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8003b54:	681a      	ldr	r2, [r3, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8003b56:	2520      	movs	r5, #32

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 8003b58:	2100      	movs	r1, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8003b5a:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8003b5c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003b60:	601a      	str	r2, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
 8003b62:	67a5      	str	r5, [r4, #120]	; 0x78
  huart->TxISR = NULL;
 8003b64:	66a1      	str	r1, [r4, #104]	; 0x68
  HAL_UART_TxCpltCallback(huart);
 8003b66:	f7ff ff5d 	bl	8003a24 <HAL_UART_TxCpltCallback>
}
 8003b6a:	bd70      	pop	{r4, r5, r6, pc}
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 8003b6c:	0630      	lsls	r0, r6, #24
 8003b6e:	d5ed      	bpl.n	8003b4c <HAL_UART_IRQHandler+0x104>
    if (huart->TxISR != NULL)
 8003b70:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	d0e1      	beq.n	8003b3a <HAL_UART_IRQHandler+0xf2>
      huart->TxISR(huart);
 8003b76:	4620      	mov	r0, r4
}
 8003b78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
 8003b7c:	4718      	bx	r3
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8003b7e:	06d0      	lsls	r0, r2, #27
 8003b80:	d5e2      	bpl.n	8003b48 <HAL_UART_IRQHandler+0x100>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8003b82:	06f1      	lsls	r1, r6, #27
 8003b84:	d5e0      	bpl.n	8003b48 <HAL_UART_IRQHandler+0x100>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8003b86:	2210      	movs	r2, #16
 8003b88:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8003b8a:	689a      	ldr	r2, [r3, #8]
 8003b8c:	f012 0240 	ands.w	r2, r2, #64	; 0x40
 8003b90:	d061      	beq.n	8003c56 <HAL_UART_IRQHandler+0x20e>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8003b92:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8003b94:	6802      	ldr	r2, [r0, #0]
 8003b96:	6852      	ldr	r2, [r2, #4]
 8003b98:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8003b9a:	2a00      	cmp	r2, #0
 8003b9c:	d0cd      	beq.n	8003b3a <HAL_UART_IRQHandler+0xf2>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8003b9e:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
 8003ba2:	4291      	cmp	r1, r2
 8003ba4:	d9c9      	bls.n	8003b3a <HAL_UART_IRQHandler+0xf2>
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8003ba6:	69c5      	ldr	r5, [r0, #28]
        huart->RxXferCount = nb_remaining_rx_data;
 8003ba8:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8003bac:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8003bb0:	d017      	beq.n	8003be2 <HAL_UART_IRQHandler+0x19a>
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8003bb2:	681a      	ldr	r2, [r3, #0]
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003bb4:	2100      	movs	r1, #0
          huart->RxState = HAL_UART_STATE_READY;
 8003bb6:	2520      	movs	r5, #32
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8003bb8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003bbc:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003bbe:	689a      	ldr	r2, [r3, #8]
 8003bc0:	f022 0201 	bic.w	r2, r2, #1
 8003bc4:	609a      	str	r2, [r3, #8]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8003bc6:	689a      	ldr	r2, [r3, #8]
 8003bc8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003bcc:	609a      	str	r2, [r3, #8]
          huart->RxState = HAL_UART_STATE_READY;
 8003bce:	67e5      	str	r5, [r4, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003bd0:	6621      	str	r1, [r4, #96]	; 0x60
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003bd2:	681a      	ldr	r2, [r3, #0]
 8003bd4:	f022 0210 	bic.w	r2, r2, #16
 8003bd8:	601a      	str	r2, [r3, #0]
          (void)HAL_DMA_Abort(huart->hdmarx);
 8003bda:	f7fd fd55 	bl	8001688 <HAL_DMA_Abort>
 8003bde:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8003be2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8003be6:	4620      	mov	r0, r4
 8003be8:	1ac9      	subs	r1, r1, r3
 8003bea:	b289      	uxth	r1, r1
 8003bec:	f7ff ff2a 	bl	8003a44 <HAL_UARTEx_RxEventCallback>
}
 8003bf0:	bd70      	pop	{r4, r5, r6, pc}
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003bf2:	2d00      	cmp	r5, #0
 8003bf4:	f43f af49 	beq.w	8003a8a <HAL_UART_IRQHandler+0x42>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8003bf8:	2102      	movs	r1, #2
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003bfa:	0750      	lsls	r0, r2, #29
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8003bfc:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8003bfe:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003c02:	f041 0104 	orr.w	r1, r1, #4
 8003c06:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003c0a:	f57f af3e 	bpl.w	8003a8a <HAL_UART_IRQHandler+0x42>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8003c0e:	2104      	movs	r1, #4
 8003c10:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8003c12:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003c16:	f041 0102 	orr.w	r1, r1, #2
 8003c1a:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
 8003c1e:	e734      	b.n	8003a8a <HAL_UART_IRQHandler+0x42>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8003c20:	2108      	movs	r1, #8
 8003c22:	6219      	str	r1, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8003c24:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003c28:	f041 0108 	orr.w	r1, r1, #8
 8003c2c:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
 8003c30:	e733      	b.n	8003a9a <HAL_UART_IRQHandler+0x52>
            HAL_UART_ErrorCallback(huart);
 8003c32:	4620      	mov	r0, r4
 8003c34:	f7ff fef8 	bl	8003a28 <HAL_UART_ErrorCallback>
}
 8003c38:	bd70      	pop	{r4, r5, r6, pc}
        if (huart->RxISR != NULL)
 8003c3a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003c3c:	2a00      	cmp	r2, #0
 8003c3e:	f43f af42 	beq.w	8003ac6 <HAL_UART_IRQHandler+0x7e>
          huart->RxISR(huart);
 8003c42:	4620      	mov	r0, r4
 8003c44:	4790      	blx	r2
 8003c46:	6823      	ldr	r3, [r4, #0]
 8003c48:	e73d      	b.n	8003ac6 <HAL_UART_IRQHandler+0x7e>
        HAL_UART_ErrorCallback(huart);
 8003c4a:	4620      	mov	r0, r4
 8003c4c:	f7ff feec 	bl	8003a28 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003c50:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
}
 8003c54:	bd70      	pop	{r4, r5, r6, pc}
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8003c56:	f8b4 505a 	ldrh.w	r5, [r4, #90]	; 0x5a
 8003c5a:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
      if ((huart->RxXferCount > 0U)
 8003c5e:	f8b4 005a 	ldrh.w	r0, [r4, #90]	; 0x5a
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8003c62:	1b49      	subs	r1, r1, r5
      if ((huart->RxXferCount > 0U)
 8003c64:	b280      	uxth	r0, r0
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8003c66:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 8003c68:	2800      	cmp	r0, #0
 8003c6a:	f43f af66 	beq.w	8003b3a <HAL_UART_IRQHandler+0xf2>
 8003c6e:	2900      	cmp	r1, #0
 8003c70:	f43f af63 	beq.w	8003b3a <HAL_UART_IRQHandler+0xf2>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003c74:	681d      	ldr	r5, [r3, #0]
        huart->RxState = HAL_UART_STATE_READY;
 8003c76:	2620      	movs	r6, #32
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8003c78:	4620      	mov	r0, r4
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003c7a:	f425 7590 	bic.w	r5, r5, #288	; 0x120
 8003c7e:	601d      	str	r5, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003c80:	689d      	ldr	r5, [r3, #8]
 8003c82:	f025 0501 	bic.w	r5, r5, #1
 8003c86:	609d      	str	r5, [r3, #8]
        huart->RxState = HAL_UART_STATE_READY;
 8003c88:	67e6      	str	r6, [r4, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003c8a:	6622      	str	r2, [r4, #96]	; 0x60
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003c8c:	681d      	ldr	r5, [r3, #0]
        huart->RxISR = NULL;
 8003c8e:	6662      	str	r2, [r4, #100]	; 0x64
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003c90:	f025 0510 	bic.w	r5, r5, #16
 8003c94:	601d      	str	r5, [r3, #0]
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8003c96:	f7ff fed5 	bl	8003a44 <HAL_UARTEx_RxEventCallback>
}
 8003c9a:	bd70      	pop	{r4, r5, r6, pc}
 8003c9c:	08003a2d 	.word	0x08003a2d
 8003ca0:	04000120 	.word	0x04000120

08003ca4 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003ca4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8003ca6:	07da      	lsls	r2, r3, #31
{
 8003ca8:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003caa:	d506      	bpl.n	8003cba <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8003cac:	6801      	ldr	r1, [r0, #0]
 8003cae:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8003cb0:	684a      	ldr	r2, [r1, #4]
 8003cb2:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003cb6:	4322      	orrs	r2, r4
 8003cb8:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8003cba:	079c      	lsls	r4, r3, #30
 8003cbc:	d506      	bpl.n	8003ccc <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8003cbe:	6801      	ldr	r1, [r0, #0]
 8003cc0:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8003cc2:	684a      	ldr	r2, [r1, #4]
 8003cc4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8003cc8:	4322      	orrs	r2, r4
 8003cca:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8003ccc:	0759      	lsls	r1, r3, #29
 8003cce:	d506      	bpl.n	8003cde <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8003cd0:	6801      	ldr	r1, [r0, #0]
 8003cd2:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8003cd4:	684a      	ldr	r2, [r1, #4]
 8003cd6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003cda:	4322      	orrs	r2, r4
 8003cdc:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8003cde:	071a      	lsls	r2, r3, #28
 8003ce0:	d506      	bpl.n	8003cf0 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8003ce2:	6801      	ldr	r1, [r0, #0]
 8003ce4:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8003ce6:	684a      	ldr	r2, [r1, #4]
 8003ce8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003cec:	4322      	orrs	r2, r4
 8003cee:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8003cf0:	06dc      	lsls	r4, r3, #27
 8003cf2:	d506      	bpl.n	8003d02 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8003cf4:	6801      	ldr	r1, [r0, #0]
 8003cf6:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8003cf8:	688a      	ldr	r2, [r1, #8]
 8003cfa:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003cfe:	4322      	orrs	r2, r4
 8003d00:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8003d02:	0699      	lsls	r1, r3, #26
 8003d04:	d506      	bpl.n	8003d14 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8003d06:	6801      	ldr	r1, [r0, #0]
 8003d08:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003d0a:	688a      	ldr	r2, [r1, #8]
 8003d0c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003d10:	4322      	orrs	r2, r4
 8003d12:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8003d14:	065a      	lsls	r2, r3, #25
 8003d16:	d50a      	bpl.n	8003d2e <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003d18:	6801      	ldr	r1, [r0, #0]
 8003d1a:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8003d1c:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8003d1e:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003d22:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8003d26:	ea42 0204 	orr.w	r2, r2, r4
 8003d2a:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8003d2c:	d00b      	beq.n	8003d46 <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8003d2e:	061b      	lsls	r3, r3, #24
 8003d30:	d506      	bpl.n	8003d40 <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8003d32:	6802      	ldr	r2, [r0, #0]
 8003d34:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8003d36:	6853      	ldr	r3, [r2, #4]
 8003d38:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8003d3c:	430b      	orrs	r3, r1
 8003d3e:	6053      	str	r3, [r2, #4]
}
 8003d40:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003d44:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8003d46:	684a      	ldr	r2, [r1, #4]
 8003d48:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8003d4a:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8003d4e:	4322      	orrs	r2, r4
 8003d50:	604a      	str	r2, [r1, #4]
 8003d52:	e7ec      	b.n	8003d2e <UART_AdvFeatureConfig+0x8a>

08003d54 <HAL_UART_Init>:
  if (huart == NULL)
 8003d54:	2800      	cmp	r0, #0
 8003d56:	d04f      	beq.n	8003df8 <HAL_UART_Init+0xa4>
  if (huart->gState == HAL_UART_STATE_RESET)
 8003d58:	6f83      	ldr	r3, [r0, #120]	; 0x78
{
 8003d5a:	b570      	push	{r4, r5, r6, lr}
 8003d5c:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d045      	beq.n	8003dee <HAL_UART_Init+0x9a>
  __HAL_UART_DISABLE(huart);
 8003d62:	6823      	ldr	r3, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8003d64:	2124      	movs	r1, #36	; 0x24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d66:	6920      	ldr	r0, [r4, #16]
  huart->gState = HAL_UART_STATE_BUSY;
 8003d68:	67a1      	str	r1, [r4, #120]	; 0x78
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d6a:	68a2      	ldr	r2, [r4, #8]
  __HAL_UART_DISABLE(huart);
 8003d6c:	6819      	ldr	r1, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d6e:	4302      	orrs	r2, r0
 8003d70:	6960      	ldr	r0, [r4, #20]
  __HAL_UART_DISABLE(huart);
 8003d72:	f021 0101 	bic.w	r1, r1, #1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d76:	4dba      	ldr	r5, [pc, #744]	; (8004060 <HAL_UART_Init+0x30c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d78:	4302      	orrs	r2, r0
 8003d7a:	69e0      	ldr	r0, [r4, #28]
  __HAL_UART_DISABLE(huart);
 8003d7c:	6019      	str	r1, [r3, #0]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d7e:	6819      	ldr	r1, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003d80:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003d82:	68e6      	ldr	r6, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d84:	400d      	ands	r5, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8003d86:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d88:	432a      	orrs	r2, r5
  tmpreg |= huart->Init.OneBitSampling;
 8003d8a:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003d8c:	601a      	str	r2, [r3, #0]
  tmpreg |= huart->Init.OneBitSampling;
 8003d8e:	ea41 0205 	orr.w	r2, r1, r5
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003d92:	6859      	ldr	r1, [r3, #4]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003d94:	4db3      	ldr	r5, [pc, #716]	; (8004064 <HAL_UART_Init+0x310>)
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003d96:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003d9a:	42ab      	cmp	r3, r5
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003d9c:	ea41 0106 	orr.w	r1, r1, r6
 8003da0:	6059      	str	r1, [r3, #4]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8003da2:	6899      	ldr	r1, [r3, #8]
 8003da4:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 8003da8:	ea42 0201 	orr.w	r2, r2, r1
 8003dac:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003dae:	d025      	beq.n	8003dfc <HAL_UART_Init+0xa8>
 8003db0:	4aad      	ldr	r2, [pc, #692]	; (8004068 <HAL_UART_Init+0x314>)
 8003db2:	4293      	cmp	r3, r2
 8003db4:	d044      	beq.n	8003e40 <HAL_UART_Init+0xec>
 8003db6:	4aad      	ldr	r2, [pc, #692]	; (800406c <HAL_UART_Init+0x318>)
 8003db8:	4293      	cmp	r3, r2
 8003dba:	f000 80e9 	beq.w	8003f90 <HAL_UART_Init+0x23c>
 8003dbe:	4aac      	ldr	r2, [pc, #688]	; (8004070 <HAL_UART_Init+0x31c>)
 8003dc0:	4293      	cmp	r3, r2
 8003dc2:	d045      	beq.n	8003e50 <HAL_UART_Init+0xfc>
 8003dc4:	4aab      	ldr	r2, [pc, #684]	; (8004074 <HAL_UART_Init+0x320>)
 8003dc6:	4293      	cmp	r3, r2
 8003dc8:	f000 80f1 	beq.w	8003fae <HAL_UART_Init+0x25a>
 8003dcc:	4aaa      	ldr	r2, [pc, #680]	; (8004078 <HAL_UART_Init+0x324>)
 8003dce:	4293      	cmp	r3, r2
 8003dd0:	f000 8171 	beq.w	80040b6 <HAL_UART_Init+0x362>
 8003dd4:	4aa9      	ldr	r2, [pc, #676]	; (800407c <HAL_UART_Init+0x328>)
 8003dd6:	4293      	cmp	r3, r2
 8003dd8:	f000 8180 	beq.w	80040dc <HAL_UART_Init+0x388>
 8003ddc:	4aa8      	ldr	r2, [pc, #672]	; (8004080 <HAL_UART_Init+0x32c>)
 8003dde:	4293      	cmp	r3, r2
 8003de0:	f000 812d 	beq.w	800403e <HAL_UART_Init+0x2ea>
  huart->RxISR = NULL;
 8003de4:	2300      	movs	r3, #0
    return HAL_ERROR;
 8003de6:	2001      	movs	r0, #1
  huart->TxISR = NULL;
 8003de8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
}
 8003dec:	bd70      	pop	{r4, r5, r6, pc}
    huart->Lock = HAL_UNLOCKED;
 8003dee:	f880 3074 	strb.w	r3, [r0, #116]	; 0x74
    HAL_UART_MspInit(huart);
 8003df2:	f004 fd9f 	bl	8008934 <HAL_UART_MspInit>
 8003df6:	e7b4      	b.n	8003d62 <HAL_UART_Init+0xe>
    return HAL_ERROR;
 8003df8:	2001      	movs	r0, #1
}
 8003dfa:	4770      	bx	lr
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003dfc:	4ba1      	ldr	r3, [pc, #644]	; (8004084 <HAL_UART_Init+0x330>)
 8003dfe:	4aa2      	ldr	r2, [pc, #648]	; (8004088 <HAL_UART_Init+0x334>)
 8003e00:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003e04:	f003 0303 	and.w	r3, r3, #3
 8003e08:	5cd3      	ldrb	r3, [r2, r3]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003e0a:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003e0e:	d030      	beq.n	8003e72 <HAL_UART_Init+0x11e>
    switch (clocksource)
 8003e10:	2b08      	cmp	r3, #8
 8003e12:	d8e7      	bhi.n	8003de4 <HAL_UART_Init+0x90>
 8003e14:	a201      	add	r2, pc, #4	; (adr r2, 8003e1c <HAL_UART_Init+0xc8>)
 8003e16:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e1a:	bf00      	nop
 8003e1c:	08003f75 	.word	0x08003f75
 8003e20:	08003ead 	.word	0x08003ead
 8003e24:	08003fab 	.word	0x08003fab
 8003e28:	08003de5 	.word	0x08003de5
 8003e2c:	08003fc5 	.word	0x08003fc5
 8003e30:	08003de5 	.word	0x08003de5
 8003e34:	08003de5 	.word	0x08003de5
 8003e38:	08003de5 	.word	0x08003de5
 8003e3c:	08003fcb 	.word	0x08003fcb
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003e40:	4b90      	ldr	r3, [pc, #576]	; (8004084 <HAL_UART_Init+0x330>)
 8003e42:	4a92      	ldr	r2, [pc, #584]	; (800408c <HAL_UART_Init+0x338>)
 8003e44:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003e48:	f003 030c 	and.w	r3, r3, #12
 8003e4c:	5cd3      	ldrb	r3, [r2, r3]
 8003e4e:	e7dc      	b.n	8003e0a <HAL_UART_Init+0xb6>
 8003e50:	4b8c      	ldr	r3, [pc, #560]	; (8004084 <HAL_UART_Init+0x330>)
 8003e52:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003e56:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8003e5a:	2b40      	cmp	r3, #64	; 0x40
 8003e5c:	f000 80af 	beq.w	8003fbe <HAL_UART_Init+0x26a>
 8003e60:	f240 8082 	bls.w	8003f68 <HAL_UART_Init+0x214>
 8003e64:	2b80      	cmp	r3, #128	; 0x80
 8003e66:	f000 809d 	beq.w	8003fa4 <HAL_UART_Init+0x250>
 8003e6a:	2bc0      	cmp	r3, #192	; 0xc0
 8003e6c:	f000 80b8 	beq.w	8003fe0 <HAL_UART_Init+0x28c>
 8003e70:	e7b8      	b.n	8003de4 <HAL_UART_Init+0x90>
    switch (clocksource)
 8003e72:	2b08      	cmp	r3, #8
 8003e74:	d8b6      	bhi.n	8003de4 <HAL_UART_Init+0x90>
 8003e76:	a201      	add	r2, pc, #4	; (adr r2, 8003e7c <HAL_UART_Init+0x128>)
 8003e78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e7c:	08004039 	.word	0x08004039
 8003e80:	08004023 	.word	0x08004023
 8003e84:	08004035 	.word	0x08004035
 8003e88:	08003de5 	.word	0x08003de5
 8003e8c:	0800402f 	.word	0x0800402f
 8003e90:	08003de5 	.word	0x08003de5
 8003e94:	08003de5 	.word	0x08003de5
 8003e98:	08003de5 	.word	0x08003de5
 8003e9c:	08003fe7 	.word	0x08003fe7
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d19f      	bne.n	8003de4 <HAL_UART_Init+0x90>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003ea4:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003ea8:	f000 80bb 	beq.w	8004022 <HAL_UART_Init+0x2ce>
        pclk = HAL_RCC_GetPCLK2Freq();
 8003eac:	f7fe fcd8 	bl	8002860 <HAL_RCC_GetPCLK2Freq>
    if (pclk != 0U)
 8003eb0:	2800      	cmp	r0, #0
 8003eb2:	d063      	beq.n	8003f7c <HAL_UART_Init+0x228>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8003eb4:	6863      	ldr	r3, [r4, #4]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003eb6:	f64f 72ef 	movw	r2, #65519	; 0xffef
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8003eba:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8003ebe:	fbb0 f0f3 	udiv	r0, r0, r3
 8003ec2:	b280      	uxth	r0, r0
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003ec4:	f1a0 0310 	sub.w	r3, r0, #16
 8003ec8:	4293      	cmp	r3, r2
 8003eca:	d88b      	bhi.n	8003de4 <HAL_UART_Init+0x90>
        huart->Instance->BRR = usartdiv;
 8003ecc:	6822      	ldr	r2, [r4, #0]
  huart->RxISR = NULL;
 8003ece:	2300      	movs	r3, #0
        huart->Instance->BRR = usartdiv;
 8003ed0:	60d0      	str	r0, [r2, #12]
  huart->TxISR = NULL;
 8003ed2:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003ed6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d155      	bne.n	8003f88 <HAL_UART_Init+0x234>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003edc:	6823      	ldr	r3, [r4, #0]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003ede:	2100      	movs	r1, #0
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003ee0:	685a      	ldr	r2, [r3, #4]
 8003ee2:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003ee6:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8003ee8:	689a      	ldr	r2, [r3, #8]
 8003eea:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003eee:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8003ef0:	681a      	ldr	r2, [r3, #0]
 8003ef2:	f042 0201 	orr.w	r2, r2, #1
 8003ef6:	601a      	str	r2, [r3, #0]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003ef8:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
  tickstart = HAL_GetTick();
 8003efc:	f7fc ffe2 	bl	8000ec4 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003f00:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8003f02:	4606      	mov	r6, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003f04:	681a      	ldr	r2, [r3, #0]
 8003f06:	0710      	lsls	r0, r2, #28
 8003f08:	d408      	bmi.n	8003f1c <HAL_UART_Init+0x1c8>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003f0a:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
 8003f0c:	2220      	movs	r2, #32
  return HAL_OK;
 8003f0e:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
 8003f10:	67a2      	str	r2, [r4, #120]	; 0x78
  __HAL_UNLOCK(huart);
 8003f12:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
 8003f16:	67e2      	str	r2, [r4, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003f18:	6623      	str	r3, [r4, #96]	; 0x60
}
 8003f1a:	bd70      	pop	{r4, r5, r6, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8003f1c:	69dd      	ldr	r5, [r3, #28]
 8003f1e:	f415 1500 	ands.w	r5, r5, #2097152	; 0x200000
 8003f22:	d1f2      	bne.n	8003f0a <HAL_UART_Init+0x1b6>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003f24:	f7fc ffce 	bl	8000ec4 <HAL_GetTick>
 8003f28:	1b80      	subs	r0, r0, r6
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003f2a:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003f2c:	f1b0 7f00 	cmp.w	r0, #33554432	; 0x2000000
 8003f30:	f080 80b2 	bcs.w	8004098 <HAL_UART_Init+0x344>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8003f34:	681a      	ldr	r2, [r3, #0]
 8003f36:	0751      	lsls	r1, r2, #29
 8003f38:	d5f0      	bpl.n	8003f1c <HAL_UART_Init+0x1c8>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8003f3a:	69da      	ldr	r2, [r3, #28]
 8003f3c:	0512      	lsls	r2, r2, #20
 8003f3e:	d5ed      	bpl.n	8003f1c <HAL_UART_Init+0x1c8>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003f40:	f44f 6100 	mov.w	r1, #2048	; 0x800
          huart->gState = HAL_UART_STATE_READY;
 8003f44:	2220      	movs	r2, #32
      return HAL_TIMEOUT;
 8003f46:	2003      	movs	r0, #3
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003f48:	6219      	str	r1, [r3, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003f4a:	6819      	ldr	r1, [r3, #0]
 8003f4c:	f421 71d0 	bic.w	r1, r1, #416	; 0x1a0
 8003f50:	6019      	str	r1, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003f52:	6899      	ldr	r1, [r3, #8]
 8003f54:	f021 0101 	bic.w	r1, r1, #1
 8003f58:	6099      	str	r1, [r3, #8]
          huart->gState = HAL_UART_STATE_READY;
 8003f5a:	67a2      	str	r2, [r4, #120]	; 0x78
          __HAL_UNLOCK(huart);
 8003f5c:	f884 5074 	strb.w	r5, [r4, #116]	; 0x74
          huart->RxState = HAL_UART_STATE_READY;
 8003f60:	67e2      	str	r2, [r4, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8003f62:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
}
 8003f66:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	f47f af3b 	bne.w	8003de4 <HAL_UART_Init+0x90>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003f6e:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003f72:	d061      	beq.n	8004038 <HAL_UART_Init+0x2e4>
        pclk = HAL_RCC_GetPCLK1Freq();
 8003f74:	f7fe fc64 	bl	8002840 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8003f78:	2800      	cmp	r0, #0
 8003f7a:	d19b      	bne.n	8003eb4 <HAL_UART_Init+0x160>
  huart->RxISR = NULL;
 8003f7c:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8003f7e:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003f82:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003f84:	2b00      	cmp	r3, #0
 8003f86:	d0a9      	beq.n	8003edc <HAL_UART_Init+0x188>
    UART_AdvFeatureConfig(huart);
 8003f88:	4620      	mov	r0, r4
 8003f8a:	f7ff fe8b 	bl	8003ca4 <UART_AdvFeatureConfig>
 8003f8e:	e7a5      	b.n	8003edc <HAL_UART_Init+0x188>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003f90:	4b3c      	ldr	r3, [pc, #240]	; (8004084 <HAL_UART_Init+0x330>)
 8003f92:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003f96:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8003f9a:	2b10      	cmp	r3, #16
 8003f9c:	d00f      	beq.n	8003fbe <HAL_UART_Init+0x26a>
 8003f9e:	d9e3      	bls.n	8003f68 <HAL_UART_Init+0x214>
 8003fa0:	2b20      	cmp	r3, #32
 8003fa2:	d13b      	bne.n	800401c <HAL_UART_Init+0x2c8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003fa4:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003fa8:	d044      	beq.n	8004034 <HAL_UART_Init+0x2e0>
        pclk = (uint32_t) HSI_VALUE;
 8003faa:	4839      	ldr	r0, [pc, #228]	; (8004090 <HAL_UART_Init+0x33c>)
 8003fac:	e782      	b.n	8003eb4 <HAL_UART_Init+0x160>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003fae:	4b35      	ldr	r3, [pc, #212]	; (8004084 <HAL_UART_Init+0x330>)
 8003fb0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003fb4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003fb8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003fbc:	d108      	bne.n	8003fd0 <HAL_UART_Init+0x27c>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003fbe:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003fc2:	d034      	beq.n	800402e <HAL_UART_Init+0x2da>
        pclk = HAL_RCC_GetSysClockFreq();
 8003fc4:	f7fe fc08 	bl	80027d8 <HAL_RCC_GetSysClockFreq>
 8003fc8:	e772      	b.n	8003eb0 <HAL_UART_Init+0x15c>
        pclk = (uint32_t) LSE_VALUE;
 8003fca:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8003fce:	e771      	b.n	8003eb4 <HAL_UART_Init+0x160>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003fd0:	d9ca      	bls.n	8003f68 <HAL_UART_Init+0x214>
 8003fd2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003fd6:	d0e5      	beq.n	8003fa4 <HAL_UART_Init+0x250>
 8003fd8:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8003fdc:	f47f af02 	bne.w	8003de4 <HAL_UART_Init+0x90>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003fe0:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8003fe4:	d1f1      	bne.n	8003fca <HAL_UART_Init+0x276>
 8003fe6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8003fea:	6862      	ldr	r2, [r4, #4]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003fec:	f64f 71ef 	movw	r1, #65519	; 0xffef
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8003ff0:	eb03 0352 	add.w	r3, r3, r2, lsr #1
 8003ff4:	fbb3 f3f2 	udiv	r3, r3, r2
 8003ff8:	b29a      	uxth	r2, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003ffa:	f1a2 0010 	sub.w	r0, r2, #16
 8003ffe:	4288      	cmp	r0, r1
 8004000:	f63f aef0 	bhi.w	8003de4 <HAL_UART_Init+0x90>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004004:	f023 030f 	bic.w	r3, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8004008:	f3c2 0242 	ubfx	r2, r2, #1, #3
        huart->Instance->BRR = brrtemp;
 800400c:	6820      	ldr	r0, [r4, #0]
  huart->RxISR = NULL;
 800400e:	2100      	movs	r1, #0
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004010:	b29b      	uxth	r3, r3
        huart->Instance->BRR = brrtemp;
 8004012:	4313      	orrs	r3, r2
 8004014:	60c3      	str	r3, [r0, #12]
  huart->TxISR = NULL;
 8004016:	e9c4 1119 	strd	r1, r1, [r4, #100]	; 0x64
 800401a:	e75c      	b.n	8003ed6 <HAL_UART_Init+0x182>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800401c:	2b30      	cmp	r3, #48	; 0x30
 800401e:	d0df      	beq.n	8003fe0 <HAL_UART_Init+0x28c>
 8004020:	e6e0      	b.n	8003de4 <HAL_UART_Init+0x90>
        pclk = HAL_RCC_GetPCLK2Freq();
 8004022:	f7fe fc1d 	bl	8002860 <HAL_RCC_GetPCLK2Freq>
    if (pclk != 0U)
 8004026:	2800      	cmp	r0, #0
 8004028:	d0a8      	beq.n	8003f7c <HAL_UART_Init+0x228>
 800402a:	0043      	lsls	r3, r0, #1
 800402c:	e7dd      	b.n	8003fea <HAL_UART_Init+0x296>
        pclk = HAL_RCC_GetSysClockFreq();
 800402e:	f7fe fbd3 	bl	80027d8 <HAL_RCC_GetSysClockFreq>
 8004032:	e7f8      	b.n	8004026 <HAL_UART_Init+0x2d2>
    switch (clocksource)
 8004034:	4b17      	ldr	r3, [pc, #92]	; (8004094 <HAL_UART_Init+0x340>)
 8004036:	e7d8      	b.n	8003fea <HAL_UART_Init+0x296>
        pclk = HAL_RCC_GetPCLK1Freq();
 8004038:	f7fe fc02 	bl	8002840 <HAL_RCC_GetPCLK1Freq>
 800403c:	e7f3      	b.n	8004026 <HAL_UART_Init+0x2d2>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800403e:	4b11      	ldr	r3, [pc, #68]	; (8004084 <HAL_UART_Init+0x330>)
 8004040:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004044:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8004048:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800404c:	d0b7      	beq.n	8003fbe <HAL_UART_Init+0x26a>
 800404e:	d98b      	bls.n	8003f68 <HAL_UART_Init+0x214>
 8004050:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004054:	d0a6      	beq.n	8003fa4 <HAL_UART_Init+0x250>
 8004056:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 800405a:	d0c1      	beq.n	8003fe0 <HAL_UART_Init+0x28c>
 800405c:	e6c2      	b.n	8003de4 <HAL_UART_Init+0x90>
 800405e:	bf00      	nop
 8004060:	efff69f3 	.word	0xefff69f3
 8004064:	40011000 	.word	0x40011000
 8004068:	40004400 	.word	0x40004400
 800406c:	40004800 	.word	0x40004800
 8004070:	40004c00 	.word	0x40004c00
 8004074:	40005000 	.word	0x40005000
 8004078:	40011400 	.word	0x40011400
 800407c:	40007800 	.word	0x40007800
 8004080:	40007c00 	.word	0x40007c00
 8004084:	40023800 	.word	0x40023800
 8004088:	0801abb4 	.word	0x0801abb4
 800408c:	0801abb8 	.word	0x0801abb8
 8004090:	00f42400 	.word	0x00f42400
 8004094:	01e84800 	.word	0x01e84800
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8004098:	681a      	ldr	r2, [r3, #0]
        huart->gState = HAL_UART_STATE_READY;
 800409a:	2120      	movs	r1, #32
      return HAL_TIMEOUT;
 800409c:	2003      	movs	r0, #3
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800409e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80040a2:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80040a4:	689a      	ldr	r2, [r3, #8]
 80040a6:	f022 0201 	bic.w	r2, r2, #1
 80040aa:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 80040ac:	67a1      	str	r1, [r4, #120]	; 0x78
        __HAL_UNLOCK(huart);
 80040ae:	f884 5074 	strb.w	r5, [r4, #116]	; 0x74
        huart->RxState = HAL_UART_STATE_READY;
 80040b2:	67e1      	str	r1, [r4, #124]	; 0x7c
}
 80040b4:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 80040b6:	4b13      	ldr	r3, [pc, #76]	; (8004104 <HAL_UART_Init+0x3b0>)
 80040b8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80040bc:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80040c0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80040c4:	f43f af7b 	beq.w	8003fbe <HAL_UART_Init+0x26a>
 80040c8:	f67f aeea 	bls.w	8003ea0 <HAL_UART_Init+0x14c>
 80040cc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80040d0:	f43f af68 	beq.w	8003fa4 <HAL_UART_Init+0x250>
 80040d4:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80040d8:	d082      	beq.n	8003fe0 <HAL_UART_Init+0x28c>
 80040da:	e683      	b.n	8003de4 <HAL_UART_Init+0x90>
 80040dc:	4b09      	ldr	r3, [pc, #36]	; (8004104 <HAL_UART_Init+0x3b0>)
 80040de:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80040e2:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 80040e6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80040ea:	f43f af68 	beq.w	8003fbe <HAL_UART_Init+0x26a>
 80040ee:	f67f af3b 	bls.w	8003f68 <HAL_UART_Init+0x214>
 80040f2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80040f6:	f43f af55 	beq.w	8003fa4 <HAL_UART_Init+0x250>
 80040fa:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80040fe:	f43f af6f 	beq.w	8003fe0 <HAL_UART_Init+0x28c>
 8004102:	e66f      	b.n	8003de4 <HAL_UART_Init+0x90>
 8004104:	40023800 	.word	0x40023800

08004108 <Init_LCD_GPIO>:
//=============================================================================
void Init_LCD_GPIO(void)
{
	  GPIO_InitTypeDef GPIO_InitStruct;

	  __HAL_RCC_CRC_CLK_ENABLE();
 8004108:	4b37      	ldr	r3, [pc, #220]	; (80041e8 <Init_LCD_GPIO+0xe0>)
	  __HAL_RCC_GPIOE_CLK_ENABLE();
	  __HAL_RCC_GPIOF_CLK_ENABLE();
	  __HAL_RCC_GPIOG_CLK_ENABLE();


	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 800410a:	2200      	movs	r2, #0
 800410c:	f44f 4178 	mov.w	r1, #63488	; 0xf800
{
 8004110:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	  __HAL_RCC_CRC_CLK_ENABLE();
 8004114:	6b1d      	ldr	r5, [r3, #48]	; 0x30
{
 8004116:	b08b      	sub	sp, #44	; 0x2c
	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 8004118:	4c34      	ldr	r4, [pc, #208]	; (80041ec <Init_LCD_GPIO+0xe4>)
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);

	  GPIO_InitStruct.Pin = GCMD;
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800411a:	4616      	mov	r6, r2
	  __HAL_RCC_CRC_CLK_ENABLE();
 800411c:	f445 5580 	orr.w	r5, r5, #4096	; 0x1000
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
 8004120:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 80041f0 <Init_LCD_GPIO+0xe8>
	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 8004124:	4620      	mov	r0, r4
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);
 8004126:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 80041f4 <Init_LCD_GPIO+0xec>
	  __HAL_RCC_CRC_CLK_ENABLE();
 800412a:	631d      	str	r5, [r3, #48]	; 0x30
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800412c:	2701      	movs	r7, #1
	  __HAL_RCC_CRC_CLK_ENABLE();
 800412e:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 8004130:	f405 5580 	and.w	r5, r5, #4096	; 0x1000
 8004134:	9501      	str	r5, [sp, #4]
 8004136:	9d01      	ldr	r5, [sp, #4]
	  __HAL_RCC_GPIOE_CLK_ENABLE();
 8004138:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 800413a:	f045 0510 	orr.w	r5, r5, #16
 800413e:	631d      	str	r5, [r3, #48]	; 0x30
 8004140:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 8004142:	f005 0510 	and.w	r5, r5, #16
 8004146:	9502      	str	r5, [sp, #8]
 8004148:	9d02      	ldr	r5, [sp, #8]
	  __HAL_RCC_GPIOF_CLK_ENABLE();
 800414a:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 800414c:	f045 0520 	orr.w	r5, r5, #32
 8004150:	631d      	str	r5, [r3, #48]	; 0x30
 8004152:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 8004154:	f005 0520 	and.w	r5, r5, #32
 8004158:	9503      	str	r5, [sp, #12]
 800415a:	9d03      	ldr	r5, [sp, #12]
	  __HAL_RCC_GPIOG_CLK_ENABLE();
 800415c:	6b1d      	ldr	r5, [r3, #48]	; 0x30
 800415e:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 8004162:	631d      	str	r5, [r3, #48]	; 0x30
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004164:	2503      	movs	r5, #3
	  __HAL_RCC_GPIOG_CLK_ENABLE();
 8004166:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004168:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800416c:	9304      	str	r3, [sp, #16]
 800416e:	9b04      	ldr	r3, [sp, #16]
	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 8004170:	f7fd fcc2 	bl	8001af8 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
 8004174:	4648      	mov	r0, r9
 8004176:	4632      	mov	r2, r6
 8004178:	21ff      	movs	r1, #255	; 0xff
 800417a:	f7fd fcbd 	bl	8001af8 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);
 800417e:	4632      	mov	r2, r6
 8004180:	4640      	mov	r0, r8
 8004182:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8004186:	f7fd fcb7 	bl	8001af8 <HAL_GPIO_WritePin>
	  GPIO_InitStruct.Pin = GCMD;
 800418a:	f44f 4378 	mov.w	r3, #63488	; 0xf800
	  HAL_GPIO_Init(GDISP_CMD_PORT, &GPIO_InitStruct);
 800418e:	4620      	mov	r0, r4
 8004190:	a905      	add	r1, sp, #20
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004192:	e9cd 3705 	strd	r3, r7, [sp, #20]
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004196:	e9cd 6507 	strd	r6, r5, [sp, #28]
	  HAL_GPIO_Init(GDISP_CMD_PORT, &GPIO_InitStruct);
 800419a:	f7fd fba7 	bl	80018ec <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_LO;
 800419e:	23ff      	movs	r3, #255	; 0xff
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
	  HAL_GPIO_Init(GDISP_DATA_LO_PORT, &GPIO_InitStruct);
 80041a0:	4648      	mov	r0, r9
 80041a2:	a905      	add	r1, sp, #20
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80041a4:	9508      	str	r5, [sp, #32]
	  GPIO_InitStruct.Pin = GDATA_LO;
 80041a6:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80041a8:	e9cd 7606 	strd	r7, r6, [sp, #24]
	  HAL_GPIO_Init(GDISP_DATA_LO_PORT, &GPIO_InitStruct);
 80041ac:	f7fd fb9e 	bl	80018ec <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_HI;
 80041b0:	f44f 437f 	mov.w	r3, #65280	; 0xff00
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
	  HAL_GPIO_Init(GDISP_DATA_HI_PORT, &GPIO_InitStruct);
 80041b4:	a905      	add	r1, sp, #20
 80041b6:	4640      	mov	r0, r8
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80041b8:	9508      	str	r5, [sp, #32]

	  SET_CS; SET_WR; SET_RD; SET_DC; SET_RST;
 80041ba:	f44f 5500 	mov.w	r5, #8192	; 0x2000
	  GPIO_InitStruct.Pin = GDATA_HI;
 80041be:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80041c0:	e9cd 7606 	strd	r7, r6, [sp, #24]
	  HAL_GPIO_Init(GDISP_DATA_HI_PORT, &GPIO_InitStruct);
 80041c4:	f7fd fb92 	bl	80018ec <HAL_GPIO_Init>
	  SET_CS; SET_WR; SET_RD; SET_DC; SET_RST;
 80041c8:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80041cc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80041d0:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80041d4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80041d8:	61a5      	str	r5, [r4, #24]
 80041da:	61a0      	str	r0, [r4, #24]
 80041dc:	61a1      	str	r1, [r4, #24]
 80041de:	61a2      	str	r2, [r4, #24]
 80041e0:	61a3      	str	r3, [r4, #24]
}
 80041e2:	b00b      	add	sp, #44	; 0x2c
 80041e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80041e8:	40023800 	.word	0x40023800
 80041ec:	40021400 	.word	0x40021400
 80041f0:	40021800 	.word	0x40021800
 80041f4:	40021000 	.word	0x40021000

080041f8 <SSD1963_WriteCommand>:
//=============================================================================
// Write command to display
//=============================================================================
void SSD1963_WriteCommand(uint16_t Data)
{
	uint16_t _Data=~Data;
 80041f8:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80041fa:	4911      	ldr	r1, [pc, #68]	; (8004240 <SSD1963_WriteCommand+0x48>)

	CLR_CS;
 80041fc:	4a11      	ldr	r2, [pc, #68]	; (8004244 <SSD1963_WriteCommand+0x4c>)
	CLR_DC;
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80041fe:	041b      	lsls	r3, r3, #16
{
 8004200:	b470      	push	{r4, r5, r6}
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004202:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004206:	b2c4      	uxtb	r4, r0
 8004208:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800420c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004210:	618d      	str	r5, [r1, #24]
	CLR_CS;
 8004212:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004216:	4323      	orrs	r3, r4
 8004218:	4c0b      	ldr	r4, [pc, #44]	; (8004248 <SSD1963_WriteCommand+0x50>)
	CLR_CS;
 800421a:	6195      	str	r5, [r2, #24]
	CLR_DC;
 800421c:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
 8004220:	6195      	str	r5, [r2, #24]
	writeStrobe;
 8004222:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004226:	61a3      	str	r3, [r4, #24]
	writeStrobe;
 8004228:	f44f 6400 	mov.w	r4, #2048	; 0x800
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800422c:	694e      	ldr	r6, [r1, #20]
	SET_CS;
 800422e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004232:	4330      	orrs	r0, r6
 8004234:	6148      	str	r0, [r1, #20]
	writeStrobe;
 8004236:	6195      	str	r5, [r2, #24]
 8004238:	6194      	str	r4, [r2, #24]
	SET_CS;
 800423a:	6193      	str	r3, [r2, #24]
}
 800423c:	bc70      	pop	{r4, r5, r6}
 800423e:	4770      	bx	lr
 8004240:	40021000 	.word	0x40021000
 8004244:	40021400 	.word	0x40021400
 8004248:	40021800 	.word	0x40021800

0800424c <SSD1963_WriteData>:
// Write data to display
//=============================================================================

void SSD1963_WriteData(uint16_t Data)
{
	uint16_t _Data=~Data;
 800424c:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800424e:	4911      	ldr	r1, [pc, #68]	; (8004294 <SSD1963_WriteData+0x48>)

	CLR_CS;
 8004250:	4a11      	ldr	r2, [pc, #68]	; (8004298 <SSD1963_WriteData+0x4c>)
	SET_DC;
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004252:	041b      	lsls	r3, r3, #16
{
 8004254:	b470      	push	{r4, r5, r6}
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004256:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800425a:	b2c4      	uxtb	r4, r0
 800425c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004260:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004264:	618d      	str	r5, [r1, #24]
	CLR_CS;
 8004266:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800426a:	4323      	orrs	r3, r4
 800426c:	4c0b      	ldr	r4, [pc, #44]	; (800429c <SSD1963_WriteData+0x50>)
	CLR_CS;
 800426e:	6195      	str	r5, [r2, #24]
	SET_DC;
 8004270:	f44f 4500 	mov.w	r5, #32768	; 0x8000
 8004274:	6195      	str	r5, [r2, #24]
	writeStrobe;
 8004276:	f04f 6500 	mov.w	r5, #134217728	; 0x8000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800427a:	61a3      	str	r3, [r4, #24]
	writeStrobe;
 800427c:	f44f 6400 	mov.w	r4, #2048	; 0x800
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004280:	694e      	ldr	r6, [r1, #20]
	SET_CS;
 8004282:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004286:	4330      	orrs	r0, r6
 8004288:	6148      	str	r0, [r1, #20]
	writeStrobe;
 800428a:	6195      	str	r5, [r2, #24]
 800428c:	6194      	str	r4, [r2, #24]
	SET_CS;
 800428e:	6193      	str	r3, [r2, #24]

}
 8004290:	bc70      	pop	{r4, r5, r6}
 8004292:	4770      	bx	lr
 8004294:	40021000 	.word	0x40021000
 8004298:	40021400 	.word	0x40021400
 800429c:	40021800 	.word	0x40021800

080042a0 <SSD1963_WriteDataMultiple>:
//=============================================================================
// Write multiple data to display
//=============================================================================
void SSD1963_WriteDataMultiple(uint16_t * Data, int NumItems)
{
  while (NumItems)
 80042a0:	b399      	cbz	r1, 800430a <SSD1963_WriteDataMultiple+0x6a>
 80042a2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
	writeStrobe;
 80042a6:	f04f 6c00 	mov.w	ip, #134217728	; 0x8000000
{
 80042aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80042ae:	4d17      	ldr	r5, [pc, #92]	; (800430c <SSD1963_WriteDataMultiple+0x6c>)
 80042b0:	f04f 4a7f 	mov.w	sl, #4278190080	; 0xff000000
	CLR_CS;
 80042b4:	4c16      	ldr	r4, [pc, #88]	; (8004310 <SSD1963_WriteDataMultiple+0x70>)
 80042b6:	f04f 5900 	mov.w	r9, #536870912	; 0x20000000
	SET_DC;
 80042ba:	f44f 4800 	mov.w	r8, #32768	; 0x8000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80042be:	f8df e054 	ldr.w	lr, [pc, #84]	; 8004314 <SSD1963_WriteDataMultiple+0x74>
	writeStrobe;
 80042c2:	f44f 6700 	mov.w	r7, #2048	; 0x800
	SET_CS;
 80042c6:	f44f 5600 	mov.w	r6, #8192	; 0x2000
  {
	  SSD1963_WriteData(*Data);
 80042ca:	f830 3b02 	ldrh.w	r3, [r0], #2
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80042ce:	f8c5 a018 	str.w	sl, [r5, #24]
	uint16_t _Data=~Data;
 80042d2:	43da      	mvns	r2, r3
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80042d4:	fa5f fb83 	uxtb.w	fp, r3
	CLR_CS;
 80042d8:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80042dc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80042e0:	0412      	lsls	r2, r2, #16
	SET_DC;
 80042e2:	f8c4 8018 	str.w	r8, [r4, #24]
  while (NumItems)
 80042e6:	4288      	cmp	r0, r1
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80042e8:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 80042ec:	ea42 020b 	orr.w	r2, r2, fp
 80042f0:	f8ce 2018 	str.w	r2, [lr, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80042f4:	696a      	ldr	r2, [r5, #20]
 80042f6:	ea43 0302 	orr.w	r3, r3, r2
 80042fa:	616b      	str	r3, [r5, #20]
	writeStrobe;
 80042fc:	f8c4 c018 	str.w	ip, [r4, #24]
 8004300:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004302:	61a6      	str	r6, [r4, #24]
  while (NumItems)
 8004304:	d1e1      	bne.n	80042ca <SSD1963_WriteDataMultiple+0x2a>
	  Data++;
	  NumItems--;
  }
}
 8004306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800430a:	4770      	bx	lr
 800430c:	40021000 	.word	0x40021000
 8004310:	40021400 	.word	0x40021400
 8004314:	40021800 	.word	0x40021800

08004318 <SSD1963_Init>:
//=============================================================================
// Display initialization
//=============================================================================

void SSD1963_Init (void)
{
 8004318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	CLR_RST;  // reset
 800431c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004320:	4cbd      	ldr	r4, [pc, #756]	; (8004618 <SSD1963_Init+0x300>)
{
 8004322:	b083      	sub	sp, #12
	HAL_Delay(500);
 8004324:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
	CLR_RST;  // reset
 8004328:	61a3      	str	r3, [r4, #24]
	SET_RST;
 800432a:	f44f 4680 	mov.w	r6, #16384	; 0x4000
	HAL_Delay(500);
 800432e:	f7fc fdcf 	bl	8000ed0 <HAL_Delay>
	CLR_CS;
 8004332:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
	writeStrobe;
 8004336:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
	HAL_Delay(100);
 800433a:	2064      	movs	r0, #100	; 0x64
	CLR_CS;
 800433c:	9201      	str	r2, [sp, #4]
	CLR_DC;
 800433e:	f04f 4a00 	mov.w	sl, #2147483648	; 0x80000000
	writeStrobe;
 8004342:	9300      	str	r3, [sp, #0]
 8004344:	f44f 6700 	mov.w	r7, #2048	; 0x800
	SET_RST;
 8004348:	61a6      	str	r6, [r4, #24]
	SET_CS;
 800434a:	f44f 5600 	mov.w	r6, #8192	; 0x2000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800434e:	4db3      	ldr	r5, [pc, #716]	; (800461c <SSD1963_Init+0x304>)
	HAL_Delay(100);
 8004350:	f7fc fdbe 	bl	8000ed0 <HAL_Delay>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004354:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004358:	f8df 82d4 	ldr.w	r8, [pc, #724]	; 8004630 <SSD1963_Init+0x318>
	CLR_CS;
 800435c:	9a01      	ldr	r2, [sp, #4]

	SSD1963_WriteCommand(SSD1963_SOFT_RESET);
	HAL_Delay(10);
 800435e:	200a      	movs	r0, #10
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004360:	61ab      	str	r3, [r5, #24]
	SET_DC;
 8004362:	f44f 4900 	mov.w	r9, #32768	; 0x8000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004366:	4bae      	ldr	r3, [pc, #696]	; (8004620 <SSD1963_Init+0x308>)
	CLR_CS;
 8004368:	61a2      	str	r2, [r4, #24]
 800436a:	9201      	str	r2, [sp, #4]
	CLR_DC;
 800436c:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004370:	f8c8 3018 	str.w	r3, [r8, #24]
	writeStrobe;
 8004374:	9b00      	ldr	r3, [sp, #0]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004376:	f8d5 c014 	ldr.w	ip, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800437a:	f8df b2b8 	ldr.w	fp, [pc, #696]	; 8004634 <SSD1963_Init+0x31c>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800437e:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8004382:	61a3      	str	r3, [r4, #24]
 8004384:	9300      	str	r3, [sp, #0]
 8004386:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004388:	61a6      	str	r6, [r4, #24]
	HAL_Delay(10);
 800438a:	f7fc fda1 	bl	8000ed0 <HAL_Delay>
	CLR_CS;
 800438e:	9a01      	ldr	r2, [sp, #4]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004390:	f8df e2a4 	ldr.w	lr, [pc, #676]	; 8004638 <SSD1963_Init+0x320>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004394:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004398:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800439c:	f8df c29c 	ldr.w	ip, [pc, #668]	; 800463c <SSD1963_Init+0x324>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80043a0:	61ab      	str	r3, [r5, #24]
	SSD1963_WriteData(4);  	// dummy

	SSD1963_WriteCommand(SSD1963_SET_PLL);
	SSD1963_WriteData(0x0001);

	HAL_Delay(100);
 80043a2:	2064      	movs	r0, #100	; 0x64
	CLR_CS;
 80043a4:	61a2      	str	r2, [r4, #24]
	writeStrobe;
 80043a6:	9b00      	ldr	r3, [sp, #0]
	CLR_DC;
 80043a8:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043ac:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80043b0:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80043b4:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80043b8:	61a3      	str	r3, [r4, #24]
 80043ba:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80043bc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80043be:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80043c0:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80043c2:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043c6:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80043ca:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80043ce:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80043d2:	61a3      	str	r3, [r4, #24]
 80043d4:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80043d6:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80043d8:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80043da:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80043dc:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043e0:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80043e4:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80043e8:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80043ec:	61a3      	str	r3, [r4, #24]
 80043ee:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80043f0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80043f2:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043f4:	498b      	ldr	r1, [pc, #556]	; (8004624 <SSD1963_Init+0x30c>)
	CLR_CS;
 80043f6:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80043f8:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80043fc:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004400:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004404:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004408:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800440c:	61a3      	str	r3, [r4, #24]
 800440e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004410:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004412:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004414:	4984      	ldr	r1, [pc, #528]	; (8004628 <SSD1963_Init+0x310>)
	CLR_CS;
 8004416:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 8004418:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800441c:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004420:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004424:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004428:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800442c:	61a3      	str	r3, [r4, #24]
 800442e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004430:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004432:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004434:	61a2      	str	r2, [r4, #24]
 8004436:	9201      	str	r2, [sp, #4]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004438:	4a79      	ldr	r2, [pc, #484]	; (8004620 <SSD1963_Init+0x308>)
	SET_DC;
 800443a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800443e:	f8c8 2018 	str.w	r2, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004442:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004446:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800444a:	61a3      	str	r3, [r4, #24]
 800444c:	9300      	str	r3, [sp, #0]
 800444e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004450:	61a6      	str	r6, [r4, #24]
	HAL_Delay(100);
 8004452:	f7fc fd3d 	bl	8000ed0 <HAL_Delay>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004456:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	CLR_CS;
 800445a:	9a01      	ldr	r2, [sp, #4]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800445c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004460:	61ab      	str	r3, [r5, #24]
	SSD1963_WriteData(0x0000);
	SSD1963_WriteData(0x0000);

	SSD1963_WriteCommand(SSD1963_SET_DISPLAY_ON);//SET display on

	HAL_Delay(10);
 8004462:	200a      	movs	r0, #10
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004464:	4b70      	ldr	r3, [pc, #448]	; (8004628 <SSD1963_Init+0x310>)
	CLR_CS;
 8004466:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 8004468:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800446c:	f8c8 3018 	str.w	r3, [r8, #24]
	writeStrobe;
 8004470:	9b00      	ldr	r3, [sp, #0]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004472:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004476:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800447a:	61a3      	str	r3, [r4, #24]
 800447c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800447e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004480:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004482:	496a      	ldr	r1, [pc, #424]	; (800462c <SSD1963_Init+0x314>)
	CLR_CS;
 8004484:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004486:	f8df c1b8 	ldr.w	ip, [pc, #440]	; 8004640 <SSD1963_Init+0x328>
	SET_DC;
 800448a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800448e:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004492:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004496:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800449a:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800449e:	61a3      	str	r3, [r4, #24]
 80044a0:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80044a2:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80044a4:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80044a6:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80044a8:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044ac:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044b0:	f8df c190 	ldr.w	ip, [pc, #400]	; 8004644 <SSD1963_Init+0x32c>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80044b4:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80044b8:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80044bc:	61a3      	str	r3, [r4, #24]
 80044be:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80044c0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80044c2:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80044c4:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80044c6:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044ca:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80044ce:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80044d2:	f8c5 c014 	str.w	ip, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044d6:	f44f 0c7f 	mov.w	ip, #16711680	; 0xff0000
	writeStrobe;
 80044da:	61a3      	str	r3, [r4, #24]
 80044dc:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80044de:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80044e0:	61a9      	str	r1, [r5, #24]
 80044e2:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 80044e6:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80044e8:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80044ec:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80044f0:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80044f4:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80044f8:	61a3      	str	r3, [r4, #24]
 80044fa:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80044fc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80044fe:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004500:	4947      	ldr	r1, [pc, #284]	; (8004620 <SSD1963_Init+0x308>)
	CLR_CS;
 8004502:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004504:	f8df c140 	ldr.w	ip, [pc, #320]	; 8004648 <SSD1963_Init+0x330>
	SET_DC;
 8004508:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800450c:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004510:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004514:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004518:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800451c:	61a3      	str	r3, [r4, #24]
 800451e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004520:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004522:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004524:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004526:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800452a:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800452e:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004532:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 8004536:	61a3      	str	r3, [r4, #24]
 8004538:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800453a:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800453c:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800453e:	4938      	ldr	r1, [pc, #224]	; (8004620 <SSD1963_Init+0x308>)
	CLR_CS;
 8004540:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004542:	f8df c108 	ldr.w	ip, [pc, #264]	; 800464c <SSD1963_Init+0x334>
	SET_DC;
 8004546:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800454a:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800454e:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004552:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004556:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800455a:	61a3      	str	r3, [r4, #24]
 800455c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800455e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004560:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004562:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004564:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004568:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800456c:	f8d5 c014 	ldr.w	ip, [r5, #20]
 8004570:	f8c5 c014 	str.w	ip, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004574:	f44f 0c7f 	mov.w	ip, #16711680	; 0xff0000
	writeStrobe;
 8004578:	61a3      	str	r3, [r4, #24]
 800457a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800457c:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800457e:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004580:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8004584:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004586:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800458a:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800458e:	f8df c0c0 	ldr.w	ip, [pc, #192]	; 8004650 <SSD1963_Init+0x338>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004592:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004596:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800459a:	61a3      	str	r3, [r4, #24]
 800459c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800459e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045a0:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80045a2:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80045a4:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045a8:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80045ac:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80045b0:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80045b4:	61a3      	str	r3, [r4, #24]
 80045b6:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80045b8:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045ba:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045bc:	491b      	ldr	r1, [pc, #108]	; (800462c <SSD1963_Init+0x314>)
	CLR_CS;
 80045be:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045c0:	f8df c090 	ldr.w	ip, [pc, #144]	; 8004654 <SSD1963_Init+0x33c>
	SET_DC;
 80045c4:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045c8:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045cc:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80045d0:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80045d4:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80045d8:	61a3      	str	r3, [r4, #24]
 80045da:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80045dc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045de:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80045e0:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80045e2:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045e6:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80045ea:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045ee:	f8df c068 	ldr.w	ip, [pc, #104]	; 8004658 <SSD1963_Init+0x340>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80045f2:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80045f6:	61a3      	str	r3, [r4, #24]
 80045f8:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80045fa:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80045fc:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80045fe:	4908      	ldr	r1, [pc, #32]	; (8004620 <SSD1963_Init+0x308>)
	CLR_CS;
 8004600:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004602:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004606:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800460a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800460e:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004612:	f8c5 e014 	str.w	lr, [r5, #20]
 8004616:	e021      	b.n	800465c <SSD1963_Init+0x344>
 8004618:	40021400 	.word	0x40021400
 800461c:	40021000 	.word	0x40021000
 8004620:	00fe0001 	.word	0x00fe0001
 8004624:	00fb0004 	.word	0x00fb0004
 8004628:	001f00e0 	.word	0x001f00e0
 800462c:	00fc0003 	.word	0x00fc0003
 8004630:	40021800 	.word	0x40021800
 8004634:	00fd0002 	.word	0x00fd0002
 8004638:	001d00e2 	.word	0x001d00e2
 800463c:	00e2001d 	.word	0x00e2001d
 8004640:	004f00b0 	.word	0x004f00b0
 8004644:	00df0020 	.word	0x00df0020
 8004648:	002000df 	.word	0x002000df
 800464c:	00f0000f 	.word	0x00f0000f
 8004650:	000f00f0 	.word	0x000f00f0
 8004654:	001900e6 	.word	0x001900e6
 8004658:	008a0075 	.word	0x008a0075
	writeStrobe;
 800465c:	61a3      	str	r3, [r4, #24]
 800465e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004660:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004662:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004664:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004666:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800466a:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800466e:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004672:	f8df c344 	ldr.w	ip, [pc, #836]	; 80049b8 <SSD1963_Init+0x6a0>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004676:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800467a:	61a3      	str	r3, [r4, #24]
 800467c:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800467e:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004680:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004682:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004684:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004688:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800468c:	f8df c32c 	ldr.w	ip, [pc, #812]	; 80049bc <SSD1963_Init+0x6a4>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004690:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004694:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8004698:	61a3      	str	r3, [r4, #24]
 800469a:	61a7      	str	r7, [r4, #24]
	SET_CS;
 800469c:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800469e:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80046a0:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80046a2:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046a6:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046aa:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046ae:	f8df c310 	ldr.w	ip, [pc, #784]	; 80049c0 <SSD1963_Init+0x6a8>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046b2:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80046b6:	61a3      	str	r3, [r4, #24]
 80046b8:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80046ba:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80046bc:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80046be:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80046c0:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046c4:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046c8:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80046cc:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80046d0:	61a3      	str	r3, [r4, #24]
 80046d2:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80046d4:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80046d6:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80046d8:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80046da:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046de:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046e2:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046e6:	f8df c2dc 	ldr.w	ip, [pc, #732]	; 80049c4 <SSD1963_Init+0x6ac>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80046ea:	f8c5 e014 	str.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80046ee:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
	writeStrobe;
 80046f2:	61a3      	str	r3, [r4, #24]
 80046f4:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80046f6:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80046f8:	61a9      	str	r1, [r5, #24]
 80046fa:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 80046fe:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004700:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004704:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004708:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800470c:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8004710:	61a3      	str	r3, [r4, #24]
 8004712:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004714:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004716:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004718:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800471a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800471e:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004722:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004726:	f8df c2a0 	ldr.w	ip, [pc, #672]	; 80049c8 <SSD1963_Init+0x6b0>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800472a:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 800472e:	61a3      	str	r3, [r4, #24]
 8004730:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004732:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004734:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004736:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004738:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800473c:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004740:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004744:	f8df e284 	ldr.w	lr, [pc, #644]	; 80049cc <SSD1963_Init+0x6b4>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004748:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800474c:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8004750:	61a3      	str	r3, [r4, #24]
 8004752:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004754:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004756:	61a9      	str	r1, [r5, #24]
 8004758:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 800475c:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800475e:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004762:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004766:	f8d5 b014 	ldr.w	fp, [r5, #20]
 800476a:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800476e:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8004772:	61a3      	str	r3, [r4, #24]
 8004774:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004776:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004778:	61a9      	str	r1, [r5, #24]
 800477a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 800477e:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004780:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004784:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004788:	f8d5 b014 	ldr.w	fp, [r5, #20]
 800478c:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004790:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8004794:	61a3      	str	r3, [r4, #24]
 8004796:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004798:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800479a:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800479c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 80047a0:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80047a2:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047a6:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80047aa:	f8d5 b014 	ldr.w	fp, [r5, #20]
 80047ae:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 80047b2:	61a3      	str	r3, [r4, #24]
 80047b4:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80047b6:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80047b8:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80047ba:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80047bc:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047c0:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80047c4:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047c8:	f8df c204 	ldr.w	ip, [pc, #516]	; 80049d0 <SSD1963_Init+0x6b8>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80047cc:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 80047d0:	61a3      	str	r3, [r4, #24]
 80047d2:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80047d4:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80047d6:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047d8:	4973      	ldr	r1, [pc, #460]	; (80049a8 <SSD1963_Init+0x690>)
	CLR_CS;
 80047da:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80047dc:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047e0:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80047e4:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80047e8:	f8d5 b014 	ldr.w	fp, [r5, #20]
 80047ec:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 80047f0:	61a3      	str	r3, [r4, #24]
 80047f2:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80047f4:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80047f6:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80047f8:	61a2      	str	r2, [r4, #24]
	SET_DC;
 80047fa:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80047fe:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004802:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004806:	f8df e1cc 	ldr.w	lr, [pc, #460]	; 80049d4 <SSD1963_Init+0x6bc>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800480a:	f8c5 b014 	str.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800480e:	f44f 0b7f 	mov.w	fp, #16711680	; 0xff0000
	writeStrobe;
 8004812:	61a3      	str	r3, [r4, #24]
 8004814:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004816:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004818:	61a9      	str	r1, [r5, #24]
 800481a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 800481e:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004820:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004824:	f8c8 b018 	str.w	fp, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004828:	f8d5 b014 	ldr.w	fp, [r5, #20]
 800482c:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 8004830:	61a3      	str	r3, [r4, #24]
 8004832:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004834:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004836:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004838:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800483a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800483e:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004842:	f8d5 b014 	ldr.w	fp, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004846:	f8df c190 	ldr.w	ip, [pc, #400]	; 80049d8 <SSD1963_Init+0x6c0>
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800484a:	f8c5 b014 	str.w	fp, [r5, #20]
	writeStrobe;
 800484e:	61a3      	str	r3, [r4, #24]
 8004850:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004852:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004854:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004856:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004858:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800485c:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004860:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004864:	f8c5 e014 	str.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004868:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
	writeStrobe;
 800486c:	61a3      	str	r3, [r4, #24]
 800486e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004870:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004872:	61a9      	str	r1, [r5, #24]
 8004874:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 8004878:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800487a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800487e:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004882:	f8d5 e014 	ldr.w	lr, [r5, #20]
 8004886:	f8c5 e014 	str.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800488a:	f44f 0e7f 	mov.w	lr, #16711680	; 0xff0000
	writeStrobe;
 800488e:	61a3      	str	r3, [r4, #24]
 8004890:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004892:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004894:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004896:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	CLR_CS;
 800489a:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800489c:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048a0:	f8c8 e018 	str.w	lr, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80048a4:	f8d5 e014 	ldr.w	lr, [r5, #20]
 80048a8:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 80048ac:	61a3      	str	r3, [r4, #24]
 80048ae:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80048b0:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048b2:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 80048b4:	61a2      	str	r2, [r4, #24]
 80048b6:	9201      	str	r2, [sp, #4]
	CLR_DC;
 80048b8:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048bc:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80048c0:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80048c4:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 80048c8:	61a3      	str	r3, [r4, #24]
 80048ca:	9300      	str	r3, [sp, #0]
 80048cc:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80048ce:	61a6      	str	r6, [r4, #24]
	HAL_Delay(10);
 80048d0:	f7fc fafe 	bl	8000ed0 <HAL_Delay>
	CLR_CS;
 80048d4:	9a01      	ldr	r2, [sp, #4]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048d6:	4835      	ldr	r0, [pc, #212]	; (80049ac <SSD1963_Init+0x694>)
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048d8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048dc:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048e0:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 80049dc <SSD1963_Init+0x6c4>
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048e4:	61ab      	str	r3, [r5, #24]
	CLR_CS;
 80048e6:	61a2      	str	r2, [r4, #24]
	CLR_DC;
 80048e8:	f8c4 a018 	str.w	sl, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048ec:	f8c8 0018 	str.w	r0, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80048f0:	6968      	ldr	r0, [r5, #20]
	writeStrobe;
 80048f2:	9b00      	ldr	r3, [sp, #0]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 80048f4:	6168      	str	r0, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 80048f6:	482e      	ldr	r0, [pc, #184]	; (80049b0 <SSD1963_Init+0x698>)
	writeStrobe;
 80048f8:	61a3      	str	r3, [r4, #24]
 80048fa:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80048fc:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 80048fe:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004900:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004902:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004906:	f8c8 0018 	str.w	r0, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800490a:	f8d5 e014 	ldr.w	lr, [r5, #20]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800490e:	4829      	ldr	r0, [pc, #164]	; (80049b4 <SSD1963_Init+0x69c>)
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004910:	f8c5 e014 	str.w	lr, [r5, #20]
	writeStrobe;
 8004914:	61a3      	str	r3, [r4, #24]
 8004916:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004918:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800491a:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800491c:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800491e:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004922:	f8c8 c018 	str.w	ip, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004926:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800492a:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800492e:	61a3      	str	r3, [r4, #24]
 8004930:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004932:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004934:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004936:	491c      	ldr	r1, [pc, #112]	; (80049a8 <SSD1963_Init+0x690>)
	CLR_CS;
 8004938:	61a2      	str	r2, [r4, #24]
	SET_DC;
 800493a:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800493e:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004942:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004946:	f8d5 c014 	ldr.w	ip, [r5, #20]
 800494a:	f8c5 c014 	str.w	ip, [r5, #20]
	writeStrobe;
 800494e:	61a3      	str	r3, [r4, #24]
 8004950:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004952:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004954:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 8004956:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004958:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800495c:	f8c8 0018 	str.w	r0, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004960:	6968      	ldr	r0, [r5, #20]
 8004962:	6168      	str	r0, [r5, #20]
	writeStrobe;
 8004964:	61a3      	str	r3, [r4, #24]
 8004966:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004968:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800496a:	61a9      	str	r1, [r5, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800496c:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
	CLR_CS;
 8004970:	61a2      	str	r2, [r4, #24]
	SET_DC;
 8004972:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004976:	f8c8 1018 	str.w	r1, [r8, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 800497a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 800497e:	6968      	ldr	r0, [r5, #20]
 8004980:	6168      	str	r0, [r5, #20]
	writeStrobe;
 8004982:	61a3      	str	r3, [r4, #24]
 8004984:	61a7      	str	r7, [r4, #24]
	SET_CS;
 8004986:	61a6      	str	r6, [r4, #24]
	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8004988:	61a9      	str	r1, [r5, #24]
	CLR_CS;
 800498a:	61a2      	str	r2, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 800498c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
	SET_DC;
 8004990:	f8c4 9018 	str.w	r9, [r4, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8004994:	f8c8 2018 	str.w	r2, [r8, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8004998:	696a      	ldr	r2, [r5, #20]
 800499a:	616a      	str	r2, [r5, #20]
	writeStrobe;
 800499c:	61a3      	str	r3, [r4, #24]
 800499e:	61a7      	str	r7, [r4, #24]
	SET_CS;
 80049a0:	61a6      	str	r6, [r4, #24]
	SSD1963_WriteData(0x0040); 					// brightness level 0x00 - 0xFF
	SSD1963_WriteData(0x0000); 					// minimum brightness level =  0x00 - 0xFF
	SSD1963_WriteData(0x0000);					// brightness prescalar 0x0 - 0xF


}
 80049a2:	b003      	add	sp, #12
 80049a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80049a8:	00fe0001 	.word	0x00fe0001
 80049ac:	004100be 	.word	0x004100be
 80049b0:	00fb0004 	.word	0x00fb0004
 80049b4:	00bf0040 	.word	0x00bf0040
 80049b8:	001200ed 	.word	0x001200ed
 80049bc:	004b00b4 	.word	0x004b00b4
 80049c0:	00eb0014 	.word	0x00eb0014
 80049c4:	00d3002c 	.word	0x00d3002c
 80049c8:	004900b6 	.word	0x004900b6
 80049cc:	00e1001e 	.word	0x00e1001e
 80049d0:	00f3000c 	.word	0x00f3000c
 80049d4:	00f90006 	.word	0x00f90006
 80049d8:	00d60029 	.word	0x00d60029
 80049dc:	003f00c0 	.word	0x003f00c0

080049e0 <Init_TOUCH_GPIO>:

I2C_HandleTypeDef hi2c;


void Init_TOUCH_GPIO(I2C_HandleTypeDef i2c_handle)
{
 80049e0:	b084      	sub	sp, #16
 80049e2:	b508      	push	{r3, lr}
 80049e4:	f10d 0c08 	add.w	ip, sp, #8
 80049e8:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	hi2c=i2c_handle;
 80049ec:	224c      	movs	r2, #76	; 0x4c
 80049ee:	4661      	mov	r1, ip
 80049f0:	4803      	ldr	r0, [pc, #12]	; (8004a00 <Init_TOUCH_GPIO+0x20>)
 80049f2:	f015 fc76 	bl	801a2e2 <memcpy>
}
 80049f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80049fa:	b004      	add	sp, #16
 80049fc:	4770      	bx	lr
 80049fe:	bf00      	nop
 8004a00:	20019748 	.word	0x20019748

08004a04 <STMPE610_Init>:

	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
}

void STMPE610_Init(void)
{
 8004a04:	b570      	push	{r4, r5, r6, lr}
 8004a06:	b084      	sub	sp, #16
	txbuf[0]=reg;
 8004a08:	f240 2303 	movw	r3, #515	; 0x203
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a0c:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004a10:	4d81      	ldr	r5, [pc, #516]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a12:	ac04      	add	r4, sp, #16
 8004a14:	f824 3d04 	strh.w	r3, [r4, #-4]!
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a18:	9600      	str	r6, [sp, #0]
 8004a1a:	2302      	movs	r3, #2
 8004a1c:	4622      	mov	r2, r4
 8004a1e:	2188      	movs	r1, #136	; 0x88
 8004a20:	4628      	mov	r0, r5
 8004a22:	f7fd f973 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004a26:	2800      	cmp	r0, #0
 8004a28:	d1f6      	bne.n	8004a18 <STMPE610_Init+0x14>
	STMPE610_Write(STMPE610_REG_SYS_CTRL1, 0x02);		// Software chip reset
	HAL_Delay(10);
 8004a2a:	200a      	movs	r0, #10
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a2c:	f44f 5640 	mov.w	r6, #12288	; 0x3000
	HAL_Delay(10);
 8004a30:	f7fc fa4e 	bl	8000ed0 <HAL_Delay>
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a34:	4d78      	ldr	r5, [pc, #480]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a36:	f240 4304 	movw	r3, #1028	; 0x404
 8004a3a:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a3e:	9600      	str	r6, [sp, #0]
 8004a40:	2302      	movs	r3, #2
 8004a42:	4622      	mov	r2, r4
 8004a44:	2188      	movs	r1, #136	; 0x88
 8004a46:	4628      	mov	r0, r5
 8004a48:	f7fd f960 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004a4c:	2800      	cmp	r0, #0
 8004a4e:	d1f6      	bne.n	8004a3e <STMPE610_Init+0x3a>
	txbuf[0]=reg;
 8004a50:	f240 330a 	movw	r3, #778	; 0x30a
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a54:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004a58:	4d6f      	ldr	r5, [pc, #444]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a5a:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a5e:	9600      	str	r6, [sp, #0]
 8004a60:	2302      	movs	r3, #2
 8004a62:	4622      	mov	r2, r4
 8004a64:	2188      	movs	r1, #136	; 0x88
 8004a66:	4628      	mov	r0, r5
 8004a68:	f7fd f950 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004a6c:	2800      	cmp	r0, #0
 8004a6e:	d1f6      	bne.n	8004a5e <STMPE610_Init+0x5a>
	txbuf[0]=reg;
 8004a70:	f644 0320 	movw	r3, #18464	; 0x4820
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a74:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004a78:	4d67      	ldr	r5, [pc, #412]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a7a:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a7e:	9600      	str	r6, [sp, #0]
 8004a80:	2302      	movs	r3, #2
 8004a82:	4622      	mov	r2, r4
 8004a84:	2188      	movs	r1, #136	; 0x88
 8004a86:	4628      	mov	r0, r5
 8004a88:	f7fd f940 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004a8c:	2800      	cmp	r0, #0
 8004a8e:	d1f6      	bne.n	8004a7e <STMPE610_Init+0x7a>
	
	STMPE610_Write(STMPE610_REG_SYS_CTRL2, 0x04);		// Temperature sensor clock off, GPIO clock off, touch clock on, ADC clock on
	STMPE610_Write(STMPE610_REG_INT_EN, 0x03);			// Interrupt on INT pin when there is a sample or a touch transition.
	//STMPE610_write_reg(STMPE610_REG_INT_EN, 0x00);						// Don't Interrupt on INT pin
	STMPE610_Write(STMPE610_REG_ADC_CTRL1, 0x48);		// ADC conversion time = 80 clock ticks, 12-bit ADC, internal voltage refernce
	HAL_Delay(2);
 8004a90:	2002      	movs	r0, #2
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a92:	f44f 5640 	mov.w	r6, #12288	; 0x3000
	HAL_Delay(2);
 8004a96:	f7fc fa1b 	bl	8000ed0 <HAL_Delay>
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004a9a:	4d5f      	ldr	r5, [pc, #380]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004a9c:	f240 1321 	movw	r3, #289	; 0x121
 8004aa0:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004aa4:	9600      	str	r6, [sp, #0]
 8004aa6:	2302      	movs	r3, #2
 8004aa8:	4622      	mov	r2, r4
 8004aaa:	2188      	movs	r1, #136	; 0x88
 8004aac:	4628      	mov	r0, r5
 8004aae:	f7fd f92d 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004ab2:	2800      	cmp	r0, #0
 8004ab4:	d1f6      	bne.n	8004aa4 <STMPE610_Init+0xa0>
	txbuf[0]=reg;
 8004ab6:	2317      	movs	r3, #23
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ab8:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004abc:	4d56      	ldr	r5, [pc, #344]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004abe:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ac2:	9600      	str	r6, [sp, #0]
 8004ac4:	2302      	movs	r3, #2
 8004ac6:	4622      	mov	r2, r4
 8004ac8:	2188      	movs	r1, #136	; 0x88
 8004aca:	4628      	mov	r0, r5
 8004acc:	f7fd f91e 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004ad0:	2800      	cmp	r0, #0
 8004ad2:	d1f6      	bne.n	8004ac2 <STMPE610_Init+0xbe>
	txbuf[0]=reg;
 8004ad4:	f24a 3341 	movw	r3, #41793	; 0xa341
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ad8:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004adc:	4d4e      	ldr	r5, [pc, #312]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004ade:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ae2:	9600      	str	r6, [sp, #0]
 8004ae4:	2302      	movs	r3, #2
 8004ae6:	4622      	mov	r2, r4
 8004ae8:	2188      	movs	r1, #136	; 0x88
 8004aea:	4628      	mov	r0, r5
 8004aec:	f7fd f90e 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004af0:	2800      	cmp	r0, #0
 8004af2:	d1f6      	bne.n	8004ae2 <STMPE610_Init+0xde>
	txbuf[0]=reg;
 8004af4:	f44f 73a5 	mov.w	r3, #330	; 0x14a
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004af8:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004afc:	4d46      	ldr	r5, [pc, #280]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004afe:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b02:	9600      	str	r6, [sp, #0]
 8004b04:	2302      	movs	r3, #2
 8004b06:	4622      	mov	r2, r4
 8004b08:	2188      	movs	r1, #136	; 0x88
 8004b0a:	4628      	mov	r0, r5
 8004b0c:	f7fd f8fe 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b10:	2800      	cmp	r0, #0
 8004b12:	d1f6      	bne.n	8004b02 <STMPE610_Init+0xfe>
	txbuf[0]=reg;
 8004b14:	f240 134b 	movw	r3, #331	; 0x14b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b18:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b1c:	4d3e      	ldr	r5, [pc, #248]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b1e:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b22:	9600      	str	r6, [sp, #0]
 8004b24:	2302      	movs	r3, #2
 8004b26:	4622      	mov	r2, r4
 8004b28:	2188      	movs	r1, #136	; 0x88
 8004b2a:	4628      	mov	r0, r5
 8004b2c:	f7fd f8ee 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b30:	2800      	cmp	r0, #0
 8004b32:	d1f6      	bne.n	8004b22 <STMPE610_Init+0x11e>
	txbuf[0]=reg;
 8004b34:	234b      	movs	r3, #75	; 0x4b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b36:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b3a:	4d37      	ldr	r5, [pc, #220]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b3c:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b40:	9600      	str	r6, [sp, #0]
 8004b42:	2302      	movs	r3, #2
 8004b44:	4622      	mov	r2, r4
 8004b46:	2188      	movs	r1, #136	; 0x88
 8004b48:	4628      	mov	r0, r5
 8004b4a:	f7fd f8df 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b4e:	2800      	cmp	r0, #0
 8004b50:	d1f6      	bne.n	8004b40 <STMPE610_Init+0x13c>
	txbuf[0]=reg;
 8004b52:	f240 7356 	movw	r3, #1878	; 0x756
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b56:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b5a:	4d2f      	ldr	r5, [pc, #188]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b5c:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b60:	9600      	str	r6, [sp, #0]
 8004b62:	2302      	movs	r3, #2
 8004b64:	4622      	mov	r2, r4
 8004b66:	2188      	movs	r1, #136	; 0x88
 8004b68:	4628      	mov	r0, r5
 8004b6a:	f7fd f8cf 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b6e:	2800      	cmp	r0, #0
 8004b70:	d1f6      	bne.n	8004b60 <STMPE610_Init+0x15c>
	txbuf[0]=reg;
 8004b72:	f44f 73ac 	mov.w	r3, #344	; 0x158
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b76:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b7a:	4d27      	ldr	r5, [pc, #156]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b7c:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b80:	9600      	str	r6, [sp, #0]
 8004b82:	2302      	movs	r3, #2
 8004b84:	4622      	mov	r2, r4
 8004b86:	2188      	movs	r1, #136	; 0x88
 8004b88:	4628      	mov	r0, r5
 8004b8a:	f7fd f8bf 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004b8e:	2800      	cmp	r0, #0
 8004b90:	d1f6      	bne.n	8004b80 <STMPE610_Init+0x17c>
	txbuf[0]=reg;
 8004b92:	f44f 5341 	mov.w	r3, #12352	; 0x3040
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004b96:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004b9a:	4d1f      	ldr	r5, [pc, #124]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004b9c:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004ba0:	9600      	str	r6, [sp, #0]
 8004ba2:	2302      	movs	r3, #2
 8004ba4:	4622      	mov	r2, r4
 8004ba6:	2188      	movs	r1, #136	; 0x88
 8004ba8:	4628      	mov	r0, r5
 8004baa:	f7fd f8af 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004bae:	2800      	cmp	r0, #0
 8004bb0:	d1f6      	bne.n	8004ba0 <STMPE610_Init+0x19c>
	txbuf[0]=reg;
 8004bb2:	f44f 5345 	mov.w	r3, #12608	; 0x3140
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004bb6:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004bba:	4d17      	ldr	r5, [pc, #92]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004bbc:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004bc0:	9600      	str	r6, [sp, #0]
 8004bc2:	2302      	movs	r3, #2
 8004bc4:	4622      	mov	r2, r4
 8004bc6:	2188      	movs	r1, #136	; 0x88
 8004bc8:	4628      	mov	r0, r5
 8004bca:	f7fd f89f 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004bce:	2800      	cmp	r0, #0
 8004bd0:	d1f6      	bne.n	8004bc0 <STMPE610_Init+0x1bc>
	txbuf[0]=reg;
 8004bd2:	f64f 730b 	movw	r3, #65291	; 0xff0b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004bd6:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004bda:	4d0f      	ldr	r5, [pc, #60]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004bdc:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004be0:	9600      	str	r6, [sp, #0]
 8004be2:	2302      	movs	r3, #2
 8004be4:	4622      	mov	r2, r4
 8004be6:	2188      	movs	r1, #136	; 0x88
 8004be8:	4628      	mov	r0, r5
 8004bea:	f7fd f88f 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004bee:	2800      	cmp	r0, #0
 8004bf0:	d1f6      	bne.n	8004be0 <STMPE610_Init+0x1dc>
	txbuf[0]=reg;
 8004bf2:	f240 1309 	movw	r3, #265	; 0x109
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004bf6:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004bfa:	4d07      	ldr	r5, [pc, #28]	; (8004c18 <STMPE610_Init+0x214>)
	txbuf[0]=reg;
 8004bfc:	f8ad 300c 	strh.w	r3, [sp, #12]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004c00:	9600      	str	r6, [sp, #0]
 8004c02:	2302      	movs	r3, #2
 8004c04:	4622      	mov	r2, r4
 8004c06:	2188      	movs	r1, #136	; 0x88
 8004c08:	4628      	mov	r0, r5
 8004c0a:	f7fd f87f 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004c0e:	2800      	cmp	r0, #0
 8004c10:	d1f6      	bne.n	8004c00 <STMPE610_Init+0x1fc>
	//STMPE610_write_reg(STMPE610_REG_TSC_CTRL, 0x32);						// X&Y, 16 reading window
	//STMPE610_write_reg(TMPE610_REG_TSC_CTRL, 0x33);						// X&Y, 16 reading window, TSC enable

	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);		// Clear all interrupts
	STMPE610_Write(STMPE610_REG_INT_CTRL, 0x01);		// Level interrupt, enable interrupts
}
 8004c12:	b004      	add	sp, #16
 8004c14:	bd70      	pop	{r4, r5, r6, pc}
 8004c16:	bf00      	nop
 8004c18:	20019748 	.word	0x20019748

08004c1c <STMPE610_read_xyz>:

uint8_t STMPE610_read_xyz(void)
{
 8004c1c:	b570      	push	{r4, r5, r6, lr}
 8004c1e:	224b      	movs	r2, #75	; 0x4b
 8004c20:	b086      	sub	sp, #24
	rxbuf[0] = 0;
 8004c22:	2300      	movs	r3, #0
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004c24:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004c28:	4c80      	ldr	r4, [pc, #512]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004c2a:	f88d 200d 	strb.w	r2, [sp, #13]
	rxbuf[0] = 0;
 8004c2e:	f88d 3014 	strb.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004c32:	9500      	str	r5, [sp, #0]
 8004c34:	2301      	movs	r3, #1
 8004c36:	f10d 020d 	add.w	r2, sp, #13
 8004c3a:	2188      	movs	r1, #136	; 0x88
 8004c3c:	4620      	mov	r0, r4
 8004c3e:	f7fd f865 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004c42:	2800      	cmp	r0, #0
 8004c44:	d1f5      	bne.n	8004c32 <STMPE610_read_xyz+0x16>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 8004c46:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004c4a:	4c78      	ldr	r4, [pc, #480]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004c4c:	9500      	str	r5, [sp, #0]
 8004c4e:	2301      	movs	r3, #1
 8004c50:	aa05      	add	r2, sp, #20
 8004c52:	2188      	movs	r1, #136	; 0x88
 8004c54:	4620      	mov	r0, r4
 8004c56:	f7fd f929 	bl	8001eac <HAL_I2C_Master_Receive>
 8004c5a:	2800      	cmp	r0, #0
 8004c5c:	d1f6      	bne.n	8004c4c <STMPE610_read_xyz+0x30>
	return rxbuf[0];
 8004c5e:	f89d 3014 	ldrb.w	r3, [sp, #20]
	uint8_t	status;

	// Is there something in the fifo
	status = STMPE610_ReadByte(STMPE610_REG_FIFO_STA);
	if ((status & 0x20))
 8004c62:	f013 0320 	ands.w	r3, r3, #32
 8004c66:	d03c      	beq.n	8004ce2 <STMPE610_read_xyz+0xc6>
	txbuf[0]=reg;
 8004c68:	f64f 730b 	movw	r3, #65291	; 0xff0b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004c6c:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004c70:	4c6e      	ldr	r4, [pc, #440]	; (8004e2c <STMPE610_read_xyz+0x210>)
	txbuf[0]=reg;
 8004c72:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004c76:	9500      	str	r5, [sp, #0]
 8004c78:	2302      	movs	r3, #2
 8004c7a:	aa05      	add	r2, sp, #20
 8004c7c:	2188      	movs	r1, #136	; 0x88
 8004c7e:	4620      	mov	r0, r4
 8004c80:	f7fd f844 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004c84:	2800      	cmp	r0, #0
 8004c86:	d1f6      	bne.n	8004c76 <STMPE610_read_xyz+0x5a>
 8004c88:	2340      	movs	r3, #64	; 0x40
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004c8a:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004c8e:	4c67      	ldr	r4, [pc, #412]	; (8004e2c <STMPE610_read_xyz+0x210>)
	rxbuf[0] = 0;
 8004c90:	f88d 0010 	strb.w	r0, [sp, #16]
 8004c94:	f88d 3014 	strb.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004c98:	9500      	str	r5, [sp, #0]
 8004c9a:	2301      	movs	r3, #1
 8004c9c:	aa05      	add	r2, sp, #20
 8004c9e:	2188      	movs	r1, #136	; 0x88
 8004ca0:	4620      	mov	r0, r4
 8004ca2:	f7fd f833 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004ca6:	2800      	cmp	r0, #0
 8004ca8:	d1f6      	bne.n	8004c98 <STMPE610_read_xyz+0x7c>
 8004caa:	ac04      	add	r4, sp, #16
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 8004cac:	f44f 5640 	mov.w	r6, #12288	; 0x3000
 8004cb0:	4d5e      	ldr	r5, [pc, #376]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004cb2:	9600      	str	r6, [sp, #0]
 8004cb4:	2301      	movs	r3, #1
 8004cb6:	4622      	mov	r2, r4
 8004cb8:	2188      	movs	r1, #136	; 0x88
 8004cba:	4628      	mov	r0, r5
 8004cbc:	f7fd f8f6 	bl	8001eac <HAL_I2C_Master_Receive>
 8004cc0:	2800      	cmp	r0, #0
 8004cc2:	d1f6      	bne.n	8004cb2 <STMPE610_read_xyz+0x96>
	{
		STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);
		if (!(STMPE610_ReadByte(STMPE610_REG_TSC_CTRL) & 0x80))
 8004cc4:	f99d 3010 	ldrsb.w	r3, [sp, #16]
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	f2c0 80ab 	blt.w	8004e24 <STMPE610_read_xyz+0x208>
		{
			x=0;
 8004cce:	4c58      	ldr	r4, [pc, #352]	; (8004e30 <STMPE610_read_xyz+0x214>)
			y=0;
			z=0;
	//		UART8_printf("true");
			return TRUE;
 8004cd0:	2301      	movs	r3, #1
			y=0;
 8004cd2:	4958      	ldr	r1, [pc, #352]	; (8004e34 <STMPE610_read_xyz+0x218>)
			z=0;
 8004cd4:	4a58      	ldr	r2, [pc, #352]	; (8004e38 <STMPE610_read_xyz+0x21c>)
			x=0;
 8004cd6:	8020      	strh	r0, [r4, #0]
			y=0;
 8004cd8:	8008      	strh	r0, [r1, #0]
			z=0;
 8004cda:	8010      	strh	r0, [r2, #0]
	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x00);		// FIFO reset disable
	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);


	return TRUE;
}
 8004cdc:	4618      	mov	r0, r3
 8004cde:	b006      	add	sp, #24
 8004ce0:	bd70      	pop	{r4, r5, r6, pc}
 8004ce2:	224d      	movs	r2, #77	; 0x4d
 8004ce4:	ac04      	add	r4, sp, #16
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8004ce6:	f242 7610 	movw	r6, #10000	; 0x2710
 8004cea:	4d50      	ldr	r5, [pc, #320]	; (8004e2c <STMPE610_read_xyz+0x210>)
	rxbuf[0] = 0;
 8004cec:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004cf0:	f88d 2010 	strb.w	r2, [sp, #16]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8004cf4:	9600      	str	r6, [sp, #0]
 8004cf6:	2301      	movs	r3, #1
 8004cf8:	4622      	mov	r2, r4
 8004cfa:	2188      	movs	r1, #136	; 0x88
 8004cfc:	4628      	mov	r0, r5
 8004cfe:	f7fd f805 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004d02:	2800      	cmp	r0, #0
 8004d04:	d1f6      	bne.n	8004cf4 <STMPE610_read_xyz+0xd8>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 2, 10000) != HAL_OK);
 8004d06:	f242 7510 	movw	r5, #10000	; 0x2710
 8004d0a:	4c48      	ldr	r4, [pc, #288]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004d0c:	9500      	str	r5, [sp, #0]
 8004d0e:	2302      	movs	r3, #2
 8004d10:	aa05      	add	r2, sp, #20
 8004d12:	2188      	movs	r1, #136	; 0x88
 8004d14:	4620      	mov	r0, r4
 8004d16:	f7fd f8c9 	bl	8001eac <HAL_I2C_Master_Receive>
 8004d1a:	2800      	cmp	r0, #0
 8004d1c:	d1f6      	bne.n	8004d0c <STMPE610_read_xyz+0xf0>
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8004d1e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8004d22:	214f      	movs	r1, #79	; 0x4f
 8004d24:	f89d 3015 	ldrb.w	r3, [sp, #21]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8004d28:	f242 7510 	movw	r5, #10000	; 0x2710
 8004d2c:	4c3f      	ldr	r4, [pc, #252]	; (8004e2c <STMPE610_read_xyz+0x210>)
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8004d2e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	x = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_X);
 8004d32:	4a3f      	ldr	r2, [pc, #252]	; (8004e30 <STMPE610_read_xyz+0x214>)
	rxbuf[0] = 0;
 8004d34:	f8ad 0014 	strh.w	r0, [sp, #20]
 8004d38:	f88d 100f 	strb.w	r1, [sp, #15]
	x = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_X);
 8004d3c:	8013      	strh	r3, [r2, #0]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8004d3e:	9500      	str	r5, [sp, #0]
 8004d40:	2301      	movs	r3, #1
 8004d42:	f10d 020f 	add.w	r2, sp, #15
 8004d46:	2188      	movs	r1, #136	; 0x88
 8004d48:	4620      	mov	r0, r4
 8004d4a:	f7fc ffdf 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004d4e:	2800      	cmp	r0, #0
 8004d50:	d1f5      	bne.n	8004d3e <STMPE610_read_xyz+0x122>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 2, 10000) != HAL_OK);
 8004d52:	f242 7510 	movw	r5, #10000	; 0x2710
 8004d56:	4c35      	ldr	r4, [pc, #212]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004d58:	9500      	str	r5, [sp, #0]
 8004d5a:	2302      	movs	r3, #2
 8004d5c:	aa05      	add	r2, sp, #20
 8004d5e:	2188      	movs	r1, #136	; 0x88
 8004d60:	4620      	mov	r0, r4
 8004d62:	f7fd f8a3 	bl	8001eac <HAL_I2C_Master_Receive>
 8004d66:	2800      	cmp	r0, #0
 8004d68:	d1f6      	bne.n	8004d58 <STMPE610_read_xyz+0x13c>
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8004d6a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8004d6e:	2151      	movs	r1, #81	; 0x51
 8004d70:	f89d 3015 	ldrb.w	r3, [sp, #21]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004d74:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004d78:	4c2c      	ldr	r4, [pc, #176]	; (8004e2c <STMPE610_read_xyz+0x210>)
	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8004d7a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	y = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_Y);
 8004d7e:	4a2d      	ldr	r2, [pc, #180]	; (8004e34 <STMPE610_read_xyz+0x218>)
	rxbuf[0] = 0;
 8004d80:	f88d 0014 	strb.w	r0, [sp, #20]
 8004d84:	f88d 100e 	strb.w	r1, [sp, #14]
	y = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_Y);
 8004d88:	8013      	strh	r3, [r2, #0]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8004d8a:	9500      	str	r5, [sp, #0]
 8004d8c:	2301      	movs	r3, #1
 8004d8e:	f10d 020e 	add.w	r2, sp, #14
 8004d92:	2188      	movs	r1, #136	; 0x88
 8004d94:	4620      	mov	r0, r4
 8004d96:	f7fc ffb9 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004d9a:	2800      	cmp	r0, #0
 8004d9c:	d1f5      	bne.n	8004d8a <STMPE610_read_xyz+0x16e>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 8004d9e:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004da2:	4c22      	ldr	r4, [pc, #136]	; (8004e2c <STMPE610_read_xyz+0x210>)
 8004da4:	9500      	str	r5, [sp, #0]
 8004da6:	2301      	movs	r3, #1
 8004da8:	aa05      	add	r2, sp, #20
 8004daa:	2188      	movs	r1, #136	; 0x88
 8004dac:	4620      	mov	r0, r4
 8004dae:	f7fd f87d 	bl	8001eac <HAL_I2C_Master_Receive>
 8004db2:	2800      	cmp	r0, #0
 8004db4:	d1f6      	bne.n	8004da4 <STMPE610_read_xyz+0x188>
	return rxbuf[0];
 8004db6:	f89d 1014 	ldrb.w	r1, [sp, #20]
	txbuf[0]=reg;
 8004dba:	f240 134b 	movw	r3, #331	; 0x14b
	z = STMPE610_ReadByte(STMPE610_REG_TSC_DATA_Z);
 8004dbe:	4a1e      	ldr	r2, [pc, #120]	; (8004e38 <STMPE610_read_xyz+0x21c>)
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004dc0:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004dc4:	4c19      	ldr	r4, [pc, #100]	; (8004e2c <STMPE610_read_xyz+0x210>)
	z = STMPE610_ReadByte(STMPE610_REG_TSC_DATA_Z);
 8004dc6:	8011      	strh	r1, [r2, #0]
	txbuf[0]=reg;
 8004dc8:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004dcc:	9500      	str	r5, [sp, #0]
 8004dce:	2302      	movs	r3, #2
 8004dd0:	aa05      	add	r2, sp, #20
 8004dd2:	2188      	movs	r1, #136	; 0x88
 8004dd4:	4620      	mov	r0, r4
 8004dd6:	f7fc ff99 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004dda:	2800      	cmp	r0, #0
 8004ddc:	d1f6      	bne.n	8004dcc <STMPE610_read_xyz+0x1b0>
	txbuf[0]=reg;
 8004dde:	234b      	movs	r3, #75	; 0x4b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004de0:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004de4:	4c11      	ldr	r4, [pc, #68]	; (8004e2c <STMPE610_read_xyz+0x210>)
	txbuf[0]=reg;
 8004de6:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004dea:	9500      	str	r5, [sp, #0]
 8004dec:	2302      	movs	r3, #2
 8004dee:	aa05      	add	r2, sp, #20
 8004df0:	2188      	movs	r1, #136	; 0x88
 8004df2:	4620      	mov	r0, r4
 8004df4:	f7fc ff8a 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004df8:	2800      	cmp	r0, #0
 8004dfa:	d1f6      	bne.n	8004dea <STMPE610_read_xyz+0x1ce>
	txbuf[0]=reg;
 8004dfc:	f64f 730b 	movw	r3, #65291	; 0xff0b
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004e00:	f44f 5540 	mov.w	r5, #12288	; 0x3000
 8004e04:	4c09      	ldr	r4, [pc, #36]	; (8004e2c <STMPE610_read_xyz+0x210>)
	txbuf[0]=reg;
 8004e06:	f8ad 3014 	strh.w	r3, [sp, #20]
	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 8004e0a:	9500      	str	r5, [sp, #0]
 8004e0c:	2302      	movs	r3, #2
 8004e0e:	aa05      	add	r2, sp, #20
 8004e10:	2188      	movs	r1, #136	; 0x88
 8004e12:	4620      	mov	r0, r4
 8004e14:	f7fc ff7a 	bl	8001d0c <HAL_I2C_Master_Transmit>
 8004e18:	2800      	cmp	r0, #0
 8004e1a:	d1f6      	bne.n	8004e0a <STMPE610_read_xyz+0x1ee>
	return TRUE;
 8004e1c:	2301      	movs	r3, #1
}
 8004e1e:	4618      	mov	r0, r3
 8004e20:	b006      	add	sp, #24
 8004e22:	bd70      	pop	{r4, r5, r6, pc}
		return FALSE;
 8004e24:	4603      	mov	r3, r0
}
 8004e26:	4618      	mov	r0, r3
 8004e28:	b006      	add	sp, #24
 8004e2a:	bd70      	pop	{r4, r5, r6, pc}
 8004e2c:	20019748 	.word	0x20019748
 8004e30:	20000418 	.word	0x20000418
 8004e34:	2000041a 	.word	0x2000041a
 8004e38:	2000041c 	.word	0x2000041c
 8004e3c:	00000000 	.word	0x00000000

08004e40 <STMPE610_GetX_TOUCH>:

uint16_t STMPE610_GetX_TOUCH(void)
{
 8004e40:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)x;
 8004e42:	4b13      	ldr	r3, [pc, #76]	; (8004e90 <STMPE610_GetX_TOUCH+0x50>)
	pom=480.0*(pom-GUI_TOUCH_AD_LEFT)/(GUI_TOUCH_AD_RIGHT-GUI_TOUCH_AD_LEFT);
 8004e44:	ed9f 7a13 	vldr	s14, [pc, #76]	; 8004e94 <STMPE610_GetX_TOUCH+0x54>
	pom=(float)x;
 8004e48:	881b      	ldrh	r3, [r3, #0]
 8004e4a:	ee07 3a90 	vmov	s15, r3
 8004e4e:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=480.0*(pom-GUI_TOUCH_AD_LEFT)/(GUI_TOUCH_AD_RIGHT-GUI_TOUCH_AD_LEFT);
 8004e52:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004e56:	ee17 0a90 	vmov	r0, s15
 8004e5a:	f7fb fb95 	bl	8000588 <__aeabi_f2d>
 8004e5e:	2200      	movs	r2, #0
 8004e60:	4b0d      	ldr	r3, [pc, #52]	; (8004e98 <STMPE610_GetX_TOUCH+0x58>)
 8004e62:	f7fb fbe9 	bl	8000638 <__aeabi_dmul>
 8004e66:	a308      	add	r3, pc, #32	; (adr r3, 8004e88 <STMPE610_GetX_TOUCH+0x48>)
 8004e68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e6c:	f7fb fd0e 	bl	800088c <__aeabi_ddiv>
 8004e70:	f7fb fe1c 	bl	8000aac <__aeabi_d2f>
	return (uint16_t)pom;
 8004e74:	ee07 0a90 	vmov	s15, r0
 8004e78:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 8004e7c:	ee17 3a90 	vmov	r3, s15
 8004e80:	b298      	uxth	r0, r3
 8004e82:	bd08      	pop	{r3, pc}
 8004e84:	f3af 8000 	nop.w
 8004e88:	00000000 	.word	0x00000000
 8004e8c:	40adc400 	.word	0x40adc400
 8004e90:	20000418 	.word	0x20000418
 8004e94:	43120000 	.word	0x43120000
 8004e98:	407e0000 	.word	0x407e0000
 8004e9c:	00000000 	.word	0x00000000

08004ea0 <STMPE610_GetY_TOUCH>:
uint16_t STMPE610_GetY_TOUCH(void)
{
 8004ea0:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)y;
 8004ea2:	4b13      	ldr	r3, [pc, #76]	; (8004ef0 <STMPE610_GetY_TOUCH+0x50>)
	pom=272.0*(pom-GUI_TOUCH_AD_TOP)/(GUI_TOUCH_AD_BOTTOM-GUI_TOUCH_AD_TOP);
 8004ea4:	ed9f 7a13 	vldr	s14, [pc, #76]	; 8004ef4 <STMPE610_GetY_TOUCH+0x54>
	pom=(float)y;
 8004ea8:	881b      	ldrh	r3, [r3, #0]
 8004eaa:	ee07 3a90 	vmov	s15, r3
 8004eae:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=272.0*(pom-GUI_TOUCH_AD_TOP)/(GUI_TOUCH_AD_BOTTOM-GUI_TOUCH_AD_TOP);
 8004eb2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004eb6:	ee17 0a90 	vmov	r0, s15
 8004eba:	f7fb fb65 	bl	8000588 <__aeabi_f2d>
 8004ebe:	2200      	movs	r2, #0
 8004ec0:	4b0d      	ldr	r3, [pc, #52]	; (8004ef8 <STMPE610_GetY_TOUCH+0x58>)
 8004ec2:	f7fb fbb9 	bl	8000638 <__aeabi_dmul>
 8004ec6:	a308      	add	r3, pc, #32	; (adr r3, 8004ee8 <STMPE610_GetY_TOUCH+0x48>)
 8004ec8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ecc:	f7fb fcde 	bl	800088c <__aeabi_ddiv>
 8004ed0:	f7fb fdec 	bl	8000aac <__aeabi_d2f>
	return (uint16_t)pom;
 8004ed4:	ee07 0a90 	vmov	s15, r0
 8004ed8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 8004edc:	ee17 3a90 	vmov	r3, s15
 8004ee0:	b298      	uxth	r0, r3
 8004ee2:	bd08      	pop	{r3, pc}
 8004ee4:	f3af 8000 	nop.w
 8004ee8:	00000000 	.word	0x00000000
 8004eec:	40abea00 	.word	0x40abea00
 8004ef0:	2000041a 	.word	0x2000041a
 8004ef4:	43870000 	.word	0x43870000
 8004ef8:	40710000 	.word	0x40710000

08004efc <STMPE610_GetX_TOUCH_RAW>:
	return (uint16_t)pom;
}

uint16_t STMPE610_GetX_TOUCH_RAW(void)
{
	return x;
 8004efc:	4b01      	ldr	r3, [pc, #4]	; (8004f04 <STMPE610_GetX_TOUCH_RAW+0x8>)
}
 8004efe:	8818      	ldrh	r0, [r3, #0]
 8004f00:	4770      	bx	lr
 8004f02:	bf00      	nop
 8004f04:	20000418 	.word	0x20000418

08004f08 <STMPE610_GetY_TOUCH_RAW>:
uint16_t STMPE610_GetY_TOUCH_RAW(void)
{
	return y;
 8004f08:	4b01      	ldr	r3, [pc, #4]	; (8004f10 <STMPE610_GetY_TOUCH_RAW+0x8>)
}
 8004f0a:	8818      	ldrh	r0, [r3, #0]
 8004f0c:	4770      	bx	lr
 8004f0e:	bf00      	nop
 8004f10:	2000041a 	.word	0x2000041a

08004f14 <VL53L1_LoadPatch>:

/* End Group PAL IRQ Triggered events Functions */


static VL53L1_Error VL53L1_LoadPatch(VL53L1_DEV Dev)
{
 8004f14:	b570      	push	{r4, r5, r6, lr}
	uint8_t comms_buffer[256];
	uint32_t patch_power;
	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE)
		status = VL53L1_WrByte(
 8004f16:	2200      	movs	r2, #0
{
 8004f18:	b0c0      	sub	sp, #256	; 0x100
		status = VL53L1_WrByte(
 8004f1a:	2185      	movs	r1, #133	; 0x85
{
 8004f1c:	4605      	mov	r5, r0
		status = VL53L1_WrByte(
 8004f1e:	f002 ffdf 	bl	8007ee0 <VL53L1_WrByte>
				Dev,
				VL53L1_FIRMWARE__ENABLE,
				0x00);
	/* Force GO1 on */
	if (status == VL53L1_ERROR_NONE)
 8004f22:	4604      	mov	r4, r0
 8004f24:	b110      	cbz	r0, 8004f2c <VL53L1_LoadPatch+0x18>
				0x01);

	LOG_FUNCTION_END(status);

	return status;
}
 8004f26:	4620      	mov	r0, r4
 8004f28:	b040      	add	sp, #256	; 0x100
 8004f2a:	bd70      	pop	{r4, r5, r6, pc}
		VL53L1_enable_powerforce(Dev);
 8004f2c:	4628      	mov	r0, r5
 8004f2e:	f002 fb19 	bl	8007564 <VL53L1_enable_powerforce>
	patch_tuning = BDTable[VL53L1_TUNING_PHASECAL_PATCH_POWER];
 8004f32:	4b2a      	ldr	r3, [pc, #168]	; (8004fdc <VL53L1_LoadPatch+0xc8>)
 8004f34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f36:	3b01      	subs	r3, #1
 8004f38:	2b02      	cmp	r3, #2
 8004f3a:	d802      	bhi.n	8004f42 <VL53L1_LoadPatch+0x2e>
 8004f3c:	4a28      	ldr	r2, [pc, #160]	; (8004fe0 <VL53L1_LoadPatch+0xcc>)
 8004f3e:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
		comms_buffer[0] = 0x29;
 8004f42:	4828      	ldr	r0, [pc, #160]	; (8004fe4 <VL53L1_LoadPatch+0xd0>)
		comms_buffer[4] = 0x28;
 8004f44:	2628      	movs	r6, #40	; 0x28
		status = VL53L1_WriteMulti(
 8004f46:	2306      	movs	r3, #6
 8004f48:	466a      	mov	r2, sp
		comms_buffer[0] = 0x29;
 8004f4a:	9000      	str	r0, [sp, #0]
		status = VL53L1_WriteMulti(
 8004f4c:	f240 4176 	movw	r1, #1142	; 0x476
 8004f50:	4628      	mov	r0, r5
		comms_buffer[5] = patch_power;
 8004f52:	f88d 4005 	strb.w	r4, [sp, #5]
		comms_buffer[4] = 0x28;
 8004f56:	f88d 6004 	strb.w	r6, [sp, #4]
		status = VL53L1_WriteMulti(
 8004f5a:	f002 ff69 	bl	8007e30 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE) {
 8004f5e:	4604      	mov	r4, r0
 8004f60:	2800      	cmp	r0, #0
 8004f62:	d1e0      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		comms_buffer[0] = 0x03;
 8004f64:	4820      	ldr	r0, [pc, #128]	; (8004fe8 <VL53L1_LoadPatch+0xd4>)
 8004f66:	f642 1407 	movw	r4, #10503	; 0x2907
		status = VL53L1_WriteMulti(
 8004f6a:	2306      	movs	r3, #6
 8004f6c:	466a      	mov	r2, sp
		comms_buffer[0] = 0x03;
 8004f6e:	9000      	str	r0, [sp, #0]
		status = VL53L1_WriteMulti(
 8004f70:	f240 4196 	movw	r1, #1174	; 0x496
 8004f74:	4628      	mov	r0, r5
		comms_buffer[0] = 0x03;
 8004f76:	f8ad 4004 	strh.w	r4, [sp, #4]
		status = VL53L1_WriteMulti(
 8004f7a:	f002 ff59 	bl	8007e30 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE) {
 8004f7e:	4604      	mov	r4, r0
 8004f80:	2800      	cmp	r0, #0
 8004f82:	d1d0      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		comms_buffer[0] = 0x00;
 8004f84:	f44f 66e0 	mov.w	r6, #1792	; 0x700
		status = VL53L1_WriteMulti(
 8004f88:	2302      	movs	r3, #2
 8004f8a:	466a      	mov	r2, sp
 8004f8c:	f240 4172 	movw	r1, #1138	; 0x472
 8004f90:	4628      	mov	r0, r5
		comms_buffer[0] = 0x00;
 8004f92:	f8ad 6000 	strh.w	r6, [sp]
		status = VL53L1_WriteMulti(
 8004f96:	f002 ff4b 	bl	8007e30 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE) {
 8004f9a:	4604      	mov	r4, r0
 8004f9c:	2800      	cmp	r0, #0
 8004f9e:	d1c2      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		status = VL53L1_WriteMulti(
 8004fa0:	466a      	mov	r2, sp
 8004fa2:	2302      	movs	r3, #2
 8004fa4:	f240 4174 	movw	r1, #1140	; 0x474
 8004fa8:	4628      	mov	r0, r5
		comms_buffer[0] = 0x00;
 8004faa:	f8ad 6000 	strh.w	r6, [sp]
		status = VL53L1_WriteMulti(
 8004fae:	f002 ff3f 	bl	8007e30 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE)
 8004fb2:	4604      	mov	r4, r0
 8004fb4:	2800      	cmp	r0, #0
 8004fb6:	d1b6      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		status = VL53L1_WrByte(
 8004fb8:	2201      	movs	r2, #1
 8004fba:	f44f 618e 	mov.w	r1, #1136	; 0x470
 8004fbe:	4628      	mov	r0, r5
 8004fc0:	f002 ff8e 	bl	8007ee0 <VL53L1_WrByte>
	if (status == VL53L1_ERROR_NONE)
 8004fc4:	4604      	mov	r4, r0
 8004fc6:	2800      	cmp	r0, #0
 8004fc8:	d1ad      	bne.n	8004f26 <VL53L1_LoadPatch+0x12>
		status = VL53L1_WrByte(
 8004fca:	4628      	mov	r0, r5
 8004fcc:	2201      	movs	r2, #1
 8004fce:	2185      	movs	r1, #133	; 0x85
 8004fd0:	f002 ff86 	bl	8007ee0 <VL53L1_WrByte>
 8004fd4:	4604      	mov	r4, r0
}
 8004fd6:	4620      	mov	r0, r4
 8004fd8:	b040      	add	sp, #256	; 0x100
 8004fda:	bd70      	pop	{r4, r5, r6, pc}
 8004fdc:	20000008 	.word	0x20000008
 8004fe0:	0801abc8 	.word	0x0801abc8
 8004fe4:	400ec929 	.word	0x400ec929
 8004fe8:	6f036d03 	.word	0x6f036d03

08004fec <VL53L1_DataInit>:
{
 8004fec:	b570      	push	{r4, r5, r6, lr}
		Status = VL53L1_data_init(Dev, 1);
 8004fee:	2101      	movs	r1, #1
{
 8004ff0:	4604      	mov	r4, r0
		Status = VL53L1_data_init(Dev, 1);
 8004ff2:	f000 faa9 	bl	8005548 <VL53L1_data_init>
	if (Status == VL53L1_ERROR_NONE)
 8004ff6:	4606      	mov	r6, r0
 8004ff8:	b9a0      	cbnz	r0, 8005024 <VL53L1_DataInit+0x38>
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_WAIT_STATICINIT);
 8004ffa:	2501      	movs	r5, #1
		tmpuint16 = VL53L1_FIXPOINT1616TOFIXPOINT142(value);
 8004ffc:	f8d4 1388 	ldr.w	r1, [r4, #904]	; 0x388
		VL53L1_set_lite_sigma_threshold(Dev, tmpuint16);
 8005000:	4620      	mov	r0, r4
 8005002:	f3c1 318f 	ubfx	r1, r1, #14, #16
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_WAIT_STATICINIT);
 8005006:	f884 5378 	strb.w	r5, [r4, #888]	; 0x378
		VL53L1_set_lite_sigma_threshold(Dev, tmpuint16);
 800500a:	f000 fd99 	bl	8005b40 <VL53L1_set_lite_sigma_threshold>
		tmpuint16 = VL53L1_FIXPOINT1616TOFIXPOINT97(value);
 800500e:	f8d4 138c 	ldr.w	r1, [r4, #908]	; 0x38c
		VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8005012:	f884 5384 	strb.w	r5, [r4, #900]	; 0x384
		VL53L1_set_lite_min_count_rate(Dev, tmpuint16);
 8005016:	4620      	mov	r0, r4
 8005018:	f3c1 214f 	ubfx	r1, r1, #9, #16
 800501c:	f000 fd94 	bl	8005b48 <VL53L1_set_lite_min_count_rate>
		VL53L1_SETARRAYPARAMETERFIELD(Dev,
 8005020:	f884 5385 	strb.w	r5, [r4, #901]	; 0x385
}
 8005024:	4630      	mov	r0, r6
 8005026:	bd70      	pop	{r4, r5, r6, pc}

08005028 <VL53L1_WaitDeviceBooted>:
	Status = VL53L1_poll_for_boot_completion(Dev,
 8005028:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800502c:	f002 bee0 	b.w	8007df0 <VL53L1_poll_for_boot_completion>

08005030 <VL53L1_SetDistanceMode>:
	if ((DistanceMode != VL53L1_DISTANCEMODE_SHORT) &&
 8005030:	1e4a      	subs	r2, r1, #1
	uint32_t TimingBudget = 0;
 8005032:	2300      	movs	r3, #0
{
 8005034:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	if ((DistanceMode != VL53L1_DISTANCEMODE_SHORT) &&
 8005038:	2a02      	cmp	r2, #2
{
 800503a:	b08d      	sub	sp, #52	; 0x34
	PresetMode = VL53L1DevDataGet(Dev, CurrentParameters.PresetMode);
 800503c:	f890 837c 	ldrb.w	r8, [r0, #892]	; 0x37c
	uint32_t PhaseCalTimeoutUs = 0;
 8005040:	9307      	str	r3, [sp, #28]
	uint32_t MmTimeoutUs = 0;
 8005042:	e9cd 3305 	strd	r3, r3, [sp, #20]
	if ((DistanceMode != VL53L1_DISTANCEMODE_SHORT) &&
 8005046:	d875      	bhi.n	8005134 <VL53L1_SetDistanceMode+0x104>
 8005048:	460d      	mov	r5, r1
		Status = VL53L1_get_user_zone(Dev, &user_zone);
 800504a:	a908      	add	r1, sp, #32
 800504c:	4604      	mov	r4, r0
 800504e:	f000 fc37 	bl	80058c0 <VL53L1_get_user_zone>
	if (Status == VL53L1_ERROR_NONE)
 8005052:	b110      	cbz	r0, 800505a <VL53L1_SetDistanceMode+0x2a>
}
 8005054:	b00d      	add	sp, #52	; 0x34
 8005056:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		Status = VL53L1_get_timeouts_us(Dev, &PhaseCalTimeoutUs,
 800505a:	ab05      	add	r3, sp, #20
 800505c:	aa06      	add	r2, sp, #24
 800505e:	a907      	add	r1, sp, #28
 8005060:	4620      	mov	r0, r4
	inter_measurement_period_ms =  VL53L1DevDataGet(Dev,
 8005062:	6967      	ldr	r7, [r4, #20]
		Status = VL53L1_get_timeouts_us(Dev, &PhaseCalTimeoutUs,
 8005064:	f000 fbcc 	bl	8005800 <VL53L1_get_timeouts_us>
 8005068:	4603      	mov	r3, r0
	if (Status == VL53L1_ERROR_NONE)
 800506a:	2800      	cmp	r0, #0
 800506c:	d1f2      	bne.n	8005054 <VL53L1_SetDistanceMode+0x24>
	if ((PresetMode == VL53L1_PRESETMODE_AUTONOMOUS) ||
 800506e:	f1b8 0f03 	cmp.w	r8, #3
	uint16_t dss_config__target_total_rate_mcps = 0;
 8005072:	f8ad 0012 	strh.w	r0, [sp, #18]
	uint32_t lld_range_config_timeout_us = 0;
 8005076:	900b      	str	r0, [sp, #44]	; 0x2c
	uint32_t mm_config_timeout_us = 0;
 8005078:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
	if ((PresetMode == VL53L1_PRESETMODE_AUTONOMOUS) ||
 800507c:	d01d      	beq.n	80050ba <VL53L1_SetDistanceMode+0x8a>
 800507e:	f1b8 0f08 	cmp.w	r8, #8
 8005082:	d01a      	beq.n	80050ba <VL53L1_SetDistanceMode+0x8a>
	switch (DistanceMode) {
 8005084:	2d01      	cmp	r5, #1
		measurement_mode  = VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK;
 8005086:	f04f 0920 	mov.w	r9, #32
	switch (DistanceMode) {
 800508a:	d01a      	beq.n	80050c2 <VL53L1_SetDistanceMode+0x92>
	default:
 800508c:	2d02      	cmp	r5, #2
 800508e:	bf0b      	itete	eq
 8005090:	2325      	moveq	r3, #37	; 0x25
 8005092:	2326      	movne	r3, #38	; 0x26
 8005094:	2606      	moveq	r6, #6
 8005096:	2608      	movne	r6, #8
 8005098:	bf0c      	ite	eq
 800509a:	2201      	moveq	r2, #1
 800509c:	2203      	movne	r2, #3
	switch (PresetMode) {
 800509e:	f1b8 0f04 	cmp.w	r8, #4
 80050a2:	d045      	beq.n	8005130 <VL53L1_SetDistanceMode+0x100>
 80050a4:	f1b8 0f08 	cmp.w	r8, #8
 80050a8:	d00f      	beq.n	80050ca <VL53L1_SetDistanceMode+0x9a>
 80050aa:	f1b8 0f03 	cmp.w	r8, #3
 80050ae:	d00d      	beq.n	80050cc <VL53L1_SetDistanceMode+0x9c>
		Status = VL53L1_ERROR_MODE_NOT_SUPPORTED;
 80050b0:	f06f 0007 	mvn.w	r0, #7
}
 80050b4:	b00d      	add	sp, #52	; 0x34
 80050b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	switch (DistanceMode) {
 80050ba:	2d01      	cmp	r5, #1
		measurement_mode  = VL53L1_DEVICEMEASUREMENTMODE_TIMED;
 80050bc:	f04f 0940 	mov.w	r9, #64	; 0x40
	switch (DistanceMode) {
 80050c0:	d1e4      	bne.n	800508c <VL53L1_SetDistanceMode+0x5c>
 80050c2:	2324      	movs	r3, #36	; 0x24
 80050c4:	2607      	movs	r6, #7
 80050c6:	2202      	movs	r2, #2
 80050c8:	e7e9      	b.n	800509e <VL53L1_SetDistanceMode+0x6e>
		*pDevicePresetMode = LowPowerTimedModes[DistIdx];
 80050ca:	461e      	mov	r6, r3
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 80050cc:	a90b      	add	r1, sp, #44	; 0x2c
 80050ce:	a80a      	add	r0, sp, #40	; 0x28
 80050d0:	ab09      	add	r3, sp, #36	; 0x24
 80050d2:	f10d 0212 	add.w	r2, sp, #18
 80050d6:	9101      	str	r1, [sp, #4]
 80050d8:	4631      	mov	r1, r6
 80050da:	9000      	str	r0, [sp, #0]
 80050dc:	4620      	mov	r0, r4
 80050de:	f000 fc01 	bl	80058e4 <VL53L1_get_preset_mode_timing_cfg>
	if (Status == VL53L1_ERROR_NONE)
 80050e2:	2800      	cmp	r0, #0
 80050e4:	d1b6      	bne.n	8005054 <VL53L1_SetDistanceMode+0x24>
		Status = VL53L1_set_preset_mode(
 80050e6:	4631      	mov	r1, r6
 80050e8:	9702      	str	r7, [sp, #8]
 80050ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80050ec:	4620      	mov	r0, r4
 80050ee:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80050f2:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 80050f6:	e9cd 6700 	strd	r6, r7, [sp]
 80050fa:	f000 fc47 	bl	800598c <VL53L1_set_preset_mode>
	if (Status == VL53L1_ERROR_NONE)
 80050fe:	2800      	cmp	r0, #0
 8005100:	d1a8      	bne.n	8005054 <VL53L1_SetDistanceMode+0x24>
		VL53L1DevDataSet(Dev, LLData.measurement_mode,
 8005102:	f884 9002 	strb.w	r9, [r4, #2]
		Status = VL53L1_set_timeouts_us(Dev, PhaseCalTimeoutUs,
 8005106:	4620      	mov	r0, r4
		VL53L1DevDataSet(Dev, CurrentParameters.PresetMode, PresetMode);
 8005108:	f884 837c 	strb.w	r8, [r4, #892]	; 0x37c
		VL53L1DevDataSet(Dev, CurrentParameters.DistanceMode,
 800510c:	f884 537d 	strb.w	r5, [r4, #893]	; 0x37d
		Status = VL53L1_set_timeouts_us(Dev, PhaseCalTimeoutUs,
 8005110:	9907      	ldr	r1, [sp, #28]
 8005112:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8005116:	f000 fb59 	bl	80057cc <VL53L1_set_timeouts_us>
		if (Status == VL53L1_ERROR_NONE)
 800511a:	2800      	cmp	r0, #0
 800511c:	d19a      	bne.n	8005054 <VL53L1_SetDistanceMode+0x24>
			VL53L1DevDataSet(Dev, LLData.range_config_timeout_us,
 800511e:	9b05      	ldr	r3, [sp, #20]
		Status = VL53L1_set_user_zone(Dev, &user_zone);
 8005120:	a908      	add	r1, sp, #32
 8005122:	4620      	mov	r0, r4
			VL53L1DevDataSet(Dev, LLData.range_config_timeout_us,
 8005124:	6123      	str	r3, [r4, #16]
		Status = VL53L1_set_user_zone(Dev, &user_zone);
 8005126:	f000 fbb9 	bl	800589c <VL53L1_set_user_zone>
}
 800512a:	b00d      	add	sp, #52	; 0x34
 800512c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		*pDevicePresetMode = LightModes[DistIdx];
 8005130:	4616      	mov	r6, r2
 8005132:	e7cb      	b.n	80050cc <VL53L1_SetDistanceMode+0x9c>
		return VL53L1_ERROR_INVALID_PARAMS;
 8005134:	f06f 0003 	mvn.w	r0, #3
 8005138:	e78c      	b.n	8005054 <VL53L1_SetDistanceMode+0x24>
 800513a:	bf00      	nop

0800513c <VL53L1_SetMeasurementTimingBudgetMicroSeconds>:
	if (MeasurementTimingBudgetMicroSeconds > 10000000)
 800513c:	4a47      	ldr	r2, [pc, #284]	; (800525c <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x120>)
	uint8_t Mm1Enabled = 0;
 800513e:	2300      	movs	r3, #0
{
 8005140:	b570      	push	{r4, r5, r6, lr}
	if (MeasurementTimingBudgetMicroSeconds > 10000000)
 8005142:	4291      	cmp	r1, r2
{
 8005144:	b086      	sub	sp, #24
	uint8_t Mm1Enabled = 0;
 8005146:	f88d 3006 	strb.w	r3, [sp, #6]
	uint8_t Mm2Enabled = 0;
 800514a:	f88d 3007 	strb.w	r3, [sp, #7]
	uint32_t PhaseCalTimeoutUs = 0;
 800514e:	9304      	str	r3, [sp, #16]
	uint32_t MmTimeoutUs = 0;
 8005150:	e9cd 3302 	strd	r3, r3, [sp, #8]
	if (MeasurementTimingBudgetMicroSeconds > 10000000)
 8005154:	d903      	bls.n	800515e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x22>
			Status = VL53L1_ERROR_MODE_NOT_SUPPORTED;
 8005156:	f06f 0003 	mvn.w	r0, #3
}
 800515a:	b006      	add	sp, #24
 800515c:	bd70      	pop	{r4, r5, r6, pc}
 800515e:	460d      	mov	r5, r1
	Status = VL53L1_get_sequence_config_bit(Dev,
 8005160:	f10d 0206 	add.w	r2, sp, #6
 8005164:	2105      	movs	r1, #5
 8005166:	4604      	mov	r4, r0
 8005168:	f000 fb80 	bl	800586c <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE) {
 800516c:	2800      	cmp	r0, #0
 800516e:	d1f4      	bne.n	800515a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
	Status = VL53L1_get_sequence_config_bit(Dev,
 8005170:	f10d 0207 	add.w	r2, sp, #7
 8005174:	2106      	movs	r1, #6
 8005176:	4620      	mov	r0, r4
 8005178:	f000 fb78 	bl	800586c <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE)
 800517c:	2800      	cmp	r0, #0
 800517e:	d1ec      	bne.n	800515a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
		Status = VL53L1_get_timeouts_us(Dev,
 8005180:	ab02      	add	r3, sp, #8
 8005182:	aa03      	add	r2, sp, #12
 8005184:	a904      	add	r1, sp, #16
 8005186:	4620      	mov	r0, r4
 8005188:	f000 fb3a 	bl	8005800 <VL53L1_get_timeouts_us>
	if (Status == VL53L1_ERROR_NONE) {
 800518c:	2800      	cmp	r0, #0
 800518e:	d1e4      	bne.n	800515a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
		switch (PresetMode) {
 8005190:	f894 337c 	ldrb.w	r3, [r4, #892]	; 0x37c
 8005194:	2b04      	cmp	r3, #4
 8005196:	d040      	beq.n	800521a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xde>
 8005198:	2b08      	cmp	r3, #8
 800519a:	d02a      	beq.n	80051f2 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xb6>
 800519c:	2b03      	cmp	r3, #3
 800519e:	d005      	beq.n	80051ac <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x70>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 80051a0:	2d00      	cmp	r5, #0
 80051a2:	d0d8      	beq.n	8005156 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
			Status = VL53L1_ERROR_MODE_NOT_SUPPORTED;
 80051a4:	f06f 0007 	mvn.w	r0, #7
}
 80051a8:	b006      	add	sp, #24
 80051aa:	bd70      	pop	{r4, r5, r6, pc}
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 80051ac:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80051b0:	2b01      	cmp	r3, #1
 80051b2:	d04a      	beq.n	800524a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x10e>
 80051b4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80051b8:	2b01      	cmp	r3, #1
 80051ba:	d046      	beq.n	800524a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x10e>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 80051bc:	f245 4360 	movw	r3, #21600	; 0x5460
 80051c0:	429d      	cmp	r5, r3
 80051c2:	d9c8      	bls.n	8005156 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 80051c4:	4b26      	ldr	r3, [pc, #152]	; (8005260 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x124>)
			divisor = 2;
 80051c6:	2602      	movs	r6, #2
			FDAMaxTimingBudgetUs *= 2;
 80051c8:	4a26      	ldr	r2, [pc, #152]	; (8005264 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x128>)
					- TimingGuard);
 80051ca:	442b      	add	r3, r5
			if (TimingBudget > FDAMaxTimingBudgetUs)
 80051cc:	4293      	cmp	r3, r2
 80051ce:	d8c2      	bhi.n	8005156 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
				Status = VL53L1_set_timeouts_us(
 80051d0:	9a03      	ldr	r2, [sp, #12]
 80051d2:	4620      	mov	r0, r4
 80051d4:	9904      	ldr	r1, [sp, #16]
				TimingBudget /= divisor;
 80051d6:	fbb3 f6f6 	udiv	r6, r3, r6
				Status = VL53L1_set_timeouts_us(
 80051da:	4633      	mov	r3, r6
				TimingBudget /= divisor;
 80051dc:	9602      	str	r6, [sp, #8]
				Status = VL53L1_set_timeouts_us(
 80051de:	f000 faf5 	bl	80057cc <VL53L1_set_timeouts_us>
			if (Status == VL53L1_ERROR_NONE)
 80051e2:	2800      	cmp	r0, #0
 80051e4:	d1b9      	bne.n	800515a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1e>
				VL53L1DevDataSet(Dev,
 80051e6:	9b02      	ldr	r3, [sp, #8]
		VL53L1DevDataSet(Dev,
 80051e8:	f8c4 5380 	str.w	r5, [r4, #896]	; 0x380
				VL53L1DevDataSet(Dev,
 80051ec:	6123      	str	r3, [r4, #16]
}
 80051ee:	b006      	add	sp, #24
 80051f0:	bd70      	pop	{r4, r5, r6, pc}
			VL53L1_get_tuning_parm(Dev,
 80051f2:	aa05      	add	r2, sp, #20
 80051f4:	f248 0136 	movw	r1, #32822	; 0x8036
 80051f8:	4620      	mov	r0, r4
 80051fa:	f000 fe91 	bl	8005f20 <VL53L1_get_tuning_parm>
			if (vhv_loops > 0) {
 80051fe:	9a05      	ldr	r2, [sp, #20]
 8005200:	2a00      	cmp	r2, #0
 8005202:	dd27      	ble.n	8005254 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x118>
				vhv += vhv_loops *
 8005204:	23f5      	movs	r3, #245	; 0xf5
 8005206:	fb03 f302 	mul.w	r3, r3, r2
 800520a:	f603 63d1 	addw	r3, r3, #3793	; 0xed1
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 800520e:	429d      	cmp	r5, r3
 8005210:	d9a1      	bls.n	8005156 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 8005212:	1aeb      	subs	r3, r5, r3
			FDAMaxTimingBudgetUs *= 2;
 8005214:	4a13      	ldr	r2, [pc, #76]	; (8005264 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x128>)
			divisor = 2;
 8005216:	2602      	movs	r6, #2
 8005218:	e7d8      	b.n	80051cc <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x90>
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 800521a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800521e:	2b01      	cmp	r3, #1
 8005220:	d00b      	beq.n	800523a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xfe>
 8005222:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8005226:	2b01      	cmp	r3, #1
 8005228:	d007      	beq.n	800523a <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xfe>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 800522a:	f5b5 7f7a 	cmp.w	r5, #1000	; 0x3e8
 800522e:	d992      	bls.n	8005156 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 8005230:	f5a5 737a 	sub.w	r3, r5, #1000	; 0x3e8
	uint32_t FDAMaxTimingBudgetUs = FDA_MAX_TIMING_BUDGET_US;
 8005234:	4a0c      	ldr	r2, [pc, #48]	; (8005268 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x12c>)
		divisor = 1;
 8005236:	2601      	movs	r6, #1
 8005238:	e7c8      	b.n	80051cc <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x90>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 800523a:	f241 3388 	movw	r3, #5000	; 0x1388
 800523e:	429d      	cmp	r5, r3
 8005240:	d989      	bls.n	8005156 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
					- TimingGuard);
 8005242:	1aeb      	subs	r3, r5, r3
	uint32_t FDAMaxTimingBudgetUs = FDA_MAX_TIMING_BUDGET_US;
 8005244:	4a08      	ldr	r2, [pc, #32]	; (8005268 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x12c>)
		divisor = 1;
 8005246:	2601      	movs	r6, #1
 8005248:	e7c0      	b.n	80051cc <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x90>
		if (MeasurementTimingBudgetMicroSeconds <= TimingGuard)
 800524a:	f246 73e8 	movw	r3, #26600	; 0x67e8
 800524e:	429d      	cmp	r5, r3
 8005250:	d981      	bls.n	8005156 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0x1a>
 8005252:	e7de      	b.n	8005212 <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xd6>
 8005254:	f640 63d1 	movw	r3, #3793	; 0xed1
 8005258:	e7d9      	b.n	800520e <VL53L1_SetMeasurementTimingBudgetMicroSeconds+0xd2>
 800525a:	bf00      	nop
 800525c:	00989680 	.word	0x00989680
 8005260:	ffffaba0 	.word	0xffffaba0
 8005264:	0010c8e0 	.word	0x0010c8e0
 8005268:	00086470 	.word	0x00086470

0800526c <VL53L1_StaticInit>:
	VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_IDLE);
 800526c:	2203      	movs	r2, #3
	VL53L1DevDataSet(Dev, LLData.measurement_mode, measurement_mode);
 800526e:	2320      	movs	r3, #32
{
 8005270:	b530      	push	{r4, r5, lr}
 8005272:	b089      	sub	sp, #36	; 0x24
	VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_IDLE);
 8005274:	f880 2378 	strb.w	r2, [r0, #888]	; 0x378
	VL53L1DevDataSet(Dev, LLData.measurement_mode, measurement_mode);
 8005278:	7083      	strb	r3, [r0, #2]
{
 800527a:	4604      	mov	r4, r0
	Status = VL53L1_low_power_auto_data_init(Dev);
 800527c:	f002 faa0 	bl	80077c0 <VL53L1_low_power_auto_data_init>
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8005280:	aa07      	add	r2, sp, #28
 8005282:	ab06      	add	r3, sp, #24
	uint16_t dss_config__target_total_rate_mcps = 0;
 8005284:	2500      	movs	r5, #0
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8005286:	4620      	mov	r0, r4
 8005288:	2126      	movs	r1, #38	; 0x26
	uint16_t dss_config__target_total_rate_mcps = 0;
 800528a:	f8ad 5012 	strh.w	r5, [sp, #18]
	uint32_t lld_range_config_timeout_us = 0;
 800528e:	9507      	str	r5, [sp, #28]
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 8005290:	e9cd 3200 	strd	r3, r2, [sp]
 8005294:	ab05      	add	r3, sp, #20
 8005296:	f10d 0212 	add.w	r2, sp, #18
	uint32_t mm_config_timeout_us = 0;
 800529a:	e9cd 5505 	strd	r5, r5, [sp, #20]
		Status =  VL53L1_get_preset_mode_timing_cfg(Dev,
 800529e:	f000 fb21 	bl	80058e4 <VL53L1_get_preset_mode_timing_cfg>
	if (Status == VL53L1_ERROR_NONE)
 80052a2:	b120      	cbz	r0, 80052ae <VL53L1_StaticInit+0x42>
	VL53L1DevDataSet(Dev, CurrentParameters.PresetMode,
 80052a4:	2308      	movs	r3, #8
 80052a6:	f884 337c 	strb.w	r3, [r4, #892]	; 0x37c
}
 80052aa:	b009      	add	sp, #36	; 0x24
 80052ac:	bd30      	pop	{r4, r5, pc}
		Status = VL53L1_set_preset_mode(
 80052ae:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 80052b2:	9807      	ldr	r0, [sp, #28]
 80052b4:	9b05      	ldr	r3, [sp, #20]
 80052b6:	2126      	movs	r1, #38	; 0x26
 80052b8:	9502      	str	r5, [sp, #8]
 80052ba:	9d06      	ldr	r5, [sp, #24]
 80052bc:	9001      	str	r0, [sp, #4]
 80052be:	4620      	mov	r0, r4
 80052c0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80052c4:	9500      	str	r5, [sp, #0]
 80052c6:	f000 fb61 	bl	800598c <VL53L1_set_preset_mode>
	if (Status == VL53L1_ERROR_NONE)
 80052ca:	2800      	cmp	r0, #0
 80052cc:	d1ea      	bne.n	80052a4 <VL53L1_StaticInit+0x38>
		VL53L1DevDataSet(Dev, LLData.measurement_mode,
 80052ce:	2240      	movs	r2, #64	; 0x40
		VL53L1DevDataSet(Dev, CurrentParameters.PresetMode, PresetMode);
 80052d0:	2308      	movs	r3, #8
			Status = VL53L1_SetMeasurementTimingBudgetMicroSeconds(
 80052d2:	f24a 0128 	movw	r1, #41000	; 0xa028
 80052d6:	4620      	mov	r0, r4
		VL53L1DevDataSet(Dev, LLData.measurement_mode,
 80052d8:	70a2      	strb	r2, [r4, #2]
		VL53L1DevDataSet(Dev, CurrentParameters.PresetMode, PresetMode);
 80052da:	f884 337c 	strb.w	r3, [r4, #892]	; 0x37c
			Status = VL53L1_SetMeasurementTimingBudgetMicroSeconds(
 80052de:	f7ff ff2d 	bl	800513c <VL53L1_SetMeasurementTimingBudgetMicroSeconds>
	if (Status == VL53L1_ERROR_NONE) {
 80052e2:	2800      	cmp	r0, #0
 80052e4:	d1de      	bne.n	80052a4 <VL53L1_StaticInit+0x38>
	Status = VL53L1_set_inter_measurement_period_ms(Dev,
 80052e6:	f44f 6185 	mov.w	r1, #1064	; 0x428
 80052ea:	4620      	mov	r0, r4
 80052ec:	f000 fa52 	bl	8005794 <VL53L1_set_inter_measurement_period_ms>
	VL53L1DevDataSet(Dev, CurrentParameters.PresetMode,
 80052f0:	2308      	movs	r3, #8
 80052f2:	f884 337c 	strb.w	r3, [r4, #892]	; 0x37c
}
 80052f6:	b009      	add	sp, #36	; 0x24
 80052f8:	bd30      	pop	{r4, r5, pc}
 80052fa:	bf00      	nop

080052fc <VL53L1_SetInterMeasurementPeriodMilliSeconds>:
	adjustedIMP += (adjustedIMP * 64) / 1000;
 80052fc:	018b      	lsls	r3, r1, #6
 80052fe:	4a03      	ldr	r2, [pc, #12]	; (800530c <VL53L1_SetInterMeasurementPeriodMilliSeconds+0x10>)
 8005300:	fba2 2303 	umull	r2, r3, r2, r3
	Status = VL53L1_set_inter_measurement_period_ms(Dev,
 8005304:	eb01 1193 	add.w	r1, r1, r3, lsr #6
 8005308:	f000 ba44 	b.w	8005794 <VL53L1_set_inter_measurement_period_ms>
 800530c:	10624dd3 	.word	0x10624dd3

08005310 <VL53L1_StartMeasurement>:
{
 8005310:	b5f0      	push	{r4, r5, r6, r7, lr}
	DeviceMeasurementMode = VL53L1DevDataGet(Dev, LLData.measurement_mode);
 8005312:	7885      	ldrb	r5, [r0, #2]
{
 8005314:	b087      	sub	sp, #28
 8005316:	4604      	mov	r4, r0
	if (DeviceMeasurementMode != VL53L1_DEVICEMEASUREMENTMODE_TIMED)
 8005318:	2d40      	cmp	r5, #64	; 0x40
 800531a:	d137      	bne.n	800538c <VL53L1_StartMeasurement+0x7c>
	switch (CurrPalState) {
 800531c:	f890 3378 	ldrb.w	r3, [r0, #888]	; 0x378
 8005320:	2b05      	cmp	r3, #5
 8005322:	d82c      	bhi.n	800537e <VL53L1_StartMeasurement+0x6e>
 8005324:	2b04      	cmp	r3, #4
 8005326:	d23b      	bcs.n	80053a0 <VL53L1_StartMeasurement+0x90>
 8005328:	2b02      	cmp	r3, #2
 800532a:	d939      	bls.n	80053a0 <VL53L1_StartMeasurement+0x90>
	uint8_t Mm1Enabled = 0;
 800532c:	2300      	movs	r3, #0
	Status = VL53L1_get_sequence_config_bit(Dev,
 800532e:	f10d 0206 	add.w	r2, sp, #6
 8005332:	2105      	movs	r1, #5
	uint8_t Mm1Enabled = 0;
 8005334:	f88d 3006 	strb.w	r3, [sp, #6]
	uint8_t Mm2Enabled = 0;
 8005338:	f88d 3007 	strb.w	r3, [sp, #7]
	uint32_t PhaseCalTimeoutUs = 0;
 800533c:	9304      	str	r3, [sp, #16]
	uint32_t  RangeTimeoutUs = 0;
 800533e:	e9cd 3302 	strd	r3, r3, [sp, #8]
	Status = VL53L1_get_sequence_config_bit(Dev,
 8005342:	f000 fa93 	bl	800586c <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE)
 8005346:	b370      	cbz	r0, 80053a6 <VL53L1_StartMeasurement+0x96>
		switch (PresetMode) {
 8005348:	2604      	movs	r6, #4
 800534a:	af05      	add	r7, sp, #20
	Status = VL53L1_get_inter_measurement_period_ms(Dev, &adjustedIMP);
 800534c:	4639      	mov	r1, r7
 800534e:	4620      	mov	r0, r4
 8005350:	f000 fa2e 	bl	80057b0 <VL53L1_get_inter_measurement_period_ms>
	adjustedIMP -= (adjustedIMP * 64) / 1000;
 8005354:	9b05      	ldr	r3, [sp, #20]
 8005356:	4947      	ldr	r1, [pc, #284]	; (8005474 <VL53L1_StartMeasurement+0x164>)
 8005358:	019a      	lsls	r2, r3, #6
 800535a:	fba1 1202 	umull	r1, r2, r1, r2
 800535e:	eba3 1392 	sub.w	r3, r3, r2, lsr #6
		if (IMPms < MTBus + TIMED_MODE_TIMING_GUARD_MILLISECONDS)
 8005362:	42b3      	cmp	r3, r6
 8005364:	f0c0 8083 	bcc.w	800546e <VL53L1_StartMeasurement+0x15e>
		Status = VL53L1_init_and_start_range(
 8005368:	4629      	mov	r1, r5
 800536a:	2206      	movs	r2, #6
 800536c:	4620      	mov	r0, r4
 800536e:	f000 fbef 	bl	8005b50 <VL53L1_init_and_start_range>
	if (Status == VL53L1_ERROR_NONE)
 8005372:	b948      	cbnz	r0, 8005388 <VL53L1_StartMeasurement+0x78>
		VL53L1DevDataSet(Dev, PalState, VL53L1_STATE_RUNNING);
 8005374:	2304      	movs	r3, #4
 8005376:	f884 3378 	strb.w	r3, [r4, #888]	; 0x378
}
 800537a:	b007      	add	sp, #28
 800537c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	switch (CurrPalState) {
 800537e:	3b62      	subs	r3, #98	; 0x62
 8005380:	2b01      	cmp	r3, #1
 8005382:	d90d      	bls.n	80053a0 <VL53L1_StartMeasurement+0x90>
		Status = VL53L1_ERROR_UNDEFINED;
 8005384:	f06f 0002 	mvn.w	r0, #2
}
 8005388:	b007      	add	sp, #28
 800538a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		VL53L1_LoadPatch(Dev);
 800538c:	f7ff fdc2 	bl	8004f14 <VL53L1_LoadPatch>
	switch (CurrPalState) {
 8005390:	f894 3378 	ldrb.w	r3, [r4, #888]	; 0x378
 8005394:	2b05      	cmp	r3, #5
 8005396:	d8f2      	bhi.n	800537e <VL53L1_StartMeasurement+0x6e>
 8005398:	2b04      	cmp	r3, #4
 800539a:	d201      	bcs.n	80053a0 <VL53L1_StartMeasurement+0x90>
 800539c:	2b02      	cmp	r3, #2
 800539e:	d8e3      	bhi.n	8005368 <VL53L1_StartMeasurement+0x58>
		Status = VL53L1_ERROR_INVALID_COMMAND;
 80053a0:	f06f 000d 	mvn.w	r0, #13
 80053a4:	e7f0      	b.n	8005388 <VL53L1_StartMeasurement+0x78>
	Status = VL53L1_get_sequence_config_bit(Dev,
 80053a6:	f10d 0207 	add.w	r2, sp, #7
 80053aa:	2106      	movs	r1, #6
 80053ac:	4620      	mov	r0, r4
 80053ae:	f000 fa5d 	bl	800586c <VL53L1_get_sequence_config_bit>
	if (Status == VL53L1_ERROR_NONE)
 80053b2:	2800      	cmp	r0, #0
 80053b4:	d1c8      	bne.n	8005348 <VL53L1_StartMeasurement+0x38>
		Status = VL53L1_get_timeouts_us(Dev,
 80053b6:	ab03      	add	r3, sp, #12
 80053b8:	aa02      	add	r2, sp, #8
 80053ba:	a904      	add	r1, sp, #16
 80053bc:	4620      	mov	r0, r4
 80053be:	f000 fa1f 	bl	8005800 <VL53L1_get_timeouts_us>
	if (Status == VL53L1_ERROR_NONE) {
 80053c2:	2800      	cmp	r0, #0
 80053c4:	d1c0      	bne.n	8005348 <VL53L1_StartMeasurement+0x38>
		switch (PresetMode) {
 80053c6:	f894 337c 	ldrb.w	r3, [r4, #892]	; 0x37c
 80053ca:	2b04      	cmp	r3, #4
 80053cc:	d030      	beq.n	8005430 <VL53L1_StartMeasurement+0x120>
 80053ce:	2b08      	cmp	r3, #8
 80053d0:	d015      	beq.n	80053fe <VL53L1_StartMeasurement+0xee>
 80053d2:	2b03      	cmp	r3, #3
 80053d4:	d1b8      	bne.n	8005348 <VL53L1_StartMeasurement+0x38>
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 80053d6:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80053da:	9a03      	ldr	r2, [sp, #12]
 80053dc:	2b01      	cmp	r3, #1
 80053de:	d039      	beq.n	8005454 <VL53L1_StartMeasurement+0x144>
 80053e0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80053e4:	2b01      	cmp	r3, #1
 80053e6:	d035      	beq.n	8005454 <VL53L1_StartMeasurement+0x144>
				MeasTimingBdg = 2 * RangeTimeoutUs + 21600;
 80053e8:	f642 2330 	movw	r3, #10800	; 0x2a30
 80053ec:	4413      	add	r3, r2
 80053ee:	4921      	ldr	r1, [pc, #132]	; (8005474 <VL53L1_StartMeasurement+0x164>)
 80053f0:	af05      	add	r7, sp, #20
 80053f2:	005e      	lsls	r6, r3, #1
 80053f4:	fba1 3606 	umull	r3, r6, r1, r6
 80053f8:	09b6      	lsrs	r6, r6, #6
 80053fa:	3604      	adds	r6, #4
 80053fc:	e7a6      	b.n	800534c <VL53L1_StartMeasurement+0x3c>
			VL53L1_get_tuning_parm(Dev,
 80053fe:	af05      	add	r7, sp, #20
 8005400:	f248 0136 	movw	r1, #32822	; 0x8036
 8005404:	4620      	mov	r0, r4
				vhv += vhv_loops *
 8005406:	26f5      	movs	r6, #245	; 0xf5
			VL53L1_get_tuning_parm(Dev,
 8005408:	463a      	mov	r2, r7
 800540a:	f000 fd89 	bl	8005f20 <VL53L1_get_tuning_parm>
			if (vhv_loops > 0) {
 800540e:	9b05      	ldr	r3, [sp, #20]
 8005410:	2b00      	cmp	r3, #0
 8005412:	dd02      	ble.n	800541a <VL53L1_StartMeasurement+0x10a>
				vhv += vhv_loops *
 8005414:	fb06 f603 	mul.w	r6, r6, r3
 8005418:	36f5      	adds	r6, #245	; 0xf5
			MeasTimingBdg = 2 * RangeTimeoutUs + TimingGuard;
 800541a:	9a03      	ldr	r2, [sp, #12]
 800541c:	4b15      	ldr	r3, [pc, #84]	; (8005474 <VL53L1_StartMeasurement+0x164>)
 800541e:	eb06 0642 	add.w	r6, r6, r2, lsl #1
 8005422:	f606 56dc 	addw	r6, r6, #3548	; 0xddc
 8005426:	fba3 3606 	umull	r3, r6, r3, r6
 800542a:	09b6      	lsrs	r6, r6, #6
 800542c:	3604      	adds	r6, #4
 800542e:	e78d      	b.n	800534c <VL53L1_StartMeasurement+0x3c>
			if ((Mm1Enabled == 1) || (Mm2Enabled == 1))
 8005430:	f89d 2006 	ldrb.w	r2, [sp, #6]
 8005434:	9b03      	ldr	r3, [sp, #12]
 8005436:	2a01      	cmp	r2, #1
 8005438:	d00f      	beq.n	800545a <VL53L1_StartMeasurement+0x14a>
 800543a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800543e:	2a01      	cmp	r2, #1
 8005440:	d00b      	beq.n	800545a <VL53L1_StartMeasurement+0x14a>
				MeasTimingBdg = RangeTimeoutUs + 1000;
 8005442:	f503 767a 	add.w	r6, r3, #1000	; 0x3e8
 8005446:	4b0b      	ldr	r3, [pc, #44]	; (8005474 <VL53L1_StartMeasurement+0x164>)
 8005448:	af05      	add	r7, sp, #20
 800544a:	fba3 3606 	umull	r3, r6, r3, r6
 800544e:	09b6      	lsrs	r6, r6, #6
 8005450:	3604      	adds	r6, #4
 8005452:	e77b      	b.n	800534c <VL53L1_StartMeasurement+0x3c>
				MeasTimingBdg = 2 * RangeTimeoutUs + 26600;
 8005454:	f243 33f4 	movw	r3, #13300	; 0x33f4
 8005458:	e7c8      	b.n	80053ec <VL53L1_StartMeasurement+0xdc>
				MeasTimingBdg = RangeTimeoutUs + 5000;
 800545a:	f241 3288 	movw	r2, #5000	; 0x1388
 800545e:	4e05      	ldr	r6, [pc, #20]	; (8005474 <VL53L1_StartMeasurement+0x164>)
 8005460:	af05      	add	r7, sp, #20
 8005462:	441a      	add	r2, r3
 8005464:	fba6 3602 	umull	r3, r6, r6, r2
 8005468:	09b6      	lsrs	r6, r6, #6
 800546a:	3604      	adds	r6, #4
 800546c:	e76e      	b.n	800534c <VL53L1_StartMeasurement+0x3c>
			Status = VL53L1_ERROR_INVALID_PARAMS;
 800546e:	f06f 0003 	mvn.w	r0, #3
	return Status;
 8005472:	e789      	b.n	8005388 <VL53L1_StartMeasurement+0x78>
 8005474:	10624dd3 	.word	0x10624dd3

08005478 <VL53L1_read_p2p_data>:
}


VL53L1_Error VL53L1_read_p2p_data(
	VL53L1_DEV        Dev)
{
 8005478:	b570      	push	{r4, r5, r6, lr}
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE)
		status = VL53L1_get_static_nvm_managed(
 800547a:	f500 71ac 	add.w	r1, r0, #344	; 0x158
{
 800547e:	b082      	sub	sp, #8
 8005480:	4604      	mov	r4, r0
		status = VL53L1_get_static_nvm_managed(
 8005482:	f002 fa05 	bl	8007890 <VL53L1_get_static_nvm_managed>
						Dev,
						&(pdev->stat_nvm));

	if (status == VL53L1_ERROR_NONE)
 8005486:	4605      	mov	r5, r0
 8005488:	b1a0      	cbz	r0, 80054b4 <VL53L1_read_p2p_data+0x3c>

	/*
	 * Check if there a sensible value for osc_measured__fast_osc__frequency
	 */

	if (pdev->stat_nvm.osc_measured__fast_osc__frequency < 0x1000) {
 800548a:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
 800548e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005492:	d331      	bcc.n	80054f8 <VL53L1_read_p2p_data+0x80>

	/* catch parts where the optical centre is
	 * no programmed in to the NVM
	 */

	if (pdev->optical_centre.x_centre == 0 &&
 8005494:	f8b4 30a2 	ldrh.w	r3, [r4, #162]	; 0xa2
 8005498:	b94b      	cbnz	r3, 80054ae <VL53L1_read_p2p_data+0x36>
		pdev->optical_centre.y_centre == 0) {
		pdev->optical_centre.x_centre =
				pdev->mm_roi.x_centre << 4;
 800549a:	f894 209e 	ldrb.w	r2, [r4, #158]	; 0x9e
		pdev->optical_centre.y_centre =
				pdev->mm_roi.y_centre << 4;
 800549e:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
				pdev->mm_roi.x_centre << 4;
 80054a2:	0112      	lsls	r2, r2, #4
				pdev->mm_roi.y_centre << 4;
 80054a4:	011b      	lsls	r3, r3, #4
		pdev->optical_centre.x_centre =
 80054a6:	f884 20a2 	strb.w	r2, [r4, #162]	; 0xa2
		pdev->optical_centre.y_centre =
 80054aa:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
	}

	LOG_FUNCTION_END(status);

	return status;
}
 80054ae:	4628      	mov	r0, r5
 80054b0:	b002      	add	sp, #8
 80054b2:	bd70      	pop	{r4, r5, r6, pc}
		status = VL53L1_get_customer_nvm_managed(
 80054b4:	f104 0142 	add.w	r1, r4, #66	; 0x42
 80054b8:	4620      	mov	r0, r4
 80054ba:	f002 fa75 	bl	80079a8 <VL53L1_get_customer_nvm_managed>
	if (status == VL53L1_ERROR_NONE) {
 80054be:	4605      	mov	r5, r0
 80054c0:	2800      	cmp	r0, #0
 80054c2:	d1e2      	bne.n	800548a <VL53L1_read_p2p_data+0x12>
		status = VL53L1_get_nvm_copy_data(
 80054c4:	f504 76fd 	add.w	r6, r4, #506	; 0x1fa
 80054c8:	4620      	mov	r0, r4
 80054ca:	4631      	mov	r1, r6
 80054cc:	f002 fc12 	bl	8007cf4 <VL53L1_get_nvm_copy_data>
		if (status == VL53L1_ERROR_NONE)
 80054d0:	4605      	mov	r5, r0
 80054d2:	2800      	cmp	r0, #0
 80054d4:	d1d9      	bne.n	800548a <VL53L1_read_p2p_data+0x12>
			VL53L1_copy_rtn_good_spads_to_buffer(
 80054d6:	4630      	mov	r0, r6
 80054d8:	f104 01f0 	add.w	r1, r4, #240	; 0xf0
 80054dc:	f001 ff9a 	bl	8007414 <VL53L1_copy_rtn_good_spads_to_buffer>
		status =
 80054e0:	f504 722d 	add.w	r2, r4, #692	; 0x2b4
 80054e4:	21de      	movs	r1, #222	; 0xde
 80054e6:	4620      	mov	r0, r4
 80054e8:	f002 fd16 	bl	8007f18 <VL53L1_RdWord>
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency < 0x1000) {
 80054ec:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
		status =
 80054f0:	4605      	mov	r5, r0
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency < 0x1000) {
 80054f2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80054f6:	d203      	bcs.n	8005500 <VL53L1_read_p2p_data+0x88>
		pdev->stat_nvm.osc_measured__fast_osc__frequency = 0xBCCC;
 80054f8:	f64b 43cc 	movw	r3, #48332	; 0xbccc
 80054fc:	f8a4 315e 	strh.w	r3, [r4, #350]	; 0x15e
	if (status == VL53L1_ERROR_NONE)
 8005500:	2d00      	cmp	r5, #0
 8005502:	d1c7      	bne.n	8005494 <VL53L1_read_p2p_data+0x1c>
	uint8_t  xy_size = 0;

	LOG_FUNCTION_START("");

	/* convert SPAD number into (row,col) location */
	VL53L1_decode_row_col(
 8005504:	f10d 0206 	add.w	r2, sp, #6
 8005508:	f10d 0107 	add.w	r1, sp, #7
 800550c:	f894 022a 	ldrb.w	r0, [r4, #554]	; 0x22a
	uint8_t  x       = 0;
 8005510:	f88d 5006 	strb.w	r5, [sp, #6]
	uint8_t  y       = 0;
 8005514:	f88d 5007 	strb.w	r5, [sp, #7]
	VL53L1_decode_row_col(
 8005518:	f002 f978 	bl	800780c <VL53L1_decode_row_col>
			pdev->nvm_copy_data.roi_config__mode_roi_centre_spad,
			&y,
			&x);

	pmm_roi->x_centre = x;
 800551c:	f89d 2006 	ldrb.w	r2, [sp, #6]
 8005520:	462b      	mov	r3, r5
 8005522:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8005526:	f362 0307 	bfi	r3, r2, #0, #8
	 * versus the API sense
	 *
	 * MS Nibble = height
	 * LS Nibble = width
	 */
	xy_size = pdev->nvm_copy_data.roi_config__mode_roi_xy_size;
 800552a:	f894 222b 	ldrb.w	r2, [r4, #555]	; 0x22b
	pmm_roi->x_centre = x;
 800552e:	f361 230f 	bfi	r3, r1, #8, #8

	pmm_roi->height = xy_size >> 4;
	pmm_roi->width  = xy_size & 0x0F;
 8005532:	f002 010f 	and.w	r1, r2, #15
	pmm_roi->height = xy_size >> 4;
 8005536:	0912      	lsrs	r2, r2, #4
	pmm_roi->x_centre = x;
 8005538:	f361 4317 	bfi	r3, r1, #16, #8
 800553c:	f362 631f 	bfi	r3, r2, #24, #8
 8005540:	f8c4 309e 	str.w	r3, [r4, #158]	; 0x9e
 8005544:	e7a6      	b.n	8005494 <VL53L1_read_p2p_data+0x1c>
 8005546:	bf00      	nop

08005548 <VL53L1_data_init>:
{
 8005548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800554c:	460d      	mov	r5, r1
 800554e:	b08b      	sub	sp, #44	; 0x2c
	VL53L1_init_ll_driver_state(
 8005550:	2162      	movs	r1, #98	; 0x62
{
 8005552:	4604      	mov	r4, r0
	VL53L1_init_ll_driver_state(
 8005554:	f001 fec6 	bl	80072e4 <VL53L1_init_ll_driver_state>
	pdev->wait_method             = VL53L1_WAIT_METHOD_BLOCKING;
 8005558:	f04f 2301 	mov.w	r3, #16777472	; 0x1000100
	pdev->offset_correction_mode  =
 800555c:	2001      	movs	r0, #1
	pdev->phasecal_config_timeout_us  =  1000;
 800555e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	pdev->mm_config_timeout_us        =  2000;
 8005562:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
	pdev->wait_method             = VL53L1_WAIT_METHOD_BLOCKING;
 8005566:	6023      	str	r3, [r4, #0]
	pdev->range_config_timeout_us     = 13000;
 8005568:	f243 23c8 	movw	r3, #13000	; 0x32c8
	pdev->offset_correction_mode  =
 800556c:	7120      	strb	r0, [r4, #4]
	pdev->phasecal_config_timeout_us  =  1000;
 800556e:	60a1      	str	r1, [r4, #8]
	pdev->inter_measurement_period_ms =   100;
 8005570:	2064      	movs	r0, #100	; 0x64
	pdev->dss_config__target_total_rate_mcps = 0x0A00;
 8005572:	f44f 6120 	mov.w	r1, #2560	; 0xa00
	pdev->mm_config_timeout_us        =  2000;
 8005576:	60e2      	str	r2, [r4, #12]
	pdev->range_config_timeout_us     = 13000;
 8005578:	6123      	str	r3, [r4, #16]
	pdev->debug_mode                  =  0x00;
 800557a:	2200      	movs	r2, #0
	pdev->gain_cal.standard_ranging_gain_factor =
 800557c:	f240 73db 	movw	r3, #2011	; 0x7db
	pdev->inter_measurement_period_ms =   100;
 8005580:	6160      	str	r0, [r4, #20]
	pdev->dss_config__target_total_rate_mcps = 0x0A00;
 8005582:	8321      	strh	r1, [r4, #24]
	VL53L1_init_version(Dev);
 8005584:	4620      	mov	r0, r4
	pdev->debug_mode                  =  0x00;
 8005586:	f884 2021 	strb.w	r2, [r4, #33]	; 0x21
	pdev->gain_cal.standard_ranging_gain_factor =
 800558a:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
	VL53L1_init_version(Dev);
 800558e:	f001 fe9f 	bl	80072d0 <VL53L1_init_version>
	if (read_p2p_data > 0 && status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
 8005592:	b115      	cbz	r5, 800559a <VL53L1_data_init+0x52>
			status = VL53L1_read_p2p_data(Dev);
 8005594:	4620      	mov	r0, r4
 8005596:	f7ff ff6f 	bl	8005478 <VL53L1_read_p2p_data>
	status =
 800559a:	f504 7088 	add.w	r0, r4, #272	; 0x110
		VL53L1_init_tuning_parm_storage_struct(
 800559e:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
	status =
 80055a2:	f000 fe21 	bl	80061e8 <VL53L1_init_refspadchar_config_struct>
	status =
 80055a6:	f504 7090 	add.w	r0, r4, #288	; 0x120
 80055aa:	f000 fe31 	bl	8006210 <VL53L1_init_ssc_config_struct>
	status =
 80055ae:	f504 7196 	add.w	r1, r4, #300	; 0x12c
 80055b2:	f104 0042 	add.w	r0, r4, #66	; 0x42

	VL53L1_Error  status = VL53L1_ERROR_NONE;
	VL53L1_LLDriverData_t *pdev =
			VL53L1DevStructGetLLDriverHandle(Dev);

	VL53L1_static_config_t        *pstatic       = &(pdev->stat_cfg);
 80055b6:	f504 7bb2 	add.w	fp, r4, #356	; 0x164
	status =
 80055ba:	f000 fe35 	bl	8006228 <VL53L1_init_xtalk_config_struct>
	status =
 80055be:	f504 70a2 	add.w	r0, r4, #324	; 0x144
 80055c2:	f000 fe53 	bl	800626c <VL53L1_init_offset_cal_config_struct>
	status =
 80055c6:	4628      	mov	r0, r5
 80055c8:	f000 fe64 	bl	8006294 <VL53L1_init_tuning_parm_storage_struct>
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound =
			(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 80055cc:	f894 3160 	ldrb.w	r3, [r4, #352]	; 0x160
	VL53L1_init_ll_driver_state(
 80055d0:	2103      	movs	r1, #3
		status = VL53L1_set_preset_mode(
 80055d2:	68a2      	ldr	r2, [r4, #8]
 80055d4:	f894 8001 	ldrb.w	r8, [r4, #1]
	VL53L1_init_ll_driver_state(
 80055d8:	4620      	mov	r0, r4
			(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 80055da:	400b      	ands	r3, r1
		status = VL53L1_set_preset_mode(
 80055dc:	9207      	str	r2, [sp, #28]
 80055de:	68e2      	ldr	r2, [r4, #12]
	VL53L1_general_config_t       *pgeneral      = &(pdev->gen_cfg);
 80055e0:	f504 76c2 	add.w	r6, r4, #388	; 0x184
			(pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound & 0x03) +
 80055e4:	3b80      	subs	r3, #128	; 0x80
		status = VL53L1_set_preset_mode(
 80055e6:	f8b4 9018 	ldrh.w	r9, [r4, #24]
 80055ea:	9208      	str	r2, [sp, #32]
	VL53L1_timing_config_t        *ptiming       = &(pdev->tim_cfg);
 80055ec:	f504 77ce 	add.w	r7, r4, #412	; 0x19c
	pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound =
 80055f0:	f884 3160 	strb.w	r3, [r4, #352]	; 0x160
	VL53L1_dynamic_config_t       *pdynamic      = &(pdev->dyn_cfg);
 80055f4:	f504 73da 	add.w	r3, r4, #436	; 0x1b4
	VL53L1_system_control_t       *psystem       = &(pdev->sys_ctrl);
 80055f8:	f504 7ae4 	add.w	sl, r4, #456	; 0x1c8
	VL53L1_dynamic_config_t       *pdynamic      = &(pdev->dyn_cfg);
 80055fc:	9305      	str	r3, [sp, #20]
		status = VL53L1_set_preset_mode(
 80055fe:	6923      	ldr	r3, [r4, #16]
 8005600:	9309      	str	r3, [sp, #36]	; 0x24
 8005602:	6963      	ldr	r3, [r4, #20]
 8005604:	9306      	str	r3, [sp, #24]
	VL53L1_init_ll_driver_state(
 8005606:	f001 fe6d 	bl	80072e4 <VL53L1_init_ll_driver_state>
	switch (device_preset_mode) {
 800560a:	f108 32ff 	add.w	r2, r8, #4294967295
	VL53L1_low_power_auto_data_t  *plpadata      =
 800560e:	f504 7139 	add.w	r1, r4, #740	; 0x2e4
	switch (device_preset_mode) {
 8005612:	9b05      	ldr	r3, [sp, #20]
 8005614:	2a25      	cmp	r2, #37	; 0x25
 8005616:	f200 80b7 	bhi.w	8005788 <VL53L1_data_init+0x240>
 800561a:	e8df f002 	tbb	[pc, r2]
 800561e:	4e45      	.short	0x4e45
 8005620:	72696057 	.word	0x72696057
 8005624:	b5b5847b 	.word	0xb5b5847b
 8005628:	b5b5b5b5 	.word	0xb5b5b5b5
 800562c:	968db5b5 	.word	0x968db5b5
 8005630:	b5b5b5b5 	.word	0xb5b5b5b5
 8005634:	b5b5b5b5 	.word	0xb5b5b5b5
 8005638:	b5b5b5b5 	.word	0xb5b5b5b5
 800563c:	b5b5b5b5 	.word	0xb5b5b5b5
 8005640:	13aa9fb5 	.word	0x13aa9fb5
		status = VL53L1_preset_mode_low_power_auto_long_ranging(
 8005644:	e9cd 5101 	strd	r5, r1, [sp, #4]
 8005648:	4658      	mov	r0, fp
 800564a:	f8cd a000 	str.w	sl, [sp]
 800564e:	463a      	mov	r2, r7
 8005650:	4631      	mov	r1, r6
 8005652:	f001 fc6f 	bl	8006f34 <VL53L1_preset_mode_low_power_auto_long_ranging>
 8005656:	4605      	mov	r5, r0
	if (status == VL53L1_ERROR_NONE) {
 8005658:	b9fd      	cbnz	r5, 800569a <VL53L1_data_init+0x152>
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 800565a:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
		pstatic->dss_config__target_total_rate_mcps =
 800565e:	f8a4 9164 	strh.w	r9, [r4, #356]	; 0x164
		pdev->dss_config__target_total_rate_mcps    =
 8005662:	f8a4 9018 	strh.w	r9, [r4, #24]
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8005666:	2b00      	cmp	r3, #0
 8005668:	f000 8091 	beq.w	800578e <VL53L1_data_init+0x246>
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 800566c:	9a08      	ldr	r2, [sp, #32]
		pdev->phasecal_config_timeout_us = phasecal_config_timeout_us;
 800566e:	9807      	ldr	r0, [sp, #28]
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8005670:	60e2      	str	r2, [r4, #12]
		status =
 8005672:	4611      	mov	r1, r2
		pdev->range_config_timeout_us    = range_config_timeout_us;
 8005674:	9a09      	ldr	r2, [sp, #36]	; 0x24
		pdev->phasecal_config_timeout_us = phasecal_config_timeout_us;
 8005676:	60a0      	str	r0, [r4, #8]
		pdev->range_config_timeout_us    = range_config_timeout_us;
 8005678:	6122      	str	r2, [r4, #16]
		status =
 800567a:	e9cd 6700 	strd	r6, r7, [sp]
 800567e:	f001 ffd1 	bl	8007624 <VL53L1_calc_timeout_register_values>
	if (status == VL53L1_ERROR_NONE)
 8005682:	4605      	mov	r5, r0
 8005684:	b948      	cbnz	r0, 800569a <VL53L1_data_init+0x152>
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8005686:	f8b4 32b4 	ldrh.w	r3, [r4, #692]	; 0x2b4
 800568a:	2b00      	cmp	r3, #0
 800568c:	d07f      	beq.n	800578e <VL53L1_data_init+0x246>
			inter_measurement_period_ms *
 800568e:	9a06      	ldr	r2, [sp, #24]
 8005690:	fb02 f303 	mul.w	r3, r2, r3
		pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 8005694:	6162      	str	r2, [r4, #20]
		pdev->tim_cfg.system__intermeasurement_period = \
 8005696:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
	VL53L1_low_power_auto_data_init(
 800569a:	4620      	mov	r0, r4
 800569c:	f002 f890 	bl	80077c0 <VL53L1_low_power_auto_data_init>
}
 80056a0:	4628      	mov	r0, r5
 80056a2:	b00b      	add	sp, #44	; 0x2c
 80056a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status = VL53L1_preset_mode_standard_ranging(
 80056a8:	e9cd a500 	strd	sl, r5, [sp]
 80056ac:	4658      	mov	r0, fp
 80056ae:	463a      	mov	r2, r7
 80056b0:	4631      	mov	r1, r6
 80056b2:	f000 fe39 	bl	8006328 <VL53L1_preset_mode_standard_ranging>
 80056b6:	4605      	mov	r5, r0
 80056b8:	e7ce      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_short_range(
 80056ba:	e9cd a500 	strd	sl, r5, [sp]
 80056be:	4658      	mov	r0, fp
 80056c0:	463a      	mov	r2, r7
 80056c2:	4631      	mov	r1, r6
 80056c4:	f000 fec4 	bl	8006450 <VL53L1_preset_mode_standard_ranging_short_range>
 80056c8:	4605      	mov	r5, r0
 80056ca:	e7c5      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_long_range(
 80056cc:	e9cd a500 	strd	sl, r5, [sp]
 80056d0:	4658      	mov	r0, fp
 80056d2:	463a      	mov	r2, r7
 80056d4:	4631      	mov	r1, r6
 80056d6:	f000 ff4f 	bl	8006578 <VL53L1_preset_mode_standard_ranging_long_range>
 80056da:	4605      	mov	r5, r0
 80056dc:	e7bc      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_mm1_cal(
 80056de:	e9cd a500 	strd	sl, r5, [sp]
 80056e2:	4658      	mov	r0, fp
 80056e4:	463a      	mov	r2, r7
 80056e6:	4631      	mov	r1, r6
 80056e8:	f000 ffda 	bl	80066a0 <VL53L1_preset_mode_standard_ranging_mm1_cal>
 80056ec:	4605      	mov	r5, r0
 80056ee:	e7b3      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_standard_ranging_mm2_cal(
 80056f0:	e9cd a500 	strd	sl, r5, [sp]
 80056f4:	4658      	mov	r0, fp
 80056f6:	463a      	mov	r2, r7
 80056f8:	4631      	mov	r1, r6
 80056fa:	f001 f867 	bl	80067cc <VL53L1_preset_mode_standard_ranging_mm2_cal>
 80056fe:	4605      	mov	r5, r0
 8005700:	e7aa      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_timed_ranging(
 8005702:	e9cd a500 	strd	sl, r5, [sp]
 8005706:	4658      	mov	r0, fp
 8005708:	463a      	mov	r2, r7
 800570a:	4631      	mov	r1, r6
 800570c:	f001 f8f4 	bl	80068f8 <VL53L1_preset_mode_timed_ranging>
 8005710:	4605      	mov	r5, r0
 8005712:	e7a1      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_timed_ranging_short_range(
 8005714:	e9cd a500 	strd	sl, r5, [sp]
 8005718:	4658      	mov	r0, fp
 800571a:	463a      	mov	r2, r7
 800571c:	4631      	mov	r1, r6
 800571e:	f001 f989 	bl	8006a34 <VL53L1_preset_mode_timed_ranging_short_range>
 8005722:	4605      	mov	r5, r0
 8005724:	e798      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_timed_ranging_long_range(
 8005726:	e9cd a500 	strd	sl, r5, [sp]
 800572a:	4658      	mov	r0, fp
 800572c:	463a      	mov	r2, r7
 800572e:	4631      	mov	r1, r6
 8005730:	f001 fa20 	bl	8006b74 <VL53L1_preset_mode_timed_ranging_long_range>
 8005734:	4605      	mov	r5, r0
 8005736:	e78f      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_olt(
 8005738:	e9cd a500 	strd	sl, r5, [sp]
 800573c:	4658      	mov	r0, fp
 800573e:	463a      	mov	r2, r7
 8005740:	4631      	mov	r1, r6
 8005742:	f001 fd31 	bl	80071a8 <VL53L1_preset_mode_olt>
 8005746:	4605      	mov	r5, r0
 8005748:	e786      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_singleshot_ranging(
 800574a:	e9cd a500 	strd	sl, r5, [sp]
 800574e:	4658      	mov	r0, fp
 8005750:	463a      	mov	r2, r7
 8005752:	4631      	mov	r1, r6
 8005754:	f001 fc8c 	bl	8007070 <VL53L1_preset_mode_singleshot_ranging>
 8005758:	4605      	mov	r5, r0
 800575a:	e77d      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_low_power_auto_short_ranging(
 800575c:	e9cd 5101 	strd	r5, r1, [sp, #4]
 8005760:	4658      	mov	r0, fp
 8005762:	f8cd a000 	str.w	sl, [sp]
 8005766:	463a      	mov	r2, r7
 8005768:	4631      	mov	r1, r6
 800576a:	f001 fb43 	bl	8006df4 <VL53L1_preset_mode_low_power_auto_short_ranging>
 800576e:	4605      	mov	r5, r0
 8005770:	e772      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_preset_mode_low_power_auto_ranging(
 8005772:	e9cd 5101 	strd	r5, r1, [sp, #4]
 8005776:	4658      	mov	r0, fp
 8005778:	f8cd a000 	str.w	sl, [sp]
 800577c:	463a      	mov	r2, r7
 800577e:	4631      	mov	r1, r6
 8005780:	f001 fa94 	bl	8006cac <VL53L1_preset_mode_low_power_auto_ranging>
 8005784:	4605      	mov	r5, r0
 8005786:	e767      	b.n	8005658 <VL53L1_data_init+0x110>
		status = VL53L1_ERROR_INVALID_PARAMS;
 8005788:	f06f 0503 	mvn.w	r5, #3
 800578c:	e785      	b.n	800569a <VL53L1_data_init+0x152>
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 800578e:	f06f 050e 	mvn.w	r5, #14
 8005792:	e782      	b.n	800569a <VL53L1_data_init+0x152>

08005794 <VL53L1_set_inter_measurement_period_ms>:
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8005794:	f8b0 32b4 	ldrh.w	r3, [r0, #692]	; 0x2b4
{
 8005798:	4602      	mov	r2, r0
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 800579a:	b133      	cbz	r3, 80057aa <VL53L1_set_inter_measurement_period_ms+0x16>
			inter_measurement_period_ms *
 800579c:	fb01 f303 	mul.w	r3, r1, r3
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80057a0:	2000      	movs	r0, #0
		pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 80057a2:	6151      	str	r1, [r2, #20]
		pdev->tim_cfg.system__intermeasurement_period = \
 80057a4:	f8c2 31ac 	str.w	r3, [r2, #428]	; 0x1ac
 80057a8:	4770      	bx	lr
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 80057aa:	f06f 000e 	mvn.w	r0, #14
}
 80057ae:	4770      	bx	lr

080057b0 <VL53L1_get_inter_measurement_period_ms>:
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 80057b0:	f8b0 22b4 	ldrh.w	r2, [r0, #692]	; 0x2b4
 80057b4:	b132      	cbz	r2, 80057c4 <VL53L1_get_inter_measurement_period_ms+0x14>
			pdev->tim_cfg.system__intermeasurement_period /
 80057b6:	f8d0 31ac 	ldr.w	r3, [r0, #428]	; 0x1ac
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80057ba:	2000      	movs	r0, #0
			pdev->tim_cfg.system__intermeasurement_period /
 80057bc:	fbb3 f3f2 	udiv	r3, r3, r2
		*pinter_measurement_period_ms = \
 80057c0:	600b      	str	r3, [r1, #0]
 80057c2:	4770      	bx	lr
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 80057c4:	f06f 000e 	mvn.w	r0, #14
}
 80057c8:	4770      	bx	lr
 80057ca:	bf00      	nop

080057cc <VL53L1_set_timeouts_us>:
{
 80057cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80057ce:	461d      	mov	r5, r3
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 80057d0:	f8b0 315e 	ldrh.w	r3, [r0, #350]	; 0x15e
{
 80057d4:	b083      	sub	sp, #12
 80057d6:	4604      	mov	r4, r0
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 80057d8:	b17b      	cbz	r3, 80057fa <VL53L1_set_timeouts_us+0x2e>
 80057da:	4608      	mov	r0, r1
			VL53L1_calc_timeout_register_values(
 80057dc:	f504 77ce 	add.w	r7, r4, #412	; 0x19c
 80057e0:	f504 76c2 	add.w	r6, r4, #388	; 0x184
 80057e4:	4611      	mov	r1, r2
		pdev->range_config_timeout_us    = range_config_timeout_us;
 80057e6:	6125      	str	r5, [r4, #16]
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 80057e8:	e9c4 0202 	strd	r0, r2, [r4, #8]
		status =
 80057ec:	462a      	mov	r2, r5
 80057ee:	e9cd 6700 	strd	r6, r7, [sp]
 80057f2:	f001 ff17 	bl	8007624 <VL53L1_calc_timeout_register_values>
}
 80057f6:	b003      	add	sp, #12
 80057f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 80057fa:	f06f 000e 	mvn.w	r0, #14
 80057fe:	e7fa      	b.n	80057f6 <VL53L1_set_timeouts_us+0x2a>

08005800 <VL53L1_get_timeouts_us>:
{
 8005800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005804:	4604      	mov	r4, r0
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8005806:	f8b0 015e 	ldrh.w	r0, [r0, #350]	; 0x15e
 800580a:	b360      	cbz	r0, 8005866 <VL53L1_get_timeouts_us+0x66>
 800580c:	460f      	mov	r7, r1
		macro_period_us =
 800580e:	f894 11a2 	ldrb.w	r1, [r4, #418]	; 0x1a2
 8005812:	4616      	mov	r6, r2
 8005814:	461d      	mov	r5, r3
 8005816:	f001 feab 	bl	8007570 <VL53L1_calc_macro_period_us>
 800581a:	4680      	mov	r8, r0
			VL53L1_calc_timeout_us(
 800581c:	4601      	mov	r1, r0
 800581e:	f894 018b 	ldrb.w	r0, [r4, #395]	; 0x18b
 8005822:	f001 fee5 	bl	80075f0 <VL53L1_calc_timeout_us>
		*pphasecal_config_timeout_us =
 8005826:	6038      	str	r0, [r7, #0]
		timeout_encoded =
 8005828:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
			VL53L1_calc_decoded_timeout_us(
 800582c:	4641      	mov	r1, r8
			(uint16_t)pdev->tim_cfg.mm_config__timeout_macrop_a_lo;
 800582e:	f894 019d 	ldrb.w	r0, [r4, #413]	; 0x19d
		timeout_encoded = (timeout_encoded << 8) +
 8005832:	eb00 2003 	add.w	r0, r0, r3, lsl #8
			VL53L1_calc_decoded_timeout_us(
 8005836:	b280      	uxth	r0, r0
 8005838:	f001 fee4 	bl	8007604 <VL53L1_calc_decoded_timeout_us>
		*pmm_config_timeout_us =
 800583c:	6030      	str	r0, [r6, #0]
		timeout_encoded =
 800583e:	f894 31a0 	ldrb.w	r3, [r4, #416]	; 0x1a0
			VL53L1_calc_decoded_timeout_us(
 8005842:	4641      	mov	r1, r8
			(uint16_t)pdev->tim_cfg.range_config__timeout_macrop_a_lo;
 8005844:	f894 01a1 	ldrb.w	r0, [r4, #417]	; 0x1a1
		timeout_encoded = (timeout_encoded << 8) +
 8005848:	eb00 2003 	add.w	r0, r0, r3, lsl #8
			VL53L1_calc_decoded_timeout_us(
 800584c:	b280      	uxth	r0, r0
 800584e:	f001 fed9 	bl	8007604 <VL53L1_calc_decoded_timeout_us>
		*prange_config_timeout_us =
 8005852:	6028      	str	r0, [r5, #0]
		pdev->phasecal_config_timeout_us = *pphasecal_config_timeout_us;
 8005854:	683b      	ldr	r3, [r7, #0]
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005856:	2000      	movs	r0, #0
		pdev->phasecal_config_timeout_us = *pphasecal_config_timeout_us;
 8005858:	60a3      	str	r3, [r4, #8]
		pdev->mm_config_timeout_us       = *pmm_config_timeout_us;
 800585a:	6833      	ldr	r3, [r6, #0]
 800585c:	60e3      	str	r3, [r4, #12]
		pdev->range_config_timeout_us    = *prange_config_timeout_us;
 800585e:	682b      	ldr	r3, [r5, #0]
 8005860:	6123      	str	r3, [r4, #16]
}
 8005862:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8005866:	f06f 000e 	mvn.w	r0, #14
 800586a:	e7fa      	b.n	8005862 <VL53L1_get_timeouts_us+0x62>

0800586c <VL53L1_get_sequence_config_bit>:
	if (bit_id <= VL53L1_DEVICESEQUENCECONFIG_RANGE) {
 800586c:	2907      	cmp	r1, #7
 800586e:	d812      	bhi.n	8005896 <VL53L1_get_sequence_config_bit+0x2a>
 8005870:	f890 31c5 	ldrb.w	r3, [r0, #453]	; 0x1c5
		if (bit_id > 0) {
 8005874:	b151      	cbz	r1, 800588c <VL53L1_get_sequence_config_bit+0x20>
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005876:	2000      	movs	r0, #0
{
 8005878:	b410      	push	{r4}
			bit_mask  = 0x01 << bit_id;
 800587a:	2401      	movs	r4, #1
 800587c:	408c      	lsls	r4, r1
			*pvalue  = *pvalue >> bit_id;
 800587e:	4023      	ands	r3, r4
}
 8005880:	f85d 4b04 	ldr.w	r4, [sp], #4
			*pvalue  = *pvalue >> bit_id;
 8005884:	fa43 f101 	asr.w	r1, r3, r1
 8005888:	7011      	strb	r1, [r2, #0]
}
 800588a:	4770      	bx	lr
		*pvalue =
 800588c:	f003 0301 	and.w	r3, r3, #1
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005890:	4608      	mov	r0, r1
		*pvalue =
 8005892:	7013      	strb	r3, [r2, #0]
 8005894:	4770      	bx	lr
		status = VL53L1_ERROR_INVALID_PARAMS;
 8005896:	f06f 0003 	mvn.w	r0, #3
}
 800589a:	4770      	bx	lr

0800589c <VL53L1_set_user_zone>:
{
 800589c:	b538      	push	{r3, r4, r5, lr}
 800589e:	460c      	mov	r4, r1
 80058a0:	4605      	mov	r5, r0
	VL53L1_encode_row_col(
 80058a2:	f200 12c3 	addw	r2, r0, #451	; 0x1c3
 80058a6:	7809      	ldrb	r1, [r1, #0]
 80058a8:	7860      	ldrb	r0, [r4, #1]
 80058aa:	f001 ff6f 	bl	800778c <VL53L1_encode_row_col>
	VL53L1_encode_zone_size(
 80058ae:	78a0      	ldrb	r0, [r4, #2]
 80058b0:	f505 72e2 	add.w	r2, r5, #452	; 0x1c4
 80058b4:	78e1      	ldrb	r1, [r4, #3]
 80058b6:	f001 ff7f 	bl	80077b8 <VL53L1_encode_zone_size>
}
 80058ba:	2000      	movs	r0, #0
 80058bc:	bd38      	pop	{r3, r4, r5, pc}
 80058be:	bf00      	nop

080058c0 <VL53L1_get_user_zone>:
{
 80058c0:	b538      	push	{r3, r4, r5, lr}
 80058c2:	460c      	mov	r4, r1
 80058c4:	4605      	mov	r5, r0
	VL53L1_decode_row_col(
 80058c6:	460a      	mov	r2, r1
 80058c8:	f890 01c3 	ldrb.w	r0, [r0, #451]	; 0x1c3
 80058cc:	3101      	adds	r1, #1
 80058ce:	f001 ff9d 	bl	800780c <VL53L1_decode_row_col>
	VL53L1_decode_zone_size(
 80058d2:	f895 01c4 	ldrb.w	r0, [r5, #452]	; 0x1c4
 80058d6:	1ce2      	adds	r2, r4, #3
 80058d8:	1ca1      	adds	r1, r4, #2
 80058da:	f001 ff67 	bl	80077ac <VL53L1_decode_zone_size>
}
 80058de:	2000      	movs	r0, #0
 80058e0:	bd38      	pop	{r3, r4, r5, pc}
 80058e2:	bf00      	nop

080058e4 <VL53L1_get_preset_mode_timing_cfg>:
	switch (device_preset_mode) {
 80058e4:	3901      	subs	r1, #1
{
 80058e6:	b430      	push	{r4, r5}
	switch (device_preset_mode) {
 80058e8:	2925      	cmp	r1, #37	; 0x25
 80058ea:	d84a      	bhi.n	8005982 <VL53L1_get_preset_mode_timing_cfg+0x9e>
 80058ec:	e8df f001 	tbb	[pc, r1]
 80058f0:	37373737 	.word	0x37373737
 80058f4:	25252537 	.word	0x25252537
 80058f8:	49494949 	.word	0x49494949
 80058fc:	49494949 	.word	0x49494949
 8005900:	49492537 	.word	0x49492537
 8005904:	49494949 	.word	0x49494949
 8005908:	49494949 	.word	0x49494949
 800590c:	49494949 	.word	0x49494949
 8005910:	13494949 	.word	0x13494949
 8005914:	1313      	.short	0x1313
				pdev->tuning_parms.tp_dss_target_timed_mcps;
 8005916:	f8b0 50cc 	ldrh.w	r5, [r0, #204]	; 0xcc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800591a:	2100      	movs	r1, #0
				pdev->tuning_parms.tp_phasecal_timeout_timed_us;
 800591c:	f8d0 40d4 	ldr.w	r4, [r0, #212]	; 0xd4
		*pdss_config__target_total_rate_mcps =
 8005920:	8015      	strh	r5, [r2, #0]
		*pphasecal_config_timeout_us =
 8005922:	601c      	str	r4, [r3, #0]
		*pmm_config_timeout_us =
 8005924:	9a02      	ldr	r2, [sp, #8]
				pdev->tuning_parms.tp_mm_timeout_lpa_us;
 8005926:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
		*pmm_config_timeout_us =
 800592a:	6013      	str	r3, [r2, #0]
		*prange_config_timeout_us =
 800592c:	9a03      	ldr	r2, [sp, #12]
				pdev->tuning_parms.tp_range_timeout_lpa_us;
 800592e:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
}
 8005932:	4608      	mov	r0, r1
		*prange_config_timeout_us =
 8005934:	6013      	str	r3, [r2, #0]
}
 8005936:	bc30      	pop	{r4, r5}
 8005938:	4770      	bx	lr
				pdev->tuning_parms.tp_dss_target_timed_mcps;
 800593a:	f8b0 50cc 	ldrh.w	r5, [r0, #204]	; 0xcc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800593e:	2100      	movs	r1, #0
				pdev->tuning_parms.tp_phasecal_timeout_timed_us;
 8005940:	f8d0 40d4 	ldr.w	r4, [r0, #212]	; 0xd4
		*pdss_config__target_total_rate_mcps =
 8005944:	8015      	strh	r5, [r2, #0]
		*pphasecal_config_timeout_us =
 8005946:	601c      	str	r4, [r3, #0]
		*pmm_config_timeout_us =
 8005948:	9a02      	ldr	r2, [sp, #8]
				pdev->tuning_parms.tp_mm_timeout_timed_us;
 800594a:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
		*pmm_config_timeout_us =
 800594e:	6013      	str	r3, [r2, #0]
		*prange_config_timeout_us =
 8005950:	9a03      	ldr	r2, [sp, #12]
				pdev->tuning_parms.tp_range_timeout_timed_us;
 8005952:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
}
 8005956:	4608      	mov	r0, r1
		*prange_config_timeout_us =
 8005958:	6013      	str	r3, [r2, #0]
}
 800595a:	bc30      	pop	{r4, r5}
 800595c:	4770      	bx	lr
				pdev->tuning_parms.tp_dss_target_lite_mcps;
 800595e:	f8b0 50ca 	ldrh.w	r5, [r0, #202]	; 0xca
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005962:	2100      	movs	r1, #0
				pdev->tuning_parms.tp_phasecal_timeout_lite_us;
 8005964:	f8d0 40d0 	ldr.w	r4, [r0, #208]	; 0xd0
		*pdss_config__target_total_rate_mcps =
 8005968:	8015      	strh	r5, [r2, #0]
		*pphasecal_config_timeout_us =
 800596a:	601c      	str	r4, [r3, #0]
		*pmm_config_timeout_us =
 800596c:	9a02      	ldr	r2, [sp, #8]
				pdev->tuning_parms.tp_mm_timeout_lite_us;
 800596e:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
		*pmm_config_timeout_us =
 8005972:	6013      	str	r3, [r2, #0]
		*prange_config_timeout_us =
 8005974:	9a03      	ldr	r2, [sp, #12]
				pdev->tuning_parms.tp_range_timeout_lite_us;
 8005976:	f8d0 30e4 	ldr.w	r3, [r0, #228]	; 0xe4
}
 800597a:	4608      	mov	r0, r1
		*prange_config_timeout_us =
 800597c:	6013      	str	r3, [r2, #0]
}
 800597e:	bc30      	pop	{r4, r5}
 8005980:	4770      	bx	lr
		status = VL53L1_ERROR_INVALID_PARAMS;
 8005982:	f06f 0103 	mvn.w	r1, #3
}
 8005986:	bc30      	pop	{r4, r5}
 8005988:	4608      	mov	r0, r1
 800598a:	4770      	bx	lr

0800598c <VL53L1_set_preset_mode>:
{
 800598c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005990:	b085      	sub	sp, #20
 8005992:	4699      	mov	r9, r3
 8005994:	460d      	mov	r5, r1
 8005996:	4604      	mov	r4, r0
	pdev->mm_config_timeout_us        = mm_config_timeout_us;
 8005998:	9b0e      	ldr	r3, [sp, #56]	; 0x38
	VL53L1_init_ll_driver_state(
 800599a:	2103      	movs	r1, #3
	pdev->preset_mode                 = device_preset_mode;
 800599c:	7045      	strb	r5, [r0, #1]
	switch (device_preset_mode) {
 800599e:	3d01      	subs	r5, #1
	pdev->mm_config_timeout_us        = mm_config_timeout_us;
 80059a0:	60c3      	str	r3, [r0, #12]
{
 80059a2:	4692      	mov	sl, r2
	pdev->range_config_timeout_us     = range_config_timeout_us;
 80059a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
	VL53L1_static_config_t        *pstatic       = &(pdev->stat_cfg);
 80059a6:	f500 7bb2 	add.w	fp, r0, #356	; 0x164
	VL53L1_general_config_t       *pgeneral      = &(pdev->gen_cfg);
 80059aa:	f500 77c2 	add.w	r7, r0, #388	; 0x184
	VL53L1_timing_config_t        *ptiming       = &(pdev->tim_cfg);
 80059ae:	f500 78ce 	add.w	r8, r0, #412	; 0x19c
	pdev->range_config_timeout_us     = range_config_timeout_us;
 80059b2:	6103      	str	r3, [r0, #16]
	VL53L1_dynamic_config_t       *pdynamic      = &(pdev->dyn_cfg);
 80059b4:	f500 76da 	add.w	r6, r0, #436	; 0x1b4
	pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 80059b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80059ba:	6143      	str	r3, [r0, #20]
	VL53L1_init_ll_driver_state(
 80059bc:	f001 fc92 	bl	80072e4 <VL53L1_init_ll_driver_state>
	VL53L1_system_control_t       *psystem       = &(pdev->sys_ctrl);
 80059c0:	f504 72e4 	add.w	r2, r4, #456	; 0x1c8
	VL53L1_tuning_parm_storage_t  *ptuning_parms = &(pdev->tuning_parms);
 80059c4:	f104 01a4 	add.w	r1, r4, #164	; 0xa4
	VL53L1_low_power_auto_data_t  *plpadata      =
 80059c8:	f504 7039 	add.w	r0, r4, #740	; 0x2e4
	switch (device_preset_mode) {
 80059cc:	2d25      	cmp	r5, #37	; 0x25
 80059ce:	f200 80b1 	bhi.w	8005b34 <VL53L1_set_preset_mode+0x1a8>
 80059d2:	e8df f005 	tbb	[pc, r5]
 80059d6:	4a41      	.short	0x4a41
 80059d8:	6e655c53 	.word	0x6e655c53
 80059dc:	afaf8077 	.word	0xafaf8077
 80059e0:	afafafaf 	.word	0xafafafaf
 80059e4:	9289afaf 	.word	0x9289afaf
 80059e8:	afafafaf 	.word	0xafafafaf
 80059ec:	afafafaf 	.word	0xafafafaf
 80059f0:	afafafaf 	.word	0xafafafaf
 80059f4:	afafafaf 	.word	0xafafafaf
 80059f8:	13a59baf 	.word	0x13a59baf
		status = VL53L1_preset_mode_low_power_auto_long_ranging(
 80059fc:	9002      	str	r0, [sp, #8]
 80059fe:	4633      	mov	r3, r6
 8005a00:	9101      	str	r1, [sp, #4]
 8005a02:	4658      	mov	r0, fp
 8005a04:	9200      	str	r2, [sp, #0]
 8005a06:	4639      	mov	r1, r7
 8005a08:	4642      	mov	r2, r8
 8005a0a:	f001 fa93 	bl	8006f34 <VL53L1_preset_mode_low_power_auto_long_ranging>
	if (status == VL53L1_ERROR_NONE) {
 8005a0e:	bb00      	cbnz	r0, 8005a52 <VL53L1_set_preset_mode+0xc6>
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8005a10:	f8b4 315e 	ldrh.w	r3, [r4, #350]	; 0x15e
		pstatic->dss_config__target_total_rate_mcps =
 8005a14:	f8a4 a164 	strh.w	sl, [r4, #356]	; 0x164
		pdev->dss_config__target_total_rate_mcps    =
 8005a18:	f8a4 a018 	strh.w	sl, [r4, #24]
	if (pdev->stat_nvm.osc_measured__fast_osc__frequency == 0)
 8005a1c:	2b00      	cmp	r3, #0
 8005a1e:	f000 808c 	beq.w	8005b3a <VL53L1_set_preset_mode+0x1ae>
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8005a22:	9a0e      	ldr	r2, [sp, #56]	; 0x38
		status =
 8005a24:	4648      	mov	r0, r9
		pdev->phasecal_config_timeout_us = phasecal_config_timeout_us;
 8005a26:	f8c4 9008 	str.w	r9, [r4, #8]
		pdev->mm_config_timeout_us       = mm_config_timeout_us;
 8005a2a:	60e2      	str	r2, [r4, #12]
		status =
 8005a2c:	4611      	mov	r1, r2
		pdev->range_config_timeout_us    = range_config_timeout_us;
 8005a2e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005a30:	6122      	str	r2, [r4, #16]
		status =
 8005a32:	f8cd 8004 	str.w	r8, [sp, #4]
 8005a36:	9700      	str	r7, [sp, #0]
 8005a38:	f001 fdf4 	bl	8007624 <VL53L1_calc_timeout_register_values>
	if (status == VL53L1_ERROR_NONE)
 8005a3c:	b948      	cbnz	r0, 8005a52 <VL53L1_set_preset_mode+0xc6>
	if (pdev->dbg_results.result__osc_calibrate_val == 0)
 8005a3e:	f8b4 32b4 	ldrh.w	r3, [r4, #692]	; 0x2b4
 8005a42:	2b00      	cmp	r3, #0
 8005a44:	d079      	beq.n	8005b3a <VL53L1_set_preset_mode+0x1ae>
			inter_measurement_period_ms *
 8005a46:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005a48:	fb02 f303 	mul.w	r3, r2, r3
		pdev->inter_measurement_period_ms = inter_measurement_period_ms;
 8005a4c:	6162      	str	r2, [r4, #20]
		pdev->tim_cfg.system__intermeasurement_period = \
 8005a4e:	f8c4 31ac 	str.w	r3, [r4, #428]	; 0x1ac
}
 8005a52:	b005      	add	sp, #20
 8005a54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status = VL53L1_preset_mode_standard_ranging(
 8005a58:	9101      	str	r1, [sp, #4]
 8005a5a:	4633      	mov	r3, r6
 8005a5c:	9200      	str	r2, [sp, #0]
 8005a5e:	4658      	mov	r0, fp
 8005a60:	4642      	mov	r2, r8
 8005a62:	4639      	mov	r1, r7
 8005a64:	f000 fc60 	bl	8006328 <VL53L1_preset_mode_standard_ranging>
		break;
 8005a68:	e7d1      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_short_range(
 8005a6a:	9101      	str	r1, [sp, #4]
 8005a6c:	4633      	mov	r3, r6
 8005a6e:	9200      	str	r2, [sp, #0]
 8005a70:	4658      	mov	r0, fp
 8005a72:	4642      	mov	r2, r8
 8005a74:	4639      	mov	r1, r7
 8005a76:	f000 fceb 	bl	8006450 <VL53L1_preset_mode_standard_ranging_short_range>
		break;
 8005a7a:	e7c8      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_long_range(
 8005a7c:	9101      	str	r1, [sp, #4]
 8005a7e:	4633      	mov	r3, r6
 8005a80:	9200      	str	r2, [sp, #0]
 8005a82:	4658      	mov	r0, fp
 8005a84:	4642      	mov	r2, r8
 8005a86:	4639      	mov	r1, r7
 8005a88:	f000 fd76 	bl	8006578 <VL53L1_preset_mode_standard_ranging_long_range>
		break;
 8005a8c:	e7bf      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_mm1_cal(
 8005a8e:	9101      	str	r1, [sp, #4]
 8005a90:	4633      	mov	r3, r6
 8005a92:	9200      	str	r2, [sp, #0]
 8005a94:	4658      	mov	r0, fp
 8005a96:	4642      	mov	r2, r8
 8005a98:	4639      	mov	r1, r7
 8005a9a:	f000 fe01 	bl	80066a0 <VL53L1_preset_mode_standard_ranging_mm1_cal>
		break;
 8005a9e:	e7b6      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_standard_ranging_mm2_cal(
 8005aa0:	9101      	str	r1, [sp, #4]
 8005aa2:	4633      	mov	r3, r6
 8005aa4:	9200      	str	r2, [sp, #0]
 8005aa6:	4658      	mov	r0, fp
 8005aa8:	4642      	mov	r2, r8
 8005aaa:	4639      	mov	r1, r7
 8005aac:	f000 fe8e 	bl	80067cc <VL53L1_preset_mode_standard_ranging_mm2_cal>
		break;
 8005ab0:	e7ad      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_timed_ranging(
 8005ab2:	9101      	str	r1, [sp, #4]
 8005ab4:	4633      	mov	r3, r6
 8005ab6:	9200      	str	r2, [sp, #0]
 8005ab8:	4658      	mov	r0, fp
 8005aba:	4642      	mov	r2, r8
 8005abc:	4639      	mov	r1, r7
 8005abe:	f000 ff1b 	bl	80068f8 <VL53L1_preset_mode_timed_ranging>
		break;
 8005ac2:	e7a4      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_timed_ranging_short_range(
 8005ac4:	9101      	str	r1, [sp, #4]
 8005ac6:	4633      	mov	r3, r6
 8005ac8:	9200      	str	r2, [sp, #0]
 8005aca:	4658      	mov	r0, fp
 8005acc:	4642      	mov	r2, r8
 8005ace:	4639      	mov	r1, r7
 8005ad0:	f000 ffb0 	bl	8006a34 <VL53L1_preset_mode_timed_ranging_short_range>
		break;
 8005ad4:	e79b      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_timed_ranging_long_range(
 8005ad6:	9101      	str	r1, [sp, #4]
 8005ad8:	4633      	mov	r3, r6
 8005ada:	9200      	str	r2, [sp, #0]
 8005adc:	4658      	mov	r0, fp
 8005ade:	4642      	mov	r2, r8
 8005ae0:	4639      	mov	r1, r7
 8005ae2:	f001 f847 	bl	8006b74 <VL53L1_preset_mode_timed_ranging_long_range>
		break;
 8005ae6:	e792      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_olt(
 8005ae8:	9101      	str	r1, [sp, #4]
 8005aea:	4633      	mov	r3, r6
 8005aec:	9200      	str	r2, [sp, #0]
 8005aee:	4658      	mov	r0, fp
 8005af0:	4642      	mov	r2, r8
 8005af2:	4639      	mov	r1, r7
 8005af4:	f001 fb58 	bl	80071a8 <VL53L1_preset_mode_olt>
		break;
 8005af8:	e789      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_singleshot_ranging(
 8005afa:	9101      	str	r1, [sp, #4]
 8005afc:	4633      	mov	r3, r6
 8005afe:	9200      	str	r2, [sp, #0]
 8005b00:	4658      	mov	r0, fp
 8005b02:	4642      	mov	r2, r8
 8005b04:	4639      	mov	r1, r7
 8005b06:	f001 fab3 	bl	8007070 <VL53L1_preset_mode_singleshot_ranging>
		break;
 8005b0a:	e780      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_low_power_auto_short_ranging(
 8005b0c:	9002      	str	r0, [sp, #8]
 8005b0e:	4633      	mov	r3, r6
 8005b10:	9101      	str	r1, [sp, #4]
 8005b12:	4658      	mov	r0, fp
 8005b14:	9200      	str	r2, [sp, #0]
 8005b16:	4639      	mov	r1, r7
 8005b18:	4642      	mov	r2, r8
 8005b1a:	f001 f96b 	bl	8006df4 <VL53L1_preset_mode_low_power_auto_short_ranging>
		break;
 8005b1e:	e776      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_preset_mode_low_power_auto_ranging(
 8005b20:	9002      	str	r0, [sp, #8]
 8005b22:	4633      	mov	r3, r6
 8005b24:	9101      	str	r1, [sp, #4]
 8005b26:	4658      	mov	r0, fp
 8005b28:	9200      	str	r2, [sp, #0]
 8005b2a:	4639      	mov	r1, r7
 8005b2c:	4642      	mov	r2, r8
 8005b2e:	f001 f8bd 	bl	8006cac <VL53L1_preset_mode_low_power_auto_ranging>
		break;
 8005b32:	e76c      	b.n	8005a0e <VL53L1_set_preset_mode+0x82>
		status = VL53L1_ERROR_INVALID_PARAMS;
 8005b34:	f06f 0003 	mvn.w	r0, #3
 8005b38:	e78b      	b.n	8005a52 <VL53L1_set_preset_mode+0xc6>
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8005b3a:	f06f 000e 	mvn.w	r0, #14
 8005b3e:	e788      	b.n	8005a52 <VL53L1_set_preset_mode+0xc6>

08005b40 <VL53L1_set_lite_sigma_threshold>:
	pdev->tim_cfg.range_config__sigma_thresh = lite_sigma;
 8005b40:	f8a0 11a6 	strh.w	r1, [r0, #422]	; 0x1a6
}
 8005b44:	2000      	movs	r0, #0
 8005b46:	4770      	bx	lr

08005b48 <VL53L1_set_lite_min_count_rate>:
	pdev->tim_cfg.range_config__min_count_rate_rtn_limit_mcps =
 8005b48:	f8a0 11a8 	strh.w	r1, [r0, #424]	; 0x1a8
}
 8005b4c:	2000      	movs	r0, #0
 8005b4e:	4770      	bx	lr

08005b50 <VL53L1_init_and_start_range>:

VL53L1_Error VL53L1_init_and_start_range(
	VL53L1_DEV                     Dev,
	uint8_t                        measurement_mode,
	VL53L1_DeviceConfigLevel       device_config_level)
{
 8005b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b54:	4604      	mov	r4, r0
	pdev->measurement_mode = measurement_mode;

	/* Merge measurement mode with mode_start */

	psystem->system__mode_start =
		(psystem->system__mode_start &
 8005b56:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
{
 8005b5a:	4616      	mov	r6, r2
		VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK) |
		measurement_mode;

	/* copy in rit from xtalk config */

	pdev->stat_cfg.algo__range_ignore_threshold_mcps =
 8005b5c:	f8b0 0142 	ldrh.w	r0, [r0, #322]	; 0x142
		(psystem->system__mode_start &
 8005b60:	f003 030f 	and.w	r3, r3, #15
	/* Start Patch_LowPowerAutoMode */

	/* doing this ensures stop_range followed by a get_device_results does
	 * not mess up the counters */

	if (pdev->low_power_auto_data.low_power_auto_range_count == 0xFF) {
 8005b64:	f894 22e6 	ldrb.w	r2, [r4, #742]	; 0x2e6
	pdev->measurement_mode = measurement_mode;
 8005b68:	70a1      	strb	r1, [r4, #2]
{
 8005b6a:	b0c9      	sub	sp, #292	; 0x124
		VL53L1_DEVICEMEASUREMENTMODE_STOP_MASK) |
 8005b6c:	4319      	orrs	r1, r3
	if (pdev->low_power_auto_data.low_power_auto_range_count == 0xFF) {
 8005b6e:	2aff      	cmp	r2, #255	; 0xff
	pdev->stat_cfg.algo__range_ignore_threshold_mcps =
 8005b70:	f8a4 017c 	strh.w	r0, [r4, #380]	; 0x17c
	psystem->system__mode_start =
 8005b74:	f884 11cc 	strb.w	r1, [r4, #460]	; 0x1cc
	if (pdev->low_power_auto_data.low_power_auto_range_count == 0xFF) {
 8005b78:	d102      	bne.n	8005b80 <VL53L1_init_and_start_range+0x30>
		pdev->low_power_auto_data.low_power_auto_range_count = 0x0;
 8005b7a:	2300      	movs	r3, #0
 8005b7c:	f884 32e6 	strb.w	r3, [r4, #742]	; 0x2e6
	}

	/* For Presence. Override threshold config */
	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8005b80:	f8d4 22e4 	ldr.w	r2, [r4, #740]	; 0x2e4
 8005b84:	4bbf      	ldr	r3, [pc, #764]	; (8005e84 <VL53L1_init_and_start_range+0x334>)
 8005b86:	4013      	ands	r3, r2
 8005b88:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005b8c:	d00e      	beq.n	8005bac <VL53L1_init_and_start_range+0x5c>
			device_config_level =
				VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS;
		}
	}

	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8005b8e:	4abe      	ldr	r2, [pc, #760]	; (8005e88 <VL53L1_init_and_start_range+0x338>)
 8005b90:	4293      	cmp	r3, r2
 8005b92:	d03e      	beq.n	8005c12 <VL53L1_init_and_start_range+0xc2>

	/*
	 * Determine Initial I2C index
	 */

	switch (device_config_level) {
 8005b94:	1e73      	subs	r3, r6, #1
 8005b96:	2b05      	cmp	r3, #5
 8005b98:	f200 8178 	bhi.w	8005e8c <VL53L1_init_and_start_range+0x33c>
 8005b9c:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005ba0:	01260109 	.word	0x01260109
 8005ba4:	00f00141 	.word	0x00f00141
 8005ba8:	015a01a8 	.word	0x015a01a8
		if ((pdev->dyn_cfg.system__sequence_config & (
 8005bac:	f894 31c5 	ldrb.w	r3, [r4, #453]	; 0x1c5
		pdev->gen_cfg.system__interrupt_config_gpio = 1 << 5;
 8005bb0:	2220      	movs	r2, #32
			pdev->gen_cfg.system__interrupt_config_gpio;
 8005bb2:	f894 1186 	ldrb.w	r1, [r4, #390]	; 0x186
		if ((pdev->dyn_cfg.system__sequence_config & (
 8005bb6:	f013 0f60 	tst.w	r3, #96	; 0x60
		pdev->gen_cfg.system__interrupt_config_gpio = 1 << 5;
 8005bba:	f884 2186 	strb.w	r2, [r4, #390]	; 0x186
		pdev->low_power_auto_data.saved_interrupt_config =
 8005bbe:	f884 12e7 	strb.w	r1, [r4, #743]	; 0x2e7
		if ((pdev->dyn_cfg.system__sequence_config & (
 8005bc2:	f000 80d8 	beq.w	8005d76 <VL53L1_init_and_start_range+0x226>
			pdev->customer.algo__part_to_part_range_offset_mm = 0x0;
 8005bc6:	2200      	movs	r2, #0
 8005bc8:	f8d4 02e4 	ldr.w	r0, [r4, #740]	; 0x2e4
		if (device_config_level <
 8005bcc:	2e04      	cmp	r6, #4
 8005bce:	4bad      	ldr	r3, [pc, #692]	; (8005e84 <VL53L1_init_and_start_range+0x334>)
 8005bd0:	f8a4 2054 	strh.w	r2, [r4, #84]	; 0x54
 8005bd4:	ea03 0300 	and.w	r3, r3, r0
 8005bd8:	d8d9      	bhi.n	8005b8e <VL53L1_init_and_start_range+0x3e>
	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8005bda:	4aab      	ldr	r2, [pc, #684]	; (8005e88 <VL53L1_init_and_start_range+0x338>)
 8005bdc:	4293      	cmp	r3, r2
 8005bde:	d01a      	beq.n	8005c16 <VL53L1_init_and_start_range+0xc6>
 8005be0:	234d      	movs	r3, #77	; 0x4d
 8005be2:	2037      	movs	r0, #55	; 0x37
 8005be4:	f64f 76f4 	movw	r6, #65524	; 0xfff4
 8005be8:	2501      	movs	r5, #1
 8005bea:	9307      	str	r3, [sp, #28]
 8005bec:	2317      	movs	r3, #23
 8005bee:	f04f 0b64 	mov.w	fp, #100	; 0x64
 8005bf2:	9500      	str	r5, [sp, #0]
 8005bf4:	9306      	str	r3, [sp, #24]
 8005bf6:	2300      	movs	r3, #0
 8005bf8:	46a9      	mov	r9, r5
 8005bfa:	46aa      	mov	sl, r5
 8005bfc:	46a8      	mov	r8, r5
 8005bfe:	277b      	movs	r7, #123	; 0x7b
 8005c00:	e9cd 3004 	strd	r3, r0, [sp, #16]
 8005c04:	2376      	movs	r3, #118	; 0x76
 8005c06:	e9cd 6302 	strd	r6, r3, [sp, #8]
	case VL53L1_DEVICECONFIGLEVEL_FULL:
		i2c_index = VL53L1_STATIC_NVM_MANAGED_I2C_INDEX;
		break;
	case VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS:
		i2c_index = VL53L1_CUSTOMER_NVM_MANAGED_I2C_INDEX;
 8005c0a:	230d      	movs	r3, #13
	if ((pdev->low_power_auto_data.is_low_power_auto_mode == 1) &&
 8005c0c:	2605      	movs	r6, #5
		i2c_index = VL53L1_CUSTOMER_NVM_MANAGED_I2C_INDEX;
 8005c0e:	9301      	str	r3, [sp, #4]
 8005c10:	e01a      	b.n	8005c48 <VL53L1_init_and_start_range+0xf8>
 8005c12:	f894 12e7 	ldrb.w	r1, [r4, #743]	; 0x2e7
		pdev->gen_cfg.system__interrupt_config_gpio =
 8005c16:	2359      	movs	r3, #89	; 0x59
 8005c18:	f04f 0e23 	mov.w	lr, #35	; 0x23
 8005c1c:	2501      	movs	r5, #1
 8005c1e:	f884 1186 	strb.w	r1, [r4, #390]	; 0x186
 8005c22:	9307      	str	r3, [sp, #28]
 8005c24:	2343      	movs	r3, #67	; 0x43
 8005c26:	2100      	movs	r1, #0
 8005c28:	f04f 0b70 	mov.w	fp, #112	; 0x70
 8005c2c:	46a9      	mov	r9, r5
 8005c2e:	46aa      	mov	sl, r5
 8005c30:	46a8      	mov	r8, r5
 8005c32:	2787      	movs	r7, #135	; 0x87
		device_config_level = VL53L1_DEVICECONFIGLEVEL_FULL;
 8005c34:	2606      	movs	r6, #6
		pdev->gen_cfg.system__interrupt_config_gpio =
 8005c36:	9500      	str	r5, [sp, #0]
		i2c_index = VL53L1_STATIC_NVM_MANAGED_I2C_INDEX;
 8005c38:	9501      	str	r5, [sp, #4]
		pdev->gen_cfg.system__interrupt_config_gpio =
 8005c3a:	e9cd 3e05 	strd	r3, lr, [sp, #20]
 8005c3e:	230c      	movs	r3, #12
 8005c40:	9304      	str	r3, [sp, #16]
 8005c42:	2382      	movs	r3, #130	; 0x82
 8005c44:	e9cd 1302 	strd	r1, r3, [sp, #8]

	/* Initialize buffer */

	pbuffer = &buffer[0];
	for (i = 0 ; i < i2c_buffer_size_bytes ; i++) {
		*pbuffer++ = 0;
 8005c48:	1e7a      	subs	r2, r7, #1
 8005c4a:	2100      	movs	r1, #0
 8005c4c:	a808      	add	r0, sp, #32
 8005c4e:	b292      	uxth	r2, r2
 8005c50:	3201      	adds	r2, #1
 8005c52:	f014 fb6a 	bl	801a32a <memset>
	}

	/* Build I2C buffer */

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_FULL &&
 8005c56:	2e05      	cmp	r6, #5
 8005c58:	d87a      	bhi.n	8005d50 <VL53L1_init_and_start_range+0x200>
 8005c5a:	2201      	movs	r2, #1
	VL53L1_Error status = VL53L1_ERROR_NONE;
 8005c5c:	2000      	movs	r0, #0
				pstatic_nvm,
				VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS &&
 8005c5e:	f1b8 0f00 	cmp.w	r8, #0
 8005c62:	d14a      	bne.n	8005cfa <VL53L1_init_and_start_range+0x1aa>
				pcustomer_nvm,
				VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_STATIC_ONWARDS &&
 8005c64:	f1ba 0f00 	cmp.w	sl, #0
 8005c68:	d00c      	beq.n	8005c84 <VL53L1_init_and_start_range+0x134>
 8005c6a:	b15a      	cbz	r2, 8005c84 <VL53L1_init_and_start_range+0x134>
		status == VL53L1_ERROR_NONE) {

		i2c_buffer_offset_bytes = \
			VL53L1_STATIC_CONFIG_I2C_INDEX - i2c_index;

		status =
 8005c6c:	9b06      	ldr	r3, [sp, #24]
 8005c6e:	aa08      	add	r2, sp, #32
 8005c70:	2120      	movs	r1, #32
 8005c72:	f504 70b2 	add.w	r0, r4, #356	; 0x164
 8005c76:	4413      	add	r3, r2
 8005c78:	461a      	mov	r2, r3
 8005c7a:	f001 fee7 	bl	8007a4c <VL53L1_i2c_encode_static_config>
 8005c7e:	fab0 f280 	clz	r2, r0
 8005c82:	0952      	lsrs	r2, r2, #5
				pstatic,
				VL53L1_STATIC_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_GENERAL_ONWARDS &&
 8005c84:	f1b9 0f00 	cmp.w	r9, #0
 8005c88:	d00c      	beq.n	8005ca4 <VL53L1_init_and_start_range+0x154>
 8005c8a:	b15a      	cbz	r2, 8005ca4 <VL53L1_init_and_start_range+0x154>
		status == VL53L1_ERROR_NONE) {

		i2c_buffer_offset_bytes =
				VL53L1_GENERAL_CONFIG_I2C_INDEX - i2c_index;

		status =
 8005c8c:	9b05      	ldr	r3, [sp, #20]
 8005c8e:	aa08      	add	r2, sp, #32
 8005c90:	2116      	movs	r1, #22
 8005c92:	f504 70c2 	add.w	r0, r4, #388	; 0x184
 8005c96:	4413      	add	r3, r2
 8005c98:	461a      	mov	r2, r3
 8005c9a:	f001 ff45 	bl	8007b28 <VL53L1_i2c_encode_general_config>
 8005c9e:	fab0 f280 	clz	r2, r0
 8005ca2:	0952      	lsrs	r2, r2, #5
				pgeneral,
				VL53L1_GENERAL_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_TIMING_ONWARDS &&
 8005ca4:	9b00      	ldr	r3, [sp, #0]
 8005ca6:	b163      	cbz	r3, 8005cc2 <VL53L1_init_and_start_range+0x172>
 8005ca8:	b15a      	cbz	r2, 8005cc2 <VL53L1_init_and_start_range+0x172>
		status == VL53L1_ERROR_NONE) {

		i2c_buffer_offset_bytes = \
				VL53L1_TIMING_CONFIG_I2C_INDEX - i2c_index;

		status =
 8005caa:	9b07      	ldr	r3, [sp, #28]
 8005cac:	aa08      	add	r2, sp, #32
 8005cae:	2117      	movs	r1, #23
 8005cb0:	f504 70ce 	add.w	r0, r4, #412	; 0x19c
 8005cb4:	4413      	add	r3, r2
 8005cb6:	461a      	mov	r2, r3
 8005cb8:	f001 ff7c 	bl	8007bb4 <VL53L1_i2c_encode_timing_config>
 8005cbc:	fab0 f280 	clz	r2, r0
 8005cc0:	0952      	lsrs	r2, r2, #5
				ptiming,
				VL53L1_TIMING_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_DYNAMIC_ONWARDS &&
 8005cc2:	b1b5      	cbz	r5, 8005cf2 <VL53L1_init_and_start_range+0x1a2>
 8005cc4:	b1aa      	cbz	r2, 8005cf2 <VL53L1_init_and_start_range+0x1a2>

		i2c_buffer_offset_bytes = \
			VL53L1_DYNAMIC_CONFIG_I2C_INDEX - i2c_index;

		/* If in back to back mode, use GPH ID from cfg_state */
		if ((psystem->system__mode_start &
 8005cc6:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8005cca:	069b      	lsls	r3, r3, #26
 8005ccc:	d509      	bpl.n	8005ce2 <VL53L1_init_and_start_range+0x192>
			VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK) ==
			VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK) {
			pdynamic->system__grouped_parameter_hold_0 = pstate->cfg_gph_id | 0x01;
 8005cce:	f894 202e 	ldrb.w	r2, [r4, #46]	; 0x2e
 8005cd2:	f042 0301 	orr.w	r3, r2, #1
			pdynamic->system__grouped_parameter_hold_1 = pstate->cfg_gph_id | 0x01;
			pdynamic->system__grouped_parameter_hold   = pstate->cfg_gph_id;
 8005cd6:	f884 21c6 	strb.w	r2, [r4, #454]	; 0x1c6
			pdynamic->system__grouped_parameter_hold_0 = pstate->cfg_gph_id | 0x01;
 8005cda:	f884 31b4 	strb.w	r3, [r4, #436]	; 0x1b4
			pdynamic->system__grouped_parameter_hold_1 = pstate->cfg_gph_id | 0x01;
 8005cde:	f884 31c0 	strb.w	r3, [r4, #448]	; 0x1c0
		}
		status =
 8005ce2:	ab08      	add	r3, sp, #32
 8005ce4:	2112      	movs	r1, #18
 8005ce6:	f504 70da 	add.w	r0, r4, #436	; 0x1b4
 8005cea:	eb03 020b 	add.w	r2, r3, fp
 8005cee:	f001 ffa5 	bl	8007c3c <VL53L1_i2c_encode_dynamic_config>
				pdynamic,
				VL53L1_DYNAMIC_CONFIG_I2C_SIZE_BYTES,
				&buffer[i2c_buffer_offset_bytes]);
	}

	if (status == VL53L1_ERROR_NONE) {
 8005cf2:	b178      	cbz	r0, 8005d14 <VL53L1_init_and_start_range+0x1c4>
		status = VL53L1_update_ll_driver_cfg_state(Dev);

	LOG_FUNCTION_END(status);

	return status;
}
 8005cf4:	b049      	add	sp, #292	; 0x124
 8005cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status =
 8005cfa:	9b04      	ldr	r3, [sp, #16]
 8005cfc:	aa08      	add	r2, sp, #32
 8005cfe:	2117      	movs	r1, #23
 8005d00:	f104 0042 	add.w	r0, r4, #66	; 0x42
 8005d04:	4413      	add	r3, r2
 8005d06:	461a      	mov	r2, r3
 8005d08:	f001 fdfc 	bl	8007904 <VL53L1_i2c_encode_customer_nvm_managed>
 8005d0c:	fab0 f280 	clz	r2, r0
 8005d10:	0952      	lsrs	r2, r2, #5
 8005d12:	e7a7      	b.n	8005c64 <VL53L1_init_and_start_range+0x114>
		status =
 8005d14:	aa08      	add	r2, sp, #32
 8005d16:	9b03      	ldr	r3, [sp, #12]
 8005d18:	2105      	movs	r1, #5
 8005d1a:	f504 70e4 	add.w	r0, r4, #456	; 0x1c8
 8005d1e:	4413      	add	r3, r2
 8005d20:	461a      	mov	r2, r3
 8005d22:	f001 ffcd 	bl	8007cc0 <VL53L1_i2c_encode_system_control>
	if (status == VL53L1_ERROR_NONE) {
 8005d26:	2800      	cmp	r0, #0
 8005d28:	d1e4      	bne.n	8005cf4 <VL53L1_init_and_start_range+0x1a4>
		status =
 8005d2a:	463b      	mov	r3, r7
 8005d2c:	aa08      	add	r2, sp, #32
 8005d2e:	9901      	ldr	r1, [sp, #4]
 8005d30:	4620      	mov	r0, r4
 8005d32:	f002 f87d 	bl	8007e30 <VL53L1_WriteMulti>
	if (status == VL53L1_ERROR_NONE)
 8005d36:	2800      	cmp	r0, #0
 8005d38:	d1dc      	bne.n	8005cf4 <VL53L1_init_and_start_range+0x1a4>
		status = VL53L1_update_ll_driver_rd_state(Dev);
 8005d3a:	4620      	mov	r0, r4
 8005d3c:	f001 fae6 	bl	800730c <VL53L1_update_ll_driver_rd_state>
	if (status == VL53L1_ERROR_NONE)
 8005d40:	2800      	cmp	r0, #0
 8005d42:	d1d7      	bne.n	8005cf4 <VL53L1_init_and_start_range+0x1a4>
		status = VL53L1_update_ll_driver_cfg_state(Dev);
 8005d44:	4620      	mov	r0, r4
 8005d46:	f001 fb2f 	bl	80073a8 <VL53L1_update_ll_driver_cfg_state>
}
 8005d4a:	b049      	add	sp, #292	; 0x124
 8005d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		status =
 8005d50:	9b02      	ldr	r3, [sp, #8]
 8005d52:	aa08      	add	r2, sp, #32
 8005d54:	210b      	movs	r1, #11
 8005d56:	f504 70ac 	add.w	r0, r4, #344	; 0x158
 8005d5a:	4413      	add	r3, r2
 8005d5c:	461a      	mov	r2, r3
 8005d5e:	f001 fd69 	bl	8007834 <VL53L1_i2c_encode_static_nvm_managed>
 8005d62:	fab0 f280 	clz	r2, r0
 8005d66:	0952      	lsrs	r2, r2, #5
 8005d68:	ea08 0802 	and.w	r8, r8, r2
	if (device_config_level >= VL53L1_DEVICECONFIGLEVEL_CUSTOMER_ONWARDS &&
 8005d6c:	f1b8 0f00 	cmp.w	r8, #0
 8005d70:	f43f af78 	beq.w	8005c64 <VL53L1_init_and_start_range+0x114>
 8005d74:	e7c1      	b.n	8005cfa <VL53L1_init_and_start_range+0x1aa>
				pdev->customer.mm_config__outer_offset_mm * 4;
 8005d76:	f8b4 2058 	ldrh.w	r2, [r4, #88]	; 0x58
 8005d7a:	0092      	lsls	r2, r2, #2
 8005d7c:	b212      	sxth	r2, r2
 8005d7e:	e723      	b.n	8005bc8 <VL53L1_init_and_start_range+0x78>
	switch (device_config_level) {
 8005d80:	2300      	movs	r3, #0
 8005d82:	2236      	movs	r2, #54	; 0x36
 8005d84:	f64f 71dd 	movw	r1, #65501	; 0xffdd
 8005d88:	2501      	movs	r5, #1
 8005d8a:	9306      	str	r3, [sp, #24]
 8005d8c:	4698      	mov	r8, r3
 8005d8e:	9207      	str	r2, [sp, #28]
 8005d90:	f64f 73e9 	movw	r3, #65513	; 0xffe9
 8005d94:	2220      	movs	r2, #32
 8005d96:	f04f 0b4d 	mov.w	fp, #77	; 0x4d
 8005d9a:	9500      	str	r5, [sp, #0]
 8005d9c:	46a9      	mov	r9, r5
 8005d9e:	46aa      	mov	sl, r5
 8005da0:	2764      	movs	r7, #100	; 0x64
 8005da2:	e9cd 3204 	strd	r3, r2, [sp, #16]
 8005da6:	235f      	movs	r3, #95	; 0x5f
 8005da8:	e9cd 1302 	strd	r1, r3, [sp, #8]
		i2c_index = VL53L1_STATIC_CONFIG_I2C_INDEX;
 8005dac:	2324      	movs	r3, #36	; 0x24
 8005dae:	9301      	str	r3, [sp, #4]
 8005db0:	e74a      	b.n	8005c48 <VL53L1_init_and_start_range+0xf8>
		break;
 8005db2:	f64f 73b3 	movw	r3, #65459	; 0xffb3
 8005db6:	f64f 7ee9 	movw	lr, #65513	; 0xffe9
 8005dba:	f64f 7190 	movw	r1, #65424	; 0xff90
 8005dbe:	f04f 0b00 	mov.w	fp, #0
 8005dc2:	2717      	movs	r7, #23
 8005dc4:	2501      	movs	r5, #1
 8005dc6:	f8cd b000 	str.w	fp, [sp]
 8005dca:	46d9      	mov	r9, fp
 8005dcc:	46da      	mov	sl, fp
 8005dce:	46d8      	mov	r8, fp
 8005dd0:	e9cd 3e06 	strd	r3, lr, [sp, #24]
 8005dd4:	f64f 73d3 	movw	r3, #65491	; 0xffd3
 8005dd8:	9305      	str	r3, [sp, #20]
 8005dda:	f64f 739c 	movw	r3, #65436	; 0xff9c
 8005dde:	9304      	str	r3, [sp, #16]
 8005de0:	2312      	movs	r3, #18
 8005de2:	e9cd 1302 	strd	r1, r3, [sp, #8]
		i2c_index = VL53L1_DYNAMIC_CONFIG_I2C_INDEX;
 8005de6:	2371      	movs	r3, #113	; 0x71
 8005de8:	9301      	str	r3, [sp, #4]
		break;
 8005dea:	e72d      	b.n	8005c48 <VL53L1_init_and_start_range+0xf8>
		break;
 8005dec:	2300      	movs	r3, #0
 8005dee:	f64f 70ea 	movw	r0, #65514	; 0xffea
 8005df2:	f64f 77a7 	movw	r7, #65447	; 0xffa7
 8005df6:	2501      	movs	r5, #1
 8005df8:	4699      	mov	r9, r3
 8005dfa:	9307      	str	r3, [sp, #28]
 8005dfc:	4698      	mov	r8, r3
 8005dfe:	f64f 73b3 	movw	r3, #65459	; 0xffb3
 8005e02:	f64f 72ca 	movw	r2, #65482	; 0xffca
 8005e06:	f04f 0b17 	mov.w	fp, #23
 8005e0a:	46ca      	mov	sl, r9
 8005e0c:	9500      	str	r5, [sp, #0]
 8005e0e:	9206      	str	r2, [sp, #24]
 8005e10:	e9cd 3004 	strd	r3, r0, [sp, #16]
 8005e14:	2329      	movs	r3, #41	; 0x29
 8005e16:	e9cd 7302 	strd	r7, r3, [sp, #8]
		i2c_index = VL53L1_TIMING_CONFIG_I2C_INDEX;
 8005e1a:	235a      	movs	r3, #90	; 0x5a
		break;
 8005e1c:	272e      	movs	r7, #46	; 0x2e
		i2c_index = VL53L1_TIMING_CONFIG_I2C_INDEX;
 8005e1e:	9301      	str	r3, [sp, #4]
		break;
 8005e20:	e712      	b.n	8005c48 <VL53L1_init_and_start_range+0xf8>
		break;
 8005e22:	2300      	movs	r3, #0
 8005e24:	2216      	movs	r2, #22
 8005e26:	2501      	movs	r5, #1
 8005e28:	2744      	movs	r7, #68	; 0x44
 8005e2a:	9305      	str	r3, [sp, #20]
 8005e2c:	469a      	mov	sl, r3
 8005e2e:	4698      	mov	r8, r3
 8005e30:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 8005e34:	9207      	str	r2, [sp, #28]
 8005e36:	f64f 72bd 	movw	r2, #65469	; 0xffbd
 8005e3a:	9306      	str	r3, [sp, #24]
 8005e3c:	f64f 73c9 	movw	r3, #65481	; 0xffc9
 8005e40:	46a9      	mov	r9, r5
 8005e42:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
 8005e46:	9304      	str	r3, [sp, #16]
 8005e48:	233f      	movs	r3, #63	; 0x3f
 8005e4a:	e9cd 5700 	strd	r5, r7, [sp]
 8005e4e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8005e52:	e6f9      	b.n	8005c48 <VL53L1_init_and_start_range+0xf8>
	switch (device_config_level) {
 8005e54:	2359      	movs	r3, #89	; 0x59
 8005e56:	2743      	movs	r7, #67	; 0x43
 8005e58:	2501      	movs	r5, #1
 8005e5a:	f04f 0c00 	mov.w	ip, #0
 8005e5e:	9307      	str	r3, [sp, #28]
 8005e60:	2323      	movs	r3, #35	; 0x23
 8005e62:	f04f 0b70 	mov.w	fp, #112	; 0x70
 8005e66:	9500      	str	r5, [sp, #0]
 8005e68:	9306      	str	r3, [sp, #24]
 8005e6a:	230c      	movs	r3, #12
 8005e6c:	46a9      	mov	r9, r5
 8005e6e:	46aa      	mov	sl, r5
 8005e70:	46a8      	mov	r8, r5
		i2c_index = VL53L1_STATIC_NVM_MANAGED_I2C_INDEX;
 8005e72:	9501      	str	r5, [sp, #4]
	switch (device_config_level) {
 8005e74:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8005e78:	2382      	movs	r3, #130	; 0x82
 8005e7a:	2787      	movs	r7, #135	; 0x87
 8005e7c:	e9cd c302 	strd	ip, r3, [sp, #8]
 8005e80:	e6e2      	b.n	8005c48 <VL53L1_init_and_start_range+0xf8>
 8005e82:	bf00      	nop
 8005e84:	00ffff00 	.word	0x00ffff00
 8005e88:	00010100 	.word	0x00010100
 8005e8c:	2e04      	cmp	r6, #4
		break;
 8005e8e:	f64f 70a1 	movw	r0, #65441	; 0xffa1
 8005e92:	f64f 7c7e 	movw	ip, #65406	; 0xff7e
 8005e96:	f64f 7bee 	movw	fp, #65518	; 0xffee
 8005e9a:	bf94      	ite	ls
 8005e9c:	f04f 0800 	movls.w	r8, #0
 8005ea0:	f04f 0801 	movhi.w	r8, #1
 8005ea4:	2e03      	cmp	r6, #3
 8005ea6:	f04f 0705 	mov.w	r7, #5
 8005eaa:	bf94      	ite	ls
 8005eac:	f04f 0a00 	movls.w	sl, #0
 8005eb0:	f04f 0a01 	movhi.w	sl, #1
 8005eb4:	2e02      	cmp	r6, #2
 8005eb6:	bf94      	ite	ls
 8005eb8:	f04f 0900 	movls.w	r9, #0
 8005ebc:	f04f 0901 	movhi.w	r9, #1
 8005ec0:	2e01      	cmp	r6, #1
 8005ec2:	bf94      	ite	ls
 8005ec4:	2300      	movls	r3, #0
 8005ec6:	2301      	movhi	r3, #1
 8005ec8:	1c35      	adds	r5, r6, #0
 8005eca:	9300      	str	r3, [sp, #0]
 8005ecc:	f64f 73d7 	movw	r3, #65495	; 0xffd7
 8005ed0:	bf18      	it	ne
 8005ed2:	2501      	movne	r5, #1
 8005ed4:	9307      	str	r3, [sp, #28]
 8005ed6:	f64f 73c1 	movw	r3, #65473	; 0xffc1
 8005eda:	e9cd 3005 	strd	r3, r0, [sp, #20]
 8005ede:	f64f 738a 	movw	r3, #65418	; 0xff8a
 8005ee2:	9304      	str	r3, [sp, #16]
 8005ee4:	2300      	movs	r3, #0
 8005ee6:	e9cd c302 	strd	ip, r3, [sp, #8]
		i2c_index = VL53L1_SYSTEM_CONTROL_I2C_INDEX;
 8005eea:	2383      	movs	r3, #131	; 0x83
 8005eec:	9301      	str	r3, [sp, #4]
		break;
 8005eee:	e6ab      	b.n	8005c48 <VL53L1_init_and_start_range+0xf8>
	switch (device_config_level) {
 8005ef0:	234d      	movs	r3, #77	; 0x4d
 8005ef2:	2137      	movs	r1, #55	; 0x37
 8005ef4:	f64f 70f4 	movw	r0, #65524	; 0xfff4
 8005ef8:	2501      	movs	r5, #1
 8005efa:	9307      	str	r3, [sp, #28]
 8005efc:	2317      	movs	r3, #23
 8005efe:	f04f 0b64 	mov.w	fp, #100	; 0x64
 8005f02:	9500      	str	r5, [sp, #0]
 8005f04:	9306      	str	r3, [sp, #24]
 8005f06:	2300      	movs	r3, #0
 8005f08:	46a9      	mov	r9, r5
 8005f0a:	46aa      	mov	sl, r5
 8005f0c:	46a8      	mov	r8, r5
 8005f0e:	277b      	movs	r7, #123	; 0x7b
 8005f10:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8005f14:	2376      	movs	r3, #118	; 0x76
 8005f16:	e9cd 0302 	strd	r0, r3, [sp, #8]
		i2c_index = VL53L1_CUSTOMER_NVM_MANAGED_I2C_INDEX;
 8005f1a:	230d      	movs	r3, #13
 8005f1c:	9301      	str	r3, [sp, #4]
 8005f1e:	e693      	b.n	8005c48 <VL53L1_init_and_start_range+0xf8>

08005f20 <VL53L1_get_tuning_parm>:

	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	switch (tuning_parm_key) {
 8005f20:	f5a1 4100 	sub.w	r1, r1, #32768	; 0x8000
 8005f24:	2938      	cmp	r1, #56	; 0x38
 8005f26:	f200 8158 	bhi.w	80061da <VL53L1_get_tuning_parm+0x2ba>
 8005f2a:	e8df f011 	tbh	[pc, r1, lsl #1]
 8005f2e:	0151      	.short	0x0151
 8005f30:	0147014c 	.word	0x0147014c
 8005f34:	013d0142 	.word	0x013d0142
 8005f38:	01330138 	.word	0x01330138
 8005f3c:	0129012e 	.word	0x0129012e
 8005f40:	011f0124 	.word	0x011f0124
 8005f44:	0115011a 	.word	0x0115011a
 8005f48:	010b0110 	.word	0x010b0110
 8005f4c:	01010106 	.word	0x01010106
 8005f50:	00f700fc 	.word	0x00f700fc
 8005f54:	00ed00f2 	.word	0x00ed00f2
 8005f58:	00e300e8 	.word	0x00e300e8
 8005f5c:	00d900de 	.word	0x00d900de
 8005f60:	00cf00d4 	.word	0x00cf00d4
 8005f64:	00c500ca 	.word	0x00c500ca
 8005f68:	00bb00c0 	.word	0x00bb00c0
 8005f6c:	00b100b6 	.word	0x00b100b6
 8005f70:	00a700ac 	.word	0x00a700ac
 8005f74:	009d00a2 	.word	0x009d00a2
 8005f78:	00930098 	.word	0x00930098
 8005f7c:	0089008e 	.word	0x0089008e
 8005f80:	007f0084 	.word	0x007f0084
 8005f84:	0075007a 	.word	0x0075007a
 8005f88:	006b0070 	.word	0x006b0070
 8005f8c:	00610066 	.word	0x00610066
 8005f90:	0057005c 	.word	0x0057005c
 8005f94:	004d0052 	.word	0x004d0052
 8005f98:	00430048 	.word	0x00430048
 8005f9c:	0039003e 	.word	0x0039003e
	case VL53L1_TUNINGPARM_LOWPOWERAUTO_MM_CONFIG_TIMEOUT_US:
		*ptuning_parm_value =
				(int32_t)pdev->tuning_parms.tp_mm_timeout_lpa_us;
	break;
	case VL53L1_TUNINGPARM_LOWPOWERAUTO_RANGE_CONFIG_TIMEOUT_US:
		*ptuning_parm_value =
 8005fa0:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005fa4:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8005fa6:	6013      	str	r3, [r2, #0]
				(int32_t)pdev->tuning_parms.tp_range_timeout_lpa_us;
	break;
 8005fa8:	4770      	bx	lr
		*ptuning_parm_value =
 8005faa:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005fae:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8005fb0:	6013      	str	r3, [r2, #0]
	break;
 8005fb2:	4770      	bx	lr
				(int32_t)pdev->low_power_auto_data.vhv_loop_bound;
 8005fb4:	f890 32e4 	ldrb.w	r3, [r0, #740]	; 0x2e4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005fb8:	2000      	movs	r0, #0
				(int32_t)pdev->low_power_auto_data.vhv_loop_bound;
 8005fba:	6013      	str	r3, [r2, #0]
	break;
 8005fbc:	4770      	bx	lr
		*ptuning_parm_value =
 8005fbe:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005fc2:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8005fc4:	6013      	str	r3, [r2, #0]
	break;
 8005fc6:	4770      	bx	lr
		*ptuning_parm_value =
 8005fc8:	f8d0 30e4 	ldr.w	r3, [r0, #228]	; 0xe4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005fcc:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8005fce:	6013      	str	r3, [r2, #0]
	break;
 8005fd0:	4770      	bx	lr
		*ptuning_parm_value =
 8005fd2:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005fd6:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8005fd8:	6013      	str	r3, [r2, #0]
	break;
 8005fda:	4770      	bx	lr
		*ptuning_parm_value =
 8005fdc:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005fe0:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8005fe2:	6013      	str	r3, [r2, #0]
	break;
 8005fe4:	4770      	bx	lr
		*ptuning_parm_value =
 8005fe6:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005fea:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8005fec:	6013      	str	r3, [r2, #0]
	break;
 8005fee:	4770      	bx	lr
		*ptuning_parm_value =
 8005ff0:	f8d0 30d0 	ldr.w	r3, [r0, #208]	; 0xd0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005ff4:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8005ff6:	6013      	str	r3, [r2, #0]
	break;
 8005ff8:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_dss_target_timed_mcps;
 8005ffa:	f8b0 30cc 	ldrh.w	r3, [r0, #204]	; 0xcc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8005ffe:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_dss_target_timed_mcps;
 8006000:	6013      	str	r3, [r2, #0]
	break;
 8006002:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_dss_target_lite_mcps;
 8006004:	f8b0 30ca 	ldrh.w	r3, [r0, #202]	; 0xca
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006008:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_dss_target_lite_mcps;
 800600a:	6013      	str	r3, [r2, #0]
	break;
 800600c:	4770      	bx	lr
				(int32_t)pdev->ssc_cfg.rate_limit_mcps;
 800600e:	f8b0 3128 	ldrh.w	r3, [r0, #296]	; 0x128
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006012:	2000      	movs	r0, #0
				(int32_t)pdev->ssc_cfg.rate_limit_mcps;
 8006014:	6013      	str	r3, [r2, #0]
	break;
 8006016:	4770      	bx	lr
				(int32_t)pdev->ssc_cfg.vcsel_start;
 8006018:	f890 3122 	ldrb.w	r3, [r0, #290]	; 0x122
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800601c:	2000      	movs	r0, #0
				(int32_t)pdev->ssc_cfg.vcsel_start;
 800601e:	6013      	str	r3, [r2, #0]
	break;
 8006020:	4770      	bx	lr
				(int32_t)pdev->ssc_cfg.vcsel_period;
 8006022:	f890 3121 	ldrb.w	r3, [r0, #289]	; 0x121
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006026:	2000      	movs	r0, #0
				(int32_t)pdev->ssc_cfg.vcsel_period;
 8006028:	6013      	str	r3, [r2, #0]
	break;
 800602a:	4770      	bx	lr
				(int32_t)pdev->offsetcal_cfg.mm2_num_of_samples;
 800602c:	f890 3156 	ldrb.w	r3, [r0, #342]	; 0x156
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006030:	2000      	movs	r0, #0
				(int32_t)pdev->offsetcal_cfg.mm2_num_of_samples;
 8006032:	6013      	str	r3, [r2, #0]
	break;
 8006034:	4770      	bx	lr
			(int32_t)pdev->offsetcal_cfg.mm1_num_of_samples;
 8006036:	f890 3155 	ldrb.w	r3, [r0, #341]	; 0x155
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800603a:	2000      	movs	r0, #0
			(int32_t)pdev->offsetcal_cfg.mm1_num_of_samples;
 800603c:	6013      	str	r3, [r2, #0]
	break;
 800603e:	4770      	bx	lr
				(int32_t)pdev->offsetcal_cfg.pre_num_of_samples;
 8006040:	f890 3154 	ldrb.w	r3, [r0, #340]	; 0x154
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006044:	2000      	movs	r0, #0
				(int32_t)pdev->offsetcal_cfg.pre_num_of_samples;
 8006046:	6013      	str	r3, [r2, #0]
	break;
 8006048:	4770      	bx	lr
		*ptuning_parm_value =
 800604a:	f8d0 314c 	ldr.w	r3, [r0, #332]	; 0x14c
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800604e:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8006050:	6013      	str	r3, [r2, #0]
	break;
 8006052:	4770      	bx	lr
		*ptuning_parm_value =
 8006054:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006058:	2000      	movs	r0, #0
		*ptuning_parm_value =
 800605a:	6013      	str	r3, [r2, #0]
	break;
 800605c:	4770      	bx	lr
		*ptuning_parm_value =
 800605e:	f8d0 3148 	ldr.w	r3, [r0, #328]	; 0x148
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006062:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8006064:	6013      	str	r3, [r2, #0]
	break;
 8006066:	4770      	bx	lr
				(int32_t)pdev->offsetcal_cfg.dss_config__target_total_rate_mcps;;
 8006068:	f8b0 3144 	ldrh.w	r3, [r0, #324]	; 0x144
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800606c:	2000      	movs	r0, #0
				(int32_t)pdev->offsetcal_cfg.dss_config__target_total_rate_mcps;;
 800606e:	6013      	str	r3, [r2, #0]
	break;
 8006070:	4770      	bx	lr
				(int32_t)pdev->refspadchar.max_count_rate_limit_mcps;
 8006072:	f8b0 311c 	ldrh.w	r3, [r0, #284]	; 0x11c
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006076:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.max_count_rate_limit_mcps;
 8006078:	6013      	str	r3, [r2, #0]
	break;
 800607a:	4770      	bx	lr
				(int32_t)pdev->refspadchar.min_count_rate_limit_mcps;
 800607c:	f8b0 311a 	ldrh.w	r3, [r0, #282]	; 0x11a
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006080:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.min_count_rate_limit_mcps;
 8006082:	6013      	str	r3, [r2, #0]
	break;
 8006084:	4770      	bx	lr
				(int32_t)pdev->refspadchar.target_count_rate_mcps;
 8006086:	f8b0 3118 	ldrh.w	r3, [r0, #280]	; 0x118
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800608a:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.target_count_rate_mcps;
 800608c:	6013      	str	r3, [r2, #0]
	break;
 800608e:	4770      	bx	lr
		*ptuning_parm_value =
 8006090:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006094:	2000      	movs	r0, #0
		*ptuning_parm_value =
 8006096:	6013      	str	r3, [r2, #0]
	break;
 8006098:	4770      	bx	lr
				(int32_t)pdev->refspadchar.vcsel_period;
 800609a:	f890 3111 	ldrb.w	r3, [r0, #273]	; 0x111
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800609e:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.vcsel_period;
 80060a0:	6013      	str	r3, [r2, #0]
	break;
 80060a2:	4770      	bx	lr
				(int32_t)pdev->refspadchar.device_test_mode;
 80060a4:	f890 3110 	ldrb.w	r3, [r0, #272]	; 0x110
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80060a8:	2000      	movs	r0, #0
				(int32_t)pdev->refspadchar.device_test_mode;
 80060aa:	6013      	str	r3, [r2, #0]
	break;
 80060ac:	4770      	bx	lr
				(int32_t)pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound;
 80060ae:	f890 3160 	ldrb.w	r3, [r0, #352]	; 0x160
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80060b2:	2000      	movs	r0, #0
				(int32_t)pdev->stat_nvm.vhv_config__timeout_macrop_loop_bound;
 80060b4:	6013      	str	r3, [r2, #0]
	break;
 80060b6:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_timed_seed_cfg;
 80060b8:	f890 30c6 	ldrb.w	r3, [r0, #198]	; 0xc6
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80060bc:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_timed_seed_cfg;
 80060be:	6013      	str	r3, [r2, #0]
	break;
 80060c0:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_short;
 80060c2:	f890 30af 	ldrb.w	r3, [r0, #175]	; 0xaf
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80060c6:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_short;
 80060c8:	6013      	str	r3, [r2, #0]
	break;
 80060ca:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_med;
 80060cc:	f890 30ae 	ldrb.w	r3, [r0, #174]	; 0xae
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80060d0:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_med;
 80060d2:	6013      	str	r3, [r2, #0]
	break;
 80060d4:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_long;
 80060d6:	f890 30ad 	ldrb.w	r3, [r0, #173]	; 0xad
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80060da:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_ref_lite_long;
 80060dc:	6013      	str	r3, [r2, #0]
	break;
 80060de:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_short;
 80060e0:	f890 30ac 	ldrb.w	r3, [r0, #172]	; 0xac
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80060e4:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_short;
 80060e6:	6013      	str	r3, [r2, #0]
	break;
 80060e8:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_med;
 80060ea:	f890 30ab 	ldrb.w	r3, [r0, #171]	; 0xab
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80060ee:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_med;
 80060f0:	6013      	str	r3, [r2, #0]
	break;
 80060f2:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_long;
 80060f4:	f890 30aa 	ldrb.w	r3, [r0, #170]	; 0xaa
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80060f8:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_init_phase_rtn_lite_long;
 80060fa:	6013      	str	r3, [r2, #0]
	break;
 80060fc:	4770      	bx	lr
				(int32_t)pdev->xtalk_cfg.lite_mode_crosstalk_margin_kcps;
 80060fe:	f9b0 313e 	ldrsh.w	r3, [r0, #318]	; 0x13e
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006102:	2000      	movs	r0, #0
				(int32_t)pdev->xtalk_cfg.lite_mode_crosstalk_margin_kcps;
 8006104:	6013      	str	r3, [r2, #0]
	break;
 8006106:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_first_order_select;
 8006108:	f890 30c8 	ldrb.w	r3, [r0, #200]	; 0xc8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800610c:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_first_order_select;
 800610e:	6013      	str	r3, [r2, #0]
	break;
 8006110:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_quantifier;
 8006112:	f890 30c7 	ldrb.w	r3, [r0, #199]	; 0xc7
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006116:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_quantifier;
 8006118:	6013      	str	r3, [r2, #0]
	break;
 800611a:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_seed_cfg ;
 800611c:	f890 30c5 	ldrb.w	r3, [r0, #197]	; 0xc5
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006120:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_seed_cfg ;
 8006122:	6013      	str	r3, [r2, #0]
	break;
 8006124:	4770      	bx	lr
				(int32_t)pdev->xtalk_cfg.crosstalk_range_ignore_threshold_mult;
 8006126:	f890 3140 	ldrb.w	r3, [r0, #320]	; 0x140
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800612a:	2000      	movs	r0, #0
				(int32_t)pdev->xtalk_cfg.crosstalk_range_ignore_threshold_mult;
 800612c:	6013      	str	r3, [r2, #0]
	break;
 800612e:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_sigma_ref_mm;
 8006130:	f890 30c4 	ldrb.w	r3, [r0, #196]	; 0xc4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006134:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_sigma_ref_mm;
 8006136:	6013      	str	r3, [r2, #0]
	break;
 8006138:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_amb_width_ns;
 800613a:	f890 30c3 	ldrb.w	r3, [r0, #195]	; 0xc3
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800613e:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_amb_width_ns;
 8006140:	6013      	str	r3, [r2, #0]
	break;
 8006142:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_pulse_width_ns;
 8006144:	f890 30c2 	ldrb.w	r3, [r0, #194]	; 0xc2
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006148:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_sigma_est_pulse_width_ns;
 800614a:	6013      	str	r3, [r2, #0]
	break;
 800614c:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_short_min_count_rate_rtn_mcps;
 800614e:	f8b0 30c0 	ldrh.w	r3, [r0, #192]	; 0xc0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006152:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_short_min_count_rate_rtn_mcps;
 8006154:	6013      	str	r3, [r2, #0]
	break;
 8006156:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_med_min_count_rate_rtn_mcps;
 8006158:	f8b0 30be 	ldrh.w	r3, [r0, #190]	; 0xbe
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800615c:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_med_min_count_rate_rtn_mcps;
 800615e:	6013      	str	r3, [r2, #0]
	break;
 8006160:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_long_min_count_rate_rtn_mcps;
 8006162:	f8b0 30bc 	ldrh.w	r3, [r0, #188]	; 0xbc
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006166:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_long_min_count_rate_rtn_mcps;
 8006168:	6013      	str	r3, [r2, #0]
	break;
 800616a:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_short_sigma_thresh_mm;
 800616c:	f8b0 30ba 	ldrh.w	r3, [r0, #186]	; 0xba
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006170:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_short_sigma_thresh_mm;
 8006172:	6013      	str	r3, [r2, #0]
	break;
 8006174:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_med_sigma_thresh_mm;
 8006176:	f8b0 30b8 	ldrh.w	r3, [r0, #184]	; 0xb8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800617a:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_med_sigma_thresh_mm;
 800617c:	6013      	str	r3, [r2, #0]
	break;
 800617e:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_long_sigma_thresh_mm;
 8006180:	f8b0 30b6 	ldrh.w	r3, [r0, #182]	; 0xb6
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006184:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_long_sigma_thresh_mm;
 8006186:	6013      	str	r3, [r2, #0]
	break;
 8006188:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_lite_min_clip;
 800618a:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 800618e:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_lite_min_clip;
 8006190:	6013      	str	r3, [r2, #0]
	break;
 8006192:	4770      	bx	lr
				(int32_t)pdev->gain_cal.standard_ranging_gain_factor;
 8006194:	f8b0 309c 	ldrh.w	r3, [r0, #156]	; 0x9c
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 8006198:	2000      	movs	r0, #0
				(int32_t)pdev->gain_cal.standard_ranging_gain_factor;
 800619a:	6013      	str	r3, [r2, #0]
	break;
 800619c:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_cal_repeat_rate;
 800619e:	f8b0 30b2 	ldrh.w	r3, [r0, #178]	; 0xb2
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80061a2:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_cal_repeat_rate;
 80061a4:	6013      	str	r3, [r2, #0]
	break;
 80061a6:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_phasecal_target;
 80061a8:	f890 30b1 	ldrb.w	r3, [r0, #177]	; 0xb1
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80061ac:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_phasecal_target;
 80061ae:	6013      	str	r3, [r2, #0]
	break;
 80061b0:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_consistency_lite_phase_tolerance;
 80061b2:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80061b6:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_consistency_lite_phase_tolerance;
 80061b8:	6013      	str	r3, [r2, #0]
	break;
 80061ba:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_tuning_parm_lld_version;
 80061bc:	f8b0 30a8 	ldrh.w	r3, [r0, #168]	; 0xa8
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80061c0:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_tuning_parm_lld_version;
 80061c2:	6013      	str	r3, [r2, #0]
	break;
 80061c4:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_tuning_parm_key_table_version;
 80061c6:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80061ca:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_tuning_parm_key_table_version;
 80061cc:	6013      	str	r3, [r2, #0]
	break;
 80061ce:	4770      	bx	lr
				(int32_t)pdev->tuning_parms.tp_tuning_parm_version;
 80061d0:	f8b0 30a4 	ldrh.w	r3, [r0, #164]	; 0xa4
	VL53L1_Error  status = VL53L1_ERROR_NONE;
 80061d4:	2000      	movs	r0, #0
				(int32_t)pdev->tuning_parms.tp_tuning_parm_version;
 80061d6:	6013      	str	r3, [r2, #0]
	break;
 80061d8:	4770      	bx	lr


	default:
		*ptuning_parm_value = 0x7FFFFFFF;
 80061da:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
		status = VL53L1_ERROR_INVALID_PARAMS;
 80061de:	f06f 0003 	mvn.w	r0, #3
		*ptuning_parm_value = 0x7FFFFFFF;
 80061e2:	6013      	str	r3, [r2, #0]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 80061e4:	4770      	bx	lr
 80061e6:	bf00      	nop

080061e8 <VL53L1_init_refspadchar_config_struct>:


#ifndef VL53L1_NOCALIB
VL53L1_Error VL53L1_init_refspadchar_config_struct(
	VL53L1_refspadchar_config_t   *pdata)
{
 80061e8:	b410      	push	{r4}
 80061ea:	4603      	mov	r3, r0
	 * target_count_rate_mcps    = 0x0A00 - 9.7 -> 20.0 Mcps
	 * min_count_rate_limit_mcps = 0x0500 - 9.7 -> 10.0 Mcps
	 * max_count_rate_limit_mcps = 0x1400 - 9.7 -> 40.0 Mcps
	 */

	pdata->device_test_mode =
 80061ec:	f640 3408 	movw	r4, #2824	; 0xb08
			VL53L1_TUNINGPARM_REFSPADCHAR_DEVICE_TEST_MODE_DEFAULT;
	pdata->vcsel_period              =
			VL53L1_TUNINGPARM_REFSPADCHAR_VCSEL_PERIOD_DEFAULT;
	pdata->timeout_us                =
 80061f0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
			VL53L1_TUNINGPARM_REFSPADCHAR_PHASECAL_TIMEOUT_US_DEFAULT;
	pdata->target_count_rate_mcps    =
 80061f4:	4905      	ldr	r1, [pc, #20]	; (800620c <VL53L1_init_refspadchar_config_struct+0x24>)
			VL53L1_TUNINGPARM_REFSPADCHAR_TARGET_COUNT_RATE_MCPS_DEFAULT;
	pdata->min_count_rate_limit_mcps =
			VL53L1_TUNINGPARM_REFSPADCHAR_MIN_COUNTRATE_LIMIT_MCPS_DEFAULT;
	pdata->max_count_rate_limit_mcps =
 80061f6:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
	pdata->device_test_mode =
 80061fa:	801c      	strh	r4, [r3, #0]
	pdata->timeout_us                =
 80061fc:	6058      	str	r0, [r3, #4]
			VL53L1_TUNINGPARM_REFSPADCHAR_MAX_COUNTRATE_LIMIT_MCPS_DEFAULT;

	LOG_FUNCTION_END(status);

	return status;
}
 80061fe:	2000      	movs	r0, #0
	pdata->target_count_rate_mcps    =
 8006200:	6099      	str	r1, [r3, #8]
	pdata->max_count_rate_limit_mcps =
 8006202:	819a      	strh	r2, [r3, #12]
}
 8006204:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006208:	4770      	bx	lr
 800620a:	bf00      	nop
 800620c:	05000a00 	.word	0x05000a00

08006210 <VL53L1_init_ssc_config_struct>:


#ifndef VL53L1_NOCALIB
VL53L1_Error VL53L1_init_ssc_config_struct(
	VL53L1_ssc_config_t   *pdata)
{
 8006210:	4603      	mov	r3, r0

	/* VCSEL pulse width */
	pdata->vcsel_width  = 0x02;

	/* SSC timeout [us] */
	pdata->timeout_us   = 36000;
 8006212:	f648 41a0 	movw	r1, #36000	; 0x8ca0
	pdata->array_select = VL53L1_DEVICESSCARRAY_RTN;
 8006216:	4803      	ldr	r0, [pc, #12]	; (8006224 <VL53L1_init_ssc_config_struct+0x14>)

	/* SSC rate limit [Mcps]
	 * - 9.7 for VCSEL ON
	 * - 1.15 for VCSEL OFF
	 */
	pdata->rate_limit_mcps =
 8006218:	220c      	movs	r2, #12
	pdata->timeout_us   = 36000;
 800621a:	6059      	str	r1, [r3, #4]
	pdata->array_select = VL53L1_DEVICESSCARRAY_RTN;
 800621c:	6018      	str	r0, [r3, #0]
			VL53L1_TUNINGPARM_SPADMAP_RATE_LIMIT_MCPS_DEFAULT;

	LOG_FUNCTION_END(status);

	return status;
}
 800621e:	2000      	movs	r0, #0
	pdata->rate_limit_mcps =
 8006220:	811a      	strh	r2, [r3, #8]
}
 8006222:	4770      	bx	lr
 8006224:	020f1200 	.word	0x020f1200

08006228 <VL53L1_init_xtalk_config_struct>:


VL53L1_Error VL53L1_init_xtalk_config_struct(
	VL53L1_customer_nvm_managed_t *pnvm,
	VL53L1_xtalk_config_t   *pdata)
{
 8006228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	pdata->algo__crosstalk_compensation_plane_offset_kcps      =
		pnvm->algo__crosstalk_compensation_plane_offset_kcps;
	pdata->algo__crosstalk_compensation_x_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_x_plane_gradient_kcps;
	pdata->algo__crosstalk_compensation_y_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_y_plane_gradient_kcps;
 800622a:	f9b0 200e 	ldrsh.w	r2, [r0, #14]
	pdata->nvm_default__crosstalk_compensation_x_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_x_plane_gradient_kcps;
	pdata->nvm_default__crosstalk_compensation_y_plane_gradient_kcps  =
		pnvm->algo__crosstalk_compensation_y_plane_gradient_kcps;

	pdata->lite_mode_crosstalk_margin_kcps                     =
 800622e:	2700      	movs	r7, #0
		pnvm->algo__crosstalk_compensation_plane_offset_kcps;
 8006230:	8943      	ldrh	r3, [r0, #10]
			VL53L1_TUNINGPARM_LITE_XTALK_MARGIN_KCPS_DEFAULT;

	/* Default for Range Ignore Threshold Mult = 2.0 */

	pdata->crosstalk_range_ignore_threshold_mult =
 8006232:	2640      	movs	r6, #64	; 0x40
		pnvm->algo__crosstalk_compensation_x_plane_gradient_kcps;
 8006234:	f9b0 500c 	ldrsh.w	r5, [r0, #12]
 8006238:	68c4      	ldr	r4, [r0, #12]
	pdata->nvm_default__crosstalk_compensation_plane_offset_kcps      =
 800623a:	608b      	str	r3, [r1, #8]
	pdata->nvm_default__crosstalk_compensation_x_plane_gradient_kcps  =
 800623c:	818d      	strh	r5, [r1, #12]
	pdata->nvm_default__crosstalk_compensation_y_plane_gradient_kcps  =
 800623e:	81ca      	strh	r2, [r1, #14]
	pdata->lite_mode_crosstalk_margin_kcps                     =
 8006240:	824f      	strh	r7, [r1, #18]
	pdata->crosstalk_range_ignore_threshold_mult =
 8006242:	750e      	strb	r6, [r1, #20]
	pdata->algo__crosstalk_compensation_x_plane_gradient_kcps  =
 8006244:	e9c1 3400 	strd	r3, r4, [r1]
			VL53L1_TUNINGPARM_LITE_RIT_MULT_DEFAULT;

	if ((pdata->algo__crosstalk_compensation_plane_offset_kcps == 0x00)
 8006248:	b923      	cbnz	r3, 8006254 <VL53L1_init_xtalk_config_struct+0x2c>
		&& (pdata->algo__crosstalk_compensation_x_plane_gradient_kcps == 0x00)
		&& (pdata->algo__crosstalk_compensation_y_plane_gradient_kcps == 0x00))
 800624a:	b91c      	cbnz	r4, 8006254 <VL53L1_init_xtalk_config_struct+0x2c>
 800624c:	740c      	strb	r4, [r1, #16]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 800624e:	2000      	movs	r0, #0
		pdata->crosstalk_range_ignore_threshold_rate_mcps = 0;
 8006250:	82cc      	strh	r4, [r1, #22]
}
 8006252:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006254:	2001      	movs	r0, #1
 8006256:	460c      	mov	r4, r1
 8006258:	7408      	strb	r0, [r1, #16]
			VL53L1_calc_range_ignore_threshold(
 800625a:	4629      	mov	r1, r5
 800625c:	4618      	mov	r0, r3
 800625e:	2340      	movs	r3, #64	; 0x40
 8006260:	f001 f996 	bl	8007590 <VL53L1_calc_range_ignore_threshold>
		pdata->crosstalk_range_ignore_threshold_rate_mcps =
 8006264:	82e0      	strh	r0, [r4, #22]
}
 8006266:	2000      	movs	r0, #0
 8006268:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800626a:	bf00      	nop

0800626c <VL53L1_init_offset_cal_config_struct>:

#ifndef VL53L1_NOCALIB
VL53L1_Error VL53L1_init_offset_cal_config_struct(
	VL53L1_offsetcal_config_t   *pdata)
{
 800626c:	b430      	push	{r4, r5}
 800626e:	4603      	mov	r3, r0
	/* Preset Timeout and DSS defaults */

	pdata->dss_config__target_total_rate_mcps          =
			VL53L1_TUNINGPARM_OFFSET_CAL_DSS_RATE_MCPS_DEFAULT;
	/* 20.0 Mcps */
	pdata->phasecal_config_timeout_us                  =
 8006270:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
	pdata->dss_config__target_total_rate_mcps          =
 8006274:	f44f 6020 	mov.w	r0, #2560	; 0xa00
			VL53L1_TUNINGPARM_OFFSET_CAL_PHASECAL_TIMEOUT_US_DEFAULT;
	/* 1000 us */
	pdata->range_config_timeout_us                     =
			VL53L1_TUNINGPARM_OFFSET_CAL_RANGE_TIMEOUT_US_DEFAULT;
	/* 13000 us */
	pdata->mm_config_timeout_us                        =
 8006278:	f642 0408 	movw	r4, #10248	; 0x2808

	/* Init number of averaged samples */

	pdata->pre_num_of_samples                          =
			VL53L1_TUNINGPARM_OFFSET_CAL_PRE_SAMPLES_DEFAULT;
	pdata->mm1_num_of_samples                          =
 800627c:	2109      	movs	r1, #9
	pdata->phasecal_config_timeout_us                  =
 800627e:	f243 22c8 	movw	r2, #13000	; 0x32c8
	pdata->dss_config__target_total_rate_mcps          =
 8006282:	8018      	strh	r0, [r3, #0]
			VL53L1_TUNINGPARM_OFFSET_CAL_MM2_SAMPLES_DEFAULT;

	LOG_FUNCTION_END(status);

	return status;
}
 8006284:	2000      	movs	r0, #0
	pdata->phasecal_config_timeout_us                  =
 8006286:	605d      	str	r5, [r3, #4]
	pdata->mm_config_timeout_us                        =
 8006288:	821c      	strh	r4, [r3, #16]
	pdata->mm1_num_of_samples                          =
 800628a:	7499      	strb	r1, [r3, #18]
	pdata->range_config_timeout_us                     =
 800628c:	e9c3 2202 	strd	r2, r2, [r3, #8]
}
 8006290:	bc30      	pop	{r4, r5}
 8006292:	4770      	bx	lr

08006294 <VL53L1_init_tuning_parm_storage_struct>:
#endif

VL53L1_Error VL53L1_init_tuning_parm_storage_struct(
	VL53L1_tuning_parm_storage_t   *pdata)
{
 8006294:	b4f0      	push	{r4, r5, r6, r7}
 8006296:	4603      	mov	r3, r0
	 *
	 * - Custom overwrite possible from vl53l1_set_tuning_parms()
	 * - via tuning file input
	 */

	pdata->tp_tuning_parm_version              =
 8006298:	4c1e      	ldr	r4, [pc, #120]	; (8006314 <VL53L1_init_tuning_parm_storage_struct+0x80>)
 800629a:	481f      	ldr	r0, [pc, #124]	; (8006318 <VL53L1_init_tuning_parm_storage_struct+0x84>)
			VL53L1_TUNINGPARM_VERSION_DEFAULT;
	pdata->tp_tuning_parm_key_table_version    =
			VL53L1_TUNINGPARM_KEY_TABLE_VERSION_DEFAULT;
	pdata->tp_tuning_parm_lld_version          =
			VL53L1_TUNINGPARM_LLD_VERSION_DEFAULT;
	pdata->tp_init_phase_rtn_lite_long         =
 800629c:	f242 1102 	movw	r1, #8450	; 0x2102
	pdata->tp_tuning_parm_version              =
 80062a0:	605c      	str	r4, [r3, #4]
			VL53L1_TUNINGPARM_PHASECAL_TARGET_DEFAULT;
	pdata->tp_cal_repeat_rate                  =
			VL53L1_TUNINGPARM_LITE_CAL_REPEAT_RATE_DEFAULT;
	pdata->tp_lite_min_clip                    =
			VL53L1_TUNINGPARM_LITE_MIN_CLIP_MM_DEFAULT;
	pdata->tp_lite_long_sigma_thresh_mm        =
 80062a2:	f04f 16c0 	mov.w	r6, #12583104	; 0xc000c0
 80062a6:	4c1d      	ldr	r4, [pc, #116]	; (800631c <VL53L1_init_tuning_parm_storage_struct+0x88>)
			VL53L1_TUNINGPARM_LITE_SIGMA_REF_MM_DEFAULT;
	pdata->tp_lite_seed_cfg                      =
			VL53L1_TUNINGPARM_LITE_SEED_CONFIG_DEFAULT;
	pdata->tp_timed_seed_cfg                     =
			VL53L1_TUNINGPARM_TIMED_SEED_CONFIG_DEFAULT;
	pdata->tp_lite_quantifier                    =
 80062a8:	2502      	movs	r5, #2
	pdata->tp_init_phase_rtn_lite_long         =
 80062aa:	4a1d      	ldr	r2, [pc, #116]	; (8006320 <VL53L1_init_tuning_parm_storage_struct+0x8c>)
			VL53L1_TUNINGPARM_LITE_DSS_CONFIG_TARGET_TOTAL_RATE_MCPS_DEFAULT;
	pdata->tp_dss_target_timed_mcps              =
			VL53L1_TUNINGPARM_TIMED_DSS_CONFIG_TARGET_TOTAL_RATE_MCPS_DEFAULT;
	pdata->tp_phasecal_timeout_lite_us           =
			VL53L1_TUNINGPARM_LITE_PHASECAL_CONFIG_TIMEOUT_US;
	pdata->tp_phasecal_timeout_timed_us          =
 80062ac:	f44f 777a 	mov.w	r7, #1000	; 0x3e8
	pdata->tp_lite_long_sigma_thresh_mm        =
 80062b0:	f8c3 4012 	str.w	r4, [r3, #18]
 80062b4:	f5a4 0428 	sub.w	r4, r4, #11010048	; 0xa80000
	pdata->tp_init_phase_rtn_lite_long         =
 80062b8:	609a      	str	r2, [r3, #8]
	pdata->tp_dss_target_lite_mcps               =
 80062ba:	f04f 220a 	mov.w	r2, #167774720	; 0xa000a00
	pdata->tp_init_phase_rtn_lite_long         =
 80062be:	60d9      	str	r1, [r3, #12]
	pdata->tp_phasecal_timeout_lite_us           =
 80062c0:	f248 0130 	movw	r1, #32816	; 0x8030
	pdata->tp_tuning_parm_version              =
 80062c4:	6018      	str	r0, [r3, #0]
	pdata->tp_timed_seed_cfg                     =
 80062c6:	2001      	movs	r0, #1
	pdata->tp_lite_long_sigma_thresh_mm        =
 80062c8:	f8c3 4016 	str.w	r4, [r3, #22]
	pdata->tp_lite_sigma_est_pulse_width_ns      =
 80062cc:	4c15      	ldr	r4, [pc, #84]	; (8006324 <VL53L1_init_tuning_parm_storage_struct+0x90>)
	pdata->tp_timed_seed_cfg                     =
 80062ce:	f883 0022 	strb.w	r0, [r3, #34]	; 0x22
			VL53L1_TUNINGPARM_LITE_MM_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_mm_timeout_timed_us                =
			VL53L1_TUNINGPARM_TIMED_MM_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_range_timeout_lite_us              =
			VL53L1_TUNINGPARM_LITE_RANGE_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_range_timeout_timed_us             =
 80062d2:	f243 20c8 	movw	r0, #13000	; 0x32c8
	pdata->tp_lite_quantifier                    =
 80062d6:	f883 5023 	strb.w	r5, [r3, #35]	; 0x23
			VL53L1_TUNINGPARM_TIMED_RANGE_CONFIG_TIMEOUT_US_DEFAULT;

	/* Added for Patch_LowPowerAutoMode */

	pdata->tp_mm_timeout_lpa_us =
 80062da:	f44f 752f 	mov.w	r5, #700	; 0x2bc
	pdata->tp_lite_sigma_est_pulse_width_ns      =
 80062de:	f8c3 401e 	str.w	r4, [r3, #30]
			VL53L1_TUNINGPARM_LOWPOWERAUTO_MM_CONFIG_TIMEOUT_US_DEFAULT;
	pdata->tp_range_timeout_lpa_us =
 80062e2:	f44f 54fa 	mov.w	r4, #8000	; 0x1f40
	pdata->tp_lite_long_sigma_thresh_mm        =
 80062e6:	f8c3 601a 	str.w	r6, [r3, #26]
	pdata->tp_range_timeout_lite_us              =
 80062ea:	f24f 6618 	movw	r6, #63000	; 0xf618
	pdata->tp_dss_target_lite_mcps               =
 80062ee:	f8c3 2026 	str.w	r2, [r3, #38]	; 0x26
	pdata->tp_cal_repeat_rate                  =
 80062f2:	2200      	movs	r2, #0
	pdata->tp_phasecal_timeout_lite_us           =
 80062f4:	62d9      	str	r1, [r3, #44]	; 0x2c
	pdata->tp_mm_timeout_lite_us                 =
 80062f6:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
	pdata->tp_phasecal_timeout_timed_us          =
 80062fa:	631f      	str	r7, [r3, #48]	; 0x30
	pdata->tp_mm_timeout_lpa_us =
 80062fc:	63dd      	str	r5, [r3, #60]	; 0x3c
	pdata->tp_range_timeout_lpa_us =
 80062fe:	649c      	str	r4, [r3, #72]	; 0x48
	pdata->tp_cal_repeat_rate                  =
 8006300:	741a      	strb	r2, [r3, #16]
	pdata->tp_lite_first_order_select            =
 8006302:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
	pdata->tp_range_timeout_timed_us             =
 8006306:	e9c3 6010 	strd	r6, r0, [r3, #64]	; 0x40
	pdata->tp_mm_timeout_timed_us                =
 800630a:	e9c3 110d 	strd	r1, r1, [r3, #52]	; 0x34


	LOG_FUNCTION_END(status);

	return status;
}
 800630e:	4610      	mov	r0, r2
 8006310:	bcf0      	pop	{r4, r5, r6, r7}
 8006312:	4770      	bx	lr
 8006314:	0a0e8041 	.word	0x0a0e8041
 8006318:	80018003 	.word	0x80018003
 800631c:	01680168 	.word	0x01680168
 8006320:	060a0e06 	.word	0x060a0e06
 8006324:	02011008 	.word	0x02011008

08006328 <VL53L1_preset_mode_standard_ranging>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006328:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800632c:	9d08      	ldr	r5, [sp, #32]

	/* Static Configuration */

	/* dss_config__target_total_rate_mcps = 20.0 Mcps 9.7 fp */
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
	pstatic->debug__ctrl                                      = 0x00;
 800632e:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006330:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006334:	f8df c114 	ldr.w	ip, [pc, #276]	; 800644c <VL53L1_preset_mode_standard_ranging+0x124>
 8006338:	4f3f      	ldr	r7, [pc, #252]	; (8006438 <VL53L1_preset_mode_standard_ranging+0x110>)
	pstatic->sigma_estimator__effective_ambient_width_ns      =
			ptuning_parms->tp_lite_sigma_est_amb_width_ns;
	pstatic->sigma_estimator__sigma_ref_mm                    =
			ptuning_parms->tp_lite_sigma_ref_mm;
	/* Minimum allowable value of 1 - 0 disables the feature */
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800633a:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 800633c:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;

	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;

	/* set RIT distance to 20 mm */
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006340:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006344:	f8c0 700e 	str.w	r7, [r0, #14]
			ptuning_parms->tp_consistency_lite_phase_tolerance;
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
	pstatic->sd_config__reset_stages_msb                      = 0x00;
	pstatic->sd_config__reset_stages_lsb                      = 0x00;

	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006348:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 800634c:	f8c0 4002 	str.w	r4, [r0, #2]
 8006350:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006354:	f8a0 e000 	strh.w	lr, [r0]
	 * 0 - disables
	 * 12-bit value -> 4095 max
	 */
	pgeneral->cal_config__repeat_rate                         =
			ptuning_parms->tp_cal_repeat_rate;
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006358:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 800635c:	f895 801e 	ldrb.w	r8, [r5, #30]
 8006360:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006364:	f895 801f 	ldrb.w	r8, [r5, #31]
 8006368:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800636c:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006370:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006372:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006374:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006376:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800637a:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 800637e:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006380:	f895 8010 	ldrb.w	r8, [r5, #16]
 8006384:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006388:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 800638c:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 800638e:	f880 801c 	strb.w	r8, [r0, #28]
			VL53L1_DEVICEDSSMODE__TARGET_RATE;
	/* format for threshold high and low is 9.7 fp */
	pgeneral->system__thresh_rate_high                        = 0x0000;
	pgeneral->system__thresh_rate_low                         = 0x0000;
	/* The format for manual effective spads is 8.8 -> 0x8C00 = 140.00 */
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006392:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006396:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006398:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__min_spads_limit                     = 0x01;

	/* Timing Configuration */

	/* Default timing of 2ms */
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800639a:	f640 10f5 	movw	r0, #2549	; 0x9f5
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 800639e:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 80063a0:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80063a2:	f8a1 e006 	strh.w	lr, [r1, #6]

	/* Phase limit register formats = 5.3
	 * low   = 0x08 ->  1.0
	 * high  = 0x78 -> 15.0 -> 3.0m
	 */
	ptiming->range_config__valid_phase_low                    = 0x08;
 80063a6:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 80063aa:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 80063ac:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 80063ae:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 80063b0:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80063b2:	4f22      	ldr	r7, [pc, #136]	; (800643c <VL53L1_preset_mode_standard_ranging+0x114>)
	pgeneral->dss_config__roi_mode_control =
 80063b4:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80063b6:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 80063ba:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80063bc:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80063c0:	4f1f      	ldr	r7, [pc, #124]	; (8006440 <VL53L1_preset_mode_standard_ranging+0x118>)
 80063c2:	4920      	ldr	r1, [pc, #128]	; (8006444 <VL53L1_preset_mode_standard_ranging+0x11c>)
 80063c4:	8110      	strh	r0, [r2, #8]
	ptiming->range_config__valid_phase_high                   = 0x78;
 80063c6:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80063c8:	6011      	str	r1, [r2, #0]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
	pdynamic->system__seed_config =
			ptuning_parms->tp_lite_seed_cfg;

	/* Timing A */
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 80063ca:	f640 110b 	movw	r1, #2315	; 0x90b
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80063ce:	6057      	str	r7, [r2, #4]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 80063d0:	f8b5 801a 	ldrh.w	r8, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 80063d4:	f8b5 9014 	ldrh.w	r9, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 80063d8:	f8a2 800c 	strh.w	r8, [r2, #12]

	/* Below defaults will be overwritten by zone_cfg
	 * Spad no = 199 (0xC7)
	 * Spad no =  63 (0x3F)
	 */
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80063dc:	f04f 08c7 	mov.w	r8, #199	; 0xc7
	ptiming->range_config__sigma_thresh                       =
 80063e0:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__valid_phase_low                    = 0x08;
 80063e4:	f882 e00e 	strb.w	lr, [r2, #14]
	/* 16x16 ROI */
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;


	pdynamic->system__sequence_config                          = \
 80063e8:	f04f 0edb 	mov.w	lr, #219	; 0xdb
	ptiming->range_config__valid_phase_high                   = 0x78;
 80063ec:	73d0      	strb	r0, [r2, #15]
			VL53L1_DEVICEMEASUREMENTMODE_BACKTOBACK;

	LOG_FUNCTION_END(status);

	return status;
}
 80063ee:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 80063f0:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 80063f2:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 80063f4:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 80063f6:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 80063fa:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 80063fc:	f895 2021 	ldrb.w	r2, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006400:	8119      	strh	r1, [r3, #8]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006402:	2102      	movs	r1, #2
	pdynamic->system__seed_config =
 8006404:	71da      	strb	r2, [r3, #7]
	pdynamic->sd_config__initial_phase_sd0                     =
 8006406:	79ea      	ldrb	r2, [r5, #7]
 8006408:	729a      	strb	r2, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 800640a:	7aaa      	ldrb	r2, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 800640c:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 800640e:	72da      	strb	r2, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8006410:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
	psystem->system__stream_count_ctrl                         = 0x00;
 8006414:	4a0c      	ldr	r2, [pc, #48]	; (8006448 <VL53L1_preset_mode_standard_ranging+0x120>)
	pdynamic->sd_config__first_order_select =
 8006416:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006418:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 800641c:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 8006420:	739c      	strb	r4, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006422:	f883 800f 	strb.w	r8, [r3, #15]
	pdynamic->system__sequence_config                          = \
 8006426:	f883 e011 	strb.w	lr, [r3, #17]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 800642a:	7499      	strb	r1, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 800642c:	9b07      	ldr	r3, [sp, #28]
 800642e:	f8c3 2001 	str.w	r2, [r3, #1]
}
 8006432:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006436:	bf00      	nop
 8006438:	00080200 	.word	0x00080200
 800643c:	01ff3800 	.word	0x01ff3800
 8006440:	010bcc01 	.word	0x010bcc01
 8006444:	20001a00 	.word	0x20001a00
 8006448:	21010100 	.word	0x21010100
 800644c:	02110000 	.word	0x02110000

08006450 <VL53L1_preset_mode_standard_ranging_short_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006450:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006454:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8006456:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006458:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 800645c:	f8df c114 	ldr.w	ip, [pc, #276]	; 8006574 <VL53L1_preset_mode_standard_ranging_short_range+0x124>
 8006460:	4f40      	ldr	r7, [pc, #256]	; (8006564 <VL53L1_preset_mode_standard_ranging_short_range+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006462:	2601      	movs	r6, #1
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006464:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006468:	f04f 6e32 	mov.w	lr, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 800646c:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006470:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006474:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006478:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 800647c:	f8c0 4002 	str.w	r4, [r0, #2]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006480:	f04f 09c7 	mov.w	r9, #199	; 0xc7
	pstatic->debug__ctrl                                      = 0x00;
 8006484:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006488:	f895 801e 	ldrb.w	r8, [r5, #30]
 800648c:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006490:	f895 801f 	ldrb.w	r8, [r5, #31]
 8006494:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006498:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 800649c:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 800649e:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80064a0:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80064a2:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80064a4:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80064a8:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_min_clip                             =
 80064ac:	f895 8010 	ldrb.w	r8, [r5, #16]
 80064b0:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80064b4:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80064b8:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80064ba:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80064be:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80064c2:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80064c4:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80064c6:	f8c1 e000 	str.w	lr, [r1]
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 80064ca:	f64c 4e01 	movw	lr, #52225	; 0xcc01
	pgeneral->cal_config__repeat_rate                         =
 80064ce:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80064d0:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 80064d2:	8088      	strh	r0, [r1, #4]
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 80064d4:	20f5      	movs	r0, #245	; 0xf5
	pgeneral->phasecal_config__target                         =
 80064d6:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 80064d8:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 80064da:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80064dc:	4f22      	ldr	r7, [pc, #136]	; (8006568 <VL53L1_preset_mode_standard_ranging_short_range+0x118>)
	pgeneral->dss_config__roi_mode_control =
 80064de:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80064e0:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 80064e4:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80064e6:	f8a1 8010 	strh.w	r8, [r1, #16]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 80064ea:	f04f 0802 	mov.w	r8, #2
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80064ee:	491f      	ldr	r1, [pc, #124]	; (800656c <VL53L1_preset_mode_standard_ranging_short_range+0x11c>)
	ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 80064f0:	71d6      	strb	r6, [r2, #7]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80064f2:	6011      	str	r1, [r2, #0]
	pdynamic->system__sequence_config                          = \
 80064f4:	21db      	movs	r1, #219	; 0xdb
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 80064f6:	f8a2 e004 	strh.w	lr, [r2, #4]
		 * min_count_rate_rtn_limit_mcps = 0x0080 ->  9.7fp ->  1.0 Mcps
		 * valid_phase_low               = 0x08 -> 5.3fp -> 1.0
		 * valid_phase_high              = 0x38 -> 5.3fp -> 7.0 -> 1.4m
		 */

		ptiming->range_config__vcsel_period_a                = 0x07;
 80064fa:	f04f 0e07 	mov.w	lr, #7
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 80064fe:	7210      	strb	r0, [r2, #8]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006500:	4620      	mov	r0, r4
	ptiming->system__fractional_enable                        = 0x00;
 8006502:	7514      	strb	r4, [r2, #20]
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8006504:	6114      	str	r4, [r2, #16]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006506:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006508:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 800650c:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 800650e:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006512:	731e      	strb	r6, [r3, #12]
		ptiming->range_config__vcsel_period_b                = 0x05;
 8006514:	2605      	movs	r6, #5
	pdynamic->system__seed_config =
 8006516:	71dc      	strb	r4, [r3, #7]
	pdynamic->sd_config__first_order_select =
 8006518:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
	psystem->system__stream_count_ctrl                         = 0x00;
 800651c:	4f14      	ldr	r7, [pc, #80]	; (8006570 <VL53L1_preset_mode_standard_ranging_short_range+0x120>)
	pdynamic->sd_config__first_order_select =
 800651e:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006520:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->system__sequence_config                          = \
 8006524:	7459      	strb	r1, [r3, #17]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006526:	9907      	ldr	r1, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006528:	f883 c010 	strb.w	ip, [r3, #16]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 800652c:	f240 5c07 	movw	ip, #1287	; 0x507
	pdynamic->sd_config__quantifier         =
 8006530:	739c      	strb	r4, [r3, #14]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006532:	f643 0408 	movw	r4, #14344	; 0x3808
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006536:	f883 900f 	strb.w	r9, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 800653a:	f883 8012 	strb.w	r8, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 800653e:	f8c1 7001 	str.w	r7, [r1, #1]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8006542:	f882 e006 	strb.w	lr, [r2, #6]
		ptiming->range_config__vcsel_period_b                = 0x05;
 8006546:	7256      	strb	r6, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8006548:	8aef      	ldrh	r7, [r5, #22]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 800654a:	8bae      	ldrh	r6, [r5, #28]
		ptiming->range_config__sigma_thresh                  =
 800654c:	8157      	strh	r7, [r2, #10]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 800654e:	8196      	strh	r6, [r2, #12]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006550:	81d4      	strh	r4, [r2, #14]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8006552:	f8a3 c008 	strh.w	ip, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 8006556:	7a2a      	ldrb	r2, [r5, #8]
 8006558:	729a      	strb	r2, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 800655a:	7aea      	ldrb	r2, [r5, #11]
 800655c:	72da      	strb	r2, [r3, #11]
}
 800655e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006562:	bf00      	nop
 8006564:	00080200 	.word	0x00080200
 8006568:	01ff3800 	.word	0x01ff3800
 800656c:	20001a00 	.word	0x20001a00
 8006570:	21010100 	.word	0x21010100
 8006574:	02110000 	.word	0x02110000

08006578 <VL53L1_preset_mode_standard_ranging_long_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006578:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800657c:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 800657e:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006580:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006584:	f8df c114 	ldr.w	ip, [pc, #276]	; 800669c <VL53L1_preset_mode_standard_ranging_long_range+0x124>
 8006588:	4f40      	ldr	r7, [pc, #256]	; (800668c <VL53L1_preset_mode_standard_ranging_long_range+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800658a:	2601      	movs	r6, #1
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 800658c:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006590:	f04f 6e32 	mov.w	lr, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006594:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006598:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 800659c:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80065a0:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 80065a4:	f8c0 4002 	str.w	r4, [r0, #2]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80065a8:	f04f 09c7 	mov.w	r9, #199	; 0xc7
	pstatic->debug__ctrl                                      = 0x00;
 80065ac:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80065b0:	f895 801e 	ldrb.w	r8, [r5, #30]
 80065b4:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80065b8:	f895 801f 	ldrb.w	r8, [r5, #31]
 80065bc:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80065c0:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 80065c4:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 80065c6:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80065c8:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80065ca:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80065cc:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80065d0:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_min_clip                             =
 80065d4:	f895 8010 	ldrb.w	r8, [r5, #16]
 80065d8:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80065dc:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80065e0:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80065e2:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80065e6:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80065ea:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80065ec:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80065ee:	f8c1 e000 	str.w	lr, [r1]
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 80065f2:	f64c 4e01 	movw	lr, #52225	; 0xcc01
	pgeneral->cal_config__repeat_rate                         =
 80065f6:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80065f8:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 80065fa:	8088      	strh	r0, [r1, #4]
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 80065fc:	20f5      	movs	r0, #245	; 0xf5
	pgeneral->phasecal_config__target                         =
 80065fe:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006600:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006602:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006604:	4f22      	ldr	r7, [pc, #136]	; (8006690 <VL53L1_preset_mode_standard_ranging_long_range+0x118>)
	pgeneral->dss_config__roi_mode_control =
 8006606:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006608:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 800660c:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800660e:	f8a1 8010 	strh.w	r8, [r1, #16]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006612:	f04f 0802 	mov.w	r8, #2
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006616:	491f      	ldr	r1, [pc, #124]	; (8006694 <VL53L1_preset_mode_standard_ranging_long_range+0x11c>)
	ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 8006618:	71d6      	strb	r6, [r2, #7]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800661a:	6011      	str	r1, [r2, #0]
	pdynamic->system__sequence_config                          = \
 800661c:	21db      	movs	r1, #219	; 0xdb
	ptiming->mm_config__timeout_macrop_b_lo                   = 0x20;
 800661e:	f8a2 e004 	strh.w	lr, [r2, #4]
		 * min_count_rate_rtn_limit_mcps = 0x0080 ->  9.7fp ->  1.0 Mcps
		 * valid_phase_low               = 0x08 -> 5.3fp ->  1.0
		 * valid_phase_high              = 0xB8 -> 5.3fp -> 23.0 -> 4.6m
		 */

		ptiming->range_config__vcsel_period_a                = 0x0F;
 8006622:	f04f 0e0f 	mov.w	lr, #15
	ptiming->range_config__timeout_macrop_b_lo                = 0xF5;
 8006626:	7210      	strb	r0, [r2, #8]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006628:	4620      	mov	r0, r4
	ptiming->system__fractional_enable                        = 0x00;
 800662a:	7514      	strb	r4, [r2, #20]
	ptiming->system__intermeasurement_period                  = 0x00000000;
 800662c:	6114      	str	r4, [r2, #16]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 800662e:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006630:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006634:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8006636:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 800663a:	731e      	strb	r6, [r3, #12]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 800663c:	260d      	movs	r6, #13
	pdynamic->system__seed_config =
 800663e:	71dc      	strb	r4, [r3, #7]
	pdynamic->sd_config__first_order_select =
 8006640:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
	psystem->system__stream_count_ctrl                         = 0x00;
 8006644:	4f14      	ldr	r7, [pc, #80]	; (8006698 <VL53L1_preset_mode_standard_ranging_long_range+0x120>)
	pdynamic->sd_config__first_order_select =
 8006646:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006648:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->system__sequence_config                          = \
 800664c:	7459      	strb	r1, [r3, #17]
	psystem->system__stream_count_ctrl                         = 0x00;
 800664e:	9907      	ldr	r1, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006650:	f883 c010 	strb.w	ip, [r3, #16]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8006654:	f640 5c0f 	movw	ip, #3343	; 0xd0f
	pdynamic->sd_config__quantifier         =
 8006658:	739c      	strb	r4, [r3, #14]
		ptiming->range_config__valid_phase_low               = 0x08;
 800665a:	f64b 0408 	movw	r4, #47112	; 0xb808
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800665e:	f883 900f 	strb.w	r9, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006662:	f883 8012 	strb.w	r8, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006666:	f8c1 7001 	str.w	r7, [r1, #1]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 800666a:	f882 e006 	strb.w	lr, [r2, #6]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 800666e:	7256      	strb	r6, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8006670:	8a6f      	ldrh	r7, [r5, #18]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006672:	8b2e      	ldrh	r6, [r5, #24]
		ptiming->range_config__sigma_thresh                  =
 8006674:	8157      	strh	r7, [r2, #10]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006676:	8196      	strh	r6, [r2, #12]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006678:	81d4      	strh	r4, [r2, #14]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 800667a:	f8a3 c008 	strh.w	ip, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 800667e:	79aa      	ldrb	r2, [r5, #6]
 8006680:	729a      	strb	r2, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8006682:	7a6a      	ldrb	r2, [r5, #9]
 8006684:	72da      	strb	r2, [r3, #11]
}
 8006686:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800668a:	bf00      	nop
 800668c:	00080200 	.word	0x00080200
 8006690:	01ff3800 	.word	0x01ff3800
 8006694:	20001a00 	.word	0x20001a00
 8006698:	21010100 	.word	0x21010100
 800669c:	02110000 	.word	0x02110000

080066a0 <VL53L1_preset_mode_standard_ranging_mm1_cal>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 80066a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80066a4:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 80066a6:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80066a8:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 80066ac:	f8df c118 	ldr.w	ip, [pc, #280]	; 80067c8 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x128>
 80066b0:	4f40      	ldr	r7, [pc, #256]	; (80067b4 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80066b2:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 80066b4:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80066b8:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 80066bc:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80066c0:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80066c4:	f8c0 4002 	str.w	r4, [r0, #2]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80066c8:	f640 19f5 	movw	r9, #2549	; 0x9f5
	pstatic->debug__ctrl                                      = 0x00;
 80066cc:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80066d0:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80066d4:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80066d8:	f895 801e 	ldrb.w	r8, [r5, #30]
 80066dc:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80066e0:	f895 801f 	ldrb.w	r8, [r5, #31]
 80066e4:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80066e8:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 80066ec:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 80066ee:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80066f0:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80066f2:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80066f6:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80066fa:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 80066fc:	f895 8010 	ldrb.w	r8, [r5, #16]
 8006700:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006704:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006708:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 800670a:	f880 801c 	strb.w	r8, [r0, #28]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 800670e:	f640 180b 	movw	r8, #2315	; 0x90b
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006712:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006714:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006716:	f44f 400c 	mov.w	r0, #35840	; 0x8c00
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 800671a:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 800671c:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 800671e:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006722:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 8006726:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8006728:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 800672a:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 800672c:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800672e:	4f22      	ldr	r7, [pc, #136]	; (80067b8 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x118>)
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006730:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006732:	f8c1 7012 	str.w	r7, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006736:	4f21      	ldr	r7, [pc, #132]	; (80067bc <VL53L1_preset_mode_standard_ranging_mm1_cal+0x11c>)
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006738:	8208      	strh	r0, [r1, #16]
	ptiming->range_config__valid_phase_high                   = 0x78;
 800673a:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800673c:	6017      	str	r7, [r2, #0]
 800673e:	4f20      	ldr	r7, [pc, #128]	; (80067c0 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x120>)
 8006740:	f8a2 9008 	strh.w	r9, [r2, #8]
 8006744:	6057      	str	r7, [r2, #4]
	ptiming->range_config__sigma_thresh                       =
 8006746:	f8b5 9014 	ldrh.w	r9, [r5, #20]
 800674a:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 800674e:	f8b5 901a 	ldrh.w	r9, [r5, #26]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006752:	f882 e00e 	strb.w	lr, [r2, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006756:	f04f 0ec7 	mov.w	lr, #199	; 0xc7
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 800675a:	f8a2 900c 	strh.w	r9, [r2, #12]
	ptiming->range_config__valid_phase_high                   = 0x78;
 800675e:	73d0      	strb	r0, [r2, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006760:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8006762:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8006764:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006766:	2202      	movs	r2, #2
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006768:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 800676a:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 800676e:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 8006770:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006774:	f8a3 8008 	strh.w	r8, [r3, #8]
	pdynamic->system__seed_config =
 8006778:	71dc      	strb	r4, [r3, #7]
		pdynamic->system__sequence_config  = \
 800677a:	243b      	movs	r4, #59	; 0x3b
	pdynamic->sd_config__initial_phase_sd0                     =
 800677c:	f895 8007 	ldrb.w	r8, [r5, #7]
 8006780:	f883 800a 	strb.w	r8, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006784:	f895 800a 	ldrb.w	r8, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006788:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 800678a:	f883 800b 	strb.w	r8, [r3, #11]
	pdynamic->sd_config__first_order_select =
 800678e:	f895 6024 	ldrb.w	r6, [r5, #36]	; 0x24
 8006792:	735e      	strb	r6, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006794:	f895 6023 	ldrb.w	r6, [r5, #35]	; 0x23
	psystem->system__stream_count_ctrl                         = 0x00;
 8006798:	4d0a      	ldr	r5, [pc, #40]	; (80067c4 <VL53L1_preset_mode_standard_ranging_mm1_cal+0x124>)
	pdynamic->sd_config__quantifier         =
 800679a:	739e      	strb	r6, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 800679c:	9e07      	ldr	r6, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 800679e:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80067a2:	f883 e00f 	strb.w	lr, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 80067a6:	749a      	strb	r2, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 80067a8:	f8c6 5001 	str.w	r5, [r6, #1]
		pgeneral->dss_config__roi_mode_control =
 80067ac:	728a      	strb	r2, [r1, #10]
		pdynamic->system__sequence_config  = \
 80067ae:	745c      	strb	r4, [r3, #17]
}
 80067b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80067b4:	00080200 	.word	0x00080200
 80067b8:	01ff3800 	.word	0x01ff3800
 80067bc:	20001a00 	.word	0x20001a00
 80067c0:	010bcc01 	.word	0x010bcc01
 80067c4:	21010100 	.word	0x21010100
 80067c8:	02110000 	.word	0x02110000

080067cc <VL53L1_preset_mode_standard_ranging_mm2_cal>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 80067cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80067d0:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 80067d2:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80067d4:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 80067d8:	f8df c118 	ldr.w	ip, [pc, #280]	; 80068f4 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x128>
 80067dc:	4f40      	ldr	r7, [pc, #256]	; (80068e0 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x114>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80067de:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 80067e0:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80067e4:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 80067e8:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80067ec:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80067f0:	f8c0 4002 	str.w	r4, [r0, #2]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 80067f4:	f640 19f5 	movw	r9, #2549	; 0x9f5
	pstatic->debug__ctrl                                      = 0x00;
 80067f8:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80067fc:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006800:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006804:	f895 801e 	ldrb.w	r8, [r5, #30]
 8006808:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 800680c:	f895 801f 	ldrb.w	r8, [r5, #31]
 8006810:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006814:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006818:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 800681a:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800681c:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 800681e:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006822:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006826:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006828:	f895 8010 	ldrb.w	r8, [r5, #16]
 800682c:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006830:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006834:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8006836:	f880 801c 	strb.w	r8, [r0, #28]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 800683a:	f640 180b 	movw	r8, #2315	; 0x90b
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 800683e:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006840:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006842:	f44f 400c 	mov.w	r0, #35840	; 0x8c00
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006846:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8006848:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 800684a:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800684e:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 8006852:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8006854:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006856:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006858:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800685a:	4f22      	ldr	r7, [pc, #136]	; (80068e4 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x118>)
	pgeneral->system__thresh_rate_high                        = 0x0000;
 800685c:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800685e:	f8c1 7012 	str.w	r7, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006862:	4f21      	ldr	r7, [pc, #132]	; (80068e8 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x11c>)
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006864:	8208      	strh	r0, [r1, #16]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8006866:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006868:	6017      	str	r7, [r2, #0]
 800686a:	4f20      	ldr	r7, [pc, #128]	; (80068ec <VL53L1_preset_mode_standard_ranging_mm2_cal+0x120>)
 800686c:	f8a2 9008 	strh.w	r9, [r2, #8]
 8006870:	6057      	str	r7, [r2, #4]
	ptiming->range_config__sigma_thresh                       =
 8006872:	f8b5 9014 	ldrh.w	r9, [r5, #20]
 8006876:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 800687a:	f8b5 901a 	ldrh.w	r9, [r5, #26]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800687e:	f882 e00e 	strb.w	lr, [r2, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006882:	f04f 0ec7 	mov.w	lr, #199	; 0xc7
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8006886:	f8a2 900c 	strh.w	r9, [r2, #12]
	ptiming->range_config__valid_phase_high                   = 0x78;
 800688a:	73d0      	strb	r0, [r2, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 800688c:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 800688e:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8006890:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8006892:	2202      	movs	r2, #2
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006894:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006896:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 800689a:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 800689c:	f895 4021 	ldrb.w	r4, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 80068a0:	f8a3 8008 	strh.w	r8, [r3, #8]
	pdynamic->system__seed_config =
 80068a4:	71dc      	strb	r4, [r3, #7]
		pdynamic->system__sequence_config  = \
 80068a6:	245b      	movs	r4, #91	; 0x5b
	pdynamic->sd_config__initial_phase_sd0                     =
 80068a8:	f895 8007 	ldrb.w	r8, [r5, #7]
 80068ac:	f883 800a 	strb.w	r8, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 80068b0:	f895 800a 	ldrb.w	r8, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80068b4:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 80068b6:	f883 800b 	strb.w	r8, [r3, #11]
	pdynamic->sd_config__first_order_select =
 80068ba:	f895 6024 	ldrb.w	r6, [r5, #36]	; 0x24
 80068be:	735e      	strb	r6, [r3, #13]
	pdynamic->sd_config__quantifier         =
 80068c0:	f895 6023 	ldrb.w	r6, [r5, #35]	; 0x23
	psystem->system__stream_count_ctrl                         = 0x00;
 80068c4:	4d0a      	ldr	r5, [pc, #40]	; (80068f0 <VL53L1_preset_mode_standard_ranging_mm2_cal+0x124>)
	pdynamic->sd_config__quantifier         =
 80068c6:	739e      	strb	r6, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 80068c8:	9e07      	ldr	r6, [sp, #28]
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80068ca:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80068ce:	f883 e00f 	strb.w	lr, [r3, #15]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 80068d2:	749a      	strb	r2, [r3, #18]
	psystem->system__stream_count_ctrl                         = 0x00;
 80068d4:	f8c6 5001 	str.w	r5, [r6, #1]
		pgeneral->dss_config__roi_mode_control =
 80068d8:	728a      	strb	r2, [r1, #10]
		pdynamic->system__sequence_config  = \
 80068da:	745c      	strb	r4, [r3, #17]
}
 80068dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80068e0:	00080200 	.word	0x00080200
 80068e4:	01ff3800 	.word	0x01ff3800
 80068e8:	20001a00 	.word	0x20001a00
 80068ec:	010bcc01 	.word	0x010bcc01
 80068f0:	21010100 	.word	0x21010100
 80068f4:	02110000 	.word	0x02110000

080068f8 <VL53L1_preset_mode_timed_ranging>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 80068f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80068fc:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 80068fe:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006900:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006904:	f8df c120 	ldr.w	ip, [pc, #288]	; 8006a28 <VL53L1_preset_mode_timed_ranging+0x130>
 8006908:	4f46      	ldr	r7, [pc, #280]	; (8006a24 <VL53L1_preset_mode_timed_ranging+0x12c>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 800690a:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 800690c:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006910:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006914:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006918:	f04f 6832 	mov.w	r8, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 800691c:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006920:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8006924:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006928:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 800692c:	f895 e01e 	ldrb.w	lr, [r5, #30]
 8006930:	f880 e012 	strb.w	lr, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006934:	f895 e01f 	ldrb.w	lr, [r5, #31]
 8006938:	f880 e013 	strb.w	lr, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800693c:	f895 e020 	ldrb.w	lr, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006940:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006942:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006944:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006946:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006948:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 800694c:	f880 e014 	strb.w	lr, [r0, #20]
	pstatic->algo__range_min_clip                             =
 8006950:	f895 e010 	ldrb.w	lr, [r5, #16]
 8006954:	f880 e01b 	strb.w	lr, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006958:	f895 e00c 	ldrb.w	lr, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 800695c:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 800695e:	f880 e01c 	strb.w	lr, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006962:	f44f 4e0c 	mov.w	lr, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006966:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006968:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 800696a:	f8c1 8000 	str.w	r8, [r1]
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 800696e:	f04f 080b 	mov.w	r8, #11
	pgeneral->cal_config__repeat_rate                         =
 8006972:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006974:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8006976:	8088      	strh	r0, [r1, #4]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8006978:	2009      	movs	r0, #9
	pgeneral->phasecal_config__target                         =
 800697a:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 800697c:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 800697e:	720f      	strb	r7, [r1, #8]
{
 8006980:	9f07      	ldr	r7, [sp, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006982:	f8a1 e010 	strh.w	lr, [r1, #16]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006986:	f8df e0a4 	ldr.w	lr, [pc, #164]	; 8006a2c <VL53L1_preset_mode_timed_ranging+0x134>
	pgeneral->dss_config__roi_mode_control =
 800698a:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 800698c:	f8c1 e012 	str.w	lr, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006990:	f8df e09c 	ldr.w	lr, [pc, #156]	; 8006a30 <VL53L1_preset_mode_timed_ranging+0x138>
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006994:	60cc      	str	r4, [r1, #12]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006996:	f647 0108 	movw	r1, #30728	; 0x7808
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800699a:	f8c2 e000 	str.w	lr, [r2]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 800699e:	f640 1e0b 	movw	lr, #2315	; 0x90b
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 80069a2:	f882 8006 	strb.w	r8, [r2, #6]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 80069a6:	7250      	strb	r0, [r2, #9]
	ptiming->range_config__sigma_thresh                       =
 80069a8:	f8b5 8014 	ldrh.w	r8, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 80069ac:	8b68      	ldrh	r0, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 80069ae:	f8a2 800a 	strh.w	r8, [r2, #10]

		/* Disable GPH  */
		pdynamic->system__grouped_parameter_hold = 0x00;

		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 80069b2:	f44f 4831 	mov.w	r8, #45312	; 0xb100
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 80069b6:	8190      	strh	r0, [r2, #12]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80069b8:	20c7      	movs	r0, #199	; 0xc7
	ptiming->system__fractional_enable                        = 0x00;
 80069ba:	7514      	strb	r4, [r2, #20]
	ptiming->range_config__valid_phase_low                    = 0x08;
 80069bc:	81d1      	strh	r1, [r2, #14]
	pdynamic->system__sequence_config                          = \
 80069be:	21db      	movs	r1, #219	; 0xdb
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 80069c0:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 80069c2:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 80069c6:	719c      	strb	r4, [r3, #6]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 80069c8:	f8a3 e008 	strh.w	lr, [r3, #8]
	pdynamic->sd_config__initial_phase_sd0                     =
 80069cc:	f895 e007 	ldrb.w	lr, [r5, #7]
 80069d0:	f883 e00a 	strb.w	lr, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 80069d4:	f895 e00a 	ldrb.w	lr, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 80069d8:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 80069da:	f883 e00b 	strb.w	lr, [r3, #11]
		ptiming->range_config__timeout_macrop_a_lo                = 0xB1;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 80069de:	f04f 0ed4 	mov.w	lr, #212	; 0xd4
	pdynamic->sd_config__first_order_select =
 80069e2:	f895 9024 	ldrb.w	r9, [r5, #36]	; 0x24
 80069e6:	f883 900d 	strb.w	r9, [r3, #13]
	pdynamic->sd_config__quantifier         =
 80069ea:	f895 9023 	ldrb.w	r9, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 80069ee:	f883 c010 	strb.w	ip, [r3, #16]

		/* Timing Configuration */

		ptiming->system__intermeasurement_period = 0x00000600;
 80069f2:	f44f 6cc0 	mov.w	ip, #1536	; 0x600
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80069f6:	73d8      	strb	r0, [r3, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 80069f8:	4620      	mov	r0, r4
	pdynamic->system__sequence_config                          = \
 80069fa:	7459      	strb	r1, [r3, #17]
		psystem->system__mode_start =
 80069fc:	2140      	movs	r1, #64	; 0x40
	pdynamic->sd_config__quantifier         =
 80069fe:	f883 900e 	strb.w	r9, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006a02:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 8006a04:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 8006a06:	70fe      	strb	r6, [r7, #3]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8006a08:	749c      	strb	r4, [r3, #18]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8006a0a:	f8a2 8004 	strh.w	r8, [r2, #4]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 8006a0e:	71d4      	strb	r4, [r2, #7]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 8006a10:	f882 e008 	strb.w	lr, [r2, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006a14:	f8c2 c010 	str.w	ip, [r2, #16]
		pdynamic->system__seed_config =
 8006a18:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 8006a1c:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start =
 8006a1e:	7139      	strb	r1, [r7, #4]
}
 8006a20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006a24:	00080200 	.word	0x00080200
 8006a28:	02110000 	.word	0x02110000
 8006a2c:	01ff3800 	.word	0x01ff3800
 8006a30:	20001a00 	.word	0x20001a00

08006a34 <VL53L1_preset_mode_timed_ranging_short_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006a34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006a38:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8006a3a:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006a3c:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006a40:	f8df c124 	ldr.w	ip, [pc, #292]	; 8006b68 <VL53L1_preset_mode_timed_ranging_short_range+0x134>
 8006a44:	4f47      	ldr	r7, [pc, #284]	; (8006b64 <VL53L1_preset_mode_timed_ranging_short_range+0x130>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006a46:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8006a48:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006a4c:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006a50:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006a54:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006a58:	f8c0 4002 	str.w	r4, [r0, #2]
 8006a5c:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006a60:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006a64:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006a68:	f895 801e 	ldrb.w	r8, [r5, #30]
 8006a6c:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006a70:	f895 801f 	ldrb.w	r8, [r5, #31]
 8006a74:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006a78:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006a7c:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006a7e:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006a80:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006a82:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006a86:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006a8a:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006a8c:	f895 8010 	ldrb.w	r8, [r5, #16]
 8006a90:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006a94:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006a98:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8006a9a:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006a9e:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006aa2:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006aa4:	77c4      	strb	r4, [r0, #31]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006aa6:	20c7      	movs	r0, #199	; 0xc7
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006aa8:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8006aaa:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006aac:	f8a1 e006 	strh.w	lr, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8006ab0:	808f      	strh	r7, [r1, #4]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006ab2:	f8df e0b8 	ldr.w	lr, [pc, #184]	; 8006b6c <VL53L1_preset_mode_timed_ranging_short_range+0x138>
	pgeneral->phasecal_config__target                         =
 8006ab6:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006ab8:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006aba:	720f      	strb	r7, [r1, #8]
{
 8006abc:	9f07      	ldr	r7, [sp, #28]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006abe:	f8c1 e012 	str.w	lr, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006ac2:	f8df e0ac 	ldr.w	lr, [pc, #172]	; 8006b70 <VL53L1_preset_mode_timed_ranging_short_range+0x13c>
	pgeneral->dss_config__roi_mode_control =
 8006ac6:	728e      	strb	r6, [r1, #10]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006ac8:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006aca:	f8a1 8010 	strh.w	r8, [r1, #16]
	pdynamic->system__sequence_config                          = \
 8006ace:	21db      	movs	r1, #219	; 0xdb
	ptiming->system__fractional_enable                        = 0x00;
 8006ad0:	7514      	strb	r4, [r2, #20]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8006ad2:	f04f 0807 	mov.w	r8, #7
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006ad6:	f8c2 e000 	str.w	lr, [r2]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006ada:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006adc:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006ae0:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006ae2:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__first_order_select =
 8006ae4:	f895 e024 	ldrb.w	lr, [r5, #36]	; 0x24
 8006ae8:	f883 e00d 	strb.w	lr, [r3, #13]
		ptiming->range_config__vcsel_period_b                = 0x05;
 8006aec:	f04f 0e05 	mov.w	lr, #5
	pdynamic->sd_config__quantifier         =
 8006af0:	f895 9023 	ldrb.w	r9, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006af4:	73d8      	strb	r0, [r3, #15]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006af6:	f643 0008 	movw	r0, #14344	; 0x3808
	pdynamic->system__sequence_config                          = \
 8006afa:	7459      	strb	r1, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8006afc:	f240 5107 	movw	r1, #1287	; 0x507
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006b00:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 8006b04:	f883 900e 	strb.w	r9, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 8006b08:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 8006b0a:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 8006b0c:	70fe      	strb	r6, [r7, #3]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8006b0e:	f882 8006 	strb.w	r8, [r2, #6]


		/* Timing Configuration */

		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 8006b12:	f248 4801 	movw	r8, #33793	; 0x8401
		ptiming->range_config__vcsel_period_b                = 0x05;
 8006b16:	f882 e009 	strb.w	lr, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8006b1a:	f8b5 e016 	ldrh.w	lr, [r5, #22]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006b1e:	f8b5 c01c 	ldrh.w	ip, [r5, #28]
		ptiming->range_config__sigma_thresh                  =
 8006b22:	f8a2 e00a 	strh.w	lr, [r2, #10]
		ptiming->range_config__timeout_macrop_a_lo                = 0x84;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x01;
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006b26:	f04f 0eb1 	mov.w	lr, #177	; 0xb1
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006b2a:	f8a2 c00c 	strh.w	ip, [r2, #12]

		ptiming->system__intermeasurement_period = 0x00000600;
 8006b2e:	f44f 6cc0 	mov.w	ip, #1536	; 0x600
		ptiming->range_config__valid_phase_low               = 0x08;
 8006b32:	81d0      	strh	r0, [r2, #14]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8006b34:	8119      	strh	r1, [r3, #8]
				ptuning_parms->tp_timed_seed_cfg;

		/* System control */

		/* Configure Timed/Psuedo-solo mode */
		psystem->system__mode_start =
 8006b36:	2140      	movs	r1, #64	; 0x40
		pdynamic->sd_config__initial_phase_sd0               =
 8006b38:	7a28      	ldrb	r0, [r5, #8]
 8006b3a:	7298      	strb	r0, [r3, #10]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006b3c:	4620      	mov	r0, r4
		pdynamic->sd_config__initial_phase_sd1               =
 8006b3e:	f895 900b 	ldrb.w	r9, [r5, #11]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8006b42:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 8006b44:	f883 900b 	strb.w	r9, [r3, #11]
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 8006b48:	f8a2 8004 	strh.w	r8, [r2, #4]
		ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 8006b4c:	71d6      	strb	r6, [r2, #7]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006b4e:	f882 e008 	strb.w	lr, [r2, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006b52:	f8c2 c010 	str.w	ip, [r2, #16]
		pdynamic->system__seed_config =
 8006b56:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 8006b5a:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start =
 8006b5c:	7139      	strb	r1, [r7, #4]
}
 8006b5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006b62:	bf00      	nop
 8006b64:	00080200 	.word	0x00080200
 8006b68:	02110000 	.word	0x02110000
 8006b6c:	01ff3800 	.word	0x01ff3800
 8006b70:	20001a00 	.word	0x20001a00

08006b74 <VL53L1_preset_mode_timed_ranging_long_range>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8006b74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006b78:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8006b7a:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006b7c:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006b80:	f8df c124 	ldr.w	ip, [pc, #292]	; 8006ca8 <VL53L1_preset_mode_timed_ranging_long_range+0x134>
 8006b84:	4f45      	ldr	r7, [pc, #276]	; (8006c9c <VL53L1_preset_mode_timed_ranging_long_range+0x128>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006b86:	2601      	movs	r6, #1
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006b88:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006b8c:	f04f 6e32 	mov.w	lr, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006b90:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006b94:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 8006b98:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006b9c:	f640 5702 	movw	r7, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8006ba0:	f8c0 4002 	str.w	r4, [r0, #2]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 8006ba4:	f04f 090f 	mov.w	r9, #15
	pstatic->debug__ctrl                                      = 0x00;
 8006ba8:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006bac:	f895 801e 	ldrb.w	r8, [r5, #30]
 8006bb0:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006bb4:	f895 801f 	ldrb.w	r8, [r5, #31]
 8006bb8:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006bbc:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006bc0:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006bc2:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006bc4:	8304      	strh	r4, [r0, #24]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006bc6:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006bc8:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006bcc:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_min_clip                             =
 8006bd0:	f895 8010 	ldrb.w	r8, [r5, #16]
 8006bd4:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006bd8:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006bdc:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 8006bde:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006be2:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006be6:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006be8:	77c4      	strb	r4, [r0, #31]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006bea:	f8c1 e000 	str.w	lr, [r1]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006bee:	f04f 0ec7 	mov.w	lr, #199	; 0xc7
	pgeneral->cal_config__repeat_rate                         =
 8006bf2:	89e8      	ldrh	r0, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006bf4:	80cf      	strh	r7, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8006bf6:	8088      	strh	r0, [r1, #4]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006bf8:	4829      	ldr	r0, [pc, #164]	; (8006ca0 <VL53L1_preset_mode_timed_ranging_long_range+0x12c>)
	pgeneral->phasecal_config__target                         =
 8006bfa:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 8006bfc:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8006bfe:	720f      	strb	r7, [r1, #8]
{
 8006c00:	9f07      	ldr	r7, [sp, #28]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006c02:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006c04:	f8c1 0012 	str.w	r0, [r1, #18]
	pdynamic->system__sequence_config                          = \
 8006c08:	20db      	movs	r0, #219	; 0xdb
	pgeneral->dss_config__roi_mode_control =
 8006c0a:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006c0c:	f8a1 8010 	strh.w	r8, [r1, #16]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8006c10:	f04f 080d 	mov.w	r8, #13
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006c14:	4923      	ldr	r1, [pc, #140]	; (8006ca4 <VL53L1_preset_mode_timed_ranging_long_range+0x130>)
	ptiming->system__fractional_enable                        = 0x00;
 8006c16:	7514      	strb	r4, [r2, #20]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006c18:	6011      	str	r1, [r2, #0]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006c1a:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006c1c:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006c20:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006c22:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__first_order_select =
 8006c24:	f895 1024 	ldrb.w	r1, [r5, #36]	; 0x24
 8006c28:	7359      	strb	r1, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006c2a:	f895 1023 	ldrb.w	r1, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006c2e:	f883 c010 	strb.w	ip, [r3, #16]
		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
		ptiming->range_config__timeout_macrop_a_lo                = 0x97;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006c32:	f04f 0cb1 	mov.w	ip, #177	; 0xb1
	pdynamic->sd_config__quantifier         =
 8006c36:	7399      	strb	r1, [r3, #14]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006c38:	f64b 0108 	movw	r1, #47112	; 0xb808
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006c3c:	f883 e00f 	strb.w	lr, [r3, #15]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8006c40:	f44f 4e17 	mov.w	lr, #38656	; 0x9700
	pdynamic->system__sequence_config                          = \
 8006c44:	7458      	strb	r0, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8006c46:	f640 500f 	movw	r0, #3343	; 0xd0f
	psystem->system__stream_count_ctrl                         = 0x00;
 8006c4a:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 8006c4c:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 8006c4e:	70fe      	strb	r6, [r7, #3]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 8006c50:	f882 9006 	strb.w	r9, [r2, #6]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8006c54:	f882 8009 	strb.w	r8, [r2, #9]
		ptiming->range_config__sigma_thresh                  =
 8006c58:	f8b5 8012 	ldrh.w	r8, [r5, #18]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006c5c:	8b2e      	ldrh	r6, [r5, #24]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006c5e:	81d1      	strh	r1, [r2, #14]
				ptuning_parms->tp_timed_seed_cfg;

		/* System control */

		/* Configure Timed/Psuedo-solo mode */
		psystem->system__mode_start =
 8006c60:	2140      	movs	r1, #64	; 0x40
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006c62:	8196      	strh	r6, [r2, #12]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006c64:	f44f 66c0 	mov.w	r6, #1536	; 0x600
		ptiming->range_config__sigma_thresh                  =
 8006c68:	f8a2 800a 	strh.w	r8, [r2, #10]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8006c6c:	8118      	strh	r0, [r3, #8]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006c6e:	4620      	mov	r0, r4
		pdynamic->sd_config__initial_phase_sd0               =
 8006c70:	f895 8006 	ldrb.w	r8, [r5, #6]
 8006c74:	f883 800a 	strb.w	r8, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8006c78:	f895 8009 	ldrb.w	r8, [r5, #9]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8006c7c:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 8006c7e:	f883 800b 	strb.w	r8, [r3, #11]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8006c82:	f8a2 e004 	strh.w	lr, [r2, #4]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 8006c86:	71d4      	strb	r4, [r2, #7]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006c88:	f882 c008 	strb.w	ip, [r2, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006c8c:	6116      	str	r6, [r2, #16]
		pdynamic->system__seed_config =
 8006c8e:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 8006c92:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start =
 8006c94:	7139      	strb	r1, [r7, #4]
}
 8006c96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006c9a:	bf00      	nop
 8006c9c:	00080200 	.word	0x00080200
 8006ca0:	01ff3800 	.word	0x01ff3800
 8006ca4:	20001a00 	.word	0x20001a00
 8006ca8:	02110000 	.word	0x02110000

08006cac <VL53L1_preset_mode_low_power_auto_ranging>:
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms,
	VL53L1_low_power_auto_data_t *plpadata)
{
 8006cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cb0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	pstatic->debug__ctrl                                      = 0x00;
 8006cb2:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006cb4:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006cb8:	f8df c134 	ldr.w	ip, [pc, #308]	; 8006df0 <VL53L1_preset_mode_low_power_auto_ranging+0x144>
 8006cbc:	4e49      	ldr	r6, [pc, #292]	; (8006de4 <VL53L1_preset_mode_low_power_auto_ranging+0x138>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006cbe:	2701      	movs	r7, #1
	pstatic->debug__ctrl                                      = 0x00;
 8006cc0:	f8c0 c00a 	str.w	ip, [r0, #10]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006cc4:	f04f 6932 	mov.w	r9, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006cc8:	f8c0 600e 	str.w	r6, [r0, #14]
{
 8006ccc:	4616      	mov	r6, r2
	pstatic->debug__ctrl                                      = 0x00;
 8006cce:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006cd2:	f640 5c02 	movw	ip, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8006cd6:	f8c0 4006 	str.w	r4, [r0, #6]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006cda:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006cde:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006ce2:	f04f 0eff 	mov.w	lr, #255	; 0xff
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006ce6:	7faa      	ldrb	r2, [r5, #30]
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 8006ce8:	f04f 0a0b 	mov.w	sl, #11
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006cec:	f04f 0bc7 	mov.w	fp, #199	; 0xc7
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006cf0:	7482      	strb	r2, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006cf2:	7fea      	ldrb	r2, [r5, #31]
 8006cf4:	74c2      	strb	r2, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006cf6:	f895 2020 	ldrb.w	r2, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006cfa:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006cfc:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006cfe:	7547      	strb	r7, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006d00:	f880 e01a 	strb.w	lr, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006d04:	7502      	strb	r2, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006d06:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006d08:	7c2a      	ldrb	r2, [r5, #16]
 8006d0a:	76c2      	strb	r2, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006d0c:	7b2a      	ldrb	r2, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006d0e:	7744      	strb	r4, [r0, #29]
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006d10:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006d12:	77c4      	strb	r4, [r0, #31]
	pstatic->algo__consistency_check__tolerance               =
 8006d14:	7702      	strb	r2, [r0, #28]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006d16:	f8c1 9000 	str.w	r9, [r1]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8006d1a:	f04f 0909 	mov.w	r9, #9
	pgeneral->cal_config__repeat_rate                         =
 8006d1e:	89ea      	ldrh	r2, [r5, #14]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006d20:	4831      	ldr	r0, [pc, #196]	; (8006de8 <VL53L1_preset_mode_low_power_auto_ranging+0x13c>)
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006d22:	f8a1 c006 	strh.w	ip, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8006d26:	808a      	strh	r2, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8006d28:	7b6a      	ldrb	r2, [r5, #13]
{
 8006d2a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
	pgeneral->phasecal_config__target                         =
 8006d2e:	720a      	strb	r2, [r1, #8]
{
 8006d30:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
	pgeneral->phasecal_config__override                       = 0x00;
 8006d32:	724c      	strb	r4, [r1, #9]
	pgeneral->dss_config__roi_mode_control =
 8006d34:	728f      	strb	r7, [r1, #10]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006d36:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006d38:	f8c1 0012 	str.w	r0, [r1, #18]
					ptuning_parms);

	/* now setup the low power auto mode */

	if (status == VL53L1_ERROR_NONE) {
		status = VL53L1_config_low_power_auto_mode(
 8006d3c:	4608      	mov	r0, r1
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006d3e:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006d42:	f647 0808 	movw	r8, #30728	; 0x7808
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006d46:	4929      	ldr	r1, [pc, #164]	; (8006dec <VL53L1_preset_mode_low_power_auto_ranging+0x140>)
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 8006d48:	f886 a006 	strb.w	sl, [r6, #6]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006d4c:	6031      	str	r1, [r6, #0]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006d4e:	f640 110b 	movw	r1, #2315	; 0x90b
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8006d52:	f886 9009 	strb.w	r9, [r6, #9]
	ptiming->range_config__sigma_thresh                       =
 8006d56:	f8b5 a014 	ldrh.w	sl, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8006d5a:	f8b5 901a 	ldrh.w	r9, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 8006d5e:	f8a6 a00a 	strh.w	sl, [r6, #10]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8006d62:	f44f 4a31 	mov.w	sl, #45312	; 0xb100
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8006d66:	f8a6 900c 	strh.w	r9, [r6, #12]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 8006d6a:	f04f 09d4 	mov.w	r9, #212	; 0xd4
	ptiming->system__fractional_enable                        = 0x00;
 8006d6e:	7534      	strb	r4, [r6, #20]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8006d70:	f8a6 800e 	strh.w	r8, [r6, #14]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006d74:	701f      	strb	r7, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006d76:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006d7a:	719c      	strb	r4, [r3, #6]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8006d7c:	8119      	strh	r1, [r3, #8]
	pdynamic->system__sequence_config                          = \
 8006d7e:	21db      	movs	r1, #219	; 0xdb
	pdynamic->sd_config__initial_phase_sd0                     =
 8006d80:	f895 8007 	ldrb.w	r8, [r5, #7]
 8006d84:	f883 800a 	strb.w	r8, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006d88:	f895 800a 	ldrb.w	r8, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006d8c:	731f      	strb	r7, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8006d8e:	f883 800b 	strb.w	r8, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8006d92:	f895 8024 	ldrb.w	r8, [r5, #36]	; 0x24
 8006d96:	f883 800d 	strb.w	r8, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8006d9a:	f895 8023 	ldrb.w	r8, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006d9e:	f883 e010 	strb.w	lr, [r3, #16]
		psystem->system__mode_start =
 8006da2:	f04f 0e40 	mov.w	lr, #64	; 0x40
	pdynamic->sd_config__quantifier         =
 8006da6:	f883 800e 	strb.w	r8, [r3, #14]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006daa:	f44f 68c0 	mov.w	r8, #1536	; 0x600
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006dae:	f883 b00f 	strb.w	fp, [r3, #15]
	pdynamic->system__sequence_config                          = \
 8006db2:	7459      	strb	r1, [r3, #17]
		status = VL53L1_config_low_power_auto_mode(
 8006db4:	4619      	mov	r1, r3
	psystem->system__stream_count_ctrl                         = 0x00;
 8006db6:	f88c 4001 	strb.w	r4, [ip, #1]
	psystem->firmware__enable                                  = 0x01;
 8006dba:	f88c 7002 	strb.w	r7, [ip, #2]
	psystem->system__interrupt_clear                           = \
 8006dbe:	f88c 7003 	strb.w	r7, [ip, #3]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8006dc2:	749c      	strb	r4, [r3, #18]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 8006dc4:	71f4      	strb	r4, [r6, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8006dc6:	f8a6 a004 	strh.w	sl, [r6, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 8006dca:	f886 9008 	strb.w	r9, [r6, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006dce:	f8c6 8010 	str.w	r8, [r6, #16]
		pdynamic->system__seed_config =
 8006dd2:	f895 4022 	ldrb.w	r4, [r5, #34]	; 0x22
 8006dd6:	71dc      	strb	r4, [r3, #7]
		psystem->system__mode_start =
 8006dd8:	f88c e004 	strb.w	lr, [ip, #4]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006ddc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		status = VL53L1_config_low_power_auto_mode(
 8006de0:	f000 bcfe 	b.w	80077e0 <VL53L1_config_low_power_auto_mode>
 8006de4:	00080200 	.word	0x00080200
 8006de8:	01ff3800 	.word	0x01ff3800
 8006dec:	20001a00 	.word	0x20001a00
 8006df0:	02110000 	.word	0x02110000

08006df4 <VL53L1_preset_mode_low_power_auto_short_ranging>:
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms,
	VL53L1_low_power_auto_data_t *plpadata)
{
 8006df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006df8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	pstatic->debug__ctrl                                      = 0x00;
 8006dfa:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006dfc:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006e00:	f8df c12c 	ldr.w	ip, [pc, #300]	; 8006f30 <VL53L1_preset_mode_low_power_auto_short_ranging+0x13c>
 8006e04:	4e47      	ldr	r6, [pc, #284]	; (8006f24 <VL53L1_preset_mode_low_power_auto_short_ranging+0x130>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006e06:	2701      	movs	r7, #1
	pstatic->debug__ctrl                                      = 0x00;
 8006e08:	f8c0 c00a 	str.w	ip, [r0, #10]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006e0c:	f04f 6932 	mov.w	r9, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006e10:	f8c0 600e 	str.w	r6, [r0, #14]
{
 8006e14:	4616      	mov	r6, r2
	pstatic->debug__ctrl                                      = 0x00;
 8006e16:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006e1a:	f640 5c02 	movw	ip, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8006e1e:	f8c0 4006 	str.w	r4, [r0, #6]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006e22:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006e26:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006e2a:	f04f 0eff 	mov.w	lr, #255	; 0xff
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006e2e:	7faa      	ldrb	r2, [r5, #30]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006e30:	f04f 0ac7 	mov.w	sl, #199	; 0xc7
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006e34:	7482      	strb	r2, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006e36:	7fea      	ldrb	r2, [r5, #31]
 8006e38:	74c2      	strb	r2, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006e3a:	f895 2020 	ldrb.w	r2, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006e3e:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006e40:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006e42:	7547      	strb	r7, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006e44:	f880 e01a 	strb.w	lr, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006e48:	7502      	strb	r2, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006e4a:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006e4c:	7c2a      	ldrb	r2, [r5, #16]
 8006e4e:	76c2      	strb	r2, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006e50:	7b2a      	ldrb	r2, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006e52:	7744      	strb	r4, [r0, #29]
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006e54:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006e56:	77c4      	strb	r4, [r0, #31]
	pstatic->algo__consistency_check__tolerance               =
 8006e58:	7702      	strb	r2, [r0, #28]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006e5a:	f8c1 9000 	str.w	r9, [r1]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8006e5e:	f04f 0907 	mov.w	r9, #7
	pgeneral->cal_config__repeat_rate                         =
 8006e62:	89ea      	ldrh	r2, [r5, #14]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006e64:	4830      	ldr	r0, [pc, #192]	; (8006f28 <VL53L1_preset_mode_low_power_auto_short_ranging+0x134>)
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006e66:	f8a1 c006 	strh.w	ip, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8006e6a:	808a      	strh	r2, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8006e6c:	7b6a      	ldrb	r2, [r5, #13]
{
 8006e6e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
	pgeneral->phasecal_config__target                         =
 8006e72:	720a      	strb	r2, [r1, #8]
{
 8006e74:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
	pgeneral->phasecal_config__override                       = 0x00;
 8006e76:	724c      	strb	r4, [r1, #9]
	pgeneral->dss_config__roi_mode_control =
 8006e78:	728f      	strb	r7, [r1, #10]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006e7a:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006e7c:	f8c1 0012 	str.w	r0, [r1, #18]
					ptuning_parms);

	/* now setup the low power auto mode */

	if (status == VL53L1_ERROR_NONE) {
		status = VL53L1_config_low_power_auto_mode(
 8006e80:	4608      	mov	r0, r1
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006e82:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006e86:	4929      	ldr	r1, [pc, #164]	; (8006f2c <VL53L1_preset_mode_low_power_auto_short_ranging+0x138>)
	ptiming->system__fractional_enable                        = 0x00;
 8006e88:	7534      	strb	r4, [r6, #20]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006e8a:	6031      	str	r1, [r6, #0]
	pdynamic->system__sequence_config                          = \
 8006e8c:	21db      	movs	r1, #219	; 0xdb
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006e8e:	701f      	strb	r7, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8006e90:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006e94:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006e96:	731f      	strb	r7, [r3, #12]
	pdynamic->sd_config__first_order_select =
 8006e98:	f895 8024 	ldrb.w	r8, [r5, #36]	; 0x24
 8006e9c:	f883 800d 	strb.w	r8, [r3, #13]
		ptiming->range_config__vcsel_period_b                = 0x05;
 8006ea0:	f04f 0805 	mov.w	r8, #5
	pdynamic->sd_config__quantifier         =
 8006ea4:	f895 b023 	ldrb.w	fp, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006ea8:	f883 e010 	strb.w	lr, [r3, #16]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006eac:	f643 0e08 	movw	lr, #14344	; 0x3808
	pdynamic->sd_config__quantifier         =
 8006eb0:	f883 b00e 	strb.w	fp, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006eb4:	f883 a00f 	strb.w	sl, [r3, #15]
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 8006eb8:	f248 4a01 	movw	sl, #33793	; 0x8401
	pdynamic->system__sequence_config                          = \
 8006ebc:	7459      	strb	r1, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8006ebe:	f240 5107 	movw	r1, #1287	; 0x507
	psystem->system__stream_count_ctrl                         = 0x00;
 8006ec2:	f88c 4001 	strb.w	r4, [ip, #1]
	psystem->firmware__enable                                  = 0x01;
 8006ec6:	f88c 7002 	strb.w	r7, [ip, #2]
	psystem->system__interrupt_clear                           = \
 8006eca:	f88c 7003 	strb.w	r7, [ip, #3]
		ptiming->range_config__vcsel_period_a                = 0x07;
 8006ece:	f886 9006 	strb.w	r9, [r6, #6]
		ptiming->range_config__vcsel_period_b                = 0x05;
 8006ed2:	f886 8009 	strb.w	r8, [r6, #9]
		ptiming->range_config__sigma_thresh                  =
 8006ed6:	f8b5 9016 	ldrh.w	r9, [r5, #22]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006eda:	f8b5 801c 	ldrh.w	r8, [r5, #28]
		ptiming->range_config__sigma_thresh                  =
 8006ede:	f8a6 900a 	strh.w	r9, [r6, #10]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006ee2:	f04f 09b1 	mov.w	r9, #177	; 0xb1
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8006ee6:	f8a6 800c 	strh.w	r8, [r6, #12]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006eea:	f44f 68c0 	mov.w	r8, #1536	; 0x600
		ptiming->range_config__valid_phase_low               = 0x08;
 8006eee:	f8a6 e00e 	strh.w	lr, [r6, #14]
		psystem->system__mode_start =
 8006ef2:	f04f 0e40 	mov.w	lr, #64	; 0x40
		pdynamic->sd_config__woi_sd0                         = 0x07;
 8006ef6:	8119      	strh	r1, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 8006ef8:	7a29      	ldrb	r1, [r5, #8]
 8006efa:	7299      	strb	r1, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8006efc:	7ae9      	ldrb	r1, [r5, #11]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8006efe:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 8006f00:	72d9      	strb	r1, [r3, #11]
		status = VL53L1_config_low_power_auto_mode(
 8006f02:	4619      	mov	r1, r3
		ptiming->range_config__timeout_macrop_b_hi                = 0x01;
 8006f04:	71f7      	strb	r7, [r6, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x01;
 8006f06:	f8a6 a004 	strh.w	sl, [r6, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8006f0a:	f886 9008 	strb.w	r9, [r6, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8006f0e:	f8c6 8010 	str.w	r8, [r6, #16]
		pdynamic->system__seed_config =
 8006f12:	f895 4022 	ldrb.w	r4, [r5, #34]	; 0x22
 8006f16:	71dc      	strb	r4, [r3, #7]
		psystem->system__mode_start =
 8006f18:	f88c e004 	strb.w	lr, [ip, #4]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8006f1c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		status = VL53L1_config_low_power_auto_mode(
 8006f20:	f000 bc5e 	b.w	80077e0 <VL53L1_config_low_power_auto_mode>
 8006f24:	00080200 	.word	0x00080200
 8006f28:	01ff3800 	.word	0x01ff3800
 8006f2c:	20001a00 	.word	0x20001a00
 8006f30:	02110000 	.word	0x02110000

08006f34 <VL53L1_preset_mode_low_power_auto_long_ranging>:
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms,
	VL53L1_low_power_auto_data_t *plpadata)
{
 8006f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f38:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	pstatic->debug__ctrl                                      = 0x00;
 8006f3a:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006f3c:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 8006f40:	f8df c128 	ldr.w	ip, [pc, #296]	; 800706c <VL53L1_preset_mode_low_power_auto_long_ranging+0x138>
 8006f44:	4e46      	ldr	r6, [pc, #280]	; (8007060 <VL53L1_preset_mode_low_power_auto_long_ranging+0x12c>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006f46:	2701      	movs	r7, #1
	pstatic->debug__ctrl                                      = 0x00;
 8006f48:	f8c0 c00a 	str.w	ip, [r0, #10]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006f4c:	f04f 6932 	mov.w	r9, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8006f50:	f8c0 600e 	str.w	r6, [r0, #14]
{
 8006f54:	4616      	mov	r6, r2
	pstatic->debug__ctrl                                      = 0x00;
 8006f56:	f8c0 4002 	str.w	r4, [r0, #2]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006f5a:	f640 5c02 	movw	ip, #3330	; 0xd02
	pstatic->debug__ctrl                                      = 0x00;
 8006f5e:	f8c0 4006 	str.w	r4, [r0, #6]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006f62:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8006f66:	f8a0 e000 	strh.w	lr, [r0]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006f6a:	f04f 0eff 	mov.w	lr, #255	; 0xff
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006f6e:	7faa      	ldrb	r2, [r5, #30]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006f70:	f04f 0ac7 	mov.w	sl, #199	; 0xc7
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 8006f74:	7482      	strb	r2, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 8006f76:	7fea      	ldrb	r2, [r5, #31]
 8006f78:	74c2      	strb	r2, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006f7a:	f895 2020 	ldrb.w	r2, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 8006f7e:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 8006f80:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8006f82:	7547      	strb	r7, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8006f84:	f880 e01a 	strb.w	lr, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 8006f88:	7502      	strb	r2, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 8006f8a:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8006f8c:	7c2a      	ldrb	r2, [r5, #16]
 8006f8e:	76c2      	strb	r2, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8006f90:	7b2a      	ldrb	r2, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 8006f92:	7744      	strb	r4, [r0, #29]
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8006f94:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8006f96:	77c4      	strb	r4, [r0, #31]
	pstatic->algo__consistency_check__tolerance               =
 8006f98:	7702      	strb	r2, [r0, #28]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8006f9a:	f8c1 9000 	str.w	r9, [r1]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 8006f9e:	f04f 090f 	mov.w	r9, #15
	pgeneral->cal_config__repeat_rate                         =
 8006fa2:	89ea      	ldrh	r2, [r5, #14]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006fa4:	482f      	ldr	r0, [pc, #188]	; (8007064 <VL53L1_preset_mode_low_power_auto_long_ranging+0x130>)
	pgeneral->global_config__vcsel_width                      = 0x02;
 8006fa6:	f8a1 c006 	strh.w	ip, [r1, #6]
	pgeneral->cal_config__repeat_rate                         =
 8006faa:	808a      	strh	r2, [r1, #4]
	pgeneral->phasecal_config__target                         =
 8006fac:	7b6a      	ldrb	r2, [r5, #13]
{
 8006fae:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
	pgeneral->phasecal_config__target                         =
 8006fb2:	720a      	strb	r2, [r1, #8]
{
 8006fb4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
	pgeneral->phasecal_config__override                       = 0x00;
 8006fb6:	724c      	strb	r4, [r1, #9]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8006fb8:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8006fba:	f8c1 0012 	str.w	r0, [r1, #18]
					ptuning_parms);

	/* now setup the low power auto mode */

	if (status == VL53L1_ERROR_NONE) {
		status = VL53L1_config_low_power_auto_mode(
 8006fbe:	4608      	mov	r0, r1
	pgeneral->dss_config__roi_mode_control =
 8006fc0:	728f      	strb	r7, [r1, #10]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8006fc2:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006fc6:	4928      	ldr	r1, [pc, #160]	; (8007068 <VL53L1_preset_mode_low_power_auto_long_ranging+0x134>)
	ptiming->system__fractional_enable                        = 0x00;
 8006fc8:	7534      	strb	r4, [r6, #20]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8006fca:	6031      	str	r1, [r6, #0]
	pdynamic->system__sequence_config                          = \
 8006fcc:	21db      	movs	r1, #219	; 0xdb
	pdynamic->system__thresh_high                              = 0x0000;
 8006fce:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8006fd2:	719c      	strb	r4, [r3, #6]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8006fd4:	701f      	strb	r7, [r3, #0]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8006fd6:	731f      	strb	r7, [r3, #12]
	pdynamic->sd_config__first_order_select =
 8006fd8:	f895 8024 	ldrb.w	r8, [r5, #36]	; 0x24
 8006fdc:	f883 800d 	strb.w	r8, [r3, #13]
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8006fe0:	f04f 080d 	mov.w	r8, #13
	pdynamic->sd_config__quantifier         =
 8006fe4:	f895 b023 	ldrb.w	fp, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8006fe8:	f883 e010 	strb.w	lr, [r3, #16]
		ptiming->range_config__valid_phase_low               = 0x08;
 8006fec:	f64b 0e08 	movw	lr, #47112	; 0xb808
	pdynamic->sd_config__quantifier         =
 8006ff0:	f883 b00e 	strb.w	fp, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8006ff4:	f883 a00f 	strb.w	sl, [r3, #15]
	pdynamic->system__sequence_config                          = \
 8006ff8:	7459      	strb	r1, [r3, #17]
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8006ffa:	f640 510f 	movw	r1, #3343	; 0xd0f
	psystem->system__stream_count_ctrl                         = 0x00;
 8006ffe:	f88c 4001 	strb.w	r4, [ip, #1]
	psystem->firmware__enable                                  = 0x01;
 8007002:	f88c 7002 	strb.w	r7, [ip, #2]
	psystem->system__interrupt_clear                           = \
 8007006:	f88c 7003 	strb.w	r7, [ip, #3]
		ptiming->range_config__vcsel_period_a                = 0x0F;
 800700a:	f886 9006 	strb.w	r9, [r6, #6]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 800700e:	f44f 4917 	mov.w	r9, #38656	; 0x9700
		ptiming->range_config__vcsel_period_b                = 0x0D;
 8007012:	f886 8009 	strb.w	r8, [r6, #9]
		ptiming->range_config__sigma_thresh                  =
 8007016:	f8b5 8012 	ldrh.w	r8, [r5, #18]
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 800701a:	8b2f      	ldrh	r7, [r5, #24]
		ptiming->range_config__sigma_thresh                  =
 800701c:	f8a6 800a 	strh.w	r8, [r6, #10]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8007020:	f04f 08b1 	mov.w	r8, #177	; 0xb1
		ptiming->range_config__min_count_rate_rtn_limit_mcps =
 8007024:	81b7      	strh	r7, [r6, #12]
		psystem->system__mode_start =
 8007026:	2740      	movs	r7, #64	; 0x40
		ptiming->range_config__valid_phase_low               = 0x08;
 8007028:	f8a6 e00e 	strh.w	lr, [r6, #14]
		ptiming->system__intermeasurement_period = 0x00000600;
 800702c:	f44f 6ec0 	mov.w	lr, #1536	; 0x600
		pdynamic->sd_config__woi_sd0                         = 0x0F;
 8007030:	8119      	strh	r1, [r3, #8]
		pdynamic->sd_config__initial_phase_sd0               =
 8007032:	79a9      	ldrb	r1, [r5, #6]
 8007034:	7299      	strb	r1, [r3, #10]
		pdynamic->sd_config__initial_phase_sd1               =
 8007036:	7a69      	ldrb	r1, [r5, #9]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8007038:	749c      	strb	r4, [r3, #18]
		pdynamic->sd_config__initial_phase_sd1               =
 800703a:	72d9      	strb	r1, [r3, #11]
		status = VL53L1_config_low_power_auto_mode(
 800703c:	4619      	mov	r1, r3
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 800703e:	71f4      	strb	r4, [r6, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8007040:	f8a6 9004 	strh.w	r9, [r6, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xB1;
 8007044:	f886 8008 	strb.w	r8, [r6, #8]
		ptiming->system__intermeasurement_period = 0x00000600;
 8007048:	f8c6 e010 	str.w	lr, [r6, #16]
		pdynamic->system__seed_config =
 800704c:	f895 4022 	ldrb.w	r4, [r5, #34]	; 0x22
 8007050:	71dc      	strb	r4, [r3, #7]
		psystem->system__mode_start =
 8007052:	f88c 7004 	strb.w	r7, [ip, #4]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8007056:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		status = VL53L1_config_low_power_auto_mode(
 800705a:	f000 bbc1 	b.w	80077e0 <VL53L1_config_low_power_auto_mode>
 800705e:	bf00      	nop
 8007060:	00080200 	.word	0x00080200
 8007064:	01ff3800 	.word	0x01ff3800
 8007068:	20001a00 	.word	0x20001a00
 800706c:	02110000 	.word	0x02110000

08007070 <VL53L1_preset_mode_singleshot_ranging>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 8007070:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007074:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 8007076:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 8007078:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 800707c:	f8df c124 	ldr.w	ip, [pc, #292]	; 80071a4 <VL53L1_preset_mode_singleshot_ranging+0x134>
 8007080:	4f45      	ldr	r7, [pc, #276]	; (8007198 <VL53L1_preset_mode_singleshot_ranging+0x128>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 8007082:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 8007084:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 8007088:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 800708c:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 8007090:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 8007094:	f8c0 4002 	str.w	r4, [r0, #2]
 8007098:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 800709c:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80070a0:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80070a4:	f895 801e 	ldrb.w	r8, [r5, #30]
 80070a8:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80070ac:	f895 801f 	ldrb.w	r8, [r5, #31]
 80070b0:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80070b4:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 80070b8:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 80070ba:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80070bc:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80070be:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80070c2:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80070c6:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 80070c8:	f895 8010 	ldrb.w	r8, [r5, #16]
 80070cc:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 80070d0:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 80070d4:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 80070d6:	f880 801c 	strb.w	r8, [r0, #28]
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 80070da:	f04f 080b 	mov.w	r8, #11
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 80070de:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 80070e0:	77c4      	strb	r4, [r0, #31]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80070e2:	f44f 400c 	mov.w	r0, #35840	; 0x8c00
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80070e6:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 80070e8:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80070ea:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__vcsel_period_b                     = 0x09;
 80070ee:	f04f 0e09 	mov.w	lr, #9
	pgeneral->cal_config__repeat_rate                         =
 80070f2:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 80070f4:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 80070f6:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 80070f8:	720f      	strb	r7, [r1, #8]
{
 80070fa:	9f07      	ldr	r7, [sp, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 80070fc:	8208      	strh	r0, [r1, #16]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 80070fe:	4827      	ldr	r0, [pc, #156]	; (800719c <VL53L1_preset_mode_singleshot_ranging+0x12c>)
	pgeneral->dss_config__roi_mode_control =
 8007100:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8007102:	f8c1 0012 	str.w	r0, [r1, #18]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8007106:	4826      	ldr	r0, [pc, #152]	; (80071a0 <VL53L1_preset_mode_singleshot_ranging+0x130>)
	pgeneral->system__thresh_rate_high                        = 0x0000;
 8007108:	60cc      	str	r4, [r1, #12]
	ptiming->range_config__valid_phase_low                    = 0x08;
 800710a:	2108      	movs	r1, #8
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800710c:	6010      	str	r0, [r2, #0]
	ptiming->range_config__valid_phase_high                   = 0x78;
 800710e:	2078      	movs	r0, #120	; 0x78
	ptiming->range_config__vcsel_period_b                     = 0x09;
 8007110:	f882 e009 	strb.w	lr, [r2, #9]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8007114:	f640 1e0b 	movw	lr, #2315	; 0x90b
	ptiming->range_config__vcsel_period_a                     = 0x0B;
 8007118:	f882 8006 	strb.w	r8, [r2, #6]
	ptiming->range_config__sigma_thresh                       =
 800711c:	f8b5 9014 	ldrh.w	r9, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8007120:	f8b5 801a 	ldrh.w	r8, [r5, #26]
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8007124:	6114      	str	r4, [r2, #16]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8007126:	f8a2 800c 	strh.w	r8, [r2, #12]
		pdynamic->system__grouped_parameter_hold = 0x00;

		/* Timing Configuration */

		/* Re-Configure timing budget default for 13ms */
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 800712a:	f44f 4831 	mov.w	r8, #45312	; 0xb100
	ptiming->system__fractional_enable                        = 0x00;
 800712e:	7514      	strb	r4, [r2, #20]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8007130:	7391      	strb	r1, [r2, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 8007132:	21c7      	movs	r1, #199	; 0xc7
	ptiming->range_config__valid_phase_high                   = 0x78;
 8007134:	73d0      	strb	r0, [r2, #15]
	pdynamic->system__sequence_config                          = \
 8007136:	20db      	movs	r0, #219	; 0xdb
	ptiming->range_config__sigma_thresh                       =
 8007138:	f8a2 900a 	strh.w	r9, [r2, #10]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 800713c:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 800713e:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 8007142:	719c      	strb	r4, [r3, #6]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8007144:	f8a3 e008 	strh.w	lr, [r3, #8]
	pdynamic->sd_config__initial_phase_sd0                     =
 8007148:	f895 e007 	ldrb.w	lr, [r5, #7]
 800714c:	f883 e00a 	strb.w	lr, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 8007150:	f895 e00a 	ldrb.w	lr, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 8007154:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 8007156:	f883 e00b 	strb.w	lr, [r3, #11]
		ptiming->range_config__timeout_macrop_a_lo                = 0xB1;
		/* Setup for 13ms default */
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 800715a:	f04f 0ed4 	mov.w	lr, #212	; 0xd4
	pdynamic->sd_config__first_order_select =
 800715e:	f895 9024 	ldrb.w	r9, [r5, #36]	; 0x24
 8007162:	f883 900d 	strb.w	r9, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8007166:	f895 9023 	ldrb.w	r9, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800716a:	73d9      	strb	r1, [r3, #15]
				ptuning_parms->tp_timed_seed_cfg;

		/* System control */

		/* Configure Timed/Psuedo-solo mode */
		psystem->system__mode_start = \
 800716c:	2110      	movs	r1, #16
	pdynamic->system__sequence_config                          = \
 800716e:	7458      	strb	r0, [r3, #17]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 8007170:	4620      	mov	r0, r4
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 8007172:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 8007176:	f883 900e 	strb.w	r9, [r3, #14]
	psystem->system__stream_count_ctrl                         = 0x00;
 800717a:	707c      	strb	r4, [r7, #1]
	psystem->firmware__enable                                  = 0x01;
 800717c:	70be      	strb	r6, [r7, #2]
	psystem->system__interrupt_clear                           = \
 800717e:	70fe      	strb	r6, [r7, #3]
		pdynamic->system__grouped_parameter_hold = 0x00;
 8007180:	749c      	strb	r4, [r3, #18]
		ptiming->range_config__timeout_macrop_b_hi                = 0x00;
 8007182:	71d4      	strb	r4, [r2, #7]
		ptiming->range_config__timeout_macrop_a_hi                = 0x00;
 8007184:	f8a2 8004 	strh.w	r8, [r2, #4]
		ptiming->range_config__timeout_macrop_b_lo                = 0xD4;
 8007188:	f882 e008 	strb.w	lr, [r2, #8]
		pdynamic->system__seed_config =
 800718c:	f895 2022 	ldrb.w	r2, [r5, #34]	; 0x22
 8007190:	71da      	strb	r2, [r3, #7]
		psystem->system__mode_start = \
 8007192:	7139      	strb	r1, [r7, #4]
}
 8007194:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007198:	00080200 	.word	0x00080200
 800719c:	01ff3800 	.word	0x01ff3800
 80071a0:	20001a00 	.word	0x20001a00
 80071a4:	02110000 	.word	0x02110000

080071a8 <VL53L1_preset_mode_olt>:
	VL53L1_general_config_t   *pgeneral,
	VL53L1_timing_config_t    *ptiming,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_system_control_t   *psystem,
	VL53L1_tuning_parm_storage_t *ptuning_parms)
{
 80071a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80071ac:	9d08      	ldr	r5, [sp, #32]
	pstatic->debug__ctrl                                      = 0x00;
 80071ae:	2400      	movs	r4, #0
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80071b0:	f44f 6e20 	mov.w	lr, #2560	; 0xa00
	pstatic->debug__ctrl                                      = 0x00;
 80071b4:	f8df c114 	ldr.w	ip, [pc, #276]	; 80072cc <VL53L1_preset_mode_olt+0x124>
 80071b8:	4f3f      	ldr	r7, [pc, #252]	; (80072b8 <VL53L1_preset_mode_olt+0x110>)
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80071ba:	2601      	movs	r6, #1
	pstatic->debug__ctrl                                      = 0x00;
 80071bc:	f8c0 c00a 	str.w	ip, [r0, #10]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80071c0:	f04f 0cff 	mov.w	ip, #255	; 0xff
	pstatic->debug__ctrl                                      = 0x00;
 80071c4:	f8c0 700e 	str.w	r7, [r0, #14]
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 80071c8:	f04f 6732 	mov.w	r7, #186646528	; 0xb200000
	pstatic->debug__ctrl                                      = 0x00;
 80071cc:	f8c0 4002 	str.w	r4, [r0, #2]
 80071d0:	f8c0 4006 	str.w	r4, [r0, #6]
	pstatic->dss_config__target_total_rate_mcps               = 0x0A00;
 80071d4:	f8a0 e000 	strh.w	lr, [r0]
	pgeneral->global_config__vcsel_width                      = 0x02;
 80071d8:	f640 5e02 	movw	lr, #3330	; 0xd02
	pstatic->sigma_estimator__effective_pulse_width_ns        =
 80071dc:	f895 801e 	ldrb.w	r8, [r5, #30]
 80071e0:	f880 8012 	strb.w	r8, [r0, #18]
	pstatic->sigma_estimator__effective_ambient_width_ns      =
 80071e4:	f895 801f 	ldrb.w	r8, [r5, #31]
 80071e8:	f880 8013 	strb.w	r8, [r0, #19]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80071ec:	f895 8020 	ldrb.w	r8, [r5, #32]
	pstatic->spare_host_config__static_config_spare_0         = 0x00;
 80071f0:	7584      	strb	r4, [r0, #22]
	pstatic->spare_host_config__static_config_spare_1         = 0x00;
 80071f2:	75c4      	strb	r4, [r0, #23]
	pstatic->algo__crosstalk_compensation_valid_height_mm     = 0x01;
 80071f4:	7546      	strb	r6, [r0, #21]
	pstatic->algo__range_ignore_valid_height_mm               = 0xff;
 80071f6:	f880 c01a 	strb.w	ip, [r0, #26]
	pstatic->sigma_estimator__sigma_ref_mm                    =
 80071fa:	f880 8014 	strb.w	r8, [r0, #20]
	pstatic->algo__range_ignore_threshold_mcps                = 0x0000;
 80071fe:	8304      	strh	r4, [r0, #24]
	pstatic->algo__range_min_clip                             =
 8007200:	f895 8010 	ldrb.w	r8, [r5, #16]
 8007204:	f880 801b 	strb.w	r8, [r0, #27]
	pstatic->algo__consistency_check__tolerance               =
 8007208:	f895 800c 	ldrb.w	r8, [r5, #12]
	pstatic->spare_host_config__static_config_spare_2         = 0x00;
 800720c:	7744      	strb	r4, [r0, #29]
	pstatic->algo__consistency_check__tolerance               =
 800720e:	f880 801c 	strb.w	r8, [r0, #28]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 8007212:	f44f 480c 	mov.w	r8, #35840	; 0x8c00
	pstatic->sd_config__reset_stages_msb                      = 0x00;
 8007216:	7784      	strb	r4, [r0, #30]
	pstatic->sd_config__reset_stages_lsb                      = 0x00;
 8007218:	77c4      	strb	r4, [r0, #31]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800721a:	f640 10f5 	movw	r0, #2549	; 0x9f5
	pgeneral->gph_config__stream_count_update_value           = 0x00;
 800721e:	600f      	str	r7, [r1, #0]
	pgeneral->cal_config__repeat_rate                         =
 8007220:	89ef      	ldrh	r7, [r5, #14]
	pgeneral->global_config__vcsel_width                      = 0x02;
 8007222:	f8a1 e006 	strh.w	lr, [r1, #6]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8007226:	f04f 0e08 	mov.w	lr, #8
	pgeneral->cal_config__repeat_rate                         =
 800722a:	808f      	strh	r7, [r1, #4]
	pgeneral->phasecal_config__target                         =
 800722c:	7b6f      	ldrb	r7, [r5, #13]
	pgeneral->phasecal_config__override                       = 0x00;
 800722e:	724c      	strb	r4, [r1, #9]
	pgeneral->phasecal_config__target                         =
 8007230:	720f      	strb	r7, [r1, #8]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8007232:	4f22      	ldr	r7, [pc, #136]	; (80072bc <VL53L1_preset_mode_olt+0x114>)
	pgeneral->dss_config__roi_mode_control =
 8007234:	728e      	strb	r6, [r1, #10]
	pgeneral->dss_config__manual_block_select                 = 0x00;
 8007236:	f8c1 7012 	str.w	r7, [r1, #18]
	pgeneral->system__thresh_rate_high                        = 0x0000;
 800723a:	60cc      	str	r4, [r1, #12]
	pgeneral->dss_config__manual_effective_spads_select       = 0x8C00;
 800723c:	f8a1 8010 	strh.w	r8, [r1, #16]
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8007240:	4f1f      	ldr	r7, [pc, #124]	; (80072c0 <VL53L1_preset_mode_olt+0x118>)
 8007242:	4920      	ldr	r1, [pc, #128]	; (80072c4 <VL53L1_preset_mode_olt+0x11c>)
 8007244:	8110      	strh	r0, [r2, #8]
	ptiming->range_config__valid_phase_high                   = 0x78;
 8007246:	2078      	movs	r0, #120	; 0x78
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 8007248:	6011      	str	r1, [r2, #0]
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 800724a:	f640 110b 	movw	r1, #2315	; 0x90b
	ptiming->mm_config__timeout_macrop_a_hi                   = 0x00;
 800724e:	6057      	str	r7, [r2, #4]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8007250:	f8b5 801a 	ldrh.w	r8, [r5, #26]
	ptiming->range_config__sigma_thresh                       =
 8007254:	f8b5 9014 	ldrh.w	r9, [r5, #20]
	ptiming->range_config__min_count_rate_rtn_limit_mcps      =
 8007258:	f8a2 800c 	strh.w	r8, [r2, #12]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 800725c:	f04f 08c7 	mov.w	r8, #199	; 0xc7
	ptiming->range_config__sigma_thresh                       =
 8007260:	f8a2 900a 	strh.w	r9, [r2, #10]
	ptiming->range_config__valid_phase_low                    = 0x08;
 8007264:	f882 e00e 	strb.w	lr, [r2, #14]
	pdynamic->system__sequence_config                          = \
 8007268:	f04f 0edb 	mov.w	lr, #219	; 0xdb
	ptiming->range_config__valid_phase_high                   = 0x78;
 800726c:	73d0      	strb	r0, [r2, #15]
	}

	LOG_FUNCTION_END(status);

	return status;
}
 800726e:	4620      	mov	r0, r4
	ptiming->system__intermeasurement_period                  = 0x00000000;
 8007270:	6114      	str	r4, [r2, #16]
	ptiming->system__fractional_enable                        = 0x00;
 8007272:	7514      	strb	r4, [r2, #20]
	pdynamic->system__grouped_parameter_hold_0                 = 0x01;
 8007274:	701e      	strb	r6, [r3, #0]
	pdynamic->system__thresh_high                              = 0x0000;
 8007276:	f8c3 4002 	str.w	r4, [r3, #2]
	pdynamic->system__enable_xtalk_per_quadrant                = 0x00;
 800727a:	719c      	strb	r4, [r3, #6]
	pdynamic->system__seed_config =
 800727c:	f895 2021 	ldrb.w	r2, [r5, #33]	; 0x21
	pdynamic->sd_config__woi_sd0                               = 0x0B;
 8007280:	8119      	strh	r1, [r3, #8]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 8007282:	2102      	movs	r1, #2
	pdynamic->system__seed_config =
 8007284:	71da      	strb	r2, [r3, #7]
	pdynamic->sd_config__initial_phase_sd0                     =
 8007286:	79ea      	ldrb	r2, [r5, #7]
 8007288:	729a      	strb	r2, [r3, #10]
	pdynamic->sd_config__initial_phase_sd1                     =
 800728a:	7aaa      	ldrb	r2, [r5, #10]
	pdynamic->system__grouped_parameter_hold_1                 = 0x01;
 800728c:	731e      	strb	r6, [r3, #12]
	pdynamic->sd_config__initial_phase_sd1                     =
 800728e:	72da      	strb	r2, [r3, #11]
	pdynamic->sd_config__first_order_select =
 8007290:	f895 4024 	ldrb.w	r4, [r5, #36]	; 0x24
		psystem->system__stream_count_ctrl  = 0x01;
 8007294:	4a0c      	ldr	r2, [pc, #48]	; (80072c8 <VL53L1_preset_mode_olt+0x120>)
	pdynamic->sd_config__first_order_select =
 8007296:	735c      	strb	r4, [r3, #13]
	pdynamic->sd_config__quantifier         =
 8007298:	f895 4023 	ldrb.w	r4, [r5, #35]	; 0x23
	pdynamic->roi_config__user_roi_requested_global_xy_size = 0xFF;
 800729c:	f883 c010 	strb.w	ip, [r3, #16]
	pdynamic->sd_config__quantifier         =
 80072a0:	739c      	strb	r4, [r3, #14]
	pdynamic->roi_config__user_roi_centre_spad              = 0xC7;
 80072a2:	f883 800f 	strb.w	r8, [r3, #15]
	pdynamic->system__sequence_config                          = \
 80072a6:	f883 e011 	strb.w	lr, [r3, #17]
	pdynamic->system__grouped_parameter_hold                   = 0x02;
 80072aa:	7499      	strb	r1, [r3, #18]
		psystem->system__stream_count_ctrl  = 0x01;
 80072ac:	9b07      	ldr	r3, [sp, #28]
 80072ae:	f8c3 2001 	str.w	r2, [r3, #1]
}
 80072b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80072b6:	bf00      	nop
 80072b8:	00080200 	.word	0x00080200
 80072bc:	01ff3800 	.word	0x01ff3800
 80072c0:	010bcc01 	.word	0x010bcc01
 80072c4:	20001a00 	.word	0x20001a00
 80072c8:	21010101 	.word	0x21010101
 80072cc:	02110000 	.word	0x02110000

080072d0 <VL53L1_init_version>:
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	pdev->version.ll_major    = VL53L1_LL_API_IMPLEMENTATION_VER_MAJOR;
	pdev->version.ll_minor    = VL53L1_LL_API_IMPLEMENTATION_VER_MINOR;
	pdev->version.ll_build    = VL53L1_LL_API_IMPLEMENTATION_VER_SUB;
	pdev->version.ll_revision = VL53L1_LL_API_IMPLEMENTATION_VER_REVISION;
 80072d0:	f640 018e 	movw	r1, #2190	; 0x88e
 80072d4:	f240 2201 	movw	r2, #513	; 0x201
	pdev->version.ll_minor    = VL53L1_LL_API_IMPLEMENTATION_VER_MINOR;
 80072d8:	230d      	movs	r3, #13
	pdev->version.ll_revision = VL53L1_LL_API_IMPLEMENTATION_VER_REVISION;
 80072da:	6241      	str	r1, [r0, #36]	; 0x24
 80072dc:	8502      	strh	r2, [r0, #40]	; 0x28
	pdev->version.ll_minor    = VL53L1_LL_API_IMPLEMENTATION_VER_MINOR;
 80072de:	f880 302a 	strb.w	r3, [r0, #42]	; 0x2a
}
 80072e2:	4770      	bx	lr

080072e4 <VL53L1_init_ll_driver_state>:

	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);
	VL53L1_ll_driver_state_t *pstate = &(pdev->ll_state);

	pstate->cfg_device_state  = device_state;
	pstate->cfg_stream_count  = 0;
 80072e4:	2300      	movs	r3, #0
	pstate->cfg_gph_id        = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 80072e6:	2202      	movs	r2, #2
	pstate->cfg_device_state  = device_state;
 80072e8:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
	pstate->cfg_timing_status = 0;

	pstate->rd_device_state   = device_state;
 80072ec:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
	pstate->cfg_stream_count  = 0;
 80072f0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
	pstate->cfg_timing_status = 0;
 80072f4:	f880 302f 	strb.w	r3, [r0, #47]	; 0x2f
	pstate->rd_stream_count   = 0;
 80072f8:	f880 3031 	strb.w	r3, [r0, #49]	; 0x31
	pstate->rd_gph_id         = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
	pstate->rd_timing_status  = 0;
 80072fc:	f880 3033 	strb.w	r3, [r0, #51]	; 0x33
	pstate->cfg_gph_id        = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007300:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
	pstate->rd_gph_id         = VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007304:	f880 2032 	strb.w	r2, [r0, #50]	; 0x32

}
 8007308:	4770      	bx	lr
 800730a:	bf00      	nop

0800730c <VL53L1_update_ll_driver_rd_state>:

#ifdef VL53L1_LOGGING
	VL53L1_print_ll_driver_state(pstate);
#endif

	if ((pdev->sys_ctrl.system__mode_start &
 800730c:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
 8007310:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8007314:	d017      	beq.n	8007346 <VL53L1_update_ll_driver_rd_state+0x3a>

		/*
		 * implement read stream count
		 */

		if (pstate->rd_stream_count == 0xFF) {
 8007316:	f890 3031 	ldrb.w	r3, [r0, #49]	; 0x31
 800731a:	2bff      	cmp	r3, #255	; 0xff
 800731c:	d017      	beq.n	800734e <VL53L1_update_ll_driver_rd_state+0x42>
			pstate->rd_stream_count = 0x80;
		} else {
			pstate->rd_stream_count++;
 800731e:	3301      	adds	r3, #1
 8007320:	b2db      	uxtb	r3, r3

		/*
		 * Toggle grouped parameter hold ID
		 */

		pstate->rd_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007322:	f890 1032 	ldrb.w	r1, [r0, #50]	; 0x32

		/* Ok now ranging  */

		switch (pstate->rd_device_state) {
 8007326:	f890 2030 	ldrb.w	r2, [r0, #48]	; 0x30
		pstate->rd_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 800732a:	f081 0102 	eor.w	r1, r1, #2
 800732e:	f880 3031 	strb.w	r3, [r0, #49]	; 0x31
		switch (pstate->rd_device_state) {
 8007332:	1ed3      	subs	r3, r2, #3
		pstate->rd_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 8007334:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
		switch (pstate->rd_device_state) {
 8007338:	2b05      	cmp	r3, #5
 800733a:	d804      	bhi.n	8007346 <VL53L1_update_ll_driver_rd_state+0x3a>
 800733c:	e8df f003 	tbb	[pc, r3]
 8007340:	19030321 	.word	0x19030321
 8007344:	0914      	.short	0x0914

		break;

		default:

			pstate->rd_device_state  =
 8007346:	4b17      	ldr	r3, [pc, #92]	; (80073a4 <VL53L1_update_ll_driver_rd_state+0x98>)
 8007348:	6303      	str	r3, [r0, #48]	; 0x30
#endif

	LOG_FUNCTION_END(status);

	return status;
}
 800734a:	2000      	movs	r0, #0
 800734c:	4770      	bx	lr
			pstate->rd_stream_count = 0x80;
 800734e:	2380      	movs	r3, #128	; 0x80
 8007350:	e7e7      	b.n	8007322 <VL53L1_update_ll_driver_rd_state+0x16>
			pstate->rd_timing_status ^= 0x01;
 8007352:	f890 3033 	ldrb.w	r3, [r0, #51]	; 0x33
			pstate->rd_device_state =
 8007356:	2208      	movs	r2, #8
			pstate->rd_timing_status ^= 0x01;
 8007358:	f083 0301 	eor.w	r3, r3, #1
			pstate->rd_device_state =
 800735c:	f880 2030 	strb.w	r2, [r0, #48]	; 0x30
			pstate->rd_timing_status ^= 0x01;
 8007360:	f880 3033 	strb.w	r3, [r0, #51]	; 0x33
}
 8007364:	2000      	movs	r0, #0
 8007366:	4770      	bx	lr
			pstate->rd_device_state =
 8007368:	2308      	movs	r3, #8
 800736a:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
}
 800736e:	2000      	movs	r0, #0
 8007370:	4770      	bx	lr
			pstate->rd_stream_count = 0;
 8007372:	2200      	movs	r2, #0
			pstate->rd_device_state =
 8007374:	2308      	movs	r3, #8
			pstate->rd_stream_count = 0;
 8007376:	f880 2031 	strb.w	r2, [r0, #49]	; 0x31
			pstate->rd_device_state =
 800737a:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
}
 800737e:	2000      	movs	r0, #0
 8007380:	4770      	bx	lr
			if ((pdev->dyn_cfg.system__grouped_parameter_hold &
 8007382:	f890 21c6 	ldrb.w	r2, [r0, #454]	; 0x1c6
			pstate->rd_stream_count  = 0;
 8007386:	2300      	movs	r3, #0
			if ((pdev->dyn_cfg.system__grouped_parameter_hold &
 8007388:	f012 0f02 	tst.w	r2, #2
			pstate->rd_stream_count  = 0;
 800738c:	f880 3031 	strb.w	r3, [r0, #49]	; 0x31
			pstate->rd_timing_status = 0;
 8007390:	f880 3033 	strb.w	r3, [r0, #51]	; 0x33
				pstate->rd_device_state =
 8007394:	bf14      	ite	ne
 8007396:	2306      	movne	r3, #6
 8007398:	2308      	moveq	r3, #8
 800739a:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
}
 800739e:	2000      	movs	r0, #0
 80073a0:	4770      	bx	lr
 80073a2:	bf00      	nop
 80073a4:	00020003 	.word	0x00020003

080073a8 <VL53L1_update_ll_driver_cfg_state>:
	VL53L1_print_ll_driver_state(pstate);
#endif

	/* if top bits of mode start reset are zero then in standby state */

	if ((pdev->sys_ctrl.system__mode_start &
 80073a8:	f890 31cc 	ldrb.w	r3, [r0, #460]	; 0x1cc
 80073ac:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 80073b0:	d013      	beq.n	80073da <VL53L1_update_ll_driver_cfg_state+0x32>

		/*
		 * implement configuration stream count
		 */

		if (pstate->cfg_stream_count == 0xFF) {
 80073b2:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 80073b6:	2bff      	cmp	r3, #255	; 0xff
 80073b8:	d013      	beq.n	80073e2 <VL53L1_update_ll_driver_cfg_state+0x3a>
			pstate->cfg_stream_count = 0x80;
		} else {
			pstate->cfg_stream_count++;
 80073ba:	3301      	adds	r3, #1
 80073bc:	b2db      	uxtb	r3, r3

		/*
		 * Toggle grouped parameter hold ID
		 */

		pstate->cfg_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 80073be:	f890 202e 	ldrb.w	r2, [r0, #46]	; 0x2e

		/*
		 * Implement configuration state machine
		 */

		switch (pstate->cfg_device_state) {
 80073c2:	f890 102c 	ldrb.w	r1, [r0, #44]	; 0x2c
		pstate->cfg_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 80073c6:	f082 0202 	eor.w	r2, r2, #2
 80073ca:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
		switch (pstate->cfg_device_state) {
 80073ce:	2903      	cmp	r1, #3
		pstate->cfg_gph_id ^= VL53L1_GROUPEDPARAMETERHOLD_ID_MASK;
 80073d0:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
		switch (pstate->cfg_device_state) {
 80073d4:	d00f      	beq.n	80073f6 <VL53L1_update_ll_driver_cfg_state+0x4e>
 80073d6:	2904      	cmp	r1, #4
 80073d8:	d005      	beq.n	80073e6 <VL53L1_update_ll_driver_cfg_state+0x3e>

		break;

		default:

			pstate->cfg_device_state = VL53L1_DEVICESTATE_SW_STANDBY;
 80073da:	4b0d      	ldr	r3, [pc, #52]	; (8007410 <VL53L1_update_ll_driver_cfg_state+0x68>)
 80073dc:	62c3      	str	r3, [r0, #44]	; 0x2c
#endif

	LOG_FUNCTION_END(status);

	return status;
}
 80073de:	2000      	movs	r0, #0
 80073e0:	4770      	bx	lr
			pstate->cfg_stream_count = 0x80;
 80073e2:	2380      	movs	r3, #128	; 0x80
 80073e4:	e7eb      	b.n	80073be <VL53L1_update_ll_driver_cfg_state+0x16>
			pstate->cfg_timing_status ^= 0x01;
 80073e6:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 80073ea:	f083 0301 	eor.w	r3, r3, #1
 80073ee:	f880 302f 	strb.w	r3, [r0, #47]	; 0x2f
}
 80073f2:	2000      	movs	r0, #0
 80073f4:	4770      	bx	lr
			pstate->cfg_timing_status ^= 0x01;
 80073f6:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
			pstate->cfg_stream_count = 1;
 80073fa:	2101      	movs	r1, #1
			pstate->cfg_device_state = VL53L1_DEVICESTATE_RANGING_DSS_AUTO;
 80073fc:	2204      	movs	r2, #4
			pstate->cfg_timing_status ^= 0x01;
 80073fe:	404b      	eors	r3, r1
			pstate->cfg_stream_count = 1;
 8007400:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
			pstate->cfg_device_state = VL53L1_DEVICESTATE_RANGING_DSS_AUTO;
 8007404:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
			pstate->cfg_timing_status ^= 0x01;
 8007408:	f880 302f 	strb.w	r3, [r0, #47]	; 0x2f
}
 800740c:	2000      	movs	r0, #0
 800740e:	4770      	bx	lr
 8007410:	00020003 	.word	0x00020003

08007414 <VL53L1_copy_rtn_good_spads_to_buffer>:
{
	/*
	 * Convenience function to copy return SPAD enables to buffer
	 */

	*(pbuffer +  0) = pdata->global_config__spad_enables_rtn_0;
 8007414:	7c03      	ldrb	r3, [r0, #16]
 8007416:	700b      	strb	r3, [r1, #0]
	*(pbuffer +  1) = pdata->global_config__spad_enables_rtn_1;
 8007418:	7c43      	ldrb	r3, [r0, #17]
 800741a:	704b      	strb	r3, [r1, #1]
	*(pbuffer +  2) = pdata->global_config__spad_enables_rtn_2;
 800741c:	7c83      	ldrb	r3, [r0, #18]
 800741e:	708b      	strb	r3, [r1, #2]
	*(pbuffer +  3) = pdata->global_config__spad_enables_rtn_3;
 8007420:	7cc3      	ldrb	r3, [r0, #19]
 8007422:	70cb      	strb	r3, [r1, #3]
	*(pbuffer +  4) = pdata->global_config__spad_enables_rtn_4;
 8007424:	7d03      	ldrb	r3, [r0, #20]
 8007426:	710b      	strb	r3, [r1, #4]
	*(pbuffer +  5) = pdata->global_config__spad_enables_rtn_5;
 8007428:	7d43      	ldrb	r3, [r0, #21]
 800742a:	714b      	strb	r3, [r1, #5]
	*(pbuffer +  6) = pdata->global_config__spad_enables_rtn_6;
 800742c:	7d83      	ldrb	r3, [r0, #22]
 800742e:	718b      	strb	r3, [r1, #6]
	*(pbuffer +  7) = pdata->global_config__spad_enables_rtn_7;
 8007430:	7dc3      	ldrb	r3, [r0, #23]
 8007432:	71cb      	strb	r3, [r1, #7]
	*(pbuffer +  8) = pdata->global_config__spad_enables_rtn_8;
 8007434:	7e03      	ldrb	r3, [r0, #24]
 8007436:	720b      	strb	r3, [r1, #8]
	*(pbuffer +  9) = pdata->global_config__spad_enables_rtn_9;
 8007438:	7e43      	ldrb	r3, [r0, #25]
 800743a:	724b      	strb	r3, [r1, #9]
	*(pbuffer + 10) = pdata->global_config__spad_enables_rtn_10;
 800743c:	7e83      	ldrb	r3, [r0, #26]
 800743e:	728b      	strb	r3, [r1, #10]
	*(pbuffer + 11) = pdata->global_config__spad_enables_rtn_11;
 8007440:	7ec3      	ldrb	r3, [r0, #27]
 8007442:	72cb      	strb	r3, [r1, #11]
	*(pbuffer + 12) = pdata->global_config__spad_enables_rtn_12;
 8007444:	7f03      	ldrb	r3, [r0, #28]
 8007446:	730b      	strb	r3, [r1, #12]
	*(pbuffer + 13) = pdata->global_config__spad_enables_rtn_13;
 8007448:	7f43      	ldrb	r3, [r0, #29]
 800744a:	734b      	strb	r3, [r1, #13]
	*(pbuffer + 14) = pdata->global_config__spad_enables_rtn_14;
 800744c:	7f83      	ldrb	r3, [r0, #30]
 800744e:	738b      	strb	r3, [r1, #14]
	*(pbuffer + 15) = pdata->global_config__spad_enables_rtn_15;
 8007450:	7fc3      	ldrb	r3, [r0, #31]
 8007452:	73cb      	strb	r3, [r1, #15]
	*(pbuffer + 16) = pdata->global_config__spad_enables_rtn_16;
 8007454:	f890 3020 	ldrb.w	r3, [r0, #32]
 8007458:	740b      	strb	r3, [r1, #16]
	*(pbuffer + 17) = pdata->global_config__spad_enables_rtn_17;
 800745a:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 800745e:	744b      	strb	r3, [r1, #17]
	*(pbuffer + 18) = pdata->global_config__spad_enables_rtn_18;
 8007460:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007464:	748b      	strb	r3, [r1, #18]
	*(pbuffer + 19) = pdata->global_config__spad_enables_rtn_19;
 8007466:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 800746a:	74cb      	strb	r3, [r1, #19]
	*(pbuffer + 20) = pdata->global_config__spad_enables_rtn_20;
 800746c:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8007470:	750b      	strb	r3, [r1, #20]
	*(pbuffer + 21) = pdata->global_config__spad_enables_rtn_21;
 8007472:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8007476:	754b      	strb	r3, [r1, #21]
	*(pbuffer + 22) = pdata->global_config__spad_enables_rtn_22;
 8007478:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800747c:	758b      	strb	r3, [r1, #22]
	*(pbuffer + 23) = pdata->global_config__spad_enables_rtn_23;
 800747e:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 8007482:	75cb      	strb	r3, [r1, #23]
	*(pbuffer + 24) = pdata->global_config__spad_enables_rtn_24;
 8007484:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8007488:	760b      	strb	r3, [r1, #24]
	*(pbuffer + 25) = pdata->global_config__spad_enables_rtn_25;
 800748a:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
 800748e:	764b      	strb	r3, [r1, #25]
	*(pbuffer + 26) = pdata->global_config__spad_enables_rtn_26;
 8007490:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
 8007494:	768b      	strb	r3, [r1, #26]
	*(pbuffer + 27) = pdata->global_config__spad_enables_rtn_27;
 8007496:	f890 302b 	ldrb.w	r3, [r0, #43]	; 0x2b
 800749a:	76cb      	strb	r3, [r1, #27]
	*(pbuffer + 28) = pdata->global_config__spad_enables_rtn_28;
 800749c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80074a0:	770b      	strb	r3, [r1, #28]
	*(pbuffer + 29) = pdata->global_config__spad_enables_rtn_29;
 80074a2:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 80074a6:	774b      	strb	r3, [r1, #29]
	*(pbuffer + 30) = pdata->global_config__spad_enables_rtn_30;
 80074a8:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 80074ac:	778b      	strb	r3, [r1, #30]
	*(pbuffer + 31) = pdata->global_config__spad_enables_rtn_31;
 80074ae:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 80074b2:	77cb      	strb	r3, [r1, #31]
}
 80074b4:	4770      	bx	lr
 80074b6:	bf00      	nop

080074b8 <VL53L1_i2c_encode_uint16_t>:
	uint16_t   i    = 0;
	uint16_t   data = 0;

	data =  ip_value;

	for (i = 0; i < count ; i++) {
 80074b8:	b179      	cbz	r1, 80074da <VL53L1_i2c_encode_uint16_t+0x22>
 80074ba:	1e53      	subs	r3, r2, #1
 80074bc:	440a      	add	r2, r1
{
 80074be:	b410      	push	{r4}
 80074c0:	1e4c      	subs	r4, r1, #1
 80074c2:	4419      	add	r1, r3
 80074c4:	b2a3      	uxth	r3, r4
 80074c6:	1ac9      	subs	r1, r1, r3
		pbuffer[count-i-1] = (uint8_t)(data & 0x00FF);
 80074c8:	f802 0d01 	strb.w	r0, [r2, #-1]!
	for (i = 0; i < count ; i++) {
 80074cc:	4291      	cmp	r1, r2
		data = data >> 8;
 80074ce:	ea4f 2010 	mov.w	r0, r0, lsr #8
	for (i = 0; i < count ; i++) {
 80074d2:	d1f9      	bne.n	80074c8 <VL53L1_i2c_encode_uint16_t+0x10>
	}
}
 80074d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80074d8:	4770      	bx	lr
 80074da:	4770      	bx	lr

080074dc <VL53L1_i2c_decode_uint16_t>:
	 * (MS byte first order)
	 */

	uint16_t   value = 0x00;

	while (count-- > 0) {
 80074dc:	1e43      	subs	r3, r0, #1
 80074de:	b29b      	uxth	r3, r3
 80074e0:	b148      	cbz	r0, 80074f6 <VL53L1_i2c_decode_uint16_t+0x1a>
 80074e2:	3301      	adds	r3, #1
	uint16_t   value = 0x00;
 80074e4:	2000      	movs	r0, #0
 80074e6:	440b      	add	r3, r1
		value = (value << 8) | (uint16_t)*pbuffer++;
 80074e8:	f811 2b01 	ldrb.w	r2, [r1], #1
 80074ec:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
	while (count-- > 0) {
 80074f0:	4299      	cmp	r1, r3
		value = (value << 8) | (uint16_t)*pbuffer++;
 80074f2:	b280      	uxth	r0, r0
	while (count-- > 0) {
 80074f4:	d1f8      	bne.n	80074e8 <VL53L1_i2c_decode_uint16_t+0xc>
	}

	return value;
}
 80074f6:	4770      	bx	lr

080074f8 <VL53L1_i2c_encode_int16_t>:
	uint16_t   i    = 0;
	int16_t    data = 0;

	data =  ip_value;

	for (i = 0; i < count ; i++) {
 80074f8:	b179      	cbz	r1, 800751a <VL53L1_i2c_encode_int16_t+0x22>
 80074fa:	1e53      	subs	r3, r2, #1
 80074fc:	440a      	add	r2, r1
{
 80074fe:	b410      	push	{r4}
 8007500:	1e4c      	subs	r4, r1, #1
 8007502:	4419      	add	r1, r3
 8007504:	b2a3      	uxth	r3, r4
 8007506:	1ac9      	subs	r1, r1, r3
		pbuffer[count-i-1] = (uint8_t)(data & 0x00FF);
 8007508:	f802 0d01 	strb.w	r0, [r2, #-1]!
	for (i = 0; i < count ; i++) {
 800750c:	4291      	cmp	r1, r2
		data = data >> 8;
 800750e:	ea4f 2020 	mov.w	r0, r0, asr #8
	for (i = 0; i < count ; i++) {
 8007512:	d1f9      	bne.n	8007508 <VL53L1_i2c_encode_int16_t+0x10>
	}
}
 8007514:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007518:	4770      	bx	lr
 800751a:	4770      	bx	lr

0800751c <VL53L1_i2c_decode_int16_t>:
	 */

	int16_t    value = 0x00;

	/* implement sign extension */
	if (*pbuffer >= 0x80) {
 800751c:	f991 3000 	ldrsb.w	r3, [r1]
		value = 0xFFFF;
	}

	while (count-- > 0) {
 8007520:	1e42      	subs	r2, r0, #1
	if (*pbuffer >= 0x80) {
 8007522:	17db      	asrs	r3, r3, #31
	while (count-- > 0) {
 8007524:	b292      	uxth	r2, r2
	if (*pbuffer >= 0x80) {
 8007526:	b21b      	sxth	r3, r3
	while (count-- > 0) {
 8007528:	b140      	cbz	r0, 800753c <VL53L1_i2c_decode_int16_t+0x20>
 800752a:	3201      	adds	r2, #1
 800752c:	440a      	add	r2, r1
		value = (value << 8) | (int16_t)*pbuffer++;
 800752e:	f811 0b01 	ldrb.w	r0, [r1], #1
 8007532:	b25b      	sxtb	r3, r3
	while (count-- > 0) {
 8007534:	4291      	cmp	r1, r2
		value = (value << 8) | (int16_t)*pbuffer++;
 8007536:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
	while (count-- > 0) {
 800753a:	d1f8      	bne.n	800752e <VL53L1_i2c_decode_int16_t+0x12>
	}

	return value;
}
 800753c:	4618      	mov	r0, r3
 800753e:	4770      	bx	lr

08007540 <VL53L1_i2c_encode_uint32_t>:
	uint16_t   i    = 0;
	uint32_t   data = 0;

	data =  ip_value;

	for (i = 0; i < count ; i++) {
 8007540:	b179      	cbz	r1, 8007562 <VL53L1_i2c_encode_uint32_t+0x22>
 8007542:	1e53      	subs	r3, r2, #1
 8007544:	440a      	add	r2, r1
{
 8007546:	b410      	push	{r4}
 8007548:	1e4c      	subs	r4, r1, #1
 800754a:	4419      	add	r1, r3
 800754c:	b2a3      	uxth	r3, r4
 800754e:	1ac9      	subs	r1, r1, r3
		pbuffer[count-i-1] = (uint8_t)(data & 0x00FF);
 8007550:	f802 0d01 	strb.w	r0, [r2, #-1]!
	for (i = 0; i < count ; i++) {
 8007554:	4291      	cmp	r1, r2
		data = data >> 8;
 8007556:	ea4f 2010 	mov.w	r0, r0, lsr #8
	for (i = 0; i < count ; i++) {
 800755a:	d1f9      	bne.n	8007550 <VL53L1_i2c_encode_uint32_t+0x10>
	}
}
 800755c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007560:	4770      	bx	lr
 8007562:	4770      	bx	lr

08007564 <VL53L1_enable_powerforce>:
	 */

	VL53L1_Error status       = VL53L1_ERROR_NONE;
	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	pdev->sys_ctrl.power_management__go1_power_force = value;
 8007564:	2201      	movs	r2, #1

	status = VL53L1_WrByte(
 8007566:	2183      	movs	r1, #131	; 0x83
	pdev->sys_ctrl.power_management__go1_power_force = value;
 8007568:	f880 21c8 	strb.w	r2, [r0, #456]	; 0x1c8
	status = VL53L1_WrByte(
 800756c:	f000 bcb8 	b.w	8007ee0 <VL53L1_WrByte>

08007570 <VL53L1_calc_macro_period_us>:
#endif

uint32_t VL53L1_calc_macro_period_us(
	uint16_t  fast_osc_frequency,
	uint8_t   vcsel_period)
{
 8007570:	b538      	push	{r3, r4, r5, lr}
 8007572:	460d      	mov	r5, r1

	/*  Calculate PLL period in [us] from the  fast_osc_frequency
	 *  Fast osc frequency fixed point format = unsigned 4.12
	 */

	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8007574:	f000 f93e 	bl	80077f4 <VL53L1_calc_pll_period_us>
 8007578:	4604      	mov	r4, r0

	/*  VCSEL period
	 *  - the real VCSEL period in PLL clocks = 2*(VCSEL_PERIOD+1)
	 */

	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 800757a:	4628      	mov	r0, r5
	 *  Max bits (24 - 6) + 12 = 30-bits usage
	 *
	 *  Downshift by 6 before multiplying by the VCSEL Period
	 */

	macro_period_us =
 800757c:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8007580:	f000 f93e 	bl	8007800 <VL53L1_decode_vcsel_period>
	macro_period_us =
 8007584:	0224      	lsls	r4, r4, #8
			(uint32_t)VL53L1_MACRO_PERIOD_VCSEL_PERIODS *
			pll_period_us;
	macro_period_us = macro_period_us >> 6;
 8007586:	09a4      	lsrs	r4, r4, #6

	macro_period_us = macro_period_us * (uint32_t)vcsel_period_pclks;
 8007588:	fb04 f000 	mul.w	r0, r4, r0
#endif

	LOG_FUNCTION_END(0);

	return macro_period_us;
}
 800758c:	0980      	lsrs	r0, r0, #6
 800758e:	bd38      	pop	{r3, r4, r5, pc}

08007590 <VL53L1_calc_range_ignore_threshold>:

	LOG_FUNCTION_START("");

	/* Shift central_rate to .13 fractional for simple addition */

	central_rate_int = ((int32_t)central_rate * (1 << 4)) / (1000);
 8007590:	0100      	lsls	r0, r0, #4

	if (x_gradient < 0) {
 8007592:	2900      	cmp	r1, #0
{
 8007594:	b410      	push	{r4}
	central_rate_int = ((int32_t)central_rate * (1 << 4)) / (1000);
 8007596:	4c15      	ldr	r4, [pc, #84]	; (80075ec <VL53L1_calc_range_ignore_threshold+0x5c>)
 8007598:	fb84 c400 	smull	ip, r4, r4, r0
 800759c:	ea4f 70e0 	mov.w	r0, r0, asr #31
 80075a0:	ebc0 10a4 	rsb	r0, r0, r4, asr #6
	if (x_gradient < 0) {
 80075a4:	db1e      	blt.n	80075e4 <VL53L1_calc_range_ignore_threshold+0x54>
 80075a6:	2100      	movs	r1, #0
		x_gradient_int = x_gradient * -1;
	}

	if (y_gradient < 0) {
 80075a8:	2a00      	cmp	r2, #0
 80075aa:	da02      	bge.n	80075b2 <VL53L1_calc_range_ignore_threshold+0x22>
		y_gradient_int = y_gradient * -1;
 80075ac:	4252      	negs	r2, r2
 80075ae:	fa01 f182 	sxtah	r1, r1, r2

	/* Calculate full rate per spad - worst case from measured xtalk */
	/* Generated here from .11 fractional kcps */
	/* Additional factor of 4 applied to bring fractional precision to .13 */

	range_ignore_thresh_int = (8 * x_gradient_int * 4) + (8 * y_gradient_int * 4);
 80075b2:	0149      	lsls	r1, r1, #5

	/* Convert Kcps to Mcps */

	range_ignore_thresh_int = range_ignore_thresh_int / 1000;
 80075b4:	4c0d      	ldr	r4, [pc, #52]	; (80075ec <VL53L1_calc_range_ignore_threshold+0x5c>)
 80075b6:	17ca      	asrs	r2, r1, #31
 80075b8:	fb84 4101 	smull	r4, r1, r4, r1
#endif

	LOG_FUNCTION_END(0);

	return range_ignore_thresh_kcps;
}
 80075bc:	f85d 4b04 	ldr.w	r4, [sp], #4
	range_ignore_thresh_int = range_ignore_thresh_int / 1000;
 80075c0:	ebc2 11a1 	rsb	r1, r2, r1, asr #6
	range_ignore_thresh_int = range_ignore_thresh_int + central_rate_int;
 80075c4:	4408      	add	r0, r1
	range_ignore_thresh_int = (int32_t)rate_mult * range_ignore_thresh_int;
 80075c6:	fb00 f303 	mul.w	r3, r0, r3
	range_ignore_thresh_int = (range_ignore_thresh_int + (1<<4)) / (1<<5);
 80075ca:	f113 0010 	adds.w	r0, r3, #16
 80075ce:	bf48      	it	mi
 80075d0:	f103 002f 	addmi.w	r0, r3, #47	; 0x2f
	return range_ignore_thresh_kcps;
 80075d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
	range_ignore_thresh_int = (range_ignore_thresh_int + (1<<4)) / (1<<5);
 80075d8:	1140      	asrs	r0, r0, #5
	return range_ignore_thresh_kcps;
 80075da:	4298      	cmp	r0, r3
 80075dc:	bfa8      	it	ge
 80075de:	4618      	movge	r0, r3
}
 80075e0:	b280      	uxth	r0, r0
 80075e2:	4770      	bx	lr
		x_gradient_int = x_gradient * -1;
 80075e4:	4249      	negs	r1, r1
 80075e6:	b209      	sxth	r1, r1
 80075e8:	e7de      	b.n	80075a8 <VL53L1_calc_range_ignore_threshold+0x18>
 80075ea:	bf00      	nop
 80075ec:	10624dd3 	.word	0x10624dd3

080075f0 <VL53L1_calc_timeout_us>:
	uint64_t tmp            = 0;

	LOG_FUNCTION_START("");

	tmp  = (uint64_t)timeout_mclks * (uint64_t)macro_period_us;
	tmp += 0x00800;
 80075f0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80075f4:	2300      	movs	r3, #0
 80075f6:	fbe1 2300 	umlal	r2, r3, r1, r0
	tmp  = tmp >> 12;
 80075fa:	0b10      	lsrs	r0, r2, #12
#endif

	LOG_FUNCTION_END(0);

	return timeout_us;
}
 80075fc:	ea40 5003 	orr.w	r0, r0, r3, lsl #20
 8007600:	4770      	bx	lr
 8007602:	bf00      	nop

08007604 <VL53L1_calc_decoded_timeout_us>:
	 * format (LSByte * 2^MSByte) + 1
	 */

	uint32_t timeout_macro_clks = 0;

	timeout_macro_clks = ((uint32_t) (encoded_timeout & 0x00FF)
 8007604:	b2c3      	uxtb	r3, r0
			<< (uint32_t) ((encoded_timeout & 0xFF00) >> 8)) + 1;
 8007606:	0a00      	lsrs	r0, r0, #8
 8007608:	fa03 f000 	lsl.w	r0, r3, r0
{
 800760c:	b430      	push	{r4, r5}
	timeout_macro_clks = ((uint32_t) (encoded_timeout & 0x00FF)
 800760e:	3001      	adds	r0, #1
	tmp += 0x00800;
 8007610:	f44f 6400 	mov.w	r4, #2048	; 0x800
 8007614:	2500      	movs	r5, #0
 8007616:	fbe0 4501 	umlal	r4, r5, r0, r1
	tmp  = tmp >> 12;
 800761a:	0b20      	lsrs	r0, r4, #12
}
 800761c:	ea40 5005 	orr.w	r0, r0, r5, lsl #20
 8007620:	bc30      	pop	{r4, r5}
 8007622:	4770      	bx	lr

08007624 <VL53L1_calc_timeout_register_values>:
	uint32_t                 mm_config_timeout_us,
	uint32_t                 range_config_timeout_us,
	uint16_t                 fast_osc_frequency,
	VL53L1_general_config_t *pgeneral,
	VL53L1_timing_config_t  *ptiming)
{
 8007624:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007628:	9d09      	ldr	r5, [sp, #36]	; 0x24
	uint32_t timeout_mclks      = 0;
	uint16_t timeout_encoded    = 0;

	LOG_FUNCTION_START("");

	if (fast_osc_frequency == 0) {
 800762a:	2b00      	cmp	r3, #0
 800762c:	f000 80aa 	beq.w	8007784 <VL53L1_calc_timeout_register_values+0x160>
 8007630:	4681      	mov	r9, r0
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
	} else {
		/* Update Macro Period for Range A VCSEL Period */
		macro_period_us =
				VL53L1_calc_macro_period_us(
 8007632:	f895 a006 	ldrb.w	sl, [r5, #6]
	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8007636:	4618      	mov	r0, r3
 8007638:	460c      	mov	r4, r1
 800763a:	461f      	mov	r7, r3
 800763c:	4616      	mov	r6, r2
 800763e:	f000 f8d9 	bl	80077f4 <VL53L1_calc_pll_period_us>
 8007642:	4680      	mov	r8, r0
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8007644:	4650      	mov	r0, sl
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007646:	0324      	lsls	r4, r4, #12
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 8007648:	f000 f8da 	bl	8007800 <VL53L1_decode_vcsel_period>
	macro_period_us =
 800764c:	eb08 02c8 	add.w	r2, r8, r8, lsl #3
 8007650:	0212      	lsls	r2, r2, #8
	macro_period_us = macro_period_us >> 6;
 8007652:	0992      	lsrs	r2, r2, #6
	macro_period_us = macro_period_us * (uint32_t)vcsel_period_pclks;
 8007654:	fb02 f200 	mul.w	r2, r2, r0
		/* clip as the phase cal timeout register is only 8-bits */
		if (timeout_mclks > 0xFF)
			timeout_mclks = 0xFF;

		pgeneral->phasecal_config__timeout_macrop =
				(uint8_t)timeout_mclks;
 8007658:	9808      	ldr	r0, [sp, #32]
			((timeout_us << 12) + (macro_period_us>>1)) /
 800765a:	09d1      	lsrs	r1, r2, #7
	macro_period_us = macro_period_us >> 6;
 800765c:	0992      	lsrs	r2, r2, #6
			((timeout_us << 12) + (macro_period_us>>1)) /
 800765e:	eb01 3909 	add.w	r9, r1, r9, lsl #12
 8007662:	190b      	adds	r3, r1, r4
	timeout_mclks   =
 8007664:	fbb9 f9f2 	udiv	r9, r9, r2
 8007668:	fbb3 f3f2 	udiv	r3, r3, r2
				(uint8_t)timeout_mclks;
 800766c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8007670:	bf28      	it	cs
 8007672:	f04f 09ff 	movcs.w	r9, #255	; 0xff
 8007676:	f880 9007 	strb.w	r9, [r0, #7]
	if (timeout_mclks > 0) {
 800767a:	bb7b      	cbnz	r3, 80076dc <VL53L1_calc_timeout_register_values+0xb8>
			((timeout_us << 12) + (macro_period_us>>1)) /
 800767c:	0336      	lsls	r6, r6, #12
	if (timeout_mclks > 0) {
 800767e:	4618      	mov	r0, r3
				mm_config_timeout_us,
				macro_period_us);

		ptiming->mm_config__timeout_macrop_a_hi =
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->mm_config__timeout_macrop_a_lo =
 8007680:	706b      	strb	r3, [r5, #1]
			((timeout_us << 12) + (macro_period_us>>1)) /
 8007682:	4431      	add	r1, r6
		ptiming->mm_config__timeout_macrop_a_hi =
 8007684:	7028      	strb	r0, [r5, #0]
	timeout_mclks   =
 8007686:	fbb1 f1f2 	udiv	r1, r1, r2
	if (timeout_mclks > 0) {
 800768a:	2900      	cmp	r1, #0
 800768c:	d141      	bne.n	8007712 <VL53L1_calc_timeout_register_values+0xee>
 800768e:	460b      	mov	r3, r1
		timeout_encoded =
			VL53L1_calc_encoded_timeout(
				range_config_timeout_us,
				macro_period_us);

		ptiming->range_config__timeout_macrop_a_hi =
 8007690:	712b      	strb	r3, [r5, #4]
	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 8007692:	4638      	mov	r0, r7
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->range_config__timeout_macrop_a_lo =
 8007694:	7169      	strb	r1, [r5, #5]
				(uint8_t) (timeout_encoded & 0x00FF);

		/* Update Macro Period for Range B VCSEL Period */
		macro_period_us =
				VL53L1_calc_macro_period_us(
 8007696:	f895 8009 	ldrb.w	r8, [r5, #9]
	pll_period_us = VL53L1_calc_pll_period_us(fast_osc_frequency);
 800769a:	f000 f8ab 	bl	80077f4 <VL53L1_calc_pll_period_us>
 800769e:	4607      	mov	r7, r0
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 80076a0:	4640      	mov	r0, r8
	macro_period_us =
 80076a2:	eb07 07c7 	add.w	r7, r7, r7, lsl #3
	vcsel_period_pclks = VL53L1_decode_vcsel_period(vcsel_period);
 80076a6:	f000 f8ab 	bl	8007800 <VL53L1_decode_vcsel_period>
	macro_period_us =
 80076aa:	023f      	lsls	r7, r7, #8
	macro_period_us = macro_period_us >> 6;
 80076ac:	09bf      	lsrs	r7, r7, #6
	macro_period_us = macro_period_us * (uint32_t)vcsel_period_pclks;
 80076ae:	fb07 f000 	mul.w	r0, r7, r0
			((timeout_us << 12) + (macro_period_us>>1)) /
 80076b2:	09c2      	lsrs	r2, r0, #7
	macro_period_us = macro_period_us >> 6;
 80076b4:	0980      	lsrs	r0, r0, #6
			((timeout_us << 12) + (macro_period_us>>1)) /
 80076b6:	4414      	add	r4, r2
	timeout_mclks   =
 80076b8:	fbb4 f4f0 	udiv	r4, r4, r0
	if (timeout_mclks > 0) {
 80076bc:	2c00      	cmp	r4, #0
 80076be:	d14e      	bne.n	800775e <VL53L1_calc_timeout_register_values+0x13a>
 80076c0:	4623      	mov	r3, r4
			((timeout_us << 12) + (macro_period_us>>1)) /
 80076c2:	4416      	add	r6, r2
		timeout_encoded =
				VL53L1_calc_encoded_timeout(
					mm_config_timeout_us,
					macro_period_us);

		ptiming->mm_config__timeout_macrop_b_hi =
 80076c4:	70ab      	strb	r3, [r5, #2]
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->mm_config__timeout_macrop_b_lo =
 80076c6:	70ec      	strb	r4, [r5, #3]
	timeout_mclks   =
 80076c8:	fbb6 f6f0 	udiv	r6, r6, r0
	if (timeout_mclks > 0) {
 80076cc:	2e00      	cmp	r6, #0
 80076ce:	d133      	bne.n	8007738 <VL53L1_calc_timeout_register_values+0x114>
 80076d0:	4633      	mov	r3, r6
	VL53L1_Error status = VL53L1_ERROR_NONE;
 80076d2:	2000      	movs	r0, #0
		/* Update Range Timing B timeout */
		timeout_encoded = VL53L1_calc_encoded_timeout(
							range_config_timeout_us,
							macro_period_us);

		ptiming->range_config__timeout_macrop_b_hi =
 80076d4:	71eb      	strb	r3, [r5, #7]
				(uint8_t)((timeout_encoded & 0xFF00) >> 8);
		ptiming->range_config__timeout_macrop_b_lo =
 80076d6:	722e      	strb	r6, [r5, #8]

	LOG_FUNCTION_END(0);

	return status;

}
 80076d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		ls_byte = timeout_mclks - 1;
 80076dc:	1e58      	subs	r0, r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 80076de:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 80076e2:	d00a      	beq.n	80076fa <VL53L1_calc_timeout_register_values+0xd6>
	uint16_t ms_byte = 0;
 80076e4:	2300      	movs	r3, #0
			ls_byte = ls_byte >> 1;
 80076e6:	0840      	lsrs	r0, r0, #1
			ms_byte++;
 80076e8:	3301      	adds	r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 80076ea:	f020 0cff 	bic.w	ip, r0, #255	; 0xff
			ms_byte++;
 80076ee:	b29b      	uxth	r3, r3
		while ((ls_byte & 0xFFFFFF00) > 0) {
 80076f0:	f1bc 0f00 	cmp.w	ip, #0
 80076f4:	d1f7      	bne.n	80076e6 <VL53L1_calc_timeout_register_values+0xc2>
 80076f6:	021b      	lsls	r3, r3, #8
 80076f8:	b29b      	uxth	r3, r3
			((timeout_us << 12) + (macro_period_us>>1)) /
 80076fa:	0336      	lsls	r6, r6, #12
		encoded_timeout = (ms_byte << 8)
 80076fc:	4403      	add	r3, r0
			((timeout_us << 12) + (macro_period_us>>1)) /
 80076fe:	4431      	add	r1, r6
		encoded_timeout = (ms_byte << 8)
 8007700:	b29b      	uxth	r3, r3
	timeout_mclks   =
 8007702:	fbb1 f1f2 	udiv	r1, r1, r2
 8007706:	0a18      	lsrs	r0, r3, #8
 8007708:	b2db      	uxtb	r3, r3
		ptiming->mm_config__timeout_macrop_a_hi =
 800770a:	7028      	strb	r0, [r5, #0]
		ptiming->mm_config__timeout_macrop_a_lo =
 800770c:	706b      	strb	r3, [r5, #1]
	if (timeout_mclks > 0) {
 800770e:	2900      	cmp	r1, #0
 8007710:	d0bd      	beq.n	800768e <VL53L1_calc_timeout_register_values+0x6a>
		ls_byte = timeout_mclks - 1;
 8007712:	1e48      	subs	r0, r1, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007714:	f030 01ff 	bics.w	r1, r0, #255	; 0xff
 8007718:	d009      	beq.n	800772e <VL53L1_calc_timeout_register_values+0x10a>
	uint16_t ms_byte = 0;
 800771a:	2100      	movs	r1, #0
			ls_byte = ls_byte >> 1;
 800771c:	0840      	lsrs	r0, r0, #1
			ms_byte++;
 800771e:	3101      	adds	r1, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007720:	f020 03ff 	bic.w	r3, r0, #255	; 0xff
			ms_byte++;
 8007724:	b289      	uxth	r1, r1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007726:	2b00      	cmp	r3, #0
 8007728:	d1f8      	bne.n	800771c <VL53L1_calc_timeout_register_values+0xf8>
 800772a:	0209      	lsls	r1, r1, #8
 800772c:	b289      	uxth	r1, r1
		encoded_timeout = (ms_byte << 8)
 800772e:	4401      	add	r1, r0
 8007730:	b289      	uxth	r1, r1
 8007732:	0a0b      	lsrs	r3, r1, #8
 8007734:	b2c9      	uxtb	r1, r1
 8007736:	e7ab      	b.n	8007690 <VL53L1_calc_timeout_register_values+0x6c>
		ls_byte = timeout_mclks - 1;
 8007738:	1e70      	subs	r0, r6, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 800773a:	f030 06ff 	bics.w	r6, r0, #255	; 0xff
 800773e:	d009      	beq.n	8007754 <VL53L1_calc_timeout_register_values+0x130>
	uint16_t ms_byte = 0;
 8007740:	2300      	movs	r3, #0
			ls_byte = ls_byte >> 1;
 8007742:	0840      	lsrs	r0, r0, #1
			ms_byte++;
 8007744:	3301      	adds	r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007746:	f020 02ff 	bic.w	r2, r0, #255	; 0xff
			ms_byte++;
 800774a:	b29b      	uxth	r3, r3
		while ((ls_byte & 0xFFFFFF00) > 0) {
 800774c:	2a00      	cmp	r2, #0
 800774e:	d1f8      	bne.n	8007742 <VL53L1_calc_timeout_register_values+0x11e>
 8007750:	021e      	lsls	r6, r3, #8
 8007752:	b2b6      	uxth	r6, r6
		encoded_timeout = (ms_byte << 8)
 8007754:	4406      	add	r6, r0
 8007756:	b2b6      	uxth	r6, r6
 8007758:	0a33      	lsrs	r3, r6, #8
 800775a:	b2f6      	uxtb	r6, r6
 800775c:	e7b9      	b.n	80076d2 <VL53L1_calc_timeout_register_values+0xae>
		ls_byte = timeout_mclks - 1;
 800775e:	1e61      	subs	r1, r4, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007760:	f031 04ff 	bics.w	r4, r1, #255	; 0xff
 8007764:	d009      	beq.n	800777a <VL53L1_calc_timeout_register_values+0x156>
	uint16_t ms_byte = 0;
 8007766:	2300      	movs	r3, #0
			ls_byte = ls_byte >> 1;
 8007768:	0849      	lsrs	r1, r1, #1
			ms_byte++;
 800776a:	3301      	adds	r3, #1
		while ((ls_byte & 0xFFFFFF00) > 0) {
 800776c:	f021 04ff 	bic.w	r4, r1, #255	; 0xff
			ms_byte++;
 8007770:	b29b      	uxth	r3, r3
		while ((ls_byte & 0xFFFFFF00) > 0) {
 8007772:	2c00      	cmp	r4, #0
 8007774:	d1f8      	bne.n	8007768 <VL53L1_calc_timeout_register_values+0x144>
 8007776:	021c      	lsls	r4, r3, #8
 8007778:	b2a4      	uxth	r4, r4
		encoded_timeout = (ms_byte << 8)
 800777a:	440c      	add	r4, r1
 800777c:	b2a4      	uxth	r4, r4
 800777e:	0a23      	lsrs	r3, r4, #8
 8007780:	b2e4      	uxtb	r4, r4
 8007782:	e79e      	b.n	80076c2 <VL53L1_calc_timeout_register_values+0x9e>
		status = VL53L1_ERROR_DIVISION_BY_ZERO;
 8007784:	f06f 000e 	mvn.w	r0, #14
 8007788:	e7a6      	b.n	80076d8 <VL53L1_calc_timeout_register_values+0xb4>
 800778a:	bf00      	nop

0800778c <VL53L1_encode_row_col>:
{
	/**
	 *  Encodes the input array(row,col) location as SPAD number.
	 */

	if (row > 7) {
 800778c:	2807      	cmp	r0, #7
 800778e:	d806      	bhi.n	800779e <VL53L1_encode_row_col+0x12>
		*pspad_number = 128 + (col << 3) + (15-row);
	} else {
		*pspad_number = ((15-col) << 3) + row;
 8007790:	f1c1 010f 	rsb	r1, r1, #15
 8007794:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 8007798:	b2c0      	uxtb	r0, r0
 800779a:	7010      	strb	r0, [r2, #0]
	}
}
 800779c:	4770      	bx	lr
		*pspad_number = 128 + (col << 3) + (15-row);
 800779e:	ebc0 00c1 	rsb	r0, r0, r1, lsl #3
 80077a2:	3871      	subs	r0, #113	; 0x71
 80077a4:	b2c0      	uxtb	r0, r0
 80077a6:	7010      	strb	r0, [r2, #0]
}
 80077a8:	4770      	bx	lr
 80077aa:	bf00      	nop

080077ac <VL53L1_decode_zone_size>:
	 *
	 * MS Nibble = height
	 * LS Nibble = width
	 */

	*pheight = encoded_xy_size >> 4;
 80077ac:	0903      	lsrs	r3, r0, #4
	*pwidth  = encoded_xy_size & 0x0F;
 80077ae:	f000 000f 	and.w	r0, r0, #15
	*pheight = encoded_xy_size >> 4;
 80077b2:	7013      	strb	r3, [r2, #0]
	*pwidth  = encoded_xy_size & 0x0F;
 80077b4:	7008      	strb	r0, [r1, #0]

}
 80077b6:	4770      	bx	lr

080077b8 <VL53L1_encode_zone_size>:
	 *
	 * MS Nibble = height
	 * LS Nibble = width
	 */

	*pencoded_xy_size = (height << 4) + width;
 80077b8:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80077bc:	7011      	strb	r1, [r2, #0]

}
 80077be:	4770      	bx	lr

080077c0 <VL53L1_low_power_auto_data_init>:

	VL53L1_LLDriverData_t *pdev = VL53L1DevStructGetLLDriverHandle(Dev);

	LOG_FUNCTION_START("");

	pdev->low_power_auto_data.vhv_loop_bound =
 80077c0:	2200      	movs	r2, #0
{
 80077c2:	4603      	mov	r3, r0
	pdev->low_power_auto_data.vhv_loop_bound =
 80077c4:	2103      	movs	r1, #3
 80077c6:	f8a0 22e8 	strh.w	r2, [r0, #744]	; 0x2e8
 80077ca:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
	pdev->low_power_auto_data.dss__required_spads = 0;

	LOG_FUNCTION_END(status);

	return status;
}
 80077ce:	4610      	mov	r0, r2
	pdev->low_power_auto_data.saved_vhv_timeout = 0;
 80077d0:	f883 22ea 	strb.w	r2, [r3, #746]	; 0x2ea
	pdev->low_power_auto_data.dss__total_rate_per_spad_mcps = 0;
 80077d4:	f8c3 22ec 	str.w	r2, [r3, #748]	; 0x2ec
	pdev->low_power_auto_data.dss__required_spads = 0;
 80077d8:	f8a3 22f0 	strh.w	r2, [r3, #752]	; 0x2f0
}
 80077dc:	4770      	bx	lr
 80077de:	bf00      	nop

080077e0 <VL53L1_config_low_power_auto_mode>:
VL53L1_Error VL53L1_config_low_power_auto_mode(
	VL53L1_general_config_t   *pgeneral,
	VL53L1_dynamic_config_t   *pdynamic,
	VL53L1_low_power_auto_data_t *plpadata
	)
{
 80077e0:	b410      	push	{r4}

	/* set low power auto mode */
	plpadata->is_low_power_auto_mode = 1;

	/* set low power range count to 0 */
	plpadata->low_power_auto_range_count = 0;
 80077e2:	2000      	movs	r0, #0
	plpadata->is_low_power_auto_mode = 1;
 80077e4:	2401      	movs	r4, #1

	/* Turn off MM1/MM2 and DSS2 */
	pdynamic->system__sequence_config = \
 80077e6:	239b      	movs	r3, #155	; 0x9b
	plpadata->is_low_power_auto_mode = 1;
 80077e8:	7054      	strb	r4, [r2, #1]
	plpadata->low_power_auto_range_count = 0;
 80077ea:	7090      	strb	r0, [r2, #2]
	pdynamic->system__sequence_config = \
 80077ec:	744b      	strb	r3, [r1, #17]
			VL53L1_SEQUENCE_RANGE_EN;

	LOG_FUNCTION_END(status);

	return status;
}
 80077ee:	f85d 4b04 	ldr.w	r4, [sp], #4
 80077f2:	4770      	bx	lr

080077f4 <VL53L1_calc_pll_period_us>:

	uint32_t  pll_period_us        = 0;

	LOG_FUNCTION_START("");

	pll_period_us = (0x01 << 30) / fast_osc_frequency;
 80077f4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
#endif

	LOG_FUNCTION_END(0);

	return pll_period_us;
}
 80077f8:	fb93 f0f0 	sdiv	r0, r3, r0
 80077fc:	4770      	bx	lr
 80077fe:	bf00      	nop

08007800 <VL53L1_decode_vcsel_period>:
	 * the real period in PLL clocks
	 */

	uint8_t vcsel_period_pclks = 0;

	vcsel_period_pclks = (vcsel_period_reg + 1) << 1;
 8007800:	3001      	adds	r0, #1
 8007802:	0040      	lsls	r0, r0, #1

	return vcsel_period_pclks;
}
 8007804:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
 8007808:	4770      	bx	lr
 800780a:	bf00      	nop

0800780c <VL53L1_decode_row_col>:
	/**
	 *  Decodes the array (row,col) location from
	 *  the input SPAD number
	 */

	if (spad_number > 127) {
 800780c:	0603      	lsls	r3, r0, #24
 800780e:	d407      	bmi.n	8007820 <VL53L1_decode_row_col+0x14>
		*prow = 8 + ((255-spad_number) & 0x07);
		*pcol = (spad_number-128) >> 3;
	} else {
		*prow = spad_number & 0x07;
		*pcol = (127-spad_number) >> 3;
 8007810:	f1c0 037f 	rsb	r3, r0, #127	; 0x7f
		*prow = spad_number & 0x07;
 8007814:	f000 0007 	and.w	r0, r0, #7
		*pcol = (127-spad_number) >> 3;
 8007818:	10db      	asrs	r3, r3, #3
		*prow = spad_number & 0x07;
 800781a:	7008      	strb	r0, [r1, #0]
		*pcol = (127-spad_number) >> 3;
 800781c:	7013      	strb	r3, [r2, #0]
	}
}
 800781e:	4770      	bx	lr
		*prow = 8 + ((255-spad_number) & 0x07);
 8007820:	43c3      	mvns	r3, r0
		*pcol = (spad_number-128) >> 3;
 8007822:	3880      	subs	r0, #128	; 0x80
		*prow = 8 + ((255-spad_number) & 0x07);
 8007824:	f003 0307 	and.w	r3, r3, #7
		*pcol = (spad_number-128) >> 3;
 8007828:	10c0      	asrs	r0, r0, #3
		*prow = 8 + ((255-spad_number) & 0x07);
 800782a:	3308      	adds	r3, #8
 800782c:	700b      	strb	r3, [r1, #0]
		*pcol = (spad_number-128) >> 3;
 800782e:	7010      	strb	r0, [r2, #0]
 8007830:	4770      	bx	lr
 8007832:	bf00      	nop

08007834 <VL53L1_i2c_encode_static_nvm_managed>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES > buf_size)
 8007834:	290a      	cmp	r1, #10
 8007836:	d927      	bls.n	8007888 <VL53L1_i2c_encode_static_nvm_managed+0x54>
		pdata->ana_config__vhv_ref_sel_vquench & 0x7F;
	*(pbuffer +   3) =
		pdata->ana_config__reg_avdd1v2_sel & 0x3;
	*(pbuffer +   4) =
		pdata->ana_config__fast_osc__trim & 0x7F;
	VL53L1_i2c_encode_uint16_t(
 8007838:	2102      	movs	r1, #2
{
 800783a:	b538      	push	{r3, r4, r5, lr}
		pdata->i2c_slave__device_address & 0x7F;
 800783c:	7803      	ldrb	r3, [r0, #0]
 800783e:	4614      	mov	r4, r2
 8007840:	4605      	mov	r5, r0
	VL53L1_i2c_encode_uint16_t(
 8007842:	3205      	adds	r2, #5
		pdata->i2c_slave__device_address & 0x7F;
 8007844:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   0) =
 8007848:	7023      	strb	r3, [r4, #0]
		pdata->ana_config__vhv_ref_sel_vddpix & 0xF;
 800784a:	7843      	ldrb	r3, [r0, #1]
 800784c:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   1) =
 8007850:	7063      	strb	r3, [r4, #1]
		pdata->ana_config__vhv_ref_sel_vquench & 0x7F;
 8007852:	7883      	ldrb	r3, [r0, #2]
 8007854:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   2) =
 8007858:	70a3      	strb	r3, [r4, #2]
		pdata->ana_config__reg_avdd1v2_sel & 0x3;
 800785a:	78c3      	ldrb	r3, [r0, #3]
 800785c:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +   3) =
 8007860:	70e3      	strb	r3, [r4, #3]
		pdata->ana_config__fast_osc__trim & 0x7F;
 8007862:	7903      	ldrb	r3, [r0, #4]
 8007864:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   4) =
 8007868:	7123      	strb	r3, [r4, #4]
	VL53L1_i2c_encode_uint16_t(
 800786a:	88c0      	ldrh	r0, [r0, #6]
 800786c:	f7ff fe24 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->osc_measured__fast_osc__frequency,
		2,
		pbuffer +   5);
	*(pbuffer +   7) =
		pdata->vhv_config__timeout_macrop_loop_bound;
 8007870:	7a2b      	ldrb	r3, [r5, #8]
	*(pbuffer +  10) =
		pdata->vhv_config__init;
	LOG_FUNCTION_END(status);


	return status;
 8007872:	2000      	movs	r0, #0
	*(pbuffer +   7) =
 8007874:	71e3      	strb	r3, [r4, #7]
		pdata->vhv_config__count_thresh;
 8007876:	7a6b      	ldrb	r3, [r5, #9]
	*(pbuffer +   8) =
 8007878:	7223      	strb	r3, [r4, #8]
		pdata->vhv_config__offset & 0x3F;
 800787a:	7aab      	ldrb	r3, [r5, #10]
 800787c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   9) =
 8007880:	7263      	strb	r3, [r4, #9]
		pdata->vhv_config__init;
 8007882:	7aeb      	ldrb	r3, [r5, #11]
	*(pbuffer +  10) =
 8007884:	72a3      	strb	r3, [r4, #10]
}
 8007886:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007888:	f06f 0009 	mvn.w	r0, #9
}
 800788c:	4770      	bx	lr
 800788e:	bf00      	nop

08007890 <VL53L1_get_static_nvm_managed>:


VL53L1_Error VL53L1_get_static_nvm_managed(
	VL53L1_DEV                 Dev,
	VL53L1_static_nvm_managed_t  *pdata)
{
 8007890:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007892:	b085      	sub	sp, #20
 8007894:	460c      	mov	r4, r1
	uint8_t comms_buffer[VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES];

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
		status = VL53L1_ReadMulti(
 8007896:	230b      	movs	r3, #11
 8007898:	2101      	movs	r1, #1
 800789a:	aa01      	add	r2, sp, #4
 800789c:	f000 faf0 	bl	8007e80 <VL53L1_ReadMulti>
			Dev,
			VL53L1_I2C_SLAVE__DEVICE_ADDRESS,
			comms_buffer,
			VL53L1_STATIC_NVM_MANAGED_I2C_SIZE_BYTES);

	if (status == VL53L1_ERROR_NONE)
 80078a0:	4605      	mov	r5, r0
 80078a2:	bb60      	cbnz	r0, 80078fe <VL53L1_get_static_nvm_managed+0x6e>
		(*(pbuffer +   0)) & 0x7F;
 80078a4:	f89d 3004 	ldrb.w	r3, [sp, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   5));
 80078a8:	f10d 0109 	add.w	r1, sp, #9
		(*(pbuffer +   1)) & 0xF;
 80078ac:	f89d 7005 	ldrb.w	r7, [sp, #5]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   5));
 80078b0:	2002      	movs	r0, #2
		(*(pbuffer +   0)) & 0x7F;
 80078b2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
		(*(pbuffer +   2)) & 0x7F;
 80078b6:	f89d 6006 	ldrb.w	r6, [sp, #6]
		(*(pbuffer +   3)) & 0x3;
 80078ba:	f89d 2007 	ldrb.w	r2, [sp, #7]
		(*(pbuffer +   1)) & 0xF;
 80078be:	f007 070f 	and.w	r7, r7, #15
	pdata->i2c_slave__device_address =
 80078c2:	7023      	strb	r3, [r4, #0]
		(*(pbuffer +   2)) & 0x7F;
 80078c4:	f006 067f 	and.w	r6, r6, #127	; 0x7f
		(*(pbuffer +   4)) & 0x7F;
 80078c8:	f89d 3008 	ldrb.w	r3, [sp, #8]
		(*(pbuffer +   3)) & 0x3;
 80078cc:	f002 0203 	and.w	r2, r2, #3
	pdata->ana_config__vhv_ref_sel_vquench =
 80078d0:	70a6      	strb	r6, [r4, #2]
		(*(pbuffer +   4)) & 0x7F;
 80078d2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	pdata->ana_config__reg_avdd1v2_sel =
 80078d6:	70e2      	strb	r2, [r4, #3]
	pdata->ana_config__vhv_ref_sel_vddpix =
 80078d8:	7067      	strb	r7, [r4, #1]
	pdata->ana_config__fast_osc__trim =
 80078da:	7123      	strb	r3, [r4, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   5));
 80078dc:	f7ff fdfe 	bl	80074dc <VL53L1_i2c_decode_uint16_t>
		(*(pbuffer +   9)) & 0x3F;
 80078e0:	f89d 300d 	ldrb.w	r3, [sp, #13]
	pdata->vhv_config__timeout_macrop_loop_bound =
 80078e4:	f89d 600b 	ldrb.w	r6, [sp, #11]
		(*(pbuffer +   9)) & 0x3F;
 80078e8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->vhv_config__count_thresh =
 80078ec:	f89d 100c 	ldrb.w	r1, [sp, #12]
	pdata->vhv_config__init =
 80078f0:	f89d 200e 	ldrb.w	r2, [sp, #14]
	pdata->osc_measured__fast_osc__frequency =
 80078f4:	80e0      	strh	r0, [r4, #6]
	pdata->vhv_config__offset =
 80078f6:	72a3      	strb	r3, [r4, #10]
	pdata->vhv_config__timeout_macrop_loop_bound =
 80078f8:	7226      	strb	r6, [r4, #8]
	pdata->vhv_config__count_thresh =
 80078fa:	7261      	strb	r1, [r4, #9]
	pdata->vhv_config__init =
 80078fc:	72e2      	strb	r2, [r4, #11]
			pdata);

	LOG_FUNCTION_END(status);

	return status;
}
 80078fe:	4628      	mov	r0, r5
 8007900:	b005      	add	sp, #20
 8007902:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007904 <VL53L1_i2c_encode_customer_nvm_managed>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES > buf_size)
 8007904:	2916      	cmp	r1, #22
 8007906:	d94b      	bls.n	80079a0 <VL53L1_i2c_encode_customer_nvm_managed+0x9c>
		pdata->global_config__ref_en_start_select;
	*(pbuffer +   7) =
		pdata->ref_spad_man__num_requested_ref_spads & 0x3F;
	*(pbuffer +   8) =
		pdata->ref_spad_man__ref_location & 0x3;
	VL53L1_i2c_encode_uint16_t(
 8007908:	2102      	movs	r1, #2
{
 800790a:	b538      	push	{r3, r4, r5, lr}
 800790c:	4615      	mov	r5, r2
		pdata->global_config__spad_enables_ref_0;
 800790e:	7803      	ldrb	r3, [r0, #0]
 8007910:	4604      	mov	r4, r0
	VL53L1_i2c_encode_uint16_t(
 8007912:	3209      	adds	r2, #9
	*(pbuffer +   0) =
 8007914:	702b      	strb	r3, [r5, #0]
		pdata->global_config__spad_enables_ref_1;
 8007916:	7843      	ldrb	r3, [r0, #1]
	*(pbuffer +   1) =
 8007918:	706b      	strb	r3, [r5, #1]
		pdata->global_config__spad_enables_ref_2;
 800791a:	7883      	ldrb	r3, [r0, #2]
	*(pbuffer +   2) =
 800791c:	70ab      	strb	r3, [r5, #2]
		pdata->global_config__spad_enables_ref_3;
 800791e:	78c3      	ldrb	r3, [r0, #3]
	*(pbuffer +   3) =
 8007920:	70eb      	strb	r3, [r5, #3]
		pdata->global_config__spad_enables_ref_4;
 8007922:	7903      	ldrb	r3, [r0, #4]
	*(pbuffer +   4) =
 8007924:	712b      	strb	r3, [r5, #4]
		pdata->global_config__spad_enables_ref_5 & 0xF;
 8007926:	7943      	ldrb	r3, [r0, #5]
 8007928:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   5) =
 800792c:	716b      	strb	r3, [r5, #5]
		pdata->global_config__ref_en_start_select;
 800792e:	7983      	ldrb	r3, [r0, #6]
	*(pbuffer +   6) =
 8007930:	71ab      	strb	r3, [r5, #6]
		pdata->ref_spad_man__num_requested_ref_spads & 0x3F;
 8007932:	79c3      	ldrb	r3, [r0, #7]
 8007934:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   7) =
 8007938:	71eb      	strb	r3, [r5, #7]
		pdata->ref_spad_man__ref_location & 0x3;
 800793a:	7a03      	ldrb	r3, [r0, #8]
 800793c:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +   8) =
 8007940:	722b      	strb	r3, [r5, #8]
	VL53L1_i2c_encode_uint16_t(
 8007942:	8940      	ldrh	r0, [r0, #10]
 8007944:	f7ff fdb8 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->algo__crosstalk_compensation_plane_offset_kcps,
		2,
		pbuffer +   9);
	VL53L1_i2c_encode_int16_t(
 8007948:	f105 020b 	add.w	r2, r5, #11
 800794c:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 8007950:	2102      	movs	r1, #2
 8007952:	f7ff fdd1 	bl	80074f8 <VL53L1_i2c_encode_int16_t>
		pdata->algo__crosstalk_compensation_x_plane_gradient_kcps,
		2,
		pbuffer +  11);
	VL53L1_i2c_encode_int16_t(
 8007956:	f105 020d 	add.w	r2, r5, #13
 800795a:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800795e:	2102      	movs	r1, #2
 8007960:	f7ff fdca 	bl	80074f8 <VL53L1_i2c_encode_int16_t>
		pdata->algo__crosstalk_compensation_y_plane_gradient_kcps,
		2,
		pbuffer +  13);
	VL53L1_i2c_encode_uint16_t(
 8007964:	f105 020f 	add.w	r2, r5, #15
 8007968:	8a20      	ldrh	r0, [r4, #16]
 800796a:	2102      	movs	r1, #2
 800796c:	f7ff fda4 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->ref_spad_char__total_rate_target_mcps,
		2,
		pbuffer +  15);
	VL53L1_i2c_encode_int16_t(
 8007970:	8a60      	ldrh	r0, [r4, #18]
 8007972:	f105 0211 	add.w	r2, r5, #17
 8007976:	2102      	movs	r1, #2
 8007978:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800797c:	f7ff fdbc 	bl	80074f8 <VL53L1_i2c_encode_int16_t>
		pdata->algo__part_to_part_range_offset_mm & 0x1FFF,
		2,
		pbuffer +  17);
	VL53L1_i2c_encode_int16_t(
 8007980:	f105 0213 	add.w	r2, r5, #19
 8007984:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8007988:	2102      	movs	r1, #2
 800798a:	f7ff fdb5 	bl	80074f8 <VL53L1_i2c_encode_int16_t>
		pdata->mm_config__inner_offset_mm,
		2,
		pbuffer +  19);
	VL53L1_i2c_encode_int16_t(
 800798e:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 8007992:	f105 0215 	add.w	r2, r5, #21
 8007996:	2102      	movs	r1, #2
 8007998:	f7ff fdae 	bl	80074f8 <VL53L1_i2c_encode_int16_t>
		2,
		pbuffer +  21);
	LOG_FUNCTION_END(status);


	return status;
 800799c:	2000      	movs	r0, #0
}
 800799e:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 80079a0:	f06f 0009 	mvn.w	r0, #9
}
 80079a4:	4770      	bx	lr
 80079a6:	bf00      	nop

080079a8 <VL53L1_get_customer_nvm_managed>:


VL53L1_Error VL53L1_get_customer_nvm_managed(
	VL53L1_DEV                 Dev,
	VL53L1_customer_nvm_managed_t  *pdata)
{
 80079a8:	b570      	push	{r4, r5, r6, lr}
 80079aa:	b086      	sub	sp, #24
 80079ac:	460c      	mov	r4, r1
	uint8_t comms_buffer[VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES];

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
		status = VL53L1_ReadMulti(
 80079ae:	2317      	movs	r3, #23
 80079b0:	210d      	movs	r1, #13
 80079b2:	466a      	mov	r2, sp
 80079b4:	f000 fa64 	bl	8007e80 <VL53L1_ReadMulti>
			Dev,
			VL53L1_GLOBAL_CONFIG__SPAD_ENABLES_REF_0,
			comms_buffer,
			VL53L1_CUSTOMER_NVM_MANAGED_I2C_SIZE_BYTES);

	if (status == VL53L1_ERROR_NONE)
 80079b8:	4605      	mov	r5, r0
 80079ba:	2800      	cmp	r0, #0
 80079bc:	d142      	bne.n	8007a44 <VL53L1_get_customer_nvm_managed+0x9c>
		(*(pbuffer +   5)) & 0xF;
 80079be:	f89d 6005 	ldrb.w	r6, [sp, #5]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   9));
 80079c2:	f10d 0109 	add.w	r1, sp, #9
		(*(pbuffer +   7)) & 0x3F;
 80079c6:	f89d 2007 	ldrb.w	r2, [sp, #7]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   9));
 80079ca:	2002      	movs	r0, #2
		(*(pbuffer +   8)) & 0x3;
 80079cc:	f89d 3008 	ldrb.w	r3, [sp, #8]
		(*(pbuffer +   5)) & 0xF;
 80079d0:	f006 060f 	and.w	r6, r6, #15
		(*(pbuffer +   7)) & 0x3F;
 80079d4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
		(*(pbuffer +   8)) & 0x3;
 80079d8:	f003 0303 	and.w	r3, r3, #3
	pdata->global_config__spad_enables_ref_5 =
 80079dc:	7166      	strb	r6, [r4, #5]
	pdata->ref_spad_man__num_requested_ref_spads =
 80079de:	71e2      	strb	r2, [r4, #7]
	pdata->global_config__spad_enables_ref_0 =
 80079e0:	9e00      	ldr	r6, [sp, #0]
	pdata->global_config__spad_enables_ref_4 =
 80079e2:	f89d 2004 	ldrb.w	r2, [sp, #4]
	pdata->ref_spad_man__ref_location =
 80079e6:	7223      	strb	r3, [r4, #8]
	pdata->global_config__ref_en_start_select =
 80079e8:	f89d 3006 	ldrb.w	r3, [sp, #6]
	pdata->global_config__spad_enables_ref_4 =
 80079ec:	7122      	strb	r2, [r4, #4]
	pdata->global_config__ref_en_start_select =
 80079ee:	71a3      	strb	r3, [r4, #6]
	pdata->global_config__spad_enables_ref_0 =
 80079f0:	6026      	str	r6, [r4, #0]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   9));
 80079f2:	f7ff fd73 	bl	80074dc <VL53L1_i2c_decode_uint16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  11));
 80079f6:	f10d 010b 	add.w	r1, sp, #11
	pdata->algo__crosstalk_compensation_plane_offset_kcps =
 80079fa:	8160      	strh	r0, [r4, #10]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  11));
 80079fc:	2002      	movs	r0, #2
 80079fe:	f7ff fd8d 	bl	800751c <VL53L1_i2c_decode_int16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  13));
 8007a02:	f10d 010d 	add.w	r1, sp, #13
	pdata->algo__crosstalk_compensation_x_plane_gradient_kcps =
 8007a06:	81a0      	strh	r0, [r4, #12]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  13));
 8007a08:	2002      	movs	r0, #2
 8007a0a:	f7ff fd87 	bl	800751c <VL53L1_i2c_decode_int16_t>
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  15));
 8007a0e:	f10d 010f 	add.w	r1, sp, #15
	pdata->algo__crosstalk_compensation_y_plane_gradient_kcps =
 8007a12:	81e0      	strh	r0, [r4, #14]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +  15));
 8007a14:	2002      	movs	r0, #2
 8007a16:	f7ff fd61 	bl	80074dc <VL53L1_i2c_decode_uint16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  17)) & 0x1FFF;
 8007a1a:	f10d 0111 	add.w	r1, sp, #17
	pdata->ref_spad_char__total_rate_target_mcps =
 8007a1e:	8220      	strh	r0, [r4, #16]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  17)) & 0x1FFF;
 8007a20:	2002      	movs	r0, #2
 8007a22:	f7ff fd7b 	bl	800751c <VL53L1_i2c_decode_int16_t>
 8007a26:	f3c0 030c 	ubfx	r3, r0, #0, #13
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  19));
 8007a2a:	f10d 0113 	add.w	r1, sp, #19
 8007a2e:	2002      	movs	r0, #2
	pdata->algo__part_to_part_range_offset_mm =
 8007a30:	8263      	strh	r3, [r4, #18]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  19));
 8007a32:	f7ff fd73 	bl	800751c <VL53L1_i2c_decode_int16_t>
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  21));
 8007a36:	f10d 0115 	add.w	r1, sp, #21
	pdata->mm_config__inner_offset_mm =
 8007a3a:	82a0      	strh	r0, [r4, #20]
		(VL53L1_i2c_decode_int16_t(2, pbuffer +  21));
 8007a3c:	2002      	movs	r0, #2
 8007a3e:	f7ff fd6d 	bl	800751c <VL53L1_i2c_decode_int16_t>
	pdata->mm_config__outer_offset_mm =
 8007a42:	82e0      	strh	r0, [r4, #22]
			pdata);

	LOG_FUNCTION_END(status);

	return status;
}
 8007a44:	4628      	mov	r0, r5
 8007a46:	b006      	add	sp, #24
 8007a48:	bd70      	pop	{r4, r5, r6, pc}
 8007a4a:	bf00      	nop

08007a4c <VL53L1_i2c_encode_static_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_STATIC_CONFIG_I2C_SIZE_BYTES > buf_size)
 8007a4c:	291f      	cmp	r1, #31
 8007a4e:	d968      	bls.n	8007b22 <VL53L1_i2c_encode_static_config+0xd6>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	VL53L1_i2c_encode_uint16_t(
 8007a50:	2102      	movs	r1, #2
{
 8007a52:	b538      	push	{r3, r4, r5, lr}
 8007a54:	4604      	mov	r4, r0
	VL53L1_i2c_encode_uint16_t(
 8007a56:	8800      	ldrh	r0, [r0, #0]
 8007a58:	4615      	mov	r5, r2
 8007a5a:	f7ff fd2d 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->dss_config__target_total_rate_mcps,
		2,
		pbuffer +   0);
	*(pbuffer +   2) =
		pdata->debug__ctrl & 0x1;
 8007a5e:	78a3      	ldrb	r3, [r4, #2]
		pdata->algo__crosstalk_compensation_valid_height_mm;
	*(pbuffer +  22) =
		pdata->spare_host_config__static_config_spare_0;
	*(pbuffer +  23) =
		pdata->spare_host_config__static_config_spare_1;
	VL53L1_i2c_encode_uint16_t(
 8007a60:	2102      	movs	r1, #2
 8007a62:	f105 0218 	add.w	r2, r5, #24
		pdata->debug__ctrl & 0x1;
 8007a66:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   2) =
 8007a6a:	70ab      	strb	r3, [r5, #2]
		pdata->test_mode__ctrl & 0xF;
 8007a6c:	78e3      	ldrb	r3, [r4, #3]
 8007a6e:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   3) =
 8007a72:	70eb      	strb	r3, [r5, #3]
		pdata->clk_gating__ctrl & 0xF;
 8007a74:	7923      	ldrb	r3, [r4, #4]
 8007a76:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   4) =
 8007a7a:	712b      	strb	r3, [r5, #4]
		pdata->nvm_bist__ctrl & 0x1F;
 8007a7c:	7963      	ldrb	r3, [r4, #5]
 8007a7e:	f003 031f 	and.w	r3, r3, #31
	*(pbuffer +   5) =
 8007a82:	716b      	strb	r3, [r5, #5]
		pdata->nvm_bist__num_nvm_words & 0x7F;
 8007a84:	79a3      	ldrb	r3, [r4, #6]
 8007a86:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   6) =
 8007a8a:	71ab      	strb	r3, [r5, #6]
		pdata->nvm_bist__start_address & 0x7F;
 8007a8c:	79e3      	ldrb	r3, [r4, #7]
 8007a8e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   7) =
 8007a92:	71eb      	strb	r3, [r5, #7]
		pdata->host_if__status & 0x1;
 8007a94:	7a23      	ldrb	r3, [r4, #8]
 8007a96:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   8) =
 8007a9a:	722b      	strb	r3, [r5, #8]
		pdata->pad_i2c_hv__config;
 8007a9c:	7a63      	ldrb	r3, [r4, #9]
	*(pbuffer +   9) =
 8007a9e:	726b      	strb	r3, [r5, #9]
		pdata->pad_i2c_hv__extsup_config & 0x1;
 8007aa0:	7aa3      	ldrb	r3, [r4, #10]
 8007aa2:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +  10) =
 8007aa6:	72ab      	strb	r3, [r5, #10]
		pdata->gpio_hv_pad__ctrl & 0x3;
 8007aa8:	7ae3      	ldrb	r3, [r4, #11]
 8007aaa:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  11) =
 8007aae:	72eb      	strb	r3, [r5, #11]
		pdata->gpio_hv_mux__ctrl & 0x1F;
 8007ab0:	7b23      	ldrb	r3, [r4, #12]
 8007ab2:	f003 031f 	and.w	r3, r3, #31
	*(pbuffer +  12) =
 8007ab6:	732b      	strb	r3, [r5, #12]
		pdata->gpio__tio_hv_status & 0x3;
 8007ab8:	7b63      	ldrb	r3, [r4, #13]
 8007aba:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  13) =
 8007abe:	736b      	strb	r3, [r5, #13]
		pdata->gpio__fio_hv_status & 0x3;
 8007ac0:	7ba3      	ldrb	r3, [r4, #14]
 8007ac2:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  14) =
 8007ac6:	73ab      	strb	r3, [r5, #14]
		pdata->ana_config__spad_sel_pswidth & 0x7;
 8007ac8:	7be3      	ldrb	r3, [r4, #15]
 8007aca:	f003 0307 	and.w	r3, r3, #7
	*(pbuffer +  15) =
 8007ace:	73eb      	strb	r3, [r5, #15]
		pdata->ana_config__vcsel_pulse_width_offset & 0x1F;
 8007ad0:	7c23      	ldrb	r3, [r4, #16]
 8007ad2:	f003 031f 	and.w	r3, r3, #31
	*(pbuffer +  16) =
 8007ad6:	742b      	strb	r3, [r5, #16]
		pdata->ana_config__fast_osc__config_ctrl & 0x1;
 8007ad8:	7c63      	ldrb	r3, [r4, #17]
 8007ada:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +  17) =
 8007ade:	746b      	strb	r3, [r5, #17]
		pdata->sigma_estimator__effective_pulse_width_ns;
 8007ae0:	7ca3      	ldrb	r3, [r4, #18]
	*(pbuffer +  18) =
 8007ae2:	74ab      	strb	r3, [r5, #18]
		pdata->sigma_estimator__effective_ambient_width_ns;
 8007ae4:	7ce3      	ldrb	r3, [r4, #19]
	*(pbuffer +  19) =
 8007ae6:	74eb      	strb	r3, [r5, #19]
		pdata->sigma_estimator__sigma_ref_mm;
 8007ae8:	7d23      	ldrb	r3, [r4, #20]
	*(pbuffer +  20) =
 8007aea:	752b      	strb	r3, [r5, #20]
		pdata->algo__crosstalk_compensation_valid_height_mm;
 8007aec:	7d63      	ldrb	r3, [r4, #21]
	*(pbuffer +  21) =
 8007aee:	756b      	strb	r3, [r5, #21]
		pdata->spare_host_config__static_config_spare_0;
 8007af0:	7da3      	ldrb	r3, [r4, #22]
	*(pbuffer +  22) =
 8007af2:	75ab      	strb	r3, [r5, #22]
		pdata->spare_host_config__static_config_spare_1;
 8007af4:	7de3      	ldrb	r3, [r4, #23]
	*(pbuffer +  23) =
 8007af6:	75eb      	strb	r3, [r5, #23]
	VL53L1_i2c_encode_uint16_t(
 8007af8:	8b20      	ldrh	r0, [r4, #24]
 8007afa:	f7ff fcdd 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->algo__range_ignore_threshold_mcps,
		2,
		pbuffer +  24);
	*(pbuffer +  26) =
		pdata->algo__range_ignore_valid_height_mm;
 8007afe:	7ea3      	ldrb	r3, [r4, #26]
	*(pbuffer +  31) =
		pdata->sd_config__reset_stages_lsb;
	LOG_FUNCTION_END(status);


	return status;
 8007b00:	2000      	movs	r0, #0
	*(pbuffer +  26) =
 8007b02:	76ab      	strb	r3, [r5, #26]
		pdata->algo__range_min_clip;
 8007b04:	7ee3      	ldrb	r3, [r4, #27]
	*(pbuffer +  27) =
 8007b06:	76eb      	strb	r3, [r5, #27]
		pdata->algo__consistency_check__tolerance & 0xF;
 8007b08:	7f23      	ldrb	r3, [r4, #28]
 8007b0a:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +  28) =
 8007b0e:	772b      	strb	r3, [r5, #28]
		pdata->spare_host_config__static_config_spare_2;
 8007b10:	7f63      	ldrb	r3, [r4, #29]
	*(pbuffer +  29) =
 8007b12:	776b      	strb	r3, [r5, #29]
		pdata->sd_config__reset_stages_msb & 0xF;
 8007b14:	7fa3      	ldrb	r3, [r4, #30]
 8007b16:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +  30) =
 8007b1a:	77ab      	strb	r3, [r5, #30]
		pdata->sd_config__reset_stages_lsb;
 8007b1c:	7fe3      	ldrb	r3, [r4, #31]
	*(pbuffer +  31) =
 8007b1e:	77eb      	strb	r3, [r5, #31]
}
 8007b20:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007b22:	f06f 0009 	mvn.w	r0, #9
}
 8007b26:	4770      	bx	lr

08007b28 <VL53L1_i2c_encode_general_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_GENERAL_CONFIG_I2C_SIZE_BYTES > buf_size)
 8007b28:	2915      	cmp	r1, #21
 8007b2a:	d93f      	bls.n	8007bac <VL53L1_i2c_encode_general_config+0x84>
		pdata->global_config__stream_divider;
	*(pbuffer +   2) =
		pdata->system__interrupt_config_gpio;
	*(pbuffer +   3) =
		pdata->cal_config__vcsel_start & 0x7F;
	VL53L1_i2c_encode_uint16_t(
 8007b2c:	2102      	movs	r1, #2
{
 8007b2e:	b538      	push	{r3, r4, r5, lr}
 8007b30:	4614      	mov	r4, r2
		pdata->gph_config__stream_count_update_value;
 8007b32:	7803      	ldrb	r3, [r0, #0]
 8007b34:	4605      	mov	r5, r0
	VL53L1_i2c_encode_uint16_t(
 8007b36:	3204      	adds	r2, #4
	*(pbuffer +   0) =
 8007b38:	7023      	strb	r3, [r4, #0]
		pdata->global_config__stream_divider;
 8007b3a:	7843      	ldrb	r3, [r0, #1]
	*(pbuffer +   1) =
 8007b3c:	7063      	strb	r3, [r4, #1]
		pdata->system__interrupt_config_gpio;
 8007b3e:	7883      	ldrb	r3, [r0, #2]
	*(pbuffer +   2) =
 8007b40:	70a3      	strb	r3, [r4, #2]
		pdata->cal_config__vcsel_start & 0x7F;
 8007b42:	78c3      	ldrb	r3, [r0, #3]
 8007b44:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   3) =
 8007b48:	70e3      	strb	r3, [r4, #3]
	VL53L1_i2c_encode_uint16_t(
 8007b4a:	8880      	ldrh	r0, [r0, #4]
 8007b4c:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8007b50:	f7ff fcb2 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->cal_config__repeat_rate & 0xFFF,
		2,
		pbuffer +   4);
	*(pbuffer +   6) =
		pdata->global_config__vcsel_width & 0x7F;
 8007b54:	79ab      	ldrb	r3, [r5, #6]
		pdata->phasecal_config__target;
	*(pbuffer +   9) =
		pdata->phasecal_config__override & 0x1;
	*(pbuffer +  11) =
		pdata->dss_config__roi_mode_control & 0x7;
	VL53L1_i2c_encode_uint16_t(
 8007b56:	f104 020c 	add.w	r2, r4, #12
 8007b5a:	2102      	movs	r1, #2
		pdata->global_config__vcsel_width & 0x7F;
 8007b5c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   6) =
 8007b60:	71a3      	strb	r3, [r4, #6]
		pdata->phasecal_config__timeout_macrop;
 8007b62:	79eb      	ldrb	r3, [r5, #7]
	*(pbuffer +   7) =
 8007b64:	71e3      	strb	r3, [r4, #7]
		pdata->phasecal_config__target;
 8007b66:	7a2b      	ldrb	r3, [r5, #8]
	*(pbuffer +   8) =
 8007b68:	7223      	strb	r3, [r4, #8]
		pdata->phasecal_config__override & 0x1;
 8007b6a:	7a6b      	ldrb	r3, [r5, #9]
 8007b6c:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   9) =
 8007b70:	7263      	strb	r3, [r4, #9]
		pdata->dss_config__roi_mode_control & 0x7;
 8007b72:	7aab      	ldrb	r3, [r5, #10]
 8007b74:	f003 0307 	and.w	r3, r3, #7
	*(pbuffer +  11) =
 8007b78:	72e3      	strb	r3, [r4, #11]
	VL53L1_i2c_encode_uint16_t(
 8007b7a:	89a8      	ldrh	r0, [r5, #12]
 8007b7c:	f7ff fc9c 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_rate_high,
		2,
		pbuffer +  12);
	VL53L1_i2c_encode_uint16_t(
 8007b80:	f104 020e 	add.w	r2, r4, #14
 8007b84:	89e8      	ldrh	r0, [r5, #14]
 8007b86:	2102      	movs	r1, #2
 8007b88:	f7ff fc96 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_rate_low,
		2,
		pbuffer +  14);
	VL53L1_i2c_encode_uint16_t(
 8007b8c:	8a28      	ldrh	r0, [r5, #16]
 8007b8e:	f104 0210 	add.w	r2, r4, #16
 8007b92:	2102      	movs	r1, #2
 8007b94:	f7ff fc90 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->dss_config__manual_effective_spads_select,
		2,
		pbuffer +  16);
	*(pbuffer +  18) =
		pdata->dss_config__manual_block_select;
 8007b98:	7cab      	ldrb	r3, [r5, #18]
	*(pbuffer +  21) =
		pdata->dss_config__min_spads_limit;
	LOG_FUNCTION_END(status);


	return status;
 8007b9a:	2000      	movs	r0, #0
	*(pbuffer +  18) =
 8007b9c:	74a3      	strb	r3, [r4, #18]
		pdata->dss_config__aperture_attenuation;
 8007b9e:	7ceb      	ldrb	r3, [r5, #19]
	*(pbuffer +  19) =
 8007ba0:	74e3      	strb	r3, [r4, #19]
		pdata->dss_config__max_spads_limit;
 8007ba2:	7d2b      	ldrb	r3, [r5, #20]
	*(pbuffer +  20) =
 8007ba4:	7523      	strb	r3, [r4, #20]
		pdata->dss_config__min_spads_limit;
 8007ba6:	7d6b      	ldrb	r3, [r5, #21]
	*(pbuffer +  21) =
 8007ba8:	7563      	strb	r3, [r4, #21]
}
 8007baa:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007bac:	f06f 0009 	mvn.w	r0, #9
}
 8007bb0:	4770      	bx	lr
 8007bb2:	bf00      	nop

08007bb4 <VL53L1_i2c_encode_timing_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_TIMING_CONFIG_I2C_SIZE_BYTES > buf_size)
 8007bb4:	2916      	cmp	r1, #22
 8007bb6:	d93d      	bls.n	8007c34 <VL53L1_i2c_encode_timing_config+0x80>
		pdata->range_config__timeout_macrop_b_hi & 0xF;
	*(pbuffer +   8) =
		pdata->range_config__timeout_macrop_b_lo;
	*(pbuffer +   9) =
		pdata->range_config__vcsel_period_b & 0x3F;
	VL53L1_i2c_encode_uint16_t(
 8007bb8:	2102      	movs	r1, #2
{
 8007bba:	b538      	push	{r3, r4, r5, lr}
		pdata->mm_config__timeout_macrop_a_hi & 0xF;
 8007bbc:	7803      	ldrb	r3, [r0, #0]
 8007bbe:	4614      	mov	r4, r2
 8007bc0:	4605      	mov	r5, r0
	VL53L1_i2c_encode_uint16_t(
 8007bc2:	320a      	adds	r2, #10
		pdata->mm_config__timeout_macrop_a_hi & 0xF;
 8007bc4:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   0) =
 8007bc8:	7023      	strb	r3, [r4, #0]
		pdata->mm_config__timeout_macrop_a_lo;
 8007bca:	7843      	ldrb	r3, [r0, #1]
	*(pbuffer +   1) =
 8007bcc:	7063      	strb	r3, [r4, #1]
		pdata->mm_config__timeout_macrop_b_hi & 0xF;
 8007bce:	7883      	ldrb	r3, [r0, #2]
 8007bd0:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   2) =
 8007bd4:	70a3      	strb	r3, [r4, #2]
		pdata->mm_config__timeout_macrop_b_lo;
 8007bd6:	78c3      	ldrb	r3, [r0, #3]
	*(pbuffer +   3) =
 8007bd8:	70e3      	strb	r3, [r4, #3]
		pdata->range_config__timeout_macrop_a_hi & 0xF;
 8007bda:	7903      	ldrb	r3, [r0, #4]
 8007bdc:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   4) =
 8007be0:	7123      	strb	r3, [r4, #4]
		pdata->range_config__timeout_macrop_a_lo;
 8007be2:	7943      	ldrb	r3, [r0, #5]
	*(pbuffer +   5) =
 8007be4:	7163      	strb	r3, [r4, #5]
		pdata->range_config__vcsel_period_a & 0x3F;
 8007be6:	7983      	ldrb	r3, [r0, #6]
 8007be8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   6) =
 8007bec:	71a3      	strb	r3, [r4, #6]
		pdata->range_config__timeout_macrop_b_hi & 0xF;
 8007bee:	79c3      	ldrb	r3, [r0, #7]
 8007bf0:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +   7) =
 8007bf4:	71e3      	strb	r3, [r4, #7]
		pdata->range_config__timeout_macrop_b_lo;
 8007bf6:	7a03      	ldrb	r3, [r0, #8]
	*(pbuffer +   8) =
 8007bf8:	7223      	strb	r3, [r4, #8]
		pdata->range_config__vcsel_period_b & 0x3F;
 8007bfa:	7a43      	ldrb	r3, [r0, #9]
 8007bfc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	*(pbuffer +   9) =
 8007c00:	7263      	strb	r3, [r4, #9]
	VL53L1_i2c_encode_uint16_t(
 8007c02:	8940      	ldrh	r0, [r0, #10]
 8007c04:	f7ff fc58 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->range_config__sigma_thresh,
		2,
		pbuffer +  10);
	VL53L1_i2c_encode_uint16_t(
 8007c08:	f104 020c 	add.w	r2, r4, #12
 8007c0c:	89a8      	ldrh	r0, [r5, #12]
 8007c0e:	2102      	movs	r1, #2
 8007c10:	f7ff fc52 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->range_config__min_count_rate_rtn_limit_mcps,
		2,
		pbuffer +  12);
	*(pbuffer +  14) =
		pdata->range_config__valid_phase_low;
 8007c14:	7bab      	ldrb	r3, [r5, #14]
	*(pbuffer +  15) =
		pdata->range_config__valid_phase_high;
	VL53L1_i2c_encode_uint32_t(
 8007c16:	f104 0212 	add.w	r2, r4, #18
 8007c1a:	2104      	movs	r1, #4
	*(pbuffer +  14) =
 8007c1c:	73a3      	strb	r3, [r4, #14]
		pdata->range_config__valid_phase_high;
 8007c1e:	7beb      	ldrb	r3, [r5, #15]
	*(pbuffer +  15) =
 8007c20:	73e3      	strb	r3, [r4, #15]
	VL53L1_i2c_encode_uint32_t(
 8007c22:	6928      	ldr	r0, [r5, #16]
 8007c24:	f7ff fc8c 	bl	8007540 <VL53L1_i2c_encode_uint32_t>
		pdata->system__intermeasurement_period,
		4,
		pbuffer +  18);
	*(pbuffer +  22) =
		pdata->system__fractional_enable & 0x1;
 8007c28:	7d2b      	ldrb	r3, [r5, #20]
	LOG_FUNCTION_END(status);


	return status;
 8007c2a:	2000      	movs	r0, #0
		pdata->system__fractional_enable & 0x1;
 8007c2c:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +  22) =
 8007c30:	75a3      	strb	r3, [r4, #22]
}
 8007c32:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007c34:	f06f 0009 	mvn.w	r0, #9
}
 8007c38:	4770      	bx	lr
 8007c3a:	bf00      	nop

08007c3c <VL53L1_i2c_encode_dynamic_config>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_DYNAMIC_CONFIG_I2C_SIZE_BYTES > buf_size)
 8007c3c:	2911      	cmp	r1, #17
 8007c3e:	d93c      	bls.n	8007cba <VL53L1_i2c_encode_dynamic_config+0x7e>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	*(pbuffer +   0) =
		pdata->system__grouped_parameter_hold_0 & 0x3;
	VL53L1_i2c_encode_uint16_t(
 8007c40:	2102      	movs	r1, #2
{
 8007c42:	b538      	push	{r3, r4, r5, lr}
		pdata->system__grouped_parameter_hold_0 & 0x3;
 8007c44:	7803      	ldrb	r3, [r0, #0]
 8007c46:	4615      	mov	r5, r2
 8007c48:	4604      	mov	r4, r0
 8007c4a:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +   0) =
 8007c4e:	f802 3b01 	strb.w	r3, [r2], #1
	VL53L1_i2c_encode_uint16_t(
 8007c52:	8840      	ldrh	r0, [r0, #2]
 8007c54:	f7ff fc30 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_high,
		2,
		pbuffer +   1);
	VL53L1_i2c_encode_uint16_t(
 8007c58:	88a0      	ldrh	r0, [r4, #4]
 8007c5a:	1cea      	adds	r2, r5, #3
 8007c5c:	2102      	movs	r1, #2
 8007c5e:	f7ff fc2b 	bl	80074b8 <VL53L1_i2c_encode_uint16_t>
		pdata->system__thresh_low,
		2,
		pbuffer +   3);
	*(pbuffer +   5) =
		pdata->system__enable_xtalk_per_quadrant & 0x1;
 8007c62:	79a3      	ldrb	r3, [r4, #6]
	*(pbuffer +  17) =
		pdata->system__grouped_parameter_hold & 0x3;
	LOG_FUNCTION_END(status);


	return status;
 8007c64:	2000      	movs	r0, #0
		pdata->system__enable_xtalk_per_quadrant & 0x1;
 8007c66:	f003 0301 	and.w	r3, r3, #1
	*(pbuffer +   5) =
 8007c6a:	716b      	strb	r3, [r5, #5]
		pdata->system__seed_config & 0x7;
 8007c6c:	79e3      	ldrb	r3, [r4, #7]
 8007c6e:	f003 0307 	and.w	r3, r3, #7
	*(pbuffer +   6) =
 8007c72:	71ab      	strb	r3, [r5, #6]
		pdata->sd_config__woi_sd0;
 8007c74:	7a23      	ldrb	r3, [r4, #8]
	*(pbuffer +   7) =
 8007c76:	71eb      	strb	r3, [r5, #7]
		pdata->sd_config__woi_sd1;
 8007c78:	7a63      	ldrb	r3, [r4, #9]
	*(pbuffer +   8) =
 8007c7a:	722b      	strb	r3, [r5, #8]
		pdata->sd_config__initial_phase_sd0 & 0x7F;
 8007c7c:	7aa3      	ldrb	r3, [r4, #10]
 8007c7e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +   9) =
 8007c82:	726b      	strb	r3, [r5, #9]
		pdata->sd_config__initial_phase_sd1 & 0x7F;
 8007c84:	7ae3      	ldrb	r3, [r4, #11]
 8007c86:	f003 037f 	and.w	r3, r3, #127	; 0x7f
	*(pbuffer +  10) =
 8007c8a:	72ab      	strb	r3, [r5, #10]
		pdata->system__grouped_parameter_hold_1 & 0x3;
 8007c8c:	7b23      	ldrb	r3, [r4, #12]
 8007c8e:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  11) =
 8007c92:	72eb      	strb	r3, [r5, #11]
		pdata->sd_config__first_order_select & 0x3;
 8007c94:	7b63      	ldrb	r3, [r4, #13]
 8007c96:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  12) =
 8007c9a:	732b      	strb	r3, [r5, #12]
		pdata->sd_config__quantifier & 0xF;
 8007c9c:	7ba3      	ldrb	r3, [r4, #14]
 8007c9e:	f003 030f 	and.w	r3, r3, #15
	*(pbuffer +  13) =
 8007ca2:	736b      	strb	r3, [r5, #13]
		pdata->roi_config__user_roi_centre_spad;
 8007ca4:	7be3      	ldrb	r3, [r4, #15]
	*(pbuffer +  14) =
 8007ca6:	73ab      	strb	r3, [r5, #14]
		pdata->roi_config__user_roi_requested_global_xy_size;
 8007ca8:	7c23      	ldrb	r3, [r4, #16]
	*(pbuffer +  15) =
 8007caa:	73eb      	strb	r3, [r5, #15]
		pdata->system__sequence_config;
 8007cac:	7c63      	ldrb	r3, [r4, #17]
	*(pbuffer +  16) =
 8007cae:	742b      	strb	r3, [r5, #16]
		pdata->system__grouped_parameter_hold & 0x3;
 8007cb0:	7ca3      	ldrb	r3, [r4, #18]
 8007cb2:	f003 0303 	and.w	r3, r3, #3
	*(pbuffer +  17) =
 8007cb6:	746b      	strb	r3, [r5, #17]
}
 8007cb8:	bd38      	pop	{r3, r4, r5, pc}
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007cba:	f06f 0009 	mvn.w	r0, #9
}
 8007cbe:	4770      	bx	lr

08007cc0 <VL53L1_i2c_encode_system_control>:

	VL53L1_Error status = VL53L1_ERROR_NONE;

	LOG_FUNCTION_START("");

	if (VL53L1_SYSTEM_CONTROL_I2C_SIZE_BYTES > buf_size)
 8007cc0:	2904      	cmp	r1, #4
{
 8007cc2:	4603      	mov	r3, r0
	if (VL53L1_SYSTEM_CONTROL_I2C_SIZE_BYTES > buf_size)
 8007cc4:	d913      	bls.n	8007cee <VL53L1_i2c_encode_system_control+0x2e>
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;

	*(pbuffer +   0) =
		pdata->power_management__go1_power_force & 0x1;
 8007cc6:	7801      	ldrb	r1, [r0, #0]
	*(pbuffer +   4) =
		pdata->system__mode_start;
	LOG_FUNCTION_END(status);


	return status;
 8007cc8:	2000      	movs	r0, #0
		pdata->power_management__go1_power_force & 0x1;
 8007cca:	f001 0101 	and.w	r1, r1, #1
	*(pbuffer +   0) =
 8007cce:	7011      	strb	r1, [r2, #0]
		pdata->system__stream_count_ctrl & 0x1;
 8007cd0:	7859      	ldrb	r1, [r3, #1]
 8007cd2:	f001 0101 	and.w	r1, r1, #1
	*(pbuffer +   1) =
 8007cd6:	7051      	strb	r1, [r2, #1]
		pdata->firmware__enable & 0x1;
 8007cd8:	7899      	ldrb	r1, [r3, #2]
 8007cda:	f001 0101 	and.w	r1, r1, #1
	*(pbuffer +   2) =
 8007cde:	7091      	strb	r1, [r2, #2]
		pdata->system__interrupt_clear & 0x3;
 8007ce0:	78d9      	ldrb	r1, [r3, #3]
 8007ce2:	f001 0103 	and.w	r1, r1, #3
	*(pbuffer +   3) =
 8007ce6:	70d1      	strb	r1, [r2, #3]
		pdata->system__mode_start;
 8007ce8:	791b      	ldrb	r3, [r3, #4]
	*(pbuffer +   4) =
 8007cea:	7113      	strb	r3, [r2, #4]
	return status;
 8007cec:	4770      	bx	lr
		return VL53L1_ERROR_COMMS_BUFFER_TOO_SMALL;
 8007cee:	f06f 0009 	mvn.w	r0, #9
}
 8007cf2:	4770      	bx	lr

08007cf4 <VL53L1_get_nvm_copy_data>:


VL53L1_Error VL53L1_get_nvm_copy_data(
	VL53L1_DEV                 Dev,
	VL53L1_nvm_copy_data_t    *pdata)
{
 8007cf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007cf8:	b08e      	sub	sp, #56	; 0x38
 8007cfa:	460c      	mov	r4, r1
	uint8_t comms_buffer[VL53L1_NVM_COPY_DATA_I2C_SIZE_BYTES];

	LOG_FUNCTION_START("");

	if (status == VL53L1_ERROR_NONE) /*lint !e774 always true*/
		status = VL53L1_ReadMulti(
 8007cfc:	2331      	movs	r3, #49	; 0x31
 8007cfe:	f240 110f 	movw	r1, #271	; 0x10f
 8007d02:	aa01      	add	r2, sp, #4
 8007d04:	f000 f8bc 	bl	8007e80 <VL53L1_ReadMulti>
			Dev,
			VL53L1_IDENTIFICATION__MODEL_ID,
			comms_buffer,
			VL53L1_NVM_COPY_DATA_I2C_SIZE_BYTES);

	if (status == VL53L1_ERROR_NONE)
 8007d08:	4605      	mov	r5, r0
 8007d0a:	2800      	cmp	r0, #0
 8007d0c:	d16c      	bne.n	8007de8 <VL53L1_get_nvm_copy_data+0xf4>
	pdata->identification__model_id =
 8007d0e:	f89d 6004 	ldrb.w	r6, [sp, #4]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   3));
 8007d12:	f10d 0107 	add.w	r1, sp, #7
	pdata->identification__module_type =
 8007d16:	f89d 2005 	ldrb.w	r2, [sp, #5]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   3));
 8007d1a:	2002      	movs	r0, #2
	pdata->identification__revision_id =
 8007d1c:	f89d 3006 	ldrb.w	r3, [sp, #6]
	pdata->identification__model_id =
 8007d20:	7026      	strb	r6, [r4, #0]
	pdata->identification__module_type =
 8007d22:	7062      	strb	r2, [r4, #1]
	pdata->identification__revision_id =
 8007d24:	70a3      	strb	r3, [r4, #2]
		(VL53L1_i2c_decode_uint16_t(2, pbuffer +   3));
 8007d26:	f7ff fbd9 	bl	80074dc <VL53L1_i2c_decode_uint16_t>
		(*(pbuffer +   6)) & 0x7;
 8007d2a:	f89d 900a 	ldrb.w	r9, [sp, #10]
		(*(pbuffer +   5)) & 0x7F;
 8007d2e:	f89d a009 	ldrb.w	sl, [sp, #9]
		(*(pbuffer +   7)) & 0x7;
 8007d32:	f89d 800b 	ldrb.w	r8, [sp, #11]
		(*(pbuffer +   6)) & 0x7;
 8007d36:	f009 0907 	and.w	r9, r9, #7
		(*(pbuffer +   8)) & 0x3F;
 8007d3a:	f89d e00c 	ldrb.w	lr, [sp, #12]
		(*(pbuffer +   5)) & 0x7F;
 8007d3e:	f00a 0a7f 	and.w	sl, sl, #127	; 0x7f
		(*(pbuffer +   9)) & 0x3F;
 8007d42:	f89d c00d 	ldrb.w	ip, [sp, #13]
		(*(pbuffer +   7)) & 0x7;
 8007d46:	f008 0807 	and.w	r8, r8, #7
		(*(pbuffer +  10)) & 0x1;
 8007d4a:	f89d 700e 	ldrb.w	r7, [sp, #14]
		(*(pbuffer +   8)) & 0x3F;
 8007d4e:	f00e 0e3f 	and.w	lr, lr, #63	; 0x3f
		(*(pbuffer +  11)) & 0x7F;
 8007d52:	f89d 600f 	ldrb.w	r6, [sp, #15]
		(*(pbuffer +   9)) & 0x3F;
 8007d56:	f00c 0c3f 	and.w	ip, ip, #63	; 0x3f
		(*(pbuffer +  12)) & 0x1;
 8007d5a:	f89d 1010 	ldrb.w	r1, [sp, #16]
		(*(pbuffer +  10)) & 0x1;
 8007d5e:	f007 0701 	and.w	r7, r7, #1
		(*(pbuffer +  13)) & 0x3F;
 8007d62:	f89d 2011 	ldrb.w	r2, [sp, #17]
		(*(pbuffer +  11)) & 0x7F;
 8007d66:	f006 067f 	and.w	r6, r6, #127	; 0x7f
		(*(pbuffer +  14)) & 0x3F;
 8007d6a:	f89d 3012 	ldrb.w	r3, [sp, #18]
		(*(pbuffer +  12)) & 0x1;
 8007d6e:	f001 0101 	and.w	r1, r1, #1
		(*(pbuffer +  13)) & 0x3F;
 8007d72:	f002 023f 	and.w	r2, r2, #63	; 0x3f
	pdata->identification__module_id =
 8007d76:	80a0      	strh	r0, [r4, #4]
		(*(pbuffer +  14)) & 0x3F;
 8007d78:	f003 033f 	and.w	r3, r3, #63	; 0x3f
	pdata->global_config__spad_enables_rtn_1 =
 8007d7c:	f89d 0014 	ldrb.w	r0, [sp, #20]
	pdata->ana_config__fast_osc__freq_set =
 8007d80:	f884 9007 	strb.w	r9, [r4, #7]
	pdata->global_config__spad_enables_rtn_0 =
 8007d84:	f89d 9013 	ldrb.w	r9, [sp, #19]
	pdata->ana_config__vcsel_selion =
 8007d88:	f884 e009 	strb.w	lr, [r4, #9]
	pdata->protected_laser_safety__lock_bit =
 8007d8c:	72e7      	strb	r7, [r4, #11]
	pdata->laser_safety__key =
 8007d8e:	7326      	strb	r6, [r4, #12]
	pdata->laser_safety__key_ro =
 8007d90:	7361      	strb	r1, [r4, #13]
	pdata->laser_safety__clip =
 8007d92:	73a2      	strb	r2, [r4, #14]
	pdata->laser_safety__mult =
 8007d94:	73e3      	strb	r3, [r4, #15]
	pdata->global_config__spad_enables_rtn_1 =
 8007d96:	7460      	strb	r0, [r4, #17]
	pdata->global_config__spad_enables_rtn_2 =
 8007d98:	f8dd e019 	ldr.w	lr, [sp, #25]
 8007d9c:	f8dd 701d 	ldr.w	r7, [sp, #29]
 8007da0:	f8dd 6021 	ldr.w	r6, [sp, #33]	; 0x21
 8007da4:	f8dd 0025 	ldr.w	r0, [sp, #37]	; 0x25
 8007da8:	f8dd 1029 	ldr.w	r1, [sp, #41]	; 0x29
 8007dac:	f8dd 202d 	ldr.w	r2, [sp, #45]	; 0x2d
 8007db0:	f8dd 3031 	ldr.w	r3, [sp, #49]	; 0x31
	pdata->ana_config__fast_osc__trim_max =
 8007db4:	f884 a006 	strb.w	sl, [r4, #6]
	pdata->ana_config__vcsel_trim =
 8007db8:	f884 8008 	strb.w	r8, [r4, #8]
	pdata->ana_config__vcsel_selion_max =
 8007dbc:	f884 c00a 	strb.w	ip, [r4, #10]
	pdata->global_config__spad_enables_rtn_0 =
 8007dc0:	f884 9010 	strb.w	r9, [r4, #16]
	pdata->global_config__spad_enables_rtn_2 =
 8007dc4:	f8dd c015 	ldr.w	ip, [sp, #21]
 8007dc8:	f8c4 e016 	str.w	lr, [r4, #22]
 8007dcc:	f8c4 c012 	str.w	ip, [r4, #18]
 8007dd0:	f8c4 701a 	str.w	r7, [r4, #26]
 8007dd4:	f8c4 601e 	str.w	r6, [r4, #30]
 8007dd8:	f8c4 0022 	str.w	r0, [r4, #34]	; 0x22
 8007ddc:	f8c4 1026 	str.w	r1, [r4, #38]	; 0x26
 8007de0:	f8c4 202a 	str.w	r2, [r4, #42]	; 0x2a
 8007de4:	f8c4 302e 	str.w	r3, [r4, #46]	; 0x2e
			pdata);

	LOG_FUNCTION_END(status);

	return status;
}
 8007de8:	4628      	mov	r0, r5
 8007dea:	b00e      	add	sp, #56	; 0x38
 8007dec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08007df0 <VL53L1_poll_for_boot_completion>:


VL53L1_Error VL53L1_poll_for_boot_completion(
	VL53L1_DEV    Dev,
	uint32_t      timeout_ms)
{
 8007df0:	b570      	push	{r4, r5, r6, lr}
 8007df2:	460e      	mov	r6, r1
 8007df4:	b082      	sub	sp, #8
	 * it copies the NVM data into the G02 host register banks
	 * The host must wait the required time to allow the copy
	 * to complete before attempting to read the firmware status
	 */

	status = VL53L1_WaitUs(
 8007df6:	f44f 6196 	mov.w	r1, #1200	; 0x4b0
{
 8007dfa:	4605      	mov	r5, r0
	status = VL53L1_WaitUs(
 8007dfc:	f000 f8be 	bl	8007f7c <VL53L1_WaitUs>
			Dev,
			VL53L1_FIRMWARE_BOOT_TIME_US);

	if (status == VL53L1_ERROR_NONE)
 8007e00:	4604      	mov	r4, r0
 8007e02:	b110      	cbz	r0, 8007e0a <VL53L1_poll_for_boot_completion+0x1a>
		VL53L1_init_ll_driver_state(Dev, VL53L1_DEVICESTATE_SW_STANDBY);

	LOG_FUNCTION_END(status);

	return status;
}
 8007e04:	4620      	mov	r0, r4
 8007e06:	b002      	add	sp, #8
 8007e08:	bd70      	pop	{r4, r5, r6, pc}
		status =
 8007e0a:	2401      	movs	r4, #1
 8007e0c:	4631      	mov	r1, r6
 8007e0e:	22e5      	movs	r2, #229	; 0xe5
 8007e10:	4628      	mov	r0, r5
 8007e12:	9401      	str	r4, [sp, #4]
 8007e14:	4623      	mov	r3, r4
 8007e16:	9400      	str	r4, [sp, #0]
 8007e18:	f000 f8be 	bl	8007f98 <VL53L1_WaitValueMaskEx>
	if (status == VL53L1_ERROR_NONE)
 8007e1c:	4604      	mov	r4, r0
 8007e1e:	2800      	cmp	r0, #0
 8007e20:	d1f0      	bne.n	8007e04 <VL53L1_poll_for_boot_completion+0x14>
		VL53L1_init_ll_driver_state(Dev, VL53L1_DEVICESTATE_SW_STANDBY);
 8007e22:	4628      	mov	r0, r5
 8007e24:	2103      	movs	r1, #3
 8007e26:	f7ff fa5d 	bl	80072e4 <VL53L1_init_ll_driver_state>
}
 8007e2a:	4620      	mov	r0, r4
 8007e2c:	b002      	add	sp, #8
 8007e2e:	bd70      	pop	{r4, r5, r6, pc}

08007e30 <VL53L1_WriteMulti>:
}

VL53L1_Error VL53L1_WriteMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
    int status_int;
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    if (count > sizeof(_I2CBuffer) - 1) {
 8007e30:	2bff      	cmp	r3, #255	; 0xff
 8007e32:	d81f      	bhi.n	8007e74 <VL53L1_WriteMulti+0x44>
VL53L1_Error VL53L1_WriteMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8007e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e36:	460e      	mov	r6, r1
        return VL53L1_ERROR_INVALID_PARAMS;
    }
    _I2CBuffer[0] = index>>8;
 8007e38:	4f10      	ldr	r7, [pc, #64]	; (8007e7c <VL53L1_WriteMulti+0x4c>)
 8007e3a:	461c      	mov	r4, r3
VL53L1_Error VL53L1_WriteMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8007e3c:	b083      	sub	sp, #12
    _I2CBuffer[0] = index>>8;
 8007e3e:	0a33      	lsrs	r3, r6, #8
 8007e40:	4605      	mov	r5, r0
 8007e42:	4611      	mov	r1, r2
    _I2CBuffer[1] = index&0xFF;
    memcpy(&_I2CBuffer[2], pdata, count);
 8007e44:	1cb8      	adds	r0, r7, #2
 8007e46:	4622      	mov	r2, r4
    _I2CBuffer[0] = index>>8;
 8007e48:	703b      	strb	r3, [r7, #0]
    _I2CBuffer[1] = index&0xFF;
 8007e4a:	707e      	strb	r6, [r7, #1]
    memcpy(&_I2CBuffer[2], pdata, count);
 8007e4c:	f012 fa49 	bl	801a2e2 <memcpy>
    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, count + 2);
 8007e50:	1ca3      	adds	r3, r4, #2
    int i2c_time_out = I2C_TIME_OUT_BASE+ count* I2C_TIME_OUT_BYTE;
 8007e52:	340c      	adds	r4, #12
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007e54:	f895 1398 	ldrb.w	r1, [r5, #920]	; 0x398
 8007e58:	463a      	mov	r2, r7
 8007e5a:	f8d5 03a0 	ldr.w	r0, [r5, #928]	; 0x3a0
 8007e5e:	b29b      	uxth	r3, r3
 8007e60:	9400      	str	r4, [sp, #0]
 8007e62:	f7f9 ff53 	bl	8001d0c <HAL_I2C_Master_Transmit>
    if (status_int != 0) {
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 8007e66:	2800      	cmp	r0, #0
 8007e68:	bf0c      	ite	eq
 8007e6a:	2000      	moveq	r0, #0
 8007e6c:	f06f 000c 	mvnne.w	r0, #12
    }
    VL53L1_PutI2cBus();
    return Status;
}
 8007e70:	b003      	add	sp, #12
 8007e72:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return VL53L1_ERROR_INVALID_PARAMS;
 8007e74:	f06f 0003 	mvn.w	r0, #3
}
 8007e78:	4770      	bx	lr
 8007e7a:	bf00      	nop
 8007e7c:	20019794 	.word	0x20019794

08007e80 <VL53L1_ReadMulti>:

// the ranging_sensor_comms.dll will take care of the page selection
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8007e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007e84:	460e      	mov	r6, r1
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    int32_t status_int;

    _I2CBuffer[0] = index>>8;
 8007e86:	4d15      	ldr	r5, [pc, #84]	; (8007edc <VL53L1_ReadMulti+0x5c>)
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8007e88:	b082      	sub	sp, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007e8a:	f04f 0e0c 	mov.w	lr, #12
    _I2CBuffer[0] = index>>8;
 8007e8e:	ea4f 2c16 	mov.w	ip, r6, lsr #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007e92:	f890 1398 	ldrb.w	r1, [r0, #920]	; 0x398
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8007e96:	4604      	mov	r4, r0
 8007e98:	4690      	mov	r8, r2
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007e9a:	f8d0 03a0 	ldr.w	r0, [r0, #928]	; 0x3a0
VL53L1_Error VL53L1_ReadMulti(VL53L1_DEV Dev, uint16_t index, uint8_t *pdata, uint32_t count) {
 8007e9e:	461f      	mov	r7, r3
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007ea0:	f8cd e000 	str.w	lr, [sp]
 8007ea4:	462a      	mov	r2, r5
 8007ea6:	2302      	movs	r3, #2
    _I2CBuffer[0] = index>>8;
 8007ea8:	f885 c000 	strb.w	ip, [r5]
    _I2CBuffer[1] = index&0xFF;
 8007eac:	706e      	strb	r6, [r5, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007eae:	f7f9 ff2d 	bl	8001d0c <HAL_I2C_Master_Transmit>
    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, 2);
    if (status_int != 0) {
 8007eb2:	b980      	cbnz	r0, 8007ed6 <VL53L1_ReadMulti+0x56>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8007eb4:	f894 1398 	ldrb.w	r1, [r4, #920]	; 0x398
    int i2c_time_out = I2C_TIME_OUT_BASE+ count* I2C_TIME_OUT_BYTE;
 8007eb8:	f107 030a 	add.w	r3, r7, #10
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8007ebc:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8007ec0:	4642      	mov	r2, r8
 8007ec2:	9300      	str	r3, [sp, #0]
 8007ec4:	f041 0101 	orr.w	r1, r1, #1
 8007ec8:	b2bb      	uxth	r3, r7
 8007eca:	f7f9 ffef 	bl	8001eac <HAL_I2C_Master_Receive>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
        goto done;
    }
    status_int = _I2CRead(Dev, pdata, count);
    if (status_int != 0) {
 8007ece:	b910      	cbnz	r0, 8007ed6 <VL53L1_ReadMulti+0x56>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
    }
done:
    VL53L1_PutI2cBus();
    return Status;
}
 8007ed0:	b002      	add	sp, #8
 8007ed2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 8007ed6:	f06f 000c 	mvn.w	r0, #12
 8007eda:	e7f9      	b.n	8007ed0 <VL53L1_ReadMulti+0x50>
 8007edc:	20019794 	.word	0x20019794

08007ee0 <VL53L1_WrByte>:

VL53L1_Error VL53L1_WrByte(VL53L1_DEV Dev, uint16_t index, uint8_t data) {
 8007ee0:	b570      	push	{r4, r5, r6, lr}
 8007ee2:	460d      	mov	r5, r1
 8007ee4:	b082      	sub	sp, #8
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    int32_t status_int;

    _I2CBuffer[0] = index>>8;
 8007ee6:	4c0b      	ldr	r4, [pc, #44]	; (8007f14 <VL53L1_WrByte+0x34>)
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007ee8:	230d      	movs	r3, #13
    _I2CBuffer[0] = index>>8;
 8007eea:	0a2e      	lsrs	r6, r5, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007eec:	f890 1398 	ldrb.w	r1, [r0, #920]	; 0x398
    _I2CBuffer[1] = index&0xFF;
    _I2CBuffer[2] = data;
 8007ef0:	70a2      	strb	r2, [r4, #2]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007ef2:	4622      	mov	r2, r4
 8007ef4:	f8d0 03a0 	ldr.w	r0, [r0, #928]	; 0x3a0
 8007ef8:	9300      	str	r3, [sp, #0]
 8007efa:	2303      	movs	r3, #3
    _I2CBuffer[0] = index>>8;
 8007efc:	7026      	strb	r6, [r4, #0]
    _I2CBuffer[1] = index&0xFF;
 8007efe:	7065      	strb	r5, [r4, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007f00:	f7f9 ff04 	bl	8001d0c <HAL_I2C_Master_Transmit>

    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, 3);
    if (status_int != 0) {
 8007f04:	2800      	cmp	r0, #0
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
    }
    VL53L1_PutI2cBus();
    return Status;
}
 8007f06:	bf14      	ite	ne
 8007f08:	f06f 000c 	mvnne.w	r0, #12
 8007f0c:	2000      	moveq	r0, #0
 8007f0e:	b002      	add	sp, #8
 8007f10:	bd70      	pop	{r4, r5, r6, pc}
 8007f12:	bf00      	nop
 8007f14:	20019794 	.word	0x20019794

08007f18 <VL53L1_RdWord>:
done:
    VL53L1_PutI2cBus();
    return Status;
}

VL53L1_Error VL53L1_RdWord(VL53L1_DEV Dev, uint16_t index, uint16_t *data) {
 8007f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f1c:	460e      	mov	r6, r1
    VL53L1_Error Status = VL53L1_ERROR_NONE;
    int32_t status_int;

    _I2CBuffer[0] = index>>8;
 8007f1e:	4c16      	ldr	r4, [pc, #88]	; (8007f78 <VL53L1_RdWord+0x60>)
VL53L1_Error VL53L1_RdWord(VL53L1_DEV Dev, uint16_t index, uint16_t *data) {
 8007f20:	b082      	sub	sp, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007f22:	f04f 080c 	mov.w	r8, #12
    _I2CBuffer[0] = index>>8;
 8007f26:	0a33      	lsrs	r3, r6, #8
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007f28:	f890 1398 	ldrb.w	r1, [r0, #920]	; 0x398
VL53L1_Error VL53L1_RdWord(VL53L1_DEV Dev, uint16_t index, uint16_t *data) {
 8007f2c:	4605      	mov	r5, r0
 8007f2e:	4617      	mov	r7, r2
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007f30:	f8d0 03a0 	ldr.w	r0, [r0, #928]	; 0x3a0
 8007f34:	4622      	mov	r2, r4
    _I2CBuffer[0] = index>>8;
 8007f36:	7023      	strb	r3, [r4, #0]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007f38:	2302      	movs	r3, #2
 8007f3a:	f8cd 8000 	str.w	r8, [sp]
	_I2CBuffer[1] = index&0xFF;
 8007f3e:	7066      	strb	r6, [r4, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007f40:	f7f9 fee4 	bl	8001d0c <HAL_I2C_Master_Transmit>
    VL53L1_GetI2cBus();
    status_int = _I2CWrite(Dev, _I2CBuffer, 2);

    if( status_int ){
 8007f44:	b9a0      	cbnz	r0, 8007f70 <VL53L1_RdWord+0x58>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8007f46:	f895 1398 	ldrb.w	r1, [r5, #920]	; 0x398
 8007f4a:	2302      	movs	r3, #2
 8007f4c:	f8d5 03a0 	ldr.w	r0, [r5, #928]	; 0x3a0
 8007f50:	4622      	mov	r2, r4
 8007f52:	f8cd 8000 	str.w	r8, [sp]
 8007f56:	f041 0101 	orr.w	r1, r1, #1
 8007f5a:	f7f9 ffa7 	bl	8001eac <HAL_I2C_Master_Receive>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
        goto done;
    }
    status_int = _I2CRead(Dev, _I2CBuffer, 2);
    if (status_int != 0) {
 8007f5e:	b938      	cbnz	r0, 8007f70 <VL53L1_RdWord+0x58>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
        goto done;
    }

    *data = ((uint16_t)_I2CBuffer[0]<<8) + (uint16_t)_I2CBuffer[1];
 8007f60:	7822      	ldrb	r2, [r4, #0]
 8007f62:	7863      	ldrb	r3, [r4, #1]
 8007f64:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8007f68:	803b      	strh	r3, [r7, #0]
done:
    VL53L1_PutI2cBus();
    return Status;
}
 8007f6a:	b002      	add	sp, #8
 8007f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 8007f70:	f06f 000c 	mvn.w	r0, #12
 8007f74:	e7f9      	b.n	8007f6a <VL53L1_RdWord+0x52>
 8007f76:	bf00      	nop
 8007f78:	20019794 	.word	0x20019794

08007f7c <VL53L1_WaitUs>:
	(void)pdev;
	HAL_Delay(wait_ms);
    return VL53L1_ERROR_NONE;
}

VL53L1_Error VL53L1_WaitUs(VL53L1_Dev_t *pdev, int32_t wait_us){
 8007f7c:	b508      	push	{r3, lr}
	(void)pdev;
	HAL_Delay(wait_us/1000);
 8007f7e:	4b05      	ldr	r3, [pc, #20]	; (8007f94 <VL53L1_WaitUs+0x18>)
 8007f80:	17c8      	asrs	r0, r1, #31
 8007f82:	fb83 3101 	smull	r3, r1, r3, r1
 8007f86:	ebc0 10a1 	rsb	r0, r0, r1, asr #6
 8007f8a:	f7f8 ffa1 	bl	8000ed0 <HAL_Delay>
    return VL53L1_ERROR_NONE;
}
 8007f8e:	2000      	movs	r0, #0
 8007f90:	bd08      	pop	{r3, pc}
 8007f92:	bf00      	nop
 8007f94:	10624dd3 	.word	0x10624dd3

08007f98 <VL53L1_WaitValueMaskEx>:
	uint32_t      timeout_ms,
	uint16_t      index,
	uint8_t       value,
	uint8_t       mask,
	uint32_t      poll_delay_ms)
{
 8007f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f9c:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
 8007fa0:	460e      	mov	r6, r1

	VL53L1_Error status         = VL53L1_ERROR_NONE;
	uint32_t     start_time_ms = 0;
	uint32_t     current_time_ms = 0;
	uint32_t     polling_time_ms = 0;
	uint8_t      byte_value      = 0;
 8007fa2:	2700      	movs	r7, #0
{
 8007fa4:	4615      	mov	r5, r2
 8007fa6:	4604      	mov	r4, r0
#ifdef PAL_EXTENDED
	VL53L1_get_register_name(
			index,
			register_name);
#else
	VL53L1_COPYSTRING(register_name, "");
 8007fa8:	f240 12ff 	movw	r2, #511	; 0x1ff
 8007fac:	4944      	ldr	r1, [pc, #272]	; (80080c0 <VL53L1_WaitValueMaskEx+0x128>)
 8007fae:	a804      	add	r0, sp, #16
	uint8_t      byte_value      = 0;
 8007fb0:	f88d 700f 	strb.w	r7, [sp, #15]
{
 8007fb4:	4699      	mov	r9, r3
 8007fb6:	f89d 8238 	ldrb.w	r8, [sp, #568]	; 0x238
 8007fba:	9f8f      	ldr	r7, [sp, #572]	; 0x23c
	VL53L1_COPYSTRING(register_name, "");
 8007fbc:	f012 f9e6 	bl	801a38c <strncpy>
	VL53L1_set_trace_functions(VL53L1_TRACE_FUNCTION_NONE);
#endif

	/* wait until value is found, timeout reached on error occurred */

	while ((status == VL53L1_ERROR_NONE) &&
 8007fc0:	2e00      	cmp	r6, #0
 8007fc2:	d064      	beq.n	800808e <VL53L1_WaitValueMaskEx+0xf6>
 8007fc4:	ea4f 2a15 	mov.w	sl, r5, lsr #8
 8007fc8:	4e3e      	ldr	r6, [pc, #248]	; (80080c4 <VL53L1_WaitValueMaskEx+0x12c>)
 8007fca:	b2ed      	uxtb	r5, r5
 8007fcc:	bbaf      	cbnz	r7, 800803a <VL53L1_WaitValueMaskEx+0xa2>
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007fce:	f04f 0b0c 	mov.w	fp, #12
 8007fd2:	4637      	mov	r7, r6
 8007fd4:	e010      	b.n	8007ff8 <VL53L1_WaitValueMaskEx+0x60>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8007fd6:	f894 c398 	ldrb.w	ip, [r4, #920]	; 0x398
 8007fda:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8007fde:	9100      	str	r1, [sp, #0]
 8007fe0:	ea4c 0103 	orr.w	r1, ip, r3
 8007fe4:	f7f9 ff62 	bl	8001eac <HAL_I2C_Master_Receive>
    if (status_int != 0) {
 8007fe8:	2800      	cmp	r0, #0
 8007fea:	d15b      	bne.n	80080a4 <VL53L1_WaitValueMaskEx+0x10c>
			status = VL53L1_RdByte(
							pdev,
							index,
							&byte_value);

		if ((byte_value & mask) == value)
 8007fec:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8007ff0:	ea08 0303 	and.w	r3, r8, r3
 8007ff4:	454b      	cmp	r3, r9
 8007ff6:	d01b      	beq.n	8008030 <VL53L1_WaitValueMaskEx+0x98>
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8007ff8:	f894 1398 	ldrb.w	r1, [r4, #920]	; 0x398
 8007ffc:	2302      	movs	r3, #2
 8007ffe:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8008002:	463a      	mov	r2, r7
 8008004:	f8cd b000 	str.w	fp, [sp]
	_I2CBuffer[0] = index>>8;
 8008008:	f886 a000 	strb.w	sl, [r6]
	_I2CBuffer[1] = index&0xFF;
 800800c:	7075      	strb	r5, [r6, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 800800e:	f7f9 fe7d 	bl	8001d0c <HAL_I2C_Master_Transmit>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8008012:	210b      	movs	r1, #11
 8008014:	2301      	movs	r3, #1
 8008016:	f10d 020f 	add.w	r2, sp, #15
    if( status_int ){
 800801a:	2800      	cmp	r0, #0
 800801c:	d0db      	beq.n	8007fd6 <VL53L1_WaitValueMaskEx+0x3e>
		if ((byte_value & mask) == value)
 800801e:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8008022:	ea08 0803 	and.w	r8, r8, r3
 8008026:	45c1      	cmp	r9, r8
 8008028:	d046      	beq.n	80080b8 <VL53L1_WaitValueMaskEx+0x120>
        Status = VL53L1_ERROR_CONTROL_INTERFACE;
 800802a:	f06f 000c 	mvn.w	r0, #12
 800802e:	e000      	b.n	8008032 <VL53L1_WaitValueMaskEx+0x9a>
	/* Restore function logging */
	VL53L1_set_trace_functions(trace_functions);
#endif

	if (found == 0 && status == VL53L1_ERROR_NONE)
		status = VL53L1_ERROR_TIME_OUT;
 8008030:	2000      	movs	r0, #0

	return status;
}
 8008032:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
 8008036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 800803a:	46b3      	mov	fp, r6
 800803c:	978f      	str	r7, [sp, #572]	; 0x23c
 800803e:	e012      	b.n	8008066 <VL53L1_WaitValueMaskEx+0xce>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8008040:	f894 c398 	ldrb.w	ip, [r4, #920]	; 0x398
 8008044:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8008048:	9100      	str	r1, [sp, #0]
 800804a:	ea4c 0103 	orr.w	r1, ip, r3
 800804e:	f7f9 ff2d 	bl	8001eac <HAL_I2C_Master_Receive>
    if (status_int != 0) {
 8008052:	bb38      	cbnz	r0, 80080a4 <VL53L1_WaitValueMaskEx+0x10c>
		if ((byte_value & mask) == value)
 8008054:	f89d 300f 	ldrb.w	r3, [sp, #15]
	HAL_Delay(wait_ms);
 8008058:	988f      	ldr	r0, [sp, #572]	; 0x23c
		if ((byte_value & mask) == value)
 800805a:	ea08 0303 	and.w	r3, r8, r3
 800805e:	4599      	cmp	r9, r3
 8008060:	d0e6      	beq.n	8008030 <VL53L1_WaitValueMaskEx+0x98>
	HAL_Delay(wait_ms);
 8008062:	f7f8 ff35 	bl	8000ed0 <HAL_Delay>
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 8008066:	270c      	movs	r7, #12
 8008068:	f894 1398 	ldrb.w	r1, [r4, #920]	; 0x398
 800806c:	2302      	movs	r3, #2
 800806e:	f8d4 03a0 	ldr.w	r0, [r4, #928]	; 0x3a0
 8008072:	465a      	mov	r2, fp
 8008074:	9700      	str	r7, [sp, #0]
	_I2CBuffer[0] = index>>8;
 8008076:	f886 a000 	strb.w	sl, [r6]
	_I2CBuffer[1] = index&0xFF;
 800807a:	7075      	strb	r5, [r6, #1]
    status = HAL_I2C_Master_Transmit(Dev->I2cHandle, Dev->I2cDevAddr, pdata, count, i2c_time_out);
 800807c:	f7f9 fe46 	bl	8001d0c <HAL_I2C_Master_Transmit>
    status = HAL_I2C_Master_Receive(Dev->I2cHandle, Dev->I2cDevAddr|1, pdata, count, i2c_time_out);
 8008080:	210b      	movs	r1, #11
 8008082:	2301      	movs	r3, #1
 8008084:	f10d 020f 	add.w	r2, sp, #15
    if( status_int ){
 8008088:	2800      	cmp	r0, #0
 800808a:	d0d9      	beq.n	8008040 <VL53L1_WaitValueMaskEx+0xa8>
 800808c:	e7c7      	b.n	800801e <VL53L1_WaitValueMaskEx+0x86>
	VL53L1_Error status         = VL53L1_ERROR_NONE;
 800808e:	4630      	mov	r0, r6
	if (found == 0 && status == VL53L1_ERROR_NONE)
 8008090:	4306      	orrs	r6, r0
 8008092:	b2f6      	uxtb	r6, r6
		status = VL53L1_ERROR_TIME_OUT;
 8008094:	2e00      	cmp	r6, #0
 8008096:	bf08      	it	eq
 8008098:	f06f 0006 	mvneq.w	r0, #6
}
 800809c:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
 80080a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if ((byte_value & mask) == value)
 80080a4:	f89d 300f 	ldrb.w	r3, [sp, #15]
 80080a8:	ea08 0803 	and.w	r8, r8, r3
 80080ac:	45c1      	cmp	r9, r8
 80080ae:	d0bc      	beq.n	800802a <VL53L1_WaitValueMaskEx+0x92>
 80080b0:	2600      	movs	r6, #0
 80080b2:	f06f 000c 	mvn.w	r0, #12
 80080b6:	e7eb      	b.n	8008090 <VL53L1_WaitValueMaskEx+0xf8>
			found = 1;
 80080b8:	2601      	movs	r6, #1
		if ((byte_value & mask) == value)
 80080ba:	f06f 000c 	mvn.w	r0, #12
 80080be:	e7e7      	b.n	8008090 <VL53L1_WaitValueMaskEx+0xf8>
 80080c0:	0801ae04 	.word	0x0801ae04
 80080c4:	20019794 	.word	0x20019794

080080c8 <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 80080c8:	b508      	push	{r3, lr}
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 80080ca:	4805      	ldr	r0, [pc, #20]	; (80080e0 <GUI_X_Config+0x18>)
 80080cc:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
 80080d0:	f00a fc74 	bl	80129bc <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 80080d4:	4803      	ldr	r0, [pc, #12]	; (80080e4 <GUI_X_Config+0x1c>)
}
 80080d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  GUI_SetDefaultFont(GUI_FONT_6X8);
 80080da:	f009 bfe1 	b.w	80120a0 <GUI_SetDefaultFont>
 80080de:	bf00      	nop
 80080e0:	20000420 	.word	0x20000420
 80080e4:	0801af4c 	.word	0x0801af4c

080080e8 <GUI_X_GetTime>:
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
  return OS_TimeMS; 
 80080e8:	4b01      	ldr	r3, [pc, #4]	; (80080f0 <GUI_X_GetTime+0x8>)
 80080ea:	6818      	ldr	r0, [r3, #0]
}
 80080ec:	4770      	bx	lr
 80080ee:	bf00      	nop
 80080f0:	20019894 	.word	0x20019894

080080f4 <GUI_X_Delay>:

void GUI_X_Delay(int ms) { 
  int tEnd = OS_TimeMS + ms;
 80080f4:	4a03      	ldr	r2, [pc, #12]	; (8008104 <GUI_X_Delay+0x10>)
 80080f6:	6813      	ldr	r3, [r2, #0]
 80080f8:	4418      	add	r0, r3
  while ((tEnd - OS_TimeMS) > 0);
 80080fa:	6813      	ldr	r3, [r2, #0]
 80080fc:	1ac3      	subs	r3, r0, r3
 80080fe:	2b00      	cmp	r3, #0
 8008100:	dcfb      	bgt.n	80080fa <GUI_X_Delay+0x6>
}
 8008102:	4770      	bx	lr
 8008104:	20019894 	.word	0x20019894

08008108 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8008108:	4770      	bx	lr
 800810a:	bf00      	nop

0800810c <GUI_TOUCH_X_ActivateX>:



void GUI_TOUCH_X_ActivateX(void)
{
}
 800810c:	4770      	bx	lr
 800810e:	bf00      	nop

08008110 <GUI_TOUCH_X_ActivateY>:
 8008110:	4770      	bx	lr
 8008112:	bf00      	nop

08008114 <GUI_TOUCH_X_MeasureX>:
void GUI_TOUCH_X_ActivateY(void)
{
}
int  GUI_TOUCH_X_MeasureX(void)
{
 8008114:	b508      	push	{r3, lr}
  return STMPE610_GetX_TOUCH_RAW();
 8008116:	f7fc fef1 	bl	8004efc <STMPE610_GetX_TOUCH_RAW>
}
 800811a:	bd08      	pop	{r3, pc}

0800811c <GUI_TOUCH_X_MeasureY>:
int  GUI_TOUCH_X_MeasureY(void)
{
 800811c:	b508      	push	{r3, lr}
  return STMPE610_GetY_TOUCH_RAW();
 800811e:	f7fc fef3 	bl	8004f08 <STMPE610_GetY_TOUCH_RAW>
}
 8008122:	bd08      	pop	{r3, pc}

08008124 <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 8008124:	b5f0      	push	{r4, r5, r6, r7, lr}
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 8008126:	2400      	movs	r4, #0
void LCD_X_Config(void) {
 8008128:	b0a3      	sub	sp, #140	; 0x8c
  GUI_PORT_API PortAPI = {0};
 800812a:	2268      	movs	r2, #104	; 0x68
  GUIDRV_FlexColor_Config(pDevice, &Config);
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = SSD1963_WriteCommand;
  PortAPI.pfWrite16_A1  = SSD1963_WriteData;
 800812c:	4f23      	ldr	r7, [pc, #140]	; (80081bc <LCD_X_Config+0x98>)
  GUI_PORT_API PortAPI = {0};
 800812e:	4621      	mov	r1, r4
 8008130:	a808      	add	r0, sp, #32
  CONFIG_FLEXCOLOR Config = {0};
 8008132:	9407      	str	r4, [sp, #28]
  PortAPI.pfWriteM16_A1 = SSD1963_WriteDataMultiple;
 8008134:	4e22      	ldr	r6, [pc, #136]	; (80081c0 <LCD_X_Config+0x9c>)
  CONFIG_FLEXCOLOR Config = {0};
 8008136:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800813a:	e9cd 4405 	strd	r4, r4, [sp, #20]
  GUI_PORT_API PortAPI = {0};
 800813e:	f012 f8f4 	bl	801a32a <memset>
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
 8008142:	4623      	mov	r3, r4
 8008144:	4622      	mov	r2, r4
 8008146:	491f      	ldr	r1, [pc, #124]	; (80081c4 <LCD_X_Config+0xa0>)
 8008148:	481f      	ldr	r0, [pc, #124]	; (80081c8 <LCD_X_Config+0xa4>)
 800814a:	f009 ff3f 	bl	8011fcc <GUI_DEVICE_CreateAndLink>
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 800814e:	f44f 7288 	mov.w	r2, #272	; 0x110
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
 8008152:	4605      	mov	r5, r0
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8008154:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8008158:	4620      	mov	r0, r4
 800815a:	f007 fb7b 	bl	800f854 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, XSIZE_PHYS, YSIZE_PHYS);
 800815e:	f44f 7288 	mov.w	r2, #272	; 0x110
 8008162:	4620      	mov	r0, r4
 8008164:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8008168:	f007 fb5c 	bl	800f824 <LCD_SetVSizeEx>
  GUIDRV_FlexColor_Config(pDevice, &Config);
 800816c:	a903      	add	r1, sp, #12
 800816e:	4628      	mov	r0, r5
  Config.Orientation = 0;
 8008170:	9405      	str	r4, [sp, #20]
  GUIDRV_FlexColor_Config(pDevice, &Config);
 8008172:	f007 faf6 	bl	800f762 <GUIDRV_FlexColor_Config>
  PortAPI.pfWrite16_A0  = SSD1963_WriteCommand;
 8008176:	f8df c05c 	ldr.w	ip, [pc, #92]	; 80081d4 <LCD_X_Config+0xb0>
 // PortAPI.pfReadM16_A1  = SSD1963_ReadData;
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66720, GUIDRV_FLEXCOLOR_M16C0B16);
 800817a:	a908      	add	r1, sp, #32
 800817c:	4628      	mov	r0, r5
 800817e:	4b13      	ldr	r3, [pc, #76]	; (80081cc <LCD_X_Config+0xa8>)
 8008180:	4a13      	ldr	r2, [pc, #76]	; (80081d0 <LCD_X_Config+0xac>)
  PortAPI.pfWriteM16_A1 = SSD1963_WriteDataMultiple;
 8008182:	9613      	str	r6, [sp, #76]	; 0x4c
  PortAPI.pfWrite16_A1  = SSD1963_WriteData;
 8008184:	e9cd c710 	strd	ip, r7, [sp, #64]	; 0x40
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66720, GUIDRV_FLEXCOLOR_M16C0B16);
 8008188:	f007 fb09 	bl	800f79e <GUIDRV_FlexColor_SetFunc>

  GUI_TOUCH_Calibrate(GUI_COORD_X, 0, 480, GUI_TOUCH_AD_LEFT , GUI_TOUCH_AD_RIGHT);
 800818c:	f640 7274 	movw	r2, #3956	; 0xf74
 8008190:	4621      	mov	r1, r4
 8008192:	4620      	mov	r0, r4
 8008194:	9200      	str	r2, [sp, #0]
 8008196:	2392      	movs	r3, #146	; 0x92
 8008198:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800819c:	f008 fe08 	bl	8010db0 <GUI_TOUCH_Calibrate>
  GUI_TOUCH_Calibrate(GUI_COORD_Y, 0, 272, GUI_TOUCH_AD_TOP, GUI_TOUCH_AD_BOTTOM);
 80081a0:	f640 7203 	movw	r2, #3843	; 0xf03
 80081a4:	4621      	mov	r1, r4
 80081a6:	f44f 7387 	mov.w	r3, #270	; 0x10e
 80081aa:	9200      	str	r2, [sp, #0]
 80081ac:	f44f 7288 	mov.w	r2, #272	; 0x110
 80081b0:	2001      	movs	r0, #1
 80081b2:	f008 fdfd 	bl	8010db0 <GUI_TOUCH_Calibrate>

}
 80081b6:	b023      	add	sp, #140	; 0x8c
 80081b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80081ba:	bf00      	nop
 80081bc:	0800424d 	.word	0x0800424d
 80081c0:	080042a1 	.word	0x080042a1
 80081c4:	08020850 	.word	0x08020850
 80081c8:	08020700 	.word	0x08020700
 80081cc:	0800f169 	.word	0x0800f169
 80081d0:	0800eacd 	.word	0x0800eacd
 80081d4:	080041f9 	.word	0x080041f9

080081d8 <LCD_X_DisplayDriver>:
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 80081d8:	2901      	cmp	r1, #1
 80081da:	d106      	bne.n	80081ea <LCD_X_DisplayDriver+0x12>
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 80081dc:	b508      	push	{r3, lr}
    // display controller and put it into operation. If the display
    // controller is not initialized by any external routine this needs
    // to be adapted by the customer...
    //
    // ...
	  SSD1963_Init();
 80081de:	f7fc f89b 	bl	8004318 <SSD1963_Init>
	  STMPE610_Init();
 80081e2:	f7fc fc0f 	bl	8004a04 <STMPE610_Init>
    return 0;
 80081e6:	2000      	movs	r0, #0
  }
  default:
    r = -1;
  }
  return r;
}
 80081e8:	bd08      	pop	{r3, pc}
  return r;
 80081ea:	f04f 30ff 	mov.w	r0, #4294967295
}
 80081ee:	4770      	bx	lr

080081f0 <HAL_SYSTICK_Callback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_SYSTICK_Callback(void)
{
	OS_TimeMS++;
 80081f0:	4a02      	ldr	r2, [pc, #8]	; (80081fc <HAL_SYSTICK_Callback+0xc>)
 80081f2:	6813      	ldr	r3, [r2, #0]
 80081f4:	3301      	adds	r3, #1
 80081f6:	6013      	str	r3, [r2, #0]
}
 80081f8:	4770      	bx	lr
 80081fa:	bf00      	nop
 80081fc:	20019894 	.word	0x20019894

08008200 <HAL_ADC_ConvCpltCallback>:


void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)  //ova fja se pozove kad se izvrsi jedna konverzija
{
	if(hadc->Instance == ADC3)
 8008200:	6802      	ldr	r2, [r0, #0]
 8008202:	4b05      	ldr	r3, [pc, #20]	; (8008218 <HAL_ADC_ConvCpltCallback+0x18>)
 8008204:	429a      	cmp	r2, r3
 8008206:	d106      	bne.n	8008216 <HAL_ADC_ConvCpltCallback+0x16>
	{
		//CDC_Transmit_FS((uint8_t *)probni,strlen((const char *)probni));
		pin_dioda_sirovo = ADC_BUF[1];
 8008208:	4b04      	ldr	r3, [pc, #16]	; (800821c <HAL_ADC_ConvCpltCallback+0x1c>)
 800820a:	4905      	ldr	r1, [pc, #20]	; (8008220 <HAL_ADC_ConvCpltCallback+0x20>)
		temperatura_ADC_sirovo = ADC_BUF[0];
 800820c:	e9d3 2000 	ldrd	r2, r0, [r3]
 8008210:	4b04      	ldr	r3, [pc, #16]	; (8008224 <HAL_ADC_ConvCpltCallback+0x24>)
		pin_dioda_sirovo = ADC_BUF[1];
 8008212:	6008      	str	r0, [r1, #0]
		temperatura_ADC_sirovo = ADC_BUF[0];
 8008214:	601a      	str	r2, [r3, #0]
	}
}
 8008216:	4770      	bx	lr
 8008218:	40012200 	.word	0x40012200
 800821c:	20019be8 	.word	0x20019be8
 8008220:	20019a64 	.word	0x20019a64
 8008224:	20019be0 	.word	0x20019be0

08008228 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8008228:	b570      	push	{r4, r5, r6, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800822a:	2400      	movs	r4, #0
{
 800822c:	b0b4      	sub	sp, #208	; 0xd0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800822e:	2230      	movs	r2, #48	; 0x30
  */
  __HAL_RCC_PWR_CLK_ENABLE();
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 8008230:	2609      	movs	r6, #9
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8008232:	4621      	mov	r1, r4
 8008234:	a807      	add	r0, sp, #28
 8008236:	f012 f878 	bl	801a32a <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800823a:	4621      	mov	r1, r4
 800823c:	2284      	movs	r2, #132	; 0x84
 800823e:	a813      	add	r0, sp, #76	; 0x4c
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8008240:	9406      	str	r4, [sp, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8008242:	2502      	movs	r5, #2
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8008244:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8008248:	e9cd 4404 	strd	r4, r4, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800824c:	f012 f86d 	bl	801a32a <memset>
  HAL_PWR_EnableBkUpAccess();
 8008250:	f7f9 ffb8 	bl	80021c4 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_PWR_CLK_ENABLE();
 8008254:	4a23      	ldr	r2, [pc, #140]	; (80082e4 <SystemClock_Config+0xbc>)
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8008256:	4b24      	ldr	r3, [pc, #144]	; (80082e8 <SystemClock_Config+0xc0>)
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = 25;
  RCC_OscInitStruct.PLL.PLLN = 384;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 8;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8008258:	a807      	add	r0, sp, #28
  __HAL_RCC_PWR_CLK_ENABLE();
 800825a:	6c11      	ldr	r1, [r2, #64]	; 0x40
 800825c:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8008260:	6411      	str	r1, [r2, #64]	; 0x40
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8008262:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  __HAL_RCC_PWR_CLK_ENABLE();
 8008266:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8008268:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 800826c:	9200      	str	r2, [sp, #0]
 800826e:	9a00      	ldr	r2, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8008270:	681a      	ldr	r2, [r3, #0]
 8008272:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8008276:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8008278:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800827a:	681b      	ldr	r3, [r3, #0]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 800827c:	9607      	str	r6, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800827e:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8008282:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8008286:	9108      	str	r1, [sp, #32]
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8008288:	920c      	str	r2, [sp, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLM = 25;
 800828a:	2119      	movs	r1, #25
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800828c:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.PLL.PLLN = 384;
 800828e:	f44f 72c0 	mov.w	r2, #384	; 0x180
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8008292:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.PLL.PLLQ = 8;
 8008294:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLN = 384;
 8008296:	9210      	str	r2, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLQ = 8;
 8008298:	9312      	str	r3, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800829a:	950d      	str	r5, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800829c:	9511      	str	r5, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLM = 25;
 800829e:	e9cd 610e 	strd	r6, r1, [sp, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80082a2:	f7f9 ffd3 	bl	800224c <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80082a6:	260f      	movs	r6, #15
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80082a8:	f7f9 ff94 	bl	80021d4 <HAL_PWREx_EnableOverDrive>
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80082ac:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80082b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 80082b4:	2106      	movs	r1, #6
 80082b6:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80082b8:	9602      	str	r6, [sp, #8]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80082ba:	e9cd 2305 	strd	r2, r3, [sp, #20]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80082be:	e9cd 5403 	strd	r5, r4, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 80082c2:	f7fa f9bd 	bl	8002640 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_UART8
 80082c6:	f24e 0220 	movw	r2, #57376	; 0xe020
                              |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C2;
  PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 80082ca:	f44f 7300 	mov.w	r3, #512	; 0x200
  PeriphClkInitStruct.Uart8ClockSelection = RCC_UART8CLKSOURCE_PCLK1;
  PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
  PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80082ce:	a813      	add	r0, sp, #76	; 0x4c
  PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 80082d0:	942d      	str	r4, [sp, #180]	; 0xb4
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_UART8
 80082d2:	9213      	str	r2, [sp, #76]	; 0x4c
  PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 80082d4:	931f      	str	r3, [sp, #124]	; 0x7c
  PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 80082d6:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80082da:	f7fa fad1 	bl	8002880 <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 80082de:	b034      	add	sp, #208	; 0xd0
 80082e0:	bd70      	pop	{r4, r5, r6, pc}
 80082e2:	bf00      	nop
 80082e4:	40023800 	.word	0x40023800
 80082e8:	40007000 	.word	0x40007000

080082ec <main>:
{
 80082ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80082f0:	2400      	movs	r4, #0
{
 80082f2:	f2ad 4d2c 	subw	sp, sp, #1068	; 0x42c

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80082f6:	4dcb      	ldr	r5, [pc, #812]	; (8008624 <main+0x338>)
  HAL_Init();
 80082f8:	f7f8 fdcc 	bl	8000e94 <HAL_Init>
  SystemClock_Config();
 80082fc:	f7ff ff94 	bl	8008228 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008300:	9424      	str	r4, [sp, #144]	; 0x90
  hadc3.Init.NbrOfConversion = 2;
 8008302:	f04f 0a02 	mov.w	sl, #2
  __HAL_RCC_GPIOG_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();
  __HAL_RCC_GPIOE_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_15, GPIO_PIN_RESET);
 8008306:	4622      	mov	r2, r4
 8008308:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800830c:	48c6      	ldr	r0, [pc, #792]	; (8008628 <main+0x33c>)
  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);

  /*Configure GPIO pin : PG15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800830e:	2601      	movs	r6, #1
  hi2c1.Instance = I2C1;
 8008310:	f8df 835c 	ldr.w	r8, [pc, #860]	; 8008670 <main+0x384>
  hi2c1.Init.Timing = 0x20303E5D;
 8008314:	4fc5      	ldr	r7, [pc, #788]	; (800862c <main+0x340>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8008316:	f04f 0907 	mov.w	r9, #7
  htim3.Instance = TIM3;
 800831a:	f8df b358 	ldr.w	fp, [pc, #856]	; 8008674 <main+0x388>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800831e:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
 8008322:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8008326:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8008328:	f043 0304 	orr.w	r3, r3, #4
 800832c:	632b      	str	r3, [r5, #48]	; 0x30
 800832e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8008330:	f003 0304 	and.w	r3, r3, #4
 8008334:	9313      	str	r3, [sp, #76]	; 0x4c
 8008336:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8008338:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800833a:	f043 0320 	orr.w	r3, r3, #32
 800833e:	632b      	str	r3, [r5, #48]	; 0x30
 8008340:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8008342:	f003 0320 	and.w	r3, r3, #32
 8008346:	9314      	str	r3, [sp, #80]	; 0x50
 8008348:	9b14      	ldr	r3, [sp, #80]	; 0x50
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800834a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800834c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008350:	632b      	str	r3, [r5, #48]	; 0x30
 8008352:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8008354:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008358:	9315      	str	r3, [sp, #84]	; 0x54
 800835a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800835c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800835e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008362:	632b      	str	r3, [r5, #48]	; 0x30
 8008364:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8008366:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800836a:	9316      	str	r3, [sp, #88]	; 0x58
 800836c:	9b16      	ldr	r3, [sp, #88]	; 0x58
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800836e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8008370:	ea43 030a 	orr.w	r3, r3, sl
 8008374:	632b      	str	r3, [r5, #48]	; 0x30
 8008376:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8008378:	ea03 030a 	and.w	r3, r3, sl
 800837c:	9317      	str	r3, [sp, #92]	; 0x5c
 800837e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8008380:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8008382:	f043 0310 	orr.w	r3, r3, #16
 8008386:	632b      	str	r3, [r5, #48]	; 0x30
 8008388:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800838a:	f003 0310 	and.w	r3, r3, #16
 800838e:	9318      	str	r3, [sp, #96]	; 0x60
 8008390:	9b18      	ldr	r3, [sp, #96]	; 0x60
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_15, GPIO_PIN_RESET);
 8008392:	f7f9 fbb1 	bl	8001af8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 8008396:	4622      	mov	r2, r4
 8008398:	2108      	movs	r1, #8
 800839a:	48a5      	ldr	r0, [pc, #660]	; (8008630 <main+0x344>)
 800839c:	f7f9 fbac 	bl	8001af8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80083a0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80083a4:	a920      	add	r1, sp, #128	; 0x80
 80083a6:	48a0      	ldr	r0, [pc, #640]	; (8008628 <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80083a8:	e9cd 3620 	strd	r3, r6, [sp, #128]	; 0x80
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80083ac:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80083b0:	f7f9 fa9c 	bl	80018ec <HAL_GPIO_Init>

  /*Configure GPIO pin : PB3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80083b4:	2308      	movs	r3, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80083b6:	a920      	add	r1, sp, #128	; 0x80
 80083b8:	489d      	ldr	r0, [pc, #628]	; (8008630 <main+0x344>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80083ba:	9423      	str	r4, [sp, #140]	; 0x8c
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80083bc:	9320      	str	r3, [sp, #128]	; 0x80
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80083be:	e9cd 6421 	strd	r6, r4, [sp, #132]	; 0x84
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80083c2:	f7f9 fa93 	bl	80018ec <HAL_GPIO_Init>
  __HAL_RCC_DMA2_CLK_ENABLE();
 80083c6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 80083c8:	4622      	mov	r2, r4
 80083ca:	4621      	mov	r1, r4
  __HAL_RCC_DMA2_CLK_ENABLE();
 80083cc:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 80083d0:	200b      	movs	r0, #11
  __HAL_RCC_DMA2_CLK_ENABLE();
 80083d2:	632b      	str	r3, [r5, #48]	; 0x30
 80083d4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80083d6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80083da:	9311      	str	r3, [sp, #68]	; 0x44
 80083dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  __HAL_RCC_DMA1_CLK_ENABLE();
 80083de:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80083e0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80083e4:	632b      	str	r3, [r5, #48]	; 0x30
 80083e6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  hadc3.Instance = ADC3;
 80083e8:	4d92      	ldr	r5, [pc, #584]	; (8008634 <main+0x348>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 80083ea:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80083ee:	9312      	str	r3, [sp, #72]	; 0x48
 80083f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 80083f2:	f7f9 f807 	bl	8001404 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 80083f6:	200b      	movs	r0, #11
 80083f8:	f7f9 f83a 	bl	8001470 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 80083fc:	4622      	mov	r2, r4
 80083fe:	4621      	mov	r1, r4
 8008400:	2011      	movs	r0, #17
 8008402:	f7f8 ffff 	bl	8001404 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 8008406:	2011      	movs	r0, #17
 8008408:	f7f9 f832 	bl	8001470 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 800840c:	4622      	mov	r2, r4
 800840e:	4621      	mov	r1, r4
 8008410:	2038      	movs	r0, #56	; 0x38
 8008412:	f7f8 fff7 	bl	8001404 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8008416:	2038      	movs	r0, #56	; 0x38
 8008418:	f7f9 f82a 	bl	8001470 <HAL_NVIC_EnableIRQ>
  hi2c1.Instance = I2C1;
 800841c:	4b86      	ldr	r3, [pc, #536]	; (8008638 <main+0x34c>)
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800841e:	4640      	mov	r0, r8
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8008420:	f8c8 4020 	str.w	r4, [r8, #32]
  hi2c1.Init.Timing = 0x20303E5D;
 8008424:	e9c8 3700 	strd	r3, r7, [r8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8008428:	e9c8 4602 	strd	r4, r6, [r8, #8]
  hi2c1.Init.OwnAddress2 = 0;
 800842c:	e9c8 4404 	strd	r4, r4, [r8, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8008430:	e9c8 4406 	strd	r4, r4, [r8, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8008434:	f7f9 fc16 	bl	8001c64 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8008438:	4621      	mov	r1, r4
 800843a:	4640      	mov	r0, r8
 800843c:	f7f9 fe6e 	bl	800211c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8008440:	4621      	mov	r1, r4
 8008442:	4640      	mov	r0, r8
 8008444:	f7f9 fe94 	bl	8002170 <HAL_I2CEx_ConfigDigitalFilter>
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8008448:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  hadc3.Instance = ADC3;
 800844c:	497b      	ldr	r1, [pc, #492]	; (800863c <main+0x350>)
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 800844e:	4628      	mov	r0, r5
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8008450:	4b7b      	ldr	r3, [pc, #492]	; (8008640 <main+0x354>)
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8008452:	60ac      	str	r4, [r5, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8008454:	612e      	str	r6, [r5, #16]
  hadc3.Init.ContinuousConvMode = ENABLE;
 8008456:	61ae      	str	r6, [r5, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8008458:	f885 4020 	strb.w	r4, [r5, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800845c:	62ec      	str	r4, [r5, #44]	; 0x2c
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800845e:	60ec      	str	r4, [r5, #12]
  hadc3.Init.DMAContinuousRequests = ENABLE;
 8008460:	f885 6030 	strb.w	r6, [r5, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 8008464:	616c      	str	r4, [r5, #20]
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8008466:	62ab      	str	r3, [r5, #40]	; 0x28
  hadc3.Init.NbrOfConversion = 2;
 8008468:	f8c5 a01c 	str.w	sl, [r5, #28]
  ADC_ChannelConfTypeDef sConfig = {0};
 800846c:	9420      	str	r4, [sp, #128]	; 0x80
 800846e:	9423      	str	r4, [sp, #140]	; 0x8c
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8008470:	e9c5 1200 	strd	r1, r2, [r5]
  ADC_ChannelConfTypeDef sConfig = {0};
 8008474:	e9cd 4421 	strd	r4, r4, [sp, #132]	; 0x84
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8008478:	f7f8 fd3c 	bl	8000ef4 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_6;
 800847c:	2306      	movs	r3, #6
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800847e:	a920      	add	r1, sp, #128	; 0x80
 8008480:	4628      	mov	r0, r5
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8008482:	f8cd 9088 	str.w	r9, [sp, #136]	; 0x88
  sConfig.Channel = ADC_CHANNEL_6;
 8008486:	e9cd 3620 	strd	r3, r6, [sp, #128]	; 0x80
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800848a:	f7f8 fee7 	bl	800125c <HAL_ADC_ConfigChannel>
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800848e:	a920      	add	r1, sp, #128	; 0x80
 8008490:	4628      	mov	r0, r5
  sConfig.Channel = ADC_CHANNEL_7;
 8008492:	e9cd 9a20 	strd	r9, sl, [sp, #128]	; 0x80
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8008496:	f7f8 fee1 	bl	800125c <HAL_ADC_ConfigChannel>
  htim3.Instance = TIM3;
 800849a:	4b6a      	ldr	r3, [pc, #424]	; (8008644 <main+0x358>)
  htim3.Init.Prescaler = 25;
 800849c:	2119      	movs	r1, #25
  htim3.Init.Period = 1920;
 800849e:	f44f 62f0 	mov.w	r2, #1920	; 0x780
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80084a2:	4658      	mov	r0, fp
  TIM_OC_InitTypeDef sConfigOC = {0};
 80084a4:	9426      	str	r4, [sp, #152]	; 0x98
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80084a6:	941b      	str	r4, [sp, #108]	; 0x6c
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 80084a8:	f04f 0900 	mov.w	r9, #0
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80084ac:	f8cb 4008 	str.w	r4, [fp, #8]
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 80084b0:	f04f 0a00 	mov.w	sl, #0
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80084b4:	f8cb 4010 	str.w	r4, [fp, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80084b8:	f8cb 4018 	str.w	r4, [fp, #24]
  htim3.Init.Period = 1920;
 80084bc:	f8cb 200c 	str.w	r2, [fp, #12]
  htim3.Init.Prescaler = 25;
 80084c0:	e9cb 3100 	strd	r3, r1, [fp]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80084c4:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
 80084c8:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
 80084cc:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80084d0:	e9cd 441c 	strd	r4, r4, [sp, #112]	; 0x70
 80084d4:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80084d8:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80084dc:	f7fa fe20 	bl	8003120 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80084e0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80084e4:	a91c      	add	r1, sp, #112	; 0x70
 80084e6:	4658      	mov	r0, fp
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80084e8:	921c      	str	r2, [sp, #112]	; 0x70
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80084ea:	f7fb f993 	bl	8003814 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80084ee:	4658      	mov	r0, fp
 80084f0:	f7fa feb2 	bl	8003258 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80084f4:	a919      	add	r1, sp, #100	; 0x64
 80084f6:	4658      	mov	r0, fp
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80084f8:	9419      	str	r4, [sp, #100]	; 0x64
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80084fa:	941b      	str	r4, [sp, #108]	; 0x6c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80084fc:	f7fb fa32 	bl	8003964 <HAL_TIMEx_MasterConfigSynchronization>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8008500:	2360      	movs	r3, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8008502:	4622      	mov	r2, r4
 8008504:	a920      	add	r1, sp, #128	; 0x80
 8008506:	4658      	mov	r0, fp
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8008508:	9320      	str	r3, [sp, #128]	; 0x80
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800850a:	9424      	str	r4, [sp, #144]	; 0x90
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800850c:	e9cd 4421 	strd	r4, r4, [sp, #132]	; 0x84
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8008510:	f7fa ffdc 	bl	80034cc <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim3);
 8008514:	4658      	mov	r0, fp
 8008516:	f000 f9e5 	bl	80088e4 <HAL_TIM_MspPostInit>
  huart8.Instance = UART8;
 800851a:	4a4b      	ldr	r2, [pc, #300]	; (8008648 <main+0x35c>)
 800851c:	f8df e158 	ldr.w	lr, [pc, #344]	; 8008678 <main+0x38c>
  huart8.Init.BaudRate = 115200;
 8008520:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  huart8.Init.Mode = UART_MODE_TX_RX;
 8008524:	210c      	movs	r1, #12
  if (HAL_UART_Init(&huart8) != HAL_OK)
 8008526:	4610      	mov	r0, r2
  huart8.Init.Parity = UART_PARITY_NONE;
 8008528:	6114      	str	r4, [r2, #16]
  huart8.Init.Mode = UART_MODE_TX_RX;
 800852a:	6151      	str	r1, [r2, #20]
  huart8.Init.BaudRate = 115200;
 800852c:	e9c2 e300 	strd	lr, r3, [r2]
  huart8.Init.StopBits = UART_STOPBITS_1;
 8008530:	e9c2 4402 	strd	r4, r4, [r2, #8]
  huart8.Init.OverSampling = UART_OVERSAMPLING_16;
 8008534:	e9c2 4406 	strd	r4, r4, [r2, #24]
  huart8.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8008538:	e9c2 4408 	strd	r4, r4, [r2, #32]
  if (HAL_UART_Init(&huart8) != HAL_OK)
 800853c:	f7fb fc0a 	bl	8003d54 <HAL_UART_Init>
  hrtc.Instance = RTC;
 8008540:	f8df c138 	ldr.w	ip, [pc, #312]	; 800867c <main+0x390>
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8008544:	4841      	ldr	r0, [pc, #260]	; (800864c <main+0x360>)
  hrtc.Init.AsynchPrediv = 127;
 8008546:	217f      	movs	r1, #127	; 0x7f
  hrtc.Init.SynchPrediv = 255;
 8008548:	22ff      	movs	r2, #255	; 0xff
  RTC_DateTypeDef sDate = {0};
 800854a:	941c      	str	r4, [sp, #112]	; 0x70
  hrtc.Instance = RTC;
 800854c:	f8c0 c000 	str.w	ip, [r0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8008550:	6044      	str	r4, [r0, #4]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8008552:	6184      	str	r4, [r0, #24]
  hrtc.Init.SynchPrediv = 255;
 8008554:	e9c0 1202 	strd	r1, r2, [r0, #8]
  RTC_TimeTypeDef sTime = {0};
 8008558:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
 800855c:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
 8008560:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8008564:	e9c0 4404 	strd	r4, r4, [r0, #16]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8008568:	f7fa fc1e 	bl	8002da8 <HAL_RTC_Init>
  sTime.Hours = 0x18;
 800856c:	2118      	movs	r1, #24
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 800856e:	4632      	mov	r2, r6
 8008570:	4836      	ldr	r0, [pc, #216]	; (800864c <main+0x360>)
  sTime.Hours = 0x18;
 8008572:	f8ad 1080 	strh.w	r1, [sp, #128]	; 0x80
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8008576:	a920      	add	r1, sp, #128	; 0x80
  sTime.Minutes = 0x0;
 8008578:	f88d 4082 	strb.w	r4, [sp, #130]	; 0x82
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 800857c:	e9cd 9a24 	strd	r9, sl, [sp, #144]	; 0x90
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8008580:	f7fa fc80 	bl	8002e84 <HAL_RTC_SetTime>
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 8008584:	4b32      	ldr	r3, [pc, #200]	; (8008650 <main+0x364>)
  hi2c2.Instance = I2C2;
 8008586:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008680 <main+0x394>
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 800858a:	a91c      	add	r1, sp, #112	; 0x70
 800858c:	4632      	mov	r2, r6
 800858e:	482f      	ldr	r0, [pc, #188]	; (800864c <main+0x360>)
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 8008590:	931c      	str	r3, [sp, #112]	; 0x70
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 8008592:	f7fa fd2b 	bl	8002fec <HAL_RTC_SetDate>
  hi2c2.Instance = I2C2;
 8008596:	4a2f      	ldr	r2, [pc, #188]	; (8008654 <main+0x368>)
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8008598:	4648      	mov	r0, r9
  hi2c2.Instance = I2C2;
 800859a:	f8c9 2000 	str.w	r2, [r9]
  hi2c2.Init.OwnAddress1 = 0;
 800859e:	e9c9 7401 	strd	r7, r4, [r9, #4]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80085a2:	e9c9 6403 	strd	r6, r4, [r9, #12]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80085a6:	e9c9 4405 	strd	r4, r4, [r9, #20]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80085aa:	e9c9 4407 	strd	r4, r4, [r9, #28]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 80085ae:	f7f9 fb59 	bl	8001c64 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80085b2:	4621      	mov	r1, r4
 80085b4:	4648      	mov	r0, r9
 80085b6:	4f28      	ldr	r7, [pc, #160]	; (8008658 <main+0x36c>)
 80085b8:	f7f9 fdb0 	bl	800211c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 80085bc:	4621      	mov	r1, r4
 80085be:	4648      	mov	r0, r9
 80085c0:	f7f9 fdd6 	bl	8002170 <HAL_I2CEx_ConfigDigitalFilter>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);   //mora da se ukljuci da bi se pokreuo PWM
 80085c4:	4621      	mov	r1, r4
 80085c6:	4658      	mov	r0, fp
	 GUI_SetFont(&GUI_Font20B_ASCII);
 80085c8:	4c24      	ldr	r4, [pc, #144]	; (800865c <main+0x370>)
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);   //mora da se ukljuci da bi se pokreuo PWM
 80085ca:	f7fa fedf 	bl	800338c <HAL_TIM_PWM_Start>
  HAL_ADC_Start_DMA(&hadc3,ADC_BUF,1);
 80085ce:	4632      	mov	r2, r6
 80085d0:	4923      	ldr	r1, [pc, #140]	; (8008660 <main+0x374>)
 80085d2:	4628      	mov	r0, r5
 80085d4:	f7f8 fd44 	bl	8001060 <HAL_ADC_Start_DMA>
 80085d8:	4e22      	ldr	r6, [pc, #136]	; (8008664 <main+0x378>)
  Init_LCD_GPIO();
 80085da:	f7fb fd95 	bl	8004108 <Init_LCD_GPIO>
  Init_TOUCH_GPIO(hi2c1);
 80085de:	f108 0e10 	add.w	lr, r8, #16
 80085e2:	46ec      	mov	ip, sp
 80085e4:	4d20      	ldr	r5, [pc, #128]	; (8008668 <main+0x37c>)
 80085e6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80085ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80085ee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80085f2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80085f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80085fa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80085fe:	e89e 0007 	ldmia.w	lr, {r0, r1, r2}
 8008602:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8008606:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
 800860a:	f7fc f9e9 	bl	80049e0 <Init_TOUCH_GPIO>
  STMPE610_Init();
 800860e:	f7fc f9f9 	bl	8004a04 <STMPE610_Init>
  hWin = DisplayApp_Init();
 8008612:	f000 fb79 	bl	8008d08 <DisplayApp_Init>
 8008616:	4a15      	ldr	r2, [pc, #84]	; (800866c <main+0x380>)
  Dev->I2cDevAddr = 0x52;
 8008618:	2352      	movs	r3, #82	; 0x52
  Dev->I2cHandle = &hi2c2;
 800861a:	f8cd 9420 	str.w	r9, [sp, #1056]	; 0x420
  hWin = DisplayApp_Init();
 800861e:	6010      	str	r0, [r2, #0]
  VL53L1_WaitDeviceBooted( Dev );
 8008620:	a820      	add	r0, sp, #128	; 0x80
 8008622:	e02f      	b.n	8008684 <main+0x398>
 8008624:	40023800 	.word	0x40023800
 8008628:	40021800 	.word	0x40021800
 800862c:	20303e5d 	.word	0x20303e5d
 8008630:	40020400 	.word	0x40020400
 8008634:	20019a1c 	.word	0x20019a1c
 8008638:	40005400 	.word	0x40005400
 800863c:	40012200 	.word	0x40012200
 8008640:	0f000001 	.word	0x0f000001
 8008644:	40000400 	.word	0x40000400
 8008648:	20019b4c 	.word	0x20019b4c
 800864c:	20019b28 	.word	0x20019b28
 8008650:	00010101 	.word	0x00010101
 8008654:	40005800 	.word	0x40005800
 8008658:	20019420 	.word	0x20019420
 800865c:	0801dce0 	.word	0x0801dce0
 8008660:	20019be8 	.word	0x20019be8
 8008664:	20019422 	.word	0x20019422
 8008668:	20019424 	.word	0x20019424
 800866c:	20019898 	.word	0x20019898
 8008670:	2001989c 	.word	0x2001989c
 8008674:	200199b8 	.word	0x200199b8
 8008678:	40007c00 	.word	0x40007c00
 800867c:	40002800 	.word	0x40002800
 8008680:	200198ec 	.word	0x200198ec
  Dev->I2cDevAddr = 0x52;
 8008684:	f88d 3418 	strb.w	r3, [sp, #1048]	; 0x418
  VL53L1_WaitDeviceBooted( Dev );
 8008688:	f7fc fcce 	bl	8005028 <VL53L1_WaitDeviceBooted>
  VL53L1_DataInit( Dev );
 800868c:	a820      	add	r0, sp, #128	; 0x80
 800868e:	f7fc fcad 	bl	8004fec <VL53L1_DataInit>
  VL53L1_StaticInit( Dev );
 8008692:	a820      	add	r0, sp, #128	; 0x80
 8008694:	f7fc fdea 	bl	800526c <VL53L1_StaticInit>
  VL53L1_SetDistanceMode( Dev, VL53L1_DISTANCEMODE_LONG );
 8008698:	2103      	movs	r1, #3
 800869a:	a820      	add	r0, sp, #128	; 0x80
 800869c:	f7fc fcc8 	bl	8005030 <VL53L1_SetDistanceMode>
  VL53L1_SetMeasurementTimingBudgetMicroSeconds( Dev, 50000 );
 80086a0:	f24c 3150 	movw	r1, #50000	; 0xc350
 80086a4:	a820      	add	r0, sp, #128	; 0x80
 80086a6:	f7fc fd49 	bl	800513c <VL53L1_SetMeasurementTimingBudgetMicroSeconds>
  VL53L1_SetInterMeasurementPeriodMilliSeconds( Dev, 500 );
 80086aa:	a820      	add	r0, sp, #128	; 0x80
 80086ac:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 80086b0:	f7fc fe24 	bl	80052fc <VL53L1_SetInterMeasurementPeriodMilliSeconds>
  VL53L1_StartMeasurement( Dev );
 80086b4:	a820      	add	r0, sp, #128	; 0x80
 80086b6:	f7fc fe2b 	bl	8005310 <VL53L1_StartMeasurement>
	 X_koordinata=STMPE610_GetX_TOUCH();
 80086ba:	f7fc fbc1 	bl	8004e40 <STMPE610_GetX_TOUCH>
 80086be:	8038      	strh	r0, [r7, #0]
	 Y_koordinata=STMPE610_GetY_TOUCH();
 80086c0:	f7fc fbee 	bl	8004ea0 <STMPE610_GetY_TOUCH>
 80086c4:	8030      	strh	r0, [r6, #0]
	 STMPE610_read_xyz();
 80086c6:	f7fc faa9 	bl	8004c1c <STMPE610_read_xyz>
	 GUI_TOUCH_Exec();
 80086ca:	f008 fbcf 	bl	8010e6c <GUI_TOUCH_Exec>
	 keyPressed=GUI_GetKey();
 80086ce:	f009 f895 	bl	80117fc <GUI_GetKey>
 80086d2:	8028      	strh	r0, [r5, #0]
	 GUI_Delay(1);
 80086d4:	2001      	movs	r0, #1
 80086d6:	f008 fb57 	bl	8010d88 <GUI_Delay>
	 GUI_SetColor(GUI_BLACK);
 80086da:	2000      	movs	r0, #0
 80086dc:	f008 ff58 	bl	8011590 <GUI_SetColor>
	 GUI_SetFont(&GUI_Font20B_ASCII);
 80086e0:	4620      	mov	r0, r4
 80086e2:	f008 ff27 	bl	8011534 <GUI_SetFont>
	 WriteDistance(GetTimingBudget_Percentage());
 80086e6:	f000 fb43 	bl	8008d70 <GetTimingBudget_Percentage>
 80086ea:	f000 fb29 	bl	8008d40 <WriteDistance>
	 HAL_Delay(50);
 80086ee:	2032      	movs	r0, #50	; 0x32
 80086f0:	f7f8 fbee 	bl	8000ed0 <HAL_Delay>
 80086f4:	e7e1      	b.n	80086ba <main+0x3ce>
 80086f6:	bf00      	nop

080086f8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80086f8:	4770      	bx	lr
 80086fa:	bf00      	nop

080086fc <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80086fc:	4b0a      	ldr	r3, [pc, #40]	; (8008728 <HAL_MspInit+0x2c>)
{
 80086fe:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 8008700:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008702:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8008706:	641a      	str	r2, [r3, #64]	; 0x40
 8008708:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800870a:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 800870e:	9200      	str	r2, [sp, #0]
 8008710:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008712:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008714:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008718:	645a      	str	r2, [r3, #68]	; 0x44
 800871a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800871c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8008720:	9301      	str	r3, [sp, #4]
 8008722:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8008724:	b002      	add	sp, #8
 8008726:	4770      	bx	lr
 8008728:	40023800 	.word	0x40023800

0800872c <HAL_ADC_MspInit>:
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hadc->Instance==ADC3)
 800872c:	4b27      	ldr	r3, [pc, #156]	; (80087cc <HAL_ADC_MspInit+0xa0>)
 800872e:	6802      	ldr	r2, [r0, #0]
{
 8008730:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(hadc->Instance==ADC3)
 8008732:	429a      	cmp	r2, r3
{
 8008734:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008736:	f04f 0400 	mov.w	r4, #0
 800873a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800873e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8008742:	9407      	str	r4, [sp, #28]
  if(hadc->Instance==ADC3)
 8008744:	d001      	beq.n	800874a <HAL_ADC_MspInit+0x1e>
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 8008746:	b009      	add	sp, #36	; 0x24
 8008748:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_ADC3_CLK_ENABLE();
 800874a:	f503 338b 	add.w	r3, r3, #71168	; 0x11600
 800874e:	4606      	mov	r6, r0
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8008750:	f44f 7040 	mov.w	r0, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8008754:	2503      	movs	r5, #3
    __HAL_RCC_ADC3_CLK_ENABLE();
 8008756:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8008758:	a903      	add	r1, sp, #12
    hdma_adc3.Init.MemInc = DMA_MINC_ENABLE;
 800875a:	f44f 6780 	mov.w	r7, #1024	; 0x400
    __HAL_RCC_ADC3_CLK_ENABLE();
 800875e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008762:	645a      	str	r2, [r3, #68]	; 0x44
 8008764:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008766:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 800876a:	9201      	str	r2, [sp, #4]
 800876c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800876e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008770:	f042 0220 	orr.w	r2, r2, #32
 8008774:	631a      	str	r2, [r3, #48]	; 0x30
 8008776:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8008778:	9003      	str	r0, [sp, #12]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800877a:	f003 0320 	and.w	r3, r3, #32
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800877e:	4814      	ldr	r0, [pc, #80]	; (80087d0 <HAL_ADC_MspInit+0xa4>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8008780:	9504      	str	r5, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8008782:	9302      	str	r3, [sp, #8]
    hdma_adc3.Instance = DMA2_Stream0;
 8008784:	4d13      	ldr	r5, [pc, #76]	; (80087d4 <HAL_ADC_MspInit+0xa8>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8008786:	9b02      	ldr	r3, [sp, #8]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8008788:	f7f9 f8b0 	bl	80018ec <HAL_GPIO_Init>
    hdma_adc3.Init.Channel = DMA_CHANNEL_2;
 800878c:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
    hdma_adc3.Instance = DMA2_Stream0;
 8008790:	f8df c044 	ldr.w	ip, [pc, #68]	; 80087d8 <HAL_ADC_MspInit+0xac>
    hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8008794:	f44f 5180 	mov.w	r1, #4096	; 0x1000
    hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8008798:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    hdma_adc3.Init.Mode = DMA_CIRCULAR;
 800879c:	f44f 7380 	mov.w	r3, #256	; 0x100
    hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80087a0:	60ac      	str	r4, [r5, #8]
    hdma_adc3.Init.PeriphInc = DMA_PINC_DISABLE;
 80087a2:	60ec      	str	r4, [r5, #12]
    hdma_adc3.Init.Channel = DMA_CHANNEL_2;
 80087a4:	e9c5 c000 	strd	ip, r0, [r5]
    if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 80087a8:	4628      	mov	r0, r5
    hdma_adc3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80087aa:	e9c5 4408 	strd	r4, r4, [r5, #32]
    hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80087ae:	e9c5 7104 	strd	r7, r1, [r5, #16]
    hdma_adc3.Init.Mode = DMA_CIRCULAR;
 80087b2:	e9c5 2306 	strd	r2, r3, [r5, #24]
    if (HAL_DMA_Init(&hdma_adc3) != HAL_OK)
 80087b6:	f7f8 fe85 	bl	80014c4 <HAL_DMA_Init>
 80087ba:	b918      	cbnz	r0, 80087c4 <HAL_ADC_MspInit+0x98>
    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc3);
 80087bc:	63b5      	str	r5, [r6, #56]	; 0x38
 80087be:	63ae      	str	r6, [r5, #56]	; 0x38
}
 80087c0:	b009      	add	sp, #36	; 0x24
 80087c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      Error_Handler();
 80087c4:	f7ff ff98 	bl	80086f8 <Error_Handler>
 80087c8:	e7f8      	b.n	80087bc <HAL_ADC_MspInit+0x90>
 80087ca:	bf00      	nop
 80087cc:	40012200 	.word	0x40012200
 80087d0:	40021400 	.word	0x40021400
 80087d4:	20019950 	.word	0x20019950
 80087d8:	40026410 	.word	0x40026410

080087dc <HAL_I2C_MspInit>:
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C1)
 80087dc:	6802      	ldr	r2, [r0, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80087de:	2300      	movs	r3, #0
  if(hi2c->Instance==I2C1)
 80087e0:	4929      	ldr	r1, [pc, #164]	; (8008888 <HAL_I2C_MspInit+0xac>)
{
 80087e2:	b570      	push	{r4, r5, r6, lr}
  if(hi2c->Instance==I2C1)
 80087e4:	428a      	cmp	r2, r1
{
 80087e6:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80087e8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80087ec:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80087f0:	9309      	str	r3, [sp, #36]	; 0x24
  if(hi2c->Instance==I2C1)
 80087f2:	d026      	beq.n	8008842 <HAL_I2C_MspInit+0x66>
    __HAL_RCC_I2C1_CLK_ENABLE();
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
  else if(hi2c->Instance==I2C2)
 80087f4:	4b25      	ldr	r3, [pc, #148]	; (800888c <HAL_I2C_MspInit+0xb0>)
 80087f6:	429a      	cmp	r2, r3
 80087f8:	d001      	beq.n	80087fe <HAL_I2C_MspInit+0x22>
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 80087fa:	b00a      	add	sp, #40	; 0x28
 80087fc:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80087fe:	4c24      	ldr	r4, [pc, #144]	; (8008890 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8008800:	2012      	movs	r0, #18
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8008802:	2203      	movs	r2, #3
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8008804:	2601      	movs	r6, #1
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8008806:	6b23      	ldr	r3, [r4, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8008808:	2504      	movs	r5, #4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800880a:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800880c:	f043 0320 	orr.w	r3, r3, #32
 8008810:	6323      	str	r3, [r4, #48]	; 0x30
 8008812:	6b23      	ldr	r3, [r4, #48]	; 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8008814:	9006      	str	r0, [sp, #24]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8008816:	f003 0320 	and.w	r3, r3, #32
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800881a:	481e      	ldr	r0, [pc, #120]	; (8008894 <HAL_I2C_MspInit+0xb8>)
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800881c:	9205      	str	r2, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800881e:	9303      	str	r3, [sp, #12]
 8008820:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8008822:	9208      	str	r2, [sp, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8008824:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8008826:	9509      	str	r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8008828:	f7f9 f860 	bl	80018ec <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 800882c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800882e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8008832:	6423      	str	r3, [r4, #64]	; 0x40
 8008834:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008836:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800883a:	9304      	str	r3, [sp, #16]
 800883c:	9b04      	ldr	r3, [sp, #16]
}
 800883e:	b00a      	add	sp, #40	; 0x28
 8008840:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8008842:	4c13      	ldr	r4, [pc, #76]	; (8008890 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8008844:	2212      	movs	r2, #18
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8008846:	2001      	movs	r0, #1
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8008848:	26c0      	movs	r6, #192	; 0xc0
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800884a:	6b23      	ldr	r3, [r4, #48]	; 0x30
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800884c:	2503      	movs	r5, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800884e:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8008850:	f043 0302 	orr.w	r3, r3, #2
 8008854:	6323      	str	r3, [r4, #48]	; 0x30
 8008856:	6b23      	ldr	r3, [r4, #48]	; 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8008858:	9206      	str	r2, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 800885a:	2204      	movs	r2, #4
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800885c:	f003 0302 	and.w	r3, r3, #2
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8008860:	9007      	str	r0, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8008862:	480d      	ldr	r0, [pc, #52]	; (8008898 <HAL_I2C_MspInit+0xbc>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8008864:	9301      	str	r3, [sp, #4]
 8008866:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8008868:	9605      	str	r6, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 800886a:	e9cd 5208 	strd	r5, r2, [sp, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800886e:	f7f9 f83d 	bl	80018ec <HAL_GPIO_Init>
    __HAL_RCC_I2C1_CLK_ENABLE();
 8008872:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008874:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8008878:	6423      	str	r3, [r4, #64]	; 0x40
 800887a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800887c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8008880:	9302      	str	r3, [sp, #8]
 8008882:	9b02      	ldr	r3, [sp, #8]
}
 8008884:	b00a      	add	sp, #40	; 0x28
 8008886:	bd70      	pop	{r4, r5, r6, pc}
 8008888:	40005400 	.word	0x40005400
 800888c:	40005800 	.word	0x40005800
 8008890:	40023800 	.word	0x40023800
 8008894:	40021400 	.word	0x40021400
 8008898:	40020400 	.word	0x40020400

0800889c <HAL_RTC_MspInit>:
* @param hrtc: RTC handle pointer
* @retval None
*/
void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
{
  if(hrtc->Instance==RTC)
 800889c:	6802      	ldr	r2, [r0, #0]
 800889e:	4b04      	ldr	r3, [pc, #16]	; (80088b0 <HAL_RTC_MspInit+0x14>)
 80088a0:	429a      	cmp	r2, r3
 80088a2:	d104      	bne.n	80088ae <HAL_RTC_MspInit+0x12>
  {
  /* USER CODE BEGIN RTC_MspInit 0 */

  /* USER CODE END RTC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_RTC_ENABLE();
 80088a4:	4a03      	ldr	r2, [pc, #12]	; (80088b4 <HAL_RTC_MspInit+0x18>)
 80088a6:	6f13      	ldr	r3, [r2, #112]	; 0x70
 80088a8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80088ac:	6713      	str	r3, [r2, #112]	; 0x70
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }

}
 80088ae:	4770      	bx	lr
 80088b0:	40002800 	.word	0x40002800
 80088b4:	40023800 	.word	0x40023800

080088b8 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM3)
 80088b8:	6802      	ldr	r2, [r0, #0]
 80088ba:	4b09      	ldr	r3, [pc, #36]	; (80088e0 <HAL_TIM_Base_MspInit+0x28>)
 80088bc:	429a      	cmp	r2, r3
 80088be:	d000      	beq.n	80088c2 <HAL_TIM_Base_MspInit+0xa>
 80088c0:	4770      	bx	lr
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 80088c2:	f503 330d 	add.w	r3, r3, #144384	; 0x23400
{
 80088c6:	b082      	sub	sp, #8
    __HAL_RCC_TIM3_CLK_ENABLE();
 80088c8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80088ca:	f042 0202 	orr.w	r2, r2, #2
 80088ce:	641a      	str	r2, [r3, #64]	; 0x40
 80088d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80088d2:	f003 0302 	and.w	r3, r3, #2
 80088d6:	9301      	str	r3, [sp, #4]
 80088d8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80088da:	b002      	add	sp, #8
 80088dc:	4770      	bx	lr
 80088de:	bf00      	nop
 80088e0:	40000400 	.word	0x40000400

080088e4 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM3)
 80088e4:	6801      	ldr	r1, [r0, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80088e6:	2300      	movs	r3, #0
  if(htim->Instance==TIM3)
 80088e8:	4a0f      	ldr	r2, [pc, #60]	; (8008928 <HAL_TIM_MspPostInit+0x44>)
{
 80088ea:	b530      	push	{r4, r5, lr}
  if(htim->Instance==TIM3)
 80088ec:	4291      	cmp	r1, r2
{
 80088ee:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80088f0:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80088f4:	e9cd 3303 	strd	r3, r3, [sp, #12]
 80088f8:	9305      	str	r3, [sp, #20]
  if(htim->Instance==TIM3)
 80088fa:	d001      	beq.n	8008900 <HAL_TIM_MspPostInit+0x1c>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 80088fc:	b007      	add	sp, #28
 80088fe:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8008900:	4b0a      	ldr	r3, [pc, #40]	; (800892c <HAL_TIM_MspPostInit+0x48>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008902:	2402      	movs	r4, #2
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8008904:	2510      	movs	r5, #16
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8008906:	a901      	add	r1, sp, #4
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8008908:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800890a:	4809      	ldr	r0, [pc, #36]	; (8008930 <HAL_TIM_MspPostInit+0x4c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800890c:	4322      	orrs	r2, r4
 800890e:	631a      	str	r2, [r3, #48]	; 0x30
 8008910:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8008912:	9501      	str	r5, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8008914:	4023      	ands	r3, r4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008916:	9402      	str	r4, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8008918:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800891a:	9300      	str	r3, [sp, #0]
 800891c:	9b00      	ldr	r3, [sp, #0]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800891e:	f7f8 ffe5 	bl	80018ec <HAL_GPIO_Init>
}
 8008922:	b007      	add	sp, #28
 8008924:	bd30      	pop	{r4, r5, pc}
 8008926:	bf00      	nop
 8008928:	40000400 	.word	0x40000400
 800892c:	40023800 	.word	0x40023800
 8008930:	40020400 	.word	0x40020400

08008934 <HAL_UART_MspInit>:
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(huart->Instance==UART8)
 8008934:	4b36      	ldr	r3, [pc, #216]	; (8008a10 <HAL_UART_MspInit+0xdc>)
 8008936:	6802      	ldr	r2, [r0, #0]
{
 8008938:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(huart->Instance==UART8)
 800893a:	429a      	cmp	r2, r3
{
 800893c:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800893e:	f04f 0400 	mov.w	r4, #0
 8008942:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8008946:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800894a:	9407      	str	r4, [sp, #28]
  if(huart->Instance==UART8)
 800894c:	d001      	beq.n	8008952 <HAL_UART_MspInit+0x1e>
  /* USER CODE BEGIN UART8_MspInit 1 */

  /* USER CODE END UART8_MspInit 1 */
  }

}
 800894e:	b009      	add	sp, #36	; 0x24
 8008950:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_UART8_CLK_ENABLE();
 8008952:	f503 33de 	add.w	r3, r3, #113664	; 0x1bc00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008956:	2502      	movs	r5, #2
 8008958:	4606      	mov	r6, r0
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800895a:	2003      	movs	r0, #3
    __HAL_RCC_UART8_CLK_ENABLE();
 800895c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800895e:	a903      	add	r1, sp, #12
    __HAL_RCC_UART8_CLK_ENABLE();
 8008960:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8008964:	641a      	str	r2, [r3, #64]	; 0x40
 8008966:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008968:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 800896c:	9201      	str	r2, [sp, #4]
 800896e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8008970:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008972:	f042 0210 	orr.w	r2, r2, #16
 8008976:	631a      	str	r2, [r3, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF8_UART8;
 8008978:	2208      	movs	r2, #8
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800897a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800897c:	9003      	str	r0, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800897e:	f003 0310 	and.w	r3, r3, #16
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8008982:	9006      	str	r0, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008984:	9504      	str	r5, [sp, #16]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8008986:	9302      	str	r3, [sp, #8]
    hdma_uart8_rx.Instance = DMA1_Stream6;
 8008988:	4d22      	ldr	r5, [pc, #136]	; (8008a14 <HAL_UART_MspInit+0xe0>)
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800898a:	4823      	ldr	r0, [pc, #140]	; (8008a18 <HAL_UART_MspInit+0xe4>)
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800898c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART8;
 800898e:	9207      	str	r2, [sp, #28]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8008990:	f7f8 ffac 	bl	80018ec <HAL_GPIO_Init>
    hdma_uart8_rx.Instance = DMA1_Stream6;
 8008994:	4921      	ldr	r1, [pc, #132]	; (8008a1c <HAL_UART_MspInit+0xe8>)
    hdma_uart8_rx.Init.Channel = DMA_CHANNEL_5;
 8008996:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
    hdma_uart8_rx.Init.MemInc = DMA_MINC_ENABLE;
 800899a:	f44f 6380 	mov.w	r3, #1024	; 0x400
    if (HAL_DMA_Init(&hdma_uart8_rx) != HAL_OK)
 800899e:	4628      	mov	r0, r5
    hdma_uart8_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80089a0:	626c      	str	r4, [r5, #36]	; 0x24
    hdma_uart8_rx.Init.MemInc = DMA_MINC_ENABLE;
 80089a2:	612b      	str	r3, [r5, #16]
    hdma_uart8_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80089a4:	e9c5 4402 	strd	r4, r4, [r5, #8]
    hdma_uart8_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80089a8:	e9c5 4405 	strd	r4, r4, [r5, #20]
    hdma_uart8_rx.Init.Priority = DMA_PRIORITY_LOW;
 80089ac:	e9c5 4407 	strd	r4, r4, [r5, #28]
    hdma_uart8_rx.Init.Channel = DMA_CHANNEL_5;
 80089b0:	e9c5 1200 	strd	r1, r2, [r5]
    if (HAL_DMA_Init(&hdma_uart8_rx) != HAL_OK)
 80089b4:	f7f8 fd86 	bl	80014c4 <HAL_DMA_Init>
 80089b8:	bb18      	cbnz	r0, 8008a02 <HAL_UART_MspInit+0xce>
    hdma_uart8_tx.Instance = DMA1_Stream0;
 80089ba:	4c19      	ldr	r4, [pc, #100]	; (8008a20 <HAL_UART_MspInit+0xec>)
    hdma_uart8_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80089bc:	2300      	movs	r3, #0
    hdma_uart8_tx.Instance = DMA1_Stream0;
 80089be:	4819      	ldr	r0, [pc, #100]	; (8008a24 <HAL_UART_MspInit+0xf0>)
    hdma_uart8_tx.Init.Channel = DMA_CHANNEL_5;
 80089c0:	f04f 6720 	mov.w	r7, #167772160	; 0xa000000
    hdma_uart8_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80089c4:	2140      	movs	r1, #64	; 0x40
    hdma_uart8_tx.Init.MemInc = DMA_MINC_ENABLE;
 80089c6:	f44f 6280 	mov.w	r2, #1024	; 0x400
    hdma_uart8_tx.Instance = DMA1_Stream0;
 80089ca:	6020      	str	r0, [r4, #0]
    if (HAL_DMA_Init(&hdma_uart8_tx) != HAL_OK)
 80089cc:	4620      	mov	r0, r4
    __HAL_LINKDMA(huart,hdmarx,hdma_uart8_rx);
 80089ce:	6735      	str	r5, [r6, #112]	; 0x70
 80089d0:	63ae      	str	r6, [r5, #56]	; 0x38
    hdma_uart8_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80089d2:	6263      	str	r3, [r4, #36]	; 0x24
    hdma_uart8_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80089d4:	e9c4 7101 	strd	r7, r1, [r4, #4]
    hdma_uart8_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80089d8:	e9c4 3203 	strd	r3, r2, [r4, #12]
    hdma_uart8_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80089dc:	e9c4 3305 	strd	r3, r3, [r4, #20]
    hdma_uart8_tx.Init.Priority = DMA_PRIORITY_LOW;
 80089e0:	e9c4 3307 	strd	r3, r3, [r4, #28]
    if (HAL_DMA_Init(&hdma_uart8_tx) != HAL_OK)
 80089e4:	f7f8 fd6e 	bl	80014c4 <HAL_DMA_Init>
 80089e8:	b970      	cbnz	r0, 8008a08 <HAL_UART_MspInit+0xd4>
    HAL_NVIC_SetPriority(UART8_IRQn, 0, 0);
 80089ea:	2200      	movs	r2, #0
    __HAL_LINKDMA(huart,hdmatx,hdma_uart8_tx);
 80089ec:	66f4      	str	r4, [r6, #108]	; 0x6c
    HAL_NVIC_SetPriority(UART8_IRQn, 0, 0);
 80089ee:	2053      	movs	r0, #83	; 0x53
    __HAL_LINKDMA(huart,hdmatx,hdma_uart8_tx);
 80089f0:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_NVIC_SetPriority(UART8_IRQn, 0, 0);
 80089f2:	4611      	mov	r1, r2
 80089f4:	f7f8 fd06 	bl	8001404 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART8_IRQn);
 80089f8:	2053      	movs	r0, #83	; 0x53
 80089fa:	f7f8 fd39 	bl	8001470 <HAL_NVIC_EnableIRQ>
}
 80089fe:	b009      	add	sp, #36	; 0x24
 8008a00:	bdf0      	pop	{r4, r5, r6, r7, pc}
      Error_Handler();
 8008a02:	f7ff fe79 	bl	80086f8 <Error_Handler>
 8008a06:	e7d8      	b.n	80089ba <HAL_UART_MspInit+0x86>
      Error_Handler();
 8008a08:	f7ff fe76 	bl	80086f8 <Error_Handler>
 8008a0c:	e7ed      	b.n	80089ea <HAL_UART_MspInit+0xb6>
 8008a0e:	bf00      	nop
 8008a10:	40007c00 	.word	0x40007c00
 8008a14:	20019a68 	.word	0x20019a68
 8008a18:	40021000 	.word	0x40021000
 8008a1c:	400260a0 	.word	0x400260a0
 8008a20:	20019ac8 	.word	0x20019ac8
 8008a24:	40026010 	.word	0x40026010

08008a28 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8008a28:	4770      	bx	lr
 8008a2a:	bf00      	nop

08008a2c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8008a2c:	e7fe      	b.n	8008a2c <HardFault_Handler>
 8008a2e:	bf00      	nop

08008a30 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8008a30:	e7fe      	b.n	8008a30 <MemManage_Handler>
 8008a32:	bf00      	nop

08008a34 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8008a34:	e7fe      	b.n	8008a34 <BusFault_Handler>
 8008a36:	bf00      	nop

08008a38 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8008a38:	e7fe      	b.n	8008a38 <UsageFault_Handler>
 8008a3a:	bf00      	nop

08008a3c <SVC_Handler>:
 8008a3c:	4770      	bx	lr
 8008a3e:	bf00      	nop

08008a40 <DebugMon_Handler>:
 8008a40:	4770      	bx	lr
 8008a42:	bf00      	nop

08008a44 <PendSV_Handler>:
 8008a44:	4770      	bx	lr
 8008a46:	bf00      	nop

08008a48 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8008a48:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8008a4a:	f7f8 fa2f 	bl	8000eac <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
HAL_SYSTICK_IRQHandler();
  /* USER CODE END SysTick_IRQn 1 */
}
 8008a4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
HAL_SYSTICK_IRQHandler();
 8008a52:	f7f8 bd33 	b.w	80014bc <HAL_SYSTICK_IRQHandler>
 8008a56:	bf00      	nop

08008a58 <DMA1_Stream0_IRQHandler>:
void DMA1_Stream0_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart8_tx);
 8008a58:	4801      	ldr	r0, [pc, #4]	; (8008a60 <DMA1_Stream0_IRQHandler+0x8>)
 8008a5a:	f7f8 be71 	b.w	8001740 <HAL_DMA_IRQHandler>
 8008a5e:	bf00      	nop
 8008a60:	20019ac8 	.word	0x20019ac8

08008a64 <DMA1_Stream6_IRQHandler>:
void DMA1_Stream6_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */

  /* USER CODE END DMA1_Stream6_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart8_rx);
 8008a64:	4801      	ldr	r0, [pc, #4]	; (8008a6c <DMA1_Stream6_IRQHandler+0x8>)
 8008a66:	f7f8 be6b 	b.w	8001740 <HAL_DMA_IRQHandler>
 8008a6a:	bf00      	nop
 8008a6c:	20019a68 	.word	0x20019a68

08008a70 <DMA2_Stream0_IRQHandler>:
void DMA2_Stream0_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc3);
 8008a70:	4801      	ldr	r0, [pc, #4]	; (8008a78 <DMA2_Stream0_IRQHandler+0x8>)
 8008a72:	f7f8 be65 	b.w	8001740 <HAL_DMA_IRQHandler>
 8008a76:	bf00      	nop
 8008a78:	20019950 	.word	0x20019950

08008a7c <UART8_IRQHandler>:
void UART8_IRQHandler(void)
{
  /* USER CODE BEGIN UART8_IRQn 0 */

  /* USER CODE END UART8_IRQn 0 */
  HAL_UART_IRQHandler(&huart8);
 8008a7c:	4801      	ldr	r0, [pc, #4]	; (8008a84 <UART8_IRQHandler+0x8>)
 8008a7e:	f7fa bfe3 	b.w	8003a48 <HAL_UART_IRQHandler>
 8008a82:	bf00      	nop
 8008a84:	20019b4c 	.word	0x20019b4c

08008a88 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8008a88:	4a0c      	ldr	r2, [pc, #48]	; (8008abc <_sbrk+0x34>)
{
 8008a8a:	b508      	push	{r3, lr}
	if (heap_end == 0)
 8008a8c:	6813      	ldr	r3, [r2, #0]
 8008a8e:	b133      	cbz	r3, 8008a9e <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8008a90:	4418      	add	r0, r3
 8008a92:	4669      	mov	r1, sp
 8008a94:	4288      	cmp	r0, r1
 8008a96:	d809      	bhi.n	8008aac <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8008a98:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8008a9a:	4618      	mov	r0, r3
 8008a9c:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8008a9e:	4908      	ldr	r1, [pc, #32]	; (8008ac0 <_sbrk+0x38>)
 8008aa0:	460b      	mov	r3, r1
 8008aa2:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8008aa4:	4669      	mov	r1, sp
 8008aa6:	4418      	add	r0, r3
 8008aa8:	4288      	cmp	r0, r1
 8008aaa:	d9f5      	bls.n	8008a98 <_sbrk+0x10>
		errno = ENOMEM;
 8008aac:	f011 fbe0 	bl	801a270 <__errno>
 8008ab0:	220c      	movs	r2, #12
		return (caddr_t) -1;
 8008ab2:	f04f 33ff 	mov.w	r3, #4294967295
		errno = ENOMEM;
 8008ab6:	6002      	str	r2, [r0, #0]
}
 8008ab8:	4618      	mov	r0, r3
 8008aba:	bd08      	pop	{r3, pc}
 8008abc:	20019428 	.word	0x20019428
 8008ac0:	20019db0 	.word	0x20019db0

08008ac4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008ac4:	4a03      	ldr	r2, [pc, #12]	; (8008ad4 <SystemInit+0x10>)
 8008ac6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8008aca:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008ace:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8008ad2:	4770      	bx	lr
 8008ad4:	e000ed00 	.word	0xe000ed00

08008ad8 <_cbWin>:
static void _cbWin(WM_MESSAGE * pMsg);
static void _cbWin(WM_MESSAGE * pMsg) {
  //WM_HWIN                 hDialog;
  static LISTWHEEL_Handle hMulti;

  switch (pMsg->MsgId) {
 8008ad8:	6803      	ldr	r3, [r0, #0]
 8008ada:	2b01      	cmp	r3, #1
static void _cbWin(WM_MESSAGE * pMsg) {
 8008adc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008ae0:	b084      	sub	sp, #16
  switch (pMsg->MsgId) {
 8008ae2:	d00e      	beq.n	8008b02 <_cbWin+0x2a>
 8008ae4:	2b0f      	cmp	r3, #15
 8008ae6:	d107      	bne.n	8008af8 <_cbWin+0x20>
    // Set alignment of tabs
    //
    MULTIPAGE_SetAlign(hMulti, MULTIPAGE_ALIGN_LEFT);
    break;
  case WM_PAINT:
    GUI_SetBkColor(GUI_MAKE_COLOR(0x00FFDBB3));
 8008ae8:	4826      	ldr	r0, [pc, #152]	; (8008b84 <_cbWin+0xac>)
 8008aea:	f008 fd4f 	bl	801158c <GUI_SetBkColor>
  default:
    WM_DefaultProc(pMsg);
    break;
  }

}
 8008aee:	b004      	add	sp, #16
 8008af0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    GUI_Clear();
 8008af4:	f009 bb0c 	b.w	8012110 <GUI_Clear>
}
 8008af8:	b004      	add	sp, #16
 8008afa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    WM_DefaultProc(pMsg);
 8008afe:	f004 bca7 	b.w	800d450 <WM_DefaultProc>
    hMulti = MULTIPAGE_CreateEx(0, 0, LCD_GetXSize(), LCD_GetYSize(), WM_HBKWIN, WM_CF_SHOW, 0, GUI_ID_MULTIPAGE0);
 8008b02:	2400      	movs	r4, #0
 8008b04:	f006 ff38 	bl	800f978 <LCD_GetXSize>
 8008b08:	2602      	movs	r6, #2
 8008b0a:	4607      	mov	r7, r0
 8008b0c:	f006 ff3c 	bl	800f988 <LCD_GetYSize>
 8008b10:	4680      	mov	r8, r0
 8008b12:	f003 faed 	bl	800c0f0 <WM_GetDesktopWindow>
 8008b16:	f44f 710c 	mov.w	r1, #560	; 0x230
 8008b1a:	4d1b      	ldr	r5, [pc, #108]	; (8008b88 <_cbWin+0xb0>)
 8008b1c:	4643      	mov	r3, r8
 8008b1e:	9000      	str	r0, [sp, #0]
 8008b20:	463a      	mov	r2, r7
 8008b22:	9103      	str	r1, [sp, #12]
 8008b24:	4620      	mov	r0, r4
 8008b26:	4621      	mov	r1, r4
 8008b28:	9601      	str	r6, [sp, #4]
 8008b2a:	9402      	str	r4, [sp, #8]
 8008b2c:	f001 fb52 	bl	800a1d4 <MULTIPAGE_CreateEx>
    hDialog_app = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog1, WM_UNATTACHED, 0, 0);
 8008b30:	f04f 33ff 	mov.w	r3, #4294967295
    hMulti = MULTIPAGE_CreateEx(0, 0, LCD_GetXSize(), LCD_GetYSize(), WM_HBKWIN, WM_CF_SHOW, 0, GUI_ID_MULTIPAGE0);
 8008b34:	6028      	str	r0, [r5, #0]
    hDialog_app = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog1, WM_UNATTACHED, 0, 0);
 8008b36:	2106      	movs	r1, #6
 8008b38:	4a14      	ldr	r2, [pc, #80]	; (8008b8c <_cbWin+0xb4>)
 8008b3a:	4815      	ldr	r0, [pc, #84]	; (8008b90 <_cbWin+0xb8>)
 8008b3c:	4e15      	ldr	r6, [pc, #84]	; (8008b94 <_cbWin+0xbc>)
 8008b3e:	e9cd 4400 	strd	r4, r4, [sp]
 8008b42:	f002 fbb3 	bl	800b2ac <GUI_CreateDialogBox>
 8008b46:	4603      	mov	r3, r0
    MULTIPAGE_AddPage(hMulti, hDialog_app, "Measured distance");
 8008b48:	4601      	mov	r1, r0
 8008b4a:	4a13      	ldr	r2, [pc, #76]	; (8008b98 <_cbWin+0xc0>)
 8008b4c:	6828      	ldr	r0, [r5, #0]
    hDialog_app = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog1, WM_UNATTACHED, 0, 0);
 8008b4e:	6033      	str	r3, [r6, #0]
    MULTIPAGE_AddPage(hMulti, hDialog_app, "Measured distance");
 8008b50:	f001 fd1e 	bl	800a590 <MULTIPAGE_AddPage>
    hDialog_sett = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_UNATTACHED, 0, 0);
 8008b54:	9401      	str	r4, [sp, #4]
 8008b56:	f04f 33ff 	mov.w	r3, #4294967295
 8008b5a:	9400      	str	r4, [sp, #0]
 8008b5c:	210a      	movs	r1, #10
 8008b5e:	4a0f      	ldr	r2, [pc, #60]	; (8008b9c <_cbWin+0xc4>)
 8008b60:	480f      	ldr	r0, [pc, #60]	; (8008ba0 <_cbWin+0xc8>)
 8008b62:	f002 fba3 	bl	800b2ac <GUI_CreateDialogBox>
 8008b66:	4e0f      	ldr	r6, [pc, #60]	; (8008ba4 <_cbWin+0xcc>)
 8008b68:	4603      	mov	r3, r0
    MULTIPAGE_AddPage(hMulti, hDialog_sett, "Settings");
 8008b6a:	4601      	mov	r1, r0
 8008b6c:	4a0e      	ldr	r2, [pc, #56]	; (8008ba8 <_cbWin+0xd0>)
 8008b6e:	6828      	ldr	r0, [r5, #0]
    hDialog_sett = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_UNATTACHED, 0, 0);
 8008b70:	6033      	str	r3, [r6, #0]
    MULTIPAGE_AddPage(hMulti, hDialog_sett, "Settings");
 8008b72:	f001 fd0d 	bl	800a590 <MULTIPAGE_AddPage>
    MULTIPAGE_SetAlign(hMulti, MULTIPAGE_ALIGN_LEFT);
 8008b76:	4621      	mov	r1, r4
 8008b78:	6828      	ldr	r0, [r5, #0]
}
 8008b7a:	b004      	add	sp, #16
 8008b7c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    MULTIPAGE_SetAlign(hMulti, MULTIPAGE_ALIGN_LEFT);
 8008b80:	f001 bd9a 	b.w	800a6b8 <MULTIPAGE_SetAlign>
 8008b84:	00ffdbb3 	.word	0x00ffdbb3
 8008b88:	2001942c 	.word	0x2001942c
 8008b8c:	08008c69 	.word	0x08008c69
 8008b90:	0801abf0 	.word	0x0801abf0
 8008b94:	20019bf4 	.word	0x20019bf4
 8008b98:	0801adb4 	.word	0x0801adb4
 8008b9c:	08008bad 	.word	0x08008bad
 8008ba0:	0801ac98 	.word	0x0801ac98
 8008ba4:	20019bf0 	.word	0x20019bf0
 8008ba8:	0801adc8 	.word	0x0801adc8

08008bac <_cbDialog2>:
  switch (pMsg->MsgId) {
 8008bac:	6803      	ldr	r3, [r0, #0]
 8008bae:	2b1d      	cmp	r3, #29
static void _cbDialog2(WM_MESSAGE * pMsg) {
 8008bb0:	b510      	push	{r4, lr}
 8008bb2:	4604      	mov	r4, r0
  switch (pMsg->MsgId) {
 8008bb4:	d00a      	beq.n	8008bcc <_cbDialog2+0x20>
 8008bb6:	2b26      	cmp	r3, #38	; 0x26
 8008bb8:	d104      	bne.n	8008bc4 <_cbDialog2+0x18>
    Id    = WM_GetId(pMsg->hWinSrc);
 8008bba:	6880      	ldr	r0, [r0, #8]
}
 8008bbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Id    = WM_GetId(pMsg->hWinSrc);
 8008bc0:	f003 ba48 	b.w	800c054 <WM_GetId>
}
 8008bc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    WM_DefaultProc(pMsg);
 8008bc8:	f004 bc42 	b.w	800d450 <WM_DefaultProc>
    WINDOW_SetBkColor(hItem, GUI_MAKE_COLOR(0x00FFDBB3));
 8008bcc:	4922      	ldr	r1, [pc, #136]	; (8008c58 <_cbDialog2+0xac>)
 8008bce:	6840      	ldr	r0, [r0, #4]
 8008bd0:	f000 f997 	bl	8008f02 <WINDOW_SetBkColor>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
 8008bd4:	f640 0106 	movw	r1, #2054	; 0x806
 8008bd8:	6860      	ldr	r0, [r4, #4]
 8008bda:	f003 fa7a 	bl	800c0d2 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 8008bde:	491f      	ldr	r1, [pc, #124]	; (8008c5c <_cbDialog2+0xb0>)
 8008be0:	f002 fd01 	bl	800b5e6 <BUTTON_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_0);
 8008be4:	f640 0107 	movw	r1, #2055	; 0x807
 8008be8:	6860      	ldr	r0, [r4, #4]
 8008bea:	f003 fa72 	bl	800c0d2 <WM_GetDialogItem>
    RADIO_SetTextColor(hItem, GUI_MAKE_COLOR(0x000000FF));
 8008bee:	21ff      	movs	r1, #255	; 0xff
 8008bf0:	f000 fdfb 	bl	80097ea <RADIO_SetTextColor>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
 8008bf4:	f640 0108 	movw	r1, #2056	; 0x808
 8008bf8:	6860      	ldr	r0, [r4, #4]
 8008bfa:	f003 fa6a 	bl	800c0d2 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8008bfe:	4918      	ldr	r1, [pc, #96]	; (8008c60 <_cbDialog2+0xb4>)
 8008c00:	f000 fb86 	bl	8009310 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_3);
 8008c04:	f640 0109 	movw	r1, #2057	; 0x809
 8008c08:	6860      	ldr	r0, [r4, #4]
 8008c0a:	f003 fa62 	bl	800c0d2 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8008c0e:	4914      	ldr	r1, [pc, #80]	; (8008c60 <_cbDialog2+0xb4>)
 8008c10:	f000 fb7e 	bl	8009310 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
 8008c14:	f640 010a 	movw	r1, #2058	; 0x80a
 8008c18:	6860      	ldr	r0, [r4, #4]
 8008c1a:	f003 fa5a 	bl	800c0d2 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8008c1e:	4910      	ldr	r1, [pc, #64]	; (8008c60 <_cbDialog2+0xb4>)
 8008c20:	f000 fb76 	bl	8009310 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
 8008c24:	f640 010d 	movw	r1, #2061	; 0x80d
 8008c28:	6860      	ldr	r0, [r4, #4]
 8008c2a:	f003 fa52 	bl	800c0d2 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8008c2e:	490c      	ldr	r1, [pc, #48]	; (8008c60 <_cbDialog2+0xb4>)
 8008c30:	f000 fb6e 	bl	8009310 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8008c34:	f640 010e 	movw	r1, #2062	; 0x80e
 8008c38:	6860      	ldr	r0, [r4, #4]
 8008c3a:	f003 fa4a 	bl	800c0d2 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_16B_ASCII);
 8008c3e:	4908      	ldr	r1, [pc, #32]	; (8008c60 <_cbDialog2+0xb4>)
 8008c40:	f000 fb66 	bl	8009310 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_2);
 8008c44:	6860      	ldr	r0, [r4, #4]
 8008c46:	f640 010f 	movw	r1, #2063	; 0x80f
 8008c4a:	f003 fa42 	bl	800c0d2 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_16_ASCII);
 8008c4e:	4905      	ldr	r1, [pc, #20]	; (8008c64 <_cbDialog2+0xb8>)
}
 8008c50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BUTTON_SetFont(hItem, GUI_FONT_16_ASCII);
 8008c54:	f002 bcc7 	b.w	800b5e6 <BUTTON_SetFont>
 8008c58:	00ffdbb3 	.word	0x00ffdbb3
 8008c5c:	0801d230 	.word	0x0801d230
 8008c60:	0801f4a8 	.word	0x0801f4a8
 8008c64:	0801eb88 	.word	0x0801eb88

08008c68 <_cbDialog1>:
  switch (pMsg->MsgId) {
 8008c68:	6802      	ldr	r2, [r0, #0]
 8008c6a:	2a1d      	cmp	r2, #29
static void _cbDialog1(WM_MESSAGE * pMsg) {
 8008c6c:	b538      	push	{r3, r4, r5, lr}
 8008c6e:	4604      	mov	r4, r0
  switch (pMsg->MsgId) {
 8008c70:	d00a      	beq.n	8008c88 <_cbDialog1+0x20>
 8008c72:	2a26      	cmp	r2, #38	; 0x26
 8008c74:	d104      	bne.n	8008c80 <_cbDialog1+0x18>
    Id    = WM_GetId(pMsg->hWinSrc);
 8008c76:	6880      	ldr	r0, [r0, #8]
}
 8008c78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    Id    = WM_GetId(pMsg->hWinSrc);
 8008c7c:	f003 b9ea 	b.w	800c054 <WM_GetId>
}
 8008c80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    WM_DefaultProc(pMsg);
 8008c84:	f004 bbe4 	b.w	800d450 <WM_DefaultProc>
    WINDOW_SetBkColor(hItem, GUI_MAKE_COLOR(0x00FFDBB3));
 8008c88:	491b      	ldr	r1, [pc, #108]	; (8008cf8 <_cbDialog1+0x90>)
 8008c8a:	6840      	ldr	r0, [r0, #4]
 8008c8c:	f000 f939 	bl	8008f02 <WINDOW_SetBkColor>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 8008c90:	f640 0102 	movw	r1, #2050	; 0x802
 8008c94:	6860      	ldr	r0, [r4, #4]
 8008c96:	f003 fa1c 	bl	800c0d2 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8008c9a:	4918      	ldr	r1, [pc, #96]	; (8008cfc <_cbDialog1+0x94>)
 8008c9c:	f000 fb38 	bl	8009310 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_0);
 8008ca0:	f640 0103 	movw	r1, #2051	; 0x803
 8008ca4:	6860      	ldr	r0, [r4, #4]
 8008ca6:	f003 fa14 	bl	800c0d2 <WM_GetDialogItem>
 8008caa:	4605      	mov	r5, r0
    EDIT_SetText(hItem, "123");
 8008cac:	4914      	ldr	r1, [pc, #80]	; (8008d00 <_cbDialog1+0x98>)
 8008cae:	f002 fa7f 	bl	800b1b0 <EDIT_SetText>
    EDIT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8008cb2:	4628      	mov	r0, r5
 8008cb4:	4911      	ldr	r1, [pc, #68]	; (8008cfc <_cbDialog1+0x94>)
 8008cb6:	f002 fa69 	bl	800b18c <EDIT_SetFont>
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
 8008cba:	4628      	mov	r0, r5
 8008cbc:	210e      	movs	r1, #14
 8008cbe:	f002 fae4 	bl	800b28a <EDIT_SetTextAlign>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 8008cc2:	f640 0104 	movw	r1, #2052	; 0x804
 8008cc6:	6860      	ldr	r0, [r4, #4]
 8008cc8:	f003 fa03 	bl	800c0d2 <WM_GetDialogItem>
    TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8008ccc:	490b      	ldr	r1, [pc, #44]	; (8008cfc <_cbDialog1+0x94>)
 8008cce:	f000 fb1f 	bl	8009310 <TEXT_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_0);
 8008cd2:	f640 0105 	movw	r1, #2053	; 0x805
 8008cd6:	6860      	ldr	r0, [r4, #4]
 8008cd8:	f003 f9fb 	bl	800c0d2 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 8008cdc:	4909      	ldr	r1, [pc, #36]	; (8008d04 <_cbDialog1+0x9c>)
 8008cde:	f002 fc82 	bl	800b5e6 <BUTTON_SetFont>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
 8008ce2:	6860      	ldr	r0, [r4, #4]
 8008ce4:	f640 0106 	movw	r1, #2054	; 0x806
 8008ce8:	f003 f9f3 	bl	800c0d2 <WM_GetDialogItem>
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 8008cec:	4905      	ldr	r1, [pc, #20]	; (8008d04 <_cbDialog1+0x9c>)
}
 8008cee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    BUTTON_SetFont(hItem, GUI_FONT_20_ASCII);
 8008cf2:	f002 bc78 	b.w	800b5e6 <BUTTON_SetFont>
 8008cf6:	bf00      	nop
 8008cf8:	00ffdbb3 	.word	0x00ffdbb3
 8008cfc:	0801bdb8 	.word	0x0801bdb8
 8008d00:	0801adb0 	.word	0x0801adb0
 8008d04:	0801d230 	.word	0x0801d230

08008d08 <DisplayApp_Init>:

void DisplayApp_Init(void) {
 8008d08:	b500      	push	{lr}
 8008d0a:	b085      	sub	sp, #20
  //
  // Init GUI
  //
  GUI_Init();
 8008d0c:	f009 fa3a 	bl	8012184 <GUI_Init>
  //
  // Enable multi-buffering
  //
  WM_MULTIBUF_Enable(1);
 8008d10:	2001      	movs	r0, #1
 8008d12:	f003 f905 	bl	800bf20 <WM_MULTIBUF_Enable>
  //
  // Create a window
  //
  WM_CreateWindowAsChild(0, 0, 480, 272, WM_HBKWIN, WM_CF_SHOW, _cbWin, 0);
 8008d16:	f003 f9eb 	bl	800c0f0 <WM_GetDesktopWindow>
 8008d1a:	4b08      	ldr	r3, [pc, #32]	; (8008d3c <DisplayApp_Init+0x34>)
 8008d1c:	2202      	movs	r2, #2
 8008d1e:	2100      	movs	r1, #0
 8008d20:	9302      	str	r3, [sp, #8]
 8008d22:	f44f 7388 	mov.w	r3, #272	; 0x110
 8008d26:	9201      	str	r2, [sp, #4]
 8008d28:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8008d2c:	9000      	str	r0, [sp, #0]
 8008d2e:	4608      	mov	r0, r1
 8008d30:	9103      	str	r1, [sp, #12]
 8008d32:	f003 ffab 	bl	800cc8c <WM_CreateWindowAsChild>

}
 8008d36:	b005      	add	sp, #20
 8008d38:	f85d fb04 	ldr.w	pc, [sp], #4
 8008d3c:	08008ad9 	.word	0x08008ad9

08008d40 <WriteDistance>:

void WriteDistance(int distance);
void WriteDistance(int distance)
{
 8008d40:	b500      	push	{lr}
 8008d42:	b083      	sub	sp, #12
	char distance_tmp[5];

	sprintf((char*)distance_tmp, "%d\r",distance);
 8008d44:	4602      	mov	r2, r0
 8008d46:	4908      	ldr	r1, [pc, #32]	; (8008d68 <WriteDistance+0x28>)
 8008d48:	4668      	mov	r0, sp
 8008d4a:	f011 faf7 	bl	801a33c <siprintf>
	EDIT_SetText(WM_GetDialogItem(hDialog_app,ID_EDIT_0),distance_tmp); // ispis pin diode
 8008d4e:	4b07      	ldr	r3, [pc, #28]	; (8008d6c <WriteDistance+0x2c>)
 8008d50:	f640 0103 	movw	r1, #2051	; 0x803
 8008d54:	6818      	ldr	r0, [r3, #0]
 8008d56:	f003 f9bc 	bl	800c0d2 <WM_GetDialogItem>
 8008d5a:	4669      	mov	r1, sp
 8008d5c:	f002 fa28 	bl	800b1b0 <EDIT_SetText>
}
 8008d60:	b003      	add	sp, #12
 8008d62:	f85d fb04 	ldr.w	pc, [sp], #4
 8008d66:	bf00      	nop
 8008d68:	0801abec 	.word	0x0801abec
 8008d6c:	20019bf4 	.word	0x20019bf4

08008d70 <GetTimingBudget_Percentage>:

int GetTimingBudget_Percentage(void);
int GetTimingBudget_Percentage(void) {
 8008d70:	b508      	push	{r3, lr}

	return SLIDER_GetValue(WM_GetDialogItem(hDialog_sett, ID_SLIDER_0));
 8008d72:	4b05      	ldr	r3, [pc, #20]	; (8008d88 <GetTimingBudget_Percentage+0x18>)
 8008d74:	f640 010b 	movw	r1, #2059	; 0x80b
 8008d78:	6818      	ldr	r0, [r3, #0]
 8008d7a:	f003 f9aa 	bl	800c0d2 <WM_GetDialogItem>
}
 8008d7e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	return SLIDER_GetValue(WM_GetDialogItem(hDialog_sett, ID_SLIDER_0));
 8008d82:	f000 bd23 	b.w	80097cc <SLIDER_GetValue>
 8008d86:	bf00      	nop
 8008d88:	20019bf0 	.word	0x20019bf0

08008d8c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8008d8c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8008dc4 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8008d90:	480d      	ldr	r0, [pc, #52]	; (8008dc8 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8008d92:	490e      	ldr	r1, [pc, #56]	; (8008dcc <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8008d94:	4a0e      	ldr	r2, [pc, #56]	; (8008dd0 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8008d96:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8008d98:	e002      	b.n	8008da0 <LoopCopyDataInit>

08008d9a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8008d9a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8008d9c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8008d9e:	3304      	adds	r3, #4

08008da0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8008da0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8008da2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8008da4:	d3f9      	bcc.n	8008d9a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8008da6:	4a0b      	ldr	r2, [pc, #44]	; (8008dd4 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8008da8:	4c0b      	ldr	r4, [pc, #44]	; (8008dd8 <LoopFillZerobss+0x26>)
  movs r3, #0
 8008daa:	2300      	movs	r3, #0
  b LoopFillZerobss
 8008dac:	e001      	b.n	8008db2 <LoopFillZerobss>

08008dae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8008dae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8008db0:	3204      	adds	r2, #4

08008db2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8008db2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8008db4:	d3fb      	bcc.n	8008dae <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8008db6:	f7ff fe85 	bl	8008ac4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8008dba:	f011 fa5f 	bl	801a27c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8008dbe:	f7ff fa95 	bl	80082ec <main>
  bx  lr    
 8008dc2:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8008dc4:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 8008dc8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8008dcc:	200003fc 	.word	0x200003fc
  ldr r2, =_sidata
 8008dd0:	080214fc 	.word	0x080214fc
  ldr r2, =_sbss
 8008dd4:	200003fc 	.word	0x200003fc
  ldr r4, =_ebss
 8008dd8:	20019dac 	.word	0x20019dac

08008ddc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8008ddc:	e7fe      	b.n	8008ddc <ADC_IRQHandler>

08008dde <WINDOW_Callback>:
 8008dde:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008de2:	6845      	ldr	r5, [r0, #4]
 8008de4:	4604      	mov	r4, r0
 8008de6:	4628      	mov	r0, r5
 8008de8:	f009 fdc2 	bl	8012970 <GUI_ALLOC_LockH>
 8008dec:	af02      	add	r7, sp, #8
 8008dee:	6b86      	ldr	r6, [r0, #56]	; 0x38
 8008df0:	f847 0d08 	str.w	r0, [r7, #-8]!
 8008df4:	f8d0 9034 	ldr.w	r9, [r0, #52]	; 0x34
 8008df8:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 8008dfc:	4668      	mov	r0, sp
 8008dfe:	f009 fdc5 	bl	801298c <GUI_ALLOC_UnlockH>
 8008e02:	6823      	ldr	r3, [r4, #0]
 8008e04:	2b1f      	cmp	r3, #31
 8008e06:	d02f      	beq.n	8008e68 <WINDOW_Callback+0x8a>
 8008e08:	dc06      	bgt.n	8008e18 <WINDOW_Callback+0x3a>
 8008e0a:	2b0f      	cmp	r3, #15
 8008e0c:	d060      	beq.n	8008ed0 <WINDOW_Callback+0xf2>
 8008e0e:	2b1e      	cmp	r3, #30
 8008e10:	d015      	beq.n	8008e3e <WINDOW_Callback+0x60>
 8008e12:	2b0e      	cmp	r3, #14
 8008e14:	d169      	bne.n	8008eea <WINDOW_Callback+0x10c>
 8008e16:	e04a      	b.n	8008eae <WINDOW_Callback+0xd0>
 8008e18:	2b22      	cmp	r3, #34	; 0x22
 8008e1a:	d063      	beq.n	8008ee4 <WINDOW_Callback+0x106>
 8008e1c:	2b2a      	cmp	r3, #42	; 0x2a
 8008e1e:	d002      	beq.n	8008e26 <WINDOW_Callback+0x48>
 8008e20:	2b20      	cmp	r3, #32
 8008e22:	d162      	bne.n	8008eea <WINDOW_Callback+0x10c>
 8008e24:	e025      	b.n	8008e72 <WINDOW_Callback+0x94>
 8008e26:	4628      	mov	r0, r5
 8008e28:	f009 fda2 	bl	8012970 <GUI_ALLOC_LockH>
 8008e2c:	68e3      	ldr	r3, [r4, #12]
 8008e2e:	9000      	str	r0, [sp, #0]
 8008e30:	b10b      	cbz	r3, 8008e36 <WINDOW_Callback+0x58>
 8008e32:	63c3      	str	r3, [r0, #60]	; 0x3c
 8008e34:	e001      	b.n	8008e3a <WINDOW_Callback+0x5c>
 8008e36:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8008e38:	60e3      	str	r3, [r4, #12]
 8008e3a:	4668      	mov	r0, sp
 8008e3c:	e034      	b.n	8008ea8 <WINDOW_Callback+0xca>
 8008e3e:	68e4      	ldr	r4, [r4, #12]
 8008e40:	2c01      	cmp	r4, #1
 8008e42:	d15b      	bne.n	8008efc <WINDOW_Callback+0x11e>
 8008e44:	4630      	mov	r0, r6
 8008e46:	f003 f87b 	bl	800bf40 <WM_IsWindow>
 8008e4a:	2800      	cmp	r0, #0
 8008e4c:	d03c      	beq.n	8008ec8 <WINDOW_Callback+0xea>
 8008e4e:	4630      	mov	r0, r6
 8008e50:	f002 fe18 	bl	800ba84 <WM_SetFocus>
 8008e54:	4630      	mov	r0, r6
 8008e56:	f003 f8ad 	bl	800bfb4 <WM_HasFocus>
 8008e5a:	2800      	cmp	r0, #0
 8008e5c:	d04e      	beq.n	8008efc <WINDOW_Callback+0x11e>
 8008e5e:	4630      	mov	r0, r6
 8008e60:	4621      	mov	r1, r4
 8008e62:	f000 f938 	bl	80090d6 <WIDGET_OrState>
 8008e66:	e049      	b.n	8008efc <WINDOW_Callback+0x11e>
 8008e68:	4628      	mov	r0, r5
 8008e6a:	4621      	mov	r1, r4
 8008e6c:	f000 f966 	bl	800913c <WIDGET_HandleActive>
 8008e70:	e044      	b.n	8008efc <WINDOW_Callback+0x11e>
 8008e72:	4628      	mov	r0, r5
 8008e74:	f009 fd7c 	bl	8012970 <GUI_ALLOC_LockH>
 8008e78:	68e4      	ldr	r4, [r4, #12]
 8008e7a:	9001      	str	r0, [sp, #4]
 8008e7c:	b19c      	cbz	r4, 8008ea6 <WINDOW_Callback+0xc8>
 8008e7e:	6860      	ldr	r0, [r4, #4]
 8008e80:	4629      	mov	r1, r5
 8008e82:	f002 fc73 	bl	800b76c <WM__IsAncestorOrSelf>
 8008e86:	b930      	cbnz	r0, 8008e96 <WINDOW_Callback+0xb8>
 8008e88:	6820      	ldr	r0, [r4, #0]
 8008e8a:	4629      	mov	r1, r5
 8008e8c:	f002 fc5d 	bl	800b74a <WM__IsAncestor>
 8008e90:	b148      	cbz	r0, 8008ea6 <WINDOW_Callback+0xc8>
 8008e92:	6822      	ldr	r2, [r4, #0]
 8008e94:	e005      	b.n	8008ea2 <WINDOW_Callback+0xc4>
 8008e96:	6860      	ldr	r0, [r4, #4]
 8008e98:	4629      	mov	r1, r5
 8008e9a:	f002 fc56 	bl	800b74a <WM__IsAncestor>
 8008e9e:	b110      	cbz	r0, 8008ea6 <WINDOW_Callback+0xc8>
 8008ea0:	6862      	ldr	r2, [r4, #4]
 8008ea2:	9b01      	ldr	r3, [sp, #4]
 8008ea4:	639a      	str	r2, [r3, #56]	; 0x38
 8008ea6:	a801      	add	r0, sp, #4
 8008ea8:	f009 fd70 	bl	801298c <GUI_ALLOC_UnlockH>
 8008eac:	e026      	b.n	8008efc <WINDOW_Callback+0x11e>
 8008eae:	68e3      	ldr	r3, [r4, #12]
 8008eb0:	685a      	ldr	r2, [r3, #4]
 8008eb2:	2a00      	cmp	r2, #0
 8008eb4:	dd19      	ble.n	8008eea <WINDOW_Callback+0x10c>
 8008eb6:	681b      	ldr	r3, [r3, #0]
 8008eb8:	2b09      	cmp	r3, #9
 8008eba:	d005      	beq.n	8008ec8 <WINDOW_Callback+0xea>
 8008ebc:	2b0a      	cmp	r3, #10
 8008ebe:	d114      	bne.n	8008eea <WINDOW_Callback+0x10c>
 8008ec0:	4628      	mov	r0, r5
 8008ec2:	f002 fd7d 	bl	800b9c0 <WM_SetFocusOnPrevChild>
 8008ec6:	e019      	b.n	8008efc <WINDOW_Callback+0x11e>
 8008ec8:	4628      	mov	r0, r5
 8008eca:	f002 fda9 	bl	800ba20 <WM_SetFocusOnNextChild>
 8008ece:	e015      	b.n	8008efc <WINDOW_Callback+0x11e>
 8008ed0:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8008ed4:	4598      	cmp	r8, r3
 8008ed6:	d008      	beq.n	8008eea <WINDOW_Callback+0x10c>
 8008ed8:	4640      	mov	r0, r8
 8008eda:	f007 f965 	bl	80101a8 <LCD_SetBkColor>
 8008ede:	f009 f917 	bl	8012110 <GUI_Clear>
 8008ee2:	e002      	b.n	8008eea <WINDOW_Callback+0x10c>
 8008ee4:	f8c4 800c 	str.w	r8, [r4, #12]
 8008ee8:	e008      	b.n	8008efc <WINDOW_Callback+0x11e>
 8008eea:	f1b9 0f00 	cmp.w	r9, #0
 8008eee:	d002      	beq.n	8008ef6 <WINDOW_Callback+0x118>
 8008ef0:	4620      	mov	r0, r4
 8008ef2:	47c8      	blx	r9
 8008ef4:	e002      	b.n	8008efc <WINDOW_Callback+0x11e>
 8008ef6:	4620      	mov	r0, r4
 8008ef8:	f004 faaa 	bl	800d450 <WM_DefaultProc>
 8008efc:	b003      	add	sp, #12
 8008efe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008f02 <WINDOW_SetBkColor>:
 8008f02:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008f04:	460d      	mov	r5, r1
 8008f06:	4604      	mov	r4, r0
 8008f08:	f009 fd32 	bl	8012970 <GUI_ALLOC_LockH>
 8008f0c:	4602      	mov	r2, r0
 8008f0e:	a802      	add	r0, sp, #8
 8008f10:	6415      	str	r5, [r2, #64]	; 0x40
 8008f12:	f840 2d04 	str.w	r2, [r0, #-4]!
 8008f16:	f009 fd39 	bl	801298c <GUI_ALLOC_UnlockH>
 8008f1a:	4620      	mov	r0, r4
 8008f1c:	f003 fe75 	bl	800cc0a <WM_InvalidateWindow>
 8008f20:	b003      	add	sp, #12
 8008f22:	bd30      	pop	{r4, r5, pc}

08008f24 <WINDOW_CreateUser>:
 8008f24:	b510      	push	{r4, lr}
 8008f26:	b086      	sub	sp, #24
 8008f28:	9c08      	ldr	r4, [sp, #32]
 8008f2a:	9400      	str	r4, [sp, #0]
 8008f2c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8008f2e:	9401      	str	r4, [sp, #4]
 8008f30:	4c0f      	ldr	r4, [pc, #60]	; (8008f70 <WINDOW_CreateUser+0x4c>)
 8008f32:	9402      	str	r4, [sp, #8]
 8008f34:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8008f36:	3418      	adds	r4, #24
 8008f38:	9403      	str	r4, [sp, #12]
 8008f3a:	f003 fea7 	bl	800cc8c <WM_CreateWindowAsChild>
 8008f3e:	4604      	mov	r4, r0
 8008f40:	b190      	cbz	r0, 8008f68 <WINDOW_CreateUser+0x44>
 8008f42:	f009 fd15 	bl	8012970 <GUI_ALLOC_LockH>
 8008f46:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008f48:	9005      	str	r0, [sp, #20]
 8008f4a:	2210      	movs	r2, #16
 8008f4c:	f000 f8ee 	bl	800912c <WIDGET__Init>
 8008f50:	a806      	add	r0, sp, #24
 8008f52:	990c      	ldr	r1, [sp, #48]	; 0x30
 8008f54:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8008f58:	6351      	str	r1, [r2, #52]	; 0x34
 8008f5a:	2100      	movs	r1, #0
 8008f5c:	6391      	str	r1, [r2, #56]	; 0x38
 8008f5e:	4905      	ldr	r1, [pc, #20]	; (8008f74 <WINDOW_CreateUser+0x50>)
 8008f60:	6809      	ldr	r1, [r1, #0]
 8008f62:	6411      	str	r1, [r2, #64]	; 0x40
 8008f64:	f009 fd12 	bl	801298c <GUI_ALLOC_UnlockH>
 8008f68:	4620      	mov	r0, r4
 8008f6a:	b006      	add	sp, #24
 8008f6c:	bd10      	pop	{r4, pc}
 8008f6e:	bf00      	nop
 8008f70:	08008ddf 	.word	0x08008ddf
 8008f74:	2000003c 	.word	0x2000003c

08008f78 <WINDOW_CreateIndirect>:
 8008f78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f7a:	b087      	sub	sp, #28
 8008f7c:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8008f80:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8008f84:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8008f88:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8008f8c:	9100      	str	r1, [sp, #0]
 8008f8e:	8a41      	ldrh	r1, [r0, #18]
 8008f90:	9101      	str	r1, [sp, #4]
 8008f92:	2100      	movs	r1, #0
 8008f94:	9102      	str	r1, [sp, #8]
 8008f96:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8008f9a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8008f9c:	9103      	str	r1, [sp, #12]
 8008f9e:	9404      	str	r4, [sp, #16]
 8008fa0:	6984      	ldr	r4, [r0, #24]
 8008fa2:	9405      	str	r4, [sp, #20]
 8008fa4:	eb0e 0002 	add.w	r0, lr, r2
 8008fa8:	18f9      	adds	r1, r7, r3
 8008faa:	4632      	mov	r2, r6
 8008fac:	462b      	mov	r3, r5
 8008fae:	f7ff ffb9 	bl	8008f24 <WINDOW_CreateUser>
 8008fb2:	b007      	add	sp, #28
 8008fb4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008fb6 <_EffectRequiresRedraw>:
 8008fb6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008fb8:	460d      	mov	r5, r1
 8008fba:	f100 0108 	add.w	r1, r0, #8
 8008fbe:	4602      	mov	r2, r0
 8008fc0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008fc2:	c903      	ldmia	r1, {r0, r1}
 8008fc4:	681c      	ldr	r4, [r3, #0]
 8008fc6:	e88d 0003 	stmia.w	sp, {r0, r1}
 8008fca:	4610      	mov	r0, r2
 8008fcc:	4669      	mov	r1, sp
 8008fce:	f002 fb96 	bl	800b6fe <WM__Screen2Client>
 8008fd2:	f9b5 2000 	ldrsh.w	r2, [r5]
 8008fd6:	f9bd 3000 	ldrsh.w	r3, [sp]
 8008fda:	4422      	add	r2, r4
 8008fdc:	429a      	cmp	r2, r3
 8008fde:	dc17      	bgt.n	8009010 <_EffectRequiresRedraw+0x5a>
 8008fe0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8008fe4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8008fe8:	1b12      	subs	r2, r2, r4
 8008fea:	429a      	cmp	r2, r3
 8008fec:	db10      	blt.n	8009010 <_EffectRequiresRedraw+0x5a>
 8008fee:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8008ff2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8008ff6:	4422      	add	r2, r4
 8008ff8:	429a      	cmp	r2, r3
 8008ffa:	dc09      	bgt.n	8009010 <_EffectRequiresRedraw+0x5a>
 8008ffc:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 8009000:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8009004:	1b04      	subs	r4, r0, r4
 8009006:	429c      	cmp	r4, r3
 8009008:	bfac      	ite	ge
 800900a:	2000      	movge	r0, #0
 800900c:	2001      	movlt	r0, #1
 800900e:	e000      	b.n	8009012 <_EffectRequiresRedraw+0x5c>
 8009010:	2001      	movs	r0, #1
 8009012:	b003      	add	sp, #12
 8009014:	bd30      	pop	{r4, r5, pc}

08009016 <WIDGET__RotateRect90>:
 8009016:	f9b0 3000 	ldrsh.w	r3, [r0]
 800901a:	b570      	push	{r4, r5, r6, lr}
 800901c:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8009020:	8815      	ldrh	r5, [r2, #0]
 8009022:	88d0      	ldrh	r0, [r2, #6]
 8009024:	8894      	ldrh	r4, [r2, #4]
 8009026:	8852      	ldrh	r2, [r2, #2]
 8009028:	804d      	strh	r5, [r1, #2]
 800902a:	1af3      	subs	r3, r6, r3
 800902c:	b29b      	uxth	r3, r3
 800902e:	1a18      	subs	r0, r3, r0
 8009030:	1a9b      	subs	r3, r3, r2
 8009032:	8008      	strh	r0, [r1, #0]
 8009034:	808b      	strh	r3, [r1, #4]
 8009036:	80cc      	strh	r4, [r1, #6]
 8009038:	bd70      	pop	{r4, r5, r6, pc}

0800903a <WIDGET__GetClientRect>:
 800903a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800903c:	071b      	lsls	r3, r3, #28
 800903e:	b513      	push	{r0, r1, r4, lr}
 8009040:	460c      	mov	r4, r1
 8009042:	d50f      	bpl.n	8009064 <WIDGET__GetClientRect+0x2a>
 8009044:	4668      	mov	r0, sp
 8009046:	f003 f881 	bl	800c14c <WM_GetClientRect>
 800904a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800904e:	8023      	strh	r3, [r4, #0]
 8009050:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009054:	80a3      	strh	r3, [r4, #4]
 8009056:	f8bd 3000 	ldrh.w	r3, [sp]
 800905a:	8063      	strh	r3, [r4, #2]
 800905c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009060:	80e3      	strh	r3, [r4, #6]
 8009062:	e002      	b.n	800906a <WIDGET__GetClientRect+0x30>
 8009064:	4608      	mov	r0, r1
 8009066:	f003 f871 	bl	800c14c <WM_GetClientRect>
 800906a:	b002      	add	sp, #8
 800906c:	bd10      	pop	{r4, pc}

0800906e <WIDGET__GetInsideRect>:
 800906e:	b538      	push	{r3, r4, r5, lr}
 8009070:	4604      	mov	r4, r0
 8009072:	460d      	mov	r5, r1
 8009074:	f003 fd81 	bl	800cb7a <WM__GetClientRectWin>
 8009078:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800907a:	4628      	mov	r0, r5
 800907c:	4629      	mov	r1, r5
 800907e:	681a      	ldr	r2, [r3, #0]
 8009080:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009084:	f007 b933 	b.w	80102ee <GUI__ReduceRect>

08009088 <WIDGET__GetWindowSizeX>:
 8009088:	b513      	push	{r0, r1, r4, lr}
 800908a:	4604      	mov	r4, r0
 800908c:	f009 fc70 	bl	8012970 <GUI_ALLOC_LockH>
 8009090:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8009092:	9001      	str	r0, [sp, #4]
 8009094:	071b      	lsls	r3, r3, #28
 8009096:	4620      	mov	r0, r4
 8009098:	d502      	bpl.n	80090a0 <WIDGET__GetWindowSizeX+0x18>
 800909a:	f002 ffae 	bl	800bffa <WM_GetWindowSizeY>
 800909e:	e001      	b.n	80090a4 <WIDGET__GetWindowSizeX+0x1c>
 80090a0:	f002 ff96 	bl	800bfd0 <WM_GetWindowSizeX>
 80090a4:	4604      	mov	r4, r0
 80090a6:	a801      	add	r0, sp, #4
 80090a8:	f009 fc70 	bl	801298c <GUI_ALLOC_UnlockH>
 80090ac:	4620      	mov	r0, r4
 80090ae:	b002      	add	sp, #8
 80090b0:	bd10      	pop	{r4, pc}

080090b2 <WIDGET_SetState>:
 80090b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80090b4:	460c      	mov	r4, r1
 80090b6:	4605      	mov	r5, r0
 80090b8:	f009 fc5a 	bl	8012970 <GUI_ALLOC_LockH>
 80090bc:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 80090be:	9001      	str	r0, [sp, #4]
 80090c0:	4294      	cmp	r4, r2
 80090c2:	d003      	beq.n	80090cc <WIDGET_SetState+0x1a>
 80090c4:	8644      	strh	r4, [r0, #50]	; 0x32
 80090c6:	4628      	mov	r0, r5
 80090c8:	f003 fd9f 	bl	800cc0a <WM_InvalidateWindow>
 80090cc:	a801      	add	r0, sp, #4
 80090ce:	f009 fc5d 	bl	801298c <GUI_ALLOC_UnlockH>
 80090d2:	b003      	add	sp, #12
 80090d4:	bd30      	pop	{r4, r5, pc}

080090d6 <WIDGET_OrState>:
 80090d6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80090d8:	460c      	mov	r4, r1
 80090da:	4605      	mov	r5, r0
 80090dc:	b178      	cbz	r0, 80090fe <WIDGET_OrState+0x28>
 80090de:	f009 fc47 	bl	8012970 <GUI_ALLOC_LockH>
 80090e2:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 80090e4:	9001      	str	r0, [sp, #4]
 80090e6:	ea04 0102 	and.w	r1, r4, r2
 80090ea:	428c      	cmp	r4, r1
 80090ec:	d004      	beq.n	80090f8 <WIDGET_OrState+0x22>
 80090ee:	4314      	orrs	r4, r2
 80090f0:	8644      	strh	r4, [r0, #50]	; 0x32
 80090f2:	4628      	mov	r0, r5
 80090f4:	f003 fd89 	bl	800cc0a <WM_InvalidateWindow>
 80090f8:	a801      	add	r0, sp, #4
 80090fa:	f009 fc47 	bl	801298c <GUI_ALLOC_UnlockH>
 80090fe:	b003      	add	sp, #12
 8009100:	bd30      	pop	{r4, r5, pc}

08009102 <WIDGET_AndState>:
 8009102:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009104:	460d      	mov	r5, r1
 8009106:	4604      	mov	r4, r0
 8009108:	b170      	cbz	r0, 8009128 <WIDGET_AndState+0x26>
 800910a:	f009 fc31 	bl	8012970 <GUI_ALLOC_LockH>
 800910e:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8009110:	9001      	str	r0, [sp, #4]
 8009112:	ea22 0105 	bic.w	r1, r2, r5
 8009116:	428a      	cmp	r2, r1
 8009118:	d003      	beq.n	8009122 <WIDGET_AndState+0x20>
 800911a:	8641      	strh	r1, [r0, #50]	; 0x32
 800911c:	4620      	mov	r0, r4
 800911e:	f003 fd74 	bl	800cc0a <WM_InvalidateWindow>
 8009122:	a801      	add	r0, sp, #4
 8009124:	f009 fc32 	bl	801298c <GUI_ALLOC_UnlockH>
 8009128:	b003      	add	sp, #12
 800912a:	bd30      	pop	{r4, r5, pc}

0800912c <WIDGET__Init>:
 800912c:	4b02      	ldr	r3, [pc, #8]	; (8009138 <WIDGET__Init+0xc>)
 800912e:	8642      	strh	r2, [r0, #50]	; 0x32
 8009130:	681b      	ldr	r3, [r3, #0]
 8009132:	62c3      	str	r3, [r0, #44]	; 0x2c
 8009134:	8601      	strh	r1, [r0, #48]	; 0x30
 8009136:	4770      	bx	lr
 8009138:	20000040 	.word	0x20000040

0800913c <WIDGET_HandleActive>:
 800913c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800913e:	460d      	mov	r5, r1
 8009140:	b085      	sub	sp, #20
 8009142:	4606      	mov	r6, r0
 8009144:	2800      	cmp	r0, #0
 8009146:	f000 8093 	beq.w	8009270 <WIDGET_HandleActive+0x134>
 800914a:	f009 fc11 	bl	8012970 <GUI_ALLOC_LockH>
 800914e:	682b      	ldr	r3, [r5, #0]
 8009150:	9002      	str	r0, [sp, #8]
 8009152:	2b16      	cmp	r3, #22
 8009154:	d052      	beq.n	80091fc <WIDGET_HandleActive+0xc0>
 8009156:	dc0c      	bgt.n	8009172 <WIDGET_HandleActive+0x36>
 8009158:	2b11      	cmp	r3, #17
 800915a:	d033      	beq.n	80091c4 <WIDGET_HandleActive+0x88>
 800915c:	dc02      	bgt.n	8009164 <WIDGET_HandleActive+0x28>
 800915e:	2b0d      	cmp	r3, #13
 8009160:	d03e      	beq.n	80091e0 <WIDGET_HandleActive+0xa4>
 8009162:	e07e      	b.n	8009262 <WIDGET_HandleActive+0x126>
 8009164:	2b14      	cmp	r3, #20
 8009166:	d077      	beq.n	8009258 <WIDGET_HandleActive+0x11c>
 8009168:	2b15      	cmp	r3, #21
 800916a:	d17a      	bne.n	8009262 <WIDGET_HandleActive+0x126>
 800916c:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8009170:	e070      	b.n	8009254 <WIDGET_HandleActive+0x118>
 8009172:	2b1f      	cmp	r3, #31
 8009174:	d06b      	beq.n	800924e <WIDGET_HandleActive+0x112>
 8009176:	dc02      	bgt.n	800917e <WIDGET_HandleActive+0x42>
 8009178:	2b1e      	cmp	r3, #30
 800917a:	d042      	beq.n	8009202 <WIDGET_HandleActive+0xc6>
 800917c:	e071      	b.n	8009262 <WIDGET_HandleActive+0x126>
 800917e:	2b31      	cmp	r3, #49	; 0x31
 8009180:	d01e      	beq.n	80091c0 <WIDGET_HandleActive+0x84>
 8009182:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009186:	d16c      	bne.n	8009262 <WIDGET_HandleActive+0x126>
 8009188:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800918a:	6819      	ldr	r1, [r3, #0]
 800918c:	68eb      	ldr	r3, [r5, #12]
 800918e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8009190:	681b      	ldr	r3, [r3, #0]
 8009192:	a802      	add	r0, sp, #8
 8009194:	1acd      	subs	r5, r1, r3
 8009196:	f009 fbf9 	bl	801298c <GUI_ALLOC_UnlockH>
 800919a:	4630      	mov	r0, r6
 800919c:	f009 fbe8 	bl	8012970 <GUI_ALLOC_LockH>
 80091a0:	ac04      	add	r4, sp, #16
 80091a2:	4269      	negs	r1, r5
 80091a4:	f844 0d04 	str.w	r0, [r4, #-4]!
 80091a8:	460a      	mov	r2, r1
 80091aa:	462b      	mov	r3, r5
 80091ac:	9500      	str	r5, [sp, #0]
 80091ae:	f002 fa2c 	bl	800b60a <WM__UpdateChildPositions>
 80091b2:	4620      	mov	r0, r4
 80091b4:	f009 fbea 	bl	801298c <GUI_ALLOC_UnlockH>
 80091b8:	4630      	mov	r0, r6
 80091ba:	f003 fd26 	bl	800cc0a <WM_InvalidateWindow>
 80091be:	e04e      	b.n	800925e <WIDGET_HandleActive+0x122>
 80091c0:	2400      	movs	r4, #0
 80091c2:	e03f      	b.n	8009244 <WIDGET_HandleActive+0x108>
 80091c4:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80091c6:	06d9      	lsls	r1, r3, #27
 80091c8:	d54b      	bpl.n	8009262 <WIDGET_HandleActive+0x126>
 80091ca:	68eb      	ldr	r3, [r5, #12]
 80091cc:	7a1b      	ldrb	r3, [r3, #8]
 80091ce:	2b00      	cmp	r3, #0
 80091d0:	d047      	beq.n	8009262 <WIDGET_HandleActive+0x126>
 80091d2:	a802      	add	r0, sp, #8
 80091d4:	f009 fbda 	bl	801298c <GUI_ALLOC_UnlockH>
 80091d8:	4630      	mov	r0, r6
 80091da:	f002 fc53 	bl	800ba84 <WM_SetFocus>
 80091de:	e040      	b.n	8009262 <WIDGET_HandleActive+0x126>
 80091e0:	68eb      	ldr	r3, [r5, #12]
 80091e2:	68db      	ldr	r3, [r3, #12]
 80091e4:	2b00      	cmp	r3, #0
 80091e6:	d03c      	beq.n	8009262 <WIDGET_HandleActive+0x126>
 80091e8:	7a1b      	ldrb	r3, [r3, #8]
 80091ea:	2b00      	cmp	r3, #0
 80091ec:	d039      	beq.n	8009262 <WIDGET_HandleActive+0x126>
 80091ee:	a802      	add	r0, sp, #8
 80091f0:	f009 fbcc 	bl	801298c <GUI_ALLOC_UnlockH>
 80091f4:	4630      	mov	r0, r6
 80091f6:	f002 ffc9 	bl	800c18c <WM_BringToTop>
 80091fa:	e030      	b.n	800925e <WIDGET_HandleActive+0x122>
 80091fc:	68eb      	ldr	r3, [r5, #12]
 80091fe:	8603      	strh	r3, [r0, #48]	; 0x30
 8009200:	e02d      	b.n	800925e <WIDGET_HandleActive+0x122>
 8009202:	68eb      	ldr	r3, [r5, #12]
 8009204:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 8009206:	2b01      	cmp	r3, #1
 8009208:	d108      	bne.n	800921c <WIDGET_HandleActive+0xe0>
 800920a:	06ca      	lsls	r2, r1, #27
 800920c:	d50d      	bpl.n	800922a <WIDGET_HandleActive+0xee>
 800920e:	4630      	mov	r0, r6
 8009210:	f041 0101 	orr.w	r1, r1, #1
 8009214:	f7ff ff4d 	bl	80090b2 <WIDGET_SetState>
 8009218:	2708      	movs	r7, #8
 800921a:	e008      	b.n	800922e <WIDGET_HandleActive+0xf2>
 800921c:	f021 0101 	bic.w	r1, r1, #1
 8009220:	4630      	mov	r0, r6
 8009222:	f7ff ff46 	bl	80090b2 <WIDGET_SetState>
 8009226:	2709      	movs	r7, #9
 8009228:	e001      	b.n	800922e <WIDGET_HandleActive+0xf2>
 800922a:	f04f 37ff 	mov.w	r7, #4294967295
 800922e:	a802      	add	r0, sp, #8
 8009230:	f009 fbac 	bl	801298c <GUI_ALLOC_UnlockH>
 8009234:	1c7b      	adds	r3, r7, #1
 8009236:	f04f 0400 	mov.w	r4, #0
 800923a:	d005      	beq.n	8009248 <WIDGET_HandleActive+0x10c>
 800923c:	4630      	mov	r0, r6
 800923e:	4639      	mov	r1, r7
 8009240:	f002 fd8f 	bl	800bd62 <WM_NotifyParent>
 8009244:	60ec      	str	r4, [r5, #12]
 8009246:	e00d      	b.n	8009264 <WIDGET_HandleActive+0x128>
 8009248:	2301      	movs	r3, #1
 800924a:	60eb      	str	r3, [r5, #12]
 800924c:	e00a      	b.n	8009264 <WIDGET_HandleActive+0x128>
 800924e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8009250:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8009254:	60eb      	str	r3, [r5, #12]
 8009256:	e002      	b.n	800925e <WIDGET_HandleActive+0x122>
 8009258:	68e9      	ldr	r1, [r5, #12]
 800925a:	f7ff ff08 	bl	800906e <WIDGET__GetInsideRect>
 800925e:	2400      	movs	r4, #0
 8009260:	e000      	b.n	8009264 <WIDGET_HandleActive+0x128>
 8009262:	2401      	movs	r4, #1
 8009264:	9b02      	ldr	r3, [sp, #8]
 8009266:	b123      	cbz	r3, 8009272 <WIDGET_HandleActive+0x136>
 8009268:	a802      	add	r0, sp, #8
 800926a:	f009 fb8f 	bl	801298c <GUI_ALLOC_UnlockH>
 800926e:	e000      	b.n	8009272 <WIDGET_HandleActive+0x136>
 8009270:	2401      	movs	r4, #1
 8009272:	4620      	mov	r0, r4
 8009274:	b005      	add	sp, #20
 8009276:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009278 <WIDGET__FillRectEx>:
 8009278:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800927a:	071b      	lsls	r3, r3, #28
 800927c:	b507      	push	{r0, r1, r2, lr}
 800927e:	460a      	mov	r2, r1
 8009280:	d503      	bpl.n	800928a <WIDGET__FillRectEx+0x12>
 8009282:	4669      	mov	r1, sp
 8009284:	f7ff fec7 	bl	8009016 <WIDGET__RotateRect90>
 8009288:	466a      	mov	r2, sp
 800928a:	4610      	mov	r0, r2
 800928c:	f008 fbf4 	bl	8011a78 <GUI_FillRectEx>
 8009290:	b003      	add	sp, #12
 8009292:	f85d fb04 	ldr.w	pc, [sp], #4

08009296 <WIDGET__DrawTriangle>:
 8009296:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009298:	461c      	mov	r4, r3
 800929a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800929c:	9f06      	ldr	r7, [sp, #24]
 800929e:	071b      	lsls	r3, r3, #28
 80092a0:	460d      	mov	r5, r1
 80092a2:	4616      	mov	r6, r2
 80092a4:	d50a      	bpl.n	80092bc <WIDGET__DrawTriangle+0x26>
 80092a6:	2c00      	cmp	r4, #0
 80092a8:	db07      	blt.n	80092ba <WIDGET__DrawTriangle+0x24>
 80092aa:	4628      	mov	r0, r5
 80092ac:	1b31      	subs	r1, r6, r4
 80092ae:	19a2      	adds	r2, r4, r6
 80092b0:	f008 fc56 	bl	8011b60 <GUI_DrawHLine>
 80092b4:	3c01      	subs	r4, #1
 80092b6:	443d      	add	r5, r7
 80092b8:	e7f5      	b.n	80092a6 <WIDGET__DrawTriangle+0x10>
 80092ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80092bc:	2c00      	cmp	r4, #0
 80092be:	db07      	blt.n	80092d0 <WIDGET__DrawTriangle+0x3a>
 80092c0:	4628      	mov	r0, r5
 80092c2:	1b31      	subs	r1, r6, r4
 80092c4:	19a2      	adds	r2, r4, r6
 80092c6:	f008 fc29 	bl	8011b1c <GUI_DrawVLine>
 80092ca:	3c01      	subs	r4, #1
 80092cc:	443d      	add	r5, r7
 80092ce:	e7f5      	b.n	80092bc <WIDGET__DrawTriangle+0x26>
 80092d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080092d2 <WIDGET__EFFECT_DrawDownRect>:
 80092d2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80092d4:	4605      	mov	r5, r0
 80092d6:	460c      	mov	r4, r1
 80092d8:	b919      	cbnz	r1, 80092e2 <WIDGET__EFFECT_DrawDownRect+0x10>
 80092da:	4668      	mov	r0, sp
 80092dc:	f002 ff36 	bl	800c14c <WM_GetClientRect>
 80092e0:	466c      	mov	r4, sp
 80092e2:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 80092e4:	071b      	lsls	r3, r3, #28
 80092e6:	d505      	bpl.n	80092f4 <WIDGET__EFFECT_DrawDownRect+0x22>
 80092e8:	4622      	mov	r2, r4
 80092ea:	4628      	mov	r0, r5
 80092ec:	4669      	mov	r1, sp
 80092ee:	f7ff fe92 	bl	8009016 <WIDGET__RotateRect90>
 80092f2:	466c      	mov	r4, sp
 80092f4:	4628      	mov	r0, r5
 80092f6:	4621      	mov	r1, r4
 80092f8:	f7ff fe5d 	bl	8008fb6 <_EffectRequiresRedraw>
 80092fc:	b118      	cbz	r0, 8009306 <WIDGET__EFFECT_DrawDownRect+0x34>
 80092fe:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8009300:	4620      	mov	r0, r4
 8009302:	691b      	ldr	r3, [r3, #16]
 8009304:	4798      	blx	r3
 8009306:	b003      	add	sp, #12
 8009308:	bd30      	pop	{r4, r5, pc}

0800930a <WIDGET__EFFECT_DrawDown>:
 800930a:	2100      	movs	r1, #0
 800930c:	f7ff bfe1 	b.w	80092d2 <WIDGET__EFFECT_DrawDownRect>

08009310 <TEXT_SetFont>:
 8009310:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009312:	460c      	mov	r4, r1
 8009314:	4605      	mov	r5, r0
 8009316:	b160      	cbz	r0, 8009332 <TEXT_SetFont+0x22>
 8009318:	f009 fb2a 	bl	8012970 <GUI_ALLOC_LockH>
 800931c:	6b42      	ldr	r2, [r0, #52]	; 0x34
 800931e:	9001      	str	r0, [sp, #4]
 8009320:	42a2      	cmp	r2, r4
 8009322:	d003      	beq.n	800932c <TEXT_SetFont+0x1c>
 8009324:	6344      	str	r4, [r0, #52]	; 0x34
 8009326:	4628      	mov	r0, r5
 8009328:	f003 fc6f 	bl	800cc0a <WM_InvalidateWindow>
 800932c:	a801      	add	r0, sp, #4
 800932e:	f009 fb2d 	bl	801298c <GUI_ALLOC_UnlockH>
 8009332:	b003      	add	sp, #12
 8009334:	bd30      	pop	{r4, r5, pc}

08009336 <TEXT_CreateIndirect>:
 8009336:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009338:	b087      	sub	sp, #28
 800933a:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 800933e:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8009342:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8009346:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800934a:	9100      	str	r1, [sp, #0]
 800934c:	2102      	movs	r1, #2
 800934e:	9101      	str	r1, [sp, #4]
 8009350:	8a41      	ldrh	r1, [r0, #18]
 8009352:	9102      	str	r1, [sp, #8]
 8009354:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8009358:	9103      	str	r1, [sp, #12]
 800935a:	6844      	ldr	r4, [r0, #4]
 800935c:	9404      	str	r4, [sp, #16]
 800935e:	6984      	ldr	r4, [r0, #24]
 8009360:	9405      	str	r4, [sp, #20]
 8009362:	eb0e 0002 	add.w	r0, lr, r2
 8009366:	18f9      	adds	r1, r7, r3
 8009368:	4632      	mov	r2, r6
 800936a:	462b      	mov	r3, r5
 800936c:	f000 f866 	bl	800943c <TEXT_CreateUser>
 8009370:	b007      	add	sp, #28
 8009372:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009374 <TEXT_Callback>:
 8009374:	b530      	push	{r4, r5, lr}
 8009376:	6845      	ldr	r5, [r0, #4]
 8009378:	4604      	mov	r4, r0
 800937a:	b085      	sub	sp, #20
 800937c:	4628      	mov	r0, r5
 800937e:	4621      	mov	r1, r4
 8009380:	f7ff fedc 	bl	800913c <WIDGET_HandleActive>
 8009384:	2800      	cmp	r0, #0
 8009386:	d056      	beq.n	8009436 <TEXT_Callback+0xc2>
 8009388:	6823      	ldr	r3, [r4, #0]
 800938a:	2b0f      	cmp	r3, #15
 800938c:	d01e      	beq.n	80093cc <TEXT_Callback+0x58>
 800938e:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009392:	d00e      	beq.n	80093b2 <TEXT_Callback+0x3e>
 8009394:	2b0b      	cmp	r3, #11
 8009396:	d14b      	bne.n	8009430 <TEXT_Callback+0xbc>
 8009398:	4628      	mov	r0, r5
 800939a:	f009 fae9 	bl	8012970 <GUI_ALLOC_LockH>
 800939e:	ad04      	add	r5, sp, #16
 80093a0:	f845 0d08 	str.w	r0, [r5, #-8]!
 80093a4:	3044      	adds	r0, #68	; 0x44
 80093a6:	f009 fd3b 	bl	8012e20 <GUI_ALLOC_FreePtr>
 80093aa:	4628      	mov	r0, r5
 80093ac:	f009 faee 	bl	801298c <GUI_ALLOC_UnlockH>
 80093b0:	e03e      	b.n	8009430 <TEXT_Callback+0xbc>
 80093b2:	68e3      	ldr	r3, [r4, #12]
 80093b4:	b12b      	cbz	r3, 80093c2 <TEXT_Callback+0x4e>
 80093b6:	7a1b      	ldrb	r3, [r3, #8]
 80093b8:	2b00      	cmp	r3, #0
 80093ba:	bf0c      	ite	eq
 80093bc:	2102      	moveq	r1, #2
 80093be:	2101      	movne	r1, #1
 80093c0:	e000      	b.n	80093c4 <TEXT_Callback+0x50>
 80093c2:	2103      	movs	r1, #3
 80093c4:	4628      	mov	r0, r5
 80093c6:	f002 fccc 	bl	800bd62 <WM_NotifyParent>
 80093ca:	e031      	b.n	8009430 <TEXT_Callback+0xbc>
 80093cc:	4628      	mov	r0, r5
 80093ce:	f009 facf 	bl	8012970 <GUI_ALLOC_LockH>
 80093d2:	9000      	str	r0, [sp, #0]
 80093d4:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80093d6:	f006 feef 	bl	80101b8 <LCD_SetColor>
 80093da:	9b00      	ldr	r3, [sp, #0]
 80093dc:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80093de:	f008 f8a9 	bl	8011534 <GUI_SetFont>
 80093e2:	4628      	mov	r0, r5
 80093e4:	f002 fab0 	bl	800b948 <WM_GetHasTrans>
 80093e8:	b928      	cbnz	r0, 80093f6 <TEXT_Callback+0x82>
 80093ea:	9b00      	ldr	r3, [sp, #0]
 80093ec:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 80093ee:	f006 fedb 	bl	80101a8 <LCD_SetBkColor>
 80093f2:	f008 fe8d 	bl	8012110 <GUI_Clear>
 80093f6:	9b00      	ldr	r3, [sp, #0]
 80093f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80093fa:	b1ab      	cbz	r3, 8009428 <TEXT_Callback+0xb4>
 80093fc:	2002      	movs	r0, #2
 80093fe:	f008 f88f 	bl	8011520 <GUI_SetTextMode>
 8009402:	a802      	add	r0, sp, #8
 8009404:	f002 fea2 	bl	800c14c <WM_GetClientRect>
 8009408:	9b00      	ldr	r3, [sp, #0]
 800940a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800940c:	f009 fab0 	bl	8012970 <GUI_ALLOC_LockH>
 8009410:	9b00      	ldr	r3, [sp, #0]
 8009412:	9001      	str	r0, [sp, #4]
 8009414:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 8009418:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800941c:	a902      	add	r1, sp, #8
 800941e:	f008 fc23 	bl	8011c68 <GUI_DispStringInRectWrap>
 8009422:	a801      	add	r0, sp, #4
 8009424:	f009 fab2 	bl	801298c <GUI_ALLOC_UnlockH>
 8009428:	4668      	mov	r0, sp
 800942a:	f009 faaf 	bl	801298c <GUI_ALLOC_UnlockH>
 800942e:	e002      	b.n	8009436 <TEXT_Callback+0xc2>
 8009430:	4620      	mov	r0, r4
 8009432:	f004 f80d 	bl	800d450 <WM_DefaultProc>
 8009436:	b005      	add	sp, #20
 8009438:	bd30      	pop	{r4, r5, pc}
	...

0800943c <TEXT_CreateUser>:
 800943c:	b570      	push	{r4, r5, r6, lr}
 800943e:	b086      	sub	sp, #24
 8009440:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009442:	9500      	str	r5, [sp, #0]
 8009444:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8009446:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8009448:	f045 0501 	orr.w	r5, r5, #1
 800944c:	9501      	str	r5, [sp, #4]
 800944e:	4d1a      	ldr	r5, [pc, #104]	; (80094b8 <TEXT_CreateUser+0x7c>)
 8009450:	9502      	str	r5, [sp, #8]
 8009452:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8009454:	3520      	adds	r5, #32
 8009456:	9503      	str	r5, [sp, #12]
 8009458:	f003 fc18 	bl	800cc8c <WM_CreateWindowAsChild>
 800945c:	4605      	mov	r5, r0
 800945e:	b340      	cbz	r0, 80094b2 <TEXT_CreateUser+0x76>
 8009460:	b18c      	cbz	r4, 8009486 <TEXT_CreateUser+0x4a>
 8009462:	4620      	mov	r0, r4
 8009464:	f7f6 fed4 	bl	8000210 <strlen>
 8009468:	3001      	adds	r0, #1
 800946a:	f009 fcee 	bl	8012e4a <GUI_ALLOC_AllocZero>
 800946e:	4606      	mov	r6, r0
 8009470:	b150      	cbz	r0, 8009488 <TEXT_CreateUser+0x4c>
 8009472:	f009 fa7d 	bl	8012970 <GUI_ALLOC_LockH>
 8009476:	4621      	mov	r1, r4
 8009478:	9005      	str	r0, [sp, #20]
 800947a:	f010 ff7f 	bl	801a37c <strcpy>
 800947e:	a805      	add	r0, sp, #20
 8009480:	f009 fa84 	bl	801298c <GUI_ALLOC_UnlockH>
 8009484:	e000      	b.n	8009488 <TEXT_CreateUser+0x4c>
 8009486:	4626      	mov	r6, r4
 8009488:	4628      	mov	r0, r5
 800948a:	f009 fa71 	bl	8012970 <GUI_ALLOC_LockH>
 800948e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8009490:	9005      	str	r0, [sp, #20]
 8009492:	2200      	movs	r2, #0
 8009494:	f7ff fe4a 	bl	800912c <WIDGET__Init>
 8009498:	9c05      	ldr	r4, [sp, #20]
 800949a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800949c:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 80094a0:	4b06      	ldr	r3, [pc, #24]	; (80094bc <TEXT_CreateUser+0x80>)
 80094a2:	6466      	str	r6, [r4, #68]	; 0x44
 80094a4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80094a6:	3434      	adds	r4, #52	; 0x34
 80094a8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80094ac:	a805      	add	r0, sp, #20
 80094ae:	f009 fa6d 	bl	801298c <GUI_ALLOC_UnlockH>
 80094b2:	4628      	mov	r0, r5
 80094b4:	b006      	add	sp, #24
 80094b6:	bd70      	pop	{r4, r5, r6, pc}
 80094b8:	08009375 	.word	0x08009375
 80094bc:	20000044 	.word	0x20000044

080094c0 <SLIDER_CreateIndirect>:
 80094c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80094c2:	b087      	sub	sp, #28
 80094c4:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80094c8:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80094cc:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80094d0:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80094d4:	9100      	str	r1, [sp, #0]
 80094d6:	2100      	movs	r1, #0
 80094d8:	9101      	str	r1, [sp, #4]
 80094da:	8a41      	ldrh	r1, [r0, #18]
 80094dc:	9102      	str	r1, [sp, #8]
 80094de:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80094e2:	9103      	str	r1, [sp, #12]
 80094e4:	6984      	ldr	r4, [r0, #24]
 80094e6:	9404      	str	r4, [sp, #16]
 80094e8:	eb0e 0002 	add.w	r0, lr, r2
 80094ec:	18f9      	adds	r1, r7, r3
 80094ee:	4632      	mov	r2, r6
 80094f0:	462b      	mov	r3, r5
 80094f2:	f000 f803 	bl	80094fc <SLIDER_CreateUser>
 80094f6:	b007      	add	sp, #28
 80094f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080094fc <SLIDER_CreateUser>:
 80094fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009500:	b086      	sub	sp, #24
 8009502:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8009504:	9400      	str	r4, [sp, #0]
 8009506:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8009508:	f044 0401 	orr.w	r4, r4, #1
 800950c:	9401      	str	r4, [sp, #4]
 800950e:	4c1c      	ldr	r4, [pc, #112]	; (8009580 <SLIDER_CreateUser+0x84>)
 8009510:	9402      	str	r4, [sp, #8]
 8009512:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8009514:	3438      	adds	r4, #56	; 0x38
 8009516:	9403      	str	r4, [sp, #12]
 8009518:	f003 fbb8 	bl	800cc8c <WM_CreateWindowAsChild>
 800951c:	4680      	mov	r8, r0
 800951e:	b358      	cbz	r0, 8009578 <SLIDER_CreateUser+0x7c>
 8009520:	f009 fa26 	bl	8012970 <GUI_ALLOC_LockH>
 8009524:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009526:	4d17      	ldr	r5, [pc, #92]	; (8009584 <SLIDER_CreateUser+0x88>)
 8009528:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800952a:	9005      	str	r0, [sp, #20]
 800952c:	f013 0f08 	tst.w	r3, #8
 8009530:	bf14      	ite	ne
 8009532:	2218      	movne	r2, #24
 8009534:	2210      	moveq	r2, #16
 8009536:	f7ff fdf9 	bl	800912c <WIDGET__Init>
 800953a:	af06      	add	r7, sp, #24
 800953c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800953e:	f857 6d04 	ldr.w	r6, [r7, #-4]!
 8009542:	f106 0434 	add.w	r4, r6, #52	; 0x34
 8009546:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009548:	e895 0003 	ldmia.w	r5, {r0, r1}
 800954c:	e884 0003 	stmia.w	r4, {r0, r1}
 8009550:	4c0d      	ldr	r4, [pc, #52]	; (8009588 <SLIDER_CreateUser+0x8c>)
 8009552:	6823      	ldr	r3, [r4, #0]
 8009554:	64f3      	str	r3, [r6, #76]	; 0x4c
 8009556:	2308      	movs	r3, #8
 8009558:	f8a6 3060 	strh.w	r3, [r6, #96]	; 0x60
 800955c:	2364      	movs	r3, #100	; 0x64
 800955e:	6573      	str	r3, [r6, #84]	; 0x54
 8009560:	2300      	movs	r3, #0
 8009562:	65b3      	str	r3, [r6, #88]	; 0x58
 8009564:	f04f 33ff 	mov.w	r3, #4294967295
 8009568:	6533      	str	r3, [r6, #80]	; 0x50
 800956a:	4638      	mov	r0, r7
 800956c:	f009 fa0e 	bl	801298c <GUI_ALLOC_UnlockH>
 8009570:	6823      	ldr	r3, [r4, #0]
 8009572:	4640      	mov	r0, r8
 8009574:	685b      	ldr	r3, [r3, #4]
 8009576:	4798      	blx	r3
 8009578:	4640      	mov	r0, r8
 800957a:	b006      	add	sp, #24
 800957c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009580:	08009675 	.word	0x08009675
 8009584:	20000058 	.word	0x20000058
 8009588:	20000054 	.word	0x20000054

0800958c <SLIDER_Dec>:
 800958c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800958e:	4605      	mov	r5, r0
 8009590:	b1c0      	cbz	r0, 80095c4 <SLIDER_Dec+0x38>
 8009592:	f009 f9ed 	bl	8012970 <GUI_ALLOC_LockH>
 8009596:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8009598:	6d81      	ldr	r1, [r0, #88]	; 0x58
 800959a:	ac02      	add	r4, sp, #8
 800959c:	428a      	cmp	r2, r1
 800959e:	f844 0d04 	str.w	r0, [r4, #-4]!
 80095a2:	dd0c      	ble.n	80095be <SLIDER_Dec+0x32>
 80095a4:	3a01      	subs	r2, #1
 80095a6:	65c2      	str	r2, [r0, #92]	; 0x5c
 80095a8:	4628      	mov	r0, r5
 80095aa:	f003 fb2e 	bl	800cc0a <WM_InvalidateWindow>
 80095ae:	4620      	mov	r0, r4
 80095b0:	f009 f9ec 	bl	801298c <GUI_ALLOC_UnlockH>
 80095b4:	4628      	mov	r0, r5
 80095b6:	2105      	movs	r1, #5
 80095b8:	f002 fbd3 	bl	800bd62 <WM_NotifyParent>
 80095bc:	e002      	b.n	80095c4 <SLIDER_Dec+0x38>
 80095be:	4620      	mov	r0, r4
 80095c0:	f009 f9e4 	bl	801298c <GUI_ALLOC_UnlockH>
 80095c4:	b003      	add	sp, #12
 80095c6:	bd30      	pop	{r4, r5, pc}

080095c8 <SLIDER_GetFlag>:
 80095c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80095ca:	460d      	mov	r5, r1
 80095cc:	4604      	mov	r4, r0
 80095ce:	b150      	cbz	r0, 80095e6 <SLIDER_GetFlag+0x1e>
 80095d0:	f009 f9ce 	bl	8012970 <GUI_ALLOC_LockH>
 80095d4:	ab02      	add	r3, sp, #8
 80095d6:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 80095da:	f843 0d04 	str.w	r0, [r3, #-4]!
 80095de:	4618      	mov	r0, r3
 80095e0:	402c      	ands	r4, r5
 80095e2:	f009 f9d3 	bl	801298c <GUI_ALLOC_UnlockH>
 80095e6:	4620      	mov	r0, r4
 80095e8:	b003      	add	sp, #12
 80095ea:	bd30      	pop	{r4, r5, pc}

080095ec <SLIDER_Inc>:
 80095ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80095ee:	4605      	mov	r5, r0
 80095f0:	b1c0      	cbz	r0, 8009624 <SLIDER_Inc+0x38>
 80095f2:	f009 f9bd 	bl	8012970 <GUI_ALLOC_LockH>
 80095f6:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 80095f8:	6d41      	ldr	r1, [r0, #84]	; 0x54
 80095fa:	ac02      	add	r4, sp, #8
 80095fc:	428a      	cmp	r2, r1
 80095fe:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009602:	da0c      	bge.n	800961e <SLIDER_Inc+0x32>
 8009604:	3201      	adds	r2, #1
 8009606:	65c2      	str	r2, [r0, #92]	; 0x5c
 8009608:	4628      	mov	r0, r5
 800960a:	f003 fafe 	bl	800cc0a <WM_InvalidateWindow>
 800960e:	4620      	mov	r0, r4
 8009610:	f009 f9bc 	bl	801298c <GUI_ALLOC_UnlockH>
 8009614:	4628      	mov	r0, r5
 8009616:	2105      	movs	r1, #5
 8009618:	f002 fba3 	bl	800bd62 <WM_NotifyParent>
 800961c:	e002      	b.n	8009624 <SLIDER_Inc+0x38>
 800961e:	4620      	mov	r0, r4
 8009620:	f009 f9b4 	bl	801298c <GUI_ALLOC_UnlockH>
 8009624:	b003      	add	sp, #12
 8009626:	bd30      	pop	{r4, r5, pc}

08009628 <SLIDER_SetValue>:
 8009628:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800962a:	460e      	mov	r6, r1
 800962c:	4605      	mov	r5, r0
 800962e:	b1f8      	cbz	r0, 8009670 <SLIDER_SetValue+0x48>
 8009630:	f009 f99e 	bl	8012970 <GUI_ALLOC_LockH>
 8009634:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8009636:	4296      	cmp	r6, r2
 8009638:	bfac      	ite	ge
 800963a:	4631      	movge	r1, r6
 800963c:	4611      	movlt	r1, r2
 800963e:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8009640:	4291      	cmp	r1, r2
 8009642:	bfa8      	it	ge
 8009644:	4611      	movge	r1, r2
 8009646:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8009648:	ac02      	add	r4, sp, #8
 800964a:	428a      	cmp	r2, r1
 800964c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009650:	d00b      	beq.n	800966a <SLIDER_SetValue+0x42>
 8009652:	65c1      	str	r1, [r0, #92]	; 0x5c
 8009654:	4628      	mov	r0, r5
 8009656:	f003 fad8 	bl	800cc0a <WM_InvalidateWindow>
 800965a:	4620      	mov	r0, r4
 800965c:	f009 f996 	bl	801298c <GUI_ALLOC_UnlockH>
 8009660:	4628      	mov	r0, r5
 8009662:	2105      	movs	r1, #5
 8009664:	f002 fb7d 	bl	800bd62 <WM_NotifyParent>
 8009668:	e002      	b.n	8009670 <SLIDER_SetValue+0x48>
 800966a:	4620      	mov	r0, r4
 800966c:	f009 f98e 	bl	801298c <GUI_ALLOC_UnlockH>
 8009670:	b002      	add	sp, #8
 8009672:	bd70      	pop	{r4, r5, r6, pc}

08009674 <SLIDER_Callback>:
 8009674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009678:	6844      	ldr	r4, [r0, #4]
 800967a:	4605      	mov	r5, r0
 800967c:	b085      	sub	sp, #20
 800967e:	4620      	mov	r0, r4
 8009680:	4629      	mov	r1, r5
 8009682:	f7ff fd5b 	bl	800913c <WIDGET_HandleActive>
 8009686:	2800      	cmp	r0, #0
 8009688:	f000 809d 	beq.w	80097c6 <SLIDER_Callback+0x152>
 800968c:	682b      	ldr	r3, [r5, #0]
 800968e:	2b0f      	cmp	r3, #15
 8009690:	d006      	beq.n	80096a0 <SLIDER_Callback+0x2c>
 8009692:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009696:	d014      	beq.n	80096c2 <SLIDER_Callback+0x4e>
 8009698:	2b0e      	cmp	r3, #14
 800969a:	f040 8091 	bne.w	80097c0 <SLIDER_Callback+0x14c>
 800969e:	e07f      	b.n	80097a0 <SLIDER_Callback+0x12c>
 80096a0:	4620      	mov	r0, r4
 80096a2:	f009 f965 	bl	8012970 <GUI_ALLOC_LockH>
 80096a6:	ab04      	add	r3, sp, #16
 80096a8:	f843 0d04 	str.w	r0, [r3, #-4]!
 80096ac:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80096ae:	6815      	ldr	r5, [r2, #0]
 80096b0:	4618      	mov	r0, r3
 80096b2:	f009 f96b 	bl	801298c <GUI_ALLOC_UnlockH>
 80096b6:	2d00      	cmp	r5, #0
 80096b8:	f000 8085 	beq.w	80097c6 <SLIDER_Callback+0x152>
 80096bc:	4620      	mov	r0, r4
 80096be:	47a8      	blx	r5
 80096c0:	e081      	b.n	80097c6 <SLIDER_Callback+0x152>
 80096c2:	68ef      	ldr	r7, [r5, #12]
 80096c4:	2f00      	cmp	r7, #0
 80096c6:	d07b      	beq.n	80097c0 <SLIDER_Callback+0x14c>
 80096c8:	4620      	mov	r0, r4
 80096ca:	f009 f951 	bl	8012970 <GUI_ALLOC_LockH>
 80096ce:	4603      	mov	r3, r0
 80096d0:	a804      	add	r0, sp, #16
 80096d2:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 80096d4:	f840 3d04 	str.w	r3, [r0, #-4]!
 80096d8:	6d9e      	ldr	r6, [r3, #88]	; 0x58
 80096da:	f8d3 9054 	ldr.w	r9, [r3, #84]	; 0x54
 80096de:	f8b3 b060 	ldrh.w	fp, [r3, #96]	; 0x60
 80096e2:	f8b3 8028 	ldrh.w	r8, [r3, #40]	; 0x28
 80096e6:	9201      	str	r2, [sp, #4]
 80096e8:	f009 f950 	bl	801298c <GUI_ALLOC_UnlockH>
 80096ec:	9a01      	ldr	r2, [sp, #4]
 80096ee:	7a3b      	ldrb	r3, [r7, #8]
 80096f0:	f402 7a80 	and.w	sl, r2, #256	; 0x100
 80096f4:	2b00      	cmp	r3, #0
 80096f6:	d043      	beq.n	8009780 <SLIDER_Callback+0x10c>
 80096f8:	cf82      	ldmia	r7, {r1, r7}
 80096fa:	fa0f f38b 	sxth.w	r3, fp
 80096fe:	f04f 0b02 	mov.w	fp, #2
 8009702:	f012 0f08 	tst.w	r2, #8
 8009706:	fb93 f3fb 	sdiv	r3, r3, fp
 800970a:	f103 0301 	add.w	r3, r3, #1
 800970e:	bf08      	it	eq
 8009710:	460f      	moveq	r7, r1
 8009712:	1aff      	subs	r7, r7, r3
 8009714:	4620      	mov	r0, r4
 8009716:	9301      	str	r3, [sp, #4]
 8009718:	f7ff fcb6 	bl	8009088 <WIDGET__GetWindowSizeX>
 800971c:	2f00      	cmp	r7, #0
 800971e:	9b01      	ldr	r3, [sp, #4]
 8009720:	dd11      	ble.n	8009746 <SLIDER_Callback+0xd2>
 8009722:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 8009726:	4287      	cmp	r7, r0
 8009728:	da0c      	bge.n	8009744 <SLIDER_Callback+0xd0>
 800972a:	2800      	cmp	r0, #0
 800972c:	bf08      	it	eq
 800972e:	2001      	moveq	r0, #1
 8009730:	fb90 fbfb 	sdiv	fp, r0, fp
 8009734:	ebc6 0909 	rsb	r9, r6, r9
 8009738:	fb09 b707 	mla	r7, r9, r7, fp
 800973c:	fbb7 f0f0 	udiv	r0, r7, r0
 8009740:	4406      	add	r6, r0
 8009742:	e000      	b.n	8009746 <SLIDER_Callback+0xd2>
 8009744:	464e      	mov	r6, r9
 8009746:	4620      	mov	r0, r4
 8009748:	f002 fc05 	bl	800bf56 <WM_IsFocussable>
 800974c:	b110      	cbz	r0, 8009754 <SLIDER_Callback+0xe0>
 800974e:	4620      	mov	r0, r4
 8009750:	f002 f998 	bl	800ba84 <WM_SetFocus>
 8009754:	4620      	mov	r0, r4
 8009756:	2101      	movs	r1, #1
 8009758:	f002 f9fc 	bl	800bb54 <WM_SetCapture>
 800975c:	4620      	mov	r0, r4
 800975e:	4631      	mov	r1, r6
 8009760:	f7ff ff62 	bl	8009628 <SLIDER_SetValue>
 8009764:	f1ba 0f00 	cmp.w	sl, #0
 8009768:	d12a      	bne.n	80097c0 <SLIDER_Callback+0x14c>
 800976a:	4620      	mov	r0, r4
 800976c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009770:	f7ff fcb1 	bl	80090d6 <WIDGET_OrState>
 8009774:	f018 0f02 	tst.w	r8, #2
 8009778:	d022      	beq.n	80097c0 <SLIDER_Callback+0x14c>
 800977a:	4620      	mov	r0, r4
 800977c:	2101      	movs	r1, #1
 800977e:	e00c      	b.n	800979a <SLIDER_Callback+0x126>
 8009780:	f1ba 0f00 	cmp.w	sl, #0
 8009784:	d01c      	beq.n	80097c0 <SLIDER_Callback+0x14c>
 8009786:	4620      	mov	r0, r4
 8009788:	f44f 7180 	mov.w	r1, #256	; 0x100
 800978c:	f7ff fcb9 	bl	8009102 <WIDGET_AndState>
 8009790:	f018 0f02 	tst.w	r8, #2
 8009794:	d014      	beq.n	80097c0 <SLIDER_Callback+0x14c>
 8009796:	4620      	mov	r0, r4
 8009798:	2102      	movs	r1, #2
 800979a:	f002 fae2 	bl	800bd62 <WM_NotifyParent>
 800979e:	e00f      	b.n	80097c0 <SLIDER_Callback+0x14c>
 80097a0:	68ea      	ldr	r2, [r5, #12]
 80097a2:	6813      	ldr	r3, [r2, #0]
 80097a4:	6852      	ldr	r2, [r2, #4]
 80097a6:	2a00      	cmp	r2, #0
 80097a8:	dd0a      	ble.n	80097c0 <SLIDER_Callback+0x14c>
 80097aa:	2b10      	cmp	r3, #16
 80097ac:	d005      	beq.n	80097ba <SLIDER_Callback+0x146>
 80097ae:	2b12      	cmp	r3, #18
 80097b0:	d106      	bne.n	80097c0 <SLIDER_Callback+0x14c>
 80097b2:	4620      	mov	r0, r4
 80097b4:	f7ff ff1a 	bl	80095ec <SLIDER_Inc>
 80097b8:	e002      	b.n	80097c0 <SLIDER_Callback+0x14c>
 80097ba:	4620      	mov	r0, r4
 80097bc:	f7ff fee6 	bl	800958c <SLIDER_Dec>
 80097c0:	4628      	mov	r0, r5
 80097c2:	f003 fe45 	bl	800d450 <WM_DefaultProc>
 80097c6:	b005      	add	sp, #20
 80097c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080097cc <SLIDER_GetValue>:
 80097cc:	b513      	push	{r0, r1, r4, lr}
 80097ce:	4604      	mov	r4, r0
 80097d0:	b140      	cbz	r0, 80097e4 <SLIDER_GetValue+0x18>
 80097d2:	f009 f8cd 	bl	8012970 <GUI_ALLOC_LockH>
 80097d6:	ab02      	add	r3, sp, #8
 80097d8:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 80097da:	f843 0d04 	str.w	r0, [r3, #-4]!
 80097de:	4618      	mov	r0, r3
 80097e0:	f009 f8d4 	bl	801298c <GUI_ALLOC_UnlockH>
 80097e4:	4620      	mov	r0, r4
 80097e6:	b002      	add	sp, #8
 80097e8:	bd10      	pop	{r4, pc}

080097ea <RADIO_SetTextColor>:
 80097ea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80097ec:	460c      	mov	r4, r1
 80097ee:	4605      	mov	r5, r0
 80097f0:	b180      	cbz	r0, 8009814 <RADIO_SetTextColor+0x2a>
 80097f2:	f009 f8bd 	bl	8012970 <GUI_ALLOC_LockH>
 80097f6:	6b82      	ldr	r2, [r0, #56]	; 0x38
 80097f8:	9001      	str	r0, [sp, #4]
 80097fa:	4294      	cmp	r4, r2
 80097fc:	d007      	beq.n	800980e <RADIO_SetTextColor+0x24>
 80097fe:	6384      	str	r4, [r0, #56]	; 0x38
 8009800:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8009802:	f000 ffdd 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 8009806:	b110      	cbz	r0, 800980e <RADIO_SetTextColor+0x24>
 8009808:	4628      	mov	r0, r5
 800980a:	f003 f9fe 	bl	800cc0a <WM_InvalidateWindow>
 800980e:	a801      	add	r0, sp, #4
 8009810:	f009 f8bc 	bl	801298c <GUI_ALLOC_UnlockH>
 8009814:	b003      	add	sp, #12
 8009816:	bd30      	pop	{r4, r5, pc}

08009818 <RADIO_CreateIndirect>:
 8009818:	b5f0      	push	{r4, r5, r6, r7, lr}
 800981a:	b089      	sub	sp, #36	; 0x24
 800981c:	6944      	ldr	r4, [r0, #20]
 800981e:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8009822:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8009826:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 800982a:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800982e:	9100      	str	r1, [sp, #0]
 8009830:	8a41      	ldrh	r1, [r0, #18]
 8009832:	9101      	str	r1, [sp, #4]
 8009834:	2100      	movs	r1, #0
 8009836:	9102      	str	r1, [sp, #8]
 8009838:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800983c:	9103      	str	r1, [sp, #12]
 800983e:	b2e1      	uxtb	r1, r4
 8009840:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8009844:	9104      	str	r1, [sp, #16]
 8009846:	9405      	str	r4, [sp, #20]
 8009848:	6984      	ldr	r4, [r0, #24]
 800984a:	9406      	str	r4, [sp, #24]
 800984c:	eb0e 0002 	add.w	r0, lr, r2
 8009850:	18f9      	adds	r1, r7, r3
 8009852:	4632      	mov	r2, r6
 8009854:	462b      	mov	r3, r5
 8009856:	f000 f839 	bl	80098cc <RADIO_CreateUser>
 800985a:	b009      	add	sp, #36	; 0x24
 800985c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800985e <RADIO__GetButtonSize>:
 800985e:	b530      	push	{r4, r5, lr}
 8009860:	b08b      	sub	sp, #44	; 0x2c
 8009862:	4605      	mov	r5, r0
 8009864:	f009 f884 	bl	8012970 <GUI_ALLOC_LockH>
 8009868:	ab0a      	add	r3, sp, #40	; 0x28
 800986a:	6d82      	ldr	r2, [r0, #88]	; 0x58
 800986c:	f843 0d28 	str.w	r0, [r3, #-40]!
 8009870:	6894      	ldr	r4, [r2, #8]
 8009872:	4668      	mov	r0, sp
 8009874:	f009 f88a 	bl	801298c <GUI_ALLOC_UnlockH>
 8009878:	2319      	movs	r3, #25
 800987a:	9302      	str	r3, [sp, #8]
 800987c:	9501      	str	r5, [sp, #4]
 800987e:	6863      	ldr	r3, [r4, #4]
 8009880:	a801      	add	r0, sp, #4
 8009882:	4798      	blx	r3
 8009884:	b00b      	add	sp, #44	; 0x2c
 8009886:	bd30      	pop	{r4, r5, pc}

08009888 <RADIO__SetValue>:
 8009888:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800988a:	460c      	mov	r4, r1
 800988c:	4605      	mov	r5, r0
 800988e:	f009 f86f 	bl	8012970 <GUI_ALLOC_LockH>
 8009892:	f8b0 2064 	ldrh.w	r2, [r0, #100]	; 0x64
 8009896:	9001      	str	r0, [sp, #4]
 8009898:	4294      	cmp	r4, r2
 800989a:	bfa8      	it	ge
 800989c:	f102 34ff 	addge.w	r4, r2, #4294967295
 80098a0:	f9b0 2060 	ldrsh.w	r2, [r0, #96]	; 0x60
 80098a4:	4294      	cmp	r4, r2
 80098a6:	d00c      	beq.n	80098c2 <RADIO__SetValue+0x3a>
 80098a8:	f8a0 4060 	strh.w	r4, [r0, #96]	; 0x60
 80098ac:	4628      	mov	r0, r5
 80098ae:	f003 f9ac 	bl	800cc0a <WM_InvalidateWindow>
 80098b2:	a801      	add	r0, sp, #4
 80098b4:	f009 f86a 	bl	801298c <GUI_ALLOC_UnlockH>
 80098b8:	4628      	mov	r0, r5
 80098ba:	2105      	movs	r1, #5
 80098bc:	f002 fa51 	bl	800bd62 <WM_NotifyParent>
 80098c0:	e002      	b.n	80098c8 <RADIO__SetValue+0x40>
 80098c2:	a801      	add	r0, sp, #4
 80098c4:	f009 f862 	bl	801298c <GUI_ALLOC_UnlockH>
 80098c8:	b003      	add	sp, #12
 80098ca:	bd30      	pop	{r4, r5, pc}

080098cc <RADIO_CreateUser>:
 80098cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80098d0:	b087      	sub	sp, #28
 80098d2:	4c33      	ldr	r4, [pc, #204]	; (80099a0 <RADIO_CreateUser+0xd4>)
 80098d4:	9f15      	ldr	r7, [sp, #84]	; 0x54
 80098d6:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80098d8:	6924      	ldr	r4, [r4, #16]
 80098da:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 80098de:	8865      	ldrh	r5, [r4, #2]
 80098e0:	2f00      	cmp	r7, #0
 80098e2:	bfd8      	it	le
 80098e4:	2714      	movle	r7, #20
 80098e6:	2e00      	cmp	r6, #0
 80098e8:	bfd8      	it	le
 80098ea:	2602      	movle	r6, #2
 80098ec:	b91b      	cbnz	r3, 80098f6 <RADIO_CreateUser+0x2a>
 80098ee:	3504      	adds	r5, #4
 80098f0:	1e73      	subs	r3, r6, #1
 80098f2:	fb07 5303 	mla	r3, r7, r3, r5
 80098f6:	b90a      	cbnz	r2, 80098fc <RADIO_CreateUser+0x30>
 80098f8:	8822      	ldrh	r2, [r4, #0]
 80098fa:	3204      	adds	r2, #4
 80098fc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80098fe:	f8cd a000 	str.w	sl, [sp]
 8009902:	f044 0401 	orr.w	r4, r4, #1
 8009906:	9401      	str	r4, [sp, #4]
 8009908:	4c26      	ldr	r4, [pc, #152]	; (80099a4 <RADIO_CreateUser+0xd8>)
 800990a:	9402      	str	r4, [sp, #8]
 800990c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 800990e:	343c      	adds	r4, #60	; 0x3c
 8009910:	9403      	str	r4, [sp, #12]
 8009912:	f003 f9bb 	bl	800cc8c <WM_CreateWindowAsChild>
 8009916:	4680      	mov	r8, r0
 8009918:	2800      	cmp	r0, #0
 800991a:	d03c      	beq.n	8009996 <RADIO_CreateUser+0xca>
 800991c:	f000 ffe5 	bl	800a8ea <GUI_ARRAY_Create>
 8009920:	2400      	movs	r4, #0
 8009922:	4605      	mov	r5, r0
 8009924:	2100      	movs	r1, #0
 8009926:	4628      	mov	r0, r5
 8009928:	460a      	mov	r2, r1
 800992a:	3401      	adds	r4, #1
 800992c:	f000 ff57 	bl	800a7de <GUI_ARRAY_AddItem>
 8009930:	42b4      	cmp	r4, r6
 8009932:	dbf7      	blt.n	8009924 <RADIO_CreateUser+0x58>
 8009934:	4640      	mov	r0, r8
 8009936:	f009 f81b 	bl	8012970 <GUI_ALLOC_LockH>
 800993a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800993c:	65c5      	str	r5, [r0, #92]	; 0x5c
 800993e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8009942:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8009944:	f8df b060 	ldr.w	fp, [pc, #96]	; 80099a8 <RADIO_CreateUser+0xdc>
 8009948:	9005      	str	r0, [sp, #20]
 800994a:	f042 0210 	orr.w	r2, r2, #16
 800994e:	f7ff fbed 	bl	800912c <WIDGET__Init>
 8009952:	4d13      	ldr	r5, [pc, #76]	; (80099a0 <RADIO_CreateUser+0xd4>)
 8009954:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8009958:	f8db 3000 	ldr.w	r3, [fp]
 800995c:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
 8009960:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009962:	f109 0434 	add.w	r4, r9, #52	; 0x34
 8009966:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009968:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800996a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800996c:	682b      	ldr	r3, [r5, #0]
 800996e:	6023      	str	r3, [r4, #0]
 8009970:	4650      	mov	r0, sl
 8009972:	f002 fbf9 	bl	800c168 <WM_GetBkColor>
 8009976:	f8c9 0034 	str.w	r0, [r9, #52]	; 0x34
 800997a:	a806      	add	r0, sp, #24
 800997c:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8009980:	f8a3 6064 	strh.w	r6, [r3, #100]	; 0x64
 8009984:	f8a3 7062 	strh.w	r7, [r3, #98]	; 0x62
 8009988:	f009 f800 	bl	801298c <GUI_ALLOC_UnlockH>
 800998c:	f8db 3000 	ldr.w	r3, [fp]
 8009990:	4640      	mov	r0, r8
 8009992:	685b      	ldr	r3, [r3, #4]
 8009994:	4798      	blx	r3
 8009996:	4640      	mov	r0, r8
 8009998:	b007      	add	sp, #28
 800999a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800999e:	bf00      	nop
 80099a0:	20000070 	.word	0x20000070
 80099a4:	08009a1f 	.word	0x08009a1f
 80099a8:	20000094 	.word	0x20000094

080099ac <RADIO_SetValue>:
 80099ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80099ae:	460c      	mov	r4, r1
 80099b0:	4605      	mov	r5, r0
 80099b2:	b1a8      	cbz	r0, 80099e0 <RADIO_SetValue+0x34>
 80099b4:	f008 ffdc 	bl	8012970 <GUI_ALLOC_LockH>
 80099b8:	ab02      	add	r3, sp, #8
 80099ba:	f890 6066 	ldrb.w	r6, [r0, #102]	; 0x66
 80099be:	f843 0d04 	str.w	r0, [r3, #-4]!
 80099c2:	4618      	mov	r0, r3
 80099c4:	f008 ffe2 	bl	801298c <GUI_ALLOC_UnlockH>
 80099c8:	4628      	mov	r0, r5
 80099ca:	b12e      	cbz	r6, 80099d8 <RADIO_SetValue+0x2c>
 80099cc:	4b05      	ldr	r3, [pc, #20]	; (80099e4 <RADIO_SetValue+0x38>)
 80099ce:	681b      	ldr	r3, [r3, #0]
 80099d0:	b113      	cbz	r3, 80099d8 <RADIO_SetValue+0x2c>
 80099d2:	4621      	mov	r1, r4
 80099d4:	4798      	blx	r3
 80099d6:	e003      	b.n	80099e0 <RADIO_SetValue+0x34>
 80099d8:	ea24 71e4 	bic.w	r1, r4, r4, asr #31
 80099dc:	f7ff ff54 	bl	8009888 <RADIO__SetValue>
 80099e0:	b002      	add	sp, #8
 80099e2:	bd70      	pop	{r4, r5, r6, pc}
 80099e4:	20019bf8 	.word	0x20019bf8

080099e8 <RADIO_AddValue>:
 80099e8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80099ea:	460c      	mov	r4, r1
 80099ec:	4606      	mov	r6, r0
 80099ee:	b168      	cbz	r0, 8009a0c <RADIO_AddValue+0x24>
 80099f0:	f008 ffbe 	bl	8012970 <GUI_ALLOC_LockH>
 80099f4:	4602      	mov	r2, r0
 80099f6:	a802      	add	r0, sp, #8
 80099f8:	f9b2 5060 	ldrsh.w	r5, [r2, #96]	; 0x60
 80099fc:	f840 2d04 	str.w	r2, [r0, #-4]!
 8009a00:	f008 ffc4 	bl	801298c <GUI_ALLOC_UnlockH>
 8009a04:	4630      	mov	r0, r6
 8009a06:	1929      	adds	r1, r5, r4
 8009a08:	f7ff ffd0 	bl	80099ac <RADIO_SetValue>
 8009a0c:	b002      	add	sp, #8
 8009a0e:	bd70      	pop	{r4, r5, r6, pc}

08009a10 <RADIO_Dec>:
 8009a10:	f04f 31ff 	mov.w	r1, #4294967295
 8009a14:	f7ff bfe8 	b.w	80099e8 <RADIO_AddValue>

08009a18 <RADIO_Inc>:
 8009a18:	2101      	movs	r1, #1
 8009a1a:	f7ff bfe5 	b.w	80099e8 <RADIO_AddValue>

08009a1e <RADIO_Callback>:
 8009a1e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009a22:	6844      	ldr	r4, [r0, #4]
 8009a24:	4605      	mov	r5, r0
 8009a26:	4629      	mov	r1, r5
 8009a28:	4620      	mov	r0, r4
 8009a2a:	f7ff fb87 	bl	800913c <WIDGET_HandleActive>
 8009a2e:	2800      	cmp	r0, #0
 8009a30:	f000 809a 	beq.w	8009b68 <RADIO_Callback+0x14a>
 8009a34:	682b      	ldr	r3, [r5, #0]
 8009a36:	2b0f      	cmp	r3, #15
 8009a38:	d00c      	beq.n	8009a54 <RADIO_Callback+0x36>
 8009a3a:	dc05      	bgt.n	8009a48 <RADIO_Callback+0x2a>
 8009a3c:	2b0b      	cmp	r3, #11
 8009a3e:	f000 8084 	beq.w	8009b4a <RADIO_Callback+0x12c>
 8009a42:	2b0e      	cmp	r3, #14
 8009a44:	d06d      	beq.n	8009b22 <RADIO_Callback+0x104>
 8009a46:	e08c      	b.n	8009b62 <RADIO_Callback+0x144>
 8009a48:	2b2b      	cmp	r3, #43	; 0x2b
 8009a4a:	d013      	beq.n	8009a74 <RADIO_Callback+0x56>
 8009a4c:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009a50:	d01d      	beq.n	8009a8e <RADIO_Callback+0x70>
 8009a52:	e086      	b.n	8009b62 <RADIO_Callback+0x144>
 8009a54:	4620      	mov	r0, r4
 8009a56:	f008 ff8b 	bl	8012970 <GUI_ALLOC_LockH>
 8009a5a:	ab02      	add	r3, sp, #8
 8009a5c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009a60:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8009a62:	6815      	ldr	r5, [r2, #0]
 8009a64:	4618      	mov	r0, r3
 8009a66:	f008 ff91 	bl	801298c <GUI_ALLOC_UnlockH>
 8009a6a:	2d00      	cmp	r5, #0
 8009a6c:	d07c      	beq.n	8009b68 <RADIO_Callback+0x14a>
 8009a6e:	4620      	mov	r0, r4
 8009a70:	47a8      	blx	r5
 8009a72:	e079      	b.n	8009b68 <RADIO_Callback+0x14a>
 8009a74:	4620      	mov	r0, r4
 8009a76:	f008 ff7b 	bl	8012970 <GUI_ALLOC_LockH>
 8009a7a:	ab02      	add	r3, sp, #8
 8009a7c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009a80:	f890 2066 	ldrb.w	r2, [r0, #102]	; 0x66
 8009a84:	60ea      	str	r2, [r5, #12]
 8009a86:	4618      	mov	r0, r3
 8009a88:	f008 ff80 	bl	801298c <GUI_ALLOC_UnlockH>
 8009a8c:	e06c      	b.n	8009b68 <RADIO_Callback+0x14a>
 8009a8e:	4620      	mov	r0, r4
 8009a90:	68ee      	ldr	r6, [r5, #12]
 8009a92:	f008 ff6d 	bl	8012970 <GUI_ALLOC_LockH>
 8009a96:	9001      	str	r0, [sp, #4]
 8009a98:	f890 3066 	ldrb.w	r3, [r0, #102]	; 0x66
 8009a9c:	f8b0 7062 	ldrh.w	r7, [r0, #98]	; 0x62
 8009aa0:	b143      	cbz	r3, 8009ab4 <RADIO_Callback+0x96>
 8009aa2:	f9b0 9006 	ldrsh.w	r9, [r0, #6]
 8009aa6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8009aaa:	ebc3 0909 	rsb	r9, r3, r9
 8009aae:	f109 0901 	add.w	r9, r9, #1
 8009ab2:	e006      	b.n	8009ac2 <RADIO_Callback+0xa4>
 8009ab4:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8009ab6:	689b      	ldr	r3, [r3, #8]
 8009ab8:	4620      	mov	r0, r4
 8009aba:	681b      	ldr	r3, [r3, #0]
 8009abc:	4798      	blx	r3
 8009abe:	f100 0904 	add.w	r9, r0, #4
 8009ac2:	a802      	add	r0, sp, #8
 8009ac4:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8009ac8:	f8b3 8030 	ldrh.w	r8, [r3, #48]	; 0x30
 8009acc:	f008 ff5e 	bl	801298c <GUI_ALLOC_UnlockH>
 8009ad0:	68eb      	ldr	r3, [r5, #12]
 8009ad2:	b1a3      	cbz	r3, 8009afe <RADIO_Callback+0xe0>
 8009ad4:	7a33      	ldrb	r3, [r6, #8]
 8009ad6:	b1ab      	cbz	r3, 8009b04 <RADIO_Callback+0xe6>
 8009ad8:	6873      	ldr	r3, [r6, #4]
 8009ada:	fb93 f1f7 	sdiv	r1, r3, r7
 8009ade:	fb07 3711 	mls	r7, r7, r1, r3
 8009ae2:	454f      	cmp	r7, r9
 8009ae4:	dc02      	bgt.n	8009aec <RADIO_Callback+0xce>
 8009ae6:	4620      	mov	r0, r4
 8009ae8:	f7ff ff60 	bl	80099ac <RADIO_SetValue>
 8009aec:	4620      	mov	r0, r4
 8009aee:	f002 fa32 	bl	800bf56 <WM_IsFocussable>
 8009af2:	b150      	cbz	r0, 8009b0a <RADIO_Callback+0xec>
 8009af4:	4620      	mov	r0, r4
 8009af6:	f001 ffc5 	bl	800ba84 <WM_SetFocus>
 8009afa:	2600      	movs	r6, #0
 8009afc:	e006      	b.n	8009b0c <RADIO_Callback+0xee>
 8009afe:	461e      	mov	r6, r3
 8009b00:	2103      	movs	r1, #3
 8009b02:	e004      	b.n	8009b0e <RADIO_Callback+0xf0>
 8009b04:	2601      	movs	r6, #1
 8009b06:	2102      	movs	r1, #2
 8009b08:	e001      	b.n	8009b0e <RADIO_Callback+0xf0>
 8009b0a:	4606      	mov	r6, r0
 8009b0c:	2101      	movs	r1, #1
 8009b0e:	4620      	mov	r0, r4
 8009b10:	f002 f927 	bl	800bd62 <WM_NotifyParent>
 8009b14:	2e01      	cmp	r6, #1
 8009b16:	d124      	bne.n	8009b62 <RADIO_Callback+0x144>
 8009b18:	fa0f f088 	sxth.w	r0, r8
 8009b1c:	f007 fe76 	bl	801180c <GUI_StoreKey>
 8009b20:	e01f      	b.n	8009b62 <RADIO_Callback+0x144>
 8009b22:	68eb      	ldr	r3, [r5, #12]
 8009b24:	685a      	ldr	r2, [r3, #4]
 8009b26:	2a00      	cmp	r2, #0
 8009b28:	dd1b      	ble.n	8009b62 <RADIO_Callback+0x144>
 8009b2a:	681b      	ldr	r3, [r3, #0]
 8009b2c:	3b10      	subs	r3, #16
 8009b2e:	2b03      	cmp	r3, #3
 8009b30:	d817      	bhi.n	8009b62 <RADIO_Callback+0x144>
 8009b32:	e8df f003 	tbb	[pc, r3]
 8009b36:	0606      	.short	0x0606
 8009b38:	0202      	.short	0x0202
 8009b3a:	4620      	mov	r0, r4
 8009b3c:	f7ff ff6c 	bl	8009a18 <RADIO_Inc>
 8009b40:	e00f      	b.n	8009b62 <RADIO_Callback+0x144>
 8009b42:	4620      	mov	r0, r4
 8009b44:	f7ff ff64 	bl	8009a10 <RADIO_Dec>
 8009b48:	e00b      	b.n	8009b62 <RADIO_Callback+0x144>
 8009b4a:	4620      	mov	r0, r4
 8009b4c:	f008 ff10 	bl	8012970 <GUI_ALLOC_LockH>
 8009b50:	ac02      	add	r4, sp, #8
 8009b52:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009b56:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8009b58:	f000 fe8b 	bl	800a872 <GUI_ARRAY_Delete>
 8009b5c:	4620      	mov	r0, r4
 8009b5e:	f008 ff15 	bl	801298c <GUI_ALLOC_UnlockH>
 8009b62:	4628      	mov	r0, r5
 8009b64:	f003 fc74 	bl	800d450 <WM_DefaultProc>
 8009b68:	b003      	add	sp, #12
 8009b6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009b6e <_AdjustRect>:
 8009b6e:	b538      	push	{r3, r4, r5, lr}
 8009b70:	4605      	mov	r5, r0
 8009b72:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8009b74:	460c      	mov	r4, r1
 8009b76:	f007 ff63 	bl	8011a40 <GUI_GetYSizeOfFont>
 8009b7a:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
 8009b7e:	b90b      	cbnz	r3, 8009b84 <_AdjustRect+0x16>
 8009b80:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
 8009b84:	6eaa      	ldr	r2, [r5, #104]	; 0x68
 8009b86:	4283      	cmp	r3, r0
 8009b88:	bfac      	ite	ge
 8009b8a:	18d0      	addge	r0, r2, r3
 8009b8c:	1810      	addlt	r0, r2, r0
 8009b8e:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 8009b90:	f013 0f08 	tst.w	r3, #8
 8009b94:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8009b96:	d009      	beq.n	8009bac <_AdjustRect+0x3e>
 8009b98:	075a      	lsls	r2, r3, #29
 8009b9a:	d503      	bpl.n	8009ba4 <_AdjustRect+0x36>
 8009b9c:	8823      	ldrh	r3, [r4, #0]
 8009b9e:	4418      	add	r0, r3
 8009ba0:	8020      	strh	r0, [r4, #0]
 8009ba2:	bd38      	pop	{r3, r4, r5, pc}
 8009ba4:	88a3      	ldrh	r3, [r4, #4]
 8009ba6:	1a18      	subs	r0, r3, r0
 8009ba8:	80a0      	strh	r0, [r4, #4]
 8009baa:	bd38      	pop	{r3, r4, r5, pc}
 8009bac:	075b      	lsls	r3, r3, #29
 8009bae:	d503      	bpl.n	8009bb8 <_AdjustRect+0x4a>
 8009bb0:	88e3      	ldrh	r3, [r4, #6]
 8009bb2:	1a18      	subs	r0, r3, r0
 8009bb4:	80e0      	strh	r0, [r4, #6]
 8009bb6:	bd38      	pop	{r3, r4, r5, pc}
 8009bb8:	8863      	ldrh	r3, [r4, #2]
 8009bba:	4418      	add	r0, r3
 8009bbc:	8060      	strh	r0, [r4, #2]
 8009bbe:	bd38      	pop	{r3, r4, r5, pc}

08009bc0 <_GetScrollbarH>:
 8009bc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009bc2:	f008 fed5 	bl	8012970 <GUI_ALLOC_LockH>
 8009bc6:	ad02      	add	r5, sp, #8
 8009bc8:	69c4      	ldr	r4, [r0, #28]
 8009bca:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009bce:	4628      	mov	r0, r5
 8009bd0:	f008 fedc 	bl	801298c <GUI_ALLOC_UnlockH>
 8009bd4:	b154      	cbz	r4, 8009bec <_GetScrollbarH+0x2c>
 8009bd6:	4620      	mov	r0, r4
 8009bd8:	f002 fa3c 	bl	800c054 <WM_GetId>
 8009bdc:	28ff      	cmp	r0, #255	; 0xff
 8009bde:	d005      	beq.n	8009bec <_GetScrollbarH+0x2c>
 8009be0:	4620      	mov	r0, r4
 8009be2:	f008 fec5 	bl	8012970 <GUI_ALLOC_LockH>
 8009be6:	9001      	str	r0, [sp, #4]
 8009be8:	6a04      	ldr	r4, [r0, #32]
 8009bea:	e7f0      	b.n	8009bce <_GetScrollbarH+0xe>
 8009bec:	4620      	mov	r0, r4
 8009bee:	b003      	add	sp, #12
 8009bf0:	bd30      	pop	{r4, r5, pc}

08009bf2 <_GetEnable>:
 8009bf2:	b513      	push	{r0, r1, r4, lr}
 8009bf4:	460c      	mov	r4, r1
 8009bf6:	f008 febb 	bl	8012970 <GUI_ALLOC_LockH>
 8009bfa:	9001      	str	r0, [sp, #4]
 8009bfc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8009bfe:	f000 fddf 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 8009c02:	4284      	cmp	r4, r0
 8009c04:	d20e      	bcs.n	8009c24 <_GetEnable+0x32>
 8009c06:	9b01      	ldr	r3, [sp, #4]
 8009c08:	4621      	mov	r1, r4
 8009c0a:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8009c0c:	f000 fe5a 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 8009c10:	ab02      	add	r3, sp, #8
 8009c12:	7904      	ldrb	r4, [r0, #4]
 8009c14:	f843 0d08 	str.w	r0, [r3, #-8]!
 8009c18:	4668      	mov	r0, sp
 8009c1a:	f004 0401 	and.w	r4, r4, #1
 8009c1e:	f008 feb5 	bl	801298c <GUI_ALLOC_UnlockH>
 8009c22:	e000      	b.n	8009c26 <_GetEnable+0x34>
 8009c24:	2400      	movs	r4, #0
 8009c26:	a801      	add	r0, sp, #4
 8009c28:	f008 feb0 	bl	801298c <GUI_ALLOC_UnlockH>
 8009c2c:	4620      	mov	r0, r4
 8009c2e:	b002      	add	sp, #8
 8009c30:	bd10      	pop	{r4, pc}

08009c32 <_AddScrollbar>:
 8009c32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c36:	b089      	sub	sp, #36	; 0x24
 8009c38:	4689      	mov	r9, r1
 8009c3a:	4690      	mov	r8, r2
 8009c3c:	4605      	mov	r5, r0
 8009c3e:	461f      	mov	r7, r3
 8009c40:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8009c42:	f008 fe95 	bl	8012970 <GUI_ALLOC_LockH>
 8009c46:	ac08      	add	r4, sp, #32
 8009c48:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009c4a:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009c4e:	f8b0 a032 	ldrh.w	sl, [r0, #50]	; 0x32
 8009c52:	9305      	str	r3, [sp, #20]
 8009c54:	4620      	mov	r0, r4
 8009c56:	f008 fe99 	bl	801298c <GUI_ALLOC_UnlockH>
 8009c5a:	4628      	mov	r0, r5
 8009c5c:	f7ff ffb0 	bl	8009bc0 <_GetScrollbarH>
 8009c60:	4683      	mov	fp, r0
 8009c62:	b9a0      	cbnz	r0, 8009c8e <_AddScrollbar+0x5c>
 8009c64:	f00a 0308 	and.w	r3, sl, #8
 8009c68:	21ff      	movs	r1, #255	; 0xff
 8009c6a:	2202      	movs	r2, #2
 8009c6c:	b29b      	uxth	r3, r3
 8009c6e:	9500      	str	r5, [sp, #0]
 8009c70:	9101      	str	r1, [sp, #4]
 8009c72:	9202      	str	r2, [sp, #8]
 8009c74:	b103      	cbz	r3, 8009c78 <_AddScrollbar+0x46>
 8009c76:	2308      	movs	r3, #8
 8009c78:	9303      	str	r3, [sp, #12]
 8009c7a:	4641      	mov	r1, r8
 8009c7c:	4648      	mov	r0, r9
 8009c7e:	463a      	mov	r2, r7
 8009c80:	4633      	mov	r3, r6
 8009c82:	f009 fd74 	bl	801376e <SCROLLBAR_Create>
 8009c86:	9905      	ldr	r1, [sp, #20]
 8009c88:	f009 f9a8 	bl	8012fdc <WIDGET_SetEffect>
 8009c8c:	e008      	b.n	8009ca0 <_AddScrollbar+0x6e>
 8009c8e:	4649      	mov	r1, r9
 8009c90:	4642      	mov	r2, r8
 8009c92:	f002 f870 	bl	800bd76 <WM_MoveChildTo>
 8009c96:	4658      	mov	r0, fp
 8009c98:	4639      	mov	r1, r7
 8009c9a:	4632      	mov	r2, r6
 8009c9c:	f001 fe5d 	bl	800b95a <WM_SetSize>
 8009ca0:	4628      	mov	r0, r5
 8009ca2:	f008 fe65 	bl	8012970 <GUI_ALLOC_LockH>
 8009ca6:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8009ca8:	9007      	str	r0, [sp, #28]
 8009caa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009cae:	8643      	strh	r3, [r0, #50]	; 0x32
 8009cb0:	4620      	mov	r0, r4
 8009cb2:	f008 fe6b 	bl	801298c <GUI_ALLOC_UnlockH>
 8009cb6:	b009      	add	sp, #36	; 0x24
 8009cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009cbc <_SetScrollbar>:
 8009cbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009cbe:	460c      	mov	r4, r1
 8009cc0:	4606      	mov	r6, r0
 8009cc2:	f7ff ff7d 	bl	8009bc0 <_GetScrollbarH>
 8009cc6:	4621      	mov	r1, r4
 8009cc8:	4605      	mov	r5, r0
 8009cca:	f00a f821 	bl	8013d10 <SCROLLBAR_SetNumItems>
 8009cce:	4628      	mov	r0, r5
 8009cd0:	2101      	movs	r1, #1
 8009cd2:	f00a f830 	bl	8013d36 <SCROLLBAR_SetPageSize>
 8009cd6:	4630      	mov	r0, r6
 8009cd8:	f008 fe4a 	bl	8012970 <GUI_ALLOC_LockH>
 8009cdc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8009cde:	9001      	str	r0, [sp, #4]
 8009ce0:	42a2      	cmp	r2, r4
 8009ce2:	4603      	mov	r3, r0
 8009ce4:	db07      	blt.n	8009cf6 <_SetScrollbar+0x3a>
 8009ce6:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8009ce8:	f012 0201 	ands.w	r2, r2, #1
 8009cec:	bf1a      	itte	ne
 8009cee:	f104 34ff 	addne.w	r4, r4, #4294967295
 8009cf2:	6444      	strne	r4, [r0, #68]	; 0x44
 8009cf4:	6442      	streq	r2, [r0, #68]	; 0x44
 8009cf6:	4628      	mov	r0, r5
 8009cf8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8009cfa:	f009 fdf9 	bl	80138f0 <SCROLLBAR_SetValue>
 8009cfe:	a801      	add	r0, sp, #4
 8009d00:	f008 fe44 	bl	801298c <GUI_ALLOC_UnlockH>
 8009d04:	b002      	add	sp, #8
 8009d06:	bd70      	pop	{r4, r5, r6, pc}

08009d08 <_ShowPage>:
 8009d08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009d0a:	460d      	mov	r5, r1
 8009d0c:	f008 fe30 	bl	8012970 <GUI_ALLOC_LockH>
 8009d10:	4602      	mov	r2, r0
 8009d12:	a804      	add	r0, sp, #16
 8009d14:	6b96      	ldr	r6, [r2, #56]	; 0x38
 8009d16:	f840 2d0c 	str.w	r2, [r0, #-12]!
 8009d1a:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 8009d1c:	f008 fe36 	bl	801298c <GUI_ALLOC_UnlockH>
 8009d20:	4630      	mov	r0, r6
 8009d22:	f008 fe25 	bl	8012970 <GUI_ALLOC_LockH>
 8009d26:	9002      	str	r0, [sp, #8]
 8009d28:	4620      	mov	r0, r4
 8009d2a:	f000 fd49 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 8009d2e:	4285      	cmp	r5, r0
 8009d30:	d20b      	bcs.n	8009d4a <_ShowPage+0x42>
 8009d32:	4629      	mov	r1, r5
 8009d34:	4620      	mov	r0, r4
 8009d36:	f000 fdc5 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 8009d3a:	ab04      	add	r3, sp, #16
 8009d3c:	6805      	ldr	r5, [r0, #0]
 8009d3e:	f843 0d10 	str.w	r0, [r3, #-16]!
 8009d42:	4668      	mov	r0, sp
 8009d44:	f008 fe22 	bl	801298c <GUI_ALLOC_UnlockH>
 8009d48:	e000      	b.n	8009d4c <_ShowPage+0x44>
 8009d4a:	2500      	movs	r5, #0
 8009d4c:	a804      	add	r0, sp, #16
 8009d4e:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8009d52:	69dc      	ldr	r4, [r3, #28]
 8009d54:	f008 fe1a 	bl	801298c <GUI_ALLOC_UnlockH>
 8009d58:	b1cc      	cbz	r4, 8009d8e <_ShowPage+0x86>
 8009d5a:	42ac      	cmp	r4, r5
 8009d5c:	4620      	mov	r0, r4
 8009d5e:	d10b      	bne.n	8009d78 <_ShowPage+0x70>
 8009d60:	f001 fdb1 	bl	800b8c6 <WM_ShowWindow>
 8009d64:	f002 f986 	bl	800c074 <WM_GetFocussedWindow>
 8009d68:	4621      	mov	r1, r4
 8009d6a:	f001 fcda 	bl	800b722 <WM__IsChild>
 8009d6e:	b928      	cbnz	r0, 8009d7c <_ShowPage+0x74>
 8009d70:	4620      	mov	r0, r4
 8009d72:	f001 fe87 	bl	800ba84 <WM_SetFocus>
 8009d76:	e001      	b.n	8009d7c <_ShowPage+0x74>
 8009d78:	f002 f906 	bl	800bf88 <WM_HideWindow>
 8009d7c:	4620      	mov	r0, r4
 8009d7e:	f008 fdf7 	bl	8012970 <GUI_ALLOC_LockH>
 8009d82:	ab04      	add	r3, sp, #16
 8009d84:	6a04      	ldr	r4, [r0, #32]
 8009d86:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009d8a:	4618      	mov	r0, r3
 8009d8c:	e7e2      	b.n	8009d54 <_ShowPage+0x4c>
 8009d8e:	b004      	add	sp, #16
 8009d90:	bd70      	pop	{r4, r5, r6, pc}

08009d92 <MULTIPAGE__CalcBorderRect>:
 8009d92:	b538      	push	{r3, r4, r5, lr}
 8009d94:	4605      	mov	r5, r0
 8009d96:	460c      	mov	r4, r1
 8009d98:	f002 feef 	bl	800cb7a <WM__GetClientRectWin>
 8009d9c:	4628      	mov	r0, r5
 8009d9e:	4621      	mov	r1, r4
 8009da0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009da4:	f7ff bee3 	b.w	8009b6e <_AdjustRect>

08009da8 <MULTIPAGE__CalcClientRect>:
 8009da8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009daa:	460d      	mov	r5, r1
 8009dac:	f008 fde0 	bl	8012970 <GUI_ALLOC_LockH>
 8009db0:	ac02      	add	r4, sp, #8
 8009db2:	4629      	mov	r1, r5
 8009db4:	9001      	str	r0, [sp, #4]
 8009db6:	f7ff f95a 	bl	800906e <WIDGET__GetInsideRect>
 8009dba:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 8009dbe:	4629      	mov	r1, r5
 8009dc0:	f7ff fed5 	bl	8009b6e <_AdjustRect>
 8009dc4:	4620      	mov	r0, r4
 8009dc6:	f008 fde1 	bl	801298c <GUI_ALLOC_UnlockH>
 8009dca:	b003      	add	sp, #12
 8009dcc:	bd30      	pop	{r4, r5, pc}

08009dce <MULTIPAGE__DeleteScrollbar>:
 8009dce:	b513      	push	{r0, r1, r4, lr}
 8009dd0:	4604      	mov	r4, r0
 8009dd2:	f7ff fef5 	bl	8009bc0 <_GetScrollbarH>
 8009dd6:	f003 f803 	bl	800cde0 <WM_DeleteWindow>
 8009dda:	4620      	mov	r0, r4
 8009ddc:	f008 fdc8 	bl	8012970 <GUI_ALLOC_LockH>
 8009de0:	ab02      	add	r3, sp, #8
 8009de2:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8009de4:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009de8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009dec:	8642      	strh	r2, [r0, #50]	; 0x32
 8009dee:	4618      	mov	r0, r3
 8009df0:	f008 fdcc 	bl	801298c <GUI_ALLOC_UnlockH>
 8009df4:	b002      	add	sp, #8
 8009df6:	bd10      	pop	{r4, pc}

08009df8 <MULTIPAGE__GetPageWidth>:
 8009df8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009dfa:	460d      	mov	r5, r1
 8009dfc:	f008 fdb8 	bl	8012970 <GUI_ALLOC_LockH>
 8009e00:	9001      	str	r0, [sp, #4]
 8009e02:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8009e04:	f000 fcdc 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 8009e08:	9b01      	ldr	r3, [sp, #4]
 8009e0a:	6e5c      	ldr	r4, [r3, #100]	; 0x64
 8009e0c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8009e0e:	8e59      	ldrh	r1, [r3, #50]	; 0x32
 8009e10:	2908      	cmp	r1, #8
 8009e12:	bf08      	it	eq
 8009e14:	4614      	moveq	r4, r2
 8009e16:	4285      	cmp	r5, r0
 8009e18:	d22e      	bcs.n	8009e78 <MULTIPAGE__GetPageWidth+0x80>
 8009e1a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8009e1c:	f007 fb8a 	bl	8011534 <GUI_SetFont>
 8009e20:	9b01      	ldr	r3, [sp, #4]
 8009e22:	4629      	mov	r1, r5
 8009e24:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8009e26:	f000 fd4d 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 8009e2a:	6885      	ldr	r5, [r0, #8]
 8009e2c:	9000      	str	r0, [sp, #0]
 8009e2e:	b10d      	cbz	r5, 8009e34 <MULTIPAGE__GetPageWidth+0x3c>
 8009e30:	442c      	add	r4, r5
 8009e32:	e01d      	b.n	8009e70 <MULTIPAGE__GetPageWidth+0x78>
 8009e34:	3018      	adds	r0, #24
 8009e36:	f007 fe07 	bl	8011a48 <GUI_GetStringDistX>
 8009e3a:	462e      	mov	r6, r5
 8009e3c:	1907      	adds	r7, r0, r4
 8009e3e:	9b00      	ldr	r3, [sp, #0]
 8009e40:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8009e44:	68d8      	ldr	r0, [r3, #12]
 8009e46:	b160      	cbz	r0, 8009e62 <MULTIPAGE__GetPageWidth+0x6a>
 8009e48:	9b01      	ldr	r3, [sp, #4]
 8009e4a:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8009e4c:	071b      	lsls	r3, r3, #28
 8009e4e:	d502      	bpl.n	8009e56 <MULTIPAGE__GetPageWidth+0x5e>
 8009e50:	f000 fc83 	bl	800a75a <GUI_DRAW__GetYSize>
 8009e54:	e001      	b.n	8009e5a <MULTIPAGE__GetPageWidth+0x62>
 8009e56:	f000 fc6e 	bl	800a736 <GUI_DRAW__GetXSize>
 8009e5a:	4420      	add	r0, r4
 8009e5c:	4286      	cmp	r6, r0
 8009e5e:	bfb8      	it	lt
 8009e60:	4606      	movlt	r6, r0
 8009e62:	3501      	adds	r5, #1
 8009e64:	2d03      	cmp	r5, #3
 8009e66:	d1ea      	bne.n	8009e3e <MULTIPAGE__GetPageWidth+0x46>
 8009e68:	42be      	cmp	r6, r7
 8009e6a:	bfac      	ite	ge
 8009e6c:	4634      	movge	r4, r6
 8009e6e:	463c      	movlt	r4, r7
 8009e70:	4668      	mov	r0, sp
 8009e72:	f008 fd8b 	bl	801298c <GUI_ALLOC_UnlockH>
 8009e76:	e000      	b.n	8009e7a <MULTIPAGE__GetPageWidth+0x82>
 8009e78:	2400      	movs	r4, #0
 8009e7a:	a801      	add	r0, sp, #4
 8009e7c:	f008 fd86 	bl	801298c <GUI_ALLOC_UnlockH>
 8009e80:	4620      	mov	r0, r4
 8009e82:	b003      	add	sp, #12
 8009e84:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009e86 <MULTIPAGE__GetTabBarRect>:
 8009e86:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e8a:	b085      	sub	sp, #20
 8009e8c:	460c      	mov	r4, r1
 8009e8e:	4606      	mov	r6, r0
 8009e90:	f008 fd6e 	bl	8012970 <GUI_ALLOC_LockH>
 8009e94:	9001      	str	r0, [sp, #4]
 8009e96:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8009e98:	f007 fdd2 	bl	8011a40 <GUI_GetYSizeOfFont>
 8009e9c:	9b01      	ldr	r3, [sp, #4]
 8009e9e:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
 8009ea2:	b90a      	cbnz	r2, 8009ea8 <MULTIPAGE__GetTabBarRect+0x22>
 8009ea4:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8009ea8:	6e99      	ldr	r1, [r3, #104]	; 0x68
 8009eaa:	f8b3 9032 	ldrh.w	r9, [r3, #50]	; 0x32
 8009eae:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8009eb0:	6f9f      	ldr	r7, [r3, #120]	; 0x78
 8009eb2:	4282      	cmp	r2, r0
 8009eb4:	bfac      	ite	ge
 8009eb6:	eb01 0802 	addge.w	r8, r1, r2
 8009eba:	eb01 0800 	addlt.w	r8, r1, r0
 8009ebe:	4618      	mov	r0, r3
 8009ec0:	a902      	add	r1, sp, #8
 8009ec2:	f7ff ff66 	bl	8009d92 <MULTIPAGE__CalcBorderRect>
 8009ec6:	a801      	add	r0, sp, #4
 8009ec8:	f008 fd60 	bl	801298c <GUI_ALLOC_UnlockH>
 8009ecc:	f019 0f08 	tst.w	r9, #8
 8009ed0:	f005 0304 	and.w	r3, r5, #4
 8009ed4:	f409 7180 	and.w	r1, r9, #256	; 0x100
 8009ed8:	f005 0501 	and.w	r5, r5, #1
 8009edc:	d01d      	beq.n	8009f1a <MULTIPAGE__GetTabBarRect+0x94>
 8009ede:	b10b      	cbz	r3, 8009ee4 <MULTIPAGE__GetTabBarRect+0x5e>
 8009ee0:	2300      	movs	r3, #0
 8009ee2:	e001      	b.n	8009ee8 <MULTIPAGE__GetTabBarRect+0x62>
 8009ee4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8009ee8:	8023      	strh	r3, [r4, #0]
 8009eea:	8822      	ldrh	r2, [r4, #0]
 8009eec:	4490      	add	r8, r2
 8009eee:	f8a4 8004 	strh.w	r8, [r4, #4]
 8009ef2:	b119      	cbz	r1, 8009efc <MULTIPAGE__GetTabBarRect+0x76>
 8009ef4:	f9bd 000e 	ldrsh.w	r0, [sp, #14]
 8009ef8:	3820      	subs	r0, #32
 8009efa:	e001      	b.n	8009f00 <MULTIPAGE__GetTabBarRect+0x7a>
 8009efc:	4630      	mov	r0, r6
 8009efe:	47b8      	blx	r7
 8009f00:	b145      	cbz	r5, 8009f14 <MULTIPAGE__GetTabBarRect+0x8e>
 8009f02:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009f06:	80e3      	strh	r3, [r4, #6]
 8009f08:	b21a      	sxth	r2, r3
 8009f0a:	1a10      	subs	r0, r2, r0
 8009f0c:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8009f10:	8060      	strh	r0, [r4, #2]
 8009f12:	e01a      	b.n	8009f4a <MULTIPAGE__GetTabBarRect+0xc4>
 8009f14:	8065      	strh	r5, [r4, #2]
 8009f16:	80e0      	strh	r0, [r4, #6]
 8009f18:	e017      	b.n	8009f4a <MULTIPAGE__GetTabBarRect+0xc4>
 8009f1a:	b10b      	cbz	r3, 8009f20 <MULTIPAGE__GetTabBarRect+0x9a>
 8009f1c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009f20:	8063      	strh	r3, [r4, #2]
 8009f22:	8862      	ldrh	r2, [r4, #2]
 8009f24:	4490      	add	r8, r2
 8009f26:	f8a4 8006 	strh.w	r8, [r4, #6]
 8009f2a:	b119      	cbz	r1, 8009f34 <MULTIPAGE__GetTabBarRect+0xae>
 8009f2c:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 8009f30:	3820      	subs	r0, #32
 8009f32:	e001      	b.n	8009f38 <MULTIPAGE__GetTabBarRect+0xb2>
 8009f34:	4630      	mov	r0, r6
 8009f36:	47b8      	blx	r7
 8009f38:	b12d      	cbz	r5, 8009f46 <MULTIPAGE__GetTabBarRect+0xc0>
 8009f3a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8009f3e:	80a3      	strh	r3, [r4, #4]
 8009f40:	1a18      	subs	r0, r3, r0
 8009f42:	8020      	strh	r0, [r4, #0]
 8009f44:	e001      	b.n	8009f4a <MULTIPAGE__GetTabBarRect+0xc4>
 8009f46:	8025      	strh	r5, [r4, #0]
 8009f48:	80a0      	strh	r0, [r4, #4]
 8009f4a:	b005      	add	sp, #20
 8009f4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009f50 <MULTIPAGE__UpdatePositions>:
 8009f50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009f54:	b088      	sub	sp, #32
 8009f56:	4604      	mov	r4, r0
 8009f58:	f008 fd0a 	bl	8012970 <GUI_ALLOC_LockH>
 8009f5c:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8009f5e:	9003      	str	r0, [sp, #12]
 8009f60:	4620      	mov	r0, r4
 8009f62:	4798      	blx	r3
 8009f64:	4605      	mov	r5, r0
 8009f66:	9803      	ldr	r0, [sp, #12]
 8009f68:	a904      	add	r1, sp, #16
 8009f6a:	f8b0 a032 	ldrh.w	sl, [r0, #50]	; 0x32
 8009f6e:	f8d0 9048 	ldr.w	r9, [r0, #72]	; 0x48
 8009f72:	6cc6      	ldr	r6, [r0, #76]	; 0x4c
 8009f74:	f8d0 8070 	ldr.w	r8, [r0, #112]	; 0x70
 8009f78:	6b87      	ldr	r7, [r0, #56]	; 0x38
 8009f7a:	f7ff ff0a 	bl	8009d92 <MULTIPAGE__CalcBorderRect>
 8009f7e:	a803      	add	r0, sp, #12
 8009f80:	f008 fd04 	bl	801298c <GUI_ALLOC_UnlockH>
 8009f84:	f01a 0f08 	tst.w	sl, #8
 8009f88:	d03f      	beq.n	800a00a <MULTIPAGE__UpdatePositions+0xba>
 8009f8a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8009f8e:	429d      	cmp	r5, r3
 8009f90:	dd3f      	ble.n	800a012 <MULTIPAGE__UpdatePositions+0xc2>
 8009f92:	4648      	mov	r0, r9
 8009f94:	f007 fd54 	bl	8011a40 <GUI_GetYSizeOfFont>
 8009f98:	3006      	adds	r0, #6
 8009f9a:	2204      	movs	r2, #4
 8009f9c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8009fa0:	fb90 f3f2 	sdiv	r3, r0, r2
 8009fa4:	07f2      	lsls	r2, r6, #31
 8009fa6:	bf57      	itett	pl
 8009fa8:	f9bd 2016 	ldrshpl.w	r2, [sp, #22]
 8009fac:	f9bd 2012 	ldrshmi.w	r2, [sp, #18]
 8009fb0:	eba2 0243 	subpl.w	r2, r2, r3, lsl #1
 8009fb4:	3201      	addpl	r2, #1
 8009fb6:	0770      	lsls	r0, r6, #29
 8009fb8:	bf49      	itett	mi
 8009fba:	f9bd 1010 	ldrshmi.w	r1, [sp, #16]
 8009fbe:	f9bd 1014 	ldrshpl.w	r1, [sp, #20]
 8009fc2:	ebc3 0101 	rsbmi	r1, r3, r1
 8009fc6:	3101      	addmi	r1, #1
 8009fc8:	f1b8 0f00 	cmp.w	r8, #0
 8009fcc:	d004      	beq.n	8009fd8 <MULTIPAGE__UpdatePositions+0x88>
 8009fce:	0058      	lsls	r0, r3, #1
 8009fd0:	9000      	str	r0, [sp, #0]
 8009fd2:	4620      	mov	r0, r4
 8009fd4:	f7ff fe2d 	bl	8009c32 <_AddScrollbar>
 8009fd8:	4620      	mov	r0, r4
 8009fda:	a906      	add	r1, sp, #24
 8009fdc:	f7ff ff53 	bl	8009e86 <MULTIPAGE__GetTabBarRect>
 8009fe0:	2300      	movs	r3, #0
 8009fe2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8009fe6:	f9bd 201a 	ldrsh.w	r2, [sp, #26]
 8009fea:	1a8a      	subs	r2, r1, r2
 8009fec:	2a00      	cmp	r2, #0
 8009fee:	bfcc      	ite	gt
 8009ff0:	3201      	addgt	r2, #1
 8009ff2:	2201      	movle	r2, #1
 8009ff4:	4295      	cmp	r5, r2
 8009ff6:	4620      	mov	r0, r4
 8009ff8:	f103 0601 	add.w	r6, r3, #1
 8009ffc:	db4c      	blt.n	800a098 <MULTIPAGE__UpdatePositions+0x148>
 8009ffe:	4619      	mov	r1, r3
 800a000:	f7ff fefa 	bl	8009df8 <MULTIPAGE__GetPageWidth>
 800a004:	4633      	mov	r3, r6
 800a006:	1a2d      	subs	r5, r5, r0
 800a008:	e7eb      	b.n	8009fe2 <MULTIPAGE__UpdatePositions+0x92>
 800a00a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800a00e:	429d      	cmp	r5, r3
 800a010:	dc03      	bgt.n	800a01a <MULTIPAGE__UpdatePositions+0xca>
 800a012:	4620      	mov	r0, r4
 800a014:	f7ff fedb 	bl	8009dce <MULTIPAGE__DeleteScrollbar>
 800a018:	e041      	b.n	800a09e <MULTIPAGE__UpdatePositions+0x14e>
 800a01a:	4648      	mov	r0, r9
 800a01c:	f007 fd10 	bl	8011a40 <GUI_GetYSizeOfFont>
 800a020:	07f1      	lsls	r1, r6, #31
 800a022:	f100 0006 	add.w	r0, r0, #6
 800a026:	f04f 0204 	mov.w	r2, #4
 800a02a:	bf54      	ite	pl
 800a02c:	f9bd 1014 	ldrshpl.w	r1, [sp, #20]
 800a030:	f9bd 1010 	ldrshmi.w	r1, [sp, #16]
 800a034:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a038:	fb90 f3f2 	sdiv	r3, r0, r2
 800a03c:	bf5c      	itt	pl
 800a03e:	eba1 0143 	subpl.w	r1, r1, r3, lsl #1
 800a042:	3101      	addpl	r1, #1
 800a044:	0772      	lsls	r2, r6, #29
 800a046:	bf57      	itett	pl
 800a048:	f9bd 2012 	ldrshpl.w	r2, [sp, #18]
 800a04c:	f9bd 2016 	ldrshmi.w	r2, [sp, #22]
 800a050:	ebc3 0202 	rsbpl	r2, r3, r2
 800a054:	3201      	addpl	r2, #1
 800a056:	f1b8 0f00 	cmp.w	r8, #0
 800a05a:	d004      	beq.n	800a066 <MULTIPAGE__UpdatePositions+0x116>
 800a05c:	9300      	str	r3, [sp, #0]
 800a05e:	4620      	mov	r0, r4
 800a060:	005b      	lsls	r3, r3, #1
 800a062:	f7ff fde6 	bl	8009c32 <_AddScrollbar>
 800a066:	4620      	mov	r0, r4
 800a068:	a906      	add	r1, sp, #24
 800a06a:	f7ff ff0c 	bl	8009e86 <MULTIPAGE__GetTabBarRect>
 800a06e:	2300      	movs	r3, #0
 800a070:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 800a074:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800a078:	1a8a      	subs	r2, r1, r2
 800a07a:	2a00      	cmp	r2, #0
 800a07c:	bfcc      	ite	gt
 800a07e:	3201      	addgt	r2, #1
 800a080:	2201      	movle	r2, #1
 800a082:	4295      	cmp	r5, r2
 800a084:	4620      	mov	r0, r4
 800a086:	f103 0601 	add.w	r6, r3, #1
 800a08a:	db05      	blt.n	800a098 <MULTIPAGE__UpdatePositions+0x148>
 800a08c:	4619      	mov	r1, r3
 800a08e:	f7ff feb3 	bl	8009df8 <MULTIPAGE__GetPageWidth>
 800a092:	4633      	mov	r3, r6
 800a094:	1a2d      	subs	r5, r5, r0
 800a096:	e7eb      	b.n	800a070 <MULTIPAGE__UpdatePositions+0x120>
 800a098:	4631      	mov	r1, r6
 800a09a:	f7ff fe0f 	bl	8009cbc <_SetScrollbar>
 800a09e:	4620      	mov	r0, r4
 800a0a0:	a904      	add	r1, sp, #16
 800a0a2:	f7ff fe81 	bl	8009da8 <MULTIPAGE__CalcClientRect>
 800a0a6:	4638      	mov	r0, r7
 800a0a8:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800a0ac:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800a0b0:	f001 fe61 	bl	800bd76 <WM_MoveChildTo>
 800a0b4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 800a0b8:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 800a0bc:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 800a0c0:	1ac9      	subs	r1, r1, r3
 800a0c2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800a0c6:	1ad2      	subs	r2, r2, r3
 800a0c8:	4638      	mov	r0, r7
 800a0ca:	3101      	adds	r1, #1
 800a0cc:	3201      	adds	r2, #1
 800a0ce:	f001 fc44 	bl	800b95a <WM_SetSize>
 800a0d2:	4620      	mov	r0, r4
 800a0d4:	f002 fd99 	bl	800cc0a <WM_InvalidateWindow>
 800a0d8:	b008      	add	sp, #32
 800a0da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800a0e0 <MULTIPAGE_CreateUser>:
 800a0e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a0e2:	b089      	sub	sp, #36	; 0x24
 800a0e4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800a0e6:	9400      	str	r4, [sp, #0]
 800a0e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800a0ea:	f044 0401 	orr.w	r4, r4, #1
 800a0ee:	9401      	str	r4, [sp, #4]
 800a0f0:	4c33      	ldr	r4, [pc, #204]	; (800a1c0 <MULTIPAGE_CreateUser+0xe0>)
 800a0f2:	9402      	str	r4, [sp, #8]
 800a0f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800a0f6:	3460      	adds	r4, #96	; 0x60
 800a0f8:	9403      	str	r4, [sp, #12]
 800a0fa:	f002 fdc7 	bl	800cc8c <WM_CreateWindowAsChild>
 800a0fe:	4606      	mov	r6, r0
 800a100:	2800      	cmp	r0, #0
 800a102:	d059      	beq.n	800a1b8 <MULTIPAGE_CreateUser+0xd8>
 800a104:	f000 fbf1 	bl	800a8ea <GUI_ARRAY_Create>
 800a108:	4604      	mov	r4, r0
 800a10a:	2800      	cmp	r0, #0
 800a10c:	d054      	beq.n	800a1b8 <MULTIPAGE_CreateUser+0xd8>
 800a10e:	4630      	mov	r0, r6
 800a110:	f008 fc2e 	bl	8012970 <GUI_ALLOC_LockH>
 800a114:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a116:	4d2b      	ldr	r5, [pc, #172]	; (800a1c4 <MULTIPAGE_CreateUser+0xe4>)
 800a118:	63c4      	str	r4, [r0, #60]	; 0x3c
 800a11a:	f012 0f08 	tst.w	r2, #8
 800a11e:	bf14      	ite	ne
 800a120:	2218      	movne	r2, #24
 800a122:	2210      	moveq	r2, #16
 800a124:	9911      	ldr	r1, [sp, #68]	; 0x44
 800a126:	9005      	str	r0, [sp, #20]
 800a128:	f7ff f800 	bl	800912c <WIDGET__Init>
 800a12c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a12e:	9f05      	ldr	r7, [sp, #20]
 800a130:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800a134:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a136:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a138:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a13a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a13c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a13e:	682b      	ldr	r3, [r5, #0]
 800a140:	6023      	str	r3, [r4, #0]
 800a142:	4d21      	ldr	r5, [pc, #132]	; (800a1c8 <MULTIPAGE_CreateUser+0xe8>)
 800a144:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a148:	643b      	str	r3, [r7, #64]	; 0x40
 800a14a:	4b20      	ldr	r3, [pc, #128]	; (800a1cc <MULTIPAGE_CreateUser+0xec>)
 800a14c:	637b      	str	r3, [r7, #52]	; 0x34
 800a14e:	2400      	movs	r4, #0
 800a150:	682b      	ldr	r3, [r5, #0]
 800a152:	67fb      	str	r3, [r7, #124]	; 0x7c
 800a154:	a906      	add	r1, sp, #24
 800a156:	4630      	mov	r0, r6
 800a158:	647c      	str	r4, [r7, #68]	; 0x44
 800a15a:	f8c7 4084 	str.w	r4, [r7, #132]	; 0x84
 800a15e:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 800a162:	f7ff fe21 	bl	8009da8 <MULTIPAGE__CalcClientRect>
 800a166:	a805      	add	r0, sp, #20
 800a168:	f008 fc10 	bl	801298c <GUI_ALLOC_UnlockH>
 800a16c:	682b      	ldr	r3, [r5, #0]
 800a16e:	4630      	mov	r0, r6
 800a170:	685b      	ldr	r3, [r3, #4]
 800a172:	4798      	blx	r3
 800a174:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800a178:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800a17c:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800a180:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a184:	9403      	str	r4, [sp, #12]
 800a186:	f240 7582 	movw	r5, #1922	; 0x782
 800a18a:	1a12      	subs	r2, r2, r0
 800a18c:	1a5b      	subs	r3, r3, r1
 800a18e:	9501      	str	r5, [sp, #4]
 800a190:	4d0f      	ldr	r5, [pc, #60]	; (800a1d0 <MULTIPAGE_CreateUser+0xf0>)
 800a192:	9600      	str	r6, [sp, #0]
 800a194:	9502      	str	r5, [sp, #8]
 800a196:	3201      	adds	r2, #1
 800a198:	3301      	adds	r3, #1
 800a19a:	f002 fd77 	bl	800cc8c <WM_CreateWindowAsChild>
 800a19e:	4604      	mov	r4, r0
 800a1a0:	b138      	cbz	r0, 800a1b2 <MULTIPAGE_CreateUser+0xd2>
 800a1a2:	4630      	mov	r0, r6
 800a1a4:	f008 fbe4 	bl	8012970 <GUI_ALLOC_LockH>
 800a1a8:	9005      	str	r0, [sp, #20]
 800a1aa:	6384      	str	r4, [r0, #56]	; 0x38
 800a1ac:	a805      	add	r0, sp, #20
 800a1ae:	f008 fbed 	bl	801298c <GUI_ALLOC_UnlockH>
 800a1b2:	4630      	mov	r0, r6
 800a1b4:	f7ff fecc 	bl	8009f50 <MULTIPAGE__UpdatePositions>
 800a1b8:	4630      	mov	r0, r6
 800a1ba:	b009      	add	sp, #36	; 0x24
 800a1bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1be:	bf00      	nop
 800a1c0:	0800a273 	.word	0x0800a273
 800a1c4:	20000098 	.word	0x20000098
 800a1c8:	200000d4 	.word	0x200000d4
 800a1cc:	0801427d 	.word	0x0801427d
 800a1d0:	0800a50d 	.word	0x0800a50d

0800a1d4 <MULTIPAGE_CreateEx>:
 800a1d4:	b510      	push	{r4, lr}
 800a1d6:	b086      	sub	sp, #24
 800a1d8:	9c08      	ldr	r4, [sp, #32]
 800a1da:	9400      	str	r4, [sp, #0]
 800a1dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800a1de:	9401      	str	r4, [sp, #4]
 800a1e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800a1e2:	9402      	str	r4, [sp, #8]
 800a1e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800a1e6:	9403      	str	r4, [sp, #12]
 800a1e8:	2400      	movs	r4, #0
 800a1ea:	9404      	str	r4, [sp, #16]
 800a1ec:	f7ff ff78 	bl	800a0e0 <MULTIPAGE_CreateUser>
 800a1f0:	b006      	add	sp, #24
 800a1f2:	bd10      	pop	{r4, pc}

0800a1f4 <MULTIPAGE_SelectPage>:
 800a1f4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a1f8:	460c      	mov	r4, r1
 800a1fa:	4605      	mov	r5, r0
 800a1fc:	2800      	cmp	r0, #0
 800a1fe:	d035      	beq.n	800a26c <MULTIPAGE_SelectPage+0x78>
 800a200:	f008 fbb6 	bl	8012970 <GUI_ALLOC_LockH>
 800a204:	ae02      	add	r6, sp, #8
 800a206:	6bc7      	ldr	r7, [r0, #60]	; 0x3c
 800a208:	f846 0d04 	str.w	r0, [r6, #-4]!
 800a20c:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 800a210:	4638      	mov	r0, r7
 800a212:	f000 fad5 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 800a216:	4681      	mov	r9, r0
 800a218:	4630      	mov	r0, r6
 800a21a:	f008 fbb7 	bl	801298c <GUI_ALLOC_UnlockH>
 800a21e:	454c      	cmp	r4, r9
 800a220:	d224      	bcs.n	800a26c <MULTIPAGE_SelectPage+0x78>
 800a222:	4628      	mov	r0, r5
 800a224:	4621      	mov	r1, r4
 800a226:	f7ff fce4 	bl	8009bf2 <_GetEnable>
 800a22a:	b1f8      	cbz	r0, 800a26c <MULTIPAGE_SelectPage+0x78>
 800a22c:	4544      	cmp	r4, r8
 800a22e:	d00f      	beq.n	800a250 <MULTIPAGE_SelectPage+0x5c>
 800a230:	4621      	mov	r1, r4
 800a232:	4628      	mov	r0, r5
 800a234:	f7ff fd68 	bl	8009d08 <_ShowPage>
 800a238:	4628      	mov	r0, r5
 800a23a:	f008 fb99 	bl	8012970 <GUI_ALLOC_LockH>
 800a23e:	9001      	str	r0, [sp, #4]
 800a240:	6404      	str	r4, [r0, #64]	; 0x40
 800a242:	4630      	mov	r0, r6
 800a244:	f008 fba2 	bl	801298c <GUI_ALLOC_UnlockH>
 800a248:	4628      	mov	r0, r5
 800a24a:	f7ff fe81 	bl	8009f50 <MULTIPAGE__UpdatePositions>
 800a24e:	e00d      	b.n	800a26c <MULTIPAGE_SelectPage+0x78>
 800a250:	4621      	mov	r1, r4
 800a252:	4638      	mov	r0, r7
 800a254:	f000 fb36 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 800a258:	ab02      	add	r3, sp, #8
 800a25a:	6804      	ldr	r4, [r0, #0]
 800a25c:	f843 0d08 	str.w	r0, [r3, #-8]!
 800a260:	4668      	mov	r0, sp
 800a262:	f008 fb93 	bl	801298c <GUI_ALLOC_UnlockH>
 800a266:	4620      	mov	r0, r4
 800a268:	f001 fc0c 	bl	800ba84 <WM_SetFocus>
 800a26c:	b003      	add	sp, #12
 800a26e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a272 <MULTIPAGE_Callback>:
 800a272:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a276:	6844      	ldr	r4, [r0, #4]
 800a278:	4605      	mov	r5, r0
 800a27a:	2c00      	cmp	r4, #0
 800a27c:	f000 8102 	beq.w	800a484 <MULTIPAGE_Callback+0x212>
 800a280:	6803      	ldr	r3, [r0, #0]
 800a282:	2b1e      	cmp	r3, #30
 800a284:	d12d      	bne.n	800a2e2 <MULTIPAGE_Callback+0x70>
 800a286:	68c3      	ldr	r3, [r0, #12]
 800a288:	2b01      	cmp	r3, #1
 800a28a:	d130      	bne.n	800a2ee <MULTIPAGE_Callback+0x7c>
 800a28c:	4620      	mov	r0, r4
 800a28e:	f008 fb6f 	bl	8012970 <GUI_ALLOC_LockH>
 800a292:	4602      	mov	r2, r0
 800a294:	a802      	add	r0, sp, #8
 800a296:	6bd6      	ldr	r6, [r2, #60]	; 0x3c
 800a298:	f840 2d04 	str.w	r2, [r0, #-4]!
 800a29c:	6c17      	ldr	r7, [r2, #64]	; 0x40
 800a29e:	f008 fb75 	bl	801298c <GUI_ALLOC_UnlockH>
 800a2a2:	4630      	mov	r0, r6
 800a2a4:	f000 fa8c 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 800a2a8:	4287      	cmp	r7, r0
 800a2aa:	d20b      	bcs.n	800a2c4 <MULTIPAGE_Callback+0x52>
 800a2ac:	4630      	mov	r0, r6
 800a2ae:	4639      	mov	r1, r7
 800a2b0:	f000 fb08 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 800a2b4:	ab02      	add	r3, sp, #8
 800a2b6:	6806      	ldr	r6, [r0, #0]
 800a2b8:	f843 0d08 	str.w	r0, [r3, #-8]!
 800a2bc:	4668      	mov	r0, sp
 800a2be:	f008 fb65 	bl	801298c <GUI_ALLOC_UnlockH>
 800a2c2:	e000      	b.n	800a2c6 <MULTIPAGE_Callback+0x54>
 800a2c4:	2600      	movs	r6, #0
 800a2c6:	4630      	mov	r0, r6
 800a2c8:	f001 fe3c 	bl	800bf44 <WM_IsVisible>
 800a2cc:	b178      	cbz	r0, 800a2ee <MULTIPAGE_Callback+0x7c>
 800a2ce:	f001 fed1 	bl	800c074 <WM_GetFocussedWindow>
 800a2d2:	4631      	mov	r1, r6
 800a2d4:	f001 fa25 	bl	800b722 <WM__IsChild>
 800a2d8:	b948      	cbnz	r0, 800a2ee <MULTIPAGE_Callback+0x7c>
 800a2da:	4630      	mov	r0, r6
 800a2dc:	f001 fbd2 	bl	800ba84 <WM_SetFocus>
 800a2e0:	e005      	b.n	800a2ee <MULTIPAGE_Callback+0x7c>
 800a2e2:	4620      	mov	r0, r4
 800a2e4:	4629      	mov	r1, r5
 800a2e6:	f7fe ff29 	bl	800913c <WIDGET_HandleActive>
 800a2ea:	4606      	mov	r6, r0
 800a2ec:	e000      	b.n	800a2f0 <MULTIPAGE_Callback+0x7e>
 800a2ee:	2600      	movs	r6, #0
 800a2f0:	682b      	ldr	r3, [r5, #0]
 800a2f2:	2b14      	cmp	r3, #20
 800a2f4:	f000 80ad 	beq.w	800a452 <MULTIPAGE_Callback+0x1e0>
 800a2f8:	dc08      	bgt.n	800a30c <MULTIPAGE_Callback+0x9a>
 800a2fa:	2b0b      	cmp	r3, #11
 800a2fc:	f000 80b2 	beq.w	800a464 <MULTIPAGE_Callback+0x1f2>
 800a300:	2b0f      	cmp	r3, #15
 800a302:	d024      	beq.n	800a34e <MULTIPAGE_Callback+0xdc>
 800a304:	2b05      	cmp	r3, #5
 800a306:	f040 80b9 	bne.w	800a47c <MULTIPAGE_Callback+0x20a>
 800a30a:	e0a7      	b.n	800a45c <MULTIPAGE_Callback+0x1ea>
 800a30c:	2b26      	cmp	r3, #38	; 0x26
 800a30e:	f000 8086 	beq.w	800a41e <MULTIPAGE_Callback+0x1ac>
 800a312:	dc0e      	bgt.n	800a332 <MULTIPAGE_Callback+0xc0>
 800a314:	2b17      	cmp	r3, #23
 800a316:	f040 80b1 	bne.w	800a47c <MULTIPAGE_Callback+0x20a>
 800a31a:	4620      	mov	r0, r4
 800a31c:	f008 fb28 	bl	8012970 <GUI_ALLOC_LockH>
 800a320:	ab02      	add	r3, sp, #8
 800a322:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800a324:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a328:	60ea      	str	r2, [r5, #12]
 800a32a:	4618      	mov	r0, r3
 800a32c:	f008 fb2e 	bl	801298c <GUI_ALLOC_UnlockH>
 800a330:	e0a8      	b.n	800a484 <MULTIPAGE_Callback+0x212>
 800a332:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800a336:	d01b      	beq.n	800a370 <MULTIPAGE_Callback+0xfe>
 800a338:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800a33c:	f040 809e 	bne.w	800a47c <MULTIPAGE_Callback+0x20a>
 800a340:	4620      	mov	r0, r4
 800a342:	f7ff fc3d 	bl	8009bc0 <_GetScrollbarH>
 800a346:	68e9      	ldr	r1, [r5, #12]
 800a348:	f008 fe48 	bl	8012fdc <WIDGET_SetEffect>
 800a34c:	e086      	b.n	800a45c <MULTIPAGE_Callback+0x1ea>
 800a34e:	4620      	mov	r0, r4
 800a350:	f008 fb0e 	bl	8012970 <GUI_ALLOC_LockH>
 800a354:	ab02      	add	r3, sp, #8
 800a356:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a35a:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
 800a35c:	6815      	ldr	r5, [r2, #0]
 800a35e:	4618      	mov	r0, r3
 800a360:	f008 fb14 	bl	801298c <GUI_ALLOC_UnlockH>
 800a364:	2d00      	cmp	r5, #0
 800a366:	f000 808d 	beq.w	800a484 <MULTIPAGE_Callback+0x212>
 800a36a:	4620      	mov	r0, r4
 800a36c:	47a8      	blx	r5
 800a36e:	e089      	b.n	800a484 <MULTIPAGE_Callback+0x212>
 800a370:	68ee      	ldr	r6, [r5, #12]
 800a372:	2e00      	cmp	r6, #0
 800a374:	d04a      	beq.n	800a40c <MULTIPAGE_Callback+0x19a>
 800a376:	7a33      	ldrb	r3, [r6, #8]
 800a378:	2b00      	cmp	r3, #0
 800a37a:	d049      	beq.n	800a410 <MULTIPAGE_Callback+0x19e>
 800a37c:	4620      	mov	r0, r4
 800a37e:	f8d6 a000 	ldr.w	sl, [r6]
 800a382:	f8d6 9004 	ldr.w	r9, [r6, #4]
 800a386:	f008 faf3 	bl	8012970 <GUI_ALLOC_LockH>
 800a38a:	af02      	add	r7, sp, #8
 800a38c:	f847 0d04 	str.w	r0, [r7, #-4]!
 800a390:	f8d0 8074 	ldr.w	r8, [r0, #116]	; 0x74
 800a394:	4638      	mov	r0, r7
 800a396:	f008 faf9 	bl	801298c <GUI_ALLOC_UnlockH>
 800a39a:	4651      	mov	r1, sl
 800a39c:	4620      	mov	r0, r4
 800a39e:	464a      	mov	r2, r9
 800a3a0:	47c0      	blx	r8
 800a3a2:	1e01      	subs	r1, r0, #0
 800a3a4:	4620      	mov	r0, r4
 800a3a6:	db09      	blt.n	800a3bc <MULTIPAGE_Callback+0x14a>
 800a3a8:	f7ff ff24 	bl	800a1f4 <MULTIPAGE_SelectPage>
 800a3ac:	4620      	mov	r0, r4
 800a3ae:	2105      	movs	r1, #5
 800a3b0:	f001 fcd7 	bl	800bd62 <WM_NotifyParent>
 800a3b4:	4620      	mov	r0, r4
 800a3b6:	f001 fee9 	bl	800c18c <WM_BringToTop>
 800a3ba:	e02b      	b.n	800a414 <MULTIPAGE_Callback+0x1a2>
 800a3bc:	f001 fe3a 	bl	800c034 <WM_GetWindowOrgX>
 800a3c0:	4482      	add	sl, r0
 800a3c2:	4620      	mov	r0, r4
 800a3c4:	f001 fe3e 	bl	800c044 <WM_GetWindowOrgY>
 800a3c8:	4481      	add	r9, r0
 800a3ca:	4651      	mov	r1, sl
 800a3cc:	4620      	mov	r0, r4
 800a3ce:	464a      	mov	r2, r9
 800a3d0:	f001 fc3a 	bl	800bc48 <WM_Screen2hWinEx>
 800a3d4:	4680      	mov	r8, r0
 800a3d6:	b1e8      	cbz	r0, 800a414 <MULTIPAGE_Callback+0x1a2>
 800a3d8:	42a0      	cmp	r0, r4
 800a3da:	d01b      	beq.n	800a414 <MULTIPAGE_Callback+0x1a2>
 800a3dc:	f001 fe2a 	bl	800c034 <WM_GetWindowOrgX>
 800a3e0:	ebc0 000a 	rsb	r0, r0, sl
 800a3e4:	6030      	str	r0, [r6, #0]
 800a3e6:	4640      	mov	r0, r8
 800a3e8:	f001 fe2c 	bl	800c044 <WM_GetWindowOrgY>
 800a3ec:	ebc0 0009 	rsb	r0, r0, r9
 800a3f0:	6070      	str	r0, [r6, #4]
 800a3f2:	f8c5 8004 	str.w	r8, [r5, #4]
 800a3f6:	4640      	mov	r0, r8
 800a3f8:	f008 faba 	bl	8012970 <GUI_ALLOC_LockH>
 800a3fc:	9001      	str	r0, [sp, #4]
 800a3fe:	6906      	ldr	r6, [r0, #16]
 800a400:	4638      	mov	r0, r7
 800a402:	f008 fac3 	bl	801298c <GUI_ALLOC_UnlockH>
 800a406:	4628      	mov	r0, r5
 800a408:	47b0      	blx	r6
 800a40a:	e003      	b.n	800a414 <MULTIPAGE_Callback+0x1a2>
 800a40c:	2103      	movs	r1, #3
 800a40e:	e002      	b.n	800a416 <MULTIPAGE_Callback+0x1a4>
 800a410:	2102      	movs	r1, #2
 800a412:	e000      	b.n	800a416 <MULTIPAGE_Callback+0x1a4>
 800a414:	2101      	movs	r1, #1
 800a416:	4620      	mov	r0, r4
 800a418:	f001 fca3 	bl	800bd62 <WM_NotifyParent>
 800a41c:	e032      	b.n	800a484 <MULTIPAGE_Callback+0x212>
 800a41e:	68eb      	ldr	r3, [r5, #12]
 800a420:	2b05      	cmp	r3, #5
 800a422:	d12f      	bne.n	800a484 <MULTIPAGE_Callback+0x212>
 800a424:	68a8      	ldr	r0, [r5, #8]
 800a426:	f001 fe15 	bl	800c054 <WM_GetId>
 800a42a:	28ff      	cmp	r0, #255	; 0xff
 800a42c:	d12a      	bne.n	800a484 <MULTIPAGE_Callback+0x212>
 800a42e:	4620      	mov	r0, r4
 800a430:	f008 fa9e 	bl	8012970 <GUI_ALLOC_LockH>
 800a434:	ae02      	add	r6, sp, #8
 800a436:	4607      	mov	r7, r0
 800a438:	f846 0d04 	str.w	r0, [r6, #-4]!
 800a43c:	68a8      	ldr	r0, [r5, #8]
 800a43e:	f009 f987 	bl	8013750 <SCROLLBAR_GetValue>
 800a442:	6478      	str	r0, [r7, #68]	; 0x44
 800a444:	4630      	mov	r0, r6
 800a446:	f008 faa1 	bl	801298c <GUI_ALLOC_UnlockH>
 800a44a:	4620      	mov	r0, r4
 800a44c:	f002 fbdd 	bl	800cc0a <WM_InvalidateWindow>
 800a450:	e018      	b.n	800a484 <MULTIPAGE_Callback+0x212>
 800a452:	4620      	mov	r0, r4
 800a454:	68e9      	ldr	r1, [r5, #12]
 800a456:	f7ff fca7 	bl	8009da8 <MULTIPAGE__CalcClientRect>
 800a45a:	e013      	b.n	800a484 <MULTIPAGE_Callback+0x212>
 800a45c:	4620      	mov	r0, r4
 800a45e:	f7ff fd77 	bl	8009f50 <MULTIPAGE__UpdatePositions>
 800a462:	e00f      	b.n	800a484 <MULTIPAGE_Callback+0x212>
 800a464:	4620      	mov	r0, r4
 800a466:	f008 fa83 	bl	8012970 <GUI_ALLOC_LockH>
 800a46a:	ac02      	add	r4, sp, #8
 800a46c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a470:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800a472:	f000 f9fe 	bl	800a872 <GUI_ARRAY_Delete>
 800a476:	4620      	mov	r0, r4
 800a478:	f008 fa88 	bl	801298c <GUI_ALLOC_UnlockH>
 800a47c:	b116      	cbz	r6, 800a484 <MULTIPAGE_Callback+0x212>
 800a47e:	4628      	mov	r0, r5
 800a480:	f002 ffe6 	bl	800d450 <WM_DefaultProc>
 800a484:	b002      	add	sp, #8
 800a486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800a48a <_MoveSel>:
 800a48a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a48e:	460f      	mov	r7, r1
 800a490:	4606      	mov	r6, r0
 800a492:	f008 fa6d 	bl	8012970 <GUI_ALLOC_LockH>
 800a496:	9001      	str	r0, [sp, #4]
 800a498:	4630      	mov	r0, r6
 800a49a:	f7ff fb91 	bl	8009bc0 <_GetScrollbarH>
 800a49e:	9b01      	ldr	r3, [sp, #4]
 800a4a0:	4680      	mov	r8, r0
 800a4a2:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800a4a4:	f000 f98c 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 800a4a8:	4681      	mov	r9, r0
 800a4aa:	a802      	add	r0, sp, #8
 800a4ac:	f04f 34ff 	mov.w	r4, #4294967295
 800a4b0:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 800a4b4:	6c15      	ldr	r5, [r2, #64]	; 0x40
 800a4b6:	f8d2 a044 	ldr.w	sl, [r2, #68]	; 0x44
 800a4ba:	f008 fa67 	bl	801298c <GUI_ALLOC_UnlockH>
 800a4be:	443d      	add	r5, r7
 800a4c0:	2d00      	cmp	r5, #0
 800a4c2:	da06      	bge.n	800a4d2 <_MoveSel+0x48>
 800a4c4:	2c00      	cmp	r4, #0
 800a4c6:	db11      	blt.n	800a4ec <_MoveSel+0x62>
 800a4c8:	4630      	mov	r0, r6
 800a4ca:	4621      	mov	r1, r4
 800a4cc:	f7ff fe92 	bl	800a1f4 <MULTIPAGE_SelectPage>
 800a4d0:	e00e      	b.n	800a4f0 <_MoveSel+0x66>
 800a4d2:	454d      	cmp	r5, r9
 800a4d4:	daf6      	bge.n	800a4c4 <_MoveSel+0x3a>
 800a4d6:	1c63      	adds	r3, r4, #1
 800a4d8:	d1f4      	bne.n	800a4c4 <_MoveSel+0x3a>
 800a4da:	4629      	mov	r1, r5
 800a4dc:	4630      	mov	r0, r6
 800a4de:	f7ff fb88 	bl	8009bf2 <_GetEnable>
 800a4e2:	2800      	cmp	r0, #0
 800a4e4:	bf18      	it	ne
 800a4e6:	462c      	movne	r4, r5
 800a4e8:	443d      	add	r5, r7
 800a4ea:	e7e9      	b.n	800a4c0 <_MoveSel+0x36>
 800a4ec:	eb0a 0407 	add.w	r4, sl, r7
 800a4f0:	f1b8 0f00 	cmp.w	r8, #0
 800a4f4:	d007      	beq.n	800a506 <_MoveSel+0x7c>
 800a4f6:	2c00      	cmp	r4, #0
 800a4f8:	db05      	blt.n	800a506 <_MoveSel+0x7c>
 800a4fa:	454c      	cmp	r4, r9
 800a4fc:	da03      	bge.n	800a506 <_MoveSel+0x7c>
 800a4fe:	4640      	mov	r0, r8
 800a500:	4621      	mov	r1, r4
 800a502:	f009 f9f5 	bl	80138f0 <SCROLLBAR_SetValue>
 800a506:	b002      	add	sp, #8
 800a508:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800a50c <_ClientCallback>:
 800a50c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a50e:	6845      	ldr	r5, [r0, #4]
 800a510:	4604      	mov	r4, r0
 800a512:	4628      	mov	r0, r5
 800a514:	f001 fd86 	bl	800c024 <WM_GetParent>
 800a518:	6823      	ldr	r3, [r4, #0]
 800a51a:	2b17      	cmp	r3, #23
 800a51c:	4606      	mov	r6, r0
 800a51e:	d020      	beq.n	800a562 <_ClientCallback+0x56>
 800a520:	dc11      	bgt.n	800a546 <_ClientCallback+0x3a>
 800a522:	2b0e      	cmp	r3, #14
 800a524:	d01f      	beq.n	800a566 <_ClientCallback+0x5a>
 800a526:	2b0f      	cmp	r3, #15
 800a528:	d12d      	bne.n	800a586 <_ClientCallback+0x7a>
 800a52a:	f008 fa21 	bl	8012970 <GUI_ALLOC_LockH>
 800a52e:	ac02      	add	r4, sp, #8
 800a530:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a534:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800a536:	f005 fe37 	bl	80101a8 <LCD_SetBkColor>
 800a53a:	4620      	mov	r0, r4
 800a53c:	f008 fa26 	bl	801298c <GUI_ALLOC_UnlockH>
 800a540:	f007 fde6 	bl	8012110 <GUI_Clear>
 800a544:	e022      	b.n	800a58c <_ClientCallback+0x80>
 800a546:	2b31      	cmp	r3, #49	; 0x31
 800a548:	d008      	beq.n	800a55c <_ClientCallback+0x50>
 800a54a:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800a54e:	d11a      	bne.n	800a586 <_ClientCallback+0x7a>
 800a550:	f001 fa98 	bl	800ba84 <WM_SetFocus>
 800a554:	4630      	mov	r0, r6
 800a556:	f001 fe19 	bl	800c18c <WM_BringToTop>
 800a55a:	e017      	b.n	800a58c <_ClientCallback+0x80>
 800a55c:	2300      	movs	r3, #0
 800a55e:	60e3      	str	r3, [r4, #12]
 800a560:	e014      	b.n	800a58c <_ClientCallback+0x80>
 800a562:	60e5      	str	r5, [r4, #12]
 800a564:	e012      	b.n	800a58c <_ClientCallback+0x80>
 800a566:	68e3      	ldr	r3, [r4, #12]
 800a568:	685a      	ldr	r2, [r3, #4]
 800a56a:	2a00      	cmp	r2, #0
 800a56c:	dd0b      	ble.n	800a586 <_ClientCallback+0x7a>
 800a56e:	681b      	ldr	r3, [r3, #0]
 800a570:	2b21      	cmp	r3, #33	; 0x21
 800a572:	d003      	beq.n	800a57c <_ClientCallback+0x70>
 800a574:	2b22      	cmp	r3, #34	; 0x22
 800a576:	d106      	bne.n	800a586 <_ClientCallback+0x7a>
 800a578:	2101      	movs	r1, #1
 800a57a:	e001      	b.n	800a580 <_ClientCallback+0x74>
 800a57c:	f04f 31ff 	mov.w	r1, #4294967295
 800a580:	f7ff ff83 	bl	800a48a <_MoveSel>
 800a584:	e002      	b.n	800a58c <_ClientCallback+0x80>
 800a586:	4620      	mov	r0, r4
 800a588:	f002 ff62 	bl	800d450 <WM_DefaultProc>
 800a58c:	b002      	add	sp, #8
 800a58e:	bd70      	pop	{r4, r5, r6, pc}

0800a590 <MULTIPAGE_AddPage>:
 800a590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a594:	460c      	mov	r4, r1
 800a596:	b08d      	sub	sp, #52	; 0x34
 800a598:	4616      	mov	r6, r2
 800a59a:	4681      	mov	r9, r0
 800a59c:	2800      	cmp	r0, #0
 800a59e:	d079      	beq.n	800a694 <MULTIPAGE_AddPage+0x104>
 800a5a0:	f008 f9e6 	bl	8012970 <GUI_ALLOC_LockH>
 800a5a4:	ab0c      	add	r3, sp, #48	; 0x30
 800a5a6:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800a5a8:	f843 0d28 	str.w	r0, [r3, #-40]!
 800a5ac:	6b87      	ldr	r7, [r0, #56]	; 0x38
 800a5ae:	4618      	mov	r0, r3
 800a5b0:	f008 f9ec 	bl	801298c <GUI_ALLOC_UnlockH>
 800a5b4:	bb74      	cbnz	r4, 800a614 <MULTIPAGE_AddPage+0x84>
 800a5b6:	4638      	mov	r0, r7
 800a5b8:	f008 f9da 	bl	8012970 <GUI_ALLOC_LockH>
 800a5bc:	ab0c      	add	r3, sp, #48	; 0x30
 800a5be:	69c7      	ldr	r7, [r0, #28]
 800a5c0:	f843 0d20 	str.w	r0, [r3, #-32]!
 800a5c4:	4618      	mov	r0, r3
 800a5c6:	f008 f9e1 	bl	801298c <GUI_ALLOC_UnlockH>
 800a5ca:	b357      	cbz	r7, 800a622 <MULTIPAGE_AddPage+0x92>
 800a5cc:	bb5c      	cbnz	r4, 800a626 <MULTIPAGE_AddPage+0x96>
 800a5ce:	4628      	mov	r0, r5
 800a5d0:	f000 f8f6 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 800a5d4:	46a0      	mov	r8, r4
 800a5d6:	4682      	mov	sl, r0
 800a5d8:	45d0      	cmp	r8, sl
 800a5da:	da12      	bge.n	800a602 <MULTIPAGE_AddPage+0x72>
 800a5dc:	4641      	mov	r1, r8
 800a5de:	4628      	mov	r0, r5
 800a5e0:	f000 f970 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 800a5e4:	4602      	mov	r2, r0
 800a5e6:	a80c      	add	r0, sp, #48	; 0x30
 800a5e8:	2100      	movs	r1, #0
 800a5ea:	f8d2 b000 	ldr.w	fp, [r2]
 800a5ee:	f840 2d2c 	str.w	r2, [r0, #-44]!
 800a5f2:	6091      	str	r1, [r2, #8]
 800a5f4:	f008 f9ca 	bl	801298c <GUI_ALLOC_UnlockH>
 800a5f8:	45bb      	cmp	fp, r7
 800a5fa:	d003      	beq.n	800a604 <MULTIPAGE_AddPage+0x74>
 800a5fc:	f108 0801 	add.w	r8, r8, #1
 800a600:	e7ea      	b.n	800a5d8 <MULTIPAGE_AddPage+0x48>
 800a602:	463c      	mov	r4, r7
 800a604:	4638      	mov	r0, r7
 800a606:	f008 f9b3 	bl	8012970 <GUI_ALLOC_LockH>
 800a60a:	ab0c      	add	r3, sp, #48	; 0x30
 800a60c:	6a07      	ldr	r7, [r0, #32]
 800a60e:	f843 0d24 	str.w	r0, [r3, #-36]!
 800a612:	e7d7      	b.n	800a5c4 <MULTIPAGE_AddPage+0x34>
 800a614:	2200      	movs	r2, #0
 800a616:	4620      	mov	r0, r4
 800a618:	4639      	mov	r1, r7
 800a61a:	4613      	mov	r3, r2
 800a61c:	f001 fe47 	bl	800c2ae <WM_AttachWindowAt>
 800a620:	e001      	b.n	800a626 <MULTIPAGE_AddPage+0x96>
 800a622:	2c00      	cmp	r4, #0
 800a624:	d036      	beq.n	800a694 <MULTIPAGE_AddPage+0x104>
 800a626:	2300      	movs	r3, #0
 800a628:	f88d 3003 	strb.w	r3, [sp, #3]
 800a62c:	b90e      	cbnz	r6, 800a632 <MULTIPAGE_AddPage+0xa2>
 800a62e:	f10d 0603 	add.w	r6, sp, #3
 800a632:	2301      	movs	r3, #1
 800a634:	f88d 3018 	strb.w	r3, [sp, #24]
 800a638:	4630      	mov	r0, r6
 800a63a:	2300      	movs	r3, #0
 800a63c:	9405      	str	r4, [sp, #20]
 800a63e:	9308      	str	r3, [sp, #32]
 800a640:	9309      	str	r3, [sp, #36]	; 0x24
 800a642:	930a      	str	r3, [sp, #40]	; 0x28
 800a644:	9307      	str	r3, [sp, #28]
 800a646:	f7f5 fde3 	bl	8000210 <strlen>
 800a64a:	a905      	add	r1, sp, #20
 800a64c:	f100 021c 	add.w	r2, r0, #28
 800a650:	4628      	mov	r0, r5
 800a652:	f000 f8c4 	bl	800a7de <GUI_ARRAY_AddItem>
 800a656:	b9b0      	cbnz	r0, 800a686 <MULTIPAGE_AddPage+0xf6>
 800a658:	4628      	mov	r0, r5
 800a65a:	f000 f8b1 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 800a65e:	1e41      	subs	r1, r0, #1
 800a660:	4628      	mov	r0, r5
 800a662:	f000 f92f 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 800a666:	ac0c      	add	r4, sp, #48	; 0x30
 800a668:	4607      	mov	r7, r0
 800a66a:	f844 0d2c 	str.w	r0, [r4, #-44]!
 800a66e:	4630      	mov	r0, r6
 800a670:	f7f5 fdce 	bl	8000210 <strlen>
 800a674:	4631      	mov	r1, r6
 800a676:	1c42      	adds	r2, r0, #1
 800a678:	f107 0018 	add.w	r0, r7, #24
 800a67c:	f00f fe31 	bl	801a2e2 <memcpy>
 800a680:	4620      	mov	r0, r4
 800a682:	f008 f983 	bl	801298c <GUI_ALLOC_UnlockH>
 800a686:	4628      	mov	r0, r5
 800a688:	f000 f89a 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 800a68c:	1e41      	subs	r1, r0, #1
 800a68e:	4648      	mov	r0, r9
 800a690:	f7ff fdb0 	bl	800a1f4 <MULTIPAGE_SelectPage>
 800a694:	b00d      	add	sp, #52	; 0x34
 800a696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a69a <MULTIPAGE_GetFont>:
 800a69a:	b513      	push	{r0, r1, r4, lr}
 800a69c:	4604      	mov	r4, r0
 800a69e:	b140      	cbz	r0, 800a6b2 <MULTIPAGE_GetFont+0x18>
 800a6a0:	f008 f966 	bl	8012970 <GUI_ALLOC_LockH>
 800a6a4:	ab02      	add	r3, sp, #8
 800a6a6:	6c84      	ldr	r4, [r0, #72]	; 0x48
 800a6a8:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a6ac:	4618      	mov	r0, r3
 800a6ae:	f008 f96d 	bl	801298c <GUI_ALLOC_UnlockH>
 800a6b2:	4620      	mov	r0, r4
 800a6b4:	b002      	add	sp, #8
 800a6b6:	bd10      	pop	{r4, pc}

0800a6b8 <MULTIPAGE_SetAlign>:
 800a6b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a6ba:	460d      	mov	r5, r1
 800a6bc:	4604      	mov	r4, r0
 800a6be:	b1d8      	cbz	r0, 800a6f8 <MULTIPAGE_SetAlign+0x40>
 800a6c0:	f008 f956 	bl	8012970 <GUI_ALLOC_LockH>
 800a6c4:	a902      	add	r1, sp, #8
 800a6c6:	64c5      	str	r5, [r0, #76]	; 0x4c
 800a6c8:	9001      	str	r0, [sp, #4]
 800a6ca:	4620      	mov	r0, r4
 800a6cc:	f7ff fb6c 	bl	8009da8 <MULTIPAGE__CalcClientRect>
 800a6d0:	9b01      	ldr	r3, [sp, #4]
 800a6d2:	f9bd 6008 	ldrsh.w	r6, [sp, #8]
 800a6d6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800a6da:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800a6de:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 800a6e2:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800a6e4:	4431      	add	r1, r6
 800a6e6:	442a      	add	r2, r5
 800a6e8:	f001 fc17 	bl	800bf1a <WM_MoveTo>
 800a6ec:	a801      	add	r0, sp, #4
 800a6ee:	f008 f94d 	bl	801298c <GUI_ALLOC_UnlockH>
 800a6f2:	4620      	mov	r0, r4
 800a6f4:	f7ff fc2c 	bl	8009f50 <MULTIPAGE__UpdatePositions>
 800a6f8:	b004      	add	sp, #16
 800a6fa:	bd70      	pop	{r4, r5, r6, pc}

0800a6fc <MULTIPAGE_IsPageEnabled>:
 800a6fc:	b108      	cbz	r0, 800a702 <MULTIPAGE_IsPageEnabled+0x6>
 800a6fe:	f7ff ba78 	b.w	8009bf2 <_GetEnable>
 800a702:	4770      	bx	lr

0800a704 <GUI_DRAW__Draw>:
 800a704:	e92d 43e3 	stmdb	sp!, {r0, r1, r5, r6, r7, r8, r9, lr}
 800a708:	4688      	mov	r8, r1
 800a70a:	4617      	mov	r7, r2
 800a70c:	461e      	mov	r6, r3
 800a70e:	4681      	mov	r9, r0
 800a710:	b170      	cbz	r0, 800a730 <GUI_DRAW__Draw+0x2c>
 800a712:	f008 f92d 	bl	8012970 <GUI_ALLOC_LockH>
 800a716:	4605      	mov	r5, r0
 800a718:	a802      	add	r0, sp, #8
 800a71a:	682b      	ldr	r3, [r5, #0]
 800a71c:	f840 5d04 	str.w	r5, [r0, #-4]!
 800a720:	681d      	ldr	r5, [r3, #0]
 800a722:	f008 f933 	bl	801298c <GUI_ALLOC_UnlockH>
 800a726:	4648      	mov	r0, r9
 800a728:	4641      	mov	r1, r8
 800a72a:	463a      	mov	r2, r7
 800a72c:	4633      	mov	r3, r6
 800a72e:	47a8      	blx	r5
 800a730:	b002      	add	sp, #8
 800a732:	e8bd 83e0 	ldmia.w	sp!, {r5, r6, r7, r8, r9, pc}

0800a736 <GUI_DRAW__GetXSize>:
 800a736:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a738:	4604      	mov	r4, r0
 800a73a:	b160      	cbz	r0, 800a756 <GUI_DRAW__GetXSize+0x20>
 800a73c:	f008 f918 	bl	8012970 <GUI_ALLOC_LockH>
 800a740:	ab02      	add	r3, sp, #8
 800a742:	6802      	ldr	r2, [r0, #0]
 800a744:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a748:	4618      	mov	r0, r3
 800a74a:	6855      	ldr	r5, [r2, #4]
 800a74c:	f008 f91e 	bl	801298c <GUI_ALLOC_UnlockH>
 800a750:	4620      	mov	r0, r4
 800a752:	47a8      	blx	r5
 800a754:	e7ff      	b.n	800a756 <GUI_DRAW__GetXSize+0x20>
 800a756:	b003      	add	sp, #12
 800a758:	bd30      	pop	{r4, r5, pc}

0800a75a <GUI_DRAW__GetYSize>:
 800a75a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a75c:	4604      	mov	r4, r0
 800a75e:	b160      	cbz	r0, 800a77a <GUI_DRAW__GetYSize+0x20>
 800a760:	f008 f906 	bl	8012970 <GUI_ALLOC_LockH>
 800a764:	ab02      	add	r3, sp, #8
 800a766:	6802      	ldr	r2, [r0, #0]
 800a768:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a76c:	4618      	mov	r0, r3
 800a76e:	6895      	ldr	r5, [r2, #8]
 800a770:	f008 f90c 	bl	801298c <GUI_ALLOC_UnlockH>
 800a774:	4620      	mov	r0, r4
 800a776:	47a8      	blx	r5
 800a778:	e7ff      	b.n	800a77a <GUI_DRAW__GetYSize+0x20>
 800a77a:	b003      	add	sp, #12
 800a77c:	bd30      	pop	{r4, r5, pc}

0800a77e <GUI_ARRAY__GethItem>:
 800a77e:	8803      	ldrh	r3, [r0, #0]
 800a780:	4299      	cmp	r1, r3
 800a782:	b513      	push	{r0, r1, r4, lr}
 800a784:	460c      	mov	r4, r1
 800a786:	d20e      	bcs.n	800a7a6 <GUI_ARRAY__GethItem+0x28>
 800a788:	6840      	ldr	r0, [r0, #4]
 800a78a:	b150      	cbz	r0, 800a7a2 <GUI_ARRAY__GethItem+0x24>
 800a78c:	f008 f8f0 	bl	8012970 <GUI_ALLOC_LockH>
 800a790:	ab02      	add	r3, sp, #8
 800a792:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 800a796:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a79a:	4618      	mov	r0, r3
 800a79c:	f008 f8f6 	bl	801298c <GUI_ALLOC_UnlockH>
 800a7a0:	e002      	b.n	800a7a8 <GUI_ARRAY__GethItem+0x2a>
 800a7a2:	4604      	mov	r4, r0
 800a7a4:	e000      	b.n	800a7a8 <GUI_ARRAY__GethItem+0x2a>
 800a7a6:	2400      	movs	r4, #0
 800a7a8:	4620      	mov	r0, r4
 800a7aa:	b002      	add	sp, #8
 800a7ac:	bd10      	pop	{r4, pc}

0800a7ae <GUI_ARRAY__GetpItemLocked>:
 800a7ae:	b508      	push	{r3, lr}
 800a7b0:	f7ff ffe5 	bl	800a77e <GUI_ARRAY__GethItem>
 800a7b4:	b118      	cbz	r0, 800a7be <GUI_ARRAY__GetpItemLocked+0x10>
 800a7b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a7ba:	f008 b8d9 	b.w	8012970 <GUI_ALLOC_LockH>
 800a7be:	bd08      	pop	{r3, pc}

0800a7c0 <GUI_ARRAY_GetNumItems>:
 800a7c0:	b513      	push	{r0, r1, r4, lr}
 800a7c2:	4604      	mov	r4, r0
 800a7c4:	b140      	cbz	r0, 800a7d8 <GUI_ARRAY_GetNumItems+0x18>
 800a7c6:	f008 f8d3 	bl	8012970 <GUI_ALLOC_LockH>
 800a7ca:	ab02      	add	r3, sp, #8
 800a7cc:	8804      	ldrh	r4, [r0, #0]
 800a7ce:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a7d2:	4618      	mov	r0, r3
 800a7d4:	f008 f8da 	bl	801298c <GUI_ALLOC_UnlockH>
 800a7d8:	4620      	mov	r0, r4
 800a7da:	b002      	add	sp, #8
 800a7dc:	bd10      	pop	{r4, pc}

0800a7de <GUI_ARRAY_AddItem>:
 800a7de:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a7e2:	4605      	mov	r5, r0
 800a7e4:	2800      	cmp	r0, #0
 800a7e6:	d03d      	beq.n	800a864 <GUI_ARRAY_AddItem+0x86>
 800a7e8:	b14a      	cbz	r2, 800a7fe <GUI_ARRAY_AddItem+0x20>
 800a7ea:	4608      	mov	r0, r1
 800a7ec:	4611      	mov	r1, r2
 800a7ee:	f008 fb41 	bl	8012e74 <GUI_ALLOC_AllocInit>
 800a7f2:	f1d0 0401 	rsbs	r4, r0, #1
 800a7f6:	4607      	mov	r7, r0
 800a7f8:	bf38      	it	cc
 800a7fa:	2400      	movcc	r4, #0
 800a7fc:	e001      	b.n	800a802 <GUI_ARRAY_AddItem+0x24>
 800a7fe:	4614      	mov	r4, r2
 800a800:	4617      	mov	r7, r2
 800a802:	4628      	mov	r0, r5
 800a804:	f008 f8b4 	bl	8012970 <GUI_ALLOC_LockH>
 800a808:	ae02      	add	r6, sp, #8
 800a80a:	f8b0 8000 	ldrh.w	r8, [r0]
 800a80e:	f846 0d08 	str.w	r0, [r6, #-8]!
 800a812:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800a816:	4668      	mov	r0, sp
 800a818:	f008 f8b8 	bl	801298c <GUI_ALLOC_UnlockH>
 800a81c:	bb24      	cbnz	r4, 800a868 <GUI_ARRAY_AddItem+0x8a>
 800a81e:	f108 0101 	add.w	r1, r8, #1
 800a822:	4648      	mov	r0, r9
 800a824:	0089      	lsls	r1, r1, #2
 800a826:	f006 ff2e 	bl	8011686 <GUI_ALLOC_Realloc>
 800a82a:	4681      	mov	r9, r0
 800a82c:	b918      	cbnz	r0, 800a836 <GUI_ARRAY_AddItem+0x58>
 800a82e:	4638      	mov	r0, r7
 800a830:	f008 f8d8 	bl	80129e4 <GUI_ALLOC_Free>
 800a834:	e018      	b.n	800a868 <GUI_ARRAY_AddItem+0x8a>
 800a836:	f008 f89b 	bl	8012970 <GUI_ALLOC_LockH>
 800a83a:	ab02      	add	r3, sp, #8
 800a83c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a840:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 800a844:	4618      	mov	r0, r3
 800a846:	f008 f8a1 	bl	801298c <GUI_ALLOC_UnlockH>
 800a84a:	4628      	mov	r0, r5
 800a84c:	f008 f890 	bl	8012970 <GUI_ALLOC_LockH>
 800a850:	8803      	ldrh	r3, [r0, #0]
 800a852:	9000      	str	r0, [sp, #0]
 800a854:	3301      	adds	r3, #1
 800a856:	f8c0 9004 	str.w	r9, [r0, #4]
 800a85a:	8003      	strh	r3, [r0, #0]
 800a85c:	4668      	mov	r0, sp
 800a85e:	f008 f895 	bl	801298c <GUI_ALLOC_UnlockH>
 800a862:	e002      	b.n	800a86a <GUI_ARRAY_AddItem+0x8c>
 800a864:	4604      	mov	r4, r0
 800a866:	e000      	b.n	800a86a <GUI_ARRAY_AddItem+0x8c>
 800a868:	2401      	movs	r4, #1
 800a86a:	4620      	mov	r0, r4
 800a86c:	b003      	add	sp, #12
 800a86e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a872 <GUI_ARRAY_Delete>:
 800a872:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a874:	4605      	mov	r5, r0
 800a876:	b318      	cbz	r0, 800a8c0 <GUI_ARRAY_Delete+0x4e>
 800a878:	f008 f87a 	bl	8012970 <GUI_ALLOC_LockH>
 800a87c:	9000      	str	r0, [sp, #0]
 800a87e:	6840      	ldr	r0, [r0, #4]
 800a880:	b1c0      	cbz	r0, 800a8b4 <GUI_ARRAY_Delete+0x42>
 800a882:	f008 f875 	bl	8012970 <GUI_ALLOC_LockH>
 800a886:	2400      	movs	r4, #0
 800a888:	9001      	str	r0, [sp, #4]
 800a88a:	9b00      	ldr	r3, [sp, #0]
 800a88c:	881b      	ldrh	r3, [r3, #0]
 800a88e:	429c      	cmp	r4, r3
 800a890:	da06      	bge.n	800a8a0 <GUI_ARRAY_Delete+0x2e>
 800a892:	9801      	ldr	r0, [sp, #4]
 800a894:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800a898:	f008 fac2 	bl	8012e20 <GUI_ALLOC_FreePtr>
 800a89c:	3401      	adds	r4, #1
 800a89e:	e7f4      	b.n	800a88a <GUI_ARRAY_Delete+0x18>
 800a8a0:	a801      	add	r0, sp, #4
 800a8a2:	f008 f873 	bl	801298c <GUI_ALLOC_UnlockH>
 800a8a6:	9800      	ldr	r0, [sp, #0]
 800a8a8:	3004      	adds	r0, #4
 800a8aa:	f008 fab9 	bl	8012e20 <GUI_ALLOC_FreePtr>
 800a8ae:	9b00      	ldr	r3, [sp, #0]
 800a8b0:	2200      	movs	r2, #0
 800a8b2:	801a      	strh	r2, [r3, #0]
 800a8b4:	4668      	mov	r0, sp
 800a8b6:	f008 f869 	bl	801298c <GUI_ALLOC_UnlockH>
 800a8ba:	4628      	mov	r0, r5
 800a8bc:	f008 f892 	bl	80129e4 <GUI_ALLOC_Free>
 800a8c0:	b003      	add	sp, #12
 800a8c2:	bd30      	pop	{r4, r5, pc}

0800a8c4 <GUI_ARRAY_GetpItemLocked>:
 800a8c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a8c6:	460e      	mov	r6, r1
 800a8c8:	4605      	mov	r5, r0
 800a8ca:	b158      	cbz	r0, 800a8e4 <GUI_ARRAY_GetpItemLocked+0x20>
 800a8cc:	f008 f850 	bl	8012970 <GUI_ALLOC_LockH>
 800a8d0:	ac02      	add	r4, sp, #8
 800a8d2:	4631      	mov	r1, r6
 800a8d4:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a8d8:	f7ff ff69 	bl	800a7ae <GUI_ARRAY__GetpItemLocked>
 800a8dc:	4605      	mov	r5, r0
 800a8de:	4620      	mov	r0, r4
 800a8e0:	f008 f854 	bl	801298c <GUI_ALLOC_UnlockH>
 800a8e4:	4628      	mov	r0, r5
 800a8e6:	b002      	add	sp, #8
 800a8e8:	bd70      	pop	{r4, r5, r6, pc}

0800a8ea <GUI_ARRAY_Create>:
 800a8ea:	2008      	movs	r0, #8
 800a8ec:	f008 baad 	b.w	8012e4a <GUI_ALLOC_AllocZero>

0800a8f0 <EDIT_CreateIndirect>:
 800a8f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a8f2:	b087      	sub	sp, #28
 800a8f4:	4604      	mov	r4, r0
 800a8f6:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 800a8fa:	9100      	str	r1, [sp, #0]
 800a8fc:	2100      	movs	r1, #0
 800a8fe:	6965      	ldr	r5, [r4, #20]
 800a900:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 800a904:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 800a908:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 800a90c:	9101      	str	r1, [sp, #4]
 800a90e:	8a61      	ldrh	r1, [r4, #18]
 800a910:	9102      	str	r1, [sp, #8]
 800a912:	9504      	str	r5, [sp, #16]
 800a914:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800a918:	69a5      	ldr	r5, [r4, #24]
 800a91a:	9103      	str	r1, [sp, #12]
 800a91c:	9505      	str	r5, [sp, #20]
 800a91e:	4410      	add	r0, r2
 800a920:	eb0e 0103 	add.w	r1, lr, r3
 800a924:	463a      	mov	r2, r7
 800a926:	4633      	mov	r3, r6
 800a928:	f000 fa12 	bl	800ad50 <EDIT_CreateUser>
 800a92c:	4605      	mov	r5, r0
 800a92e:	b110      	cbz	r0, 800a936 <EDIT_CreateIndirect+0x46>
 800a930:	8a61      	ldrh	r1, [r4, #18]
 800a932:	f000 fcaa 	bl	800b28a <EDIT_SetTextAlign>
 800a936:	4628      	mov	r0, r5
 800a938:	b007      	add	sp, #28
 800a93a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a93c <_Paint>:
 800a93c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a940:	b08d      	sub	sp, #52	; 0x34
 800a942:	2300      	movs	r3, #0
 800a944:	4605      	mov	r5, r0
 800a946:	460e      	mov	r6, r1
 800a948:	9300      	str	r3, [sp, #0]
 800a94a:	f000 fee1 	bl	800b710 <WM__IsEnabled>
 800a94e:	4604      	mov	r4, r0
 800a950:	4628      	mov	r0, r5
 800a952:	f008 f80d 	bl	8012970 <GUI_ALLOC_LockH>
 800a956:	9001      	str	r0, [sp, #4]
 800a958:	b12e      	cbz	r6, 800a966 <_Paint+0x2a>
 800a95a:	f890 2056 	ldrb.w	r2, [r0, #86]	; 0x56
 800a95e:	f042 0204 	orr.w	r2, r2, #4
 800a962:	f880 2056 	strb.w	r2, [r0, #86]	; 0x56
 800a966:	f104 021e 	add.w	r2, r4, #30
 800a96a:	f10d 0810 	add.w	r8, sp, #16
 800a96e:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800a972:	f005 fc19 	bl	80101a8 <LCD_SetBkColor>
 800a976:	9b01      	ldr	r3, [sp, #4]
 800a978:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800a97c:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a97e:	f005 fc1b 	bl	80101b8 <LCD_SetColor>
 800a982:	9c01      	ldr	r4, [sp, #4]
 800a984:	2300      	movs	r3, #0
 800a986:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 800a988:	9302      	str	r3, [sp, #8]
 800a98a:	f006 fdd3 	bl	8011534 <GUI_SetFont>
 800a98e:	4620      	mov	r0, r4
 800a990:	4641      	mov	r1, r8
 800a992:	f7fe fb6c 	bl	800906e <WIDGET__GetInsideRect>
 800a996:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a998:	b110      	cbz	r0, 800a9a0 <_Paint+0x64>
 800a99a:	f007 ffe9 	bl	8012970 <GUI_ALLOC_LockH>
 800a99e:	9002      	str	r0, [sp, #8]
 800a9a0:	e898 0003 	ldmia.w	r8, {r0, r1}
 800a9a4:	f10d 0a18 	add.w	sl, sp, #24
 800a9a8:	e88a 0003 	stmia.w	sl, {r0, r1}
 800a9ac:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
 800a9b0:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800a9b4:	9802      	ldr	r0, [sp, #8]
 800a9b6:	441a      	add	r2, r3
 800a9b8:	3201      	adds	r2, #1
 800a9ba:	f8ad 2018 	strh.w	r2, [sp, #24]
 800a9be:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800a9c2:	3a01      	subs	r2, #1
 800a9c4:	1ad3      	subs	r3, r2, r3
 800a9c6:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
 800a9ca:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a9ce:	4651      	mov	r1, sl
 800a9d0:	465a      	mov	r2, fp
 800a9d2:	6e23      	ldr	r3, [r4, #96]	; 0x60
 800a9d4:	f005 fdd8 	bl	8010588 <GUI__CalcTextRect>
 800a9d8:	8e65      	ldrh	r5, [r4, #50]	; 0x32
 800a9da:	f015 0501 	ands.w	r5, r5, #1
 800a9de:	d057      	beq.n	800aa90 <_Paint+0x154>
 800a9e0:	f894 5055 	ldrb.w	r5, [r4, #85]	; 0x55
 800a9e4:	9802      	ldr	r0, [sp, #8]
 800a9e6:	2d00      	cmp	r5, #0
 800a9e8:	bf08      	it	eq
 800a9ea:	2501      	moveq	r5, #1
 800a9ec:	f005 fd5a 	bl	80104a4 <GUI__GetNumChars>
 800a9f0:	4681      	mov	r9, r0
 800a9f2:	9802      	ldr	r0, [sp, #8]
 800a9f4:	2800      	cmp	r0, #0
 800a9f6:	d04b      	beq.n	800aa90 <_Paint+0x154>
 800a9f8:	2300      	movs	r3, #0
 800a9fa:	9303      	str	r3, [sp, #12]
 800a9fc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800aa00:	b913      	cbnz	r3, 800aa08 <_Paint+0xcc>
 800aa02:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800aa04:	b323      	cbz	r3, 800aa50 <_Paint+0x114>
 800aa06:	b31e      	cbz	r6, 800aa50 <_Paint+0x114>
 800aa08:	6ce7      	ldr	r7, [r4, #76]	; 0x4c
 800aa0a:	454f      	cmp	r7, r9
 800aa0c:	da2a      	bge.n	800aa64 <_Paint+0x128>
 800aa0e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800aa10:	b1ab      	cbz	r3, 800aa3e <_Paint+0x102>
 800aa12:	b1a6      	cbz	r6, 800aa3e <_Paint+0x102>
 800aa14:	2500      	movs	r5, #0
 800aa16:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 800aa18:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800aa1a:	4413      	add	r3, r2
 800aa1c:	429f      	cmp	r7, r3
 800aa1e:	da0a      	bge.n	800aa36 <_Paint+0xfa>
 800aa20:	4639      	mov	r1, r7
 800aa22:	464a      	mov	r2, r9
 800aa24:	2300      	movs	r3, #0
 800aa26:	9802      	ldr	r0, [sp, #8]
 800aa28:	f005 fda6 	bl	8010578 <GUI__GetCursorCharacter>
 800aa2c:	f007 fe8c 	bl	8012748 <GUI_GetCharDistX>
 800aa30:	3701      	adds	r7, #1
 800aa32:	4405      	add	r5, r0
 800aa34:	e7ef      	b.n	800aa16 <_Paint+0xda>
 800aa36:	2d00      	cmp	r5, #0
 800aa38:	bf08      	it	eq
 800aa3a:	2501      	moveq	r5, #1
 800aa3c:	e012      	b.n	800aa64 <_Paint+0x128>
 800aa3e:	4639      	mov	r1, r7
 800aa40:	464a      	mov	r2, r9
 800aa42:	ab03      	add	r3, sp, #12
 800aa44:	f005 fd98 	bl	8010578 <GUI__GetCursorCharacter>
 800aa48:	f007 fe7e 	bl	8012748 <GUI_GetCharDistX>
 800aa4c:	4605      	mov	r5, r0
 800aa4e:	e009      	b.n	800aa64 <_Paint+0x128>
 800aa50:	4b4c      	ldr	r3, [pc, #304]	; (800ab84 <_Paint+0x248>)
 800aa52:	681b      	ldr	r3, [r3, #0]
 800aa54:	2b01      	cmp	r3, #1
 800aa56:	d105      	bne.n	800aa64 <_Paint+0x128>
 800aa58:	4b4b      	ldr	r3, [pc, #300]	; (800ab88 <_Paint+0x24c>)
 800aa5a:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 800aa5c:	681b      	ldr	r3, [r3, #0]
 800aa5e:	4649      	mov	r1, r9
 800aa60:	4798      	blx	r3
 800aa62:	9003      	str	r0, [sp, #12]
 800aa64:	e89b 0003 	ldmia.w	fp, {r0, r1}
 800aa68:	ab08      	add	r3, sp, #32
 800aa6a:	e883 0003 	stmia.w	r3, {r0, r1}
 800aa6e:	9b03      	ldr	r3, [sp, #12]
 800aa70:	b123      	cbz	r3, 800aa7c <_Paint+0x140>
 800aa72:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800aa76:	1b5b      	subs	r3, r3, r5
 800aa78:	f8ad 3020 	strh.w	r3, [sp, #32]
 800aa7c:	9802      	ldr	r0, [sp, #8]
 800aa7e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800aa80:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 800aa84:	464a      	mov	r2, r9
 800aa86:	f005 fd63 	bl	8010550 <GUI__GetCursorPosX>
 800aa8a:	4438      	add	r0, r7
 800aa8c:	f8ad 0020 	strh.w	r0, [sp, #32]
 800aa90:	9b02      	ldr	r3, [sp, #8]
 800aa92:	b113      	cbz	r3, 800aa9a <_Paint+0x15e>
 800aa94:	a802      	add	r0, sp, #8
 800aa96:	f007 ff79 	bl	801298c <GUI_ALLOC_UnlockH>
 800aa9a:	9b01      	ldr	r3, [sp, #4]
 800aa9c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800aa9e:	b110      	cbz	r0, 800aaa6 <_Paint+0x16a>
 800aaa0:	f007 ff66 	bl	8012970 <GUI_ALLOC_LockH>
 800aaa4:	9000      	str	r0, [sp, #0]
 800aaa6:	2000      	movs	r0, #0
 800aaa8:	f002 faec 	bl	800d084 <WM__InitIVRSearch>
 800aaac:	b940      	cbnz	r0, 800aac0 <_Paint+0x184>
 800aaae:	2e00      	cmp	r6, #0
 800aab0:	d05c      	beq.n	800ab6c <_Paint+0x230>
 800aab2:	9b01      	ldr	r3, [sp, #4]
 800aab4:	2100      	movs	r1, #0
 800aab6:	f8d3 0084 	ldr.w	r0, [r3, #132]	; 0x84
 800aaba:	f000 fedb 	bl	800b874 <WM_RestartTimer>
 800aabe:	e055      	b.n	800ab6c <_Paint+0x230>
 800aac0:	4640      	mov	r0, r8
 800aac2:	f000 ff15 	bl	800b8f0 <WM_SetUserClipRect>
 800aac6:	b12e      	cbz	r6, 800aad4 <_Paint+0x198>
 800aac8:	9800      	ldr	r0, [sp, #0]
 800aaca:	4641      	mov	r1, r8
 800aacc:	4652      	mov	r2, sl
 800aace:	465b      	mov	r3, fp
 800aad0:	f008 fa92 	bl	8012ff8 <WIDGET__FillStringInRect>
 800aad4:	9b01      	ldr	r3, [sp, #4]
 800aad6:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 800aad8:	07d0      	lsls	r0, r2, #31
 800aada:	d53d      	bpl.n	800ab58 <_Paint+0x21c>
 800aadc:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 800aae0:	0719      	lsls	r1, r3, #28
 800aae2:	d52f      	bpl.n	800ab44 <_Paint+0x208>
 800aae4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800aae8:	3b01      	subs	r3, #1
 800aaea:	442b      	add	r3, r5
 800aaec:	2000      	movs	r0, #0
 800aaee:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800aaf2:	f000 fefd 	bl	800b8f0 <WM_SetUserClipRect>
 800aaf6:	a808      	add	r0, sp, #32
 800aaf8:	f000 fefa 	bl	800b8f0 <WM_SetUserClipRect>
 800aafc:	9b01      	ldr	r3, [sp, #4]
 800aafe:	f893 2056 	ldrb.w	r2, [r3, #86]	; 0x56
 800ab02:	0752      	lsls	r2, r2, #29
 800ab04:	d507      	bpl.n	800ab16 <_Paint+0x1da>
 800ab06:	6f58      	ldr	r0, [r3, #116]	; 0x74
 800ab08:	f006 fd42 	bl	8011590 <GUI_SetColor>
 800ab0c:	9b01      	ldr	r3, [sp, #4]
 800ab0e:	f8d3 0080 	ldr.w	r0, [r3, #128]	; 0x80
 800ab12:	f006 fd3b 	bl	801158c <GUI_SetBkColor>
 800ab16:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 800ab1a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 800ab1e:	9800      	ldr	r0, [sp, #0]
 800ab20:	f007 f940 	bl	8011da4 <GUI_DispStringAt>
 800ab24:	2004      	movs	r0, #4
 800ab26:	f006 fd0f 	bl	8011548 <GUI_SetDrawMode>
 800ab2a:	4b18      	ldr	r3, [pc, #96]	; (800ab8c <_Paint+0x250>)
 800ab2c:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 800ab30:	681b      	ldr	r3, [r3, #0]
 800ab32:	f9b3 0022 	ldrsh.w	r0, [r3, #34]	; 0x22
 800ab36:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800ab3a:	1942      	adds	r2, r0, r5
 800ab3c:	3a01      	subs	r2, #1
 800ab3e:	f006 ffa7 	bl	8011a90 <GUI_FillRect>
 800ab42:	e009      	b.n	800ab58 <_Paint+0x21c>
 800ab44:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800ab48:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 800ab4c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800ab50:	1942      	adds	r2, r0, r5
 800ab52:	3a01      	subs	r2, #1
 800ab54:	f006 ff3c 	bl	80119d0 <GUI_InvertRect>
 800ab58:	2000      	movs	r0, #0
 800ab5a:	f000 fec9 	bl	800b8f0 <WM_SetUserClipRect>
 800ab5e:	b116      	cbz	r6, 800ab66 <_Paint+0x22a>
 800ab60:	9801      	ldr	r0, [sp, #4]
 800ab62:	f7fe fbd2 	bl	800930a <WIDGET__EFFECT_DrawDown>
 800ab66:	f002 f9cb 	bl	800cf00 <WM__GetNextIVR>
 800ab6a:	e79f      	b.n	800aaac <_Paint+0x170>
 800ab6c:	a801      	add	r0, sp, #4
 800ab6e:	f007 ff0d 	bl	801298c <GUI_ALLOC_UnlockH>
 800ab72:	9b00      	ldr	r3, [sp, #0]
 800ab74:	b113      	cbz	r3, 800ab7c <_Paint+0x240>
 800ab76:	4668      	mov	r0, sp
 800ab78:	f007 ff08 	bl	801298c <GUI_ALLOC_UnlockH>
 800ab7c:	b00d      	add	sp, #52	; 0x34
 800ab7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab82:	bf00      	nop
 800ab84:	20019c50 	.word	0x20019c50
 800ab88:	20019c64 	.word	0x20019c64
 800ab8c:	2000016c 	.word	0x2000016c

0800ab90 <_IncrementBuffer>:
 800ab90:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ab94:	460e      	mov	r6, r1
 800ab96:	4680      	mov	r8, r0
 800ab98:	f007 feea 	bl	8012970 <GUI_ALLOC_LockH>
 800ab9c:	ac02      	add	r4, sp, #8
 800ab9e:	8f47      	ldrh	r7, [r0, #58]	; 0x3a
 800aba0:	6b45      	ldr	r5, [r0, #52]	; 0x34
 800aba2:	f844 0d08 	str.w	r0, [r4, #-8]!
 800aba6:	4437      	add	r7, r6
 800aba8:	4668      	mov	r0, sp
 800abaa:	f007 feef 	bl	801298c <GUI_ALLOC_UnlockH>
 800abae:	4628      	mov	r0, r5
 800abb0:	4639      	mov	r1, r7
 800abb2:	f006 fd68 	bl	8011686 <GUI_ALLOC_Realloc>
 800abb6:	4606      	mov	r6, r0
 800abb8:	b1a0      	cbz	r0, 800abe4 <_IncrementBuffer+0x54>
 800abba:	b945      	cbnz	r5, 800abce <_IncrementBuffer+0x3e>
 800abbc:	f007 fed8 	bl	8012970 <GUI_ALLOC_LockH>
 800abc0:	4602      	mov	r2, r0
 800abc2:	a802      	add	r0, sp, #8
 800abc4:	f840 2d04 	str.w	r2, [r0, #-4]!
 800abc8:	7015      	strb	r5, [r2, #0]
 800abca:	f007 fedf 	bl	801298c <GUI_ALLOC_UnlockH>
 800abce:	4640      	mov	r0, r8
 800abd0:	f007 fece 	bl	8012970 <GUI_ALLOC_LockH>
 800abd4:	9000      	str	r0, [sp, #0]
 800abd6:	8747      	strh	r7, [r0, #58]	; 0x3a
 800abd8:	6346      	str	r6, [r0, #52]	; 0x34
 800abda:	4668      	mov	r0, sp
 800abdc:	f007 fed6 	bl	801298c <GUI_ALLOC_UnlockH>
 800abe0:	2001      	movs	r0, #1
 800abe2:	e7ff      	b.n	800abe4 <_IncrementBuffer+0x54>
 800abe4:	b002      	add	sp, #8
 800abe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800abea <_ChangeCharacter>:
 800abea:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800abee:	460d      	mov	r5, r1
 800abf0:	4606      	mov	r6, r0
 800abf2:	2100      	movs	r1, #0
 800abf4:	4628      	mov	r0, r5
 800abf6:	4690      	mov	r8, r2
 800abf8:	461f      	mov	r7, r3
 800abfa:	f8ad 1004 	strh.w	r1, [sp, #4]
 800abfe:	f88d 1006 	strb.w	r1, [sp, #6]
 800ac02:	f005 fed1 	bl	80109a8 <GUI_UC__CalcSizeOfChar>
 800ac06:	4445      	add	r5, r8
 800ac08:	b2ad      	uxth	r5, r5
 800ac0a:	4604      	mov	r4, r0
 800ac0c:	4628      	mov	r0, r5
 800ac0e:	f005 fecb 	bl	80109a8 <GUI_UC__CalcSizeOfChar>
 800ac12:	4284      	cmp	r4, r0
 800ac14:	d10c      	bne.n	800ac30 <_ChangeCharacter+0x46>
 800ac16:	4629      	mov	r1, r5
 800ac18:	a801      	add	r0, sp, #4
 800ac1a:	f005 febd 	bl	8010998 <GUI_UC_Encode>
 800ac1e:	a901      	add	r1, sp, #4
 800ac20:	4638      	mov	r0, r7
 800ac22:	4622      	mov	r2, r4
 800ac24:	f00f fb5d 	bl	801a2e2 <memcpy>
 800ac28:	4630      	mov	r0, r6
 800ac2a:	2105      	movs	r1, #5
 800ac2c:	f001 f899 	bl	800bd62 <WM_NotifyParent>
 800ac30:	b002      	add	sp, #8
 800ac32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac36 <_IsSpaceInBuffer>:
 800ac36:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ac38:	4606      	mov	r6, r0
 800ac3a:	460f      	mov	r7, r1
 800ac3c:	f007 fe98 	bl	8012970 <GUI_ALLOC_LockH>
 800ac40:	9000      	str	r0, [sp, #0]
 800ac42:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ac44:	b158      	cbz	r0, 800ac5e <_IsSpaceInBuffer+0x28>
 800ac46:	f007 fe93 	bl	8012970 <GUI_ALLOC_LockH>
 800ac4a:	ac02      	add	r4, sp, #8
 800ac4c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ac50:	f7f5 fade 	bl	8000210 <strlen>
 800ac54:	4605      	mov	r5, r0
 800ac56:	4620      	mov	r0, r4
 800ac58:	f007 fe98 	bl	801298c <GUI_ALLOC_UnlockH>
 800ac5c:	e000      	b.n	800ac60 <_IsSpaceInBuffer+0x2a>
 800ac5e:	4605      	mov	r5, r0
 800ac60:	a802      	add	r0, sp, #8
 800ac62:	197c      	adds	r4, r7, r5
 800ac64:	f850 2d08 	ldr.w	r2, [r0, #-8]!
 800ac68:	8f52      	ldrh	r2, [r2, #58]	; 0x3a
 800ac6a:	3401      	adds	r4, #1
 800ac6c:	1aa4      	subs	r4, r4, r2
 800ac6e:	4668      	mov	r0, sp
 800ac70:	f007 fe8c 	bl	801298c <GUI_ALLOC_UnlockH>
 800ac74:	2c00      	cmp	r4, #0
 800ac76:	dd08      	ble.n	800ac8a <_IsSpaceInBuffer+0x54>
 800ac78:	4630      	mov	r0, r6
 800ac7a:	f104 0110 	add.w	r1, r4, #16
 800ac7e:	f7ff ff87 	bl	800ab90 <_IncrementBuffer>
 800ac82:	3000      	adds	r0, #0
 800ac84:	bf18      	it	ne
 800ac86:	2001      	movne	r0, #1
 800ac88:	e000      	b.n	800ac8c <_IsSpaceInBuffer+0x56>
 800ac8a:	2001      	movs	r0, #1
 800ac8c:	b003      	add	sp, #12
 800ac8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ac90 <_DeleteChar>:
 800ac90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ac92:	4607      	mov	r7, r0
 800ac94:	f007 fe6c 	bl	8012970 <GUI_ALLOC_LockH>
 800ac98:	4602      	mov	r2, r0
 800ac9a:	a802      	add	r0, sp, #8
 800ac9c:	6b54      	ldr	r4, [r2, #52]	; 0x34
 800ac9e:	f840 2d08 	str.w	r2, [r0, #-8]!
 800aca2:	4668      	mov	r0, sp
 800aca4:	6cd6      	ldr	r6, [r2, #76]	; 0x4c
 800aca6:	f007 fe71 	bl	801298c <GUI_ALLOC_UnlockH>
 800acaa:	b314      	cbz	r4, 800acf2 <_DeleteChar+0x62>
 800acac:	4620      	mov	r0, r4
 800acae:	f007 fe5f 	bl	8012970 <GUI_ALLOC_LockH>
 800acb2:	ac02      	add	r4, sp, #8
 800acb4:	4631      	mov	r1, r6
 800acb6:	4605      	mov	r5, r0
 800acb8:	f844 0d04 	str.w	r0, [r4, #-4]!
 800acbc:	f005 fe90 	bl	80109e0 <GUI_UC__NumChars2NumBytes>
 800acc0:	4606      	mov	r6, r0
 800acc2:	4628      	mov	r0, r5
 800acc4:	f7f5 faa4 	bl	8000210 <strlen>
 800acc8:	4286      	cmp	r6, r0
 800acca:	d20f      	bcs.n	800acec <_DeleteChar+0x5c>
 800accc:	4435      	add	r5, r6
 800acce:	4628      	mov	r0, r5
 800acd0:	f005 fe52 	bl	8010978 <GUI_UC_GetCharSize>
 800acd4:	1829      	adds	r1, r5, r0
 800acd6:	4628      	mov	r0, r5
 800acd8:	f00f fb50 	bl	801a37c <strcpy>
 800acdc:	4620      	mov	r0, r4
 800acde:	f007 fe55 	bl	801298c <GUI_ALLOC_UnlockH>
 800ace2:	4638      	mov	r0, r7
 800ace4:	2105      	movs	r1, #5
 800ace6:	f001 f83c 	bl	800bd62 <WM_NotifyParent>
 800acea:	e002      	b.n	800acf2 <_DeleteChar+0x62>
 800acec:	4620      	mov	r0, r4
 800acee:	f007 fe4d 	bl	801298c <GUI_ALLOC_UnlockH>
 800acf2:	b003      	add	sp, #12
 800acf4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800acf6 <EDIT__SetCursorPos>:
 800acf6:	b513      	push	{r0, r1, r4, lr}
 800acf8:	460c      	mov	r4, r1
 800acfa:	f007 fe39 	bl	8012970 <GUI_ALLOC_LockH>
 800acfe:	9000      	str	r0, [sp, #0]
 800ad00:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ad02:	b1f8      	cbz	r0, 800ad44 <EDIT__SetCursorPos+0x4e>
 800ad04:	f007 fe34 	bl	8012970 <GUI_ALLOC_LockH>
 800ad08:	9001      	str	r0, [sp, #4]
 800ad0a:	f005 fbcb 	bl	80104a4 <GUI__GetNumChars>
 800ad0e:	9b00      	ldr	r3, [sp, #0]
 800ad10:	f9b3 1038 	ldrsh.w	r1, [r3, #56]	; 0x38
 800ad14:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800ad18:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 800ad1c:	2a00      	cmp	r2, #0
 800ad1e:	bf0c      	ite	eq
 800ad20:	460a      	moveq	r2, r1
 800ad22:	1e4a      	subne	r2, r1, #1
 800ad24:	4294      	cmp	r4, r2
 800ad26:	bfa8      	it	ge
 800ad28:	4614      	movge	r4, r2
 800ad2a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800ad2c:	4284      	cmp	r4, r0
 800ad2e:	bfb8      	it	lt
 800ad30:	4620      	movlt	r0, r4
 800ad32:	4282      	cmp	r2, r0
 800ad34:	f04f 0200 	mov.w	r2, #0
 800ad38:	bf18      	it	ne
 800ad3a:	64d8      	strne	r0, [r3, #76]	; 0x4c
 800ad3c:	651a      	str	r2, [r3, #80]	; 0x50
 800ad3e:	a801      	add	r0, sp, #4
 800ad40:	f007 fe24 	bl	801298c <GUI_ALLOC_UnlockH>
 800ad44:	4668      	mov	r0, sp
 800ad46:	f007 fe21 	bl	801298c <GUI_ALLOC_UnlockH>
 800ad4a:	b002      	add	sp, #8
 800ad4c:	bd10      	pop	{r4, pc}
	...

0800ad50 <EDIT_CreateUser>:
 800ad50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad54:	b086      	sub	sp, #24
 800ad56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ad58:	9400      	str	r4, [sp, #0]
 800ad5a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ad5c:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 800ad60:	f444 5480 	orr.w	r4, r4, #4096	; 0x1000
 800ad64:	9401      	str	r4, [sp, #4]
 800ad66:	4c21      	ldr	r4, [pc, #132]	; (800adec <EDIT_CreateUser+0x9c>)
 800ad68:	9402      	str	r4, [sp, #8]
 800ad6a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800ad6c:	3460      	adds	r4, #96	; 0x60
 800ad6e:	9403      	str	r4, [sp, #12]
 800ad70:	f001 ff8c 	bl	800cc8c <WM_CreateWindowAsChild>
 800ad74:	4607      	mov	r7, r0
 800ad76:	2800      	cmp	r0, #0
 800ad78:	d034      	beq.n	800ade4 <EDIT_CreateUser+0x94>
 800ad7a:	f007 fdf9 	bl	8012970 <GUI_ALLOC_LockH>
 800ad7e:	4d1c      	ldr	r5, [pc, #112]	; (800adf0 <EDIT_CreateUser+0xa0>)
 800ad80:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800ad82:	9005      	str	r0, [sp, #20]
 800ad84:	2210      	movs	r2, #16
 800ad86:	f7fe f9d1 	bl	800912c <WIDGET__Init>
 800ad8a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ad8c:	9e05      	ldr	r6, [sp, #20]
 800ad8e:	f106 0460 	add.w	r4, r6, #96	; 0x60
 800ad92:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ad94:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ad96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ad98:	682b      	ldr	r3, [r5, #0]
 800ad9a:	6023      	str	r3, [r4, #0]
 800ad9c:	2301      	movs	r3, #1
 800ad9e:	f886 3055 	strb.w	r3, [r6, #85]	; 0x55
 800ada2:	f118 0301 	adds.w	r3, r8, #1
 800ada6:	bf18      	it	ne
 800ada8:	2301      	movne	r3, #1
 800adaa:	f1b8 0f00 	cmp.w	r8, #0
 800adae:	bfcc      	ite	gt
 800adb0:	fa1f f888 	uxthgt.w	r8, r8
 800adb4:	f04f 0808 	movle.w	r8, #8
 800adb8:	f886 3088 	strb.w	r3, [r6, #136]	; 0x88
 800adbc:	2300      	movs	r3, #0
 800adbe:	8773      	strh	r3, [r6, #58]	; 0x3a
 800adc0:	6373      	str	r3, [r6, #52]	; 0x34
 800adc2:	f8a6 8038 	strh.w	r8, [r6, #56]	; 0x38
 800adc6:	a805      	add	r0, sp, #20
 800adc8:	f007 fde0 	bl	801298c <GUI_ALLOC_UnlockH>
 800adcc:	fa0f f188 	sxth.w	r1, r8
 800add0:	4638      	mov	r0, r7
 800add2:	3101      	adds	r1, #1
 800add4:	f7ff fedc 	bl	800ab90 <_IncrementBuffer>
 800add8:	4604      	mov	r4, r0
 800adda:	b918      	cbnz	r0, 800ade4 <EDIT_CreateUser+0x94>
 800addc:	4638      	mov	r0, r7
 800adde:	f001 ffff 	bl	800cde0 <WM_DeleteWindow>
 800ade2:	4627      	mov	r7, r4
 800ade4:	4638      	mov	r0, r7
 800ade6:	b006      	add	sp, #24
 800ade8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800adec:	0800b091 	.word	0x0800b091
 800adf0:	200000d8 	.word	0x200000d8

0800adf4 <EDIT_SetCursorAtPixel>:
 800adf4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800adf8:	460f      	mov	r7, r1
 800adfa:	4604      	mov	r4, r0
 800adfc:	2800      	cmp	r0, #0
 800adfe:	d04f      	beq.n	800aea0 <EDIT_SetCursorAtPixel+0xac>
 800ae00:	f007 fdb6 	bl	8012970 <GUI_ALLOC_LockH>
 800ae04:	9001      	str	r0, [sp, #4]
 800ae06:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ae08:	2800      	cmp	r0, #0
 800ae0a:	d046      	beq.n	800ae9a <EDIT_SetCursorAtPixel+0xa6>
 800ae0c:	f007 fdb0 	bl	8012970 <GUI_ALLOC_LockH>
 800ae10:	9b01      	ldr	r3, [sp, #4]
 800ae12:	9000      	str	r0, [sp, #0]
 800ae14:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800ae16:	f006 fb8d 	bl	8011534 <GUI_SetFont>
 800ae1a:	4680      	mov	r8, r0
 800ae1c:	4620      	mov	r0, r4
 800ae1e:	f001 f8d7 	bl	800bfd0 <WM_GetWindowSizeX>
 800ae22:	4605      	mov	r5, r0
 800ae24:	9800      	ldr	r0, [sp, #0]
 800ae26:	f006 fe0f 	bl	8011a48 <GUI_GetStringDistX>
 800ae2a:	9b01      	ldr	r3, [sp, #4]
 800ae2c:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800ae2e:	f002 0203 	and.w	r2, r2, #3
 800ae32:	2a01      	cmp	r2, #1
 800ae34:	4606      	mov	r6, r0
 800ae36:	d007      	beq.n	800ae48 <EDIT_SetCursorAtPixel+0x54>
 800ae38:	2a02      	cmp	r2, #2
 800ae3a:	d109      	bne.n	800ae50 <EDIT_SetCursorAtPixel+0x5c>
 800ae3c:	1a2d      	subs	r5, r5, r0
 800ae3e:	3501      	adds	r5, #1
 800ae40:	fb95 f5f2 	sdiv	r5, r5, r2
 800ae44:	1b7d      	subs	r5, r7, r5
 800ae46:	e009      	b.n	800ae5c <EDIT_SetCursorAtPixel+0x68>
 800ae48:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ae4a:	1b45      	subs	r5, r0, r5
 800ae4c:	43db      	mvns	r3, r3
 800ae4e:	e003      	b.n	800ae58 <EDIT_SetCursorAtPixel+0x64>
 800ae50:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800ae52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae54:	681b      	ldr	r3, [r3, #0]
 800ae56:	43ed      	mvns	r5, r5
 800ae58:	1aed      	subs	r5, r5, r3
 800ae5a:	443d      	add	r5, r7
 800ae5c:	9800      	ldr	r0, [sp, #0]
 800ae5e:	f005 fb21 	bl	80104a4 <GUI__GetNumChars>
 800ae62:	2d00      	cmp	r5, #0
 800ae64:	4602      	mov	r2, r0
 800ae66:	da02      	bge.n	800ae6e <EDIT_SetCursorAtPixel+0x7a>
 800ae68:	4620      	mov	r0, r4
 800ae6a:	2100      	movs	r1, #0
 800ae6c:	e00a      	b.n	800ae84 <EDIT_SetCursorAtPixel+0x90>
 800ae6e:	42b5      	cmp	r5, r6
 800ae70:	dd02      	ble.n	800ae78 <EDIT_SetCursorAtPixel+0x84>
 800ae72:	4620      	mov	r0, r4
 800ae74:	4611      	mov	r1, r2
 800ae76:	e005      	b.n	800ae84 <EDIT_SetCursorAtPixel+0x90>
 800ae78:	4629      	mov	r1, r5
 800ae7a:	9800      	ldr	r0, [sp, #0]
 800ae7c:	f005 fb72 	bl	8010564 <GUI__GetCursorPosChar>
 800ae80:	4601      	mov	r1, r0
 800ae82:	4620      	mov	r0, r4
 800ae84:	f7ff ff37 	bl	800acf6 <EDIT__SetCursorPos>
 800ae88:	4668      	mov	r0, sp
 800ae8a:	f007 fd7f 	bl	801298c <GUI_ALLOC_UnlockH>
 800ae8e:	4640      	mov	r0, r8
 800ae90:	f006 fb50 	bl	8011534 <GUI_SetFont>
 800ae94:	4620      	mov	r0, r4
 800ae96:	f001 feb8 	bl	800cc0a <WM_InvalidateWindow>
 800ae9a:	a801      	add	r0, sp, #4
 800ae9c:	f007 fd76 	bl	801298c <GUI_ALLOC_UnlockH>
 800aea0:	b002      	add	sp, #8
 800aea2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aea6 <EDIT_AddKey>:
 800aea6:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800aeaa:	460d      	mov	r5, r1
 800aeac:	4604      	mov	r4, r0
 800aeae:	2800      	cmp	r0, #0
 800aeb0:	f000 80eb 	beq.w	800b08a <EDIT_AddKey+0x1e4>
 800aeb4:	f007 fd5c 	bl	8012970 <GUI_ALLOC_LockH>
 800aeb8:	af04      	add	r7, sp, #16
 800aeba:	f8d0 9058 	ldr.w	r9, [r0, #88]	; 0x58
 800aebe:	f847 0d0c 	str.w	r0, [r7, #-12]!
 800aec2:	f890 a054 	ldrb.w	sl, [r0, #84]	; 0x54
 800aec6:	f8d0 8034 	ldr.w	r8, [r0, #52]	; 0x34
 800aeca:	6cc6      	ldr	r6, [r0, #76]	; 0x4c
 800aecc:	4638      	mov	r0, r7
 800aece:	f007 fd5d 	bl	801298c <GUI_ALLOC_UnlockH>
 800aed2:	f1b9 0f00 	cmp.w	r9, #0
 800aed6:	d003      	beq.n	800aee0 <EDIT_AddKey+0x3a>
 800aed8:	4620      	mov	r0, r4
 800aeda:	4629      	mov	r1, r5
 800aedc:	47c8      	blx	r9
 800aede:	e0d1      	b.n	800b084 <EDIT_AddKey+0x1de>
 800aee0:	2d12      	cmp	r5, #18
 800aee2:	f000 80cb 	beq.w	800b07c <EDIT_AddKey+0x1d6>
 800aee6:	dc05      	bgt.n	800aef4 <EDIT_AddKey+0x4e>
 800aee8:	2d10      	cmp	r5, #16
 800aeea:	d03d      	beq.n	800af68 <EDIT_AddKey+0xc2>
 800aeec:	dc09      	bgt.n	800af02 <EDIT_AddKey+0x5c>
 800aeee:	2d08      	cmp	r5, #8
 800aef0:	d03d      	beq.n	800af6e <EDIT_AddKey+0xc8>
 800aef2:	e05a      	b.n	800afaa <EDIT_AddKey+0x104>
 800aef4:	2d1d      	cmp	r5, #29
 800aef6:	d045      	beq.n	800af84 <EDIT_AddKey+0xde>
 800aef8:	2d1e      	cmp	r5, #30
 800aefa:	d03f      	beq.n	800af7c <EDIT_AddKey+0xd6>
 800aefc:	2d13      	cmp	r5, #19
 800aefe:	d154      	bne.n	800afaa <EDIT_AddKey+0x104>
 800af00:	e015      	b.n	800af2e <EDIT_AddKey+0x88>
 800af02:	f1b8 0f00 	cmp.w	r8, #0
 800af06:	f000 80bd 	beq.w	800b084 <EDIT_AddKey+0x1de>
 800af0a:	4640      	mov	r0, r8
 800af0c:	f007 fd30 	bl	8012970 <GUI_ALLOC_LockH>
 800af10:	ad04      	add	r5, sp, #16
 800af12:	4631      	mov	r1, r6
 800af14:	4607      	mov	r7, r0
 800af16:	f845 0d04 	str.w	r0, [r5, #-4]!
 800af1a:	f005 fd61 	bl	80109e0 <GUI_UC__NumChars2NumBytes>
 800af1e:	183e      	adds	r6, r7, r0
 800af20:	4630      	mov	r0, r6
 800af22:	f005 fd31 	bl	8010988 <GUI_UC_GetCharCode>
 800af26:	2201      	movs	r2, #1
 800af28:	4601      	mov	r1, r0
 800af2a:	4620      	mov	r0, r4
 800af2c:	e015      	b.n	800af5a <EDIT_AddKey+0xb4>
 800af2e:	f1b8 0f00 	cmp.w	r8, #0
 800af32:	f000 80a7 	beq.w	800b084 <EDIT_AddKey+0x1de>
 800af36:	4640      	mov	r0, r8
 800af38:	f007 fd1a 	bl	8012970 <GUI_ALLOC_LockH>
 800af3c:	ad04      	add	r5, sp, #16
 800af3e:	4631      	mov	r1, r6
 800af40:	4607      	mov	r7, r0
 800af42:	f845 0d04 	str.w	r0, [r5, #-4]!
 800af46:	f005 fd4b 	bl	80109e0 <GUI_UC__NumChars2NumBytes>
 800af4a:	183e      	adds	r6, r7, r0
 800af4c:	4630      	mov	r0, r6
 800af4e:	f005 fd1b 	bl	8010988 <GUI_UC_GetCharCode>
 800af52:	f04f 32ff 	mov.w	r2, #4294967295
 800af56:	4601      	mov	r1, r0
 800af58:	4620      	mov	r0, r4
 800af5a:	4633      	mov	r3, r6
 800af5c:	f7ff fe45 	bl	800abea <_ChangeCharacter>
 800af60:	4628      	mov	r0, r5
 800af62:	f007 fd13 	bl	801298c <GUI_ALLOC_UnlockH>
 800af66:	e08d      	b.n	800b084 <EDIT_AddKey+0x1de>
 800af68:	4620      	mov	r0, r4
 800af6a:	1e71      	subs	r1, r6, #1
 800af6c:	e088      	b.n	800b080 <EDIT_AddKey+0x1da>
 800af6e:	2e00      	cmp	r6, #0
 800af70:	f000 8088 	beq.w	800b084 <EDIT_AddKey+0x1de>
 800af74:	4620      	mov	r0, r4
 800af76:	1e71      	subs	r1, r6, #1
 800af78:	f7ff febd 	bl	800acf6 <EDIT__SetCursorPos>
 800af7c:	4620      	mov	r0, r4
 800af7e:	f7ff fe87 	bl	800ac90 <_DeleteChar>
 800af82:	e07f      	b.n	800b084 <EDIT_AddKey+0x1de>
 800af84:	4620      	mov	r0, r4
 800af86:	f007 fcf3 	bl	8012970 <GUI_ALLOC_LockH>
 800af8a:	f1ba 0f01 	cmp.w	sl, #1
 800af8e:	9001      	str	r0, [sp, #4]
 800af90:	d102      	bne.n	800af98 <EDIT_AddKey+0xf2>
 800af92:	f880 9054 	strb.w	r9, [r0, #84]	; 0x54
 800af96:	e006      	b.n	800afa6 <EDIT_AddKey+0x100>
 800af98:	2301      	movs	r3, #1
 800af9a:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800af9e:	4631      	mov	r1, r6
 800afa0:	4620      	mov	r0, r4
 800afa2:	f7ff fea8 	bl	800acf6 <EDIT__SetCursorPos>
 800afa6:	4638      	mov	r0, r7
 800afa8:	e7db      	b.n	800af62 <EDIT_AddKey+0xbc>
 800afaa:	2d1f      	cmp	r5, #31
 800afac:	dd6a      	ble.n	800b084 <EDIT_AddKey+0x1de>
 800afae:	f1ba 0f00 	cmp.w	sl, #0
 800afb2:	d002      	beq.n	800afba <EDIT_AddKey+0x114>
 800afb4:	4620      	mov	r0, r4
 800afb6:	f7ff fe6b 	bl	800ac90 <_DeleteChar>
 800afba:	4620      	mov	r0, r4
 800afbc:	f007 fcd8 	bl	8012970 <GUI_ALLOC_LockH>
 800afc0:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 800afc4:	9002      	str	r0, [sp, #8]
 800afc6:	2b00      	cmp	r3, #0
 800afc8:	4607      	mov	r7, r0
 800afca:	dd18      	ble.n	800affe <EDIT_AddKey+0x158>
 800afcc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800afce:	b160      	cbz	r0, 800afea <EDIT_AddKey+0x144>
 800afd0:	f007 fcce 	bl	8012970 <GUI_ALLOC_LockH>
 800afd4:	f10d 0810 	add.w	r8, sp, #16
 800afd8:	f848 0d04 	str.w	r0, [r8, #-4]!
 800afdc:	f005 fa62 	bl	80104a4 <GUI__GetNumChars>
 800afe0:	4681      	mov	r9, r0
 800afe2:	4640      	mov	r0, r8
 800afe4:	f007 fcd2 	bl	801298c <GUI_ALLOC_UnlockH>
 800afe8:	e000      	b.n	800afec <EDIT_AddKey+0x146>
 800afea:	4681      	mov	r9, r0
 800afec:	f9b7 8038 	ldrsh.w	r8, [r7, #56]	; 0x38
 800aff0:	45c1      	cmp	r9, r8
 800aff2:	bfac      	ite	ge
 800aff4:	f04f 0800 	movge.w	r8, #0
 800aff8:	f04f 0801 	movlt.w	r8, #1
 800affc:	e001      	b.n	800b002 <EDIT_AddKey+0x15c>
 800affe:	f04f 0801 	mov.w	r8, #1
 800b002:	af04      	add	r7, sp, #16
 800b004:	f857 3d08 	ldr.w	r3, [r7, #-8]!
 800b008:	4638      	mov	r0, r7
 800b00a:	f8d3 a04c 	ldr.w	sl, [r3, #76]	; 0x4c
 800b00e:	f007 fcbd 	bl	801298c <GUI_ALLOC_UnlockH>
 800b012:	f1b8 0f00 	cmp.w	r8, #0
 800b016:	d035      	beq.n	800b084 <EDIT_AddKey+0x1de>
 800b018:	fa1f f885 	uxth.w	r8, r5
 800b01c:	4640      	mov	r0, r8
 800b01e:	f005 fcc3 	bl	80109a8 <GUI_UC__CalcSizeOfChar>
 800b022:	4681      	mov	r9, r0
 800b024:	4649      	mov	r1, r9
 800b026:	4620      	mov	r0, r4
 800b028:	f7ff fe05 	bl	800ac36 <_IsSpaceInBuffer>
 800b02c:	b350      	cbz	r0, 800b084 <EDIT_AddKey+0x1de>
 800b02e:	4620      	mov	r0, r4
 800b030:	f007 fc9e 	bl	8012970 <GUI_ALLOC_LockH>
 800b034:	6b45      	ldr	r5, [r0, #52]	; 0x34
 800b036:	9002      	str	r0, [sp, #8]
 800b038:	4638      	mov	r0, r7
 800b03a:	f007 fca7 	bl	801298c <GUI_ALLOC_UnlockH>
 800b03e:	4628      	mov	r0, r5
 800b040:	f007 fc96 	bl	8012970 <GUI_ALLOC_LockH>
 800b044:	ad04      	add	r5, sp, #16
 800b046:	4651      	mov	r1, sl
 800b048:	4607      	mov	r7, r0
 800b04a:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b04e:	f005 fcc7 	bl	80109e0 <GUI_UC__NumChars2NumBytes>
 800b052:	4407      	add	r7, r0
 800b054:	4638      	mov	r0, r7
 800b056:	f7f5 f8db 	bl	8000210 <strlen>
 800b05a:	4639      	mov	r1, r7
 800b05c:	1c42      	adds	r2, r0, #1
 800b05e:	eb07 0009 	add.w	r0, r7, r9
 800b062:	f00f f949 	bl	801a2f8 <memmove>
 800b066:	4641      	mov	r1, r8
 800b068:	4638      	mov	r0, r7
 800b06a:	f005 fc95 	bl	8010998 <GUI_UC_Encode>
 800b06e:	4628      	mov	r0, r5
 800b070:	f007 fc8c 	bl	801298c <GUI_ALLOC_UnlockH>
 800b074:	4620      	mov	r0, r4
 800b076:	2105      	movs	r1, #5
 800b078:	f000 fe73 	bl	800bd62 <WM_NotifyParent>
 800b07c:	4620      	mov	r0, r4
 800b07e:	1c71      	adds	r1, r6, #1
 800b080:	f7ff fe39 	bl	800acf6 <EDIT__SetCursorPos>
 800b084:	4620      	mov	r0, r4
 800b086:	f001 fdc0 	bl	800cc0a <WM_InvalidateWindow>
 800b08a:	b004      	add	sp, #16
 800b08c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800b090 <EDIT_Callback>:
 800b090:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b092:	6844      	ldr	r4, [r0, #4]
 800b094:	4605      	mov	r5, r0
 800b096:	4620      	mov	r0, r4
 800b098:	f000 fb3a 	bl	800b710 <WM__IsEnabled>
 800b09c:	4629      	mov	r1, r5
 800b09e:	4606      	mov	r6, r0
 800b0a0:	4620      	mov	r0, r4
 800b0a2:	f7fe f84b 	bl	800913c <WIDGET_HandleActive>
 800b0a6:	2800      	cmp	r0, #0
 800b0a8:	d06b      	beq.n	800b182 <EDIT_Callback+0xf2>
 800b0aa:	682b      	ldr	r3, [r5, #0]
 800b0ac:	2b0f      	cmp	r3, #15
 800b0ae:	d040      	beq.n	800b132 <EDIT_Callback+0xa2>
 800b0b0:	dc04      	bgt.n	800b0bc <EDIT_Callback+0x2c>
 800b0b2:	2b0b      	cmp	r3, #11
 800b0b4:	d042      	beq.n	800b13c <EDIT_Callback+0xac>
 800b0b6:	2b0e      	cmp	r3, #14
 800b0b8:	d04d      	beq.n	800b156 <EDIT_Callback+0xc6>
 800b0ba:	e05f      	b.n	800b17c <EDIT_Callback+0xec>
 800b0bc:	f240 1213 	movw	r2, #275	; 0x113
 800b0c0:	4293      	cmp	r3, r2
 800b0c2:	d003      	beq.n	800b0cc <EDIT_Callback+0x3c>
 800b0c4:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800b0c8:	d021      	beq.n	800b10e <EDIT_Callback+0x7e>
 800b0ca:	e057      	b.n	800b17c <EDIT_Callback+0xec>
 800b0cc:	4620      	mov	r0, r4
 800b0ce:	f001 fdbd 	bl	800cc4c <WM_SelectWindow>
 800b0d2:	4620      	mov	r0, r4
 800b0d4:	f007 fc4c 	bl	8012970 <GUI_ALLOC_LockH>
 800b0d8:	ae02      	add	r6, sp, #8
 800b0da:	f846 0d04 	str.w	r0, [r6, #-4]!
 800b0de:	f890 3056 	ldrb.w	r3, [r0, #86]	; 0x56
 800b0e2:	f083 0304 	eor.w	r3, r3, #4
 800b0e6:	f880 3056 	strb.w	r3, [r0, #86]	; 0x56
 800b0ea:	4630      	mov	r0, r6
 800b0ec:	f007 fc4e 	bl	801298c <GUI_ALLOC_UnlockH>
 800b0f0:	2100      	movs	r1, #0
 800b0f2:	4620      	mov	r0, r4
 800b0f4:	f7ff fc22 	bl	800a93c <_Paint>
 800b0f8:	4620      	mov	r0, r4
 800b0fa:	f007 fc39 	bl	8012970 <GUI_ALLOC_LockH>
 800b0fe:	2100      	movs	r1, #0
 800b100:	9001      	str	r0, [sp, #4]
 800b102:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 800b106:	f000 fbb5 	bl	800b874 <WM_RestartTimer>
 800b10a:	4630      	mov	r0, r6
 800b10c:	e020      	b.n	800b150 <EDIT_Callback+0xc0>
 800b10e:	68eb      	ldr	r3, [r5, #12]
 800b110:	b153      	cbz	r3, 800b128 <EDIT_Callback+0x98>
 800b112:	7a1a      	ldrb	r2, [r3, #8]
 800b114:	4620      	mov	r0, r4
 800b116:	b12a      	cbz	r2, 800b124 <EDIT_Callback+0x94>
 800b118:	6819      	ldr	r1, [r3, #0]
 800b11a:	f7ff fe6b 	bl	800adf4 <EDIT_SetCursorAtPixel>
 800b11e:	4620      	mov	r0, r4
 800b120:	2101      	movs	r1, #1
 800b122:	e003      	b.n	800b12c <EDIT_Callback+0x9c>
 800b124:	2102      	movs	r1, #2
 800b126:	e001      	b.n	800b12c <EDIT_Callback+0x9c>
 800b128:	4620      	mov	r0, r4
 800b12a:	2103      	movs	r1, #3
 800b12c:	f000 fe19 	bl	800bd62 <WM_NotifyParent>
 800b130:	e024      	b.n	800b17c <EDIT_Callback+0xec>
 800b132:	4620      	mov	r0, r4
 800b134:	2101      	movs	r1, #1
 800b136:	f7ff fc01 	bl	800a93c <_Paint>
 800b13a:	e022      	b.n	800b182 <EDIT_Callback+0xf2>
 800b13c:	4620      	mov	r0, r4
 800b13e:	f007 fc17 	bl	8012970 <GUI_ALLOC_LockH>
 800b142:	ac02      	add	r4, sp, #8
 800b144:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b148:	3034      	adds	r0, #52	; 0x34
 800b14a:	f007 fe69 	bl	8012e20 <GUI_ALLOC_FreePtr>
 800b14e:	4620      	mov	r0, r4
 800b150:	f007 fc1c 	bl	801298c <GUI_ALLOC_UnlockH>
 800b154:	e012      	b.n	800b17c <EDIT_Callback+0xec>
 800b156:	b18e      	cbz	r6, 800b17c <EDIT_Callback+0xec>
 800b158:	68eb      	ldr	r3, [r5, #12]
 800b15a:	685a      	ldr	r2, [r3, #4]
 800b15c:	2a00      	cmp	r2, #0
 800b15e:	dd0d      	ble.n	800b17c <EDIT_Callback+0xec>
 800b160:	6819      	ldr	r1, [r3, #0]
 800b162:	f1a1 0309 	sub.w	r3, r1, #9
 800b166:	2b19      	cmp	r3, #25
 800b168:	d804      	bhi.n	800b174 <EDIT_Callback+0xe4>
 800b16a:	2201      	movs	r2, #1
 800b16c:	409a      	lsls	r2, r3
 800b16e:	4b06      	ldr	r3, [pc, #24]	; (800b188 <EDIT_Callback+0xf8>)
 800b170:	4013      	ands	r3, r2
 800b172:	b91b      	cbnz	r3, 800b17c <EDIT_Callback+0xec>
 800b174:	4620      	mov	r0, r4
 800b176:	f7ff fe96 	bl	800aea6 <EDIT_AddKey>
 800b17a:	e002      	b.n	800b182 <EDIT_Callback+0xf2>
 800b17c:	4628      	mov	r0, r5
 800b17e:	f002 f967 	bl	800d450 <WM_DefaultProc>
 800b182:	b002      	add	sp, #8
 800b184:	bd70      	pop	{r4, r5, r6, pc}
 800b186:	bf00      	nop
 800b188:	03040013 	.word	0x03040013

0800b18c <EDIT_SetFont>:
 800b18c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b18e:	460d      	mov	r5, r1
 800b190:	4606      	mov	r6, r0
 800b192:	b158      	cbz	r0, 800b1ac <EDIT_SetFont+0x20>
 800b194:	f007 fbec 	bl	8012970 <GUI_ALLOC_LockH>
 800b198:	ac02      	add	r4, sp, #8
 800b19a:	6685      	str	r5, [r0, #104]	; 0x68
 800b19c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b1a0:	4630      	mov	r0, r6
 800b1a2:	f001 fd32 	bl	800cc0a <WM_InvalidateWindow>
 800b1a6:	4620      	mov	r0, r4
 800b1a8:	f007 fbf0 	bl	801298c <GUI_ALLOC_UnlockH>
 800b1ac:	b002      	add	sp, #8
 800b1ae:	bd70      	pop	{r4, r5, r6, pc}

0800b1b0 <EDIT_SetText>:
 800b1b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b1b4:	460c      	mov	r4, r1
 800b1b6:	4606      	mov	r6, r0
 800b1b8:	2800      	cmp	r0, #0
 800b1ba:	d063      	beq.n	800b284 <EDIT_SetText+0xd4>
 800b1bc:	f007 fbd8 	bl	8012970 <GUI_ALLOC_LockH>
 800b1c0:	ad02      	add	r5, sp, #8
 800b1c2:	6b47      	ldr	r7, [r0, #52]	; 0x34
 800b1c4:	f845 0d08 	str.w	r0, [r5, #-8]!
 800b1c8:	f8b0 8038 	ldrh.w	r8, [r0, #56]	; 0x38
 800b1cc:	4668      	mov	r0, sp
 800b1ce:	f007 fbdd 	bl	801298c <GUI_ALLOC_UnlockH>
 800b1d2:	2c00      	cmp	r4, #0
 800b1d4:	d046      	beq.n	800b264 <EDIT_SetText+0xb4>
 800b1d6:	b16f      	cbz	r7, 800b1f4 <EDIT_SetText+0x44>
 800b1d8:	4638      	mov	r0, r7
 800b1da:	f007 fbc9 	bl	8012970 <GUI_ALLOC_LockH>
 800b1de:	af02      	add	r7, sp, #8
 800b1e0:	f847 0d04 	str.w	r0, [r7, #-4]!
 800b1e4:	f7f5 f814 	bl	8000210 <strlen>
 800b1e8:	f100 0901 	add.w	r9, r0, #1
 800b1ec:	4638      	mov	r0, r7
 800b1ee:	f007 fbcd 	bl	801298c <GUI_ALLOC_UnlockH>
 800b1f2:	e000      	b.n	800b1f6 <EDIT_SetText+0x46>
 800b1f4:	46b9      	mov	r9, r7
 800b1f6:	4620      	mov	r0, r4
 800b1f8:	f005 f954 	bl	80104a4 <GUI__GetNumChars>
 800b1fc:	fa0f f788 	sxth.w	r7, r8
 800b200:	42b8      	cmp	r0, r7
 800b202:	bfb8      	it	lt
 800b204:	4607      	movlt	r7, r0
 800b206:	4639      	mov	r1, r7
 800b208:	4620      	mov	r0, r4
 800b20a:	f005 fbe9 	bl	80109e0 <GUI_UC__NumChars2NumBytes>
 800b20e:	f100 0801 	add.w	r8, r0, #1
 800b212:	ebc9 0108 	rsb	r1, r9, r8
 800b216:	4630      	mov	r0, r6
 800b218:	f7ff fd0d 	bl	800ac36 <_IsSpaceInBuffer>
 800b21c:	2800      	cmp	r0, #0
 800b21e:	d02e      	beq.n	800b27e <EDIT_SetText+0xce>
 800b220:	4630      	mov	r0, r6
 800b222:	f007 fba5 	bl	8012970 <GUI_ALLOC_LockH>
 800b226:	9000      	str	r0, [sp, #0]
 800b228:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b22a:	f007 fba1 	bl	8012970 <GUI_ALLOC_LockH>
 800b22e:	4642      	mov	r2, r8
 800b230:	4621      	mov	r1, r4
 800b232:	9001      	str	r0, [sp, #4]
 800b234:	f00f f855 	bl	801a2e2 <memcpy>
 800b238:	9b01      	ldr	r3, [sp, #4]
 800b23a:	4443      	add	r3, r8
 800b23c:	2200      	movs	r2, #0
 800b23e:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b242:	9b00      	ldr	r3, [sp, #0]
 800b244:	f9b3 2038 	ldrsh.w	r2, [r3, #56]	; 0x38
 800b248:	64df      	str	r7, [r3, #76]	; 0x4c
 800b24a:	4297      	cmp	r7, r2
 800b24c:	d106      	bne.n	800b25c <EDIT_SetText+0xac>
 800b24e:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800b252:	2a01      	cmp	r2, #1
 800b254:	bf04      	itt	eq
 800b256:	f107 37ff 	addeq.w	r7, r7, #4294967295
 800b25a:	64df      	streq	r7, [r3, #76]	; 0x4c
 800b25c:	a801      	add	r0, sp, #4
 800b25e:	f007 fb95 	bl	801298c <GUI_ALLOC_UnlockH>
 800b262:	e009      	b.n	800b278 <EDIT_SetText+0xc8>
 800b264:	4630      	mov	r0, r6
 800b266:	f007 fb83 	bl	8012970 <GUI_ALLOC_LockH>
 800b26a:	9000      	str	r0, [sp, #0]
 800b26c:	3034      	adds	r0, #52	; 0x34
 800b26e:	f007 fdd7 	bl	8012e20 <GUI_ALLOC_FreePtr>
 800b272:	9b00      	ldr	r3, [sp, #0]
 800b274:	875c      	strh	r4, [r3, #58]	; 0x3a
 800b276:	64dc      	str	r4, [r3, #76]	; 0x4c
 800b278:	4668      	mov	r0, sp
 800b27a:	f007 fb87 	bl	801298c <GUI_ALLOC_UnlockH>
 800b27e:	4630      	mov	r0, r6
 800b280:	f001 fcc3 	bl	800cc0a <WM_InvalidateWindow>
 800b284:	b003      	add	sp, #12
 800b286:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b28a <EDIT_SetTextAlign>:
 800b28a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b28c:	460c      	mov	r4, r1
 800b28e:	4605      	mov	r5, r0
 800b290:	b150      	cbz	r0, 800b2a8 <EDIT_SetTextAlign+0x1e>
 800b292:	f007 fb6d 	bl	8012970 <GUI_ALLOC_LockH>
 800b296:	9001      	str	r0, [sp, #4]
 800b298:	b118      	cbz	r0, 800b2a2 <EDIT_SetTextAlign+0x18>
 800b29a:	6604      	str	r4, [r0, #96]	; 0x60
 800b29c:	4628      	mov	r0, r5
 800b29e:	f001 fcb4 	bl	800cc0a <WM_InvalidateWindow>
 800b2a2:	a801      	add	r0, sp, #4
 800b2a4:	f007 fb72 	bl	801298c <GUI_ALLOC_UnlockH>
 800b2a8:	b003      	add	sp, #12
 800b2aa:	bd30      	pop	{r4, r5, pc}

0800b2ac <GUI_CreateDialogBox>:
 800b2ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b2b0:	4606      	mov	r6, r0
 800b2b2:	4688      	mov	r8, r1
 800b2b4:	4614      	mov	r4, r2
 800b2b6:	461d      	mov	r5, r3
 800b2b8:	b913      	cbnz	r3, 800b2c0 <GUI_CreateDialogBox+0x14>
 800b2ba:	f000 ff19 	bl	800c0f0 <WM_GetDesktopWindow>
 800b2be:	4605      	mov	r5, r0
 800b2c0:	9400      	str	r4, [sp, #0]
 800b2c2:	4630      	mov	r0, r6
 800b2c4:	6834      	ldr	r4, [r6, #0]
 800b2c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b2c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b2ca:	4629      	mov	r1, r5
 800b2cc:	47a0      	blx	r4
 800b2ce:	4604      	mov	r4, r0
 800b2d0:	2800      	cmp	r0, #0
 800b2d2:	d039      	beq.n	800b348 <GUI_CreateDialogBox+0x9c>
 800b2d4:	f000 ff18 	bl	800c108 <WM_GetClientWindow>
 800b2d8:	8a71      	ldrh	r1, [r6, #18]
 800b2da:	4607      	mov	r7, r0
 800b2dc:	4620      	mov	r0, r4
 800b2de:	f7fd fefa 	bl	80090d6 <WIDGET_OrState>
 800b2e2:	4620      	mov	r0, r4
 800b2e4:	f000 faef 	bl	800b8c6 <WM_ShowWindow>
 800b2e8:	4638      	mov	r0, r7
 800b2ea:	f108 38ff 	add.w	r8, r8, #4294967295
 800b2ee:	f000 faea 	bl	800b8c6 <WM_ShowWindow>
 800b2f2:	f1b8 0f00 	cmp.w	r8, #0
 800b2f6:	dd0f      	ble.n	800b318 <GUI_CreateDialogBox+0x6c>
 800b2f8:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 800b2fc:	2200      	movs	r2, #0
 800b2fe:	9200      	str	r2, [sp, #0]
 800b300:	4630      	mov	r0, r6
 800b302:	4639      	mov	r1, r7
 800b304:	4613      	mov	r3, r2
 800b306:	47e0      	blx	ip
 800b308:	4681      	mov	r9, r0
 800b30a:	2800      	cmp	r0, #0
 800b30c:	d1ed      	bne.n	800b2ea <GUI_CreateDialogBox+0x3e>
 800b30e:	4620      	mov	r0, r4
 800b310:	f001 fd66 	bl	800cde0 <WM_DeleteWindow>
 800b314:	4648      	mov	r0, r9
 800b316:	e018      	b.n	800b34a <GUI_CreateDialogBox+0x9e>
 800b318:	4638      	mov	r0, r7
 800b31a:	211d      	movs	r1, #29
 800b31c:	f000 fc36 	bl	800bb8c <WM_SendMessageNoPara>
 800b320:	1c6b      	adds	r3, r5, #1
 800b322:	d011      	beq.n	800b348 <GUI_CreateDialogBox+0x9c>
 800b324:	f000 fea6 	bl	800c074 <WM_GetFocussedWindow>
 800b328:	b150      	cbz	r0, 800b340 <GUI_CreateDialogBox+0x94>
 800b32a:	f007 fb17 	bl	801295c <GUI_ALLOC_h2p>
 800b32e:	6980      	ldr	r0, [r0, #24]
 800b330:	42a0      	cmp	r0, r4
 800b332:	d00a      	beq.n	800b34a <GUI_CreateDialogBox+0x9e>
 800b334:	2800      	cmp	r0, #0
 800b336:	d1f8      	bne.n	800b32a <GUI_CreateDialogBox+0x7e>
 800b338:	4620      	mov	r0, r4
 800b33a:	f000 fb71 	bl	800ba20 <WM_SetFocusOnNextChild>
 800b33e:	e003      	b.n	800b348 <GUI_CreateDialogBox+0x9c>
 800b340:	42a5      	cmp	r5, r4
 800b342:	d1f9      	bne.n	800b338 <GUI_CreateDialogBox+0x8c>
 800b344:	4628      	mov	r0, r5
 800b346:	e000      	b.n	800b34a <GUI_CreateDialogBox+0x9e>
 800b348:	4620      	mov	r0, r4
 800b34a:	b003      	add	sp, #12
 800b34c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b350 <BUTTON_CreateIndirect>:
 800b350:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b352:	b087      	sub	sp, #28
 800b354:	4604      	mov	r4, r0
 800b356:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 800b35a:	9100      	str	r1, [sp, #0]
 800b35c:	2100      	movs	r1, #0
 800b35e:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 800b362:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 800b366:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 800b36a:	9101      	str	r1, [sp, #4]
 800b36c:	8a61      	ldrh	r1, [r4, #18]
 800b36e:	69a5      	ldr	r5, [r4, #24]
 800b370:	9102      	str	r1, [sp, #8]
 800b372:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b376:	9103      	str	r1, [sp, #12]
 800b378:	9504      	str	r5, [sp, #16]
 800b37a:	eb0e 0103 	add.w	r1, lr, r3
 800b37e:	4410      	add	r0, r2
 800b380:	4633      	mov	r3, r6
 800b382:	463a      	mov	r2, r7
 800b384:	f000 f8ce 	bl	800b524 <BUTTON_CreateUser>
 800b388:	6861      	ldr	r1, [r4, #4]
 800b38a:	4605      	mov	r5, r0
 800b38c:	f000 f902 	bl	800b594 <BUTTON_SetText>
 800b390:	4628      	mov	r0, r5
 800b392:	b007      	add	sp, #28
 800b394:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b396 <_OnButtonPressed>:
 800b396:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b398:	f44f 7180 	mov.w	r1, #256	; 0x100
 800b39c:	4604      	mov	r4, r0
 800b39e:	f7fd fe9a 	bl	80090d6 <WIDGET_OrState>
 800b3a2:	4620      	mov	r0, r4
 800b3a4:	f007 fae4 	bl	8012970 <GUI_ALLOC_LockH>
 800b3a8:	ab02      	add	r3, sp, #8
 800b3aa:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800b3ac:	f843 0d04 	str.w	r0, [r3, #-4]!
 800b3b0:	4618      	mov	r0, r3
 800b3b2:	f007 faeb 	bl	801298c <GUI_ALLOC_UnlockH>
 800b3b6:	07ab      	lsls	r3, r5, #30
 800b3b8:	d503      	bpl.n	800b3c2 <_OnButtonPressed+0x2c>
 800b3ba:	4620      	mov	r0, r4
 800b3bc:	2101      	movs	r1, #1
 800b3be:	f000 fcd0 	bl	800bd62 <WM_NotifyParent>
 800b3c2:	b003      	add	sp, #12
 800b3c4:	bd30      	pop	{r4, r5, pc}

0800b3c6 <_OnButtonReleased>:
 800b3c6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b3c8:	4605      	mov	r5, r0
 800b3ca:	460c      	mov	r4, r1
 800b3cc:	f44f 7180 	mov.w	r1, #256	; 0x100
 800b3d0:	f7fd fe97 	bl	8009102 <WIDGET_AndState>
 800b3d4:	4628      	mov	r0, r5
 800b3d6:	f007 facb 	bl	8012970 <GUI_ALLOC_LockH>
 800b3da:	4602      	mov	r2, r0
 800b3dc:	a802      	add	r0, sp, #8
 800b3de:	6a96      	ldr	r6, [r2, #40]	; 0x28
 800b3e0:	f840 2d04 	str.w	r2, [r0, #-4]!
 800b3e4:	8e17      	ldrh	r7, [r2, #48]	; 0x30
 800b3e6:	f007 fad1 	bl	801298c <GUI_ALLOC_UnlockH>
 800b3ea:	2c02      	cmp	r4, #2
 800b3ec:	d102      	bne.n	800b3f4 <_OnButtonReleased+0x2e>
 800b3ee:	4638      	mov	r0, r7
 800b3f0:	f006 fa0c 	bl	801180c <GUI_StoreKey>
 800b3f4:	07b3      	lsls	r3, r6, #30
 800b3f6:	d503      	bpl.n	800b400 <_OnButtonReleased+0x3a>
 800b3f8:	4628      	mov	r0, r5
 800b3fa:	4621      	mov	r1, r4
 800b3fc:	f000 fcb1 	bl	800bd62 <WM_NotifyParent>
 800b400:	b003      	add	sp, #12
 800b402:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b404 <_OnTouchDefault>:
 800b404:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b406:	460d      	mov	r5, r1
 800b408:	4604      	mov	r4, r0
 800b40a:	f007 fab1 	bl	8012970 <GUI_ALLOC_LockH>
 800b40e:	ab02      	add	r3, sp, #8
 800b410:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 800b412:	f843 0d04 	str.w	r0, [r3, #-4]!
 800b416:	4618      	mov	r0, r3
 800b418:	f007 fab8 	bl	801298c <GUI_ALLOC_UnlockH>
 800b41c:	68ea      	ldr	r2, [r5, #12]
 800b41e:	b162      	cbz	r2, 800b43a <_OnTouchDefault+0x36>
 800b420:	7a12      	ldrb	r2, [r2, #8]
 800b422:	f406 7380 	and.w	r3, r6, #256	; 0x100
 800b426:	b122      	cbz	r2, 800b432 <_OnTouchDefault+0x2e>
 800b428:	b95b      	cbnz	r3, 800b442 <_OnTouchDefault+0x3e>
 800b42a:	4620      	mov	r0, r4
 800b42c:	f7ff ffb3 	bl	800b396 <_OnButtonPressed>
 800b430:	e007      	b.n	800b442 <_OnTouchDefault+0x3e>
 800b432:	b133      	cbz	r3, 800b442 <_OnTouchDefault+0x3e>
 800b434:	4620      	mov	r0, r4
 800b436:	2102      	movs	r1, #2
 800b438:	e001      	b.n	800b43e <_OnTouchDefault+0x3a>
 800b43a:	4620      	mov	r0, r4
 800b43c:	2103      	movs	r1, #3
 800b43e:	f7ff ffc2 	bl	800b3c6 <_OnButtonReleased>
 800b442:	b002      	add	sp, #8
 800b444:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b448 <BUTTON_Callback>:
 800b448:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b44a:	6844      	ldr	r4, [r0, #4]
 800b44c:	4605      	mov	r5, r0
 800b44e:	4629      	mov	r1, r5
 800b450:	4620      	mov	r0, r4
 800b452:	f7fd fe73 	bl	800913c <WIDGET_HandleActive>
 800b456:	2800      	cmp	r0, #0
 800b458:	d05d      	beq.n	800b516 <BUTTON_Callback+0xce>
 800b45a:	682b      	ldr	r3, [r5, #0]
 800b45c:	2b0f      	cmp	r3, #15
 800b45e:	d016      	beq.n	800b48e <BUTTON_Callback+0x46>
 800b460:	dc04      	bgt.n	800b46c <BUTTON_Callback+0x24>
 800b462:	2b0b      	cmp	r3, #11
 800b464:	d023      	beq.n	800b4ae <BUTTON_Callback+0x66>
 800b466:	2b0e      	cmp	r3, #14
 800b468:	d033      	beq.n	800b4d2 <BUTTON_Callback+0x8a>
 800b46a:	e051      	b.n	800b510 <BUTTON_Callback+0xc8>
 800b46c:	2b28      	cmp	r3, #40	; 0x28
 800b46e:	d048      	beq.n	800b502 <BUTTON_Callback+0xba>
 800b470:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800b474:	d005      	beq.n	800b482 <BUTTON_Callback+0x3a>
 800b476:	2b11      	cmp	r3, #17
 800b478:	d14a      	bne.n	800b510 <BUTTON_Callback+0xc8>
 800b47a:	4b28      	ldr	r3, [pc, #160]	; (800b51c <BUTTON_Callback+0xd4>)
 800b47c:	681b      	ldr	r3, [r3, #0]
 800b47e:	b913      	cbnz	r3, 800b486 <BUTTON_Callback+0x3e>
 800b480:	e049      	b.n	800b516 <BUTTON_Callback+0xce>
 800b482:	4b27      	ldr	r3, [pc, #156]	; (800b520 <BUTTON_Callback+0xd8>)
 800b484:	681b      	ldr	r3, [r3, #0]
 800b486:	4620      	mov	r0, r4
 800b488:	4629      	mov	r1, r5
 800b48a:	4798      	blx	r3
 800b48c:	e043      	b.n	800b516 <BUTTON_Callback+0xce>
 800b48e:	4620      	mov	r0, r4
 800b490:	f007 fa6e 	bl	8012970 <GUI_ALLOC_LockH>
 800b494:	ab02      	add	r3, sp, #8
 800b496:	f843 0d04 	str.w	r0, [r3, #-4]!
 800b49a:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800b49c:	6815      	ldr	r5, [r2, #0]
 800b49e:	4618      	mov	r0, r3
 800b4a0:	f007 fa74 	bl	801298c <GUI_ALLOC_UnlockH>
 800b4a4:	2d00      	cmp	r5, #0
 800b4a6:	d036      	beq.n	800b516 <BUTTON_Callback+0xce>
 800b4a8:	4620      	mov	r0, r4
 800b4aa:	47a8      	blx	r5
 800b4ac:	e033      	b.n	800b516 <BUTTON_Callback+0xce>
 800b4ae:	4620      	mov	r0, r4
 800b4b0:	f007 fa5e 	bl	8012970 <GUI_ALLOC_LockH>
 800b4b4:	ac02      	add	r4, sp, #8
 800b4b6:	9001      	str	r0, [sp, #4]
 800b4b8:	3068      	adds	r0, #104	; 0x68
 800b4ba:	f007 fcb1 	bl	8012e20 <GUI_ALLOC_FreePtr>
 800b4be:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 800b4c2:	2103      	movs	r1, #3
 800b4c4:	306c      	adds	r0, #108	; 0x6c
 800b4c6:	f007 fcb3 	bl	8012e30 <GUI_ALLOC_FreePtrArray>
 800b4ca:	4620      	mov	r0, r4
 800b4cc:	f007 fa5e 	bl	801298c <GUI_ALLOC_UnlockH>
 800b4d0:	e01e      	b.n	800b510 <BUTTON_Callback+0xc8>
 800b4d2:	68ea      	ldr	r2, [r5, #12]
 800b4d4:	ca0c      	ldmia	r2, {r2, r3}
 800b4d6:	2a0d      	cmp	r2, #13
 800b4d8:	d002      	beq.n	800b4e0 <BUTTON_Callback+0x98>
 800b4da:	2a20      	cmp	r2, #32
 800b4dc:	d007      	beq.n	800b4ee <BUTTON_Callback+0xa6>
 800b4de:	e010      	b.n	800b502 <BUTTON_Callback+0xba>
 800b4e0:	2b00      	cmp	r3, #0
 800b4e2:	dd0e      	ble.n	800b502 <BUTTON_Callback+0xba>
 800b4e4:	4620      	mov	r0, r4
 800b4e6:	f7ff ff56 	bl	800b396 <_OnButtonPressed>
 800b4ea:	4620      	mov	r0, r4
 800b4ec:	e005      	b.n	800b4fa <BUTTON_Callback+0xb2>
 800b4ee:	2b00      	cmp	r3, #0
 800b4f0:	4620      	mov	r0, r4
 800b4f2:	dd02      	ble.n	800b4fa <BUTTON_Callback+0xb2>
 800b4f4:	f7ff ff4f 	bl	800b396 <_OnButtonPressed>
 800b4f8:	e00d      	b.n	800b516 <BUTTON_Callback+0xce>
 800b4fa:	2102      	movs	r1, #2
 800b4fc:	f7ff ff63 	bl	800b3c6 <_OnButtonReleased>
 800b500:	e009      	b.n	800b516 <BUTTON_Callback+0xce>
 800b502:	68eb      	ldr	r3, [r5, #12]
 800b504:	b923      	cbnz	r3, 800b510 <BUTTON_Callback+0xc8>
 800b506:	4620      	mov	r0, r4
 800b508:	f44f 7180 	mov.w	r1, #256	; 0x100
 800b50c:	f7fd fdf9 	bl	8009102 <WIDGET_AndState>
 800b510:	4628      	mov	r0, r5
 800b512:	f001 ff9d 	bl	800d450 <WM_DefaultProc>
 800b516:	b003      	add	sp, #12
 800b518:	bd30      	pop	{r4, r5, pc}
 800b51a:	bf00      	nop
 800b51c:	20019430 	.word	0x20019430
 800b520:	200000fc 	.word	0x200000fc

0800b524 <BUTTON_CreateUser>:
 800b524:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b526:	b087      	sub	sp, #28
 800b528:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800b52a:	9400      	str	r4, [sp, #0]
 800b52c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800b52e:	9401      	str	r4, [sp, #4]
 800b530:	4c15      	ldr	r4, [pc, #84]	; (800b588 <BUTTON_CreateUser+0x64>)
 800b532:	9402      	str	r4, [sp, #8]
 800b534:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800b536:	344c      	adds	r4, #76	; 0x4c
 800b538:	9403      	str	r4, [sp, #12]
 800b53a:	f001 fba7 	bl	800cc8c <WM_CreateWindowAsChild>
 800b53e:	4607      	mov	r7, r0
 800b540:	b1f8      	cbz	r0, 800b582 <BUTTON_CreateUser+0x5e>
 800b542:	f007 fa15 	bl	8012970 <GUI_ALLOC_LockH>
 800b546:	4d11      	ldr	r5, [pc, #68]	; (800b58c <BUTTON_CreateUser+0x68>)
 800b548:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b54a:	9005      	str	r0, [sp, #20]
 800b54c:	2210      	movs	r2, #16
 800b54e:	f7fd fded 	bl	800912c <WIDGET__Init>
 800b552:	ae06      	add	r6, sp, #24
 800b554:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b556:	f856 ed04 	ldr.w	lr, [r6, #-4]!
 800b55a:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 800b55e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b560:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b562:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b564:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800b568:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800b56c:	4c08      	ldr	r4, [pc, #32]	; (800b590 <BUTTON_CreateUser+0x6c>)
 800b56e:	6823      	ldr	r3, [r4, #0]
 800b570:	f8ce 3064 	str.w	r3, [lr, #100]	; 0x64
 800b574:	4630      	mov	r0, r6
 800b576:	f007 fa09 	bl	801298c <GUI_ALLOC_UnlockH>
 800b57a:	6823      	ldr	r3, [r4, #0]
 800b57c:	4638      	mov	r0, r7
 800b57e:	685b      	ldr	r3, [r3, #4]
 800b580:	4798      	blx	r3
 800b582:	4638      	mov	r0, r7
 800b584:	b007      	add	sp, #28
 800b586:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b588:	0800b449 	.word	0x0800b449
 800b58c:	20000100 	.word	0x20000100
 800b590:	20000130 	.word	0x20000130

0800b594 <BUTTON_SetText>:
 800b594:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b596:	460c      	mov	r4, r1
 800b598:	4605      	mov	r5, r0
 800b59a:	b300      	cbz	r0, 800b5de <BUTTON_SetText+0x4a>
 800b59c:	f007 f9e8 	bl	8012970 <GUI_ALLOC_LockH>
 800b5a0:	6e86      	ldr	r6, [r0, #104]	; 0x68
 800b5a2:	9000      	str	r0, [sp, #0]
 800b5a4:	4668      	mov	r0, sp
 800b5a6:	9601      	str	r6, [sp, #4]
 800b5a8:	f007 f9f0 	bl	801298c <GUI_ALLOC_UnlockH>
 800b5ac:	4621      	mov	r1, r4
 800b5ae:	a801      	add	r0, sp, #4
 800b5b0:	f004 fe62 	bl	8010278 <GUI__SetText>
 800b5b4:	f1d0 0401 	rsbs	r4, r0, #1
 800b5b8:	bf38      	it	cc
 800b5ba:	2400      	movcc	r4, #0
 800b5bc:	b984      	cbnz	r4, 800b5e0 <BUTTON_SetText+0x4c>
 800b5be:	9b01      	ldr	r3, [sp, #4]
 800b5c0:	42b3      	cmp	r3, r6
 800b5c2:	d008      	beq.n	800b5d6 <BUTTON_SetText+0x42>
 800b5c4:	4628      	mov	r0, r5
 800b5c6:	f007 f9d3 	bl	8012970 <GUI_ALLOC_LockH>
 800b5ca:	9b01      	ldr	r3, [sp, #4]
 800b5cc:	9000      	str	r0, [sp, #0]
 800b5ce:	6683      	str	r3, [r0, #104]	; 0x68
 800b5d0:	4668      	mov	r0, sp
 800b5d2:	f007 f9db 	bl	801298c <GUI_ALLOC_UnlockH>
 800b5d6:	4628      	mov	r0, r5
 800b5d8:	f001 fb17 	bl	800cc0a <WM_InvalidateWindow>
 800b5dc:	e000      	b.n	800b5e0 <BUTTON_SetText+0x4c>
 800b5de:	2401      	movs	r4, #1
 800b5e0:	4620      	mov	r0, r4
 800b5e2:	b002      	add	sp, #8
 800b5e4:	bd70      	pop	{r4, r5, r6, pc}

0800b5e6 <BUTTON_SetFont>:
 800b5e6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b5e8:	460c      	mov	r4, r1
 800b5ea:	4605      	mov	r5, r0
 800b5ec:	b158      	cbz	r0, 800b606 <BUTTON_SetFont+0x20>
 800b5ee:	f007 f9bf 	bl	8012970 <GUI_ALLOC_LockH>
 800b5f2:	4602      	mov	r2, r0
 800b5f4:	a802      	add	r0, sp, #8
 800b5f6:	6554      	str	r4, [r2, #84]	; 0x54
 800b5f8:	f840 2d04 	str.w	r2, [r0, #-4]!
 800b5fc:	f007 f9c6 	bl	801298c <GUI_ALLOC_UnlockH>
 800b600:	4628      	mov	r0, r5
 800b602:	f001 fb02 	bl	800cc0a <WM_InvalidateWindow>
 800b606:	b003      	add	sp, #12
 800b608:	bd30      	pop	{r4, r5, pc}

0800b60a <WM__UpdateChildPositions>:
 800b60a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b60e:	b087      	sub	sp, #28
 800b610:	69c4      	ldr	r4, [r0, #28]
 800b612:	9303      	str	r3, [sp, #12]
 800b614:	468a      	mov	sl, r1
 800b616:	4693      	mov	fp, r2
 800b618:	2c00      	cmp	r4, #0
 800b61a:	d06d      	beq.n	800b6f8 <WM__UpdateChildPositions+0xee>
 800b61c:	4620      	mov	r0, r4
 800b61e:	f007 f9a7 	bl	8012970 <GUI_ALLOC_LockH>
 800b622:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800b624:	9005      	str	r0, [sp, #20]
 800b626:	f401 7320 	and.w	r3, r1, #640	; 0x280
 800b62a:	2b80      	cmp	r3, #128	; 0x80
 800b62c:	f8b0 8000 	ldrh.w	r8, [r0]
 800b630:	8842      	ldrh	r2, [r0, #2]
 800b632:	8886      	ldrh	r6, [r0, #4]
 800b634:	88c5      	ldrh	r5, [r0, #6]
 800b636:	d008      	beq.n	800b64a <WM__UpdateChildPositions+0x40>
 800b638:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 800b63c:	d108      	bne.n	800b650 <WM__UpdateChildPositions+0x46>
 800b63e:	eb08 090a 	add.w	r9, r8, sl
 800b642:	fa1f f989 	uxth.w	r9, r9
 800b646:	9b03      	ldr	r3, [sp, #12]
 800b648:	e008      	b.n	800b65c <WM__UpdateChildPositions+0x52>
 800b64a:	9803      	ldr	r0, [sp, #12]
 800b64c:	b283      	uxth	r3, r0
 800b64e:	e001      	b.n	800b654 <WM__UpdateChildPositions+0x4a>
 800b650:	fa1f f38a 	uxth.w	r3, sl
 800b654:	eb03 0908 	add.w	r9, r3, r8
 800b658:	fa1f f989 	uxth.w	r9, r9
 800b65c:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 800b660:	4433      	add	r3, r6
 800b662:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800b666:	b29b      	uxth	r3, r3
 800b668:	d008      	beq.n	800b67c <WM__UpdateChildPositions+0x72>
 800b66a:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 800b66e:	d108      	bne.n	800b682 <WM__UpdateChildPositions+0x78>
 800b670:	eb02 0c0b 	add.w	ip, r2, fp
 800b674:	fa1f fc8c 	uxth.w	ip, ip
 800b678:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800b67a:	e008      	b.n	800b68e <WM__UpdateChildPositions+0x84>
 800b67c:	9910      	ldr	r1, [sp, #64]	; 0x40
 800b67e:	b28f      	uxth	r7, r1
 800b680:	e001      	b.n	800b686 <WM__UpdateChildPositions+0x7c>
 800b682:	fa1f f78b 	uxth.w	r7, fp
 800b686:	eb07 0c02 	add.w	ip, r7, r2
 800b68a:	fa1f fc8c 	uxth.w	ip, ip
 800b68e:	fa0f f989 	sxth.w	r9, r9
 800b692:	fa0f f888 	sxth.w	r8, r8
 800b696:	b212      	sxth	r2, r2
 800b698:	442f      	add	r7, r5
 800b69a:	fa0f fc8c 	sxth.w	ip, ip
 800b69e:	ebb9 0108 	subs.w	r1, r9, r8
 800b6a2:	9202      	str	r2, [sp, #8]
 800b6a4:	b2bf      	uxth	r7, r7
 800b6a6:	ebc2 020c 	rsb	r2, r2, ip
 800b6aa:	d100      	bne.n	800b6ae <WM__UpdateChildPositions+0xa4>
 800b6ac:	b142      	cbz	r2, 800b6c0 <WM__UpdateChildPositions+0xb6>
 800b6ae:	4620      	mov	r0, r4
 800b6b0:	9301      	str	r3, [sp, #4]
 800b6b2:	f8cd c000 	str.w	ip, [sp]
 800b6b6:	f000 fc2e 	bl	800bf16 <WM_MoveWindow>
 800b6ba:	f8dd c000 	ldr.w	ip, [sp]
 800b6be:	9b01      	ldr	r3, [sp, #4]
 800b6c0:	b21b      	sxth	r3, r3
 800b6c2:	ebc9 0903 	rsb	r9, r9, r3
 800b6c6:	b236      	sxth	r6, r6
 800b6c8:	9b02      	ldr	r3, [sp, #8]
 800b6ca:	ebc6 0808 	rsb	r8, r6, r8
 800b6ce:	b23f      	sxth	r7, r7
 800b6d0:	b22d      	sxth	r5, r5
 800b6d2:	ebcc 0c07 	rsb	ip, ip, r7
 800b6d6:	1b5d      	subs	r5, r3, r5
 800b6d8:	eb19 0108 	adds.w	r1, r9, r8
 800b6dc:	eb0c 0205 	add.w	r2, ip, r5
 800b6e0:	d100      	bne.n	800b6e4 <WM__UpdateChildPositions+0xda>
 800b6e2:	b112      	cbz	r2, 800b6ea <WM__UpdateChildPositions+0xe0>
 800b6e4:	4620      	mov	r0, r4
 800b6e6:	f000 fac1 	bl	800bc6c <WM_ResizeWindow>
 800b6ea:	a806      	add	r0, sp, #24
 800b6ec:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800b6f0:	6a1c      	ldr	r4, [r3, #32]
 800b6f2:	f007 f94b 	bl	801298c <GUI_ALLOC_UnlockH>
 800b6f6:	e78f      	b.n	800b618 <WM__UpdateChildPositions+0xe>
 800b6f8:	b007      	add	sp, #28
 800b6fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b6fe <WM__Screen2Client>:
 800b6fe:	f9b0 3000 	ldrsh.w	r3, [r0]
 800b702:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b706:	4608      	mov	r0, r1
 800b708:	4252      	negs	r2, r2
 800b70a:	4259      	negs	r1, r3
 800b70c:	f006 b8a2 	b.w	8011854 <GUI_MoveRect>

0800b710 <WM__IsEnabled>:
 800b710:	b508      	push	{r3, lr}
 800b712:	f007 f923 	bl	801295c <GUI_ALLOC_h2p>
 800b716:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800b718:	f080 0010 	eor.w	r0, r0, #16
 800b71c:	f3c0 1000 	ubfx	r0, r0, #4, #1
 800b720:	bd08      	pop	{r3, pc}

0800b722 <WM__IsChild>:
 800b722:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b724:	460d      	mov	r5, r1
 800b726:	4604      	mov	r4, r0
 800b728:	b160      	cbz	r0, 800b744 <WM__IsChild+0x22>
 800b72a:	f007 f921 	bl	8012970 <GUI_ALLOC_LockH>
 800b72e:	9001      	str	r0, [sp, #4]
 800b730:	b120      	cbz	r0, 800b73c <WM__IsChild+0x1a>
 800b732:	6984      	ldr	r4, [r0, #24]
 800b734:	1b63      	subs	r3, r4, r5
 800b736:	425c      	negs	r4, r3
 800b738:	415c      	adcs	r4, r3
 800b73a:	e000      	b.n	800b73e <WM__IsChild+0x1c>
 800b73c:	4604      	mov	r4, r0
 800b73e:	a801      	add	r0, sp, #4
 800b740:	f007 f924 	bl	801298c <GUI_ALLOC_UnlockH>
 800b744:	4620      	mov	r0, r4
 800b746:	b003      	add	sp, #12
 800b748:	bd30      	pop	{r4, r5, pc}

0800b74a <WM__IsAncestor>:
 800b74a:	b510      	push	{r4, lr}
 800b74c:	460c      	mov	r4, r1
 800b74e:	b908      	cbnz	r0, 800b754 <WM__IsAncestor+0xa>
 800b750:	2000      	movs	r0, #0
 800b752:	bd10      	pop	{r4, pc}
 800b754:	2900      	cmp	r1, #0
 800b756:	d0fb      	beq.n	800b750 <WM__IsAncestor+0x6>
 800b758:	f007 f900 	bl	801295c <GUI_ALLOC_h2p>
 800b75c:	6980      	ldr	r0, [r0, #24]
 800b75e:	42a0      	cmp	r0, r4
 800b760:	d002      	beq.n	800b768 <WM__IsAncestor+0x1e>
 800b762:	2800      	cmp	r0, #0
 800b764:	d1f8      	bne.n	800b758 <WM__IsAncestor+0xe>
 800b766:	e7f3      	b.n	800b750 <WM__IsAncestor+0x6>
 800b768:	2001      	movs	r0, #1
 800b76a:	bd10      	pop	{r4, pc}

0800b76c <WM__IsAncestorOrSelf>:
 800b76c:	4288      	cmp	r0, r1
 800b76e:	d001      	beq.n	800b774 <WM__IsAncestorOrSelf+0x8>
 800b770:	f7ff bfeb 	b.w	800b74a <WM__IsAncestor>
 800b774:	2001      	movs	r0, #1
 800b776:	4770      	bx	lr

0800b778 <_cbTimer>:
 800b778:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b77a:	4604      	mov	r4, r0
 800b77c:	2100      	movs	r1, #0
 800b77e:	4668      	mov	r0, sp
 800b780:	2210      	movs	r2, #16
 800b782:	f00e fdd2 	bl	801a32a <memset>
 800b786:	6860      	ldr	r0, [r4, #4]
 800b788:	b150      	cbz	r0, 800b7a0 <_cbTimer+0x28>
 800b78a:	f007 f8e7 	bl	801295c <GUI_ALLOC_h2p>
 800b78e:	f240 1313 	movw	r3, #275	; 0x113
 800b792:	6840      	ldr	r0, [r0, #4]
 800b794:	9300      	str	r3, [sp, #0]
 800b796:	4669      	mov	r1, sp
 800b798:	6863      	ldr	r3, [r4, #4]
 800b79a:	9303      	str	r3, [sp, #12]
 800b79c:	f001 f9de 	bl	800cb5c <WM_SendMessage>
 800b7a0:	b004      	add	sp, #16
 800b7a2:	bd10      	pop	{r4, pc}

0800b7a4 <WM_DeleteTimer>:
 800b7a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b7a6:	4605      	mov	r5, r0
 800b7a8:	b168      	cbz	r0, 800b7c6 <WM_DeleteTimer+0x22>
 800b7aa:	f007 f8e1 	bl	8012970 <GUI_ALLOC_LockH>
 800b7ae:	ac02      	add	r4, sp, #8
 800b7b0:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b7b4:	6800      	ldr	r0, [r0, #0]
 800b7b6:	f005 fa75 	bl	8010ca4 <GUI_TIMER_Delete>
 800b7ba:	4620      	mov	r0, r4
 800b7bc:	f007 f8e6 	bl	801298c <GUI_ALLOC_UnlockH>
 800b7c0:	4628      	mov	r0, r5
 800b7c2:	f007 f90f 	bl	80129e4 <GUI_ALLOC_Free>
 800b7c6:	b003      	add	sp, #12
 800b7c8:	bd30      	pop	{r4, r5, pc}

0800b7ca <WM__DeleteAssocTimer>:
 800b7ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b7cc:	4605      	mov	r5, r0
 800b7ce:	a801      	add	r0, sp, #4
 800b7d0:	f005 f9e6 	bl	8010ba0 <GUI_TIMER__GetFirstTimer>
 800b7d4:	4604      	mov	r4, r0
 800b7d6:	b1dc      	cbz	r4, 800b810 <WM__DeleteAssocTimer+0x46>
 800b7d8:	4620      	mov	r0, r4
 800b7da:	2101      	movs	r1, #1
 800b7dc:	f005 fabd 	bl	8010d5a <GUI_TIMER_GetFlag>
 800b7e0:	9b01      	ldr	r3, [sp, #4]
 800b7e2:	b183      	cbz	r3, 800b806 <WM__DeleteAssocTimer+0x3c>
 800b7e4:	b178      	cbz	r0, 800b806 <WM__DeleteAssocTimer+0x3c>
 800b7e6:	4618      	mov	r0, r3
 800b7e8:	f007 f8b8 	bl	801295c <GUI_ALLOC_h2p>
 800b7ec:	6843      	ldr	r3, [r0, #4]
 800b7ee:	42ab      	cmp	r3, r5
 800b7f0:	d109      	bne.n	800b806 <WM__DeleteAssocTimer+0x3c>
 800b7f2:	4620      	mov	r0, r4
 800b7f4:	a901      	add	r1, sp, #4
 800b7f6:	9e01      	ldr	r6, [sp, #4]
 800b7f8:	f005 f9ea 	bl	8010bd0 <GUI_TIMER__GetNextTimerLin>
 800b7fc:	4604      	mov	r4, r0
 800b7fe:	4630      	mov	r0, r6
 800b800:	f7ff ffd0 	bl	800b7a4 <WM_DeleteTimer>
 800b804:	e7e7      	b.n	800b7d6 <WM__DeleteAssocTimer+0xc>
 800b806:	4620      	mov	r0, r4
 800b808:	a901      	add	r1, sp, #4
 800b80a:	f005 f9e1 	bl	8010bd0 <GUI_TIMER__GetNextTimerLin>
 800b80e:	e7e1      	b.n	800b7d4 <WM__DeleteAssocTimer+0xa>
 800b810:	b002      	add	sp, #8
 800b812:	bd70      	pop	{r4, r5, r6, pc}

0800b814 <WM_CreateTimer>:
 800b814:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b818:	4680      	mov	r8, r0
 800b81a:	200c      	movs	r0, #12
 800b81c:	460f      	mov	r7, r1
 800b81e:	4616      	mov	r6, r2
 800b820:	f007 fb13 	bl	8012e4a <GUI_ALLOC_AllocZero>
 800b824:	4604      	mov	r4, r0
 800b826:	b1f0      	cbz	r0, 800b866 <WM_CreateTimer+0x52>
 800b828:	f005 faac 	bl	8010d84 <GUI_GetTime>
 800b82c:	4622      	mov	r2, r4
 800b82e:	1981      	adds	r1, r0, r6
 800b830:	2301      	movs	r3, #1
 800b832:	480f      	ldr	r0, [pc, #60]	; (800b870 <WM_CreateTimer+0x5c>)
 800b834:	f005 f9e8 	bl	8010c08 <GUI_TIMER_Create>
 800b838:	4605      	mov	r5, r0
 800b83a:	4620      	mov	r0, r4
 800b83c:	b185      	cbz	r5, 800b860 <WM_CreateTimer+0x4c>
 800b83e:	f007 f897 	bl	8012970 <GUI_ALLOC_LockH>
 800b842:	4603      	mov	r3, r0
 800b844:	a802      	add	r0, sp, #8
 800b846:	f8c3 8004 	str.w	r8, [r3, #4]
 800b84a:	f840 3d04 	str.w	r3, [r0, #-4]!
 800b84e:	609f      	str	r7, [r3, #8]
 800b850:	601d      	str	r5, [r3, #0]
 800b852:	f007 f89b 	bl	801298c <GUI_ALLOC_UnlockH>
 800b856:	4628      	mov	r0, r5
 800b858:	4631      	mov	r1, r6
 800b85a:	f005 fa57 	bl	8010d0c <GUI_TIMER_SetPeriod>
 800b85e:	e002      	b.n	800b866 <WM_CreateTimer+0x52>
 800b860:	f007 f8c0 	bl	80129e4 <GUI_ALLOC_Free>
 800b864:	462c      	mov	r4, r5
 800b866:	4620      	mov	r0, r4
 800b868:	b002      	add	sp, #8
 800b86a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b86e:	bf00      	nop
 800b870:	0800b779 	.word	0x0800b779

0800b874 <WM_RestartTimer>:
 800b874:	b513      	push	{r0, r1, r4, lr}
 800b876:	460c      	mov	r4, r1
 800b878:	b180      	cbz	r0, 800b89c <WM_RestartTimer+0x28>
 800b87a:	f007 f879 	bl	8012970 <GUI_ALLOC_LockH>
 800b87e:	9001      	str	r0, [sp, #4]
 800b880:	b11c      	cbz	r4, 800b88a <WM_RestartTimer+0x16>
 800b882:	6800      	ldr	r0, [r0, #0]
 800b884:	4621      	mov	r1, r4
 800b886:	f005 fa41 	bl	8010d0c <GUI_TIMER_SetPeriod>
 800b88a:	ac02      	add	r4, sp, #8
 800b88c:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 800b890:	6818      	ldr	r0, [r3, #0]
 800b892:	f005 fa49 	bl	8010d28 <GUI_TIMER_Restart>
 800b896:	4620      	mov	r0, r4
 800b898:	f007 f878 	bl	801298c <GUI_ALLOC_UnlockH>
 800b89c:	b002      	add	sp, #8
 800b89e:	bd10      	pop	{r4, pc}

0800b8a0 <WM_InvalidateWindowAndDescs>:
 800b8a0:	b510      	push	{r4, lr}
 800b8a2:	4604      	mov	r4, r0
 800b8a4:	b170      	cbz	r0, 800b8c4 <WM_InvalidateWindowAndDescs+0x24>
 800b8a6:	f001 f9b0 	bl	800cc0a <WM_InvalidateWindow>
 800b8aa:	4620      	mov	r0, r4
 800b8ac:	f000 fbec 	bl	800c088 <WM_GetFirstChild>
 800b8b0:	4604      	mov	r4, r0
 800b8b2:	b13c      	cbz	r4, 800b8c4 <WM_InvalidateWindowAndDescs+0x24>
 800b8b4:	4620      	mov	r0, r4
 800b8b6:	f7ff fff3 	bl	800b8a0 <WM_InvalidateWindowAndDescs>
 800b8ba:	4620      	mov	r0, r4
 800b8bc:	f007 f84e 	bl	801295c <GUI_ALLOC_h2p>
 800b8c0:	6a04      	ldr	r4, [r0, #32]
 800b8c2:	e7f6      	b.n	800b8b2 <WM_InvalidateWindowAndDescs+0x12>
 800b8c4:	bd10      	pop	{r4, pc}

0800b8c6 <WM_ShowWindow>:
 800b8c6:	b513      	push	{r0, r1, r4, lr}
 800b8c8:	4604      	mov	r4, r0
 800b8ca:	b170      	cbz	r0, 800b8ea <WM_ShowWindow+0x24>
 800b8cc:	f007 f850 	bl	8012970 <GUI_ALLOC_LockH>
 800b8d0:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800b8d2:	9001      	str	r0, [sp, #4]
 800b8d4:	0793      	lsls	r3, r2, #30
 800b8d6:	d405      	bmi.n	800b8e4 <WM_ShowWindow+0x1e>
 800b8d8:	f042 0202 	orr.w	r2, r2, #2
 800b8dc:	6282      	str	r2, [r0, #40]	; 0x28
 800b8de:	4620      	mov	r0, r4
 800b8e0:	f7ff ffde 	bl	800b8a0 <WM_InvalidateWindowAndDescs>
 800b8e4:	a801      	add	r0, sp, #4
 800b8e6:	f007 f851 	bl	801298c <GUI_ALLOC_UnlockH>
 800b8ea:	b002      	add	sp, #8
 800b8ec:	bd10      	pop	{r4, pc}
	...

0800b8f0 <WM_SetUserClipRect>:
 800b8f0:	4b04      	ldr	r3, [pc, #16]	; (800b904 <WM_SetUserClipRect+0x14>)
 800b8f2:	b510      	push	{r4, lr}
 800b8f4:	681b      	ldr	r3, [r3, #0]
 800b8f6:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 800b8f8:	6458      	str	r0, [r3, #68]	; 0x44
 800b8fa:	f000 ffdf 	bl	800c8bc <WM__ActivateClipRect>
 800b8fe:	4620      	mov	r0, r4
 800b900:	bd10      	pop	{r4, pc}
 800b902:	bf00      	nop
 800b904:	2000016c 	.word	0x2000016c

0800b908 <WM_SetHasTrans>:
 800b908:	b513      	push	{r0, r1, r4, lr}
 800b90a:	4604      	mov	r4, r0
 800b90c:	b1b8      	cbz	r0, 800b93e <WM_SetHasTrans+0x36>
 800b90e:	f007 f82f 	bl	8012970 <GUI_ALLOC_LockH>
 800b912:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b914:	9001      	str	r0, [sp, #4]
 800b916:	07db      	lsls	r3, r3, #31
 800b918:	d40e      	bmi.n	800b938 <WM_SetHasTrans+0x30>
 800b91a:	4620      	mov	r0, r4
 800b91c:	f009 fad0 	bl	8014ec0 <WM_ValidateWindow>
 800b920:	9b01      	ldr	r3, [sp, #4]
 800b922:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800b924:	f042 0201 	orr.w	r2, r2, #1
 800b928:	629a      	str	r2, [r3, #40]	; 0x28
 800b92a:	4b06      	ldr	r3, [pc, #24]	; (800b944 <WM_SetHasTrans+0x3c>)
 800b92c:	681a      	ldr	r2, [r3, #0]
 800b92e:	4620      	mov	r0, r4
 800b930:	3201      	adds	r2, #1
 800b932:	601a      	str	r2, [r3, #0]
 800b934:	f001 f969 	bl	800cc0a <WM_InvalidateWindow>
 800b938:	a801      	add	r0, sp, #4
 800b93a:	f007 f827 	bl	801298c <GUI_ALLOC_UnlockH>
 800b93e:	b002      	add	sp, #8
 800b940:	bd10      	pop	{r4, pc}
 800b942:	bf00      	nop
 800b944:	20019c4c 	.word	0x20019c4c

0800b948 <WM_GetHasTrans>:
 800b948:	b508      	push	{r3, lr}
 800b94a:	b128      	cbz	r0, 800b958 <WM_GetHasTrans+0x10>
 800b94c:	f007 f806 	bl	801295c <GUI_ALLOC_h2p>
 800b950:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800b952:	f000 0001 	and.w	r0, r0, #1
 800b956:	bd08      	pop	{r3, pc}
 800b958:	bd08      	pop	{r3, pc}

0800b95a <WM_SetSize>:
 800b95a:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 800b95e:	460e      	mov	r6, r1
 800b960:	4690      	mov	r8, r2
 800b962:	4607      	mov	r7, r0
 800b964:	b1d0      	cbz	r0, 800b99c <WM_SetSize+0x42>
 800b966:	f007 f803 	bl	8012970 <GUI_ALLOC_LockH>
 800b96a:	4603      	mov	r3, r0
 800b96c:	a802      	add	r0, sp, #8
 800b96e:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800b972:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b976:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 800b97a:	f840 3d04 	str.w	r3, [r0, #-4]!
 800b97e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b982:	1a8a      	subs	r2, r1, r2
 800b984:	1aed      	subs	r5, r5, r3
 800b986:	43d2      	mvns	r2, r2
 800b988:	43ed      	mvns	r5, r5
 800b98a:	4416      	add	r6, r2
 800b98c:	4445      	add	r5, r8
 800b98e:	f006 fffd 	bl	801298c <GUI_ALLOC_UnlockH>
 800b992:	4638      	mov	r0, r7
 800b994:	4631      	mov	r1, r6
 800b996:	462a      	mov	r2, r5
 800b998:	f000 f968 	bl	800bc6c <WM_ResizeWindow>
 800b99c:	b003      	add	sp, #12
 800b99e:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

0800b9a2 <_GetPrevChild>:
 800b9a2:	b510      	push	{r4, lr}
 800b9a4:	4604      	mov	r4, r0
 800b9a6:	b918      	cbnz	r0, 800b9b0 <_GetPrevChild+0xe>
 800b9a8:	4620      	mov	r0, r4
 800b9aa:	f009 fa60 	bl	8014e6e <WM__GetLastSibling>
 800b9ae:	e003      	b.n	800b9b8 <_GetPrevChild+0x16>
 800b9b0:	f009 fa4a 	bl	8014e48 <WM__GetPrevSibling>
 800b9b4:	2800      	cmp	r0, #0
 800b9b6:	d0f7      	beq.n	800b9a8 <_GetPrevChild+0x6>
 800b9b8:	42a0      	cmp	r0, r4
 800b9ba:	bf08      	it	eq
 800b9bc:	2000      	moveq	r0, #0
 800b9be:	bd10      	pop	{r4, pc}

0800b9c0 <WM_SetFocusOnPrevChild>:
 800b9c0:	b538      	push	{r3, r4, r5, lr}
 800b9c2:	4604      	mov	r4, r0
 800b9c4:	b1b0      	cbz	r0, 800b9f4 <WM_SetFocusOnPrevChild+0x34>
 800b9c6:	f009 fa5f 	bl	8014e88 <WM__GetFocussedChild>
 800b9ca:	f7ff ffea 	bl	800b9a2 <_GetPrevChild>
 800b9ce:	4605      	mov	r5, r0
 800b9d0:	4604      	mov	r4, r0
 800b9d2:	4620      	mov	r0, r4
 800b9d4:	f000 fabf 	bl	800bf56 <WM_IsFocussable>
 800b9d8:	b930      	cbnz	r0, 800b9e8 <WM_SetFocusOnPrevChild+0x28>
 800b9da:	b12c      	cbz	r4, 800b9e8 <WM_SetFocusOnPrevChild+0x28>
 800b9dc:	4620      	mov	r0, r4
 800b9de:	f7ff ffe0 	bl	800b9a2 <_GetPrevChild>
 800b9e2:	42a8      	cmp	r0, r5
 800b9e4:	4604      	mov	r4, r0
 800b9e6:	d1f4      	bne.n	800b9d2 <WM_SetFocusOnPrevChild+0x12>
 800b9e8:	4620      	mov	r0, r4
 800b9ea:	f000 f84b 	bl	800ba84 <WM_SetFocus>
 800b9ee:	2800      	cmp	r0, #0
 800b9f0:	bf18      	it	ne
 800b9f2:	2400      	movne	r4, #0
 800b9f4:	4620      	mov	r0, r4
 800b9f6:	bd38      	pop	{r3, r4, r5, pc}

0800b9f8 <_GetNextChild>:
 800b9f8:	b538      	push	{r3, r4, r5, lr}
 800b9fa:	4605      	mov	r5, r0
 800b9fc:	460c      	mov	r4, r1
 800b9fe:	b921      	cbnz	r1, 800ba0a <_GetNextChild+0x12>
 800ba00:	4628      	mov	r0, r5
 800ba02:	f006 ffab 	bl	801295c <GUI_ALLOC_h2p>
 800ba06:	69c0      	ldr	r0, [r0, #28]
 800ba08:	e005      	b.n	800ba16 <_GetNextChild+0x1e>
 800ba0a:	4608      	mov	r0, r1
 800ba0c:	f006 ffa6 	bl	801295c <GUI_ALLOC_h2p>
 800ba10:	6a00      	ldr	r0, [r0, #32]
 800ba12:	2800      	cmp	r0, #0
 800ba14:	d0f4      	beq.n	800ba00 <_GetNextChild+0x8>
 800ba16:	42a0      	cmp	r0, r4
 800ba18:	bf08      	it	eq
 800ba1a:	2000      	moveq	r0, #0
 800ba1c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800ba20 <WM_SetFocusOnNextChild>:
 800ba20:	b570      	push	{r4, r5, r6, lr}
 800ba22:	4605      	mov	r5, r0
 800ba24:	b340      	cbz	r0, 800ba78 <WM_SetFocusOnNextChild+0x58>
 800ba26:	f009 fa2f 	bl	8014e88 <WM__GetFocussedChild>
 800ba2a:	4601      	mov	r1, r0
 800ba2c:	4628      	mov	r0, r5
 800ba2e:	f7ff ffe3 	bl	800b9f8 <_GetNextChild>
 800ba32:	4606      	mov	r6, r0
 800ba34:	4604      	mov	r4, r0
 800ba36:	4620      	mov	r0, r4
 800ba38:	f000 fa8d 	bl	800bf56 <WM_IsFocussable>
 800ba3c:	b938      	cbnz	r0, 800ba4e <WM_SetFocusOnNextChild+0x2e>
 800ba3e:	b13c      	cbz	r4, 800ba50 <WM_SetFocusOnNextChild+0x30>
 800ba40:	4621      	mov	r1, r4
 800ba42:	4628      	mov	r0, r5
 800ba44:	f7ff ffd8 	bl	800b9f8 <_GetNextChild>
 800ba48:	42b0      	cmp	r0, r6
 800ba4a:	4604      	mov	r4, r0
 800ba4c:	d1f3      	bne.n	800ba36 <WM_SetFocusOnNextChild+0x16>
 800ba4e:	b90c      	cbnz	r4, 800ba54 <WM_SetFocusOnNextChild+0x34>
 800ba50:	2400      	movs	r4, #0
 800ba52:	e012      	b.n	800ba7a <WM_SetFocusOnNextChild+0x5a>
 800ba54:	4d0a      	ldr	r5, [pc, #40]	; (800ba80 <WM_SetFocusOnNextChild+0x60>)
 800ba56:	4620      	mov	r0, r4
 800ba58:	682e      	ldr	r6, [r5, #0]
 800ba5a:	f001 f8d9 	bl	800cc10 <WM__GetTopLevelLayer>
 800ba5e:	3001      	adds	r0, #1
 800ba60:	d00b      	beq.n	800ba7a <WM_SetFocusOnNextChild+0x5a>
 800ba62:	4620      	mov	r0, r4
 800ba64:	f001 f8d4 	bl	800cc10 <WM__GetTopLevelLayer>
 800ba68:	6028      	str	r0, [r5, #0]
 800ba6a:	4620      	mov	r0, r4
 800ba6c:	f000 f80a 	bl	800ba84 <WM_SetFocus>
 800ba70:	602e      	str	r6, [r5, #0]
 800ba72:	2800      	cmp	r0, #0
 800ba74:	d1ec      	bne.n	800ba50 <WM_SetFocusOnNextChild+0x30>
 800ba76:	e000      	b.n	800ba7a <WM_SetFocusOnNextChild+0x5a>
 800ba78:	4604      	mov	r4, r0
 800ba7a:	4620      	mov	r0, r4
 800ba7c:	bd70      	pop	{r4, r5, r6, pc}
 800ba7e:	bf00      	nop
 800ba80:	20019c24 	.word	0x20019c24

0800ba84 <WM_SetFocus>:
 800ba84:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba86:	b087      	sub	sp, #28
 800ba88:	4604      	mov	r4, r0
 800ba8a:	2100      	movs	r1, #0
 800ba8c:	a802      	add	r0, sp, #8
 800ba8e:	2210      	movs	r2, #16
 800ba90:	f00e fc4b 	bl	801a32a <memset>
 800ba94:	2c00      	cmp	r4, #0
 800ba96:	d03a      	beq.n	800bb0e <WM_SetFocus+0x8a>
 800ba98:	4b1f      	ldr	r3, [pc, #124]	; (800bb18 <WM_SetFocus+0x94>)
 800ba9a:	4a20      	ldr	r2, [pc, #128]	; (800bb1c <WM_SetFocus+0x98>)
 800ba9c:	6819      	ldr	r1, [r3, #0]
 800ba9e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800baa2:	4284      	cmp	r4, r0
 800baa4:	4616      	mov	r6, r2
 800baa6:	461f      	mov	r7, r3
 800baa8:	d031      	beq.n	800bb0e <WM_SetFocus+0x8a>
 800baaa:	231e      	movs	r3, #30
 800baac:	e88d 0011 	stmia.w	sp, {r0, r4}
 800bab0:	9302      	str	r3, [sp, #8]
 800bab2:	b110      	cbz	r0, 800baba <WM_SetFocus+0x36>
 800bab4:	a902      	add	r1, sp, #8
 800bab6:	f009 f9a9 	bl	8014e0c <WM__SendMessage>
 800baba:	2301      	movs	r3, #1
 800babc:	4620      	mov	r0, r4
 800babe:	a902      	add	r1, sp, #8
 800bac0:	9305      	str	r3, [sp, #20]
 800bac2:	f009 f9a3 	bl	8014e0c <WM__SendMessage>
 800bac6:	9d05      	ldr	r5, [sp, #20]
 800bac8:	bb15      	cbnz	r5, 800bb10 <WM_SetFocus+0x8c>
 800baca:	683b      	ldr	r3, [r7, #0]
 800bacc:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 800bad0:	4620      	mov	r0, r4
 800bad2:	f000 faa7 	bl	800c024 <WM_GetParent>
 800bad6:	4604      	mov	r4, r0
 800bad8:	b138      	cbz	r0, 800baea <WM_SetFocus+0x66>
 800bada:	2320      	movs	r3, #32
 800badc:	9302      	str	r3, [sp, #8]
 800bade:	a902      	add	r1, sp, #8
 800bae0:	ab00      	add	r3, sp, #0
 800bae2:	9305      	str	r3, [sp, #20]
 800bae4:	f009 f992 	bl	8014e0c <WM__SendMessage>
 800bae8:	e7f2      	b.n	800bad0 <WM_SetFocus+0x4c>
 800baea:	9c00      	ldr	r4, [sp, #0]
 800baec:	4620      	mov	r0, r4
 800baee:	f000 fa27 	bl	800bf40 <WM_IsWindow>
 800baf2:	b168      	cbz	r0, 800bb10 <WM_SetFocus+0x8c>
 800baf4:	4620      	mov	r0, r4
 800baf6:	f000 fa95 	bl	800c024 <WM_GetParent>
 800bafa:	4604      	mov	r4, r0
 800bafc:	b140      	cbz	r0, 800bb10 <WM_SetFocus+0x8c>
 800bafe:	2320      	movs	r3, #32
 800bb00:	9302      	str	r3, [sp, #8]
 800bb02:	a902      	add	r1, sp, #8
 800bb04:	ab00      	add	r3, sp, #0
 800bb06:	9305      	str	r3, [sp, #20]
 800bb08:	f009 f980 	bl	8014e0c <WM__SendMessage>
 800bb0c:	e7f2      	b.n	800baf4 <WM_SetFocus+0x70>
 800bb0e:	2501      	movs	r5, #1
 800bb10:	4628      	mov	r0, r5
 800bb12:	b007      	add	sp, #28
 800bb14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb16:	bf00      	nop
 800bb18:	20019c24 	.word	0x20019c24
 800bb1c:	20019c14 	.word	0x20019c14

0800bb20 <WM__ReleaseCapture>:
 800bb20:	b530      	push	{r4, r5, lr}
 800bb22:	4d0a      	ldr	r5, [pc, #40]	; (800bb4c <WM__ReleaseCapture+0x2c>)
 800bb24:	4c0a      	ldr	r4, [pc, #40]	; (800bb50 <WM__ReleaseCapture+0x30>)
 800bb26:	682b      	ldr	r3, [r5, #0]
 800bb28:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800bb2c:	b085      	sub	sp, #20
 800bb2e:	b150      	cbz	r0, 800bb46 <WM__ReleaseCapture+0x26>
 800bb30:	a904      	add	r1, sp, #16
 800bb32:	2318      	movs	r3, #24
 800bb34:	f841 3d10 	str.w	r3, [r1, #-16]!
 800bb38:	4669      	mov	r1, sp
 800bb3a:	f009 f967 	bl	8014e0c <WM__SendMessage>
 800bb3e:	682b      	ldr	r3, [r5, #0]
 800bb40:	2200      	movs	r2, #0
 800bb42:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 800bb46:	b005      	add	sp, #20
 800bb48:	bd30      	pop	{r4, r5, pc}
 800bb4a:	bf00      	nop
 800bb4c:	20019c24 	.word	0x20019c24
 800bb50:	20019c40 	.word	0x20019c40

0800bb54 <WM_SetCapture>:
 800bb54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb56:	4b09      	ldr	r3, [pc, #36]	; (800bb7c <WM_SetCapture+0x28>)
 800bb58:	4a09      	ldr	r2, [pc, #36]	; (800bb80 <WM_SetCapture+0x2c>)
 800bb5a:	4604      	mov	r4, r0
 800bb5c:	6818      	ldr	r0, [r3, #0]
 800bb5e:	460f      	mov	r7, r1
 800bb60:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 800bb64:	42a1      	cmp	r1, r4
 800bb66:	4615      	mov	r5, r2
 800bb68:	461e      	mov	r6, r3
 800bb6a:	d001      	beq.n	800bb70 <WM_SetCapture+0x1c>
 800bb6c:	f7ff ffd8 	bl	800bb20 <WM__ReleaseCapture>
 800bb70:	6833      	ldr	r3, [r6, #0]
 800bb72:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 800bb76:	4b03      	ldr	r3, [pc, #12]	; (800bb84 <WM_SetCapture+0x30>)
 800bb78:	701f      	strb	r7, [r3, #0]
 800bb7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bb7c:	20019c24 	.word	0x20019c24
 800bb80:	20019c40 	.word	0x20019c40
 800bb84:	20019c28 	.word	0x20019c28

0800bb88 <WM_ReleaseCapture>:
 800bb88:	f7ff bfca 	b.w	800bb20 <WM__ReleaseCapture>

0800bb8c <WM_SendMessageNoPara>:
 800bb8c:	f009 b92a 	b.w	8014de4 <WM__SendMessageNoPara>

0800bb90 <WM__IsInWindow>:
 800bb90:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb92:	f013 0302 	ands.w	r3, r3, #2
 800bb96:	d012      	beq.n	800bbbe <WM__IsInWindow+0x2e>
 800bb98:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bb9c:	4299      	cmp	r1, r3
 800bb9e:	db10      	blt.n	800bbc2 <WM__IsInWindow+0x32>
 800bba0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bba4:	4299      	cmp	r1, r3
 800bba6:	dc0c      	bgt.n	800bbc2 <WM__IsInWindow+0x32>
 800bba8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800bbac:	429a      	cmp	r2, r3
 800bbae:	db08      	blt.n	800bbc2 <WM__IsInWindow+0x32>
 800bbb0:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800bbb4:	4282      	cmp	r2, r0
 800bbb6:	bfcc      	ite	gt
 800bbb8:	2000      	movgt	r0, #0
 800bbba:	2001      	movle	r0, #1
 800bbbc:	4770      	bx	lr
 800bbbe:	4618      	mov	r0, r3
 800bbc0:	4770      	bx	lr
 800bbc2:	2000      	movs	r0, #0
 800bbc4:	4770      	bx	lr

0800bbc6 <_Screen2hWin>:
 800bbc6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800bbca:	460e      	mov	r6, r1
 800bbcc:	4617      	mov	r7, r2
 800bbce:	4698      	mov	r8, r3
 800bbd0:	4605      	mov	r5, r0
 800bbd2:	b320      	cbz	r0, 800bc1e <_Screen2hWin+0x58>
 800bbd4:	f006 fecc 	bl	8012970 <GUI_ALLOC_LockH>
 800bbd8:	4639      	mov	r1, r7
 800bbda:	4642      	mov	r2, r8
 800bbdc:	4604      	mov	r4, r0
 800bbde:	9001      	str	r0, [sp, #4]
 800bbe0:	f7ff ffd6 	bl	800bb90 <WM__IsInWindow>
 800bbe4:	4681      	mov	r9, r0
 800bbe6:	b920      	cbnz	r0, 800bbf2 <_Screen2hWin+0x2c>
 800bbe8:	a801      	add	r0, sp, #4
 800bbea:	f006 fecf 	bl	801298c <GUI_ALLOC_UnlockH>
 800bbee:	4648      	mov	r0, r9
 800bbf0:	e016      	b.n	800bc20 <_Screen2hWin+0x5a>
 800bbf2:	69e4      	ldr	r4, [r4, #28]
 800bbf4:	b91c      	cbnz	r4, 800bbfe <_Screen2hWin+0x38>
 800bbf6:	a801      	add	r0, sp, #4
 800bbf8:	f006 fec8 	bl	801298c <GUI_ALLOC_UnlockH>
 800bbfc:	e00f      	b.n	800bc1e <_Screen2hWin+0x58>
 800bbfe:	42b4      	cmp	r4, r6
 800bc00:	d0f9      	beq.n	800bbf6 <_Screen2hWin+0x30>
 800bc02:	4620      	mov	r0, r4
 800bc04:	4631      	mov	r1, r6
 800bc06:	463a      	mov	r2, r7
 800bc08:	4643      	mov	r3, r8
 800bc0a:	f7ff ffdc 	bl	800bbc6 <_Screen2hWin>
 800bc0e:	2800      	cmp	r0, #0
 800bc10:	bf18      	it	ne
 800bc12:	4605      	movne	r5, r0
 800bc14:	4620      	mov	r0, r4
 800bc16:	f006 fea1 	bl	801295c <GUI_ALLOC_h2p>
 800bc1a:	6a04      	ldr	r4, [r0, #32]
 800bc1c:	e7ea      	b.n	800bbf4 <_Screen2hWin+0x2e>
 800bc1e:	4628      	mov	r0, r5
 800bc20:	b003      	add	sp, #12
 800bc22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800bc28 <WM_Screen2hWin>:
 800bc28:	b570      	push	{r4, r5, r6, lr}
 800bc2a:	4b06      	ldr	r3, [pc, #24]	; (800bc44 <WM_Screen2hWin+0x1c>)
 800bc2c:	460c      	mov	r4, r1
 800bc2e:	4605      	mov	r5, r0
 800bc30:	6818      	ldr	r0, [r3, #0]
 800bc32:	f000 fa53 	bl	800c0dc <WM_GetDesktopWindowEx>
 800bc36:	462a      	mov	r2, r5
 800bc38:	4623      	mov	r3, r4
 800bc3a:	2100      	movs	r1, #0
 800bc3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc40:	f7ff bfc1 	b.w	800bbc6 <_Screen2hWin>
 800bc44:	20019c24 	.word	0x20019c24

0800bc48 <WM_Screen2hWinEx>:
 800bc48:	b570      	push	{r4, r5, r6, lr}
 800bc4a:	4b07      	ldr	r3, [pc, #28]	; (800bc68 <WM_Screen2hWinEx+0x20>)
 800bc4c:	460d      	mov	r5, r1
 800bc4e:	4614      	mov	r4, r2
 800bc50:	4606      	mov	r6, r0
 800bc52:	6818      	ldr	r0, [r3, #0]
 800bc54:	f000 fa42 	bl	800c0dc <WM_GetDesktopWindowEx>
 800bc58:	4631      	mov	r1, r6
 800bc5a:	462a      	mov	r2, r5
 800bc5c:	4623      	mov	r3, r4
 800bc5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc62:	f7ff bfb0 	b.w	800bbc6 <_Screen2hWin>
 800bc66:	bf00      	nop
 800bc68:	20019c24 	.word	0x20019c24

0800bc6c <WM_ResizeWindow>:
 800bc6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc70:	ea51 0302 	orrs.w	r3, r1, r2
 800bc74:	b08a      	sub	sp, #40	; 0x28
 800bc76:	4680      	mov	r8, r0
 800bc78:	460e      	mov	r6, r1
 800bc7a:	4617      	mov	r7, r2
 800bc7c:	d06e      	beq.n	800bd5c <WM_ResizeWindow+0xf0>
 800bc7e:	2800      	cmp	r0, #0
 800bc80:	d06c      	beq.n	800bd5c <WM_ResizeWindow+0xf0>
 800bc82:	f006 fe75 	bl	8012970 <GUI_ALLOC_LockH>
 800bc86:	4603      	mov	r3, r0
 800bc88:	9003      	str	r0, [sp, #12]
 800bc8a:	c803      	ldmia	r0, {r0, r1}
 800bc8c:	ad04      	add	r5, sp, #16
 800bc8e:	ac06      	add	r4, sp, #24
 800bc90:	e885 0003 	stmia.w	r5, {r0, r1}
 800bc94:	e884 0003 	stmia.w	r4, {r0, r1}
 800bc98:	b17e      	cbz	r6, 800bcba <WM_ResizeWindow+0x4e>
 800bc9a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800bc9c:	f402 7220 	and.w	r2, r2, #640	; 0x280
 800bca0:	2a80      	cmp	r2, #128	; 0x80
 800bca2:	d105      	bne.n	800bcb0 <WM_ResizeWindow+0x44>
 800bca4:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800bca8:	1b96      	subs	r6, r2, r6
 800bcaa:	f8ad 6018 	strh.w	r6, [sp, #24]
 800bcae:	e004      	b.n	800bcba <WM_ResizeWindow+0x4e>
 800bcb0:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800bcb4:	4416      	add	r6, r2
 800bcb6:	f8ad 601c 	strh.w	r6, [sp, #28]
 800bcba:	b187      	cbz	r7, 800bcde <WM_ResizeWindow+0x72>
 800bcbc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800bcbe:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 800bcc2:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 800bcc6:	d105      	bne.n	800bcd4 <WM_ResizeWindow+0x68>
 800bcc8:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800bccc:	1bd7      	subs	r7, r2, r7
 800bcce:	f8ad 701a 	strh.w	r7, [sp, #26]
 800bcd2:	e004      	b.n	800bcde <WM_ResizeWindow+0x72>
 800bcd4:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800bcd8:	4417      	add	r7, r2
 800bcda:	f8ad 701e 	strh.w	r7, [sp, #30]
 800bcde:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bce0:	03da      	lsls	r2, r3, #15
 800bce2:	d502      	bpl.n	800bcea <WM_ResizeWindow+0x7e>
 800bce4:	4640      	mov	r0, r8
 800bce6:	f000 fe1d 	bl	800c924 <WM__InvalidateDrawAndDescs>
 800bcea:	e894 0003 	ldmia.w	r4, {r0, r1}
 800bcee:	9b03      	ldr	r3, [sp, #12]
 800bcf0:	e883 0003 	stmia.w	r3, {r0, r1}
 800bcf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bcf6:	079b      	lsls	r3, r3, #30
 800bcf8:	d50a      	bpl.n	800bd10 <WM_ResizeWindow+0xa4>
 800bcfa:	a808      	add	r0, sp, #32
 800bcfc:	4629      	mov	r1, r5
 800bcfe:	4622      	mov	r2, r4
 800bd00:	f005 fdb8 	bl	8011874 <GUI_MergeRect>
 800bd04:	9b03      	ldr	r3, [sp, #12]
 800bd06:	a808      	add	r0, sp, #32
 800bd08:	6999      	ldr	r1, [r3, #24]
 800bd0a:	6a1a      	ldr	r2, [r3, #32]
 800bd0c:	f000 ff0e 	bl	800cb2c <WM__InvalidateRectEx>
 800bd10:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 800bd14:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800bd18:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 800bd1c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 800bd20:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 800bd24:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800bd28:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 800bd2c:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800bd30:	1ae3      	subs	r3, r4, r3
 800bd32:	1a38      	subs	r0, r7, r0
 800bd34:	ac0a      	add	r4, sp, #40	; 0x28
 800bd36:	1aaa      	subs	r2, r5, r2
 800bd38:	9000      	str	r0, [sp, #0]
 800bd3a:	1a71      	subs	r1, r6, r1
 800bd3c:	9803      	ldr	r0, [sp, #12]
 800bd3e:	f7ff fc64 	bl	800b60a <WM__UpdateChildPositions>
 800bd42:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 800bd46:	f101 0008 	add.w	r0, r1, #8
 800bd4a:	f004 fb8d 	bl	8010468 <GUI__IntersectRect>
 800bd4e:	4640      	mov	r0, r8
 800bd50:	2105      	movs	r1, #5
 800bd52:	f000 ff07 	bl	800cb64 <WM__SendMsgNoData>
 800bd56:	4620      	mov	r0, r4
 800bd58:	f006 fe18 	bl	801298c <GUI_ALLOC_UnlockH>
 800bd5c:	b00a      	add	sp, #40	; 0x28
 800bd5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bd62 <WM_NotifyParent>:
 800bd62:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bd64:	2326      	movs	r3, #38	; 0x26
 800bd66:	9103      	str	r1, [sp, #12]
 800bd68:	4669      	mov	r1, sp
 800bd6a:	9300      	str	r3, [sp, #0]
 800bd6c:	f009 faec 	bl	8015348 <WM_SendToParent>
 800bd70:	b005      	add	sp, #20
 800bd72:	f85d fb04 	ldr.w	pc, [sp], #4

0800bd76 <WM_MoveChildTo>:
 800bd76:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bd78:	460f      	mov	r7, r1
 800bd7a:	4616      	mov	r6, r2
 800bd7c:	4605      	mov	r5, r0
 800bd7e:	b320      	cbz	r0, 800bdca <WM_MoveChildTo+0x54>
 800bd80:	f000 f950 	bl	800c024 <WM_GetParent>
 800bd84:	b308      	cbz	r0, 800bdca <WM_MoveChildTo+0x54>
 800bd86:	f006 fdf3 	bl	8012970 <GUI_ALLOC_LockH>
 800bd8a:	9000      	str	r0, [sp, #0]
 800bd8c:	4628      	mov	r0, r5
 800bd8e:	f006 fdef 	bl	8012970 <GUI_ALLOC_LockH>
 800bd92:	ab02      	add	r3, sp, #8
 800bd94:	4604      	mov	r4, r0
 800bd96:	9001      	str	r0, [sp, #4]
 800bd98:	f853 0d08 	ldr.w	r0, [r3, #-8]!
 800bd9c:	f9b4 2000 	ldrsh.w	r2, [r4]
 800bda0:	f9b0 1000 	ldrsh.w	r1, [r0]
 800bda4:	1a8a      	subs	r2, r1, r2
 800bda6:	4417      	add	r7, r2
 800bda8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800bdac:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800bdb0:	4668      	mov	r0, sp
 800bdb2:	1a8a      	subs	r2, r1, r2
 800bdb4:	4416      	add	r6, r2
 800bdb6:	f006 fde9 	bl	801298c <GUI_ALLOC_UnlockH>
 800bdba:	a801      	add	r0, sp, #4
 800bdbc:	f006 fde6 	bl	801298c <GUI_ALLOC_UnlockH>
 800bdc0:	4628      	mov	r0, r5
 800bdc2:	4639      	mov	r1, r7
 800bdc4:	4632      	mov	r2, r6
 800bdc6:	f000 f838 	bl	800be3a <WM__MoveWindow>
 800bdca:	b003      	add	sp, #12
 800bdcc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bdce <_MoveDescendents>:
 800bdce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdd2:	b088      	sub	sp, #32
 800bdd4:	4606      	mov	r6, r0
 800bdd6:	460c      	mov	r4, r1
 800bdd8:	4615      	mov	r5, r2
 800bdda:	a804      	add	r0, sp, #16
 800bddc:	2100      	movs	r1, #0
 800bdde:	2210      	movs	r2, #16
 800bde0:	f00e faa3 	bl	801a32a <memset>
 800bde4:	b336      	cbz	r6, 800be34 <_MoveDescendents+0x66>
 800bde6:	4630      	mov	r0, r6
 800bde8:	f006 fdc2 	bl	8012970 <GUI_ALLOC_LockH>
 800bdec:	4621      	mov	r1, r4
 800bdee:	462a      	mov	r2, r5
 800bdf0:	9001      	str	r0, [sp, #4]
 800bdf2:	f005 fd2f 	bl	8011854 <GUI_MoveRect>
 800bdf6:	9801      	ldr	r0, [sp, #4]
 800bdf8:	4621      	mov	r1, r4
 800bdfa:	3008      	adds	r0, #8
 800bdfc:	462a      	mov	r2, r5
 800bdfe:	f005 fd29 	bl	8011854 <GUI_MoveRect>
 800be02:	a808      	add	r0, sp, #32
 800be04:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 800be08:	f8d2 801c 	ldr.w	r8, [r2, #28]
 800be0c:	6a17      	ldr	r7, [r2, #32]
 800be0e:	f006 fdbd 	bl	801298c <GUI_ALLOC_UnlockH>
 800be12:	4640      	mov	r0, r8
 800be14:	4621      	mov	r1, r4
 800be16:	462a      	mov	r2, r5
 800be18:	f7ff ffd9 	bl	800bdce <_MoveDescendents>
 800be1c:	2303      	movs	r3, #3
 800be1e:	9304      	str	r3, [sp, #16]
 800be20:	4630      	mov	r0, r6
 800be22:	ab02      	add	r3, sp, #8
 800be24:	a904      	add	r1, sp, #16
 800be26:	9307      	str	r3, [sp, #28]
 800be28:	9402      	str	r4, [sp, #8]
 800be2a:	9503      	str	r5, [sp, #12]
 800be2c:	463e      	mov	r6, r7
 800be2e:	f008 ffed 	bl	8014e0c <WM__SendMessage>
 800be32:	e7d7      	b.n	800bde4 <_MoveDescendents+0x16>
 800be34:	b008      	add	sp, #32
 800be36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800be3a <WM__MoveWindow>:
 800be3a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800be3e:	b08b      	sub	sp, #44	; 0x2c
 800be40:	4606      	mov	r6, r0
 800be42:	460d      	mov	r5, r1
 800be44:	4614      	mov	r4, r2
 800be46:	a806      	add	r0, sp, #24
 800be48:	2100      	movs	r1, #0
 800be4a:	2210      	movs	r2, #16
 800be4c:	f00e fa6d 	bl	801a32a <memset>
 800be50:	2e00      	cmp	r6, #0
 800be52:	d043      	beq.n	800bedc <WM__MoveWindow+0xa2>
 800be54:	b90d      	cbnz	r5, 800be5a <WM__MoveWindow+0x20>
 800be56:	2c00      	cmp	r4, #0
 800be58:	d040      	beq.n	800bedc <WM__MoveWindow+0xa2>
 800be5a:	4630      	mov	r0, r6
 800be5c:	f006 fd88 	bl	8012970 <GUI_ALLOC_LockH>
 800be60:	4603      	mov	r3, r0
 800be62:	9001      	str	r0, [sp, #4]
 800be64:	c803      	ldmia	r0, {r0, r1}
 800be66:	f10d 0808 	add.w	r8, sp, #8
 800be6a:	e888 0003 	stmia.w	r8, {r0, r1}
 800be6e:	4622      	mov	r2, r4
 800be70:	4618      	mov	r0, r3
 800be72:	4629      	mov	r1, r5
 800be74:	f005 fcee 	bl	8011854 <GUI_MoveRect>
 800be78:	9801      	ldr	r0, [sp, #4]
 800be7a:	af0a      	add	r7, sp, #40	; 0x28
 800be7c:	4629      	mov	r1, r5
 800be7e:	4622      	mov	r2, r4
 800be80:	3008      	adds	r0, #8
 800be82:	f005 fce7 	bl	8011854 <GUI_MoveRect>
 800be86:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 800be8a:	f8d3 901c 	ldr.w	r9, [r3, #28]
 800be8e:	4638      	mov	r0, r7
 800be90:	f006 fd7c 	bl	801298c <GUI_ALLOC_UnlockH>
 800be94:	4622      	mov	r2, r4
 800be96:	4648      	mov	r0, r9
 800be98:	4629      	mov	r1, r5
 800be9a:	f7ff ff98 	bl	800bdce <_MoveDescendents>
 800be9e:	4630      	mov	r0, r6
 800bea0:	f006 fd66 	bl	8012970 <GUI_ALLOC_LockH>
 800bea4:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800bea6:	9001      	str	r0, [sp, #4]
 800bea8:	0792      	lsls	r2, r2, #30
 800beaa:	d50a      	bpl.n	800bec2 <WM__MoveWindow+0x88>
 800beac:	6981      	ldr	r1, [r0, #24]
 800beae:	b141      	cbz	r1, 800bec2 <WM__MoveWindow+0x88>
 800beb0:	6a02      	ldr	r2, [r0, #32]
 800beb2:	f000 fe26 	bl	800cb02 <WM__InvalidateParent>
 800beb6:	9b01      	ldr	r3, [sp, #4]
 800beb8:	4640      	mov	r0, r8
 800beba:	6999      	ldr	r1, [r3, #24]
 800bebc:	6a1a      	ldr	r2, [r3, #32]
 800bebe:	f000 fe20 	bl	800cb02 <WM__InvalidateParent>
 800bec2:	4638      	mov	r0, r7
 800bec4:	f006 fd62 	bl	801298c <GUI_ALLOC_UnlockH>
 800bec8:	2303      	movs	r3, #3
 800beca:	9306      	str	r3, [sp, #24]
 800becc:	4630      	mov	r0, r6
 800bece:	ab04      	add	r3, sp, #16
 800bed0:	a906      	add	r1, sp, #24
 800bed2:	9309      	str	r3, [sp, #36]	; 0x24
 800bed4:	9504      	str	r5, [sp, #16]
 800bed6:	9405      	str	r4, [sp, #20]
 800bed8:	f008 ff98 	bl	8014e0c <WM__SendMessage>
 800bedc:	b00b      	add	sp, #44	; 0x2c
 800bede:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800bee2 <WM__MoveTo>:
 800bee2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bee4:	460d      	mov	r5, r1
 800bee6:	4617      	mov	r7, r2
 800bee8:	4606      	mov	r6, r0
 800beea:	b190      	cbz	r0, 800bf12 <WM__MoveTo+0x30>
 800beec:	f006 fd40 	bl	8012970 <GUI_ALLOC_LockH>
 800bef0:	4604      	mov	r4, r0
 800bef2:	a802      	add	r0, sp, #8
 800bef4:	f9b4 2000 	ldrsh.w	r2, [r4]
 800bef8:	f840 4d04 	str.w	r4, [r0, #-4]!
 800befc:	f9b4 4002 	ldrsh.w	r4, [r4, #2]
 800bf00:	1aad      	subs	r5, r5, r2
 800bf02:	1b3c      	subs	r4, r7, r4
 800bf04:	f006 fd42 	bl	801298c <GUI_ALLOC_UnlockH>
 800bf08:	4630      	mov	r0, r6
 800bf0a:	4629      	mov	r1, r5
 800bf0c:	4622      	mov	r2, r4
 800bf0e:	f7ff ff94 	bl	800be3a <WM__MoveWindow>
 800bf12:	b003      	add	sp, #12
 800bf14:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bf16 <WM_MoveWindow>:
 800bf16:	f7ff bf90 	b.w	800be3a <WM__MoveWindow>

0800bf1a <WM_MoveTo>:
 800bf1a:	f7ff bfe2 	b.w	800bee2 <WM__MoveTo>
	...

0800bf20 <WM_MULTIBUF_Enable>:
 800bf20:	4b05      	ldr	r3, [pc, #20]	; (800bf38 <WM_MULTIBUF_Enable+0x18>)
 800bf22:	681a      	ldr	r2, [r3, #0]
 800bf24:	1c11      	adds	r1, r2, #0
 800bf26:	bf18      	it	ne
 800bf28:	2101      	movne	r1, #1
 800bf2a:	b110      	cbz	r0, 800bf32 <WM_MULTIBUF_Enable+0x12>
 800bf2c:	4a03      	ldr	r2, [pc, #12]	; (800bf3c <WM_MULTIBUF_Enable+0x1c>)
 800bf2e:	601a      	str	r2, [r3, #0]
 800bf30:	e000      	b.n	800bf34 <WM_MULTIBUF_Enable+0x14>
 800bf32:	6018      	str	r0, [r3, #0]
 800bf34:	4608      	mov	r0, r1
 800bf36:	4770      	bx	lr
 800bf38:	20019c3c 	.word	0x20019c3c
 800bf3c:	08020840 	.word	0x08020840

0800bf40 <WM_IsWindow>:
 800bf40:	f000 bce0 	b.w	800c904 <WM__IsWindow>

0800bf44 <WM_IsVisible>:
 800bf44:	b508      	push	{r3, lr}
 800bf46:	b128      	cbz	r0, 800bf54 <WM_IsVisible+0x10>
 800bf48:	f006 fd08 	bl	801295c <GUI_ALLOC_h2p>
 800bf4c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800bf4e:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800bf52:	bd08      	pop	{r3, pc}
 800bf54:	bd08      	pop	{r3, pc}

0800bf56 <WM_IsFocussable>:
 800bf56:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf58:	4604      	mov	r4, r0
 800bf5a:	b908      	cbnz	r0, 800bf60 <WM_IsFocussable+0xa>
 800bf5c:	2000      	movs	r0, #0
 800bf5e:	e011      	b.n	800bf84 <WM_IsFocussable+0x2e>
 800bf60:	f006 fcfc 	bl	801295c <GUI_ALLOC_h2p>
 800bf64:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bf66:	079a      	lsls	r2, r3, #30
 800bf68:	d5f8      	bpl.n	800bf5c <WM_IsFocussable+0x6>
 800bf6a:	f013 0310 	ands.w	r3, r3, #16
 800bf6e:	d1f5      	bne.n	800bf5c <WM_IsFocussable+0x6>
 800bf70:	a904      	add	r1, sp, #16
 800bf72:	9303      	str	r3, [sp, #12]
 800bf74:	231f      	movs	r3, #31
 800bf76:	f841 3d10 	str.w	r3, [r1, #-16]!
 800bf7a:	4620      	mov	r0, r4
 800bf7c:	4669      	mov	r1, sp
 800bf7e:	f000 fded 	bl	800cb5c <WM_SendMessage>
 800bf82:	9803      	ldr	r0, [sp, #12]
 800bf84:	b004      	add	sp, #16
 800bf86:	bd10      	pop	{r4, pc}

0800bf88 <WM_HideWindow>:
 800bf88:	b513      	push	{r0, r1, r4, lr}
 800bf8a:	b188      	cbz	r0, 800bfb0 <WM_HideWindow+0x28>
 800bf8c:	f006 fcf0 	bl	8012970 <GUI_ALLOC_LockH>
 800bf90:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800bf92:	ac02      	add	r4, sp, #8
 800bf94:	0791      	lsls	r1, r2, #30
 800bf96:	f844 0d04 	str.w	r0, [r4, #-4]!
 800bf9a:	d506      	bpl.n	800bfaa <WM_HideWindow+0x22>
 800bf9c:	f022 0202 	bic.w	r2, r2, #2
 800bfa0:	6282      	str	r2, [r0, #40]	; 0x28
 800bfa2:	6981      	ldr	r1, [r0, #24]
 800bfa4:	6a02      	ldr	r2, [r0, #32]
 800bfa6:	f000 fdc1 	bl	800cb2c <WM__InvalidateRectEx>
 800bfaa:	4620      	mov	r0, r4
 800bfac:	f006 fcee 	bl	801298c <GUI_ALLOC_UnlockH>
 800bfb0:	b002      	add	sp, #8
 800bfb2:	bd10      	pop	{r4, pc}

0800bfb4 <WM_HasFocus>:
 800bfb4:	4b04      	ldr	r3, [pc, #16]	; (800bfc8 <WM_HasFocus+0x14>)
 800bfb6:	681a      	ldr	r2, [r3, #0]
 800bfb8:	4b04      	ldr	r3, [pc, #16]	; (800bfcc <WM_HasFocus+0x18>)
 800bfba:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800bfbe:	1ac3      	subs	r3, r0, r3
 800bfc0:	4258      	negs	r0, r3
 800bfc2:	4158      	adcs	r0, r3
 800bfc4:	4770      	bx	lr
 800bfc6:	bf00      	nop
 800bfc8:	20019c24 	.word	0x20019c24
 800bfcc:	20019c14 	.word	0x20019c14

0800bfd0 <WM_GetWindowSizeX>:
 800bfd0:	b513      	push	{r0, r1, r4, lr}
 800bfd2:	b908      	cbnz	r0, 800bfd8 <WM_GetWindowSizeX+0x8>
 800bfd4:	f000 ff8e 	bl	800cef4 <WM_GetActiveWindow>
 800bfd8:	f006 fcca 	bl	8012970 <GUI_ALLOC_LockH>
 800bfdc:	ab02      	add	r3, sp, #8
 800bfde:	f9b0 2000 	ldrsh.w	r2, [r0]
 800bfe2:	f843 0d04 	str.w	r0, [r3, #-4]!
 800bfe6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800bfea:	4618      	mov	r0, r3
 800bfec:	1aa4      	subs	r4, r4, r2
 800bfee:	f006 fccd 	bl	801298c <GUI_ALLOC_UnlockH>
 800bff2:	3401      	adds	r4, #1
 800bff4:	4620      	mov	r0, r4
 800bff6:	b002      	add	sp, #8
 800bff8:	bd10      	pop	{r4, pc}

0800bffa <WM_GetWindowSizeY>:
 800bffa:	b513      	push	{r0, r1, r4, lr}
 800bffc:	b908      	cbnz	r0, 800c002 <WM_GetWindowSizeY+0x8>
 800bffe:	f000 ff79 	bl	800cef4 <WM_GetActiveWindow>
 800c002:	f006 fcb5 	bl	8012970 <GUI_ALLOC_LockH>
 800c006:	ab02      	add	r3, sp, #8
 800c008:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c00c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c010:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800c014:	4618      	mov	r0, r3
 800c016:	1aa4      	subs	r4, r4, r2
 800c018:	f006 fcb8 	bl	801298c <GUI_ALLOC_UnlockH>
 800c01c:	3401      	adds	r4, #1
 800c01e:	4620      	mov	r0, r4
 800c020:	b002      	add	sp, #8
 800c022:	bd10      	pop	{r4, pc}

0800c024 <WM_GetParent>:
 800c024:	b508      	push	{r3, lr}
 800c026:	4603      	mov	r3, r0
 800c028:	b110      	cbz	r0, 800c030 <WM_GetParent+0xc>
 800c02a:	f006 fc97 	bl	801295c <GUI_ALLOC_h2p>
 800c02e:	6983      	ldr	r3, [r0, #24]
 800c030:	4618      	mov	r0, r3
 800c032:	bd08      	pop	{r3, pc}

0800c034 <WM_GetWindowOrgX>:
 800c034:	b508      	push	{r3, lr}
 800c036:	b120      	cbz	r0, 800c042 <WM_GetWindowOrgX+0xe>
 800c038:	f006 fc90 	bl	801295c <GUI_ALLOC_h2p>
 800c03c:	f9b0 0000 	ldrsh.w	r0, [r0]
 800c040:	bd08      	pop	{r3, pc}
 800c042:	bd08      	pop	{r3, pc}

0800c044 <WM_GetWindowOrgY>:
 800c044:	b508      	push	{r3, lr}
 800c046:	b120      	cbz	r0, 800c052 <WM_GetWindowOrgY+0xe>
 800c048:	f006 fc88 	bl	801295c <GUI_ALLOC_h2p>
 800c04c:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 800c050:	bd08      	pop	{r3, pc}
 800c052:	bd08      	pop	{r3, pc}

0800c054 <WM_GetId>:
 800c054:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c056:	4604      	mov	r4, r0
 800c058:	2210      	movs	r2, #16
 800c05a:	4668      	mov	r0, sp
 800c05c:	2100      	movs	r1, #0
 800c05e:	f00e f964 	bl	801a32a <memset>
 800c062:	2315      	movs	r3, #21
 800c064:	4620      	mov	r0, r4
 800c066:	4669      	mov	r1, sp
 800c068:	9300      	str	r3, [sp, #0]
 800c06a:	f000 fd77 	bl	800cb5c <WM_SendMessage>
 800c06e:	9803      	ldr	r0, [sp, #12]
 800c070:	b004      	add	sp, #16
 800c072:	bd10      	pop	{r4, pc}

0800c074 <WM_GetFocussedWindow>:
 800c074:	4b02      	ldr	r3, [pc, #8]	; (800c080 <WM_GetFocussedWindow+0xc>)
 800c076:	681a      	ldr	r2, [r3, #0]
 800c078:	4b02      	ldr	r3, [pc, #8]	; (800c084 <WM_GetFocussedWindow+0x10>)
 800c07a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c07e:	4770      	bx	lr
 800c080:	20019c24 	.word	0x20019c24
 800c084:	20019c14 	.word	0x20019c14

0800c088 <WM_GetFirstChild>:
 800c088:	b508      	push	{r3, lr}
 800c08a:	4603      	mov	r3, r0
 800c08c:	b110      	cbz	r0, 800c094 <WM_GetFirstChild+0xc>
 800c08e:	f006 fc65 	bl	801295c <GUI_ALLOC_h2p>
 800c092:	69c3      	ldr	r3, [r0, #28]
 800c094:	4618      	mov	r0, r3
 800c096:	bd08      	pop	{r3, pc}

0800c098 <_GetDialogItem>:
 800c098:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c09a:	460d      	mov	r5, r1
 800c09c:	f006 fc68 	bl	8012970 <GUI_ALLOC_LockH>
 800c0a0:	ab02      	add	r3, sp, #8
 800c0a2:	69c4      	ldr	r4, [r0, #28]
 800c0a4:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c0a8:	4618      	mov	r0, r3
 800c0aa:	f006 fc6f 	bl	801298c <GUI_ALLOC_UnlockH>
 800c0ae:	4620      	mov	r0, r4
 800c0b0:	b16c      	cbz	r4, 800c0ce <_GetDialogItem+0x36>
 800c0b2:	f7ff ffcf 	bl	800c054 <WM_GetId>
 800c0b6:	42a8      	cmp	r0, r5
 800c0b8:	4620      	mov	r0, r4
 800c0ba:	d008      	beq.n	800c0ce <_GetDialogItem+0x36>
 800c0bc:	4629      	mov	r1, r5
 800c0be:	f7ff ffeb 	bl	800c098 <_GetDialogItem>
 800c0c2:	b920      	cbnz	r0, 800c0ce <_GetDialogItem+0x36>
 800c0c4:	4620      	mov	r0, r4
 800c0c6:	f006 fc49 	bl	801295c <GUI_ALLOC_h2p>
 800c0ca:	6a04      	ldr	r4, [r0, #32]
 800c0cc:	e7ef      	b.n	800c0ae <_GetDialogItem+0x16>
 800c0ce:	b003      	add	sp, #12
 800c0d0:	bd30      	pop	{r4, r5, pc}

0800c0d2 <WM_GetDialogItem>:
 800c0d2:	b108      	cbz	r0, 800c0d8 <WM_GetDialogItem+0x6>
 800c0d4:	f7ff bfe0 	b.w	800c098 <_GetDialogItem>
 800c0d8:	4770      	bx	lr
	...

0800c0dc <WM_GetDesktopWindowEx>:
 800c0dc:	2801      	cmp	r0, #1
 800c0de:	bf9a      	itte	ls
 800c0e0:	4b02      	ldrls	r3, [pc, #8]	; (800c0ec <WM_GetDesktopWindowEx+0x10>)
 800c0e2:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 800c0e6:	2000      	movhi	r0, #0
 800c0e8:	4770      	bx	lr
 800c0ea:	bf00      	nop
 800c0ec:	20019c04 	.word	0x20019c04

0800c0f0 <WM_GetDesktopWindow>:
 800c0f0:	4b03      	ldr	r3, [pc, #12]	; (800c100 <WM_GetDesktopWindow+0x10>)
 800c0f2:	681b      	ldr	r3, [r3, #0]
 800c0f4:	7c5a      	ldrb	r2, [r3, #17]
 800c0f6:	4b03      	ldr	r3, [pc, #12]	; (800c104 <WM_GetDesktopWindow+0x14>)
 800c0f8:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c0fc:	4770      	bx	lr
 800c0fe:	bf00      	nop
 800c100:	2000016c 	.word	0x2000016c
 800c104:	20019c04 	.word	0x20019c04

0800c108 <WM_GetClientWindow>:
 800c108:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c10a:	2300      	movs	r3, #0
 800c10c:	a904      	add	r1, sp, #16
 800c10e:	9303      	str	r3, [sp, #12]
 800c110:	2317      	movs	r3, #23
 800c112:	f841 3d10 	str.w	r3, [r1, #-16]!
 800c116:	4669      	mov	r1, sp
 800c118:	f000 fd20 	bl	800cb5c <WM_SendMessage>
 800c11c:	9803      	ldr	r0, [sp, #12]
 800c11e:	b005      	add	sp, #20
 800c120:	f85d fb04 	ldr.w	pc, [sp], #4

0800c124 <WM__GetClientRectEx>:
 800c124:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c126:	460d      	mov	r5, r1
 800c128:	b158      	cbz	r0, 800c142 <WM__GetClientRectEx+0x1e>
 800c12a:	b151      	cbz	r1, 800c142 <WM__GetClientRectEx+0x1e>
 800c12c:	f006 fc20 	bl	8012970 <GUI_ALLOC_LockH>
 800c130:	ac02      	add	r4, sp, #8
 800c132:	4629      	mov	r1, r5
 800c134:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c138:	f000 fd1f 	bl	800cb7a <WM__GetClientRectWin>
 800c13c:	4620      	mov	r0, r4
 800c13e:	f006 fc25 	bl	801298c <GUI_ALLOC_UnlockH>
 800c142:	b003      	add	sp, #12
 800c144:	bd30      	pop	{r4, r5, pc}

0800c146 <WM_GetClientRectEx>:
 800c146:	f7ff bfed 	b.w	800c124 <WM__GetClientRectEx>
	...

0800c14c <WM_GetClientRect>:
 800c14c:	4b04      	ldr	r3, [pc, #16]	; (800c160 <WM_GetClientRect+0x14>)
 800c14e:	4601      	mov	r1, r0
 800c150:	6818      	ldr	r0, [r3, #0]
 800c152:	b910      	cbnz	r0, 800c15a <WM_GetClientRect+0xe>
 800c154:	4b03      	ldr	r3, [pc, #12]	; (800c164 <WM_GetClientRect+0x18>)
 800c156:	681b      	ldr	r3, [r3, #0]
 800c158:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c15a:	f7ff bfe3 	b.w	800c124 <WM__GetClientRectEx>
 800c15e:	bf00      	nop
 800c160:	20019c00 	.word	0x20019c00
 800c164:	2000016c 	.word	0x2000016c

0800c168 <WM_GetBkColor>:
 800c168:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c16a:	b140      	cbz	r0, 800c17e <WM_GetBkColor+0x16>
 800c16c:	a904      	add	r1, sp, #16
 800c16e:	2322      	movs	r3, #34	; 0x22
 800c170:	f841 3d10 	str.w	r3, [r1, #-16]!
 800c174:	4669      	mov	r1, sp
 800c176:	f000 fcf1 	bl	800cb5c <WM_SendMessage>
 800c17a:	9803      	ldr	r0, [sp, #12]
 800c17c:	e001      	b.n	800c182 <WM_GetBkColor+0x1a>
 800c17e:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
 800c182:	b005      	add	sp, #20
 800c184:	f85d fb04 	ldr.w	pc, [sp], #4

0800c188 <_cbInvalidateOne>:
 800c188:	f000 bd3f 	b.w	800cc0a <WM_InvalidateWindow>

0800c18c <WM_BringToTop>:
 800c18c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c18e:	4605      	mov	r5, r0
 800c190:	2800      	cmp	r0, #0
 800c192:	d032      	beq.n	800c1fa <WM_BringToTop+0x6e>
 800c194:	f006 fbec 	bl	8012970 <GUI_ALLOC_LockH>
 800c198:	ac02      	add	r4, sp, #8
 800c19a:	4603      	mov	r3, r0
 800c19c:	f844 0d08 	str.w	r0, [r4, #-8]!
 800c1a0:	6a00      	ldr	r0, [r0, #32]
 800c1a2:	b908      	cbnz	r0, 800c1a8 <WM_BringToTop+0x1c>
 800c1a4:	4668      	mov	r0, sp
 800c1a6:	e00e      	b.n	800c1c6 <WM_BringToTop+0x3a>
 800c1a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c1aa:	071a      	lsls	r2, r3, #28
 800c1ac:	d411      	bmi.n	800c1d2 <WM_BringToTop+0x46>
 800c1ae:	f006 fbdf 	bl	8012970 <GUI_ALLOC_LockH>
 800c1b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c1b4:	ae02      	add	r6, sp, #8
 800c1b6:	071b      	lsls	r3, r3, #28
 800c1b8:	f846 0d04 	str.w	r0, [r6, #-4]!
 800c1bc:	d506      	bpl.n	800c1cc <WM_BringToTop+0x40>
 800c1be:	4668      	mov	r0, sp
 800c1c0:	f006 fbe4 	bl	801298c <GUI_ALLOC_UnlockH>
 800c1c4:	4630      	mov	r0, r6
 800c1c6:	f006 fbe1 	bl	801298c <GUI_ALLOC_UnlockH>
 800c1ca:	e016      	b.n	800c1fa <WM_BringToTop+0x6e>
 800c1cc:	4630      	mov	r0, r6
 800c1ce:	f006 fbdd 	bl	801298c <GUI_ALLOC_UnlockH>
 800c1d2:	9b00      	ldr	r3, [sp, #0]
 800c1d4:	4668      	mov	r0, sp
 800c1d6:	699e      	ldr	r6, [r3, #24]
 800c1d8:	f006 fbd8 	bl	801298c <GUI_ALLOC_UnlockH>
 800c1dc:	4628      	mov	r0, r5
 800c1de:	f000 fb1f 	bl	800c820 <WM__RemoveWindowFromList>
 800c1e2:	4631      	mov	r1, r6
 800c1e4:	4628      	mov	r0, r5
 800c1e6:	f000 fac9 	bl	800c77c <WM__InsertWindowIntoList>
 800c1ea:	4628      	mov	r0, r5
 800c1ec:	f000 fd0d 	bl	800cc0a <WM_InvalidateWindow>
 800c1f0:	4628      	mov	r0, r5
 800c1f2:	4903      	ldr	r1, [pc, #12]	; (800c200 <WM_BringToTop+0x74>)
 800c1f4:	2200      	movs	r2, #0
 800c1f6:	f009 f918 	bl	801542a <WM_ForEachDesc>
 800c1fa:	b002      	add	sp, #8
 800c1fc:	bd70      	pop	{r4, r5, r6, pc}
 800c1fe:	bf00      	nop
 800c200:	0800c189 	.word	0x0800c189

0800c204 <WM_DetachWindow>:
 800c204:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c206:	4604      	mov	r4, r0
 800c208:	b1f0      	cbz	r0, 800c248 <WM_DetachWindow+0x44>
 800c20a:	f006 fbb1 	bl	8012970 <GUI_ALLOC_LockH>
 800c20e:	ab02      	add	r3, sp, #8
 800c210:	6985      	ldr	r5, [r0, #24]
 800c212:	f843 0d08 	str.w	r0, [r3, #-8]!
 800c216:	4668      	mov	r0, sp
 800c218:	f006 fbb8 	bl	801298c <GUI_ALLOC_UnlockH>
 800c21c:	b1a5      	cbz	r5, 800c248 <WM_DetachWindow+0x44>
 800c21e:	4620      	mov	r0, r4
 800c220:	f000 fc87 	bl	800cb32 <WM__DetachWindow>
 800c224:	4628      	mov	r0, r5
 800c226:	f006 fba3 	bl	8012970 <GUI_ALLOC_LockH>
 800c22a:	4602      	mov	r2, r0
 800c22c:	a802      	add	r0, sp, #8
 800c22e:	8816      	ldrh	r6, [r2, #0]
 800c230:	8855      	ldrh	r5, [r2, #2]
 800c232:	f840 2d04 	str.w	r2, [r0, #-4]!
 800c236:	f006 fba9 	bl	801298c <GUI_ALLOC_UnlockH>
 800c23a:	b231      	sxth	r1, r6
 800c23c:	b22a      	sxth	r2, r5
 800c23e:	4620      	mov	r0, r4
 800c240:	4249      	negs	r1, r1
 800c242:	4252      	negs	r2, r2
 800c244:	f7ff fe67 	bl	800bf16 <WM_MoveWindow>
 800c248:	b002      	add	sp, #8
 800c24a:	bd70      	pop	{r4, r5, r6, pc}

0800c24c <WM_AttachWindow>:
 800c24c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c24e:	4604      	mov	r4, r0
 800c250:	460d      	mov	r5, r1
 800c252:	b351      	cbz	r1, 800c2aa <WM_AttachWindow+0x5e>
 800c254:	4281      	cmp	r1, r0
 800c256:	d028      	beq.n	800c2aa <WM_AttachWindow+0x5e>
 800c258:	f006 fb8a 	bl	8012970 <GUI_ALLOC_LockH>
 800c25c:	4603      	mov	r3, r0
 800c25e:	a802      	add	r0, sp, #8
 800c260:	f840 3d08 	str.w	r3, [r0, #-8]!
 800c264:	699b      	ldr	r3, [r3, #24]
 800c266:	42ab      	cmp	r3, r5
 800c268:	4668      	mov	r0, sp
 800c26a:	d01c      	beq.n	800c2a6 <WM_AttachWindow+0x5a>
 800c26c:	f006 fb8e 	bl	801298c <GUI_ALLOC_UnlockH>
 800c270:	4620      	mov	r0, r4
 800c272:	f7ff ffc7 	bl	800c204 <WM_DetachWindow>
 800c276:	4629      	mov	r1, r5
 800c278:	4620      	mov	r0, r4
 800c27a:	f000 fa7f 	bl	800c77c <WM__InsertWindowIntoList>
 800c27e:	4628      	mov	r0, r5
 800c280:	f006 fb76 	bl	8012970 <GUI_ALLOC_LockH>
 800c284:	ab02      	add	r3, sp, #8
 800c286:	8806      	ldrh	r6, [r0, #0]
 800c288:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c28c:	8845      	ldrh	r5, [r0, #2]
 800c28e:	4618      	mov	r0, r3
 800c290:	f006 fb7c 	bl	801298c <GUI_ALLOC_UnlockH>
 800c294:	4620      	mov	r0, r4
 800c296:	b231      	sxth	r1, r6
 800c298:	b22a      	sxth	r2, r5
 800c29a:	f7ff fe3c 	bl	800bf16 <WM_MoveWindow>
 800c29e:	4620      	mov	r0, r4
 800c2a0:	f000 fcb3 	bl	800cc0a <WM_InvalidateWindow>
 800c2a4:	e001      	b.n	800c2aa <WM_AttachWindow+0x5e>
 800c2a6:	f006 fb71 	bl	801298c <GUI_ALLOC_UnlockH>
 800c2aa:	b002      	add	sp, #8
 800c2ac:	bd70      	pop	{r4, r5, r6, pc}

0800c2ae <WM_AttachWindowAt>:
 800c2ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c2b0:	4604      	mov	r4, r0
 800c2b2:	4617      	mov	r7, r2
 800c2b4:	461e      	mov	r6, r3
 800c2b6:	460d      	mov	r5, r1
 800c2b8:	f7ff ffa4 	bl	800c204 <WM_DetachWindow>
 800c2bc:	4620      	mov	r0, r4
 800c2be:	4639      	mov	r1, r7
 800c2c0:	4632      	mov	r2, r6
 800c2c2:	f7ff fe2a 	bl	800bf1a <WM_MoveTo>
 800c2c6:	4620      	mov	r0, r4
 800c2c8:	4629      	mov	r1, r5
 800c2ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800c2ce:	f7ff bfbd 	b.w	800c24c <WM_AttachWindow>
	...

0800c2d4 <_OnExit>:
 800c2d4:	4a0a      	ldr	r2, [pc, #40]	; (800c300 <_OnExit+0x2c>)
 800c2d6:	490b      	ldr	r1, [pc, #44]	; (800c304 <_OnExit+0x30>)
 800c2d8:	2300      	movs	r3, #0
 800c2da:	7013      	strb	r3, [r2, #0]
 800c2dc:	4a0a      	ldr	r2, [pc, #40]	; (800c308 <_OnExit+0x34>)
 800c2de:	600b      	str	r3, [r1, #0]
 800c2e0:	6013      	str	r3, [r2, #0]
 800c2e2:	4a0a      	ldr	r2, [pc, #40]	; (800c30c <_OnExit+0x38>)
 800c2e4:	604b      	str	r3, [r1, #4]
 800c2e6:	6013      	str	r3, [r2, #0]
 800c2e8:	4a09      	ldr	r2, [pc, #36]	; (800c310 <_OnExit+0x3c>)
 800c2ea:	6013      	str	r3, [r2, #0]
 800c2ec:	6053      	str	r3, [r2, #4]
 800c2ee:	4a09      	ldr	r2, [pc, #36]	; (800c314 <_OnExit+0x40>)
 800c2f0:	6013      	str	r3, [r2, #0]
 800c2f2:	4a09      	ldr	r2, [pc, #36]	; (800c318 <_OnExit+0x44>)
 800c2f4:	6013      	str	r3, [r2, #0]
 800c2f6:	4a09      	ldr	r2, [pc, #36]	; (800c31c <_OnExit+0x48>)
 800c2f8:	6013      	str	r3, [r2, #0]
 800c2fa:	4a09      	ldr	r2, [pc, #36]	; (800c320 <_OnExit+0x4c>)
 800c2fc:	6013      	str	r3, [r2, #0]
 800c2fe:	4770      	bx	lr
 800c300:	2001945c 	.word	0x2001945c
 800c304:	20019c14 	.word	0x20019c14
 800c308:	20019434 	.word	0x20019434
 800c30c:	20019c38 	.word	0x20019c38
 800c310:	20019c40 	.word	0x20019c40
 800c314:	20019c4c 	.word	0x20019c4c
 800c318:	20019c00 	.word	0x20019c00
 800c31c:	20019c2c 	.word	0x20019c2c
 800c320:	20019c3c 	.word	0x20019c3c

0800c324 <_Paint1>:
 800c324:	b510      	push	{r4, lr}
 800c326:	4604      	mov	r4, r0
 800c328:	f006 fb18 	bl	801295c <GUI_ALLOC_h2p>
 800c32c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c32e:	4a04      	ldr	r2, [pc, #16]	; (800c340 <_Paint1+0x1c>)
 800c330:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800c334:	4b03      	ldr	r3, [pc, #12]	; (800c344 <_Paint1+0x20>)
 800c336:	4620      	mov	r0, r4
 800c338:	bf08      	it	eq
 800c33a:	4613      	moveq	r3, r2
 800c33c:	4798      	blx	r3
 800c33e:	bd10      	pop	{r4, pc}
 800c340:	0800d195 	.word	0x0800d195
 800c344:	0800d765 	.word	0x0800d765

0800c348 <_Findy1>:
 800c348:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c34a:	4605      	mov	r5, r0
 800c34c:	b085      	sub	sp, #20
 800c34e:	460c      	mov	r4, r1
 800c350:	4616      	mov	r6, r2
 800c352:	2d00      	cmp	r5, #0
 800c354:	d04c      	beq.n	800c3f0 <_Findy1+0xa8>
 800c356:	4628      	mov	r0, r5
 800c358:	f006 fb0a 	bl	8012970 <GUI_ALLOC_LockH>
 800c35c:	6a87      	ldr	r7, [r0, #40]	; 0x28
 800c35e:	9001      	str	r0, [sp, #4]
 800c360:	07bb      	lsls	r3, r7, #30
 800c362:	4601      	mov	r1, r0
 800c364:	d53d      	bpl.n	800c3e2 <_Findy1+0x9a>
 800c366:	ad02      	add	r5, sp, #8
 800c368:	b126      	cbz	r6, 800c374 <_Findy1+0x2c>
 800c36a:	4628      	mov	r0, r5
 800c36c:	4632      	mov	r2, r6
 800c36e:	f004 f849 	bl	8010404 <GUI__IntersectRects>
 800c372:	e002      	b.n	800c37a <_Findy1+0x32>
 800c374:	c803      	ldmia	r0, {r0, r1}
 800c376:	e885 0003 	stmia.w	r5, {r0, r1}
 800c37a:	4620      	mov	r0, r4
 800c37c:	4629      	mov	r1, r5
 800c37e:	f005 f965 	bl	801164c <GUI_RectsIntersect>
 800c382:	b370      	cbz	r0, 800c3e2 <_Findy1+0x9a>
 800c384:	f017 0f01 	tst.w	r7, #1
 800c388:	9b01      	ldr	r3, [sp, #4]
 800c38a:	d11e      	bne.n	800c3ca <_Findy1+0x82>
 800c38c:	b13e      	cbz	r6, 800c39e <_Findy1+0x56>
 800c38e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800c392:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800c396:	429a      	cmp	r2, r3
 800c398:	bfa8      	it	ge
 800c39a:	4613      	movge	r3, r2
 800c39c:	e001      	b.n	800c3a2 <_Findy1+0x5a>
 800c39e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c3a2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800c3a6:	4293      	cmp	r3, r2
 800c3a8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c3ac:	dd06      	ble.n	800c3bc <_Findy1+0x74>
 800c3ae:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800c3b2:	b219      	sxth	r1, r3
 800c3b4:	428a      	cmp	r2, r1
 800c3b6:	db14      	blt.n	800c3e2 <_Findy1+0x9a>
 800c3b8:	3b01      	subs	r3, #1
 800c3ba:	e004      	b.n	800c3c6 <_Findy1+0x7e>
 800c3bc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c3c0:	b219      	sxth	r1, r3
 800c3c2:	428a      	cmp	r2, r1
 800c3c4:	dd0d      	ble.n	800c3e2 <_Findy1+0x9a>
 800c3c6:	80e3      	strh	r3, [r4, #6]
 800c3c8:	e00b      	b.n	800c3e2 <_Findy1+0x9a>
 800c3ca:	69df      	ldr	r7, [r3, #28]
 800c3cc:	b14f      	cbz	r7, 800c3e2 <_Findy1+0x9a>
 800c3ce:	4638      	mov	r0, r7
 800c3d0:	4621      	mov	r1, r4
 800c3d2:	462a      	mov	r2, r5
 800c3d4:	f7ff ffb8 	bl	800c348 <_Findy1>
 800c3d8:	4638      	mov	r0, r7
 800c3da:	f006 fabf 	bl	801295c <GUI_ALLOC_h2p>
 800c3de:	6a07      	ldr	r7, [r0, #32]
 800c3e0:	e7f4      	b.n	800c3cc <_Findy1+0x84>
 800c3e2:	a804      	add	r0, sp, #16
 800c3e4:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800c3e8:	6a1d      	ldr	r5, [r3, #32]
 800c3ea:	f006 facf 	bl	801298c <GUI_ALLOC_UnlockH>
 800c3ee:	e7b0      	b.n	800c352 <_Findy1+0xa>
 800c3f0:	b005      	add	sp, #20
 800c3f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c3f4 <_Findx0>:
 800c3f4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c3f8:	4604      	mov	r4, r0
 800c3fa:	460f      	mov	r7, r1
 800c3fc:	4690      	mov	r8, r2
 800c3fe:	2500      	movs	r5, #0
 800c400:	2c00      	cmp	r4, #0
 800c402:	d037      	beq.n	800c474 <_Findx0+0x80>
 800c404:	4620      	mov	r0, r4
 800c406:	f006 fab3 	bl	8012970 <GUI_ALLOC_LockH>
 800c40a:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800c40c:	9001      	str	r0, [sp, #4]
 800c40e:	07b2      	lsls	r2, r6, #30
 800c410:	4601      	mov	r1, r0
 800c412:	d528      	bpl.n	800c466 <_Findx0+0x72>
 800c414:	ac02      	add	r4, sp, #8
 800c416:	f1b8 0f00 	cmp.w	r8, #0
 800c41a:	d004      	beq.n	800c426 <_Findx0+0x32>
 800c41c:	4620      	mov	r0, r4
 800c41e:	4642      	mov	r2, r8
 800c420:	f003 fff0 	bl	8010404 <GUI__IntersectRects>
 800c424:	e002      	b.n	800c42c <_Findx0+0x38>
 800c426:	c803      	ldmia	r0, {r0, r1}
 800c428:	e884 0003 	stmia.w	r4, {r0, r1}
 800c42c:	4638      	mov	r0, r7
 800c42e:	4621      	mov	r1, r4
 800c430:	f005 f90c 	bl	801164c <GUI_RectsIntersect>
 800c434:	b1b8      	cbz	r0, 800c466 <_Findx0+0x72>
 800c436:	07f3      	lsls	r3, r6, #31
 800c438:	d405      	bmi.n	800c446 <_Findx0+0x52>
 800c43a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800c43e:	3301      	adds	r3, #1
 800c440:	803b      	strh	r3, [r7, #0]
 800c442:	2501      	movs	r5, #1
 800c444:	e00f      	b.n	800c466 <_Findx0+0x72>
 800c446:	9b01      	ldr	r3, [sp, #4]
 800c448:	69de      	ldr	r6, [r3, #28]
 800c44a:	b166      	cbz	r6, 800c466 <_Findx0+0x72>
 800c44c:	4630      	mov	r0, r6
 800c44e:	4639      	mov	r1, r7
 800c450:	4622      	mov	r2, r4
 800c452:	f7ff ffcf 	bl	800c3f4 <_Findx0>
 800c456:	2800      	cmp	r0, #0
 800c458:	4630      	mov	r0, r6
 800c45a:	bf18      	it	ne
 800c45c:	2501      	movne	r5, #1
 800c45e:	f006 fa7d 	bl	801295c <GUI_ALLOC_h2p>
 800c462:	6a06      	ldr	r6, [r0, #32]
 800c464:	e7f1      	b.n	800c44a <_Findx0+0x56>
 800c466:	a804      	add	r0, sp, #16
 800c468:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800c46c:	6a1c      	ldr	r4, [r3, #32]
 800c46e:	f006 fa8d 	bl	801298c <GUI_ALLOC_UnlockH>
 800c472:	e7c5      	b.n	800c400 <_Findx0+0xc>
 800c474:	4628      	mov	r0, r5
 800c476:	b004      	add	sp, #16
 800c478:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c47c <_Findx1>:
 800c47c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c47e:	4604      	mov	r4, r0
 800c480:	b085      	sub	sp, #20
 800c482:	460e      	mov	r6, r1
 800c484:	4617      	mov	r7, r2
 800c486:	2c00      	cmp	r4, #0
 800c488:	d031      	beq.n	800c4ee <_Findx1+0x72>
 800c48a:	4620      	mov	r0, r4
 800c48c:	f006 fa70 	bl	8012970 <GUI_ALLOC_LockH>
 800c490:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800c492:	9001      	str	r0, [sp, #4]
 800c494:	07aa      	lsls	r2, r5, #30
 800c496:	4601      	mov	r1, r0
 800c498:	d522      	bpl.n	800c4e0 <_Findx1+0x64>
 800c49a:	ac02      	add	r4, sp, #8
 800c49c:	b127      	cbz	r7, 800c4a8 <_Findx1+0x2c>
 800c49e:	4620      	mov	r0, r4
 800c4a0:	463a      	mov	r2, r7
 800c4a2:	f003 ffaf 	bl	8010404 <GUI__IntersectRects>
 800c4a6:	e002      	b.n	800c4ae <_Findx1+0x32>
 800c4a8:	c803      	ldmia	r0, {r0, r1}
 800c4aa:	e884 0003 	stmia.w	r4, {r0, r1}
 800c4ae:	4630      	mov	r0, r6
 800c4b0:	4621      	mov	r1, r4
 800c4b2:	f005 f8cb 	bl	801164c <GUI_RectsIntersect>
 800c4b6:	b198      	cbz	r0, 800c4e0 <_Findx1+0x64>
 800c4b8:	07eb      	lsls	r3, r5, #31
 800c4ba:	d404      	bmi.n	800c4c6 <_Findx1+0x4a>
 800c4bc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800c4c0:	3b01      	subs	r3, #1
 800c4c2:	80b3      	strh	r3, [r6, #4]
 800c4c4:	e00c      	b.n	800c4e0 <_Findx1+0x64>
 800c4c6:	9b01      	ldr	r3, [sp, #4]
 800c4c8:	69dd      	ldr	r5, [r3, #28]
 800c4ca:	b14d      	cbz	r5, 800c4e0 <_Findx1+0x64>
 800c4cc:	4628      	mov	r0, r5
 800c4ce:	4631      	mov	r1, r6
 800c4d0:	4622      	mov	r2, r4
 800c4d2:	f7ff ffd3 	bl	800c47c <_Findx1>
 800c4d6:	4628      	mov	r0, r5
 800c4d8:	f006 fa40 	bl	801295c <GUI_ALLOC_h2p>
 800c4dc:	6a05      	ldr	r5, [r0, #32]
 800c4de:	e7f4      	b.n	800c4ca <_Findx1+0x4e>
 800c4e0:	a804      	add	r0, sp, #16
 800c4e2:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800c4e6:	6a1c      	ldr	r4, [r3, #32]
 800c4e8:	f006 fa50 	bl	801298c <GUI_ALLOC_UnlockH>
 800c4ec:	e7cb      	b.n	800c486 <_Findx1+0xa>
 800c4ee:	b005      	add	sp, #20
 800c4f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800c4f4 <_Paint1Trans>:
 800c4f4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c4f8:	4d21      	ldr	r5, [pc, #132]	; (800c580 <_Paint1Trans+0x8c>)
 800c4fa:	682b      	ldr	r3, [r5, #0]
 800c4fc:	4606      	mov	r6, r0
 800c4fe:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c500:	f006 fa36 	bl	8012970 <GUI_ALLOC_LockH>
 800c504:	9000      	str	r0, [sp, #0]
 800c506:	4630      	mov	r0, r6
 800c508:	f006 fa32 	bl	8012970 <GUI_ALLOC_LockH>
 800c50c:	ac02      	add	r4, sp, #8
 800c50e:	4601      	mov	r1, r0
 800c510:	9001      	str	r0, [sp, #4]
 800c512:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 800c516:	3008      	adds	r0, #8
 800c518:	f005 f898 	bl	801164c <GUI_RectsIntersect>
 800c51c:	4607      	mov	r7, r0
 800c51e:	b328      	cbz	r0, 800c56c <_Paint1Trans+0x78>
 800c520:	9901      	ldr	r1, [sp, #4]
 800c522:	9a00      	ldr	r2, [sp, #0]
 800c524:	682b      	ldr	r3, [r5, #0]
 800c526:	4c17      	ldr	r4, [pc, #92]	; (800c584 <_Paint1Trans+0x90>)
 800c528:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 800c52a:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800c52e:	f101 0008 	add.w	r0, r1, #8
 800c532:	3208      	adds	r2, #8
 800c534:	f003 ff66 	bl	8010404 <GUI__IntersectRects>
 800c538:	4668      	mov	r0, sp
 800c53a:	f006 fa27 	bl	801298c <GUI_ALLOC_UnlockH>
 800c53e:	9a01      	ldr	r2, [sp, #4]
 800c540:	682b      	ldr	r3, [r5, #0]
 800c542:	f9b2 1000 	ldrsh.w	r1, [r2]
 800c546:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800c54a:	64d9      	str	r1, [r3, #76]	; 0x4c
 800c54c:	651a      	str	r2, [r3, #80]	; 0x50
 800c54e:	a801      	add	r0, sp, #4
 800c550:	6026      	str	r6, [r4, #0]
 800c552:	f006 fa1b 	bl	801298c <GUI_ALLOC_UnlockH>
 800c556:	4630      	mov	r0, r6
 800c558:	f7ff fee4 	bl	800c324 <_Paint1>
 800c55c:	2300      	movs	r3, #0
 800c55e:	6023      	str	r3, [r4, #0]
 800c560:	682b      	ldr	r3, [r5, #0]
 800c562:	651f      	str	r7, [r3, #80]	; 0x50
 800c564:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 800c568:	2701      	movs	r7, #1
 800c56a:	e005      	b.n	800c578 <_Paint1Trans+0x84>
 800c56c:	4668      	mov	r0, sp
 800c56e:	f006 fa0d 	bl	801298c <GUI_ALLOC_UnlockH>
 800c572:	a801      	add	r0, sp, #4
 800c574:	f006 fa0a 	bl	801298c <GUI_ALLOC_UnlockH>
 800c578:	4638      	mov	r0, r7
 800c57a:	b002      	add	sp, #8
 800c57c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c580:	2000016c 	.word	0x2000016c
 800c584:	20019c00 	.word	0x20019c00

0800c588 <_PaintTransChildren>:
 800c588:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c58c:	4606      	mov	r6, r0
 800c58e:	f006 f9ef 	bl	8012970 <GUI_ALLOC_LockH>
 800c592:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c594:	9001      	str	r0, [sp, #4]
 800c596:	079b      	lsls	r3, r3, #30
 800c598:	d405      	bmi.n	800c5a6 <_PaintTransChildren+0x1e>
 800c59a:	a801      	add	r0, sp, #4
 800c59c:	f006 f9f6 	bl	801298c <GUI_ALLOC_UnlockH>
 800c5a0:	b002      	add	sp, #8
 800c5a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c5a6:	69c4      	ldr	r4, [r0, #28]
 800c5a8:	2c00      	cmp	r4, #0
 800c5aa:	d0f6      	beq.n	800c59a <_PaintTransChildren+0x12>
 800c5ac:	4620      	mov	r0, r4
 800c5ae:	f006 f9df 	bl	8012970 <GUI_ALLOC_LockH>
 800c5b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c5b4:	ad02      	add	r5, sp, #8
 800c5b6:	f003 0303 	and.w	r3, r3, #3
 800c5ba:	2b03      	cmp	r3, #3
 800c5bc:	f845 0d08 	str.w	r0, [r5, #-8]!
 800c5c0:	d137      	bne.n	800c632 <_PaintTransChildren+0xaa>
 800c5c2:	9901      	ldr	r1, [sp, #4]
 800c5c4:	3108      	adds	r1, #8
 800c5c6:	f005 f841 	bl	801164c <GUI_RectsIntersect>
 800c5ca:	2800      	cmp	r0, #0
 800c5cc:	d031      	beq.n	800c632 <_PaintTransChildren+0xaa>
 800c5ce:	a802      	add	r0, sp, #8
 800c5d0:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800c5d4:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 800c5d8:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 800c5dc:	899f      	ldrh	r7, [r3, #12]
 800c5de:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 800c5e2:	f006 f9d3 	bl	801298c <GUI_ALLOC_UnlockH>
 800c5e6:	4668      	mov	r0, sp
 800c5e8:	f006 f9d0 	bl	801298c <GUI_ALLOC_UnlockH>
 800c5ec:	4620      	mov	r0, r4
 800c5ee:	f7ff ff81 	bl	800c4f4 <_Paint1Trans>
 800c5f2:	b170      	cbz	r0, 800c612 <_PaintTransChildren+0x8a>
 800c5f4:	4620      	mov	r0, r4
 800c5f6:	f006 f9b1 	bl	801295c <GUI_ALLOC_h2p>
 800c5fa:	9000      	str	r0, [sp, #0]
 800c5fc:	4620      	mov	r0, r4
 800c5fe:	f7ff ffc3 	bl	800c588 <_PaintTransChildren>
 800c602:	4620      	mov	r0, r4
 800c604:	f006 f9aa 	bl	801295c <GUI_ALLOC_h2p>
 800c608:	9000      	str	r0, [sp, #0]
 800c60a:	4630      	mov	r0, r6
 800c60c:	f006 f9a6 	bl	801295c <GUI_ALLOC_h2p>
 800c610:	9001      	str	r0, [sp, #4]
 800c612:	4630      	mov	r0, r6
 800c614:	f006 f9ac 	bl	8012970 <GUI_ALLOC_LockH>
 800c618:	9001      	str	r0, [sp, #4]
 800c61a:	4620      	mov	r0, r4
 800c61c:	f006 f9a8 	bl	8012970 <GUI_ALLOC_LockH>
 800c620:	9b01      	ldr	r3, [sp, #4]
 800c622:	9000      	str	r0, [sp, #0]
 800c624:	f8a3 9008 	strh.w	r9, [r3, #8]
 800c628:	f8a3 800a 	strh.w	r8, [r3, #10]
 800c62c:	819f      	strh	r7, [r3, #12]
 800c62e:	f8a3 a00e 	strh.w	sl, [r3, #14]
 800c632:	9b00      	ldr	r3, [sp, #0]
 800c634:	4668      	mov	r0, sp
 800c636:	6a1c      	ldr	r4, [r3, #32]
 800c638:	f006 f9a8 	bl	801298c <GUI_ALLOC_UnlockH>
 800c63c:	e7b4      	b.n	800c5a8 <_PaintTransChildren+0x20>
	...

0800c640 <WM__PaintWinAndOverlays>:
 800c640:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c642:	4604      	mov	r4, r0
 800c644:	f006 f994 	bl	8012970 <GUI_ALLOC_LockH>
 800c648:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800c64a:	9001      	str	r0, [sp, #4]
 800c64c:	f640 0301 	movw	r3, #2049	; 0x801
 800c650:	4013      	ands	r3, r2
 800c652:	2b01      	cmp	r3, #1
 800c654:	d005      	beq.n	800c662 <WM__PaintWinAndOverlays+0x22>
 800c656:	a801      	add	r0, sp, #4
 800c658:	f006 f998 	bl	801298c <GUI_ALLOC_UnlockH>
 800c65c:	4620      	mov	r0, r4
 800c65e:	f7ff fe61 	bl	800c324 <_Paint1>
 800c662:	4b14      	ldr	r3, [pc, #80]	; (800c6b4 <WM__PaintWinAndOverlays+0x74>)
 800c664:	681b      	ldr	r3, [r3, #0]
 800c666:	b313      	cbz	r3, 800c6ae <WM__PaintWinAndOverlays+0x6e>
 800c668:	4620      	mov	r0, r4
 800c66a:	f7ff ff8d 	bl	800c588 <_PaintTransChildren>
 800c66e:	4620      	mov	r0, r4
 800c670:	f006 f974 	bl	801295c <GUI_ALLOC_h2p>
 800c674:	6985      	ldr	r5, [r0, #24]
 800c676:	6a04      	ldr	r4, [r0, #32]
 800c678:	b1cd      	cbz	r5, 800c6ae <WM__PaintWinAndOverlays+0x6e>
 800c67a:	b194      	cbz	r4, 800c6a2 <WM__PaintWinAndOverlays+0x62>
 800c67c:	4620      	mov	r0, r4
 800c67e:	f006 f96d 	bl	801295c <GUI_ALLOC_h2p>
 800c682:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c684:	f003 0303 	and.w	r3, r3, #3
 800c688:	2b03      	cmp	r3, #3
 800c68a:	d102      	bne.n	800c692 <WM__PaintWinAndOverlays+0x52>
 800c68c:	4620      	mov	r0, r4
 800c68e:	f7ff ff31 	bl	800c4f4 <_Paint1Trans>
 800c692:	4620      	mov	r0, r4
 800c694:	f7ff ff78 	bl	800c588 <_PaintTransChildren>
 800c698:	4620      	mov	r0, r4
 800c69a:	f006 f95f 	bl	801295c <GUI_ALLOC_h2p>
 800c69e:	6a04      	ldr	r4, [r0, #32]
 800c6a0:	e7eb      	b.n	800c67a <WM__PaintWinAndOverlays+0x3a>
 800c6a2:	4628      	mov	r0, r5
 800c6a4:	f006 f95a 	bl	801295c <GUI_ALLOC_h2p>
 800c6a8:	6a04      	ldr	r4, [r0, #32]
 800c6aa:	6985      	ldr	r5, [r0, #24]
 800c6ac:	e7e4      	b.n	800c678 <WM__PaintWinAndOverlays+0x38>
 800c6ae:	b003      	add	sp, #12
 800c6b0:	bd30      	pop	{r4, r5, pc}
 800c6b2:	bf00      	nop
 800c6b4:	20019c4c 	.word	0x20019c4c

0800c6b8 <_cbPaintMemDev>:
 800c6b8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c6bc:	4d17      	ldr	r5, [pc, #92]	; (800c71c <_cbPaintMemDev+0x64>)
 800c6be:	682b      	ldr	r3, [r5, #0]
 800c6c0:	4606      	mov	r6, r0
 800c6c2:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c6c4:	f006 f954 	bl	8012970 <GUI_ALLOC_LockH>
 800c6c8:	682a      	ldr	r2, [r5, #0]
 800c6ca:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 800c6ce:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 800c6d2:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 800c6d6:	89c7      	ldrh	r7, [r0, #14]
 800c6d8:	ac02      	add	r4, sp, #8
 800c6da:	3208      	adds	r2, #8
 800c6dc:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c6e0:	f100 0308 	add.w	r3, r0, #8
 800c6e4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c6e8:	e883 0003 	stmia.w	r3, {r0, r1}
 800c6ec:	4620      	mov	r0, r4
 800c6ee:	f006 f94d 	bl	801298c <GUI_ALLOC_UnlockH>
 800c6f2:	6830      	ldr	r0, [r6, #0]
 800c6f4:	f7ff ffa4 	bl	800c640 <WM__PaintWinAndOverlays>
 800c6f8:	682b      	ldr	r3, [r5, #0]
 800c6fa:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c6fc:	f006 f938 	bl	8012970 <GUI_ALLOC_LockH>
 800c700:	9001      	str	r0, [sp, #4]
 800c702:	f8a0 a008 	strh.w	sl, [r0, #8]
 800c706:	f8a0 900a 	strh.w	r9, [r0, #10]
 800c70a:	f8a0 800c 	strh.w	r8, [r0, #12]
 800c70e:	81c7      	strh	r7, [r0, #14]
 800c710:	4620      	mov	r0, r4
 800c712:	f006 f93b 	bl	801298c <GUI_ALLOC_UnlockH>
 800c716:	b002      	add	sp, #8
 800c718:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c71c:	2000016c 	.word	0x2000016c

0800c720 <WM__ClipAtParentBorders>:
 800c720:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c722:	4607      	mov	r7, r0
 800c724:	460d      	mov	r5, r1
 800c726:	4628      	mov	r0, r5
 800c728:	f006 f922 	bl	8012970 <GUI_ALLOC_LockH>
 800c72c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c72e:	ac02      	add	r4, sp, #8
 800c730:	f013 0602 	ands.w	r6, r3, #2
 800c734:	4601      	mov	r1, r0
 800c736:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c73a:	d104      	bne.n	800c746 <WM__ClipAtParentBorders+0x26>
 800c73c:	4620      	mov	r0, r4
 800c73e:	f006 f925 	bl	801298c <GUI_ALLOC_UnlockH>
 800c742:	4630      	mov	r0, r6
 800c744:	e016      	b.n	800c774 <WM__ClipAtParentBorders+0x54>
 800c746:	4638      	mov	r0, r7
 800c748:	f003 fe8e 	bl	8010468 <GUI__IntersectRect>
 800c74c:	9b01      	ldr	r3, [sp, #4]
 800c74e:	699e      	ldr	r6, [r3, #24]
 800c750:	4620      	mov	r0, r4
 800c752:	b956      	cbnz	r6, 800c76a <WM__ClipAtParentBorders+0x4a>
 800c754:	f006 f91a 	bl	801298c <GUI_ALLOC_UnlockH>
 800c758:	4b07      	ldr	r3, [pc, #28]	; (800c778 <WM__ClipAtParentBorders+0x58>)
 800c75a:	681a      	ldr	r2, [r3, #0]
 800c75c:	4295      	cmp	r5, r2
 800c75e:	d008      	beq.n	800c772 <WM__ClipAtParentBorders+0x52>
 800c760:	6858      	ldr	r0, [r3, #4]
 800c762:	1a2b      	subs	r3, r5, r0
 800c764:	4258      	negs	r0, r3
 800c766:	4158      	adcs	r0, r3
 800c768:	e004      	b.n	800c774 <WM__ClipAtParentBorders+0x54>
 800c76a:	f006 f90f 	bl	801298c <GUI_ALLOC_UnlockH>
 800c76e:	4635      	mov	r5, r6
 800c770:	e7d9      	b.n	800c726 <WM__ClipAtParentBorders+0x6>
 800c772:	2001      	movs	r0, #1
 800c774:	b003      	add	sp, #12
 800c776:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c778:	20019c04 	.word	0x20019c04

0800c77c <WM__InsertWindowIntoList>:
 800c77c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c77e:	4604      	mov	r4, r0
 800c780:	b085      	sub	sp, #20
 800c782:	460d      	mov	r5, r1
 800c784:	2900      	cmp	r1, #0
 800c786:	d049      	beq.n	800c81c <WM__InsertWindowIntoList+0xa0>
 800c788:	f006 f8f2 	bl	8012970 <GUI_ALLOC_LockH>
 800c78c:	2300      	movs	r3, #0
 800c78e:	6203      	str	r3, [r0, #32]
 800c790:	6185      	str	r5, [r0, #24]
 800c792:	9001      	str	r0, [sp, #4]
 800c794:	4628      	mov	r0, r5
 800c796:	f006 f8eb 	bl	8012970 <GUI_ALLOC_LockH>
 800c79a:	9b01      	ldr	r3, [sp, #4]
 800c79c:	69c5      	ldr	r5, [r0, #28]
 800c79e:	9002      	str	r0, [sp, #8]
 800c7a0:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 800c7a2:	b92d      	cbnz	r5, 800c7b0 <WM__InsertWindowIntoList+0x34>
 800c7a4:	61c4      	str	r4, [r0, #28]
 800c7a6:	a801      	add	r0, sp, #4
 800c7a8:	f006 f8f0 	bl	801298c <GUI_ALLOC_UnlockH>
 800c7ac:	a802      	add	r0, sp, #8
 800c7ae:	e033      	b.n	800c818 <WM__InsertWindowIntoList+0x9c>
 800c7b0:	4628      	mov	r0, r5
 800c7b2:	f006 f8dd 	bl	8012970 <GUI_ALLOC_LockH>
 800c7b6:	ae04      	add	r6, sp, #16
 800c7b8:	f007 0708 	and.w	r7, r7, #8
 800c7bc:	f846 0d04 	str.w	r0, [r6, #-4]!
 800c7c0:	b977      	cbnz	r7, 800c7e0 <WM__InsertWindowIntoList+0x64>
 800c7c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c7c4:	071a      	lsls	r2, r3, #28
 800c7c6:	d50b      	bpl.n	800c7e0 <WM__InsertWindowIntoList+0x64>
 800c7c8:	9b01      	ldr	r3, [sp, #4]
 800c7ca:	621d      	str	r5, [r3, #32]
 800c7cc:	9b02      	ldr	r3, [sp, #8]
 800c7ce:	a801      	add	r0, sp, #4
 800c7d0:	61dc      	str	r4, [r3, #28]
 800c7d2:	f006 f8db 	bl	801298c <GUI_ALLOC_UnlockH>
 800c7d6:	a802      	add	r0, sp, #8
 800c7d8:	f006 f8d8 	bl	801298c <GUI_ALLOC_UnlockH>
 800c7dc:	4630      	mov	r0, r6
 800c7de:	e01b      	b.n	800c818 <WM__InsertWindowIntoList+0x9c>
 800c7e0:	a802      	add	r0, sp, #8
 800c7e2:	f006 f8d3 	bl	801298c <GUI_ALLOC_UnlockH>
 800c7e6:	4630      	mov	r0, r6
 800c7e8:	f006 f8d0 	bl	801298c <GUI_ALLOC_UnlockH>
 800c7ec:	4628      	mov	r0, r5
 800c7ee:	f006 f8b5 	bl	801295c <GUI_ALLOC_h2p>
 800c7f2:	9003      	str	r0, [sp, #12]
 800c7f4:	9b03      	ldr	r3, [sp, #12]
 800c7f6:	6a1d      	ldr	r5, [r3, #32]
 800c7f8:	b90d      	cbnz	r5, 800c7fe <WM__InsertWindowIntoList+0x82>
 800c7fa:	621c      	str	r4, [r3, #32]
 800c7fc:	e00b      	b.n	800c816 <WM__InsertWindowIntoList+0x9a>
 800c7fe:	4628      	mov	r0, r5
 800c800:	f006 f8ac 	bl	801295c <GUI_ALLOC_h2p>
 800c804:	2f00      	cmp	r7, #0
 800c806:	d1f4      	bne.n	800c7f2 <WM__InsertWindowIntoList+0x76>
 800c808:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c80a:	071b      	lsls	r3, r3, #28
 800c80c:	d5f1      	bpl.n	800c7f2 <WM__InsertWindowIntoList+0x76>
 800c80e:	9b03      	ldr	r3, [sp, #12]
 800c810:	621c      	str	r4, [r3, #32]
 800c812:	9b01      	ldr	r3, [sp, #4]
 800c814:	621d      	str	r5, [r3, #32]
 800c816:	a801      	add	r0, sp, #4
 800c818:	f006 f8b8 	bl	801298c <GUI_ALLOC_UnlockH>
 800c81c:	b005      	add	sp, #20
 800c81e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c820 <WM__RemoveWindowFromList>:
 800c820:	b570      	push	{r4, r5, r6, lr}
 800c822:	4604      	mov	r4, r0
 800c824:	f006 f89a 	bl	801295c <GUI_ALLOC_h2p>
 800c828:	4605      	mov	r5, r0
 800c82a:	6980      	ldr	r0, [r0, #24]
 800c82c:	b1a8      	cbz	r0, 800c85a <WM__RemoveWindowFromList+0x3a>
 800c82e:	f006 f895 	bl	801295c <GUI_ALLOC_h2p>
 800c832:	69c3      	ldr	r3, [r0, #28]
 800c834:	42a3      	cmp	r3, r4
 800c836:	4606      	mov	r6, r0
 800c838:	d105      	bne.n	800c846 <WM__RemoveWindowFromList+0x26>
 800c83a:	4618      	mov	r0, r3
 800c83c:	f006 f88e 	bl	801295c <GUI_ALLOC_h2p>
 800c840:	6a03      	ldr	r3, [r0, #32]
 800c842:	61f3      	str	r3, [r6, #28]
 800c844:	bd70      	pop	{r4, r5, r6, pc}
 800c846:	b143      	cbz	r3, 800c85a <WM__RemoveWindowFromList+0x3a>
 800c848:	4618      	mov	r0, r3
 800c84a:	f006 f887 	bl	801295c <GUI_ALLOC_h2p>
 800c84e:	6a03      	ldr	r3, [r0, #32]
 800c850:	42a3      	cmp	r3, r4
 800c852:	d1f8      	bne.n	800c846 <WM__RemoveWindowFromList+0x26>
 800c854:	6a2b      	ldr	r3, [r5, #32]
 800c856:	6203      	str	r3, [r0, #32]
 800c858:	bd70      	pop	{r4, r5, r6, pc}
 800c85a:	bd70      	pop	{r4, r5, r6, pc}

0800c85c <WM__Client2Screen>:
 800c85c:	4603      	mov	r3, r0
 800c85e:	4608      	mov	r0, r1
 800c860:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800c864:	f9b3 1000 	ldrsh.w	r1, [r3]
 800c868:	f004 bff4 	b.w	8011854 <GUI_MoveRect>

0800c86c <_SetClipRectUserIntersect>:
 800c86c:	4b11      	ldr	r3, [pc, #68]	; (800c8b4 <_SetClipRectUserIntersect+0x48>)
 800c86e:	b530      	push	{r4, r5, lr}
 800c870:	681c      	ldr	r4, [r3, #0]
 800c872:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800c874:	b085      	sub	sp, #20
 800c876:	4605      	mov	r5, r0
 800c878:	b1ba      	cbz	r2, 800c8aa <_SetClipRectUserIntersect+0x3e>
 800c87a:	6810      	ldr	r0, [r2, #0]
 800c87c:	6851      	ldr	r1, [r2, #4]
 800c87e:	ab02      	add	r3, sp, #8
 800c880:	c303      	stmia	r3!, {r0, r1}
 800c882:	4b0d      	ldr	r3, [pc, #52]	; (800c8b8 <_SetClipRectUserIntersect+0x4c>)
 800c884:	6818      	ldr	r0, [r3, #0]
 800c886:	b900      	cbnz	r0, 800c88a <_SetClipRectUserIntersect+0x1e>
 800c888:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c88a:	f006 f871 	bl	8012970 <GUI_ALLOC_LockH>
 800c88e:	ac04      	add	r4, sp, #16
 800c890:	a902      	add	r1, sp, #8
 800c892:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800c896:	f7ff ffe1 	bl	800c85c <WM__Client2Screen>
 800c89a:	4620      	mov	r0, r4
 800c89c:	f006 f876 	bl	801298c <GUI_ALLOC_UnlockH>
 800c8a0:	a802      	add	r0, sp, #8
 800c8a2:	4629      	mov	r1, r5
 800c8a4:	f003 fde0 	bl	8010468 <GUI__IntersectRect>
 800c8a8:	a802      	add	r0, sp, #8
 800c8aa:	f002 ffa3 	bl	800f7f4 <LCD_SetClipRectEx>
 800c8ae:	b005      	add	sp, #20
 800c8b0:	bd30      	pop	{r4, r5, pc}
 800c8b2:	bf00      	nop
 800c8b4:	2000016c 	.word	0x2000016c
 800c8b8:	20019c00 	.word	0x20019c00

0800c8bc <WM__ActivateClipRect>:
 800c8bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c8be:	4b0e      	ldr	r3, [pc, #56]	; (800c8f8 <WM__ActivateClipRect+0x3c>)
 800c8c0:	681b      	ldr	r3, [r3, #0]
 800c8c2:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800c8c6:	b10a      	cbz	r2, 800c8cc <WM__ActivateClipRect+0x10>
 800c8c8:	480c      	ldr	r0, [pc, #48]	; (800c8fc <WM__ActivateClipRect+0x40>)
 800c8ca:	e011      	b.n	800c8f0 <WM__ActivateClipRect+0x34>
 800c8cc:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c8ce:	f006 f84f 	bl	8012970 <GUI_ALLOC_LockH>
 800c8d2:	9001      	str	r0, [sp, #4]
 800c8d4:	c803      	ldmia	r0, {r0, r1}
 800c8d6:	ac02      	add	r4, sp, #8
 800c8d8:	e884 0003 	stmia.w	r4, {r0, r1}
 800c8dc:	a801      	add	r0, sp, #4
 800c8de:	f006 f855 	bl	801298c <GUI_ALLOC_UnlockH>
 800c8e2:	4b07      	ldr	r3, [pc, #28]	; (800c900 <WM__ActivateClipRect+0x44>)
 800c8e4:	6819      	ldr	r1, [r3, #0]
 800c8e6:	b111      	cbz	r1, 800c8ee <WM__ActivateClipRect+0x32>
 800c8e8:	4620      	mov	r0, r4
 800c8ea:	f7ff ff19 	bl	800c720 <WM__ClipAtParentBorders>
 800c8ee:	4620      	mov	r0, r4
 800c8f0:	f7ff ffbc 	bl	800c86c <_SetClipRectUserIntersect>
 800c8f4:	b004      	add	sp, #16
 800c8f6:	bd10      	pop	{r4, pc}
 800c8f8:	2000016c 	.word	0x2000016c
 800c8fc:	20019440 	.word	0x20019440
 800c900:	20019c00 	.word	0x20019c00

0800c904 <WM__IsWindow>:
 800c904:	4b06      	ldr	r3, [pc, #24]	; (800c920 <WM__IsWindow+0x1c>)
 800c906:	b510      	push	{r4, lr}
 800c908:	4604      	mov	r4, r0
 800c90a:	6818      	ldr	r0, [r3, #0]
 800c90c:	b128      	cbz	r0, 800c91a <WM__IsWindow+0x16>
 800c90e:	42a0      	cmp	r0, r4
 800c910:	d004      	beq.n	800c91c <WM__IsWindow+0x18>
 800c912:	f006 f823 	bl	801295c <GUI_ALLOC_h2p>
 800c916:	6940      	ldr	r0, [r0, #20]
 800c918:	e7f8      	b.n	800c90c <WM__IsWindow+0x8>
 800c91a:	bd10      	pop	{r4, pc}
 800c91c:	2001      	movs	r0, #1
 800c91e:	bd10      	pop	{r4, pc}
 800c920:	20019c20 	.word	0x20019c20

0800c924 <WM__InvalidateDrawAndDescs>:
 800c924:	b513      	push	{r0, r1, r4, lr}
 800c926:	4604      	mov	r4, r0
 800c928:	b300      	cbz	r0, 800c96c <WM__InvalidateDrawAndDescs+0x48>
 800c92a:	f006 f821 	bl	8012970 <GUI_ALLOC_LockH>
 800c92e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800c930:	9001      	str	r0, [sp, #4]
 800c932:	0793      	lsls	r3, r2, #30
 800c934:	d517      	bpl.n	800c966 <WM__InvalidateDrawAndDescs+0x42>
 800c936:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c938:	b140      	cbz	r0, 800c94c <WM__InvalidateDrawAndDescs+0x28>
 800c93a:	4b0d      	ldr	r3, [pc, #52]	; (800c970 <WM__InvalidateDrawAndDescs+0x4c>)
 800c93c:	681b      	ldr	r3, [r3, #0]
 800c93e:	42a3      	cmp	r3, r4
 800c940:	d004      	beq.n	800c94c <WM__InvalidateDrawAndDescs+0x28>
 800c942:	f001 fdd7 	bl	800e4f4 <GUI_MEMDEV_Delete>
 800c946:	9b01      	ldr	r3, [sp, #4]
 800c948:	2200      	movs	r2, #0
 800c94a:	625a      	str	r2, [r3, #36]	; 0x24
 800c94c:	4620      	mov	r0, r4
 800c94e:	f7ff fb9b 	bl	800c088 <WM_GetFirstChild>
 800c952:	4604      	mov	r4, r0
 800c954:	b13c      	cbz	r4, 800c966 <WM__InvalidateDrawAndDescs+0x42>
 800c956:	4620      	mov	r0, r4
 800c958:	f7ff ffe4 	bl	800c924 <WM__InvalidateDrawAndDescs>
 800c95c:	4620      	mov	r0, r4
 800c95e:	f005 fffd 	bl	801295c <GUI_ALLOC_h2p>
 800c962:	6a04      	ldr	r4, [r0, #32]
 800c964:	e7f6      	b.n	800c954 <WM__InvalidateDrawAndDescs+0x30>
 800c966:	a801      	add	r0, sp, #4
 800c968:	f006 f810 	bl	801298c <GUI_ALLOC_UnlockH>
 800c96c:	b002      	add	sp, #8
 800c96e:	bd10      	pop	{r4, pc}
 800c970:	20019c48 	.word	0x20019c48

0800c974 <WM__RectIsNZ>:
 800c974:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c978:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c97c:	429a      	cmp	r2, r3
 800c97e:	dc08      	bgt.n	800c992 <WM__RectIsNZ+0x1e>
 800c980:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c984:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800c988:	429a      	cmp	r2, r3
 800c98a:	bfcc      	ite	gt
 800c98c:	2000      	movgt	r0, #0
 800c98e:	2001      	movle	r0, #1
 800c990:	4770      	bx	lr
 800c992:	2000      	movs	r0, #0
 800c994:	4770      	bx	lr
	...

0800c998 <_Invalidate1Abs>:
 800c998:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c99a:	b085      	sub	sp, #20
 800c99c:	4606      	mov	r6, r0
 800c99e:	460d      	mov	r5, r1
 800c9a0:	4617      	mov	r7, r2
 800c9a2:	f005 ffdb 	bl	801295c <GUI_ALLOC_h2p>
 800c9a6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c9a8:	9001      	str	r0, [sp, #4]
 800c9aa:	07a3      	lsls	r3, r4, #30
 800c9ac:	d534      	bpl.n	800ca18 <_Invalidate1Abs+0x80>
 800c9ae:	4628      	mov	r0, r5
 800c9b0:	f7ff ffe0 	bl	800c974 <WM__RectIsNZ>
 800c9b4:	2800      	cmp	r0, #0
 800c9b6:	d02f      	beq.n	800ca18 <_Invalidate1Abs+0x80>
 800c9b8:	f640 0301 	movw	r3, #2049	; 0x801
 800c9bc:	4023      	ands	r3, r4
 800c9be:	2b01      	cmp	r3, #1
 800c9c0:	d02a      	beq.n	800ca18 <_Invalidate1Abs+0x80>
 800c9c2:	4630      	mov	r0, r6
 800c9c4:	f005 ffd4 	bl	8012970 <GUI_ALLOC_LockH>
 800c9c8:	ac02      	add	r4, sp, #8
 800c9ca:	4602      	mov	r2, r0
 800c9cc:	9001      	str	r0, [sp, #4]
 800c9ce:	4629      	mov	r1, r5
 800c9d0:	4620      	mov	r0, r4
 800c9d2:	f003 fd17 	bl	8010404 <GUI__IntersectRects>
 800c9d6:	4620      	mov	r0, r4
 800c9d8:	f7ff ffcc 	bl	800c974 <WM__RectIsNZ>
 800c9dc:	b1c8      	cbz	r0, 800ca12 <_Invalidate1Abs+0x7a>
 800c9de:	9b01      	ldr	r3, [sp, #4]
 800c9e0:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800c9e2:	f244 0120 	movw	r1, #16416	; 0x4020
 800c9e6:	4031      	ands	r1, r6
 800c9e8:	f103 0508 	add.w	r5, r3, #8
 800c9ec:	b129      	cbz	r1, 800c9fa <_Invalidate1Abs+0x62>
 800c9ee:	4628      	mov	r0, r5
 800c9f0:	4629      	mov	r1, r5
 800c9f2:	4622      	mov	r2, r4
 800c9f4:	f004 ff3e 	bl	8011874 <GUI_MergeRect>
 800c9f8:	e00b      	b.n	800ca12 <_Invalidate1Abs+0x7a>
 800c9fa:	e894 0003 	ldmia.w	r4, {r0, r1}
 800c9fe:	433e      	orrs	r6, r7
 800ca00:	e885 0003 	stmia.w	r5, {r0, r1}
 800ca04:	629e      	str	r6, [r3, #40]	; 0x28
 800ca06:	4b05      	ldr	r3, [pc, #20]	; (800ca1c <_Invalidate1Abs+0x84>)
 800ca08:	881a      	ldrh	r2, [r3, #0]
 800ca0a:	3201      	adds	r2, #1
 800ca0c:	801a      	strh	r2, [r3, #0]
 800ca0e:	f003 ffab 	bl	8010968 <GUI_SignalEvent>
 800ca12:	a801      	add	r0, sp, #4
 800ca14:	f005 ffba 	bl	801298c <GUI_ALLOC_UnlockH>
 800ca18:	b005      	add	sp, #20
 800ca1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca1c:	20019c1c 	.word	0x20019c1c

0800ca20 <WM__Invalidate1Abs>:
 800ca20:	2220      	movs	r2, #32
 800ca22:	f7ff bfb9 	b.w	800c998 <_Invalidate1Abs>

0800ca26 <WM_InvalidateWindowAndDescsEx>:
 800ca26:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca28:	460f      	mov	r7, r1
 800ca2a:	b085      	sub	sp, #20
 800ca2c:	4615      	mov	r5, r2
 800ca2e:	4606      	mov	r6, r0
 800ca30:	b348      	cbz	r0, 800ca86 <WM_InvalidateWindowAndDescsEx+0x60>
 800ca32:	f005 ff9d 	bl	8012970 <GUI_ALLOC_LockH>
 800ca36:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ca38:	ac04      	add	r4, sp, #16
 800ca3a:	079b      	lsls	r3, r3, #30
 800ca3c:	4602      	mov	r2, r0
 800ca3e:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800ca42:	d403      	bmi.n	800ca4c <WM_InvalidateWindowAndDescsEx+0x26>
 800ca44:	4620      	mov	r0, r4
 800ca46:	f005 ffa1 	bl	801298c <GUI_ALLOC_UnlockH>
 800ca4a:	e01c      	b.n	800ca86 <WM_InvalidateWindowAndDescsEx+0x60>
 800ca4c:	a802      	add	r0, sp, #8
 800ca4e:	4639      	mov	r1, r7
 800ca50:	f003 fcd8 	bl	8010404 <GUI__IntersectRects>
 800ca54:	2800      	cmp	r0, #0
 800ca56:	d0f5      	beq.n	800ca44 <WM_InvalidateWindowAndDescsEx+0x1e>
 800ca58:	4620      	mov	r0, r4
 800ca5a:	f005 ff97 	bl	801298c <GUI_ALLOC_UnlockH>
 800ca5e:	4630      	mov	r0, r6
 800ca60:	a902      	add	r1, sp, #8
 800ca62:	462a      	mov	r2, r5
 800ca64:	f7ff ff98 	bl	800c998 <_Invalidate1Abs>
 800ca68:	4630      	mov	r0, r6
 800ca6a:	f7ff fb0d 	bl	800c088 <WM_GetFirstChild>
 800ca6e:	4604      	mov	r4, r0
 800ca70:	b14c      	cbz	r4, 800ca86 <WM_InvalidateWindowAndDescsEx+0x60>
 800ca72:	4620      	mov	r0, r4
 800ca74:	a902      	add	r1, sp, #8
 800ca76:	462a      	mov	r2, r5
 800ca78:	f7ff ffd5 	bl	800ca26 <WM_InvalidateWindowAndDescsEx>
 800ca7c:	4620      	mov	r0, r4
 800ca7e:	f005 ff6d 	bl	801295c <GUI_ALLOC_h2p>
 800ca82:	6a04      	ldr	r4, [r0, #32]
 800ca84:	e7f4      	b.n	800ca70 <WM_InvalidateWindowAndDescsEx+0x4a>
 800ca86:	b005      	add	sp, #20
 800ca88:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ca8a <WM__InvalidateRect>:
 800ca8a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ca8e:	4680      	mov	r8, r0
 800ca90:	4617      	mov	r7, r2
 800ca92:	461d      	mov	r5, r3
 800ca94:	460c      	mov	r4, r1
 800ca96:	2900      	cmp	r1, #0
 800ca98:	d030      	beq.n	800cafc <WM__InvalidateRect+0x72>
 800ca9a:	4608      	mov	r0, r1
 800ca9c:	f005 ff68 	bl	8012970 <GUI_ALLOC_LockH>
 800caa0:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800caa2:	9001      	str	r0, [sp, #4]
 800caa4:	07b3      	lsls	r3, r6, #30
 800caa6:	4602      	mov	r2, r0
 800caa8:	d525      	bpl.n	800caf6 <WM__InvalidateRect+0x6c>
 800caaa:	a802      	add	r0, sp, #8
 800caac:	4641      	mov	r1, r8
 800caae:	f003 fca9 	bl	8010404 <GUI__IntersectRects>
 800cab2:	b300      	cbz	r0, 800caf6 <WM__InvalidateRect+0x6c>
 800cab4:	f640 0301 	movw	r3, #2049	; 0x801
 800cab8:	4033      	ands	r3, r6
 800caba:	2b01      	cmp	r3, #1
 800cabc:	d107      	bne.n	800cace <WM__InvalidateRect+0x44>
 800cabe:	9b01      	ldr	r3, [sp, #4]
 800cac0:	a802      	add	r0, sp, #8
 800cac2:	6999      	ldr	r1, [r3, #24]
 800cac4:	6a1a      	ldr	r2, [r3, #32]
 800cac6:	462b      	mov	r3, r5
 800cac8:	f7ff ffdf 	bl	800ca8a <WM__InvalidateRect>
 800cacc:	e004      	b.n	800cad8 <WM__InvalidateRect+0x4e>
 800cace:	4620      	mov	r0, r4
 800cad0:	a902      	add	r1, sp, #8
 800cad2:	462a      	mov	r2, r5
 800cad4:	f7ff ff60 	bl	800c998 <_Invalidate1Abs>
 800cad8:	9b01      	ldr	r3, [sp, #4]
 800cada:	69dc      	ldr	r4, [r3, #28]
 800cadc:	b15c      	cbz	r4, 800caf6 <WM__InvalidateRect+0x6c>
 800cade:	42bc      	cmp	r4, r7
 800cae0:	d009      	beq.n	800caf6 <WM__InvalidateRect+0x6c>
 800cae2:	4620      	mov	r0, r4
 800cae4:	a902      	add	r1, sp, #8
 800cae6:	462a      	mov	r2, r5
 800cae8:	f7ff ff9d 	bl	800ca26 <WM_InvalidateWindowAndDescsEx>
 800caec:	4620      	mov	r0, r4
 800caee:	f005 ff35 	bl	801295c <GUI_ALLOC_h2p>
 800caf2:	6a04      	ldr	r4, [r0, #32]
 800caf4:	e7f2      	b.n	800cadc <WM__InvalidateRect+0x52>
 800caf6:	a801      	add	r0, sp, #4
 800caf8:	f005 ff48 	bl	801298c <GUI_ALLOC_UnlockH>
 800cafc:	b004      	add	sp, #16
 800cafe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cb02 <WM__InvalidateParent>:
 800cb02:	b570      	push	{r4, r5, r6, lr}
 800cb04:	4605      	mov	r5, r0
 800cb06:	4608      	mov	r0, r1
 800cb08:	460c      	mov	r4, r1
 800cb0a:	4616      	mov	r6, r2
 800cb0c:	f005 ff26 	bl	801295c <GUI_ALLOC_h2p>
 800cb10:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cb12:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800cb16:	4628      	mov	r0, r5
 800cb18:	4621      	mov	r1, r4
 800cb1a:	4632      	mov	r2, r6
 800cb1c:	bf0c      	ite	eq
 800cb1e:	2320      	moveq	r3, #32
 800cb20:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 800cb24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cb28:	f7ff bfaf 	b.w	800ca8a <WM__InvalidateRect>

0800cb2c <WM__InvalidateRectEx>:
 800cb2c:	2320      	movs	r3, #32
 800cb2e:	f7ff bfac 	b.w	800ca8a <WM__InvalidateRect>

0800cb32 <WM__DetachWindow>:
 800cb32:	b513      	push	{r0, r1, r4, lr}
 800cb34:	4604      	mov	r4, r0
 800cb36:	f005 ff1b 	bl	8012970 <GUI_ALLOC_LockH>
 800cb3a:	6981      	ldr	r1, [r0, #24]
 800cb3c:	9001      	str	r0, [sp, #4]
 800cb3e:	b141      	cbz	r1, 800cb52 <WM__DetachWindow+0x20>
 800cb40:	6a02      	ldr	r2, [r0, #32]
 800cb42:	f7ff fff3 	bl	800cb2c <WM__InvalidateRectEx>
 800cb46:	4620      	mov	r0, r4
 800cb48:	f7ff fe6a 	bl	800c820 <WM__RemoveWindowFromList>
 800cb4c:	9b01      	ldr	r3, [sp, #4]
 800cb4e:	2200      	movs	r2, #0
 800cb50:	619a      	str	r2, [r3, #24]
 800cb52:	a801      	add	r0, sp, #4
 800cb54:	f005 ff1a 	bl	801298c <GUI_ALLOC_UnlockH>
 800cb58:	b002      	add	sp, #8
 800cb5a:	bd10      	pop	{r4, pc}

0800cb5c <WM_SendMessage>:
 800cb5c:	b108      	cbz	r0, 800cb62 <WM_SendMessage+0x6>
 800cb5e:	f008 b955 	b.w	8014e0c <WM__SendMessage>
 800cb62:	4770      	bx	lr

0800cb64 <WM__SendMsgNoData>:
 800cb64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cb66:	ab04      	add	r3, sp, #16
 800cb68:	9001      	str	r0, [sp, #4]
 800cb6a:	f843 1d10 	str.w	r1, [r3, #-16]!
 800cb6e:	4669      	mov	r1, sp
 800cb70:	f008 f94c 	bl	8014e0c <WM__SendMessage>
 800cb74:	b005      	add	sp, #20
 800cb76:	f85d fb04 	ldr.w	pc, [sp], #4

0800cb7a <WM__GetClientRectWin>:
 800cb7a:	2300      	movs	r3, #0
 800cb7c:	800b      	strh	r3, [r1, #0]
 800cb7e:	8882      	ldrh	r2, [r0, #4]
 800cb80:	804b      	strh	r3, [r1, #2]
 800cb82:	8803      	ldrh	r3, [r0, #0]
 800cb84:	1ad3      	subs	r3, r2, r3
 800cb86:	808b      	strh	r3, [r1, #4]
 800cb88:	88c2      	ldrh	r2, [r0, #6]
 800cb8a:	8843      	ldrh	r3, [r0, #2]
 800cb8c:	1ad3      	subs	r3, r2, r3
 800cb8e:	80cb      	strh	r3, [r1, #6]
 800cb90:	4770      	bx	lr

0800cb92 <WM_InvalidateRect>:
 800cb92:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb94:	460f      	mov	r7, r1
 800cb96:	b087      	sub	sp, #28
 800cb98:	4605      	mov	r5, r0
 800cb9a:	2800      	cmp	r0, #0
 800cb9c:	d033      	beq.n	800cc06 <WM_InvalidateRect+0x74>
 800cb9e:	f005 fee7 	bl	8012970 <GUI_ALLOC_LockH>
 800cba2:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800cba4:	9001      	str	r0, [sp, #4]
 800cba6:	07b2      	lsls	r2, r6, #30
 800cba8:	d52a      	bpl.n	800cc00 <WM_InvalidateRect+0x6e>
 800cbaa:	c803      	ldmia	r0, {r0, r1}
 800cbac:	ac04      	add	r4, sp, #16
 800cbae:	03f3      	lsls	r3, r6, #15
 800cbb0:	e884 0003 	stmia.w	r4, {r0, r1}
 800cbb4:	d502      	bpl.n	800cbbc <WM_InvalidateRect+0x2a>
 800cbb6:	4628      	mov	r0, r5
 800cbb8:	f7ff feb4 	bl	800c924 <WM__InvalidateDrawAndDescs>
 800cbbc:	b15f      	cbz	r7, 800cbd6 <WM_InvalidateRect+0x44>
 800cbbe:	6838      	ldr	r0, [r7, #0]
 800cbc0:	6879      	ldr	r1, [r7, #4]
 800cbc2:	ab02      	add	r3, sp, #8
 800cbc4:	c303      	stmia	r3!, {r0, r1}
 800cbc6:	9801      	ldr	r0, [sp, #4]
 800cbc8:	a902      	add	r1, sp, #8
 800cbca:	f7ff fe47 	bl	800c85c <WM__Client2Screen>
 800cbce:	4620      	mov	r0, r4
 800cbd0:	a902      	add	r1, sp, #8
 800cbd2:	f003 fc49 	bl	8010468 <GUI__IntersectRect>
 800cbd6:	4620      	mov	r0, r4
 800cbd8:	4629      	mov	r1, r5
 800cbda:	f7ff fda1 	bl	800c720 <WM__ClipAtParentBorders>
 800cbde:	b178      	cbz	r0, 800cc00 <WM_InvalidateRect+0x6e>
 800cbe0:	f640 0301 	movw	r3, #2049	; 0x801
 800cbe4:	4033      	ands	r3, r6
 800cbe6:	2b01      	cmp	r3, #1
 800cbe8:	d106      	bne.n	800cbf8 <WM_InvalidateRect+0x66>
 800cbea:	9b01      	ldr	r3, [sp, #4]
 800cbec:	4620      	mov	r0, r4
 800cbee:	6999      	ldr	r1, [r3, #24]
 800cbf0:	6a1a      	ldr	r2, [r3, #32]
 800cbf2:	f7ff ff9b 	bl	800cb2c <WM__InvalidateRectEx>
 800cbf6:	e003      	b.n	800cc00 <WM_InvalidateRect+0x6e>
 800cbf8:	4628      	mov	r0, r5
 800cbfa:	4621      	mov	r1, r4
 800cbfc:	f7ff ff10 	bl	800ca20 <WM__Invalidate1Abs>
 800cc00:	a801      	add	r0, sp, #4
 800cc02:	f005 fec3 	bl	801298c <GUI_ALLOC_UnlockH>
 800cc06:	b007      	add	sp, #28
 800cc08:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cc0a <WM_InvalidateWindow>:
 800cc0a:	2100      	movs	r1, #0
 800cc0c:	f7ff bfc1 	b.w	800cb92 <WM_InvalidateRect>

0800cc10 <WM__GetTopLevelLayer>:
 800cc10:	b510      	push	{r4, lr}
 800cc12:	4604      	mov	r4, r0
 800cc14:	f005 fea2 	bl	801295c <GUI_ALLOC_h2p>
 800cc18:	6980      	ldr	r0, [r0, #24]
 800cc1a:	2800      	cmp	r0, #0
 800cc1c:	d1f9      	bne.n	800cc12 <WM__GetTopLevelLayer+0x2>
 800cc1e:	4b05      	ldr	r3, [pc, #20]	; (800cc34 <WM__GetTopLevelLayer+0x24>)
 800cc20:	681a      	ldr	r2, [r3, #0]
 800cc22:	4294      	cmp	r4, r2
 800cc24:	d005      	beq.n	800cc32 <WM__GetTopLevelLayer+0x22>
 800cc26:	6858      	ldr	r0, [r3, #4]
 800cc28:	4284      	cmp	r4, r0
 800cc2a:	bf14      	ite	ne
 800cc2c:	f04f 30ff 	movne.w	r0, #4294967295
 800cc30:	2001      	moveq	r0, #1
 800cc32:	bd10      	pop	{r4, pc}
 800cc34:	20019c04 	.word	0x20019c04

0800cc38 <WM__SelectTopLevelLayer>:
 800cc38:	b508      	push	{r3, lr}
 800cc3a:	f7ff ffe9 	bl	800cc10 <WM__GetTopLevelLayer>
 800cc3e:	2800      	cmp	r0, #0
 800cc40:	db03      	blt.n	800cc4a <WM__SelectTopLevelLayer+0x12>
 800cc42:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cc46:	f004 bccb 	b.w	80115e0 <GUI_SelectLayer>
 800cc4a:	bd08      	pop	{r3, pc}

0800cc4c <WM_SelectWindow>:
 800cc4c:	4a0d      	ldr	r2, [pc, #52]	; (800cc84 <WM_SelectWindow+0x38>)
 800cc4e:	6813      	ldr	r3, [r2, #0]
 800cc50:	b570      	push	{r4, r5, r6, lr}
 800cc52:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 800cc54:	4604      	mov	r4, r0
 800cc56:	4616      	mov	r6, r2
 800cc58:	b908      	cbnz	r0, 800cc5e <WM_SelectWindow+0x12>
 800cc5a:	4a0b      	ldr	r2, [pc, #44]	; (800cc88 <WM_SelectWindow+0x3c>)
 800cc5c:	6814      	ldr	r4, [r2, #0]
 800cc5e:	649c      	str	r4, [r3, #72]	; 0x48
 800cc60:	4620      	mov	r0, r4
 800cc62:	f7ff ffe9 	bl	800cc38 <WM__SelectTopLevelLayer>
 800cc66:	f003 f9ed 	bl	8010044 <LCD_SetClipRectMax>
 800cc6a:	4620      	mov	r0, r4
 800cc6c:	f005 fe76 	bl	801295c <GUI_ALLOC_h2p>
 800cc70:	6833      	ldr	r3, [r6, #0]
 800cc72:	f9b0 1000 	ldrsh.w	r1, [r0]
 800cc76:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cc7a:	64d9      	str	r1, [r3, #76]	; 0x4c
 800cc7c:	651a      	str	r2, [r3, #80]	; 0x50
 800cc7e:	4628      	mov	r0, r5
 800cc80:	bd70      	pop	{r4, r5, r6, pc}
 800cc82:	bf00      	nop
 800cc84:	2000016c 	.word	0x2000016c
 800cc88:	20019c20 	.word	0x20019c20

0800cc8c <WM_CreateWindowAsChild>:
 800cc8c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800cc92:	469b      	mov	fp, r3
 800cc94:	4b4b      	ldr	r3, [pc, #300]	; (800cdc4 <WM_CreateWindowAsChild+0x138>)
 800cc96:	4607      	mov	r7, r0
 800cc98:	4688      	mov	r8, r1
 800cc9a:	4692      	mov	sl, r2
 800cc9c:	681e      	ldr	r6, [r3, #0]
 800cc9e:	bb65      	cbnz	r5, 800ccfa <WM_CreateWindowAsChild+0x6e>
 800cca0:	4b49      	ldr	r3, [pc, #292]	; (800cdc8 <WM_CreateWindowAsChild+0x13c>)
 800cca2:	881b      	ldrh	r3, [r3, #0]
 800cca4:	b363      	cbz	r3, 800cd00 <WM_CreateWindowAsChild+0x74>
 800cca6:	4b49      	ldr	r3, [pc, #292]	; (800cdcc <WM_CreateWindowAsChild+0x140>)
 800cca8:	681b      	ldr	r3, [r3, #0]
 800ccaa:	7c5a      	ldrb	r2, [r3, #17]
 800ccac:	4b48      	ldr	r3, [pc, #288]	; (800cdd0 <WM_CreateWindowAsChild+0x144>)
 800ccae:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ccb2:	1c5a      	adds	r2, r3, #1
 800ccb4:	d024      	beq.n	800cd00 <WM_CreateWindowAsChild+0x74>
 800ccb6:	b31b      	cbz	r3, 800cd00 <WM_CreateWindowAsChild+0x74>
 800ccb8:	461d      	mov	r5, r3
 800ccba:	4628      	mov	r0, r5
 800ccbc:	f005 fe58 	bl	8012970 <GUI_ALLOC_LockH>
 800ccc0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ccc4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ccc8:	9001      	str	r0, [sp, #4]
 800ccca:	4417      	add	r7, r2
 800cccc:	4498      	add	r8, r3
 800ccce:	f1ba 0f00 	cmp.w	sl, #0
 800ccd2:	d105      	bne.n	800cce0 <WM_CreateWindowAsChild+0x54>
 800ccd4:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 800ccd8:	ebc2 0a0a 	rsb	sl, r2, sl
 800ccdc:	f10a 0a01 	add.w	sl, sl, #1
 800cce0:	f1bb 0f00 	cmp.w	fp, #0
 800cce4:	d105      	bne.n	800ccf2 <WM_CreateWindowAsChild+0x66>
 800cce6:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 800ccea:	ebc3 0b0b 	rsb	fp, r3, fp
 800ccee:	f10b 0b01 	add.w	fp, fp, #1
 800ccf2:	a801      	add	r0, sp, #4
 800ccf4:	f005 fe4a 	bl	801298c <GUI_ALLOC_UnlockH>
 800ccf8:	e002      	b.n	800cd00 <WM_CreateWindowAsChild+0x74>
 800ccfa:	1c6b      	adds	r3, r5, #1
 800ccfc:	d1dd      	bne.n	800ccba <WM_CreateWindowAsChild+0x2e>
 800ccfe:	2500      	movs	r5, #0
 800cd00:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800cd02:	302c      	adds	r0, #44	; 0x2c
 800cd04:	f006 f8a1 	bl	8012e4a <GUI_ALLOC_AllocZero>
 800cd08:	4604      	mov	r4, r0
 800cd0a:	2800      	cmp	r0, #0
 800cd0c:	d056      	beq.n	800cdbc <WM_CreateWindowAsChild+0x130>
 800cd0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cd10:	431e      	orrs	r6, r3
 800cd12:	4b2d      	ldr	r3, [pc, #180]	; (800cdc8 <WM_CreateWindowAsChild+0x13c>)
 800cd14:	881a      	ldrh	r2, [r3, #0]
 800cd16:	3201      	adds	r2, #1
 800cd18:	801a      	strh	r2, [r3, #0]
 800cd1a:	f005 fe29 	bl	8012970 <GUI_ALLOC_LockH>
 800cd1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cd20:	6103      	str	r3, [r0, #16]
 800cd22:	f10d 0908 	add.w	r9, sp, #8
 800cd26:	4b2b      	ldr	r3, [pc, #172]	; (800cdd4 <WM_CreateWindowAsChild+0x148>)
 800cd28:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800cd2a:	f849 0d08 	str.w	r0, [r9, #-8]!
 800cd2e:	4033      	ands	r3, r6
 800cd30:	8007      	strh	r7, [r0, #0]
 800cd32:	f8a0 8002 	strh.w	r8, [r0, #2]
 800cd36:	4457      	add	r7, sl
 800cd38:	44d8      	add	r8, fp
 800cd3a:	4313      	orrs	r3, r2
 800cd3c:	3f01      	subs	r7, #1
 800cd3e:	f108 38ff 	add.w	r8, r8, #4294967295
 800cd42:	6283      	str	r3, [r0, #40]	; 0x28
 800cd44:	8087      	strh	r7, [r0, #4]
 800cd46:	f8a0 8006 	strh.w	r8, [r0, #6]
 800cd4a:	4668      	mov	r0, sp
 800cd4c:	f005 fe1e 	bl	801298c <GUI_ALLOC_UnlockH>
 800cd50:	4b21      	ldr	r3, [pc, #132]	; (800cdd8 <WM_CreateWindowAsChild+0x14c>)
 800cd52:	6818      	ldr	r0, [r3, #0]
 800cd54:	b148      	cbz	r0, 800cd6a <WM_CreateWindowAsChild+0xde>
 800cd56:	f005 fe01 	bl	801295c <GUI_ALLOC_h2p>
 800cd5a:	4607      	mov	r7, r0
 800cd5c:	4620      	mov	r0, r4
 800cd5e:	f005 fdfd 	bl	801295c <GUI_ALLOC_h2p>
 800cd62:	697b      	ldr	r3, [r7, #20]
 800cd64:	6143      	str	r3, [r0, #20]
 800cd66:	617c      	str	r4, [r7, #20]
 800cd68:	e000      	b.n	800cd6c <WM_CreateWindowAsChild+0xe0>
 800cd6a:	601c      	str	r4, [r3, #0]
 800cd6c:	4629      	mov	r1, r5
 800cd6e:	4620      	mov	r0, r4
 800cd70:	f7ff fd04 	bl	800c77c <WM__InsertWindowIntoList>
 800cd74:	06b5      	lsls	r5, r6, #26
 800cd76:	d502      	bpl.n	800cd7e <WM_CreateWindowAsChild+0xf2>
 800cd78:	4620      	mov	r0, r4
 800cd7a:	f7ff ff67 	bl	800cc4c <WM_SelectWindow>
 800cd7e:	07f0      	lsls	r0, r6, #31
 800cd80:	d503      	bpl.n	800cd8a <WM_CreateWindowAsChild+0xfe>
 800cd82:	4b16      	ldr	r3, [pc, #88]	; (800cddc <WM_CreateWindowAsChild+0x150>)
 800cd84:	681a      	ldr	r2, [r3, #0]
 800cd86:	3201      	adds	r2, #1
 800cd88:	601a      	str	r2, [r3, #0]
 800cd8a:	0671      	lsls	r1, r6, #25
 800cd8c:	d502      	bpl.n	800cd94 <WM_CreateWindowAsChild+0x108>
 800cd8e:	4620      	mov	r0, r4
 800cd90:	f008 fb6c 	bl	801546c <WM_BringToBottom>
 800cd94:	07b2      	lsls	r2, r6, #30
 800cd96:	d50d      	bpl.n	800cdb4 <WM_CreateWindowAsChild+0x128>
 800cd98:	4620      	mov	r0, r4
 800cd9a:	f005 fde9 	bl	8012970 <GUI_ALLOC_LockH>
 800cd9e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cda0:	9000      	str	r0, [sp, #0]
 800cda2:	f043 0302 	orr.w	r3, r3, #2
 800cda6:	6283      	str	r3, [r0, #40]	; 0x28
 800cda8:	4668      	mov	r0, sp
 800cdaa:	f005 fdef 	bl	801298c <GUI_ALLOC_UnlockH>
 800cdae:	4620      	mov	r0, r4
 800cdb0:	f7ff ff2b 	bl	800cc0a <WM_InvalidateWindow>
 800cdb4:	4620      	mov	r0, r4
 800cdb6:	2101      	movs	r1, #1
 800cdb8:	f7ff fed4 	bl	800cb64 <WM__SendMsgNoData>
 800cdbc:	4620      	mov	r0, r4
 800cdbe:	b003      	add	sp, #12
 800cdc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdc4:	20019c2c 	.word	0x20019c2c
 800cdc8:	20019bfc 	.word	0x20019bfc
 800cdcc:	2000016c 	.word	0x2000016c
 800cdd0:	20019c04 	.word	0x20019c04
 800cdd4:	003f3f9f 	.word	0x003f3f9f
 800cdd8:	20019c20 	.word	0x20019c20
 800cddc:	20019c4c 	.word	0x20019c4c

0800cde0 <WM_DeleteWindow>:
 800cde0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cde2:	4604      	mov	r4, r0
 800cde4:	2800      	cmp	r0, #0
 800cde6:	d06e      	beq.n	800cec6 <WM_DeleteWindow+0xe6>
 800cde8:	f7ff fd8c 	bl	800c904 <WM__IsWindow>
 800cdec:	2800      	cmp	r0, #0
 800cdee:	d06a      	beq.n	800cec6 <WM_DeleteWindow+0xe6>
 800cdf0:	4620      	mov	r0, r4
 800cdf2:	f7ff ff0d 	bl	800cc10 <WM__GetTopLevelLayer>
 800cdf6:	210b      	movs	r1, #11
 800cdf8:	4605      	mov	r5, r0
 800cdfa:	4620      	mov	r0, r4
 800cdfc:	f7ff feb2 	bl	800cb64 <WM__SendMsgNoData>
 800ce00:	4620      	mov	r0, r4
 800ce02:	f7fe fce2 	bl	800b7ca <WM__DeleteAssocTimer>
 800ce06:	4620      	mov	r0, r4
 800ce08:	f005 fdb2 	bl	8012970 <GUI_ALLOC_LockH>
 800ce0c:	9001      	str	r0, [sp, #4]
 800ce0e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800ce10:	b108      	cbz	r0, 800ce16 <WM_DeleteWindow+0x36>
 800ce12:	f001 fb6f 	bl	800e4f4 <GUI_MEMDEV_Delete>
 800ce16:	4b2d      	ldr	r3, [pc, #180]	; (800cecc <WM_DeleteWindow+0xec>)
 800ce18:	4a2d      	ldr	r2, [pc, #180]	; (800ced0 <WM_DeleteWindow+0xf0>)
 800ce1a:	2100      	movs	r1, #0
 800ce1c:	6019      	str	r1, [r3, #0]
 800ce1e:	4b2d      	ldr	r3, [pc, #180]	; (800ced4 <WM_DeleteWindow+0xf4>)
 800ce20:	681b      	ldr	r3, [r3, #0]
 800ce22:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800ce26:	42a0      	cmp	r0, r4
 800ce28:	bf08      	it	eq
 800ce2a:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800ce2e:	4a2a      	ldr	r2, [pc, #168]	; (800ced8 <WM_DeleteWindow+0xf8>)
 800ce30:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800ce34:	42a1      	cmp	r1, r4
 800ce36:	bf04      	itt	eq
 800ce38:	2100      	moveq	r1, #0
 800ce3a:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800ce3e:	4b27      	ldr	r3, [pc, #156]	; (800cedc <WM_DeleteWindow+0xfc>)
 800ce40:	681b      	ldr	r3, [r3, #0]
 800ce42:	b12b      	cbz	r3, 800ce50 <WM_DeleteWindow+0x70>
 800ce44:	685a      	ldr	r2, [r3, #4]
 800ce46:	42a2      	cmp	r2, r4
 800ce48:	bf04      	itt	eq
 800ce4a:	2200      	moveq	r2, #0
 800ce4c:	605a      	streq	r2, [r3, #4]
 800ce4e:	e7f7      	b.n	800ce40 <WM_DeleteWindow+0x60>
 800ce50:	4620      	mov	r0, r4
 800ce52:	2107      	movs	r1, #7
 800ce54:	f7fe ff85 	bl	800bd62 <WM_NotifyParent>
 800ce58:	9e01      	ldr	r6, [sp, #4]
 800ce5a:	69f0      	ldr	r0, [r6, #28]
 800ce5c:	f7ff ffc0 	bl	800cde0 <WM_DeleteWindow>
 800ce60:	69f3      	ldr	r3, [r6, #28]
 800ce62:	2b00      	cmp	r3, #0
 800ce64:	d1f9      	bne.n	800ce5a <WM_DeleteWindow+0x7a>
 800ce66:	4620      	mov	r0, r4
 800ce68:	f7ff fe63 	bl	800cb32 <WM__DetachWindow>
 800ce6c:	4b1c      	ldr	r3, [pc, #112]	; (800cee0 <WM_DeleteWindow+0x100>)
 800ce6e:	6818      	ldr	r0, [r3, #0]
 800ce70:	b150      	cbz	r0, 800ce88 <WM_DeleteWindow+0xa8>
 800ce72:	f005 fd73 	bl	801295c <GUI_ALLOC_h2p>
 800ce76:	4606      	mov	r6, r0
 800ce78:	6940      	ldr	r0, [r0, #20]
 800ce7a:	42a0      	cmp	r0, r4
 800ce7c:	d1f8      	bne.n	800ce70 <WM_DeleteWindow+0x90>
 800ce7e:	4620      	mov	r0, r4
 800ce80:	f005 fd6c 	bl	801295c <GUI_ALLOC_h2p>
 800ce84:	6943      	ldr	r3, [r0, #20]
 800ce86:	6173      	str	r3, [r6, #20]
 800ce88:	9b01      	ldr	r3, [sp, #4]
 800ce8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ce8c:	07da      	lsls	r2, r3, #31
 800ce8e:	d503      	bpl.n	800ce98 <WM_DeleteWindow+0xb8>
 800ce90:	4a14      	ldr	r2, [pc, #80]	; (800cee4 <WM_DeleteWindow+0x104>)
 800ce92:	6811      	ldr	r1, [r2, #0]
 800ce94:	3901      	subs	r1, #1
 800ce96:	6011      	str	r1, [r2, #0]
 800ce98:	069b      	lsls	r3, r3, #26
 800ce9a:	d503      	bpl.n	800cea4 <WM_DeleteWindow+0xc4>
 800ce9c:	4b12      	ldr	r3, [pc, #72]	; (800cee8 <WM_DeleteWindow+0x108>)
 800ce9e:	881a      	ldrh	r2, [r3, #0]
 800cea0:	3a01      	subs	r2, #1
 800cea2:	801a      	strh	r2, [r3, #0]
 800cea4:	a801      	add	r0, sp, #4
 800cea6:	f005 fd71 	bl	801298c <GUI_ALLOC_UnlockH>
 800ceaa:	4b10      	ldr	r3, [pc, #64]	; (800ceec <WM_DeleteWindow+0x10c>)
 800ceac:	881a      	ldrh	r2, [r3, #0]
 800ceae:	4620      	mov	r0, r4
 800ceb0:	3a01      	subs	r2, #1
 800ceb2:	801a      	strh	r2, [r3, #0]
 800ceb4:	f005 fd96 	bl	80129e4 <GUI_ALLOC_Free>
 800ceb8:	2d00      	cmp	r5, #0
 800ceba:	db04      	blt.n	800cec6 <WM_DeleteWindow+0xe6>
 800cebc:	4b0c      	ldr	r3, [pc, #48]	; (800cef0 <WM_DeleteWindow+0x110>)
 800cebe:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800cec2:	f7ff fec3 	bl	800cc4c <WM_SelectWindow>
 800cec6:	b002      	add	sp, #8
 800cec8:	bd70      	pop	{r4, r5, r6, pc}
 800ceca:	bf00      	nop
 800cecc:	20019450 	.word	0x20019450
 800ced0:	20019c14 	.word	0x20019c14
 800ced4:	20019c24 	.word	0x20019c24
 800ced8:	20019c40 	.word	0x20019c40
 800cedc:	20019c38 	.word	0x20019c38
 800cee0:	20019c20 	.word	0x20019c20
 800cee4:	20019c4c 	.word	0x20019c4c
 800cee8:	20019c1c 	.word	0x20019c1c
 800ceec:	20019bfc 	.word	0x20019bfc
 800cef0:	20019c04 	.word	0x20019c04

0800cef4 <WM_GetActiveWindow>:
 800cef4:	4b01      	ldr	r3, [pc, #4]	; (800cefc <WM_GetActiveWindow+0x8>)
 800cef6:	681b      	ldr	r3, [r3, #0]
 800cef8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800cefa:	4770      	bx	lr
 800cefc:	2000016c 	.word	0x2000016c

0800cf00 <WM__GetNextIVR>:
 800cf00:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cf04:	4f5d      	ldr	r7, [pc, #372]	; (800d07c <WM__GetNextIVR+0x17c>)
 800cf06:	683b      	ldr	r3, [r7, #0]
 800cf08:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 800cf0c:	2800      	cmp	r0, #0
 800cf0e:	f000 80b2 	beq.w	800d076 <WM__GetNextIVR+0x176>
 800cf12:	4b5b      	ldr	r3, [pc, #364]	; (800d080 <WM__GetNextIVR+0x180>)
 800cf14:	695a      	ldr	r2, [r3, #20]
 800cf16:	2a01      	cmp	r2, #1
 800cf18:	461c      	mov	r4, r3
 800cf1a:	dd03      	ble.n	800cf24 <WM__GetNextIVR+0x24>
 800cf1c:	3a01      	subs	r2, #1
 800cf1e:	615a      	str	r2, [r3, #20]
 800cf20:	2000      	movs	r0, #0
 800cf22:	e0a8      	b.n	800d076 <WM__GetNextIVR+0x176>
 800cf24:	f104 0608 	add.w	r6, r4, #8
 800cf28:	691b      	ldr	r3, [r3, #16]
 800cf2a:	e896 0003 	ldmia.w	r6, {r0, r1}
 800cf2e:	3301      	adds	r3, #1
 800cf30:	ad02      	add	r5, sp, #8
 800cf32:	6123      	str	r3, [r4, #16]
 800cf34:	e885 0003 	stmia.w	r5, {r0, r1}
 800cf38:	b923      	cbnz	r3, 800cf44 <WM__GetNextIVR+0x44>
 800cf3a:	8823      	ldrh	r3, [r4, #0]
 800cf3c:	f8ad 3008 	strh.w	r3, [sp, #8]
 800cf40:	8863      	ldrh	r3, [r4, #2]
 800cf42:	e011      	b.n	800cf68 <WM__GetNextIVR+0x68>
 800cf44:	89a3      	ldrh	r3, [r4, #12]
 800cf46:	8962      	ldrh	r2, [r4, #10]
 800cf48:	f8ad 200a 	strh.w	r2, [sp, #10]
 800cf4c:	3301      	adds	r3, #1
 800cf4e:	b29b      	uxth	r3, r3
 800cf50:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cf54:	f8ad 3008 	strh.w	r3, [sp, #8]
 800cf58:	b21b      	sxth	r3, r3
 800cf5a:	429a      	cmp	r2, r3
 800cf5c:	da06      	bge.n	800cf6c <WM__GetNextIVR+0x6c>
 800cf5e:	8823      	ldrh	r3, [r4, #0]
 800cf60:	f8ad 3008 	strh.w	r3, [sp, #8]
 800cf64:	89e3      	ldrh	r3, [r4, #14]
 800cf66:	3301      	adds	r3, #1
 800cf68:	f8ad 300a 	strh.w	r3, [sp, #10]
 800cf6c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800cf70:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800cf74:	f8df 8108 	ldr.w	r8, [pc, #264]	; 800d080 <WM__GetNextIVR+0x180>
 800cf78:	429a      	cmp	r2, r3
 800cf7a:	dd04      	ble.n	800cf86 <WM__GetNextIVR+0x86>
 800cf7c:	6963      	ldr	r3, [r4, #20]
 800cf7e:	3b01      	subs	r3, #1
 800cf80:	2000      	movs	r0, #0
 800cf82:	6163      	str	r3, [r4, #20]
 800cf84:	e077      	b.n	800d076 <WM__GetNextIVR+0x176>
 800cf86:	683b      	ldr	r3, [r7, #0]
 800cf88:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800cf8a:	f005 fcf1 	bl	8012970 <GUI_ALLOC_LockH>
 800cf8e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800cf92:	f9b8 3000 	ldrsh.w	r3, [r8]
 800cf96:	9001      	str	r0, [sp, #4]
 800cf98:	429a      	cmp	r2, r3
 800cf9a:	d11c      	bne.n	800cfd6 <WM__GetNextIVR+0xd6>
 800cf9c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800cfa0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800cfa4:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800cfa8:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cfac:	4b33      	ldr	r3, [pc, #204]	; (800d07c <WM__GetNextIVR+0x17c>)
 800cfae:	681b      	ldr	r3, [r3, #0]
 800cfb0:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800cfb2:	b15a      	cbz	r2, 800cfcc <WM__GetNextIVR+0xcc>
 800cfb4:	4610      	mov	r0, r2
 800cfb6:	f005 fcd1 	bl	801295c <GUI_ALLOC_h2p>
 800cfba:	4680      	mov	r8, r0
 800cfbc:	2200      	movs	r2, #0
 800cfbe:	6a00      	ldr	r0, [r0, #32]
 800cfc0:	4629      	mov	r1, r5
 800cfc2:	f7ff f9c1 	bl	800c348 <_Findy1>
 800cfc6:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800cfca:	e7f2      	b.n	800cfb2 <WM__GetNextIVR+0xb2>
 800cfcc:	9b01      	ldr	r3, [sp, #4]
 800cfce:	4629      	mov	r1, r5
 800cfd0:	69d8      	ldr	r0, [r3, #28]
 800cfd2:	f7ff f9b9 	bl	800c348 <_Findy1>
 800cfd6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800cfda:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cfde:	683b      	ldr	r3, [r7, #0]
 800cfe0:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800cfe2:	b16a      	cbz	r2, 800d000 <WM__GetNextIVR+0x100>
 800cfe4:	4610      	mov	r0, r2
 800cfe6:	f005 fcb9 	bl	801295c <GUI_ALLOC_h2p>
 800cfea:	4629      	mov	r1, r5
 800cfec:	4680      	mov	r8, r0
 800cfee:	2200      	movs	r2, #0
 800cff0:	6a00      	ldr	r0, [r0, #32]
 800cff2:	f7ff f9ff 	bl	800c3f4 <_Findx0>
 800cff6:	2800      	cmp	r0, #0
 800cff8:	d1ed      	bne.n	800cfd6 <WM__GetNextIVR+0xd6>
 800cffa:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800cffe:	e7f0      	b.n	800cfe2 <WM__GetNextIVR+0xe2>
 800d000:	9b01      	ldr	r3, [sp, #4]
 800d002:	4629      	mov	r1, r5
 800d004:	69d8      	ldr	r0, [r3, #28]
 800d006:	f7ff f9f5 	bl	800c3f4 <_Findx0>
 800d00a:	2800      	cmp	r0, #0
 800d00c:	d1e3      	bne.n	800cfd6 <WM__GetNextIVR+0xd6>
 800d00e:	88a3      	ldrh	r3, [r4, #4]
 800d010:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800d014:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d018:	b21b      	sxth	r3, r3
 800d01a:	429a      	cmp	r2, r3
 800d01c:	dd07      	ble.n	800d02e <WM__GetNextIVR+0x12e>
 800d01e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d022:	e886 0003 	stmia.w	r6, {r0, r1}
 800d026:	a801      	add	r0, sp, #4
 800d028:	f005 fcb0 	bl	801298c <GUI_ALLOC_UnlockH>
 800d02c:	e797      	b.n	800cf5e <WM__GetNextIVR+0x5e>
 800d02e:	683b      	ldr	r3, [r7, #0]
 800d030:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800d032:	b152      	cbz	r2, 800d04a <WM__GetNextIVR+0x14a>
 800d034:	4610      	mov	r0, r2
 800d036:	f005 fc91 	bl	801295c <GUI_ALLOC_h2p>
 800d03a:	4607      	mov	r7, r0
 800d03c:	2200      	movs	r2, #0
 800d03e:	6a00      	ldr	r0, [r0, #32]
 800d040:	4629      	mov	r1, r5
 800d042:	f7ff fa1b 	bl	800c47c <_Findx1>
 800d046:	69ba      	ldr	r2, [r7, #24]
 800d048:	e7f3      	b.n	800d032 <WM__GetNextIVR+0x132>
 800d04a:	af04      	add	r7, sp, #16
 800d04c:	4629      	mov	r1, r5
 800d04e:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 800d052:	69d8      	ldr	r0, [r3, #28]
 800d054:	f7ff fa12 	bl	800c47c <_Findx1>
 800d058:	4638      	mov	r0, r7
 800d05a:	f005 fc97 	bl	801298c <GUI_ALLOC_UnlockH>
 800d05e:	6923      	ldr	r3, [r4, #16]
 800d060:	f644 6220 	movw	r2, #20000	; 0x4e20
 800d064:	4293      	cmp	r3, r2
 800d066:	dc89      	bgt.n	800cf7c <WM__GetNextIVR+0x7c>
 800d068:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d06c:	e886 0003 	stmia.w	r6, {r0, r1}
 800d070:	f7ff fc24 	bl	800c8bc <WM__ActivateClipRect>
 800d074:	2001      	movs	r0, #1
 800d076:	b004      	add	sp, #16
 800d078:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d07c:	2000016c 	.word	0x2000016c
 800d080:	20019438 	.word	0x20019438

0800d084 <WM__InitIVRSearch>:
 800d084:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d088:	4f39      	ldr	r7, [pc, #228]	; (800d170 <WM__InitIVRSearch+0xec>)
 800d08a:	683b      	ldr	r3, [r7, #0]
 800d08c:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800d090:	b086      	sub	sp, #24
 800d092:	4606      	mov	r6, r0
 800d094:	b912      	cbnz	r2, 800d09c <WM__InitIVRSearch+0x18>
 800d096:	f7ff fc11 	bl	800c8bc <WM__ActivateClipRect>
 800d09a:	e064      	b.n	800d166 <WM__InitIVRSearch+0xe2>
 800d09c:	4d35      	ldr	r5, [pc, #212]	; (800d174 <WM__InitIVRSearch+0xf0>)
 800d09e:	696a      	ldr	r2, [r5, #20]
 800d0a0:	3201      	adds	r2, #1
 800d0a2:	2a01      	cmp	r2, #1
 800d0a4:	616a      	str	r2, [r5, #20]
 800d0a6:	462c      	mov	r4, r5
 800d0a8:	dc5d      	bgt.n	800d166 <WM__InitIVRSearch+0xe2>
 800d0aa:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800d0ac:	f005 fc60 	bl	8012970 <GUI_ALLOC_LockH>
 800d0b0:	f04f 32ff 	mov.w	r2, #4294967295
 800d0b4:	612a      	str	r2, [r5, #16]
 800d0b6:	4a30      	ldr	r2, [pc, #192]	; (800d178 <WM__InitIVRSearch+0xf4>)
 800d0b8:	9000      	str	r0, [sp, #0]
 800d0ba:	7812      	ldrb	r2, [r2, #0]
 800d0bc:	b12a      	cbz	r2, 800d0ca <WM__InitIVRSearch+0x46>
 800d0be:	f100 0308 	add.w	r3, r0, #8
 800d0c2:	aa02      	add	r2, sp, #8
 800d0c4:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d0c8:	e005      	b.n	800d0d6 <WM__InitIVRSearch+0x52>
 800d0ca:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800d0cc:	f012 0802 	ands.w	r8, r2, #2
 800d0d0:	d00a      	beq.n	800d0e8 <WM__InitIVRSearch+0x64>
 800d0d2:	c803      	ldmia	r0, {r0, r1}
 800d0d4:	aa02      	add	r2, sp, #8
 800d0d6:	e882 0003 	stmia.w	r2, {r0, r1}
 800d0da:	ad02      	add	r5, sp, #8
 800d0dc:	b166      	cbz	r6, 800d0f8 <WM__InitIVRSearch+0x74>
 800d0de:	4628      	mov	r0, r5
 800d0e0:	4631      	mov	r1, r6
 800d0e2:	f003 f9c1 	bl	8010468 <GUI__IntersectRect>
 800d0e6:	e007      	b.n	800d0f8 <WM__InitIVRSearch+0x74>
 800d0e8:	696b      	ldr	r3, [r5, #20]
 800d0ea:	4668      	mov	r0, sp
 800d0ec:	3b01      	subs	r3, #1
 800d0ee:	616b      	str	r3, [r5, #20]
 800d0f0:	f005 fc4c 	bl	801298c <GUI_ALLOC_UnlockH>
 800d0f4:	4640      	mov	r0, r8
 800d0f6:	e037      	b.n	800d168 <WM__InitIVRSearch+0xe4>
 800d0f8:	683b      	ldr	r3, [r7, #0]
 800d0fa:	4e20      	ldr	r6, [pc, #128]	; (800d17c <WM__InitIVRSearch+0xf8>)
 800d0fc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800d0fe:	b1c2      	cbz	r2, 800d132 <WM__InitIVRSearch+0xae>
 800d100:	9b00      	ldr	r3, [sp, #0]
 800d102:	6810      	ldr	r0, [r2, #0]
 800d104:	6851      	ldr	r1, [r2, #4]
 800d106:	9301      	str	r3, [sp, #4]
 800d108:	ab04      	add	r3, sp, #16
 800d10a:	c303      	stmia	r3!, {r0, r1}
 800d10c:	6833      	ldr	r3, [r6, #0]
 800d10e:	b133      	cbz	r3, 800d11e <WM__InitIVRSearch+0x9a>
 800d110:	a801      	add	r0, sp, #4
 800d112:	f005 fc3b 	bl	801298c <GUI_ALLOC_UnlockH>
 800d116:	6830      	ldr	r0, [r6, #0]
 800d118:	f005 fc2a 	bl	8012970 <GUI_ALLOC_LockH>
 800d11c:	9001      	str	r0, [sp, #4]
 800d11e:	9801      	ldr	r0, [sp, #4]
 800d120:	a904      	add	r1, sp, #16
 800d122:	f7ff fb9b 	bl	800c85c <WM__Client2Screen>
 800d126:	4628      	mov	r0, r5
 800d128:	a904      	add	r1, sp, #16
 800d12a:	f003 f99d 	bl	8010468 <GUI__IntersectRect>
 800d12e:	a801      	add	r0, sp, #4
 800d130:	e000      	b.n	800d134 <WM__InitIVRSearch+0xb0>
 800d132:	4668      	mov	r0, sp
 800d134:	f005 fc2a 	bl	801298c <GUI_ALLOC_UnlockH>
 800d138:	6831      	ldr	r1, [r6, #0]
 800d13a:	b119      	cbz	r1, 800d144 <WM__InitIVRSearch+0xc0>
 800d13c:	4628      	mov	r0, r5
 800d13e:	f7ff faef 	bl	800c720 <WM__ClipAtParentBorders>
 800d142:	b128      	cbz	r0, 800d150 <WM__InitIVRSearch+0xcc>
 800d144:	683b      	ldr	r3, [r7, #0]
 800d146:	4628      	mov	r0, r5
 800d148:	6c99      	ldr	r1, [r3, #72]	; 0x48
 800d14a:	f7ff fae9 	bl	800c720 <WM__ClipAtParentBorders>
 800d14e:	b918      	cbnz	r0, 800d158 <WM__InitIVRSearch+0xd4>
 800d150:	6963      	ldr	r3, [r4, #20]
 800d152:	3b01      	subs	r3, #1
 800d154:	6163      	str	r3, [r4, #20]
 800d156:	e007      	b.n	800d168 <WM__InitIVRSearch+0xe4>
 800d158:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d15c:	e884 0003 	stmia.w	r4, {r0, r1}
 800d160:	f7ff fece 	bl	800cf00 <WM__GetNextIVR>
 800d164:	e000      	b.n	800d168 <WM__InitIVRSearch+0xe4>
 800d166:	2001      	movs	r0, #1
 800d168:	b006      	add	sp, #24
 800d16a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d16e:	bf00      	nop
 800d170:	2000016c 	.word	0x2000016c
 800d174:	20019438 	.word	0x20019438
 800d178:	20019c29 	.word	0x20019c29
 800d17c:	20019c00 	.word	0x20019c00

0800d180 <WM_SetDefault>:
 800d180:	b508      	push	{r3, lr}
 800d182:	f004 f9e3 	bl	801154c <GL_SetDefault>
 800d186:	4b02      	ldr	r3, [pc, #8]	; (800d190 <WM_SetDefault+0x10>)
 800d188:	681b      	ldr	r3, [r3, #0]
 800d18a:	2200      	movs	r2, #0
 800d18c:	645a      	str	r2, [r3, #68]	; 0x44
 800d18e:	bd08      	pop	{r3, pc}
 800d190:	2000016c 	.word	0x2000016c

0800d194 <WM__Paint1>:
 800d194:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d196:	b089      	sub	sp, #36	; 0x24
 800d198:	4604      	mov	r4, r0
 800d19a:	f005 fbe9 	bl	8012970 <GUI_ALLOC_LockH>
 800d19e:	6907      	ldr	r7, [r0, #16]
 800d1a0:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800d1a2:	9001      	str	r0, [sp, #4]
 800d1a4:	3008      	adds	r0, #8
 800d1a6:	c803      	ldmia	r0, {r0, r1}
 800d1a8:	ad02      	add	r5, sp, #8
 800d1aa:	e885 0003 	stmia.w	r5, {r0, r1}
 800d1ae:	a801      	add	r0, sp, #4
 800d1b0:	f005 fbec 	bl	801298c <GUI_ALLOC_UnlockH>
 800d1b4:	2f00      	cmp	r7, #0
 800d1b6:	d031      	beq.n	800d21c <WM__Paint1+0x88>
 800d1b8:	07b3      	lsls	r3, r6, #30
 800d1ba:	d52f      	bpl.n	800d21c <WM__Paint1+0x88>
 800d1bc:	4620      	mov	r0, r4
 800d1be:	212e      	movs	r1, #46	; 0x2e
 800d1c0:	f7fe fce4 	bl	800bb8c <WM_SendMessageNoPara>
 800d1c4:	4b16      	ldr	r3, [pc, #88]	; (800d220 <WM__Paint1+0x8c>)
 800d1c6:	781a      	ldrb	r2, [r3, #0]
 800d1c8:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 800d1cc:	f102 0201 	add.w	r2, r2, #1
 800d1d0:	701a      	strb	r2, [r3, #0]
 800d1d2:	461e      	mov	r6, r3
 800d1d4:	d00a      	beq.n	800d1ec <WM__Paint1+0x58>
 800d1d6:	230f      	movs	r3, #15
 800d1d8:	9405      	str	r4, [sp, #20]
 800d1da:	9304      	str	r3, [sp, #16]
 800d1dc:	9507      	str	r5, [sp, #28]
 800d1de:	f7ff ffcf 	bl	800d180 <WM_SetDefault>
 800d1e2:	4620      	mov	r0, r4
 800d1e4:	a904      	add	r1, sp, #16
 800d1e6:	f007 fe11 	bl	8014e0c <WM__SendMessage>
 800d1ea:	e010      	b.n	800d20e <WM__Paint1+0x7a>
 800d1ec:	4628      	mov	r0, r5
 800d1ee:	f7ff ff49 	bl	800d084 <WM__InitIVRSearch>
 800d1f2:	b160      	cbz	r0, 800d20e <WM__Paint1+0x7a>
 800d1f4:	230f      	movs	r3, #15
 800d1f6:	9304      	str	r3, [sp, #16]
 800d1f8:	9405      	str	r4, [sp, #20]
 800d1fa:	9507      	str	r5, [sp, #28]
 800d1fc:	f7ff ffc0 	bl	800d180 <WM_SetDefault>
 800d200:	4620      	mov	r0, r4
 800d202:	a904      	add	r1, sp, #16
 800d204:	f007 fe02 	bl	8014e0c <WM__SendMessage>
 800d208:	f7ff fe7a 	bl	800cf00 <WM__GetNextIVR>
 800d20c:	e7f1      	b.n	800d1f2 <WM__Paint1+0x5e>
 800d20e:	7833      	ldrb	r3, [r6, #0]
 800d210:	4620      	mov	r0, r4
 800d212:	3b01      	subs	r3, #1
 800d214:	212f      	movs	r1, #47	; 0x2f
 800d216:	7033      	strb	r3, [r6, #0]
 800d218:	f7fe fcb8 	bl	800bb8c <WM_SendMessageNoPara>
 800d21c:	b009      	add	sp, #36	; 0x24
 800d21e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d220:	20019c29 	.word	0x20019c29

0800d224 <WM__Paint>:
 800d224:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d226:	b089      	sub	sp, #36	; 0x24
 800d228:	ac06      	add	r4, sp, #24
 800d22a:	9003      	str	r0, [sp, #12]
 800d22c:	f005 fba0 	bl	8012970 <GUI_ALLOC_LockH>
 800d230:	f100 0208 	add.w	r2, r0, #8
 800d234:	4603      	mov	r3, r0
 800d236:	9005      	str	r0, [sp, #20]
 800d238:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d23c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d23e:	699e      	ldr	r6, [r3, #24]
 800d240:	691f      	ldr	r7, [r3, #16]
 800d242:	e884 0003 	stmia.w	r4, {r0, r1}
 800d246:	a805      	add	r0, sp, #20
 800d248:	f005 fba0 	bl	801298c <GUI_ALLOC_UnlockH>
 800d24c:	f244 0320 	movw	r3, #16416	; 0x4020
 800d250:	402b      	ands	r3, r5
 800d252:	2b00      	cmp	r3, #0
 800d254:	d034      	beq.n	800d2c0 <WM__Paint+0x9c>
 800d256:	b1bf      	cbz	r7, 800d288 <WM__Paint+0x64>
 800d258:	4620      	mov	r0, r4
 800d25a:	9903      	ldr	r1, [sp, #12]
 800d25c:	f7ff fa60 	bl	800c720 <WM__ClipAtParentBorders>
 800d260:	b190      	cbz	r0, 800d288 <WM__Paint+0x64>
 800d262:	9803      	ldr	r0, [sp, #12]
 800d264:	f7ff fcf2 	bl	800cc4c <WM_SelectWindow>
 800d268:	0769      	lsls	r1, r5, #29
 800d26a:	d50f      	bpl.n	800d28c <WM__Paint+0x68>
 800d26c:	b126      	cbz	r6, 800d278 <WM__Paint+0x54>
 800d26e:	f005 0501 	and.w	r5, r5, #1
 800d272:	f085 0501 	eor.w	r5, r5, #1
 800d276:	e000      	b.n	800d27a <WM__Paint+0x56>
 800d278:	2501      	movs	r5, #1
 800d27a:	9500      	str	r5, [sp, #0]
 800d27c:	4620      	mov	r0, r4
 800d27e:	4912      	ldr	r1, [pc, #72]	; (800d2c8 <WM__Paint+0xa4>)
 800d280:	aa03      	add	r2, sp, #12
 800d282:	2300      	movs	r3, #0
 800d284:	f000 facc 	bl	800d820 <GUI_MEMDEV_Draw>
 800d288:	2400      	movs	r4, #0
 800d28a:	e003      	b.n	800d294 <WM__Paint+0x70>
 800d28c:	9803      	ldr	r0, [sp, #12]
 800d28e:	f7ff f9d7 	bl	800c640 <WM__PaintWinAndOverlays>
 800d292:	2401      	movs	r4, #1
 800d294:	9803      	ldr	r0, [sp, #12]
 800d296:	f005 fb6b 	bl	8012970 <GUI_ALLOC_LockH>
 800d29a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800d29c:	9005      	str	r0, [sp, #20]
 800d29e:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 800d2a2:	f023 0320 	bic.w	r3, r3, #32
 800d2a6:	0492      	lsls	r2, r2, #18
 800d2a8:	bf48      	it	mi
 800d2aa:	f043 0304 	orrmi.w	r3, r3, #4
 800d2ae:	6283      	str	r3, [r0, #40]	; 0x28
 800d2b0:	a805      	add	r0, sp, #20
 800d2b2:	f005 fb6b 	bl	801298c <GUI_ALLOC_UnlockH>
 800d2b6:	4b05      	ldr	r3, [pc, #20]	; (800d2cc <WM__Paint+0xa8>)
 800d2b8:	881a      	ldrh	r2, [r3, #0]
 800d2ba:	3a01      	subs	r2, #1
 800d2bc:	801a      	strh	r2, [r3, #0]
 800d2be:	e000      	b.n	800d2c2 <WM__Paint+0x9e>
 800d2c0:	461c      	mov	r4, r3
 800d2c2:	4620      	mov	r0, r4
 800d2c4:	b009      	add	sp, #36	; 0x24
 800d2c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d2c8:	0800c6b9 	.word	0x0800c6b9
 800d2cc:	20019c1c 	.word	0x20019c1c

0800d2d0 <WM_Exec>:
 800d2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2d4:	4b4c      	ldr	r3, [pc, #304]	; (800d408 <WM_Exec+0x138>)
 800d2d6:	681b      	ldr	r3, [r3, #0]
 800d2d8:	b09f      	sub	sp, #124	; 0x7c
 800d2da:	b103      	cbz	r3, 800d2de <WM_Exec+0xe>
 800d2dc:	4798      	blx	r3
 800d2de:	2600      	movs	r6, #0
 800d2e0:	4d4a      	ldr	r5, [pc, #296]	; (800d40c <WM_Exec+0x13c>)
 800d2e2:	682b      	ldr	r3, [r5, #0]
 800d2e4:	b1db      	cbz	r3, 800d31e <WM_Exec+0x4e>
 800d2e6:	4b4a      	ldr	r3, [pc, #296]	; (800d410 <WM_Exec+0x140>)
 800d2e8:	681c      	ldr	r4, [r3, #0]
 800d2ea:	b1bc      	cbz	r4, 800d31c <WM_Exec+0x4c>
 800d2ec:	4620      	mov	r0, r4
 800d2ee:	f005 fb3f 	bl	8012970 <GUI_ALLOC_LockH>
 800d2f2:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800d2f4:	6947      	ldr	r7, [r0, #20]
 800d2f6:	ab1e      	add	r3, sp, #120	; 0x78
 800d2f8:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 800d2fc:	f843 0d70 	str.w	r0, [r3, #-112]!
 800d300:	d007      	beq.n	800d312 <WM_Exec+0x42>
 800d302:	4618      	mov	r0, r3
 800d304:	f005 fb42 	bl	801298c <GUI_ALLOC_UnlockH>
 800d308:	4620      	mov	r0, r4
 800d30a:	f7ff fd69 	bl	800cde0 <WM_DeleteWindow>
 800d30e:	463c      	mov	r4, r7
 800d310:	e7eb      	b.n	800d2ea <WM_Exec+0x1a>
 800d312:	4618      	mov	r0, r3
 800d314:	463c      	mov	r4, r7
 800d316:	f005 fb39 	bl	801298c <GUI_ALLOC_UnlockH>
 800d31a:	e7e6      	b.n	800d2ea <WM_Exec+0x1a>
 800d31c:	602c      	str	r4, [r5, #0]
 800d31e:	4b3d      	ldr	r3, [pc, #244]	; (800d414 <WM_Exec+0x144>)
 800d320:	681b      	ldr	r3, [r3, #0]
 800d322:	b103      	cbz	r3, 800d326 <WM_Exec+0x56>
 800d324:	4798      	blx	r3
 800d326:	4b3c      	ldr	r3, [pc, #240]	; (800d418 <WM_Exec+0x148>)
 800d328:	681b      	ldr	r3, [r3, #0]
 800d32a:	b92b      	cbnz	r3, 800d338 <WM_Exec+0x68>
 800d32c:	4f3b      	ldr	r7, [pc, #236]	; (800d41c <WM_Exec+0x14c>)
 800d32e:	683b      	ldr	r3, [r7, #0]
 800d330:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800d334:	b143      	cbz	r3, 800d348 <WM_Exec+0x78>
 800d336:	e003      	b.n	800d340 <WM_Exec+0x70>
 800d338:	4798      	blx	r3
 800d33a:	2800      	cmp	r0, #0
 800d33c:	d0f6      	beq.n	800d32c <WM_Exec+0x5c>
 800d33e:	e058      	b.n	800d3f2 <WM_Exec+0x122>
 800d340:	f004 fa6c 	bl	801181c <GUI_PollKeyMsg>
 800d344:	2800      	cmp	r0, #0
 800d346:	d154      	bne.n	800d3f2 <WM_Exec+0x122>
 800d348:	683b      	ldr	r3, [r7, #0]
 800d34a:	f893 5054 	ldrb.w	r5, [r3, #84]	; 0x54
 800d34e:	b14d      	cbz	r5, 800d364 <WM_Exec+0x94>
 800d350:	4b33      	ldr	r3, [pc, #204]	; (800d420 <WM_Exec+0x150>)
 800d352:	881d      	ldrh	r5, [r3, #0]
 800d354:	b135      	cbz	r5, 800d364 <WM_Exec+0x94>
 800d356:	4b33      	ldr	r3, [pc, #204]	; (800d424 <WM_Exec+0x154>)
 800d358:	681b      	ldr	r3, [r3, #0]
 800d35a:	2b00      	cmp	r3, #0
 800d35c:	d04b      	beq.n	800d3f6 <WM_Exec+0x126>
 800d35e:	681b      	ldr	r3, [r3, #0]
 800d360:	4798      	blx	r3
 800d362:	2501      	movs	r5, #1
 800d364:	683b      	ldr	r3, [r7, #0]
 800d366:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800d36a:	b913      	cbnz	r3, 800d372 <WM_Exec+0xa2>
 800d36c:	2d00      	cmp	r5, #0
 800d36e:	d137      	bne.n	800d3e0 <WM_Exec+0x110>
 800d370:	e045      	b.n	800d3fe <WM_Exec+0x12e>
 800d372:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800d420 <WM_Exec+0x150>
 800d376:	f8b8 3000 	ldrh.w	r3, [r8]
 800d37a:	2b00      	cmp	r3, #0
 800d37c:	d0f6      	beq.n	800d36c <WM_Exec+0x9c>
 800d37e:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 800d428 <WM_Exec+0x158>
 800d382:	f8d9 4000 	ldr.w	r4, [r9]
 800d386:	b90c      	cbnz	r4, 800d38c <WM_Exec+0xbc>
 800d388:	4b21      	ldr	r3, [pc, #132]	; (800d410 <WM_Exec+0x140>)
 800d38a:	681c      	ldr	r4, [r3, #0]
 800d38c:	a802      	add	r0, sp, #8
 800d38e:	f004 f949 	bl	8011624 <GUI_SaveContext_W>
 800d392:	683b      	ldr	r3, [r7, #0]
 800d394:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 800d398:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 800d39c:	b914      	cbnz	r4, 800d3a4 <WM_Exec+0xd4>
 800d39e:	2400      	movs	r4, #0
 800d3a0:	e00d      	b.n	800d3be <WM_Exec+0xee>
 800d3a2:	b963      	cbnz	r3, 800d3be <WM_Exec+0xee>
 800d3a4:	4620      	mov	r0, r4
 800d3a6:	f7ff ff3d 	bl	800d224 <WM__Paint>
 800d3aa:	4603      	mov	r3, r0
 800d3ac:	4620      	mov	r0, r4
 800d3ae:	9301      	str	r3, [sp, #4]
 800d3b0:	f005 fad4 	bl	801295c <GUI_ALLOC_h2p>
 800d3b4:	6944      	ldr	r4, [r0, #20]
 800d3b6:	9b01      	ldr	r3, [sp, #4]
 800d3b8:	2c00      	cmp	r4, #0
 800d3ba:	d1f2      	bne.n	800d3a2 <WM_Exec+0xd2>
 800d3bc:	e7ef      	b.n	800d39e <WM_Exec+0xce>
 800d3be:	4658      	mov	r0, fp
 800d3c0:	f8c9 4000 	str.w	r4, [r9]
 800d3c4:	f004 f8e4 	bl	8011590 <GUI_SetColor>
 800d3c8:	4650      	mov	r0, sl
 800d3ca:	f004 f8df 	bl	801158c <GUI_SetBkColor>
 800d3ce:	a802      	add	r0, sp, #8
 800d3d0:	f004 f932 	bl	8011638 <GUI_RestoreContext>
 800d3d4:	f8b8 3000 	ldrh.w	r3, [r8]
 800d3d8:	2b00      	cmp	r3, #0
 800d3da:	d0c7      	beq.n	800d36c <WM_Exec+0x9c>
 800d3dc:	2601      	movs	r6, #1
 800d3de:	e7c1      	b.n	800d364 <WM_Exec+0x94>
 800d3e0:	4b10      	ldr	r3, [pc, #64]	; (800d424 <WM_Exec+0x154>)
 800d3e2:	6818      	ldr	r0, [r3, #0]
 800d3e4:	b110      	cbz	r0, 800d3ec <WM_Exec+0x11c>
 800d3e6:	6843      	ldr	r3, [r0, #4]
 800d3e8:	4798      	blx	r3
 800d3ea:	e008      	b.n	800d3fe <WM_Exec+0x12e>
 800d3ec:	f003 f802 	bl	80103f4 <GUI__ManageCache>
 800d3f0:	e005      	b.n	800d3fe <WM_Exec+0x12e>
 800d3f2:	2601      	movs	r6, #1
 800d3f4:	e774      	b.n	800d2e0 <WM_Exec+0x10>
 800d3f6:	2001      	movs	r0, #1
 800d3f8:	f002 fffc 	bl	80103f4 <GUI__ManageCache>
 800d3fc:	e7b1      	b.n	800d362 <WM_Exec+0x92>
 800d3fe:	4630      	mov	r0, r6
 800d400:	b01f      	add	sp, #124	; 0x7c
 800d402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d406:	bf00      	nop
 800d408:	20019c10 	.word	0x20019c10
 800d40c:	20019434 	.word	0x20019434
 800d410:	20019c20 	.word	0x20019c20
 800d414:	20019c0c 	.word	0x20019c0c
 800d418:	20019ca8 	.word	0x20019ca8
 800d41c:	2000016c 	.word	0x2000016c
 800d420:	20019c1c 	.word	0x20019c1c
 800d424:	20019c3c 	.word	0x20019c3c
 800d428:	20019450 	.word	0x20019450

0800d42c <WM_Activate>:
 800d42c:	4b02      	ldr	r3, [pc, #8]	; (800d438 <WM_Activate+0xc>)
 800d42e:	681b      	ldr	r3, [r3, #0]
 800d430:	2201      	movs	r2, #1
 800d432:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800d436:	4770      	bx	lr
 800d438:	2000016c 	.word	0x2000016c

0800d43c <WM_Deactivate>:
 800d43c:	4b03      	ldr	r3, [pc, #12]	; (800d44c <WM_Deactivate+0x10>)
 800d43e:	681b      	ldr	r3, [r3, #0]
 800d440:	2200      	movs	r2, #0
 800d442:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800d446:	f002 bdfd 	b.w	8010044 <LCD_SetClipRectMax>
 800d44a:	bf00      	nop
 800d44c:	2000016c 	.word	0x2000016c

0800d450 <WM_DefaultProc>:
 800d450:	b510      	push	{r4, lr}
 800d452:	4604      	mov	r4, r0
 800d454:	6840      	ldr	r0, [r0, #4]
 800d456:	6823      	ldr	r3, [r4, #0]
 800d458:	68e1      	ldr	r1, [r4, #12]
 800d45a:	2b17      	cmp	r3, #23
 800d45c:	d00f      	beq.n	800d47e <WM_DefaultProc+0x2e>
 800d45e:	dc06      	bgt.n	800d46e <WM_DefaultProc+0x1e>
 800d460:	2b0e      	cmp	r3, #14
 800d462:	d00e      	beq.n	800d482 <WM_DefaultProc+0x32>
 800d464:	2b14      	cmp	r3, #20
 800d466:	d114      	bne.n	800d492 <WM_DefaultProc+0x42>
 800d468:	f7fe fe5c 	bl	800c124 <WM__GetClientRectEx>
 800d46c:	e011      	b.n	800d492 <WM_DefaultProc+0x42>
 800d46e:	2b22      	cmp	r3, #34	; 0x22
 800d470:	d00c      	beq.n	800d48c <WM_DefaultProc+0x3c>
 800d472:	2b28      	cmp	r3, #40	; 0x28
 800d474:	d10d      	bne.n	800d492 <WM_DefaultProc+0x42>
 800d476:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d47a:	f7ff bbc6 	b.w	800cc0a <WM_InvalidateWindow>
 800d47e:	60e0      	str	r0, [r4, #12]
 800d480:	bd10      	pop	{r4, pc}
 800d482:	4621      	mov	r1, r4
 800d484:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d488:	f007 bf5e 	b.w	8015348 <WM_SendToParent>
 800d48c:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800d490:	e000      	b.n	800d494 <WM_DefaultProc+0x44>
 800d492:	2300      	movs	r3, #0
 800d494:	60e3      	str	r3, [r4, #12]
 800d496:	bd10      	pop	{r4, pc}

0800d498 <_cbBackWin>:
 800d498:	6803      	ldr	r3, [r0, #0]
 800d49a:	2b0e      	cmp	r3, #14
 800d49c:	b510      	push	{r4, lr}
 800d49e:	4604      	mov	r4, r0
 800d4a0:	d002      	beq.n	800d4a8 <_cbBackWin+0x10>
 800d4a2:	2b0f      	cmp	r3, #15
 800d4a4:	d009      	beq.n	800d4ba <_cbBackWin+0x22>
 800d4a6:	e020      	b.n	800d4ea <_cbBackWin+0x52>
 800d4a8:	68c3      	ldr	r3, [r0, #12]
 800d4aa:	685a      	ldr	r2, [r3, #4]
 800d4ac:	2a01      	cmp	r2, #1
 800d4ae:	d121      	bne.n	800d4f4 <_cbBackWin+0x5c>
 800d4b0:	6818      	ldr	r0, [r3, #0]
 800d4b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d4b6:	f004 b9a9 	b.w	801180c <GUI_StoreKey>
 800d4ba:	4a0f      	ldr	r2, [pc, #60]	; (800d4f8 <_cbBackWin+0x60>)
 800d4bc:	6843      	ldr	r3, [r0, #4]
 800d4be:	6811      	ldr	r1, [r2, #0]
 800d4c0:	428b      	cmp	r3, r1
 800d4c2:	d006      	beq.n	800d4d2 <_cbBackWin+0x3a>
 800d4c4:	6852      	ldr	r2, [r2, #4]
 800d4c6:	4293      	cmp	r3, r2
 800d4c8:	bf14      	ite	ne
 800d4ca:	f04f 33ff 	movne.w	r3, #4294967295
 800d4ce:	2301      	moveq	r3, #1
 800d4d0:	e000      	b.n	800d4d4 <_cbBackWin+0x3c>
 800d4d2:	2300      	movs	r3, #0
 800d4d4:	4a09      	ldr	r2, [pc, #36]	; (800d4fc <_cbBackWin+0x64>)
 800d4d6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800d4da:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800d4de:	4298      	cmp	r0, r3
 800d4e0:	d003      	beq.n	800d4ea <_cbBackWin+0x52>
 800d4e2:	f004 f853 	bl	801158c <GUI_SetBkColor>
 800d4e6:	f004 fe13 	bl	8012110 <GUI_Clear>
 800d4ea:	4620      	mov	r0, r4
 800d4ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d4f0:	f7ff bfae 	b.w	800d450 <WM_DefaultProc>
 800d4f4:	bd10      	pop	{r4, pc}
 800d4f6:	bf00      	nop
 800d4f8:	20019c04 	.word	0x20019c04
 800d4fc:	20019c30 	.word	0x20019c30

0800d500 <WM_Init>:
 800d500:	b530      	push	{r4, r5, lr}
 800d502:	4b2b      	ldr	r3, [pc, #172]	; (800d5b0 <WM_Init+0xb0>)
 800d504:	7818      	ldrb	r0, [r3, #0]
 800d506:	b085      	sub	sp, #20
 800d508:	461d      	mov	r5, r3
 800d50a:	2800      	cmp	r0, #0
 800d50c:	d14d      	bne.n	800d5aa <WM_Init+0xaa>
 800d50e:	4b29      	ldr	r3, [pc, #164]	; (800d5b4 <WM_Init+0xb4>)
 800d510:	6018      	str	r0, [r3, #0]
 800d512:	4b29      	ldr	r3, [pc, #164]	; (800d5b8 <WM_Init+0xb8>)
 800d514:	6018      	str	r0, [r3, #0]
 800d516:	4b29      	ldr	r3, [pc, #164]	; (800d5bc <WM_Init+0xbc>)
 800d518:	681b      	ldr	r3, [r3, #0]
 800d51a:	6458      	str	r0, [r3, #68]	; 0x44
 800d51c:	4b28      	ldr	r3, [pc, #160]	; (800d5c0 <WM_Init+0xc0>)
 800d51e:	8018      	strh	r0, [r3, #0]
 800d520:	4b28      	ldr	r3, [pc, #160]	; (800d5c4 <WM_Init+0xc4>)
 800d522:	4604      	mov	r4, r0
 800d524:	8018      	strh	r0, [r3, #0]
 800d526:	4620      	mov	r0, r4
 800d528:	f004 fcc8 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 800d52c:	b1c0      	cbz	r0, 800d560 <WM_Init+0x60>
 800d52e:	f04f 32ff 	mov.w	r2, #4294967295
 800d532:	2302      	movs	r3, #2
 800d534:	e88d 000c 	stmia.w	sp, {r2, r3}
 800d538:	2000      	movs	r0, #0
 800d53a:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800d53e:	4b22      	ldr	r3, [pc, #136]	; (800d5c8 <WM_Init+0xc8>)
 800d540:	9302      	str	r3, [sp, #8]
 800d542:	9003      	str	r0, [sp, #12]
 800d544:	4613      	mov	r3, r2
 800d546:	4601      	mov	r1, r0
 800d548:	f7ff fba0 	bl	800cc8c <WM_CreateWindowAsChild>
 800d54c:	4b1f      	ldr	r3, [pc, #124]	; (800d5cc <WM_Init+0xcc>)
 800d54e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800d552:	4b1f      	ldr	r3, [pc, #124]	; (800d5d0 <WM_Init+0xd0>)
 800d554:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800d558:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800d55c:	f7ff fb55 	bl	800cc0a <WM_InvalidateWindow>
 800d560:	3401      	adds	r4, #1
 800d562:	2c02      	cmp	r4, #2
 800d564:	d1df      	bne.n	800d526 <WM_Init+0x26>
 800d566:	481b      	ldr	r0, [pc, #108]	; (800d5d4 <WM_Init+0xd4>)
 800d568:	f007 ff62 	bl	8015430 <WM__AddCriticalHandle>
 800d56c:	481a      	ldr	r0, [pc, #104]	; (800d5d8 <WM_Init+0xd8>)
 800d56e:	f007 ff5f 	bl	8015430 <WM__AddCriticalHandle>
 800d572:	481a      	ldr	r0, [pc, #104]	; (800d5dc <WM_Init+0xdc>)
 800d574:	f007 ff5c 	bl	8015430 <WM__AddCriticalHandle>
 800d578:	4819      	ldr	r0, [pc, #100]	; (800d5e0 <WM_Init+0xe0>)
 800d57a:	f007 ff59 	bl	8015430 <WM__AddCriticalHandle>
 800d57e:	4819      	ldr	r0, [pc, #100]	; (800d5e4 <WM_Init+0xe4>)
 800d580:	f007 ff56 	bl	8015430 <WM__AddCriticalHandle>
 800d584:	4818      	ldr	r0, [pc, #96]	; (800d5e8 <WM_Init+0xe8>)
 800d586:	f007 ff53 	bl	8015430 <WM__AddCriticalHandle>
 800d58a:	4b10      	ldr	r3, [pc, #64]	; (800d5cc <WM_Init+0xcc>)
 800d58c:	6818      	ldr	r0, [r3, #0]
 800d58e:	f7ff fb5d 	bl	800cc4c <WM_SelectWindow>
 800d592:	f7ff ff4b 	bl	800d42c <WM_Activate>
 800d596:	2301      	movs	r3, #1
 800d598:	702b      	strb	r3, [r5, #0]
 800d59a:	4814      	ldr	r0, [pc, #80]	; (800d5ec <WM_Init+0xec>)
 800d59c:	4b14      	ldr	r3, [pc, #80]	; (800d5f0 <WM_Init+0xf0>)
 800d59e:	6003      	str	r3, [r0, #0]
 800d5a0:	b005      	add	sp, #20
 800d5a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d5a6:	f004 bdc3 	b.w	8012130 <GUI__RegisterExit>
 800d5aa:	b005      	add	sp, #20
 800d5ac:	bd30      	pop	{r4, r5, pc}
 800d5ae:	bf00      	nop
 800d5b0:	2001945c 	.word	0x2001945c
 800d5b4:	20019c20 	.word	0x20019c20
 800d5b8:	20019450 	.word	0x20019450
 800d5bc:	2000016c 	.word	0x2000016c
 800d5c0:	20019c1c 	.word	0x20019c1c
 800d5c4:	20019bfc 	.word	0x20019bfc
 800d5c8:	0800d499 	.word	0x0800d499
 800d5cc:	20019c04 	.word	0x20019c04
 800d5d0:	20019c30 	.word	0x20019c30
 800d5d4:	20019d8c 	.word	0x20019d8c
 800d5d8:	20019d7c 	.word	0x20019d7c
 800d5dc:	20019d6c 	.word	0x20019d6c
 800d5e0:	20019d94 	.word	0x20019d94
 800d5e4:	20019d84 	.word	0x20019d84
 800d5e8:	20019d74 	.word	0x20019d74
 800d5ec:	20019454 	.word	0x20019454
 800d5f0:	0800c2d5 	.word	0x0800c2d5

0800d5f4 <_CreateStaticDevice>:
 800d5f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5f8:	b087      	sub	sp, #28
 800d5fa:	4604      	mov	r4, r0
 800d5fc:	f005 f9b8 	bl	8012970 <GUI_ALLOC_LockH>
 800d600:	af06      	add	r7, sp, #24
 800d602:	f8b0 8000 	ldrh.w	r8, [r0]
 800d606:	8886      	ldrh	r6, [r0, #4]
 800d608:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 800d60c:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 800d610:	f847 0d04 	str.w	r0, [r7, #-4]!
 800d614:	fa0f f888 	sxth.w	r8, r8
 800d618:	b236      	sxth	r6, r6
 800d61a:	ebc8 0606 	rsb	r6, r8, r6
 800d61e:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 800d622:	3601      	adds	r6, #1
 800d624:	4638      	mov	r0, r7
 800d626:	fa0f f989 	sxth.w	r9, r9
 800d62a:	fa0f f58b 	sxth.w	r5, fp
 800d62e:	f005 f9ad 	bl	801298c <GUI_ALLOC_UnlockH>
 800d632:	ebc9 0505 	rsb	r5, r9, r5
 800d636:	2e00      	cmp	r6, #0
 800d638:	f105 0501 	add.w	r5, r5, #1
 800d63c:	dd4d      	ble.n	800d6da <_CreateStaticDevice+0xe6>
 800d63e:	2d00      	cmp	r5, #0
 800d640:	dd4b      	ble.n	800d6da <_CreateStaticDevice+0xe6>
 800d642:	f1ba 0f00 	cmp.w	sl, #0
 800d646:	d04a      	beq.n	800d6de <_CreateStaticDevice+0xea>
 800d648:	4650      	mov	r0, sl
 800d64a:	f005 f991 	bl	8012970 <GUI_ALLOC_LockH>
 800d64e:	ab06      	add	r3, sp, #24
 800d650:	8886      	ldrh	r6, [r0, #4]
 800d652:	f843 0d08 	str.w	r0, [r3, #-8]!
 800d656:	88c5      	ldrh	r5, [r0, #6]
 800d658:	b236      	sxth	r6, r6
 800d65a:	4618      	mov	r0, r3
 800d65c:	f005 f996 	bl	801298c <GUI_ALLOC_UnlockH>
 800d660:	4546      	cmp	r6, r8
 800d662:	d102      	bne.n	800d66a <_CreateStaticDevice+0x76>
 800d664:	b22d      	sxth	r5, r5
 800d666:	454d      	cmp	r5, r9
 800d668:	d032      	beq.n	800d6d0 <_CreateStaticDevice+0xdc>
 800d66a:	4650      	mov	r0, sl
 800d66c:	4641      	mov	r1, r8
 800d66e:	464a      	mov	r2, r9
 800d670:	f000 f886 	bl	800d780 <GUI_MEMDEV_SetOrg>
 800d674:	e02c      	b.n	800d6d0 <_CreateStaticDevice+0xdc>
 800d676:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800d678:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800d67c:	6283      	str	r3, [r0, #40]	; 0x28
 800d67e:	4638      	mov	r0, r7
 800d680:	f005 f984 	bl	801298c <GUI_ALLOC_UnlockH>
 800d684:	4640      	mov	r0, r8
 800d686:	f000 ff93 	bl	800e5b0 <GUI_MEMDEV_Select>
 800d68a:	4607      	mov	r7, r0
 800d68c:	4650      	mov	r0, sl
 800d68e:	f003 ff81 	bl	8011594 <GUI__AlphaPreserveTrans>
 800d692:	4640      	mov	r0, r8
 800d694:	f000 f8b4 	bl	800d800 <GUI_MEMDEV_GetDataPtr>
 800d698:	4b2d      	ldr	r3, [pc, #180]	; (800d750 <_CreateStaticDevice+0x15c>)
 800d69a:	fb05 f206 	mul.w	r2, r5, r6
 800d69e:	7819      	ldrb	r1, [r3, #0]
 800d6a0:	4d2c      	ldr	r5, [pc, #176]	; (800d754 <_CreateStaticDevice+0x160>)
 800d6a2:	4e2d      	ldr	r6, [pc, #180]	; (800d758 <_CreateStaticDevice+0x164>)
 800d6a4:	0092      	lsls	r2, r2, #2
 800d6a6:	f002 fdbd 	bl	8010224 <GUI__memset>
 800d6aa:	4620      	mov	r0, r4
 800d6ac:	f8d5 8000 	ldr.w	r8, [r5]
 800d6b0:	6034      	str	r4, [r6, #0]
 800d6b2:	f7fe fcbf 	bl	800c034 <WM_GetWindowOrgX>
 800d6b6:	6028      	str	r0, [r5, #0]
 800d6b8:	4620      	mov	r0, r4
 800d6ba:	f7ff fd6b 	bl	800d194 <WM__Paint1>
 800d6be:	2000      	movs	r0, #0
 800d6c0:	f8c5 8000 	str.w	r8, [r5]
 800d6c4:	6030      	str	r0, [r6, #0]
 800d6c6:	f003 ff65 	bl	8011594 <GUI__AlphaPreserveTrans>
 800d6ca:	4638      	mov	r0, r7
 800d6cc:	f000 ff70 	bl	800e5b0 <GUI_MEMDEV_Select>
 800d6d0:	4620      	mov	r0, r4
 800d6d2:	f005 f943 	bl	801295c <GUI_ALLOC_h2p>
 800d6d6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800d6d8:	e037      	b.n	800d74a <_CreateStaticDevice+0x156>
 800d6da:	2000      	movs	r0, #0
 800d6dc:	e035      	b.n	800d74a <_CreateStaticDevice+0x156>
 800d6de:	f7fe fd07 	bl	800c0f0 <WM_GetDesktopWindow>
 800d6e2:	4284      	cmp	r4, r0
 800d6e4:	d112      	bne.n	800d70c <_CreateStaticDevice+0x118>
 800d6e6:	f002 f947 	bl	800f978 <LCD_GetXSize>
 800d6ea:	4682      	mov	sl, r0
 800d6ec:	f002 f94c 	bl	800f988 <LCD_GetYSize>
 800d6f0:	4556      	cmp	r6, sl
 800d6f2:	dc02      	bgt.n	800d6fa <_CreateStaticDevice+0x106>
 800d6f4:	4285      	cmp	r5, r0
 800d6f6:	dd09      	ble.n	800d70c <_CreateStaticDevice+0x118>
 800d6f8:	e000      	b.n	800d6fc <_CreateStaticDevice+0x108>
 800d6fa:	4656      	mov	r6, sl
 800d6fc:	4285      	cmp	r5, r0
 800d6fe:	bfa8      	it	ge
 800d700:	4605      	movge	r5, r0
 800d702:	4631      	mov	r1, r6
 800d704:	4620      	mov	r0, r4
 800d706:	462a      	mov	r2, r5
 800d708:	f7fe f927 	bl	800b95a <WM_SetSize>
 800d70c:	4b13      	ldr	r3, [pc, #76]	; (800d75c <_CreateStaticDevice+0x168>)
 800d70e:	9301      	str	r3, [sp, #4]
 800d710:	f04f 0a01 	mov.w	sl, #1
 800d714:	4b12      	ldr	r3, [pc, #72]	; (800d760 <_CreateStaticDevice+0x16c>)
 800d716:	9302      	str	r3, [sp, #8]
 800d718:	4640      	mov	r0, r8
 800d71a:	4649      	mov	r1, r9
 800d71c:	4632      	mov	r2, r6
 800d71e:	462b      	mov	r3, r5
 800d720:	f8cd a000 	str.w	sl, [sp]
 800d724:	f000 fe4e 	bl	800e3c4 <GUI_MEMDEV__CreateFixed>
 800d728:	4680      	mov	r8, r0
 800d72a:	4620      	mov	r0, r4
 800d72c:	f005 f920 	bl	8012970 <GUI_ALLOC_LockH>
 800d730:	9005      	str	r0, [sp, #20]
 800d732:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 800d736:	f1b8 0f00 	cmp.w	r8, #0
 800d73a:	d19c      	bne.n	800d676 <_CreateStaticDevice+0x82>
 800d73c:	4638      	mov	r0, r7
 800d73e:	f005 f925 	bl	801298c <GUI_ALLOC_UnlockH>
 800d742:	4620      	mov	r0, r4
 800d744:	f7ff fd26 	bl	800d194 <WM__Paint1>
 800d748:	4640      	mov	r0, r8
 800d74a:	b007      	add	sp, #28
 800d74c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d750:	20000134 	.word	0x20000134
 800d754:	20019c74 	.word	0x20019c74
 800d758:	20019c48 	.word	0x20019c48
 800d75c:	0801af04 	.word	0x0801af04
 800d760:	08020868 	.word	0x08020868

0800d764 <GUI_MEMDEV_Paint1Static>:
 800d764:	b538      	push	{r3, r4, r5, lr}
 800d766:	4605      	mov	r5, r0
 800d768:	2405      	movs	r4, #5
 800d76a:	4628      	mov	r0, r5
 800d76c:	f7ff ff42 	bl	800d5f4 <_CreateStaticDevice>
 800d770:	b910      	cbnz	r0, 800d778 <GUI_MEMDEV_Paint1Static+0x14>
 800d772:	3c01      	subs	r4, #1
 800d774:	d1f9      	bne.n	800d76a <GUI_MEMDEV_Paint1Static+0x6>
 800d776:	bd38      	pop	{r3, r4, r5, pc}
 800d778:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d77c:	f008 bb84 	b.w	8015e88 <GUI_MEMDEV_Write>

0800d780 <GUI_MEMDEV_SetOrg>:
 800d780:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d782:	460d      	mov	r5, r1
 800d784:	4614      	mov	r4, r2
 800d786:	b918      	cbnz	r0, 800d790 <GUI_MEMDEV_SetOrg+0x10>
 800d788:	4b11      	ldr	r3, [pc, #68]	; (800d7d0 <GUI_MEMDEV_SetOrg+0x50>)
 800d78a:	681b      	ldr	r3, [r3, #0]
 800d78c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800d78e:	b1e8      	cbz	r0, 800d7cc <GUI_MEMDEV_SetOrg+0x4c>
 800d790:	f005 f8ee 	bl	8012970 <GUI_ALLOC_LockH>
 800d794:	b2a4      	uxth	r4, r4
 800d796:	b2ad      	uxth	r5, r5
 800d798:	80c4      	strh	r4, [r0, #6]
 800d79a:	8085      	strh	r5, [r0, #4]
 800d79c:	9000      	str	r0, [sp, #0]
 800d79e:	f002 fc51 	bl	8010044 <LCD_SetClipRectMax>
 800d7a2:	9b00      	ldr	r3, [sp, #0]
 800d7a4:	6958      	ldr	r0, [r3, #20]
 800d7a6:	b170      	cbz	r0, 800d7c6 <GUI_MEMDEV_SetOrg+0x46>
 800d7a8:	f005 f8e2 	bl	8012970 <GUI_ALLOC_LockH>
 800d7ac:	9b00      	ldr	r3, [sp, #0]
 800d7ae:	9001      	str	r0, [sp, #4]
 800d7b0:	891a      	ldrh	r2, [r3, #8]
 800d7b2:	895b      	ldrh	r3, [r3, #10]
 800d7b4:	8082      	strh	r2, [r0, #4]
 800d7b6:	80c3      	strh	r3, [r0, #6]
 800d7b8:	b112      	cbz	r2, 800d7c0 <GUI_MEMDEV_SetOrg+0x40>
 800d7ba:	b10b      	cbz	r3, 800d7c0 <GUI_MEMDEV_SetOrg+0x40>
 800d7bc:	8005      	strh	r5, [r0, #0]
 800d7be:	8044      	strh	r4, [r0, #2]
 800d7c0:	a801      	add	r0, sp, #4
 800d7c2:	f005 f8e3 	bl	801298c <GUI_ALLOC_UnlockH>
 800d7c6:	4668      	mov	r0, sp
 800d7c8:	f005 f8e0 	bl	801298c <GUI_ALLOC_UnlockH>
 800d7cc:	b003      	add	sp, #12
 800d7ce:	bd30      	pop	{r4, r5, pc}
 800d7d0:	2000016c 	.word	0x2000016c

0800d7d4 <GUI_MEMDEV_GetYSize>:
 800d7d4:	b513      	push	{r0, r1, r4, lr}
 800d7d6:	b920      	cbnz	r0, 800d7e2 <GUI_MEMDEV_GetYSize+0xe>
 800d7d8:	4b08      	ldr	r3, [pc, #32]	; (800d7fc <GUI_MEMDEV_GetYSize+0x28>)
 800d7da:	681b      	ldr	r3, [r3, #0]
 800d7dc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800d7de:	4604      	mov	r4, r0
 800d7e0:	b148      	cbz	r0, 800d7f6 <GUI_MEMDEV_GetYSize+0x22>
 800d7e2:	f005 f8c5 	bl	8012970 <GUI_ALLOC_LockH>
 800d7e6:	ab02      	add	r3, sp, #8
 800d7e8:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 800d7ec:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d7f0:	4618      	mov	r0, r3
 800d7f2:	f005 f8cb 	bl	801298c <GUI_ALLOC_UnlockH>
 800d7f6:	4620      	mov	r0, r4
 800d7f8:	b002      	add	sp, #8
 800d7fa:	bd10      	pop	{r4, pc}
 800d7fc:	2000016c 	.word	0x2000016c

0800d800 <GUI_MEMDEV_GetDataPtr>:
 800d800:	b513      	push	{r0, r1, r4, lr}
 800d802:	b150      	cbz	r0, 800d81a <GUI_MEMDEV_GetDataPtr+0x1a>
 800d804:	f005 f8b4 	bl	8012970 <GUI_ALLOC_LockH>
 800d808:	4604      	mov	r4, r0
 800d80a:	a802      	add	r0, sp, #8
 800d80c:	f840 4d04 	str.w	r4, [r0, #-4]!
 800d810:	f005 f8bc 	bl	801298c <GUI_ALLOC_UnlockH>
 800d814:	f104 0018 	add.w	r0, r4, #24
 800d818:	e7ff      	b.n	800d81a <GUI_MEMDEV_GetDataPtr+0x1a>
 800d81a:	b002      	add	sp, #8
 800d81c:	bd10      	pop	{r4, pc}
	...

0800d820 <GUI_MEMDEV_Draw>:
 800d820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d824:	461e      	mov	r6, r3
 800d826:	b089      	sub	sp, #36	; 0x24
 800d828:	4b4e      	ldr	r3, [pc, #312]	; (800d964 <GUI_MEMDEV_Draw+0x144>)
 800d82a:	9204      	str	r2, [sp, #16]
 800d82c:	681a      	ldr	r2, [r3, #0]
 800d82e:	9103      	str	r1, [sp, #12]
 800d830:	7c54      	ldrb	r4, [r2, #17]
 800d832:	4a4d      	ldr	r2, [pc, #308]	; (800d968 <GUI_MEMDEV_Draw+0x148>)
 800d834:	5712      	ldrsb	r2, [r2, r4]
 800d836:	2a01      	cmp	r2, #1
 800d838:	4605      	mov	r5, r0
 800d83a:	469b      	mov	fp, r3
 800d83c:	4620      	mov	r0, r4
 800d83e:	dd06      	ble.n	800d84e <GUI_MEMDEV_Draw+0x2e>
 800d840:	f002 f888 	bl	800f954 <LCD_GetXSizeEx>
 800d844:	4607      	mov	r7, r0
 800d846:	4620      	mov	r0, r4
 800d848:	f002 f887 	bl	800f95a <LCD_GetYSizeEx>
 800d84c:	e005      	b.n	800d85a <GUI_MEMDEV_Draw+0x3a>
 800d84e:	f002 f887 	bl	800f960 <LCD_GetVXSizeEx>
 800d852:	4607      	mov	r7, r0
 800d854:	4620      	mov	r0, r4
 800d856:	f002 f886 	bl	800f966 <LCD_GetVYSizeEx>
 800d85a:	4604      	mov	r4, r0
 800d85c:	b325      	cbz	r5, 800d8a8 <GUI_MEMDEV_Draw+0x88>
 800d85e:	a806      	add	r0, sp, #24
 800d860:	a907      	add	r1, sp, #28
 800d862:	f004 f8fb 	bl	8011a5c <GUI_GetOrg>
 800d866:	9b06      	ldr	r3, [sp, #24]
 800d868:	f9b5 a000 	ldrsh.w	sl, [r5]
 800d86c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800d870:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 800d874:	441f      	add	r7, r3
 800d876:	9b07      	ldr	r3, [sp, #28]
 800d878:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800d87c:	3f01      	subs	r7, #1
 800d87e:	4297      	cmp	r7, r2
 800d880:	bfd4      	ite	le
 800d882:	ebca 0707 	rsble	r7, sl, r7
 800d886:	ebca 0702 	rsbgt	r7, sl, r2
 800d88a:	441c      	add	r4, r3
 800d88c:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800d890:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 800d894:	3c01      	subs	r4, #1
 800d896:	4294      	cmp	r4, r2
 800d898:	bfd4      	ite	le
 800d89a:	ebc8 0404 	rsble	r4, r8, r4
 800d89e:	ebc8 0402 	rsbgt	r4, r8, r2
 800d8a2:	3701      	adds	r7, #1
 800d8a4:	3401      	adds	r4, #1
 800d8a6:	e001      	b.n	800d8ac <GUI_MEMDEV_Draw+0x8c>
 800d8a8:	46a8      	mov	r8, r5
 800d8aa:	46aa      	mov	sl, r5
 800d8ac:	b906      	cbnz	r6, 800d8b0 <GUI_MEMDEV_Draw+0x90>
 800d8ae:	4266      	negs	r6, r4
 800d8b0:	2f00      	cmp	r7, #0
 800d8b2:	dd52      	ble.n	800d95a <GUI_MEMDEV_Draw+0x13a>
 800d8b4:	2c00      	cmp	r4, #0
 800d8b6:	dd50      	ble.n	800d95a <GUI_MEMDEV_Draw+0x13a>
 800d8b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d8ba:	9300      	str	r3, [sp, #0]
 800d8bc:	4650      	mov	r0, sl
 800d8be:	4641      	mov	r1, r8
 800d8c0:	463a      	mov	r2, r7
 800d8c2:	4633      	mov	r3, r6
 800d8c4:	f000 fe38 	bl	800e538 <GUI_MEMDEV_CreateEx>
 800d8c8:	4605      	mov	r5, r0
 800d8ca:	b920      	cbnz	r0, 800d8d6 <GUI_MEMDEV_Draw+0xb6>
 800d8cc:	9804      	ldr	r0, [sp, #16]
 800d8ce:	9b03      	ldr	r3, [sp, #12]
 800d8d0:	4798      	blx	r3
 800d8d2:	2001      	movs	r0, #1
 800d8d4:	e042      	b.n	800d95c <GUI_MEMDEV_Draw+0x13c>
 800d8d6:	f7ff ff7d 	bl	800d7d4 <GUI_MEMDEV_GetYSize>
 800d8da:	42a0      	cmp	r0, r4
 800d8dc:	4606      	mov	r6, r0
 800d8de:	d006      	beq.n	800d8ee <GUI_MEMDEV_Draw+0xce>
 800d8e0:	f8db 3000 	ldr.w	r3, [fp]
 800d8e4:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800d8e6:	b110      	cbz	r0, 800d8ee <GUI_MEMDEV_Draw+0xce>
 800d8e8:	2132      	movs	r1, #50	; 0x32
 800d8ea:	f007 fa7b 	bl	8014de4 <WM__SendMessageNoPara>
 800d8ee:	4628      	mov	r0, r5
 800d8f0:	f000 fe5e 	bl	800e5b0 <GUI_MEMDEV_Select>
 800d8f4:	4273      	negs	r3, r6
 800d8f6:	9305      	str	r3, [sp, #20]
 800d8f8:	46a1      	mov	r9, r4
 800d8fa:	2700      	movs	r7, #0
 800d8fc:	45b1      	cmp	r9, r6
 800d8fe:	da03      	bge.n	800d908 <GUI_MEMDEV_Draw+0xe8>
 800d900:	4628      	mov	r0, r5
 800d902:	4649      	mov	r1, r9
 800d904:	f008 fbc0 	bl	8016088 <GUI_MEMDEV_ReduceYSize>
 800d908:	b147      	cbz	r7, 800d91c <GUI_MEMDEV_Draw+0xfc>
 800d90a:	4628      	mov	r0, r5
 800d90c:	4651      	mov	r1, sl
 800d90e:	eb07 0208 	add.w	r2, r7, r8
 800d912:	f7ff ff35 	bl	800d780 <GUI_MEMDEV_SetOrg>
 800d916:	4628      	mov	r0, r5
 800d918:	f008 fbcc 	bl	80160b4 <GUI_MEMDEV_Clear>
 800d91c:	9b03      	ldr	r3, [sp, #12]
 800d91e:	9804      	ldr	r0, [sp, #16]
 800d920:	4798      	blx	r3
 800d922:	4b12      	ldr	r3, [pc, #72]	; (800d96c <GUI_MEMDEV_Draw+0x14c>)
 800d924:	681b      	ldr	r3, [r3, #0]
 800d926:	b10b      	cbz	r3, 800d92c <GUI_MEMDEV_Draw+0x10c>
 800d928:	2000      	movs	r0, #0
 800d92a:	4798      	blx	r3
 800d92c:	4628      	mov	r0, r5
 800d92e:	f000 feb7 	bl	800e6a0 <GUI_MEMDEV_CopyToLCD>
 800d932:	4437      	add	r7, r6
 800d934:	9b05      	ldr	r3, [sp, #20]
 800d936:	42a7      	cmp	r7, r4
 800d938:	4499      	add	r9, r3
 800d93a:	dbdf      	blt.n	800d8fc <GUI_MEMDEV_Draw+0xdc>
 800d93c:	4628      	mov	r0, r5
 800d93e:	f000 fdd9 	bl	800e4f4 <GUI_MEMDEV_Delete>
 800d942:	2000      	movs	r0, #0
 800d944:	f000 fe34 	bl	800e5b0 <GUI_MEMDEV_Select>
 800d948:	42a6      	cmp	r6, r4
 800d94a:	d006      	beq.n	800d95a <GUI_MEMDEV_Draw+0x13a>
 800d94c:	f8db 3000 	ldr.w	r3, [fp]
 800d950:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800d952:	b110      	cbz	r0, 800d95a <GUI_MEMDEV_Draw+0x13a>
 800d954:	2133      	movs	r1, #51	; 0x33
 800d956:	f007 fa45 	bl	8014de4 <WM__SendMessageNoPara>
 800d95a:	2000      	movs	r0, #0
 800d95c:	b009      	add	sp, #36	; 0x24
 800d95e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d962:	bf00      	nop
 800d964:	2000016c 	.word	0x2000016c
 800d968:	20019c6c 	.word	0x20019c6c
 800d96c:	20019460 	.word	0x20019460

0800d970 <_GetDevData>:
 800d970:	4802      	ldr	r0, [pc, #8]	; (800d97c <_GetDevData+0xc>)
 800d972:	2901      	cmp	r1, #1
 800d974:	bf18      	it	ne
 800d976:	2000      	movne	r0, #0
 800d978:	4770      	bx	lr
 800d97a:	bf00      	nop
 800d97c:	0801af04 	.word	0x0801af04

0800d980 <_GetDevFunc>:
 800d980:	4802      	ldr	r0, [pc, #8]	; (800d98c <_GetDevFunc+0xc>)
 800d982:	2916      	cmp	r1, #22
 800d984:	bf18      	it	ne
 800d986:	2000      	movne	r0, #0
 800d988:	4770      	bx	lr
 800d98a:	bf00      	nop
 800d98c:	08015c99 	.word	0x08015c99

0800d990 <_GetDevProp>:
 800d990:	2908      	cmp	r1, #8
 800d992:	bf0c      	ite	eq
 800d994:	2020      	moveq	r0, #32
 800d996:	2000      	movne	r0, #0
 800d998:	4770      	bx	lr

0800d99a <_SetOrg>:
 800d99a:	b508      	push	{r3, lr}
 800d99c:	6800      	ldr	r0, [r0, #0]
 800d99e:	68c3      	ldr	r3, [r0, #12]
 800d9a0:	6a1b      	ldr	r3, [r3, #32]
 800d9a2:	4798      	blx	r3
 800d9a4:	bd08      	pop	{r3, pc}

0800d9a6 <_GetRect>:
 800d9a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d9a8:	6880      	ldr	r0, [r0, #8]
 800d9aa:	460c      	mov	r4, r1
 800d9ac:	f004 ffe0 	bl	8012970 <GUI_ALLOC_LockH>
 800d9b0:	4603      	mov	r3, r0
 800d9b2:	a802      	add	r0, sp, #8
 800d9b4:	8899      	ldrh	r1, [r3, #4]
 800d9b6:	88da      	ldrh	r2, [r3, #6]
 800d9b8:	891d      	ldrh	r5, [r3, #8]
 800d9ba:	f840 3d04 	str.w	r3, [r0, #-4]!
 800d9be:	895b      	ldrh	r3, [r3, #10]
 800d9c0:	8021      	strh	r1, [r4, #0]
 800d9c2:	8062      	strh	r2, [r4, #2]
 800d9c4:	4429      	add	r1, r5
 800d9c6:	441a      	add	r2, r3
 800d9c8:	3901      	subs	r1, #1
 800d9ca:	3a01      	subs	r2, #1
 800d9cc:	80a1      	strh	r1, [r4, #4]
 800d9ce:	80e2      	strh	r2, [r4, #6]
 800d9d0:	f004 ffdc 	bl	801298c <GUI_ALLOC_UnlockH>
 800d9d4:	b003      	add	sp, #12
 800d9d6:	bd30      	pop	{r4, r5, pc}

0800d9d8 <_XY2PTR>:
 800d9d8:	4b0e      	ldr	r3, [pc, #56]	; (800da14 <_XY2PTR+0x3c>)
 800d9da:	681b      	ldr	r3, [r3, #0]
 800d9dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d9de:	4605      	mov	r5, r0
 800d9e0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800d9e2:	460e      	mov	r6, r1
 800d9e4:	f004 ffc4 	bl	8012970 <GUI_ALLOC_LockH>
 800d9e8:	4603      	mov	r3, r0
 800d9ea:	a802      	add	r0, sp, #8
 800d9ec:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 800d9f0:	f840 3d04 	str.w	r3, [r0, #-4]!
 800d9f4:	f103 0118 	add.w	r1, r3, #24
 800d9f8:	1b36      	subs	r6, r6, r4
 800d9fa:	68dc      	ldr	r4, [r3, #12]
 800d9fc:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800da00:	fb04 1406 	mla	r4, r4, r6, r1
 800da04:	1aed      	subs	r5, r5, r3
 800da06:	f004 ffc1 	bl	801298c <GUI_ALLOC_UnlockH>
 800da0a:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800da0e:	4620      	mov	r0, r4
 800da10:	b002      	add	sp, #8
 800da12:	bd70      	pop	{r4, r5, r6, pc}
 800da14:	2000016c 	.word	0x2000016c

0800da18 <_GetPixelIndex>:
 800da18:	b508      	push	{r3, lr}
 800da1a:	4608      	mov	r0, r1
 800da1c:	4611      	mov	r1, r2
 800da1e:	f7ff ffdb 	bl	800d9d8 <_XY2PTR>
 800da22:	6800      	ldr	r0, [r0, #0]
 800da24:	bd08      	pop	{r3, pc}
	...

0800da28 <_XorPixel>:
 800da28:	4b15      	ldr	r3, [pc, #84]	; (800da80 <_XorPixel+0x58>)
 800da2a:	681b      	ldr	r3, [r3, #0]
 800da2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800da2e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800da30:	4615      	mov	r5, r2
 800da32:	460e      	mov	r6, r1
 800da34:	f004 ff9c 	bl	8012970 <GUI_ALLOC_LockH>
 800da38:	4629      	mov	r1, r5
 800da3a:	9000      	str	r0, [sp, #0]
 800da3c:	4630      	mov	r0, r6
 800da3e:	f7ff ffcb 	bl	800d9d8 <_XY2PTR>
 800da42:	9b00      	ldr	r3, [sp, #0]
 800da44:	681b      	ldr	r3, [r3, #0]
 800da46:	691b      	ldr	r3, [r3, #16]
 800da48:	4604      	mov	r4, r0
 800da4a:	689b      	ldr	r3, [r3, #8]
 800da4c:	4798      	blx	r3
 800da4e:	6823      	ldr	r3, [r4, #0]
 800da50:	4058      	eors	r0, r3
 800da52:	9b00      	ldr	r3, [sp, #0]
 800da54:	6020      	str	r0, [r4, #0]
 800da56:	6958      	ldr	r0, [r3, #20]
 800da58:	b160      	cbz	r0, 800da74 <_XorPixel+0x4c>
 800da5a:	f004 ff89 	bl	8012970 <GUI_ALLOC_LockH>
 800da5e:	ac02      	add	r4, sp, #8
 800da60:	6883      	ldr	r3, [r0, #8]
 800da62:	f844 0d04 	str.w	r0, [r4, #-4]!
 800da66:	681b      	ldr	r3, [r3, #0]
 800da68:	4631      	mov	r1, r6
 800da6a:	462a      	mov	r2, r5
 800da6c:	4798      	blx	r3
 800da6e:	4620      	mov	r0, r4
 800da70:	f004 ff8c 	bl	801298c <GUI_ALLOC_UnlockH>
 800da74:	4668      	mov	r0, sp
 800da76:	f004 ff89 	bl	801298c <GUI_ALLOC_UnlockH>
 800da7a:	b002      	add	sp, #8
 800da7c:	bd70      	pop	{r4, r5, r6, pc}
 800da7e:	bf00      	nop
 800da80:	2000016c 	.word	0x2000016c

0800da84 <_SetPixelIndex>:
 800da84:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800da86:	461c      	mov	r4, r3
 800da88:	4b10      	ldr	r3, [pc, #64]	; (800dacc <_SetPixelIndex+0x48>)
 800da8a:	681b      	ldr	r3, [r3, #0]
 800da8c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800da8e:	460e      	mov	r6, r1
 800da90:	4615      	mov	r5, r2
 800da92:	f004 ff6d 	bl	8012970 <GUI_ALLOC_LockH>
 800da96:	4629      	mov	r1, r5
 800da98:	9000      	str	r0, [sp, #0]
 800da9a:	4630      	mov	r0, r6
 800da9c:	f7ff ff9c 	bl	800d9d8 <_XY2PTR>
 800daa0:	9b00      	ldr	r3, [sp, #0]
 800daa2:	6004      	str	r4, [r0, #0]
 800daa4:	6958      	ldr	r0, [r3, #20]
 800daa6:	b160      	cbz	r0, 800dac2 <_SetPixelIndex+0x3e>
 800daa8:	f004 ff62 	bl	8012970 <GUI_ALLOC_LockH>
 800daac:	ac02      	add	r4, sp, #8
 800daae:	6883      	ldr	r3, [r0, #8]
 800dab0:	f844 0d04 	str.w	r0, [r4, #-4]!
 800dab4:	681b      	ldr	r3, [r3, #0]
 800dab6:	4631      	mov	r1, r6
 800dab8:	462a      	mov	r2, r5
 800daba:	4798      	blx	r3
 800dabc:	4620      	mov	r0, r4
 800dabe:	f004 ff65 	bl	801298c <GUI_ALLOC_UnlockH>
 800dac2:	4668      	mov	r0, sp
 800dac4:	f004 ff62 	bl	801298c <GUI_ALLOC_UnlockH>
 800dac8:	b002      	add	sp, #8
 800daca:	bd70      	pop	{r4, r5, r6, pc}
 800dacc:	2000016c 	.word	0x2000016c

0800dad0 <_DrawVLine>:
 800dad0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dad4:	4d2c      	ldr	r5, [pc, #176]	; (800db88 <_DrawVLine+0xb8>)
 800dad6:	461e      	mov	r6, r3
 800dad8:	682b      	ldr	r3, [r5, #0]
 800dada:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800dadc:	460f      	mov	r7, r1
 800dade:	4614      	mov	r4, r2
 800dae0:	f004 ff46 	bl	8012970 <GUI_ALLOC_LockH>
 800dae4:	9000      	str	r0, [sp, #0]
 800dae6:	6940      	ldr	r0, [r0, #20]
 800dae8:	46a9      	mov	r9, r5
 800daea:	b108      	cbz	r0, 800daf0 <_DrawVLine+0x20>
 800daec:	f004 ff40 	bl	8012970 <GUI_ALLOC_LockH>
 800daf0:	9001      	str	r0, [sp, #4]
 800daf2:	4621      	mov	r1, r4
 800daf4:	4638      	mov	r0, r7
 800daf6:	f7ff ff6f 	bl	800d9d8 <_XY2PTR>
 800dafa:	f8d9 2000 	ldr.w	r2, [r9]
 800dafe:	9b00      	ldr	r3, [sp, #0]
 800db00:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 800db02:	7c12      	ldrb	r2, [r2, #16]
 800db04:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800db08:	f8d1 9000 	ldr.w	r9, [r1]
 800db0c:	07d2      	lsls	r2, r2, #31
 800db0e:	4605      	mov	r5, r0
 800db10:	d51f      	bpl.n	800db52 <_DrawVLine+0x82>
 800db12:	681b      	ldr	r3, [r3, #0]
 800db14:	691b      	ldr	r3, [r3, #16]
 800db16:	689b      	ldr	r3, [r3, #8]
 800db18:	4798      	blx	r3
 800db1a:	4680      	mov	r8, r0
 800db1c:	9801      	ldr	r0, [sp, #4]
 800db1e:	b128      	cbz	r0, 800db2c <_DrawVLine+0x5c>
 800db20:	6882      	ldr	r2, [r0, #8]
 800db22:	4639      	mov	r1, r7
 800db24:	f8d2 c000 	ldr.w	ip, [r2]
 800db28:	4622      	mov	r2, r4
 800db2a:	47e0      	blx	ip
 800db2c:	682b      	ldr	r3, [r5, #0]
 800db2e:	ea83 0308 	eor.w	r3, r3, r8
 800db32:	602b      	str	r3, [r5, #0]
 800db34:	9b00      	ldr	r3, [sp, #0]
 800db36:	3401      	adds	r4, #1
 800db38:	68db      	ldr	r3, [r3, #12]
 800db3a:	42b4      	cmp	r4, r6
 800db3c:	441d      	add	r5, r3
 800db3e:	dded      	ble.n	800db1c <_DrawVLine+0x4c>
 800db40:	4668      	mov	r0, sp
 800db42:	f004 ff23 	bl	801298c <GUI_ALLOC_UnlockH>
 800db46:	9b01      	ldr	r3, [sp, #4]
 800db48:	b1d3      	cbz	r3, 800db80 <_DrawVLine+0xb0>
 800db4a:	a801      	add	r0, sp, #4
 800db4c:	f004 ff1e 	bl	801298c <GUI_ALLOC_UnlockH>
 800db50:	e016      	b.n	800db80 <_DrawVLine+0xb0>
 800db52:	9b01      	ldr	r3, [sp, #4]
 800db54:	b163      	cbz	r3, 800db70 <_DrawVLine+0xa0>
 800db56:	9801      	ldr	r0, [sp, #4]
 800db58:	6883      	ldr	r3, [r0, #8]
 800db5a:	4622      	mov	r2, r4
 800db5c:	681b      	ldr	r3, [r3, #0]
 800db5e:	4639      	mov	r1, r7
 800db60:	3401      	adds	r4, #1
 800db62:	4798      	blx	r3
 800db64:	42b4      	cmp	r4, r6
 800db66:	f8c5 9000 	str.w	r9, [r5]
 800db6a:	4445      	add	r5, r8
 800db6c:	ddf3      	ble.n	800db56 <_DrawVLine+0x86>
 800db6e:	e7e7      	b.n	800db40 <_DrawVLine+0x70>
 800db70:	1b34      	subs	r4, r6, r4
 800db72:	3401      	adds	r4, #1
 800db74:	3c01      	subs	r4, #1
 800db76:	f8c5 9000 	str.w	r9, [r5]
 800db7a:	4445      	add	r5, r8
 800db7c:	d1fa      	bne.n	800db74 <_DrawVLine+0xa4>
 800db7e:	e7df      	b.n	800db40 <_DrawVLine+0x70>
 800db80:	b003      	add	sp, #12
 800db82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db86:	bf00      	nop
 800db88:	2000016c 	.word	0x2000016c

0800db8c <_FillRect>:
 800db8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db90:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 800dc40 <_FillRect+0xb4>
 800db94:	4614      	mov	r4, r2
 800db96:	f8db 2000 	ldr.w	r2, [fp]
 800db9a:	b085      	sub	sp, #20
 800db9c:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800db9e:	460f      	mov	r7, r1
 800dba0:	461d      	mov	r5, r3
 800dba2:	f004 fee5 	bl	8012970 <GUI_ALLOC_LockH>
 800dba6:	4621      	mov	r1, r4
 800dba8:	9002      	str	r0, [sp, #8]
 800dbaa:	4638      	mov	r0, r7
 800dbac:	f7ff ff14 	bl	800d9d8 <_XY2PTR>
 800dbb0:	9a02      	ldr	r2, [sp, #8]
 800dbb2:	f8db 3000 	ldr.w	r3, [fp]
 800dbb6:	f8d2 900c 	ldr.w	r9, [r2, #12]
 800dbba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dbbc:	4606      	mov	r6, r0
 800dbbe:	6950      	ldr	r0, [r2, #20]
 800dbc0:	f8d3 a000 	ldr.w	sl, [r3]
 800dbc4:	1bed      	subs	r5, r5, r7
 800dbc6:	3501      	adds	r5, #1
 800dbc8:	b338      	cbz	r0, 800dc1a <_FillRect+0x8e>
 800dbca:	f004 fed1 	bl	8012970 <GUI_ALLOC_LockH>
 800dbce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800dbd0:	f10d 0810 	add.w	r8, sp, #16
 800dbd4:	1b13      	subs	r3, r2, r4
 800dbd6:	f848 0d04 	str.w	r0, [r8, #-4]!
 800dbda:	3301      	adds	r3, #1
 800dbdc:	9300      	str	r3, [sp, #0]
 800dbde:	4639      	mov	r1, r7
 800dbe0:	4622      	mov	r2, r4
 800dbe2:	462b      	mov	r3, r5
 800dbe4:	f008 fa3a 	bl	801605c <GUI_USAGE_AddRect>
 800dbe8:	4640      	mov	r0, r8
 800dbea:	f004 fecf 	bl	801298c <GUI_ALLOC_UnlockH>
 800dbee:	e014      	b.n	800dc1a <_FillRect+0x8e>
 800dbf0:	f8db 3000 	ldr.w	r3, [fp]
 800dbf4:	7c1b      	ldrb	r3, [r3, #16]
 800dbf6:	07db      	lsls	r3, r3, #31
 800dbf8:	d513      	bpl.n	800dc22 <_FillRect+0x96>
 800dbfa:	9b02      	ldr	r3, [sp, #8]
 800dbfc:	681b      	ldr	r3, [r3, #0]
 800dbfe:	691b      	ldr	r3, [r3, #16]
 800dc00:	689b      	ldr	r3, [r3, #8]
 800dc02:	4798      	blx	r3
 800dc04:	4632      	mov	r2, r6
 800dc06:	462b      	mov	r3, r5
 800dc08:	6811      	ldr	r1, [r2, #0]
 800dc0a:	3b01      	subs	r3, #1
 800dc0c:	ea81 0100 	eor.w	r1, r1, r0
 800dc10:	f842 1b04 	str.w	r1, [r2], #4
 800dc14:	d1f8      	bne.n	800dc08 <_FillRect+0x7c>
 800dc16:	444e      	add	r6, r9
 800dc18:	3401      	adds	r4, #1
 800dc1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800dc1c:	429c      	cmp	r4, r3
 800dc1e:	dde7      	ble.n	800dbf0 <_FillRect+0x64>
 800dc20:	e008      	b.n	800dc34 <_FillRect+0xa8>
 800dc22:	2d00      	cmp	r5, #0
 800dc24:	ddf7      	ble.n	800dc16 <_FillRect+0x8a>
 800dc26:	462b      	mov	r3, r5
 800dc28:	4632      	mov	r2, r6
 800dc2a:	3b01      	subs	r3, #1
 800dc2c:	f842 ab04 	str.w	sl, [r2], #4
 800dc30:	d1fb      	bne.n	800dc2a <_FillRect+0x9e>
 800dc32:	e7f0      	b.n	800dc16 <_FillRect+0x8a>
 800dc34:	a802      	add	r0, sp, #8
 800dc36:	f004 fea9 	bl	801298c <GUI_ALLOC_UnlockH>
 800dc3a:	b005      	add	sp, #20
 800dc3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc40:	2000016c 	.word	0x2000016c

0800dc44 <_DrawHLine>:
 800dc44:	b507      	push	{r0, r1, r2, lr}
 800dc46:	9200      	str	r2, [sp, #0]
 800dc48:	f7ff ffa0 	bl	800db8c <_FillRect>
 800dc4c:	b003      	add	sp, #12
 800dc4e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800dc54 <_DrawBitmap>:
 800dc54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc58:	4c9d      	ldr	r4, [pc, #628]	; (800ded0 <_DrawBitmap+0x27c>)
 800dc5a:	469a      	mov	sl, r3
 800dc5c:	6823      	ldr	r3, [r4, #0]
 800dc5e:	b091      	sub	sp, #68	; 0x44
 800dc60:	4680      	mov	r8, r0
 800dc62:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800dc64:	9207      	str	r2, [sp, #28]
 800dc66:	460e      	mov	r6, r1
 800dc68:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 800dc6c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800dc6e:	2800      	cmp	r0, #0
 800dc70:	f000 8387 	beq.w	800e382 <_DrawBitmap+0x72e>
 800dc74:	f004 fe7c 	bl	8012970 <GUI_ALLOC_LockH>
 800dc78:	900e      	str	r0, [sp, #56]	; 0x38
 800dc7a:	6940      	ldr	r0, [r0, #20]
 800dc7c:	b108      	cbz	r0, 800dc82 <_DrawBitmap+0x2e>
 800dc7e:	f004 fe77 	bl	8012970 <GUI_ALLOC_LockH>
 800dc82:	900f      	str	r0, [sp, #60]	; 0x3c
 800dc84:	a810      	add	r0, sp, #64	; 0x40
 800dc86:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800dc8a:	68db      	ldr	r3, [r3, #12]
 800dc8c:	930a      	str	r3, [sp, #40]	; 0x28
 800dc8e:	f004 fe7d 	bl	801298c <GUI_ALLOC_UnlockH>
 800dc92:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800dc94:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800dc96:	4437      	add	r7, r6
 800dc98:	9704      	str	r7, [sp, #16]
 800dc9a:	b150      	cbz	r0, 800dcb2 <_DrawBitmap+0x5e>
 800dc9c:	6823      	ldr	r3, [r4, #0]
 800dc9e:	7c1b      	ldrb	r3, [r3, #16]
 800dca0:	079c      	lsls	r4, r3, #30
 800dca2:	d406      	bmi.n	800dcb2 <_DrawBitmap+0x5e>
 800dca4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800dca6:	9700      	str	r7, [sp, #0]
 800dca8:	9904      	ldr	r1, [sp, #16]
 800dcaa:	9a07      	ldr	r2, [sp, #28]
 800dcac:	4653      	mov	r3, sl
 800dcae:	f008 f9d5 	bl	801605c <GUI_USAGE_AddRect>
 800dcb2:	9804      	ldr	r0, [sp, #16]
 800dcb4:	9907      	ldr	r1, [sp, #28]
 800dcb6:	f7ff fe8f 	bl	800d9d8 <_XY2PTR>
 800dcba:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800dcbc:	2f17      	cmp	r7, #23
 800dcbe:	4606      	mov	r6, r0
 800dcc0:	dd64      	ble.n	800dd8c <_DrawBitmap+0x138>
 800dcc2:	ea4f 078a 	mov.w	r7, sl, lsl #2
 800dcc6:	9706      	str	r7, [sp, #24]
 800dcc8:	f04f 0900 	mov.w	r9, #0
 800dccc:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800dcce:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800dcd0:	45b9      	cmp	r9, r7
 800dcd2:	da57      	bge.n	800dd84 <_DrawBitmap+0x130>
 800dcd4:	b130      	cbz	r0, 800dce4 <_DrawBitmap+0x90>
 800dcd6:	6883      	ldr	r3, [r0, #8]
 800dcd8:	9a07      	ldr	r2, [sp, #28]
 800dcda:	685c      	ldr	r4, [r3, #4]
 800dcdc:	9904      	ldr	r1, [sp, #16]
 800dcde:	444a      	add	r2, r9
 800dce0:	4653      	mov	r3, sl
 800dce2:	47a0      	blx	r4
 800dce4:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800dce8:	68d8      	ldr	r0, [r3, #12]
 800dcea:	b128      	cbz	r0, 800dcf8 <_DrawBitmap+0xa4>
 800dcec:	4630      	mov	r0, r6
 800dcee:	4659      	mov	r1, fp
 800dcf0:	9a06      	ldr	r2, [sp, #24]
 800dcf2:	f00c faf6 	bl	801a2e2 <memcpy>
 800dcf6:	e03e      	b.n	800dd76 <_DrawBitmap+0x122>
 800dcf8:	685b      	ldr	r3, [r3, #4]
 800dcfa:	4798      	blx	r3
 800dcfc:	0e00      	lsrs	r0, r0, #24
 800dcfe:	9005      	str	r0, [sp, #20]
 800dd00:	4635      	mov	r5, r6
 800dd02:	4657      	mov	r7, sl
 800dd04:	465c      	mov	r4, fp
 800dd06:	463b      	mov	r3, r7
 800dd08:	4622      	mov	r2, r4
 800dd0a:	f04f 0c00 	mov.w	ip, #0
 800dd0e:	f852 1b04 	ldr.w	r1, [r2], #4
 800dd12:	9805      	ldr	r0, [sp, #20]
 800dd14:	0e09      	lsrs	r1, r1, #24
 800dd16:	4281      	cmp	r1, r0
 800dd18:	9805      	ldr	r0, [sp, #20]
 800dd1a:	bf08      	it	eq
 800dd1c:	f10c 0c01 	addeq.w	ip, ip, #1
 800dd20:	4281      	cmp	r1, r0
 800dd22:	f103 33ff 	add.w	r3, r3, #4294967295
 800dd26:	d014      	beq.n	800dd52 <_DrawBitmap+0xfe>
 800dd28:	f1bc 0f00 	cmp.w	ip, #0
 800dd2c:	d014      	beq.n	800dd58 <_DrawBitmap+0x104>
 800dd2e:	ea4f 038c 	mov.w	r3, ip, lsl #2
 800dd32:	4628      	mov	r0, r5
 800dd34:	4621      	mov	r1, r4
 800dd36:	461a      	mov	r2, r3
 800dd38:	9303      	str	r3, [sp, #12]
 800dd3a:	f8cd c008 	str.w	ip, [sp, #8]
 800dd3e:	f00c fad0 	bl	801a2e2 <memcpy>
 800dd42:	9b03      	ldr	r3, [sp, #12]
 800dd44:	f8dd c008 	ldr.w	ip, [sp, #8]
 800dd48:	441d      	add	r5, r3
 800dd4a:	441c      	add	r4, r3
 800dd4c:	ebcc 0707 	rsb	r7, ip, r7
 800dd50:	e00f      	b.n	800dd72 <_DrawBitmap+0x11e>
 800dd52:	2b00      	cmp	r3, #0
 800dd54:	d1db      	bne.n	800dd0e <_DrawBitmap+0xba>
 800dd56:	e7e7      	b.n	800dd28 <_DrawBitmap+0xd4>
 800dd58:	6820      	ldr	r0, [r4, #0]
 800dd5a:	0e02      	lsrs	r2, r0, #24
 800dd5c:	2aff      	cmp	r2, #255	; 0xff
 800dd5e:	d005      	beq.n	800dd6c <_DrawBitmap+0x118>
 800dd60:	43d2      	mvns	r2, r2
 800dd62:	6829      	ldr	r1, [r5, #0]
 800dd64:	b2d2      	uxtb	r2, r2
 800dd66:	f002 fc58 	bl	801061a <GUI__MixColors>
 800dd6a:	6028      	str	r0, [r5, #0]
 800dd6c:	3504      	adds	r5, #4
 800dd6e:	3404      	adds	r4, #4
 800dd70:	3f01      	subs	r7, #1
 800dd72:	2f00      	cmp	r7, #0
 800dd74:	d1c7      	bne.n	800dd06 <_DrawBitmap+0xb2>
 800dd76:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800dd78:	44bb      	add	fp, r7
 800dd7a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800dd7c:	f109 0901 	add.w	r9, r9, #1
 800dd80:	443e      	add	r6, r7
 800dd82:	e7a3      	b.n	800dccc <_DrawBitmap+0x78>
 800dd84:	2800      	cmp	r0, #0
 800dd86:	f040 82f9 	bne.w	800e37c <_DrawBitmap+0x728>
 800dd8a:	e2fa      	b.n	800e382 <_DrawBitmap+0x72e>
 800dd8c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800dd8e:	2f10      	cmp	r7, #16
 800dd90:	d137      	bne.n	800de02 <_DrawBitmap+0x1ae>
 800dd92:	1f06      	subs	r6, r0, #4
 800dd94:	2500      	movs	r5, #0
 800dd96:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800dd98:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800dd9a:	42bd      	cmp	r5, r7
 800dd9c:	f280 80a0 	bge.w	800dee0 <_DrawBitmap+0x28c>
 800dda0:	9f07      	ldr	r7, [sp, #28]
 800dda2:	442f      	add	r7, r5
 800dda4:	b13c      	cbz	r4, 800ddb6 <_DrawBitmap+0x162>
 800dda6:	68a3      	ldr	r3, [r4, #8]
 800dda8:	9904      	ldr	r1, [sp, #16]
 800ddaa:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800ddae:	4620      	mov	r0, r4
 800ddb0:	463a      	mov	r2, r7
 800ddb2:	4653      	mov	r3, sl
 800ddb4:	47e0      	blx	ip
 800ddb6:	f1ab 0302 	sub.w	r3, fp, #2
 800ddba:	9306      	str	r3, [sp, #24]
 800ddbc:	9605      	str	r6, [sp, #20]
 800ddbe:	46d1      	mov	r9, sl
 800ddc0:	9904      	ldr	r1, [sp, #16]
 800ddc2:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800ddc6:	9a06      	ldr	r2, [sp, #24]
 800ddc8:	685b      	ldr	r3, [r3, #4]
 800ddca:	f832 0f02 	ldrh.w	r0, [r2, #2]!
 800ddce:	9206      	str	r2, [sp, #24]
 800ddd0:	4451      	add	r1, sl
 800ddd2:	ebc9 0101 	rsb	r1, r9, r1
 800ddd6:	9103      	str	r1, [sp, #12]
 800ddd8:	4798      	blx	r3
 800ddda:	9b05      	ldr	r3, [sp, #20]
 800dddc:	9903      	ldr	r1, [sp, #12]
 800ddde:	f843 0f04 	str.w	r0, [r3, #4]!
 800dde2:	9305      	str	r3, [sp, #20]
 800dde4:	b124      	cbz	r4, 800ddf0 <_DrawBitmap+0x19c>
 800dde6:	68a3      	ldr	r3, [r4, #8]
 800dde8:	4620      	mov	r0, r4
 800ddea:	681b      	ldr	r3, [r3, #0]
 800ddec:	463a      	mov	r2, r7
 800ddee:	4798      	blx	r3
 800ddf0:	f1b9 0901 	subs.w	r9, r9, #1
 800ddf4:	d1e4      	bne.n	800ddc0 <_DrawBitmap+0x16c>
 800ddf6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800ddf8:	44bb      	add	fp, r7
 800ddfa:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800ddfc:	3501      	adds	r5, #1
 800ddfe:	443e      	add	r6, r7
 800de00:	e7c9      	b.n	800dd96 <_DrawBitmap+0x142>
 800de02:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800de04:	2f08      	cmp	r7, #8
 800de06:	f100 0604 	add.w	r6, r0, #4
 800de0a:	d16d      	bne.n	800dee8 <_DrawBitmap+0x294>
 800de0c:	9f07      	ldr	r7, [sp, #28]
 800de0e:	9907      	ldr	r1, [sp, #28]
 800de10:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800de12:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800de14:	1a7b      	subs	r3, r7, r1
 800de16:	4293      	cmp	r3, r2
 800de18:	f1a6 0004 	sub.w	r0, r6, #4
 800de1c:	da60      	bge.n	800dee0 <_DrawBitmap+0x28c>
 800de1e:	4b2c      	ldr	r3, [pc, #176]	; (800ded0 <_DrawBitmap+0x27c>)
 800de20:	681b      	ldr	r3, [r3, #0]
 800de22:	7c1b      	ldrb	r3, [r3, #16]
 800de24:	b36d      	cbz	r5, 800de82 <_DrawBitmap+0x22e>
 800de26:	f013 0303 	ands.w	r3, r3, #3
 800de2a:	d005      	beq.n	800de38 <_DrawBitmap+0x1e4>
 800de2c:	2b02      	cmp	r3, #2
 800de2e:	d151      	bne.n	800ded4 <_DrawBitmap+0x280>
 800de30:	46b1      	mov	r9, r6
 800de32:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800de36:	e01c      	b.n	800de72 <_DrawBitmap+0x21e>
 800de38:	f81b 2003 	ldrb.w	r2, [fp, r3]
 800de3c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800de40:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800de44:	3301      	adds	r3, #1
 800de46:	4553      	cmp	r3, sl
 800de48:	d1f6      	bne.n	800de38 <_DrawBitmap+0x1e4>
 800de4a:	e043      	b.n	800ded4 <_DrawBitmap+0x280>
 800de4c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800de50:	f849 3c04 	str.w	r3, [r9, #-4]
 800de54:	b12c      	cbz	r4, 800de62 <_DrawBitmap+0x20e>
 800de56:	68a3      	ldr	r3, [r4, #8]
 800de58:	4620      	mov	r0, r4
 800de5a:	681b      	ldr	r3, [r3, #0]
 800de5c:	4641      	mov	r1, r8
 800de5e:	463a      	mov	r2, r7
 800de60:	4798      	blx	r3
 800de62:	9b04      	ldr	r3, [sp, #16]
 800de64:	f108 0801 	add.w	r8, r8, #1
 800de68:	4453      	add	r3, sl
 800de6a:	4543      	cmp	r3, r8
 800de6c:	f109 0904 	add.w	r9, r9, #4
 800de70:	d030      	beq.n	800ded4 <_DrawBitmap+0x280>
 800de72:	9804      	ldr	r0, [sp, #16]
 800de74:	ebc0 030b 	rsb	r3, r0, fp
 800de78:	f813 3008 	ldrb.w	r3, [r3, r8]
 800de7c:	2b00      	cmp	r3, #0
 800de7e:	d0f0      	beq.n	800de62 <_DrawBitmap+0x20e>
 800de80:	e7e4      	b.n	800de4c <_DrawBitmap+0x1f8>
 800de82:	f013 0303 	ands.w	r3, r3, #3
 800de86:	d005      	beq.n	800de94 <_DrawBitmap+0x240>
 800de88:	2b02      	cmp	r3, #2
 800de8a:	d123      	bne.n	800ded4 <_DrawBitmap+0x280>
 800de8c:	46b1      	mov	r9, r6
 800de8e:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800de92:	e015      	b.n	800dec0 <_DrawBitmap+0x26c>
 800de94:	4659      	mov	r1, fp
 800de96:	4652      	mov	r2, sl
 800de98:	f00c fa23 	bl	801a2e2 <memcpy>
 800de9c:	e01a      	b.n	800ded4 <_DrawBitmap+0x280>
 800de9e:	f849 3c04 	str.w	r3, [r9, #-4]
 800dea2:	b12c      	cbz	r4, 800deb0 <_DrawBitmap+0x25c>
 800dea4:	68a3      	ldr	r3, [r4, #8]
 800dea6:	4620      	mov	r0, r4
 800dea8:	681b      	ldr	r3, [r3, #0]
 800deaa:	4641      	mov	r1, r8
 800deac:	463a      	mov	r2, r7
 800deae:	4798      	blx	r3
 800deb0:	9b04      	ldr	r3, [sp, #16]
 800deb2:	f108 0801 	add.w	r8, r8, #1
 800deb6:	4453      	add	r3, sl
 800deb8:	4543      	cmp	r3, r8
 800deba:	f109 0904 	add.w	r9, r9, #4
 800debe:	d009      	beq.n	800ded4 <_DrawBitmap+0x280>
 800dec0:	9904      	ldr	r1, [sp, #16]
 800dec2:	ebc1 030b 	rsb	r3, r1, fp
 800dec6:	f813 3008 	ldrb.w	r3, [r3, r8]
 800deca:	2b00      	cmp	r3, #0
 800decc:	d0f0      	beq.n	800deb0 <_DrawBitmap+0x25c>
 800dece:	e7e6      	b.n	800de9e <_DrawBitmap+0x24a>
 800ded0:	2000016c 	.word	0x2000016c
 800ded4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ded6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ded8:	4493      	add	fp, r2
 800deda:	3701      	adds	r7, #1
 800dedc:	441e      	add	r6, r3
 800dede:	e796      	b.n	800de0e <_DrawBitmap+0x1ba>
 800dee0:	2c00      	cmp	r4, #0
 800dee2:	f040 824b 	bne.w	800e37c <_DrawBitmap+0x728>
 800dee6:	e24c      	b.n	800e382 <_DrawBitmap+0x72e>
 800dee8:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800deea:	4bb2      	ldr	r3, [pc, #712]	; (800e1b4 <_DrawBitmap+0x560>)
 800deec:	9609      	str	r6, [sp, #36]	; 0x24
 800deee:	007f      	lsls	r7, r7, #1
 800def0:	970c      	str	r7, [sp, #48]	; 0x30
 800def2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800def4:	00bf      	lsls	r7, r7, #2
 800def6:	970d      	str	r7, [sp, #52]	; 0x34
 800def8:	9f07      	ldr	r7, [sp, #28]
 800defa:	9705      	str	r7, [sp, #20]
 800defc:	2d00      	cmp	r5, #0
 800defe:	bf08      	it	eq
 800df00:	461d      	moveq	r5, r3
 800df02:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800df04:	9807      	ldr	r0, [sp, #28]
 800df06:	1f3c      	subs	r4, r7, #4
 800df08:	9f05      	ldr	r7, [sp, #20]
 800df0a:	1a3b      	subs	r3, r7, r0
 800df0c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800df0e:	42bb      	cmp	r3, r7
 800df10:	f280 8232 	bge.w	800e378 <_DrawBitmap+0x724>
 800df14:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800df16:	2f02      	cmp	r7, #2
 800df18:	f000 80ad 	beq.w	800e076 <_DrawBitmap+0x422>
 800df1c:	2f04      	cmp	r7, #4
 800df1e:	f000 814f 	beq.w	800e1c0 <_DrawBitmap+0x56c>
 800df22:	2f01      	cmp	r7, #1
 800df24:	f040 821e 	bne.w	800e364 <_DrawBitmap+0x710>
 800df28:	f8df 9290 	ldr.w	r9, [pc, #656]	; 800e1bc <_DrawBitmap+0x568>
 800df2c:	f8d9 3000 	ldr.w	r3, [r9]
 800df30:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800df32:	f004 fd1d 	bl	8012970 <GUI_ALLOC_LockH>
 800df36:	f89b 3000 	ldrb.w	r3, [fp]
 800df3a:	4a9f      	ldr	r2, [pc, #636]	; (800e1b8 <_DrawBitmap+0x564>)
 800df3c:	991e      	ldr	r1, [sp, #120]	; 0x78
 800df3e:	5cd6      	ldrb	r6, [r2, r3]
 800df40:	f8d9 3000 	ldr.w	r3, [r9]
 800df44:	900e      	str	r0, [sp, #56]	; 0x38
 800df46:	7c1b      	ldrb	r3, [r3, #16]
 800df48:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800df4c:	f003 0303 	and.w	r3, r3, #3
 800df50:	2b02      	cmp	r3, #2
 800df52:	4657      	mov	r7, sl
 800df54:	f1c1 0808 	rsb	r8, r1, #8
 800df58:	fa46 f601 	asr.w	r6, r6, r1
 800df5c:	d020      	beq.n	800dfa0 <_DrawBitmap+0x34c>
 800df5e:	2b03      	cmp	r3, #3
 800df60:	d061      	beq.n	800e026 <_DrawBitmap+0x3d2>
 800df62:	2b01      	cmp	r3, #1
 800df64:	d05f      	beq.n	800e026 <_DrawBitmap+0x3d2>
 800df66:	465a      	mov	r2, fp
 800df68:	4547      	cmp	r7, r8
 800df6a:	bf38      	it	cc
 800df6c:	46b8      	movcc	r8, r7
 800df6e:	ebc8 0707 	rsb	r7, r8, r7
 800df72:	4643      	mov	r3, r8
 800df74:	4621      	mov	r1, r4
 800df76:	f006 0001 	and.w	r0, r6, #1
 800df7a:	3b01      	subs	r3, #1
 800df7c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800df80:	f841 0b04 	str.w	r0, [r1], #4
 800df84:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800df88:	d1f5      	bne.n	800df76 <_DrawBitmap+0x322>
 800df8a:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800df8e:	2f00      	cmp	r7, #0
 800df90:	d06d      	beq.n	800e06e <_DrawBitmap+0x41a>
 800df92:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800df96:	4988      	ldr	r1, [pc, #544]	; (800e1b8 <_DrawBitmap+0x564>)
 800df98:	f04f 0808 	mov.w	r8, #8
 800df9c:	5cce      	ldrb	r6, [r1, r3]
 800df9e:	e7e3      	b.n	800df68 <_DrawBitmap+0x314>
 800dfa0:	686b      	ldr	r3, [r5, #4]
 800dfa2:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800dfa6:	930b      	str	r3, [sp, #44]	; 0x2c
 800dfa8:	f8cd b020 	str.w	fp, [sp, #32]
 800dfac:	4547      	cmp	r7, r8
 800dfae:	bf38      	it	cc
 800dfb0:	46b8      	movcc	r8, r7
 800dfb2:	ebc8 0707 	rsb	r7, r8, r7
 800dfb6:	f1bc 0f00 	cmp.w	ip, #0
 800dfba:	d026      	beq.n	800e00a <_DrawBitmap+0x3b6>
 800dfbc:	b91e      	cbnz	r6, 800dfc6 <_DrawBitmap+0x372>
 800dfbe:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800dfc2:	44c1      	add	r9, r8
 800dfc4:	e025      	b.n	800e012 <_DrawBitmap+0x3be>
 800dfc6:	07f0      	lsls	r0, r6, #31
 800dfc8:	d50c      	bpl.n	800dfe4 <_DrawBitmap+0x390>
 800dfca:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800dfce:	9a05      	ldr	r2, [sp, #20]
 800dfd0:	681b      	ldr	r3, [r3, #0]
 800dfd2:	f8cd c008 	str.w	ip, [sp, #8]
 800dfd6:	4660      	mov	r0, ip
 800dfd8:	4649      	mov	r1, r9
 800dfda:	4798      	blx	r3
 800dfdc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dfde:	f8dd c008 	ldr.w	ip, [sp, #8]
 800dfe2:	6023      	str	r3, [r4, #0]
 800dfe4:	f1b8 0801 	subs.w	r8, r8, #1
 800dfe8:	f109 0901 	add.w	r9, r9, #1
 800dfec:	f104 0404 	add.w	r4, r4, #4
 800dff0:	d00f      	beq.n	800e012 <_DrawBitmap+0x3be>
 800dff2:	0876      	lsrs	r6, r6, #1
 800dff4:	e7e2      	b.n	800dfbc <_DrawBitmap+0x368>
 800dff6:	07f1      	lsls	r1, r6, #31
 800dff8:	bf44      	itt	mi
 800dffa:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 800dffc:	6023      	strmi	r3, [r4, #0]
 800dffe:	f1b8 0801 	subs.w	r8, r8, #1
 800e002:	f104 0404 	add.w	r4, r4, #4
 800e006:	d004      	beq.n	800e012 <_DrawBitmap+0x3be>
 800e008:	0876      	lsrs	r6, r6, #1
 800e00a:	2e00      	cmp	r6, #0
 800e00c:	d1f3      	bne.n	800dff6 <_DrawBitmap+0x3a2>
 800e00e:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800e012:	b367      	cbz	r7, 800e06e <_DrawBitmap+0x41a>
 800e014:	9808      	ldr	r0, [sp, #32]
 800e016:	4a68      	ldr	r2, [pc, #416]	; (800e1b8 <_DrawBitmap+0x564>)
 800e018:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800e01c:	9008      	str	r0, [sp, #32]
 800e01e:	5cd6      	ldrb	r6, [r2, r3]
 800e020:	f04f 0808 	mov.w	r8, #8
 800e024:	e7c2      	b.n	800dfac <_DrawBitmap+0x358>
 800e026:	6803      	ldr	r3, [r0, #0]
 800e028:	691b      	ldr	r3, [r3, #16]
 800e02a:	689b      	ldr	r3, [r3, #8]
 800e02c:	4798      	blx	r3
 800e02e:	4659      	mov	r1, fp
 800e030:	4547      	cmp	r7, r8
 800e032:	bf38      	it	cc
 800e034:	46b8      	movcc	r8, r7
 800e036:	ebc8 0707 	rsb	r7, r8, r7
 800e03a:	1d23      	adds	r3, r4, #4
 800e03c:	46c6      	mov	lr, r8
 800e03e:	07f2      	lsls	r2, r6, #31
 800e040:	d504      	bpl.n	800e04c <_DrawBitmap+0x3f8>
 800e042:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800e046:	4042      	eors	r2, r0
 800e048:	f843 2c04 	str.w	r2, [r3, #-4]
 800e04c:	f1be 0e01 	subs.w	lr, lr, #1
 800e050:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800e054:	f103 0304 	add.w	r3, r3, #4
 800e058:	d1f1      	bne.n	800e03e <_DrawBitmap+0x3ea>
 800e05a:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800e05e:	b137      	cbz	r7, 800e06e <_DrawBitmap+0x41a>
 800e060:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800e064:	4a54      	ldr	r2, [pc, #336]	; (800e1b8 <_DrawBitmap+0x564>)
 800e066:	f04f 0808 	mov.w	r8, #8
 800e06a:	5cd6      	ldrb	r6, [r2, r3]
 800e06c:	e7e0      	b.n	800e030 <_DrawBitmap+0x3dc>
 800e06e:	a80e      	add	r0, sp, #56	; 0x38
 800e070:	f004 fc8c 	bl	801298c <GUI_ALLOC_UnlockH>
 800e074:	e176      	b.n	800e364 <_DrawBitmap+0x710>
 800e076:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e078:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e07a:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800e07e:	f1c7 0604 	rsb	r6, r7, #4
 800e082:	f89b 7000 	ldrb.w	r7, [fp]
 800e086:	409f      	lsls	r7, r3
 800e088:	4b4c      	ldr	r3, [pc, #304]	; (800e1bc <_DrawBitmap+0x568>)
 800e08a:	681b      	ldr	r3, [r3, #0]
 800e08c:	7c1b      	ldrb	r3, [r3, #16]
 800e08e:	f003 0303 	and.w	r3, r3, #3
 800e092:	2b01      	cmp	r3, #1
 800e094:	b2f6      	uxtb	r6, r6
 800e096:	b2ff      	uxtb	r7, r7
 800e098:	d066      	beq.n	800e168 <_DrawBitmap+0x514>
 800e09a:	d308      	bcc.n	800e0ae <_DrawBitmap+0x45a>
 800e09c:	2b02      	cmp	r3, #2
 800e09e:	f040 8161 	bne.w	800e364 <_DrawBitmap+0x710>
 800e0a2:	9804      	ldr	r0, [sp, #16]
 800e0a4:	f8cd b020 	str.w	fp, [sp, #32]
 800e0a8:	46d0      	mov	r8, sl
 800e0aa:	9006      	str	r0, [sp, #24]
 800e0ac:	e03e      	b.n	800e12c <_DrawBitmap+0x4d8>
 800e0ae:	465a      	mov	r2, fp
 800e0b0:	4653      	mov	r3, sl
 800e0b2:	429e      	cmp	r6, r3
 800e0b4:	bfc8      	it	gt
 800e0b6:	b2de      	uxtbgt	r6, r3
 800e0b8:	1b9b      	subs	r3, r3, r6
 800e0ba:	4631      	mov	r1, r6
 800e0bc:	4620      	mov	r0, r4
 800e0be:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 800e0c2:	3901      	subs	r1, #1
 800e0c4:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 800e0c8:	f840 cb04 	str.w	ip, [r0], #4
 800e0cc:	00bf      	lsls	r7, r7, #2
 800e0ce:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800e0d2:	b2ff      	uxtb	r7, r7
 800e0d4:	d1f3      	bne.n	800e0be <_DrawBitmap+0x46a>
 800e0d6:	3e01      	subs	r6, #1
 800e0d8:	b2f6      	uxtb	r6, r6
 800e0da:	3601      	adds	r6, #1
 800e0dc:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800e0e0:	2b00      	cmp	r3, #0
 800e0e2:	f000 813f 	beq.w	800e364 <_DrawBitmap+0x710>
 800e0e6:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800e0ea:	2604      	movs	r6, #4
 800e0ec:	e7e1      	b.n	800e0b2 <_DrawBitmap+0x45e>
 800e0ee:	9906      	ldr	r1, [sp, #24]
 800e0f0:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800e0f4:	4449      	add	r1, r9
 800e0f6:	d122      	bne.n	800e13e <_DrawBitmap+0x4ea>
 800e0f8:	f109 0901 	add.w	r9, r9, #1
 800e0fc:	fa5f f289 	uxtb.w	r2, r9
 800e100:	00bf      	lsls	r7, r7, #2
 800e102:	4296      	cmp	r6, r2
 800e104:	b2ff      	uxtb	r7, r7
 800e106:	d1f2      	bne.n	800e0ee <_DrawBitmap+0x49a>
 800e108:	9f06      	ldr	r7, [sp, #24]
 800e10a:	3e01      	subs	r6, #1
 800e10c:	b2f6      	uxtb	r6, r6
 800e10e:	1c7b      	adds	r3, r7, #1
 800e110:	1c72      	adds	r2, r6, #1
 800e112:	199e      	adds	r6, r3, r6
 800e114:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 800e118:	9606      	str	r6, [sp, #24]
 800e11a:	f1b8 0f00 	cmp.w	r8, #0
 800e11e:	f000 8121 	beq.w	800e364 <_DrawBitmap+0x710>
 800e122:	9b08      	ldr	r3, [sp, #32]
 800e124:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800e128:	9308      	str	r3, [sp, #32]
 800e12a:	2604      	movs	r6, #4
 800e12c:	4546      	cmp	r6, r8
 800e12e:	bfc8      	it	gt
 800e130:	fa5f f688 	uxtbgt.w	r6, r8
 800e134:	ebc6 0808 	rsb	r8, r6, r8
 800e138:	f04f 0900 	mov.w	r9, #0
 800e13c:	e7d7      	b.n	800e0ee <_DrawBitmap+0x49a>
 800e13e:	09ba      	lsrs	r2, r7, #6
 800e140:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800e144:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 800e148:	f1bc 0f00 	cmp.w	ip, #0
 800e14c:	d0d4      	beq.n	800e0f8 <_DrawBitmap+0x4a4>
 800e14e:	f8dc 2008 	ldr.w	r2, [ip, #8]
 800e152:	6812      	ldr	r2, [r2, #0]
 800e154:	920b      	str	r2, [sp, #44]	; 0x2c
 800e156:	4660      	mov	r0, ip
 800e158:	f8cd c008 	str.w	ip, [sp, #8]
 800e15c:	9a05      	ldr	r2, [sp, #20]
 800e15e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e160:	4798      	blx	r3
 800e162:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e166:	e7c7      	b.n	800e0f8 <_DrawBitmap+0x4a4>
 800e168:	4658      	mov	r0, fp
 800e16a:	4653      	mov	r3, sl
 800e16c:	429e      	cmp	r6, r3
 800e16e:	bfc8      	it	gt
 800e170:	b2de      	uxtbgt	r6, r3
 800e172:	1b9b      	subs	r3, r3, r6
 800e174:	1d22      	adds	r2, r4, #4
 800e176:	46b4      	mov	ip, r6
 800e178:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800e17c:	d005      	beq.n	800e18a <_DrawBitmap+0x536>
 800e17e:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800e182:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800e186:	f842 1c04 	str.w	r1, [r2, #-4]
 800e18a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e18e:	00bf      	lsls	r7, r7, #2
 800e190:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800e194:	b2ff      	uxtb	r7, r7
 800e196:	f102 0204 	add.w	r2, r2, #4
 800e19a:	d1ed      	bne.n	800e178 <_DrawBitmap+0x524>
 800e19c:	3e01      	subs	r6, #1
 800e19e:	b2f6      	uxtb	r6, r6
 800e1a0:	3601      	adds	r6, #1
 800e1a2:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800e1a6:	2b00      	cmp	r3, #0
 800e1a8:	f000 80dc 	beq.w	800e364 <_DrawBitmap+0x710>
 800e1ac:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800e1b0:	2604      	movs	r6, #4
 800e1b2:	e7db      	b.n	800e16c <_DrawBitmap+0x518>
 800e1b4:	0801aec4 	.word	0x0801aec4
 800e1b8:	08020734 	.word	0x08020734
 800e1bc:	2000016c 	.word	0x2000016c
 800e1c0:	4a71      	ldr	r2, [pc, #452]	; (800e388 <_DrawBitmap+0x734>)
 800e1c2:	f89b 3000 	ldrb.w	r3, [fp]
 800e1c6:	6812      	ldr	r2, [r2, #0]
 800e1c8:	980d      	ldr	r0, [sp, #52]	; 0x34
 800e1ca:	7c12      	ldrb	r2, [r2, #16]
 800e1cc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e1ce:	f002 0203 	and.w	r2, r2, #3
 800e1d2:	4083      	lsls	r3, r0
 800e1d4:	2a01      	cmp	r2, #1
 800e1d6:	b2de      	uxtb	r6, r3
 800e1d8:	f000 809c 	beq.w	800e314 <_DrawBitmap+0x6c0>
 800e1dc:	d302      	bcc.n	800e1e4 <_DrawBitmap+0x590>
 800e1de:	2a02      	cmp	r2, #2
 800e1e0:	d035      	beq.n	800e24e <_DrawBitmap+0x5fa>
 800e1e2:	e0bf      	b.n	800e364 <_DrawBitmap+0x710>
 800e1e4:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e1e6:	b15f      	cbz	r7, 800e200 <_DrawBitmap+0x5ac>
 800e1e8:	0936      	lsrs	r6, r6, #4
 800e1ea:	f10b 0201 	add.w	r2, fp, #1
 800e1ee:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800e1f2:	6023      	str	r3, [r4, #0]
 800e1f4:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800e1f8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e1fa:	f10a 33ff 	add.w	r3, sl, #4294967295
 800e1fe:	e001      	b.n	800e204 <_DrawBitmap+0x5b0>
 800e200:	4653      	mov	r3, sl
 800e202:	465a      	mov	r2, fp
 800e204:	2b01      	cmp	r3, #1
 800e206:	dd1a      	ble.n	800e23e <_DrawBitmap+0x5ea>
 800e208:	1058      	asrs	r0, r3, #1
 800e20a:	f104 0108 	add.w	r1, r4, #8
 800e20e:	f003 0301 	and.w	r3, r3, #1
 800e212:	eb02 0800 	add.w	r8, r2, r0
 800e216:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 800e21a:	f006 060f 	and.w	r6, r6, #15
 800e21e:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 800e222:	f841 7c08 	str.w	r7, [r1, #-8]
 800e226:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 800e22a:	f841 6c04 	str.w	r6, [r1, #-4]
 800e22e:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800e232:	4542      	cmp	r2, r8
 800e234:	f101 0108 	add.w	r1, r1, #8
 800e238:	d1ed      	bne.n	800e216 <_DrawBitmap+0x5c2>
 800e23a:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 800e23e:	2b00      	cmp	r3, #0
 800e240:	f000 8090 	beq.w	800e364 <_DrawBitmap+0x710>
 800e244:	0936      	lsrs	r6, r6, #4
 800e246:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800e24a:	6023      	str	r3, [r4, #0]
 800e24c:	e08a      	b.n	800e364 <_DrawBitmap+0x710>
 800e24e:	981e      	ldr	r0, [sp, #120]	; 0x78
 800e250:	b1c0      	cbz	r0, 800e284 <_DrawBitmap+0x630>
 800e252:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800e256:	d00a      	beq.n	800e26e <_DrawBitmap+0x61a>
 800e258:	0936      	lsrs	r6, r6, #4
 800e25a:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800e25e:	6023      	str	r3, [r4, #0]
 800e260:	b12f      	cbz	r7, 800e26e <_DrawBitmap+0x61a>
 800e262:	68bb      	ldr	r3, [r7, #8]
 800e264:	9904      	ldr	r1, [sp, #16]
 800e266:	681b      	ldr	r3, [r3, #0]
 800e268:	9a05      	ldr	r2, [sp, #20]
 800e26a:	4638      	mov	r0, r7
 800e26c:	4798      	blx	r3
 800e26e:	9904      	ldr	r1, [sp, #16]
 800e270:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e272:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800e276:	f101 0801 	add.w	r8, r1, #1
 800e27a:	f10a 3cff 	add.w	ip, sl, #4294967295
 800e27e:	f10b 0901 	add.w	r9, fp, #1
 800e282:	e011      	b.n	800e2a8 <_DrawBitmap+0x654>
 800e284:	46d4      	mov	ip, sl
 800e286:	46d9      	mov	r9, fp
 800e288:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800e28c:	e00c      	b.n	800e2a8 <_DrawBitmap+0x654>
 800e28e:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 800e292:	d10d      	bne.n	800e2b0 <_DrawBitmap+0x65c>
 800e294:	f016 060f 	ands.w	r6, r6, #15
 800e298:	d11b      	bne.n	800e2d2 <_DrawBitmap+0x67e>
 800e29a:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 800e29e:	3408      	adds	r4, #8
 800e2a0:	f108 0802 	add.w	r8, r8, #2
 800e2a4:	f1ac 0c02 	sub.w	ip, ip, #2
 800e2a8:	f1bc 0f01 	cmp.w	ip, #1
 800e2ac:	dcef      	bgt.n	800e28e <_DrawBitmap+0x63a>
 800e2ae:	e021      	b.n	800e2f4 <_DrawBitmap+0x6a0>
 800e2b0:	0933      	lsrs	r3, r6, #4
 800e2b2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800e2b6:	6023      	str	r3, [r4, #0]
 800e2b8:	2f00      	cmp	r7, #0
 800e2ba:	d0eb      	beq.n	800e294 <_DrawBitmap+0x640>
 800e2bc:	68bb      	ldr	r3, [r7, #8]
 800e2be:	9a05      	ldr	r2, [sp, #20]
 800e2c0:	681b      	ldr	r3, [r3, #0]
 800e2c2:	f8cd c008 	str.w	ip, [sp, #8]
 800e2c6:	4638      	mov	r0, r7
 800e2c8:	4641      	mov	r1, r8
 800e2ca:	4798      	blx	r3
 800e2cc:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e2d0:	e7e0      	b.n	800e294 <_DrawBitmap+0x640>
 800e2d2:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800e2d6:	6063      	str	r3, [r4, #4]
 800e2d8:	2f00      	cmp	r7, #0
 800e2da:	d0de      	beq.n	800e29a <_DrawBitmap+0x646>
 800e2dc:	68bb      	ldr	r3, [r7, #8]
 800e2de:	9a05      	ldr	r2, [sp, #20]
 800e2e0:	681b      	ldr	r3, [r3, #0]
 800e2e2:	f8cd c008 	str.w	ip, [sp, #8]
 800e2e6:	4638      	mov	r0, r7
 800e2e8:	f108 0101 	add.w	r1, r8, #1
 800e2ec:	4798      	blx	r3
 800e2ee:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e2f2:	e7d2      	b.n	800e29a <_DrawBitmap+0x646>
 800e2f4:	f1bc 0f00 	cmp.w	ip, #0
 800e2f8:	d034      	beq.n	800e364 <_DrawBitmap+0x710>
 800e2fa:	0936      	lsrs	r6, r6, #4
 800e2fc:	d032      	beq.n	800e364 <_DrawBitmap+0x710>
 800e2fe:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800e302:	6023      	str	r3, [r4, #0]
 800e304:	b377      	cbz	r7, 800e364 <_DrawBitmap+0x710>
 800e306:	68bb      	ldr	r3, [r7, #8]
 800e308:	9a05      	ldr	r2, [sp, #20]
 800e30a:	681b      	ldr	r3, [r3, #0]
 800e30c:	4638      	mov	r0, r7
 800e30e:	4641      	mov	r1, r8
 800e310:	4798      	blx	r3
 800e312:	e027      	b.n	800e364 <_DrawBitmap+0x710>
 800e314:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e316:	f1c7 0302 	rsb	r3, r7, #2
 800e31a:	b2db      	uxtb	r3, r3
 800e31c:	465f      	mov	r7, fp
 800e31e:	4652      	mov	r2, sl
 800e320:	4293      	cmp	r3, r2
 800e322:	bfc8      	it	gt
 800e324:	b2d3      	uxtbgt	r3, r2
 800e326:	1ad2      	subs	r2, r2, r3
 800e328:	1d20      	adds	r0, r4, #4
 800e32a:	469c      	mov	ip, r3
 800e32c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800e330:	d005      	beq.n	800e33e <_DrawBitmap+0x6ea>
 800e332:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800e336:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800e33a:	f840 1c04 	str.w	r1, [r0, #-4]
 800e33e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e342:	0136      	lsls	r6, r6, #4
 800e344:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800e348:	b2f6      	uxtb	r6, r6
 800e34a:	f100 0004 	add.w	r0, r0, #4
 800e34e:	d1ed      	bne.n	800e32c <_DrawBitmap+0x6d8>
 800e350:	3b01      	subs	r3, #1
 800e352:	b2db      	uxtb	r3, r3
 800e354:	3301      	adds	r3, #1
 800e356:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800e35a:	b11a      	cbz	r2, 800e364 <_DrawBitmap+0x710>
 800e35c:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800e360:	2302      	movs	r3, #2
 800e362:	e7dd      	b.n	800e320 <_DrawBitmap+0x6cc>
 800e364:	9b05      	ldr	r3, [sp, #20]
 800e366:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e368:	3301      	adds	r3, #1
 800e36a:	44bb      	add	fp, r7
 800e36c:	9305      	str	r3, [sp, #20]
 800e36e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800e370:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e372:	443b      	add	r3, r7
 800e374:	9309      	str	r3, [sp, #36]	; 0x24
 800e376:	e5c4      	b.n	800df02 <_DrawBitmap+0x2ae>
 800e378:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e37a:	b113      	cbz	r3, 800e382 <_DrawBitmap+0x72e>
 800e37c:	a80f      	add	r0, sp, #60	; 0x3c
 800e37e:	f004 fb05 	bl	801298c <GUI_ALLOC_UnlockH>
 800e382:	b011      	add	sp, #68	; 0x44
 800e384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e388:	2000016c 	.word	0x2000016c

0800e38c <GUI_MEMDEV__WriteToActiveAt>:
 800e38c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e390:	460e      	mov	r6, r1
 800e392:	4690      	mov	r8, r2
 800e394:	4607      	mov	r7, r0
 800e396:	f004 faeb 	bl	8012970 <GUI_ALLOC_LockH>
 800e39a:	6803      	ldr	r3, [r0, #0]
 800e39c:	ac02      	add	r4, sp, #8
 800e39e:	68db      	ldr	r3, [r3, #12]
 800e3a0:	f844 0d04 	str.w	r0, [r4, #-4]!
 800e3a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e3a6:	2000      	movs	r0, #0
 800e3a8:	2116      	movs	r1, #22
 800e3aa:	4798      	blx	r3
 800e3ac:	4605      	mov	r5, r0
 800e3ae:	4620      	mov	r0, r4
 800e3b0:	f004 faec 	bl	801298c <GUI_ALLOC_UnlockH>
 800e3b4:	b11d      	cbz	r5, 800e3be <GUI_MEMDEV__WriteToActiveAt+0x32>
 800e3b6:	4638      	mov	r0, r7
 800e3b8:	4631      	mov	r1, r6
 800e3ba:	4642      	mov	r2, r8
 800e3bc:	47a8      	blx	r5
 800e3be:	b002      	add	sp, #8
 800e3c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e3c4 <GUI_MEMDEV__CreateFixed>:
 800e3c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3c8:	4e3e      	ldr	r6, [pc, #248]	; (800e4c4 <GUI_MEMDEV__CreateFixed+0x100>)
 800e3ca:	b087      	sub	sp, #28
 800e3cc:	461d      	mov	r5, r3
 800e3ce:	6833      	ldr	r3, [r6, #0]
 800e3d0:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800e3d2:	7c5b      	ldrb	r3, [r3, #17]
 800e3d4:	4683      	mov	fp, r0
 800e3d6:	468a      	mov	sl, r1
 800e3d8:	4690      	mov	r8, r2
 800e3da:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e3dc:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e3de:	2200      	movs	r2, #0
 800e3e0:	f003 fd7e 	bl	8011ee0 <GUI_DEVICE_Create>
 800e3e4:	4604      	mov	r4, r0
 800e3e6:	2800      	cmp	r0, #0
 800e3e8:	d033      	beq.n	800e452 <GUI_MEMDEV__CreateFixed+0x8e>
 800e3ea:	6903      	ldr	r3, [r0, #16]
 800e3ec:	689b      	ldr	r3, [r3, #8]
 800e3ee:	4798      	blx	r3
 800e3f0:	f001 fb67 	bl	800fac2 <LCD__GetBPPDevice>
 800e3f4:	fb08 f600 	mul.w	r6, r8, r0
 800e3f8:	9003      	str	r0, [sp, #12]
 800e3fa:	3607      	adds	r6, #7
 800e3fc:	f004 fc80 	bl	8012d00 <GUI_ALLOC_RequestSize>
 800e400:	f017 0901 	ands.w	r9, r7, #1
 800e404:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 800e408:	d104      	bne.n	800e414 <GUI_MEMDEV__CreateFixed+0x50>
 800e40a:	2304      	movs	r3, #4
 800e40c:	fb90 f0f3 	sdiv	r0, r0, r3
 800e410:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800e414:	2d00      	cmp	r5, #0
 800e416:	dc09      	bgt.n	800e42c <GUI_MEMDEV__CreateFixed+0x68>
 800e418:	b11e      	cbz	r6, 800e422 <GUI_MEMDEV__CreateFixed+0x5e>
 800e41a:	3818      	subs	r0, #24
 800e41c:	fbb0 f0f6 	udiv	r0, r0, r6
 800e420:	e000      	b.n	800e424 <GUI_MEMDEV__CreateFixed+0x60>
 800e422:	4630      	mov	r0, r6
 800e424:	426d      	negs	r5, r5
 800e426:	42a8      	cmp	r0, r5
 800e428:	bfb8      	it	lt
 800e42a:	4605      	movlt	r5, r0
 800e42c:	f1b9 0f00 	cmp.w	r9, #0
 800e430:	d109      	bne.n	800e446 <GUI_MEMDEV__CreateFixed+0x82>
 800e432:	f8cd 9000 	str.w	r9, [sp]
 800e436:	4658      	mov	r0, fp
 800e438:	4651      	mov	r1, sl
 800e43a:	4642      	mov	r2, r8
 800e43c:	462b      	mov	r3, r5
 800e43e:	f007 fdcd 	bl	8015fdc <GUI_USAGE_BM_Create>
 800e442:	4607      	mov	r7, r0
 800e444:	e000      	b.n	800e448 <GUI_MEMDEV__CreateFixed+0x84>
 800e446:	2700      	movs	r7, #0
 800e448:	2d00      	cmp	r5, #0
 800e44a:	dc04      	bgt.n	800e456 <GUI_MEMDEV__CreateFixed+0x92>
 800e44c:	4620      	mov	r0, r4
 800e44e:	f003 fd45 	bl	8011edc <GUI_DEVICE_Delete>
 800e452:	2000      	movs	r0, #0
 800e454:	e032      	b.n	800e4bc <GUI_MEMDEV__CreateFixed+0xf8>
 800e456:	fb06 f005 	mul.w	r0, r6, r5
 800e45a:	3018      	adds	r0, #24
 800e45c:	f1b9 0f00 	cmp.w	r9, #0
 800e460:	d002      	beq.n	800e468 <GUI_MEMDEV__CreateFixed+0xa4>
 800e462:	f004 fcd9 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 800e466:	e001      	b.n	800e46c <GUI_MEMDEV__CreateFixed+0xa8>
 800e468:	f004 fcef 	bl	8012e4a <GUI_ALLOC_AllocZero>
 800e46c:	4681      	mov	r9, r0
 800e46e:	b940      	cbnz	r0, 800e482 <GUI_MEMDEV__CreateFixed+0xbe>
 800e470:	4620      	mov	r0, r4
 800e472:	f003 fd33 	bl	8011edc <GUI_DEVICE_Delete>
 800e476:	2f00      	cmp	r7, #0
 800e478:	d0eb      	beq.n	800e452 <GUI_MEMDEV__CreateFixed+0x8e>
 800e47a:	4638      	mov	r0, r7
 800e47c:	f004 fab2 	bl	80129e4 <GUI_ALLOC_Free>
 800e480:	e01b      	b.n	800e4ba <GUI_MEMDEV__CreateFixed+0xf6>
 800e482:	f004 fa75 	bl	8012970 <GUI_ALLOC_LockH>
 800e486:	4603      	mov	r3, r0
 800e488:	a806      	add	r0, sp, #24
 800e48a:	9a03      	ldr	r2, [sp, #12]
 800e48c:	f840 3d04 	str.w	r3, [r0, #-4]!
 800e490:	611a      	str	r2, [r3, #16]
 800e492:	601c      	str	r4, [r3, #0]
 800e494:	f8a3 b004 	strh.w	fp, [r3, #4]
 800e498:	f8a3 a006 	strh.w	sl, [r3, #6]
 800e49c:	f8a3 8008 	strh.w	r8, [r3, #8]
 800e4a0:	815d      	strh	r5, [r3, #10]
 800e4a2:	60de      	str	r6, [r3, #12]
 800e4a4:	615f      	str	r7, [r3, #20]
 800e4a6:	f004 fa71 	bl	801298c <GUI_ALLOC_UnlockH>
 800e4aa:	4a06      	ldr	r2, [pc, #24]	; (800e4c4 <GUI_MEMDEV__CreateFixed+0x100>)
 800e4ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e4ae:	6123      	str	r3, [r4, #16]
 800e4b0:	6813      	ldr	r3, [r2, #0]
 800e4b2:	f8c4 9008 	str.w	r9, [r4, #8]
 800e4b6:	7c5b      	ldrb	r3, [r3, #17]
 800e4b8:	61a3      	str	r3, [r4, #24]
 800e4ba:	4648      	mov	r0, r9
 800e4bc:	b007      	add	sp, #28
 800e4be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4c2:	bf00      	nop
 800e4c4:	2000016c 	.word	0x2000016c

0800e4c8 <GUI_MEMDEV_GetBitsPerPixel>:
 800e4c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e4ca:	4605      	mov	r5, r0
 800e4cc:	b170      	cbz	r0, 800e4ec <GUI_MEMDEV_GetBitsPerPixel+0x24>
 800e4ce:	f004 fa4f 	bl	8012970 <GUI_ALLOC_LockH>
 800e4d2:	6803      	ldr	r3, [r0, #0]
 800e4d4:	ac02      	add	r4, sp, #8
 800e4d6:	691b      	ldr	r3, [r3, #16]
 800e4d8:	f844 0d04 	str.w	r0, [r4, #-4]!
 800e4dc:	689b      	ldr	r3, [r3, #8]
 800e4de:	4798      	blx	r3
 800e4e0:	f001 faef 	bl	800fac2 <LCD__GetBPPDevice>
 800e4e4:	4605      	mov	r5, r0
 800e4e6:	4620      	mov	r0, r4
 800e4e8:	f004 fa50 	bl	801298c <GUI_ALLOC_UnlockH>
 800e4ec:	4628      	mov	r0, r5
 800e4ee:	b003      	add	sp, #12
 800e4f0:	bd30      	pop	{r4, r5, pc}
	...

0800e4f4 <GUI_MEMDEV_Delete>:
 800e4f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e4f6:	4604      	mov	r4, r0
 800e4f8:	b1d0      	cbz	r0, 800e530 <GUI_MEMDEV_Delete+0x3c>
 800e4fa:	4b0e      	ldr	r3, [pc, #56]	; (800e534 <GUI_MEMDEV_Delete+0x40>)
 800e4fc:	681b      	ldr	r3, [r3, #0]
 800e4fe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800e500:	4283      	cmp	r3, r0
 800e502:	d101      	bne.n	800e508 <GUI_MEMDEV_Delete+0x14>
 800e504:	f003 f884 	bl	8011610 <GUI_SelectLCD>
 800e508:	4620      	mov	r0, r4
 800e50a:	f004 fa31 	bl	8012970 <GUI_ALLOC_LockH>
 800e50e:	9001      	str	r0, [sp, #4]
 800e510:	6940      	ldr	r0, [r0, #20]
 800e512:	b108      	cbz	r0, 800e518 <GUI_MEMDEV_Delete+0x24>
 800e514:	f007 fd8e 	bl	8016034 <GUI_USAGE_DecUseCnt>
 800e518:	ad02      	add	r5, sp, #8
 800e51a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800e51e:	6818      	ldr	r0, [r3, #0]
 800e520:	f003 fcdc 	bl	8011edc <GUI_DEVICE_Delete>
 800e524:	4628      	mov	r0, r5
 800e526:	f004 fa31 	bl	801298c <GUI_ALLOC_UnlockH>
 800e52a:	4620      	mov	r0, r4
 800e52c:	f004 fa5a 	bl	80129e4 <GUI_ALLOC_Free>
 800e530:	b003      	add	sp, #12
 800e532:	bd30      	pop	{r4, r5, pc}
 800e534:	2000016c 	.word	0x2000016c

0800e538 <GUI_MEMDEV_CreateEx>:
 800e538:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e53c:	469a      	mov	sl, r3
 800e53e:	4b19      	ldr	r3, [pc, #100]	; (800e5a4 <GUI_MEMDEV_CreateEx+0x6c>)
 800e540:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e542:	681b      	ldr	r3, [r3, #0]
 800e544:	4607      	mov	r7, r0
 800e546:	7c58      	ldrb	r0, [r3, #17]
 800e548:	4b17      	ldr	r3, [pc, #92]	; (800e5a8 <GUI_MEMDEV_CreateEx+0x70>)
 800e54a:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800e54e:	4688      	mov	r8, r1
 800e550:	4691      	mov	r9, r2
 800e552:	68e3      	ldr	r3, [r4, #12]
 800e554:	681b      	ldr	r3, [r3, #0]
 800e556:	2b04      	cmp	r3, #4
 800e558:	d006      	beq.n	800e568 <GUI_MEMDEV_CreateEx+0x30>
 800e55a:	6824      	ldr	r4, [r4, #0]
 800e55c:	2c00      	cmp	r4, #0
 800e55e:	d1f8      	bne.n	800e552 <GUI_MEMDEV_CreateEx+0x1a>
 800e560:	f003 fcac 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 800e564:	4604      	mov	r4, r0
 800e566:	b130      	cbz	r0, 800e576 <GUI_MEMDEV_CreateEx+0x3e>
 800e568:	68e3      	ldr	r3, [r4, #12]
 800e56a:	4620      	mov	r0, r4
 800e56c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e56e:	2101      	movs	r1, #1
 800e570:	4798      	blx	r3
 800e572:	4606      	mov	r6, r0
 800e574:	b908      	cbnz	r0, 800e57a <GUI_MEMDEV_CreateEx+0x42>
 800e576:	2000      	movs	r0, #0
 800e578:	e010      	b.n	800e59c <GUI_MEMDEV_CreateEx+0x64>
 800e57a:	6924      	ldr	r4, [r4, #16]
 800e57c:	68a3      	ldr	r3, [r4, #8]
 800e57e:	4798      	blx	r3
 800e580:	3001      	adds	r0, #1
 800e582:	bf04      	itt	eq
 800e584:	f045 0501 	orreq.w	r5, r5, #1
 800e588:	4c08      	ldreq	r4, [pc, #32]	; (800e5ac <GUI_MEMDEV_CreateEx+0x74>)
 800e58a:	9402      	str	r4, [sp, #8]
 800e58c:	e88d 0060 	stmia.w	sp, {r5, r6}
 800e590:	4638      	mov	r0, r7
 800e592:	4641      	mov	r1, r8
 800e594:	464a      	mov	r2, r9
 800e596:	4653      	mov	r3, sl
 800e598:	f7ff ff14 	bl	800e3c4 <GUI_MEMDEV__CreateFixed>
 800e59c:	b004      	add	sp, #16
 800e59e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e5a2:	bf00      	nop
 800e5a4:	2000016c 	.word	0x2000016c
 800e5a8:	20019c9c 	.word	0x20019c9c
 800e5ac:	08020868 	.word	0x08020868

0800e5b0 <GUI_MEMDEV_Select>:
 800e5b0:	4b11      	ldr	r3, [pc, #68]	; (800e5f8 <GUI_MEMDEV_Select+0x48>)
 800e5b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e5b4:	681a      	ldr	r2, [r3, #0]
 800e5b6:	4604      	mov	r4, r0
 800e5b8:	6e16      	ldr	r6, [r2, #96]	; 0x60
 800e5ba:	461f      	mov	r7, r3
 800e5bc:	b910      	cbnz	r0, 800e5c4 <GUI_MEMDEV_Select+0x14>
 800e5be:	f003 f827 	bl	8011610 <GUI_SelectLCD>
 800e5c2:	e016      	b.n	800e5f2 <GUI_MEMDEV_Select+0x42>
 800e5c4:	b10e      	cbz	r6, 800e5ca <GUI_MEMDEV_Select+0x1a>
 800e5c6:	f003 f823 	bl	8011610 <GUI_SelectLCD>
 800e5ca:	f7fe ff37 	bl	800d43c <WM_Deactivate>
 800e5ce:	4620      	mov	r0, r4
 800e5d0:	f004 f9ce 	bl	8012970 <GUI_ALLOC_LockH>
 800e5d4:	ad02      	add	r5, sp, #8
 800e5d6:	683b      	ldr	r3, [r7, #0]
 800e5d8:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e5dc:	661c      	str	r4, [r3, #96]	; 0x60
 800e5de:	6800      	ldr	r0, [r0, #0]
 800e5e0:	f003 fcba 	bl	8011f58 <GUI_DEVICE_Link>
 800e5e4:	4628      	mov	r0, r5
 800e5e6:	f004 f9d1 	bl	801298c <GUI_ALLOC_UnlockH>
 800e5ea:	f001 f8f1 	bl	800f7d0 <LCD_UpdateColorIndices>
 800e5ee:	f001 fd29 	bl	8010044 <LCD_SetClipRectMax>
 800e5f2:	4630      	mov	r0, r6
 800e5f4:	b003      	add	sp, #12
 800e5f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e5f8:	2000016c 	.word	0x2000016c

0800e5fc <GUI_MEMDEV_CopyToLCDAt>:
 800e5fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e600:	460c      	mov	r4, r1
 800e602:	b085      	sub	sp, #20
 800e604:	4615      	mov	r5, r2
 800e606:	4606      	mov	r6, r0
 800e608:	2800      	cmp	r0, #0
 800e60a:	d041      	beq.n	800e690 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800e60c:	2000      	movs	r0, #0
 800e60e:	f002 ff9b 	bl	8011548 <GUI_SetDrawMode>
 800e612:	4b21      	ldr	r3, [pc, #132]	; (800e698 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 800e614:	681b      	ldr	r3, [r3, #0]
 800e616:	4607      	mov	r7, r0
 800e618:	4630      	mov	r0, r6
 800e61a:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 800e61e:	f004 f9a7 	bl	8012970 <GUI_ALLOC_LockH>
 800e622:	6803      	ldr	r3, [r0, #0]
 800e624:	9001      	str	r0, [sp, #4]
 800e626:	6998      	ldr	r0, [r3, #24]
 800e628:	f002 ffda 	bl	80115e0 <GUI_SelectLayer>
 800e62c:	4b1b      	ldr	r3, [pc, #108]	; (800e69c <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 800e62e:	429c      	cmp	r4, r3
 800e630:	9b01      	ldr	r3, [sp, #4]
 800e632:	bf04      	itt	eq
 800e634:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 800e638:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 800e63c:	891a      	ldrh	r2, [r3, #8]
 800e63e:	895b      	ldrh	r3, [r3, #10]
 800e640:	f8ad 4008 	strh.w	r4, [sp, #8]
 800e644:	3a01      	subs	r2, #1
 800e646:	3b01      	subs	r3, #1
 800e648:	4422      	add	r2, r4
 800e64a:	442b      	add	r3, r5
 800e64c:	4681      	mov	r9, r0
 800e64e:	f8ad 200c 	strh.w	r2, [sp, #12]
 800e652:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e656:	f8ad 500a 	strh.w	r5, [sp, #10]
 800e65a:	f7fe fee7 	bl	800d42c <WM_Activate>
 800e65e:	a801      	add	r0, sp, #4
 800e660:	f004 f994 	bl	801298c <GUI_ALLOC_UnlockH>
 800e664:	a802      	add	r0, sp, #8
 800e666:	f7fe fd0d 	bl	800d084 <WM__InitIVRSearch>
 800e66a:	b948      	cbnz	r0, 800e680 <GUI_MEMDEV_CopyToLCDAt+0x84>
 800e66c:	4648      	mov	r0, r9
 800e66e:	f002 ffb7 	bl	80115e0 <GUI_SelectLayer>
 800e672:	4640      	mov	r0, r8
 800e674:	f7ff ff9c 	bl	800e5b0 <GUI_MEMDEV_Select>
 800e678:	4638      	mov	r0, r7
 800e67a:	f002 ff65 	bl	8011548 <GUI_SetDrawMode>
 800e67e:	e007      	b.n	800e690 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800e680:	4630      	mov	r0, r6
 800e682:	4621      	mov	r1, r4
 800e684:	462a      	mov	r2, r5
 800e686:	f006 ff75 	bl	8015574 <GUI_MEMDEV__WriteToActiveOpaque>
 800e68a:	f7fe fc39 	bl	800cf00 <WM__GetNextIVR>
 800e68e:	e7ec      	b.n	800e66a <GUI_MEMDEV_CopyToLCDAt+0x6e>
 800e690:	b005      	add	sp, #20
 800e692:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e696:	bf00      	nop
 800e698:	2000016c 	.word	0x2000016c
 800e69c:	fffff001 	.word	0xfffff001

0800e6a0 <GUI_MEMDEV_CopyToLCD>:
 800e6a0:	4901      	ldr	r1, [pc, #4]	; (800e6a8 <GUI_MEMDEV_CopyToLCD+0x8>)
 800e6a2:	460a      	mov	r2, r1
 800e6a4:	f7ff bfaa 	b.w	800e5fc <GUI_MEMDEV_CopyToLCDAt>
 800e6a8:	fffff001 	.word	0xfffff001

0800e6ac <_SetPhysRAMAddr>:
 800e6ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e6ae:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800e6b0:	4604      	mov	r4, r0
 800e6b2:	460e      	mov	r6, r1
 800e6b4:	4615      	mov	r5, r2
 800e6b6:	b15b      	cbz	r3, 800e6d0 <_SetPhysRAMAddr+0x24>
 800e6b8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800e6bc:	4798      	blx	r3
 800e6be:	4631      	mov	r1, r6
 800e6c0:	4607      	mov	r7, r0
 800e6c2:	462a      	mov	r2, r5
 800e6c4:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800e6c8:	4620      	mov	r0, r4
 800e6ca:	4798      	blx	r3
 800e6cc:	463e      	mov	r6, r7
 800e6ce:	4605      	mov	r5, r0
 800e6d0:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800e6d4:	4620      	mov	r0, r4
 800e6d6:	212a      	movs	r1, #42	; 0x2a
 800e6d8:	4798      	blx	r3
 800e6da:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e6dc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e6e0:	4431      	add	r1, r6
 800e6e2:	4620      	mov	r0, r4
 800e6e4:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e6e8:	4798      	blx	r3
 800e6ea:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e6ec:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e6f0:	b2b7      	uxth	r7, r6
 800e6f2:	4439      	add	r1, r7
 800e6f4:	4620      	mov	r0, r4
 800e6f6:	b2c9      	uxtb	r1, r1
 800e6f8:	4798      	blx	r3
 800e6fa:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e6fc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e700:	4431      	add	r1, r6
 800e702:	4620      	mov	r0, r4
 800e704:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e708:	4798      	blx	r3
 800e70a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e70c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e710:	4439      	add	r1, r7
 800e712:	4620      	mov	r0, r4
 800e714:	b2c9      	uxtb	r1, r1
 800e716:	4798      	blx	r3
 800e718:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800e71c:	4620      	mov	r0, r4
 800e71e:	212b      	movs	r1, #43	; 0x2b
 800e720:	4798      	blx	r3
 800e722:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e724:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e728:	4429      	add	r1, r5
 800e72a:	4620      	mov	r0, r4
 800e72c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e730:	4798      	blx	r3
 800e732:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e734:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e738:	b2ae      	uxth	r6, r5
 800e73a:	4431      	add	r1, r6
 800e73c:	4620      	mov	r0, r4
 800e73e:	b2c9      	uxtb	r1, r1
 800e740:	4798      	blx	r3
 800e742:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e744:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e748:	4429      	add	r1, r5
 800e74a:	4620      	mov	r0, r4
 800e74c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e750:	4798      	blx	r3
 800e752:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e754:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e758:	4431      	add	r1, r6
 800e75a:	4620      	mov	r0, r4
 800e75c:	b2c9      	uxtb	r1, r1
 800e75e:	4798      	blx	r3
 800e760:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800e764:	4620      	mov	r0, r4
 800e766:	212c      	movs	r1, #44	; 0x2c
 800e768:	4798      	blx	r3
 800e76a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e76c <_SetRect>:
 800e76c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e770:	4698      	mov	r8, r3
 800e772:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800e774:	9f08      	ldr	r7, [sp, #32]
 800e776:	4604      	mov	r4, r0
 800e778:	4689      	mov	r9, r1
 800e77a:	4615      	mov	r5, r2
 800e77c:	2b00      	cmp	r3, #0
 800e77e:	d064      	beq.n	800e84a <_SetRect+0xde>
 800e780:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800e784:	4798      	blx	r3
 800e786:	463a      	mov	r2, r7
 800e788:	4606      	mov	r6, r0
 800e78a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800e78e:	4641      	mov	r1, r8
 800e790:	4620      	mov	r0, r4
 800e792:	4798      	blx	r3
 800e794:	462a      	mov	r2, r5
 800e796:	4682      	mov	sl, r0
 800e798:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800e79c:	4649      	mov	r1, r9
 800e79e:	4620      	mov	r0, r4
 800e7a0:	4798      	blx	r3
 800e7a2:	463a      	mov	r2, r7
 800e7a4:	4605      	mov	r5, r0
 800e7a6:	4641      	mov	r1, r8
 800e7a8:	4620      	mov	r0, r4
 800e7aa:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800e7ae:	4798      	blx	r3
 800e7b0:	45b2      	cmp	sl, r6
 800e7b2:	4607      	mov	r7, r0
 800e7b4:	db02      	blt.n	800e7bc <_SetRect+0x50>
 800e7b6:	4653      	mov	r3, sl
 800e7b8:	46b2      	mov	sl, r6
 800e7ba:	461e      	mov	r6, r3
 800e7bc:	42af      	cmp	r7, r5
 800e7be:	db02      	blt.n	800e7c6 <_SetRect+0x5a>
 800e7c0:	463b      	mov	r3, r7
 800e7c2:	462f      	mov	r7, r5
 800e7c4:	461d      	mov	r5, r3
 800e7c6:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800e7ca:	4620      	mov	r0, r4
 800e7cc:	212a      	movs	r1, #42	; 0x2a
 800e7ce:	4798      	blx	r3
 800e7d0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e7d2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e7d6:	4451      	add	r1, sl
 800e7d8:	4620      	mov	r0, r4
 800e7da:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e7de:	4798      	blx	r3
 800e7e0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e7e2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e7e6:	4451      	add	r1, sl
 800e7e8:	4620      	mov	r0, r4
 800e7ea:	b2c9      	uxtb	r1, r1
 800e7ec:	4798      	blx	r3
 800e7ee:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e7f0:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e7f4:	4431      	add	r1, r6
 800e7f6:	4620      	mov	r0, r4
 800e7f8:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e7fc:	4798      	blx	r3
 800e7fe:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e800:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e804:	4431      	add	r1, r6
 800e806:	4620      	mov	r0, r4
 800e808:	b2c9      	uxtb	r1, r1
 800e80a:	4798      	blx	r3
 800e80c:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800e810:	4620      	mov	r0, r4
 800e812:	212b      	movs	r1, #43	; 0x2b
 800e814:	4798      	blx	r3
 800e816:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e818:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e81c:	4439      	add	r1, r7
 800e81e:	4620      	mov	r0, r4
 800e820:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e824:	4798      	blx	r3
 800e826:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e828:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e82c:	4439      	add	r1, r7
 800e82e:	4620      	mov	r0, r4
 800e830:	b2c9      	uxtb	r1, r1
 800e832:	4798      	blx	r3
 800e834:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e836:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e83a:	4429      	add	r1, r5
 800e83c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e840:	4620      	mov	r0, r4
 800e842:	4798      	blx	r3
 800e844:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e846:	4429      	add	r1, r5
 800e848:	e03f      	b.n	800e8ca <_SetRect+0x15e>
 800e84a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800e84e:	212a      	movs	r1, #42	; 0x2a
 800e850:	4798      	blx	r3
 800e852:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e854:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e858:	4449      	add	r1, r9
 800e85a:	4620      	mov	r0, r4
 800e85c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e860:	4798      	blx	r3
 800e862:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e864:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e868:	4449      	add	r1, r9
 800e86a:	4620      	mov	r0, r4
 800e86c:	b2c9      	uxtb	r1, r1
 800e86e:	4798      	blx	r3
 800e870:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e872:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e876:	4441      	add	r1, r8
 800e878:	4620      	mov	r0, r4
 800e87a:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e87e:	4798      	blx	r3
 800e880:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e882:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e886:	4441      	add	r1, r8
 800e888:	4620      	mov	r0, r4
 800e88a:	b2c9      	uxtb	r1, r1
 800e88c:	4798      	blx	r3
 800e88e:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800e892:	4620      	mov	r0, r4
 800e894:	212b      	movs	r1, #43	; 0x2b
 800e896:	4798      	blx	r3
 800e898:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e89a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e89e:	4429      	add	r1, r5
 800e8a0:	4620      	mov	r0, r4
 800e8a2:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e8a6:	4798      	blx	r3
 800e8a8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e8aa:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e8ae:	4429      	add	r1, r5
 800e8b0:	4620      	mov	r0, r4
 800e8b2:	b2c9      	uxtb	r1, r1
 800e8b4:	4798      	blx	r3
 800e8b6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e8b8:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e8bc:	4439      	add	r1, r7
 800e8be:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800e8c2:	4620      	mov	r0, r4
 800e8c4:	4798      	blx	r3
 800e8c6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e8c8:	4439      	add	r1, r7
 800e8ca:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e8ce:	4620      	mov	r0, r4
 800e8d0:	b2c9      	uxtb	r1, r1
 800e8d2:	4798      	blx	r3
 800e8d4:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800e8d8:	4620      	mov	r0, r4
 800e8da:	212c      	movs	r1, #44	; 0x2c
 800e8dc:	4798      	blx	r3
 800e8de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800e8e4 <_SetOrientation>:
 800e8e4:	b513      	push	{r0, r1, r4, lr}
 800e8e6:	4a0d      	ldr	r2, [pc, #52]	; (800e91c <_SetOrientation+0x38>)
 800e8e8:	4604      	mov	r4, r0
 800e8ea:	6851      	ldr	r1, [r2, #4]
 800e8ec:	6810      	ldr	r0, [r2, #0]
 800e8ee:	466b      	mov	r3, sp
 800e8f0:	c303      	stmia	r3!, {r0, r1}
 800e8f2:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800e8f6:	4620      	mov	r0, r4
 800e8f8:	2136      	movs	r1, #54	; 0x36
 800e8fa:	4798      	blx	r3
 800e8fc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e8fe:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800e900:	aa02      	add	r2, sp, #8
 800e902:	4413      	add	r3, r2
 800e904:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 800e908:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 800e90c:	4319      	orrs	r1, r3
 800e90e:	4620      	mov	r0, r4
 800e910:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800e914:	b289      	uxth	r1, r1
 800e916:	4798      	blx	r3
 800e918:	b002      	add	sp, #8
 800e91a:	bd10      	pop	{r4, pc}
 800e91c:	0801ab54 	.word	0x0801ab54

0800e920 <_ReadPixel_16bpp_B8>:
 800e920:	b513      	push	{r0, r1, r4, lr}
 800e922:	4604      	mov	r4, r0
 800e924:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800e928:	202e      	movs	r0, #46	; 0x2e
 800e92a:	4798      	blx	r3
 800e92c:	6a21      	ldr	r1, [r4, #32]
 800e92e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800e932:	4668      	mov	r0, sp
 800e934:	3103      	adds	r1, #3
 800e936:	4798      	blx	r3
 800e938:	6a22      	ldr	r2, [r4, #32]
 800e93a:	ab00      	add	r3, sp, #0
 800e93c:	4413      	add	r3, r2
 800e93e:	f81d 2002 	ldrb.w	r2, [sp, r2]
 800e942:	7859      	ldrb	r1, [r3, #1]
 800e944:	7898      	ldrb	r0, [r3, #2]
 800e946:	08d2      	lsrs	r2, r2, #3
 800e948:	0889      	lsrs	r1, r1, #2
 800e94a:	02d2      	lsls	r2, r2, #11
 800e94c:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 800e950:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 800e954:	b002      	add	sp, #8
 800e956:	bd10      	pop	{r4, pc}

0800e958 <_ReadPixel_16bpp_B16_I>:
 800e958:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e95a:	4604      	mov	r4, r0
 800e95c:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800e960:	202e      	movs	r0, #46	; 0x2e
 800e962:	4798      	blx	r3
 800e964:	6a21      	ldr	r1, [r4, #32]
 800e966:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800e96a:	4668      	mov	r0, sp
 800e96c:	3102      	adds	r1, #2
 800e96e:	4798      	blx	r3
 800e970:	6a23      	ldr	r3, [r4, #32]
 800e972:	a900      	add	r1, sp, #0
 800e974:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 800e978:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 800e97c:	8852      	ldrh	r2, [r2, #2]
 800e97e:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 800e982:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800e986:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 800e98a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 800e98e:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 800e992:	b004      	add	sp, #16
 800e994:	bd10      	pop	{r4, pc}

0800e996 <_SetReg_B8>:
 800e996:	b538      	push	{r3, r4, r5, lr}
 800e998:	4604      	mov	r4, r0
 800e99a:	460d      	mov	r5, r1
 800e99c:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800e9a0:	0a08      	lsrs	r0, r1, #8
 800e9a2:	4798      	blx	r3
 800e9a4:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800e9a8:	b2e8      	uxtb	r0, r5
 800e9aa:	4798      	blx	r3
 800e9ac:	bd38      	pop	{r3, r4, r5, pc}

0800e9ae <_SetReg_B16>:
 800e9ae:	b508      	push	{r3, lr}
 800e9b0:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800e9b4:	4608      	mov	r0, r1
 800e9b6:	4798      	blx	r3
 800e9b8:	bd08      	pop	{r3, pc}

0800e9ba <_WritePara_B8>:
 800e9ba:	b508      	push	{r3, lr}
 800e9bc:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800e9c0:	b2c8      	uxtb	r0, r1
 800e9c2:	4798      	blx	r3
 800e9c4:	bd08      	pop	{r3, pc}

0800e9c6 <_WritePara_B16>:
 800e9c6:	b508      	push	{r3, lr}
 800e9c8:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800e9cc:	4608      	mov	r0, r1
 800e9ce:	4798      	blx	r3
 800e9d0:	bd08      	pop	{r3, pc}
	...

0800e9d4 <_SetInterface>:
 800e9d4:	2908      	cmp	r1, #8
 800e9d6:	d002      	beq.n	800e9de <_SetInterface+0xa>
 800e9d8:	2910      	cmp	r1, #16
 800e9da:	d005      	beq.n	800e9e8 <_SetInterface+0x14>
 800e9dc:	4770      	bx	lr
 800e9de:	4b06      	ldr	r3, [pc, #24]	; (800e9f8 <_SetInterface+0x24>)
 800e9e0:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800e9e4:	4b05      	ldr	r3, [pc, #20]	; (800e9fc <_SetInterface+0x28>)
 800e9e6:	e003      	b.n	800e9f0 <_SetInterface+0x1c>
 800e9e8:	4b05      	ldr	r3, [pc, #20]	; (800ea00 <_SetInterface+0x2c>)
 800e9ea:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800e9ee:	4b05      	ldr	r3, [pc, #20]	; (800ea04 <_SetInterface+0x30>)
 800e9f0:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 800e9f4:	4770      	bx	lr
 800e9f6:	bf00      	nop
 800e9f8:	0800e997 	.word	0x0800e997
 800e9fc:	0800e9bb 	.word	0x0800e9bb
 800ea00:	0800e9af 	.word	0x0800e9af
 800ea04:	0800e9c7 	.word	0x0800e9c7

0800ea08 <_ReadRect_16bpp_B8>:
 800ea08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea0a:	b085      	sub	sp, #20
 800ea0c:	6884      	ldr	r4, [r0, #8]
 800ea0e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800ea10:	9700      	str	r7, [sp, #0]
 800ea12:	1abd      	subs	r5, r7, r2
 800ea14:	1a58      	subs	r0, r3, r1
 800ea16:	3501      	adds	r5, #1
 800ea18:	fb00 5505 	mla	r5, r0, r5, r5
 800ea1c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800ea20:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800ea22:	4620      	mov	r0, r4
 800ea24:	47b8      	blx	r7
 800ea26:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800ea2a:	202e      	movs	r0, #46	; 0x2e
 800ea2c:	4798      	blx	r3
 800ea2e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800ea32:	6a21      	ldr	r1, [r4, #32]
 800ea34:	a802      	add	r0, sp, #8
 800ea36:	4798      	blx	r3
 800ea38:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800ea3c:	a802      	add	r0, sp, #8
 800ea3e:	2103      	movs	r1, #3
 800ea40:	4798      	blx	r3
 800ea42:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800ea46:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800ea4a:	08db      	lsrs	r3, r3, #3
 800ea4c:	0892      	lsrs	r2, r2, #2
 800ea4e:	02db      	lsls	r3, r3, #11
 800ea50:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800ea54:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800ea58:	3d01      	subs	r5, #1
 800ea5a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 800ea5e:	f826 3b02 	strh.w	r3, [r6], #2
 800ea62:	d1e9      	bne.n	800ea38 <_ReadRect_16bpp_B8+0x30>
 800ea64:	b005      	add	sp, #20
 800ea66:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ea68 <_ReadRect_16bpp_B16_I>:
 800ea68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea6a:	b087      	sub	sp, #28
 800ea6c:	6884      	ldr	r4, [r0, #8]
 800ea6e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800ea70:	9700      	str	r7, [sp, #0]
 800ea72:	1abd      	subs	r5, r7, r2
 800ea74:	1a58      	subs	r0, r3, r1
 800ea76:	3501      	adds	r5, #1
 800ea78:	fb00 5505 	mla	r5, r0, r5, r5
 800ea7c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800ea80:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800ea82:	4620      	mov	r0, r4
 800ea84:	47b8      	blx	r7
 800ea86:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800ea8a:	202e      	movs	r0, #46	; 0x2e
 800ea8c:	4798      	blx	r3
 800ea8e:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800ea92:	6a21      	ldr	r1, [r4, #32]
 800ea94:	a802      	add	r0, sp, #8
 800ea96:	4798      	blx	r3
 800ea98:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800ea9c:	a802      	add	r0, sp, #8
 800ea9e:	2102      	movs	r1, #2
 800eaa0:	4798      	blx	r3
 800eaa2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800eaa6:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 800eaaa:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 800eaae:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 800eab2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800eab6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 800eaba:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800eabe:	3d01      	subs	r5, #1
 800eac0:	f826 3b02 	strh.w	r3, [r6], #2
 800eac4:	d1e8      	bne.n	800ea98 <_ReadRect_16bpp_B16_I+0x30>
 800eac6:	b007      	add	sp, #28
 800eac8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800eacc <GUIDRV_FlexColor_SetFunc66720>:
 800eacc:	b510      	push	{r4, lr}
 800eace:	4604      	mov	r4, r0
 800ead0:	f000 fda6 	bl	800f620 <GUIDRV_FlexColor__InitOnce>
 800ead4:	68a3      	ldr	r3, [r4, #8]
 800ead6:	4a12      	ldr	r2, [pc, #72]	; (800eb20 <GUIDRV_FlexColor_SetFunc66720+0x54>)
 800ead8:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 800eadc:	4a11      	ldr	r2, [pc, #68]	; (800eb24 <GUIDRV_FlexColor_SetFunc66720+0x58>)
 800eade:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 800eae2:	4a11      	ldr	r2, [pc, #68]	; (800eb28 <GUIDRV_FlexColor_SetFunc66720+0x5c>)
 800eae4:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 800eae8:	4a10      	ldr	r2, [pc, #64]	; (800eb2c <GUIDRV_FlexColor_SetFunc66720+0x60>)
 800eaea:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800eaee:	2200      	movs	r2, #0
 800eaf0:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800eaf4:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800eaf8:	4a0d      	ldr	r2, [pc, #52]	; (800eb30 <GUIDRV_FlexColor_SetFunc66720+0x64>)
 800eafa:	490e      	ldr	r1, [pc, #56]	; (800eb34 <GUIDRV_FlexColor_SetFunc66720+0x68>)
 800eafc:	6812      	ldr	r2, [r2, #0]
 800eafe:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800eb02:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 800eb04:	6809      	ldr	r1, [r1, #0]
 800eb06:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 800eb0a:	f022 0203 	bic.w	r2, r2, #3
 800eb0e:	490a      	ldr	r1, [pc, #40]	; (800eb38 <GUIDRV_FlexColor_SetFunc66720+0x6c>)
 800eb10:	84da      	strh	r2, [r3, #38]	; 0x26
 800eb12:	4a0a      	ldr	r2, [pc, #40]	; (800eb3c <GUIDRV_FlexColor_SetFunc66720+0x70>)
 800eb14:	f8c3 10c8 	str.w	r1, [r3, #200]	; 0xc8
 800eb18:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800eb1c:	bd10      	pop	{r4, pc}
 800eb1e:	bf00      	nop
 800eb20:	0800e6ad 	.word	0x0800e6ad
 800eb24:	0800e76d 	.word	0x0800e76d
 800eb28:	0800e8e5 	.word	0x0800e8e5
 800eb2c:	0800e921 	.word	0x0800e921
 800eb30:	2000013c 	.word	0x2000013c
 800eb34:	20000138 	.word	0x20000138
 800eb38:	0800ea09 	.word	0x0800ea09
 800eb3c:	0800e9d5 	.word	0x0800e9d5

0800eb40 <_ReadData>:
 800eb40:	b508      	push	{r3, lr}
 800eb42:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 800eb46:	4798      	blx	r3
 800eb48:	bd08      	pop	{r3, pc}

0800eb4a <_WriteData>:
 800eb4a:	b508      	push	{r3, lr}
 800eb4c:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800eb50:	b288      	uxth	r0, r1
 800eb52:	4798      	blx	r3
 800eb54:	bd08      	pop	{r3, pc}
	...

0800eb58 <_FillRect>:
 800eb58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb5c:	4f3d      	ldr	r7, [pc, #244]	; (800ec54 <_FillRect+0xfc>)
 800eb5e:	6884      	ldr	r4, [r0, #8]
 800eb60:	4682      	mov	sl, r0
 800eb62:	6838      	ldr	r0, [r7, #0]
 800eb64:	7c00      	ldrb	r0, [r0, #16]
 800eb66:	f010 0f01 	tst.w	r0, #1
 800eb6a:	b085      	sub	sp, #20
 800eb6c:	460e      	mov	r6, r1
 800eb6e:	4615      	mov	r5, r2
 800eb70:	4698      	mov	r8, r3
 800eb72:	ebc1 0903 	rsb	r9, r1, r3
 800eb76:	d045      	beq.n	800ec04 <_FillRect+0xac>
 800eb78:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 800eb7c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800eb7e:	4285      	cmp	r5, r0
 800eb80:	dc65      	bgt.n	800ec4e <_FillRect+0xf6>
 800eb82:	f8d4 c0c4 	ldr.w	ip, [r4, #196]	; 0xc4
 800eb86:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800eb88:	f1bc 0f00 	cmp.w	ip, #0
 800eb8c:	d101      	bne.n	800eb92 <_FillRect+0x3a>
 800eb8e:	46b4      	mov	ip, r6
 800eb90:	e007      	b.n	800eba2 <_FillRect+0x4a>
 800eb92:	e88d 00a0 	stmia.w	sp, {r5, r7}
 800eb96:	4650      	mov	r0, sl
 800eb98:	4631      	mov	r1, r6
 800eb9a:	462a      	mov	r2, r5
 800eb9c:	4643      	mov	r3, r8
 800eb9e:	47e0      	blx	ip
 800eba0:	e011      	b.n	800ebc6 <_FillRect+0x6e>
 800eba2:	45c4      	cmp	ip, r8
 800eba4:	dc0e      	bgt.n	800ebc4 <_FillRect+0x6c>
 800eba6:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800ebaa:	f8cd c00c 	str.w	ip, [sp, #12]
 800ebae:	4661      	mov	r1, ip
 800ebb0:	4650      	mov	r0, sl
 800ebb2:	462a      	mov	r2, r5
 800ebb4:	4798      	blx	r3
 800ebb6:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ebba:	f827 0b02 	strh.w	r0, [r7], #2
 800ebbe:	f10c 0c01 	add.w	ip, ip, #1
 800ebc2:	e7ee      	b.n	800eba2 <_FillRect+0x4a>
 800ebc4:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800ebc6:	1ebb      	subs	r3, r7, #2
 800ebc8:	f109 0c01 	add.w	ip, r9, #1
 800ebcc:	445f      	add	r7, fp
 800ebce:	42bb      	cmp	r3, r7
 800ebd0:	d005      	beq.n	800ebde <_FillRect+0x86>
 800ebd2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800ebd4:	8859      	ldrh	r1, [r3, #2]
 800ebd6:	404a      	eors	r2, r1
 800ebd8:	f823 2f02 	strh.w	r2, [r3, #2]!
 800ebdc:	e7f7      	b.n	800ebce <_FillRect+0x76>
 800ebde:	9500      	str	r5, [sp, #0]
 800ebe0:	462a      	mov	r2, r5
 800ebe2:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800ebe6:	f8cd c00c 	str.w	ip, [sp, #12]
 800ebea:	4620      	mov	r0, r4
 800ebec:	4631      	mov	r1, r6
 800ebee:	4643      	mov	r3, r8
 800ebf0:	47b8      	blx	r7
 800ebf2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ebf6:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800ebfa:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800ebfc:	4661      	mov	r1, ip
 800ebfe:	4798      	blx	r3
 800ec00:	3501      	adds	r5, #1
 800ec02:	e7bb      	b.n	800eb7c <_FillRect+0x24>
 800ec04:	980e      	ldr	r0, [sp, #56]	; 0x38
 800ec06:	9000      	str	r0, [sp, #0]
 800ec08:	1a85      	subs	r5, r0, r2
 800ec0a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800ec0e:	4620      	mov	r0, r4
 800ec10:	47b0      	blx	r6
 800ec12:	683b      	ldr	r3, [r7, #0]
 800ec14:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 800ec16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ec18:	f109 0901 	add.w	r9, r9, #1
 800ec1c:	f8d3 8000 	ldr.w	r8, [r3]
 800ec20:	fb05 9509 	mla	r5, r5, r9, r9
 800ec24:	2301      	movs	r3, #1
 800ec26:	b195      	cbz	r5, 800ec4e <_FillRect+0xf6>
 800ec28:	2dfa      	cmp	r5, #250	; 0xfa
 800ec2a:	bf34      	ite	cc
 800ec2c:	462e      	movcc	r6, r5
 800ec2e:	26fa      	movcs	r6, #250	; 0xfa
 800ec30:	b12b      	cbz	r3, 800ec3e <_FillRect+0xe6>
 800ec32:	4638      	mov	r0, r7
 800ec34:	fa1f f188 	uxth.w	r1, r8
 800ec38:	4632      	mov	r2, r6
 800ec3a:	f001 fac5 	bl	80101c8 <GUI__memset16>
 800ec3e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800ec42:	4638      	mov	r0, r7
 800ec44:	4631      	mov	r1, r6
 800ec46:	4798      	blx	r3
 800ec48:	1bad      	subs	r5, r5, r6
 800ec4a:	2300      	movs	r3, #0
 800ec4c:	e7eb      	b.n	800ec26 <_FillRect+0xce>
 800ec4e:	b005      	add	sp, #20
 800ec50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec54:	2000016c 	.word	0x2000016c

0800ec58 <_DrawBitmap>:
 800ec58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec5c:	b08d      	sub	sp, #52	; 0x34
 800ec5e:	6885      	ldr	r5, [r0, #8]
 800ec60:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800ec62:	9305      	str	r3, [sp, #20]
 800ec64:	1e7b      	subs	r3, r7, #1
 800ec66:	2b01      	cmp	r3, #1
 800ec68:	9009      	str	r0, [sp, #36]	; 0x24
 800ec6a:	9108      	str	r1, [sp, #32]
 800ec6c:	920a      	str	r2, [sp, #40]	; 0x28
 800ec6e:	950b      	str	r5, [sp, #44]	; 0x2c
 800ec70:	d903      	bls.n	800ec7a <_DrawBitmap+0x22>
 800ec72:	2f04      	cmp	r7, #4
 800ec74:	d001      	beq.n	800ec7a <_DrawBitmap+0x22>
 800ec76:	2f08      	cmp	r7, #8
 800ec78:	d106      	bne.n	800ec88 <_DrawBitmap+0x30>
 800ec7a:	4b8f      	ldr	r3, [pc, #572]	; (800eeb8 <_DrawBitmap+0x260>)
 800ec7c:	681b      	ldr	r3, [r3, #0]
 800ec7e:	7c1b      	ldrb	r3, [r3, #16]
 800ec80:	f003 0303 	and.w	r3, r3, #3
 800ec84:	2b02      	cmp	r3, #2
 800ec86:	d010      	beq.n	800ecaa <_DrawBitmap+0x52>
 800ec88:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ec8a:	9f16      	ldr	r7, [sp, #88]	; 0x58
 800ec8c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800ec8e:	9908      	ldr	r1, [sp, #32]
 800ec90:	9b05      	ldr	r3, [sp, #20]
 800ec92:	443a      	add	r2, r7
 800ec94:	4429      	add	r1, r5
 800ec96:	3a01      	subs	r2, #1
 800ec98:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800ec9a:	9200      	str	r2, [sp, #0]
 800ec9c:	440b      	add	r3, r1
 800ec9e:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 800eca2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800eca4:	4628      	mov	r0, r5
 800eca6:	3b01      	subs	r3, #1
 800eca8:	47a0      	blx	r4
 800ecaa:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800ecae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800ecb0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800ecb2:	ebc7 030b 	rsb	r3, r7, fp
 800ecb6:	42ab      	cmp	r3, r5
 800ecb8:	f280 8251 	bge.w	800f15e <_DrawBitmap+0x506>
 800ecbc:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800ecbe:	1e7b      	subs	r3, r7, #1
 800ecc0:	2b0f      	cmp	r3, #15
 800ecc2:	f200 8245 	bhi.w	800f150 <_DrawBitmap+0x4f8>
 800ecc6:	e8df f013 	tbh	[pc, r3, lsl #1]
 800ecca:	0010      	.short	0x0010
 800eccc:	024300b7 	.word	0x024300b7
 800ecd0:	02430140 	.word	0x02430140
 800ecd4:	02430243 	.word	0x02430243
 800ecd8:	024301d7 	.word	0x024301d7
 800ecdc:	02430243 	.word	0x02430243
 800ece0:	02430243 	.word	0x02430243
 800ece4:	02430243 	.word	0x02430243
 800ece8:	023d      	.short	0x023d
 800ecea:	4b73      	ldr	r3, [pc, #460]	; (800eeb8 <_DrawBitmap+0x260>)
 800ecec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800ecee:	681b      	ldr	r3, [r3, #0]
 800ecf0:	68ac      	ldr	r4, [r5, #8]
 800ecf2:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800ecf4:	7c1b      	ldrb	r3, [r3, #16]
 800ecf6:	682f      	ldr	r7, [r5, #0]
 800ecf8:	686d      	ldr	r5, [r5, #4]
 800ecfa:	9507      	str	r5, [sp, #28]
 800ecfc:	f8dd a020 	ldr.w	sl, [sp, #32]
 800ed00:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800ed02:	f003 0303 	and.w	r3, r3, #3
 800ed06:	2b02      	cmp	r3, #2
 800ed08:	44aa      	add	sl, r5
 800ed0a:	d01b      	beq.n	800ed44 <_DrawBitmap+0xec>
 800ed0c:	2b03      	cmp	r3, #3
 800ed0e:	d06e      	beq.n	800edee <_DrawBitmap+0x196>
 800ed10:	2b01      	cmp	r3, #1
 800ed12:	d06c      	beq.n	800edee <_DrawBitmap+0x196>
 800ed14:	9e05      	ldr	r6, [sp, #20]
 800ed16:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 800ed1a:	f898 1000 	ldrb.w	r1, [r8]
 800ed1e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800ed22:	2280      	movs	r2, #128	; 0x80
 800ed24:	412a      	asrs	r2, r5
 800ed26:	4211      	tst	r1, r2
 800ed28:	bf16      	itet	ne
 800ed2a:	9907      	ldrne	r1, [sp, #28]
 800ed2c:	b2b8      	uxtheq	r0, r7
 800ed2e:	b288      	uxthne	r0, r1
 800ed30:	3501      	adds	r5, #1
 800ed32:	4798      	blx	r3
 800ed34:	2d08      	cmp	r5, #8
 800ed36:	bf04      	itt	eq
 800ed38:	f108 0801 	addeq.w	r8, r8, #1
 800ed3c:	2500      	moveq	r5, #0
 800ed3e:	3e01      	subs	r6, #1
 800ed40:	d1eb      	bne.n	800ed1a <_DrawBitmap+0xc2>
 800ed42:	e205      	b.n	800f150 <_DrawBitmap+0x4f8>
 800ed44:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800ed46:	9506      	str	r5, [sp, #24]
 800ed48:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800ed4c:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800ed50:	f8cd a00c 	str.w	sl, [sp, #12]
 800ed54:	2500      	movs	r5, #0
 800ed56:	4656      	mov	r6, sl
 800ed58:	462b      	mov	r3, r5
 800ed5a:	9f06      	ldr	r7, [sp, #24]
 800ed5c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800ed60:	783a      	ldrb	r2, [r7, #0]
 800ed62:	fa4c fc08 	asr.w	ip, ip, r8
 800ed66:	ea12 0c0c 	ands.w	ip, r2, ip
 800ed6a:	d00b      	beq.n	800ed84 <_DrawBitmap+0x12c>
 800ed6c:	b913      	cbnz	r3, 800ed74 <_DrawBitmap+0x11c>
 800ed6e:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800ed72:	9603      	str	r6, [sp, #12]
 800ed74:	9f07      	ldr	r7, [sp, #28]
 800ed76:	f8a9 7000 	strh.w	r7, [r9]
 800ed7a:	3501      	adds	r5, #1
 800ed7c:	f109 0902 	add.w	r9, r9, #2
 800ed80:	2301      	movs	r3, #1
 800ed82:	e017      	b.n	800edb4 <_DrawBitmap+0x15c>
 800ed84:	2b01      	cmp	r3, #1
 800ed86:	d114      	bne.n	800edb2 <_DrawBitmap+0x15a>
 800ed88:	f8cd b000 	str.w	fp, [sp]
 800ed8c:	f8cd c010 	str.w	ip, [sp, #16]
 800ed90:	4620      	mov	r0, r4
 800ed92:	9903      	ldr	r1, [sp, #12]
 800ed94:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800ed98:	465a      	mov	r2, fp
 800ed9a:	1e73      	subs	r3, r6, #1
 800ed9c:	47b8      	blx	r7
 800ed9e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800eda2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800eda4:	4629      	mov	r1, r5
 800eda6:	4798      	blx	r3
 800eda8:	f8dd c010 	ldr.w	ip, [sp, #16]
 800edac:	4665      	mov	r5, ip
 800edae:	4663      	mov	r3, ip
 800edb0:	e000      	b.n	800edb4 <_DrawBitmap+0x15c>
 800edb2:	4663      	mov	r3, ip
 800edb4:	f108 0801 	add.w	r8, r8, #1
 800edb8:	f1b8 0f08 	cmp.w	r8, #8
 800edbc:	f106 0601 	add.w	r6, r6, #1
 800edc0:	d104      	bne.n	800edcc <_DrawBitmap+0x174>
 800edc2:	9f06      	ldr	r7, [sp, #24]
 800edc4:	3701      	adds	r7, #1
 800edc6:	9706      	str	r7, [sp, #24]
 800edc8:	f04f 0800 	mov.w	r8, #0
 800edcc:	9a05      	ldr	r2, [sp, #20]
 800edce:	4452      	add	r2, sl
 800edd0:	42b2      	cmp	r2, r6
 800edd2:	d1c2      	bne.n	800ed5a <_DrawBitmap+0x102>
 800edd4:	9f05      	ldr	r7, [sp, #20]
 800edd6:	1e7b      	subs	r3, r7, #1
 800edd8:	4453      	add	r3, sl
 800edda:	2d00      	cmp	r5, #0
 800eddc:	f000 81b8 	beq.w	800f150 <_DrawBitmap+0x4f8>
 800ede0:	f8cd b000 	str.w	fp, [sp]
 800ede4:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800ede8:	9903      	ldr	r1, [sp, #12]
 800edea:	4620      	mov	r0, r4
 800edec:	e13d      	b.n	800f06a <_DrawBitmap+0x412>
 800edee:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800edf2:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800edf4:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800edf6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800edfa:	782a      	ldrb	r2, [r5, #0]
 800edfc:	2380      	movs	r3, #128	; 0x80
 800edfe:	4133      	asrs	r3, r6
 800ee00:	44d1      	add	r9, sl
 800ee02:	421a      	tst	r2, r3
 800ee04:	ebc8 0909 	rsb	r9, r8, r9
 800ee08:	d00d      	beq.n	800ee26 <_DrawBitmap+0x1ce>
 800ee0a:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800ee0e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ee10:	4649      	mov	r1, r9
 800ee12:	465a      	mov	r2, fp
 800ee14:	4798      	blx	r3
 800ee16:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ee18:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 800ee1c:	4043      	eors	r3, r0
 800ee1e:	4649      	mov	r1, r9
 800ee20:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ee22:	465a      	mov	r2, fp
 800ee24:	47b8      	blx	r7
 800ee26:	3601      	adds	r6, #1
 800ee28:	2e08      	cmp	r6, #8
 800ee2a:	bf04      	itt	eq
 800ee2c:	3501      	addeq	r5, #1
 800ee2e:	2600      	moveq	r6, #0
 800ee30:	f1b8 0801 	subs.w	r8, r8, #1
 800ee34:	d1df      	bne.n	800edf6 <_DrawBitmap+0x19e>
 800ee36:	e18b      	b.n	800f150 <_DrawBitmap+0x4f8>
 800ee38:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800ee3a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800ee3c:	68ac      	ldr	r4, [r5, #8]
 800ee3e:	2f00      	cmp	r7, #0
 800ee40:	f000 8186 	beq.w	800f150 <_DrawBitmap+0x4f8>
 800ee44:	4b1c      	ldr	r3, [pc, #112]	; (800eeb8 <_DrawBitmap+0x260>)
 800ee46:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800ee48:	681b      	ldr	r3, [r3, #0]
 800ee4a:	f895 a000 	ldrb.w	sl, [r5]
 800ee4e:	7c1b      	ldrb	r3, [r3, #16]
 800ee50:	f013 0303 	ands.w	r3, r3, #3
 800ee54:	d011      	beq.n	800ee7a <_DrawBitmap+0x222>
 800ee56:	2b02      	cmp	r3, #2
 800ee58:	f040 817a 	bne.w	800f150 <_DrawBitmap+0x4f8>
 800ee5c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800ee5e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800ee62:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800ee64:	9703      	str	r7, [sp, #12]
 800ee66:	44a9      	add	r9, r5
 800ee68:	46a8      	mov	r8, r5
 800ee6a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800ee6c:	9507      	str	r5, [sp, #28]
 800ee6e:	2500      	movs	r5, #0
 800ee70:	f8cd 9018 	str.w	r9, [sp, #24]
 800ee74:	464e      	mov	r6, r9
 800ee76:	462b      	mov	r3, r5
 800ee78:	e040      	b.n	800eefc <_DrawBitmap+0x2a4>
 800ee7a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800ee7c:	9e05      	ldr	r6, [sp, #20]
 800ee7e:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800ee80:	f1c5 0303 	rsb	r3, r5, #3
 800ee84:	005b      	lsls	r3, r3, #1
 800ee86:	f1c3 0206 	rsb	r2, r3, #6
 800ee8a:	21c0      	movs	r1, #192	; 0xc0
 800ee8c:	fa41 f202 	asr.w	r2, r1, r2
 800ee90:	ea02 020a 	and.w	r2, r2, sl
 800ee94:	40da      	lsrs	r2, r3
 800ee96:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ee98:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800ee9c:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800eea0:	3501      	adds	r5, #1
 800eea2:	4798      	blx	r3
 800eea4:	2d04      	cmp	r5, #4
 800eea6:	d103      	bne.n	800eeb0 <_DrawBitmap+0x258>
 800eea8:	f897 a001 	ldrb.w	sl, [r7, #1]
 800eeac:	2500      	movs	r5, #0
 800eeae:	3701      	adds	r7, #1
 800eeb0:	3e01      	subs	r6, #1
 800eeb2:	d1e5      	bne.n	800ee80 <_DrawBitmap+0x228>
 800eeb4:	e14c      	b.n	800f150 <_DrawBitmap+0x4f8>
 800eeb6:	bf00      	nop
 800eeb8:	2000016c 	.word	0x2000016c
 800eebc:	b913      	cbnz	r3, 800eec4 <_DrawBitmap+0x26c>
 800eebe:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800eec0:	9703      	str	r7, [sp, #12]
 800eec2:	9606      	str	r6, [sp, #24]
 800eec4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800eec6:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800eeca:	9f03      	ldr	r7, [sp, #12]
 800eecc:	803b      	strh	r3, [r7, #0]
 800eece:	3702      	adds	r7, #2
 800eed0:	3501      	adds	r5, #1
 800eed2:	9703      	str	r7, [sp, #12]
 800eed4:	2301      	movs	r3, #1
 800eed6:	f108 0801 	add.w	r8, r8, #1
 800eeda:	f1b8 0f04 	cmp.w	r8, #4
 800eede:	f106 0601 	add.w	r6, r6, #1
 800eee2:	d106      	bne.n	800eef2 <_DrawBitmap+0x29a>
 800eee4:	9f07      	ldr	r7, [sp, #28]
 800eee6:	f897 a001 	ldrb.w	sl, [r7, #1]
 800eeea:	3701      	adds	r7, #1
 800eeec:	9707      	str	r7, [sp, #28]
 800eeee:	f04f 0800 	mov.w	r8, #0
 800eef2:	9a05      	ldr	r2, [sp, #20]
 800eef4:	444a      	add	r2, r9
 800eef6:	42b2      	cmp	r2, r6
 800eef8:	f000 80ac 	beq.w	800f054 <_DrawBitmap+0x3fc>
 800eefc:	f1c8 0203 	rsb	r2, r8, #3
 800ef00:	0052      	lsls	r2, r2, #1
 800ef02:	f1c2 0106 	rsb	r1, r2, #6
 800ef06:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 800ef0a:	fa4c fc01 	asr.w	ip, ip, r1
 800ef0e:	ea0c 0c0a 	and.w	ip, ip, sl
 800ef12:	fa3c fc02 	lsrs.w	ip, ip, r2
 800ef16:	d1d1      	bne.n	800eebc <_DrawBitmap+0x264>
 800ef18:	2b01      	cmp	r3, #1
 800ef1a:	d114      	bne.n	800ef46 <_DrawBitmap+0x2ee>
 800ef1c:	f8cd b000 	str.w	fp, [sp]
 800ef20:	f8cd c010 	str.w	ip, [sp, #16]
 800ef24:	4620      	mov	r0, r4
 800ef26:	9906      	ldr	r1, [sp, #24]
 800ef28:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800ef2c:	465a      	mov	r2, fp
 800ef2e:	1e73      	subs	r3, r6, #1
 800ef30:	47b8      	blx	r7
 800ef32:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800ef36:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800ef38:	4629      	mov	r1, r5
 800ef3a:	4798      	blx	r3
 800ef3c:	f8dd c010 	ldr.w	ip, [sp, #16]
 800ef40:	4665      	mov	r5, ip
 800ef42:	4663      	mov	r3, ip
 800ef44:	e7c7      	b.n	800eed6 <_DrawBitmap+0x27e>
 800ef46:	4663      	mov	r3, ip
 800ef48:	e7c5      	b.n	800eed6 <_DrawBitmap+0x27e>
 800ef4a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800ef4c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800ef4e:	68ac      	ldr	r4, [r5, #8]
 800ef50:	2f00      	cmp	r7, #0
 800ef52:	f000 80fd 	beq.w	800f150 <_DrawBitmap+0x4f8>
 800ef56:	4b83      	ldr	r3, [pc, #524]	; (800f164 <_DrawBitmap+0x50c>)
 800ef58:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800ef5a:	681b      	ldr	r3, [r3, #0]
 800ef5c:	f895 a000 	ldrb.w	sl, [r5]
 800ef60:	7c1b      	ldrb	r3, [r3, #16]
 800ef62:	f013 0303 	ands.w	r3, r3, #3
 800ef66:	d011      	beq.n	800ef8c <_DrawBitmap+0x334>
 800ef68:	2b02      	cmp	r3, #2
 800ef6a:	f040 80f1 	bne.w	800f150 <_DrawBitmap+0x4f8>
 800ef6e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800ef70:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800ef74:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800ef76:	9703      	str	r7, [sp, #12]
 800ef78:	44a9      	add	r9, r5
 800ef7a:	46a8      	mov	r8, r5
 800ef7c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800ef7e:	9507      	str	r5, [sp, #28]
 800ef80:	2500      	movs	r5, #0
 800ef82:	f8cd 9018 	str.w	r9, [sp, #24]
 800ef86:	464e      	mov	r6, r9
 800ef88:	462b      	mov	r3, r5
 800ef8a:	e03c      	b.n	800f006 <_DrawBitmap+0x3ae>
 800ef8c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800ef8e:	9e05      	ldr	r6, [sp, #20]
 800ef90:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800ef92:	f1c5 0301 	rsb	r3, r5, #1
 800ef96:	009b      	lsls	r3, r3, #2
 800ef98:	f1c3 0204 	rsb	r2, r3, #4
 800ef9c:	21f0      	movs	r1, #240	; 0xf0
 800ef9e:	fa41 f202 	asr.w	r2, r1, r2
 800efa2:	ea02 020a 	and.w	r2, r2, sl
 800efa6:	40da      	lsrs	r2, r3
 800efa8:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800efaa:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800efae:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800efb2:	3501      	adds	r5, #1
 800efb4:	4798      	blx	r3
 800efb6:	2d02      	cmp	r5, #2
 800efb8:	d103      	bne.n	800efc2 <_DrawBitmap+0x36a>
 800efba:	f897 a001 	ldrb.w	sl, [r7, #1]
 800efbe:	2500      	movs	r5, #0
 800efc0:	3701      	adds	r7, #1
 800efc2:	3e01      	subs	r6, #1
 800efc4:	d1e5      	bne.n	800ef92 <_DrawBitmap+0x33a>
 800efc6:	e0c3      	b.n	800f150 <_DrawBitmap+0x4f8>
 800efc8:	b913      	cbnz	r3, 800efd0 <_DrawBitmap+0x378>
 800efca:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800efcc:	9703      	str	r7, [sp, #12]
 800efce:	9606      	str	r6, [sp, #24]
 800efd0:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800efd2:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800efd6:	9f03      	ldr	r7, [sp, #12]
 800efd8:	803b      	strh	r3, [r7, #0]
 800efda:	3702      	adds	r7, #2
 800efdc:	3501      	adds	r5, #1
 800efde:	9703      	str	r7, [sp, #12]
 800efe0:	2301      	movs	r3, #1
 800efe2:	f108 0801 	add.w	r8, r8, #1
 800efe6:	f1b8 0f02 	cmp.w	r8, #2
 800efea:	f106 0601 	add.w	r6, r6, #1
 800efee:	d106      	bne.n	800effe <_DrawBitmap+0x3a6>
 800eff0:	9f07      	ldr	r7, [sp, #28]
 800eff2:	f897 a001 	ldrb.w	sl, [r7, #1]
 800eff6:	3701      	adds	r7, #1
 800eff8:	9707      	str	r7, [sp, #28]
 800effa:	f04f 0800 	mov.w	r8, #0
 800effe:	9a05      	ldr	r2, [sp, #20]
 800f000:	444a      	add	r2, r9
 800f002:	42b2      	cmp	r2, r6
 800f004:	d026      	beq.n	800f054 <_DrawBitmap+0x3fc>
 800f006:	f1c8 0201 	rsb	r2, r8, #1
 800f00a:	0092      	lsls	r2, r2, #2
 800f00c:	f1c2 0104 	rsb	r1, r2, #4
 800f010:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 800f014:	fa4c fc01 	asr.w	ip, ip, r1
 800f018:	ea0c 0c0a 	and.w	ip, ip, sl
 800f01c:	fa3c fc02 	lsrs.w	ip, ip, r2
 800f020:	d1d2      	bne.n	800efc8 <_DrawBitmap+0x370>
 800f022:	2b01      	cmp	r3, #1
 800f024:	d114      	bne.n	800f050 <_DrawBitmap+0x3f8>
 800f026:	f8cd b000 	str.w	fp, [sp]
 800f02a:	f8cd c010 	str.w	ip, [sp, #16]
 800f02e:	4620      	mov	r0, r4
 800f030:	9906      	ldr	r1, [sp, #24]
 800f032:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800f036:	465a      	mov	r2, fp
 800f038:	1e73      	subs	r3, r6, #1
 800f03a:	47b8      	blx	r7
 800f03c:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f040:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f042:	4629      	mov	r1, r5
 800f044:	4798      	blx	r3
 800f046:	f8dd c010 	ldr.w	ip, [sp, #16]
 800f04a:	4665      	mov	r5, ip
 800f04c:	4663      	mov	r3, ip
 800f04e:	e7c8      	b.n	800efe2 <_DrawBitmap+0x38a>
 800f050:	4663      	mov	r3, ip
 800f052:	e7c6      	b.n	800efe2 <_DrawBitmap+0x38a>
 800f054:	9f05      	ldr	r7, [sp, #20]
 800f056:	1e7b      	subs	r3, r7, #1
 800f058:	444b      	add	r3, r9
 800f05a:	2d00      	cmp	r5, #0
 800f05c:	d078      	beq.n	800f150 <_DrawBitmap+0x4f8>
 800f05e:	f8cd b000 	str.w	fp, [sp]
 800f062:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800f066:	9906      	ldr	r1, [sp, #24]
 800f068:	4620      	mov	r0, r4
 800f06a:	465a      	mov	r2, fp
 800f06c:	47b0      	blx	r6
 800f06e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f072:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f074:	4629      	mov	r1, r5
 800f076:	e06a      	b.n	800f14e <_DrawBitmap+0x4f6>
 800f078:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800f07a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800f07c:	68ac      	ldr	r4, [r5, #8]
 800f07e:	2f00      	cmp	r7, #0
 800f080:	d066      	beq.n	800f150 <_DrawBitmap+0x4f8>
 800f082:	4b38      	ldr	r3, [pc, #224]	; (800f164 <_DrawBitmap+0x50c>)
 800f084:	681b      	ldr	r3, [r3, #0]
 800f086:	7c1b      	ldrb	r3, [r3, #16]
 800f088:	f013 0303 	ands.w	r3, r3, #3
 800f08c:	d009      	beq.n	800f0a2 <_DrawBitmap+0x44a>
 800f08e:	2b02      	cmp	r3, #2
 800f090:	d15e      	bne.n	800f150 <_DrawBitmap+0x4f8>
 800f092:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800f096:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800f09a:	2600      	movs	r6, #0
 800f09c:	464f      	mov	r7, r9
 800f09e:	4633      	mov	r3, r6
 800f0a0:	e022      	b.n	800f0e8 <_DrawBitmap+0x490>
 800f0a2:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f0a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f0a6:	9f05      	ldr	r7, [sp, #20]
 800f0a8:	443b      	add	r3, r7
 800f0aa:	1b5b      	subs	r3, r3, r5
 800f0ac:	2b00      	cmp	r3, #0
 800f0ae:	dd4f      	ble.n	800f150 <_DrawBitmap+0x4f8>
 800f0b0:	f815 2b01 	ldrb.w	r2, [r5], #1
 800f0b4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800f0b6:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800f0ba:	f837 0022 	ldrh.w	r0, [r7, r2, lsl #2]
 800f0be:	4798      	blx	r3
 800f0c0:	e7f0      	b.n	800f0a4 <_DrawBitmap+0x44c>
 800f0c2:	b913      	cbnz	r3, 800f0ca <_DrawBitmap+0x472>
 800f0c4:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800f0c8:	46b9      	mov	r9, r7
 800f0ca:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800f0cc:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 800f0d0:	f8a8 3000 	strh.w	r3, [r8]
 800f0d4:	3601      	adds	r6, #1
 800f0d6:	f108 0802 	add.w	r8, r8, #2
 800f0da:	2301      	movs	r3, #1
 800f0dc:	9a08      	ldr	r2, [sp, #32]
 800f0de:	9d05      	ldr	r5, [sp, #20]
 800f0e0:	3701      	adds	r7, #1
 800f0e2:	442a      	add	r2, r5
 800f0e4:	42ba      	cmp	r2, r7
 800f0e6:	d01c      	beq.n	800f122 <_DrawBitmap+0x4ca>
 800f0e8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800f0ea:	9808      	ldr	r0, [sp, #32]
 800f0ec:	1a2a      	subs	r2, r5, r0
 800f0ee:	f812 a007 	ldrb.w	sl, [r2, r7]
 800f0f2:	f1ba 0f00 	cmp.w	sl, #0
 800f0f6:	d1e4      	bne.n	800f0c2 <_DrawBitmap+0x46a>
 800f0f8:	2b01      	cmp	r3, #1
 800f0fa:	d110      	bne.n	800f11e <_DrawBitmap+0x4c6>
 800f0fc:	f8cd b000 	str.w	fp, [sp]
 800f100:	4620      	mov	r0, r4
 800f102:	4649      	mov	r1, r9
 800f104:	465a      	mov	r2, fp
 800f106:	1e7b      	subs	r3, r7, #1
 800f108:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800f10c:	47a8      	blx	r5
 800f10e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f112:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f114:	4631      	mov	r1, r6
 800f116:	4798      	blx	r3
 800f118:	4656      	mov	r6, sl
 800f11a:	4653      	mov	r3, sl
 800f11c:	e7de      	b.n	800f0dc <_DrawBitmap+0x484>
 800f11e:	4653      	mov	r3, sl
 800f120:	e7dc      	b.n	800f0dc <_DrawBitmap+0x484>
 800f122:	9f08      	ldr	r7, [sp, #32]
 800f124:	1e6b      	subs	r3, r5, #1
 800f126:	443b      	add	r3, r7
 800f128:	b196      	cbz	r6, 800f150 <_DrawBitmap+0x4f8>
 800f12a:	f8cd b000 	str.w	fp, [sp]
 800f12e:	4620      	mov	r0, r4
 800f130:	4649      	mov	r1, r9
 800f132:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800f136:	465a      	mov	r2, fp
 800f138:	47a8      	blx	r5
 800f13a:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800f13e:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800f140:	4631      	mov	r1, r6
 800f142:	e004      	b.n	800f14e <_DrawBitmap+0x4f6>
 800f144:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800f146:	9819      	ldr	r0, [sp, #100]	; 0x64
 800f148:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
 800f14c:	9905      	ldr	r1, [sp, #20]
 800f14e:	4798      	blx	r3
 800f150:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800f152:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800f154:	442f      	add	r7, r5
 800f156:	9719      	str	r7, [sp, #100]	; 0x64
 800f158:	f10b 0b01 	add.w	fp, fp, #1
 800f15c:	e5a7      	b.n	800ecae <_DrawBitmap+0x56>
 800f15e:	b00d      	add	sp, #52	; 0x34
 800f160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f164:	2000016c 	.word	0x2000016c

0800f168 <GUIDRV_FlexColor_SetMode16bppC0B16>:
 800f168:	b510      	push	{r4, lr}
 800f16a:	4604      	mov	r4, r0
 800f16c:	f000 fa58 	bl	800f620 <GUIDRV_FlexColor__InitOnce>
 800f170:	68a4      	ldr	r4, [r4, #8]
 800f172:	4b10      	ldr	r3, [pc, #64]	; (800f1b4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 800f174:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 800f178:	4b0f      	ldr	r3, [pc, #60]	; (800f1b8 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 800f17a:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 800f17e:	4b0f      	ldr	r3, [pc, #60]	; (800f1bc <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 800f180:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800f184:	4b0e      	ldr	r3, [pc, #56]	; (800f1c0 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 800f186:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 800f18a:	4b0e      	ldr	r3, [pc, #56]	; (800f1c4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 800f18c:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800f190:	4b0d      	ldr	r3, [pc, #52]	; (800f1c8 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 800f192:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 800f196:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
 800f19a:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 800f19e:	4620      	mov	r0, r4
 800f1a0:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800f1a4:	2110      	movs	r1, #16
 800f1a6:	4798      	blx	r3
 800f1a8:	2310      	movs	r3, #16
 800f1aa:	63a3      	str	r3, [r4, #56]	; 0x38
 800f1ac:	4b07      	ldr	r3, [pc, #28]	; (800f1cc <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 800f1ae:	6463      	str	r3, [r4, #68]	; 0x44
 800f1b0:	bd10      	pop	{r4, pc}
 800f1b2:	bf00      	nop
 800f1b4:	0800ec59 	.word	0x0800ec59
 800f1b8:	0800eb59 	.word	0x0800eb59
 800f1bc:	0800f56f 	.word	0x0800f56f
 800f1c0:	0800f4df 	.word	0x0800f4df
 800f1c4:	0800eb41 	.word	0x0800eb41
 800f1c8:	0800eb4b 	.word	0x0800eb4b
 800f1cc:	080209b4 	.word	0x080209b4

0800f1d0 <_Log2PhysX_X0Y0S0>:
 800f1d0:	4608      	mov	r0, r1
 800f1d2:	4770      	bx	lr

0800f1d4 <_Log2PhysX_X1Y0S0>:
 800f1d4:	6800      	ldr	r0, [r0, #0]
 800f1d6:	1a40      	subs	r0, r0, r1
 800f1d8:	3801      	subs	r0, #1
 800f1da:	4770      	bx	lr

0800f1dc <_Log2PhysX_X0Y1S0>:
 800f1dc:	4608      	mov	r0, r1
 800f1de:	4770      	bx	lr

0800f1e0 <_Log2PhysX_X1Y1S0>:
 800f1e0:	6800      	ldr	r0, [r0, #0]
 800f1e2:	1a40      	subs	r0, r0, r1
 800f1e4:	3801      	subs	r0, #1
 800f1e6:	4770      	bx	lr

0800f1e8 <_Log2PhysX_X0Y0S1>:
 800f1e8:	4610      	mov	r0, r2
 800f1ea:	4770      	bx	lr

0800f1ec <_Log2PhysX_X1Y0S1>:
 800f1ec:	6840      	ldr	r0, [r0, #4]
 800f1ee:	1a80      	subs	r0, r0, r2
 800f1f0:	3801      	subs	r0, #1
 800f1f2:	4770      	bx	lr

0800f1f4 <_Log2PhysX_X0Y1S1>:
 800f1f4:	4610      	mov	r0, r2
 800f1f6:	4770      	bx	lr

0800f1f8 <_Log2PhysX_X1Y1S1>:
 800f1f8:	6840      	ldr	r0, [r0, #4]
 800f1fa:	1a80      	subs	r0, r0, r2
 800f1fc:	3801      	subs	r0, #1
 800f1fe:	4770      	bx	lr

0800f200 <_Log2PhysY_X0Y0S0>:
 800f200:	4610      	mov	r0, r2
 800f202:	4770      	bx	lr

0800f204 <_Log2PhysY_X1Y0S0>:
 800f204:	4610      	mov	r0, r2
 800f206:	4770      	bx	lr

0800f208 <_Log2PhysY_X0Y1S0>:
 800f208:	6840      	ldr	r0, [r0, #4]
 800f20a:	1a80      	subs	r0, r0, r2
 800f20c:	3801      	subs	r0, #1
 800f20e:	4770      	bx	lr

0800f210 <_Log2PhysY_X1Y1S0>:
 800f210:	6840      	ldr	r0, [r0, #4]
 800f212:	1a80      	subs	r0, r0, r2
 800f214:	3801      	subs	r0, #1
 800f216:	4770      	bx	lr

0800f218 <_Log2PhysY_X0Y0S1>:
 800f218:	4608      	mov	r0, r1
 800f21a:	4770      	bx	lr

0800f21c <_Log2PhysY_X1Y0S1>:
 800f21c:	4608      	mov	r0, r1
 800f21e:	4770      	bx	lr

0800f220 <_Log2PhysY_X0Y1S1>:
 800f220:	6800      	ldr	r0, [r0, #0]
 800f222:	1a40      	subs	r0, r0, r1
 800f224:	3801      	subs	r0, #1
 800f226:	4770      	bx	lr

0800f228 <_Log2PhysY_X1Y1S1>:
 800f228:	6800      	ldr	r0, [r0, #0]
 800f22a:	1a40      	subs	r0, r0, r1
 800f22c:	3801      	subs	r0, #1
 800f22e:	4770      	bx	lr

0800f230 <_SetPixelIndex>:
 800f230:	b510      	push	{r4, lr}
 800f232:	6884      	ldr	r4, [r0, #8]
 800f234:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 800f238:	47a0      	blx	r4
 800f23a:	bd10      	pop	{r4, pc}

0800f23c <_GetPixelIndex>:
 800f23c:	b508      	push	{r3, lr}
 800f23e:	6883      	ldr	r3, [r0, #8]
 800f240:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800f244:	4798      	blx	r3
 800f246:	bd08      	pop	{r3, pc}

0800f248 <_XorPixel>:
 800f248:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f24a:	4604      	mov	r4, r0
 800f24c:	460f      	mov	r7, r1
 800f24e:	4616      	mov	r6, r2
 800f250:	6885      	ldr	r5, [r0, #8]
 800f252:	f7ff fff3 	bl	800f23c <_GetPixelIndex>
 800f256:	9001      	str	r0, [sp, #4]
 800f258:	f8dd e004 	ldr.w	lr, [sp, #4]
 800f25c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800f25e:	4620      	mov	r0, r4
 800f260:	4639      	mov	r1, r7
 800f262:	4632      	mov	r2, r6
 800f264:	ea8e 0303 	eor.w	r3, lr, r3
 800f268:	f7ff ffe2 	bl	800f230 <_SetPixelIndex>
 800f26c:	b003      	add	sp, #12
 800f26e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f270 <_DrawHLine>:
 800f270:	b513      	push	{r0, r1, r4, lr}
 800f272:	6884      	ldr	r4, [r0, #8]
 800f274:	9200      	str	r2, [sp, #0]
 800f276:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800f27a:	47a0      	blx	r4
 800f27c:	b002      	add	sp, #8
 800f27e:	bd10      	pop	{r4, pc}

0800f280 <_DrawVLine>:
 800f280:	b513      	push	{r0, r1, r4, lr}
 800f282:	6884      	ldr	r4, [r0, #8]
 800f284:	9300      	str	r3, [sp, #0]
 800f286:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800f28a:	460b      	mov	r3, r1
 800f28c:	47a0      	blx	r4
 800f28e:	b002      	add	sp, #8
 800f290:	bd10      	pop	{r4, pc}

0800f292 <_FillRect>:
 800f292:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f294:	9c06      	ldr	r4, [sp, #24]
 800f296:	6885      	ldr	r5, [r0, #8]
 800f298:	9400      	str	r4, [sp, #0]
 800f29a:	f8d5 40e8 	ldr.w	r4, [r5, #232]	; 0xe8
 800f29e:	47a0      	blx	r4
 800f2a0:	b003      	add	sp, #12
 800f2a2:	bd30      	pop	{r4, r5, pc}

0800f2a4 <_DrawBitmap>:
 800f2a4:	b530      	push	{r4, r5, lr}
 800f2a6:	b087      	sub	sp, #28
 800f2a8:	6885      	ldr	r5, [r0, #8]
 800f2aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f2ac:	9400      	str	r4, [sp, #0]
 800f2ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800f2b0:	9401      	str	r4, [sp, #4]
 800f2b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f2b4:	9402      	str	r4, [sp, #8]
 800f2b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f2b8:	9403      	str	r4, [sp, #12]
 800f2ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800f2bc:	9404      	str	r4, [sp, #16]
 800f2be:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800f2c0:	9405      	str	r4, [sp, #20]
 800f2c2:	f8d5 40e4 	ldr.w	r4, [r5, #228]	; 0xe4
 800f2c6:	47a0      	blx	r4
 800f2c8:	b007      	add	sp, #28
 800f2ca:	bd30      	pop	{r4, r5, pc}

0800f2cc <_GetDevFunc_SetRect>:
 800f2cc:	4770      	bx	lr
	...

0800f2d0 <_GetDevFunc_SetRectOutside>:
 800f2d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f2d2:	9e07      	ldr	r6, [sp, #28]
 800f2d4:	6884      	ldr	r4, [r0, #8]
 800f2d6:	4d0c      	ldr	r5, [pc, #48]	; (800f308 <_GetDevFunc_SetRectOutside+0x38>)
 800f2d8:	b176      	cbz	r6, 800f2f8 <_GetDevFunc_SetRectOutside+0x28>
 800f2da:	6828      	ldr	r0, [r5, #0]
 800f2dc:	b988      	cbnz	r0, 800f302 <_GetDevFunc_SetRectOutside+0x32>
 800f2de:	9806      	ldr	r0, [sp, #24]
 800f2e0:	9000      	str	r0, [sp, #0]
 800f2e2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800f2e6:	4620      	mov	r0, r4
 800f2e8:	47b0      	blx	r6
 800f2ea:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 800f2ee:	602b      	str	r3, [r5, #0]
 800f2f0:	4b06      	ldr	r3, [pc, #24]	; (800f30c <_GetDevFunc_SetRectOutside+0x3c>)
 800f2f2:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f2f6:	e004      	b.n	800f302 <_GetDevFunc_SetRectOutside+0x32>
 800f2f8:	682b      	ldr	r3, [r5, #0]
 800f2fa:	b113      	cbz	r3, 800f302 <_GetDevFunc_SetRectOutside+0x32>
 800f2fc:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f300:	602e      	str	r6, [r5, #0]
 800f302:	b002      	add	sp, #8
 800f304:	bd70      	pop	{r4, r5, r6, pc}
 800f306:	bf00      	nop
 800f308:	20019464 	.word	0x20019464
 800f30c:	0800f2cd 	.word	0x0800f2cd

0800f310 <_ReadPixelCust_16bpp>:
 800f310:	b508      	push	{r3, lr}
 800f312:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800f314:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
 800f318:	6990      	ldr	r0, [r2, #24]
 800f31a:	4798      	blx	r3
 800f31c:	bd08      	pop	{r3, pc}

0800f31e <_ReadPixelCust_18bpp>:
 800f31e:	b508      	push	{r3, lr}
 800f320:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800f322:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 800f326:	6990      	ldr	r0, [r2, #24]
 800f328:	4798      	blx	r3
 800f32a:	bd08      	pop	{r3, pc}

0800f32c <_ReadRectCust_16bpp>:
 800f32c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f330:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800f332:	6884      	ldr	r4, [r0, #8]
 800f334:	9500      	str	r5, [sp, #0]
 800f336:	4617      	mov	r7, r2
 800f338:	4620      	mov	r0, r4
 800f33a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800f33e:	4699      	mov	r9, r3
 800f340:	4688      	mov	r8, r1
 800f342:	1bed      	subs	r5, r5, r7
 800f344:	47b0      	blx	r6
 800f346:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800f348:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800f34c:	6988      	ldr	r0, [r1, #24]
 800f34e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f350:	ebc8 0809 	rsb	r8, r8, r9
 800f354:	1c6a      	adds	r2, r5, #1
 800f356:	fb08 2202 	mla	r2, r8, r2, r2
 800f35a:	4798      	blx	r3
 800f35c:	b003      	add	sp, #12
 800f35e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800f362 <_ReadRectCust_18bpp>:
 800f362:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f366:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800f368:	6884      	ldr	r4, [r0, #8]
 800f36a:	9500      	str	r5, [sp, #0]
 800f36c:	4617      	mov	r7, r2
 800f36e:	4620      	mov	r0, r4
 800f370:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800f374:	4699      	mov	r9, r3
 800f376:	4688      	mov	r8, r1
 800f378:	1bed      	subs	r5, r5, r7
 800f37a:	47b0      	blx	r6
 800f37c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800f37e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 800f382:	6988      	ldr	r0, [r1, #24]
 800f384:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f386:	ebc8 0809 	rsb	r8, r8, r9
 800f38a:	1c6a      	adds	r2, r5, #1
 800f38c:	fb08 2202 	mla	r2, r8, r2, r2
 800f390:	4798      	blx	r3
 800f392:	b003      	add	sp, #12
 800f394:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800f398 <_GetDevFunc>:
 800f398:	3901      	subs	r1, #1
 800f39a:	2917      	cmp	r1, #23
 800f39c:	d824      	bhi.n	800f3e8 <_GetDevFunc+0x50>
 800f39e:	e8df f001 	tbb	[pc, r1]
 800f3a2:	2310      	.short	0x2310
 800f3a4:	23232323 	.word	0x23232323
 800f3a8:	0c232323 	.word	0x0c232323
 800f3ac:	23150e25 	.word	0x23150e25
 800f3b0:	23232323 	.word	0x23232323
 800f3b4:	1f232323 	.word	0x1f232323
 800f3b8:	211a      	.short	0x211a
 800f3ba:	480d      	ldr	r0, [pc, #52]	; (800f3f0 <_GetDevFunc+0x58>)
 800f3bc:	4770      	bx	lr
 800f3be:	480d      	ldr	r0, [pc, #52]	; (800f3f4 <_GetDevFunc+0x5c>)
 800f3c0:	4770      	bx	lr
 800f3c2:	6803      	ldr	r3, [r0, #0]
 800f3c4:	689b      	ldr	r3, [r3, #8]
 800f3c6:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 800f3ca:	4770      	bx	lr
 800f3cc:	6803      	ldr	r3, [r0, #0]
 800f3ce:	689b      	ldr	r3, [r3, #8]
 800f3d0:	f8d3 00f4 	ldr.w	r0, [r3, #244]	; 0xf4
 800f3d4:	4770      	bx	lr
 800f3d6:	6803      	ldr	r3, [r0, #0]
 800f3d8:	689b      	ldr	r3, [r3, #8]
 800f3da:	f8d3 00f8 	ldr.w	r0, [r3, #248]	; 0xf8
 800f3de:	4770      	bx	lr
 800f3e0:	4805      	ldr	r0, [pc, #20]	; (800f3f8 <_GetDevFunc+0x60>)
 800f3e2:	4770      	bx	lr
 800f3e4:	4805      	ldr	r0, [pc, #20]	; (800f3fc <_GetDevFunc+0x64>)
 800f3e6:	4770      	bx	lr
 800f3e8:	2000      	movs	r0, #0
 800f3ea:	4770      	bx	lr
 800f3ec:	4804      	ldr	r0, [pc, #16]	; (800f400 <_GetDevFunc+0x68>)
 800f3ee:	4770      	bx	lr
 800f3f0:	0800f74f 	.word	0x0800f74f
 800f3f4:	0800f6f1 	.word	0x0800f6f1
 800f3f8:	0800f655 	.word	0x0800f655
 800f3fc:	0800f2d1 	.word	0x0800f2d1
 800f400:	0800f73b 	.word	0x0800f73b

0800f404 <_GetDevProp>:
 800f404:	3901      	subs	r1, #1
 800f406:	6880      	ldr	r0, [r0, #8]
 800f408:	290d      	cmp	r1, #13
 800f40a:	d823      	bhi.n	800f454 <_GetDevProp+0x50>
 800f40c:	e8df f001 	tbb	[pc, r1]
 800f410:	0f0d0b09 	.word	0x0f0d0b09
 800f414:	11222222 	.word	0x11222222
 800f418:	13252507 	.word	0x13252507
 800f41c:	1d18      	.short	0x1d18
 800f41e:	2000      	movs	r0, #0
 800f420:	4770      	bx	lr
 800f422:	6800      	ldr	r0, [r0, #0]
 800f424:	4770      	bx	lr
 800f426:	6840      	ldr	r0, [r0, #4]
 800f428:	4770      	bx	lr
 800f42a:	6880      	ldr	r0, [r0, #8]
 800f42c:	4770      	bx	lr
 800f42e:	68c0      	ldr	r0, [r0, #12]
 800f430:	4770      	bx	lr
 800f432:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800f434:	4770      	bx	lr
 800f436:	b188      	cbz	r0, 800f45c <_GetDevProp+0x58>
 800f438:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800f43a:	f000 0001 	and.w	r0, r0, #1
 800f43e:	4770      	bx	lr
 800f440:	b160      	cbz	r0, 800f45c <_GetDevProp+0x58>
 800f442:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800f444:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800f448:	4770      	bx	lr
 800f44a:	b138      	cbz	r0, 800f45c <_GetDevProp+0x58>
 800f44c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800f44e:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800f452:	4770      	bx	lr
 800f454:	f04f 30ff 	mov.w	r0, #4294967295
 800f458:	4770      	bx	lr
 800f45a:	2001      	movs	r0, #1
 800f45c:	4770      	bx	lr

0800f45e <_GetDevData>:
 800f45e:	6883      	ldr	r3, [r0, #8]
 800f460:	2901      	cmp	r1, #1
 800f462:	bf0c      	ite	eq
 800f464:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800f466:	2000      	movne	r0, #0
 800f468:	4770      	bx	lr

0800f46a <_GetRect>:
 800f46a:	6883      	ldr	r3, [r0, #8]
 800f46c:	2200      	movs	r2, #0
 800f46e:	800a      	strh	r2, [r1, #0]
 800f470:	804a      	strh	r2, [r1, #2]
 800f472:	681a      	ldr	r2, [r3, #0]
 800f474:	685b      	ldr	r3, [r3, #4]
 800f476:	3a01      	subs	r2, #1
 800f478:	3b01      	subs	r3, #1
 800f47a:	808a      	strh	r2, [r1, #4]
 800f47c:	80cb      	strh	r3, [r1, #6]
 800f47e:	4770      	bx	lr

0800f480 <GUIDRV_FlexColor__SetLog2Phys>:
 800f480:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f482:	4d10      	ldr	r5, [pc, #64]	; (800f4c4 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 800f484:	462e      	mov	r6, r5
 800f486:	4607      	mov	r7, r0
 800f488:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800f48a:	b091      	sub	sp, #68	; 0x44
 800f48c:	466c      	mov	r4, sp
 800f48e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f490:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800f494:	3520      	adds	r5, #32
 800f496:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f49a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f49c:	ac08      	add	r4, sp, #32
 800f49e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f4a0:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800f4a4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f4a8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800f4aa:	aa10      	add	r2, sp, #64	; 0x40
 800f4ac:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800f4b0:	f853 2c40 	ldr.w	r2, [r3, #-64]
 800f4b4:	f8c7 2100 	str.w	r2, [r7, #256]	; 0x100
 800f4b8:	f853 3c20 	ldr.w	r3, [r3, #-32]
 800f4bc:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800f4c0:	b011      	add	sp, #68	; 0x44
 800f4c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f4c4:	0801ab5c 	.word	0x0801ab5c

0800f4c8 <_SetOrg>:
 800f4c8:	b507      	push	{r0, r1, r2, lr}
 800f4ca:	6980      	ldr	r0, [r0, #24]
 800f4cc:	e88d 0006 	stmia.w	sp, {r1, r2}
 800f4d0:	2103      	movs	r1, #3
 800f4d2:	466a      	mov	r2, sp
 800f4d4:	f7f8 fe80 	bl	80081d8 <LCD_X_DisplayDriver>
 800f4d8:	b003      	add	sp, #12
 800f4da:	f85d fb04 	ldr.w	pc, [sp], #4

0800f4de <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 800f4de:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f4e2:	6884      	ldr	r4, [r0, #8]
 800f4e4:	4698      	mov	r8, r3
 800f4e6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800f4e8:	079b      	lsls	r3, r3, #30
 800f4ea:	4689      	mov	r9, r1
 800f4ec:	4617      	mov	r7, r2
 800f4ee:	d532      	bpl.n	800f556 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 800f4f0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800f4f4:	4620      	mov	r0, r4
 800f4f6:	4798      	blx	r3
 800f4f8:	f8d4 5104 	ldr.w	r5, [r4, #260]	; 0x104
 800f4fc:	4606      	mov	r6, r0
 800f4fe:	463a      	mov	r2, r7
 800f500:	4620      	mov	r0, r4
 800f502:	4649      	mov	r1, r9
 800f504:	47a8      	blx	r5
 800f506:	6923      	ldr	r3, [r4, #16]
 800f508:	69a2      	ldr	r2, [r4, #24]
 800f50a:	429e      	cmp	r6, r3
 800f50c:	bfac      	ite	ge
 800f50e:	2300      	movge	r3, #0
 800f510:	2301      	movlt	r3, #1
 800f512:	4296      	cmp	r6, r2
 800f514:	bfd4      	ite	le
 800f516:	461a      	movle	r2, r3
 800f518:	f043 0201 	orrgt.w	r2, r3, #1
 800f51c:	6963      	ldr	r3, [r4, #20]
 800f51e:	4298      	cmp	r0, r3
 800f520:	bfac      	ite	ge
 800f522:	4613      	movge	r3, r2
 800f524:	f042 0301 	orrlt.w	r3, r2, #1
 800f528:	4605      	mov	r5, r0
 800f52a:	b913      	cbnz	r3, 800f532 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 800f52c:	69e3      	ldr	r3, [r4, #28]
 800f52e:	4298      	cmp	r0, r3
 800f530:	dd0a      	ble.n	800f548 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 800f532:	6862      	ldr	r2, [r4, #4]
 800f534:	6823      	ldr	r3, [r4, #0]
 800f536:	3a01      	subs	r2, #1
 800f538:	9200      	str	r2, [sp, #0]
 800f53a:	2100      	movs	r1, #0
 800f53c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800f540:	4620      	mov	r0, r4
 800f542:	460a      	mov	r2, r1
 800f544:	3b01      	subs	r3, #1
 800f546:	47b8      	blx	r7
 800f548:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 800f54c:	4620      	mov	r0, r4
 800f54e:	4631      	mov	r1, r6
 800f550:	462a      	mov	r2, r5
 800f552:	47b8      	blx	r7
 800f554:	e003      	b.n	800f55e <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 800f556:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800f55a:	4620      	mov	r0, r4
 800f55c:	47a8      	blx	r5
 800f55e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800f562:	4620      	mov	r0, r4
 800f564:	4641      	mov	r1, r8
 800f566:	4798      	blx	r3
 800f568:	b003      	add	sp, #12
 800f56a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800f56e <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 800f56e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f570:	6884      	ldr	r4, [r0, #8]
 800f572:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800f574:	079b      	lsls	r3, r3, #30
 800f576:	460f      	mov	r7, r1
 800f578:	4616      	mov	r6, r2
 800f57a:	d545      	bpl.n	800f608 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 800f57c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800f580:	4620      	mov	r0, r4
 800f582:	4798      	blx	r3
 800f584:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800f588:	4632      	mov	r2, r6
 800f58a:	4605      	mov	r5, r0
 800f58c:	4639      	mov	r1, r7
 800f58e:	4620      	mov	r0, r4
 800f590:	4798      	blx	r3
 800f592:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800f596:	4606      	mov	r6, r0
 800f598:	b11b      	cbz	r3, 800f5a2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 800f59a:	4620      	mov	r0, r4
 800f59c:	2101      	movs	r1, #1
 800f59e:	2200      	movs	r2, #0
 800f5a0:	4798      	blx	r3
 800f5a2:	6923      	ldr	r3, [r4, #16]
 800f5a4:	69a2      	ldr	r2, [r4, #24]
 800f5a6:	429d      	cmp	r5, r3
 800f5a8:	bfac      	ite	ge
 800f5aa:	2300      	movge	r3, #0
 800f5ac:	2301      	movlt	r3, #1
 800f5ae:	4295      	cmp	r5, r2
 800f5b0:	bfd4      	ite	le
 800f5b2:	461a      	movle	r2, r3
 800f5b4:	f043 0201 	orrgt.w	r2, r3, #1
 800f5b8:	6963      	ldr	r3, [r4, #20]
 800f5ba:	429e      	cmp	r6, r3
 800f5bc:	bfac      	ite	ge
 800f5be:	4613      	movge	r3, r2
 800f5c0:	f042 0301 	orrlt.w	r3, r2, #1
 800f5c4:	b913      	cbnz	r3, 800f5cc <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 800f5c6:	69e3      	ldr	r3, [r4, #28]
 800f5c8:	429e      	cmp	r6, r3
 800f5ca:	dd0a      	ble.n	800f5e2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 800f5cc:	6862      	ldr	r2, [r4, #4]
 800f5ce:	6823      	ldr	r3, [r4, #0]
 800f5d0:	3a01      	subs	r2, #1
 800f5d2:	9200      	str	r2, [sp, #0]
 800f5d4:	2100      	movs	r1, #0
 800f5d6:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800f5da:	4620      	mov	r0, r4
 800f5dc:	460a      	mov	r2, r1
 800f5de:	3b01      	subs	r3, #1
 800f5e0:	47b8      	blx	r7
 800f5e2:	4629      	mov	r1, r5
 800f5e4:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800f5e8:	4620      	mov	r0, r4
 800f5ea:	4632      	mov	r2, r6
 800f5ec:	4798      	blx	r3
 800f5ee:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800f5f2:	4620      	mov	r0, r4
 800f5f4:	4798      	blx	r3
 800f5f6:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800f5fa:	4605      	mov	r5, r0
 800f5fc:	b16b      	cbz	r3, 800f61a <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800f5fe:	4620      	mov	r0, r4
 800f600:	2100      	movs	r1, #0
 800f602:	2201      	movs	r2, #1
 800f604:	4798      	blx	r3
 800f606:	e008      	b.n	800f61a <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800f608:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800f60c:	4620      	mov	r0, r4
 800f60e:	4798      	blx	r3
 800f610:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800f614:	4620      	mov	r0, r4
 800f616:	4798      	blx	r3
 800f618:	4605      	mov	r5, r0
 800f61a:	4628      	mov	r0, r5
 800f61c:	b003      	add	sp, #12
 800f61e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f620 <GUIDRV_FlexColor__InitOnce>:
 800f620:	b538      	push	{r3, r4, r5, lr}
 800f622:	6885      	ldr	r5, [r0, #8]
 800f624:	4604      	mov	r4, r0
 800f626:	b995      	cbnz	r5, 800f64e <GUIDRV_FlexColor__InitOnce+0x2e>
 800f628:	f44f 70ba 	mov.w	r0, #372	; 0x174
 800f62c:	f003 faf8 	bl	8012c20 <GUI_ALLOC_GetFixedBlock>
 800f630:	f44f 72ba 	mov.w	r2, #372	; 0x174
 800f634:	60a0      	str	r0, [r4, #8]
 800f636:	4629      	mov	r1, r5
 800f638:	f000 fdf4 	bl	8010224 <GUI__memset>
 800f63c:	68a3      	ldr	r3, [r4, #8]
 800f63e:	2202      	movs	r2, #2
 800f640:	84da      	strh	r2, [r3, #38]	; 0x26
 800f642:	2201      	movs	r2, #1
 800f644:	621a      	str	r2, [r3, #32]
 800f646:	4a02      	ldr	r2, [pc, #8]	; (800f650 <GUIDRV_FlexColor__InitOnce+0x30>)
 800f648:	641c      	str	r4, [r3, #64]	; 0x40
 800f64a:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 800f64e:	bd38      	pop	{r3, r4, r5, pc}
 800f650:	0800f481 	.word	0x0800f481

0800f654 <_SetDevFunc>:
 800f654:	b570      	push	{r4, r5, r6, lr}
 800f656:	4606      	mov	r6, r0
 800f658:	460d      	mov	r5, r1
 800f65a:	4614      	mov	r4, r2
 800f65c:	f7ff ffe0 	bl	800f620 <GUIDRV_FlexColor__InitOnce>
 800f660:	68b3      	ldr	r3, [r6, #8]
 800f662:	2b00      	cmp	r3, #0
 800f664:	d03b      	beq.n	800f6de <_SetDevFunc+0x8a>
 800f666:	2d26      	cmp	r5, #38	; 0x26
 800f668:	d002      	beq.n	800f670 <_SetDevFunc+0x1c>
 800f66a:	2d27      	cmp	r5, #39	; 0x27
 800f66c:	d016      	beq.n	800f69c <_SetDevFunc+0x48>
 800f66e:	bd70      	pop	{r4, r5, r6, pc}
 800f670:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f672:	2a10      	cmp	r2, #16
 800f674:	d002      	beq.n	800f67c <_SetDevFunc+0x28>
 800f676:	2a12      	cmp	r2, #18
 800f678:	d008      	beq.n	800f68c <_SetDevFunc+0x38>
 800f67a:	bd70      	pop	{r4, r5, r6, pc}
 800f67c:	4a18      	ldr	r2, [pc, #96]	; (800f6e0 <_SetDevFunc+0x8c>)
 800f67e:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 800f682:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800f686:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800f68a:	bd70      	pop	{r4, r5, r6, pc}
 800f68c:	4a15      	ldr	r2, [pc, #84]	; (800f6e4 <_SetDevFunc+0x90>)
 800f68e:	f8c3 40d8 	str.w	r4, [r3, #216]	; 0xd8
 800f692:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800f696:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800f69a:	bd70      	pop	{r4, r5, r6, pc}
 800f69c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f69e:	2a10      	cmp	r2, #16
 800f6a0:	d002      	beq.n	800f6a8 <_SetDevFunc+0x54>
 800f6a2:	2a12      	cmp	r2, #18
 800f6a4:	d00e      	beq.n	800f6c4 <_SetDevFunc+0x70>
 800f6a6:	bd70      	pop	{r4, r5, r6, pc}
 800f6a8:	b13c      	cbz	r4, 800f6ba <_SetDevFunc+0x66>
 800f6aa:	4a0f      	ldr	r2, [pc, #60]	; (800f6e8 <_SetDevFunc+0x94>)
 800f6ac:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 800f6b0:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 800f6b4:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800f6b8:	bd70      	pop	{r4, r5, r6, pc}
 800f6ba:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 800f6be:	f8c3 40c4 	str.w	r4, [r3, #196]	; 0xc4
 800f6c2:	bd70      	pop	{r4, r5, r6, pc}
 800f6c4:	b13c      	cbz	r4, 800f6d6 <_SetDevFunc+0x82>
 800f6c6:	4a09      	ldr	r2, [pc, #36]	; (800f6ec <_SetDevFunc+0x98>)
 800f6c8:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 800f6cc:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800f6d0:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 800f6d4:	bd70      	pop	{r4, r5, r6, pc}
 800f6d6:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800f6da:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 800f6de:	bd70      	pop	{r4, r5, r6, pc}
 800f6e0:	0800f311 	.word	0x0800f311
 800f6e4:	0800f31f 	.word	0x0800f31f
 800f6e8:	0800f32d 	.word	0x0800f32d
 800f6ec:	0800f363 	.word	0x0800f363

0800f6f0 <_GetDevFunc_Init>:
 800f6f0:	b538      	push	{r3, r4, r5, lr}
 800f6f2:	4605      	mov	r5, r0
 800f6f4:	f7ff ff94 	bl	800f620 <GUIDRV_FlexColor__InitOnce>
 800f6f8:	68ac      	ldr	r4, [r5, #8]
 800f6fa:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800f6fe:	f003 fa8f 	bl	8012c20 <GUI_ALLOC_GetFixedBlock>
 800f702:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f704:	66a0      	str	r0, [r4, #104]	; 0x68
 800f706:	3307      	adds	r3, #7
 800f708:	10d8      	asrs	r0, r3, #3
 800f70a:	6823      	ldr	r3, [r4, #0]
 800f70c:	4358      	muls	r0, r3
 800f70e:	f003 fa87 	bl	8012c20 <GUI_ALLOC_GetFixedBlock>
 800f712:	2101      	movs	r1, #1
 800f714:	2200      	movs	r2, #0
 800f716:	66e0      	str	r0, [r4, #108]	; 0x6c
 800f718:	69a8      	ldr	r0, [r5, #24]
 800f71a:	f7f8 fd5d 	bl	80081d8 <LCD_X_DisplayDriver>
 800f71e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800f722:	4605      	mov	r5, r0
 800f724:	4620      	mov	r0, r4
 800f726:	4798      	blx	r3
 800f728:	4620      	mov	r0, r4
 800f72a:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800f72e:	4798      	blx	r3
 800f730:	2d00      	cmp	r5, #0
 800f732:	bfd4      	ite	le
 800f734:	2000      	movle	r0, #0
 800f736:	2001      	movgt	r0, #1
 800f738:	bd38      	pop	{r3, r4, r5, pc}

0800f73a <_GetDevFunc_SetSize>:
 800f73a:	b570      	push	{r4, r5, r6, lr}
 800f73c:	4604      	mov	r4, r0
 800f73e:	460d      	mov	r5, r1
 800f740:	4616      	mov	r6, r2
 800f742:	f7ff ff6d 	bl	800f620 <GUIDRV_FlexColor__InitOnce>
 800f746:	68a3      	ldr	r3, [r4, #8]
 800f748:	e883 0060 	stmia.w	r3, {r5, r6}
 800f74c:	bd70      	pop	{r4, r5, r6, pc}

0800f74e <_GetDevFunc_SetVSize>:
 800f74e:	b570      	push	{r4, r5, r6, lr}
 800f750:	4604      	mov	r4, r0
 800f752:	460d      	mov	r5, r1
 800f754:	4616      	mov	r6, r2
 800f756:	f7ff ff63 	bl	800f620 <GUIDRV_FlexColor__InitOnce>
 800f75a:	68a3      	ldr	r3, [r4, #8]
 800f75c:	609d      	str	r5, [r3, #8]
 800f75e:	60de      	str	r6, [r3, #12]
 800f760:	bd70      	pop	{r4, r5, r6, pc}

0800f762 <GUIDRV_FlexColor_Config>:
 800f762:	b538      	push	{r3, r4, r5, lr}
 800f764:	4605      	mov	r5, r0
 800f766:	460c      	mov	r4, r1
 800f768:	f7ff ff5a 	bl	800f620 <GUIDRV_FlexColor__InitOnce>
 800f76c:	68ab      	ldr	r3, [r5, #8]
 800f76e:	6822      	ldr	r2, [r4, #0]
 800f770:	62da      	str	r2, [r3, #44]	; 0x2c
 800f772:	6862      	ldr	r2, [r4, #4]
 800f774:	631a      	str	r2, [r3, #48]	; 0x30
 800f776:	68a2      	ldr	r2, [r4, #8]
 800f778:	635a      	str	r2, [r3, #52]	; 0x34
 800f77a:	0752      	lsls	r2, r2, #29
 800f77c:	d507      	bpl.n	800f78e <GUIDRV_FlexColor_Config+0x2c>
 800f77e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800f782:	601a      	str	r2, [r3, #0]
 800f784:	6059      	str	r1, [r3, #4]
 800f786:	68da      	ldr	r2, [r3, #12]
 800f788:	6899      	ldr	r1, [r3, #8]
 800f78a:	60d9      	str	r1, [r3, #12]
 800f78c:	609a      	str	r2, [r3, #8]
 800f78e:	89a2      	ldrh	r2, [r4, #12]
 800f790:	849a      	strh	r2, [r3, #36]	; 0x24
 800f792:	6922      	ldr	r2, [r4, #16]
 800f794:	b112      	cbz	r2, 800f79c <GUIDRV_FlexColor_Config+0x3a>
 800f796:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800f79a:	621a      	str	r2, [r3, #32]
 800f79c:	bd38      	pop	{r3, r4, r5, pc}

0800f79e <GUIDRV_FlexColor_SetFunc>:
 800f79e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f7a2:	4604      	mov	r4, r0
 800f7a4:	461f      	mov	r7, r3
 800f7a6:	4616      	mov	r6, r2
 800f7a8:	4688      	mov	r8, r1
 800f7aa:	f7ff ff39 	bl	800f620 <GUIDRV_FlexColor__InitOnce>
 800f7ae:	68a5      	ldr	r5, [r4, #8]
 800f7b0:	4641      	mov	r1, r8
 800f7b2:	2268      	movs	r2, #104	; 0x68
 800f7b4:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 800f7b8:	f00a fd93 	bl	801a2e2 <memcpy>
 800f7bc:	4620      	mov	r0, r4
 800f7be:	47b0      	blx	r6
 800f7c0:	4620      	mov	r0, r4
 800f7c2:	47b8      	blx	r7
 800f7c4:	6923      	ldr	r3, [r4, #16]
 800f7c6:	689b      	ldr	r3, [r3, #8]
 800f7c8:	4798      	blx	r3
 800f7ca:	62a8      	str	r0, [r5, #40]	; 0x28
 800f7cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f7d0 <LCD_UpdateColorIndices>:
 800f7d0:	b510      	push	{r4, lr}
 800f7d2:	4c07      	ldr	r4, [pc, #28]	; (800f7f0 <LCD_UpdateColorIndices+0x20>)
 800f7d4:	6823      	ldr	r3, [r4, #0]
 800f7d6:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800f7d8:	f000 fc8e 	bl	80100f8 <LCD_Color2Index>
 800f7dc:	f000 fcac 	bl	8010138 <LCD_SetColorIndex>
 800f7e0:	6823      	ldr	r3, [r4, #0]
 800f7e2:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800f7e4:	f000 fc88 	bl	80100f8 <LCD_Color2Index>
 800f7e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7ec:	f000 bcc0 	b.w	8010170 <LCD_SetBkColorIndex>
 800f7f0:	2000016c 	.word	0x2000016c

0800f7f4 <LCD_SetClipRectEx>:
 800f7f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f7f6:	4c09      	ldr	r4, [pc, #36]	; (800f81c <LCD_SetClipRectEx+0x28>)
 800f7f8:	6823      	ldr	r3, [r4, #0]
 800f7fa:	7c5a      	ldrb	r2, [r3, #17]
 800f7fc:	4b08      	ldr	r3, [pc, #32]	; (800f820 <LCD_SetClipRectEx+0x2c>)
 800f7fe:	4605      	mov	r5, r0
 800f800:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800f804:	68c2      	ldr	r2, [r0, #12]
 800f806:	4669      	mov	r1, sp
 800f808:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800f80a:	4790      	blx	r2
 800f80c:	6820      	ldr	r0, [r4, #0]
 800f80e:	4629      	mov	r1, r5
 800f810:	466a      	mov	r2, sp
 800f812:	3008      	adds	r0, #8
 800f814:	f000 fdf6 	bl	8010404 <GUI__IntersectRects>
 800f818:	b003      	add	sp, #12
 800f81a:	bd30      	pop	{r4, r5, pc}
 800f81c:	2000016c 	.word	0x2000016c
 800f820:	20019c9c 	.word	0x20019c9c

0800f824 <LCD_SetVSizeEx>:
 800f824:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f826:	460d      	mov	r5, r1
 800f828:	4614      	mov	r4, r2
 800f82a:	f002 fb47 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 800f82e:	9001      	str	r0, [sp, #4]
 800f830:	b908      	cbnz	r0, 800f836 <LCD_SetVSizeEx+0x12>
 800f832:	2001      	movs	r0, #1
 800f834:	e00c      	b.n	800f850 <LCD_SetVSizeEx+0x2c>
 800f836:	68c3      	ldr	r3, [r0, #12]
 800f838:	210a      	movs	r1, #10
 800f83a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f83c:	a801      	add	r0, sp, #4
 800f83e:	4798      	blx	r3
 800f840:	4603      	mov	r3, r0
 800f842:	2800      	cmp	r0, #0
 800f844:	d0f5      	beq.n	800f832 <LCD_SetVSizeEx+0xe>
 800f846:	9801      	ldr	r0, [sp, #4]
 800f848:	4629      	mov	r1, r5
 800f84a:	4622      	mov	r2, r4
 800f84c:	4798      	blx	r3
 800f84e:	2000      	movs	r0, #0
 800f850:	b003      	add	sp, #12
 800f852:	bd30      	pop	{r4, r5, pc}

0800f854 <LCD_SetSizeEx>:
 800f854:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f856:	460d      	mov	r5, r1
 800f858:	4614      	mov	r4, r2
 800f85a:	f002 fb2f 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 800f85e:	9001      	str	r0, [sp, #4]
 800f860:	b908      	cbnz	r0, 800f866 <LCD_SetSizeEx+0x12>
 800f862:	2001      	movs	r0, #1
 800f864:	e00c      	b.n	800f880 <LCD_SetSizeEx+0x2c>
 800f866:	68c3      	ldr	r3, [r0, #12]
 800f868:	210b      	movs	r1, #11
 800f86a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f86c:	a801      	add	r0, sp, #4
 800f86e:	4798      	blx	r3
 800f870:	4603      	mov	r3, r0
 800f872:	2800      	cmp	r0, #0
 800f874:	d0f5      	beq.n	800f862 <LCD_SetSizeEx+0xe>
 800f876:	9801      	ldr	r0, [sp, #4]
 800f878:	4629      	mov	r1, r5
 800f87a:	4622      	mov	r2, r4
 800f87c:	4798      	blx	r3
 800f87e:	2000      	movs	r0, #0
 800f880:	b003      	add	sp, #12
 800f882:	bd30      	pop	{r4, r5, pc}

0800f884 <LCD_SetPosEx>:
 800f884:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f886:	460d      	mov	r5, r1
 800f888:	4614      	mov	r4, r2
 800f88a:	f002 fb17 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 800f88e:	9001      	str	r0, [sp, #4]
 800f890:	b908      	cbnz	r0, 800f896 <LCD_SetPosEx+0x12>
 800f892:	2001      	movs	r0, #1
 800f894:	e00c      	b.n	800f8b0 <LCD_SetPosEx+0x2c>
 800f896:	68c3      	ldr	r3, [r0, #12]
 800f898:	2103      	movs	r1, #3
 800f89a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f89c:	a801      	add	r0, sp, #4
 800f89e:	4798      	blx	r3
 800f8a0:	4603      	mov	r3, r0
 800f8a2:	2800      	cmp	r0, #0
 800f8a4:	d0f5      	beq.n	800f892 <LCD_SetPosEx+0xe>
 800f8a6:	9801      	ldr	r0, [sp, #4]
 800f8a8:	4629      	mov	r1, r5
 800f8aa:	4622      	mov	r2, r4
 800f8ac:	4798      	blx	r3
 800f8ae:	2000      	movs	r0, #0
 800f8b0:	b003      	add	sp, #12
 800f8b2:	bd30      	pop	{r4, r5, pc}

0800f8b4 <LCD_SetLUTEntryEx>:
 800f8b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f8b6:	460d      	mov	r5, r1
 800f8b8:	4614      	mov	r4, r2
 800f8ba:	f002 faff 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 800f8be:	9001      	str	r0, [sp, #4]
 800f8c0:	b908      	cbnz	r0, 800f8c6 <LCD_SetLUTEntryEx+0x12>
 800f8c2:	2001      	movs	r0, #1
 800f8c4:	e00c      	b.n	800f8e0 <LCD_SetLUTEntryEx+0x2c>
 800f8c6:	68c3      	ldr	r3, [r0, #12]
 800f8c8:	2110      	movs	r1, #16
 800f8ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f8cc:	a801      	add	r0, sp, #4
 800f8ce:	4798      	blx	r3
 800f8d0:	4603      	mov	r3, r0
 800f8d2:	2800      	cmp	r0, #0
 800f8d4:	d0f5      	beq.n	800f8c2 <LCD_SetLUTEntryEx+0xe>
 800f8d6:	9801      	ldr	r0, [sp, #4]
 800f8d8:	4629      	mov	r1, r5
 800f8da:	4622      	mov	r2, r4
 800f8dc:	4798      	blx	r3
 800f8de:	2000      	movs	r0, #0
 800f8e0:	b003      	add	sp, #12
 800f8e2:	bd30      	pop	{r4, r5, pc}

0800f8e4 <LCD_GetPosEx>:
 800f8e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f8e6:	460d      	mov	r5, r1
 800f8e8:	4614      	mov	r4, r2
 800f8ea:	f002 fae7 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 800f8ee:	9001      	str	r0, [sp, #4]
 800f8f0:	b908      	cbnz	r0, 800f8f6 <LCD_GetPosEx+0x12>
 800f8f2:	2001      	movs	r0, #1
 800f8f4:	e00c      	b.n	800f910 <LCD_GetPosEx+0x2c>
 800f8f6:	68c3      	ldr	r3, [r0, #12]
 800f8f8:	2104      	movs	r1, #4
 800f8fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f8fc:	a801      	add	r0, sp, #4
 800f8fe:	4798      	blx	r3
 800f900:	4603      	mov	r3, r0
 800f902:	2800      	cmp	r0, #0
 800f904:	d0f5      	beq.n	800f8f2 <LCD_GetPosEx+0xe>
 800f906:	9801      	ldr	r0, [sp, #4]
 800f908:	4629      	mov	r1, r5
 800f90a:	4622      	mov	r2, r4
 800f90c:	4798      	blx	r3
 800f90e:	2000      	movs	r0, #0
 800f910:	b003      	add	sp, #12
 800f912:	bd30      	pop	{r4, r5, pc}

0800f914 <_GetDevProp>:
 800f914:	2801      	cmp	r0, #1
 800f916:	b510      	push	{r4, lr}
 800f918:	460c      	mov	r4, r1
 800f91a:	dc08      	bgt.n	800f92e <_GetDevProp+0x1a>
 800f91c:	f002 face 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 800f920:	b120      	cbz	r0, 800f92c <_GetDevProp+0x18>
 800f922:	68c3      	ldr	r3, [r0, #12]
 800f924:	4621      	mov	r1, r4
 800f926:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f928:	4798      	blx	r3
 800f92a:	bd10      	pop	{r4, pc}
 800f92c:	bd10      	pop	{r4, pc}
 800f92e:	2000      	movs	r0, #0
 800f930:	bd10      	pop	{r4, pc}

0800f932 <_GetMaxValue>:
 800f932:	b538      	push	{r3, r4, r5, lr}
 800f934:	4604      	mov	r4, r0
 800f936:	4621      	mov	r1, r4
 800f938:	2001      	movs	r0, #1
 800f93a:	f7ff ffeb 	bl	800f914 <_GetDevProp>
 800f93e:	4621      	mov	r1, r4
 800f940:	4605      	mov	r5, r0
 800f942:	2000      	movs	r0, #0
 800f944:	f7ff ffe6 	bl	800f914 <_GetDevProp>
 800f948:	42a8      	cmp	r0, r5
 800f94a:	bfb8      	it	lt
 800f94c:	4628      	movlt	r0, r5
 800f94e:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800f952:	bd38      	pop	{r3, r4, r5, pc}

0800f954 <LCD_GetXSizeEx>:
 800f954:	2101      	movs	r1, #1
 800f956:	f7ff bfdd 	b.w	800f914 <_GetDevProp>

0800f95a <LCD_GetYSizeEx>:
 800f95a:	2102      	movs	r1, #2
 800f95c:	f7ff bfda 	b.w	800f914 <_GetDevProp>

0800f960 <LCD_GetVXSizeEx>:
 800f960:	2103      	movs	r1, #3
 800f962:	f7ff bfd7 	b.w	800f914 <_GetDevProp>

0800f966 <LCD_GetVYSizeEx>:
 800f966:	2104      	movs	r1, #4
 800f968:	f7ff bfd4 	b.w	800f914 <_GetDevProp>

0800f96c <LCD_GetBitsPerPixelEx>:
 800f96c:	2108      	movs	r1, #8
 800f96e:	f7ff bfd1 	b.w	800f914 <_GetDevProp>

0800f972 <LCD_GetNumColorsEx>:
 800f972:	2109      	movs	r1, #9
 800f974:	f7ff bfce 	b.w	800f914 <_GetDevProp>

0800f978 <LCD_GetXSize>:
 800f978:	4b02      	ldr	r3, [pc, #8]	; (800f984 <LCD_GetXSize+0xc>)
 800f97a:	681b      	ldr	r3, [r3, #0]
 800f97c:	7c58      	ldrb	r0, [r3, #17]
 800f97e:	f7ff bfe9 	b.w	800f954 <LCD_GetXSizeEx>
 800f982:	bf00      	nop
 800f984:	2000016c 	.word	0x2000016c

0800f988 <LCD_GetYSize>:
 800f988:	4b02      	ldr	r3, [pc, #8]	; (800f994 <LCD_GetYSize+0xc>)
 800f98a:	681b      	ldr	r3, [r3, #0]
 800f98c:	7c58      	ldrb	r0, [r3, #17]
 800f98e:	f7ff bfe4 	b.w	800f95a <LCD_GetYSizeEx>
 800f992:	bf00      	nop
 800f994:	2000016c 	.word	0x2000016c

0800f998 <LCD_GetNumColors>:
 800f998:	4b02      	ldr	r3, [pc, #8]	; (800f9a4 <LCD_GetNumColors+0xc>)
 800f99a:	681b      	ldr	r3, [r3, #0]
 800f99c:	7c58      	ldrb	r0, [r3, #17]
 800f99e:	f7ff bfe8 	b.w	800f972 <LCD_GetNumColorsEx>
 800f9a2:	bf00      	nop
 800f9a4:	2000016c 	.word	0x2000016c

0800f9a8 <GUI_GetBitsPerPixelEx>:
 800f9a8:	b508      	push	{r3, lr}
 800f9aa:	4b04      	ldr	r3, [pc, #16]	; (800f9bc <GUI_GetBitsPerPixelEx+0x14>)
 800f9ac:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800f9b0:	68c3      	ldr	r3, [r0, #12]
 800f9b2:	2108      	movs	r1, #8
 800f9b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f9b6:	4798      	blx	r3
 800f9b8:	bd08      	pop	{r3, pc}
 800f9ba:	bf00      	nop
 800f9bc:	20019c9c 	.word	0x20019c9c

0800f9c0 <LCD_GetPaletteEx>:
 800f9c0:	b508      	push	{r3, lr}
 800f9c2:	f002 fa7b 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 800f9c6:	b120      	cbz	r0, 800f9d2 <LCD_GetPaletteEx+0x12>
 800f9c8:	68c3      	ldr	r3, [r0, #12]
 800f9ca:	2102      	movs	r1, #2
 800f9cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f9ce:	4798      	blx	r3
 800f9d0:	bd08      	pop	{r3, pc}
 800f9d2:	bd08      	pop	{r3, pc}

0800f9d4 <LCD_GetPalette>:
 800f9d4:	4b02      	ldr	r3, [pc, #8]	; (800f9e0 <LCD_GetPalette+0xc>)
 800f9d6:	681b      	ldr	r3, [r3, #0]
 800f9d8:	7c58      	ldrb	r0, [r3, #17]
 800f9da:	f7ff bff1 	b.w	800f9c0 <LCD_GetPaletteEx>
 800f9de:	bf00      	nop
 800f9e0:	2000016c 	.word	0x2000016c

0800f9e4 <GUI_GetpfIndex2ColorEx>:
 800f9e4:	4b02      	ldr	r3, [pc, #8]	; (800f9f0 <GUI_GetpfIndex2ColorEx+0xc>)
 800f9e6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800f9ea:	691b      	ldr	r3, [r3, #16]
 800f9ec:	6858      	ldr	r0, [r3, #4]
 800f9ee:	4770      	bx	lr
 800f9f0:	20019c9c 	.word	0x20019c9c

0800f9f4 <GUI_GetpfColor2IndexEx>:
 800f9f4:	4b02      	ldr	r3, [pc, #8]	; (800fa00 <GUI_GetpfColor2IndexEx+0xc>)
 800f9f6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800f9fa:	691b      	ldr	r3, [r3, #16]
 800f9fc:	6818      	ldr	r0, [r3, #0]
 800f9fe:	4770      	bx	lr
 800fa00:	20019c9c 	.word	0x20019c9c

0800fa04 <LCD_GetXSizeMax>:
 800fa04:	2001      	movs	r0, #1
 800fa06:	f7ff bf94 	b.w	800f932 <_GetMaxValue>

0800fa0a <LCD_GetYSizeMax>:
 800fa0a:	2002      	movs	r0, #2
 800fa0c:	f7ff bf91 	b.w	800f932 <_GetMaxValue>

0800fa10 <LCD_GetVXSizeMax>:
 800fa10:	2003      	movs	r0, #3
 800fa12:	f7ff bf8e 	b.w	800f932 <_GetMaxValue>
	...

0800fa18 <LCD_SetDisplaySize>:
 800fa18:	4b02      	ldr	r3, [pc, #8]	; (800fa24 <LCD_SetDisplaySize+0xc>)
 800fa1a:	6018      	str	r0, [r3, #0]
 800fa1c:	4b02      	ldr	r3, [pc, #8]	; (800fa28 <LCD_SetDisplaySize+0x10>)
 800fa1e:	6019      	str	r1, [r3, #0]
 800fa20:	4770      	bx	lr
 800fa22:	bf00      	nop
 800fa24:	2001946c 	.word	0x2001946c
 800fa28:	20019468 	.word	0x20019468

0800fa2c <LCD_GetXSizeDisplay>:
 800fa2c:	4b01      	ldr	r3, [pc, #4]	; (800fa34 <LCD_GetXSizeDisplay+0x8>)
 800fa2e:	6818      	ldr	r0, [r3, #0]
 800fa30:	4770      	bx	lr
 800fa32:	bf00      	nop
 800fa34:	2001946c 	.word	0x2001946c

0800fa38 <LCD_GetYSizeDisplay>:
 800fa38:	4b01      	ldr	r3, [pc, #4]	; (800fa40 <LCD_GetYSizeDisplay+0x8>)
 800fa3a:	6818      	ldr	r0, [r3, #0]
 800fa3c:	4770      	bx	lr
 800fa3e:	bf00      	nop
 800fa40:	20019468 	.word	0x20019468

0800fa44 <LCD__GetBPP>:
 800fa44:	2800      	cmp	r0, #0
 800fa46:	d03b      	beq.n	800fac0 <LCD__GetBPP+0x7c>
 800fa48:	f030 0301 	bics.w	r3, r0, #1
 800fa4c:	d029      	beq.n	800faa2 <LCD__GetBPP+0x5e>
 800fa4e:	f030 0303 	bics.w	r3, r0, #3
 800fa52:	d028      	beq.n	800faa6 <LCD__GetBPP+0x62>
 800fa54:	f030 0307 	bics.w	r3, r0, #7
 800fa58:	d027      	beq.n	800faaa <LCD__GetBPP+0x66>
 800fa5a:	f030 030f 	bics.w	r3, r0, #15
 800fa5e:	d026      	beq.n	800faae <LCD__GetBPP+0x6a>
 800fa60:	f030 031f 	bics.w	r3, r0, #31
 800fa64:	d025      	beq.n	800fab2 <LCD__GetBPP+0x6e>
 800fa66:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 800fa6a:	d024      	beq.n	800fab6 <LCD__GetBPP+0x72>
 800fa6c:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 800fa70:	f023 0301 	bic.w	r3, r3, #1
 800fa74:	b30b      	cbz	r3, 800faba <LCD__GetBPP+0x76>
 800fa76:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 800fa7a:	f023 030f 	bic.w	r3, r3, #15
 800fa7e:	b1e3      	cbz	r3, 800faba <LCD__GetBPP+0x76>
 800fa80:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 800fa84:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800fa88:	b1bb      	cbz	r3, 800faba <LCD__GetBPP+0x76>
 800fa8a:	0c03      	lsrs	r3, r0, #16
 800fa8c:	041b      	lsls	r3, r3, #16
 800fa8e:	b1a3      	cbz	r3, 800faba <LCD__GetBPP+0x76>
 800fa90:	0c83      	lsrs	r3, r0, #18
 800fa92:	049b      	lsls	r3, r3, #18
 800fa94:	b19b      	cbz	r3, 800fabe <LCD__GetBPP+0x7a>
 800fa96:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800fa9a:	bf0c      	ite	eq
 800fa9c:	2018      	moveq	r0, #24
 800fa9e:	2020      	movne	r0, #32
 800faa0:	4770      	bx	lr
 800faa2:	2001      	movs	r0, #1
 800faa4:	4770      	bx	lr
 800faa6:	2002      	movs	r0, #2
 800faa8:	4770      	bx	lr
 800faaa:	2003      	movs	r0, #3
 800faac:	4770      	bx	lr
 800faae:	2004      	movs	r0, #4
 800fab0:	4770      	bx	lr
 800fab2:	2005      	movs	r0, #5
 800fab4:	4770      	bx	lr
 800fab6:	2008      	movs	r0, #8
 800fab8:	4770      	bx	lr
 800faba:	2010      	movs	r0, #16
 800fabc:	4770      	bx	lr
 800fabe:	2012      	movs	r0, #18
 800fac0:	4770      	bx	lr

0800fac2 <LCD__GetBPPDevice>:
 800fac2:	b508      	push	{r3, lr}
 800fac4:	f7ff ffbe 	bl	800fa44 <LCD__GetBPP>
 800fac8:	2801      	cmp	r0, #1
 800faca:	d00f      	beq.n	800faec <LCD__GetBPPDevice+0x2a>
 800facc:	1e83      	subs	r3, r0, #2
 800face:	2b06      	cmp	r3, #6
 800fad0:	d909      	bls.n	800fae6 <LCD__GetBPPDevice+0x24>
 800fad2:	f1a0 0309 	sub.w	r3, r0, #9
 800fad6:	2b07      	cmp	r3, #7
 800fad8:	d907      	bls.n	800faea <LCD__GetBPPDevice+0x28>
 800fada:	3811      	subs	r0, #17
 800fadc:	2810      	cmp	r0, #16
 800fade:	bf34      	ite	cc
 800fae0:	2020      	movcc	r0, #32
 800fae2:	2000      	movcs	r0, #0
 800fae4:	bd08      	pop	{r3, pc}
 800fae6:	2008      	movs	r0, #8
 800fae8:	bd08      	pop	{r3, pc}
 800faea:	2010      	movs	r0, #16
 800faec:	bd08      	pop	{r3, pc}
	...

0800faf0 <_SetDrawMode>:
 800faf0:	b570      	push	{r4, r5, r6, lr}
 800faf2:	4b08      	ldr	r3, [pc, #32]	; (800fb14 <_SetDrawMode+0x24>)
 800faf4:	681b      	ldr	r3, [r3, #0]
 800faf6:	7c1a      	ldrb	r2, [r3, #16]
 800faf8:	ea80 0102 	eor.w	r1, r0, r2
 800fafc:	0749      	lsls	r1, r1, #29
 800fafe:	d505      	bpl.n	800fb0c <_SetDrawMode+0x1c>
 800fb00:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800fb02:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800fb04:	6826      	ldr	r6, [r4, #0]
 800fb06:	680d      	ldr	r5, [r1, #0]
 800fb08:	6025      	str	r5, [r4, #0]
 800fb0a:	600e      	str	r6, [r1, #0]
 800fb0c:	7418      	strb	r0, [r3, #16]
 800fb0e:	4610      	mov	r0, r2
 800fb10:	bd70      	pop	{r4, r5, r6, pc}
 800fb12:	bf00      	nop
 800fb14:	2000016c 	.word	0x2000016c

0800fb18 <LCD_SetDrawMode>:
 800fb18:	b508      	push	{r3, lr}
 800fb1a:	4b02      	ldr	r3, [pc, #8]	; (800fb24 <LCD_SetDrawMode+0xc>)
 800fb1c:	681b      	ldr	r3, [r3, #0]
 800fb1e:	689b      	ldr	r3, [r3, #8]
 800fb20:	4798      	blx	r3
 800fb22:	bd08      	pop	{r3, pc}
 800fb24:	20000140 	.word	0x20000140

0800fb28 <LCD_DrawPixel>:
 800fb28:	b538      	push	{r3, r4, r5, lr}
 800fb2a:	4b14      	ldr	r3, [pc, #80]	; (800fb7c <LCD_DrawPixel+0x54>)
 800fb2c:	681b      	ldr	r3, [r3, #0]
 800fb2e:	460a      	mov	r2, r1
 800fb30:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 800fb34:	428a      	cmp	r2, r1
 800fb36:	4604      	mov	r4, r0
 800fb38:	db1e      	blt.n	800fb78 <LCD_DrawPixel+0x50>
 800fb3a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fb3e:	428a      	cmp	r2, r1
 800fb40:	dc1a      	bgt.n	800fb78 <LCD_DrawPixel+0x50>
 800fb42:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 800fb46:	4288      	cmp	r0, r1
 800fb48:	db16      	blt.n	800fb78 <LCD_DrawPixel+0x50>
 800fb4a:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 800fb4e:	4288      	cmp	r0, r1
 800fb50:	dc12      	bgt.n	800fb78 <LCD_DrawPixel+0x50>
 800fb52:	7c19      	ldrb	r1, [r3, #16]
 800fb54:	7c58      	ldrb	r0, [r3, #17]
 800fb56:	f011 0f01 	tst.w	r1, #1
 800fb5a:	4909      	ldr	r1, [pc, #36]	; (800fb80 <LCD_DrawPixel+0x58>)
 800fb5c:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800fb60:	d004      	beq.n	800fb6c <LCD_DrawPixel+0x44>
 800fb62:	68c3      	ldr	r3, [r0, #12]
 800fb64:	4621      	mov	r1, r4
 800fb66:	69db      	ldr	r3, [r3, #28]
 800fb68:	4798      	blx	r3
 800fb6a:	bd38      	pop	{r3, r4, r5, pc}
 800fb6c:	68c1      	ldr	r1, [r0, #12]
 800fb6e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fb70:	698d      	ldr	r5, [r1, #24]
 800fb72:	681b      	ldr	r3, [r3, #0]
 800fb74:	4621      	mov	r1, r4
 800fb76:	47a8      	blx	r5
 800fb78:	bd38      	pop	{r3, r4, r5, pc}
 800fb7a:	bf00      	nop
 800fb7c:	2000016c 	.word	0x2000016c
 800fb80:	20019c9c 	.word	0x20019c9c

0800fb84 <LCD_DrawHLine>:
 800fb84:	b538      	push	{r3, r4, r5, lr}
 800fb86:	4b10      	ldr	r3, [pc, #64]	; (800fbc8 <LCD_DrawHLine+0x44>)
 800fb88:	681c      	ldr	r4, [r3, #0]
 800fb8a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fb8e:	4299      	cmp	r1, r3
 800fb90:	460d      	mov	r5, r1
 800fb92:	db17      	blt.n	800fbc4 <LCD_DrawHLine+0x40>
 800fb94:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800fb98:	4299      	cmp	r1, r3
 800fb9a:	dc13      	bgt.n	800fbc4 <LCD_DrawHLine+0x40>
 800fb9c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800fba0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fba4:	4288      	cmp	r0, r1
 800fba6:	bfa8      	it	ge
 800fba8:	4601      	movge	r1, r0
 800fbaa:	429a      	cmp	r2, r3
 800fbac:	bfb8      	it	lt
 800fbae:	4613      	movlt	r3, r2
 800fbb0:	428b      	cmp	r3, r1
 800fbb2:	db07      	blt.n	800fbc4 <LCD_DrawHLine+0x40>
 800fbb4:	7c60      	ldrb	r0, [r4, #17]
 800fbb6:	4a05      	ldr	r2, [pc, #20]	; (800fbcc <LCD_DrawHLine+0x48>)
 800fbb8:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800fbbc:	68c2      	ldr	r2, [r0, #12]
 800fbbe:	6894      	ldr	r4, [r2, #8]
 800fbc0:	462a      	mov	r2, r5
 800fbc2:	47a0      	blx	r4
 800fbc4:	bd38      	pop	{r3, r4, r5, pc}
 800fbc6:	bf00      	nop
 800fbc8:	2000016c 	.word	0x2000016c
 800fbcc:	20019c9c 	.word	0x20019c9c

0800fbd0 <LCD_DrawVLine>:
 800fbd0:	b538      	push	{r3, r4, r5, lr}
 800fbd2:	4b10      	ldr	r3, [pc, #64]	; (800fc14 <LCD_DrawVLine+0x44>)
 800fbd4:	681c      	ldr	r4, [r3, #0]
 800fbd6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fbda:	4605      	mov	r5, r0
 800fbdc:	429d      	cmp	r5, r3
 800fbde:	4610      	mov	r0, r2
 800fbe0:	db17      	blt.n	800fc12 <LCD_DrawVLine+0x42>
 800fbe2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fbe6:	429d      	cmp	r5, r3
 800fbe8:	dc13      	bgt.n	800fc12 <LCD_DrawVLine+0x42>
 800fbea:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800fbee:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800fbf2:	4291      	cmp	r1, r2
 800fbf4:	bfa8      	it	ge
 800fbf6:	460a      	movge	r2, r1
 800fbf8:	4298      	cmp	r0, r3
 800fbfa:	bfb8      	it	lt
 800fbfc:	4603      	movlt	r3, r0
 800fbfe:	4293      	cmp	r3, r2
 800fc00:	db07      	blt.n	800fc12 <LCD_DrawVLine+0x42>
 800fc02:	7c60      	ldrb	r0, [r4, #17]
 800fc04:	4904      	ldr	r1, [pc, #16]	; (800fc18 <LCD_DrawVLine+0x48>)
 800fc06:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800fc0a:	68c1      	ldr	r1, [r0, #12]
 800fc0c:	68cc      	ldr	r4, [r1, #12]
 800fc0e:	4629      	mov	r1, r5
 800fc10:	47a0      	blx	r4
 800fc12:	bd38      	pop	{r3, r4, r5, pc}
 800fc14:	2000016c 	.word	0x2000016c
 800fc18:	20019c9c 	.word	0x20019c9c

0800fc1c <LCD_FillRect>:
 800fc1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fc1e:	460e      	mov	r6, r1
 800fc20:	4912      	ldr	r1, [pc, #72]	; (800fc6c <LCD_FillRect+0x50>)
 800fc22:	680c      	ldr	r4, [r1, #0]
 800fc24:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800fc28:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800fc2c:	4288      	cmp	r0, r1
 800fc2e:	bfa8      	it	ge
 800fc30:	4601      	movge	r1, r0
 800fc32:	42aa      	cmp	r2, r5
 800fc34:	bfb8      	it	lt
 800fc36:	4615      	movlt	r5, r2
 800fc38:	428d      	cmp	r5, r1
 800fc3a:	db14      	blt.n	800fc66 <LCD_FillRect+0x4a>
 800fc3c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800fc40:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800fc44:	4296      	cmp	r6, r2
 800fc46:	bfa8      	it	ge
 800fc48:	4632      	movge	r2, r6
 800fc4a:	4283      	cmp	r3, r0
 800fc4c:	bfa8      	it	ge
 800fc4e:	4603      	movge	r3, r0
 800fc50:	4293      	cmp	r3, r2
 800fc52:	db08      	blt.n	800fc66 <LCD_FillRect+0x4a>
 800fc54:	7c64      	ldrb	r4, [r4, #17]
 800fc56:	4806      	ldr	r0, [pc, #24]	; (800fc70 <LCD_FillRect+0x54>)
 800fc58:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800fc5c:	68c4      	ldr	r4, [r0, #12]
 800fc5e:	9300      	str	r3, [sp, #0]
 800fc60:	6924      	ldr	r4, [r4, #16]
 800fc62:	462b      	mov	r3, r5
 800fc64:	47a0      	blx	r4
 800fc66:	b002      	add	sp, #8
 800fc68:	bd70      	pop	{r4, r5, r6, pc}
 800fc6a:	bf00      	nop
 800fc6c:	2000016c 	.word	0x2000016c
 800fc70:	20019c9c 	.word	0x20019c9c

0800fc74 <LCD__DrawBitmap_1bpp>:
 800fc74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc78:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 800fe28 <LCD__DrawBitmap_1bpp+0x1b4>
 800fc7c:	b08f      	sub	sp, #60	; 0x3c
 800fc7e:	f8dc c000 	ldr.w	ip, [ip]
 800fc82:	9009      	str	r0, [sp, #36]	; 0x24
 800fc84:	460e      	mov	r6, r1
 800fc86:	4615      	mov	r5, r2
 800fc88:	469b      	mov	fp, r3
 800fc8a:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800fc8c:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 800fc90:	f1bc 0f00 	cmp.w	ip, #0
 800fc94:	d00d      	beq.n	800fcb2 <LCD__DrawBitmap_1bpp+0x3e>
 800fc96:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800fc98:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800fc9a:	9500      	str	r5, [sp, #0]
 800fc9c:	9601      	str	r6, [sp, #4]
 800fc9e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800fca0:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800fca2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800fca4:	9702      	str	r7, [sp, #8]
 800fca6:	9503      	str	r5, [sp, #12]
 800fca8:	9404      	str	r4, [sp, #16]
 800fcaa:	9605      	str	r6, [sp, #20]
 800fcac:	f8dc 4000 	ldr.w	r4, [ip]
 800fcb0:	e053      	b.n	800fd5a <LCD__DrawBitmap_1bpp+0xe6>
 800fcb2:	9f18      	ldr	r7, [sp, #96]	; 0x60
 800fcb4:	9819      	ldr	r0, [sp, #100]	; 0x64
 800fcb6:	ea47 0300 	orr.w	r3, r7, r0
 800fcba:	2b01      	cmp	r3, #1
 800fcbc:	d14f      	bne.n	800fd5e <LCD__DrawBitmap_1bpp+0xea>
 800fcbe:	4b58      	ldr	r3, [pc, #352]	; (800fe20 <LCD__DrawBitmap_1bpp+0x1ac>)
 800fcc0:	6818      	ldr	r0, [r3, #0]
 800fcc2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800fcc6:	1a51      	subs	r1, r2, r1
 800fcc8:	2900      	cmp	r1, #0
 800fcca:	dd08      	ble.n	800fcde <LCD__DrawBitmap_1bpp+0x6a>
 800fccc:	ebc1 030b 	rsb	r3, r1, fp
 800fcd0:	2b00      	cmp	r3, #0
 800fcd2:	f340 80a2 	ble.w	800fe1a <LCD__DrawBitmap_1bpp+0x1a6>
 800fcd6:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800fcd8:	fb07 4401 	mla	r4, r7, r1, r4
 800fcdc:	e001      	b.n	800fce2 <LCD__DrawBitmap_1bpp+0x6e>
 800fcde:	465b      	mov	r3, fp
 800fce0:	4632      	mov	r2, r6
 800fce2:	445e      	add	r6, fp
 800fce4:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 800fce8:	3e01      	subs	r6, #1
 800fcea:	1a76      	subs	r6, r6, r1
 800fcec:	2e00      	cmp	r6, #0
 800fcee:	dd03      	ble.n	800fcf8 <LCD__DrawBitmap_1bpp+0x84>
 800fcf0:	1b9b      	subs	r3, r3, r6
 800fcf2:	2b00      	cmp	r3, #0
 800fcf4:	f340 8091 	ble.w	800fe1a <LCD__DrawBitmap_1bpp+0x1a6>
 800fcf8:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fcfa:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800fcfe:	4429      	add	r1, r5
 800fd00:	3901      	subs	r1, #1
 800fd02:	1b89      	subs	r1, r1, r6
 800fd04:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800fd06:	2900      	cmp	r1, #0
 800fd08:	bfc8      	it	gt
 800fd0a:	ebc1 0505 	rsbgt	r5, r1, r5
 800fd0e:	ebc8 0106 	rsb	r1, r8, r6
 800fd12:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800fd16:	42b1      	cmp	r1, r6
 800fd18:	da0c      	bge.n	800fd34 <LCD__DrawBitmap_1bpp+0xc0>
 800fd1a:	ebc1 0c06 	rsb	ip, r1, r6
 800fd1e:	eb08 070c 	add.w	r7, r8, ip
 800fd22:	1b8e      	subs	r6, r1, r6
 800fd24:	f02c 0c07 	bic.w	ip, ip, #7
 800fd28:	4435      	add	r5, r6
 800fd2a:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 800fd2e:	4461      	add	r1, ip
 800fd30:	f007 0807 	and.w	r8, r7, #7
 800fd34:	2d00      	cmp	r5, #0
 800fd36:	dd70      	ble.n	800fe1a <LCD__DrawBitmap_1bpp+0x1a6>
 800fd38:	7c46      	ldrb	r6, [r0, #17]
 800fd3a:	483a      	ldr	r0, [pc, #232]	; (800fe24 <LCD__DrawBitmap_1bpp+0x1b0>)
 800fd3c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800fd3e:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 800fd42:	68c6      	ldr	r6, [r0, #12]
 800fd44:	9701      	str	r7, [sp, #4]
 800fd46:	9403      	str	r4, [sp, #12]
 800fd48:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800fd4a:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800fd4c:	9300      	str	r3, [sp, #0]
 800fd4e:	9702      	str	r7, [sp, #8]
 800fd50:	f8cd 8010 	str.w	r8, [sp, #16]
 800fd54:	9405      	str	r4, [sp, #20]
 800fd56:	6874      	ldr	r4, [r6, #4]
 800fd58:	462b      	mov	r3, r5
 800fd5a:	47a0      	blx	r4
 800fd5c:	e05d      	b.n	800fe1a <LCD__DrawBitmap_1bpp+0x1a6>
 800fd5e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800fd60:	f1c7 0708 	rsb	r7, r7, #8
 800fd64:	970c      	str	r7, [sp, #48]	; 0x30
 800fd66:	4667      	mov	r7, ip
 800fd68:	45dc      	cmp	ip, fp
 800fd6a:	da56      	bge.n	800fe1a <LCD__DrawBitmap_1bpp+0x1a6>
 800fd6c:	4b2c      	ldr	r3, [pc, #176]	; (800fe20 <LCD__DrawBitmap_1bpp+0x1ac>)
 800fd6e:	9819      	ldr	r0, [sp, #100]	; 0x64
 800fd70:	681b      	ldr	r3, [r3, #0]
 800fd72:	4430      	add	r0, r6
 800fd74:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800fd78:	900a      	str	r0, [sp, #40]	; 0x28
 800fd7a:	1e41      	subs	r1, r0, #1
 800fd7c:	4291      	cmp	r1, r2
 800fd7e:	910b      	str	r1, [sp, #44]	; 0x2c
 800fd80:	db45      	blt.n	800fe0e <LCD__DrawBitmap_1bpp+0x19a>
 800fd82:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800fd86:	429e      	cmp	r6, r3
 800fd88:	dc41      	bgt.n	800fe0e <LCD__DrawBitmap_1bpp+0x19a>
 800fd8a:	f04f 0800 	mov.w	r8, #0
 800fd8e:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800fd92:	9408      	str	r4, [sp, #32]
 800fd94:	46c2      	mov	sl, r8
 800fd96:	45aa      	cmp	sl, r5
 800fd98:	da39      	bge.n	800fe0e <LCD__DrawBitmap_1bpp+0x19a>
 800fd9a:	f1b8 0f00 	cmp.w	r8, #0
 800fd9e:	d105      	bne.n	800fdac <LCD__DrawBitmap_1bpp+0x138>
 800fda0:	9a08      	ldr	r2, [sp, #32]
 800fda2:	7817      	ldrb	r7, [r2, #0]
 800fda4:	3201      	adds	r2, #1
 800fda6:	9208      	str	r2, [sp, #32]
 800fda8:	f04f 0808 	mov.w	r8, #8
 800fdac:	980c      	ldr	r0, [sp, #48]	; 0x30
 800fdae:	991a      	ldr	r1, [sp, #104]	; 0x68
 800fdb0:	4a1b      	ldr	r2, [pc, #108]	; (800fe20 <LCD__DrawBitmap_1bpp+0x1ac>)
 800fdb2:	fa47 f300 	asr.w	r3, r7, r0
 800fdb6:	ebc1 0808 	rsb	r8, r1, r8
 800fdba:	408f      	lsls	r7, r1
 800fdbc:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800fdc0:	b2ff      	uxtb	r7, r7
 800fdc2:	d103      	bne.n	800fdcc <LCD__DrawBitmap_1bpp+0x158>
 800fdc4:	6810      	ldr	r0, [r2, #0]
 800fdc6:	7c00      	ldrb	r0, [r0, #16]
 800fdc8:	0780      	lsls	r0, r0, #30
 800fdca:	d41b      	bmi.n	800fe04 <LCD__DrawBitmap_1bpp+0x190>
 800fdcc:	6812      	ldr	r2, [r2, #0]
 800fdce:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800fdd0:	6810      	ldr	r0, [r2, #0]
 800fdd2:	900d      	str	r0, [sp, #52]	; 0x34
 800fdd4:	981d      	ldr	r0, [sp, #116]	; 0x74
 800fdd6:	b110      	cbz	r0, 800fdde <LCD__DrawBitmap_1bpp+0x16a>
 800fdd8:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800fddc:	e000      	b.n	800fde0 <LCD__DrawBitmap_1bpp+0x16c>
 800fdde:	b2db      	uxtb	r3, r3
 800fde0:	9918      	ldr	r1, [sp, #96]	; 0x60
 800fde2:	6013      	str	r3, [r2, #0]
 800fde4:	1e4a      	subs	r2, r1, #1
 800fde6:	444a      	add	r2, r9
 800fde8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fdea:	f8cd c01c 	str.w	ip, [sp, #28]
 800fdee:	4648      	mov	r0, r9
 800fdf0:	4631      	mov	r1, r6
 800fdf2:	f7ff ff13 	bl	800fc1c <LCD_FillRect>
 800fdf6:	4b0a      	ldr	r3, [pc, #40]	; (800fe20 <LCD__DrawBitmap_1bpp+0x1ac>)
 800fdf8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fdfa:	681b      	ldr	r3, [r3, #0]
 800fdfc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800fe00:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fe02:	601a      	str	r2, [r3, #0]
 800fe04:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800fe06:	f10a 0a01 	add.w	sl, sl, #1
 800fe0a:	4499      	add	r9, r3
 800fe0c:	e7c3      	b.n	800fd96 <LCD__DrawBitmap_1bpp+0x122>
 800fe0e:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800fe10:	f10c 0c01 	add.w	ip, ip, #1
 800fe14:	4434      	add	r4, r6
 800fe16:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800fe18:	e7a6      	b.n	800fd68 <LCD__DrawBitmap_1bpp+0xf4>
 800fe1a:	b00f      	add	sp, #60	; 0x3c
 800fe1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe20:	2000016c 	.word	0x2000016c
 800fe24:	20019c9c 	.word	0x20019c9c
 800fe28:	20019c70 	.word	0x20019c70

0800fe2c <LCD_DrawBitmap>:
 800fe2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe30:	f8df c20c 	ldr.w	ip, [pc, #524]	; 8010040 <LCD_DrawBitmap+0x214>
 800fe34:	b091      	sub	sp, #68	; 0x44
 800fe36:	f8dc 9000 	ldr.w	r9, [ip]
 800fe3a:	9207      	str	r2, [sp, #28]
 800fe3c:	4605      	mov	r5, r0
 800fe3e:	4688      	mov	r8, r1
 800fe40:	469b      	mov	fp, r3
 800fe42:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800fe44:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800fe46:	f1b9 0f00 	cmp.w	r9, #0
 800fe4a:	d00c      	beq.n	800fe66 <LCD_DrawBitmap+0x3a>
 800fe4c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800fe4e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800fe50:	9500      	str	r5, [sp, #0]
 800fe52:	9701      	str	r7, [sp, #4]
 800fe54:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800fe56:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800fe58:	9602      	str	r6, [sp, #8]
 800fe5a:	9503      	str	r5, [sp, #12]
 800fe5c:	9404      	str	r4, [sp, #16]
 800fe5e:	9705      	str	r7, [sp, #20]
 800fe60:	f8d9 4000 	ldr.w	r4, [r9]
 800fe64:	e081      	b.n	800ff6a <LCD_DrawBitmap+0x13e>
 800fe66:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800fe68:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800fe6a:	ea47 0300 	orr.w	r3, r7, r0
 800fe6e:	2b01      	cmp	r3, #1
 800fe70:	d17d      	bne.n	800ff6e <LCD_DrawBitmap+0x142>
 800fe72:	4b71      	ldr	r3, [pc, #452]	; (8010038 <LCD_DrawBitmap+0x20c>)
 800fe74:	6818      	ldr	r0, [r3, #0]
 800fe76:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800fe7a:	1a53      	subs	r3, r2, r1
 800fe7c:	2b00      	cmp	r3, #0
 800fe7e:	dd08      	ble.n	800fe92 <LCD_DrawBitmap+0x66>
 800fe80:	ebc3 010b 	rsb	r1, r3, fp
 800fe84:	2900      	cmp	r1, #0
 800fe86:	f340 80d4 	ble.w	8010032 <LCD_DrawBitmap+0x206>
 800fe8a:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800fe8c:	fb07 4403 	mla	r4, r7, r3, r4
 800fe90:	e001      	b.n	800fe96 <LCD_DrawBitmap+0x6a>
 800fe92:	4659      	mov	r1, fp
 800fe94:	4642      	mov	r2, r8
 800fe96:	44d8      	add	r8, fp
 800fe98:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800fe9c:	f108 38ff 	add.w	r8, r8, #4294967295
 800fea0:	ebc3 0808 	rsb	r8, r3, r8
 800fea4:	f1b8 0f00 	cmp.w	r8, #0
 800fea8:	dd04      	ble.n	800feb4 <LCD_DrawBitmap+0x88>
 800feaa:	ebc8 0101 	rsb	r1, r8, r1
 800feae:	2900      	cmp	r1, #0
 800feb0:	f340 80bf 	ble.w	8010032 <LCD_DrawBitmap+0x206>
 800feb4:	9b07      	ldr	r3, [sp, #28]
 800feb6:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 800feba:	442b      	add	r3, r5
 800febc:	3b01      	subs	r3, #1
 800febe:	ebcc 0303 	rsb	r3, ip, r3
 800fec2:	2b00      	cmp	r3, #0
 800fec4:	dd02      	ble.n	800fecc <LCD_DrawBitmap+0xa0>
 800fec6:	9f07      	ldr	r7, [sp, #28]
 800fec8:	1aff      	subs	r7, r7, r3
 800feca:	9707      	str	r7, [sp, #28]
 800fecc:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800fed0:	4565      	cmp	r5, ip
 800fed2:	da33      	bge.n	800ff3c <LCD_DrawBitmap+0x110>
 800fed4:	9f07      	ldr	r7, [sp, #28]
 800fed6:	ebc5 030c 	rsb	r3, r5, ip
 800feda:	1aff      	subs	r7, r7, r3
 800fedc:	2e08      	cmp	r6, #8
 800fede:	9707      	str	r7, [sp, #28]
 800fee0:	d027      	beq.n	800ff32 <LCD_DrawBitmap+0x106>
 800fee2:	dc0d      	bgt.n	800ff00 <LCD_DrawBitmap+0xd4>
 800fee4:	2e02      	cmp	r6, #2
 800fee6:	d014      	beq.n	800ff12 <LCD_DrawBitmap+0xe6>
 800fee8:	2e04      	cmp	r6, #4
 800feea:	d01a      	beq.n	800ff22 <LCD_DrawBitmap+0xf6>
 800feec:	2e01      	cmp	r6, #1
 800feee:	d126      	bne.n	800ff3e <LCD_DrawBitmap+0x112>
 800fef0:	f023 0c07 	bic.w	ip, r3, #7
 800fef4:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800fef8:	4465      	add	r5, ip
 800fefa:	f003 0307 	and.w	r3, r3, #7
 800fefe:	e01e      	b.n	800ff3e <LCD_DrawBitmap+0x112>
 800ff00:	2e18      	cmp	r6, #24
 800ff02:	d018      	beq.n	800ff36 <LCD_DrawBitmap+0x10a>
 800ff04:	2e20      	cmp	r6, #32
 800ff06:	d016      	beq.n	800ff36 <LCD_DrawBitmap+0x10a>
 800ff08:	2e10      	cmp	r6, #16
 800ff0a:	d118      	bne.n	800ff3e <LCD_DrawBitmap+0x112>
 800ff0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ff10:	e013      	b.n	800ff3a <LCD_DrawBitmap+0x10e>
 800ff12:	f023 0c03 	bic.w	ip, r3, #3
 800ff16:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800ff1a:	4465      	add	r5, ip
 800ff1c:	f003 0303 	and.w	r3, r3, #3
 800ff20:	e00d      	b.n	800ff3e <LCD_DrawBitmap+0x112>
 800ff22:	f023 0c01 	bic.w	ip, r3, #1
 800ff26:	eb04 0463 	add.w	r4, r4, r3, asr #1
 800ff2a:	4465      	add	r5, ip
 800ff2c:	f003 0301 	and.w	r3, r3, #1
 800ff30:	e005      	b.n	800ff3e <LCD_DrawBitmap+0x112>
 800ff32:	441c      	add	r4, r3
 800ff34:	e001      	b.n	800ff3a <LCD_DrawBitmap+0x10e>
 800ff36:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800ff3a:	4665      	mov	r5, ip
 800ff3c:	2300      	movs	r3, #0
 800ff3e:	9f07      	ldr	r7, [sp, #28]
 800ff40:	2f00      	cmp	r7, #0
 800ff42:	dd76      	ble.n	8010032 <LCD_DrawBitmap+0x206>
 800ff44:	f890 e011 	ldrb.w	lr, [r0, #17]
 800ff48:	483c      	ldr	r0, [pc, #240]	; (801003c <LCD_DrawBitmap+0x210>)
 800ff4a:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800ff4c:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 800ff50:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 800ff54:	9403      	str	r4, [sp, #12]
 800ff56:	e88d 0042 	stmia.w	sp, {r1, r6}
 800ff5a:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 800ff5c:	9304      	str	r3, [sp, #16]
 800ff5e:	9702      	str	r7, [sp, #8]
 800ff60:	9405      	str	r4, [sp, #20]
 800ff62:	f8de 4004 	ldr.w	r4, [lr, #4]
 800ff66:	9b07      	ldr	r3, [sp, #28]
 800ff68:	4629      	mov	r1, r5
 800ff6a:	47a0      	blx	r4
 800ff6c:	e061      	b.n	8010032 <LCD_DrawBitmap+0x206>
 800ff6e:	f1c6 0708 	rsb	r7, r6, #8
 800ff72:	970e      	str	r7, [sp, #56]	; 0x38
 800ff74:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800ff78:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800ff7a:	455f      	cmp	r7, fp
 800ff7c:	da59      	bge.n	8010032 <LCD_DrawBitmap+0x206>
 800ff7e:	4b2e      	ldr	r3, [pc, #184]	; (8010038 <LCD_DrawBitmap+0x20c>)
 800ff80:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800ff82:	681b      	ldr	r3, [r3, #0]
 800ff84:	4447      	add	r7, r8
 800ff86:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800ff8a:	970c      	str	r7, [sp, #48]	; 0x30
 800ff8c:	3f01      	subs	r7, #1
 800ff8e:	4297      	cmp	r7, r2
 800ff90:	970d      	str	r7, [sp, #52]	; 0x34
 800ff92:	db46      	blt.n	8010022 <LCD_DrawBitmap+0x1f6>
 800ff94:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800ff98:	4598      	cmp	r8, r3
 800ff9a:	dc42      	bgt.n	8010022 <LCD_DrawBitmap+0x1f6>
 800ff9c:	f04f 0a00 	mov.w	sl, #0
 800ffa0:	940b      	str	r4, [sp, #44]	; 0x2c
 800ffa2:	46ac      	mov	ip, r5
 800ffa4:	4657      	mov	r7, sl
 800ffa6:	9807      	ldr	r0, [sp, #28]
 800ffa8:	4287      	cmp	r7, r0
 800ffaa:	da3a      	bge.n	8010022 <LCD_DrawBitmap+0x1f6>
 800ffac:	f1ba 0f00 	cmp.w	sl, #0
 800ffb0:	d106      	bne.n	800ffc0 <LCD_DrawBitmap+0x194>
 800ffb2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800ffb4:	f890 9000 	ldrb.w	r9, [r0]
 800ffb8:	3001      	adds	r0, #1
 800ffba:	900b      	str	r0, [sp, #44]	; 0x2c
 800ffbc:	f04f 0a08 	mov.w	sl, #8
 800ffc0:	990e      	ldr	r1, [sp, #56]	; 0x38
 800ffc2:	4a1d      	ldr	r2, [pc, #116]	; (8010038 <LCD_DrawBitmap+0x20c>)
 800ffc4:	fa49 f301 	asr.w	r3, r9, r1
 800ffc8:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800ffcc:	fa09 f906 	lsl.w	r9, r9, r6
 800ffd0:	fa5f f989 	uxtb.w	r9, r9
 800ffd4:	ebc6 0a0a 	rsb	sl, r6, sl
 800ffd8:	d103      	bne.n	800ffe2 <LCD_DrawBitmap+0x1b6>
 800ffda:	6810      	ldr	r0, [r2, #0]
 800ffdc:	7c00      	ldrb	r0, [r0, #16]
 800ffde:	0780      	lsls	r0, r0, #30
 800ffe0:	d41b      	bmi.n	801001a <LCD_DrawBitmap+0x1ee>
 800ffe2:	6812      	ldr	r2, [r2, #0]
 800ffe4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800ffe6:	6810      	ldr	r0, [r2, #0]
 800ffe8:	900f      	str	r0, [sp, #60]	; 0x3c
 800ffea:	981f      	ldr	r0, [sp, #124]	; 0x7c
 800ffec:	b110      	cbz	r0, 800fff4 <LCD_DrawBitmap+0x1c8>
 800ffee:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800fff2:	e000      	b.n	800fff6 <LCD_DrawBitmap+0x1ca>
 800fff4:	b2db      	uxtb	r3, r3
 800fff6:	991a      	ldr	r1, [sp, #104]	; 0x68
 800fff8:	6013      	str	r3, [r2, #0]
 800fffa:	1e4a      	subs	r2, r1, #1
 800fffc:	4462      	add	r2, ip
 800fffe:	4660      	mov	r0, ip
 8010000:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010002:	f8cd c020 	str.w	ip, [sp, #32]
 8010006:	4641      	mov	r1, r8
 8010008:	f7ff fe08 	bl	800fc1c <LCD_FillRect>
 801000c:	4b0a      	ldr	r3, [pc, #40]	; (8010038 <LCD_DrawBitmap+0x20c>)
 801000e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010010:	681b      	ldr	r3, [r3, #0]
 8010012:	f8dd c020 	ldr.w	ip, [sp, #32]
 8010016:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010018:	601a      	str	r2, [r3, #0]
 801001a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801001c:	3701      	adds	r7, #1
 801001e:	449c      	add	ip, r3
 8010020:	e7c1      	b.n	800ffa6 <LCD_DrawBitmap+0x17a>
 8010022:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8010024:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8010028:	3701      	adds	r7, #1
 801002a:	970a      	str	r7, [sp, #40]	; 0x28
 801002c:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 801002e:	443c      	add	r4, r7
 8010030:	e7a2      	b.n	800ff78 <LCD_DrawBitmap+0x14c>
 8010032:	b011      	add	sp, #68	; 0x44
 8010034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010038:	2000016c 	.word	0x2000016c
 801003c:	20019c9c 	.word	0x20019c9c
 8010040:	20019c70 	.word	0x20019c70

08010044 <LCD_SetClipRectMax>:
 8010044:	b508      	push	{r3, lr}
 8010046:	4b05      	ldr	r3, [pc, #20]	; (801005c <LCD_SetClipRectMax+0x18>)
 8010048:	6819      	ldr	r1, [r3, #0]
 801004a:	4b05      	ldr	r3, [pc, #20]	; (8010060 <LCD_SetClipRectMax+0x1c>)
 801004c:	7c4a      	ldrb	r2, [r1, #17]
 801004e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8010052:	68c3      	ldr	r3, [r0, #12]
 8010054:	3108      	adds	r1, #8
 8010056:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010058:	4798      	blx	r3
 801005a:	bd08      	pop	{r3, pc}
 801005c:	2000016c 	.word	0x2000016c
 8010060:	20019c9c 	.word	0x20019c9c

08010064 <emWin_LCD_Init>:
 8010064:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010066:	f7ff ffed 	bl	8010044 <LCD_SetClipRectMax>
 801006a:	f007 f911 	bl	8017290 <LCD_InitColors>
 801006e:	4604      	mov	r4, r0
 8010070:	2800      	cmp	r0, #0
 8010072:	d13d      	bne.n	80100f0 <emWin_LCD_Init+0x8c>
 8010074:	4605      	mov	r5, r0
 8010076:	4628      	mov	r0, r5
 8010078:	f001 ff20 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 801007c:	9001      	str	r0, [sp, #4]
 801007e:	b148      	cbz	r0, 8010094 <emWin_LCD_Init+0x30>
 8010080:	68c3      	ldr	r3, [r0, #12]
 8010082:	210c      	movs	r1, #12
 8010084:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010086:	a801      	add	r0, sp, #4
 8010088:	4798      	blx	r3
 801008a:	4603      	mov	r3, r0
 801008c:	b370      	cbz	r0, 80100ec <emWin_LCD_Init+0x88>
 801008e:	9801      	ldr	r0, [sp, #4]
 8010090:	4798      	blx	r3
 8010092:	4304      	orrs	r4, r0
 8010094:	3501      	adds	r5, #1
 8010096:	2d02      	cmp	r5, #2
 8010098:	d1ed      	bne.n	8010076 <emWin_LCD_Init+0x12>
 801009a:	bb4c      	cbnz	r4, 80100f0 <emWin_LCD_Init+0x8c>
 801009c:	f007 f914 	bl	80172c8 <LCD_InitLUT>
 80100a0:	2401      	movs	r4, #1
 80100a2:	4620      	mov	r0, r4
 80100a4:	f001 ff0a 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 80100a8:	9001      	str	r0, [sp, #4]
 80100aa:	b1d0      	cbz	r0, 80100e2 <emWin_LCD_Init+0x7e>
 80100ac:	4620      	mov	r0, r4
 80100ae:	f001 fa97 	bl	80115e0 <GUI_SelectLayer>
 80100b2:	2004      	movs	r0, #4
 80100b4:	f7ff fd30 	bl	800fb18 <LCD_SetDrawMode>
 80100b8:	f643 72ff 	movw	r2, #16383	; 0x3fff
 80100bc:	2000      	movs	r0, #0
 80100be:	4601      	mov	r1, r0
 80100c0:	4613      	mov	r3, r2
 80100c2:	f7ff fdab 	bl	800fc1c <LCD_FillRect>
 80100c6:	2000      	movs	r0, #0
 80100c8:	f7ff fd26 	bl	800fb18 <LCD_SetDrawMode>
 80100cc:	a802      	add	r0, sp, #8
 80100ce:	210e      	movs	r1, #14
 80100d0:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80100d4:	68db      	ldr	r3, [r3, #12]
 80100d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80100d8:	4798      	blx	r3
 80100da:	4603      	mov	r3, r0
 80100dc:	b108      	cbz	r0, 80100e2 <emWin_LCD_Init+0x7e>
 80100de:	9801      	ldr	r0, [sp, #4]
 80100e0:	4798      	blx	r3
 80100e2:	f114 34ff 	adds.w	r4, r4, #4294967295
 80100e6:	d2dc      	bcs.n	80100a2 <emWin_LCD_Init+0x3e>
 80100e8:	2000      	movs	r0, #0
 80100ea:	e002      	b.n	80100f2 <emWin_LCD_Init+0x8e>
 80100ec:	2001      	movs	r0, #1
 80100ee:	e000      	b.n	80100f2 <emWin_LCD_Init+0x8e>
 80100f0:	4620      	mov	r0, r4
 80100f2:	b003      	add	sp, #12
 80100f4:	bd30      	pop	{r4, r5, pc}
	...

080100f8 <LCD_Color2Index>:
 80100f8:	b508      	push	{r3, lr}
 80100fa:	4b05      	ldr	r3, [pc, #20]	; (8010110 <LCD_Color2Index+0x18>)
 80100fc:	681b      	ldr	r3, [r3, #0]
 80100fe:	7c5a      	ldrb	r2, [r3, #17]
 8010100:	4b04      	ldr	r3, [pc, #16]	; (8010114 <LCD_Color2Index+0x1c>)
 8010102:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010106:	691b      	ldr	r3, [r3, #16]
 8010108:	681b      	ldr	r3, [r3, #0]
 801010a:	4798      	blx	r3
 801010c:	bd08      	pop	{r3, pc}
 801010e:	bf00      	nop
 8010110:	2000016c 	.word	0x2000016c
 8010114:	20019c9c 	.word	0x20019c9c

08010118 <LCD_Index2Color>:
 8010118:	b508      	push	{r3, lr}
 801011a:	4b05      	ldr	r3, [pc, #20]	; (8010130 <LCD_Index2Color+0x18>)
 801011c:	681b      	ldr	r3, [r3, #0]
 801011e:	7c5a      	ldrb	r2, [r3, #17]
 8010120:	4b04      	ldr	r3, [pc, #16]	; (8010134 <LCD_Index2Color+0x1c>)
 8010122:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010126:	691b      	ldr	r3, [r3, #16]
 8010128:	685b      	ldr	r3, [r3, #4]
 801012a:	4798      	blx	r3
 801012c:	bd08      	pop	{r3, pc}
 801012e:	bf00      	nop
 8010130:	2000016c 	.word	0x2000016c
 8010134:	20019c9c 	.word	0x20019c9c

08010138 <LCD_SetColorIndex>:
 8010138:	4b04      	ldr	r3, [pc, #16]	; (801014c <LCD_SetColorIndex+0x14>)
 801013a:	681b      	ldr	r3, [r3, #0]
 801013c:	7c1a      	ldrb	r2, [r3, #16]
 801013e:	0752      	lsls	r2, r2, #29
 8010140:	bf4c      	ite	mi
 8010142:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 8010144:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 8010146:	6018      	str	r0, [r3, #0]
 8010148:	4770      	bx	lr
 801014a:	bf00      	nop
 801014c:	2000016c 	.word	0x2000016c

08010150 <_SetColor>:
 8010150:	b508      	push	{r3, lr}
 8010152:	4b06      	ldr	r3, [pc, #24]	; (801016c <_SetColor+0x1c>)
 8010154:	681b      	ldr	r3, [r3, #0]
 8010156:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8010158:	4281      	cmp	r1, r0
 801015a:	d006      	beq.n	801016a <_SetColor+0x1a>
 801015c:	6318      	str	r0, [r3, #48]	; 0x30
 801015e:	f7ff ffcb 	bl	80100f8 <LCD_Color2Index>
 8010162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010166:	f7ff bfe7 	b.w	8010138 <LCD_SetColorIndex>
 801016a:	bd08      	pop	{r3, pc}
 801016c:	2000016c 	.word	0x2000016c

08010170 <LCD_SetBkColorIndex>:
 8010170:	4b04      	ldr	r3, [pc, #16]	; (8010184 <LCD_SetBkColorIndex+0x14>)
 8010172:	681b      	ldr	r3, [r3, #0]
 8010174:	7c1a      	ldrb	r2, [r3, #16]
 8010176:	0752      	lsls	r2, r2, #29
 8010178:	bf4c      	ite	mi
 801017a:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 801017c:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 801017e:	6018      	str	r0, [r3, #0]
 8010180:	4770      	bx	lr
 8010182:	bf00      	nop
 8010184:	2000016c 	.word	0x2000016c

08010188 <_SetBkColor>:
 8010188:	b508      	push	{r3, lr}
 801018a:	4b06      	ldr	r3, [pc, #24]	; (80101a4 <_SetBkColor+0x1c>)
 801018c:	681b      	ldr	r3, [r3, #0]
 801018e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8010190:	4281      	cmp	r1, r0
 8010192:	d006      	beq.n	80101a2 <_SetBkColor+0x1a>
 8010194:	6358      	str	r0, [r3, #52]	; 0x34
 8010196:	f7ff ffaf 	bl	80100f8 <LCD_Color2Index>
 801019a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801019e:	f7ff bfe7 	b.w	8010170 <LCD_SetBkColorIndex>
 80101a2:	bd08      	pop	{r3, pc}
 80101a4:	2000016c 	.word	0x2000016c

080101a8 <LCD_SetBkColor>:
 80101a8:	b508      	push	{r3, lr}
 80101aa:	4b02      	ldr	r3, [pc, #8]	; (80101b4 <LCD_SetBkColor+0xc>)
 80101ac:	681b      	ldr	r3, [r3, #0]
 80101ae:	685b      	ldr	r3, [r3, #4]
 80101b0:	4798      	blx	r3
 80101b2:	bd08      	pop	{r3, pc}
 80101b4:	20000140 	.word	0x20000140

080101b8 <LCD_SetColor>:
 80101b8:	b508      	push	{r3, lr}
 80101ba:	4b02      	ldr	r3, [pc, #8]	; (80101c4 <LCD_SetColor+0xc>)
 80101bc:	681b      	ldr	r3, [r3, #0]
 80101be:	681b      	ldr	r3, [r3, #0]
 80101c0:	4798      	blx	r3
 80101c2:	bd08      	pop	{r3, pc}
 80101c4:	20000140 	.word	0x20000140

080101c8 <GUI__memset16>:
 80101c8:	b570      	push	{r4, r5, r6, lr}
 80101ca:	0784      	lsls	r4, r0, #30
 80101cc:	d502      	bpl.n	80101d4 <GUI__memset16+0xc>
 80101ce:	8001      	strh	r1, [r0, #0]
 80101d0:	3a01      	subs	r2, #1
 80101d2:	3002      	adds	r0, #2
 80101d4:	0855      	lsrs	r5, r2, #1
 80101d6:	462b      	mov	r3, r5
 80101d8:	b305      	cbz	r5, 801021c <GUI__memset16+0x54>
 80101da:	2d03      	cmp	r5, #3
 80101dc:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 80101e0:	dc02      	bgt.n	80101e8 <GUI__memset16+0x20>
 80101e2:	4606      	mov	r6, r0
 80101e4:	461d      	mov	r5, r3
 80101e6:	e012      	b.n	801020e <GUI__memset16+0x46>
 80101e8:	4603      	mov	r3, r0
 80101ea:	462e      	mov	r6, r5
 80101ec:	3e04      	subs	r6, #4
 80101ee:	2e03      	cmp	r6, #3
 80101f0:	601c      	str	r4, [r3, #0]
 80101f2:	605c      	str	r4, [r3, #4]
 80101f4:	609c      	str	r4, [r3, #8]
 80101f6:	60dc      	str	r4, [r3, #12]
 80101f8:	f103 0310 	add.w	r3, r3, #16
 80101fc:	dcf6      	bgt.n	80101ec <GUI__memset16+0x24>
 80101fe:	3d04      	subs	r5, #4
 8010200:	08ab      	lsrs	r3, r5, #2
 8010202:	1c5e      	adds	r6, r3, #1
 8010204:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 8010208:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 801020c:	e7e9      	b.n	80101e2 <GUI__memset16+0x1a>
 801020e:	b11d      	cbz	r5, 8010218 <GUI__memset16+0x50>
 8010210:	f846 4b04 	str.w	r4, [r6], #4
 8010214:	3d01      	subs	r5, #1
 8010216:	e7fa      	b.n	801020e <GUI__memset16+0x46>
 8010218:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 801021c:	07d3      	lsls	r3, r2, #31
 801021e:	bf48      	it	mi
 8010220:	8001      	strhmi	r1, [r0, #0]
 8010222:	bd70      	pop	{r4, r5, r6, pc}

08010224 <GUI__memset>:
 8010224:	b570      	push	{r4, r5, r6, lr}
 8010226:	b12a      	cbz	r2, 8010234 <GUI__memset+0x10>
 8010228:	0783      	lsls	r3, r0, #30
 801022a:	d003      	beq.n	8010234 <GUI__memset+0x10>
 801022c:	f800 1b01 	strb.w	r1, [r0], #1
 8010230:	3a01      	subs	r2, #1
 8010232:	e7f8      	b.n	8010226 <GUI__memset+0x2>
 8010234:	0893      	lsrs	r3, r2, #2
 8010236:	d101      	bne.n	801023c <GUI__memset+0x18>
 8010238:	4402      	add	r2, r0
 801023a:	e017      	b.n	801026c <GUI__memset+0x48>
 801023c:	f04f 3401 	mov.w	r4, #16843009	; 0x1010101
 8010240:	f002 0203 	and.w	r2, r2, #3
 8010244:	434c      	muls	r4, r1
 8010246:	2b03      	cmp	r3, #3
 8010248:	4605      	mov	r5, r0
 801024a:	dd06      	ble.n	801025a <GUI__memset+0x36>
 801024c:	6004      	str	r4, [r0, #0]
 801024e:	6044      	str	r4, [r0, #4]
 8010250:	6084      	str	r4, [r0, #8]
 8010252:	60c4      	str	r4, [r0, #12]
 8010254:	3b04      	subs	r3, #4
 8010256:	3010      	adds	r0, #16
 8010258:	e7f5      	b.n	8010246 <GUI__memset+0x22>
 801025a:	461e      	mov	r6, r3
 801025c:	b11b      	cbz	r3, 8010266 <GUI__memset+0x42>
 801025e:	f845 4b04 	str.w	r4, [r5], #4
 8010262:	3b01      	subs	r3, #1
 8010264:	e7fa      	b.n	801025c <GUI__memset+0x38>
 8010266:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 801026a:	e7e5      	b.n	8010238 <GUI__memset+0x14>
 801026c:	4290      	cmp	r0, r2
 801026e:	d002      	beq.n	8010276 <GUI__memset+0x52>
 8010270:	f800 1b01 	strb.w	r1, [r0], #1
 8010274:	e7fa      	b.n	801026c <GUI__memset+0x48>
 8010276:	bd70      	pop	{r4, r5, r6, pc}

08010278 <GUI__SetText>:
 8010278:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801027a:	6807      	ldr	r7, [r0, #0]
 801027c:	4605      	mov	r5, r0
 801027e:	4638      	mov	r0, r7
 8010280:	460e      	mov	r6, r1
 8010282:	f007 fa2f 	bl	80176e4 <GUI__strcmp_hp>
 8010286:	b908      	cbnz	r0, 801028c <GUI__SetText+0x14>
 8010288:	2000      	movs	r0, #0
 801028a:	e02e      	b.n	80102ea <GUI__SetText+0x72>
 801028c:	4630      	mov	r0, r6
 801028e:	f007 fa09 	bl	80176a4 <GUI__strlen>
 8010292:	1c44      	adds	r4, r0, #1
 8010294:	4638      	mov	r0, r7
 8010296:	f002 fb99 	bl	80129cc <GUI_ALLOC_GetSize>
 801029a:	4284      	cmp	r4, r0
 801029c:	d10f      	bne.n	80102be <GUI__SetText+0x46>
 801029e:	2c00      	cmp	r4, #0
 80102a0:	d0f2      	beq.n	8010288 <GUI__SetText+0x10>
 80102a2:	4638      	mov	r0, r7
 80102a4:	f002 fb64 	bl	8012970 <GUI_ALLOC_LockH>
 80102a8:	ad02      	add	r5, sp, #8
 80102aa:	4631      	mov	r1, r6
 80102ac:	f845 0d04 	str.w	r0, [r5, #-4]!
 80102b0:	4622      	mov	r2, r4
 80102b2:	f00a f816 	bl	801a2e2 <memcpy>
 80102b6:	4628      	mov	r0, r5
 80102b8:	f002 fb68 	bl	801298c <GUI_ALLOC_UnlockH>
 80102bc:	e014      	b.n	80102e8 <GUI__SetText+0x70>
 80102be:	4620      	mov	r0, r4
 80102c0:	f002 fdaa 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 80102c4:	4607      	mov	r7, r0
 80102c6:	2800      	cmp	r0, #0
 80102c8:	d0de      	beq.n	8010288 <GUI__SetText+0x10>
 80102ca:	f002 fb51 	bl	8012970 <GUI_ALLOC_LockH>
 80102ce:	ac02      	add	r4, sp, #8
 80102d0:	4631      	mov	r1, r6
 80102d2:	f844 0d04 	str.w	r0, [r4, #-4]!
 80102d6:	f00a f851 	bl	801a37c <strcpy>
 80102da:	4620      	mov	r0, r4
 80102dc:	f002 fb56 	bl	801298c <GUI_ALLOC_UnlockH>
 80102e0:	4628      	mov	r0, r5
 80102e2:	f002 fd9d 	bl	8012e20 <GUI_ALLOC_FreePtr>
 80102e6:	602f      	str	r7, [r5, #0]
 80102e8:	2001      	movs	r0, #1
 80102ea:	b003      	add	sp, #12
 80102ec:	bdf0      	pop	{r4, r5, r6, r7, pc}

080102ee <GUI__ReduceRect>:
 80102ee:	880b      	ldrh	r3, [r1, #0]
 80102f0:	b292      	uxth	r2, r2
 80102f2:	4413      	add	r3, r2
 80102f4:	8003      	strh	r3, [r0, #0]
 80102f6:	888b      	ldrh	r3, [r1, #4]
 80102f8:	1a9b      	subs	r3, r3, r2
 80102fa:	8083      	strh	r3, [r0, #4]
 80102fc:	884b      	ldrh	r3, [r1, #2]
 80102fe:	4413      	add	r3, r2
 8010300:	8043      	strh	r3, [r0, #2]
 8010302:	88cb      	ldrh	r3, [r1, #6]
 8010304:	1a9a      	subs	r2, r3, r2
 8010306:	80c2      	strh	r2, [r0, #6]
 8010308:	4770      	bx	lr
	...

0801030c <GUI__ManageCacheEx>:
 801030c:	2801      	cmp	r0, #1
 801030e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010310:	4604      	mov	r4, r0
 8010312:	460d      	mov	r5, r1
 8010314:	dc65      	bgt.n	80103e2 <GUI__ManageCacheEx+0xd6>
 8010316:	4b34      	ldr	r3, [pc, #208]	; (80103e8 <GUI__ManageCacheEx+0xdc>)
 8010318:	681b      	ldr	r3, [r3, #0]
 801031a:	b103      	cbz	r3, 801031e <GUI__ManageCacheEx+0x12>
 801031c:	4798      	blx	r3
 801031e:	2d01      	cmp	r5, #1
 8010320:	d004      	beq.n	801032c <GUI__ManageCacheEx+0x20>
 8010322:	2d02      	cmp	r5, #2
 8010324:	d021      	beq.n	801036a <GUI__ManageCacheEx+0x5e>
 8010326:	2d00      	cmp	r5, #0
 8010328:	d15b      	bne.n	80103e2 <GUI__ManageCacheEx+0xd6>
 801032a:	e035      	b.n	8010398 <GUI__ManageCacheEx+0x8c>
 801032c:	4e2f      	ldr	r6, [pc, #188]	; (80103ec <GUI__ManageCacheEx+0xe0>)
 801032e:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 8010332:	b9b7      	cbnz	r7, 8010362 <GUI__ManageCacheEx+0x56>
 8010334:	4620      	mov	r0, r4
 8010336:	f001 fdc1 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 801033a:	9001      	str	r0, [sp, #4]
 801033c:	2800      	cmp	r0, #0
 801033e:	d050      	beq.n	80103e2 <GUI__ManageCacheEx+0xd6>
 8010340:	68c3      	ldr	r3, [r0, #12]
 8010342:	210d      	movs	r1, #13
 8010344:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010346:	a801      	add	r0, sp, #4
 8010348:	4798      	blx	r3
 801034a:	4603      	mov	r3, r0
 801034c:	2800      	cmp	r0, #0
 801034e:	d048      	beq.n	80103e2 <GUI__ManageCacheEx+0xd6>
 8010350:	9801      	ldr	r0, [sp, #4]
 8010352:	4629      	mov	r1, r5
 8010354:	4798      	blx	r3
 8010356:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 801035a:	3301      	adds	r3, #1
 801035c:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 8010360:	e018      	b.n	8010394 <GUI__ManageCacheEx+0x88>
 8010362:	3701      	adds	r7, #1
 8010364:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 8010368:	e03b      	b.n	80103e2 <GUI__ManageCacheEx+0xd6>
 801036a:	4620      	mov	r0, r4
 801036c:	f001 fda6 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 8010370:	9001      	str	r0, [sp, #4]
 8010372:	2800      	cmp	r0, #0
 8010374:	d035      	beq.n	80103e2 <GUI__ManageCacheEx+0xd6>
 8010376:	68c3      	ldr	r3, [r0, #12]
 8010378:	210d      	movs	r1, #13
 801037a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801037c:	a801      	add	r0, sp, #4
 801037e:	4798      	blx	r3
 8010380:	4604      	mov	r4, r0
 8010382:	2800      	cmp	r0, #0
 8010384:	d02d      	beq.n	80103e2 <GUI__ManageCacheEx+0xd6>
 8010386:	4b1a      	ldr	r3, [pc, #104]	; (80103f0 <GUI__ManageCacheEx+0xe4>)
 8010388:	681b      	ldr	r3, [r3, #0]
 801038a:	b103      	cbz	r3, 801038e <GUI__ManageCacheEx+0x82>
 801038c:	4798      	blx	r3
 801038e:	9801      	ldr	r0, [sp, #4]
 8010390:	2102      	movs	r1, #2
 8010392:	47a0      	blx	r4
 8010394:	2000      	movs	r0, #0
 8010396:	e025      	b.n	80103e4 <GUI__ManageCacheEx+0xd8>
 8010398:	4d14      	ldr	r5, [pc, #80]	; (80103ec <GUI__ManageCacheEx+0xe0>)
 801039a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 801039e:	2b01      	cmp	r3, #1
 80103a0:	d001      	beq.n	80103a6 <GUI__ManageCacheEx+0x9a>
 80103a2:	2001      	movs	r0, #1
 80103a4:	e015      	b.n	80103d2 <GUI__ManageCacheEx+0xc6>
 80103a6:	4620      	mov	r0, r4
 80103a8:	f001 fd88 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 80103ac:	9001      	str	r0, [sp, #4]
 80103ae:	2800      	cmp	r0, #0
 80103b0:	d0f7      	beq.n	80103a2 <GUI__ManageCacheEx+0x96>
 80103b2:	68c3      	ldr	r3, [r0, #12]
 80103b4:	210d      	movs	r1, #13
 80103b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80103b8:	a801      	add	r0, sp, #4
 80103ba:	4798      	blx	r3
 80103bc:	4606      	mov	r6, r0
 80103be:	2800      	cmp	r0, #0
 80103c0:	d0ef      	beq.n	80103a2 <GUI__ManageCacheEx+0x96>
 80103c2:	4b0b      	ldr	r3, [pc, #44]	; (80103f0 <GUI__ManageCacheEx+0xe4>)
 80103c4:	681b      	ldr	r3, [r3, #0]
 80103c6:	b103      	cbz	r3, 80103ca <GUI__ManageCacheEx+0xbe>
 80103c8:	4798      	blx	r3
 80103ca:	9801      	ldr	r0, [sp, #4]
 80103cc:	2100      	movs	r1, #0
 80103ce:	47b0      	blx	r6
 80103d0:	2000      	movs	r0, #0
 80103d2:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80103d6:	2b00      	cmp	r3, #0
 80103d8:	bf18      	it	ne
 80103da:	3b01      	subne	r3, #1
 80103dc:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 80103e0:	e000      	b.n	80103e4 <GUI__ManageCacheEx+0xd8>
 80103e2:	2001      	movs	r0, #1
 80103e4:	b003      	add	sp, #12
 80103e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103e8:	2001947c 	.word	0x2001947c
 80103ec:	20019474 	.word	0x20019474
 80103f0:	20019470 	.word	0x20019470

080103f4 <GUI__ManageCache>:
 80103f4:	4b02      	ldr	r3, [pc, #8]	; (8010400 <GUI__ManageCache+0xc>)
 80103f6:	681b      	ldr	r3, [r3, #0]
 80103f8:	4601      	mov	r1, r0
 80103fa:	7c58      	ldrb	r0, [r3, #17]
 80103fc:	f7ff bf86 	b.w	801030c <GUI__ManageCacheEx>
 8010400:	2000016c 	.word	0x2000016c

08010404 <GUI__IntersectRects>:
 8010404:	b570      	push	{r4, r5, r6, lr}
 8010406:	f9b2 3000 	ldrsh.w	r3, [r2]
 801040a:	f9b1 4000 	ldrsh.w	r4, [r1]
 801040e:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010412:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 8010416:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 801041a:	429c      	cmp	r4, r3
 801041c:	bfb8      	it	lt
 801041e:	461c      	movlt	r4, r3
 8010420:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8010424:	429d      	cmp	r5, r3
 8010426:	bfa8      	it	ge
 8010428:	462b      	movge	r3, r5
 801042a:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 801042e:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8010432:	42ae      	cmp	r6, r5
 8010434:	bfb8      	it	lt
 8010436:	4635      	movlt	r5, r6
 8010438:	b2a4      	uxth	r4, r4
 801043a:	b2ad      	uxth	r5, r5
 801043c:	4291      	cmp	r1, r2
 801043e:	bfb8      	it	lt
 8010440:	460a      	movlt	r2, r1
 8010442:	8004      	strh	r4, [r0, #0]
 8010444:	8085      	strh	r5, [r0, #4]
 8010446:	b224      	sxth	r4, r4
 8010448:	b22d      	sxth	r5, r5
 801044a:	b29b      	uxth	r3, r3
 801044c:	b292      	uxth	r2, r2
 801044e:	42a5      	cmp	r5, r4
 8010450:	8043      	strh	r3, [r0, #2]
 8010452:	80c2      	strh	r2, [r0, #6]
 8010454:	db06      	blt.n	8010464 <GUI__IntersectRects+0x60>
 8010456:	b210      	sxth	r0, r2
 8010458:	b21b      	sxth	r3, r3
 801045a:	4298      	cmp	r0, r3
 801045c:	bfb4      	ite	lt
 801045e:	2000      	movlt	r0, #0
 8010460:	2001      	movge	r0, #1
 8010462:	bd70      	pop	{r4, r5, r6, pc}
 8010464:	2000      	movs	r0, #0
 8010466:	bd70      	pop	{r4, r5, r6, pc}

08010468 <GUI__IntersectRect>:
 8010468:	880b      	ldrh	r3, [r1, #0]
 801046a:	b510      	push	{r4, lr}
 801046c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010470:	b21a      	sxth	r2, r3
 8010472:	4294      	cmp	r4, r2
 8010474:	bfb8      	it	lt
 8010476:	8003      	strhlt	r3, [r0, #0]
 8010478:	884b      	ldrh	r3, [r1, #2]
 801047a:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 801047e:	b21a      	sxth	r2, r3
 8010480:	4294      	cmp	r4, r2
 8010482:	bfb8      	it	lt
 8010484:	8043      	strhlt	r3, [r0, #2]
 8010486:	888b      	ldrh	r3, [r1, #4]
 8010488:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801048c:	b21a      	sxth	r2, r3
 801048e:	4294      	cmp	r4, r2
 8010490:	bfc8      	it	gt
 8010492:	8083      	strhgt	r3, [r0, #4]
 8010494:	88cb      	ldrh	r3, [r1, #6]
 8010496:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801049a:	b21a      	sxth	r2, r3
 801049c:	4291      	cmp	r1, r2
 801049e:	bfc8      	it	gt
 80104a0:	80c3      	strhgt	r3, [r0, #6]
 80104a2:	bd10      	pop	{r4, pc}

080104a4 <GUI__GetNumChars>:
 80104a4:	b513      	push	{r0, r1, r4, lr}
 80104a6:	9001      	str	r0, [sp, #4]
 80104a8:	b130      	cbz	r0, 80104b8 <GUI__GetNumChars+0x14>
 80104aa:	2400      	movs	r4, #0
 80104ac:	a801      	add	r0, sp, #4
 80104ae:	f000 fa83 	bl	80109b8 <GUI_UC__GetCharCodeInc>
 80104b2:	b110      	cbz	r0, 80104ba <GUI__GetNumChars+0x16>
 80104b4:	3401      	adds	r4, #1
 80104b6:	e7f9      	b.n	80104ac <GUI__GetNumChars+0x8>
 80104b8:	4604      	mov	r4, r0
 80104ba:	4620      	mov	r0, r4
 80104bc:	b002      	add	sp, #8
 80104be:	bd10      	pop	{r4, pc}

080104c0 <_GetCursorPosX>:
 80104c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80104c2:	4615      	mov	r5, r2
 80104c4:	9001      	str	r0, [sp, #4]
 80104c6:	2400      	movs	r4, #0
 80104c8:	b13d      	cbz	r5, 80104da <_GetCursorPosX+0x1a>
 80104ca:	a801      	add	r0, sp, #4
 80104cc:	f000 fa74 	bl	80109b8 <GUI_UC__GetCharCodeInc>
 80104d0:	f002 f93a 	bl	8012748 <GUI_GetCharDistX>
 80104d4:	3d01      	subs	r5, #1
 80104d6:	4404      	add	r4, r0
 80104d8:	e7f6      	b.n	80104c8 <_GetCursorPosX+0x8>
 80104da:	4620      	mov	r0, r4
 80104dc:	b003      	add	sp, #12
 80104de:	bd30      	pop	{r4, r5, pc}

080104e0 <_GetCursorCharacter>:
 80104e0:	b538      	push	{r3, r4, r5, lr}
 80104e2:	4604      	mov	r4, r0
 80104e4:	b10b      	cbz	r3, 80104ea <_GetCursorCharacter+0xa>
 80104e6:	2200      	movs	r2, #0
 80104e8:	601a      	str	r2, [r3, #0]
 80104ea:	460d      	mov	r5, r1
 80104ec:	b13d      	cbz	r5, 80104fe <_GetCursorCharacter+0x1e>
 80104ee:	4b06      	ldr	r3, [pc, #24]	; (8010508 <_GetCursorCharacter+0x28>)
 80104f0:	681b      	ldr	r3, [r3, #0]
 80104f2:	4620      	mov	r0, r4
 80104f4:	685b      	ldr	r3, [r3, #4]
 80104f6:	4798      	blx	r3
 80104f8:	3d01      	subs	r5, #1
 80104fa:	4404      	add	r4, r0
 80104fc:	e7f6      	b.n	80104ec <_GetCursorCharacter+0xc>
 80104fe:	4620      	mov	r0, r4
 8010500:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010504:	f000 ba40 	b.w	8010988 <GUI_UC_GetCharCode>
 8010508:	20019c94 	.word	0x20019c94

0801050c <_GetCursorPosChar>:
 801050c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010510:	4607      	mov	r7, r0
 8010512:	460d      	mov	r5, r1
 8010514:	4690      	mov	r8, r2
 8010516:	4604      	mov	r4, r0
 8010518:	2600      	movs	r6, #0
 801051a:	3d01      	subs	r5, #1
 801051c:	2d00      	cmp	r5, #0
 801051e:	dd09      	ble.n	8010534 <_GetCursorPosChar+0x28>
 8010520:	4620      	mov	r0, r4
 8010522:	f000 fa31 	bl	8010988 <GUI_UC_GetCharCode>
 8010526:	4681      	mov	r9, r0
 8010528:	f002 f90e 	bl	8012748 <GUI_GetCharDistX>
 801052c:	4406      	add	r6, r0
 801052e:	f1b9 0f00 	cmp.w	r9, #0
 8010532:	d105      	bne.n	8010540 <_GetCursorPosChar+0x34>
 8010534:	4638      	mov	r0, r7
 8010536:	1be1      	subs	r1, r4, r7
 8010538:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801053c:	f000 ba62 	b.w	8010a04 <GUI_UC__NumBytes2NumChars>
 8010540:	4546      	cmp	r6, r8
 8010542:	dcf7      	bgt.n	8010534 <_GetCursorPosChar+0x28>
 8010544:	4620      	mov	r0, r4
 8010546:	f000 fa17 	bl	8010978 <GUI_UC_GetCharSize>
 801054a:	4404      	add	r4, r0
 801054c:	e7e5      	b.n	801051a <_GetCursorPosChar+0xe>
	...

08010550 <GUI__GetCursorPosX>:
 8010550:	b510      	push	{r4, lr}
 8010552:	4b03      	ldr	r3, [pc, #12]	; (8010560 <GUI__GetCursorPosX+0x10>)
 8010554:	460c      	mov	r4, r1
 8010556:	681b      	ldr	r3, [r3, #0]
 8010558:	4611      	mov	r1, r2
 801055a:	4622      	mov	r2, r4
 801055c:	4798      	blx	r3
 801055e:	bd10      	pop	{r4, pc}
 8010560:	2000014c 	.word	0x2000014c

08010564 <GUI__GetCursorPosChar>:
 8010564:	b510      	push	{r4, lr}
 8010566:	4b03      	ldr	r3, [pc, #12]	; (8010574 <GUI__GetCursorPosChar+0x10>)
 8010568:	460c      	mov	r4, r1
 801056a:	681b      	ldr	r3, [r3, #0]
 801056c:	4611      	mov	r1, r2
 801056e:	4622      	mov	r2, r4
 8010570:	4798      	blx	r3
 8010572:	bd10      	pop	{r4, pc}
 8010574:	20000144 	.word	0x20000144

08010578 <GUI__GetCursorCharacter>:
 8010578:	b510      	push	{r4, lr}
 801057a:	4c02      	ldr	r4, [pc, #8]	; (8010584 <GUI__GetCursorCharacter+0xc>)
 801057c:	6824      	ldr	r4, [r4, #0]
 801057e:	47a0      	blx	r4
 8010580:	bd10      	pop	{r4, pc}
 8010582:	bf00      	nop
 8010584:	20000148 	.word	0x20000148

08010588 <GUI__CalcTextRect>:
 8010588:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801058c:	460c      	mov	r4, r1
 801058e:	4615      	mov	r5, r2
 8010590:	4698      	mov	r8, r3
 8010592:	2800      	cmp	r0, #0
 8010594:	d03b      	beq.n	801060e <GUI__CalcTextRect+0x86>
 8010596:	f001 fa57 	bl	8011a48 <GUI_GetStringDistX>
 801059a:	f008 0203 	and.w	r2, r8, #3
 801059e:	2a01      	cmp	r2, #1
 80105a0:	4607      	mov	r7, r0
 80105a2:	d00c      	beq.n	80105be <GUI__CalcTextRect+0x36>
 80105a4:	2a02      	cmp	r2, #2
 80105a6:	f9b4 6000 	ldrsh.w	r6, [r4]
 80105aa:	d10c      	bne.n	80105c6 <GUI__CalcTextRect+0x3e>
 80105ac:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80105b0:	1b9b      	subs	r3, r3, r6
 80105b2:	3301      	adds	r3, #1
 80105b4:	1a1b      	subs	r3, r3, r0
 80105b6:	fb93 f2f2 	sdiv	r2, r3, r2
 80105ba:	4416      	add	r6, r2
 80105bc:	e003      	b.n	80105c6 <GUI__CalcTextRect+0x3e>
 80105be:	f9b4 6004 	ldrsh.w	r6, [r4, #4]
 80105c2:	1a36      	subs	r6, r6, r0
 80105c4:	3601      	adds	r6, #1
 80105c6:	f008 080c 	and.w	r8, r8, #12
 80105ca:	f002 f8b5 	bl	8012738 <GUI_GetFontDistY>
 80105ce:	f1b8 0f04 	cmp.w	r8, #4
 80105d2:	d00e      	beq.n	80105f2 <GUI__CalcTextRect+0x6a>
 80105d4:	f1b8 0f0c 	cmp.w	r8, #12
 80105d8:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80105dc:	d10d      	bne.n	80105fa <GUI__CalcTextRect+0x72>
 80105de:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80105e2:	1ad2      	subs	r2, r2, r3
 80105e4:	3201      	adds	r2, #1
 80105e6:	1a12      	subs	r2, r2, r0
 80105e8:	2102      	movs	r1, #2
 80105ea:	fb92 f2f1 	sdiv	r2, r2, r1
 80105ee:	4413      	add	r3, r2
 80105f0:	e003      	b.n	80105fa <GUI__CalcTextRect+0x72>
 80105f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80105f6:	1a1b      	subs	r3, r3, r0
 80105f8:	3301      	adds	r3, #1
 80105fa:	3f01      	subs	r7, #1
 80105fc:	3801      	subs	r0, #1
 80105fe:	802e      	strh	r6, [r5, #0]
 8010600:	806b      	strh	r3, [r5, #2]
 8010602:	443e      	add	r6, r7
 8010604:	4403      	add	r3, r0
 8010606:	80ae      	strh	r6, [r5, #4]
 8010608:	80eb      	strh	r3, [r5, #6]
 801060a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801060e:	680b      	ldr	r3, [r1, #0]
 8010610:	6013      	str	r3, [r2, #0]
 8010612:	684b      	ldr	r3, [r1, #4]
 8010614:	6053      	str	r3, [r2, #4]
 8010616:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801061a <GUI__MixColors>:
 801061a:	f001 437f 	and.w	r3, r1, #4278190080	; 0xff000000
 801061e:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
 8010622:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010624:	d027      	beq.n	8010676 <GUI__MixColors+0x5c>
 8010626:	43d3      	mvns	r3, r2
 8010628:	b2db      	uxtb	r3, r3
 801062a:	b2cd      	uxtb	r5, r1
 801062c:	b2c6      	uxtb	r6, r0
 801062e:	435d      	muls	r5, r3
 8010630:	fb02 5506 	mla	r5, r2, r6, r5
 8010634:	f401 467f 	and.w	r6, r1, #65280	; 0xff00
 8010638:	f400 447f 	and.w	r4, r0, #65280	; 0xff00
 801063c:	435e      	muls	r6, r3
 801063e:	fb02 6604 	mla	r6, r2, r4, r6
 8010642:	f401 047f 	and.w	r4, r1, #16711680	; 0xff0000
 8010646:	f400 077f 	and.w	r7, r0, #16711680	; 0xff0000
 801064a:	435c      	muls	r4, r3
 801064c:	0e09      	lsrs	r1, r1, #24
 801064e:	0e00      	lsrs	r0, r0, #24
 8010650:	fb02 4407 	mla	r4, r2, r7, r4
 8010654:	434b      	muls	r3, r1
 8010656:	0a36      	lsrs	r6, r6, #8
 8010658:	fb02 3200 	mla	r2, r2, r0, r3
 801065c:	0a24      	lsrs	r4, r4, #8
 801065e:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8010662:	f406 407f 	and.w	r0, r6, #65280	; 0xff00
 8010666:	4318      	orrs	r0, r3
 8010668:	0412      	lsls	r2, r2, #16
 801066a:	f404 037f 	and.w	r3, r4, #16711680	; 0xff0000
 801066e:	4318      	orrs	r0, r3
 8010670:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8010674:	4310      	orrs	r0, r2
 8010676:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010678 <_OnExit>:
 8010678:	b570      	push	{r4, r5, r6, lr}
 801067a:	4c0a      	ldr	r4, [pc, #40]	; (80106a4 <_OnExit+0x2c>)
 801067c:	4d0a      	ldr	r5, [pc, #40]	; (80106a8 <_OnExit+0x30>)
 801067e:	6820      	ldr	r0, [r4, #0]
 8010680:	4e0a      	ldr	r6, [pc, #40]	; (80106ac <_OnExit+0x34>)
 8010682:	f002 f961 	bl	8012948 <GUI_ALLOC_FreeFixedBlock>
 8010686:	6828      	ldr	r0, [r5, #0]
 8010688:	f002 f95e 	bl	8012948 <GUI_ALLOC_FreeFixedBlock>
 801068c:	6830      	ldr	r0, [r6, #0]
 801068e:	f002 f95b 	bl	8012948 <GUI_ALLOC_FreeFixedBlock>
 8010692:	4a07      	ldr	r2, [pc, #28]	; (80106b0 <_OnExit+0x38>)
 8010694:	2300      	movs	r3, #0
 8010696:	6013      	str	r3, [r2, #0]
 8010698:	4a06      	ldr	r2, [pc, #24]	; (80106b4 <_OnExit+0x3c>)
 801069a:	6033      	str	r3, [r6, #0]
 801069c:	602b      	str	r3, [r5, #0]
 801069e:	6023      	str	r3, [r4, #0]
 80106a0:	6013      	str	r3, [r2, #0]
 80106a2:	bd70      	pop	{r4, r5, r6, pc}
 80106a4:	20019484 	.word	0x20019484
 80106a8:	20019480 	.word	0x20019480
 80106ac:	20019488 	.word	0x20019488
 80106b0:	2001948c 	.word	0x2001948c
 80106b4:	2001949c 	.word	0x2001949c

080106b8 <GUI__GetAlphaBuffer>:
 80106b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80106bc:	461c      	mov	r4, r3
 80106be:	4b28      	ldr	r3, [pc, #160]	; (8010760 <GUI__GetAlphaBuffer+0xa8>)
 80106c0:	4617      	mov	r7, r2
 80106c2:	681a      	ldr	r2, [r3, #0]
 80106c4:	4606      	mov	r6, r0
 80106c6:	4688      	mov	r8, r1
 80106c8:	b932      	cbnz	r2, 80106d8 <GUI__GetAlphaBuffer+0x20>
 80106ca:	2201      	movs	r2, #1
 80106cc:	4825      	ldr	r0, [pc, #148]	; (8010764 <GUI__GetAlphaBuffer+0xac>)
 80106ce:	601a      	str	r2, [r3, #0]
 80106d0:	4b25      	ldr	r3, [pc, #148]	; (8010768 <GUI__GetAlphaBuffer+0xb0>)
 80106d2:	6003      	str	r3, [r0, #0]
 80106d4:	f001 fd2c 	bl	8012130 <GUI__RegisterExit>
 80106d8:	4d24      	ldr	r5, [pc, #144]	; (801076c <GUI__GetAlphaBuffer+0xb4>)
 80106da:	682b      	ldr	r3, [r5, #0]
 80106dc:	b933      	cbnz	r3, 80106ec <GUI__GetAlphaBuffer+0x34>
 80106de:	4b24      	ldr	r3, [pc, #144]	; (8010770 <GUI__GetAlphaBuffer+0xb8>)
 80106e0:	681b      	ldr	r3, [r3, #0]
 80106e2:	602b      	str	r3, [r5, #0]
 80106e4:	b913      	cbnz	r3, 80106ec <GUI__GetAlphaBuffer+0x34>
 80106e6:	f7ff f993 	bl	800fa10 <LCD_GetVXSizeMax>
 80106ea:	6028      	str	r0, [r5, #0]
 80106ec:	b10c      	cbz	r4, 80106f2 <GUI__GetAlphaBuffer+0x3a>
 80106ee:	682b      	ldr	r3, [r5, #0]
 80106f0:	6023      	str	r3, [r4, #0]
 80106f2:	b196      	cbz	r6, 801071a <GUI__GetAlphaBuffer+0x62>
 80106f4:	4b1f      	ldr	r3, [pc, #124]	; (8010774 <GUI__GetAlphaBuffer+0xbc>)
 80106f6:	681a      	ldr	r2, [r3, #0]
 80106f8:	4699      	mov	r9, r3
 80106fa:	2400      	movs	r4, #0
 80106fc:	b94a      	cbnz	r2, 8010712 <GUI__GetAlphaBuffer+0x5a>
 80106fe:	6828      	ldr	r0, [r5, #0]
 8010700:	0080      	lsls	r0, r0, #2
 8010702:	f002 fa8d 	bl	8012c20 <GUI_ALLOC_GetFixedBlock>
 8010706:	f1d0 0401 	rsbs	r4, r0, #1
 801070a:	f8c9 0000 	str.w	r0, [r9]
 801070e:	bf38      	it	cc
 8010710:	2400      	movcc	r4, #0
 8010712:	f8d9 3000 	ldr.w	r3, [r9]
 8010716:	6033      	str	r3, [r6, #0]
 8010718:	e000      	b.n	801071c <GUI__GetAlphaBuffer+0x64>
 801071a:	4634      	mov	r4, r6
 801071c:	f1b8 0f00 	cmp.w	r8, #0
 8010720:	d00d      	beq.n	801073e <GUI__GetAlphaBuffer+0x86>
 8010722:	4e15      	ldr	r6, [pc, #84]	; (8010778 <GUI__GetAlphaBuffer+0xc0>)
 8010724:	6833      	ldr	r3, [r6, #0]
 8010726:	b93b      	cbnz	r3, 8010738 <GUI__GetAlphaBuffer+0x80>
 8010728:	6828      	ldr	r0, [r5, #0]
 801072a:	0080      	lsls	r0, r0, #2
 801072c:	f002 fa78 	bl	8012c20 <GUI_ALLOC_GetFixedBlock>
 8010730:	2800      	cmp	r0, #0
 8010732:	6030      	str	r0, [r6, #0]
 8010734:	bf08      	it	eq
 8010736:	2401      	moveq	r4, #1
 8010738:	6833      	ldr	r3, [r6, #0]
 801073a:	f8c8 3000 	str.w	r3, [r8]
 801073e:	b167      	cbz	r7, 801075a <GUI__GetAlphaBuffer+0xa2>
 8010740:	4e0e      	ldr	r6, [pc, #56]	; (801077c <GUI__GetAlphaBuffer+0xc4>)
 8010742:	6833      	ldr	r3, [r6, #0]
 8010744:	b93b      	cbnz	r3, 8010756 <GUI__GetAlphaBuffer+0x9e>
 8010746:	6828      	ldr	r0, [r5, #0]
 8010748:	0080      	lsls	r0, r0, #2
 801074a:	f002 fa69 	bl	8012c20 <GUI_ALLOC_GetFixedBlock>
 801074e:	2800      	cmp	r0, #0
 8010750:	6030      	str	r0, [r6, #0]
 8010752:	bf08      	it	eq
 8010754:	2401      	moveq	r4, #1
 8010756:	6833      	ldr	r3, [r6, #0]
 8010758:	603b      	str	r3, [r7, #0]
 801075a:	4620      	mov	r0, r4
 801075c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010760:	2001949c 	.word	0x2001949c
 8010764:	20019494 	.word	0x20019494
 8010768:	08010679 	.word	0x08010679
 801076c:	2001948c 	.word	0x2001948c
 8010770:	20019ca4 	.word	0x20019ca4
 8010774:	20019484 	.word	0x20019484
 8010778:	20019480 	.word	0x20019480
 801077c:	20019488 	.word	0x20019488

08010780 <GUI__DoAlphaBlending>:
 8010780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010784:	b093      	sub	sp, #76	; 0x4c
 8010786:	2400      	movs	r4, #0
 8010788:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801078a:	900b      	str	r0, [sp, #44]	; 0x2c
 801078c:	910c      	str	r1, [sp, #48]	; 0x30
 801078e:	4690      	mov	r8, r2
 8010790:	461f      	mov	r7, r3
 8010792:	6034      	str	r4, [r6, #0]
 8010794:	a80f      	add	r0, sp, #60	; 0x3c
 8010796:	a910      	add	r1, sp, #64	; 0x40
 8010798:	4622      	mov	r2, r4
 801079a:	ab11      	add	r3, sp, #68	; 0x44
 801079c:	f7ff ff8c 	bl	80106b8 <GUI__GetAlphaBuffer>
 80107a0:	4605      	mov	r5, r0
 80107a2:	2800      	cmp	r0, #0
 80107a4:	f040 80c3 	bne.w	801092e <GUI__DoAlphaBlending+0x1ae>
 80107a8:	4c63      	ldr	r4, [pc, #396]	; (8010938 <GUI__DoAlphaBlending+0x1b8>)
 80107aa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80107ac:	6823      	ldr	r3, [r4, #0]
 80107ae:	7c58      	ldrb	r0, [r3, #17]
 80107b0:	4b62      	ldr	r3, [pc, #392]	; (801093c <GUI__DoAlphaBlending+0x1bc>)
 80107b2:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80107b6:	9307      	str	r3, [sp, #28]
 80107b8:	4297      	cmp	r7, r2
 80107ba:	bfa8      	it	ge
 80107bc:	4617      	movge	r7, r2
 80107be:	691a      	ldr	r2, [r3, #16]
 80107c0:	920d      	str	r2, [sp, #52]	; 0x34
 80107c2:	970a      	str	r7, [sp, #40]	; 0x28
 80107c4:	f7ff f8f0 	bl	800f9a8 <GUI_GetBitsPerPixelEx>
 80107c8:	6823      	ldr	r3, [r4, #0]
 80107ca:	9008      	str	r0, [sp, #32]
 80107cc:	7c58      	ldrb	r0, [r3, #17]
 80107ce:	f7ff f909 	bl	800f9e4 <GUI_GetpfIndex2ColorEx>
 80107d2:	4b5b      	ldr	r3, [pc, #364]	; (8010940 <GUI__DoAlphaBlending+0x1c0>)
 80107d4:	9004      	str	r0, [sp, #16]
 80107d6:	4298      	cmp	r0, r3
 80107d8:	d005      	beq.n	80107e6 <GUI__DoAlphaBlending+0x66>
 80107da:	4b5a      	ldr	r3, [pc, #360]	; (8010944 <GUI__DoAlphaBlending+0x1c4>)
 80107dc:	1ac3      	subs	r3, r0, r3
 80107de:	bf18      	it	ne
 80107e0:	2301      	movne	r3, #1
 80107e2:	9306      	str	r3, [sp, #24]
 80107e4:	e000      	b.n	80107e8 <GUI__DoAlphaBlending+0x68>
 80107e6:	9506      	str	r5, [sp, #24]
 80107e8:	2500      	movs	r5, #0
 80107ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80107ec:	46ab      	mov	fp, r5
 80107ee:	4643      	mov	r3, r8
 80107f0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80107f2:	f853 0b04 	ldr.w	r0, [r3], #4
 80107f6:	9305      	str	r3, [sp, #20]
 80107f8:	4790      	blx	r2
 80107fa:	0e03      	lsrs	r3, r0, #24
 80107fc:	4681      	mov	r9, r0
 80107fe:	9309      	str	r3, [sp, #36]	; 0x24
 8010800:	f000 8085 	beq.w	801090e <GUI__DoAlphaBlending+0x18e>
 8010804:	f1bb 0f00 	cmp.w	fp, #0
 8010808:	d13f      	bne.n	801088a <GUI__DoAlphaBlending+0x10a>
 801080a:	4b4b      	ldr	r3, [pc, #300]	; (8010938 <GUI__DoAlphaBlending+0x1b8>)
 801080c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801080e:	681b      	ldr	r3, [r3, #0]
 8010810:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010812:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8010816:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 801081a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801081c:	442f      	add	r7, r5
 801081e:	42bb      	cmp	r3, r7
 8010820:	bfc8      	it	gt
 8010822:	ebc7 0b03 	rsbgt	fp, r7, r3
 8010826:	eb0b 0a05 	add.w	sl, fp, r5
 801082a:	bfc8      	it	gt
 801082c:	461f      	movgt	r7, r3
 801082e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010830:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8010834:	4453      	add	r3, sl
 8010836:	4494      	add	ip, r2
 8010838:	9300      	str	r3, [sp, #0]
 801083a:	9b07      	ldr	r3, [sp, #28]
 801083c:	9301      	str	r3, [sp, #4]
 801083e:	f10c 32ff 	add.w	r2, ip, #4294967295
 8010842:	4638      	mov	r0, r7
 8010844:	460b      	mov	r3, r1
 8010846:	f8cd c00c 	str.w	ip, [sp, #12]
 801084a:	f006 fce7 	bl	801721c <GUI_ReadRectEx>
 801084e:	9a08      	ldr	r2, [sp, #32]
 8010850:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010852:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8010856:	2a17      	cmp	r2, #23
 8010858:	dc06      	bgt.n	8010868 <GUI__DoAlphaBlending+0xe8>
 801085a:	4450      	add	r0, sl
 801085c:	ebcb 0104 	rsb	r1, fp, r4
 8010860:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010862:	f006 fff3 	bl	801784c <GUI__ExpandPixelIndicesEx>
 8010866:	e001      	b.n	801086c <GUI__DoAlphaBlending+0xec>
 8010868:	9b06      	ldr	r3, [sp, #24]
 801086a:	b913      	cbnz	r3, 8010872 <GUI__DoAlphaBlending+0xf2>
 801086c:	f04f 0b01 	mov.w	fp, #1
 8010870:	e00b      	b.n	801088a <GUI__DoAlphaBlending+0x10a>
 8010872:	ebc7 070c 	rsb	r7, r7, ip
 8010876:	4482      	add	sl, r0
 8010878:	f8da 0000 	ldr.w	r0, [sl]
 801087c:	9a04      	ldr	r2, [sp, #16]
 801087e:	4790      	blx	r2
 8010880:	3f01      	subs	r7, #1
 8010882:	f84a 0b04 	str.w	r0, [sl], #4
 8010886:	d1f7      	bne.n	8010878 <GUI__DoAlphaBlending+0xf8>
 8010888:	e7f0      	b.n	801086c <GUI__DoAlphaBlending+0xec>
 801088a:	4b2f      	ldr	r3, [pc, #188]	; (8010948 <GUI__DoAlphaBlending+0x1c8>)
 801088c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801088e:	f8d3 c000 	ldr.w	ip, [r3]
 8010892:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8010894:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 8010898:	f1bc 0f00 	cmp.w	ip, #0
 801089c:	d024      	beq.n	80108e8 <GUI__DoAlphaBlending+0x168>
 801089e:	eb07 020a 	add.w	r2, r7, sl
 80108a2:	4451      	add	r1, sl
 80108a4:	9210      	str	r2, [sp, #64]	; 0x40
 80108a6:	4623      	mov	r3, r4
 80108a8:	910f      	str	r1, [sp, #60]	; 0x3c
 80108aa:	4640      	mov	r0, r8
 80108ac:	47e0      	blx	ip
 80108ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80108b0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80108b2:	2300      	movs	r3, #0
 80108b4:	f858 1003 	ldr.w	r1, [r8, r3]
 80108b8:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 80108bc:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 80108c0:	58e8      	ldr	r0, [r5, r3]
 80108c2:	d101      	bne.n	80108c8 <GUI__DoAlphaBlending+0x148>
 80108c4:	50d0      	str	r0, [r2, r3]
 80108c6:	e005      	b.n	80108d4 <GUI__DoAlphaBlending+0x154>
 80108c8:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 80108cc:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 80108d0:	bf08      	it	eq
 80108d2:	50d1      	streq	r1, [r2, r3]
 80108d4:	3c01      	subs	r4, #1
 80108d6:	f103 0304 	add.w	r3, r3, #4
 80108da:	d1eb      	bne.n	80108b4 <GUI__DoAlphaBlending+0x134>
 80108dc:	6833      	ldr	r3, [r6, #0]
 80108de:	9710      	str	r7, [sp, #64]	; 0x40
 80108e0:	f043 0301 	orr.w	r3, r3, #1
 80108e4:	6033      	str	r3, [r6, #0]
 80108e6:	e020      	b.n	801092a <GUI__DoAlphaBlending+0x1aa>
 80108e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80108ea:	2bff      	cmp	r3, #255	; 0xff
 80108ec:	d104      	bne.n	80108f8 <GUI__DoAlphaBlending+0x178>
 80108ee:	f851 300a 	ldr.w	r3, [r1, sl]
 80108f2:	f847 300a 	str.w	r3, [r7, sl]
 80108f6:	e011      	b.n	801091c <GUI__DoAlphaBlending+0x19c>
 80108f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80108fa:	f851 100a 	ldr.w	r1, [r1, sl]
 80108fe:	43da      	mvns	r2, r3
 8010900:	4648      	mov	r0, r9
 8010902:	b2d2      	uxtb	r2, r2
 8010904:	f7ff fe89 	bl	801061a <GUI__MixColors>
 8010908:	f847 000a 	str.w	r0, [r7, sl]
 801090c:	e002      	b.n	8010914 <GUI__DoAlphaBlending+0x194>
 801090e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010910:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 8010914:	6833      	ldr	r3, [r6, #0]
 8010916:	f043 0301 	orr.w	r3, r3, #1
 801091a:	6033      	str	r3, [r6, #0]
 801091c:	3c01      	subs	r4, #1
 801091e:	f105 0501 	add.w	r5, r5, #1
 8010922:	d002      	beq.n	801092a <GUI__DoAlphaBlending+0x1aa>
 8010924:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8010928:	e761      	b.n	80107ee <GUI__DoAlphaBlending+0x6e>
 801092a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801092c:	e000      	b.n	8010930 <GUI__DoAlphaBlending+0x1b0>
 801092e:	4620      	mov	r0, r4
 8010930:	b013      	add	sp, #76	; 0x4c
 8010932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010936:	bf00      	nop
 8010938:	2000016c 	.word	0x2000016c
 801093c:	20019c9c 	.word	0x20019c9c
 8010940:	08012fb3 	.word	0x08012fb3
 8010944:	08012fb1 	.word	0x08012fb1
 8010948:	20019490 	.word	0x20019490

0801094c <GUI__AllocAlphaBuffer>:
 801094c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801094e:	b108      	cbz	r0, 8010954 <GUI__AllocAlphaBuffer+0x8>
 8010950:	aa03      	add	r2, sp, #12
 8010952:	e000      	b.n	8010956 <GUI__AllocAlphaBuffer+0xa>
 8010954:	4602      	mov	r2, r0
 8010956:	a801      	add	r0, sp, #4
 8010958:	a902      	add	r1, sp, #8
 801095a:	2300      	movs	r3, #0
 801095c:	f7ff feac 	bl	80106b8 <GUI__GetAlphaBuffer>
 8010960:	b005      	add	sp, #20
 8010962:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08010968 <GUI_SignalEvent>:
 8010968:	b508      	push	{r3, lr}
 801096a:	4b02      	ldr	r3, [pc, #8]	; (8010974 <GUI_SignalEvent+0xc>)
 801096c:	681b      	ldr	r3, [r3, #0]
 801096e:	b103      	cbz	r3, 8010972 <GUI_SignalEvent+0xa>
 8010970:	4798      	blx	r3
 8010972:	bd08      	pop	{r3, pc}
 8010974:	200194a0 	.word	0x200194a0

08010978 <GUI_UC_GetCharSize>:
 8010978:	b508      	push	{r3, lr}
 801097a:	4b02      	ldr	r3, [pc, #8]	; (8010984 <GUI_UC_GetCharSize+0xc>)
 801097c:	681b      	ldr	r3, [r3, #0]
 801097e:	685b      	ldr	r3, [r3, #4]
 8010980:	4798      	blx	r3
 8010982:	bd08      	pop	{r3, pc}
 8010984:	20019c94 	.word	0x20019c94

08010988 <GUI_UC_GetCharCode>:
 8010988:	b508      	push	{r3, lr}
 801098a:	4b02      	ldr	r3, [pc, #8]	; (8010994 <GUI_UC_GetCharCode+0xc>)
 801098c:	681b      	ldr	r3, [r3, #0]
 801098e:	681b      	ldr	r3, [r3, #0]
 8010990:	4798      	blx	r3
 8010992:	bd08      	pop	{r3, pc}
 8010994:	20019c94 	.word	0x20019c94

08010998 <GUI_UC_Encode>:
 8010998:	b508      	push	{r3, lr}
 801099a:	4b02      	ldr	r3, [pc, #8]	; (80109a4 <GUI_UC_Encode+0xc>)
 801099c:	681b      	ldr	r3, [r3, #0]
 801099e:	68db      	ldr	r3, [r3, #12]
 80109a0:	4798      	blx	r3
 80109a2:	bd08      	pop	{r3, pc}
 80109a4:	20019c94 	.word	0x20019c94

080109a8 <GUI_UC__CalcSizeOfChar>:
 80109a8:	b508      	push	{r3, lr}
 80109aa:	4b02      	ldr	r3, [pc, #8]	; (80109b4 <GUI_UC__CalcSizeOfChar+0xc>)
 80109ac:	681b      	ldr	r3, [r3, #0]
 80109ae:	689b      	ldr	r3, [r3, #8]
 80109b0:	4798      	blx	r3
 80109b2:	bd08      	pop	{r3, pc}
 80109b4:	20019c94 	.word	0x20019c94

080109b8 <GUI_UC__GetCharCodeInc>:
 80109b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80109ba:	4e08      	ldr	r6, [pc, #32]	; (80109dc <GUI_UC__GetCharCodeInc+0x24>)
 80109bc:	6804      	ldr	r4, [r0, #0]
 80109be:	6833      	ldr	r3, [r6, #0]
 80109c0:	4605      	mov	r5, r0
 80109c2:	681b      	ldr	r3, [r3, #0]
 80109c4:	4620      	mov	r0, r4
 80109c6:	4798      	blx	r3
 80109c8:	6833      	ldr	r3, [r6, #0]
 80109ca:	4607      	mov	r7, r0
 80109cc:	685b      	ldr	r3, [r3, #4]
 80109ce:	4620      	mov	r0, r4
 80109d0:	4798      	blx	r3
 80109d2:	4420      	add	r0, r4
 80109d4:	6028      	str	r0, [r5, #0]
 80109d6:	4638      	mov	r0, r7
 80109d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80109da:	bf00      	nop
 80109dc:	20019c94 	.word	0x20019c94

080109e0 <GUI_UC__NumChars2NumBytes>:
 80109e0:	b570      	push	{r4, r5, r6, lr}
 80109e2:	4604      	mov	r4, r0
 80109e4:	460e      	mov	r6, r1
 80109e6:	2500      	movs	r5, #0
 80109e8:	b146      	cbz	r6, 80109fc <GUI_UC__NumChars2NumBytes+0x1c>
 80109ea:	4b05      	ldr	r3, [pc, #20]	; (8010a00 <GUI_UC__NumChars2NumBytes+0x20>)
 80109ec:	681b      	ldr	r3, [r3, #0]
 80109ee:	4620      	mov	r0, r4
 80109f0:	685b      	ldr	r3, [r3, #4]
 80109f2:	4798      	blx	r3
 80109f4:	3e01      	subs	r6, #1
 80109f6:	4404      	add	r4, r0
 80109f8:	4405      	add	r5, r0
 80109fa:	e7f5      	b.n	80109e8 <GUI_UC__NumChars2NumBytes+0x8>
 80109fc:	4628      	mov	r0, r5
 80109fe:	bd70      	pop	{r4, r5, r6, pc}
 8010a00:	20019c94 	.word	0x20019c94

08010a04 <GUI_UC__NumBytes2NumChars>:
 8010a04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a06:	2400      	movs	r4, #0
 8010a08:	4606      	mov	r6, r0
 8010a0a:	460f      	mov	r7, r1
 8010a0c:	4625      	mov	r5, r4
 8010a0e:	42a7      	cmp	r7, r4
 8010a10:	dd07      	ble.n	8010a22 <GUI_UC__NumBytes2NumChars+0x1e>
 8010a12:	4b05      	ldr	r3, [pc, #20]	; (8010a28 <GUI_UC__NumBytes2NumChars+0x24>)
 8010a14:	681b      	ldr	r3, [r3, #0]
 8010a16:	1930      	adds	r0, r6, r4
 8010a18:	685b      	ldr	r3, [r3, #4]
 8010a1a:	4798      	blx	r3
 8010a1c:	3501      	adds	r5, #1
 8010a1e:	4404      	add	r4, r0
 8010a20:	e7f5      	b.n	8010a0e <GUI_UC__NumBytes2NumChars+0xa>
 8010a22:	4628      	mov	r0, r5
 8010a24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010a26:	bf00      	nop
 8010a28:	20019c94 	.word	0x20019c94

08010a2c <_OnExit>:
 8010a2c:	4a03      	ldr	r2, [pc, #12]	; (8010a3c <_OnExit+0x10>)
 8010a2e:	2300      	movs	r3, #0
 8010a30:	6013      	str	r3, [r2, #0]
 8010a32:	4a03      	ldr	r2, [pc, #12]	; (8010a40 <_OnExit+0x14>)
 8010a34:	6013      	str	r3, [r2, #0]
 8010a36:	4a03      	ldr	r2, [pc, #12]	; (8010a44 <_OnExit+0x18>)
 8010a38:	6013      	str	r3, [r2, #0]
 8010a3a:	4770      	bx	lr
 8010a3c:	200194a4 	.word	0x200194a4
 8010a40:	200194a8 	.word	0x200194a8
 8010a44:	200194b4 	.word	0x200194b4

08010a48 <GUI_TIMER_Exec>:
 8010a48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a4c:	4b19      	ldr	r3, [pc, #100]	; (8010ab4 <GUI_TIMER_Exec+0x6c>)
 8010a4e:	681f      	ldr	r7, [r3, #0]
 8010a50:	b085      	sub	sp, #20
 8010a52:	2500      	movs	r5, #0
 8010a54:	4698      	mov	r8, r3
 8010a56:	f8d8 3000 	ldr.w	r3, [r8]
 8010a5a:	4c16      	ldr	r4, [pc, #88]	; (8010ab4 <GUI_TIMER_Exec+0x6c>)
 8010a5c:	b333      	cbz	r3, 8010aac <GUI_TIMER_Exec+0x64>
 8010a5e:	f000 f991 	bl	8010d84 <GUI_GetTime>
 8010a62:	4606      	mov	r6, r0
 8010a64:	6820      	ldr	r0, [r4, #0]
 8010a66:	f001 ff83 	bl	8012970 <GUI_ALLOC_LockH>
 8010a6a:	4603      	mov	r3, r0
 8010a6c:	a804      	add	r0, sp, #16
 8010a6e:	6959      	ldr	r1, [r3, #20]
 8010a70:	f840 3d10 	str.w	r3, [r0, #-16]!
 8010a74:	1b89      	subs	r1, r1, r6
 8010a76:	2900      	cmp	r1, #0
 8010a78:	dc13      	bgt.n	8010aa2 <GUI_TIMER_Exec+0x5a>
 8010a7a:	6821      	ldr	r1, [r4, #0]
 8010a7c:	9103      	str	r1, [sp, #12]
 8010a7e:	9601      	str	r6, [sp, #4]
 8010a80:	6919      	ldr	r1, [r3, #16]
 8010a82:	685e      	ldr	r6, [r3, #4]
 8010a84:	9102      	str	r1, [sp, #8]
 8010a86:	4668      	mov	r0, sp
 8010a88:	6026      	str	r6, [r4, #0]
 8010a8a:	f8d3 9000 	ldr.w	r9, [r3]
 8010a8e:	f001 ff7d 	bl	801298c <GUI_ALLOC_UnlockH>
 8010a92:	a801      	add	r0, sp, #4
 8010a94:	47c8      	blx	r9
 8010a96:	b14e      	cbz	r6, 8010aac <GUI_TIMER_Exec+0x64>
 8010a98:	6823      	ldr	r3, [r4, #0]
 8010a9a:	42bb      	cmp	r3, r7
 8010a9c:	d005      	beq.n	8010aaa <GUI_TIMER_Exec+0x62>
 8010a9e:	2501      	movs	r5, #1
 8010aa0:	e7d9      	b.n	8010a56 <GUI_TIMER_Exec+0xe>
 8010aa2:	4668      	mov	r0, sp
 8010aa4:	f001 ff72 	bl	801298c <GUI_ALLOC_UnlockH>
 8010aa8:	e000      	b.n	8010aac <GUI_TIMER_Exec+0x64>
 8010aaa:	2500      	movs	r5, #0
 8010aac:	4628      	mov	r0, r5
 8010aae:	b005      	add	sp, #20
 8010ab0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010ab4:	200194a8 	.word	0x200194a8

08010ab8 <_Link>:
 8010ab8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010aba:	4c25      	ldr	r4, [pc, #148]	; (8010b50 <_Link+0x98>)
 8010abc:	b085      	sub	sp, #20
 8010abe:	4605      	mov	r5, r0
 8010ac0:	f001 ff56 	bl	8012970 <GUI_ALLOC_LockH>
 8010ac4:	6823      	ldr	r3, [r4, #0]
 8010ac6:	9001      	str	r0, [sp, #4]
 8010ac8:	b913      	cbnz	r3, 8010ad0 <_Link+0x18>
 8010aca:	6025      	str	r5, [r4, #0]
 8010acc:	6043      	str	r3, [r0, #4]
 8010ace:	e039      	b.n	8010b44 <_Link+0x8c>
 8010ad0:	4618      	mov	r0, r3
 8010ad2:	f001 ff4d 	bl	8012970 <GUI_ALLOC_LockH>
 8010ad6:	ab04      	add	r3, sp, #16
 8010ad8:	6946      	ldr	r6, [r0, #20]
 8010ada:	f843 0d10 	str.w	r0, [r3, #-16]!
 8010ade:	4668      	mov	r0, sp
 8010ae0:	f001 ff54 	bl	801298c <GUI_ALLOC_UnlockH>
 8010ae4:	9b01      	ldr	r3, [sp, #4]
 8010ae6:	695a      	ldr	r2, [r3, #20]
 8010ae8:	1b92      	subs	r2, r2, r6
 8010aea:	2a00      	cmp	r2, #0
 8010aec:	dc03      	bgt.n	8010af6 <_Link+0x3e>
 8010aee:	6822      	ldr	r2, [r4, #0]
 8010af0:	605a      	str	r2, [r3, #4]
 8010af2:	6025      	str	r5, [r4, #0]
 8010af4:	e026      	b.n	8010b44 <_Link+0x8c>
 8010af6:	6826      	ldr	r6, [r4, #0]
 8010af8:	4630      	mov	r0, r6
 8010afa:	f001 ff39 	bl	8012970 <GUI_ALLOC_LockH>
 8010afe:	ac04      	add	r4, sp, #16
 8010b00:	6846      	ldr	r6, [r0, #4]
 8010b02:	f844 0d08 	str.w	r0, [r4, #-8]!
 8010b06:	b1be      	cbz	r6, 8010b38 <_Link+0x80>
 8010b08:	4630      	mov	r0, r6
 8010b0a:	f001 ff31 	bl	8012970 <GUI_ALLOC_LockH>
 8010b0e:	ab04      	add	r3, sp, #16
 8010b10:	6947      	ldr	r7, [r0, #20]
 8010b12:	f843 0d04 	str.w	r0, [r3, #-4]!
 8010b16:	4618      	mov	r0, r3
 8010b18:	f001 ff38 	bl	801298c <GUI_ALLOC_UnlockH>
 8010b1c:	9a01      	ldr	r2, [sp, #4]
 8010b1e:	6953      	ldr	r3, [r2, #20]
 8010b20:	1bdb      	subs	r3, r3, r7
 8010b22:	2b00      	cmp	r3, #0
 8010b24:	9b02      	ldr	r3, [sp, #8]
 8010b26:	dc02      	bgt.n	8010b2e <_Link+0x76>
 8010b28:	6056      	str	r6, [r2, #4]
 8010b2a:	605d      	str	r5, [r3, #4]
 8010b2c:	e007      	b.n	8010b3e <_Link+0x86>
 8010b2e:	4620      	mov	r0, r4
 8010b30:	685e      	ldr	r6, [r3, #4]
 8010b32:	f001 ff2b 	bl	801298c <GUI_ALLOC_UnlockH>
 8010b36:	e7df      	b.n	8010af8 <_Link+0x40>
 8010b38:	9b01      	ldr	r3, [sp, #4]
 8010b3a:	605e      	str	r6, [r3, #4]
 8010b3c:	6045      	str	r5, [r0, #4]
 8010b3e:	4620      	mov	r0, r4
 8010b40:	f001 ff24 	bl	801298c <GUI_ALLOC_UnlockH>
 8010b44:	a801      	add	r0, sp, #4
 8010b46:	f001 ff21 	bl	801298c <GUI_ALLOC_UnlockH>
 8010b4a:	b005      	add	sp, #20
 8010b4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b4e:	bf00      	nop
 8010b50:	200194a8 	.word	0x200194a8

08010b54 <_Unlink>:
 8010b54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010b56:	4605      	mov	r5, r0
 8010b58:	b1f0      	cbz	r0, 8010b98 <_Unlink+0x44>
 8010b5a:	f001 ff09 	bl	8012970 <GUI_ALLOC_LockH>
 8010b5e:	4b0f      	ldr	r3, [pc, #60]	; (8010b9c <_Unlink+0x48>)
 8010b60:	9000      	str	r0, [sp, #0]
 8010b62:	681c      	ldr	r4, [r3, #0]
 8010b64:	42ac      	cmp	r4, r5
 8010b66:	d104      	bne.n	8010b72 <_Unlink+0x1e>
 8010b68:	6842      	ldr	r2, [r0, #4]
 8010b6a:	601a      	str	r2, [r3, #0]
 8010b6c:	e011      	b.n	8010b92 <_Unlink+0x3e>
 8010b6e:	f001 ff0d 	bl	801298c <GUI_ALLOC_UnlockH>
 8010b72:	b174      	cbz	r4, 8010b92 <_Unlink+0x3e>
 8010b74:	4620      	mov	r0, r4
 8010b76:	f001 fefb 	bl	8012970 <GUI_ALLOC_LockH>
 8010b7a:	4603      	mov	r3, r0
 8010b7c:	a802      	add	r0, sp, #8
 8010b7e:	685c      	ldr	r4, [r3, #4]
 8010b80:	f840 3d04 	str.w	r3, [r0, #-4]!
 8010b84:	42ac      	cmp	r4, r5
 8010b86:	d1f2      	bne.n	8010b6e <_Unlink+0x1a>
 8010b88:	9a00      	ldr	r2, [sp, #0]
 8010b8a:	6852      	ldr	r2, [r2, #4]
 8010b8c:	605a      	str	r2, [r3, #4]
 8010b8e:	f001 fefd 	bl	801298c <GUI_ALLOC_UnlockH>
 8010b92:	4668      	mov	r0, sp
 8010b94:	f001 fefa 	bl	801298c <GUI_ALLOC_UnlockH>
 8010b98:	b003      	add	sp, #12
 8010b9a:	bd30      	pop	{r4, r5, pc}
 8010b9c:	200194a8 	.word	0x200194a8

08010ba0 <GUI_TIMER__GetFirstTimer>:
 8010ba0:	2300      	movs	r3, #0
 8010ba2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010ba4:	6003      	str	r3, [r0, #0]
 8010ba6:	4b09      	ldr	r3, [pc, #36]	; (8010bcc <GUI_TIMER__GetFirstTimer+0x2c>)
 8010ba8:	681c      	ldr	r4, [r3, #0]
 8010baa:	4605      	mov	r5, r0
 8010bac:	b154      	cbz	r4, 8010bc4 <GUI_TIMER__GetFirstTimer+0x24>
 8010bae:	4620      	mov	r0, r4
 8010bb0:	f001 fede 	bl	8012970 <GUI_ALLOC_LockH>
 8010bb4:	ab02      	add	r3, sp, #8
 8010bb6:	6902      	ldr	r2, [r0, #16]
 8010bb8:	f843 0d04 	str.w	r0, [r3, #-4]!
 8010bbc:	602a      	str	r2, [r5, #0]
 8010bbe:	4618      	mov	r0, r3
 8010bc0:	f001 fee4 	bl	801298c <GUI_ALLOC_UnlockH>
 8010bc4:	4620      	mov	r0, r4
 8010bc6:	b003      	add	sp, #12
 8010bc8:	bd30      	pop	{r4, r5, pc}
 8010bca:	bf00      	nop
 8010bcc:	200194a4 	.word	0x200194a4

08010bd0 <GUI_TIMER__GetNextTimerLin>:
 8010bd0:	2300      	movs	r3, #0
 8010bd2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010bd4:	600b      	str	r3, [r1, #0]
 8010bd6:	460e      	mov	r6, r1
 8010bd8:	4604      	mov	r4, r0
 8010bda:	b190      	cbz	r0, 8010c02 <GUI_TIMER__GetNextTimerLin+0x32>
 8010bdc:	f001 fec8 	bl	8012970 <GUI_ALLOC_LockH>
 8010be0:	ad02      	add	r5, sp, #8
 8010be2:	6884      	ldr	r4, [r0, #8]
 8010be4:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010be8:	b144      	cbz	r4, 8010bfc <GUI_TIMER__GetNextTimerLin+0x2c>
 8010bea:	4628      	mov	r0, r5
 8010bec:	f001 fece 	bl	801298c <GUI_ALLOC_UnlockH>
 8010bf0:	4620      	mov	r0, r4
 8010bf2:	f001 febd 	bl	8012970 <GUI_ALLOC_LockH>
 8010bf6:	6903      	ldr	r3, [r0, #16]
 8010bf8:	9001      	str	r0, [sp, #4]
 8010bfa:	6033      	str	r3, [r6, #0]
 8010bfc:	4628      	mov	r0, r5
 8010bfe:	f001 fec5 	bl	801298c <GUI_ALLOC_UnlockH>
 8010c02:	4620      	mov	r0, r4
 8010c04:	b002      	add	sp, #8
 8010c06:	bd70      	pop	{r4, r5, r6, pc}

08010c08 <GUI_TIMER_Create>:
 8010c08:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010c0c:	4681      	mov	r9, r0
 8010c0e:	201c      	movs	r0, #28
 8010c10:	460e      	mov	r6, r1
 8010c12:	4690      	mov	r8, r2
 8010c14:	461f      	mov	r7, r3
 8010c16:	f002 f918 	bl	8012e4a <GUI_ALLOC_AllocZero>
 8010c1a:	4604      	mov	r4, r0
 8010c1c:	2800      	cmp	r0, #0
 8010c1e:	d031      	beq.n	8010c84 <GUI_TIMER_Create+0x7c>
 8010c20:	4b1a      	ldr	r3, [pc, #104]	; (8010c8c <GUI_TIMER_Create+0x84>)
 8010c22:	4a1b      	ldr	r2, [pc, #108]	; (8010c90 <GUI_TIMER_Create+0x88>)
 8010c24:	601a      	str	r2, [r3, #0]
 8010c26:	f001 fea3 	bl	8012970 <GUI_ALLOC_LockH>
 8010c2a:	9000      	str	r0, [sp, #0]
 8010c2c:	b916      	cbnz	r6, 8010c34 <GUI_TIMER_Create+0x2c>
 8010c2e:	f000 f8a9 	bl	8010d84 <GUI_GetTime>
 8010c32:	4606      	mov	r6, r0
 8010c34:	a802      	add	r0, sp, #8
 8010c36:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 8010c3a:	4668      	mov	r0, sp
 8010c3c:	616e      	str	r6, [r5, #20]
 8010c3e:	f8c5 9000 	str.w	r9, [r5]
 8010c42:	f8c5 8010 	str.w	r8, [r5, #16]
 8010c46:	81af      	strh	r7, [r5, #12]
 8010c48:	f001 fea0 	bl	801298c <GUI_ALLOC_UnlockH>
 8010c4c:	4620      	mov	r0, r4
 8010c4e:	f7ff ff33 	bl	8010ab8 <_Link>
 8010c52:	4b10      	ldr	r3, [pc, #64]	; (8010c94 <GUI_TIMER_Create+0x8c>)
 8010c54:	681a      	ldr	r2, [r3, #0]
 8010c56:	b932      	cbnz	r2, 8010c66 <GUI_TIMER_Create+0x5e>
 8010c58:	2201      	movs	r2, #1
 8010c5a:	480f      	ldr	r0, [pc, #60]	; (8010c98 <GUI_TIMER_Create+0x90>)
 8010c5c:	601a      	str	r2, [r3, #0]
 8010c5e:	4b0f      	ldr	r3, [pc, #60]	; (8010c9c <GUI_TIMER_Create+0x94>)
 8010c60:	6003      	str	r3, [r0, #0]
 8010c62:	f001 fa65 	bl	8012130 <GUI__RegisterExit>
 8010c66:	4620      	mov	r0, r4
 8010c68:	f001 fe82 	bl	8012970 <GUI_ALLOC_LockH>
 8010c6c:	4a0c      	ldr	r2, [pc, #48]	; (8010ca0 <GUI_TIMER_Create+0x98>)
 8010c6e:	9001      	str	r0, [sp, #4]
 8010c70:	6813      	ldr	r3, [r2, #0]
 8010c72:	b913      	cbnz	r3, 8010c7a <GUI_TIMER_Create+0x72>
 8010c74:	6014      	str	r4, [r2, #0]
 8010c76:	6083      	str	r3, [r0, #8]
 8010c78:	e001      	b.n	8010c7e <GUI_TIMER_Create+0x76>
 8010c7a:	6083      	str	r3, [r0, #8]
 8010c7c:	6014      	str	r4, [r2, #0]
 8010c7e:	a801      	add	r0, sp, #4
 8010c80:	f001 fe84 	bl	801298c <GUI_ALLOC_UnlockH>
 8010c84:	4620      	mov	r0, r4
 8010c86:	b003      	add	sp, #12
 8010c88:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010c8c:	20019c80 	.word	0x20019c80
 8010c90:	08010a49 	.word	0x08010a49
 8010c94:	200194b4 	.word	0x200194b4
 8010c98:	200194ac 	.word	0x200194ac
 8010c9c:	08010a2d 	.word	0x08010a2d
 8010ca0:	200194a4 	.word	0x200194a4

08010ca4 <GUI_TIMER_Delete>:
 8010ca4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010ca6:	4604      	mov	r4, r0
 8010ca8:	b358      	cbz	r0, 8010d02 <GUI_TIMER_Delete+0x5e>
 8010caa:	4d17      	ldr	r5, [pc, #92]	; (8010d08 <GUI_TIMER_Delete+0x64>)
 8010cac:	682e      	ldr	r6, [r5, #0]
 8010cae:	4286      	cmp	r6, r0
 8010cb0:	d10b      	bne.n	8010cca <GUI_TIMER_Delete+0x26>
 8010cb2:	f001 fe5d 	bl	8012970 <GUI_ALLOC_LockH>
 8010cb6:	ab02      	add	r3, sp, #8
 8010cb8:	6882      	ldr	r2, [r0, #8]
 8010cba:	f843 0d04 	str.w	r0, [r3, #-4]!
 8010cbe:	602a      	str	r2, [r5, #0]
 8010cc0:	4618      	mov	r0, r3
 8010cc2:	e016      	b.n	8010cf2 <GUI_TIMER_Delete+0x4e>
 8010cc4:	4668      	mov	r0, sp
 8010cc6:	f001 fe61 	bl	801298c <GUI_ALLOC_UnlockH>
 8010cca:	4630      	mov	r0, r6
 8010ccc:	f001 fe50 	bl	8012970 <GUI_ALLOC_LockH>
 8010cd0:	6886      	ldr	r6, [r0, #8]
 8010cd2:	ad02      	add	r5, sp, #8
 8010cd4:	42a6      	cmp	r6, r4
 8010cd6:	f845 0d08 	str.w	r0, [r5, #-8]!
 8010cda:	d1f3      	bne.n	8010cc4 <GUI_TIMER_Delete+0x20>
 8010cdc:	4620      	mov	r0, r4
 8010cde:	f001 fe47 	bl	8012970 <GUI_ALLOC_LockH>
 8010ce2:	9b00      	ldr	r3, [sp, #0]
 8010ce4:	6882      	ldr	r2, [r0, #8]
 8010ce6:	9001      	str	r0, [sp, #4]
 8010ce8:	609a      	str	r2, [r3, #8]
 8010cea:	a801      	add	r0, sp, #4
 8010cec:	f001 fe4e 	bl	801298c <GUI_ALLOC_UnlockH>
 8010cf0:	4668      	mov	r0, sp
 8010cf2:	f001 fe4b 	bl	801298c <GUI_ALLOC_UnlockH>
 8010cf6:	4620      	mov	r0, r4
 8010cf8:	f7ff ff2c 	bl	8010b54 <_Unlink>
 8010cfc:	4620      	mov	r0, r4
 8010cfe:	f001 fe71 	bl	80129e4 <GUI_ALLOC_Free>
 8010d02:	b002      	add	sp, #8
 8010d04:	bd70      	pop	{r4, r5, r6, pc}
 8010d06:	bf00      	nop
 8010d08:	200194a4 	.word	0x200194a4

08010d0c <GUI_TIMER_SetPeriod>:
 8010d0c:	b513      	push	{r0, r1, r4, lr}
 8010d0e:	460c      	mov	r4, r1
 8010d10:	b140      	cbz	r0, 8010d24 <GUI_TIMER_SetPeriod+0x18>
 8010d12:	f001 fe2d 	bl	8012970 <GUI_ALLOC_LockH>
 8010d16:	ab02      	add	r3, sp, #8
 8010d18:	6184      	str	r4, [r0, #24]
 8010d1a:	f843 0d04 	str.w	r0, [r3, #-4]!
 8010d1e:	4618      	mov	r0, r3
 8010d20:	f001 fe34 	bl	801298c <GUI_ALLOC_UnlockH>
 8010d24:	b002      	add	sp, #8
 8010d26:	bd10      	pop	{r4, pc}

08010d28 <GUI_TIMER_Restart>:
 8010d28:	b513      	push	{r0, r1, r4, lr}
 8010d2a:	4604      	mov	r4, r0
 8010d2c:	b198      	cbz	r0, 8010d56 <GUI_TIMER_Restart+0x2e>
 8010d2e:	f001 fe1f 	bl	8012970 <GUI_ALLOC_LockH>
 8010d32:	9001      	str	r0, [sp, #4]
 8010d34:	f000 f826 	bl	8010d84 <GUI_GetTime>
 8010d38:	ab02      	add	r3, sp, #8
 8010d3a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8010d3e:	6991      	ldr	r1, [r2, #24]
 8010d40:	4408      	add	r0, r1
 8010d42:	6150      	str	r0, [r2, #20]
 8010d44:	4618      	mov	r0, r3
 8010d46:	f001 fe21 	bl	801298c <GUI_ALLOC_UnlockH>
 8010d4a:	4620      	mov	r0, r4
 8010d4c:	f7ff ff02 	bl	8010b54 <_Unlink>
 8010d50:	4620      	mov	r0, r4
 8010d52:	f7ff feb1 	bl	8010ab8 <_Link>
 8010d56:	b002      	add	sp, #8
 8010d58:	bd10      	pop	{r4, pc}

08010d5a <GUI_TIMER_GetFlag>:
 8010d5a:	b513      	push	{r0, r1, r4, lr}
 8010d5c:	460c      	mov	r4, r1
 8010d5e:	b168      	cbz	r0, 8010d7c <GUI_TIMER_GetFlag+0x22>
 8010d60:	f001 fe06 	bl	8012970 <GUI_ALLOC_LockH>
 8010d64:	ab02      	add	r3, sp, #8
 8010d66:	8982      	ldrh	r2, [r0, #12]
 8010d68:	f843 0d04 	str.w	r0, [r3, #-4]!
 8010d6c:	4214      	tst	r4, r2
 8010d6e:	4618      	mov	r0, r3
 8010d70:	bf0c      	ite	eq
 8010d72:	2400      	moveq	r4, #0
 8010d74:	2401      	movne	r4, #1
 8010d76:	f001 fe09 	bl	801298c <GUI_ALLOC_UnlockH>
 8010d7a:	e000      	b.n	8010d7e <GUI_TIMER_GetFlag+0x24>
 8010d7c:	2401      	movs	r4, #1
 8010d7e:	4620      	mov	r0, r4
 8010d80:	b002      	add	sp, #8
 8010d82:	bd10      	pop	{r4, pc}

08010d84 <GUI_GetTime>:
 8010d84:	f7f7 b9b0 	b.w	80080e8 <GUI_X_GetTime>

08010d88 <GUI_Delay>:
 8010d88:	b538      	push	{r3, r4, r5, lr}
 8010d8a:	4605      	mov	r5, r0
 8010d8c:	f7f7 f9ac 	bl	80080e8 <GUI_X_GetTime>
 8010d90:	4405      	add	r5, r0
 8010d92:	f7f7 f9a9 	bl	80080e8 <GUI_X_GetTime>
 8010d96:	1a2c      	subs	r4, r5, r0
 8010d98:	2c00      	cmp	r4, #0
 8010d9a:	dd08      	ble.n	8010dae <GUI_Delay+0x26>
 8010d9c:	f000 feb4 	bl	8011b08 <GUI_Exec>
 8010da0:	2c05      	cmp	r4, #5
 8010da2:	bfb4      	ite	lt
 8010da4:	4620      	movlt	r0, r4
 8010da6:	2005      	movge	r0, #5
 8010da8:	f7f7 f9a4 	bl	80080f4 <GUI_X_Delay>
 8010dac:	e7f1      	b.n	8010d92 <GUI_Delay+0xa>
 8010dae:	bd38      	pop	{r3, r4, r5, pc}

08010db0 <GUI_TOUCH_Calibrate>:
 8010db0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010db2:	2801      	cmp	r0, #1
 8010db4:	9c08      	ldr	r4, [sp, #32]
 8010db6:	d845      	bhi.n	8010e44 <GUI_TOUCH_Calibrate+0x94>
 8010db8:	4d25      	ldr	r5, [pc, #148]	; (8010e50 <GUI_TOUCH_Calibrate+0xa0>)
 8010dba:	d00c      	beq.n	8010dd6 <GUI_TOUCH_Calibrate+0x26>
 8010dbc:	4e25      	ldr	r6, [pc, #148]	; (8010e54 <GUI_TOUCH_Calibrate+0xa4>)
 8010dbe:	e886 0006 	stmia.w	r6, {r1, r2}
 8010dc2:	6829      	ldr	r1, [r5, #0]
 8010dc4:	f001 0206 	and.w	r2, r1, #6
 8010dc8:	2a06      	cmp	r2, #6
 8010dca:	4a23      	ldr	r2, [pc, #140]	; (8010e58 <GUI_TOUCH_Calibrate+0xa8>)
 8010dcc:	d010      	beq.n	8010df0 <GUI_TOUCH_Calibrate+0x40>
 8010dce:	f001 0105 	and.w	r1, r1, #5
 8010dd2:	2901      	cmp	r1, #1
 8010dd4:	e00b      	b.n	8010dee <GUI_TOUCH_Calibrate+0x3e>
 8010dd6:	4e21      	ldr	r6, [pc, #132]	; (8010e5c <GUI_TOUCH_Calibrate+0xac>)
 8010dd8:	e886 0006 	stmia.w	r6, {r1, r2}
 8010ddc:	6829      	ldr	r1, [r5, #0]
 8010dde:	f001 0205 	and.w	r2, r1, #5
 8010de2:	2a05      	cmp	r2, #5
 8010de4:	4a1e      	ldr	r2, [pc, #120]	; (8010e60 <GUI_TOUCH_Calibrate+0xb0>)
 8010de6:	d003      	beq.n	8010df0 <GUI_TOUCH_Calibrate+0x40>
 8010de8:	f001 0106 	and.w	r1, r1, #6
 8010dec:	2902      	cmp	r1, #2
 8010dee:	d102      	bne.n	8010df6 <GUI_TOUCH_Calibrate+0x46>
 8010df0:	6014      	str	r4, [r2, #0]
 8010df2:	6053      	str	r3, [r2, #4]
 8010df4:	e001      	b.n	8010dfa <GUI_TOUCH_Calibrate+0x4a>
 8010df6:	e882 0018 	stmia.w	r2, {r3, r4}
 8010dfa:	4b1a      	ldr	r3, [pc, #104]	; (8010e64 <GUI_TOUCH_Calibrate+0xb4>)
 8010dfc:	781a      	ldrb	r2, [r3, #0]
 8010dfe:	4102      	asrs	r2, r0
 8010e00:	07d2      	lsls	r2, r2, #31
 8010e02:	bf44      	itt	mi
 8010e04:	2200      	movmi	r2, #0
 8010e06:	701a      	strbmi	r2, [r3, #0]
 8010e08:	2201      	movs	r2, #1
 8010e0a:	fa02 f000 	lsl.w	r0, r2, r0
 8010e0e:	781a      	ldrb	r2, [r3, #0]
 8010e10:	4310      	orrs	r0, r2
 8010e12:	b2c0      	uxtb	r0, r0
 8010e14:	2803      	cmp	r0, #3
 8010e16:	7018      	strb	r0, [r3, #0]
 8010e18:	d116      	bne.n	8010e48 <GUI_TOUCH_Calibrate+0x98>
 8010e1a:	4c13      	ldr	r4, [pc, #76]	; (8010e68 <GUI_TOUCH_Calibrate+0xb8>)
 8010e1c:	6823      	ldr	r3, [r4, #0]
 8010e1e:	7c58      	ldrb	r0, [r3, #17]
 8010e20:	f7fe fd98 	bl	800f954 <LCD_GetXSizeEx>
 8010e24:	6823      	ldr	r3, [r4, #0]
 8010e26:	4605      	mov	r5, r0
 8010e28:	7c58      	ldrb	r0, [r3, #17]
 8010e2a:	f7fe fd96 	bl	800f95a <LCD_GetYSizeEx>
 8010e2e:	4b0c      	ldr	r3, [pc, #48]	; (8010e60 <GUI_TOUCH_Calibrate+0xb0>)
 8010e30:	9002      	str	r0, [sp, #8]
 8010e32:	e88d 0028 	stmia.w	sp, {r3, r5}
 8010e36:	4907      	ldr	r1, [pc, #28]	; (8010e54 <GUI_TOUCH_Calibrate+0xa4>)
 8010e38:	4a08      	ldr	r2, [pc, #32]	; (8010e5c <GUI_TOUCH_Calibrate+0xac>)
 8010e3a:	4b07      	ldr	r3, [pc, #28]	; (8010e58 <GUI_TOUCH_Calibrate+0xa8>)
 8010e3c:	2002      	movs	r0, #2
 8010e3e:	f000 f8ff 	bl	8011040 <GUI_TOUCH_CalcCoefficients>
 8010e42:	e002      	b.n	8010e4a <GUI_TOUCH_Calibrate+0x9a>
 8010e44:	2001      	movs	r0, #1
 8010e46:	e000      	b.n	8010e4a <GUI_TOUCH_Calibrate+0x9a>
 8010e48:	2000      	movs	r0, #0
 8010e4a:	b004      	add	sp, #16
 8010e4c:	bd70      	pop	{r4, r5, r6, pc}
 8010e4e:	bf00      	nop
 8010e50:	200194cc 	.word	0x200194cc
 8010e54:	200194b8 	.word	0x200194b8
 8010e58:	200194d4 	.word	0x200194d4
 8010e5c:	200194e0 	.word	0x200194e0
 8010e60:	200194c0 	.word	0x200194c0
 8010e64:	200194c8 	.word	0x200194c8
 8010e68:	2000016c 	.word	0x2000016c

08010e6c <GUI_TOUCH_Exec>:
 8010e6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e6e:	4c29      	ldr	r4, [pc, #164]	; (8010f14 <GUI_TOUCH_Exec+0xa8>)
 8010e70:	4d29      	ldr	r5, [pc, #164]	; (8010f18 <GUI_TOUCH_Exec+0xac>)
 8010e72:	7823      	ldrb	r3, [r4, #0]
 8010e74:	b087      	sub	sp, #28
 8010e76:	4626      	mov	r6, r4
 8010e78:	b943      	cbnz	r3, 8010e8c <GUI_TOUCH_Exec+0x20>
 8010e7a:	f7f7 f94f 	bl	800811c <GUI_TOUCH_X_MeasureY>
 8010e7e:	6028      	str	r0, [r5, #0]
 8010e80:	f7f7 f946 	bl	8008110 <GUI_TOUCH_X_ActivateY>
 8010e84:	7823      	ldrb	r3, [r4, #0]
 8010e86:	3301      	adds	r3, #1
 8010e88:	7023      	strb	r3, [r4, #0]
 8010e8a:	e040      	b.n	8010f0e <GUI_TOUCH_Exec+0xa2>
 8010e8c:	f7f7 f942 	bl	8008114 <GUI_TOUCH_X_MeasureX>
 8010e90:	4c22      	ldr	r4, [pc, #136]	; (8010f1c <GUI_TOUCH_Exec+0xb0>)
 8010e92:	6020      	str	r0, [r4, #0]
 8010e94:	f7f7 f93a 	bl	800810c <GUI_TOUCH_X_ActivateX>
 8010e98:	6823      	ldr	r3, [r4, #0]
 8010e9a:	9301      	str	r3, [sp, #4]
 8010e9c:	682b      	ldr	r3, [r5, #0]
 8010e9e:	9302      	str	r3, [sp, #8]
 8010ea0:	f007 f9f4 	bl	801828c <GUI_TOUCH_GetLayer>
 8010ea4:	a902      	add	r1, sp, #8
 8010ea6:	f88d 0015 	strb.w	r0, [sp, #21]
 8010eaa:	a801      	add	r0, sp, #4
 8010eac:	f000 f88a 	bl	8010fc4 <GUI_TOUCH_CalibratePoint>
 8010eb0:	4c1b      	ldr	r4, [pc, #108]	; (8010f20 <GUI_TOUCH_Exec+0xb4>)
 8010eb2:	b148      	cbz	r0, 8010ec8 <GUI_TOUCH_Exec+0x5c>
 8010eb4:	7823      	ldrb	r3, [r4, #0]
 8010eb6:	b343      	cbz	r3, 8010f0a <GUI_TOUCH_Exec+0x9e>
 8010eb8:	4b1a      	ldr	r3, [pc, #104]	; (8010f24 <GUI_TOUCH_Exec+0xb8>)
 8010eba:	681b      	ldr	r3, [r3, #0]
 8010ebc:	9303      	str	r3, [sp, #12]
 8010ebe:	4b1a      	ldr	r3, [pc, #104]	; (8010f28 <GUI_TOUCH_Exec+0xbc>)
 8010ec0:	681b      	ldr	r3, [r3, #0]
 8010ec2:	9304      	str	r3, [sp, #16]
 8010ec4:	2500      	movs	r5, #0
 8010ec6:	e01a      	b.n	8010efe <GUI_TOUCH_Exec+0x92>
 8010ec8:	4816      	ldr	r0, [pc, #88]	; (8010f24 <GUI_TOUCH_Exec+0xb8>)
 8010eca:	4917      	ldr	r1, [pc, #92]	; (8010f28 <GUI_TOUCH_Exec+0xbc>)
 8010ecc:	f894 c000 	ldrb.w	ip, [r4]
 8010ed0:	9a01      	ldr	r2, [sp, #4]
 8010ed2:	6807      	ldr	r7, [r0, #0]
 8010ed4:	9b02      	ldr	r3, [sp, #8]
 8010ed6:	680d      	ldr	r5, [r1, #0]
 8010ed8:	f1bc 0f00 	cmp.w	ip, #0
 8010edc:	d00a      	beq.n	8010ef4 <GUI_TOUCH_Exec+0x88>
 8010ede:	1bd7      	subs	r7, r2, r7
 8010ee0:	1b5d      	subs	r5, r3, r5
 8010ee2:	2f00      	cmp	r7, #0
 8010ee4:	bfb8      	it	lt
 8010ee6:	427f      	neglt	r7, r7
 8010ee8:	2d00      	cmp	r5, #0
 8010eea:	bfb8      	it	lt
 8010eec:	426d      	neglt	r5, r5
 8010eee:	443d      	add	r5, r7
 8010ef0:	2d02      	cmp	r5, #2
 8010ef2:	dd0a      	ble.n	8010f0a <GUI_TOUCH_Exec+0x9e>
 8010ef4:	6002      	str	r2, [r0, #0]
 8010ef6:	9203      	str	r2, [sp, #12]
 8010ef8:	600b      	str	r3, [r1, #0]
 8010efa:	9304      	str	r3, [sp, #16]
 8010efc:	2501      	movs	r5, #1
 8010efe:	a803      	add	r0, sp, #12
 8010f00:	f88d 5014 	strb.w	r5, [sp, #20]
 8010f04:	f000 fae8 	bl	80114d8 <GUI_TOUCH_StoreStateEx>
 8010f08:	7025      	strb	r5, [r4, #0]
 8010f0a:	2300      	movs	r3, #0
 8010f0c:	7033      	strb	r3, [r6, #0]
 8010f0e:	b007      	add	sp, #28
 8010f10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010f12:	bf00      	nop
 8010f14:	200194d1 	.word	0x200194d1
 8010f18:	200194e8 	.word	0x200194e8
 8010f1c:	200194dc 	.word	0x200194dc
 8010f20:	200194d0 	.word	0x200194d0
 8010f24:	20000158 	.word	0x20000158
 8010f28:	20000154 	.word	0x20000154

08010f2c <GUI_TOUCH_TransformPoint>:
 8010f2c:	b570      	push	{r4, r5, r6, lr}
 8010f2e:	4b22      	ldr	r3, [pc, #136]	; (8010fb8 <GUI_TOUCH_TransformPoint+0x8c>)
 8010f30:	681b      	ldr	r3, [r3, #0]
 8010f32:	ed2d 8b02 	vpush	{d8}
 8010f36:	4606      	mov	r6, r0
 8010f38:	460d      	mov	r5, r1
 8010f3a:	b3c3      	cbz	r3, 8010fae <GUI_TOUCH_TransformPoint+0x82>
 8010f3c:	edd0 7a00 	vldr	s15, [r0]
 8010f40:	4c1e      	ldr	r4, [pc, #120]	; (8010fbc <GUI_TOUCH_TransformPoint+0x90>)
 8010f42:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8010f46:	edd1 7a00 	vldr	s15, [r1]
 8010f4a:	ed94 7a01 	vldr	s14, [r4, #4]
 8010f4e:	eef8 8ae7 	vcvt.f32.s32	s17, s15
 8010f52:	edd4 7a00 	vldr	s15, [r4]
 8010f56:	ee28 7a87 	vmul.f32	s14, s17, s14
 8010f5a:	eea7 7a88 	vfma.f32	s14, s15, s16
 8010f5e:	edd4 7a02 	vldr	s15, [r4, #8]
 8010f62:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010f66:	ee17 0a90 	vmov	r0, s15
 8010f6a:	f7ef fb0d 	bl	8000588 <__aeabi_f2d>
 8010f6e:	2200      	movs	r2, #0
 8010f70:	4b13      	ldr	r3, [pc, #76]	; (8010fc0 <GUI_TOUCH_TransformPoint+0x94>)
 8010f72:	f7ef f9ab 	bl	80002cc <__adddf3>
 8010f76:	f7ef fd71 	bl	8000a5c <__aeabi_d2iz>
 8010f7a:	edd4 7a04 	vldr	s15, [r4, #16]
 8010f7e:	ed94 7a03 	vldr	s14, [r4, #12]
 8010f82:	6030      	str	r0, [r6, #0]
 8010f84:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8010f88:	eee7 7a08 	vfma.f32	s15, s14, s16
 8010f8c:	ed94 7a05 	vldr	s14, [r4, #20]
 8010f90:	ee37 7a87 	vadd.f32	s14, s15, s14
 8010f94:	ee17 0a10 	vmov	r0, s14
 8010f98:	f7ef faf6 	bl	8000588 <__aeabi_f2d>
 8010f9c:	2200      	movs	r2, #0
 8010f9e:	4b08      	ldr	r3, [pc, #32]	; (8010fc0 <GUI_TOUCH_TransformPoint+0x94>)
 8010fa0:	f7ef f994 	bl	80002cc <__adddf3>
 8010fa4:	f7ef fd5a 	bl	8000a5c <__aeabi_d2iz>
 8010fa8:	6028      	str	r0, [r5, #0]
 8010faa:	2000      	movs	r0, #0
 8010fac:	e000      	b.n	8010fb0 <GUI_TOUCH_TransformPoint+0x84>
 8010fae:	2001      	movs	r0, #1
 8010fb0:	ecbd 8b02 	vpop	{d8}
 8010fb4:	bd70      	pop	{r4, r5, r6, pc}
 8010fb6:	bf00      	nop
 8010fb8:	200194fc 	.word	0x200194fc
 8010fbc:	20019500 	.word	0x20019500
 8010fc0:	3fe00000 	.word	0x3fe00000

08010fc4 <GUI_TOUCH_CalibratePoint>:
 8010fc4:	4b18      	ldr	r3, [pc, #96]	; (8011028 <GUI_TOUCH_CalibratePoint+0x64>)
 8010fc6:	6802      	ldr	r2, [r0, #0]
 8010fc8:	681b      	ldr	r3, [r3, #0]
 8010fca:	429a      	cmp	r2, r3
 8010fcc:	b570      	push	{r4, r5, r6, lr}
 8010fce:	4605      	mov	r5, r0
 8010fd0:	460c      	mov	r4, r1
 8010fd2:	db27      	blt.n	8011024 <GUI_TOUCH_CalibratePoint+0x60>
 8010fd4:	4e15      	ldr	r6, [pc, #84]	; (801102c <GUI_TOUCH_CalibratePoint+0x68>)
 8010fd6:	680b      	ldr	r3, [r1, #0]
 8010fd8:	6836      	ldr	r6, [r6, #0]
 8010fda:	42b3      	cmp	r3, r6
 8010fdc:	db22      	blt.n	8011024 <GUI_TOUCH_CalibratePoint+0x60>
 8010fde:	4e14      	ldr	r6, [pc, #80]	; (8011030 <GUI_TOUCH_CalibratePoint+0x6c>)
 8010fe0:	6836      	ldr	r6, [r6, #0]
 8010fe2:	42b2      	cmp	r2, r6
 8010fe4:	dc1e      	bgt.n	8011024 <GUI_TOUCH_CalibratePoint+0x60>
 8010fe6:	4a13      	ldr	r2, [pc, #76]	; (8011034 <GUI_TOUCH_CalibratePoint+0x70>)
 8010fe8:	6812      	ldr	r2, [r2, #0]
 8010fea:	4293      	cmp	r3, r2
 8010fec:	dc1a      	bgt.n	8011024 <GUI_TOUCH_CalibratePoint+0x60>
 8010fee:	f7ff ff9d 	bl	8010f2c <GUI_TOUCH_TransformPoint>
 8010ff2:	b9c0      	cbnz	r0, 8011026 <GUI_TOUCH_CalibratePoint+0x62>
 8010ff4:	682a      	ldr	r2, [r5, #0]
 8010ff6:	2a00      	cmp	r2, #0
 8010ff8:	da01      	bge.n	8010ffe <GUI_TOUCH_CalibratePoint+0x3a>
 8010ffa:	6028      	str	r0, [r5, #0]
 8010ffc:	e006      	b.n	801100c <GUI_TOUCH_CalibratePoint+0x48>
 8010ffe:	4b0e      	ldr	r3, [pc, #56]	; (8011038 <GUI_TOUCH_CalibratePoint+0x74>)
 8011000:	681b      	ldr	r3, [r3, #0]
 8011002:	429a      	cmp	r2, r3
 8011004:	bfa4      	itt	ge
 8011006:	f103 33ff 	addge.w	r3, r3, #4294967295
 801100a:	602b      	strge	r3, [r5, #0]
 801100c:	6822      	ldr	r2, [r4, #0]
 801100e:	2a00      	cmp	r2, #0
 8011010:	da01      	bge.n	8011016 <GUI_TOUCH_CalibratePoint+0x52>
 8011012:	2300      	movs	r3, #0
 8011014:	e004      	b.n	8011020 <GUI_TOUCH_CalibratePoint+0x5c>
 8011016:	4b09      	ldr	r3, [pc, #36]	; (801103c <GUI_TOUCH_CalibratePoint+0x78>)
 8011018:	681b      	ldr	r3, [r3, #0]
 801101a:	429a      	cmp	r2, r3
 801101c:	db03      	blt.n	8011026 <GUI_TOUCH_CalibratePoint+0x62>
 801101e:	3b01      	subs	r3, #1
 8011020:	6023      	str	r3, [r4, #0]
 8011022:	bd70      	pop	{r4, r5, r6, pc}
 8011024:	2001      	movs	r0, #1
 8011026:	bd70      	pop	{r4, r5, r6, pc}
 8011028:	200194ec 	.word	0x200194ec
 801102c:	200194f0 	.word	0x200194f0
 8011030:	2001951c 	.word	0x2001951c
 8011034:	20019518 	.word	0x20019518
 8011038:	200194f4 	.word	0x200194f4
 801103c:	200194f8 	.word	0x200194f8

08011040 <GUI_TOUCH_CalcCoefficients>:
 8011040:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011044:	ed2d 8b02 	vpush	{d8}
 8011048:	f8df c3bc 	ldr.w	ip, [pc, #956]	; 8011408 <GUI_TOUCH_CalcCoefficients+0x3c8>
 801104c:	b08c      	sub	sp, #48	; 0x30
 801104e:	2400      	movs	r4, #0
 8011050:	2802      	cmp	r0, #2
 8011052:	9f16      	ldr	r7, [sp, #88]	; 0x58
 8011054:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8011056:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 801105a:	f8cc 4000 	str.w	r4, [ip]
 801105e:	d135      	bne.n	80110cc <GUI_TOUCH_CalcCoefficients+0x8c>
 8011060:	c912      	ldmia	r1, {r1, r4}
 8011062:	6818      	ldr	r0, [r3, #0]
 8011064:	685b      	ldr	r3, [r3, #4]
 8011066:	1a61      	subs	r1, r4, r1
 8011068:	1a1b      	subs	r3, r3, r0
 801106a:	ee00 1a10 	vmov	s0, r1
 801106e:	ee07 3a90 	vmov	s15, r3
 8011072:	eeb8 7ac0 	vcvt.f32.s32	s14, s0
 8011076:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801107a:	ee05 0a10 	vmov	s10, r0
 801107e:	eec7 7a27 	vdiv.f32	s15, s14, s15
 8011082:	6850      	ldr	r0, [r2, #4]
 8011084:	6812      	ldr	r2, [r2, #0]
 8011086:	4bdb      	ldr	r3, [pc, #876]	; (80113f4 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 8011088:	2100      	movs	r1, #0
 801108a:	1a82      	subs	r2, r0, r2
 801108c:	6059      	str	r1, [r3, #4]
 801108e:	60d9      	str	r1, [r3, #12]
 8011090:	6839      	ldr	r1, [r7, #0]
 8011092:	eeb8 7ac5 	vcvt.f32.s32	s14, s10
 8011096:	ee06 2a10 	vmov	s12, r2
 801109a:	687a      	ldr	r2, [r7, #4]
 801109c:	edc3 7a00 	vstr	s15, [r3]
 80110a0:	ee67 7a67 	vnmul.f32	s15, s14, s15
 80110a4:	1a52      	subs	r2, r2, r1
 80110a6:	edc3 7a02 	vstr	s15, [r3, #8]
 80110aa:	ee07 2a90 	vmov	s15, r2
 80110ae:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 80110b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80110b6:	ee06 1a90 	vmov	s13, r1
 80110ba:	eec7 7a27 	vdiv.f32	s15, s14, s15
 80110be:	eeb8 7ae6 	vcvt.f32.s32	s14, s13
 80110c2:	edc3 7a04 	vstr	s15, [r3, #16]
 80110c6:	ee67 7a67 	vnmul.f32	s15, s14, s15
 80110ca:	e144      	b.n	8011356 <GUI_TOUCH_CalcCoefficients+0x316>
 80110cc:	f340 8148 	ble.w	8011360 <GUI_TOUCH_CalcCoefficients+0x320>
 80110d0:	2803      	cmp	r0, #3
 80110d2:	d128      	bne.n	8011126 <GUI_TOUCH_CalcCoefficients+0xe6>
 80110d4:	4620      	mov	r0, r4
 80110d6:	581d      	ldr	r5, [r3, r0]
 80110d8:	ee00 5a10 	vmov	s0, r5
 80110dc:	583d      	ldr	r5, [r7, r0]
 80110de:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 80110e2:	ac00      	add	r4, sp, #0
 80110e4:	ee00 5a10 	vmov	s0, r5
 80110e8:	580d      	ldr	r5, [r1, r0]
 80110ea:	4404      	add	r4, r0
 80110ec:	edc4 7a00 	vstr	s15, [r4]
 80110f0:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 80110f4:	ac03      	add	r4, sp, #12
 80110f6:	ee00 5a10 	vmov	s0, r5
 80110fa:	4404      	add	r4, r0
 80110fc:	5815      	ldr	r5, [r2, r0]
 80110fe:	edc4 7a00 	vstr	s15, [r4]
 8011102:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 8011106:	ac0c      	add	r4, sp, #48	; 0x30
 8011108:	4404      	add	r4, r0
 801110a:	ee00 5a10 	vmov	s0, r5
 801110e:	ed44 7a06 	vstr	s15, [r4, #-24]	; 0xffffffe8
 8011112:	ac0c      	add	r4, sp, #48	; 0x30
 8011114:	4404      	add	r4, r0
 8011116:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 801111a:	3004      	adds	r0, #4
 801111c:	280c      	cmp	r0, #12
 801111e:	ed44 7a03 	vstr	s15, [r4, #-12]
 8011122:	d1d8      	bne.n	80110d6 <GUI_TOUCH_CalcCoefficients+0x96>
 8011124:	e09b      	b.n	801125e <GUI_TOUCH_CalcCoefficients+0x21e>
 8011126:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 801112a:	44a1      	add	r9, r4
 801112c:	f04f 0800 	mov.w	r8, #0
 8011130:	f849 8c0c 	str.w	r8, [r9, #-12]
 8011134:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8011138:	44a1      	add	r9, r4
 801113a:	f849 8c18 	str.w	r8, [r9, #-24]
 801113e:	f10d 090c 	add.w	r9, sp, #12
 8011142:	44a1      	add	r9, r4
 8011144:	f8c9 8000 	str.w	r8, [r9]
 8011148:	f10d 0900 	add.w	r9, sp, #0
 801114c:	44a1      	add	r9, r4
 801114e:	3404      	adds	r4, #4
 8011150:	2c0c      	cmp	r4, #12
 8011152:	f8c9 8000 	str.w	r8, [r9]
 8011156:	d1e6      	bne.n	8011126 <GUI_TOUCH_CalcCoefficients+0xe6>
 8011158:	ed9d 7a02 	vldr	s14, [sp, #8]
 801115c:	eddd 7a05 	vldr	s15, [sp, #20]
 8011160:	eddd 3a08 	vldr	s7, [sp, #32]
 8011164:	ed9d 4a0b 	vldr	s8, [sp, #44]	; 0x2c
 8011168:	eddd 1a00 	vldr	s3, [sp]
 801116c:	eddd 5a01 	vldr	s11, [sp, #4]
 8011170:	ed9d 2a04 	vldr	s4, [sp, #16]
 8011174:	eddd 2a06 	vldr	s5, [sp, #24]
 8011178:	ed9d 3a07 	vldr	s6, [sp, #28]
 801117c:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8011180:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8011184:	ea4f 0880 	mov.w	r8, r0, lsl #2
 8011188:	2400      	movs	r4, #0
 801118a:	591d      	ldr	r5, [r3, r4]
 801118c:	ee00 5a10 	vmov	s0, r5
 8011190:	593d      	ldr	r5, [r7, r4]
 8011192:	eeb8 6ac0 	vcvt.f32.s32	s12, s0
 8011196:	ee00 5a10 	vmov	s0, r5
 801119a:	590d      	ldr	r5, [r1, r4]
 801119c:	eef8 6ac0 	vcvt.f32.s32	s13, s0
 80111a0:	ee00 5a10 	vmov	s0, r5
 80111a4:	5915      	ldr	r5, [r2, r4]
 80111a6:	eef8 4ac0 	vcvt.f32.s32	s9, s0
 80111aa:	ee00 5a10 	vmov	s0, r5
 80111ae:	eeb8 5ac0 	vcvt.f32.s32	s10, s0
 80111b2:	eee6 2a24 	vfma.f32	s5, s12, s9
 80111b6:	3404      	adds	r4, #4
 80111b8:	4544      	cmp	r4, r8
 80111ba:	ee73 3aa4 	vadd.f32	s7, s7, s9
 80111be:	eea6 3aa4 	vfma.f32	s6, s13, s9
 80111c2:	eef0 4a60 	vmov.f32	s9, s1
 80111c6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80111ca:	eee6 1a06 	vfma.f32	s3, s12, s12
 80111ce:	eee6 5a26 	vfma.f32	s11, s12, s13
 80111d2:	eee6 4a05 	vfma.f32	s9, s12, s10
 80111d6:	eeb0 6a41 	vmov.f32	s12, s2
 80111da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80111de:	ee34 4a05 	vadd.f32	s8, s8, s10
 80111e2:	eea6 2aa6 	vfma.f32	s4, s13, s13
 80111e6:	eea6 6a85 	vfma.f32	s12, s13, s10
 80111ea:	d004      	beq.n	80111f6 <GUI_TOUCH_CalcCoefficients+0x1b6>
 80111ec:	eef0 0a64 	vmov.f32	s1, s9
 80111f0:	eeb0 1a46 	vmov.f32	s2, s12
 80111f4:	e7c9      	b.n	801118a <GUI_TOUCH_CalcCoefficients+0x14a>
 80111f6:	eec5 6aa7 	vdiv.f32	s13, s11, s15
 80111fa:	ee05 0a10 	vmov	s10, r0
 80111fe:	edcd 6a01 	vstr	s13, [sp, #4]
 8011202:	eef8 6ac5 	vcvt.f32.s32	s13, s10
 8011206:	eec1 1a87 	vdiv.f32	s3, s3, s14
 801120a:	eec5 5a87 	vdiv.f32	s11, s11, s14
 801120e:	ee82 2a27 	vdiv.f32	s4, s4, s15
 8011212:	eec2 2a87 	vdiv.f32	s5, s5, s14
 8011216:	ee83 3a27 	vdiv.f32	s6, s6, s15
 801121a:	eec4 4a87 	vdiv.f32	s9, s9, s14
 801121e:	ee86 6a27 	vdiv.f32	s12, s12, s15
 8011222:	ee87 7a26 	vdiv.f32	s14, s14, s13
 8011226:	eec7 7aa6 	vdiv.f32	s15, s15, s13
 801122a:	eec3 3aa6 	vdiv.f32	s7, s7, s13
 801122e:	eec4 6a26 	vdiv.f32	s13, s8, s13
 8011232:	edcd 1a00 	vstr	s3, [sp]
 8011236:	edcd 5a03 	vstr	s11, [sp, #12]
 801123a:	ed8d 2a04 	vstr	s4, [sp, #16]
 801123e:	edcd 2a06 	vstr	s5, [sp, #24]
 8011242:	ed8d 3a07 	vstr	s6, [sp, #28]
 8011246:	edcd 4a09 	vstr	s9, [sp, #36]	; 0x24
 801124a:	ed8d 6a0a 	vstr	s12, [sp, #40]	; 0x28
 801124e:	ed8d 7a02 	vstr	s14, [sp, #8]
 8011252:	edcd 7a05 	vstr	s15, [sp, #20]
 8011256:	edcd 3a08 	vstr	s7, [sp, #32]
 801125a:	edcd 6a0b 	vstr	s13, [sp, #44]	; 0x2c
 801125e:	ed9d 7a02 	vldr	s14, [sp, #8]
 8011262:	eddd 4a05 	vldr	s9, [sp, #20]
 8011266:	ed9d 6a01 	vldr	s12, [sp, #4]
 801126a:	ed9d 3a03 	vldr	s6, [sp, #12]
 801126e:	eddd 5a00 	vldr	s11, [sp]
 8011272:	eddd 2a04 	vldr	s5, [sp, #16]
 8011276:	ee76 6a47 	vsub.f32	s13, s12, s14
 801127a:	ee73 1a64 	vsub.f32	s3, s6, s9
 801127e:	ee35 2ac7 	vsub.f32	s4, s11, s14
 8011282:	ee32 1ae4 	vsub.f32	s2, s5, s9
 8011286:	ee61 7ae6 	vnmul.f32	s15, s3, s13
 801128a:	eee2 7a01 	vfma.f32	s15, s4, s2
 801128e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8011292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011296:	d063      	beq.n	8011360 <GUI_TOUCH_CalcCoefficients+0x320>
 8011298:	ed9d 4a08 	vldr	s8, [sp, #32]
 801129c:	eddd 0a07 	vldr	s1, [sp, #28]
 80112a0:	eddd 3a06 	vldr	s7, [sp, #24]
 80112a4:	4b53      	ldr	r3, [pc, #332]	; (80113f4 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 80112a6:	ee30 8ac4 	vsub.f32	s16, s1, s8
 80112aa:	ee33 5ac4 	vsub.f32	s10, s7, s8
 80112ae:	ee21 0ac8 	vnmul.f32	s0, s3, s16
 80112b2:	eea5 0a01 	vfma.f32	s0, s10, s2
 80112b6:	ee26 5ac5 	vnmul.f32	s10, s13, s10
 80112ba:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80112be:	eea8 5a02 	vfma.f32	s10, s16, s4
 80112c2:	ed83 0a00 	vstr	s0, [r3]
 80112c6:	ee85 5a27 	vdiv.f32	s10, s10, s15
 80112ca:	ed83 5a01 	vstr	s10, [r3, #4]
 80112ce:	ee23 5ac7 	vnmul.f32	s10, s7, s14
 80112d2:	eea5 5a84 	vfma.f32	s10, s11, s8
 80112d6:	ee24 4a46 	vnmul.f32	s8, s8, s12
 80112da:	ee22 5a85 	vmul.f32	s10, s5, s10
 80112de:	eea7 4a20 	vfma.f32	s8, s14, s1
 80112e2:	eea3 5a04 	vfma.f32	s10, s6, s8
 80112e6:	ee20 4ae5 	vnmul.f32	s8, s1, s11
 80112ea:	eea6 4a23 	vfma.f32	s8, s12, s7
 80112ee:	eddd 3a0a 	vldr	s7, [sp, #40]	; 0x28
 80112f2:	eea4 5a84 	vfma.f32	s10, s9, s8
 80112f6:	ed9d 4a09 	vldr	s8, [sp, #36]	; 0x24
 80112fa:	ee85 5a27 	vdiv.f32	s10, s10, s15
 80112fe:	ed83 5a02 	vstr	s10, [r3, #8]
 8011302:	ed9d 5a0b 	vldr	s10, [sp, #44]	; 0x2c
 8011306:	ee34 0a45 	vsub.f32	s0, s8, s10
 801130a:	ee73 0ac5 	vsub.f32	s1, s7, s10
 801130e:	ee66 6ac0 	vnmul.f32	s13, s13, s0
 8011312:	ee61 1ae0 	vnmul.f32	s3, s3, s1
 8011316:	eee0 6a82 	vfma.f32	s13, s1, s4
 801131a:	eee0 1a01 	vfma.f32	s3, s0, s2
 801131e:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 8011322:	eec1 1aa7 	vdiv.f32	s3, s3, s15
 8011326:	edc3 6a04 	vstr	s13, [r3, #16]
 801132a:	ee64 6a47 	vnmul.f32	s13, s8, s14
 801132e:	edc3 1a03 	vstr	s3, [r3, #12]
 8011332:	eee5 6a85 	vfma.f32	s13, s11, s10
 8011336:	ee25 5a46 	vnmul.f32	s10, s10, s12
 801133a:	ee62 6aa6 	vmul.f32	s13, s5, s13
 801133e:	eea7 5a23 	vfma.f32	s10, s14, s7
 8011342:	ee63 5ae5 	vnmul.f32	s11, s7, s11
 8011346:	eee3 6a05 	vfma.f32	s13, s6, s10
 801134a:	eee6 5a04 	vfma.f32	s11, s12, s8
 801134e:	eee4 6aa5 	vfma.f32	s13, s9, s11
 8011352:	eec6 7aa7 	vdiv.f32	s15, s13, s15
 8011356:	edc3 7a05 	vstr	s15, [r3, #20]
 801135a:	2301      	movs	r3, #1
 801135c:	f8cc 3000 	str.w	r3, [ip]
 8011360:	f8dc 0000 	ldr.w	r0, [ip]
 8011364:	2800      	cmp	r0, #0
 8011366:	f000 80a7 	beq.w	80114b8 <GUI_TOUCH_CalcCoefficients+0x478>
 801136a:	4b23      	ldr	r3, [pc, #140]	; (80113f8 <GUI_TOUCH_CalcCoefficients+0x3b8>)
 801136c:	eddf 7a23 	vldr	s15, [pc, #140]	; 80113fc <GUI_TOUCH_CalcCoefficients+0x3bc>
 8011370:	601e      	str	r6, [r3, #0]
 8011372:	4b23      	ldr	r3, [pc, #140]	; (8011400 <GUI_TOUCH_CalcCoefficients+0x3c0>)
 8011374:	f8c3 a000 	str.w	sl, [r3]
 8011378:	4b1e      	ldr	r3, [pc, #120]	; (80113f4 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 801137a:	ed93 7a00 	vldr	s14, [r3]
 801137e:	eeb4 7a67 	vcmp.f32	s14, s15
 8011382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011386:	d012      	beq.n	80113ae <GUI_TOUCH_CalcCoefficients+0x36e>
 8011388:	edd3 6a01 	vldr	s13, [r3, #4]
 801138c:	eee6 7ae7 	vfms.f32	s15, s13, s15
 8011390:	edd3 6a02 	vldr	s13, [r3, #8]
 8011394:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011398:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 801139c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80113a0:	eec7 7a87 	vdiv.f32	s15, s15, s14
 80113a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80113a8:	ee17 1a90 	vmov	r1, s15
 80113ac:	e001      	b.n	80113b2 <GUI_TOUCH_CalcCoefficients+0x372>
 80113ae:	f04f 31ff 	mov.w	r1, #4294967295
 80113b2:	edd3 7a04 	vldr	s15, [r3, #16]
 80113b6:	eddf 6a11 	vldr	s13, [pc, #68]	; 80113fc <GUI_TOUCH_CalcCoefficients+0x3bc>
 80113ba:	4c12      	ldr	r4, [pc, #72]	; (8011404 <GUI_TOUCH_CalcCoefficients+0x3c4>)
 80113bc:	4a0d      	ldr	r2, [pc, #52]	; (80113f4 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 80113be:	6021      	str	r1, [r4, #0]
 80113c0:	eef4 7a66 	vcmp.f32	s15, s13
 80113c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80113c8:	4627      	mov	r7, r4
 80113ca:	d01f      	beq.n	801140c <GUI_TOUCH_CalcCoefficients+0x3cc>
 80113cc:	ed92 6a03 	vldr	s12, [r2, #12]
 80113d0:	eee6 6a66 	vfms.f32	s13, s12, s13
 80113d4:	ed92 6a05 	vldr	s12, [r2, #20]
 80113d8:	ee76 6ac6 	vsub.f32	s13, s13, s12
 80113dc:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80113e0:	ee76 6ac6 	vsub.f32	s13, s13, s12
 80113e4:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 80113e8:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 80113ec:	ee16 2a90 	vmov	r2, s13
 80113f0:	e00e      	b.n	8011410 <GUI_TOUCH_CalcCoefficients+0x3d0>
 80113f2:	bf00      	nop
 80113f4:	20019500 	.word	0x20019500
 80113f8:	200194f4 	.word	0x200194f4
 80113fc:	00000000 	.word	0x00000000
 8011400:	200194f8 	.word	0x200194f8
 8011404:	200194ec 	.word	0x200194ec
 8011408:	200194fc 	.word	0x200194fc
 801140c:	f04f 32ff 	mov.w	r2, #4294967295
 8011410:	4c2e      	ldr	r4, [pc, #184]	; (80114cc <GUI_TOUCH_CalcCoefficients+0x48c>)
 8011412:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8011416:	3e01      	subs	r6, #1
 8011418:	f10a 3aff 	add.w	sl, sl, #4294967295
 801141c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011420:	ee05 6a90 	vmov	s11, r6
 8011424:	6022      	str	r2, [r4, #0]
 8011426:	ee06 aa10 	vmov	s12, sl
 801142a:	4626      	mov	r6, r4
 801142c:	d016      	beq.n	801145c <GUI_TOUCH_CalcCoefficients+0x41c>
 801142e:	ed93 5a01 	vldr	s10, [r3, #4]
 8011432:	eef8 4ac6 	vcvt.f32.s32	s9, s12
 8011436:	eef8 6ae5 	vcvt.f32.s32	s13, s11
 801143a:	eee4 6ac5 	vfms.f32	s13, s9, s10
 801143e:	ed93 5a02 	vldr	s10, [r3, #8]
 8011442:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8011446:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801144a:	ee76 6ac5 	vsub.f32	s13, s13, s10
 801144e:	ee86 7a87 	vdiv.f32	s14, s13, s14
 8011452:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8011456:	ee17 4a10 	vmov	r4, s14
 801145a:	e001      	b.n	8011460 <GUI_TOUCH_CalcCoefficients+0x420>
 801145c:	f04f 34ff 	mov.w	r4, #4294967295
 8011460:	4d1b      	ldr	r5, [pc, #108]	; (80114d0 <GUI_TOUCH_CalcCoefficients+0x490>)
 8011462:	eef5 7a40 	vcmp.f32	s15, #0.0
 8011466:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801146a:	602c      	str	r4, [r5, #0]
 801146c:	46ac      	mov	ip, r5
 801146e:	d016      	beq.n	801149e <GUI_TOUCH_CalcCoefficients+0x45e>
 8011470:	edd3 6a03 	vldr	s13, [r3, #12]
 8011474:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8011478:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 801147c:	eea5 7ae6 	vfms.f32	s14, s11, s13
 8011480:	edd3 6a05 	vldr	s13, [r3, #20]
 8011484:	ee37 7a66 	vsub.f32	s14, s14, s13
 8011488:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 801148c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8011490:	eec7 7a27 	vdiv.f32	s15, s14, s15
 8011494:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011498:	ee17 3a90 	vmov	r3, s15
 801149c:	e001      	b.n	80114a2 <GUI_TOUCH_CalcCoefficients+0x462>
 801149e:	f04f 33ff 	mov.w	r3, #4294967295
 80114a2:	42a1      	cmp	r1, r4
 80114a4:	4d0b      	ldr	r5, [pc, #44]	; (80114d4 <GUI_TOUCH_CalcCoefficients+0x494>)
 80114a6:	bfc4      	itt	gt
 80114a8:	603c      	strgt	r4, [r7, #0]
 80114aa:	f8cc 1000 	strgt.w	r1, [ip]
 80114ae:	429a      	cmp	r2, r3
 80114b0:	602b      	str	r3, [r5, #0]
 80114b2:	bfc4      	itt	gt
 80114b4:	6033      	strgt	r3, [r6, #0]
 80114b6:	602a      	strgt	r2, [r5, #0]
 80114b8:	f1d0 0001 	rsbs	r0, r0, #1
 80114bc:	bf38      	it	cc
 80114be:	2000      	movcc	r0, #0
 80114c0:	b00c      	add	sp, #48	; 0x30
 80114c2:	ecbd 8b02 	vpop	{d8}
 80114c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80114ca:	bf00      	nop
 80114cc:	200194f0 	.word	0x200194f0
 80114d0:	2001951c 	.word	0x2001951c
 80114d4:	20019518 	.word	0x20019518

080114d8 <GUI_TOUCH_StoreStateEx>:
 80114d8:	b530      	push	{r4, r5, lr}
 80114da:	4d0f      	ldr	r5, [pc, #60]	; (8011518 <GUI_TOUCH_StoreStateEx+0x40>)
 80114dc:	b085      	sub	sp, #20
 80114de:	4629      	mov	r1, r5
 80114e0:	220c      	movs	r2, #12
 80114e2:	4604      	mov	r4, r0
 80114e4:	f008 feee 	bl	801a2c4 <memcmp>
 80114e8:	b1a0      	cbz	r0, 8011514 <GUI_TOUCH_StoreStateEx+0x3c>
 80114ea:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80114ee:	4b0b      	ldr	r3, [pc, #44]	; (801151c <GUI_TOUCH_StoreStateEx+0x44>)
 80114f0:	681b      	ldr	r3, [r3, #0]
 80114f2:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80114f6:	b153      	cbz	r3, 801150e <GUI_TOUCH_StoreStateEx+0x36>
 80114f8:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80114fc:	ad01      	add	r5, sp, #4
 80114fe:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8011502:	4628      	mov	r0, r5
 8011504:	a902      	add	r1, sp, #8
 8011506:	4798      	blx	r3
 8011508:	b920      	cbnz	r0, 8011514 <GUI_TOUCH_StoreStateEx+0x3c>
 801150a:	4628      	mov	r0, r5
 801150c:	e000      	b.n	8011510 <GUI_TOUCH_StoreStateEx+0x38>
 801150e:	4620      	mov	r0, r4
 8011510:	f000 f916 	bl	8011740 <GUI_PID_StoreState>
 8011514:	b005      	add	sp, #20
 8011516:	bd30      	pop	{r4, r5, pc}
 8011518:	20019520 	.word	0x20019520
 801151c:	2001952c 	.word	0x2001952c

08011520 <GUI_SetTextMode>:
 8011520:	4b03      	ldr	r3, [pc, #12]	; (8011530 <GUI_SetTextMode+0x10>)
 8011522:	681b      	ldr	r3, [r3, #0]
 8011524:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 8011528:	8558      	strh	r0, [r3, #42]	; 0x2a
 801152a:	4610      	mov	r0, r2
 801152c:	4770      	bx	lr
 801152e:	bf00      	nop
 8011530:	2000016c 	.word	0x2000016c

08011534 <GUI_SetFont>:
 8011534:	4b03      	ldr	r3, [pc, #12]	; (8011544 <GUI_SetFont+0x10>)
 8011536:	681b      	ldr	r3, [r3, #0]
 8011538:	69d9      	ldr	r1, [r3, #28]
 801153a:	b100      	cbz	r0, 801153e <GUI_SetFont+0xa>
 801153c:	61d8      	str	r0, [r3, #28]
 801153e:	4608      	mov	r0, r1
 8011540:	4770      	bx	lr
 8011542:	bf00      	nop
 8011544:	2000016c 	.word	0x2000016c

08011548 <GUI_SetDrawMode>:
 8011548:	f7fe bae6 	b.w	800fb18 <LCD_SetDrawMode>

0801154c <GL_SetDefault>:
 801154c:	b508      	push	{r3, lr}
 801154e:	2000      	movs	r0, #0
 8011550:	f000 f81c 	bl	801158c <GUI_SetBkColor>
 8011554:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8011558:	f000 f81a 	bl	8011590 <GUI_SetColor>
 801155c:	2001      	movs	r0, #1
 801155e:	f000 f8bd 	bl	80116dc <GUI_SetPenSize>
 8011562:	2000      	movs	r0, #0
 8011564:	f006 fe98 	bl	8018298 <GUI_SetTextAlign>
 8011568:	2000      	movs	r0, #0
 801156a:	f7ff ffd9 	bl	8011520 <GUI_SetTextMode>
 801156e:	2000      	movs	r0, #0
 8011570:	f7ff ffea 	bl	8011548 <GUI_SetDrawMode>
 8011574:	4b04      	ldr	r3, [pc, #16]	; (8011588 <GL_SetDefault+0x3c>)
 8011576:	6818      	ldr	r0, [r3, #0]
 8011578:	f7ff ffdc 	bl	8011534 <GUI_SetFont>
 801157c:	2000      	movs	r0, #0
 801157e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011582:	f006 bead 	b.w	80182e0 <GUI_SetLineStyle>
 8011586:	bf00      	nop
 8011588:	20000170 	.word	0x20000170

0801158c <GUI_SetBkColor>:
 801158c:	f7fe be0c 	b.w	80101a8 <LCD_SetBkColor>

08011590 <GUI_SetColor>:
 8011590:	f7fe be12 	b.w	80101b8 <LCD_SetColor>

08011594 <GUI__AlphaPreserveTrans>:
 8011594:	b510      	push	{r4, lr}
 8011596:	4b07      	ldr	r3, [pc, #28]	; (80115b4 <GUI__AlphaPreserveTrans+0x20>)
 8011598:	781c      	ldrb	r4, [r3, #0]
 801159a:	b120      	cbz	r0, 80115a6 <GUI__AlphaPreserveTrans+0x12>
 801159c:	2201      	movs	r2, #1
 801159e:	701a      	strb	r2, [r3, #0]
 80115a0:	f04f 30ff 	mov.w	r0, #4294967295
 80115a4:	e002      	b.n	80115ac <GUI__AlphaPreserveTrans+0x18>
 80115a6:	7018      	strb	r0, [r3, #0]
 80115a8:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80115ac:	f005 feca 	bl	8017344 <LCD_AA_SetAndMask>
 80115b0:	4620      	mov	r0, r4
 80115b2:	bd10      	pop	{r4, pc}
 80115b4:	20019c8d 	.word	0x20019c8d

080115b8 <GUI_GetCursorLayer>:
 80115b8:	2801      	cmp	r0, #1
 80115ba:	bf9a      	itte	ls
 80115bc:	4b02      	ldrls	r3, [pc, #8]	; (80115c8 <GUI_GetCursorLayer+0x10>)
 80115be:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 80115c2:	2000      	movhi	r0, #0
 80115c4:	4770      	bx	lr
 80115c6:	bf00      	nop
 80115c8:	20019530 	.word	0x20019530

080115cc <GUI_GetLayerPosEx>:
 80115cc:	b538      	push	{r3, r4, r5, lr}
 80115ce:	460d      	mov	r5, r1
 80115d0:	4614      	mov	r4, r2
 80115d2:	f7fe f987 	bl	800f8e4 <LCD_GetPosEx>
 80115d6:	b110      	cbz	r0, 80115de <GUI_GetLayerPosEx+0x12>
 80115d8:	2300      	movs	r3, #0
 80115da:	602b      	str	r3, [r5, #0]
 80115dc:	6023      	str	r3, [r4, #0]
 80115de:	bd38      	pop	{r3, r4, r5, pc}

080115e0 <GUI_SelectLayer>:
 80115e0:	b570      	push	{r4, r5, r6, lr}
 80115e2:	4d08      	ldr	r5, [pc, #32]	; (8011604 <GUI_SelectLayer+0x24>)
 80115e4:	682b      	ldr	r3, [r5, #0]
 80115e6:	2801      	cmp	r0, #1
 80115e8:	4604      	mov	r4, r0
 80115ea:	7c5e      	ldrb	r6, [r3, #17]
 80115ec:	d808      	bhi.n	8011600 <GUI_SelectLayer+0x20>
 80115ee:	f000 fc65 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 80115f2:	b128      	cbz	r0, 8011600 <GUI_SelectLayer+0x20>
 80115f4:	682b      	ldr	r3, [r5, #0]
 80115f6:	745c      	strb	r4, [r3, #17]
 80115f8:	f000 f80a 	bl	8011610 <GUI_SelectLCD>
 80115fc:	4b02      	ldr	r3, [pc, #8]	; (8011608 <GUI_SelectLayer+0x28>)
 80115fe:	601c      	str	r4, [r3, #0]
 8011600:	4630      	mov	r0, r6
 8011602:	bd70      	pop	{r4, r5, r6, pc}
 8011604:	2000016c 	.word	0x2000016c
 8011608:	20019c24 	.word	0x20019c24

0801160c <GUI_SetLayerPosEx>:
 801160c:	f7fe b93a 	b.w	800f884 <LCD_SetPosEx>

08011610 <GUI_SelectLCD>:
 8011610:	b508      	push	{r3, lr}
 8011612:	f005 fa75 	bl	8016b00 <LCD_SelectLCD>
 8011616:	f7fe f8db 	bl	800f7d0 <LCD_UpdateColorIndices>
 801161a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801161e:	f7fb bf05 	b.w	800d42c <WM_Activate>
	...

08011624 <GUI_SaveContext_W>:
 8011624:	b508      	push	{r3, lr}
 8011626:	4b03      	ldr	r3, [pc, #12]	; (8011634 <GUI_SaveContext_W+0x10>)
 8011628:	2270      	movs	r2, #112	; 0x70
 801162a:	6819      	ldr	r1, [r3, #0]
 801162c:	f008 fe59 	bl	801a2e2 <memcpy>
 8011630:	bd08      	pop	{r3, pc}
 8011632:	bf00      	nop
 8011634:	2000016c 	.word	0x2000016c

08011638 <GUI_RestoreContext>:
 8011638:	b508      	push	{r3, lr}
 801163a:	4b03      	ldr	r3, [pc, #12]	; (8011648 <GUI_RestoreContext+0x10>)
 801163c:	4601      	mov	r1, r0
 801163e:	2270      	movs	r2, #112	; 0x70
 8011640:	6818      	ldr	r0, [r3, #0]
 8011642:	f008 fe4e 	bl	801a2e2 <memcpy>
 8011646:	bd08      	pop	{r3, pc}
 8011648:	2000016c 	.word	0x2000016c

0801164c <GUI_RectsIntersect>:
 801164c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011650:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011654:	429a      	cmp	r2, r3
 8011656:	dc14      	bgt.n	8011682 <GUI_RectsIntersect+0x36>
 8011658:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 801165c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011660:	429a      	cmp	r2, r3
 8011662:	dc0e      	bgt.n	8011682 <GUI_RectsIntersect+0x36>
 8011664:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011668:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801166c:	429a      	cmp	r2, r3
 801166e:	dc08      	bgt.n	8011682 <GUI_RectsIntersect+0x36>
 8011670:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011674:	f9b1 2000 	ldrsh.w	r2, [r1]
 8011678:	429a      	cmp	r2, r3
 801167a:	bfcc      	ite	gt
 801167c:	2000      	movgt	r0, #0
 801167e:	2001      	movle	r0, #1
 8011680:	4770      	bx	lr
 8011682:	2000      	movs	r0, #0
 8011684:	4770      	bx	lr

08011686 <GUI_ALLOC_Realloc>:
 8011686:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011688:	4604      	mov	r4, r0
 801168a:	4608      	mov	r0, r1
 801168c:	460e      	mov	r6, r1
 801168e:	f001 fbc3 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 8011692:	4605      	mov	r5, r0
 8011694:	b1f8      	cbz	r0, 80116d6 <GUI_ALLOC_Realloc+0x50>
 8011696:	b1f4      	cbz	r4, 80116d6 <GUI_ALLOC_Realloc+0x50>
 8011698:	4620      	mov	r0, r4
 801169a:	f001 f997 	bl	80129cc <GUI_ALLOC_GetSize>
 801169e:	42b0      	cmp	r0, r6
 80116a0:	bfb4      	ite	lt
 80116a2:	4607      	movlt	r7, r0
 80116a4:	4637      	movge	r7, r6
 80116a6:	4628      	mov	r0, r5
 80116a8:	f001 f962 	bl	8012970 <GUI_ALLOC_LockH>
 80116ac:	9000      	str	r0, [sp, #0]
 80116ae:	4620      	mov	r0, r4
 80116b0:	f001 f95e 	bl	8012970 <GUI_ALLOC_LockH>
 80116b4:	ae02      	add	r6, sp, #8
 80116b6:	4601      	mov	r1, r0
 80116b8:	463a      	mov	r2, r7
 80116ba:	9001      	str	r0, [sp, #4]
 80116bc:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 80116c0:	f008 fe0f 	bl	801a2e2 <memcpy>
 80116c4:	4668      	mov	r0, sp
 80116c6:	f001 f961 	bl	801298c <GUI_ALLOC_UnlockH>
 80116ca:	a801      	add	r0, sp, #4
 80116cc:	f001 f95e 	bl	801298c <GUI_ALLOC_UnlockH>
 80116d0:	4620      	mov	r0, r4
 80116d2:	f001 f987 	bl	80129e4 <GUI_ALLOC_Free>
 80116d6:	4628      	mov	r0, r5
 80116d8:	b003      	add	sp, #12
 80116da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080116dc <GUI_SetPenSize>:
 80116dc:	4b02      	ldr	r3, [pc, #8]	; (80116e8 <GUI_SetPenSize+0xc>)
 80116de:	681b      	ldr	r3, [r3, #0]
 80116e0:	7e1a      	ldrb	r2, [r3, #24]
 80116e2:	7618      	strb	r0, [r3, #24]
 80116e4:	4610      	mov	r0, r2
 80116e6:	4770      	bx	lr
 80116e8:	2000016c 	.word	0x2000016c

080116ec <GUI_PID_GetState>:
 80116ec:	4a11      	ldr	r2, [pc, #68]	; (8011734 <GUI_PID_GetState+0x48>)
 80116ee:	4912      	ldr	r1, [pc, #72]	; (8011738 <GUI_PID_GetState+0x4c>)
 80116f0:	6813      	ldr	r3, [r2, #0]
 80116f2:	6809      	ldr	r1, [r1, #0]
 80116f4:	428b      	cmp	r3, r1
 80116f6:	b570      	push	{r4, r5, r6, lr}
 80116f8:	4604      	mov	r4, r0
 80116fa:	4616      	mov	r6, r2
 80116fc:	4d0f      	ldr	r5, [pc, #60]	; (801173c <GUI_PID_GetState+0x50>)
 80116fe:	d109      	bne.n	8011714 <GUI_PID_GetState+0x28>
 8011700:	42ab      	cmp	r3, r5
 8011702:	bf06      	itte	eq
 8011704:	333c      	addeq	r3, #60	; 0x3c
 8011706:	e893 0007 	ldmiaeq.w	r3, {r0, r1, r2}
 801170a:	e913 0007 	ldmdbne	r3, {r0, r1, r2}
 801170e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011712:	e00a      	b.n	801172a <GUI_PID_GetState+0x3e>
 8011714:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8011718:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801171c:	f105 023c 	add.w	r2, r5, #60	; 0x3c
 8011720:	4293      	cmp	r3, r2
 8011722:	bf18      	it	ne
 8011724:	f103 050c 	addne.w	r5, r3, #12
 8011728:	6035      	str	r5, [r6, #0]
 801172a:	7a20      	ldrb	r0, [r4, #8]
 801172c:	3000      	adds	r0, #0
 801172e:	bf18      	it	ne
 8011730:	2001      	movne	r0, #1
 8011732:	bd70      	pop	{r4, r5, r6, pc}
 8011734:	20000160 	.word	0x20000160
 8011738:	2000015c 	.word	0x2000015c
 801173c:	2001953c 	.word	0x2001953c

08011740 <GUI_PID_StoreState>:
 8011740:	4a21      	ldr	r2, [pc, #132]	; (80117c8 <GUI_PID_StoreState+0x88>)
 8011742:	4922      	ldr	r1, [pc, #136]	; (80117cc <GUI_PID_StoreState+0x8c>)
 8011744:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011748:	6011      	str	r1, [r2, #0]
 801174a:	4f21      	ldr	r7, [pc, #132]	; (80117d0 <GUI_PID_StoreState+0x90>)
 801174c:	4921      	ldr	r1, [pc, #132]	; (80117d4 <GUI_PID_StoreState+0x94>)
 801174e:	683a      	ldr	r2, [r7, #0]
 8011750:	680c      	ldr	r4, [r1, #0]
 8011752:	4603      	mov	r3, r0
 8011754:	4820      	ldr	r0, [pc, #128]	; (80117d8 <GUI_PID_StoreState+0x98>)
 8011756:	4294      	cmp	r4, r2
 8011758:	468c      	mov	ip, r1
 801175a:	f100 063c 	add.w	r6, r0, #60	; 0x3c
 801175e:	d017      	beq.n	8011790 <GUI_PID_StoreState+0x50>
 8011760:	4282      	cmp	r2, r0
 8011762:	bf14      	ite	ne
 8011764:	f1a2 010c 	subne.w	r1, r2, #12
 8011768:	4631      	moveq	r1, r6
 801176a:	7a1d      	ldrb	r5, [r3, #8]
 801176c:	f891 8008 	ldrb.w	r8, [r1, #8]
 8011770:	45a8      	cmp	r8, r5
 8011772:	d10d      	bne.n	8011790 <GUI_PID_StoreState+0x50>
 8011774:	428c      	cmp	r4, r1
 8011776:	d00b      	beq.n	8011790 <GUI_PID_StoreState+0x50>
 8011778:	4281      	cmp	r1, r0
 801177a:	bf14      	ite	ne
 801177c:	390c      	subne	r1, #12
 801177e:	4917      	ldreq	r1, [pc, #92]	; (80117dc <GUI_PID_StoreState+0x9c>)
 8011780:	7a09      	ldrb	r1, [r1, #8]
 8011782:	42a9      	cmp	r1, r5
 8011784:	d104      	bne.n	8011790 <GUI_PID_StoreState+0x50>
 8011786:	4282      	cmp	r2, r0
 8011788:	bf14      	ite	ne
 801178a:	3a0c      	subne	r2, #12
 801178c:	4a13      	ldreq	r2, [pc, #76]	; (80117dc <GUI_PID_StoreState+0x9c>)
 801178e:	603a      	str	r2, [r7, #0]
 8011790:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8011794:	683d      	ldr	r5, [r7, #0]
 8011796:	42b5      	cmp	r5, r6
 8011798:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 801179c:	bf0c      	ite	eq
 801179e:	4d0e      	ldreq	r5, [pc, #56]	; (80117d8 <GUI_PID_StoreState+0x98>)
 80117a0:	350c      	addne	r5, #12
 80117a2:	42ac      	cmp	r4, r5
 80117a4:	603d      	str	r5, [r7, #0]
 80117a6:	d105      	bne.n	80117b4 <GUI_PID_StoreState+0x74>
 80117a8:	42b4      	cmp	r4, r6
 80117aa:	bf14      	ite	ne
 80117ac:	340c      	addne	r4, #12
 80117ae:	4c0a      	ldreq	r4, [pc, #40]	; (80117d8 <GUI_PID_StoreState+0x98>)
 80117b0:	f8cc 4000 	str.w	r4, [ip]
 80117b4:	4a0a      	ldr	r2, [pc, #40]	; (80117e0 <GUI_PID_StoreState+0xa0>)
 80117b6:	6812      	ldr	r2, [r2, #0]
 80117b8:	b10a      	cbz	r2, 80117be <GUI_PID_StoreState+0x7e>
 80117ba:	4618      	mov	r0, r3
 80117bc:	4790      	blx	r2
 80117be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80117c2:	f7ff b8d1 	b.w	8010968 <GUI_SignalEvent>
 80117c6:	bf00      	nop
 80117c8:	20019ca8 	.word	0x20019ca8
 80117cc:	08014fc9 	.word	0x08014fc9
 80117d0:	2000015c 	.word	0x2000015c
 80117d4:	20000160 	.word	0x20000160
 80117d8:	2001953c 	.word	0x2001953c
 80117dc:	20019578 	.word	0x20019578
 80117e0:	20019538 	.word	0x20019538

080117e4 <GUI_PID_IsEmpty>:
 80117e4:	4b03      	ldr	r3, [pc, #12]	; (80117f4 <GUI_PID_IsEmpty+0x10>)
 80117e6:	6818      	ldr	r0, [r3, #0]
 80117e8:	4b03      	ldr	r3, [pc, #12]	; (80117f8 <GUI_PID_IsEmpty+0x14>)
 80117ea:	681b      	ldr	r3, [r3, #0]
 80117ec:	1ac3      	subs	r3, r0, r3
 80117ee:	4258      	negs	r0, r3
 80117f0:	4158      	adcs	r0, r3
 80117f2:	4770      	bx	lr
 80117f4:	20000160 	.word	0x20000160
 80117f8:	2000015c 	.word	0x2000015c

080117fc <GUI_GetKey>:
 80117fc:	4b02      	ldr	r3, [pc, #8]	; (8011808 <GUI_GetKey+0xc>)
 80117fe:	2200      	movs	r2, #0
 8011800:	6818      	ldr	r0, [r3, #0]
 8011802:	601a      	str	r2, [r3, #0]
 8011804:	4770      	bx	lr
 8011806:	bf00      	nop
 8011808:	20019584 	.word	0x20019584

0801180c <GUI_StoreKey>:
 801180c:	4b02      	ldr	r3, [pc, #8]	; (8011818 <GUI_StoreKey+0xc>)
 801180e:	681a      	ldr	r2, [r3, #0]
 8011810:	b902      	cbnz	r2, 8011814 <GUI_StoreKey+0x8>
 8011812:	6018      	str	r0, [r3, #0]
 8011814:	f7ff b8a8 	b.w	8010968 <GUI_SignalEvent>
 8011818:	20019584 	.word	0x20019584

0801181c <GUI_PollKeyMsg>:
 801181c:	4a0a      	ldr	r2, [pc, #40]	; (8011848 <GUI_PollKeyMsg+0x2c>)
 801181e:	490b      	ldr	r1, [pc, #44]	; (801184c <GUI_PollKeyMsg+0x30>)
 8011820:	6813      	ldr	r3, [r2, #0]
 8011822:	6809      	ldr	r1, [r1, #0]
 8011824:	428b      	cmp	r3, r1
 8011826:	b510      	push	{r4, lr}
 8011828:	d00b      	beq.n	8011842 <GUI_PollKeyMsg+0x26>
 801182a:	4c09      	ldr	r4, [pc, #36]	; (8011850 <GUI_PollKeyMsg+0x34>)
 801182c:	42a3      	cmp	r3, r4
 801182e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011832:	bf14      	ite	ne
 8011834:	3308      	addne	r3, #8
 8011836:	3b50      	subeq	r3, #80	; 0x50
 8011838:	6013      	str	r3, [r2, #0]
 801183a:	f003 fd9d 	bl	8015378 <WM_OnKey>
 801183e:	2001      	movs	r0, #1
 8011840:	bd10      	pop	{r4, pc}
 8011842:	2000      	movs	r0, #0
 8011844:	bd10      	pop	{r4, pc}
 8011846:	bf00      	nop
 8011848:	20000168 	.word	0x20000168
 801184c:	20000164 	.word	0x20000164
 8011850:	200195d8 	.word	0x200195d8

08011854 <GUI_MoveRect>:
 8011854:	b168      	cbz	r0, 8011872 <GUI_MoveRect+0x1e>
 8011856:	8803      	ldrh	r3, [r0, #0]
 8011858:	b289      	uxth	r1, r1
 801185a:	440b      	add	r3, r1
 801185c:	8003      	strh	r3, [r0, #0]
 801185e:	8883      	ldrh	r3, [r0, #4]
 8011860:	4419      	add	r1, r3
 8011862:	8843      	ldrh	r3, [r0, #2]
 8011864:	8081      	strh	r1, [r0, #4]
 8011866:	b292      	uxth	r2, r2
 8011868:	4413      	add	r3, r2
 801186a:	8043      	strh	r3, [r0, #2]
 801186c:	88c3      	ldrh	r3, [r0, #6]
 801186e:	441a      	add	r2, r3
 8011870:	80c2      	strh	r2, [r0, #6]
 8011872:	4770      	bx	lr

08011874 <GUI_MergeRect>:
 8011874:	b510      	push	{r4, lr}
 8011876:	b338      	cbz	r0, 80118c8 <GUI_MergeRect+0x54>
 8011878:	b309      	cbz	r1, 80118be <GUI_MergeRect+0x4a>
 801187a:	b30a      	cbz	r2, 80118c0 <GUI_MergeRect+0x4c>
 801187c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011880:	f9b2 3000 	ldrsh.w	r3, [r2]
 8011884:	429c      	cmp	r4, r3
 8011886:	bfb8      	it	lt
 8011888:	4623      	movlt	r3, r4
 801188a:	8003      	strh	r3, [r0, #0]
 801188c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8011890:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011894:	429c      	cmp	r4, r3
 8011896:	bfb8      	it	lt
 8011898:	4623      	movlt	r3, r4
 801189a:	8043      	strh	r3, [r0, #2]
 801189c:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 80118a0:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80118a4:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 80118a8:	429c      	cmp	r4, r3
 80118aa:	bfa8      	it	ge
 80118ac:	4623      	movge	r3, r4
 80118ae:	8083      	strh	r3, [r0, #4]
 80118b0:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 80118b4:	4299      	cmp	r1, r3
 80118b6:	bfa8      	it	ge
 80118b8:	460b      	movge	r3, r1
 80118ba:	80c3      	strh	r3, [r0, #6]
 80118bc:	bd10      	pop	{r4, pc}
 80118be:	4611      	mov	r1, r2
 80118c0:	680b      	ldr	r3, [r1, #0]
 80118c2:	6003      	str	r3, [r0, #0]
 80118c4:	684b      	ldr	r3, [r1, #4]
 80118c6:	6043      	str	r3, [r0, #4]
 80118c8:	bd10      	pop	{r4, pc}
	...

080118cc <GUI_MULTIBUF_BeginEx>:
 80118cc:	4b1a      	ldr	r3, [pc, #104]	; (8011938 <GUI_MULTIBUF_BeginEx+0x6c>)
 80118ce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80118d0:	681b      	ldr	r3, [r3, #0]
 80118d2:	4a1a      	ldr	r2, [pc, #104]	; (801193c <GUI_MULTIBUF_BeginEx+0x70>)
 80118d4:	2b00      	cmp	r3, #0
 80118d6:	bf0c      	ite	eq
 80118d8:	4603      	moveq	r3, r0
 80118da:	2300      	movne	r3, #0
 80118dc:	56d2      	ldrsb	r2, [r2, r3]
 80118de:	2a01      	cmp	r2, #1
 80118e0:	dd28      	ble.n	8011934 <GUI_MULTIBUF_BeginEx+0x68>
 80118e2:	4c17      	ldr	r4, [pc, #92]	; (8011940 <GUI_MULTIBUF_BeginEx+0x74>)
 80118e4:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 80118e8:	1c4d      	adds	r5, r1, #1
 80118ea:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80118ee:	bb09      	cbnz	r1, 8011934 <GUI_MULTIBUF_BeginEx+0x68>
 80118f0:	4d14      	ldr	r5, [pc, #80]	; (8011944 <GUI_MULTIBUF_BeginEx+0x78>)
 80118f2:	4915      	ldr	r1, [pc, #84]	; (8011948 <GUI_MULTIBUF_BeginEx+0x7c>)
 80118f4:	f855 6023 	ldr.w	r6, [r5, r3, lsl #2]
 80118f8:	f851 7023 	ldr.w	r7, [r1, r3, lsl #2]
 80118fc:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
 8011900:	4910      	ldr	r1, [pc, #64]	; (8011944 <GUI_MULTIBUF_BeginEx+0x78>)
 8011902:	3401      	adds	r4, #1
 8011904:	4294      	cmp	r4, r2
 8011906:	bf08      	it	eq
 8011908:	2400      	moveq	r4, #0
 801190a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 801190e:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
 8011912:	42bc      	cmp	r4, r7
 8011914:	d0f2      	beq.n	80118fc <GUI_MULTIBUF_BeginEx+0x30>
 8011916:	f000 fad1 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 801191a:	9001      	str	r0, [sp, #4]
 801191c:	b150      	cbz	r0, 8011934 <GUI_MULTIBUF_BeginEx+0x68>
 801191e:	68c3      	ldr	r3, [r0, #12]
 8011920:	2121      	movs	r1, #33	; 0x21
 8011922:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011924:	a801      	add	r0, sp, #4
 8011926:	4798      	blx	r3
 8011928:	4603      	mov	r3, r0
 801192a:	b118      	cbz	r0, 8011934 <GUI_MULTIBUF_BeginEx+0x68>
 801192c:	9801      	ldr	r0, [sp, #4]
 801192e:	4631      	mov	r1, r6
 8011930:	4622      	mov	r2, r4
 8011932:	4798      	blx	r3
 8011934:	b003      	add	sp, #12
 8011936:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011938:	20019600 	.word	0x20019600
 801193c:	20019c6c 	.word	0x20019c6c
 8011940:	200195f8 	.word	0x200195f8
 8011944:	200195f0 	.word	0x200195f0
 8011948:	200195e0 	.word	0x200195e0

0801194c <GUI_MULTIBUF_Begin>:
 801194c:	4b02      	ldr	r3, [pc, #8]	; (8011958 <GUI_MULTIBUF_Begin+0xc>)
 801194e:	681b      	ldr	r3, [r3, #0]
 8011950:	7c58      	ldrb	r0, [r3, #17]
 8011952:	f7ff bfbb 	b.w	80118cc <GUI_MULTIBUF_BeginEx>
 8011956:	bf00      	nop
 8011958:	2000016c 	.word	0x2000016c

0801195c <GUI_MULTIBUF_EndEx>:
 801195c:	4b13      	ldr	r3, [pc, #76]	; (80119ac <GUI_MULTIBUF_EndEx+0x50>)
 801195e:	4a14      	ldr	r2, [pc, #80]	; (80119b0 <GUI_MULTIBUF_EndEx+0x54>)
 8011960:	681b      	ldr	r3, [r3, #0]
 8011962:	b513      	push	{r0, r1, r4, lr}
 8011964:	2b00      	cmp	r3, #0
 8011966:	bf0c      	ite	eq
 8011968:	4603      	moveq	r3, r0
 801196a:	2300      	movne	r3, #0
 801196c:	56d2      	ldrsb	r2, [r2, r3]
 801196e:	2a01      	cmp	r2, #1
 8011970:	dd1a      	ble.n	80119a8 <GUI_MULTIBUF_EndEx+0x4c>
 8011972:	4910      	ldr	r1, [pc, #64]	; (80119b4 <GUI_MULTIBUF_EndEx+0x58>)
 8011974:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
 8011978:	3a01      	subs	r2, #1
 801197a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 801197e:	b99a      	cbnz	r2, 80119a8 <GUI_MULTIBUF_EndEx+0x4c>
 8011980:	4a0d      	ldr	r2, [pc, #52]	; (80119b8 <GUI_MULTIBUF_EndEx+0x5c>)
 8011982:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8011986:	4a0d      	ldr	r2, [pc, #52]	; (80119bc <GUI_MULTIBUF_EndEx+0x60>)
 8011988:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 801198c:	f000 fa96 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 8011990:	9001      	str	r0, [sp, #4]
 8011992:	b148      	cbz	r0, 80119a8 <GUI_MULTIBUF_EndEx+0x4c>
 8011994:	68c3      	ldr	r3, [r0, #12]
 8011996:	2122      	movs	r1, #34	; 0x22
 8011998:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801199a:	a801      	add	r0, sp, #4
 801199c:	4798      	blx	r3
 801199e:	4603      	mov	r3, r0
 80119a0:	b110      	cbz	r0, 80119a8 <GUI_MULTIBUF_EndEx+0x4c>
 80119a2:	9801      	ldr	r0, [sp, #4]
 80119a4:	4621      	mov	r1, r4
 80119a6:	4798      	blx	r3
 80119a8:	b002      	add	sp, #8
 80119aa:	bd10      	pop	{r4, pc}
 80119ac:	20019600 	.word	0x20019600
 80119b0:	20019c6c 	.word	0x20019c6c
 80119b4:	200195f8 	.word	0x200195f8
 80119b8:	200195f0 	.word	0x200195f0
 80119bc:	200195e8 	.word	0x200195e8

080119c0 <GUI_MULTIBUF_End>:
 80119c0:	4b02      	ldr	r3, [pc, #8]	; (80119cc <GUI_MULTIBUF_End+0xc>)
 80119c2:	681b      	ldr	r3, [r3, #0]
 80119c4:	7c58      	ldrb	r0, [r3, #17]
 80119c6:	f7ff bfc9 	b.w	801195c <GUI_MULTIBUF_EndEx>
 80119ca:	bf00      	nop
 80119cc:	2000016c 	.word	0x2000016c

080119d0 <GUI_InvertRect>:
 80119d0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80119d4:	4607      	mov	r7, r0
 80119d6:	2001      	movs	r0, #1
 80119d8:	469a      	mov	sl, r3
 80119da:	460e      	mov	r6, r1
 80119dc:	4691      	mov	r9, r2
 80119de:	f7ff fdb3 	bl	8011548 <GUI_SetDrawMode>
 80119e2:	4b12      	ldr	r3, [pc, #72]	; (8011a2c <GUI_InvertRect+0x5c>)
 80119e4:	681c      	ldr	r4, [r3, #0]
 80119e6:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80119e8:	6d24      	ldr	r4, [r4, #80]	; 0x50
 80119ea:	442f      	add	r7, r5
 80119ec:	4426      	add	r6, r4
 80119ee:	4680      	mov	r8, r0
 80119f0:	444d      	add	r5, r9
 80119f2:	4454      	add	r4, sl
 80119f4:	4668      	mov	r0, sp
 80119f6:	f8ad 7000 	strh.w	r7, [sp]
 80119fa:	f8ad 5004 	strh.w	r5, [sp, #4]
 80119fe:	f8ad 6002 	strh.w	r6, [sp, #2]
 8011a02:	f8ad 4006 	strh.w	r4, [sp, #6]
 8011a06:	f7fb fb3d 	bl	800d084 <WM__InitIVRSearch>
 8011a0a:	b928      	cbnz	r0, 8011a18 <GUI_InvertRect+0x48>
 8011a0c:	4640      	mov	r0, r8
 8011a0e:	f7ff fd9b 	bl	8011548 <GUI_SetDrawMode>
 8011a12:	b002      	add	sp, #8
 8011a14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011a18:	4638      	mov	r0, r7
 8011a1a:	4631      	mov	r1, r6
 8011a1c:	462a      	mov	r2, r5
 8011a1e:	4623      	mov	r3, r4
 8011a20:	f7fe f8fc 	bl	800fc1c <LCD_FillRect>
 8011a24:	f7fb fa6c 	bl	800cf00 <WM__GetNextIVR>
 8011a28:	e7ef      	b.n	8011a0a <GUI_InvertRect+0x3a>
 8011a2a:	bf00      	nop
 8011a2c:	2000016c 	.word	0x2000016c

08011a30 <GUI_GotoXY>:
 8011a30:	4b02      	ldr	r3, [pc, #8]	; (8011a3c <GUI_GotoXY+0xc>)
 8011a32:	681b      	ldr	r3, [r3, #0]
 8011a34:	8458      	strh	r0, [r3, #34]	; 0x22
 8011a36:	8499      	strh	r1, [r3, #36]	; 0x24
 8011a38:	2000      	movs	r0, #0
 8011a3a:	4770      	bx	lr
 8011a3c:	2000016c 	.word	0x2000016c

08011a40 <GUI_GetYSizeOfFont>:
 8011a40:	7e02      	ldrb	r2, [r0, #24]
 8011a42:	7ec0      	ldrb	r0, [r0, #27]
 8011a44:	4350      	muls	r0, r2
 8011a46:	4770      	bx	lr

08011a48 <GUI_GetStringDistX>:
 8011a48:	b510      	push	{r4, lr}
 8011a4a:	4604      	mov	r4, r0
 8011a4c:	f7fe fd2a 	bl	80104a4 <GUI__GetNumChars>
 8011a50:	4601      	mov	r1, r0
 8011a52:	4620      	mov	r0, r4
 8011a54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011a58:	f000 bdd2 	b.w	8012600 <GUI__GetLineDistX>

08011a5c <GUI_GetOrg>:
 8011a5c:	4b04      	ldr	r3, [pc, #16]	; (8011a70 <GUI_GetOrg+0x14>)
 8011a5e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011a62:	6003      	str	r3, [r0, #0]
 8011a64:	4b03      	ldr	r3, [pc, #12]	; (8011a74 <GUI_GetOrg+0x18>)
 8011a66:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011a6a:	600b      	str	r3, [r1, #0]
 8011a6c:	4770      	bx	lr
 8011a6e:	bf00      	nop
 8011a70:	20019c84 	.word	0x20019c84
 8011a74:	20019c78 	.word	0x20019c78

08011a78 <GUI_FillRectEx>:
 8011a78:	4603      	mov	r3, r0
 8011a7a:	f9b0 0000 	ldrsh.w	r0, [r0]
 8011a7e:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 8011a82:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8011a86:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8011a8a:	f000 b801 	b.w	8011a90 <GUI_FillRect>
	...

08011a90 <GUI_FillRect>:
 8011a90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011a92:	4c0f      	ldr	r4, [pc, #60]	; (8011ad0 <GUI_FillRect+0x40>)
 8011a94:	6824      	ldr	r4, [r4, #0]
 8011a96:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8011a98:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8011a9a:	1947      	adds	r7, r0, r5
 8011a9c:	190e      	adds	r6, r1, r4
 8011a9e:	4415      	add	r5, r2
 8011aa0:	441c      	add	r4, r3
 8011aa2:	4668      	mov	r0, sp
 8011aa4:	f8ad 7000 	strh.w	r7, [sp]
 8011aa8:	f8ad 5004 	strh.w	r5, [sp, #4]
 8011aac:	f8ad 6002 	strh.w	r6, [sp, #2]
 8011ab0:	f8ad 4006 	strh.w	r4, [sp, #6]
 8011ab4:	f7fb fae6 	bl	800d084 <WM__InitIVRSearch>
 8011ab8:	b140      	cbz	r0, 8011acc <GUI_FillRect+0x3c>
 8011aba:	4638      	mov	r0, r7
 8011abc:	4631      	mov	r1, r6
 8011abe:	462a      	mov	r2, r5
 8011ac0:	4623      	mov	r3, r4
 8011ac2:	f7fe f8ab 	bl	800fc1c <LCD_FillRect>
 8011ac6:	f7fb fa1b 	bl	800cf00 <WM__GetNextIVR>
 8011aca:	e7f5      	b.n	8011ab8 <GUI_FillRect+0x28>
 8011acc:	b003      	add	sp, #12
 8011ace:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ad0:	2000016c 	.word	0x2000016c

08011ad4 <GUI_Exec1>:
 8011ad4:	4b0a      	ldr	r3, [pc, #40]	; (8011b00 <GUI_Exec1+0x2c>)
 8011ad6:	b510      	push	{r4, lr}
 8011ad8:	681c      	ldr	r4, [r3, #0]
 8011ada:	b11c      	cbz	r4, 8011ae4 <GUI_Exec1+0x10>
 8011adc:	47a0      	blx	r4
 8011ade:	1c04      	adds	r4, r0, #0
 8011ae0:	bf18      	it	ne
 8011ae2:	2401      	movne	r4, #1
 8011ae4:	f7fb fbf4 	bl	800d2d0 <WM_Exec>
 8011ae8:	4b06      	ldr	r3, [pc, #24]	; (8011b04 <GUI_Exec1+0x30>)
 8011aea:	681b      	ldr	r3, [r3, #0]
 8011aec:	2800      	cmp	r0, #0
 8011aee:	bf18      	it	ne
 8011af0:	2401      	movne	r4, #1
 8011af2:	b11b      	cbz	r3, 8011afc <GUI_Exec1+0x28>
 8011af4:	4798      	blx	r3
 8011af6:	2800      	cmp	r0, #0
 8011af8:	bf18      	it	ne
 8011afa:	2401      	movne	r4, #1
 8011afc:	4620      	mov	r0, r4
 8011afe:	bd10      	pop	{r4, pc}
 8011b00:	20019c80 	.word	0x20019c80
 8011b04:	20019c98 	.word	0x20019c98

08011b08 <GUI_Exec>:
 8011b08:	b510      	push	{r4, lr}
 8011b0a:	2400      	movs	r4, #0
 8011b0c:	f7ff ffe2 	bl	8011ad4 <GUI_Exec1>
 8011b10:	b108      	cbz	r0, 8011b16 <GUI_Exec+0xe>
 8011b12:	2401      	movs	r4, #1
 8011b14:	e7fa      	b.n	8011b0c <GUI_Exec+0x4>
 8011b16:	4620      	mov	r0, r4
 8011b18:	bd10      	pop	{r4, pc}
	...

08011b1c <GUI_DrawVLine>:
 8011b1c:	4b0f      	ldr	r3, [pc, #60]	; (8011b5c <GUI_DrawVLine+0x40>)
 8011b1e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011b20:	681b      	ldr	r3, [r3, #0]
 8011b22:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011b24:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8011b26:	4406      	add	r6, r0
 8011b28:	190d      	adds	r5, r1, r4
 8011b2a:	b2b3      	uxth	r3, r6
 8011b2c:	4414      	add	r4, r2
 8011b2e:	4668      	mov	r0, sp
 8011b30:	f8ad 3000 	strh.w	r3, [sp]
 8011b34:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011b38:	f8ad 5002 	strh.w	r5, [sp, #2]
 8011b3c:	f8ad 4006 	strh.w	r4, [sp, #6]
 8011b40:	f7fb faa0 	bl	800d084 <WM__InitIVRSearch>
 8011b44:	b138      	cbz	r0, 8011b56 <GUI_DrawVLine+0x3a>
 8011b46:	4630      	mov	r0, r6
 8011b48:	4629      	mov	r1, r5
 8011b4a:	4622      	mov	r2, r4
 8011b4c:	f7fe f840 	bl	800fbd0 <LCD_DrawVLine>
 8011b50:	f7fb f9d6 	bl	800cf00 <WM__GetNextIVR>
 8011b54:	e7f6      	b.n	8011b44 <GUI_DrawVLine+0x28>
 8011b56:	b002      	add	sp, #8
 8011b58:	bd70      	pop	{r4, r5, r6, pc}
 8011b5a:	bf00      	nop
 8011b5c:	2000016c 	.word	0x2000016c

08011b60 <GUI_DrawHLine>:
 8011b60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011b62:	4f10      	ldr	r7, [pc, #64]	; (8011ba4 <GUI_DrawHLine+0x44>)
 8011b64:	683b      	ldr	r3, [r7, #0]
 8011b66:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 8011b68:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8011b6a:	4405      	add	r5, r0
 8011b6c:	190e      	adds	r6, r1, r4
 8011b6e:	b2ab      	uxth	r3, r5
 8011b70:	4414      	add	r4, r2
 8011b72:	4668      	mov	r0, sp
 8011b74:	f8ad 6000 	strh.w	r6, [sp]
 8011b78:	f8ad 4004 	strh.w	r4, [sp, #4]
 8011b7c:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011b80:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011b84:	f7fb fa7e 	bl	800d084 <WM__InitIVRSearch>
 8011b88:	b148      	cbz	r0, 8011b9e <GUI_DrawHLine+0x3e>
 8011b8a:	683b      	ldr	r3, [r7, #0]
 8011b8c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8011b8e:	4630      	mov	r0, r6
 8011b90:	681b      	ldr	r3, [r3, #0]
 8011b92:	4629      	mov	r1, r5
 8011b94:	4622      	mov	r2, r4
 8011b96:	4798      	blx	r3
 8011b98:	f7fb f9b2 	bl	800cf00 <WM__GetNextIVR>
 8011b9c:	e7f4      	b.n	8011b88 <GUI_DrawHLine+0x28>
 8011b9e:	b003      	add	sp, #12
 8011ba0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ba2:	bf00      	nop
 8011ba4:	2000016c 	.word	0x2000016c

08011ba8 <GUI_DrawFocusRect>:
 8011ba8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011baa:	4603      	mov	r3, r0
 8011bac:	460a      	mov	r2, r1
 8011bae:	4668      	mov	r0, sp
 8011bb0:	4619      	mov	r1, r3
 8011bb2:	f7fe fb9c 	bl	80102ee <GUI__ReduceRect>
 8011bb6:	4b23      	ldr	r3, [pc, #140]	; (8011c44 <GUI_DrawFocusRect+0x9c>)
 8011bb8:	f8bd 1000 	ldrh.w	r1, [sp]
 8011bbc:	681b      	ldr	r3, [r3, #0]
 8011bbe:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 8011bc2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8011bc6:	4411      	add	r1, r2
 8011bc8:	f8ad 1000 	strh.w	r1, [sp]
 8011bcc:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8011bd0:	4419      	add	r1, r3
 8011bd2:	f8ad 1002 	strh.w	r1, [sp, #2]
 8011bd6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8011bda:	440a      	add	r2, r1
 8011bdc:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011be0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011be4:	4668      	mov	r0, sp
 8011be6:	4413      	add	r3, r2
 8011be8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011bec:	f7fb fa4a 	bl	800d084 <WM__InitIVRSearch>
 8011bf0:	b328      	cbz	r0, 8011c3e <GUI_DrawFocusRect+0x96>
 8011bf2:	f9bd 5000 	ldrsh.w	r5, [sp]
 8011bf6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011bfa:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8011bfe:	429d      	cmp	r5, r3
 8011c00:	dc09      	bgt.n	8011c16 <GUI_DrawFocusRect+0x6e>
 8011c02:	4628      	mov	r0, r5
 8011c04:	f7fd ff90 	bl	800fb28 <LCD_DrawPixel>
 8011c08:	4628      	mov	r0, r5
 8011c0a:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 8011c0e:	f7fd ff8b 	bl	800fb28 <LCD_DrawPixel>
 8011c12:	3502      	adds	r5, #2
 8011c14:	e7ef      	b.n	8011bf6 <GUI_DrawFocusRect+0x4e>
 8011c16:	460c      	mov	r4, r1
 8011c18:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011c1c:	429c      	cmp	r4, r3
 8011c1e:	dc0b      	bgt.n	8011c38 <GUI_DrawFocusRect+0x90>
 8011c20:	4621      	mov	r1, r4
 8011c22:	f9bd 0000 	ldrsh.w	r0, [sp]
 8011c26:	f7fd ff7f 	bl	800fb28 <LCD_DrawPixel>
 8011c2a:	4621      	mov	r1, r4
 8011c2c:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8011c30:	f7fd ff7a 	bl	800fb28 <LCD_DrawPixel>
 8011c34:	3402      	adds	r4, #2
 8011c36:	e7ef      	b.n	8011c18 <GUI_DrawFocusRect+0x70>
 8011c38:	f7fb f962 	bl	800cf00 <WM__GetNextIVR>
 8011c3c:	e7d8      	b.n	8011bf0 <GUI_DrawFocusRect+0x48>
 8011c3e:	b003      	add	sp, #12
 8011c40:	bd30      	pop	{r4, r5, pc}
 8011c42:	bf00      	nop
 8011c44:	2000016c 	.word	0x2000016c

08011c48 <GUI_WrapGetNumLines>:
 8011c48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011c4a:	4605      	mov	r5, r0
 8011c4c:	460e      	mov	r6, r1
 8011c4e:	4617      	mov	r7, r2
 8011c50:	2400      	movs	r4, #0
 8011c52:	4628      	mov	r0, r5
 8011c54:	4631      	mov	r1, r6
 8011c56:	463a      	mov	r2, r7
 8011c58:	f005 fdee 	bl	8017838 <GUI__WrapGetNumBytesToNextLine>
 8011c5c:	b110      	cbz	r0, 8011c64 <GUI_WrapGetNumLines+0x1c>
 8011c5e:	4405      	add	r5, r0
 8011c60:	3401      	adds	r4, #1
 8011c62:	e7f6      	b.n	8011c52 <GUI_WrapGetNumLines+0xa>
 8011c64:	4620      	mov	r0, r4
 8011c66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011c68 <GUI_DispStringInRectWrap>:
 8011c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c6c:	b089      	sub	sp, #36	; 0x24
 8011c6e:	460c      	mov	r4, r1
 8011c70:	9202      	str	r2, [sp, #8]
 8011c72:	9303      	str	r3, [sp, #12]
 8011c74:	4605      	mov	r5, r0
 8011c76:	2800      	cmp	r0, #0
 8011c78:	f000 8091 	beq.w	8011d9e <GUI_DispStringInRectWrap+0x136>
 8011c7c:	f8b1 a000 	ldrh.w	sl, [r1]
 8011c80:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 8011c84:	884e      	ldrh	r6, [r1, #2]
 8011c86:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 8011c8a:	fa0f f289 	sxth.w	r2, r9
 8011c8e:	fa0f f38a 	sxth.w	r3, sl
 8011c92:	1ad3      	subs	r3, r2, r3
 8011c94:	3301      	adds	r3, #1
 8011c96:	9301      	str	r3, [sp, #4]
 8011c98:	f000 fd4e 	bl	8012738 <GUI_GetFontDistY>
 8011c9c:	9902      	ldr	r1, [sp, #8]
 8011c9e:	f011 070c 	ands.w	r7, r1, #12
 8011ca2:	4680      	mov	r8, r0
 8011ca4:	d01b      	beq.n	8011cde <GUI_DispStringInRectWrap+0x76>
 8011ca6:	4628      	mov	r0, r5
 8011ca8:	9901      	ldr	r1, [sp, #4]
 8011caa:	9a03      	ldr	r2, [sp, #12]
 8011cac:	f7ff ffcc 	bl	8011c48 <GUI_WrapGetNumLines>
 8011cb0:	2f08      	cmp	r7, #8
 8011cb2:	d003      	beq.n	8011cbc <GUI_DispStringInRectWrap+0x54>
 8011cb4:	2f0c      	cmp	r7, #12
 8011cb6:	d006      	beq.n	8011cc6 <GUI_DispStringInRectWrap+0x5e>
 8011cb8:	2f04      	cmp	r7, #4
 8011cba:	d110      	bne.n	8011cde <GUI_DispStringInRectWrap+0x76>
 8011cbc:	f10b 0601 	add.w	r6, fp, #1
 8011cc0:	fb00 6618 	mls	r6, r0, r8, r6
 8011cc4:	e00a      	b.n	8011cdc <GUI_DispStringInRectWrap+0x74>
 8011cc6:	b232      	sxth	r2, r6
 8011cc8:	fa0f f38b 	sxth.w	r3, fp
 8011ccc:	1a9b      	subs	r3, r3, r2
 8011cce:	3301      	adds	r3, #1
 8011cd0:	fb08 3010 	mls	r0, r8, r0, r3
 8011cd4:	2302      	movs	r3, #2
 8011cd6:	fb90 f0f3 	sdiv	r0, r0, r3
 8011cda:	4406      	add	r6, r0
 8011cdc:	b2b6      	uxth	r6, r6
 8011cde:	4620      	mov	r0, r4
 8011ce0:	f7f9 fe06 	bl	800b8f0 <WM_SetUserClipRect>
 8011ce4:	4607      	mov	r7, r0
 8011ce6:	b178      	cbz	r0, 8011d08 <GUI_DispStringInRectWrap+0xa0>
 8011ce8:	a804      	add	r0, sp, #16
 8011cea:	4621      	mov	r1, r4
 8011cec:	463a      	mov	r2, r7
 8011cee:	f8ad a010 	strh.w	sl, [sp, #16]
 8011cf2:	f8ad 6012 	strh.w	r6, [sp, #18]
 8011cf6:	f8ad 9014 	strh.w	r9, [sp, #20]
 8011cfa:	f8ad b016 	strh.w	fp, [sp, #22]
 8011cfe:	f7fe fb81 	bl	8010404 <GUI__IntersectRects>
 8011d02:	a804      	add	r0, sp, #16
 8011d04:	f7f9 fdf4 	bl	800b8f0 <WM_SetUserClipRect>
 8011d08:	9901      	ldr	r1, [sp, #4]
 8011d0a:	9a03      	ldr	r2, [sp, #12]
 8011d0c:	4628      	mov	r0, r5
 8011d0e:	f005 fd61 	bl	80177d4 <GUI__WrapGetNumCharsDisp>
 8011d12:	eb06 0b08 	add.w	fp, r6, r8
 8011d16:	4602      	mov	r2, r0
 8011d18:	fa1f fb8b 	uxth.w	fp, fp
 8011d1c:	f10b 33ff 	add.w	r3, fp, #4294967295
 8011d20:	4611      	mov	r1, r2
 8011d22:	4628      	mov	r0, r5
 8011d24:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011d28:	9200      	str	r2, [sp, #0]
 8011d2a:	f8ad a018 	strh.w	sl, [sp, #24]
 8011d2e:	f8ad 601a 	strh.w	r6, [sp, #26]
 8011d32:	f8ad 901c 	strh.w	r9, [sp, #28]
 8011d36:	f000 fc63 	bl	8012600 <GUI__GetLineDistX>
 8011d3a:	9902      	ldr	r1, [sp, #8]
 8011d3c:	9a00      	ldr	r2, [sp, #0]
 8011d3e:	f001 0303 	and.w	r3, r1, #3
 8011d42:	2b01      	cmp	r3, #1
 8011d44:	d013      	beq.n	8011d6e <GUI_DispStringInRectWrap+0x106>
 8011d46:	2b02      	cmp	r3, #2
 8011d48:	d004      	beq.n	8011d54 <GUI_DispStringInRectWrap+0xec>
 8011d4a:	b9ab      	cbnz	r3, 8011d78 <GUI_DispStringInRectWrap+0x110>
 8011d4c:	8823      	ldrh	r3, [r4, #0]
 8011d4e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011d52:	e011      	b.n	8011d78 <GUI_DispStringInRectWrap+0x110>
 8011d54:	8821      	ldrh	r1, [r4, #0]
 8011d56:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 8011d5a:	b20e      	sxth	r6, r1
 8011d5c:	ebc6 060e 	rsb	r6, r6, lr
 8011d60:	1a30      	subs	r0, r6, r0
 8011d62:	fb90 f3f3 	sdiv	r3, r0, r3
 8011d66:	4419      	add	r1, r3
 8011d68:	f8ad 1018 	strh.w	r1, [sp, #24]
 8011d6c:	e004      	b.n	8011d78 <GUI_DispStringInRectWrap+0x110>
 8011d6e:	88a3      	ldrh	r3, [r4, #4]
 8011d70:	3301      	adds	r3, #1
 8011d72:	1a18      	subs	r0, r3, r0
 8011d74:	f8ad 0018 	strh.w	r0, [sp, #24]
 8011d78:	4628      	mov	r0, r5
 8011d7a:	4611      	mov	r1, r2
 8011d7c:	aa06      	add	r2, sp, #24
 8011d7e:	f000 fc6f 	bl	8012660 <GUI__DispLine>
 8011d82:	4628      	mov	r0, r5
 8011d84:	9901      	ldr	r1, [sp, #4]
 8011d86:	9a03      	ldr	r2, [sp, #12]
 8011d88:	f005 fd56 	bl	8017838 <GUI__WrapGetNumBytesToNextLine>
 8011d8c:	4405      	add	r5, r0
 8011d8e:	fa1f f68b 	uxth.w	r6, fp
 8011d92:	782b      	ldrb	r3, [r5, #0]
 8011d94:	2b00      	cmp	r3, #0
 8011d96:	d1b7      	bne.n	8011d08 <GUI_DispStringInRectWrap+0xa0>
 8011d98:	4638      	mov	r0, r7
 8011d9a:	f7f9 fda9 	bl	800b8f0 <WM_SetUserClipRect>
 8011d9e:	b009      	add	sp, #36	; 0x24
 8011da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011da4 <GUI_DispStringAt>:
 8011da4:	4b02      	ldr	r3, [pc, #8]	; (8011db0 <GUI_DispStringAt+0xc>)
 8011da6:	681b      	ldr	r3, [r3, #0]
 8011da8:	8459      	strh	r1, [r3, #34]	; 0x22
 8011daa:	849a      	strh	r2, [r3, #36]	; 0x24
 8011dac:	f000 b802 	b.w	8011db4 <GUI_DispString>
 8011db0:	2000016c 	.word	0x2000016c

08011db4 <GUI_DispString>:
 8011db4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011db8:	4604      	mov	r4, r0
 8011dba:	2800      	cmp	r0, #0
 8011dbc:	d079      	beq.n	8011eb2 <GUI_DispString+0xfe>
 8011dbe:	4d3e      	ldr	r5, [pc, #248]	; (8011eb8 <GUI_DispString+0x104>)
 8011dc0:	f000 fcba 	bl	8012738 <GUI_GetFontDistY>
 8011dc4:	682b      	ldr	r3, [r5, #0]
 8011dc6:	4680      	mov	r8, r0
 8011dc8:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 8011dcc:	f000 fc9c 	bl	8012708 <GUI_GetYAdjust>
 8011dd0:	682b      	ldr	r3, [r5, #0]
 8011dd2:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 8011dd4:	b287      	uxth	r7, r0
 8011dd6:	1bd2      	subs	r2, r2, r7
 8011dd8:	849a      	strh	r2, [r3, #36]	; 0x24
 8011dda:	7823      	ldrb	r3, [r4, #0]
 8011ddc:	2b00      	cmp	r3, #0
 8011dde:	d05d      	beq.n	8011e9c <GUI_DispString+0xe8>
 8011de0:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8011de4:	4620      	mov	r0, r4
 8011de6:	f000 fbdd 	bl	80125a4 <GUI__GetLineNumChars>
 8011dea:	4606      	mov	r6, r0
 8011dec:	4631      	mov	r1, r6
 8011dee:	4620      	mov	r0, r4
 8011df0:	f000 fc06 	bl	8012600 <GUI__GetLineDistX>
 8011df4:	682b      	ldr	r3, [r5, #0]
 8011df6:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8011df8:	f002 0203 	and.w	r2, r2, #3
 8011dfc:	2a01      	cmp	r2, #1
 8011dfe:	d005      	beq.n	8011e0c <GUI_DispString+0x58>
 8011e00:	2a02      	cmp	r2, #2
 8011e02:	bf14      	ite	ne
 8011e04:	2200      	movne	r2, #0
 8011e06:	fb90 f2f2 	sdiveq	r2, r0, r2
 8011e0a:	e000      	b.n	8011e0e <GUI_DispString+0x5a>
 8011e0c:	4602      	mov	r2, r0
 8011e0e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8011e10:	1a8a      	subs	r2, r1, r2
 8011e12:	b292      	uxth	r2, r2
 8011e14:	b291      	uxth	r1, r2
 8011e16:	8459      	strh	r1, [r3, #34]	; 0x22
 8011e18:	fa1f fa80 	uxth.w	sl, r0
 8011e1c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8011e1e:	f8ad 1000 	strh.w	r1, [sp]
 8011e22:	f10a 31ff 	add.w	r1, sl, #4294967295
 8011e26:	440a      	add	r2, r1
 8011e28:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011e2c:	fa1f fb88 	uxth.w	fp, r8
 8011e30:	3b01      	subs	r3, #1
 8011e32:	445b      	add	r3, fp
 8011e34:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011e38:	4620      	mov	r0, r4
 8011e3a:	4631      	mov	r1, r6
 8011e3c:	466a      	mov	r2, sp
 8011e3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011e42:	f000 fc0d 	bl	8012660 <GUI__DispLine>
 8011e46:	682b      	ldr	r3, [r5, #0]
 8011e48:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8011e4c:	849a      	strh	r2, [r3, #36]	; 0x24
 8011e4e:	4620      	mov	r0, r4
 8011e50:	4631      	mov	r1, r6
 8011e52:	f7fe fdc5 	bl	80109e0 <GUI_UC__NumChars2NumBytes>
 8011e56:	5c23      	ldrb	r3, [r4, r0]
 8011e58:	2b0a      	cmp	r3, #10
 8011e5a:	eb04 0200 	add.w	r2, r4, r0
 8011e5e:	d001      	beq.n	8011e64 <GUI_DispString+0xb0>
 8011e60:	2b0d      	cmp	r3, #13
 8011e62:	d112      	bne.n	8011e8a <GUI_DispString+0xd6>
 8011e64:	682b      	ldr	r3, [r5, #0]
 8011e66:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 8011e68:	f001 0103 	and.w	r1, r1, #3
 8011e6c:	3901      	subs	r1, #1
 8011e6e:	2901      	cmp	r1, #1
 8011e70:	bf8a      	itet	hi
 8011e72:	8c19      	ldrhhi	r1, [r3, #32]
 8011e74:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 8011e78:	8459      	strhhi	r1, [r3, #34]	; 0x22
 8011e7a:	7811      	ldrb	r1, [r2, #0]
 8011e7c:	290a      	cmp	r1, #10
 8011e7e:	d10b      	bne.n	8011e98 <GUI_DispString+0xe4>
 8011e80:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 8011e82:	448b      	add	fp, r1
 8011e84:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 8011e88:	e006      	b.n	8011e98 <GUI_DispString+0xe4>
 8011e8a:	4b0b      	ldr	r3, [pc, #44]	; (8011eb8 <GUI_DispString+0x104>)
 8011e8c:	f8bd 0000 	ldrh.w	r0, [sp]
 8011e90:	681b      	ldr	r3, [r3, #0]
 8011e92:	4482      	add	sl, r0
 8011e94:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 8011e98:	7813      	ldrb	r3, [r2, #0]
 8011e9a:	b943      	cbnz	r3, 8011eae <GUI_DispString+0xfa>
 8011e9c:	682b      	ldr	r3, [r5, #0]
 8011e9e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 8011ea0:	4417      	add	r7, r2
 8011ea2:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8011ea4:	849f      	strh	r7, [r3, #36]	; 0x24
 8011ea6:	f022 0203 	bic.w	r2, r2, #3
 8011eaa:	859a      	strh	r2, [r3, #44]	; 0x2c
 8011eac:	e001      	b.n	8011eb2 <GUI_DispString+0xfe>
 8011eae:	1c54      	adds	r4, r2, #1
 8011eb0:	e793      	b.n	8011dda <GUI_DispString+0x26>
 8011eb2:	b003      	add	sp, #12
 8011eb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011eb8:	2000016c 	.word	0x2000016c

08011ebc <GUI_DEVICE__GetpDriver>:
 8011ebc:	2801      	cmp	r0, #1
 8011ebe:	dc09      	bgt.n	8011ed4 <GUI_DEVICE__GetpDriver+0x18>
 8011ec0:	4b05      	ldr	r3, [pc, #20]	; (8011ed8 <GUI_DEVICE__GetpDriver+0x1c>)
 8011ec2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8011ec6:	b120      	cbz	r0, 8011ed2 <GUI_DEVICE__GetpDriver+0x16>
 8011ec8:	68c3      	ldr	r3, [r0, #12]
 8011eca:	681b      	ldr	r3, [r3, #0]
 8011ecc:	b11b      	cbz	r3, 8011ed6 <GUI_DEVICE__GetpDriver+0x1a>
 8011ece:	6800      	ldr	r0, [r0, #0]
 8011ed0:	e7f9      	b.n	8011ec6 <GUI_DEVICE__GetpDriver+0xa>
 8011ed2:	4770      	bx	lr
 8011ed4:	2000      	movs	r0, #0
 8011ed6:	4770      	bx	lr
 8011ed8:	20019c9c 	.word	0x20019c9c

08011edc <GUI_DEVICE_Delete>:
 8011edc:	f000 bd34 	b.w	8012948 <GUI_ALLOC_FreeFixedBlock>

08011ee0 <GUI_DEVICE_Create>:
 8011ee0:	2b01      	cmp	r3, #1
 8011ee2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011ee4:	4606      	mov	r6, r0
 8011ee6:	460d      	mov	r5, r1
 8011ee8:	4617      	mov	r7, r2
 8011eea:	461c      	mov	r4, r3
 8011eec:	dd01      	ble.n	8011ef2 <GUI_DEVICE_Create+0x12>
 8011eee:	2000      	movs	r0, #0
 8011ef0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011ef2:	201c      	movs	r0, #28
 8011ef4:	f000 fe94 	bl	8012c20 <GUI_ALLOC_GetFixedBlock>
 8011ef8:	2800      	cmp	r0, #0
 8011efa:	d0f8      	beq.n	8011eee <GUI_DEVICE_Create+0xe>
 8011efc:	b10d      	cbz	r5, 8011f02 <GUI_DEVICE_Create+0x22>
 8011efe:	6105      	str	r5, [r0, #16]
 8011f00:	e009      	b.n	8011f16 <GUI_DEVICE_Create+0x36>
 8011f02:	4b09      	ldr	r3, [pc, #36]	; (8011f28 <GUI_DEVICE_Create+0x48>)
 8011f04:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 8011f08:	b129      	cbz	r1, 8011f16 <GUI_DEVICE_Create+0x36>
 8011f0a:	680b      	ldr	r3, [r1, #0]
 8011f0c:	b10b      	cbz	r3, 8011f12 <GUI_DEVICE_Create+0x32>
 8011f0e:	4619      	mov	r1, r3
 8011f10:	e7fb      	b.n	8011f0a <GUI_DEVICE_Create+0x2a>
 8011f12:	690b      	ldr	r3, [r1, #16]
 8011f14:	6103      	str	r3, [r0, #16]
 8011f16:	2300      	movs	r3, #0
 8011f18:	6083      	str	r3, [r0, #8]
 8011f1a:	6184      	str	r4, [r0, #24]
 8011f1c:	8287      	strh	r7, [r0, #20]
 8011f1e:	60c6      	str	r6, [r0, #12]
 8011f20:	6003      	str	r3, [r0, #0]
 8011f22:	6043      	str	r3, [r0, #4]
 8011f24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011f26:	bf00      	nop
 8011f28:	20019c9c 	.word	0x20019c9c

08011f2c <GUI_DEVICE_Unlink>:
 8011f2c:	4b09      	ldr	r3, [pc, #36]	; (8011f54 <GUI_DEVICE_Unlink+0x28>)
 8011f2e:	6982      	ldr	r2, [r0, #24]
 8011f30:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8011f34:	4281      	cmp	r1, r0
 8011f36:	bf04      	itt	eq
 8011f38:	6801      	ldreq	r1, [r0, #0]
 8011f3a:	f843 1022 	streq.w	r1, [r3, r2, lsl #2]
 8011f3e:	6843      	ldr	r3, [r0, #4]
 8011f40:	b10b      	cbz	r3, 8011f46 <GUI_DEVICE_Unlink+0x1a>
 8011f42:	6802      	ldr	r2, [r0, #0]
 8011f44:	601a      	str	r2, [r3, #0]
 8011f46:	6802      	ldr	r2, [r0, #0]
 8011f48:	b102      	cbz	r2, 8011f4c <GUI_DEVICE_Unlink+0x20>
 8011f4a:	6053      	str	r3, [r2, #4]
 8011f4c:	2300      	movs	r3, #0
 8011f4e:	6003      	str	r3, [r0, #0]
 8011f50:	6043      	str	r3, [r0, #4]
 8011f52:	4770      	bx	lr
 8011f54:	20019c9c 	.word	0x20019c9c

08011f58 <GUI_DEVICE_Link>:
 8011f58:	b570      	push	{r4, r5, r6, lr}
 8011f5a:	b338      	cbz	r0, 8011fac <GUI_DEVICE_Link+0x54>
 8011f5c:	6982      	ldr	r2, [r0, #24]
 8011f5e:	2a01      	cmp	r2, #1
 8011f60:	dc24      	bgt.n	8011fac <GUI_DEVICE_Link+0x54>
 8011f62:	4919      	ldr	r1, [pc, #100]	; (8011fc8 <GUI_DEVICE_Link+0x70>)
 8011f64:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 8011f68:	460d      	mov	r5, r1
 8011f6a:	b913      	cbnz	r3, 8011f72 <GUI_DEVICE_Link+0x1a>
 8011f6c:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 8011f70:	e01a      	b.n	8011fa8 <GUI_DEVICE_Link+0x50>
 8011f72:	6859      	ldr	r1, [r3, #4]
 8011f74:	b109      	cbz	r1, 8011f7a <GUI_DEVICE_Link+0x22>
 8011f76:	460b      	mov	r3, r1
 8011f78:	e7fb      	b.n	8011f72 <GUI_DEVICE_Link+0x1a>
 8011f7a:	68c1      	ldr	r1, [r0, #12]
 8011f7c:	680e      	ldr	r6, [r1, #0]
 8011f7e:	68d9      	ldr	r1, [r3, #12]
 8011f80:	680c      	ldr	r4, [r1, #0]
 8011f82:	42b4      	cmp	r4, r6
 8011f84:	dd03      	ble.n	8011f8e <GUI_DEVICE_Link+0x36>
 8011f86:	681b      	ldr	r3, [r3, #0]
 8011f88:	2b00      	cmp	r3, #0
 8011f8a:	d1f8      	bne.n	8011f7e <GUI_DEVICE_Link+0x26>
 8011f8c:	e00e      	b.n	8011fac <GUI_DEVICE_Link+0x54>
 8011f8e:	d102      	bne.n	8011f96 <GUI_DEVICE_Link+0x3e>
 8011f90:	8a81      	ldrh	r1, [r0, #20]
 8011f92:	2901      	cmp	r1, #1
 8011f94:	d011      	beq.n	8011fba <GUI_DEVICE_Link+0x62>
 8011f96:	6859      	ldr	r1, [r3, #4]
 8011f98:	b199      	cbz	r1, 8011fc2 <GUI_DEVICE_Link+0x6a>
 8011f9a:	6008      	str	r0, [r1, #0]
 8011f9c:	6041      	str	r1, [r0, #4]
 8011f9e:	6058      	str	r0, [r3, #4]
 8011fa0:	4298      	cmp	r0, r3
 8011fa2:	bf08      	it	eq
 8011fa4:	2300      	moveq	r3, #0
 8011fa6:	6003      	str	r3, [r0, #0]
 8011fa8:	2000      	movs	r0, #0
 8011faa:	bd70      	pop	{r4, r5, r6, pc}
 8011fac:	2001      	movs	r0, #1
 8011fae:	bd70      	pop	{r4, r5, r6, pc}
 8011fb0:	68cb      	ldr	r3, [r1, #12]
 8011fb2:	681b      	ldr	r3, [r3, #0]
 8011fb4:	42a3      	cmp	r3, r4
 8011fb6:	460b      	mov	r3, r1
 8011fb8:	dbed      	blt.n	8011f96 <GUI_DEVICE_Link+0x3e>
 8011fba:	6819      	ldr	r1, [r3, #0]
 8011fbc:	2900      	cmp	r1, #0
 8011fbe:	d1f7      	bne.n	8011fb0 <GUI_DEVICE_Link+0x58>
 8011fc0:	e7e9      	b.n	8011f96 <GUI_DEVICE_Link+0x3e>
 8011fc2:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 8011fc6:	e7ea      	b.n	8011f9e <GUI_DEVICE_Link+0x46>
 8011fc8:	20019c9c 	.word	0x20019c9c

08011fcc <GUI_DEVICE_CreateAndLink>:
 8011fcc:	b538      	push	{r3, r4, r5, lr}
 8011fce:	461d      	mov	r5, r3
 8011fd0:	f7ff ff86 	bl	8011ee0 <GUI_DEVICE_Create>
 8011fd4:	4604      	mov	r4, r0
 8011fd6:	b148      	cbz	r0, 8011fec <GUI_DEVICE_CreateAndLink+0x20>
 8011fd8:	f7ff ffbe 	bl	8011f58 <GUI_DEVICE_Link>
 8011fdc:	68e3      	ldr	r3, [r4, #12]
 8011fde:	681b      	ldr	r3, [r3, #0]
 8011fe0:	b923      	cbnz	r3, 8011fec <GUI_DEVICE_CreateAndLink+0x20>
 8011fe2:	4b03      	ldr	r3, [pc, #12]	; (8011ff0 <GUI_DEVICE_CreateAndLink+0x24>)
 8011fe4:	3516      	adds	r5, #22
 8011fe6:	681b      	ldr	r3, [r3, #0]
 8011fe8:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 8011fec:	4620      	mov	r0, r4
 8011fee:	bd38      	pop	{r3, r4, r5, pc}
 8011ff0:	2000016c 	.word	0x2000016c

08011ff4 <_OnExit>:
 8011ff4:	b510      	push	{r4, lr}
 8011ff6:	4b07      	ldr	r3, [pc, #28]	; (8012014 <_OnExit+0x20>)
 8011ff8:	4807      	ldr	r0, [pc, #28]	; (8012018 <_OnExit+0x24>)
 8011ffa:	2400      	movs	r4, #0
 8011ffc:	4621      	mov	r1, r4
 8011ffe:	2270      	movs	r2, #112	; 0x70
 8012000:	601c      	str	r4, [r3, #0]
 8012002:	f7fe f90f 	bl	8010224 <GUI__memset>
 8012006:	4621      	mov	r1, r4
 8012008:	4804      	ldr	r0, [pc, #16]	; (801201c <_OnExit+0x28>)
 801200a:	2208      	movs	r2, #8
 801200c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012010:	f7fe b908 	b.w	8010224 <GUI__memset>
 8012014:	20019680 	.word	0x20019680
 8012018:	20019608 	.word	0x20019608
 801201c:	20019c9c 	.word	0x20019c9c

08012020 <_InitContext>:
 8012020:	b538      	push	{r3, r4, r5, lr}
 8012022:	4d19      	ldr	r5, [pc, #100]	; (8012088 <_InitContext+0x68>)
 8012024:	682b      	ldr	r3, [r5, #0]
 8012026:	1d1a      	adds	r2, r3, #4
 8012028:	63da      	str	r2, [r3, #60]	; 0x3c
 801202a:	f103 0208 	add.w	r2, r3, #8
 801202e:	639b      	str	r3, [r3, #56]	; 0x38
 8012030:	641b      	str	r3, [r3, #64]	; 0x40
 8012032:	6142      	str	r2, [r0, #20]
 8012034:	7c5a      	ldrb	r2, [r3, #17]
 8012036:	4b15      	ldr	r3, [pc, #84]	; (801208c <_InitContext+0x6c>)
 8012038:	4604      	mov	r4, r0
 801203a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801203e:	68c3      	ldr	r3, [r0, #12]
 8012040:	f104 0108 	add.w	r1, r4, #8
 8012044:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012046:	4798      	blx	r3
 8012048:	4b11      	ldr	r3, [pc, #68]	; (8012090 <_InitContext+0x70>)
 801204a:	6663      	str	r3, [r4, #100]	; 0x64
 801204c:	4b11      	ldr	r3, [pc, #68]	; (8012094 <_InitContext+0x74>)
 801204e:	681b      	ldr	r3, [r3, #0]
 8012050:	61e3      	str	r3, [r4, #28]
 8012052:	682b      	ldr	r3, [r5, #0]
 8012054:	3308      	adds	r3, #8
 8012056:	6163      	str	r3, [r4, #20]
 8012058:	2301      	movs	r3, #1
 801205a:	7623      	strb	r3, [r4, #24]
 801205c:	f7fa f848 	bl	800c0f0 <WM_GetDesktopWindow>
 8012060:	2303      	movs	r3, #3
 8012062:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8012066:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 801206a:	6323      	str	r3, [r4, #48]	; 0x30
 801206c:	6363      	str	r3, [r4, #52]	; 0x34
 801206e:	64a0      	str	r0, [r4, #72]	; 0x48
 8012070:	2000      	movs	r0, #0
 8012072:	f7fe f899 	bl	80101a8 <LCD_SetBkColor>
 8012076:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 801207a:	f7fe f89d 	bl	80101b8 <LCD_SetColor>
 801207e:	4b06      	ldr	r3, [pc, #24]	; (8012098 <_InitContext+0x78>)
 8012080:	4a06      	ldr	r2, [pc, #24]	; (801209c <_InitContext+0x7c>)
 8012082:	601a      	str	r2, [r3, #0]
 8012084:	bd38      	pop	{r3, r4, r5, pc}
 8012086:	bf00      	nop
 8012088:	2000016c 	.word	0x2000016c
 801208c:	20019c9c 	.word	0x20019c9c
 8012090:	08020848 	.word	0x08020848
 8012094:	20000170 	.word	0x20000170
 8012098:	20019c94 	.word	0x20019c94
 801209c:	0802144c 	.word	0x0802144c

080120a0 <GUI_SetDefaultFont>:
 80120a0:	4b01      	ldr	r3, [pc, #4]	; (80120a8 <GUI_SetDefaultFont+0x8>)
 80120a2:	6018      	str	r0, [r3, #0]
 80120a4:	4770      	bx	lr
 80120a6:	bf00      	nop
 80120a8:	20000170 	.word	0x20000170

080120ac <GUI_ClearRect>:
 80120ac:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80120b0:	4607      	mov	r7, r0
 80120b2:	2004      	movs	r0, #4
 80120b4:	469a      	mov	sl, r3
 80120b6:	460e      	mov	r6, r1
 80120b8:	4691      	mov	r9, r2
 80120ba:	f7fd fd2d 	bl	800fb18 <LCD_SetDrawMode>
 80120be:	4b13      	ldr	r3, [pc, #76]	; (801210c <GUI_ClearRect+0x60>)
 80120c0:	681c      	ldr	r4, [r3, #0]
 80120c2:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80120c4:	6d24      	ldr	r4, [r4, #80]	; 0x50
 80120c6:	442f      	add	r7, r5
 80120c8:	4426      	add	r6, r4
 80120ca:	4680      	mov	r8, r0
 80120cc:	444d      	add	r5, r9
 80120ce:	4454      	add	r4, sl
 80120d0:	4668      	mov	r0, sp
 80120d2:	f8ad 7000 	strh.w	r7, [sp]
 80120d6:	f8ad 5004 	strh.w	r5, [sp, #4]
 80120da:	f8ad 6002 	strh.w	r6, [sp, #2]
 80120de:	f8ad 4006 	strh.w	r4, [sp, #6]
 80120e2:	f7fa ffcf 	bl	800d084 <WM__InitIVRSearch>
 80120e6:	b928      	cbnz	r0, 80120f4 <GUI_ClearRect+0x48>
 80120e8:	4640      	mov	r0, r8
 80120ea:	f7fd fd15 	bl	800fb18 <LCD_SetDrawMode>
 80120ee:	b002      	add	sp, #8
 80120f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80120f4:	4638      	mov	r0, r7
 80120f6:	4631      	mov	r1, r6
 80120f8:	462a      	mov	r2, r5
 80120fa:	4623      	mov	r3, r4
 80120fc:	f7fd fd8e 	bl	800fc1c <LCD_FillRect>
 8012100:	f7fa fefe 	bl	800cf00 <WM__GetNextIVR>
 8012104:	2800      	cmp	r0, #0
 8012106:	d1f5      	bne.n	80120f4 <GUI_ClearRect+0x48>
 8012108:	e7ee      	b.n	80120e8 <GUI_ClearRect+0x3c>
 801210a:	bf00      	nop
 801210c:	2000016c 	.word	0x2000016c

08012110 <GUI_Clear>:
 8012110:	b510      	push	{r4, lr}
 8012112:	2000      	movs	r0, #0
 8012114:	4601      	mov	r1, r0
 8012116:	f7ff fc8b 	bl	8011a30 <GUI_GotoXY>
 801211a:	4804      	ldr	r0, [pc, #16]	; (801212c <GUI_Clear+0x1c>)
 801211c:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8012120:	4601      	mov	r1, r0
 8012122:	4613      	mov	r3, r2
 8012124:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012128:	f7ff bfc0 	b.w	80120ac <GUI_ClearRect>
 801212c:	ffffc001 	.word	0xffffc001

08012130 <GUI__RegisterExit>:
 8012130:	b480      	push	{r7}
 8012132:	b083      	sub	sp, #12
 8012134:	af00      	add	r7, sp, #0
 8012136:	6078      	str	r0, [r7, #4]
 8012138:	4b05      	ldr	r3, [pc, #20]	; (8012150 <GUI__RegisterExit+0x20>)
 801213a:	681a      	ldr	r2, [r3, #0]
 801213c:	687b      	ldr	r3, [r7, #4]
 801213e:	605a      	str	r2, [r3, #4]
 8012140:	4b03      	ldr	r3, [pc, #12]	; (8012150 <GUI__RegisterExit+0x20>)
 8012142:	687a      	ldr	r2, [r7, #4]
 8012144:	601a      	str	r2, [r3, #0]
 8012146:	370c      	adds	r7, #12
 8012148:	46bd      	mov	sp, r7
 801214a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801214e:	4770      	bx	lr
 8012150:	20019604 	.word	0x20019604

08012154 <GUI__Config>:
 8012154:	b508      	push	{r3, lr}
 8012156:	4b08      	ldr	r3, [pc, #32]	; (8012178 <GUI__Config+0x24>)
 8012158:	681a      	ldr	r2, [r3, #0]
 801215a:	b962      	cbnz	r2, 8012176 <GUI__Config+0x22>
 801215c:	2201      	movs	r2, #1
 801215e:	601a      	str	r2, [r3, #0]
 8012160:	f7f5 ffb2 	bl	80080c8 <GUI_X_Config>
 8012164:	f7f5 ffde 	bl	8008124 <LCD_X_Config>
 8012168:	4804      	ldr	r0, [pc, #16]	; (801217c <GUI__Config+0x28>)
 801216a:	4b05      	ldr	r3, [pc, #20]	; (8012180 <GUI__Config+0x2c>)
 801216c:	6003      	str	r3, [r0, #0]
 801216e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012172:	f7ff bfdd 	b.w	8012130 <GUI__RegisterExit>
 8012176:	bd08      	pop	{r3, pc}
 8012178:	20019680 	.word	0x20019680
 801217c:	20019678 	.word	0x20019678
 8012180:	08011ff5 	.word	0x08011ff5

08012184 <GUI_Init>:
 8012184:	b590      	push	{r4, r7, lr}
 8012186:	b083      	sub	sp, #12
 8012188:	af00      	add	r7, sp, #0
 801218a:	4b20      	ldr	r3, [pc, #128]	; (801220c <GUI_Init+0x88>)
 801218c:	4a1f      	ldr	r2, [pc, #124]	; (801220c <GUI_Init+0x88>)
 801218e:	6812      	ldr	r2, [r2, #0]
 8012190:	f022 0201 	bic.w	r2, r2, #1
 8012194:	601a      	str	r2, [r3, #0]
 8012196:	4b1e      	ldr	r3, [pc, #120]	; (8012210 <GUI_Init+0x8c>)
 8012198:	2201      	movs	r2, #1
 801219a:	601a      	str	r2, [r3, #0]
 801219c:	4b1d      	ldr	r3, [pc, #116]	; (8012214 <GUI_Init+0x90>)
 801219e:	4a1e      	ldr	r2, [pc, #120]	; (8012218 <GUI_Init+0x94>)
 80121a0:	601a      	str	r2, [r3, #0]
 80121a2:	4b1c      	ldr	r3, [pc, #112]	; (8012214 <GUI_Init+0x90>)
 80121a4:	681a      	ldr	r2, [r3, #0]
 80121a6:	4b1d      	ldr	r3, [pc, #116]	; (801221c <GUI_Init+0x98>)
 80121a8:	429a      	cmp	r2, r3
 80121aa:	d000      	beq.n	80121ae <GUI_Init+0x2a>
 80121ac:	e7fe      	b.n	80121ac <GUI_Init+0x28>
 80121ae:	f7ff ffd1 	bl	8012154 <GUI__Config>
 80121b2:	4b1b      	ldr	r3, [pc, #108]	; (8012220 <GUI_Init+0x9c>)
 80121b4:	222e      	movs	r2, #46	; 0x2e
 80121b6:	701a      	strb	r2, [r3, #0]
 80121b8:	f7f5 ffa6 	bl	8008108 <GUI_X_Init>
 80121bc:	4819      	ldr	r0, [pc, #100]	; (8012224 <GUI_Init+0xa0>)
 80121be:	f7ff ff2f 	bl	8012020 <_InitContext>
 80121c2:	f7fd ff4f 	bl	8010064 <emWin_LCD_Init>
 80121c6:	6078      	str	r0, [r7, #4]
 80121c8:	f7fd fc30 	bl	800fa2c <LCD_GetXSizeDisplay>
 80121cc:	4603      	mov	r3, r0
 80121ce:	2b00      	cmp	r3, #0
 80121d0:	d004      	beq.n	80121dc <GUI_Init+0x58>
 80121d2:	f7fd fc31 	bl	800fa38 <LCD_GetYSizeDisplay>
 80121d6:	4603      	mov	r3, r0
 80121d8:	2b00      	cmp	r3, #0
 80121da:	d109      	bne.n	80121f0 <GUI_Init+0x6c>
 80121dc:	f7fd fc12 	bl	800fa04 <LCD_GetXSizeMax>
 80121e0:	4604      	mov	r4, r0
 80121e2:	f7fd fc12 	bl	800fa0a <LCD_GetYSizeMax>
 80121e6:	4603      	mov	r3, r0
 80121e8:	4620      	mov	r0, r4
 80121ea:	4619      	mov	r1, r3
 80121ec:	f7fd fc14 	bl	800fa18 <LCD_SetDisplaySize>
 80121f0:	2000      	movs	r0, #0
 80121f2:	2100      	movs	r1, #0
 80121f4:	f006 f85a 	bl	80182ac <GUI_SetOrg>
 80121f8:	f7fb f982 	bl	800d500 <WM_Init>
 80121fc:	4b0a      	ldr	r3, [pc, #40]	; (8012228 <GUI_Init+0xa4>)
 80121fe:	2201      	movs	r2, #1
 8012200:	701a      	strb	r2, [r3, #0]
 8012202:	687b      	ldr	r3, [r7, #4]
 8012204:	4618      	mov	r0, r3
 8012206:	370c      	adds	r7, #12
 8012208:	46bd      	mov	sp, r7
 801220a:	bd90      	pop	{r4, r7, pc}
 801220c:	e0002000 	.word	0xe0002000
 8012210:	40023008 	.word	0x40023008
 8012214:	40023000 	.word	0x40023000
 8012218:	f407a5c2 	.word	0xf407a5c2
 801221c:	b5e8b5cd 	.word	0xb5e8b5cd
 8012220:	20019c6e 	.word	0x20019c6e
 8012224:	20019608 	.word	0x20019608
 8012228:	20019c8c 	.word	0x20019c8c

0801222c <GUIPROP__FindChar>:
 801222c:	b138      	cbz	r0, 801223e <GUIPROP__FindChar+0x12>
 801222e:	8803      	ldrh	r3, [r0, #0]
 8012230:	428b      	cmp	r3, r1
 8012232:	d802      	bhi.n	801223a <GUIPROP__FindChar+0xe>
 8012234:	8843      	ldrh	r3, [r0, #2]
 8012236:	428b      	cmp	r3, r1
 8012238:	d201      	bcs.n	801223e <GUIPROP__FindChar+0x12>
 801223a:	6880      	ldr	r0, [r0, #8]
 801223c:	e7f6      	b.n	801222c <GUIPROP__FindChar>
 801223e:	4770      	bx	lr

08012240 <GUIPROP_DispChar>:
 8012240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012244:	4c38      	ldr	r4, [pc, #224]	; (8012328 <GUIPROP_DispChar+0xe8>)
 8012246:	6823      	ldr	r3, [r4, #0]
 8012248:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 801224c:	69db      	ldr	r3, [r3, #28]
 801224e:	4605      	mov	r5, r0
 8012250:	b089      	sub	sp, #36	; 0x24
 8012252:	69d8      	ldr	r0, [r3, #28]
 8012254:	4629      	mov	r1, r5
 8012256:	f7ff ffe9 	bl	801222c <GUIPROP__FindChar>
 801225a:	2800      	cmp	r0, #0
 801225c:	d061      	beq.n	8012322 <GUIPROP_DispChar+0xe2>
 801225e:	f8b0 8000 	ldrh.w	r8, [r0]
 8012262:	6847      	ldr	r7, [r0, #4]
 8012264:	ebc8 0805 	rsb	r8, r8, r5
 8012268:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 801226c:	4648      	mov	r0, r9
 801226e:	f896 b002 	ldrb.w	fp, [r6, #2]
 8012272:	f7fd fc51 	bl	800fb18 <LCD_SetDrawMode>
 8012276:	6825      	ldr	r5, [r4, #0]
 8012278:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 801227c:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 8012280:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 8012284:	f89e c01a 	ldrb.w	ip, [lr, #26]
 8012288:	f89e 3018 	ldrb.w	r3, [lr, #24]
 801228c:	9306      	str	r3, [sp, #24]
 801228e:	4682      	mov	sl, r0
 8012290:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 8012294:	f8cd c000 	str.w	ip, [sp]
 8012298:	f89e e01b 	ldrb.w	lr, [lr, #27]
 801229c:	f8cd e004 	str.w	lr, [sp, #4]
 80122a0:	f04f 0e01 	mov.w	lr, #1
 80122a4:	f8cd b00c 	str.w	fp, [sp, #12]
 80122a8:	f8cd e008 	str.w	lr, [sp, #8]
 80122ac:	6873      	ldr	r3, [r6, #4]
 80122ae:	9304      	str	r3, [sp, #16]
 80122b0:	6bad      	ldr	r5, [r5, #56]	; 0x38
 80122b2:	9b06      	ldr	r3, [sp, #24]
 80122b4:	9505      	str	r5, [sp, #20]
 80122b6:	f7fd fdb9 	bl	800fe2c <LCD_DrawBitmap>
 80122ba:	6823      	ldr	r3, [r4, #0]
 80122bc:	69da      	ldr	r2, [r3, #28]
 80122be:	f892 b019 	ldrb.w	fp, [r2, #25]
 80122c2:	7e11      	ldrb	r1, [r2, #24]
 80122c4:	458b      	cmp	fp, r1
 80122c6:	d920      	bls.n	801230a <GUIPROP_DispChar+0xca>
 80122c8:	f1b9 0f02 	cmp.w	r9, #2
 80122cc:	7ed5      	ldrb	r5, [r2, #27]
 80122ce:	d01c      	beq.n	801230a <GUIPROP_DispChar+0xca>
 80122d0:	9107      	str	r1, [sp, #28]
 80122d2:	f006 f828 	bl	8018326 <GUI_GetColor>
 80122d6:	4681      	mov	r9, r0
 80122d8:	f006 f81e 	bl	8018318 <GUI_GetBkColor>
 80122dc:	f7ff f958 	bl	8011590 <GUI_SetColor>
 80122e0:	6824      	ldr	r4, [r4, #0]
 80122e2:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 80122e6:	69e2      	ldr	r2, [r4, #28]
 80122e8:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 80122ec:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80122f0:	7ed2      	ldrb	r2, [r2, #27]
 80122f2:	9907      	ldr	r1, [sp, #28]
 80122f4:	fb07 0202 	mla	r2, r7, r2, r0
 80122f8:	fb01 3105 	mla	r1, r1, r5, r3
 80122fc:	fb0b 3305 	mla	r3, fp, r5, r3
 8012300:	f7fd fc8c 	bl	800fc1c <LCD_FillRect>
 8012304:	4648      	mov	r0, r9
 8012306:	f7ff f943 	bl	8011590 <GUI_SetColor>
 801230a:	4650      	mov	r0, sl
 801230c:	f7fd fc04 	bl	800fb18 <LCD_SetDrawMode>
 8012310:	4b05      	ldr	r3, [pc, #20]	; (8012328 <GUIPROP_DispChar+0xe8>)
 8012312:	681b      	ldr	r3, [r3, #0]
 8012314:	69da      	ldr	r2, [r3, #28]
 8012316:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012318:	7e90      	ldrb	r0, [r2, #26]
 801231a:	7872      	ldrb	r2, [r6, #1]
 801231c:	fb00 1202 	mla	r2, r0, r2, r1
 8012320:	845a      	strh	r2, [r3, #34]	; 0x22
 8012322:	b009      	add	sp, #36	; 0x24
 8012324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012328:	2000016c 	.word	0x2000016c

0801232c <GUIPROP_GetCharDistX>:
 801232c:	4b0d      	ldr	r3, [pc, #52]	; (8012364 <GUIPROP_GetCharDistX+0x38>)
 801232e:	b570      	push	{r4, r5, r6, lr}
 8012330:	681b      	ldr	r3, [r3, #0]
 8012332:	69dd      	ldr	r5, [r3, #28]
 8012334:	4606      	mov	r6, r0
 8012336:	460c      	mov	r4, r1
 8012338:	69e8      	ldr	r0, [r5, #28]
 801233a:	4631      	mov	r1, r6
 801233c:	f7ff ff76 	bl	801222c <GUIPROP__FindChar>
 8012340:	b170      	cbz	r0, 8012360 <GUIPROP_GetCharDistX+0x34>
 8012342:	8803      	ldrh	r3, [r0, #0]
 8012344:	6842      	ldr	r2, [r0, #4]
 8012346:	1af6      	subs	r6, r6, r3
 8012348:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 801234c:	7858      	ldrb	r0, [r3, #1]
 801234e:	7eab      	ldrb	r3, [r5, #26]
 8012350:	fb10 f003 	smulbb	r0, r0, r3
 8012354:	b124      	cbz	r4, 8012360 <GUIPROP_GetCharDistX+0x34>
 8012356:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 801235a:	fb12 f303 	smulbb	r3, r2, r3
 801235e:	6023      	str	r3, [r4, #0]
 8012360:	bd70      	pop	{r4, r5, r6, pc}
 8012362:	bf00      	nop
 8012364:	2000016c 	.word	0x2000016c

08012368 <GUIPROP_GetFontInfo>:
 8012368:	2301      	movs	r3, #1
 801236a:	800b      	strh	r3, [r1, #0]
 801236c:	4770      	bx	lr

0801236e <GUIPROP_IsInFont>:
 801236e:	b508      	push	{r3, lr}
 8012370:	69c0      	ldr	r0, [r0, #28]
 8012372:	f7ff ff5b 	bl	801222c <GUIPROP__FindChar>
 8012376:	3000      	adds	r0, #0
 8012378:	bf18      	it	ne
 801237a:	2001      	movne	r0, #1
 801237c:	bd08      	pop	{r3, pc}
	...

08012380 <GUIMONO_DispChar>:
 8012380:	4b52      	ldr	r3, [pc, #328]	; (80124cc <GUIMONO_DispChar+0x14c>)
 8012382:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012386:	681b      	ldr	r3, [r3, #0]
 8012388:	69d9      	ldr	r1, [r3, #28]
 801238a:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 801238c:	69cc      	ldr	r4, [r1, #28]
 801238e:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 8012390:	89a2      	ldrh	r2, [r4, #12]
 8012392:	4290      	cmp	r0, r2
 8012394:	b08b      	sub	sp, #44	; 0x2c
 8012396:	d308      	bcc.n	80123aa <GUIMONO_DispChar+0x2a>
 8012398:	89e6      	ldrh	r6, [r4, #14]
 801239a:	4286      	cmp	r6, r0
 801239c:	d305      	bcc.n	80123aa <GUIMONO_DispChar+0x2a>
 801239e:	f8d4 9000 	ldr.w	r9, [r4]
 80123a2:	1a82      	subs	r2, r0, r2
 80123a4:	f04f 3bff 	mov.w	fp, #4294967295
 80123a8:	e015      	b.n	80123d6 <GUIMONO_DispChar+0x56>
 80123aa:	68a2      	ldr	r2, [r4, #8]
 80123ac:	f8d4 9004 	ldr.w	r9, [r4, #4]
 80123b0:	2a00      	cmp	r2, #0
 80123b2:	f000 8081 	beq.w	80124b8 <GUIMONO_DispChar+0x138>
 80123b6:	8816      	ldrh	r6, [r2, #0]
 80123b8:	42b0      	cmp	r0, r6
 80123ba:	d37d      	bcc.n	80124b8 <GUIMONO_DispChar+0x138>
 80123bc:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 80123c0:	4584      	cmp	ip, r0
 80123c2:	d379      	bcc.n	80124b8 <GUIMONO_DispChar+0x138>
 80123c4:	6852      	ldr	r2, [r2, #4]
 80123c6:	1b80      	subs	r0, r0, r6
 80123c8:	b280      	uxth	r0, r0
 80123ca:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 80123ce:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 80123d2:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 80123d6:	1c50      	adds	r0, r2, #1
 80123d8:	d06e      	beq.n	80124b8 <GUIMONO_DispChar+0x138>
 80123da:	f891 8018 	ldrb.w	r8, [r1, #24]
 80123de:	7ca1      	ldrb	r1, [r4, #18]
 80123e0:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 80123e4:	7c26      	ldrb	r6, [r4, #16]
 80123e6:	9206      	str	r2, [sp, #24]
 80123e8:	fb18 f101 	smulbb	r1, r8, r1
 80123ec:	9107      	str	r1, [sp, #28]
 80123ee:	fa0f f18a 	sxth.w	r1, sl
 80123f2:	4608      	mov	r0, r1
 80123f4:	9108      	str	r1, [sp, #32]
 80123f6:	f7fd fb8f 	bl	800fb18 <LCD_SetDrawMode>
 80123fa:	4934      	ldr	r1, [pc, #208]	; (80124cc <GUIMONO_DispChar+0x14c>)
 80123fc:	9009      	str	r0, [sp, #36]	; 0x24
 80123fe:	680b      	ldr	r3, [r1, #0]
 8012400:	9a06      	ldr	r2, [sp, #24]
 8012402:	69d9      	ldr	r1, [r3, #28]
 8012404:	7e88      	ldrb	r0, [r1, #26]
 8012406:	9000      	str	r0, [sp, #0]
 8012408:	7ec9      	ldrb	r1, [r1, #27]
 801240a:	9101      	str	r1, [sp, #4]
 801240c:	2101      	movs	r1, #1
 801240e:	9102      	str	r1, [sp, #8]
 8012410:	7ca1      	ldrb	r1, [r4, #18]
 8012412:	9103      	str	r1, [sp, #12]
 8012414:	9907      	ldr	r1, [sp, #28]
 8012416:	fb01 9202 	mla	r2, r1, r2, r9
 801241a:	9204      	str	r2, [sp, #16]
 801241c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801241e:	9305      	str	r3, [sp, #20]
 8012420:	b23f      	sxth	r7, r7
 8012422:	b22d      	sxth	r5, r5
 8012424:	4638      	mov	r0, r7
 8012426:	4629      	mov	r1, r5
 8012428:	4632      	mov	r2, r6
 801242a:	4643      	mov	r3, r8
 801242c:	f7fd fcfe 	bl	800fe2c <LCD_DrawBitmap>
 8012430:	f1bb 3fff 	cmp.w	fp, #4294967295
 8012434:	d01b      	beq.n	801246e <GUIMONO_DispChar+0xee>
 8012436:	f04a 0002 	orr.w	r0, sl, #2
 801243a:	b200      	sxth	r0, r0
 801243c:	f7fd fb6c 	bl	800fb18 <LCD_SetDrawMode>
 8012440:	4a22      	ldr	r2, [pc, #136]	; (80124cc <GUIMONO_DispChar+0x14c>)
 8012442:	6813      	ldr	r3, [r2, #0]
 8012444:	69da      	ldr	r2, [r3, #28]
 8012446:	7e91      	ldrb	r1, [r2, #26]
 8012448:	9100      	str	r1, [sp, #0]
 801244a:	7ed2      	ldrb	r2, [r2, #27]
 801244c:	9201      	str	r2, [sp, #4]
 801244e:	2101      	movs	r1, #1
 8012450:	9102      	str	r1, [sp, #8]
 8012452:	9907      	ldr	r1, [sp, #28]
 8012454:	7ca2      	ldrb	r2, [r4, #18]
 8012456:	9203      	str	r2, [sp, #12]
 8012458:	fb01 920b 	mla	r2, r1, fp, r9
 801245c:	9204      	str	r2, [sp, #16]
 801245e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012460:	9305      	str	r3, [sp, #20]
 8012462:	4638      	mov	r0, r7
 8012464:	4629      	mov	r1, r5
 8012466:	4632      	mov	r2, r6
 8012468:	4643      	mov	r3, r8
 801246a:	f7fd fcdf 	bl	800fe2c <LCD_DrawBitmap>
 801246e:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80124cc <GUIMONO_DispChar+0x14c>
 8012472:	f8d8 3000 	ldr.w	r3, [r8]
 8012476:	69db      	ldr	r3, [r3, #28]
 8012478:	7e5a      	ldrb	r2, [r3, #25]
 801247a:	7e1b      	ldrb	r3, [r3, #24]
 801247c:	429a      	cmp	r2, r3
 801247e:	d917      	bls.n	80124b0 <GUIMONO_DispChar+0x130>
 8012480:	9a08      	ldr	r2, [sp, #32]
 8012482:	2a02      	cmp	r2, #2
 8012484:	d014      	beq.n	80124b0 <GUIMONO_DispChar+0x130>
 8012486:	f08a 0004 	eor.w	r0, sl, #4
 801248a:	b200      	sxth	r0, r0
 801248c:	f7fd fb44 	bl	800fb18 <LCD_SetDrawMode>
 8012490:	f8d8 3000 	ldr.w	r3, [r8]
 8012494:	69db      	ldr	r3, [r3, #28]
 8012496:	f893 e018 	ldrb.w	lr, [r3, #24]
 801249a:	7ed9      	ldrb	r1, [r3, #27]
 801249c:	7e9a      	ldrb	r2, [r3, #26]
 801249e:	7e5b      	ldrb	r3, [r3, #25]
 80124a0:	4638      	mov	r0, r7
 80124a2:	fb0e 5101 	mla	r1, lr, r1, r5
 80124a6:	fb06 7202 	mla	r2, r6, r2, r7
 80124aa:	442b      	add	r3, r5
 80124ac:	f7fd fbb6 	bl	800fc1c <LCD_FillRect>
 80124b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80124b2:	b2d8      	uxtb	r0, r3
 80124b4:	f7fd fb30 	bl	800fb18 <LCD_SetDrawMode>
 80124b8:	4b04      	ldr	r3, [pc, #16]	; (80124cc <GUIMONO_DispChar+0x14c>)
 80124ba:	7c61      	ldrb	r1, [r4, #17]
 80124bc:	681b      	ldr	r3, [r3, #0]
 80124be:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 80124c0:	440a      	add	r2, r1
 80124c2:	845a      	strh	r2, [r3, #34]	; 0x22
 80124c4:	b00b      	add	sp, #44	; 0x2c
 80124c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124ca:	bf00      	nop
 80124cc:	2000016c 	.word	0x2000016c

080124d0 <GUIMONO_GetCharDistX>:
 80124d0:	4b04      	ldr	r3, [pc, #16]	; (80124e4 <GUIMONO_GetCharDistX+0x14>)
 80124d2:	681b      	ldr	r3, [r3, #0]
 80124d4:	69db      	ldr	r3, [r3, #28]
 80124d6:	69db      	ldr	r3, [r3, #28]
 80124d8:	b109      	cbz	r1, 80124de <GUIMONO_GetCharDistX+0xe>
 80124da:	7c1a      	ldrb	r2, [r3, #16]
 80124dc:	600a      	str	r2, [r1, #0]
 80124de:	7c58      	ldrb	r0, [r3, #17]
 80124e0:	4770      	bx	lr
 80124e2:	bf00      	nop
 80124e4:	2000016c 	.word	0x2000016c

080124e8 <GUIMONO_GetFontInfo>:
 80124e8:	2302      	movs	r3, #2
 80124ea:	800b      	strh	r3, [r1, #0]
 80124ec:	4770      	bx	lr

080124ee <GUIMONO_IsInFont>:
 80124ee:	69c3      	ldr	r3, [r0, #28]
 80124f0:	899a      	ldrh	r2, [r3, #12]
 80124f2:	428a      	cmp	r2, r1
 80124f4:	d802      	bhi.n	80124fc <GUIMONO_IsInFont+0xe>
 80124f6:	89da      	ldrh	r2, [r3, #14]
 80124f8:	428a      	cmp	r2, r1
 80124fa:	d20f      	bcs.n	801251c <GUIMONO_IsInFont+0x2e>
 80124fc:	6898      	ldr	r0, [r3, #8]
 80124fe:	b180      	cbz	r0, 8012522 <GUIMONO_IsInFont+0x34>
 8012500:	8803      	ldrh	r3, [r0, #0]
 8012502:	4299      	cmp	r1, r3
 8012504:	d30c      	bcc.n	8012520 <GUIMONO_IsInFont+0x32>
 8012506:	8842      	ldrh	r2, [r0, #2]
 8012508:	428a      	cmp	r2, r1
 801250a:	d309      	bcc.n	8012520 <GUIMONO_IsInFont+0x32>
 801250c:	1ac9      	subs	r1, r1, r3
 801250e:	6842      	ldr	r2, [r0, #4]
 8012510:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 8012514:	43c0      	mvns	r0, r0
 8012516:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801251a:	4770      	bx	lr
 801251c:	2001      	movs	r0, #1
 801251e:	4770      	bx	lr
 8012520:	2000      	movs	r0, #0
 8012522:	4770      	bx	lr

08012524 <_Log2VisBuffered>:
 8012524:	4770      	bx	lr
	...

08012528 <_DispLine>:
 8012528:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801252a:	4615      	mov	r5, r2
 801252c:	ab02      	add	r3, sp, #8
 801252e:	4a1a      	ldr	r2, [pc, #104]	; (8012598 <_DispLine+0x70>)
 8012530:	f843 1d08 	str.w	r1, [r3, #-8]!
 8012534:	9001      	str	r0, [sp, #4]
 8012536:	6812      	ldr	r2, [r2, #0]
 8012538:	4c18      	ldr	r4, [pc, #96]	; (801259c <_DispLine+0x74>)
 801253a:	4669      	mov	r1, sp
 801253c:	4790      	blx	r2
 801253e:	6823      	ldr	r3, [r4, #0]
 8012540:	9001      	str	r0, [sp, #4]
 8012542:	6958      	ldr	r0, [r3, #20]
 8012544:	b958      	cbnz	r0, 801255e <_DispLine+0x36>
 8012546:	2001      	movs	r0, #1
 8012548:	f7fd ff54 	bl	80103f4 <GUI__ManageCache>
 801254c:	6823      	ldr	r3, [r4, #0]
 801254e:	69db      	ldr	r3, [r3, #28]
 8012550:	695b      	ldr	r3, [r3, #20]
 8012552:	b1bb      	cbz	r3, 8012584 <_DispLine+0x5c>
 8012554:	689b      	ldr	r3, [r3, #8]
 8012556:	9801      	ldr	r0, [sp, #4]
 8012558:	9900      	ldr	r1, [sp, #0]
 801255a:	4798      	blx	r3
 801255c:	e017      	b.n	801258e <_DispLine+0x66>
 801255e:	4629      	mov	r1, r5
 8012560:	f7ff f874 	bl	801164c <GUI_RectsIntersect>
 8012564:	2800      	cmp	r0, #0
 8012566:	d1ee      	bne.n	8012546 <_DispLine+0x1e>
 8012568:	e014      	b.n	8012594 <_DispLine+0x6c>
 801256a:	a801      	add	r0, sp, #4
 801256c:	f7fe fa24 	bl	80109b8 <GUI_UC__GetCharCodeInc>
 8012570:	6823      	ldr	r3, [r4, #0]
 8012572:	69db      	ldr	r3, [r3, #28]
 8012574:	681b      	ldr	r3, [r3, #0]
 8012576:	4605      	mov	r5, r0
 8012578:	4798      	blx	r3
 801257a:	4b09      	ldr	r3, [pc, #36]	; (80125a0 <_DispLine+0x78>)
 801257c:	681b      	ldr	r3, [r3, #0]
 801257e:	b10b      	cbz	r3, 8012584 <_DispLine+0x5c>
 8012580:	4628      	mov	r0, r5
 8012582:	4798      	blx	r3
 8012584:	9b00      	ldr	r3, [sp, #0]
 8012586:	3b01      	subs	r3, #1
 8012588:	2b00      	cmp	r3, #0
 801258a:	9300      	str	r3, [sp, #0]
 801258c:	daed      	bge.n	801256a <_DispLine+0x42>
 801258e:	2000      	movs	r0, #0
 8012590:	f7fd ff30 	bl	80103f4 <GUI__ManageCache>
 8012594:	b003      	add	sp, #12
 8012596:	bd30      	pop	{r4, r5, pc}
 8012598:	20000174 	.word	0x20000174
 801259c:	2000016c 	.word	0x2000016c
 80125a0:	20019c88 	.word	0x20019c88

080125a4 <GUI__GetLineNumChars>:
 80125a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80125a6:	460d      	mov	r5, r1
 80125a8:	9001      	str	r0, [sp, #4]
 80125aa:	4604      	mov	r4, r0
 80125ac:	b198      	cbz	r0, 80125d6 <GUI__GetLineNumChars+0x32>
 80125ae:	4b0b      	ldr	r3, [pc, #44]	; (80125dc <GUI__GetLineNumChars+0x38>)
 80125b0:	681b      	ldr	r3, [r3, #0]
 80125b2:	69db      	ldr	r3, [r3, #28]
 80125b4:	695b      	ldr	r3, [r3, #20]
 80125b6:	b10b      	cbz	r3, 80125bc <GUI__GetLineNumChars+0x18>
 80125b8:	685b      	ldr	r3, [r3, #4]
 80125ba:	b90b      	cbnz	r3, 80125c0 <GUI__GetLineNumChars+0x1c>
 80125bc:	2400      	movs	r4, #0
 80125be:	e008      	b.n	80125d2 <GUI__GetLineNumChars+0x2e>
 80125c0:	4798      	blx	r3
 80125c2:	e009      	b.n	80125d8 <GUI__GetLineNumChars+0x34>
 80125c4:	a801      	add	r0, sp, #4
 80125c6:	f7fe f9f7 	bl	80109b8 <GUI_UC__GetCharCodeInc>
 80125ca:	b120      	cbz	r0, 80125d6 <GUI__GetLineNumChars+0x32>
 80125cc:	280a      	cmp	r0, #10
 80125ce:	d002      	beq.n	80125d6 <GUI__GetLineNumChars+0x32>
 80125d0:	3401      	adds	r4, #1
 80125d2:	42ac      	cmp	r4, r5
 80125d4:	dbf6      	blt.n	80125c4 <GUI__GetLineNumChars+0x20>
 80125d6:	4620      	mov	r0, r4
 80125d8:	b003      	add	sp, #12
 80125da:	bd30      	pop	{r4, r5, pc}
 80125dc:	2000016c 	.word	0x2000016c

080125e0 <GUI__GetOverlap>:
 80125e0:	b513      	push	{r0, r1, r4, lr}
 80125e2:	a902      	add	r1, sp, #8
 80125e4:	2400      	movs	r4, #0
 80125e6:	f841 4d04 	str.w	r4, [r1, #-4]!
 80125ea:	f000 f8b7 	bl	801275c <GUI_GetCharDistXEx>
 80125ee:	9b01      	ldr	r3, [sp, #4]
 80125f0:	4283      	cmp	r3, r0
 80125f2:	bfcc      	ite	gt
 80125f4:	ebc0 0003 	rsbgt	r0, r0, r3
 80125f8:	4620      	movle	r0, r4
 80125fa:	b002      	add	sp, #8
 80125fc:	bd10      	pop	{r4, pc}
	...

08012600 <GUI__GetLineDistX>:
 8012600:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012602:	4a15      	ldr	r2, [pc, #84]	; (8012658 <GUI__GetLineDistX+0x58>)
 8012604:	9001      	str	r0, [sp, #4]
 8012606:	ab02      	add	r3, sp, #8
 8012608:	6812      	ldr	r2, [r2, #0]
 801260a:	f843 1d08 	str.w	r1, [r3, #-8]!
 801260e:	4669      	mov	r1, sp
 8012610:	4790      	blx	r2
 8012612:	9001      	str	r0, [sp, #4]
 8012614:	b1f0      	cbz	r0, 8012654 <GUI__GetLineDistX+0x54>
 8012616:	4b11      	ldr	r3, [pc, #68]	; (801265c <GUI__GetLineDistX+0x5c>)
 8012618:	681b      	ldr	r3, [r3, #0]
 801261a:	69db      	ldr	r3, [r3, #28]
 801261c:	695b      	ldr	r3, [r3, #20]
 801261e:	b10b      	cbz	r3, 8012624 <GUI__GetLineDistX+0x24>
 8012620:	681b      	ldr	r3, [r3, #0]
 8012622:	b913      	cbnz	r3, 801262a <GUI__GetLineDistX+0x2a>
 8012624:	2500      	movs	r5, #0
 8012626:	462c      	mov	r4, r5
 8012628:	e002      	b.n	8012630 <GUI__GetLineDistX+0x30>
 801262a:	9900      	ldr	r1, [sp, #0]
 801262c:	4798      	blx	r3
 801262e:	e011      	b.n	8012654 <GUI__GetLineDistX+0x54>
 8012630:	9b00      	ldr	r3, [sp, #0]
 8012632:	3b01      	subs	r3, #1
 8012634:	2b00      	cmp	r3, #0
 8012636:	9300      	str	r3, [sp, #0]
 8012638:	db07      	blt.n	801264a <GUI__GetLineDistX+0x4a>
 801263a:	a801      	add	r0, sp, #4
 801263c:	f7fe f9bc 	bl	80109b8 <GUI_UC__GetCharCodeInc>
 8012640:	4605      	mov	r5, r0
 8012642:	f000 f881 	bl	8012748 <GUI_GetCharDistX>
 8012646:	4404      	add	r4, r0
 8012648:	e7f2      	b.n	8012630 <GUI__GetLineDistX+0x30>
 801264a:	4628      	mov	r0, r5
 801264c:	f7ff ffc8 	bl	80125e0 <GUI__GetOverlap>
 8012650:	4420      	add	r0, r4
 8012652:	e7ff      	b.n	8012654 <GUI__GetLineDistX+0x54>
 8012654:	b003      	add	sp, #12
 8012656:	bd30      	pop	{r4, r5, pc}
 8012658:	20000174 	.word	0x20000174
 801265c:	2000016c 	.word	0x2000016c

08012660 <GUI__DispLine>:
 8012660:	4b27      	ldr	r3, [pc, #156]	; (8012700 <GUI__DispLine+0xa0>)
 8012662:	681b      	ldr	r3, [r3, #0]
 8012664:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012666:	4605      	mov	r5, r0
 8012668:	460c      	mov	r4, r1
 801266a:	b163      	cbz	r3, 8012686 <GUI__DispLine+0x26>
 801266c:	2000      	movs	r0, #0
 801266e:	f7fa fd09 	bl	800d084 <WM__InitIVRSearch>
 8012672:	2800      	cmp	r0, #0
 8012674:	d041      	beq.n	80126fa <GUI__DispLine+0x9a>
 8012676:	4628      	mov	r0, r5
 8012678:	4621      	mov	r1, r4
 801267a:	466a      	mov	r2, sp
 801267c:	f7ff ff54 	bl	8012528 <_DispLine>
 8012680:	f7fa fc3e 	bl	800cf00 <WM__GetNextIVR>
 8012684:	e7f5      	b.n	8012672 <GUI__DispLine+0x12>
 8012686:	6810      	ldr	r0, [r2, #0]
 8012688:	6851      	ldr	r1, [r2, #4]
 801268a:	4e1e      	ldr	r6, [pc, #120]	; (8012704 <GUI__DispLine+0xa4>)
 801268c:	466b      	mov	r3, sp
 801268e:	c303      	stmia	r3!, {r0, r1}
 8012690:	6833      	ldr	r3, [r6, #0]
 8012692:	f8bd 1000 	ldrh.w	r1, [sp]
 8012696:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 801269a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 801269e:	4411      	add	r1, r2
 80126a0:	f8ad 1000 	strh.w	r1, [sp]
 80126a4:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 80126a8:	4419      	add	r1, r3
 80126aa:	f8ad 1002 	strh.w	r1, [sp, #2]
 80126ae:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80126b2:	440a      	add	r2, r1
 80126b4:	f8ad 2004 	strh.w	r2, [sp, #4]
 80126b8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80126bc:	4668      	mov	r0, sp
 80126be:	4413      	add	r3, r2
 80126c0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80126c4:	f7fa fcde 	bl	800d084 <WM__InitIVRSearch>
 80126c8:	6833      	ldr	r3, [r6, #0]
 80126ca:	b940      	cbnz	r0, 80126de <GUI__DispLine+0x7e>
 80126cc:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80126ce:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80126d0:	1a8a      	subs	r2, r1, r2
 80126d2:	845a      	strh	r2, [r3, #34]	; 0x22
 80126d4:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 80126d6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80126d8:	1a8a      	subs	r2, r1, r2
 80126da:	849a      	strh	r2, [r3, #36]	; 0x24
 80126dc:	e00d      	b.n	80126fa <GUI__DispLine+0x9a>
 80126de:	f8bd 2000 	ldrh.w	r2, [sp]
 80126e2:	845a      	strh	r2, [r3, #34]	; 0x22
 80126e4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80126e8:	849a      	strh	r2, [r3, #36]	; 0x24
 80126ea:	4628      	mov	r0, r5
 80126ec:	4621      	mov	r1, r4
 80126ee:	466a      	mov	r2, sp
 80126f0:	f7ff ff1a 	bl	8012528 <_DispLine>
 80126f4:	f7fa fc04 	bl	800cf00 <WM__GetNextIVR>
 80126f8:	e7e6      	b.n	80126c8 <GUI__DispLine+0x68>
 80126fa:	b002      	add	sp, #8
 80126fc:	bd70      	pop	{r4, r5, r6, pc}
 80126fe:	bf00      	nop
 8012700:	20019c70 	.word	0x20019c70
 8012704:	2000016c 	.word	0x2000016c

08012708 <GUI_GetYAdjust>:
 8012708:	4b0a      	ldr	r3, [pc, #40]	; (8012734 <GUI_GetYAdjust+0x2c>)
 801270a:	681b      	ldr	r3, [r3, #0]
 801270c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 801270e:	f002 020c 	and.w	r2, r2, #12
 8012712:	2a08      	cmp	r2, #8
 8012714:	d007      	beq.n	8012726 <GUI_GetYAdjust+0x1e>
 8012716:	2a0c      	cmp	r2, #12
 8012718:	d005      	beq.n	8012726 <GUI_GetYAdjust+0x1e>
 801271a:	2a04      	cmp	r2, #4
 801271c:	d107      	bne.n	801272e <GUI_GetYAdjust+0x26>
 801271e:	69db      	ldr	r3, [r3, #28]
 8012720:	7e18      	ldrb	r0, [r3, #24]
 8012722:	3801      	subs	r0, #1
 8012724:	4770      	bx	lr
 8012726:	69db      	ldr	r3, [r3, #28]
 8012728:	7e18      	ldrb	r0, [r3, #24]
 801272a:	0840      	lsrs	r0, r0, #1
 801272c:	4770      	bx	lr
 801272e:	2000      	movs	r0, #0
 8012730:	4770      	bx	lr
 8012732:	bf00      	nop
 8012734:	2000016c 	.word	0x2000016c

08012738 <GUI_GetFontDistY>:
 8012738:	4b02      	ldr	r3, [pc, #8]	; (8012744 <GUI_GetFontDistY+0xc>)
 801273a:	681b      	ldr	r3, [r3, #0]
 801273c:	69db      	ldr	r3, [r3, #28]
 801273e:	7e58      	ldrb	r0, [r3, #25]
 8012740:	4770      	bx	lr
 8012742:	bf00      	nop
 8012744:	2000016c 	.word	0x2000016c

08012748 <GUI_GetCharDistX>:
 8012748:	b508      	push	{r3, lr}
 801274a:	4b03      	ldr	r3, [pc, #12]	; (8012758 <GUI_GetCharDistX+0x10>)
 801274c:	681b      	ldr	r3, [r3, #0]
 801274e:	69db      	ldr	r3, [r3, #28]
 8012750:	2100      	movs	r1, #0
 8012752:	685b      	ldr	r3, [r3, #4]
 8012754:	4798      	blx	r3
 8012756:	bd08      	pop	{r3, pc}
 8012758:	2000016c 	.word	0x2000016c

0801275c <GUI_GetCharDistXEx>:
 801275c:	b508      	push	{r3, lr}
 801275e:	4b03      	ldr	r3, [pc, #12]	; (801276c <GUI_GetCharDistXEx+0x10>)
 8012760:	681b      	ldr	r3, [r3, #0]
 8012762:	69db      	ldr	r3, [r3, #28]
 8012764:	685b      	ldr	r3, [r3, #4]
 8012766:	4798      	blx	r3
 8012768:	bd08      	pop	{r3, pc}
 801276a:	bf00      	nop
 801276c:	2000016c 	.word	0x2000016c

08012770 <_PushFreeBlock>:
 8012770:	4b07      	ldr	r3, [pc, #28]	; (8012790 <_PushFreeBlock+0x20>)
 8012772:	685a      	ldr	r2, [r3, #4]
 8012774:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8012776:	3201      	adds	r2, #1
 8012778:	b510      	push	{r4, lr}
 801277a:	605a      	str	r2, [r3, #4]
 801277c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 801277e:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 8012782:	6061      	str	r1, [r4, #4]
 8012784:	2100      	movs	r1, #0
 8012786:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 801278a:	6258      	str	r0, [r3, #36]	; 0x24
 801278c:	bd10      	pop	{r4, pc}
 801278e:	bf00      	nop
 8012790:	20019cac 	.word	0x20019cac

08012794 <_OnExit>:
 8012794:	b538      	push	{r3, r4, r5, lr}
 8012796:	4d0b      	ldr	r5, [pc, #44]	; (80127c4 <_OnExit+0x30>)
 8012798:	2400      	movs	r4, #0
 801279a:	f105 0040 	add.w	r0, r5, #64	; 0x40
 801279e:	4621      	mov	r1, r4
 80127a0:	2280      	movs	r2, #128	; 0x80
 80127a2:	f885 4028 	strb.w	r4, [r5, #40]	; 0x28
 80127a6:	f7fd fd3d 	bl	8010224 <GUI__memset>
 80127aa:	4628      	mov	r0, r5
 80127ac:	4621      	mov	r1, r4
 80127ae:	22c0      	movs	r2, #192	; 0xc0
 80127b0:	f7fd fd38 	bl	8010224 <GUI__memset>
 80127b4:	4621      	mov	r1, r4
 80127b6:	4804      	ldr	r0, [pc, #16]	; (80127c8 <_OnExit+0x34>)
 80127b8:	220c      	movs	r2, #12
 80127ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80127be:	f7fd bd31 	b.w	8010224 <GUI__memset>
 80127c2:	bf00      	nop
 80127c4:	20019cac 	.word	0x20019cac
 80127c8:	20019684 	.word	0x20019684

080127cc <_RemoveFreeBlock>:
 80127cc:	b510      	push	{r4, lr}
 80127ce:	6842      	ldr	r2, [r0, #4]
 80127d0:	230f      	movs	r3, #15
 80127d2:	490d      	ldr	r1, [pc, #52]	; (8012808 <_RemoveFreeBlock+0x3c>)
 80127d4:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 80127d8:	6c24      	ldr	r4, [r4, #64]	; 0x40
 80127da:	42a2      	cmp	r2, r4
 80127dc:	d203      	bcs.n	80127e6 <_RemoveFreeBlock+0x1a>
 80127de:	f113 33ff 	adds.w	r3, r3, #4294967295
 80127e2:	d2f6      	bcs.n	80127d2 <_RemoveFreeBlock+0x6>
 80127e4:	bd10      	pop	{r4, pc}
 80127e6:	2b0f      	cmp	r3, #15
 80127e8:	d80c      	bhi.n	8012804 <_RemoveFreeBlock+0x38>
 80127ea:	680c      	ldr	r4, [r1, #0]
 80127ec:	1aa2      	subs	r2, r4, r2
 80127ee:	600a      	str	r2, [r1, #0]
 80127f0:	6882      	ldr	r2, [r0, #8]
 80127f2:	68c0      	ldr	r0, [r0, #12]
 80127f4:	b102      	cbz	r2, 80127f8 <_RemoveFreeBlock+0x2c>
 80127f6:	6050      	str	r0, [r2, #4]
 80127f8:	b108      	cbz	r0, 80127fe <_RemoveFreeBlock+0x32>
 80127fa:	6002      	str	r2, [r0, #0]
 80127fc:	bd10      	pop	{r4, pc}
 80127fe:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8012802:	645a      	str	r2, [r3, #68]	; 0x44
 8012804:	bd10      	pop	{r4, pc}
 8012806:	bf00      	nop
 8012808:	20019cac 	.word	0x20019cac

0801280c <_AddFreeMemory>:
 801280c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801280e:	4e26      	ldr	r6, [pc, #152]	; (80128a8 <_AddFreeMemory+0x9c>)
 8012810:	68f3      	ldr	r3, [r6, #12]
 8012812:	1e5a      	subs	r2, r3, #1
 8012814:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8012816:	4605      	mov	r5, r0
 8012818:	4413      	add	r3, r2
 801281a:	1808      	adds	r0, r1, r0
 801281c:	4298      	cmp	r0, r3
 801281e:	460c      	mov	r4, r1
 8012820:	d805      	bhi.n	801282e <_AddFreeMemory+0x22>
 8012822:	594b      	ldr	r3, [r1, r5]
 8012824:	b91b      	cbnz	r3, 801282e <_AddFreeMemory+0x22>
 8012826:	6843      	ldr	r3, [r0, #4]
 8012828:	441d      	add	r5, r3
 801282a:	f7ff ffcf 	bl	80127cc <_RemoveFreeBlock>
 801282e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8012830:	429c      	cmp	r4, r3
 8012832:	d90a      	bls.n	801284a <_AddFreeMemory+0x3e>
 8012834:	f854 7c04 	ldr.w	r7, [r4, #-4]
 8012838:	1be7      	subs	r7, r4, r7
 801283a:	683b      	ldr	r3, [r7, #0]
 801283c:	b92b      	cbnz	r3, 801284a <_AddFreeMemory+0x3e>
 801283e:	687b      	ldr	r3, [r7, #4]
 8012840:	4638      	mov	r0, r7
 8012842:	441d      	add	r5, r3
 8012844:	f7ff ffc2 	bl	80127cc <_RemoveFreeBlock>
 8012848:	463c      	mov	r4, r7
 801284a:	230f      	movs	r3, #15
 801284c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8012850:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8012852:	4295      	cmp	r5, r2
 8012854:	d203      	bcs.n	801285e <_AddFreeMemory+0x52>
 8012856:	f113 33ff 	adds.w	r3, r3, #4294967295
 801285a:	d2f7      	bcs.n	801284c <_AddFreeMemory+0x40>
 801285c:	e022      	b.n	80128a4 <_AddFreeMemory+0x98>
 801285e:	2b0f      	cmp	r3, #15
 8012860:	d820      	bhi.n	80128a4 <_AddFreeMemory+0x98>
 8012862:	3308      	adds	r3, #8
 8012864:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8012868:	1961      	adds	r1, r4, r5
 801286a:	6852      	ldr	r2, [r2, #4]
 801286c:	60a2      	str	r2, [r4, #8]
 801286e:	2000      	movs	r0, #0
 8012870:	e884 0021 	stmia.w	r4, {r0, r5}
 8012874:	6124      	str	r4, [r4, #16]
 8012876:	f841 5c04 	str.w	r5, [r1, #-4]
 801287a:	f104 0108 	add.w	r1, r4, #8
 801287e:	b102      	cbz	r2, 8012882 <_AddFreeMemory+0x76>
 8012880:	6051      	str	r1, [r2, #4]
 8012882:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8012886:	60e0      	str	r0, [r4, #12]
 8012888:	6059      	str	r1, [r3, #4]
 801288a:	6833      	ldr	r3, [r6, #0]
 801288c:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 8012890:	4a05      	ldr	r2, [pc, #20]	; (80128a8 <_AddFreeMemory+0x9c>)
 8012892:	442b      	add	r3, r5
 8012894:	6033      	str	r3, [r6, #0]
 8012896:	b929      	cbnz	r1, 80128a4 <_AddFreeMemory+0x98>
 8012898:	68d1      	ldr	r1, [r2, #12]
 801289a:	1acb      	subs	r3, r1, r3
 801289c:	6891      	ldr	r1, [r2, #8]
 801289e:	4299      	cmp	r1, r3
 80128a0:	bf38      	it	cc
 80128a2:	6093      	strcc	r3, [r2, #8]
 80128a4:	4628      	mov	r0, r5
 80128a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80128a8:	20019cac 	.word	0x20019cac

080128ac <_RemoveHoles>:
 80128ac:	4b25      	ldr	r3, [pc, #148]	; (8012944 <_RemoveHoles+0x98>)
 80128ae:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128b2:	68da      	ldr	r2, [r3, #12]
 80128b4:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 80128b6:	3a01      	subs	r2, #1
 80128b8:	4682      	mov	sl, r0
 80128ba:	eb02 0904 	add.w	r9, r2, r4
 80128be:	469b      	mov	fp, r3
 80128c0:	e894 0028 	ldmia.w	r4, {r3, r5}
 80128c4:	2b00      	cmp	r3, #0
 80128c6:	d133      	bne.n	8012930 <_RemoveHoles+0x84>
 80128c8:	eb04 0805 	add.w	r8, r4, r5
 80128cc:	45c8      	cmp	r8, r9
 80128ce:	d22f      	bcs.n	8012930 <_RemoveHoles+0x84>
 80128d0:	f854 c005 	ldr.w	ip, [r4, r5]
 80128d4:	f8d8 6004 	ldr.w	r6, [r8, #4]
 80128d8:	f1bc 0f00 	cmp.w	ip, #0
 80128dc:	d028      	beq.n	8012930 <_RemoveHoles+0x84>
 80128de:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 80128e2:	4f18      	ldr	r7, [pc, #96]	; (8012944 <_RemoveHoles+0x98>)
 80128e4:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 80128e8:	2b01      	cmp	r3, #1
 80128ea:	d121      	bne.n	8012930 <_RemoveHoles+0x84>
 80128ec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80128ee:	4620      	mov	r0, r4
 80128f0:	e88d 1008 	stmia.w	sp, {r3, ip}
 80128f4:	f7ff ff6a 	bl	80127cc <_RemoveFreeBlock>
 80128f8:	f8d8 1000 	ldr.w	r1, [r8]
 80128fc:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80128fe:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 8012902:	4620      	mov	r0, r4
 8012904:	6054      	str	r4, [r2, #4]
 8012906:	4641      	mov	r1, r8
 8012908:	4632      	mov	r2, r6
 801290a:	f007 fcf5 	bl	801a2f8 <memmove>
 801290e:	e89d 1008 	ldmia.w	sp, {r3, ip}
 8012912:	459c      	cmp	ip, r3
 8012914:	d102      	bne.n	801291c <_RemoveHoles+0x70>
 8012916:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8012918:	1b5b      	subs	r3, r3, r5
 801291a:	637b      	str	r3, [r7, #52]	; 0x34
 801291c:	4628      	mov	r0, r5
 801291e:	19a1      	adds	r1, r4, r6
 8012920:	f7ff ff74 	bl	801280c <_AddFreeMemory>
 8012924:	f1ba 0f00 	cmp.w	sl, #0
 8012928:	d001      	beq.n	801292e <_RemoveHoles+0x82>
 801292a:	4582      	cmp	sl, r0
 801292c:	d905      	bls.n	801293a <_RemoveHoles+0x8e>
 801292e:	4635      	mov	r5, r6
 8012930:	442c      	add	r4, r5
 8012932:	454c      	cmp	r4, r9
 8012934:	d3c4      	bcc.n	80128c0 <_RemoveHoles+0x14>
 8012936:	2001      	movs	r0, #1
 8012938:	e000      	b.n	801293c <_RemoveHoles+0x90>
 801293a:	2000      	movs	r0, #0
 801293c:	b003      	add	sp, #12
 801293e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012942:	bf00      	nop
 8012944:	20019cac 	.word	0x20019cac

08012948 <GUI_ALLOC_FreeFixedBlock>:
 8012948:	b128      	cbz	r0, 8012956 <GUI_ALLOC_FreeFixedBlock+0xe>
 801294a:	4a03      	ldr	r2, [pc, #12]	; (8012958 <GUI_ALLOC_FreeFixedBlock+0x10>)
 801294c:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 801294e:	6003      	str	r3, [r0, #0]
 8012950:	b103      	cbz	r3, 8012954 <GUI_ALLOC_FreeFixedBlock+0xc>
 8012952:	6058      	str	r0, [r3, #4]
 8012954:	63d0      	str	r0, [r2, #60]	; 0x3c
 8012956:	4770      	bx	lr
 8012958:	20019cac 	.word	0x20019cac

0801295c <GUI_ALLOC_h2p>:
 801295c:	b128      	cbz	r0, 801296a <GUI_ALLOC_h2p+0xe>
 801295e:	4b03      	ldr	r3, [pc, #12]	; (801296c <GUI_ALLOC_h2p+0x10>)
 8012960:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012962:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8012966:	6840      	ldr	r0, [r0, #4]
 8012968:	3008      	adds	r0, #8
 801296a:	4770      	bx	lr
 801296c:	20019cac 	.word	0x20019cac

08012970 <GUI_ALLOC_LockH>:
 8012970:	4b05      	ldr	r3, [pc, #20]	; (8012988 <GUI_ALLOC_LockH+0x18>)
 8012972:	69d9      	ldr	r1, [r3, #28]
 8012974:	3101      	adds	r1, #1
 8012976:	61d9      	str	r1, [r3, #28]
 8012978:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801297a:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 801297e:	3101      	adds	r1, #1
 8012980:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 8012984:	f7ff bfea 	b.w	801295c <GUI_ALLOC_h2p>
 8012988:	20019cac 	.word	0x20019cac

0801298c <GUI_ALLOC_UnlockH>:
 801298c:	b530      	push	{r4, r5, lr}
 801298e:	6802      	ldr	r2, [r0, #0]
 8012990:	4b09      	ldr	r3, [pc, #36]	; (80129b8 <GUI_ALLOC_UnlockH+0x2c>)
 8012992:	f852 1c08 	ldr.w	r1, [r2, #-8]
 8012996:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8012998:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 801299c:	2c01      	cmp	r4, #1
 801299e:	d903      	bls.n	80129a8 <GUI_ALLOC_UnlockH+0x1c>
 80129a0:	69dd      	ldr	r5, [r3, #28]
 80129a2:	b10d      	cbz	r5, 80129a8 <GUI_ALLOC_UnlockH+0x1c>
 80129a4:	3d01      	subs	r5, #1
 80129a6:	61dd      	str	r5, [r3, #28]
 80129a8:	3c01      	subs	r4, #1
 80129aa:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 80129ae:	2300      	movs	r3, #0
 80129b0:	6003      	str	r3, [r0, #0]
 80129b2:	4618      	mov	r0, r3
 80129b4:	bd30      	pop	{r4, r5, pc}
 80129b6:	bf00      	nop
 80129b8:	20019cac 	.word	0x20019cac

080129bc <GUI_ALLOC_AssignMemory>:
 80129bc:	4b02      	ldr	r3, [pc, #8]	; (80129c8 <GUI_ALLOC_AssignMemory+0xc>)
 80129be:	f021 0103 	bic.w	r1, r1, #3
 80129c2:	6018      	str	r0, [r3, #0]
 80129c4:	6059      	str	r1, [r3, #4]
 80129c6:	4770      	bx	lr
 80129c8:	20019684 	.word	0x20019684

080129cc <GUI_ALLOC_GetSize>:
 80129cc:	b130      	cbz	r0, 80129dc <GUI_ALLOC_GetSize+0x10>
 80129ce:	4b04      	ldr	r3, [pc, #16]	; (80129e0 <GUI_ALLOC_GetSize+0x14>)
 80129d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80129d2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80129d6:	6843      	ldr	r3, [r0, #4]
 80129d8:	6858      	ldr	r0, [r3, #4]
 80129da:	380c      	subs	r0, #12
 80129dc:	4770      	bx	lr
 80129de:	bf00      	nop
 80129e0:	20019cac 	.word	0x20019cac

080129e4 <GUI_ALLOC_Free>:
 80129e4:	b510      	push	{r4, lr}
 80129e6:	4604      	mov	r4, r0
 80129e8:	b180      	cbz	r0, 8012a0c <GUI_ALLOC_Free+0x28>
 80129ea:	4b09      	ldr	r3, [pc, #36]	; (8012a10 <GUI_ALLOC_Free+0x2c>)
 80129ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80129ee:	eb03 02c0 	add.w	r2, r3, r0, lsl #3
 80129f2:	f813 3030 	ldrb.w	r3, [r3, r0, lsl #3]
 80129f6:	2b01      	cmp	r3, #1
 80129f8:	d108      	bne.n	8012a0c <GUI_ALLOC_Free+0x28>
 80129fa:	6851      	ldr	r1, [r2, #4]
 80129fc:	6848      	ldr	r0, [r1, #4]
 80129fe:	f7ff ff05 	bl	801280c <_AddFreeMemory>
 8012a02:	4620      	mov	r0, r4
 8012a04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a08:	f7ff beb2 	b.w	8012770 <_PushFreeBlock>
 8012a0c:	bd10      	pop	{r4, pc}
 8012a0e:	bf00      	nop
 8012a10:	20019cac 	.word	0x20019cac

08012a14 <_EnlargeBlocks>:
 8012a14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a18:	4c22      	ldr	r4, [pc, #136]	; (8012aa4 <_EnlargeBlocks+0x90>)
 8012a1a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012a1c:	b93b      	cbnz	r3, 8012a2e <_EnlargeBlocks+0x1a>
 8012a1e:	4b22      	ldr	r3, [pc, #136]	; (8012aa8 <_EnlargeBlocks+0x94>)
 8012a20:	689d      	ldr	r5, [r3, #8]
 8012a22:	685b      	ldr	r3, [r3, #4]
 8012a24:	3508      	adds	r5, #8
 8012a26:	fbb3 f5f5 	udiv	r5, r3, r5
 8012a2a:	3502      	adds	r5, #2
 8012a2c:	e003      	b.n	8012a36 <_EnlargeBlocks+0x22>
 8012a2e:	6923      	ldr	r3, [r4, #16]
 8012a30:	1d1d      	adds	r5, r3, #4
 8012a32:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 8012a36:	00e8      	lsls	r0, r5, #3
 8012a38:	f000 f978 	bl	8012d2c <_Alloc>
 8012a3c:	4680      	mov	r8, r0
 8012a3e:	b360      	cbz	r0, 8012a9a <_EnlargeBlocks+0x86>
 8012a40:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012a42:	6922      	ldr	r2, [r4, #16]
 8012a44:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8012a46:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 8012a4a:	00d2      	lsls	r2, r2, #3
 8012a4c:	685e      	ldr	r6, [r3, #4]
 8012a4e:	3608      	adds	r6, #8
 8012a50:	4630      	mov	r0, r6
 8012a52:	f007 fc46 	bl	801a2e2 <memcpy>
 8012a56:	6922      	ldr	r2, [r4, #16]
 8012a58:	6366      	str	r6, [r4, #52]	; 0x34
 8012a5a:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 8012a5e:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 8012a62:	3104      	adds	r1, #4
 8012a64:	4613      	mov	r3, r2
 8012a66:	1e68      	subs	r0, r5, #1
 8012a68:	4283      	cmp	r3, r0
 8012a6a:	f101 0108 	add.w	r1, r1, #8
 8012a6e:	d203      	bcs.n	8012a78 <_EnlargeBlocks+0x64>
 8012a70:	3301      	adds	r3, #1
 8012a72:	f841 3c08 	str.w	r3, [r1, #-8]
 8012a76:	e7f6      	b.n	8012a66 <_EnlargeBlocks+0x52>
 8012a78:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8012a7c:	2600      	movs	r6, #0
 8012a7e:	605e      	str	r6, [r3, #4]
 8012a80:	6863      	ldr	r3, [r4, #4]
 8012a82:	6262      	str	r2, [r4, #36]	; 0x24
 8012a84:	1a9b      	subs	r3, r3, r2
 8012a86:	442b      	add	r3, r5
 8012a88:	6063      	str	r3, [r4, #4]
 8012a8a:	6125      	str	r5, [r4, #16]
 8012a8c:	4638      	mov	r0, r7
 8012a8e:	b13f      	cbz	r7, 8012aa0 <_EnlargeBlocks+0x8c>
 8012a90:	f7ff ffa8 	bl	80129e4 <GUI_ALLOC_Free>
 8012a94:	4630      	mov	r0, r6
 8012a96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012a9a:	2001      	movs	r0, #1
 8012a9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012aa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012aa4:	20019cac 	.word	0x20019cac
 8012aa8:	20019684 	.word	0x20019684

08012aac <_InitOnce>:
 8012aac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012aae:	4e58      	ldr	r6, [pc, #352]	; (8012c10 <_InitOnce+0x164>)
 8012ab0:	f896 1028 	ldrb.w	r1, [r6, #40]	; 0x28
 8012ab4:	2900      	cmp	r1, #0
 8012ab6:	f040 80aa 	bne.w	8012c0e <_InitOnce+0x162>
 8012aba:	4d56      	ldr	r5, [pc, #344]	; (8012c14 <_InitOnce+0x168>)
 8012abc:	686a      	ldr	r2, [r5, #4]
 8012abe:	2301      	movs	r3, #1
 8012ac0:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
 8012ac4:	f5b2 5f20 	cmp.w	r2, #10240	; 0x2800
 8012ac8:	bf28      	it	cs
 8012aca:	f44f 5220 	movcs.w	r2, #10240	; 0x2800
 8012ace:	682b      	ldr	r3, [r5, #0]
 8012ad0:	0894      	lsrs	r4, r2, #2
 8012ad2:	2000      	movs	r0, #0
 8012ad4:	42a0      	cmp	r0, r4
 8012ad6:	d00c      	beq.n	8012af2 <_InitOnce+0x46>
 8012ad8:	1847      	adds	r7, r0, r1
 8012ada:	f04f 0eff 	mov.w	lr, #255	; 0xff
 8012ade:	fbb7 fefe 	udiv	lr, r7, lr
 8012ae2:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8012ae6:	ebce 0707 	rsb	r7, lr, r7
 8012aea:	f843 7020 	str.w	r7, [r3, r0, lsl #2]
 8012aee:	3001      	adds	r0, #1
 8012af0:	e7f0      	b.n	8012ad4 <_InitOnce+0x28>
 8012af2:	2000      	movs	r0, #0
 8012af4:	42a0      	cmp	r0, r4
 8012af6:	d016      	beq.n	8012b26 <_InitOnce+0x7a>
 8012af8:	1847      	adds	r7, r0, r1
 8012afa:	f04f 0eff 	mov.w	lr, #255	; 0xff
 8012afe:	fbb7 fefe 	udiv	lr, r7, lr
 8012b02:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8012b06:	ebce 0e07 	rsb	lr, lr, r7
 8012b0a:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8012b0e:	4577      	cmp	r7, lr
 8012b10:	d007      	beq.n	8012b22 <_InitOnce+0x76>
 8012b12:	68aa      	ldr	r2, [r5, #8]
 8012b14:	4b3f      	ldr	r3, [pc, #252]	; (8012c14 <_InitOnce+0x168>)
 8012b16:	2a00      	cmp	r2, #0
 8012b18:	d155      	bne.n	8012bc6 <_InitOnce+0x11a>
 8012b1a:	685a      	ldr	r2, [r3, #4]
 8012b1c:	0892      	lsrs	r2, r2, #2
 8012b1e:	609a      	str	r2, [r3, #8]
 8012b20:	e051      	b.n	8012bc6 <_InitOnce+0x11a>
 8012b22:	3001      	adds	r0, #1
 8012b24:	e7e6      	b.n	8012af4 <_InitOnce+0x48>
 8012b26:	3101      	adds	r1, #1
 8012b28:	2902      	cmp	r1, #2
 8012b2a:	d1d2      	bne.n	8012ad2 <_InitOnce+0x26>
 8012b2c:	0854      	lsrs	r4, r2, #1
 8012b2e:	2100      	movs	r1, #0
 8012b30:	2000      	movs	r0, #0
 8012b32:	42a0      	cmp	r0, r4
 8012b34:	d00c      	beq.n	8012b50 <_InitOnce+0xa4>
 8012b36:	1847      	adds	r7, r0, r1
 8012b38:	f04f 0eff 	mov.w	lr, #255	; 0xff
 8012b3c:	fbb7 fefe 	udiv	lr, r7, lr
 8012b40:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8012b44:	ebce 0707 	rsb	r7, lr, r7
 8012b48:	f823 7010 	strh.w	r7, [r3, r0, lsl #1]
 8012b4c:	3001      	adds	r0, #1
 8012b4e:	e7f0      	b.n	8012b32 <_InitOnce+0x86>
 8012b50:	2000      	movs	r0, #0
 8012b52:	42a0      	cmp	r0, r4
 8012b54:	d00f      	beq.n	8012b76 <_InitOnce+0xca>
 8012b56:	1847      	adds	r7, r0, r1
 8012b58:	f04f 0eff 	mov.w	lr, #255	; 0xff
 8012b5c:	fbb7 fefe 	udiv	lr, r7, lr
 8012b60:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8012b64:	ebce 0707 	rsb	r7, lr, r7
 8012b68:	f833 c010 	ldrh.w	ip, [r3, r0, lsl #1]
 8012b6c:	b2bf      	uxth	r7, r7
 8012b6e:	45bc      	cmp	ip, r7
 8012b70:	d1cf      	bne.n	8012b12 <_InitOnce+0x66>
 8012b72:	3001      	adds	r0, #1
 8012b74:	e7ed      	b.n	8012b52 <_InitOnce+0xa6>
 8012b76:	3101      	adds	r1, #1
 8012b78:	2902      	cmp	r1, #2
 8012b7a:	d1d9      	bne.n	8012b30 <_InitOnce+0x84>
 8012b7c:	2100      	movs	r1, #0
 8012b7e:	2000      	movs	r0, #0
 8012b80:	4290      	cmp	r0, r2
 8012b82:	d007      	beq.n	8012b94 <_InitOnce+0xe8>
 8012b84:	1844      	adds	r4, r0, r1
 8012b86:	27ff      	movs	r7, #255	; 0xff
 8012b88:	fbb4 f7f7 	udiv	r7, r4, r7
 8012b8c:	443c      	add	r4, r7
 8012b8e:	541c      	strb	r4, [r3, r0]
 8012b90:	3001      	adds	r0, #1
 8012b92:	e7f5      	b.n	8012b80 <_InitOnce+0xd4>
 8012b94:	2000      	movs	r0, #0
 8012b96:	4290      	cmp	r0, r2
 8012b98:	d00b      	beq.n	8012bb2 <_InitOnce+0x106>
 8012b9a:	1844      	adds	r4, r0, r1
 8012b9c:	27ff      	movs	r7, #255	; 0xff
 8012b9e:	fbb4 f7f7 	udiv	r7, r4, r7
 8012ba2:	443c      	add	r4, r7
 8012ba4:	5c1f      	ldrb	r7, [r3, r0]
 8012ba6:	f004 04ff 	and.w	r4, r4, #255	; 0xff
 8012baa:	42a7      	cmp	r7, r4
 8012bac:	d1b1      	bne.n	8012b12 <_InitOnce+0x66>
 8012bae:	3001      	adds	r0, #1
 8012bb0:	e7f1      	b.n	8012b96 <_InitOnce+0xea>
 8012bb2:	3101      	adds	r1, #1
 8012bb4:	2902      	cmp	r1, #2
 8012bb6:	d1e2      	bne.n	8012b7e <_InitOnce+0xd2>
 8012bb8:	2100      	movs	r1, #0
 8012bba:	4291      	cmp	r1, r2
 8012bbc:	d0a9      	beq.n	8012b12 <_InitOnce+0x66>
 8012bbe:	2000      	movs	r0, #0
 8012bc0:	5458      	strb	r0, [r3, r1]
 8012bc2:	3101      	adds	r1, #1
 8012bc4:	e7f9      	b.n	8012bba <_InitOnce+0x10e>
 8012bc6:	4814      	ldr	r0, [pc, #80]	; (8012c18 <_InitOnce+0x16c>)
 8012bc8:	4b14      	ldr	r3, [pc, #80]	; (8012c1c <_InitOnce+0x170>)
 8012bca:	6003      	str	r3, [r0, #0]
 8012bcc:	f7ff fab0 	bl	8012130 <GUI__RegisterExit>
 8012bd0:	235a      	movs	r3, #90	; 0x5a
 8012bd2:	6233      	str	r3, [r6, #32]
 8012bd4:	2300      	movs	r3, #0
 8012bd6:	2110      	movs	r1, #16
 8012bd8:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8012bdc:	4099      	lsls	r1, r3
 8012bde:	3301      	adds	r3, #1
 8012be0:	2b10      	cmp	r3, #16
 8012be2:	4c0b      	ldr	r4, [pc, #44]	; (8012c10 <_InitOnce+0x164>)
 8012be4:	6411      	str	r1, [r2, #64]	; 0x40
 8012be6:	d1f6      	bne.n	8012bd6 <_InitOnce+0x12a>
 8012be8:	6868      	ldr	r0, [r5, #4]
 8012bea:	6829      	ldr	r1, [r5, #0]
 8012bec:	63a1      	str	r1, [r4, #56]	; 0x38
 8012bee:	2302      	movs	r3, #2
 8012bf0:	6123      	str	r3, [r4, #16]
 8012bf2:	f1a0 0314 	sub.w	r3, r0, #20
 8012bf6:	440b      	add	r3, r1
 8012bf8:	2501      	movs	r5, #1
 8012bfa:	6363      	str	r3, [r4, #52]	; 0x34
 8012bfc:	60e0      	str	r0, [r4, #12]
 8012bfe:	605d      	str	r5, [r3, #4]
 8012c00:	6265      	str	r5, [r4, #36]	; 0x24
 8012c02:	6065      	str	r5, [r4, #4]
 8012c04:	f7ff fe02 	bl	801280c <_AddFreeMemory>
 8012c08:	f7ff ff04 	bl	8012a14 <_EnlargeBlocks>
 8012c0c:	6325      	str	r5, [r4, #48]	; 0x30
 8012c0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012c10:	20019cac 	.word	0x20019cac
 8012c14:	20019684 	.word	0x20019684
 8012c18:	20019690 	.word	0x20019690
 8012c1c:	08012795 	.word	0x08012795

08012c20 <GUI_ALLOC_GetFixedBlock>:
 8012c20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c24:	4605      	mov	r5, r0
 8012c26:	4e26      	ldr	r6, [pc, #152]	; (8012cc0 <GUI_ALLOC_GetFixedBlock+0xa0>)
 8012c28:	3503      	adds	r5, #3
 8012c2a:	f7ff ff3f 	bl	8012aac <_InitOnce>
 8012c2e:	f025 0503 	bic.w	r5, r5, #3
 8012c32:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8012c34:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 8012c36:	3504      	adds	r5, #4
 8012c38:	429d      	cmp	r5, r3
 8012c3a:	bf38      	it	cc
 8012c3c:	461d      	movcc	r5, r3
 8012c3e:	4614      	mov	r4, r2
 8012c40:	b12c      	cbz	r4, 8012c4e <GUI_ALLOC_GetFixedBlock+0x2e>
 8012c42:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012c46:	42ab      	cmp	r3, r5
 8012c48:	d02c      	beq.n	8012ca4 <GUI_ALLOC_GetFixedBlock+0x84>
 8012c4a:	6824      	ldr	r4, [r4, #0]
 8012c4c:	e7f8      	b.n	8012c40 <GUI_ALLOC_GetFixedBlock+0x20>
 8012c4e:	68f3      	ldr	r3, [r6, #12]
 8012c50:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8012c52:	eb02 0803 	add.w	r8, r2, r3
 8012c56:	f858 7c04 	ldr.w	r7, [r8, #-4]
 8012c5a:	ebc7 0708 	rsb	r7, r7, r8
 8012c5e:	683b      	ldr	r3, [r7, #0]
 8012c60:	b133      	cbz	r3, 8012c70 <GUI_ALLOC_GetFixedBlock+0x50>
 8012c62:	4620      	mov	r0, r4
 8012c64:	f7ff fe22 	bl	80128ac <_RemoveHoles>
 8012c68:	f858 7c04 	ldr.w	r7, [r8, #-4]
 8012c6c:	ebc7 0708 	rsb	r7, r7, r8
 8012c70:	683b      	ldr	r3, [r7, #0]
 8012c72:	bb13      	cbnz	r3, 8012cba <GUI_ALLOC_GetFixedBlock+0x9a>
 8012c74:	687b      	ldr	r3, [r7, #4]
 8012c76:	42ab      	cmp	r3, r5
 8012c78:	db1f      	blt.n	8012cba <GUI_ALLOC_GetFixedBlock+0x9a>
 8012c7a:	4638      	mov	r0, r7
 8012c7c:	1d1c      	adds	r4, r3, #4
 8012c7e:	f7ff fda5 	bl	80127cc <_RemoveFreeBlock>
 8012c82:	68f3      	ldr	r3, [r6, #12]
 8012c84:	6878      	ldr	r0, [r7, #4]
 8012c86:	1b5b      	subs	r3, r3, r5
 8012c88:	60f3      	str	r3, [r6, #12]
 8012c8a:	6973      	ldr	r3, [r6, #20]
 8012c8c:	1b64      	subs	r4, r4, r5
 8012c8e:	442b      	add	r3, r5
 8012c90:	1b40      	subs	r0, r0, r5
 8012c92:	443c      	add	r4, r7
 8012c94:	6173      	str	r3, [r6, #20]
 8012c96:	d002      	beq.n	8012c9e <GUI_ALLOC_GetFixedBlock+0x7e>
 8012c98:	4639      	mov	r1, r7
 8012c9a:	f7ff fdb7 	bl	801280c <_AddFreeMemory>
 8012c9e:	f844 5c04 	str.w	r5, [r4, #-4]
 8012ca2:	e00a      	b.n	8012cba <GUI_ALLOC_GetFixedBlock+0x9a>
 8012ca4:	6823      	ldr	r3, [r4, #0]
 8012ca6:	b10b      	cbz	r3, 8012cac <GUI_ALLOC_GetFixedBlock+0x8c>
 8012ca8:	6861      	ldr	r1, [r4, #4]
 8012caa:	6059      	str	r1, [r3, #4]
 8012cac:	6861      	ldr	r1, [r4, #4]
 8012cae:	b101      	cbz	r1, 8012cb2 <GUI_ALLOC_GetFixedBlock+0x92>
 8012cb0:	600b      	str	r3, [r1, #0]
 8012cb2:	42a2      	cmp	r2, r4
 8012cb4:	d101      	bne.n	8012cba <GUI_ALLOC_GetFixedBlock+0x9a>
 8012cb6:	6823      	ldr	r3, [r4, #0]
 8012cb8:	63f3      	str	r3, [r6, #60]	; 0x3c
 8012cba:	4620      	mov	r0, r4
 8012cbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012cc0:	20019cac 	.word	0x20019cac

08012cc4 <GUI_ALLOC_GetMaxSize>:
 8012cc4:	b508      	push	{r3, lr}
 8012cc6:	f7ff fef1 	bl	8012aac <_InitOnce>
 8012cca:	2200      	movs	r2, #0
 8012ccc:	4b0b      	ldr	r3, [pc, #44]	; (8012cfc <GUI_ALLOC_GetMaxSize+0x38>)
 8012cce:	4413      	add	r3, r2
 8012cd0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012cd4:	b113      	cbz	r3, 8012cdc <GUI_ALLOC_GetMaxSize+0x18>
 8012cd6:	689b      	ldr	r3, [r3, #8]
 8012cd8:	2000      	movs	r0, #0
 8012cda:	e00b      	b.n	8012cf4 <GUI_ALLOC_GetMaxSize+0x30>
 8012cdc:	3a08      	subs	r2, #8
 8012cde:	f112 0f80 	cmn.w	r2, #128	; 0x80
 8012ce2:	d1f3      	bne.n	8012ccc <GUI_ALLOC_GetMaxSize+0x8>
 8012ce4:	e7f8      	b.n	8012cd8 <GUI_ALLOC_GetMaxSize+0x14>
 8012ce6:	685a      	ldr	r2, [r3, #4]
 8012ce8:	689b      	ldr	r3, [r3, #8]
 8012cea:	4290      	cmp	r0, r2
 8012cec:	bf38      	it	cc
 8012cee:	4610      	movcc	r0, r2
 8012cf0:	b113      	cbz	r3, 8012cf8 <GUI_ALLOC_GetMaxSize+0x34>
 8012cf2:	689b      	ldr	r3, [r3, #8]
 8012cf4:	2b00      	cmp	r3, #0
 8012cf6:	d1f6      	bne.n	8012ce6 <GUI_ALLOC_GetMaxSize+0x22>
 8012cf8:	380c      	subs	r0, #12
 8012cfa:	bd08      	pop	{r3, pc}
 8012cfc:	20019cac 	.word	0x20019cac

08012d00 <GUI_ALLOC_RequestSize>:
 8012d00:	b508      	push	{r3, lr}
 8012d02:	f7ff ffdf 	bl	8012cc4 <GUI_ALLOC_GetMaxSize>
 8012d06:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 8012d0a:	f04f 0364 	mov.w	r3, #100	; 0x64
 8012d0e:	4a06      	ldr	r2, [pc, #24]	; (8012d28 <GUI_ALLOC_RequestSize+0x28>)
 8012d10:	d904      	bls.n	8012d1c <GUI_ALLOC_RequestSize+0x1c>
 8012d12:	fb90 f0f3 	sdiv	r0, r0, r3
 8012d16:	6a13      	ldr	r3, [r2, #32]
 8012d18:	4358      	muls	r0, r3
 8012d1a:	bd08      	pop	{r3, pc}
 8012d1c:	6a12      	ldr	r2, [r2, #32]
 8012d1e:	4350      	muls	r0, r2
 8012d20:	fbb0 f0f3 	udiv	r0, r0, r3
 8012d24:	bd08      	pop	{r3, pc}
 8012d26:	bf00      	nop
 8012d28:	20019cac 	.word	0x20019cac

08012d2c <_Alloc>:
 8012d2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012d30:	4d38      	ldr	r5, [pc, #224]	; (8012e14 <_Alloc+0xe8>)
 8012d32:	4604      	mov	r4, r0
 8012d34:	f7ff feba 	bl	8012aac <_InitOnce>
 8012d38:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8012d3a:	682b      	ldr	r3, [r5, #0]
 8012d3c:	42bc      	cmp	r4, r7
 8012d3e:	bf24      	itt	cs
 8012d40:	1ce7      	addcs	r7, r4, #3
 8012d42:	f027 0703 	biccs.w	r7, r7, #3
 8012d46:	370c      	adds	r7, #12
 8012d48:	429f      	cmp	r7, r3
 8012d4a:	4c32      	ldr	r4, [pc, #200]	; (8012e14 <_Alloc+0xe8>)
 8012d4c:	d83e      	bhi.n	8012dcc <_Alloc+0xa0>
 8012d4e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012d50:	6862      	ldr	r2, [r4, #4]
 8012d52:	429a      	cmp	r2, r3
 8012d54:	d90f      	bls.n	8012d76 <_Alloc+0x4a>
 8012d56:	686b      	ldr	r3, [r5, #4]
 8012d58:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 8012d5a:	3b01      	subs	r3, #1
 8012d5c:	606b      	str	r3, [r5, #4]
 8012d5e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8012d60:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 8012d64:	eb03 0209 	add.w	r2, r3, r9
 8012d68:	6852      	ldr	r2, [r2, #4]
 8012d6a:	626a      	str	r2, [r5, #36]	; 0x24
 8012d6c:	2201      	movs	r2, #1
 8012d6e:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 8012d72:	b956      	cbnz	r6, 8012d8a <_Alloc+0x5e>
 8012d74:	e02a      	b.n	8012dcc <_Alloc+0xa0>
 8012d76:	3b01      	subs	r3, #1
 8012d78:	6323      	str	r3, [r4, #48]	; 0x30
 8012d7a:	f7ff fe4b 	bl	8012a14 <_EnlargeBlocks>
 8012d7e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012d80:	3301      	adds	r3, #1
 8012d82:	6323      	str	r3, [r4, #48]	; 0x30
 8012d84:	2800      	cmp	r0, #0
 8012d86:	d0e6      	beq.n	8012d56 <_Alloc+0x2a>
 8012d88:	e020      	b.n	8012dcc <_Alloc+0xa0>
 8012d8a:	230f      	movs	r3, #15
 8012d8c:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8012d90:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8012d92:	4297      	cmp	r7, r2
 8012d94:	d20c      	bcs.n	8012db0 <_Alloc+0x84>
 8012d96:	f113 33ff 	adds.w	r3, r3, #4294967295
 8012d9a:	d2f7      	bcs.n	8012d8c <_Alloc+0x60>
 8012d9c:	e008      	b.n	8012db0 <_Alloc+0x84>
 8012d9e:	6894      	ldr	r4, [r2, #8]
 8012da0:	b12c      	cbz	r4, 8012dae <_Alloc+0x82>
 8012da2:	6862      	ldr	r2, [r4, #4]
 8012da4:	4297      	cmp	r7, r2
 8012da6:	d914      	bls.n	8012dd2 <_Alloc+0xa6>
 8012da8:	68a2      	ldr	r2, [r4, #8]
 8012daa:	2a00      	cmp	r2, #0
 8012dac:	d1f7      	bne.n	8012d9e <_Alloc+0x72>
 8012dae:	3301      	adds	r3, #1
 8012db0:	2b0f      	cmp	r3, #15
 8012db2:	d803      	bhi.n	8012dbc <_Alloc+0x90>
 8012db4:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8012db8:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8012dba:	e7f6      	b.n	8012daa <_Alloc+0x7e>
 8012dbc:	4638      	mov	r0, r7
 8012dbe:	f7ff fd75 	bl	80128ac <_RemoveHoles>
 8012dc2:	2800      	cmp	r0, #0
 8012dc4:	d0e1      	beq.n	8012d8a <_Alloc+0x5e>
 8012dc6:	4630      	mov	r0, r6
 8012dc8:	f7ff fcd2 	bl	8012770 <_PushFreeBlock>
 8012dcc:	2000      	movs	r0, #0
 8012dce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012dd2:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8012dd6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8012dd8:	ebc7 0208 	rsb	r2, r7, r8
 8012ddc:	330c      	adds	r3, #12
 8012dde:	4620      	mov	r0, r4
 8012de0:	429a      	cmp	r2, r3
 8012de2:	bf38      	it	cc
 8012de4:	4647      	movcc	r7, r8
 8012de6:	f7ff fcf1 	bl	80127cc <_RemoveFreeBlock>
 8012dea:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8012dec:	444b      	add	r3, r9
 8012dee:	19e1      	adds	r1, r4, r7
 8012df0:	605c      	str	r4, [r3, #4]
 8012df2:	45b8      	cmp	r8, r7
 8012df4:	f04f 0300 	mov.w	r3, #0
 8012df8:	e884 00c0 	stmia.w	r4, {r6, r7}
 8012dfc:	60a3      	str	r3, [r4, #8]
 8012dfe:	6124      	str	r4, [r4, #16]
 8012e00:	f841 7c04 	str.w	r7, [r1, #-4]
 8012e04:	dd03      	ble.n	8012e0e <_Alloc+0xe2>
 8012e06:	ebc7 0008 	rsb	r0, r7, r8
 8012e0a:	f7ff fcff 	bl	801280c <_AddFreeMemory>
 8012e0e:	4630      	mov	r0, r6
 8012e10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012e14:	20019cac 	.word	0x20019cac

08012e18 <GUI_ALLOC_AllocNoInit>:
 8012e18:	b108      	cbz	r0, 8012e1e <GUI_ALLOC_AllocNoInit+0x6>
 8012e1a:	f7ff bf87 	b.w	8012d2c <_Alloc>
 8012e1e:	4770      	bx	lr

08012e20 <GUI_ALLOC_FreePtr>:
 8012e20:	b510      	push	{r4, lr}
 8012e22:	4604      	mov	r4, r0
 8012e24:	6800      	ldr	r0, [r0, #0]
 8012e26:	f7ff fddd 	bl	80129e4 <GUI_ALLOC_Free>
 8012e2a:	2300      	movs	r3, #0
 8012e2c:	6023      	str	r3, [r4, #0]
 8012e2e:	bd10      	pop	{r4, pc}

08012e30 <GUI_ALLOC_FreePtrArray>:
 8012e30:	b570      	push	{r4, r5, r6, lr}
 8012e32:	4605      	mov	r5, r0
 8012e34:	460e      	mov	r6, r1
 8012e36:	2400      	movs	r4, #0
 8012e38:	42b4      	cmp	r4, r6
 8012e3a:	da05      	bge.n	8012e48 <GUI_ALLOC_FreePtrArray+0x18>
 8012e3c:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 8012e40:	f7ff ffee 	bl	8012e20 <GUI_ALLOC_FreePtr>
 8012e44:	3401      	adds	r4, #1
 8012e46:	e7f7      	b.n	8012e38 <GUI_ALLOC_FreePtrArray+0x8>
 8012e48:	bd70      	pop	{r4, r5, r6, pc}

08012e4a <GUI_ALLOC_AllocZero>:
 8012e4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012e4c:	4605      	mov	r5, r0
 8012e4e:	f7ff ffe3 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 8012e52:	4606      	mov	r6, r0
 8012e54:	b158      	cbz	r0, 8012e6e <GUI_ALLOC_AllocZero+0x24>
 8012e56:	f7ff fd8b 	bl	8012970 <GUI_ALLOC_LockH>
 8012e5a:	ac02      	add	r4, sp, #8
 8012e5c:	2100      	movs	r1, #0
 8012e5e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8012e62:	462a      	mov	r2, r5
 8012e64:	f7fd f9de 	bl	8010224 <GUI__memset>
 8012e68:	4620      	mov	r0, r4
 8012e6a:	f7ff fd8f 	bl	801298c <GUI_ALLOC_UnlockH>
 8012e6e:	4630      	mov	r0, r6
 8012e70:	b002      	add	sp, #8
 8012e72:	bd70      	pop	{r4, r5, r6, pc}

08012e74 <GUI_ALLOC_AllocInit>:
 8012e74:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012e76:	4605      	mov	r5, r0
 8012e78:	460c      	mov	r4, r1
 8012e7a:	b909      	cbnz	r1, 8012e80 <GUI_ALLOC_AllocInit+0xc>
 8012e7c:	2000      	movs	r0, #0
 8012e7e:	e014      	b.n	8012eaa <GUI_ALLOC_AllocInit+0x36>
 8012e80:	4608      	mov	r0, r1
 8012e82:	f7ff ffc9 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 8012e86:	4606      	mov	r6, r0
 8012e88:	2800      	cmp	r0, #0
 8012e8a:	d0f7      	beq.n	8012e7c <GUI_ALLOC_AllocInit+0x8>
 8012e8c:	f7ff fd70 	bl	8012970 <GUI_ALLOC_LockH>
 8012e90:	4629      	mov	r1, r5
 8012e92:	9001      	str	r0, [sp, #4]
 8012e94:	4622      	mov	r2, r4
 8012e96:	b115      	cbz	r5, 8012e9e <GUI_ALLOC_AllocInit+0x2a>
 8012e98:	f007 fa23 	bl	801a2e2 <memcpy>
 8012e9c:	e001      	b.n	8012ea2 <GUI_ALLOC_AllocInit+0x2e>
 8012e9e:	f7fd f9c1 	bl	8010224 <GUI__memset>
 8012ea2:	a801      	add	r0, sp, #4
 8012ea4:	f7ff fd72 	bl	801298c <GUI_ALLOC_UnlockH>
 8012ea8:	4630      	mov	r0, r6
 8012eaa:	b002      	add	sp, #8
 8012eac:	bd70      	pop	{r4, r5, r6, pc}
	...

08012eb0 <LCD_Index2Color_M565>:
 8012eb0:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 8012eb4:	4b06      	ldr	r3, [pc, #24]	; (8012ed0 <LCD_Index2Color_M565+0x20>)
 8012eb6:	f000 021f 	and.w	r2, r0, #31
 8012eba:	f3c0 1045 	ubfx	r0, r0, #5, #6
 8012ebe:	5c9a      	ldrb	r2, [r3, r2]
 8012ec0:	5c5b      	ldrb	r3, [r3, r1]
 8012ec2:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 8012ec6:	4a03      	ldr	r2, [pc, #12]	; (8012ed4 <LCD_Index2Color_M565+0x24>)
 8012ec8:	5c10      	ldrb	r0, [r2, r0]
 8012eca:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8012ece:	4770      	bx	lr
 8012ed0:	0802122a 	.word	0x0802122a
 8012ed4:	080211ea 	.word	0x080211ea

08012ed8 <_Color2Index_M565>:
 8012ed8:	f3c0 4107 	ubfx	r1, r0, #16, #8
 8012edc:	4b06      	ldr	r3, [pc, #24]	; (8012ef8 <_Color2Index_M565+0x20>)
 8012ede:	b2c2      	uxtb	r2, r0
 8012ee0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8012ee4:	5c9a      	ldrb	r2, [r3, r2]
 8012ee6:	5c5b      	ldrb	r3, [r3, r1]
 8012ee8:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 8012eec:	4a03      	ldr	r2, [pc, #12]	; (8012efc <_Color2Index_M565+0x24>)
 8012eee:	5c10      	ldrb	r0, [r2, r0]
 8012ef0:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 8012ef4:	4770      	bx	lr
 8012ef6:	bf00      	nop
 8012ef8:	0802134a 	.word	0x0802134a
 8012efc:	0802124a 	.word	0x0802124a

08012f00 <_GetIndexMask_M565>:
 8012f00:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012f04:	4770      	bx	lr
	...

08012f08 <_Color2IndexBulk>:
 8012f08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012f0a:	4f0f      	ldr	r7, [pc, #60]	; (8012f48 <_Color2IndexBulk+0x40>)
 8012f0c:	683f      	ldr	r7, [r7, #0]
 8012f0e:	4606      	mov	r6, r0
 8012f10:	460d      	mov	r5, r1
 8012f12:	4614      	mov	r4, r2
 8012f14:	469c      	mov	ip, r3
 8012f16:	b10f      	cbz	r7, 8012f1c <_Color2IndexBulk+0x14>
 8012f18:	47b8      	blx	r7
 8012f1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012f1c:	f856 2b04 	ldr.w	r2, [r6], #4
 8012f20:	490a      	ldr	r1, [pc, #40]	; (8012f4c <_Color2IndexBulk+0x44>)
 8012f22:	b2d3      	uxtb	r3, r2
 8012f24:	3c01      	subs	r4, #1
 8012f26:	5cc8      	ldrb	r0, [r1, r3]
 8012f28:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8012f2c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8012f30:	5ccb      	ldrb	r3, [r1, r3]
 8012f32:	4907      	ldr	r1, [pc, #28]	; (8012f50 <_Color2IndexBulk+0x48>)
 8012f34:	5c8a      	ldrb	r2, [r1, r2]
 8012f36:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 8012f3a:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 8012f3e:	802b      	strh	r3, [r5, #0]
 8012f40:	4465      	add	r5, ip
 8012f42:	d1eb      	bne.n	8012f1c <_Color2IndexBulk+0x14>
 8012f44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012f46:	bf00      	nop
 8012f48:	2001969c 	.word	0x2001969c
 8012f4c:	0802134a 	.word	0x0802134a
 8012f50:	0802124a 	.word	0x0802124a

08012f54 <_Index2ColorBulk>:
 8012f54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012f56:	4e13      	ldr	r6, [pc, #76]	; (8012fa4 <_Index2ColorBulk+0x50>)
 8012f58:	6836      	ldr	r6, [r6, #0]
 8012f5a:	4684      	mov	ip, r0
 8012f5c:	4614      	mov	r4, r2
 8012f5e:	461d      	mov	r5, r3
 8012f60:	b10e      	cbz	r6, 8012f66 <_Index2ColorBulk+0x12>
 8012f62:	47b0      	blx	r6
 8012f64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012f66:	1e50      	subs	r0, r2, #1
 8012f68:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8012f6c:	3a01      	subs	r2, #1
 8012f6e:	fb03 c000 	mla	r0, r3, r0, ip
 8012f72:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8012f76:	8802      	ldrh	r2, [r0, #0]
 8012f78:	4b0b      	ldr	r3, [pc, #44]	; (8012fa8 <_Index2ColorBulk+0x54>)
 8012f7a:	f002 061f 	and.w	r6, r2, #31
 8012f7e:	0ad7      	lsrs	r7, r2, #11
 8012f80:	5d9e      	ldrb	r6, [r3, r6]
 8012f82:	5ddb      	ldrb	r3, [r3, r7]
 8012f84:	f3c2 1245 	ubfx	r2, r2, #5, #6
 8012f88:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 8012f8c:	4e07      	ldr	r6, [pc, #28]	; (8012fac <_Index2ColorBulk+0x58>)
 8012f8e:	5cb2      	ldrb	r2, [r6, r2]
 8012f90:	3c01      	subs	r4, #1
 8012f92:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8012f96:	f841 3904 	str.w	r3, [r1], #-4
 8012f9a:	ebc5 0000 	rsb	r0, r5, r0
 8012f9e:	d1ea      	bne.n	8012f76 <_Index2ColorBulk+0x22>
 8012fa0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012fa2:	bf00      	nop
 8012fa4:	20019698 	.word	0x20019698
 8012fa8:	0802122a 	.word	0x0802122a
 8012fac:	080211ea 	.word	0x080211ea

08012fb0 <LCD_Index2Color_888>:
 8012fb0:	4770      	bx	lr

08012fb2 <LCD_Index2Color_8888>:
 8012fb2:	4770      	bx	lr

08012fb4 <_Color2Index_8888>:
 8012fb4:	4770      	bx	lr

08012fb6 <_GetIndexMask_8888>:
 8012fb6:	f04f 30ff 	mov.w	r0, #4294967295
 8012fba:	4770      	bx	lr

08012fbc <_Color2IndexBulk>:
 8012fbc:	b510      	push	{r4, lr}
 8012fbe:	f850 4b04 	ldr.w	r4, [r0], #4
 8012fc2:	600c      	str	r4, [r1, #0]
 8012fc4:	3a01      	subs	r2, #1
 8012fc6:	4419      	add	r1, r3
 8012fc8:	d1f9      	bne.n	8012fbe <_Color2IndexBulk+0x2>
 8012fca:	bd10      	pop	{r4, pc}

08012fcc <_Index2ColorBulk>:
 8012fcc:	b510      	push	{r4, lr}
 8012fce:	6804      	ldr	r4, [r0, #0]
 8012fd0:	f841 4b04 	str.w	r4, [r1], #4
 8012fd4:	3a01      	subs	r2, #1
 8012fd6:	4418      	add	r0, r3
 8012fd8:	d1f9      	bne.n	8012fce <_Index2ColorBulk+0x2>
 8012fda:	bd10      	pop	{r4, pc}

08012fdc <WIDGET_SetEffect>:
 8012fdc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012fde:	2300      	movs	r3, #0
 8012fe0:	9302      	str	r3, [sp, #8]
 8012fe2:	9103      	str	r1, [sp, #12]
 8012fe4:	f44f 7340 	mov.w	r3, #768	; 0x300
 8012fe8:	4669      	mov	r1, sp
 8012fea:	9300      	str	r3, [sp, #0]
 8012fec:	f7f9 fdb6 	bl	800cb5c <WM_SendMessage>
 8012ff0:	b005      	add	sp, #20
 8012ff2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08012ff8 <WIDGET__FillStringInRect>:
 8012ff8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8012ffc:	461e      	mov	r6, r3
 8012ffe:	4b3f      	ldr	r3, [pc, #252]	; (80130fc <WIDGET__FillStringInRect+0x104>)
 8013000:	681b      	ldr	r3, [r3, #0]
 8013002:	4690      	mov	r8, r2
 8013004:	695a      	ldr	r2, [r3, #20]
 8013006:	4607      	mov	r7, r0
 8013008:	460c      	mov	r4, r1
 801300a:	b90a      	cbnz	r2, 8013010 <WIDGET__FillStringInRect+0x18>
 801300c:	bb1f      	cbnz	r7, 8013056 <WIDGET__FillStringInRect+0x5e>
 801300e:	e06f      	b.n	80130f0 <WIDGET__FillStringInRect+0xf8>
 8013010:	6808      	ldr	r0, [r1, #0]
 8013012:	6849      	ldr	r1, [r1, #4]
 8013014:	466d      	mov	r5, sp
 8013016:	c503      	stmia	r5!, {r0, r1}
 8013018:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 801301c:	f8bd 0000 	ldrh.w	r0, [sp]
 8013020:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8013024:	4408      	add	r0, r1
 8013026:	f8ad 0000 	strh.w	r0, [sp]
 801302a:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801302e:	4418      	add	r0, r3
 8013030:	f8ad 0002 	strh.w	r0, [sp, #2]
 8013034:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 8013038:	4401      	add	r1, r0
 801303a:	f8ad 1004 	strh.w	r1, [sp, #4]
 801303e:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8013042:	4610      	mov	r0, r2
 8013044:	440b      	add	r3, r1
 8013046:	4669      	mov	r1, sp
 8013048:	f8ad 3006 	strh.w	r3, [sp, #6]
 801304c:	f7fe fafe 	bl	801164c <GUI_RectsIntersect>
 8013050:	2800      	cmp	r0, #0
 8013052:	d050      	beq.n	80130f6 <WIDGET__FillStringInRect+0xfe>
 8013054:	e7da      	b.n	801300c <WIDGET__FillStringInRect+0x14>
 8013056:	783b      	ldrb	r3, [r7, #0]
 8013058:	2b00      	cmp	r3, #0
 801305a:	d049      	beq.n	80130f0 <WIDGET__FillStringInRect+0xf8>
 801305c:	f005 f95c 	bl	8018318 <GUI_GetBkColor>
 8013060:	0e00      	lsrs	r0, r0, #24
 8013062:	d003      	beq.n	801306c <WIDGET__FillStringInRect+0x74>
 8013064:	2002      	movs	r0, #2
 8013066:	f7fe fa5b 	bl	8011520 <GUI_SetTextMode>
 801306a:	e032      	b.n	80130d2 <WIDGET__FillStringInRect+0xda>
 801306c:	f7fe fa58 	bl	8011520 <GUI_SetTextMode>
 8013070:	4641      	mov	r1, r8
 8013072:	4632      	mov	r2, r6
 8013074:	a802      	add	r0, sp, #8
 8013076:	f7fd f9c5 	bl	8010404 <GUI__IntersectRects>
 801307a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801307e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013082:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8013086:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801308a:	3b01      	subs	r3, #1
 801308c:	f7ff f80e 	bl	80120ac <GUI_ClearRect>
 8013090:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8013094:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013098:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 801309c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80130a0:	3a01      	subs	r2, #1
 80130a2:	f7ff f803 	bl	80120ac <GUI_ClearRect>
 80130a6:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 80130aa:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 80130ae:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80130b2:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80130b6:	3001      	adds	r0, #1
 80130b8:	f7fe fff8 	bl	80120ac <GUI_ClearRect>
 80130bc:	f9bd 100e 	ldrsh.w	r1, [sp, #14]
 80130c0:	f9b4 0000 	ldrsh.w	r0, [r4]
 80130c4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80130c8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80130cc:	3101      	adds	r1, #1
 80130ce:	f7fe ffed 	bl	80120ac <GUI_ClearRect>
 80130d2:	4640      	mov	r0, r8
 80130d4:	f7f8 fc0c 	bl	800b8f0 <WM_SetUserClipRect>
 80130d8:	f9b6 1000 	ldrsh.w	r1, [r6]
 80130dc:	f9b6 2002 	ldrsh.w	r2, [r6, #2]
 80130e0:	4604      	mov	r4, r0
 80130e2:	4638      	mov	r0, r7
 80130e4:	f7fe fe5e 	bl	8011da4 <GUI_DispStringAt>
 80130e8:	4620      	mov	r0, r4
 80130ea:	f7f8 fc01 	bl	800b8f0 <WM_SetUserClipRect>
 80130ee:	e002      	b.n	80130f6 <WIDGET__FillStringInRect+0xfe>
 80130f0:	4620      	mov	r0, r4
 80130f2:	f005 fe21 	bl	8018d38 <GUI_ClearRectEx>
 80130f6:	b004      	add	sp, #16
 80130f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130fc:	2000016c 	.word	0x2000016c

08013100 <_DrawDownRect>:
 8013100:	b510      	push	{r4, lr}
 8013102:	b09c      	sub	sp, #112	; 0x70
 8013104:	4604      	mov	r4, r0
 8013106:	4668      	mov	r0, sp
 8013108:	f7fe fa8c 	bl	8011624 <GUI_SaveContext_W>
 801310c:	4b09      	ldr	r3, [pc, #36]	; (8013134 <_DrawDownRect+0x34>)
 801310e:	6818      	ldr	r0, [r3, #0]
 8013110:	f7fd f852 	bl	80101b8 <LCD_SetColor>
 8013114:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013118:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801311c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013120:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8013124:	f005 fe14 	bl	8018d50 <GUI_DrawRect>
 8013128:	4668      	mov	r0, sp
 801312a:	f7fe fa85 	bl	8011638 <GUI_RestoreContext>
 801312e:	b01c      	add	sp, #112	; 0x70
 8013130:	bd10      	pop	{r4, pc}
 8013132:	bf00      	nop
 8013134:	200196a0 	.word	0x200196a0

08013138 <_DrawUpRect>:
 8013138:	b510      	push	{r4, lr}
 801313a:	b09c      	sub	sp, #112	; 0x70
 801313c:	4604      	mov	r4, r0
 801313e:	4668      	mov	r0, sp
 8013140:	f7fe fa70 	bl	8011624 <GUI_SaveContext_W>
 8013144:	4b09      	ldr	r3, [pc, #36]	; (801316c <_DrawUpRect+0x34>)
 8013146:	6818      	ldr	r0, [r3, #0]
 8013148:	f7fd f836 	bl	80101b8 <LCD_SetColor>
 801314c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013150:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8013154:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013158:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801315c:	f005 fdf8 	bl	8018d50 <GUI_DrawRect>
 8013160:	4668      	mov	r0, sp
 8013162:	f7fe fa69 	bl	8011638 <GUI_RestoreContext>
 8013166:	b01c      	add	sp, #112	; 0x70
 8013168:	bd10      	pop	{r4, pc}
 801316a:	bf00      	nop
 801316c:	200196a0 	.word	0x200196a0

08013170 <_DrawDown>:
 8013170:	b507      	push	{r0, r1, r2, lr}
 8013172:	4668      	mov	r0, sp
 8013174:	f7f8 ffea 	bl	800c14c <WM_GetClientRect>
 8013178:	4668      	mov	r0, sp
 801317a:	f7ff ffc1 	bl	8013100 <_DrawDownRect>
 801317e:	b003      	add	sp, #12
 8013180:	f85d fb04 	ldr.w	pc, [sp], #4

08013184 <_DrawUp>:
 8013184:	b507      	push	{r0, r1, r2, lr}
 8013186:	4668      	mov	r0, sp
 8013188:	f7f8 ffe0 	bl	800c14c <WM_GetClientRect>
 801318c:	4668      	mov	r0, sp
 801318e:	f7ff ffd3 	bl	8013138 <_DrawUpRect>
 8013192:	b003      	add	sp, #12
 8013194:	f85d fb04 	ldr.w	pc, [sp], #4

08013198 <SLIDER_DrawSkinFlex>:
 8013198:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801319c:	6a03      	ldr	r3, [r0, #32]
 801319e:	4604      	mov	r4, r0
 80131a0:	2b00      	cmp	r3, #0
 80131a2:	f000 81d7 	beq.w	8013554 <SLIDER_DrawSkinFlex+0x3bc>
 80131a6:	68da      	ldr	r2, [r3, #12]
 80131a8:	4984      	ldr	r1, [pc, #528]	; (80133bc <SLIDER_DrawSkinFlex+0x224>)
 80131aa:	4d85      	ldr	r5, [pc, #532]	; (80133c0 <SLIDER_DrawSkinFlex+0x228>)
 80131ac:	2a00      	cmp	r2, #0
 80131ae:	bf18      	it	ne
 80131b0:	460d      	movne	r5, r1
 80131b2:	6842      	ldr	r2, [r0, #4]
 80131b4:	3a0a      	subs	r2, #10
 80131b6:	2a0a      	cmp	r2, #10
 80131b8:	f200 81cc 	bhi.w	8013554 <SLIDER_DrawSkinFlex+0x3bc>
 80131bc:	e8df f012 	tbh	[pc, r2, lsl #1]
 80131c0:	01ca01b2 	.word	0x01ca01b2
 80131c4:	01ca01ca 	.word	0x01ca01ca
 80131c8:	000b01ca 	.word	0x000b01ca
 80131cc:	01ca01ca 	.word	0x01ca01ca
 80131d0:	008001ca 	.word	0x008001ca
 80131d4:	017a      	.short	0x017a
 80131d6:	6919      	ldr	r1, [r3, #16]
 80131d8:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 80131da:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80131dc:	2900      	cmp	r1, #0
 80131de:	d035      	beq.n	801324c <SLIDER_DrawSkinFlex+0xb4>
 80131e0:	6901      	ldr	r1, [r0, #16]
 80131e2:	6980      	ldr	r0, [r0, #24]
 80131e4:	1a46      	subs	r6, r0, r1
 80131e6:	1af6      	subs	r6, r6, r3
 80131e8:	1ab6      	subs	r6, r6, r2
 80131ea:	2702      	movs	r7, #2
 80131ec:	fb96 f6f7 	sdiv	r6, r6, r7
 80131f0:	440e      	add	r6, r1
 80131f2:	eb06 0802 	add.w	r8, r6, r2
 80131f6:	f108 37ff 	add.w	r7, r8, #4294967295
 80131fa:	6928      	ldr	r0, [r5, #16]
 80131fc:	f7fe f9c8 	bl	8011590 <GUI_SetColor>
 8013200:	4631      	mov	r1, r6
 8013202:	6960      	ldr	r0, [r4, #20]
 8013204:	463a      	mov	r2, r7
 8013206:	f7fe fcab 	bl	8011b60 <GUI_DrawHLine>
 801320a:	6961      	ldr	r1, [r4, #20]
 801320c:	69e2      	ldr	r2, [r4, #28]
 801320e:	4630      	mov	r0, r6
 8013210:	3101      	adds	r1, #1
 8013212:	f7fe fc83 	bl	8011b1c <GUI_DrawVLine>
 8013216:	3601      	adds	r6, #1
 8013218:	6968      	ldr	r0, [r5, #20]
 801321a:	f1a8 0802 	sub.w	r8, r8, #2
 801321e:	f7fe f9b7 	bl	8011590 <GUI_SetColor>
 8013222:	69e0      	ldr	r0, [r4, #28]
 8013224:	4631      	mov	r1, r6
 8013226:	4642      	mov	r2, r8
 8013228:	f7fe fc9a 	bl	8011b60 <GUI_DrawHLine>
 801322c:	6961      	ldr	r1, [r4, #20]
 801322e:	69e2      	ldr	r2, [r4, #28]
 8013230:	3101      	adds	r1, #1
 8013232:	4638      	mov	r0, r7
 8013234:	f7fe fc72 	bl	8011b1c <GUI_DrawVLine>
 8013238:	69a8      	ldr	r0, [r5, #24]
 801323a:	f7fe f9a9 	bl	8011590 <GUI_SetColor>
 801323e:	6961      	ldr	r1, [r4, #20]
 8013240:	69e3      	ldr	r3, [r4, #28]
 8013242:	4630      	mov	r0, r6
 8013244:	3101      	adds	r1, #1
 8013246:	4642      	mov	r2, r8
 8013248:	3b01      	subs	r3, #1
 801324a:	e036      	b.n	80132ba <SLIDER_DrawSkinFlex+0x122>
 801324c:	6941      	ldr	r1, [r0, #20]
 801324e:	69c0      	ldr	r0, [r0, #28]
 8013250:	18ce      	adds	r6, r1, r3
 8013252:	1a41      	subs	r1, r0, r1
 8013254:	1acb      	subs	r3, r1, r3
 8013256:	1a9b      	subs	r3, r3, r2
 8013258:	2702      	movs	r7, #2
 801325a:	fb93 f3f7 	sdiv	r3, r3, r7
 801325e:	3601      	adds	r6, #1
 8013260:	441e      	add	r6, r3
 8013262:	eb06 0802 	add.w	r8, r6, r2
 8013266:	f108 37ff 	add.w	r7, r8, #4294967295
 801326a:	6928      	ldr	r0, [r5, #16]
 801326c:	f7fe f990 	bl	8011590 <GUI_SetColor>
 8013270:	4631      	mov	r1, r6
 8013272:	6920      	ldr	r0, [r4, #16]
 8013274:	463a      	mov	r2, r7
 8013276:	f7fe fc51 	bl	8011b1c <GUI_DrawVLine>
 801327a:	6921      	ldr	r1, [r4, #16]
 801327c:	69a2      	ldr	r2, [r4, #24]
 801327e:	4630      	mov	r0, r6
 8013280:	3101      	adds	r1, #1
 8013282:	f7fe fc6d 	bl	8011b60 <GUI_DrawHLine>
 8013286:	3601      	adds	r6, #1
 8013288:	6968      	ldr	r0, [r5, #20]
 801328a:	f1a8 0802 	sub.w	r8, r8, #2
 801328e:	f7fe f97f 	bl	8011590 <GUI_SetColor>
 8013292:	69a0      	ldr	r0, [r4, #24]
 8013294:	4631      	mov	r1, r6
 8013296:	4642      	mov	r2, r8
 8013298:	f7fe fc40 	bl	8011b1c <GUI_DrawVLine>
 801329c:	6921      	ldr	r1, [r4, #16]
 801329e:	69a2      	ldr	r2, [r4, #24]
 80132a0:	3101      	adds	r1, #1
 80132a2:	4638      	mov	r0, r7
 80132a4:	f7fe fc5c 	bl	8011b60 <GUI_DrawHLine>
 80132a8:	69a8      	ldr	r0, [r5, #24]
 80132aa:	f7fe f971 	bl	8011590 <GUI_SetColor>
 80132ae:	6920      	ldr	r0, [r4, #16]
 80132b0:	69a2      	ldr	r2, [r4, #24]
 80132b2:	3001      	adds	r0, #1
 80132b4:	4631      	mov	r1, r6
 80132b6:	3a01      	subs	r2, #1
 80132b8:	4643      	mov	r3, r8
 80132ba:	f7fe fbe9 	bl	8011a90 <GUI_FillRect>
 80132be:	e149      	b.n	8013554 <SLIDER_DrawSkinFlex+0x3bc>
 80132c0:	681e      	ldr	r6, [r3, #0]
 80132c2:	6919      	ldr	r1, [r3, #16]
 80132c4:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 80132c6:	3601      	adds	r6, #1
 80132c8:	1076      	asrs	r6, r6, #1
 80132ca:	2900      	cmp	r1, #0
 80132cc:	d07a      	beq.n	80133c4 <SLIDER_DrawSkinFlex+0x22c>
 80132ce:	6983      	ldr	r3, [r0, #24]
 80132d0:	6828      	ldr	r0, [r5, #0]
 80132d2:	ebc2 0a03 	rsb	sl, r2, r3
 80132d6:	f10a 39ff 	add.w	r9, sl, #4294967295
 80132da:	f7fe f959 	bl	8011590 <GUI_SetColor>
 80132de:	6961      	ldr	r1, [r4, #20]
 80132e0:	ebc6 0809 	rsb	r8, r6, r9
 80132e4:	f108 0701 	add.w	r7, r8, #1
 80132e8:	198b      	adds	r3, r1, r6
 80132ea:	4638      	mov	r0, r7
 80132ec:	464a      	mov	r2, r9
 80132ee:	3b01      	subs	r3, #1
 80132f0:	f005 fa5c 	bl	80187ac <GUI_DrawLine>
 80132f4:	69e1      	ldr	r1, [r4, #28]
 80132f6:	1b8b      	subs	r3, r1, r6
 80132f8:	3301      	adds	r3, #1
 80132fa:	4638      	mov	r0, r7
 80132fc:	464a      	mov	r2, r9
 80132fe:	f005 fa55 	bl	80187ac <GUI_DrawLine>
 8013302:	6960      	ldr	r0, [r4, #20]
 8013304:	6921      	ldr	r1, [r4, #16]
 8013306:	4642      	mov	r2, r8
 8013308:	f7fe fc2a 	bl	8011b60 <GUI_DrawHLine>
 801330c:	69e0      	ldr	r0, [r4, #28]
 801330e:	6921      	ldr	r1, [r4, #16]
 8013310:	4642      	mov	r2, r8
 8013312:	f7fe fc25 	bl	8011b60 <GUI_DrawHLine>
 8013316:	6961      	ldr	r1, [r4, #20]
 8013318:	69e2      	ldr	r2, [r4, #28]
 801331a:	6920      	ldr	r0, [r4, #16]
 801331c:	f7fe fbfe 	bl	8011b1c <GUI_DrawVLine>
 8013320:	6868      	ldr	r0, [r5, #4]
 8013322:	f7fe f935 	bl	8011590 <GUI_SetColor>
 8013326:	6961      	ldr	r1, [r4, #20]
 8013328:	f1aa 0a02 	sub.w	sl, sl, #2
 801332c:	198b      	adds	r3, r1, r6
 801332e:	4638      	mov	r0, r7
 8013330:	3101      	adds	r1, #1
 8013332:	4652      	mov	r2, sl
 8013334:	3b01      	subs	r3, #1
 8013336:	f005 fa39 	bl	80187ac <GUI_DrawLine>
 801333a:	69e1      	ldr	r1, [r4, #28]
 801333c:	1b8b      	subs	r3, r1, r6
 801333e:	3301      	adds	r3, #1
 8013340:	4638      	mov	r0, r7
 8013342:	3901      	subs	r1, #1
 8013344:	4652      	mov	r2, sl
 8013346:	f005 fa31 	bl	80187ac <GUI_DrawLine>
 801334a:	6960      	ldr	r0, [r4, #20]
 801334c:	6921      	ldr	r1, [r4, #16]
 801334e:	3001      	adds	r0, #1
 8013350:	3101      	adds	r1, #1
 8013352:	4642      	mov	r2, r8
 8013354:	f7fe fc04 	bl	8011b60 <GUI_DrawHLine>
 8013358:	69e0      	ldr	r0, [r4, #28]
 801335a:	6921      	ldr	r1, [r4, #16]
 801335c:	3801      	subs	r0, #1
 801335e:	3101      	adds	r1, #1
 8013360:	4642      	mov	r2, r8
 8013362:	f7fe fbfd 	bl	8011b60 <GUI_DrawHLine>
 8013366:	6920      	ldr	r0, [r4, #16]
 8013368:	6961      	ldr	r1, [r4, #20]
 801336a:	69e2      	ldr	r2, [r4, #28]
 801336c:	3001      	adds	r0, #1
 801336e:	3101      	adds	r1, #1
 8013370:	3a01      	subs	r2, #1
 8013372:	f7fe fbd3 	bl	8011b1c <GUI_DrawVLine>
 8013376:	68aa      	ldr	r2, [r5, #8]
 8013378:	6920      	ldr	r0, [r4, #16]
 801337a:	6961      	ldr	r1, [r4, #20]
 801337c:	69e3      	ldr	r3, [r4, #28]
 801337e:	9200      	str	r2, [sp, #0]
 8013380:	68ea      	ldr	r2, [r5, #12]
 8013382:	9201      	str	r2, [sp, #4]
 8013384:	3002      	adds	r0, #2
 8013386:	3102      	adds	r1, #2
 8013388:	463a      	mov	r2, r7
 801338a:	3b02      	subs	r3, #2
 801338c:	f005 fb4c 	bl	8018a28 <GUI_DrawGradientH>
 8013390:	68e8      	ldr	r0, [r5, #12]
 8013392:	f7fe f8fd 	bl	8011590 <GUI_SetColor>
 8013396:	2502      	movs	r5, #2
 8013398:	1e73      	subs	r3, r6, #1
 801339a:	429d      	cmp	r5, r3
 801339c:	f280 80da 	bge.w	8013554 <SLIDER_DrawSkinFlex+0x3bc>
 80133a0:	6963      	ldr	r3, [r4, #20]
 80133a2:	4433      	add	r3, r6
 80133a4:	1b59      	subs	r1, r3, r5
 80133a6:	69e3      	ldr	r3, [r4, #28]
 80133a8:	1b9b      	subs	r3, r3, r6
 80133aa:	195a      	adds	r2, r3, r5
 80133ac:	ebc5 0009 	rsb	r0, r5, r9
 80133b0:	3101      	adds	r1, #1
 80133b2:	3a01      	subs	r2, #1
 80133b4:	f7fe fbb2 	bl	8011b1c <GUI_DrawVLine>
 80133b8:	3501      	adds	r5, #1
 80133ba:	e7ed      	b.n	8013398 <SLIDER_DrawSkinFlex+0x200>
 80133bc:	20000178 	.word	0x20000178
 80133c0:	200001a4 	.word	0x200001a4
 80133c4:	6943      	ldr	r3, [r0, #20]
 80133c6:	6828      	ldr	r0, [r5, #0]
 80133c8:	eb03 0a02 	add.w	sl, r3, r2
 80133cc:	f10a 0901 	add.w	r9, sl, #1
 80133d0:	f7fe f8de 	bl	8011590 <GUI_SetColor>
 80133d4:	6922      	ldr	r2, [r4, #16]
 80133d6:	eb09 0806 	add.w	r8, r9, r6
 80133da:	f108 37ff 	add.w	r7, r8, #4294967295
 80133de:	1990      	adds	r0, r2, r6
 80133e0:	3801      	subs	r0, #1
 80133e2:	4649      	mov	r1, r9
 80133e4:	463b      	mov	r3, r7
 80133e6:	f005 f9e1 	bl	80187ac <GUI_DrawLine>
 80133ea:	69a2      	ldr	r2, [r4, #24]
 80133ec:	1b90      	subs	r0, r2, r6
 80133ee:	463b      	mov	r3, r7
 80133f0:	3001      	adds	r0, #1
 80133f2:	4649      	mov	r1, r9
 80133f4:	f005 f9da 	bl	80187ac <GUI_DrawLine>
 80133f8:	6920      	ldr	r0, [r4, #16]
 80133fa:	69e2      	ldr	r2, [r4, #28]
 80133fc:	4641      	mov	r1, r8
 80133fe:	f7fe fb8d 	bl	8011b1c <GUI_DrawVLine>
 8013402:	69a0      	ldr	r0, [r4, #24]
 8013404:	69e2      	ldr	r2, [r4, #28]
 8013406:	4641      	mov	r1, r8
 8013408:	f7fe fb88 	bl	8011b1c <GUI_DrawVLine>
 801340c:	6921      	ldr	r1, [r4, #16]
 801340e:	69a2      	ldr	r2, [r4, #24]
 8013410:	69e0      	ldr	r0, [r4, #28]
 8013412:	3101      	adds	r1, #1
 8013414:	3a01      	subs	r2, #1
 8013416:	f7fe fba3 	bl	8011b60 <GUI_DrawHLine>
 801341a:	6868      	ldr	r0, [r5, #4]
 801341c:	f7fe f8b8 	bl	8011590 <GUI_SetColor>
 8013420:	6922      	ldr	r2, [r4, #16]
 8013422:	f10a 0a02 	add.w	sl, sl, #2
 8013426:	1990      	adds	r0, r2, r6
 8013428:	3801      	subs	r0, #1
 801342a:	4651      	mov	r1, sl
 801342c:	3201      	adds	r2, #1
 801342e:	463b      	mov	r3, r7
 8013430:	f005 f9bc 	bl	80187ac <GUI_DrawLine>
 8013434:	69a2      	ldr	r2, [r4, #24]
 8013436:	1b90      	subs	r0, r2, r6
 8013438:	463b      	mov	r3, r7
 801343a:	3001      	adds	r0, #1
 801343c:	4651      	mov	r1, sl
 801343e:	3a01      	subs	r2, #1
 8013440:	f005 f9b4 	bl	80187ac <GUI_DrawLine>
 8013444:	6920      	ldr	r0, [r4, #16]
 8013446:	69e2      	ldr	r2, [r4, #28]
 8013448:	3001      	adds	r0, #1
 801344a:	4641      	mov	r1, r8
 801344c:	3a01      	subs	r2, #1
 801344e:	f7fe fb65 	bl	8011b1c <GUI_DrawVLine>
 8013452:	69a0      	ldr	r0, [r4, #24]
 8013454:	69e2      	ldr	r2, [r4, #28]
 8013456:	3801      	subs	r0, #1
 8013458:	4641      	mov	r1, r8
 801345a:	3a01      	subs	r2, #1
 801345c:	f7fe fb5e 	bl	8011b1c <GUI_DrawVLine>
 8013460:	69e0      	ldr	r0, [r4, #28]
 8013462:	6921      	ldr	r1, [r4, #16]
 8013464:	69a2      	ldr	r2, [r4, #24]
 8013466:	3801      	subs	r0, #1
 8013468:	3102      	adds	r1, #2
 801346a:	3a02      	subs	r2, #2
 801346c:	f7fe fb78 	bl	8011b60 <GUI_DrawHLine>
 8013470:	68a9      	ldr	r1, [r5, #8]
 8013472:	6920      	ldr	r0, [r4, #16]
 8013474:	69a2      	ldr	r2, [r4, #24]
 8013476:	69e3      	ldr	r3, [r4, #28]
 8013478:	9100      	str	r1, [sp, #0]
 801347a:	68e9      	ldr	r1, [r5, #12]
 801347c:	9101      	str	r1, [sp, #4]
 801347e:	3002      	adds	r0, #2
 8013480:	4639      	mov	r1, r7
 8013482:	3a02      	subs	r2, #2
 8013484:	3b02      	subs	r3, #2
 8013486:	f005 fa9d 	bl	80189c4 <GUI_DrawGradientV>
 801348a:	68a8      	ldr	r0, [r5, #8]
 801348c:	f7fe f880 	bl	8011590 <GUI_SetColor>
 8013490:	2502      	movs	r5, #2
 8013492:	1e73      	subs	r3, r6, #1
 8013494:	429d      	cmp	r5, r3
 8013496:	da5d      	bge.n	8013554 <SLIDER_DrawSkinFlex+0x3bc>
 8013498:	6923      	ldr	r3, [r4, #16]
 801349a:	4433      	add	r3, r6
 801349c:	1b59      	subs	r1, r3, r5
 801349e:	69a3      	ldr	r3, [r4, #24]
 80134a0:	1b9b      	subs	r3, r3, r6
 80134a2:	195a      	adds	r2, r3, r5
 80134a4:	eb09 0005 	add.w	r0, r9, r5
 80134a8:	3101      	adds	r1, #1
 80134aa:	3a01      	subs	r2, #1
 80134ac:	f7fe fb58 	bl	8011b60 <GUI_DrawHLine>
 80134b0:	3501      	adds	r5, #1
 80134b2:	e7ee      	b.n	8013492 <SLIDER_DrawSkinFlex+0x2fa>
 80134b4:	691e      	ldr	r6, [r3, #16]
 80134b6:	69e8      	ldr	r0, [r5, #28]
 80134b8:	b1d6      	cbz	r6, 80134f0 <SLIDER_DrawSkinFlex+0x358>
 80134ba:	f7fe f869 	bl	8011590 <GUI_SetColor>
 80134be:	6a27      	ldr	r7, [r4, #32]
 80134c0:	2600      	movs	r6, #0
 80134c2:	687b      	ldr	r3, [r7, #4]
 80134c4:	429e      	cmp	r6, r3
 80134c6:	da45      	bge.n	8013554 <SLIDER_DrawSkinFlex+0x3bc>
 80134c8:	6839      	ldr	r1, [r7, #0]
 80134ca:	69a2      	ldr	r2, [r4, #24]
 80134cc:	2002      	movs	r0, #2
 80134ce:	fb91 f0f0 	sdiv	r0, r1, r0
 80134d2:	6961      	ldr	r1, [r4, #20]
 80134d4:	4408      	add	r0, r1
 80134d6:	68b9      	ldr	r1, [r7, #8]
 80134d8:	3b01      	subs	r3, #1
 80134da:	4371      	muls	r1, r6
 80134dc:	fb91 f3f3 	sdiv	r3, r1, r3
 80134e0:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80134e2:	1a51      	subs	r1, r2, r1
 80134e4:	4418      	add	r0, r3
 80134e6:	3101      	adds	r1, #1
 80134e8:	f7fe fb3a 	bl	8011b60 <GUI_DrawHLine>
 80134ec:	3601      	adds	r6, #1
 80134ee:	e7e8      	b.n	80134c2 <SLIDER_DrawSkinFlex+0x32a>
 80134f0:	f7fe f84e 	bl	8011590 <GUI_SetColor>
 80134f4:	6a27      	ldr	r7, [r4, #32]
 80134f6:	687b      	ldr	r3, [r7, #4]
 80134f8:	429e      	cmp	r6, r3
 80134fa:	da2b      	bge.n	8013554 <SLIDER_DrawSkinFlex+0x3bc>
 80134fc:	683a      	ldr	r2, [r7, #0]
 80134fe:	6961      	ldr	r1, [r4, #20]
 8013500:	2002      	movs	r0, #2
 8013502:	fb92 f0f0 	sdiv	r0, r2, r0
 8013506:	6922      	ldr	r2, [r4, #16]
 8013508:	4410      	add	r0, r2
 801350a:	68ba      	ldr	r2, [r7, #8]
 801350c:	3b01      	subs	r3, #1
 801350e:	4372      	muls	r2, r6
 8013510:	fb92 f3f3 	sdiv	r3, r2, r3
 8013514:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8013516:	440a      	add	r2, r1
 8013518:	4418      	add	r0, r3
 801351a:	3a01      	subs	r2, #1
 801351c:	f7fe fafe 	bl	8011b1c <GUI_DrawVLine>
 8013520:	3601      	adds	r6, #1
 8013522:	e7e8      	b.n	80134f6 <SLIDER_DrawSkinFlex+0x35e>
 8013524:	6800      	ldr	r0, [r0, #0]
 8013526:	2101      	movs	r1, #1
 8013528:	f7f6 f84e 	bl	80095c8 <SLIDER_GetFlag>
 801352c:	b190      	cbz	r0, 8013554 <SLIDER_DrawSkinFlex+0x3bc>
 801352e:	6a28      	ldr	r0, [r5, #32]
 8013530:	f7fe f82e 	bl	8011590 <GUI_SetColor>
 8013534:	6923      	ldr	r3, [r4, #16]
 8013536:	f8ad 3008 	strh.w	r3, [sp, #8]
 801353a:	6963      	ldr	r3, [r4, #20]
 801353c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013540:	69a3      	ldr	r3, [r4, #24]
 8013542:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013546:	a802      	add	r0, sp, #8
 8013548:	69e3      	ldr	r3, [r4, #28]
 801354a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801354e:	2100      	movs	r1, #0
 8013550:	f7fe fb2a 	bl	8011ba8 <GUI_DrawFocusRect>
 8013554:	2000      	movs	r0, #0
 8013556:	b004      	add	sp, #16
 8013558:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801355c <_Create>:
 801355c:	b530      	push	{r4, r5, lr}
 801355e:	b08b      	sub	sp, #44	; 0x2c
 8013560:	4605      	mov	r5, r0
 8013562:	f7ff fa05 	bl	8012970 <GUI_ALLOC_LockH>
 8013566:	ab0a      	add	r3, sp, #40	; 0x28
 8013568:	6c84      	ldr	r4, [r0, #72]	; 0x48
 801356a:	f843 0d28 	str.w	r0, [r3, #-40]!
 801356e:	4668      	mov	r0, sp
 8013570:	f7ff fa0c 	bl	801298c <GUI_ALLOC_UnlockH>
 8013574:	2300      	movs	r3, #0
 8013576:	9302      	str	r3, [sp, #8]
 8013578:	9501      	str	r5, [sp, #4]
 801357a:	9309      	str	r3, [sp, #36]	; 0x24
 801357c:	a801      	add	r0, sp, #4
 801357e:	47a0      	blx	r4
 8013580:	b00b      	add	sp, #44	; 0x2c
 8013582:	bd30      	pop	{r4, r5, pc}

08013584 <_Paint>:
 8013584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013588:	b097      	sub	sp, #92	; 0x5c
 801358a:	4607      	mov	r7, r0
 801358c:	f7ff f9f0 	bl	8012970 <GUI_ALLOC_LockH>
 8013590:	f100 0350 	add.w	r3, r0, #80	; 0x50
 8013594:	e893 0168 	ldmia.w	r3, {r3, r5, r6, r8}
 8013598:	9309      	str	r3, [sp, #36]	; 0x24
 801359a:	f9b0 3060 	ldrsh.w	r3, [r0, #96]	; 0x60
 801359e:	9308      	str	r3, [sp, #32]
 80135a0:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80135a2:	9003      	str	r0, [sp, #12]
 80135a4:	f3c3 2200 	ubfx	r2, r3, #8, #1
 80135a8:	6c84      	ldr	r4, [r0, #72]	; 0x48
 80135aa:	920b      	str	r2, [sp, #44]	; 0x2c
 80135ac:	a803      	add	r0, sp, #12
 80135ae:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 80135b2:	f003 0301 	and.w	r3, r3, #1
 80135b6:	920c      	str	r2, [sp, #48]	; 0x30
 80135b8:	9301      	str	r3, [sp, #4]
 80135ba:	f7ff f9e7 	bl	801298c <GUI_ALLOC_UnlockH>
 80135be:	a904      	add	r1, sp, #16
 80135c0:	4638      	mov	r0, r7
 80135c2:	f7f8 fdc0 	bl	800c146 <WM_GetClientRectEx>
 80135c6:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80135ca:	f9bd c016 	ldrsh.w	ip, [sp, #22]
 80135ce:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80135d2:	9b08      	ldr	r3, [sp, #32]
 80135d4:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 80135d8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80135dc:	42b5      	cmp	r5, r6
 80135de:	bf14      	ite	ne
 80135e0:	ebc6 0505 	rsbne	r5, r6, r5
 80135e4:	2501      	moveq	r5, #1
 80135e6:	f1ba 0f00 	cmp.w	sl, #0
 80135ea:	d002      	beq.n	80135f2 <_Paint+0x6e>
 80135ec:	ebc1 090c 	rsb	r9, r1, ip
 80135f0:	e001      	b.n	80135f6 <_Paint+0x72>
 80135f2:	ebc2 090e 	rsb	r9, r2, lr
 80135f6:	43d8      	mvns	r0, r3
 80135f8:	4481      	add	r9, r0
 80135fa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80135fc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8013600:	2800      	cmp	r0, #0
 8013602:	da08      	bge.n	8013616 <_Paint+0x92>
 8013604:	f04f 0b05 	mov.w	fp, #5
 8013608:	1c68      	adds	r0, r5, #1
 801360a:	fb99 f9fb 	sdiv	r9, r9, fp
 801360e:	4548      	cmp	r0, r9
 8013610:	bfc8      	it	gt
 8013612:	200b      	movgt	r0, #11
 8013614:	9009      	str	r0, [sp, #36]	; 0x24
 8013616:	ebc6 0608 	rsb	r6, r6, r8
 801361a:	f1ba 0f00 	cmp.w	sl, #0
 801361e:	d003      	beq.n	8013628 <_Paint+0xa4>
 8013620:	1c48      	adds	r0, r1, #1
 8013622:	ebc1 080c 	rsb	r8, r1, ip
 8013626:	e002      	b.n	801362e <_Paint+0xaa>
 8013628:	1c50      	adds	r0, r2, #1
 801362a:	ebc2 080e 	rsb	r8, r2, lr
 801362e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013632:	ebc3 0808 	rsb	r8, r3, r8
 8013636:	fb06 f608 	mul.w	r6, r6, r8
 801363a:	fb96 f6f5 	sdiv	r6, r6, r5
 801363e:	4605      	mov	r5, r0
 8013640:	4435      	add	r5, r6
 8013642:	442b      	add	r3, r5
 8013644:	1e5e      	subs	r6, r3, #1
 8013646:	ab08      	add	r3, sp, #32
 8013648:	f10e 30ff 	add.w	r0, lr, #4294967295
 801364c:	9315      	str	r3, [sp, #84]	; 0x54
 801364e:	230f      	movs	r3, #15
 8013650:	3101      	adds	r1, #1
 8013652:	3201      	adds	r2, #1
 8013654:	930e      	str	r3, [sp, #56]	; 0x38
 8013656:	9013      	str	r0, [sp, #76]	; 0x4c
 8013658:	f10c 33ff 	add.w	r3, ip, #4294967295
 801365c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013660:	a806      	add	r0, sp, #24
 8013662:	9314      	str	r3, [sp, #80]	; 0x50
 8013664:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013668:	9112      	str	r1, [sp, #72]	; 0x48
 801366a:	9211      	str	r2, [sp, #68]	; 0x44
 801366c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013670:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013674:	970d      	str	r7, [sp, #52]	; 0x34
 8013676:	f7f8 f93b 	bl	800b8f0 <WM_SetUserClipRect>
 801367a:	a80d      	add	r0, sp, #52	; 0x34
 801367c:	47a0      	blx	r4
 801367e:	2000      	movs	r0, #0
 8013680:	f7f8 f936 	bl	800b8f0 <WM_SetUserClipRect>
 8013684:	2313      	movs	r3, #19
 8013686:	930e      	str	r3, [sp, #56]	; 0x38
 8013688:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801368a:	b113      	cbz	r3, 8013692 <_Paint+0x10e>
 801368c:	9512      	str	r5, [sp, #72]	; 0x48
 801368e:	9614      	str	r6, [sp, #80]	; 0x50
 8013690:	e001      	b.n	8013696 <_Paint+0x112>
 8013692:	9511      	str	r5, [sp, #68]	; 0x44
 8013694:	9613      	str	r6, [sp, #76]	; 0x4c
 8013696:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013698:	f8ad 3018 	strh.w	r3, [sp, #24]
 801369c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801369e:	f8ad 301a 	strh.w	r3, [sp, #26]
 80136a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80136a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80136a8:	a806      	add	r0, sp, #24
 80136aa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80136ac:	f8ad 301e 	strh.w	r3, [sp, #30]
 80136b0:	f7f8 f91e 	bl	800b8f0 <WM_SetUserClipRect>
 80136b4:	a80d      	add	r0, sp, #52	; 0x34
 80136b6:	47a0      	blx	r4
 80136b8:	2000      	movs	r0, #0
 80136ba:	f7f8 f919 	bl	800b8f0 <WM_SetUserClipRect>
 80136be:	2314      	movs	r3, #20
 80136c0:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 80136c4:	930e      	str	r3, [sp, #56]	; 0x38
 80136c6:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80136ca:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80136ce:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80136d2:	3001      	adds	r0, #1
 80136d4:	3b01      	subs	r3, #1
 80136d6:	3101      	adds	r1, #1
 80136d8:	3a01      	subs	r2, #1
 80136da:	9011      	str	r0, [sp, #68]	; 0x44
 80136dc:	f8ad 0018 	strh.w	r0, [sp, #24]
 80136e0:	a806      	add	r0, sp, #24
 80136e2:	9314      	str	r3, [sp, #80]	; 0x50
 80136e4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80136e8:	9112      	str	r1, [sp, #72]	; 0x48
 80136ea:	9213      	str	r2, [sp, #76]	; 0x4c
 80136ec:	f8ad 101a 	strh.w	r1, [sp, #26]
 80136f0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80136f4:	f7f8 f8fc 	bl	800b8f0 <WM_SetUserClipRect>
 80136f8:	a80d      	add	r0, sp, #52	; 0x34
 80136fa:	47a0      	blx	r4
 80136fc:	2000      	movs	r0, #0
 80136fe:	f7f8 f8f7 	bl	800b8f0 <WM_SetUserClipRect>
 8013702:	9b01      	ldr	r3, [sp, #4]
 8013704:	b30b      	cbz	r3, 801374a <_Paint+0x1c6>
 8013706:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 801370a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801370e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013712:	230a      	movs	r3, #10
 8013714:	930e      	str	r3, [sp, #56]	; 0x38
 8013716:	b20b      	sxth	r3, r1
 8013718:	9312      	str	r3, [sp, #72]	; 0x48
 801371a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801371e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013722:	b21a      	sxth	r2, r3
 8013724:	9214      	str	r2, [sp, #80]	; 0x50
 8013726:	b202      	sxth	r2, r0
 8013728:	9211      	str	r2, [sp, #68]	; 0x44
 801372a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801372e:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013732:	b215      	sxth	r5, r2
 8013734:	a806      	add	r0, sp, #24
 8013736:	f8ad 301e 	strh.w	r3, [sp, #30]
 801373a:	9513      	str	r5, [sp, #76]	; 0x4c
 801373c:	f7f8 f8d8 	bl	800b8f0 <WM_SetUserClipRect>
 8013740:	a80d      	add	r0, sp, #52	; 0x34
 8013742:	47a0      	blx	r4
 8013744:	2000      	movs	r0, #0
 8013746:	f7f8 f8d3 	bl	800b8f0 <WM_SetUserClipRect>
 801374a:	b017      	add	sp, #92	; 0x5c
 801374c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013750 <SCROLLBAR_GetValue>:
 8013750:	b513      	push	{r0, r1, r4, lr}
 8013752:	4604      	mov	r4, r0
 8013754:	b140      	cbz	r0, 8013768 <SCROLLBAR_GetValue+0x18>
 8013756:	f7ff f90b 	bl	8012970 <GUI_ALLOC_LockH>
 801375a:	ab02      	add	r3, sp, #8
 801375c:	6d04      	ldr	r4, [r0, #80]	; 0x50
 801375e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8013762:	4618      	mov	r0, r3
 8013764:	f7ff f912 	bl	801298c <GUI_ALLOC_UnlockH>
 8013768:	4620      	mov	r0, r4
 801376a:	b002      	add	sp, #8
 801376c:	bd10      	pop	{r4, pc}

0801376e <SCROLLBAR_Create>:
 801376e:	b530      	push	{r4, r5, lr}
 8013770:	9c05      	ldr	r4, [sp, #20]
 8013772:	9d04      	ldr	r5, [sp, #16]
 8013774:	9404      	str	r4, [sp, #16]
 8013776:	9c06      	ldr	r4, [sp, #24]
 8013778:	9405      	str	r4, [sp, #20]
 801377a:	9506      	str	r5, [sp, #24]
 801377c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013780:	f000 b8a6 	b.w	80138d0 <SCROLLBAR_CreateEx>

08013784 <_DeleteTimer>:
 8013784:	b507      	push	{r0, r1, r2, lr}
 8013786:	f7ff f8f3 	bl	8012970 <GUI_ALLOC_LockH>
 801378a:	9001      	str	r0, [sp, #4]
 801378c:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801378e:	f7f8 f809 	bl	800b7a4 <WM_DeleteTimer>
 8013792:	a802      	add	r0, sp, #8
 8013794:	2200      	movs	r2, #0
 8013796:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 801379a:	665a      	str	r2, [r3, #100]	; 0x64
 801379c:	65da      	str	r2, [r3, #92]	; 0x5c
 801379e:	f7ff f8f5 	bl	801298c <GUI_ALLOC_UnlockH>
 80137a2:	b003      	add	sp, #12
 80137a4:	f85d fb04 	ldr.w	pc, [sp], #4

080137a8 <SCROLLBAR__Rect2VRect>:
 80137a8:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80137aa:	071b      	lsls	r3, r3, #28
 80137ac:	b510      	push	{r4, lr}
 80137ae:	d512      	bpl.n	80137d6 <SCROLLBAR__Rect2VRect+0x2e>
 80137b0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80137b4:	f9b0 3000 	ldrsh.w	r3, [r0]
 80137b8:	8808      	ldrh	r0, [r1, #0]
 80137ba:	884c      	ldrh	r4, [r1, #2]
 80137bc:	800c      	strh	r4, [r1, #0]
 80137be:	1ad3      	subs	r3, r2, r3
 80137c0:	888a      	ldrh	r2, [r1, #4]
 80137c2:	88cc      	ldrh	r4, [r1, #6]
 80137c4:	808c      	strh	r4, [r1, #4]
 80137c6:	3301      	adds	r3, #1
 80137c8:	b29b      	uxth	r3, r3
 80137ca:	43c0      	mvns	r0, r0
 80137cc:	43d2      	mvns	r2, r2
 80137ce:	4418      	add	r0, r3
 80137d0:	4413      	add	r3, r2
 80137d2:	80c8      	strh	r0, [r1, #6]
 80137d4:	804b      	strh	r3, [r1, #2]
 80137d6:	bd10      	pop	{r4, pc}

080137d8 <SCROLLBAR__InvalidatePartner>:
 80137d8:	b510      	push	{r4, lr}
 80137da:	4604      	mov	r4, r0
 80137dc:	f001 fe05 	bl	80153ea <WM_GetScrollPartner>
 80137e0:	f7f9 fa13 	bl	800cc0a <WM_InvalidateWindow>
 80137e4:	4620      	mov	r0, r4
 80137e6:	f7f8 fc1d 	bl	800c024 <WM_GetParent>
 80137ea:	2125      	movs	r1, #37	; 0x25
 80137ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80137f0:	f7f8 b9cc 	b.w	800bb8c <WM_SendMessageNoPara>

080137f4 <SCROLLBAR_CreateUser>:
 80137f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80137f6:	b089      	sub	sp, #36	; 0x24
 80137f8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80137fa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80137fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80137fe:	b9fa      	cbnz	r2, 8013840 <SCROLLBAR_CreateUser+0x4c>
 8013800:	b9f3      	cbnz	r3, 8013840 <SCROLLBAR_CreateUser+0x4c>
 8013802:	4630      	mov	r0, r6
 8013804:	a906      	add	r1, sp, #24
 8013806:	f001 fe04 	bl	8015412 <WM_GetInsideRectEx>
 801380a:	f014 0f08 	tst.w	r4, #8
 801380e:	4b2c      	ldr	r3, [pc, #176]	; (80138c0 <SCROLLBAR_CreateUser+0xcc>)
 8013810:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 8013814:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 8013818:	d009      	beq.n	801382e <SCROLLBAR_CreateUser+0x3a>
 801381a:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 801381e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013822:	1c78      	adds	r0, r7, #1
 8013824:	ebc1 030e 	rsb	r3, r1, lr
 8013828:	1a80      	subs	r0, r0, r2
 801382a:	3301      	adds	r3, #1
 801382c:	e008      	b.n	8013840 <SCROLLBAR_CreateUser+0x4c>
 801382e:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8013832:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013836:	f10e 0101 	add.w	r1, lr, #1
 801383a:	1a3a      	subs	r2, r7, r0
 801383c:	1ac9      	subs	r1, r1, r3
 801383e:	3201      	adds	r2, #1
 8013840:	9600      	str	r6, [sp, #0]
 8013842:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8013844:	9601      	str	r6, [sp, #4]
 8013846:	4e1f      	ldr	r6, [pc, #124]	; (80138c4 <SCROLLBAR_CreateUser+0xd0>)
 8013848:	9602      	str	r6, [sp, #8]
 801384a:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801384c:	363c      	adds	r6, #60	; 0x3c
 801384e:	9603      	str	r6, [sp, #12]
 8013850:	f7f9 fa1c 	bl	800cc8c <WM_CreateWindowAsChild>
 8013854:	4606      	mov	r6, r0
 8013856:	2800      	cmp	r0, #0
 8013858:	d02f      	beq.n	80138ba <SCROLLBAR_CreateUser+0xc6>
 801385a:	f7ff f889 	bl	8012970 <GUI_ALLOC_LockH>
 801385e:	f004 0208 	and.w	r2, r4, #8
 8013862:	06e3      	lsls	r3, r4, #27
 8013864:	bf48      	it	mi
 8013866:	f042 0210 	orrmi.w	r2, r2, #16
 801386a:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 801386e:	bf48      	it	mi
 8013870:	b292      	uxthmi	r2, r2
 8013872:	2b01      	cmp	r3, #1
 8013874:	bf88      	it	hi
 8013876:	f042 0210 	orrhi.w	r2, r2, #16
 801387a:	4629      	mov	r1, r5
 801387c:	9005      	str	r0, [sp, #20]
 801387e:	f7f5 fc55 	bl	800912c <WIDGET__Init>
 8013882:	4b11      	ldr	r3, [pc, #68]	; (80138c8 <SCROLLBAR_CreateUser+0xd4>)
 8013884:	af08      	add	r7, sp, #32
 8013886:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8013888:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 801388c:	f104 0534 	add.w	r5, r4, #52	; 0x34
 8013890:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8013894:	2364      	movs	r3, #100	; 0x64
 8013896:	64e3      	str	r3, [r4, #76]	; 0x4c
 8013898:	4d0c      	ldr	r5, [pc, #48]	; (80138cc <SCROLLBAR_CreateUser+0xd8>)
 801389a:	230a      	movs	r3, #10
 801389c:	6563      	str	r3, [r4, #84]	; 0x54
 801389e:	2300      	movs	r3, #0
 80138a0:	6523      	str	r3, [r4, #80]	; 0x50
 80138a2:	682b      	ldr	r3, [r5, #0]
 80138a4:	6463      	str	r3, [r4, #68]	; 0x44
 80138a6:	4638      	mov	r0, r7
 80138a8:	f7ff f870 	bl	801298c <GUI_ALLOC_UnlockH>
 80138ac:	682b      	ldr	r3, [r5, #0]
 80138ae:	4630      	mov	r0, r6
 80138b0:	685b      	ldr	r3, [r3, #4]
 80138b2:	4798      	blx	r3
 80138b4:	4630      	mov	r0, r6
 80138b6:	f7ff ff8f 	bl	80137d8 <SCROLLBAR__InvalidatePartner>
 80138ba:	4630      	mov	r0, r6
 80138bc:	b009      	add	sp, #36	; 0x24
 80138be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80138c0:	200001f0 	.word	0x200001f0
 80138c4:	08013973 	.word	0x08013973
 80138c8:	200001dc 	.word	0x200001dc
 80138cc:	200001ec 	.word	0x200001ec

080138d0 <SCROLLBAR_CreateEx>:
 80138d0:	b510      	push	{r4, lr}
 80138d2:	b086      	sub	sp, #24
 80138d4:	9c08      	ldr	r4, [sp, #32]
 80138d6:	9400      	str	r4, [sp, #0]
 80138d8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80138da:	9401      	str	r4, [sp, #4]
 80138dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80138de:	9402      	str	r4, [sp, #8]
 80138e0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80138e2:	9403      	str	r4, [sp, #12]
 80138e4:	2400      	movs	r4, #0
 80138e6:	9404      	str	r4, [sp, #16]
 80138e8:	f7ff ff84 	bl	80137f4 <SCROLLBAR_CreateUser>
 80138ec:	b006      	add	sp, #24
 80138ee:	bd10      	pop	{r4, pc}

080138f0 <SCROLLBAR_SetValue>:
 80138f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80138f2:	460c      	mov	r4, r1
 80138f4:	4605      	mov	r5, r0
 80138f6:	b300      	cbz	r0, 801393a <SCROLLBAR_SetValue+0x4a>
 80138f8:	f7ff f83a 	bl	8012970 <GUI_ALLOC_LockH>
 80138fc:	2c00      	cmp	r4, #0
 80138fe:	9001      	str	r0, [sp, #4]
 8013900:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8013902:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8013904:	db05      	blt.n	8013912 <SCROLLBAR_SetValue+0x22>
 8013906:	1a8a      	subs	r2, r1, r2
 8013908:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801390c:	4294      	cmp	r4, r2
 801390e:	dc02      	bgt.n	8013916 <SCROLLBAR_SetValue+0x26>
 8013910:	e000      	b.n	8013914 <SCROLLBAR_SetValue+0x24>
 8013912:	2400      	movs	r4, #0
 8013914:	4622      	mov	r2, r4
 8013916:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8013918:	4291      	cmp	r1, r2
 801391a:	d00b      	beq.n	8013934 <SCROLLBAR_SetValue+0x44>
 801391c:	6502      	str	r2, [r0, #80]	; 0x50
 801391e:	4628      	mov	r0, r5
 8013920:	f7f9 f973 	bl	800cc0a <WM_InvalidateWindow>
 8013924:	a801      	add	r0, sp, #4
 8013926:	f7ff f831 	bl	801298c <GUI_ALLOC_UnlockH>
 801392a:	4628      	mov	r0, r5
 801392c:	2105      	movs	r1, #5
 801392e:	f7f8 fa18 	bl	800bd62 <WM_NotifyParent>
 8013932:	e002      	b.n	801393a <SCROLLBAR_SetValue+0x4a>
 8013934:	a801      	add	r0, sp, #4
 8013936:	f7ff f829 	bl	801298c <GUI_ALLOC_UnlockH>
 801393a:	b003      	add	sp, #12
 801393c:	bd30      	pop	{r4, r5, pc}

0801393e <SCROLLBAR_AddValue>:
 801393e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013940:	460d      	mov	r5, r1
 8013942:	4606      	mov	r6, r0
 8013944:	b160      	cbz	r0, 8013960 <SCROLLBAR_AddValue+0x22>
 8013946:	f7ff f813 	bl	8012970 <GUI_ALLOC_LockH>
 801394a:	4602      	mov	r2, r0
 801394c:	a802      	add	r0, sp, #8
 801394e:	6d14      	ldr	r4, [r2, #80]	; 0x50
 8013950:	f840 2d04 	str.w	r2, [r0, #-4]!
 8013954:	f7ff f81a 	bl	801298c <GUI_ALLOC_UnlockH>
 8013958:	4630      	mov	r0, r6
 801395a:	1961      	adds	r1, r4, r5
 801395c:	f7ff ffc8 	bl	80138f0 <SCROLLBAR_SetValue>
 8013960:	b002      	add	sp, #8
 8013962:	bd70      	pop	{r4, r5, r6, pc}

08013964 <SCROLLBAR_Dec>:
 8013964:	f04f 31ff 	mov.w	r1, #4294967295
 8013968:	f7ff bfe9 	b.w	801393e <SCROLLBAR_AddValue>

0801396c <SCROLLBAR_Inc>:
 801396c:	2101      	movs	r1, #1
 801396e:	f7ff bfe6 	b.w	801393e <SCROLLBAR_AddValue>

08013972 <SCROLLBAR_Callback>:
 8013972:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013976:	6844      	ldr	r4, [r0, #4]
 8013978:	4680      	mov	r8, r0
 801397a:	b08f      	sub	sp, #60	; 0x3c
 801397c:	4620      	mov	r0, r4
 801397e:	4641      	mov	r1, r8
 8013980:	f7f5 fbdc 	bl	800913c <WIDGET_HandleActive>
 8013984:	2800      	cmp	r0, #0
 8013986:	f000 81c0 	beq.w	8013d0a <SCROLLBAR_Callback+0x398>
 801398a:	f8d8 3000 	ldr.w	r3, [r8]
 801398e:	2b23      	cmp	r3, #35	; 0x23
 8013990:	f000 8182 	beq.w	8013c98 <SCROLLBAR_Callback+0x326>
 8013994:	dc0b      	bgt.n	80139ae <SCROLLBAR_Callback+0x3c>
 8013996:	2b0e      	cmp	r3, #14
 8013998:	f000 812a 	beq.w	8013bf0 <SCROLLBAR_Callback+0x27e>
 801399c:	2b0f      	cmp	r3, #15
 801399e:	d012      	beq.n	80139c6 <SCROLLBAR_Callback+0x54>
 80139a0:	2b0b      	cmp	r3, #11
 80139a2:	f040 81af 	bne.w	8013d04 <SCROLLBAR_Callback+0x392>
 80139a6:	4620      	mov	r0, r4
 80139a8:	f7ff ff16 	bl	80137d8 <SCROLLBAR__InvalidatePartner>
 80139ac:	e1aa      	b.n	8013d04 <SCROLLBAR_Callback+0x392>
 80139ae:	f240 1213 	movw	r2, #275	; 0x113
 80139b2:	4293      	cmp	r3, r2
 80139b4:	f000 817f 	beq.w	8013cb6 <SCROLLBAR_Callback+0x344>
 80139b8:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80139bc:	d012      	beq.n	80139e4 <SCROLLBAR_Callback+0x72>
 80139be:	2b24      	cmp	r3, #36	; 0x24
 80139c0:	f040 81a0 	bne.w	8013d04 <SCROLLBAR_Callback+0x392>
 80139c4:	e143      	b.n	8013c4e <SCROLLBAR_Callback+0x2dc>
 80139c6:	4620      	mov	r0, r4
 80139c8:	f7fe ffd2 	bl	8012970 <GUI_ALLOC_LockH>
 80139cc:	9005      	str	r0, [sp, #20]
 80139ce:	2800      	cmp	r0, #0
 80139d0:	f000 819b 	beq.w	8013d0a <SCROLLBAR_Callback+0x398>
 80139d4:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80139d6:	a805      	add	r0, sp, #20
 80139d8:	681d      	ldr	r5, [r3, #0]
 80139da:	f7fe ffd7 	bl	801298c <GUI_ALLOC_UnlockH>
 80139de:	4620      	mov	r0, r4
 80139e0:	47a8      	blx	r5
 80139e2:	e192      	b.n	8013d0a <SCROLLBAR_Callback+0x398>
 80139e4:	f8d8 700c 	ldr.w	r7, [r8, #12]
 80139e8:	2f00      	cmp	r7, #0
 80139ea:	f000 818b 	beq.w	8013d04 <SCROLLBAR_Callback+0x392>
 80139ee:	7a3b      	ldrb	r3, [r7, #8]
 80139f0:	4620      	mov	r0, r4
 80139f2:	2b00      	cmp	r3, #0
 80139f4:	f000 80d6 	beq.w	8013ba4 <SCROLLBAR_Callback+0x232>
 80139f8:	f7fe ffba 	bl	8012970 <GUI_ALLOC_LockH>
 80139fc:	a905      	add	r1, sp, #20
 80139fe:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8013a00:	9003      	str	r0, [sp, #12]
 8013a02:	6d06      	ldr	r6, [r0, #80]	; 0x50
 8013a04:	4620      	mov	r0, r4
 8013a06:	4798      	blx	r3
 8013a08:	9b03      	ldr	r3, [sp, #12]
 8013a0a:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 8013a0e:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8013a10:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8013a12:	f01a 0f08 	tst.w	sl, #8
 8013a16:	ebc5 0902 	rsb	r9, r5, r2
 8013a1a:	d003      	beq.n	8013a24 <SCROLLBAR_Callback+0xb2>
 8013a1c:	e897 0006 	ldmia.w	r7, {r1, r2}
 8013a20:	603a      	str	r2, [r7, #0]
 8013a22:	6079      	str	r1, [r7, #4]
 8013a24:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8013a26:	683f      	ldr	r7, [r7, #0]
 8013a28:	2a03      	cmp	r2, #3
 8013a2a:	d114      	bne.n	8013a56 <SCROLLBAR_Callback+0xe4>
 8013a2c:	4620      	mov	r0, r4
 8013a2e:	f7ff fea9 	bl	8013784 <_DeleteTimer>
 8013a32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013a34:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013a36:	2002      	movs	r0, #2
 8013a38:	fb93 f3f0 	sdiv	r3, r3, r0
 8013a3c:	1aff      	subs	r7, r7, r3
 8013a3e:	9b06      	ldr	r3, [sp, #24]
 8013a40:	1afb      	subs	r3, r7, r3
 8013a42:	1e58      	subs	r0, r3, #1
 8013a44:	fb00 f009 	mul.w	r0, r0, r9
 8013a48:	f004 fa78 	bl	8017f3c <GUI__DivideRound32>
 8013a4c:	9b03      	ldr	r3, [sp, #12]
 8013a4e:	4606      	mov	r6, r0
 8013a50:	6618      	str	r0, [r3, #96]	; 0x60
 8013a52:	a803      	add	r0, sp, #12
 8013a54:	e07e      	b.n	8013b54 <SCROLLBAR_Callback+0x1e2>
 8013a56:	9806      	ldr	r0, [sp, #24]
 8013a58:	4287      	cmp	r7, r0
 8013a5a:	dc0b      	bgt.n	8013a74 <SCROLLBAR_Callback+0x102>
 8013a5c:	2a02      	cmp	r2, #2
 8013a5e:	d039      	beq.n	8013ad4 <SCROLLBAR_Callback+0x162>
 8013a60:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013a62:	b113      	cbz	r3, 8013a6a <SCROLLBAR_Callback+0xf8>
 8013a64:	4620      	mov	r0, r4
 8013a66:	f7ff fe8d 	bl	8013784 <_DeleteTimer>
 8013a6a:	9b03      	ldr	r3, [sp, #12]
 8013a6c:	2202      	movs	r2, #2
 8013a6e:	3e01      	subs	r6, #1
 8013a70:	659a      	str	r2, [r3, #88]	; 0x58
 8013a72:	e02f      	b.n	8013ad4 <SCROLLBAR_Callback+0x162>
 8013a74:	9907      	ldr	r1, [sp, #28]
 8013a76:	428f      	cmp	r7, r1
 8013a78:	da02      	bge.n	8013a80 <SCROLLBAR_Callback+0x10e>
 8013a7a:	1b76      	subs	r6, r6, r5
 8013a7c:	426d      	negs	r5, r5
 8013a7e:	e02f      	b.n	8013ae0 <SCROLLBAR_Callback+0x16e>
 8013a80:	9908      	ldr	r1, [sp, #32]
 8013a82:	428f      	cmp	r7, r1
 8013a84:	dc12      	bgt.n	8013aac <SCROLLBAR_Callback+0x13a>
 8013a86:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013a88:	2900      	cmp	r1, #0
 8013a8a:	dd0b      	ble.n	8013aa4 <SCROLLBAR_Callback+0x132>
 8013a8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013a8e:	2202      	movs	r2, #2
 8013a90:	fb93 f3f2 	sdiv	r3, r3, r2
 8013a94:	1aff      	subs	r7, r7, r3
 8013a96:	1a3f      	subs	r7, r7, r0
 8013a98:	3f01      	subs	r7, #1
 8013a9a:	fb07 f009 	mul.w	r0, r7, r9
 8013a9e:	f004 fa4d 	bl	8017f3c <GUI__DivideRound32>
 8013aa2:	4606      	mov	r6, r0
 8013aa4:	9b03      	ldr	r3, [sp, #12]
 8013aa6:	2203      	movs	r2, #3
 8013aa8:	659a      	str	r2, [r3, #88]	; 0x58
 8013aaa:	e016      	b.n	8013ada <SCROLLBAR_Callback+0x168>
 8013aac:	9909      	ldr	r1, [sp, #36]	; 0x24
 8013aae:	428f      	cmp	r7, r1
 8013ab0:	da01      	bge.n	8013ab6 <SCROLLBAR_Callback+0x144>
 8013ab2:	442e      	add	r6, r5
 8013ab4:	e014      	b.n	8013ae0 <SCROLLBAR_Callback+0x16e>
 8013ab6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013ab8:	428f      	cmp	r7, r1
 8013aba:	dc0e      	bgt.n	8013ada <SCROLLBAR_Callback+0x168>
 8013abc:	2a01      	cmp	r2, #1
 8013abe:	d00e      	beq.n	8013ade <SCROLLBAR_Callback+0x16c>
 8013ac0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013ac2:	b113      	cbz	r3, 8013aca <SCROLLBAR_Callback+0x158>
 8013ac4:	4620      	mov	r0, r4
 8013ac6:	f7ff fe5d 	bl	8013784 <_DeleteTimer>
 8013aca:	9b03      	ldr	r3, [sp, #12]
 8013acc:	2501      	movs	r5, #1
 8013ace:	3601      	adds	r6, #1
 8013ad0:	659d      	str	r5, [r3, #88]	; 0x58
 8013ad2:	e005      	b.n	8013ae0 <SCROLLBAR_Callback+0x16e>
 8013ad4:	f04f 35ff 	mov.w	r5, #4294967295
 8013ad8:	e002      	b.n	8013ae0 <SCROLLBAR_Callback+0x16e>
 8013ada:	2500      	movs	r5, #0
 8013adc:	e000      	b.n	8013ae0 <SCROLLBAR_Callback+0x16e>
 8013ade:	4615      	mov	r5, r2
 8013ae0:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8013ae4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013ae6:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 8013aea:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8013aee:	9a06      	ldr	r2, [sp, #24]
 8013af0:	b171      	cbz	r1, 8013b10 <SCROLLBAR_Callback+0x19e>
 8013af2:	2002      	movs	r0, #2
 8013af4:	fb9e f0f0 	sdiv	r0, lr, r0
 8013af8:	1a38      	subs	r0, r7, r0
 8013afa:	1a80      	subs	r0, r0, r2
 8013afc:	3801      	subs	r0, #1
 8013afe:	fb00 f009 	mul.w	r0, r0, r9
 8013b02:	9301      	str	r3, [sp, #4]
 8013b04:	f004 fa1a 	bl	8017f3c <GUI__DivideRound32>
 8013b08:	9b01      	ldr	r3, [sp, #4]
 8013b0a:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 8013b0e:	e009      	b.n	8013b24 <SCROLLBAR_Callback+0x1b2>
 8013b10:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 8013b14:	2a01      	cmp	r2, #1
 8013b16:	bf04      	itt	eq
 8013b18:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 8013b1c:	f101 31ff 	addeq.w	r1, r1, #4294967295
 8013b20:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 8013b24:	a803      	add	r0, sp, #12
 8013b26:	9301      	str	r3, [sp, #4]
 8013b28:	f7fe ff30 	bl	801298c <GUI_ALLOC_UnlockH>
 8013b2c:	9b01      	ldr	r3, [sp, #4]
 8013b2e:	b1a5      	cbz	r5, 8013b5a <SCROLLBAR_Callback+0x1e8>
 8013b30:	b9bb      	cbnz	r3, 8013b62 <SCROLLBAR_Callback+0x1f0>
 8013b32:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8013b36:	f240 41d2 	movw	r1, #1234	; 0x4d2
 8013b3a:	4620      	mov	r0, r4
 8013b3c:	f7f7 fe6a 	bl	800b814 <WM_CreateTimer>
 8013b40:	4607      	mov	r7, r0
 8013b42:	4620      	mov	r0, r4
 8013b44:	f7fe ff14 	bl	8012970 <GUI_ALLOC_LockH>
 8013b48:	4602      	mov	r2, r0
 8013b4a:	a80e      	add	r0, sp, #56	; 0x38
 8013b4c:	f840 2d28 	str.w	r2, [r0, #-40]!
 8013b50:	6657      	str	r7, [r2, #100]	; 0x64
 8013b52:	65d5      	str	r5, [r2, #92]	; 0x5c
 8013b54:	f7fe ff1a 	bl	801298c <GUI_ALLOC_UnlockH>
 8013b58:	e003      	b.n	8013b62 <SCROLLBAR_Callback+0x1f0>
 8013b5a:	b113      	cbz	r3, 8013b62 <SCROLLBAR_Callback+0x1f0>
 8013b5c:	4620      	mov	r0, r4
 8013b5e:	f7ff fe11 	bl	8013784 <_DeleteTimer>
 8013b62:	4620      	mov	r0, r4
 8013b64:	2101      	movs	r1, #1
 8013b66:	f7f7 fff5 	bl	800bb54 <WM_SetCapture>
 8013b6a:	4620      	mov	r0, r4
 8013b6c:	4631      	mov	r1, r6
 8013b6e:	f7ff febf 	bl	80138f0 <SCROLLBAR_SetValue>
 8013b72:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8013b76:	f040 80c5 	bne.w	8013d04 <SCROLLBAR_Callback+0x392>
 8013b7a:	4620      	mov	r0, r4
 8013b7c:	f7fe fef8 	bl	8012970 <GUI_ALLOC_LockH>
 8013b80:	ab0e      	add	r3, sp, #56	; 0x38
 8013b82:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8013b84:	f843 0d28 	str.w	r0, [r3, #-40]!
 8013b88:	4618      	mov	r0, r3
 8013b8a:	f7fe feff 	bl	801298c <GUI_ALLOC_UnlockH>
 8013b8e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8013b92:	4620      	mov	r0, r4
 8013b94:	f7f5 fa9f 	bl	80090d6 <WIDGET_OrState>
 8013b98:	07a9      	lsls	r1, r5, #30
 8013b9a:	f140 80b3 	bpl.w	8013d04 <SCROLLBAR_Callback+0x392>
 8013b9e:	4620      	mov	r0, r4
 8013ba0:	2101      	movs	r1, #1
 8013ba2:	e074      	b.n	8013c8e <SCROLLBAR_Callback+0x31c>
 8013ba4:	f7fe fee4 	bl	8012970 <GUI_ALLOC_LockH>
 8013ba8:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 8013baa:	9003      	str	r0, [sp, #12]
 8013bac:	a803      	add	r0, sp, #12
 8013bae:	f7fe feed 	bl	801298c <GUI_ALLOC_UnlockH>
 8013bb2:	05ea      	lsls	r2, r5, #23
 8013bb4:	f140 80a6 	bpl.w	8013d04 <SCROLLBAR_Callback+0x392>
 8013bb8:	4620      	mov	r0, r4
 8013bba:	f44f 7180 	mov.w	r1, #256	; 0x100
 8013bbe:	f7f5 faa0 	bl	8009102 <WIDGET_AndState>
 8013bc2:	4620      	mov	r0, r4
 8013bc4:	f7fe fed4 	bl	8012970 <GUI_ALLOC_LockH>
 8013bc8:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8013bca:	9005      	str	r0, [sp, #20]
 8013bcc:	b113      	cbz	r3, 8013bd4 <SCROLLBAR_Callback+0x262>
 8013bce:	4620      	mov	r0, r4
 8013bd0:	f7ff fdd8 	bl	8013784 <_DeleteTimer>
 8013bd4:	a80e      	add	r0, sp, #56	; 0x38
 8013bd6:	2200      	movs	r2, #0
 8013bd8:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 8013bdc:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8013bde:	659a      	str	r2, [r3, #88]	; 0x58
 8013be0:	f7fe fed4 	bl	801298c <GUI_ALLOC_UnlockH>
 8013be4:	07ab      	lsls	r3, r5, #30
 8013be6:	f140 808d 	bpl.w	8013d04 <SCROLLBAR_Callback+0x392>
 8013bea:	4620      	mov	r0, r4
 8013bec:	2102      	movs	r1, #2
 8013bee:	e04e      	b.n	8013c8e <SCROLLBAR_Callback+0x31c>
 8013bf0:	4620      	mov	r0, r4
 8013bf2:	f7fe febd 	bl	8012970 <GUI_ALLOC_LockH>
 8013bf6:	ab0e      	add	r3, sp, #56	; 0x38
 8013bf8:	6d45      	ldr	r5, [r0, #84]	; 0x54
 8013bfa:	f843 0d24 	str.w	r0, [r3, #-36]!
 8013bfe:	4618      	mov	r0, r3
 8013c00:	f7fe fec4 	bl	801298c <GUI_ALLOC_UnlockH>
 8013c04:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8013c08:	6813      	ldr	r3, [r2, #0]
 8013c0a:	6852      	ldr	r2, [r2, #4]
 8013c0c:	2a00      	cmp	r2, #0
 8013c0e:	dd79      	ble.n	8013d04 <SCROLLBAR_Callback+0x392>
 8013c10:	3b10      	subs	r3, #16
 8013c12:	2b12      	cmp	r3, #18
 8013c14:	d876      	bhi.n	8013d04 <SCROLLBAR_Callback+0x392>
 8013c16:	e8df f003 	tbb	[pc, r3]
 8013c1a:	1616      	.short	0x1616
 8013c1c:	75751212 	.word	0x75751212
 8013c20:	75757575 	.word	0x75757575
 8013c24:	75757575 	.word	0x75757575
 8013c28:	0a757575 	.word	0x0a757575
 8013c2c:	0d          	.byte	0x0d
 8013c2d:	00          	.byte	0x00
 8013c2e:	4620      	mov	r0, r4
 8013c30:	4629      	mov	r1, r5
 8013c32:	e001      	b.n	8013c38 <SCROLLBAR_Callback+0x2c6>
 8013c34:	4620      	mov	r0, r4
 8013c36:	4269      	negs	r1, r5
 8013c38:	f7ff fe81 	bl	801393e <SCROLLBAR_AddValue>
 8013c3c:	e062      	b.n	8013d04 <SCROLLBAR_Callback+0x392>
 8013c3e:	4620      	mov	r0, r4
 8013c40:	f7ff fe94 	bl	801396c <SCROLLBAR_Inc>
 8013c44:	e05e      	b.n	8013d04 <SCROLLBAR_Callback+0x392>
 8013c46:	4620      	mov	r0, r4
 8013c48:	f7ff fe8c 	bl	8013964 <SCROLLBAR_Dec>
 8013c4c:	e05a      	b.n	8013d04 <SCROLLBAR_Callback+0x392>
 8013c4e:	4620      	mov	r0, r4
 8013c50:	f8d8 600c 	ldr.w	r6, [r8, #12]
 8013c54:	f7fe fe8c 	bl	8012970 <GUI_ALLOC_LockH>
 8013c58:	ad0e      	add	r5, sp, #56	; 0x38
 8013c5a:	4603      	mov	r3, r0
 8013c5c:	f845 0d24 	str.w	r0, [r5, #-36]!
 8013c60:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8013c62:	6830      	ldr	r0, [r6, #0]
 8013c64:	68b1      	ldr	r1, [r6, #8]
 8013c66:	4290      	cmp	r0, r2
 8013c68:	6872      	ldr	r2, [r6, #4]
 8013c6a:	d105      	bne.n	8013c78 <SCROLLBAR_Callback+0x306>
 8013c6c:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 8013c6e:	428e      	cmp	r6, r1
 8013c70:	d102      	bne.n	8013c78 <SCROLLBAR_Callback+0x306>
 8013c72:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 8013c74:	4296      	cmp	r6, r2
 8013c76:	d00d      	beq.n	8013c94 <SCROLLBAR_Callback+0x322>
 8013c78:	64d8      	str	r0, [r3, #76]	; 0x4c
 8013c7a:	6559      	str	r1, [r3, #84]	; 0x54
 8013c7c:	651a      	str	r2, [r3, #80]	; 0x50
 8013c7e:	4620      	mov	r0, r4
 8013c80:	f7f8 ffc3 	bl	800cc0a <WM_InvalidateWindow>
 8013c84:	4628      	mov	r0, r5
 8013c86:	f7fe fe81 	bl	801298c <GUI_ALLOC_UnlockH>
 8013c8a:	4620      	mov	r0, r4
 8013c8c:	2105      	movs	r1, #5
 8013c8e:	f7f8 f868 	bl	800bd62 <WM_NotifyParent>
 8013c92:	e037      	b.n	8013d04 <SCROLLBAR_Callback+0x392>
 8013c94:	4628      	mov	r0, r5
 8013c96:	e033      	b.n	8013d00 <SCROLLBAR_Callback+0x38e>
 8013c98:	4620      	mov	r0, r4
 8013c9a:	f7fe fe69 	bl	8012970 <GUI_ALLOC_LockH>
 8013c9e:	9005      	str	r0, [sp, #20]
 8013ca0:	2800      	cmp	r0, #0
 8013ca2:	d02f      	beq.n	8013d04 <SCROLLBAR_Callback+0x392>
 8013ca4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8013ca8:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8013caa:	601a      	str	r2, [r3, #0]
 8013cac:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8013cae:	609a      	str	r2, [r3, #8]
 8013cb0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8013cb2:	605a      	str	r2, [r3, #4]
 8013cb4:	e023      	b.n	8013cfe <SCROLLBAR_Callback+0x38c>
 8013cb6:	4620      	mov	r0, r4
 8013cb8:	f7fe fe5a 	bl	8012970 <GUI_ALLOC_LockH>
 8013cbc:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8013cbe:	9005      	str	r0, [sp, #20]
 8013cc0:	b111      	cbz	r1, 8013cc8 <SCROLLBAR_Callback+0x356>
 8013cc2:	4620      	mov	r0, r4
 8013cc4:	f7ff fe3b 	bl	801393e <SCROLLBAR_AddValue>
 8013cc8:	9b05      	ldr	r3, [sp, #20]
 8013cca:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8013ccc:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8013cce:	2a00      	cmp	r2, #0
 8013cd0:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8013cd2:	dd05      	ble.n	8013ce0 <SCROLLBAR_Callback+0x36e>
 8013cd4:	4291      	cmp	r1, r2
 8013cd6:	bfb4      	ite	lt
 8013cd8:	2100      	movlt	r1, #0
 8013cda:	2101      	movge	r1, #1
 8013cdc:	dd06      	ble.n	8013cec <SCROLLBAR_Callback+0x37a>
 8013cde:	e004      	b.n	8013cea <SCROLLBAR_Callback+0x378>
 8013ce0:	4291      	cmp	r1, r2
 8013ce2:	bfcc      	ite	gt
 8013ce4:	2100      	movgt	r1, #0
 8013ce6:	2101      	movle	r1, #1
 8013ce8:	da00      	bge.n	8013cec <SCROLLBAR_Callback+0x37a>
 8013cea:	651a      	str	r2, [r3, #80]	; 0x50
 8013cec:	b119      	cbz	r1, 8013cf6 <SCROLLBAR_Callback+0x384>
 8013cee:	4620      	mov	r0, r4
 8013cf0:	f7ff fd48 	bl	8013784 <_DeleteTimer>
 8013cf4:	e003      	b.n	8013cfe <SCROLLBAR_Callback+0x38c>
 8013cf6:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8013cf8:	2132      	movs	r1, #50	; 0x32
 8013cfa:	f7f7 fdbb 	bl	800b874 <WM_RestartTimer>
 8013cfe:	a805      	add	r0, sp, #20
 8013d00:	f7fe fe44 	bl	801298c <GUI_ALLOC_UnlockH>
 8013d04:	4640      	mov	r0, r8
 8013d06:	f7f9 fba3 	bl	800d450 <WM_DefaultProc>
 8013d0a:	b00f      	add	sp, #60	; 0x3c
 8013d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013d10 <SCROLLBAR_SetNumItems>:
 8013d10:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013d12:	460c      	mov	r4, r1
 8013d14:	4605      	mov	r5, r0
 8013d16:	b160      	cbz	r0, 8013d32 <SCROLLBAR_SetNumItems+0x22>
 8013d18:	f7fe fe2a 	bl	8012970 <GUI_ALLOC_LockH>
 8013d1c:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8013d1e:	9001      	str	r0, [sp, #4]
 8013d20:	42a2      	cmp	r2, r4
 8013d22:	d003      	beq.n	8013d2c <SCROLLBAR_SetNumItems+0x1c>
 8013d24:	64c4      	str	r4, [r0, #76]	; 0x4c
 8013d26:	4628      	mov	r0, r5
 8013d28:	f7f8 ff6f 	bl	800cc0a <WM_InvalidateWindow>
 8013d2c:	a801      	add	r0, sp, #4
 8013d2e:	f7fe fe2d 	bl	801298c <GUI_ALLOC_UnlockH>
 8013d32:	b003      	add	sp, #12
 8013d34:	bd30      	pop	{r4, r5, pc}

08013d36 <SCROLLBAR_SetPageSize>:
 8013d36:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013d38:	460c      	mov	r4, r1
 8013d3a:	4605      	mov	r5, r0
 8013d3c:	b160      	cbz	r0, 8013d58 <SCROLLBAR_SetPageSize+0x22>
 8013d3e:	f7fe fe17 	bl	8012970 <GUI_ALLOC_LockH>
 8013d42:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8013d44:	9001      	str	r0, [sp, #4]
 8013d46:	42a2      	cmp	r2, r4
 8013d48:	d003      	beq.n	8013d52 <SCROLLBAR_SetPageSize+0x1c>
 8013d4a:	6544      	str	r4, [r0, #84]	; 0x54
 8013d4c:	4628      	mov	r0, r5
 8013d4e:	f7f8 ff5c 	bl	800cc0a <WM_InvalidateWindow>
 8013d52:	a801      	add	r0, sp, #4
 8013d54:	f7fe fe1a 	bl	801298c <GUI_ALLOC_UnlockH>
 8013d58:	b003      	add	sp, #12
 8013d5a:	bd30      	pop	{r4, r5, pc}

08013d5c <RADIO_DrawSkinFlex>:
 8013d5c:	b530      	push	{r4, r5, lr}
 8013d5e:	4604      	mov	r4, r0
 8013d60:	b089      	sub	sp, #36	; 0x24
 8013d62:	6800      	ldr	r0, [r0, #0]
 8013d64:	f7fe fe04 	bl	8012970 <GUI_ALLOC_LockH>
 8013d68:	aa08      	add	r2, sp, #32
 8013d6a:	f9b0 5060 	ldrsh.w	r5, [r0, #96]	; 0x60
 8013d6e:	f842 0d10 	str.w	r0, [r2, #-16]!
 8013d72:	4610      	mov	r0, r2
 8013d74:	f7fe fe0a 	bl	801298c <GUI_ALLOC_UnlockH>
 8013d78:	68a2      	ldr	r2, [r4, #8]
 8013d7a:	4b28      	ldr	r3, [pc, #160]	; (8013e1c <RADIO_DrawSkinFlex+0xc0>)
 8013d7c:	4928      	ldr	r1, [pc, #160]	; (8013e20 <RADIO_DrawSkinFlex+0xc4>)
 8013d7e:	42aa      	cmp	r2, r5
 8013d80:	bf18      	it	ne
 8013d82:	460b      	movne	r3, r1
 8013d84:	6862      	ldr	r2, [r4, #4]
 8013d86:	2a0a      	cmp	r2, #10
 8013d88:	d028      	beq.n	8013ddc <RADIO_DrawSkinFlex+0x80>
 8013d8a:	dc0e      	bgt.n	8013daa <RADIO_DrawSkinFlex+0x4e>
 8013d8c:	2a07      	cmp	r2, #7
 8013d8e:	d142      	bne.n	8013e16 <RADIO_DrawSkinFlex+0xba>
 8013d90:	685a      	ldr	r2, [r3, #4]
 8013d92:	9200      	str	r2, [sp, #0]
 8013d94:	689a      	ldr	r2, [r3, #8]
 8013d96:	9201      	str	r2, [sp, #4]
 8013d98:	68da      	ldr	r2, [r3, #12]
 8013d9a:	9202      	str	r2, [sp, #8]
 8013d9c:	691a      	ldr	r2, [r3, #16]
 8013d9e:	6920      	ldr	r0, [r4, #16]
 8013da0:	6961      	ldr	r1, [r4, #20]
 8013da2:	681b      	ldr	r3, [r3, #0]
 8013da4:	f003 ff64 	bl	8017c70 <GUI__FillTrippleArc>
 8013da8:	e035      	b.n	8013e16 <RADIO_DrawSkinFlex+0xba>
 8013daa:	2a12      	cmp	r2, #18
 8013dac:	d003      	beq.n	8013db6 <RADIO_DrawSkinFlex+0x5a>
 8013dae:	2a19      	cmp	r2, #25
 8013db0:	d131      	bne.n	8013e16 <RADIO_DrawSkinFlex+0xba>
 8013db2:	6918      	ldr	r0, [r3, #16]
 8013db4:	e030      	b.n	8013e18 <RADIO_DrawSkinFlex+0xbc>
 8013db6:	6820      	ldr	r0, [r4, #0]
 8013db8:	f7fe fdda 	bl	8012970 <GUI_ALLOC_LockH>
 8013dbc:	ab08      	add	r3, sp, #32
 8013dbe:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8013dc0:	f843 0d08 	str.w	r0, [r3, #-8]!
 8013dc4:	4618      	mov	r0, r3
 8013dc6:	f7fe fde1 	bl	801298c <GUI_ALLOC_UnlockH>
 8013dca:	4628      	mov	r0, r5
 8013dcc:	f7fc f9f4 	bl	80101b8 <LCD_SetColor>
 8013dd0:	6a20      	ldr	r0, [r4, #32]
 8013dd2:	6921      	ldr	r1, [r4, #16]
 8013dd4:	6962      	ldr	r2, [r4, #20]
 8013dd6:	f7fd ffe5 	bl	8011da4 <GUI_DispStringAt>
 8013dda:	e01c      	b.n	8013e16 <RADIO_DrawSkinFlex+0xba>
 8013ddc:	6820      	ldr	r0, [r4, #0]
 8013dde:	f7fe fdc7 	bl	8012970 <GUI_ALLOC_LockH>
 8013de2:	ab08      	add	r3, sp, #32
 8013de4:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8013de6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 8013dea:	4618      	mov	r0, r3
 8013dec:	f7fe fdce 	bl	801298c <GUI_ALLOC_UnlockH>
 8013df0:	6923      	ldr	r3, [r4, #16]
 8013df2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013df6:	6963      	ldr	r3, [r4, #20]
 8013df8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013dfc:	69a3      	ldr	r3, [r4, #24]
 8013dfe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e02:	4628      	mov	r0, r5
 8013e04:	69e3      	ldr	r3, [r4, #28]
 8013e06:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013e0a:	f7fc f9d5 	bl	80101b8 <LCD_SetColor>
 8013e0e:	a806      	add	r0, sp, #24
 8013e10:	2100      	movs	r1, #0
 8013e12:	f7fd fec9 	bl	8011ba8 <GUI_DrawFocusRect>
 8013e16:	2000      	movs	r0, #0
 8013e18:	b009      	add	sp, #36	; 0x24
 8013e1a:	bd30      	pop	{r4, r5, pc}
 8013e1c:	20000208 	.word	0x20000208
 8013e20:	200001f4 	.word	0x200001f4

08013e24 <_Create>:
 8013e24:	b530      	push	{r4, r5, lr}
 8013e26:	b08b      	sub	sp, #44	; 0x2c
 8013e28:	4605      	mov	r5, r0
 8013e2a:	f7fe fda1 	bl	8012970 <GUI_ALLOC_LockH>
 8013e2e:	ab0a      	add	r3, sp, #40	; 0x28
 8013e30:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8013e32:	f843 0d28 	str.w	r0, [r3, #-40]!
 8013e36:	4668      	mov	r0, sp
 8013e38:	6894      	ldr	r4, [r2, #8]
 8013e3a:	f7fe fda7 	bl	801298c <GUI_ALLOC_UnlockH>
 8013e3e:	a80a      	add	r0, sp, #40	; 0x28
 8013e40:	2300      	movs	r3, #0
 8013e42:	9302      	str	r3, [sp, #8]
 8013e44:	f840 5d24 	str.w	r5, [r0, #-36]!
 8013e48:	6863      	ldr	r3, [r4, #4]
 8013e4a:	4798      	blx	r3
 8013e4c:	b00b      	add	sp, #44	; 0x2c
 8013e4e:	bd30      	pop	{r4, r5, pc}

08013e50 <_Paint>:
 8013e50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e54:	b099      	sub	sp, #100	; 0x64
 8013e56:	4607      	mov	r7, r0
 8013e58:	f7fe fd8a 	bl	8012970 <GUI_ALLOC_LockH>
 8013e5c:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8013e5e:	f8b0 2064 	ldrh.w	r2, [r0, #100]	; 0x64
 8013e62:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8013e66:	9009      	str	r0, [sp, #36]	; 0x24
 8013e68:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8013e6a:	6d46      	ldr	r6, [r0, #84]	; 0x54
 8013e6c:	f8b0 5062 	ldrh.w	r5, [r0, #98]	; 0x62
 8013e70:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 8013e74:	9202      	str	r2, [sp, #8]
 8013e76:	4638      	mov	r0, r7
 8013e78:	9305      	str	r3, [sp, #20]
 8013e7a:	f7f5 fcf0 	bl	800985e <RADIO__GetButtonSize>
 8013e7e:	1d04      	adds	r4, r0, #4
 8013e80:	a818      	add	r0, sp, #96	; 0x60
 8013e82:	f850 3d3c 	ldr.w	r3, [r0, #-60]!
 8013e86:	f9b3 2060 	ldrsh.w	r2, [r3, #96]	; 0x60
 8013e8a:	9206      	str	r2, [sp, #24]
 8013e8c:	f893 2066 	ldrb.w	r2, [r3, #102]	; 0x66
 8013e90:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8013e92:	9207      	str	r2, [sp, #28]
 8013e94:	f003 0301 	and.w	r3, r3, #1
 8013e98:	9303      	str	r3, [sp, #12]
 8013e9a:	f7fe fd77 	bl	801298c <GUI_ALLOC_UnlockH>
 8013e9e:	a80d      	add	r0, sp, #52	; 0x34
 8013ea0:	f7f8 f954 	bl	800c14c <WM_GetClientRect>
 8013ea4:	f8d9 3000 	ldr.w	r3, [r9]
 8013ea8:	4638      	mov	r0, r7
 8013eaa:	4798      	blx	r3
 8013eac:	2307      	movs	r3, #7
 8013eae:	9310      	str	r3, [sp, #64]	; 0x40
 8013eb0:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8013eb4:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8013eb8:	970f      	str	r7, [sp, #60]	; 0x3c
 8013eba:	3202      	adds	r2, #2
 8013ebc:	3302      	adds	r3, #2
 8013ebe:	9213      	str	r2, [sp, #76]	; 0x4c
 8013ec0:	9314      	str	r3, [sp, #80]	; 0x50
 8013ec2:	4402      	add	r2, r0
 8013ec4:	4403      	add	r3, r0
 8013ec6:	3a01      	subs	r2, #1
 8013ec8:	3b01      	subs	r3, #1
 8013eca:	4681      	mov	r9, r0
 8013ecc:	9215      	str	r2, [sp, #84]	; 0x54
 8013ece:	9316      	str	r3, [sp, #88]	; 0x58
 8013ed0:	2700      	movs	r7, #0
 8013ed2:	9b02      	ldr	r3, [sp, #8]
 8013ed4:	429f      	cmp	r7, r3
 8013ed6:	da0a      	bge.n	8013eee <_Paint+0x9e>
 8013ed8:	9711      	str	r7, [sp, #68]	; 0x44
 8013eda:	a80f      	add	r0, sp, #60	; 0x3c
 8013edc:	47b0      	blx	r6
 8013ede:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013ee0:	442b      	add	r3, r5
 8013ee2:	9314      	str	r3, [sp, #80]	; 0x50
 8013ee4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013ee6:	442b      	add	r3, r5
 8013ee8:	9316      	str	r3, [sp, #88]	; 0x58
 8013eea:	3701      	adds	r7, #1
 8013eec:	e7f1      	b.n	8013ed2 <_Paint+0x82>
 8013eee:	a90b      	add	r1, sp, #44	; 0x2c
 8013ef0:	4640      	mov	r0, r8
 8013ef2:	f004 f9fd 	bl	80182f0 <GUI_GetFontInfo>
 8013ef6:	4640      	mov	r0, r8
 8013ef8:	f7fd fb1c 	bl	8011534 <GUI_SetFont>
 8013efc:	2002      	movs	r0, #2
 8013efe:	f7fd fb0f 	bl	8011520 <GUI_SetTextMode>
 8013f02:	f7fe fc19 	bl	8012738 <GUI_GetFontDistY>
 8013f06:	2312      	movs	r3, #18
 8013f08:	9310      	str	r3, [sp, #64]	; 0x40
 8013f0a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013f0e:	f89d a030 	ldrb.w	sl, [sp, #48]	; 0x30
 8013f12:	f89d c02e 	ldrb.w	ip, [sp, #46]	; 0x2e
 8013f16:	3306      	adds	r3, #6
 8013f18:	45a2      	cmp	sl, r4
 8013f1a:	444b      	add	r3, r9
 8013f1c:	bfdc      	itt	le
 8013f1e:	ebca 0404 	rsble	r4, sl, r4
 8013f22:	2102      	movle	r1, #2
 8013f24:	9313      	str	r3, [sp, #76]	; 0x4c
 8013f26:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8013f2a:	bfd4      	ite	le
 8013f2c:	fb94 f4f1 	sdivle	r4, r4, r1
 8013f30:	2400      	movgt	r4, #0
 8013f32:	ebca 0c0c 	rsb	ip, sl, ip
 8013f36:	fa5f fb8c 	uxtb.w	fp, ip
 8013f3a:	441c      	add	r4, r3
 8013f3c:	ebcb 0404 	rsb	r4, fp, r4
 8013f40:	280c      	cmp	r0, #12
 8013f42:	9414      	str	r4, [sp, #80]	; 0x50
 8013f44:	bfd4      	ite	le
 8013f46:	2202      	movle	r2, #2
 8013f48:	2203      	movgt	r2, #3
 8013f4a:	2400      	movs	r4, #0
 8013f4c:	9201      	str	r2, [sp, #4]
 8013f4e:	4627      	mov	r7, r4
 8013f50:	9404      	str	r4, [sp, #16]
 8013f52:	46a1      	mov	r9, r4
 8013f54:	9400      	str	r4, [sp, #0]
 8013f56:	46a0      	mov	r8, r4
 8013f58:	9b02      	ldr	r3, [sp, #8]
 8013f5a:	4598      	cmp	r8, r3
 8013f5c:	da3e      	bge.n	8013fdc <_Paint+0x18c>
 8013f5e:	9805      	ldr	r0, [sp, #20]
 8013f60:	4641      	mov	r1, r8
 8013f62:	f7f6 fcaf 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 8013f66:	900a      	str	r0, [sp, #40]	; 0x28
 8013f68:	2800      	cmp	r0, #0
 8013f6a:	d02e      	beq.n	8013fca <_Paint+0x17a>
 8013f6c:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 8013f70:	f7fd fd6a 	bl	8011a48 <GUI_GetStringDistX>
 8013f74:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8013f76:	4408      	add	r0, r1
 8013f78:	1e81      	subs	r1, r0, #2
 8013f7a:	9115      	str	r1, [sp, #84]	; 0x54
 8013f7c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013f7e:	9117      	str	r1, [sp, #92]	; 0x5c
 8013f80:	a80f      	add	r0, sp, #60	; 0x3c
 8013f82:	47b0      	blx	r6
 8013f84:	a80a      	add	r0, sp, #40	; 0x28
 8013f86:	f7fe fd01 	bl	801298c <GUI_ALLOC_UnlockH>
 8013f8a:	9b03      	ldr	r3, [sp, #12]
 8013f8c:	b1eb      	cbz	r3, 8013fca <_Paint+0x17a>
 8013f8e:	9a06      	ldr	r2, [sp, #24]
 8013f90:	4542      	cmp	r2, r8
 8013f92:	d001      	beq.n	8013f98 <_Paint+0x148>
 8013f94:	9b07      	ldr	r3, [sp, #28]
 8013f96:	b1c3      	cbz	r3, 8013fca <_Paint+0x17a>
 8013f98:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8013f9a:	9a01      	ldr	r2, [sp, #4]
 8013f9c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013f9e:	9f15      	ldr	r7, [sp, #84]	; 0x54
 8013fa0:	eb04 010b 	add.w	r1, r4, fp
 8013fa4:	4291      	cmp	r1, r2
 8013fa6:	bfb8      	it	lt
 8013fa8:	b2e1      	uxtblt	r1, r4
 8013faa:	b2a3      	uxth	r3, r4
 8013fac:	4454      	add	r4, sl
 8013fae:	bfa8      	it	ge
 8013fb0:	9901      	ldrge	r1, [sp, #4]
 8013fb2:	9304      	str	r3, [sp, #16]
 8013fb4:	3c01      	subs	r4, #1
 8013fb6:	445c      	add	r4, fp
 8013fb8:	1a40      	subs	r0, r0, r1
 8013fba:	440f      	add	r7, r1
 8013fbc:	440c      	add	r4, r1
 8013fbe:	2201      	movs	r2, #1
 8013fc0:	fa1f f980 	uxth.w	r9, r0
 8013fc4:	b2bf      	uxth	r7, r7
 8013fc6:	b2a4      	uxth	r4, r4
 8013fc8:	9200      	str	r2, [sp, #0]
 8013fca:	9914      	ldr	r1, [sp, #80]	; 0x50
 8013fcc:	4429      	add	r1, r5
 8013fce:	9114      	str	r1, [sp, #80]	; 0x50
 8013fd0:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013fd2:	4429      	add	r1, r5
 8013fd4:	9116      	str	r1, [sp, #88]	; 0x58
 8013fd6:	f108 0801 	add.w	r8, r8, #1
 8013fda:	e7bd      	b.n	8013f58 <_Paint+0x108>
 8013fdc:	9b00      	ldr	r3, [sp, #0]
 8013fde:	9a03      	ldr	r2, [sp, #12]
 8013fe0:	4213      	tst	r3, r2
 8013fe2:	d00d      	beq.n	8014000 <_Paint+0x1b0>
 8013fe4:	230a      	movs	r3, #10
 8013fe6:	9a04      	ldr	r2, [sp, #16]
 8013fe8:	9310      	str	r3, [sp, #64]	; 0x40
 8013fea:	fa0f f389 	sxth.w	r3, r9
 8013fee:	9313      	str	r3, [sp, #76]	; 0x4c
 8013ff0:	b23f      	sxth	r7, r7
 8013ff2:	b213      	sxth	r3, r2
 8013ff4:	b224      	sxth	r4, r4
 8013ff6:	9314      	str	r3, [sp, #80]	; 0x50
 8013ff8:	9715      	str	r7, [sp, #84]	; 0x54
 8013ffa:	9416      	str	r4, [sp, #88]	; 0x58
 8013ffc:	a80f      	add	r0, sp, #60	; 0x3c
 8013ffe:	47b0      	blx	r6
 8014000:	b019      	add	sp, #100	; 0x64
 8014002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014008 <MULTIPAGE_DrawSkinFlex>:
 8014008:	b570      	push	{r4, r5, r6, lr}
 801400a:	6843      	ldr	r3, [r0, #4]
 801400c:	b086      	sub	sp, #24
 801400e:	4604      	mov	r4, r0
 8014010:	b993      	cbnz	r3, 8014038 <MULTIPAGE_DrawSkinFlex+0x30>
 8014012:	6800      	ldr	r0, [r0, #0]
 8014014:	f7fe fcac 	bl	8012970 <GUI_ALLOC_LockH>
 8014018:	4a94      	ldr	r2, [pc, #592]	; (801426c <MULTIPAGE_DrawSkinFlex+0x264>)
 801401a:	4603      	mov	r3, r0
 801401c:	6812      	ldr	r2, [r2, #0]
 801401e:	655a      	str	r2, [r3, #84]	; 0x54
 8014020:	a806      	add	r0, sp, #24
 8014022:	2202      	movs	r2, #2
 8014024:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8014028:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 801402c:	4a90      	ldr	r2, [pc, #576]	; (8014270 <MULTIPAGE_DrawSkinFlex+0x268>)
 801402e:	f840 3d0c 	str.w	r3, [r0, #-12]!
 8014032:	675a      	str	r2, [r3, #116]	; 0x74
 8014034:	f7fe fcaa 	bl	801298c <GUI_ALLOC_UnlockH>
 8014038:	6a26      	ldr	r6, [r4, #32]
 801403a:	2e00      	cmp	r6, #0
 801403c:	f000 8113 	beq.w	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 8014040:	68a2      	ldr	r2, [r4, #8]
 8014042:	68b1      	ldr	r1, [r6, #8]
 8014044:	428a      	cmp	r2, r1
 8014046:	d007      	beq.n	8014058 <MULTIPAGE_DrawSkinFlex+0x50>
 8014048:	7bf3      	ldrb	r3, [r6, #15]
 801404a:	4d8a      	ldr	r5, [pc, #552]	; (8014274 <MULTIPAGE_DrawSkinFlex+0x26c>)
 801404c:	f013 0f01 	tst.w	r3, #1
 8014050:	4b89      	ldr	r3, [pc, #548]	; (8014278 <MULTIPAGE_DrawSkinFlex+0x270>)
 8014052:	bf18      	it	ne
 8014054:	461d      	movne	r5, r3
 8014056:	e000      	b.n	801405a <MULTIPAGE_DrawSkinFlex+0x52>
 8014058:	4d84      	ldr	r5, [pc, #528]	; (801426c <MULTIPAGE_DrawSkinFlex+0x264>)
 801405a:	6863      	ldr	r3, [r4, #4]
 801405c:	2b06      	cmp	r3, #6
 801405e:	f000 80c3 	beq.w	80141e8 <MULTIPAGE_DrawSkinFlex+0x1e0>
 8014062:	dc02      	bgt.n	801406a <MULTIPAGE_DrawSkinFlex+0x62>
 8014064:	2b05      	cmp	r3, #5
 8014066:	d041      	beq.n	80140ec <MULTIPAGE_DrawSkinFlex+0xe4>
 8014068:	e0fd      	b.n	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 801406a:	2b0b      	cmp	r3, #11
 801406c:	d003      	beq.n	8014076 <MULTIPAGE_DrawSkinFlex+0x6e>
 801406e:	2b12      	cmp	r3, #18
 8014070:	f000 80c4 	beq.w	80141fc <MULTIPAGE_DrawSkinFlex+0x1f4>
 8014074:	e0f7      	b.n	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 8014076:	3201      	adds	r2, #1
 8014078:	d113      	bne.n	80140a2 <MULTIPAGE_DrawSkinFlex+0x9a>
 801407a:	4d7c      	ldr	r5, [pc, #496]	; (801426c <MULTIPAGE_DrawSkinFlex+0x264>)
 801407c:	6968      	ldr	r0, [r5, #20]
 801407e:	f7fd fa87 	bl	8011590 <GUI_SetColor>
 8014082:	f104 0010 	add.w	r0, r4, #16
 8014086:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8014088:	f004 fe62 	bl	8018d50 <GUI_DrawRect>
 801408c:	6828      	ldr	r0, [r5, #0]
 801408e:	f7fd fa7f 	bl	8011590 <GUI_SetColor>
 8014092:	f104 0010 	add.w	r0, r4, #16
 8014096:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8014098:	3001      	adds	r0, #1
 801409a:	3101      	adds	r1, #1
 801409c:	3a01      	subs	r2, #1
 801409e:	3b01      	subs	r3, #1
 80140a0:	e02c      	b.n	80140fc <MULTIPAGE_DrawSkinFlex+0xf4>
 80140a2:	6968      	ldr	r0, [r5, #20]
 80140a4:	f7fd fa74 	bl	8011590 <GUI_SetColor>
 80140a8:	7bb3      	ldrb	r3, [r6, #14]
 80140aa:	0718      	lsls	r0, r3, #28
 80140ac:	d504      	bpl.n	80140b8 <MULTIPAGE_DrawSkinFlex+0xb0>
 80140ae:	69e0      	ldr	r0, [r4, #28]
 80140b0:	6921      	ldr	r1, [r4, #16]
 80140b2:	69a2      	ldr	r2, [r4, #24]
 80140b4:	f7fd fd54 	bl	8011b60 <GUI_DrawHLine>
 80140b8:	7bb3      	ldrb	r3, [r6, #14]
 80140ba:	0759      	lsls	r1, r3, #29
 80140bc:	d504      	bpl.n	80140c8 <MULTIPAGE_DrawSkinFlex+0xc0>
 80140be:	6960      	ldr	r0, [r4, #20]
 80140c0:	6921      	ldr	r1, [r4, #16]
 80140c2:	69a2      	ldr	r2, [r4, #24]
 80140c4:	f7fd fd4c 	bl	8011b60 <GUI_DrawHLine>
 80140c8:	7bb3      	ldrb	r3, [r6, #14]
 80140ca:	07da      	lsls	r2, r3, #31
 80140cc:	d504      	bpl.n	80140d8 <MULTIPAGE_DrawSkinFlex+0xd0>
 80140ce:	6920      	ldr	r0, [r4, #16]
 80140d0:	6961      	ldr	r1, [r4, #20]
 80140d2:	69e2      	ldr	r2, [r4, #28]
 80140d4:	f7fd fd22 	bl	8011b1c <GUI_DrawVLine>
 80140d8:	7bb3      	ldrb	r3, [r6, #14]
 80140da:	079b      	lsls	r3, r3, #30
 80140dc:	f140 80c3 	bpl.w	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 80140e0:	69a0      	ldr	r0, [r4, #24]
 80140e2:	6961      	ldr	r1, [r4, #20]
 80140e4:	69e2      	ldr	r2, [r4, #28]
 80140e6:	f7fd fd19 	bl	8011b1c <GUI_DrawVLine>
 80140ea:	e0bc      	b.n	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 80140ec:	428a      	cmp	r2, r1
 80140ee:	d108      	bne.n	8014102 <MULTIPAGE_DrawSkinFlex+0xfa>
 80140f0:	6828      	ldr	r0, [r5, #0]
 80140f2:	f7fd fa4d 	bl	8011590 <GUI_SetColor>
 80140f6:	f104 0010 	add.w	r0, r4, #16
 80140fa:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80140fc:	f7fd fcc8 	bl	8011a90 <GUI_FillRect>
 8014100:	e0b1      	b.n	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 8014102:	89b3      	ldrh	r3, [r6, #12]
 8014104:	f013 0f08 	tst.w	r3, #8
 8014108:	6873      	ldr	r3, [r6, #4]
 801410a:	d036      	beq.n	801417a <MULTIPAGE_DrawSkinFlex+0x172>
 801410c:	f013 0f04 	tst.w	r3, #4
 8014110:	69a2      	ldr	r2, [r4, #24]
 8014112:	6923      	ldr	r3, [r4, #16]
 8014114:	f04f 0602 	mov.w	r6, #2
 8014118:	ebc3 0102 	rsb	r1, r3, r2
 801411c:	fb91 f1f6 	sdiv	r1, r1, r6
 8014120:	eb03 0001 	add.w	r0, r3, r1
 8014124:	d011      	beq.n	801414a <MULTIPAGE_DrawSkinFlex+0x142>
 8014126:	68e9      	ldr	r1, [r5, #12]
 8014128:	9100      	str	r1, [sp, #0]
 801412a:	6929      	ldr	r1, [r5, #16]
 801412c:	9101      	str	r1, [sp, #4]
 801412e:	3001      	adds	r0, #1
 8014130:	69e3      	ldr	r3, [r4, #28]
 8014132:	6961      	ldr	r1, [r4, #20]
 8014134:	f004 fc78 	bl	8018a28 <GUI_DrawGradientH>
 8014138:	6920      	ldr	r0, [r4, #16]
 801413a:	69a3      	ldr	r3, [r4, #24]
 801413c:	1a1b      	subs	r3, r3, r0
 801413e:	fb93 f2f6 	sdiv	r2, r3, r6
 8014142:	686b      	ldr	r3, [r5, #4]
 8014144:	9300      	str	r3, [sp, #0]
 8014146:	68ab      	ldr	r3, [r5, #8]
 8014148:	e010      	b.n	801416c <MULTIPAGE_DrawSkinFlex+0x164>
 801414a:	68a9      	ldr	r1, [r5, #8]
 801414c:	9100      	str	r1, [sp, #0]
 801414e:	6869      	ldr	r1, [r5, #4]
 8014150:	9101      	str	r1, [sp, #4]
 8014152:	3001      	adds	r0, #1
 8014154:	69e3      	ldr	r3, [r4, #28]
 8014156:	6961      	ldr	r1, [r4, #20]
 8014158:	f004 fc66 	bl	8018a28 <GUI_DrawGradientH>
 801415c:	6920      	ldr	r0, [r4, #16]
 801415e:	69a3      	ldr	r3, [r4, #24]
 8014160:	1a1b      	subs	r3, r3, r0
 8014162:	fb93 f2f6 	sdiv	r2, r3, r6
 8014166:	692b      	ldr	r3, [r5, #16]
 8014168:	9300      	str	r3, [sp, #0]
 801416a:	68eb      	ldr	r3, [r5, #12]
 801416c:	9301      	str	r3, [sp, #4]
 801416e:	6961      	ldr	r1, [r4, #20]
 8014170:	69e3      	ldr	r3, [r4, #28]
 8014172:	4402      	add	r2, r0
 8014174:	f004 fc58 	bl	8018a28 <GUI_DrawGradientH>
 8014178:	e075      	b.n	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 801417a:	f013 0f04 	tst.w	r3, #4
 801417e:	6961      	ldr	r1, [r4, #20]
 8014180:	69e3      	ldr	r3, [r4, #28]
 8014182:	f04f 0602 	mov.w	r6, #2
 8014186:	ebc1 0303 	rsb	r3, r1, r3
 801418a:	fb93 f3f6 	sdiv	r3, r3, r6
 801418e:	d012      	beq.n	80141b6 <MULTIPAGE_DrawSkinFlex+0x1ae>
 8014190:	692a      	ldr	r2, [r5, #16]
 8014192:	9200      	str	r2, [sp, #0]
 8014194:	68ea      	ldr	r2, [r5, #12]
 8014196:	9201      	str	r2, [sp, #4]
 8014198:	440b      	add	r3, r1
 801419a:	6920      	ldr	r0, [r4, #16]
 801419c:	69a2      	ldr	r2, [r4, #24]
 801419e:	f004 fc11 	bl	80189c4 <GUI_DrawGradientV>
 80141a2:	6962      	ldr	r2, [r4, #20]
 80141a4:	69e3      	ldr	r3, [r4, #28]
 80141a6:	68a8      	ldr	r0, [r5, #8]
 80141a8:	9000      	str	r0, [sp, #0]
 80141aa:	1a99      	subs	r1, r3, r2
 80141ac:	fb91 f6f6 	sdiv	r6, r1, r6
 80141b0:	1991      	adds	r1, r2, r6
 80141b2:	6868      	ldr	r0, [r5, #4]
 80141b4:	e011      	b.n	80141da <MULTIPAGE_DrawSkinFlex+0x1d2>
 80141b6:	686a      	ldr	r2, [r5, #4]
 80141b8:	9200      	str	r2, [sp, #0]
 80141ba:	68aa      	ldr	r2, [r5, #8]
 80141bc:	9201      	str	r2, [sp, #4]
 80141be:	440b      	add	r3, r1
 80141c0:	6920      	ldr	r0, [r4, #16]
 80141c2:	69a2      	ldr	r2, [r4, #24]
 80141c4:	f004 fbfe 	bl	80189c4 <GUI_DrawGradientV>
 80141c8:	6962      	ldr	r2, [r4, #20]
 80141ca:	69e3      	ldr	r3, [r4, #28]
 80141cc:	68e8      	ldr	r0, [r5, #12]
 80141ce:	9000      	str	r0, [sp, #0]
 80141d0:	1a99      	subs	r1, r3, r2
 80141d2:	fb91 f6f6 	sdiv	r6, r1, r6
 80141d6:	6928      	ldr	r0, [r5, #16]
 80141d8:	1991      	adds	r1, r2, r6
 80141da:	9001      	str	r0, [sp, #4]
 80141dc:	6920      	ldr	r0, [r4, #16]
 80141de:	69a2      	ldr	r2, [r4, #24]
 80141e0:	3101      	adds	r1, #1
 80141e2:	f004 fbef 	bl	80189c4 <GUI_DrawGradientV>
 80141e6:	e03e      	b.n	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 80141e8:	6933      	ldr	r3, [r6, #16]
 80141ea:	2b00      	cmp	r3, #0
 80141ec:	d03b      	beq.n	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 80141ee:	6818      	ldr	r0, [r3, #0]
 80141f0:	6821      	ldr	r1, [r4, #0]
 80141f2:	6922      	ldr	r2, [r4, #16]
 80141f4:	6963      	ldr	r3, [r4, #20]
 80141f6:	f7f6 fa85 	bl	800a704 <GUI_DRAW__Draw>
 80141fa:	e034      	b.n	8014266 <MULTIPAGE_DrawSkinFlex+0x25e>
 80141fc:	6820      	ldr	r0, [r4, #0]
 80141fe:	f7f6 fa4c 	bl	800a69a <MULTIPAGE_GetFont>
 8014202:	f7fd f997 	bl	8011534 <GUI_SetFont>
 8014206:	69a8      	ldr	r0, [r5, #24]
 8014208:	f7fd f9c2 	bl	8011590 <GUI_SetColor>
 801420c:	2002      	movs	r0, #2
 801420e:	f7fd f987 	bl	8011520 <GUI_SetTextMode>
 8014212:	6820      	ldr	r0, [r4, #0]
 8014214:	f7fe fbac 	bl	8012970 <GUI_ALLOC_LockH>
 8014218:	68a1      	ldr	r1, [r4, #8]
 801421a:	9003      	str	r0, [sp, #12]
 801421c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801421e:	f7f6 fb51 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 8014222:	6923      	ldr	r3, [r4, #16]
 8014224:	f8ad 3010 	strh.w	r3, [sp, #16]
 8014228:	6963      	ldr	r3, [r4, #20]
 801422a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801422e:	69a3      	ldr	r3, [r4, #24]
 8014230:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014234:	69e3      	ldr	r3, [r4, #28]
 8014236:	9002      	str	r0, [sp, #8]
 8014238:	f110 0418 	adds.w	r4, r0, #24
 801423c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014240:	d00b      	beq.n	801425a <MULTIPAGE_DrawSkinFlex+0x252>
 8014242:	4620      	mov	r0, r4
 8014244:	f7eb ffe4 	bl	8000210 <strlen>
 8014248:	6832      	ldr	r2, [r6, #0]
 801424a:	9200      	str	r2, [sp, #0]
 801424c:	9a03      	ldr	r2, [sp, #12]
 801424e:	4603      	mov	r3, r0
 8014250:	a904      	add	r1, sp, #16
 8014252:	4620      	mov	r0, r4
 8014254:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8014256:	f004 fc19 	bl	8018a8c <GUI_DispStringInRectEx>
 801425a:	a802      	add	r0, sp, #8
 801425c:	f7fe fb96 	bl	801298c <GUI_ALLOC_UnlockH>
 8014260:	a803      	add	r0, sp, #12
 8014262:	f7fe fb93 	bl	801298c <GUI_ALLOC_UnlockH>
 8014266:	2000      	movs	r0, #0
 8014268:	b006      	add	sp, #24
 801426a:	bd70      	pop	{r4, r5, r6, pc}
 801426c:	20000228 	.word	0x20000228
 8014270:	08014987 	.word	0x08014987
 8014274:	20000260 	.word	0x20000260
 8014278:	20000244 	.word	0x20000244

0801427c <MULTIPAGE__DrawTextItemH>:
 801427c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014280:	4604      	mov	r4, r0
 8014282:	4688      	mov	r8, r1
 8014284:	6818      	ldr	r0, [r3, #0]
 8014286:	6859      	ldr	r1, [r3, #4]
 8014288:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801428a:	466d      	mov	r5, sp
 801428c:	c503      	stmia	r5!, {r0, r1}
 801428e:	4617      	mov	r7, r2
 8014290:	f8bd 2000 	ldrh.w	r2, [sp]
 8014294:	4413      	add	r3, r2
 8014296:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014298:	b29b      	uxth	r3, r3
 801429a:	f8ad 3000 	strh.w	r3, [sp]
 801429e:	4413      	add	r3, r2
 80142a0:	f8ad 3004 	strh.w	r3, [sp, #4]
 80142a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80142a6:	4668      	mov	r0, sp
 80142a8:	689b      	ldr	r3, [r3, #8]
 80142aa:	4798      	blx	r3
 80142ac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80142ae:	4668      	mov	r0, sp
 80142b0:	4669      	mov	r1, sp
 80142b2:	681a      	ldr	r2, [r3, #0]
 80142b4:	f7fc f81b 	bl	80102ee <GUI__ReduceRect>
 80142b8:	e89d 0003 	ldmia.w	sp, {r0, r1}
 80142bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80142be:	ae02      	add	r6, sp, #8
 80142c0:	42bb      	cmp	r3, r7
 80142c2:	e886 0003 	stmia.w	r6, {r0, r1}
 80142c6:	d144      	bne.n	8014352 <MULTIPAGE__DrawTextItemH+0xd6>
 80142c8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80142ca:	f013 0f04 	tst.w	r3, #4
 80142ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80142d0:	681b      	ldr	r3, [r3, #0]
 80142d2:	d01d      	beq.n	8014310 <MULTIPAGE__DrawTextItemH+0x94>
 80142d4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80142d8:	3a01      	subs	r2, #1
 80142da:	1ad2      	subs	r2, r2, r3
 80142dc:	2b01      	cmp	r3, #1
 80142de:	f8ad 2002 	strh.w	r2, [sp, #2]
 80142e2:	dd36      	ble.n	8014352 <MULTIPAGE__DrawTextItemH+0xd6>
 80142e4:	4f2e      	ldr	r7, [pc, #184]	; (80143a0 <MULTIPAGE__DrawTextItemH+0x124>)
 80142e6:	6838      	ldr	r0, [r7, #0]
 80142e8:	f7fb ff66 	bl	80101b8 <LCD_SetColor>
 80142ec:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 80142f0:	f9bd 0000 	ldrsh.w	r0, [sp]
 80142f4:	1c4a      	adds	r2, r1, #1
 80142f6:	3801      	subs	r0, #1
 80142f8:	f7fd fc10 	bl	8011b1c <GUI_DrawVLine>
 80142fc:	6878      	ldr	r0, [r7, #4]
 80142fe:	f7fb ff5b 	bl	80101b8 <LCD_SetColor>
 8014302:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8014306:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 801430a:	1c4a      	adds	r2, r1, #1
 801430c:	3001      	adds	r0, #1
 801430e:	e01e      	b.n	801434e <MULTIPAGE__DrawTextItemH+0xd2>
 8014310:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014314:	441a      	add	r2, r3
 8014316:	3201      	adds	r2, #1
 8014318:	2b01      	cmp	r3, #1
 801431a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801431e:	dd18      	ble.n	8014352 <MULTIPAGE__DrawTextItemH+0xd6>
 8014320:	4f1f      	ldr	r7, [pc, #124]	; (80143a0 <MULTIPAGE__DrawTextItemH+0x124>)
 8014322:	6838      	ldr	r0, [r7, #0]
 8014324:	f7fb ff48 	bl	80101b8 <LCD_SetColor>
 8014328:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 801432c:	f9bd 0000 	ldrsh.w	r0, [sp]
 8014330:	1e91      	subs	r1, r2, #2
 8014332:	3801      	subs	r0, #1
 8014334:	3a01      	subs	r2, #1
 8014336:	f7fd fbf1 	bl	8011b1c <GUI_DrawVLine>
 801433a:	6878      	ldr	r0, [r7, #4]
 801433c:	f7fb ff3c 	bl	80101b8 <LCD_SetColor>
 8014340:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8014344:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8014348:	1e91      	subs	r1, r2, #2
 801434a:	3001      	adds	r0, #1
 801434c:	3a01      	subs	r2, #1
 801434e:	f7fd fbe5 	bl	8011b1c <GUI_DrawVLine>
 8014352:	2002      	movs	r0, #2
 8014354:	f7fd f8e4 	bl	8011520 <GUI_SetTextMode>
 8014358:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801435a:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 801435e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8014360:	f7fb ff2a 	bl	80101b8 <LCD_SetColor>
 8014364:	4669      	mov	r1, sp
 8014366:	4620      	mov	r0, r4
 8014368:	f7f4 ff86 	bl	8009278 <WIDGET__FillRectEx>
 801436c:	6d38      	ldr	r0, [r7, #80]	; 0x50
 801436e:	f7fb ff1b 	bl	80101a8 <LCD_SetBkColor>
 8014372:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8014374:	f7fb ff20 	bl	80101b8 <LCD_SetColor>
 8014378:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801437a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801437e:	881b      	ldrh	r3, [r3, #0]
 8014380:	441a      	add	r2, r3
 8014382:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014386:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 801438a:	4640      	mov	r0, r8
 801438c:	1ad3      	subs	r3, r2, r3
 801438e:	4631      	mov	r1, r6
 8014390:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
 8014392:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014396:	f004 fc96 	bl	8018cc6 <GUI_DispStringInRect>
 801439a:	b004      	add	sp, #16
 801439c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143a0:	200000cc 	.word	0x200000cc

080143a4 <_IsBetween>:
 80143a4:	4291      	cmp	r1, r2
 80143a6:	dd06      	ble.n	80143b6 <_IsBetween+0x12>
 80143a8:	4288      	cmp	r0, r1
 80143aa:	dc0b      	bgt.n	80143c4 <_IsBetween+0x20>
 80143ac:	4290      	cmp	r0, r2
 80143ae:	bfb4      	ite	lt
 80143b0:	2000      	movlt	r0, #0
 80143b2:	2001      	movge	r0, #1
 80143b4:	4770      	bx	lr
 80143b6:	4288      	cmp	r0, r1
 80143b8:	db04      	blt.n	80143c4 <_IsBetween+0x20>
 80143ba:	4290      	cmp	r0, r2
 80143bc:	bfcc      	ite	gt
 80143be:	2000      	movgt	r0, #0
 80143c0:	2001      	movle	r0, #1
 80143c2:	4770      	bx	lr
 80143c4:	2000      	movs	r0, #0
 80143c6:	4770      	bx	lr

080143c8 <_Create>:
 80143c8:	b530      	push	{r4, r5, lr}
 80143ca:	b08b      	sub	sp, #44	; 0x2c
 80143cc:	2100      	movs	r1, #0
 80143ce:	4604      	mov	r4, r0
 80143d0:	2224      	movs	r2, #36	; 0x24
 80143d2:	a801      	add	r0, sp, #4
 80143d4:	f005 ffa9 	bl	801a32a <memset>
 80143d8:	4620      	mov	r0, r4
 80143da:	f7fe fac9 	bl	8012970 <GUI_ALLOC_LockH>
 80143de:	ab0a      	add	r3, sp, #40	; 0x28
 80143e0:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
 80143e2:	f843 0d28 	str.w	r0, [r3, #-40]!
 80143e6:	6895      	ldr	r5, [r2, #8]
 80143e8:	4668      	mov	r0, sp
 80143ea:	f7fe facf 	bl	801298c <GUI_ALLOC_UnlockH>
 80143ee:	2300      	movs	r3, #0
 80143f0:	9302      	str	r3, [sp, #8]
 80143f2:	9401      	str	r4, [sp, #4]
 80143f4:	682b      	ldr	r3, [r5, #0]
 80143f6:	a801      	add	r0, sp, #4
 80143f8:	4798      	blx	r3
 80143fa:	b00b      	add	sp, #44	; 0x2c
 80143fc:	bd30      	pop	{r4, r5, pc}

080143fe <MULTIPAGE_SKIN__GetPagePos>:
 80143fe:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014402:	4689      	mov	r9, r1
 8014404:	4607      	mov	r7, r0
 8014406:	f7fe fab3 	bl	8012970 <GUI_ALLOC_LockH>
 801440a:	ae02      	add	r6, sp, #8
 801440c:	f890 4080 	ldrb.w	r4, [r0, #128]	; 0x80
 8014410:	f846 0d04 	str.w	r0, [r6, #-4]!
 8014414:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8014416:	f7f6 f9d3 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 801441a:	4680      	mov	r8, r0
 801441c:	4630      	mov	r0, r6
 801441e:	f7fe fab5 	bl	801298c <GUI_ALLOC_UnlockH>
 8014422:	2500      	movs	r5, #0
 8014424:	454d      	cmp	r5, r9
 8014426:	d006      	beq.n	8014436 <MULTIPAGE_SKIN__GetPagePos+0x38>
 8014428:	4629      	mov	r1, r5
 801442a:	4638      	mov	r0, r7
 801442c:	f7f5 fce4 	bl	8009df8 <MULTIPAGE__GetPageWidth>
 8014430:	3501      	adds	r5, #1
 8014432:	4404      	add	r4, r0
 8014434:	e7f6      	b.n	8014424 <MULTIPAGE_SKIN__GetPagePos+0x26>
 8014436:	4545      	cmp	r5, r8
 8014438:	d109      	bne.n	801444e <MULTIPAGE_SKIN__GetPagePos+0x50>
 801443a:	4638      	mov	r0, r7
 801443c:	f7fe fa98 	bl	8012970 <GUI_ALLOC_LockH>
 8014440:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
 8014444:	9001      	str	r0, [sp, #4]
 8014446:	4630      	mov	r0, r6
 8014448:	441c      	add	r4, r3
 801444a:	f7fe fa9f 	bl	801298c <GUI_ALLOC_UnlockH>
 801444e:	4620      	mov	r0, r4
 8014450:	b003      	add	sp, #12
 8014452:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08014458 <_Paint>:
 8014458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801445c:	b0a9      	sub	sp, #164	; 0xa4
 801445e:	9006      	str	r0, [sp, #24]
 8014460:	901f      	str	r0, [sp, #124]	; 0x7c
 8014462:	f7fe fa85 	bl	8012970 <GUI_ALLOC_LockH>
 8014466:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8014468:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801446a:	9209      	str	r2, [sp, #36]	; 0x24
 801446c:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8014470:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8014472:	930c      	str	r3, [sp, #48]	; 0x30
 8014474:	9205      	str	r2, [sp, #20]
 8014476:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8014478:	6e82      	ldr	r2, [r0, #104]	; 0x68
 801447a:	9017      	str	r0, [sp, #92]	; 0x5c
 801447c:	6cc7      	ldr	r7, [r0, #76]	; 0x4c
 801447e:	6c06      	ldr	r6, [r0, #64]	; 0x40
 8014480:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 8014482:	f890 8080 	ldrb.w	r8, [r0, #128]	; 0x80
 8014486:	f890 b081 	ldrb.w	fp, [r0, #129]	; 0x81
 801448a:	9302      	str	r3, [sp, #8]
 801448c:	9201      	str	r2, [sp, #4]
 801448e:	b90c      	cbnz	r4, 8014494 <_Paint+0x3c>
 8014490:	f8d0 4088 	ldr.w	r4, [r0, #136]	; 0x88
 8014494:	f10d 09a0 	add.w	r9, sp, #160	; 0xa0
 8014498:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801449a:	f7fd f84b 	bl	8011534 <GUI_SetFont>
 801449e:	f859 0d44 	ldr.w	r0, [r9, #-68]!
 80144a2:	a918      	add	r1, sp, #96	; 0x60
 80144a4:	f7f5 fc75 	bl	8009d92 <MULTIPAGE__CalcBorderRect>
 80144a8:	4648      	mov	r0, r9
 80144aa:	f7fe fa6f 	bl	801298c <GUI_ALLOC_UnlockH>
 80144ae:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 80144b2:	9223      	str	r2, [sp, #140]	; 0x8c
 80144b4:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	; 0x62
 80144b8:	9224      	str	r2, [sp, #144]	; 0x90
 80144ba:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80144be:	9225      	str	r2, [sp, #148]	; 0x94
 80144c0:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	; 0x66
 80144c4:	9226      	str	r2, [sp, #152]	; 0x98
 80144c6:	ab1a      	add	r3, sp, #104	; 0x68
 80144c8:	220b      	movs	r2, #11
 80144ca:	f04f 39ff 	mov.w	r9, #4294967295
 80144ce:	9327      	str	r3, [sp, #156]	; 0x9c
 80144d0:	9220      	str	r2, [sp, #128]	; 0x80
 80144d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144d4:	971b      	str	r7, [sp, #108]	; 0x6c
 80144d6:	961c      	str	r6, [sp, #112]	; 0x70
 80144d8:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
 80144dc:	f8cd 9084 	str.w	r9, [sp, #132]	; 0x84
 80144e0:	a81f      	add	r0, sp, #124	; 0x7c
 80144e2:	4798      	blx	r3
 80144e4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80144e6:	f7f6 f96b 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 80144ea:	900d      	str	r0, [sp, #52]	; 0x34
 80144ec:	2800      	cmp	r0, #0
 80144ee:	f000 8230 	beq.w	8014952 <_Paint+0x4fa>
 80144f2:	2100      	movs	r1, #0
 80144f4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80144f6:	f7f6 f9e5 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 80144fa:	2100      	movs	r1, #0
 80144fc:	9016      	str	r0, [sp, #88]	; 0x58
 80144fe:	9806      	ldr	r0, [sp, #24]
 8014500:	f7f5 fc7a 	bl	8009df8 <MULTIPAGE__GetPageWidth>
 8014504:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8014506:	9003      	str	r0, [sp, #12]
 8014508:	7912      	ldrb	r2, [r2, #4]
 801450a:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
 801450e:	a816      	add	r0, sp, #88	; 0x58
 8014510:	f7fe fa3c 	bl	801298c <GUI_ALLOC_UnlockH>
 8014514:	f005 0508 	and.w	r5, r5, #8
 8014518:	9806      	ldr	r0, [sp, #24]
 801451a:	a918      	add	r1, sp, #96	; 0x60
 801451c:	f7f5 fcb3 	bl	8009e86 <MULTIPAGE__GetTabBarRect>
 8014520:	b2ad      	uxth	r5, r5
 8014522:	a818      	add	r0, sp, #96	; 0x60
 8014524:	f7f7 f9e4 	bl	800b8f0 <WM_SetUserClipRect>
 8014528:	950b      	str	r5, [sp, #44]	; 0x2c
 801452a:	b1f5      	cbz	r5, 801456a <_Paint+0x112>
 801452c:	f8bd 1062 	ldrh.w	r1, [sp, #98]	; 0x62
 8014530:	9a03      	ldr	r2, [sp, #12]
 8014532:	f9bd 3066 	ldrsh.w	r3, [sp, #102]	; 0x66
 8014536:	9311      	str	r3, [sp, #68]	; 0x44
 8014538:	eb08 0501 	add.w	r5, r8, r1
 801453c:	b2ad      	uxth	r5, r5
 801453e:	fa1f fa85 	uxth.w	sl, r5
 8014542:	444d      	add	r5, r9
 8014544:	b209      	sxth	r1, r1
 8014546:	4415      	add	r5, r2
 8014548:	f017 0f04 	tst.w	r7, #4
 801454c:	9110      	str	r1, [sp, #64]	; 0x40
 801454e:	b2ad      	uxth	r5, r5
 8014550:	f8bd 1060 	ldrh.w	r1, [sp, #96]	; 0x60
 8014554:	f8bd 0064 	ldrh.w	r0, [sp, #100]	; 0x64
 8014558:	d004      	beq.n	8014564 <_Paint+0x10c>
 801455a:	2201      	movs	r2, #1
 801455c:	9108      	str	r1, [sp, #32]
 801455e:	9004      	str	r0, [sp, #16]
 8014560:	9207      	str	r2, [sp, #28]
 8014562:	e022      	b.n	80145aa <_Paint+0x152>
 8014564:	9008      	str	r0, [sp, #32]
 8014566:	9104      	str	r1, [sp, #16]
 8014568:	e018      	b.n	801459c <_Paint+0x144>
 801456a:	f8bd 1060 	ldrh.w	r1, [sp, #96]	; 0x60
 801456e:	9b03      	ldr	r3, [sp, #12]
 8014570:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8014574:	9211      	str	r2, [sp, #68]	; 0x44
 8014576:	eb08 0501 	add.w	r5, r8, r1
 801457a:	b2ad      	uxth	r5, r5
 801457c:	fa1f fa85 	uxth.w	sl, r5
 8014580:	3d01      	subs	r5, #1
 8014582:	b209      	sxth	r1, r1
 8014584:	441d      	add	r5, r3
 8014586:	f017 0f04 	tst.w	r7, #4
 801458a:	9110      	str	r1, [sp, #64]	; 0x40
 801458c:	b2ad      	uxth	r5, r5
 801458e:	f8bd 0062 	ldrh.w	r0, [sp, #98]	; 0x62
 8014592:	f8bd 1066 	ldrh.w	r1, [sp, #102]	; 0x66
 8014596:	d004      	beq.n	80145a2 <_Paint+0x14a>
 8014598:	9108      	str	r1, [sp, #32]
 801459a:	9004      	str	r0, [sp, #16]
 801459c:	f8cd 901c 	str.w	r9, [sp, #28]
 80145a0:	e003      	b.n	80145aa <_Paint+0x152>
 80145a2:	2301      	movs	r3, #1
 80145a4:	9008      	str	r0, [sp, #32]
 80145a6:	9104      	str	r1, [sp, #16]
 80145a8:	9307      	str	r3, [sp, #28]
 80145aa:	9a05      	ldr	r2, [sp, #20]
 80145ac:	b152      	cbz	r2, 80145c4 <_Paint+0x16c>
 80145ae:	4611      	mov	r1, r2
 80145b0:	9806      	ldr	r0, [sp, #24]
 80145b2:	f7ff ff24 	bl	80143fe <MULTIPAGE_SKIN__GetPagePos>
 80145b6:	b280      	uxth	r0, r0
 80145b8:	ebc0 020a 	rsb	r2, r0, sl
 80145bc:	1a2d      	subs	r5, r5, r0
 80145be:	fa1f fa82 	uxth.w	sl, r2
 80145c2:	b2ad      	uxth	r5, r5
 80145c4:	9b07      	ldr	r3, [sp, #28]
 80145c6:	9a08      	ldr	r2, [sp, #32]
 80145c8:	fb03 2b0b 	mla	fp, r3, fp, r2
 80145cc:	9a01      	ldr	r2, [sp, #4]
 80145ce:	2302      	movs	r3, #2
 80145d0:	fb92 f2f3 	sdiv	r2, r2, r3
 80145d4:	920e      	str	r2, [sp, #56]	; 0x38
 80145d6:	9a04      	ldr	r2, [sp, #16]
 80145d8:	b212      	sxth	r2, r2
 80145da:	4611      	mov	r1, r2
 80145dc:	9201      	str	r2, [sp, #4]
 80145de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80145e0:	fb94 f4f3 	sdiv	r4, r4, r3
 80145e4:	4411      	add	r1, r2
 80145e6:	4622      	mov	r2, r4
 80145e8:	440a      	add	r2, r1
 80145ea:	9212      	str	r2, [sp, #72]	; 0x48
 80145ec:	9a02      	ldr	r2, [sp, #8]
 80145ee:	940f      	str	r4, [sp, #60]	; 0x3c
 80145f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80145f4:	fa1f fb8b 	uxth.w	fp, fp
 80145f8:	9302      	str	r3, [sp, #8]
 80145fa:	425b      	negs	r3, r3
 80145fc:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8014600:	9313      	str	r3, [sp, #76]	; 0x4c
 8014602:	2400      	movs	r4, #0
 8014604:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014606:	429c      	cmp	r4, r3
 8014608:	f280 81a0 	bge.w	801494c <_Paint+0x4f4>
 801460c:	b1bc      	cbz	r4, 801463e <_Paint+0x1e6>
 801460e:	4621      	mov	r1, r4
 8014610:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014612:	f7f6 f957 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 8014616:	4621      	mov	r1, r4
 8014618:	9016      	str	r0, [sp, #88]	; 0x58
 801461a:	9806      	ldr	r0, [sp, #24]
 801461c:	f7f5 fbec 	bl	8009df8 <MULTIPAGE__GetPageWidth>
 8014620:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014622:	9003      	str	r0, [sp, #12]
 8014624:	791b      	ldrb	r3, [r3, #4]
 8014626:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 801462a:	b2ad      	uxth	r5, r5
 801462c:	a816      	add	r0, sp, #88	; 0x58
 801462e:	f7fe f9ad 	bl	801298c <GUI_ALLOC_UnlockH>
 8014632:	1c6a      	adds	r2, r5, #1
 8014634:	fa1f fa82 	uxth.w	sl, r2
 8014638:	9a03      	ldr	r2, [sp, #12]
 801463a:	4415      	add	r5, r2
 801463c:	b2ad      	uxth	r5, r5
 801463e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014640:	b22b      	sxth	r3, r5
 8014642:	4293      	cmp	r3, r2
 8014644:	f2c0 8180 	blt.w	8014948 <_Paint+0x4f0>
 8014648:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801464a:	fa0f f38a 	sxth.w	r3, sl
 801464e:	4293      	cmp	r3, r2
 8014650:	f300 817a 	bgt.w	8014948 <_Paint+0x4f0>
 8014654:	42b4      	cmp	r4, r6
 8014656:	9421      	str	r4, [sp, #132]	; 0x84
 8014658:	d114      	bne.n	8014684 <_Paint+0x22c>
 801465a:	b144      	cbz	r4, 801466e <_Paint+0x216>
 801465c:	9b05      	ldr	r3, [sp, #20]
 801465e:	429c      	cmp	r4, r3
 8014660:	d105      	bne.n	801466e <_Paint+0x216>
 8014662:	eb08 020a 	add.w	r2, r8, sl
 8014666:	4445      	add	r5, r8
 8014668:	fa1f fa82 	uxth.w	sl, r2
 801466c:	b2ad      	uxth	r5, r5
 801466e:	ebc8 090a 	rsb	r9, r8, sl
 8014672:	eb08 0105 	add.w	r1, r8, r5
 8014676:	fa1f f989 	uxth.w	r9, r9
 801467a:	b289      	uxth	r1, r1
 801467c:	9b04      	ldr	r3, [sp, #16]
 801467e:	f8dd b020 	ldr.w	fp, [sp, #32]
 8014682:	e036      	b.n	80146f2 <_Paint+0x29a>
 8014684:	1c73      	adds	r3, r6, #1
 8014686:	9a04      	ldr	r2, [sp, #16]
 8014688:	9907      	ldr	r1, [sp, #28]
 801468a:	429c      	cmp	r4, r3
 801468c:	ebc1 0302 	rsb	r3, r1, r2
 8014690:	d11f      	bne.n	80146d2 <_Paint+0x27a>
 8014692:	07fa      	lsls	r2, r7, #31
 8014694:	b29b      	uxth	r3, r3
 8014696:	d514      	bpl.n	80146c2 <_Paint+0x26a>
 8014698:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801469a:	1e51      	subs	r1, r2, #1
 801469c:	9a05      	ldr	r2, [sp, #20]
 801469e:	428c      	cmp	r4, r1
 80146a0:	bf08      	it	eq
 80146a2:	ebc8 0105 	rsbeq	r1, r8, r5
 80146a6:	ebc2 0004 	rsb	r0, r2, r4
 80146aa:	bf0c      	ite	eq
 80146ac:	b289      	uxtheq	r1, r1
 80146ae:	4629      	movne	r1, r5
 80146b0:	2800      	cmp	r0, #0
 80146b2:	dd1b      	ble.n	80146ec <_Paint+0x294>
 80146b4:	eb08 090a 	add.w	r9, r8, sl
 80146b8:	fa1f f989 	uxth.w	r9, r9
 80146bc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80146c0:	e017      	b.n	80146f2 <_Paint+0x29a>
 80146c2:	eb08 090a 	add.w	r9, r8, sl
 80146c6:	fa1f f989 	uxth.w	r9, r9
 80146ca:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80146ce:	4629      	mov	r1, r5
 80146d0:	e00f      	b.n	80146f2 <_Paint+0x29a>
 80146d2:	1e71      	subs	r1, r6, #1
 80146d4:	428c      	cmp	r4, r1
 80146d6:	d104      	bne.n	80146e2 <_Paint+0x28a>
 80146d8:	ebc8 0105 	rsb	r1, r8, r5
 80146dc:	b289      	uxth	r1, r1
 80146de:	b29b      	uxth	r3, r3
 80146e0:	e004      	b.n	80146ec <_Paint+0x294>
 80146e2:	b29b      	uxth	r3, r3
 80146e4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80146e8:	4629      	mov	r1, r5
 80146ea:	e001      	b.n	80146f0 <_Paint+0x298>
 80146ec:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80146f0:	46d1      	mov	r9, sl
 80146f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80146f4:	200f      	movs	r0, #15
 80146f6:	f88d 0076 	strb.w	r0, [sp, #118]	; 0x76
 80146fa:	b209      	sxth	r1, r1
 80146fc:	fa0f f089 	sxth.w	r0, r9
 8014700:	b342      	cbz	r2, 8014754 <_Paint+0x2fc>
 8014702:	9126      	str	r1, [sp, #152]	; 0x98
 8014704:	1c71      	adds	r1, r6, #1
 8014706:	4a94      	ldr	r2, [pc, #592]	; (8014958 <_Paint+0x500>)
 8014708:	921a      	str	r2, [sp, #104]	; 0x68
 801470a:	428c      	cmp	r4, r1
 801470c:	9024      	str	r0, [sp, #144]	; 0x90
 801470e:	d104      	bne.n	801471a <_Paint+0x2c2>
 8014710:	9a05      	ldr	r2, [sp, #20]
 8014712:	4294      	cmp	r4, r2
 8014714:	d007      	beq.n	8014726 <_Paint+0x2ce>
 8014716:	210b      	movs	r1, #11
 8014718:	e003      	b.n	8014722 <_Paint+0x2ca>
 801471a:	1e71      	subs	r1, r6, #1
 801471c:	428c      	cmp	r4, r1
 801471e:	d102      	bne.n	8014726 <_Paint+0x2ce>
 8014720:	2107      	movs	r1, #7
 8014722:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 8014726:	f017 0f04 	tst.w	r7, #4
 801472a:	f89d 1076 	ldrb.w	r1, [sp, #118]	; 0x76
 801472e:	b21b      	sxth	r3, r3
 8014730:	d007      	beq.n	8014742 <_Paint+0x2ea>
 8014732:	f021 0102 	bic.w	r1, r1, #2
 8014736:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 801473a:	fa0f f18b 	sxth.w	r1, fp
 801473e:	9123      	str	r1, [sp, #140]	; 0x8c
 8014740:	e006      	b.n	8014750 <_Paint+0x2f8>
 8014742:	f021 0101 	bic.w	r1, r1, #1
 8014746:	9323      	str	r3, [sp, #140]	; 0x8c
 8014748:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 801474c:	fa0f f38b 	sxth.w	r3, fp
 8014750:	9325      	str	r3, [sp, #148]	; 0x94
 8014752:	e027      	b.n	80147a4 <_Paint+0x34c>
 8014754:	9125      	str	r1, [sp, #148]	; 0x94
 8014756:	1c71      	adds	r1, r6, #1
 8014758:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801475a:	921a      	str	r2, [sp, #104]	; 0x68
 801475c:	428c      	cmp	r4, r1
 801475e:	9023      	str	r0, [sp, #140]	; 0x8c
 8014760:	d104      	bne.n	801476c <_Paint+0x314>
 8014762:	9a05      	ldr	r2, [sp, #20]
 8014764:	4294      	cmp	r4, r2
 8014766:	d007      	beq.n	8014778 <_Paint+0x320>
 8014768:	210e      	movs	r1, #14
 801476a:	e003      	b.n	8014774 <_Paint+0x31c>
 801476c:	1e71      	subs	r1, r6, #1
 801476e:	428c      	cmp	r4, r1
 8014770:	d102      	bne.n	8014778 <_Paint+0x320>
 8014772:	210d      	movs	r1, #13
 8014774:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 8014778:	f017 0f04 	tst.w	r7, #4
 801477c:	f89d 1076 	ldrb.w	r1, [sp, #118]	; 0x76
 8014780:	b21b      	sxth	r3, r3
 8014782:	d007      	beq.n	8014794 <_Paint+0x33c>
 8014784:	f021 0104 	bic.w	r1, r1, #4
 8014788:	9324      	str	r3, [sp, #144]	; 0x90
 801478a:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 801478e:	fa0f f38b 	sxth.w	r3, fp
 8014792:	e006      	b.n	80147a2 <_Paint+0x34a>
 8014794:	f021 0108 	bic.w	r1, r1, #8
 8014798:	f88d 1076 	strb.w	r1, [sp, #118]	; 0x76
 801479c:	fa0f f18b 	sxth.w	r1, fp
 80147a0:	9124      	str	r1, [sp, #144]	; 0x90
 80147a2:	9326      	str	r3, [sp, #152]	; 0x98
 80147a4:	230b      	movs	r3, #11
 80147a6:	9320      	str	r3, [sp, #128]	; 0x80
 80147a8:	a81f      	add	r0, sp, #124	; 0x7c
 80147aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147ac:	4798      	blx	r3
 80147ae:	f89d 3076 	ldrb.w	r3, [sp, #118]	; 0x76
 80147b2:	07d8      	lsls	r0, r3, #31
 80147b4:	d502      	bpl.n	80147bc <_Paint+0x364>
 80147b6:	9923      	ldr	r1, [sp, #140]	; 0x8c
 80147b8:	3101      	adds	r1, #1
 80147ba:	9123      	str	r1, [sp, #140]	; 0x8c
 80147bc:	0799      	lsls	r1, r3, #30
 80147be:	d502      	bpl.n	80147c6 <_Paint+0x36e>
 80147c0:	9925      	ldr	r1, [sp, #148]	; 0x94
 80147c2:	3901      	subs	r1, #1
 80147c4:	9125      	str	r1, [sp, #148]	; 0x94
 80147c6:	075a      	lsls	r2, r3, #29
 80147c8:	d502      	bpl.n	80147d0 <_Paint+0x378>
 80147ca:	9924      	ldr	r1, [sp, #144]	; 0x90
 80147cc:	3101      	adds	r1, #1
 80147ce:	9124      	str	r1, [sp, #144]	; 0x90
 80147d0:	0718      	lsls	r0, r3, #28
 80147d2:	d502      	bpl.n	80147da <_Paint+0x382>
 80147d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80147d6:	3b01      	subs	r3, #1
 80147d8:	9326      	str	r3, [sp, #152]	; 0x98
 80147da:	2305      	movs	r3, #5
 80147dc:	9320      	str	r3, [sp, #128]	; 0x80
 80147de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80147e0:	a81f      	add	r0, sp, #124	; 0x7c
 80147e2:	4790      	blx	r2
 80147e4:	4621      	mov	r1, r4
 80147e6:	980c      	ldr	r0, [sp, #48]	; 0x30
 80147e8:	f7f6 f86c 	bl	800a8c4 <GUI_ARRAY_GetpItemLocked>
 80147ec:	4621      	mov	r1, r4
 80147ee:	9016      	str	r0, [sp, #88]	; 0x58
 80147f0:	9806      	ldr	r0, [sp, #24]
 80147f2:	f7f5 ff83 	bl	800a6fc <MULTIPAGE_IsPageEnabled>
 80147f6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80147f8:	b908      	cbnz	r0, 80147fe <_Paint+0x3a6>
 80147fa:	6959      	ldr	r1, [r3, #20]
 80147fc:	e002      	b.n	8014804 <_Paint+0x3ac>
 80147fe:	42b4      	cmp	r4, r6
 8014800:	d103      	bne.n	801480a <_Paint+0x3b2>
 8014802:	68d9      	ldr	r1, [r3, #12]
 8014804:	b109      	cbz	r1, 801480a <_Paint+0x3b2>
 8014806:	460b      	mov	r3, r1
 8014808:	e000      	b.n	801480c <_Paint+0x3b4>
 801480a:	691b      	ldr	r3, [r3, #16]
 801480c:	a816      	add	r0, sp, #88	; 0x58
 801480e:	9315      	str	r3, [sp, #84]	; 0x54
 8014810:	f7fe f8bc 	bl	801298c <GUI_ALLOC_UnlockH>
 8014814:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014816:	2800      	cmp	r0, #0
 8014818:	d063      	beq.n	80148e2 <_Paint+0x48a>
 801481a:	f7f5 ff9e 	bl	800a75a <GUI_DRAW__GetYSize>
 801481e:	4601      	mov	r1, r0
 8014820:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014822:	9100      	str	r1, [sp, #0]
 8014824:	f7f5 ff87 	bl	800a736 <GUI_DRAW__GetXSize>
 8014828:	9900      	ldr	r1, [sp, #0]
 801482a:	2900      	cmp	r1, #0
 801482c:	d059      	beq.n	80148e2 <_Paint+0x48a>
 801482e:	2800      	cmp	r0, #0
 8014830:	d057      	beq.n	80148e2 <_Paint+0x48a>
 8014832:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014834:	2302      	movs	r3, #2
 8014836:	fa0f fe8a 	sxth.w	lr, sl
 801483a:	b322      	cbz	r2, 8014886 <_Paint+0x42e>
 801483c:	9a03      	ldr	r2, [sp, #12]
 801483e:	fb92 fcf3 	sdiv	ip, r2, r3
 8014842:	fb91 f1f3 	sdiv	r1, r1, r3
 8014846:	44e6      	add	lr, ip
 8014848:	ebc1 010e 	rsb	r1, r1, lr
 801484c:	9124      	str	r1, [sp, #144]	; 0x90
 801484e:	f017 0f04 	tst.w	r7, #4
 8014852:	b229      	sxth	r1, r5
 8014854:	9126      	str	r1, [sp, #152]	; 0x98
 8014856:	fb90 f3f3 	sdiv	r3, r0, r3
 801485a:	d009      	beq.n	8014870 <_Paint+0x418>
 801485c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801485e:	fa02 f08b 	sxtah	r0, r2, fp
 8014862:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014864:	4410      	add	r0, r2
 8014866:	1ac3      	subs	r3, r0, r3
 8014868:	9323      	str	r3, [sp, #140]	; 0x8c
 801486a:	9b01      	ldr	r3, [sp, #4]
 801486c:	9325      	str	r3, [sp, #148]	; 0x94
 801486e:	e02e      	b.n	80148ce <_Paint+0x476>
 8014870:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014872:	fa0f f18b 	sxth.w	r1, fp
 8014876:	1ad3      	subs	r3, r2, r3
 8014878:	42b4      	cmp	r4, r6
 801487a:	9323      	str	r3, [sp, #140]	; 0x8c
 801487c:	9125      	str	r1, [sp, #148]	; 0x94
 801487e:	d126      	bne.n	80148ce <_Paint+0x476>
 8014880:	3302      	adds	r3, #2
 8014882:	9323      	str	r3, [sp, #140]	; 0x8c
 8014884:	e023      	b.n	80148ce <_Paint+0x476>
 8014886:	9a03      	ldr	r2, [sp, #12]
 8014888:	fb92 fcf3 	sdiv	ip, r2, r3
 801488c:	fb90 f0f3 	sdiv	r0, r0, r3
 8014890:	44e6      	add	lr, ip
 8014892:	ebc0 000e 	rsb	r0, r0, lr
 8014896:	9023      	str	r0, [sp, #140]	; 0x8c
 8014898:	f017 0f04 	tst.w	r7, #4
 801489c:	b228      	sxth	r0, r5
 801489e:	9025      	str	r0, [sp, #148]	; 0x94
 80148a0:	fb91 f3f3 	sdiv	r3, r1, r3
 80148a4:	d00a      	beq.n	80148bc <_Paint+0x464>
 80148a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80148a8:	fa0f f18b 	sxth.w	r1, fp
 80148ac:	1ad3      	subs	r3, r2, r3
 80148ae:	42b4      	cmp	r4, r6
 80148b0:	9324      	str	r3, [sp, #144]	; 0x90
 80148b2:	9126      	str	r1, [sp, #152]	; 0x98
 80148b4:	d10b      	bne.n	80148ce <_Paint+0x476>
 80148b6:	3302      	adds	r3, #2
 80148b8:	9324      	str	r3, [sp, #144]	; 0x90
 80148ba:	e008      	b.n	80148ce <_Paint+0x476>
 80148bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80148be:	fa02 f18b 	sxtah	r1, r2, fp
 80148c2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80148c4:	4411      	add	r1, r2
 80148c6:	1acb      	subs	r3, r1, r3
 80148c8:	9324      	str	r3, [sp, #144]	; 0x90
 80148ca:	9b01      	ldr	r3, [sp, #4]
 80148cc:	9326      	str	r3, [sp, #152]	; 0x98
 80148ce:	ab15      	add	r3, sp, #84	; 0x54
 80148d0:	931e      	str	r3, [sp, #120]	; 0x78
 80148d2:	2306      	movs	r3, #6
 80148d4:	9320      	str	r3, [sp, #128]	; 0x80
 80148d6:	a81f      	add	r0, sp, #124	; 0x7c
 80148d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80148da:	4790      	blx	r2
 80148dc:	2300      	movs	r3, #0
 80148de:	931e      	str	r3, [sp, #120]	; 0x78
 80148e0:	9315      	str	r3, [sp, #84]	; 0x54
 80148e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80148e4:	fa0f f38b 	sxth.w	r3, fp
 80148e8:	b1a2      	cbz	r2, 8014914 <_Paint+0x4bc>
 80148ea:	9a02      	ldr	r2, [sp, #8]
 80148ec:	b91c      	cbnz	r4, 80148f6 <_Paint+0x49e>
 80148ee:	b116      	cbz	r6, 80148f6 <_Paint+0x49e>
 80148f0:	fa02 f189 	sxtah	r1, r2, r9
 80148f4:	e001      	b.n	80148fa <_Paint+0x4a2>
 80148f6:	fa02 f18a 	sxtah	r1, r2, sl
 80148fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80148fc:	9124      	str	r1, [sp, #144]	; 0x90
 80148fe:	fa02 f185 	sxtah	r1, r2, r5
 8014902:	9126      	str	r1, [sp, #152]	; 0x98
 8014904:	0779      	lsls	r1, r7, #29
 8014906:	bf4b      	itete	mi
 8014908:	9323      	strmi	r3, [sp, #140]	; 0x8c
 801490a:	9a01      	ldrpl	r2, [sp, #4]
 801490c:	9b01      	ldrmi	r3, [sp, #4]
 801490e:	9223      	strpl	r2, [sp, #140]	; 0x8c
 8014910:	9325      	str	r3, [sp, #148]	; 0x94
 8014912:	e014      	b.n	801493e <_Paint+0x4e6>
 8014914:	9a02      	ldr	r2, [sp, #8]
 8014916:	b91c      	cbnz	r4, 8014920 <_Paint+0x4c8>
 8014918:	b116      	cbz	r6, 8014920 <_Paint+0x4c8>
 801491a:	fa02 f189 	sxtah	r1, r2, r9
 801491e:	e001      	b.n	8014924 <_Paint+0x4cc>
 8014920:	fa02 f18a 	sxtah	r1, r2, sl
 8014924:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014926:	9123      	str	r1, [sp, #140]	; 0x8c
 8014928:	fa02 f185 	sxtah	r1, r2, r5
 801492c:	077a      	lsls	r2, r7, #29
 801492e:	bf4e      	itee	mi
 8014930:	9a01      	ldrmi	r2, [sp, #4]
 8014932:	9324      	strpl	r3, [sp, #144]	; 0x90
 8014934:	9b01      	ldrpl	r3, [sp, #4]
 8014936:	9125      	str	r1, [sp, #148]	; 0x94
 8014938:	bf48      	it	mi
 801493a:	9224      	strmi	r2, [sp, #144]	; 0x90
 801493c:	9326      	str	r3, [sp, #152]	; 0x98
 801493e:	2312      	movs	r3, #18
 8014940:	9320      	str	r3, [sp, #128]	; 0x80
 8014942:	a81f      	add	r0, sp, #124	; 0x7c
 8014944:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014946:	4790      	blx	r2
 8014948:	3401      	adds	r4, #1
 801494a:	e65b      	b.n	8014604 <_Paint+0x1ac>
 801494c:	2000      	movs	r0, #0
 801494e:	f7f6 ffcf 	bl	800b8f0 <WM_SetUserClipRect>
 8014952:	b029      	add	sp, #164	; 0xa4
 8014954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014958:	20000318 	.word	0x20000318

0801495c <MULTIPAGE_SKIN__GetTabBarWidth>:
 801495c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801495e:	4606      	mov	r6, r0
 8014960:	f7fe f806 	bl	8012970 <GUI_ALLOC_LockH>
 8014964:	ac02      	add	r4, sp, #8
 8014966:	f844 0d04 	str.w	r0, [r4, #-4]!
 801496a:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801496c:	f7f5 ff28 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 8014970:	4605      	mov	r5, r0
 8014972:	4620      	mov	r0, r4
 8014974:	f7fe f80a 	bl	801298c <GUI_ALLOC_UnlockH>
 8014978:	4630      	mov	r0, r6
 801497a:	4629      	mov	r1, r5
 801497c:	f7ff fd3f 	bl	80143fe <MULTIPAGE_SKIN__GetPagePos>
 8014980:	3801      	subs	r0, #1
 8014982:	b002      	add	sp, #8
 8014984:	bd70      	pop	{r4, r5, r6, pc}

08014986 <MULTIPAGE_SKIN__GetTouchedPage>:
 8014986:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801498a:	b08b      	sub	sp, #44	; 0x2c
 801498c:	460f      	mov	r7, r1
 801498e:	4690      	mov	r8, r2
 8014990:	4682      	mov	sl, r0
 8014992:	f7fd ffed 	bl	8012970 <GUI_ALLOC_LockH>
 8014996:	9007      	str	r0, [sp, #28]
 8014998:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801499a:	f7f5 ff11 	bl	800a7c0 <GUI_ARRAY_GetNumItems>
 801499e:	9005      	str	r0, [sp, #20]
 80149a0:	a80a      	add	r0, sp, #40	; 0x28
 80149a2:	fa1f f888 	uxth.w	r8, r8
 80149a6:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80149aa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80149ac:	f8b3 9032 	ldrh.w	r9, [r3, #50]	; 0x32
 80149b0:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80149b2:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 80149b4:	f893 6080 	ldrb.w	r6, [r3, #128]	; 0x80
 80149b8:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 80149bc:	9202      	str	r2, [sp, #8]
 80149be:	9303      	str	r3, [sp, #12]
 80149c0:	f7fd ffe4 	bl	801298c <GUI_ALLOC_UnlockH>
 80149c4:	4650      	mov	r0, sl
 80149c6:	a908      	add	r1, sp, #32
 80149c8:	f7f5 fa5d 	bl	8009e86 <MULTIPAGE__GetTabBarRect>
 80149cc:	f019 0f08 	tst.w	r9, #8
 80149d0:	b2b8      	uxth	r0, r7
 80149d2:	f004 0404 	and.w	r4, r4, #4
 80149d6:	d014      	beq.n	8014a02 <MULTIPAGE_SKIN__GetTouchedPage+0x7c>
 80149d8:	af0a      	add	r7, sp, #40	; 0x28
 80149da:	f8cd 8004 	str.w	r8, [sp, #4]
 80149de:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80149e2:	f837 2d04 	ldrh.w	r2, [r7, #-4]!
 80149e6:	b12c      	cbz	r4, 80149f4 <MULTIPAGE_SKIN__GetTouchedPage+0x6e>
 80149e8:	46b8      	mov	r8, r7
 80149ea:	4619      	mov	r1, r3
 80149ec:	af08      	add	r7, sp, #32
 80149ee:	f10d 0422 	add.w	r4, sp, #34	; 0x22
 80149f2:	e01d      	b.n	8014a30 <MULTIPAGE_SKIN__GetTouchedPage+0xaa>
 80149f4:	4611      	mov	r1, r2
 80149f6:	f10d 0820 	add.w	r8, sp, #32
 80149fa:	461a      	mov	r2, r3
 80149fc:	f10d 0422 	add.w	r4, sp, #34	; 0x22
 8014a00:	e00c      	b.n	8014a1c <MULTIPAGE_SKIN__GetTouchedPage+0x96>
 8014a02:	9001      	str	r0, [sp, #4]
 8014a04:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8014a08:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8014a0c:	4640      	mov	r0, r8
 8014a0e:	b144      	cbz	r4, 8014a22 <MULTIPAGE_SKIN__GetTouchedPage+0x9c>
 8014a10:	4619      	mov	r1, r3
 8014a12:	f10d 0822 	add.w	r8, sp, #34	; 0x22
 8014a16:	f10d 0726 	add.w	r7, sp, #38	; 0x26
 8014a1a:	ac08      	add	r4, sp, #32
 8014a1c:	f04f 3bff 	mov.w	fp, #4294967295
 8014a20:	e008      	b.n	8014a34 <MULTIPAGE_SKIN__GetTouchedPage+0xae>
 8014a22:	4611      	mov	r1, r2
 8014a24:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 8014a28:	461a      	mov	r2, r3
 8014a2a:	f10d 0722 	add.w	r7, sp, #34	; 0x22
 8014a2e:	ac08      	add	r4, sp, #32
 8014a30:	f04f 0b01 	mov.w	fp, #1
 8014a34:	b200      	sxth	r0, r0
 8014a36:	b209      	sxth	r1, r1
 8014a38:	b212      	sxth	r2, r2
 8014a3a:	9004      	str	r0, [sp, #16]
 8014a3c:	f7ff fcb2 	bl	80143a4 <_IsBetween>
 8014a40:	b910      	cbnz	r0, 8014a48 <MULTIPAGE_SKIN__GetTouchedPage+0xc2>
 8014a42:	f04f 30ff 	mov.w	r0, #4294967295
 8014a46:	e053      	b.n	8014af0 <MULTIPAGE_SKIN__GetTouchedPage+0x16a>
 8014a48:	f9b4 c000 	ldrsh.w	ip, [r4]
 8014a4c:	b10d      	cbz	r5, 8014a52 <MULTIPAGE_SKIN__GetTouchedPage+0xcc>
 8014a4e:	46e1      	mov	r9, ip
 8014a50:	e001      	b.n	8014a56 <MULTIPAGE_SKIN__GetTouchedPage+0xd0>
 8014a52:	eb0c 0906 	add.w	r9, ip, r6
 8014a56:	4650      	mov	r0, sl
 8014a58:	4629      	mov	r1, r5
 8014a5a:	f7f5 f9cd 	bl	8009df8 <MULTIPAGE__GetPageWidth>
 8014a5e:	9b03      	ldr	r3, [sp, #12]
 8014a60:	4448      	add	r0, r9
 8014a62:	fb03 fb0b 	mul.w	fp, r3, fp
 8014a66:	f8cd b00c 	str.w	fp, [sp, #12]
 8014a6a:	1e44      	subs	r4, r0, #1
 8014a6c:	46ab      	mov	fp, r5
 8014a6e:	9b05      	ldr	r3, [sp, #20]
 8014a70:	459b      	cmp	fp, r3
 8014a72:	dae6      	bge.n	8014a42 <MULTIPAGE_SKIN__GetTouchedPage+0xbc>
 8014a74:	45ab      	cmp	fp, r5
 8014a76:	db37      	blt.n	8014ae8 <MULTIPAGE_SKIN__GetTouchedPage+0x162>
 8014a78:	9b02      	ldr	r3, [sp, #8]
 8014a7a:	459b      	cmp	fp, r3
 8014a7c:	d10b      	bne.n	8014a96 <MULTIPAGE_SKIN__GetTouchedPage+0x110>
 8014a7e:	9b01      	ldr	r3, [sp, #4]
 8014a80:	ebc6 0c09 	rsb	ip, r6, r9
 8014a84:	b218      	sxth	r0, r3
 8014a86:	19a2      	adds	r2, r4, r6
 8014a88:	4661      	mov	r1, ip
 8014a8a:	f1bb 0f00 	cmp.w	fp, #0
 8014a8e:	d120      	bne.n	8014ad2 <MULTIPAGE_SKIN__GetTouchedPage+0x14c>
 8014a90:	4611      	mov	r1, r2
 8014a92:	4662      	mov	r2, ip
 8014a94:	e01d      	b.n	8014ad2 <MULTIPAGE_SKIN__GetTouchedPage+0x14c>
 8014a96:	f9b7 1000 	ldrsh.w	r1, [r7]
 8014a9a:	9b03      	ldr	r3, [sp, #12]
 8014a9c:	9804      	ldr	r0, [sp, #16]
 8014a9e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8014aa2:	4419      	add	r1, r3
 8014aa4:	f7ff fc7e 	bl	80143a4 <_IsBetween>
 8014aa8:	b1b0      	cbz	r0, 8014ad8 <MULTIPAGE_SKIN__GetTouchedPage+0x152>
 8014aaa:	9b02      	ldr	r3, [sp, #8]
 8014aac:	1c5a      	adds	r2, r3, #1
 8014aae:	9b01      	ldr	r3, [sp, #4]
 8014ab0:	4593      	cmp	fp, r2
 8014ab2:	b218      	sxth	r0, r3
 8014ab4:	d104      	bne.n	8014ac0 <MULTIPAGE_SKIN__GetTouchedPage+0x13a>
 8014ab6:	45ab      	cmp	fp, r5
 8014ab8:	dd02      	ble.n	8014ac0 <MULTIPAGE_SKIN__GetTouchedPage+0x13a>
 8014aba:	eb09 0106 	add.w	r1, r9, r6
 8014abe:	e007      	b.n	8014ad0 <MULTIPAGE_SKIN__GetTouchedPage+0x14a>
 8014ac0:	9b02      	ldr	r3, [sp, #8]
 8014ac2:	1e5a      	subs	r2, r3, #1
 8014ac4:	4593      	cmp	fp, r2
 8014ac6:	4649      	mov	r1, r9
 8014ac8:	bf08      	it	eq
 8014aca:	ebc6 0204 	rsbeq	r2, r6, r4
 8014ace:	d000      	beq.n	8014ad2 <MULTIPAGE_SKIN__GetTouchedPage+0x14c>
 8014ad0:	4622      	mov	r2, r4
 8014ad2:	f7ff fc67 	bl	80143a4 <_IsBetween>
 8014ad6:	b950      	cbnz	r0, 8014aee <MULTIPAGE_SKIN__GetTouchedPage+0x168>
 8014ad8:	4650      	mov	r0, sl
 8014ada:	f10b 0101 	add.w	r1, fp, #1
 8014ade:	f7f5 f98b 	bl	8009df8 <MULTIPAGE__GetPageWidth>
 8014ae2:	f104 0901 	add.w	r9, r4, #1
 8014ae6:	4404      	add	r4, r0
 8014ae8:	f10b 0b01 	add.w	fp, fp, #1
 8014aec:	e7bf      	b.n	8014a6e <MULTIPAGE_SKIN__GetTouchedPage+0xe8>
 8014aee:	4658      	mov	r0, fp
 8014af0:	b00b      	add	sp, #44	; 0x2c
 8014af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014af8 <BUTTON_DrawSkinFlex>:
 8014af8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014afc:	6883      	ldr	r3, [r0, #8]
 8014afe:	4a8a      	ldr	r2, [pc, #552]	; (8014d28 <BUTTON_DrawSkinFlex+0x230>)
 8014b00:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 8014b04:	6843      	ldr	r3, [r0, #4]
 8014b06:	2b05      	cmp	r3, #5
 8014b08:	b088      	sub	sp, #32
 8014b0a:	4604      	mov	r4, r0
 8014b0c:	d00e      	beq.n	8014b2c <BUTTON_DrawSkinFlex+0x34>
 8014b0e:	dc06      	bgt.n	8014b1e <BUTTON_DrawSkinFlex+0x26>
 8014b10:	2b00      	cmp	r3, #0
 8014b12:	f040 8104 	bne.w	8014d1e <BUTTON_DrawSkinFlex+0x226>
 8014b16:	6800      	ldr	r0, [r0, #0]
 8014b18:	f7f6 fef6 	bl	800b908 <WM_SetHasTrans>
 8014b1c:	e0ff      	b.n	8014d1e <BUTTON_DrawSkinFlex+0x226>
 8014b1e:	2b06      	cmp	r3, #6
 8014b20:	f000 8088 	beq.w	8014c34 <BUTTON_DrawSkinFlex+0x13c>
 8014b24:	2b12      	cmp	r3, #18
 8014b26:	f000 80a9 	beq.w	8014c7c <BUTTON_DrawSkinFlex+0x184>
 8014b2a:	e0f8      	b.n	8014d1e <BUTTON_DrawSkinFlex+0x226>
 8014b2c:	69ee      	ldr	r6, [r5, #28]
 8014b2e:	2e00      	cmp	r6, #0
 8014b30:	d051      	beq.n	8014bd6 <BUTTON_DrawSkinFlex+0xde>
 8014b32:	9600      	str	r6, [sp, #0]
 8014b34:	682b      	ldr	r3, [r5, #0]
 8014b36:	9301      	str	r3, [sp, #4]
 8014b38:	686b      	ldr	r3, [r5, #4]
 8014b3a:	9302      	str	r3, [sp, #8]
 8014b3c:	68ab      	ldr	r3, [r5, #8]
 8014b3e:	9303      	str	r3, [sp, #12]
 8014b40:	3010      	adds	r0, #16
 8014b42:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8014b44:	f002 ffa2 	bl	8017a8c <GUI__DrawTwinArc4>
 8014b48:	2600      	movs	r6, #0
 8014b4a:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 8014b4e:	f7fc fd1f 	bl	8011590 <GUI_SetColor>
 8014b52:	69eb      	ldr	r3, [r5, #28]
 8014b54:	6960      	ldr	r0, [r4, #20]
 8014b56:	6921      	ldr	r1, [r4, #16]
 8014b58:	69a2      	ldr	r2, [r4, #24]
 8014b5a:	4430      	add	r0, r6
 8014b5c:	4419      	add	r1, r3
 8014b5e:	1ad2      	subs	r2, r2, r3
 8014b60:	f7fc fffe 	bl	8011b60 <GUI_DrawHLine>
 8014b64:	69eb      	ldr	r3, [r5, #28]
 8014b66:	69e0      	ldr	r0, [r4, #28]
 8014b68:	6921      	ldr	r1, [r4, #16]
 8014b6a:	69a2      	ldr	r2, [r4, #24]
 8014b6c:	1b80      	subs	r0, r0, r6
 8014b6e:	4419      	add	r1, r3
 8014b70:	1ad2      	subs	r2, r2, r3
 8014b72:	f7fc fff5 	bl	8011b60 <GUI_DrawHLine>
 8014b76:	69eb      	ldr	r3, [r5, #28]
 8014b78:	6920      	ldr	r0, [r4, #16]
 8014b7a:	6961      	ldr	r1, [r4, #20]
 8014b7c:	69e2      	ldr	r2, [r4, #28]
 8014b7e:	4430      	add	r0, r6
 8014b80:	4419      	add	r1, r3
 8014b82:	1ad2      	subs	r2, r2, r3
 8014b84:	f7fc ffca 	bl	8011b1c <GUI_DrawVLine>
 8014b88:	69eb      	ldr	r3, [r5, #28]
 8014b8a:	69a0      	ldr	r0, [r4, #24]
 8014b8c:	6961      	ldr	r1, [r4, #20]
 8014b8e:	69e2      	ldr	r2, [r4, #28]
 8014b90:	1b80      	subs	r0, r0, r6
 8014b92:	4419      	add	r1, r3
 8014b94:	1ad2      	subs	r2, r2, r3
 8014b96:	3601      	adds	r6, #1
 8014b98:	f7fc ffc0 	bl	8011b1c <GUI_DrawVLine>
 8014b9c:	2e02      	cmp	r6, #2
 8014b9e:	d1d4      	bne.n	8014b4a <BUTTON_DrawSkinFlex+0x52>
 8014ba0:	68a8      	ldr	r0, [r5, #8]
 8014ba2:	f7fc fcf5 	bl	8011590 <GUI_SetColor>
 8014ba6:	69eb      	ldr	r3, [r5, #28]
 8014ba8:	6920      	ldr	r0, [r4, #16]
 8014baa:	69e6      	ldr	r6, [r4, #28]
 8014bac:	6961      	ldr	r1, [r4, #20]
 8014bae:	18c2      	adds	r2, r0, r3
 8014bb0:	4419      	add	r1, r3
 8014bb2:	3002      	adds	r0, #2
 8014bb4:	1af3      	subs	r3, r6, r3
 8014bb6:	3a01      	subs	r2, #1
 8014bb8:	f7fc ff6a 	bl	8011a90 <GUI_FillRect>
 8014bbc:	69eb      	ldr	r3, [r5, #28]
 8014bbe:	69a2      	ldr	r2, [r4, #24]
 8014bc0:	69e6      	ldr	r6, [r4, #28]
 8014bc2:	6961      	ldr	r1, [r4, #20]
 8014bc4:	1ad0      	subs	r0, r2, r3
 8014bc6:	4419      	add	r1, r3
 8014bc8:	3001      	adds	r0, #1
 8014bca:	1af3      	subs	r3, r6, r3
 8014bcc:	3a02      	subs	r2, #2
 8014bce:	f7fc ff5f 	bl	8011a90 <GUI_FillRect>
 8014bd2:	69ee      	ldr	r6, [r5, #28]
 8014bd4:	e00f      	b.n	8014bf6 <BUTTON_DrawSkinFlex+0xfe>
 8014bd6:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 8014bda:	f7fc fcd9 	bl	8011590 <GUI_SetColor>
 8014bde:	f104 0010 	add.w	r0, r4, #16
 8014be2:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8014be4:	4430      	add	r0, r6
 8014be6:	4431      	add	r1, r6
 8014be8:	1b92      	subs	r2, r2, r6
 8014bea:	1b9b      	subs	r3, r3, r6
 8014bec:	3601      	adds	r6, #1
 8014bee:	f004 f8af 	bl	8018d50 <GUI_DrawRect>
 8014bf2:	2e02      	cmp	r6, #2
 8014bf4:	d1ef      	bne.n	8014bd6 <BUTTON_DrawSkinFlex+0xde>
 8014bf6:	f104 0010 	add.w	r0, r4, #16
 8014bfa:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8014bfc:	68ef      	ldr	r7, [r5, #12]
 8014bfe:	9700      	str	r7, [sp, #0]
 8014c00:	692f      	ldr	r7, [r5, #16]
 8014c02:	9701      	str	r7, [sp, #4]
 8014c04:	440b      	add	r3, r1
 8014c06:	4430      	add	r0, r6
 8014c08:	1b92      	subs	r2, r2, r6
 8014c0a:	3102      	adds	r1, #2
 8014c0c:	105b      	asrs	r3, r3, #1
 8014c0e:	f003 fed9 	bl	80189c4 <GUI_DrawGradientV>
 8014c12:	69e3      	ldr	r3, [r4, #28]
 8014c14:	6962      	ldr	r2, [r4, #20]
 8014c16:	6920      	ldr	r0, [r4, #16]
 8014c18:	441a      	add	r2, r3
 8014c1a:	1051      	asrs	r1, r2, #1
 8014c1c:	69a2      	ldr	r2, [r4, #24]
 8014c1e:	696c      	ldr	r4, [r5, #20]
 8014c20:	9400      	str	r4, [sp, #0]
 8014c22:	69ac      	ldr	r4, [r5, #24]
 8014c24:	9401      	str	r4, [sp, #4]
 8014c26:	4430      	add	r0, r6
 8014c28:	3101      	adds	r1, #1
 8014c2a:	1b92      	subs	r2, r2, r6
 8014c2c:	3b02      	subs	r3, #2
 8014c2e:	f003 fec9 	bl	80189c4 <GUI_DrawGradientV>
 8014c32:	e074      	b.n	8014d1e <BUTTON_DrawSkinFlex+0x226>
 8014c34:	6800      	ldr	r0, [r0, #0]
 8014c36:	f7fd fe9b 	bl	8012970 <GUI_ALLOC_LockH>
 8014c3a:	9004      	str	r0, [sp, #16]
 8014c3c:	6820      	ldr	r0, [r4, #0]
 8014c3e:	f7f6 fd67 	bl	800b710 <WM__IsEnabled>
 8014c42:	9b04      	ldr	r3, [sp, #16]
 8014c44:	b130      	cbz	r0, 8014c54 <BUTTON_DrawSkinFlex+0x15c>
 8014c46:	68a2      	ldr	r2, [r4, #8]
 8014c48:	b952      	cbnz	r2, 8014c60 <BUTTON_DrawSkinFlex+0x168>
 8014c4a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8014c4c:	3200      	adds	r2, #0
 8014c4e:	bf18      	it	ne
 8014c50:	2201      	movne	r2, #1
 8014c52:	e006      	b.n	8014c62 <BUTTON_DrawSkinFlex+0x16a>
 8014c54:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8014c56:	2a00      	cmp	r2, #0
 8014c58:	bf0c      	ite	eq
 8014c5a:	2200      	moveq	r2, #0
 8014c5c:	2202      	movne	r2, #2
 8014c5e:	e000      	b.n	8014c62 <BUTTON_DrawSkinFlex+0x16a>
 8014c60:	2200      	movs	r2, #0
 8014c62:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8014c66:	a804      	add	r0, sp, #16
 8014c68:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8014c6a:	f7fd fe8f 	bl	801298c <GUI_ALLOC_UnlockH>
 8014c6e:	2200      	movs	r2, #0
 8014c70:	4628      	mov	r0, r5
 8014c72:	6821      	ldr	r1, [r4, #0]
 8014c74:	4613      	mov	r3, r2
 8014c76:	f7f5 fd45 	bl	800a704 <GUI_DRAW__Draw>
 8014c7a:	e050      	b.n	8014d1e <BUTTON_DrawSkinFlex+0x226>
 8014c7c:	6800      	ldr	r0, [r0, #0]
 8014c7e:	f7fd fe77 	bl	8012970 <GUI_ALLOC_LockH>
 8014c82:	ae08      	add	r6, sp, #32
 8014c84:	6e87      	ldr	r7, [r0, #104]	; 0x68
 8014c86:	f846 0d10 	str.w	r0, [r6, #-16]!
 8014c8a:	2f00      	cmp	r7, #0
 8014c8c:	d044      	beq.n	8014d18 <BUTTON_DrawSkinFlex+0x220>
 8014c8e:	68a2      	ldr	r2, [r4, #8]
 8014c90:	f9b0 805c 	ldrsh.w	r8, [r0, #92]	; 0x5c
 8014c94:	b122      	cbz	r2, 8014ca0 <BUTTON_DrawSkinFlex+0x1a8>
 8014c96:	2a03      	cmp	r2, #3
 8014c98:	bf14      	ite	ne
 8014c9a:	2100      	movne	r1, #0
 8014c9c:	2102      	moveq	r1, #2
 8014c9e:	e000      	b.n	8014ca2 <BUTTON_DrawSkinFlex+0x1aa>
 8014ca0:	2101      	movs	r1, #1
 8014ca2:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8014ca6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014ca8:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 8014caa:	f7fc fc43 	bl	8011534 <GUI_SetFont>
 8014cae:	4620      	mov	r0, r4
 8014cb0:	f7fc fc6e 	bl	8011590 <GUI_SetColor>
 8014cb4:	a806      	add	r0, sp, #24
 8014cb6:	f003 fb3d 	bl	8018334 <GUI_GetClientRect>
 8014cba:	8bab      	ldrh	r3, [r5, #28]
 8014cbc:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8014cc0:	441a      	add	r2, r3
 8014cc2:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014cc6:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8014cca:	1ad3      	subs	r3, r2, r3
 8014ccc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014cd0:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8014cd4:	3302      	adds	r3, #2
 8014cd6:	f8ad 301a 	strh.w	r3, [sp, #26]
 8014cda:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 8014cde:	3b02      	subs	r3, #2
 8014ce0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014ce4:	9b04      	ldr	r3, [sp, #16]
 8014ce6:	a806      	add	r0, sp, #24
 8014ce8:	f9b3 105e 	ldrsh.w	r1, [r3, #94]	; 0x5e
 8014cec:	f9b3 2060 	ldrsh.w	r2, [r3, #96]	; 0x60
 8014cf0:	f7fc fdb0 	bl	8011854 <GUI_MoveRect>
 8014cf4:	4630      	mov	r0, r6
 8014cf6:	f7fd fe49 	bl	801298c <GUI_ALLOC_UnlockH>
 8014cfa:	2002      	movs	r0, #2
 8014cfc:	f7fc fc10 	bl	8011520 <GUI_SetTextMode>
 8014d00:	4638      	mov	r0, r7
 8014d02:	f7fd fe35 	bl	8012970 <GUI_ALLOC_LockH>
 8014d06:	ac08      	add	r4, sp, #32
 8014d08:	a906      	add	r1, sp, #24
 8014d0a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8014d0e:	4642      	mov	r2, r8
 8014d10:	f003 ffd9 	bl	8018cc6 <GUI_DispStringInRect>
 8014d14:	4620      	mov	r0, r4
 8014d16:	e000      	b.n	8014d1a <BUTTON_DrawSkinFlex+0x222>
 8014d18:	4630      	mov	r0, r6
 8014d1a:	f7fd fe37 	bl	801298c <GUI_ALLOC_UnlockH>
 8014d1e:	2000      	movs	r0, #0
 8014d20:	b008      	add	sp, #32
 8014d22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014d26:	bf00      	nop
 8014d28:	0802094c 	.word	0x0802094c

08014d2c <_Create>:
 8014d2c:	b530      	push	{r4, r5, lr}
 8014d2e:	b08b      	sub	sp, #44	; 0x2c
 8014d30:	2100      	movs	r1, #0
 8014d32:	4604      	mov	r4, r0
 8014d34:	2224      	movs	r2, #36	; 0x24
 8014d36:	a801      	add	r0, sp, #4
 8014d38:	f005 faf7 	bl	801a32a <memset>
 8014d3c:	4620      	mov	r0, r4
 8014d3e:	f7fd fe17 	bl	8012970 <GUI_ALLOC_LockH>
 8014d42:	ab0a      	add	r3, sp, #40	; 0x28
 8014d44:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8014d46:	f843 0d28 	str.w	r0, [r3, #-40]!
 8014d4a:	6895      	ldr	r5, [r2, #8]
 8014d4c:	4668      	mov	r0, sp
 8014d4e:	f7fd fe1d 	bl	801298c <GUI_ALLOC_UnlockH>
 8014d52:	2300      	movs	r3, #0
 8014d54:	9302      	str	r3, [sp, #8]
 8014d56:	9401      	str	r4, [sp, #4]
 8014d58:	682b      	ldr	r3, [r5, #0]
 8014d5a:	a801      	add	r0, sp, #4
 8014d5c:	4798      	blx	r3
 8014d5e:	b00b      	add	sp, #44	; 0x2c
 8014d60:	bd30      	pop	{r4, r5, pc}

08014d62 <_Paint>:
 8014d62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d66:	b08a      	sub	sp, #40	; 0x28
 8014d68:	4605      	mov	r5, r0
 8014d6a:	f7fd fe01 	bl	8012970 <GUI_ALLOC_LockH>
 8014d6e:	4603      	mov	r3, r0
 8014d70:	a80a      	add	r0, sp, #40	; 0x28
 8014d72:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 8014d74:	f840 3d28 	str.w	r3, [r0, #-40]!
 8014d78:	4668      	mov	r0, sp
 8014d7a:	6d9c      	ldr	r4, [r3, #88]	; 0x58
 8014d7c:	8e5f      	ldrh	r7, [r3, #50]	; 0x32
 8014d7e:	f7fd fe05 	bl	801298c <GUI_ALLOC_UnlockH>
 8014d82:	4628      	mov	r0, r5
 8014d84:	f7f7 f924 	bl	800bfd0 <WM_GetWindowSizeX>
 8014d88:	4680      	mov	r8, r0
 8014d8a:	4628      	mov	r0, r5
 8014d8c:	f7f7 f935 	bl	800bffa <WM_GetWindowSizeY>
 8014d90:	2300      	movs	r3, #0
 8014d92:	9306      	str	r3, [sp, #24]
 8014d94:	9305      	str	r3, [sp, #20]
 8014d96:	3801      	subs	r0, #1
 8014d98:	f108 33ff 	add.w	r3, r8, #4294967295
 8014d9c:	f016 0610 	ands.w	r6, r6, #16
 8014da0:	9501      	str	r5, [sp, #4]
 8014da2:	9307      	str	r3, [sp, #28]
 8014da4:	9008      	str	r0, [sp, #32]
 8014da6:	d001      	beq.n	8014dac <_Paint+0x4a>
 8014da8:	2303      	movs	r3, #3
 8014daa:	e007      	b.n	8014dbc <_Paint+0x5a>
 8014dac:	05fa      	lsls	r2, r7, #23
 8014dae:	d501      	bpl.n	8014db4 <_Paint+0x52>
 8014db0:	9603      	str	r6, [sp, #12]
 8014db2:	e004      	b.n	8014dbe <_Paint+0x5c>
 8014db4:	07fb      	lsls	r3, r7, #31
 8014db6:	bf4c      	ite	mi
 8014db8:	2301      	movmi	r3, #1
 8014dba:	2302      	movpl	r3, #2
 8014dbc:	9303      	str	r3, [sp, #12]
 8014dbe:	2305      	movs	r3, #5
 8014dc0:	9302      	str	r3, [sp, #8]
 8014dc2:	a801      	add	r0, sp, #4
 8014dc4:	47a0      	blx	r4
 8014dc6:	2306      	movs	r3, #6
 8014dc8:	9302      	str	r3, [sp, #8]
 8014dca:	a801      	add	r0, sp, #4
 8014dcc:	47a0      	blx	r4
 8014dce:	2312      	movs	r3, #18
 8014dd0:	9302      	str	r3, [sp, #8]
 8014dd2:	a801      	add	r0, sp, #4
 8014dd4:	47a0      	blx	r4
 8014dd6:	230a      	movs	r3, #10
 8014dd8:	9302      	str	r3, [sp, #8]
 8014dda:	a801      	add	r0, sp, #4
 8014ddc:	47a0      	blx	r4
 8014dde:	b00a      	add	sp, #40	; 0x28
 8014de0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014de4 <WM__SendMessageNoPara>:
 8014de4:	b530      	push	{r4, r5, lr}
 8014de6:	b085      	sub	sp, #20
 8014de8:	4604      	mov	r4, r0
 8014dea:	2210      	movs	r2, #16
 8014dec:	460d      	mov	r5, r1
 8014dee:	4668      	mov	r0, sp
 8014df0:	2100      	movs	r1, #0
 8014df2:	f005 fa9a 	bl	801a32a <memset>
 8014df6:	4620      	mov	r0, r4
 8014df8:	f7fd fdb0 	bl	801295c <GUI_ALLOC_h2p>
 8014dfc:	6903      	ldr	r3, [r0, #16]
 8014dfe:	b11b      	cbz	r3, 8014e08 <WM__SendMessageNoPara+0x24>
 8014e00:	9401      	str	r4, [sp, #4]
 8014e02:	9500      	str	r5, [sp, #0]
 8014e04:	4668      	mov	r0, sp
 8014e06:	4798      	blx	r3
 8014e08:	b005      	add	sp, #20
 8014e0a:	bd30      	pop	{r4, r5, pc}

08014e0c <WM__SendMessage>:
 8014e0c:	b570      	push	{r4, r5, r6, lr}
 8014e0e:	4c0d      	ldr	r4, [pc, #52]	; (8014e44 <WM__SendMessage+0x38>)
 8014e10:	6823      	ldr	r3, [r4, #0]
 8014e12:	2b13      	cmp	r3, #19
 8014e14:	4606      	mov	r6, r0
 8014e16:	460d      	mov	r5, r1
 8014e18:	dc12      	bgt.n	8014e40 <WM__SendMessage+0x34>
 8014e1a:	f7fd fd9f 	bl	801295c <GUI_ALLOC_h2p>
 8014e1e:	6903      	ldr	r3, [r0, #16]
 8014e20:	606e      	str	r6, [r5, #4]
 8014e22:	b143      	cbz	r3, 8014e36 <WM__SendMessage+0x2a>
 8014e24:	6822      	ldr	r2, [r4, #0]
 8014e26:	4628      	mov	r0, r5
 8014e28:	3201      	adds	r2, #1
 8014e2a:	6022      	str	r2, [r4, #0]
 8014e2c:	4798      	blx	r3
 8014e2e:	6823      	ldr	r3, [r4, #0]
 8014e30:	3b01      	subs	r3, #1
 8014e32:	6023      	str	r3, [r4, #0]
 8014e34:	bd70      	pop	{r4, r5, r6, pc}
 8014e36:	4628      	mov	r0, r5
 8014e38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014e3c:	f7f8 bb08 	b.w	800d450 <WM_DefaultProc>
 8014e40:	bd70      	pop	{r4, r5, r6, pc}
 8014e42:	bf00      	nop
 8014e44:	200196a4 	.word	0x200196a4

08014e48 <WM__GetPrevSibling>:
 8014e48:	b538      	push	{r3, r4, r5, lr}
 8014e4a:	4605      	mov	r5, r0
 8014e4c:	f000 f82e 	bl	8014eac <WM__GetFirstSibling>
 8014e50:	4604      	mov	r4, r0
 8014e52:	b154      	cbz	r4, 8014e6a <WM__GetPrevSibling+0x22>
 8014e54:	42ac      	cmp	r4, r5
 8014e56:	d007      	beq.n	8014e68 <WM__GetPrevSibling+0x20>
 8014e58:	4620      	mov	r0, r4
 8014e5a:	f7fd fd7f 	bl	801295c <GUI_ALLOC_h2p>
 8014e5e:	6a03      	ldr	r3, [r0, #32]
 8014e60:	42ab      	cmp	r3, r5
 8014e62:	d002      	beq.n	8014e6a <WM__GetPrevSibling+0x22>
 8014e64:	461c      	mov	r4, r3
 8014e66:	e7f4      	b.n	8014e52 <WM__GetPrevSibling+0xa>
 8014e68:	2400      	movs	r4, #0
 8014e6a:	4620      	mov	r0, r4
 8014e6c:	bd38      	pop	{r3, r4, r5, pc}

08014e6e <WM__GetLastSibling>:
 8014e6e:	b510      	push	{r4, lr}
 8014e70:	4604      	mov	r4, r0
 8014e72:	b130      	cbz	r0, 8014e82 <WM__GetLastSibling+0x14>
 8014e74:	4620      	mov	r0, r4
 8014e76:	f7fd fd71 	bl	801295c <GUI_ALLOC_h2p>
 8014e7a:	6a03      	ldr	r3, [r0, #32]
 8014e7c:	b10b      	cbz	r3, 8014e82 <WM__GetLastSibling+0x14>
 8014e7e:	461c      	mov	r4, r3
 8014e80:	e7f8      	b.n	8014e74 <WM__GetLastSibling+0x6>
 8014e82:	4620      	mov	r0, r4
 8014e84:	bd10      	pop	{r4, pc}
	...

08014e88 <WM__GetFocussedChild>:
 8014e88:	b538      	push	{r3, r4, r5, lr}
 8014e8a:	4d06      	ldr	r5, [pc, #24]	; (8014ea4 <WM__GetFocussedChild+0x1c>)
 8014e8c:	4c06      	ldr	r4, [pc, #24]	; (8014ea8 <WM__GetFocussedChild+0x20>)
 8014e8e:	682b      	ldr	r3, [r5, #0]
 8014e90:	4601      	mov	r1, r0
 8014e92:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014e96:	f7f6 fc44 	bl	800b722 <WM__IsChild>
 8014e9a:	b110      	cbz	r0, 8014ea2 <WM__GetFocussedChild+0x1a>
 8014e9c:	682b      	ldr	r3, [r5, #0]
 8014e9e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014ea2:	bd38      	pop	{r3, r4, r5, pc}
 8014ea4:	20019c24 	.word	0x20019c24
 8014ea8:	20019c14 	.word	0x20019c14

08014eac <WM__GetFirstSibling>:
 8014eac:	b508      	push	{r3, lr}
 8014eae:	f7f7 f8b9 	bl	800c024 <WM_GetParent>
 8014eb2:	b118      	cbz	r0, 8014ebc <WM__GetFirstSibling+0x10>
 8014eb4:	f7fd fd52 	bl	801295c <GUI_ALLOC_h2p>
 8014eb8:	69c0      	ldr	r0, [r0, #28]
 8014eba:	bd08      	pop	{r3, pc}
 8014ebc:	bd08      	pop	{r3, pc}
	...

08014ec0 <WM_ValidateWindow>:
 8014ec0:	b507      	push	{r0, r1, r2, lr}
 8014ec2:	b178      	cbz	r0, 8014ee4 <WM_ValidateWindow+0x24>
 8014ec4:	f7fd fd54 	bl	8012970 <GUI_ALLOC_LockH>
 8014ec8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8014eca:	9001      	str	r0, [sp, #4]
 8014ecc:	069a      	lsls	r2, r3, #26
 8014ece:	d506      	bpl.n	8014ede <WM_ValidateWindow+0x1e>
 8014ed0:	f023 0320 	bic.w	r3, r3, #32
 8014ed4:	6283      	str	r3, [r0, #40]	; 0x28
 8014ed6:	4b05      	ldr	r3, [pc, #20]	; (8014eec <WM_ValidateWindow+0x2c>)
 8014ed8:	881a      	ldrh	r2, [r3, #0]
 8014eda:	3a01      	subs	r2, #1
 8014edc:	801a      	strh	r2, [r3, #0]
 8014ede:	a801      	add	r0, sp, #4
 8014ee0:	f7fd fd54 	bl	801298c <GUI_ALLOC_UnlockH>
 8014ee4:	b003      	add	sp, #12
 8014ee6:	f85d fb04 	ldr.w	pc, [sp], #4
 8014eea:	bf00      	nop
 8014eec:	20019c1c 	.word	0x20019c1c

08014ef0 <WM__IsInModalArea>:
 8014ef0:	4b12      	ldr	r3, [pc, #72]	; (8014f3c <WM__IsInModalArea+0x4c>)
 8014ef2:	681b      	ldr	r3, [r3, #0]
 8014ef4:	2b00      	cmp	r3, #0
 8014ef6:	b570      	push	{r4, r5, r6, lr}
 8014ef8:	4604      	mov	r4, r0
 8014efa:	da0f      	bge.n	8014f1c <WM__IsInModalArea+0x2c>
 8014efc:	4e10      	ldr	r6, [pc, #64]	; (8014f40 <WM__IsInModalArea+0x50>)
 8014efe:	4d11      	ldr	r5, [pc, #68]	; (8014f44 <WM__IsInModalArea+0x54>)
 8014f00:	6833      	ldr	r3, [r6, #0]
 8014f02:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
 8014f06:	4620      	mov	r0, r4
 8014f08:	6859      	ldr	r1, [r3, #4]
 8014f0a:	f7f6 fc1e 	bl	800b74a <WM__IsAncestor>
 8014f0e:	6833      	ldr	r3, [r6, #0]
 8014f10:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8014f14:	686a      	ldr	r2, [r5, #4]
 8014f16:	686b      	ldr	r3, [r5, #4]
 8014f18:	b942      	cbnz	r2, 8014f2c <WM__IsInModalArea+0x3c>
 8014f1a:	e00c      	b.n	8014f36 <WM__IsInModalArea+0x46>
 8014f1c:	4a0a      	ldr	r2, [pc, #40]	; (8014f48 <WM__IsInModalArea+0x58>)
 8014f1e:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8014f22:	f7f6 fc12 	bl	800b74a <WM__IsAncestor>
 8014f26:	2800      	cmp	r0, #0
 8014f28:	d1e8      	bne.n	8014efc <WM__IsInModalArea+0xc>
 8014f2a:	bd70      	pop	{r4, r5, r6, pc}
 8014f2c:	b918      	cbnz	r0, 8014f36 <WM__IsInModalArea+0x46>
 8014f2e:	1ae3      	subs	r3, r4, r3
 8014f30:	4258      	negs	r0, r3
 8014f32:	4158      	adcs	r0, r3
 8014f34:	bd70      	pop	{r4, r5, r6, pc}
 8014f36:	2001      	movs	r0, #1
 8014f38:	bd70      	pop	{r4, r5, r6, pc}
 8014f3a:	bf00      	nop
 8014f3c:	20000314 	.word	0x20000314
 8014f40:	20019c24 	.word	0x20019c24
 8014f44:	20019d8c 	.word	0x20019d8c
 8014f48:	20019c04 	.word	0x20019c04

08014f4c <WM__SendPIDMessage>:
 8014f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014f4e:	4606      	mov	r6, r0
 8014f50:	460c      	mov	r4, r1
 8014f52:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 8014f54:	b085      	sub	sp, #20
 8014f56:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 8014f5a:	230d      	movs	r3, #13
 8014f5c:	9602      	str	r6, [sp, #8]
 8014f5e:	9300      	str	r3, [sp, #0]
 8014f60:	4637      	mov	r7, r6
 8014f62:	4638      	mov	r0, r7
 8014f64:	f7f6 ffec 	bl	800bf40 <WM_IsWindow>
 8014f68:	b150      	cbz	r0, 8014f80 <WM__SendPIDMessage+0x34>
 8014f6a:	4638      	mov	r0, r7
 8014f6c:	f7f7 f85a 	bl	800c024 <WM_GetParent>
 8014f70:	4607      	mov	r7, r0
 8014f72:	2800      	cmp	r0, #0
 8014f74:	d0f5      	beq.n	8014f62 <WM__SendPIDMessage+0x16>
 8014f76:	4669      	mov	r1, sp
 8014f78:	9403      	str	r4, [sp, #12]
 8014f7a:	f004 facc 	bl	8019516 <WM__SendMessageIfEnabled>
 8014f7e:	e7f0      	b.n	8014f62 <WM__SendPIDMessage+0x16>
 8014f80:	4630      	mov	r0, r6
 8014f82:	4621      	mov	r1, r4
 8014f84:	f004 fac7 	bl	8019516 <WM__SendMessageIfEnabled>
 8014f88:	b005      	add	sp, #20
 8014f8a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014f8c <WM__SendTouchMessage>:
 8014f8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014f8e:	68cc      	ldr	r4, [r1, #12]
 8014f90:	4606      	mov	r6, r0
 8014f92:	460d      	mov	r5, r1
 8014f94:	b194      	cbz	r4, 8014fbc <WM__SendTouchMessage+0x30>
 8014f96:	f7fd fceb 	bl	8012970 <GUI_ALLOC_LockH>
 8014f9a:	ab02      	add	r3, sp, #8
 8014f9c:	4602      	mov	r2, r0
 8014f9e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8014fa2:	6821      	ldr	r1, [r4, #0]
 8014fa4:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014fa8:	1a09      	subs	r1, r1, r0
 8014faa:	6021      	str	r1, [r4, #0]
 8014fac:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 8014fb0:	6862      	ldr	r2, [r4, #4]
 8014fb2:	1a52      	subs	r2, r2, r1
 8014fb4:	6062      	str	r2, [r4, #4]
 8014fb6:	4618      	mov	r0, r3
 8014fb8:	f7fd fce8 	bl	801298c <GUI_ALLOC_UnlockH>
 8014fbc:	4630      	mov	r0, r6
 8014fbe:	4629      	mov	r1, r5
 8014fc0:	f7ff ffc4 	bl	8014f4c <WM__SendPIDMessage>
 8014fc4:	b002      	add	sp, #8
 8014fc6:	bd70      	pop	{r4, r5, r6, pc}

08014fc8 <WM_HandlePID>:
 8014fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fcc:	b097      	sub	sp, #92	; 0x5c
 8014fce:	ae06      	add	r6, sp, #24
 8014fd0:	f04f 080c 	mov.w	r8, #12
 8014fd4:	2100      	movs	r1, #0
 8014fd6:	4642      	mov	r2, r8
 8014fd8:	4630      	mov	r0, r6
 8014fda:	f005 f9a6 	bl	801a32a <memset>
 8014fde:	f7fc fc01 	bl	80117e4 <GUI_PID_IsEmpty>
 8014fe2:	b108      	cbz	r0, 8014fe8 <WM_HandlePID+0x20>
 8014fe4:	2000      	movs	r0, #0
 8014fe6:	e1aa      	b.n	801533e <WM_HandlePID+0x376>
 8014fe8:	ac09      	add	r4, sp, #36	; 0x24
 8014fea:	4620      	mov	r0, r4
 8014fec:	f7fc fb7e 	bl	80116ec <GUI_PID_GetState>
 8014ff0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ff2:	4dad      	ldr	r5, [pc, #692]	; (80152a8 <WM_HandlePID+0x2e0>)
 8014ff4:	4fad      	ldr	r7, [pc, #692]	; (80152ac <WM_HandlePID+0x2e4>)
 8014ff6:	1c5a      	adds	r2, r3, #1
 8014ff8:	d112      	bne.n	8015020 <WM_HandlePID+0x58>
 8014ffa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014ffc:	3301      	adds	r3, #1
 8014ffe:	d11e      	bne.n	801503e <WM_HandlePID+0x76>
 8015000:	682b      	ldr	r3, [r5, #0]
 8015002:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8015006:	fb08 f803 	mul.w	r8, r8, r3
 801500a:	eb07 0308 	add.w	r3, r7, r8
 801500e:	7a19      	ldrb	r1, [r3, #8]
 8015010:	4291      	cmp	r1, r2
 8015012:	d0e7      	beq.n	8014fe4 <WM_HandlePID+0x1c>
 8015014:	f857 2008 	ldr.w	r2, [r7, r8]
 8015018:	685b      	ldr	r3, [r3, #4]
 801501a:	9209      	str	r2, [sp, #36]	; 0x24
 801501c:	930a      	str	r3, [sp, #40]	; 0x28
 801501e:	e00e      	b.n	801503e <WM_HandlePID+0x76>
 8015020:	2b00      	cmp	r3, #0
 8015022:	db0c      	blt.n	801503e <WM_HandlePID+0x76>
 8015024:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015026:	2a00      	cmp	r2, #0
 8015028:	db09      	blt.n	801503e <WM_HandlePID+0x76>
 801502a:	49a1      	ldr	r1, [pc, #644]	; (80152b0 <WM_HandlePID+0x2e8>)
 801502c:	f9b1 1000 	ldrsh.w	r1, [r1]
 8015030:	440b      	add	r3, r1
 8015032:	9309      	str	r3, [sp, #36]	; 0x24
 8015034:	4b9f      	ldr	r3, [pc, #636]	; (80152b4 <WM_HandlePID+0x2ec>)
 8015036:	f9b3 3000 	ldrsh.w	r3, [r3]
 801503a:	441a      	add	r2, r3
 801503c:	920a      	str	r2, [sp, #40]	; 0x28
 801503e:	a804      	add	r0, sp, #16
 8015040:	f000 f9f6 	bl	8015430 <WM__AddCriticalHandle>
 8015044:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8015048:	2b01      	cmp	r3, #1
 801504a:	bf98      	it	ls
 801504c:	602b      	strls	r3, [r5, #0]
 801504e:	6828      	ldr	r0, [r5, #0]
 8015050:	a901      	add	r1, sp, #4
 8015052:	aa02      	add	r2, sp, #8
 8015054:	f7fc faba 	bl	80115cc <GUI_GetLayerPosEx>
 8015058:	9b01      	ldr	r3, [sp, #4]
 801505a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801505c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801505e:	1ac0      	subs	r0, r0, r3
 8015060:	9b02      	ldr	r3, [sp, #8]
 8015062:	9009      	str	r0, [sp, #36]	; 0x24
 8015064:	1ac9      	subs	r1, r1, r3
 8015066:	682b      	ldr	r3, [r5, #0]
 8015068:	910a      	str	r1, [sp, #40]	; 0x28
 801506a:	220c      	movs	r2, #12
 801506c:	435a      	muls	r2, r3
 801506e:	18bb      	adds	r3, r7, r2
 8015070:	58ba      	ldr	r2, [r7, r2]
 8015072:	4282      	cmp	r2, r0
 8015074:	d108      	bne.n	8015088 <WM_HandlePID+0xc0>
 8015076:	685a      	ldr	r2, [r3, #4]
 8015078:	428a      	cmp	r2, r1
 801507a:	d105      	bne.n	8015088 <WM_HandlePID+0xc0>
 801507c:	7a1a      	ldrb	r2, [r3, #8]
 801507e:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8015082:	429a      	cmp	r2, r3
 8015084:	f000 8156 	beq.w	8015334 <WM_HandlePID+0x36c>
 8015088:	f89d 202d 	ldrb.w	r2, [sp, #45]	; 0x2d
 801508c:	f003 fe20 	bl	8018cd0 <GUI_CURSOR_SetPositionEx>
 8015090:	4b89      	ldr	r3, [pc, #548]	; (80152b8 <WM_HandlePID+0x2f0>)
 8015092:	681b      	ldr	r3, [r3, #0]
 8015094:	b113      	cbz	r3, 801509c <WM_HandlePID+0xd4>
 8015096:	4620      	mov	r0, r4
 8015098:	2100      	movs	r1, #0
 801509a:	4798      	blx	r3
 801509c:	682b      	ldr	r3, [r5, #0]
 801509e:	4a87      	ldr	r2, [pc, #540]	; (80152bc <WM_HandlePID+0x2f4>)
 80150a0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80150a4:	b918      	cbnz	r0, 80150ae <WM_HandlePID+0xe6>
 80150a6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80150a8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80150aa:	f7f6 fdbd 	bl	800bc28 <WM_Screen2hWin>
 80150ae:	4b84      	ldr	r3, [pc, #528]	; (80152c0 <WM_HandlePID+0x2f8>)
 80150b0:	9005      	str	r0, [sp, #20]
 80150b2:	681b      	ldr	r3, [r3, #0]
 80150b4:	b113      	cbz	r3, 80150bc <WM_HandlePID+0xf4>
 80150b6:	9905      	ldr	r1, [sp, #20]
 80150b8:	4620      	mov	r0, r4
 80150ba:	4798      	blx	r3
 80150bc:	4981      	ldr	r1, [pc, #516]	; (80152c4 <WM_HandlePID+0x2fc>)
 80150be:	682b      	ldr	r3, [r5, #0]
 80150c0:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 80152a8 <WM_HandlePID+0x2e0>
 80150c4:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80150c8:	4688      	mov	r8, r1
 80150ca:	685a      	ldr	r2, [r3, #4]
 80150cc:	9805      	ldr	r0, [sp, #20]
 80150ce:	b312      	cbz	r2, 8015116 <WM_HandlePID+0x14e>
 80150d0:	4282      	cmp	r2, r0
 80150d2:	d020      	beq.n	8015116 <WM_HandlePID+0x14e>
 80150d4:	6858      	ldr	r0, [r3, #4]
 80150d6:	f7ff ff0b 	bl	8014ef0 <WM__IsInModalArea>
 80150da:	b1e0      	cbz	r0, 8015116 <WM_HandlePID+0x14e>
 80150dc:	f8d9 3000 	ldr.w	r3, [r9]
 80150e0:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 80150e4:	6858      	ldr	r0, [r3, #4]
 80150e6:	f7f6 fb13 	bl	800b710 <WM__IsEnabled>
 80150ea:	b1a0      	cbz	r0, 8015116 <WM_HandlePID+0x14e>
 80150ec:	2312      	movs	r3, #18
 80150ee:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80150f2:	9312      	str	r3, [sp, #72]	; 0x48
 80150f4:	f8d9 3000 	ldr.w	r3, [r9]
 80150f8:	9615      	str	r6, [sp, #84]	; 0x54
 80150fa:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 80150fe:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8015102:	6858      	ldr	r0, [r3, #4]
 8015104:	a912      	add	r1, sp, #72	; 0x48
 8015106:	f7ff ff41 	bl	8014f8c <WM__SendTouchMessage>
 801510a:	f8d9 3000 	ldr.w	r3, [r9]
 801510e:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8015112:	2200      	movs	r2, #0
 8015114:	605a      	str	r2, [r3, #4]
 8015116:	9805      	ldr	r0, [sp, #20]
 8015118:	f7ff feea 	bl	8014ef0 <WM__IsInModalArea>
 801511c:	b908      	cbnz	r0, 8015122 <WM_HandlePID+0x15a>
 801511e:	2600      	movs	r6, #0
 8015120:	e0fb      	b.n	801531a <WM_HandlePID+0x352>
 8015122:	682b      	ldr	r3, [r5, #0]
 8015124:	9905      	ldr	r1, [sp, #20]
 8015126:	f8df a180 	ldr.w	sl, [pc, #384]	; 80152a8 <WM_HandlePID+0x2e0>
 801512a:	f8df 9180 	ldr.w	r9, [pc, #384]	; 80152ac <WM_HandlePID+0x2e4>
 801512e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015132:	f04f 080c 	mov.w	r8, #12
 8015136:	fb08 7303 	mla	r3, r8, r3, r7
 801513a:	6051      	str	r1, [r2, #4]
 801513c:	7a1a      	ldrb	r2, [r3, #8]
 801513e:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8015142:	429a      	cmp	r2, r3
 8015144:	d062      	beq.n	801520c <WM_HandlePID+0x244>
 8015146:	9b05      	ldr	r3, [sp, #20]
 8015148:	2b00      	cmp	r3, #0
 801514a:	d05f      	beq.n	801520c <WM_HandlePID+0x244>
 801514c:	9805      	ldr	r0, [sp, #20]
 801514e:	f7fd fc0f 	bl	8012970 <GUI_ALLOC_LockH>
 8015152:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8015156:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
 801515a:	f8da 3000 	ldr.w	r3, [sl]
 801515e:	9003      	str	r0, [sp, #12]
 8015160:	fb08 9303 	mla	r3, r8, r3, r9
 8015164:	7a1b      	ldrb	r3, [r3, #8]
 8015166:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
 801516a:	f9b0 2000 	ldrsh.w	r2, [r0]
 801516e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015170:	1a9b      	subs	r3, r3, r2
 8015172:	930f      	str	r3, [sp, #60]	; 0x3c
 8015174:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015178:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801517a:	eb0d 0008 	add.w	r0, sp, r8
 801517e:	1a9b      	subs	r3, r3, r2
 8015180:	9310      	str	r3, [sp, #64]	; 0x40
 8015182:	f7fd fc03 	bl	801298c <GUI_ALLOC_UnlockH>
 8015186:	f8da e000 	ldr.w	lr, [sl]
 801518a:	f8df a13c 	ldr.w	sl, [pc, #316]	; 80152c8 <WM_HandlePID+0x300>
 801518e:	ab0f      	add	r3, sp, #60	; 0x3c
 8015190:	9315      	str	r3, [sp, #84]	; 0x54
 8015192:	2311      	movs	r3, #17
 8015194:	9312      	str	r3, [sp, #72]	; 0x48
 8015196:	fb08 930e 	mla	r3, r8, lr, r9
 801519a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 801519e:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 80151a2:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80151a6:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 80151aa:	721a      	strb	r2, [r3, #8]
 80151ac:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80151b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80151b4:	b133      	cbz	r3, 80151c4 <WM_HandlePID+0x1fc>
 80151b6:	eb0a 030e 	add.w	r3, sl, lr
 80151ba:	f8d3 9004 	ldr.w	r9, [r3, #4]
 80151be:	9a05      	ldr	r2, [sp, #20]
 80151c0:	605a      	str	r2, [r3, #4]
 80151c2:	e000      	b.n	80151c6 <WM_HandlePID+0x1fe>
 80151c4:	4699      	mov	r9, r3
 80151c6:	eb0a 030e 	add.w	r3, sl, lr
 80151ca:	a912      	add	r1, sp, #72	; 0x48
 80151cc:	f8d3 b004 	ldr.w	fp, [r3, #4]
 80151d0:	9805      	ldr	r0, [sp, #20]
 80151d2:	f004 f9a0 	bl	8019516 <WM__SendMessageIfEnabled>
 80151d6:	682b      	ldr	r3, [r5, #0]
 80151d8:	eb0a 02c3 	add.w	r2, sl, r3, lsl #3
 80151dc:	6851      	ldr	r1, [r2, #4]
 80151de:	458b      	cmp	fp, r1
 80151e0:	bf1c      	itt	ne
 80151e2:	6852      	ldrne	r2, [r2, #4]
 80151e4:	9205      	strne	r2, [sp, #20]
 80151e6:	220c      	movs	r2, #12
 80151e8:	fb02 7303 	mla	r3, r2, r3, r7
 80151ec:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80151f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80151f4:	f1b9 0f00 	cmp.w	r9, #0
 80151f8:	d008      	beq.n	801520c <WM_HandlePID+0x244>
 80151fa:	4648      	mov	r0, r9
 80151fc:	f7f6 fea0 	bl	800bf40 <WM_IsWindow>
 8015200:	b120      	cbz	r0, 801520c <WM_HandlePID+0x244>
 8015202:	682b      	ldr	r3, [r5, #0]
 8015204:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 8015208:	f8c3 9004 	str.w	r9, [r3, #4]
 801520c:	682a      	ldr	r2, [r5, #0]
 801520e:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8015212:	210c      	movs	r1, #12
 8015214:	4351      	muls	r1, r2
 8015216:	1878      	adds	r0, r7, r1
 8015218:	f890 8008 	ldrb.w	r8, [r0, #8]
 801521c:	ea53 0808 	orrs.w	r8, r3, r8
 8015220:	d064      	beq.n	80152ec <WM_HandlePID+0x324>
 8015222:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 80152c8 <WM_HandlePID+0x300>
 8015226:	f44f 7e10 	mov.w	lr, #576	; 0x240
 801522a:	00d2      	lsls	r2, r2, #3
 801522c:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
 8015230:	eb08 0e02 	add.w	lr, r8, r2
 8015234:	f8de 9004 	ldr.w	r9, [lr, #4]
 8015238:	f8dd c014 	ldr.w	ip, [sp, #20]
 801523c:	45e1      	cmp	r9, ip
 801523e:	d01c      	beq.n	801527a <WM_HandlePID+0x2b2>
 8015240:	f8de e004 	ldr.w	lr, [lr, #4]
 8015244:	f1be 0f00 	cmp.w	lr, #0
 8015248:	d017      	beq.n	801527a <WM_HandlePID+0x2b2>
 801524a:	b113      	cbz	r3, 8015252 <WM_HandlePID+0x28a>
 801524c:	2300      	movs	r3, #0
 801524e:	9315      	str	r3, [sp, #84]	; 0x54
 8015250:	e009      	b.n	8015266 <WM_HandlePID+0x29e>
 8015252:	f8df e058 	ldr.w	lr, [pc, #88]	; 80152ac <WM_HandlePID+0x2e4>
 8015256:	f88d 3020 	strb.w	r3, [sp, #32]
 801525a:	f85e 1001 	ldr.w	r1, [lr, r1]
 801525e:	9106      	str	r1, [sp, #24]
 8015260:	6841      	ldr	r1, [r0, #4]
 8015262:	9107      	str	r1, [sp, #28]
 8015264:	9615      	str	r6, [sp, #84]	; 0x54
 8015266:	4442      	add	r2, r8
 8015268:	a912      	add	r1, sp, #72	; 0x48
 801526a:	6850      	ldr	r0, [r2, #4]
 801526c:	f7ff fe8e 	bl	8014f8c <WM__SendTouchMessage>
 8015270:	682b      	ldr	r3, [r5, #0]
 8015272:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8015276:	2200      	movs	r2, #0
 8015278:	605a      	str	r2, [r3, #4]
 801527a:	682b      	ldr	r3, [r5, #0]
 801527c:	f89d e02c 	ldrb.w	lr, [sp, #44]	; 0x2c
 8015280:	220c      	movs	r2, #12
 8015282:	fb02 7203 	mla	r2, r2, r3, r7
 8015286:	f882 e008 	strb.w	lr, [r2, #8]
 801528a:	9a05      	ldr	r2, [sp, #20]
 801528c:	2a00      	cmp	r2, #0
 801528e:	d043      	beq.n	8015318 <WM_HandlePID+0x350>
 8015290:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8015294:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8015298:	f1be 0f00 	cmp.w	lr, #0
 801529c:	d016      	beq.n	80152cc <WM_HandlePID+0x304>
 801529e:	9a05      	ldr	r2, [sp, #20]
 80152a0:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 80152a4:	e01b      	b.n	80152de <WM_HandlePID+0x316>
 80152a6:	bf00      	nop
 80152a8:	20019c24 	.word	0x20019c24
 80152ac:	200196b0 	.word	0x200196b0
 80152b0:	20019c84 	.word	0x20019c84
 80152b4:	20019c78 	.word	0x20019c78
 80152b8:	200196a8 	.word	0x200196a8
 80152bc:	20019c40 	.word	0x20019c40
 80152c0:	200196ac 	.word	0x200196ac
 80152c4:	20019d6c 	.word	0x20019d6c
 80152c8:	20019d7c 	.word	0x20019d7c
 80152cc:	4b1d      	ldr	r3, [pc, #116]	; (8015344 <WM_HandlePID+0x37c>)
 80152ce:	781b      	ldrb	r3, [r3, #0]
 80152d0:	b10b      	cbz	r3, 80152d6 <WM_HandlePID+0x30e>
 80152d2:	f7f6 fc59 	bl	800bb88 <WM_ReleaseCapture>
 80152d6:	682b      	ldr	r3, [r5, #0]
 80152d8:	2200      	movs	r2, #0
 80152da:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 80152de:	605a      	str	r2, [r3, #4]
 80152e0:	9805      	ldr	r0, [sp, #20]
 80152e2:	9615      	str	r6, [sp, #84]	; 0x54
 80152e4:	a912      	add	r1, sp, #72	; 0x48
 80152e6:	f7ff fe51 	bl	8014f8c <WM__SendTouchMessage>
 80152ea:	e015      	b.n	8015318 <WM_HandlePID+0x350>
 80152ec:	9b05      	ldr	r3, [sp, #20]
 80152ee:	2b00      	cmp	r3, #0
 80152f0:	f43f af15 	beq.w	801511e <WM_HandlePID+0x156>
 80152f4:	9805      	ldr	r0, [sp, #20]
 80152f6:	f7f6 fa0b 	bl	800b710 <WM__IsEnabled>
 80152fa:	2800      	cmp	r0, #0
 80152fc:	f43f af0f 	beq.w	801511e <WM_HandlePID+0x156>
 8015300:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8015304:	2310      	movs	r3, #16
 8015306:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 801530a:	9805      	ldr	r0, [sp, #20]
 801530c:	9312      	str	r3, [sp, #72]	; 0x48
 801530e:	a912      	add	r1, sp, #72	; 0x48
 8015310:	9615      	str	r6, [sp, #84]	; 0x54
 8015312:	f7ff fe3b 	bl	8014f8c <WM__SendTouchMessage>
 8015316:	e702      	b.n	801511e <WM_HandlePID+0x156>
 8015318:	2601      	movs	r6, #1
 801531a:	682b      	ldr	r3, [r5, #0]
 801531c:	220c      	movs	r2, #12
 801531e:	fb02 7703 	mla	r7, r2, r3, r7
 8015322:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8015326:	e887 0007 	stmia.w	r7, {r0, r1, r2}
 801532a:	4620      	mov	r0, r4
 801532c:	4619      	mov	r1, r3
 801532e:	f000 f819 	bl	8015364 <WM_PID__SetPrevState>
 8015332:	e000      	b.n	8015336 <WM_HandlePID+0x36e>
 8015334:	2600      	movs	r6, #0
 8015336:	a804      	add	r0, sp, #16
 8015338:	f000 f882 	bl	8015440 <WM__RemoveCriticalHandle>
 801533c:	4630      	mov	r0, r6
 801533e:	b017      	add	sp, #92	; 0x5c
 8015340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015344:	20019c28 	.word	0x20019c28

08015348 <WM_SendToParent>:
 8015348:	b538      	push	{r3, r4, r5, lr}
 801534a:	4605      	mov	r5, r0
 801534c:	460c      	mov	r4, r1
 801534e:	b141      	cbz	r1, 8015362 <WM_SendToParent+0x1a>
 8015350:	f7f6 fe68 	bl	800c024 <WM_GetParent>
 8015354:	b128      	cbz	r0, 8015362 <WM_SendToParent+0x1a>
 8015356:	60a5      	str	r5, [r4, #8]
 8015358:	4621      	mov	r1, r4
 801535a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801535e:	f7ff bd55 	b.w	8014e0c <WM__SendMessage>
 8015362:	bd38      	pop	{r3, r4, r5, pc}

08015364 <WM_PID__SetPrevState>:
 8015364:	4b03      	ldr	r3, [pc, #12]	; (8015374 <WM_PID__SetPrevState+0x10>)
 8015366:	220c      	movs	r2, #12
 8015368:	fb02 3301 	mla	r3, r2, r1, r3
 801536c:	c807      	ldmia	r0, {r0, r1, r2}
 801536e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8015372:	4770      	bx	lr
 8015374:	200196c8 	.word	0x200196c8

08015378 <WM_OnKey>:
 8015378:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801537a:	4a0a      	ldr	r2, [pc, #40]	; (80153a4 <WM_OnKey+0x2c>)
 801537c:	4603      	mov	r3, r0
 801537e:	6810      	ldr	r0, [r2, #0]
 8015380:	4a09      	ldr	r2, [pc, #36]	; (80153a8 <WM_OnKey+0x30>)
 8015382:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8015386:	b148      	cbz	r0, 801539c <WM_OnKey+0x24>
 8015388:	9300      	str	r3, [sp, #0]
 801538a:	230e      	movs	r3, #14
 801538c:	9101      	str	r1, [sp, #4]
 801538e:	9302      	str	r3, [sp, #8]
 8015390:	a902      	add	r1, sp, #8
 8015392:	ab00      	add	r3, sp, #0
 8015394:	9305      	str	r3, [sp, #20]
 8015396:	f7ff fd39 	bl	8014e0c <WM__SendMessage>
 801539a:	2001      	movs	r0, #1
 801539c:	b007      	add	sp, #28
 801539e:	f85d fb04 	ldr.w	pc, [sp], #4
 80153a2:	bf00      	nop
 80153a4:	20019c24 	.word	0x20019c24
 80153a8:	20019c14 	.word	0x20019c14

080153ac <WM_GetWindowRect>:
 80153ac:	b510      	push	{r4, lr}
 80153ae:	4604      	mov	r4, r0
 80153b0:	b158      	cbz	r0, 80153ca <WM_GetWindowRect+0x1e>
 80153b2:	4b06      	ldr	r3, [pc, #24]	; (80153cc <WM_GetWindowRect+0x20>)
 80153b4:	6818      	ldr	r0, [r3, #0]
 80153b6:	b910      	cbnz	r0, 80153be <WM_GetWindowRect+0x12>
 80153b8:	4b05      	ldr	r3, [pc, #20]	; (80153d0 <WM_GetWindowRect+0x24>)
 80153ba:	681b      	ldr	r3, [r3, #0]
 80153bc:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80153be:	f7fd facd 	bl	801295c <GUI_ALLOC_h2p>
 80153c2:	4603      	mov	r3, r0
 80153c4:	cb03      	ldmia	r3!, {r0, r1}
 80153c6:	6020      	str	r0, [r4, #0]
 80153c8:	6061      	str	r1, [r4, #4]
 80153ca:	bd10      	pop	{r4, pc}
 80153cc:	20019c00 	.word	0x20019c00
 80153d0:	2000016c 	.word	0x2000016c

080153d4 <WM_GetWindowRectEx>:
 80153d4:	b510      	push	{r4, lr}
 80153d6:	460c      	mov	r4, r1
 80153d8:	b130      	cbz	r0, 80153e8 <WM_GetWindowRectEx+0x14>
 80153da:	b129      	cbz	r1, 80153e8 <WM_GetWindowRectEx+0x14>
 80153dc:	f7fd fabe 	bl	801295c <GUI_ALLOC_h2p>
 80153e0:	4603      	mov	r3, r0
 80153e2:	cb03      	ldmia	r3!, {r0, r1}
 80153e4:	6020      	str	r0, [r4, #0]
 80153e6:	6061      	str	r1, [r4, #4]
 80153e8:	bd10      	pop	{r4, pc}

080153ea <WM_GetScrollPartner>:
 80153ea:	b538      	push	{r3, r4, r5, lr}
 80153ec:	4605      	mov	r5, r0
 80153ee:	f7f6 fe31 	bl	800c054 <WM_GetId>
 80153f2:	28ff      	cmp	r0, #255	; 0xff
 80153f4:	4604      	mov	r4, r0
 80153f6:	d003      	beq.n	8015400 <WM_GetScrollPartner+0x16>
 80153f8:	28fe      	cmp	r0, #254	; 0xfe
 80153fa:	bf08      	it	eq
 80153fc:	24ff      	moveq	r4, #255	; 0xff
 80153fe:	e000      	b.n	8015402 <WM_GetScrollPartner+0x18>
 8015400:	24fe      	movs	r4, #254	; 0xfe
 8015402:	4628      	mov	r0, r5
 8015404:	f7f6 fe0e 	bl	800c024 <WM_GetParent>
 8015408:	4621      	mov	r1, r4
 801540a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801540e:	f7f6 be60 	b.w	800c0d2 <WM_GetDialogItem>

08015412 <WM_GetInsideRectEx>:
 8015412:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015414:	9103      	str	r1, [sp, #12]
 8015416:	a904      	add	r1, sp, #16
 8015418:	2314      	movs	r3, #20
 801541a:	f841 3d10 	str.w	r3, [r1, #-16]!
 801541e:	4669      	mov	r1, sp
 8015420:	f7f7 fb9c 	bl	800cb5c <WM_SendMessage>
 8015424:	b005      	add	sp, #20
 8015426:	f85d fb04 	ldr.w	pc, [sp], #4

0801542a <WM_ForEachDesc>:
 801542a:	f004 b881 	b.w	8019530 <WM__ForEachDesc>
	...

08015430 <WM__AddCriticalHandle>:
 8015430:	4b02      	ldr	r3, [pc, #8]	; (801543c <WM__AddCriticalHandle+0xc>)
 8015432:	681a      	ldr	r2, [r3, #0]
 8015434:	6002      	str	r2, [r0, #0]
 8015436:	6018      	str	r0, [r3, #0]
 8015438:	4770      	bx	lr
 801543a:	bf00      	nop
 801543c:	20019c38 	.word	0x20019c38

08015440 <WM__RemoveCriticalHandle>:
 8015440:	4a09      	ldr	r2, [pc, #36]	; (8015468 <WM__RemoveCriticalHandle+0x28>)
 8015442:	6813      	ldr	r3, [r2, #0]
 8015444:	b510      	push	{r4, lr}
 8015446:	4614      	mov	r4, r2
 8015448:	b16b      	cbz	r3, 8015466 <WM__RemoveCriticalHandle+0x26>
 801544a:	2200      	movs	r2, #0
 801544c:	4283      	cmp	r3, r0
 801544e:	d105      	bne.n	801545c <WM__RemoveCriticalHandle+0x1c>
 8015450:	681b      	ldr	r3, [r3, #0]
 8015452:	b10a      	cbz	r2, 8015458 <WM__RemoveCriticalHandle+0x18>
 8015454:	6013      	str	r3, [r2, #0]
 8015456:	bd10      	pop	{r4, pc}
 8015458:	6023      	str	r3, [r4, #0]
 801545a:	bd10      	pop	{r4, pc}
 801545c:	6819      	ldr	r1, [r3, #0]
 801545e:	b111      	cbz	r1, 8015466 <WM__RemoveCriticalHandle+0x26>
 8015460:	461a      	mov	r2, r3
 8015462:	460b      	mov	r3, r1
 8015464:	e7f2      	b.n	801544c <WM__RemoveCriticalHandle+0xc>
 8015466:	bd10      	pop	{r4, pc}
 8015468:	20019c38 	.word	0x20019c38

0801546c <WM_BringToBottom>:
 801546c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015470:	4604      	mov	r4, r0
 8015472:	b087      	sub	sp, #28
 8015474:	2800      	cmp	r0, #0
 8015476:	d039      	beq.n	80154ec <WM_BringToBottom+0x80>
 8015478:	f7fd fa7a 	bl	8012970 <GUI_ALLOC_LockH>
 801547c:	4603      	mov	r3, r0
 801547e:	9001      	str	r0, [sp, #4]
 8015480:	c803      	ldmia	r0, {r0, r1}
 8015482:	ad04      	add	r5, sp, #16
 8015484:	e885 0003 	stmia.w	r5, {r0, r1}
 8015488:	a801      	add	r0, sp, #4
 801548a:	6a1e      	ldr	r6, [r3, #32]
 801548c:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 8015490:	f7fd fa7c 	bl	801298c <GUI_ALLOC_UnlockH>
 8015494:	4620      	mov	r0, r4
 8015496:	f7ff fcd7 	bl	8014e48 <WM__GetPrevSibling>
 801549a:	4607      	mov	r7, r0
 801549c:	b330      	cbz	r0, 80154ec <WM_BringToBottom+0x80>
 801549e:	4620      	mov	r0, r4
 80154a0:	f7f6 fdc0 	bl	800c024 <WM_GetParent>
 80154a4:	f019 0f02 	tst.w	r9, #2
 80154a8:	4680      	mov	r8, r0
 80154aa:	d004      	beq.n	80154b6 <WM_BringToBottom+0x4a>
 80154ac:	4628      	mov	r0, r5
 80154ae:	4641      	mov	r1, r8
 80154b0:	4632      	mov	r2, r6
 80154b2:	f7f7 fb3b 	bl	800cb2c <WM__InvalidateRectEx>
 80154b6:	4620      	mov	r0, r4
 80154b8:	f7fd fa5a 	bl	8012970 <GUI_ALLOC_LockH>
 80154bc:	9001      	str	r0, [sp, #4]
 80154be:	4640      	mov	r0, r8
 80154c0:	f7fd fa56 	bl	8012970 <GUI_ALLOC_LockH>
 80154c4:	9003      	str	r0, [sp, #12]
 80154c6:	4638      	mov	r0, r7
 80154c8:	f7fd fa52 	bl	8012970 <GUI_ALLOC_LockH>
 80154cc:	9b03      	ldr	r3, [sp, #12]
 80154ce:	9a01      	ldr	r2, [sp, #4]
 80154d0:	69d9      	ldr	r1, [r3, #28]
 80154d2:	6206      	str	r6, [r0, #32]
 80154d4:	9002      	str	r0, [sp, #8]
 80154d6:	6211      	str	r1, [r2, #32]
 80154d8:	a801      	add	r0, sp, #4
 80154da:	61dc      	str	r4, [r3, #28]
 80154dc:	f7fd fa56 	bl	801298c <GUI_ALLOC_UnlockH>
 80154e0:	a803      	add	r0, sp, #12
 80154e2:	f7fd fa53 	bl	801298c <GUI_ALLOC_UnlockH>
 80154e6:	a802      	add	r0, sp, #8
 80154e8:	f7fd fa50 	bl	801298c <GUI_ALLOC_UnlockH>
 80154ec:	b007      	add	sp, #28
 80154ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080154f2 <_Convert16>:
 80154f2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154f6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80154fa:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 80154fe:	4605      	mov	r5, r0
 8015500:	460e      	mov	r6, r1
 8015502:	4690      	mov	r8, r2
 8015504:	461f      	mov	r7, r3
 8015506:	4614      	mov	r4, r2
 8015508:	4689      	mov	r9, r1
 801550a:	f835 0b02 	ldrh.w	r0, [r5], #2
 801550e:	47d8      	blx	fp
 8015510:	47d0      	blx	sl
 8015512:	3c01      	subs	r4, #1
 8015514:	f849 0b04 	str.w	r0, [r9], #4
 8015518:	d1f7      	bne.n	801550a <_Convert16+0x18>
 801551a:	2f1f      	cmp	r7, #31
 801551c:	d806      	bhi.n	801552c <_Convert16+0x3a>
 801551e:	4630      	mov	r0, r6
 8015520:	4641      	mov	r1, r8
 8015522:	463a      	mov	r2, r7
 8015524:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015528:	f002 bd15 	b.w	8017f56 <GUI__CompactPixelIndices>
 801552c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015530 <_Convert8>:
 8015530:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015534:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8015538:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 801553c:	4605      	mov	r5, r0
 801553e:	460e      	mov	r6, r1
 8015540:	4690      	mov	r8, r2
 8015542:	461f      	mov	r7, r3
 8015544:	4689      	mov	r9, r1
 8015546:	4604      	mov	r4, r0
 8015548:	f814 0b01 	ldrb.w	r0, [r4], #1
 801554c:	47d8      	blx	fp
 801554e:	47d0      	blx	sl
 8015550:	1b2b      	subs	r3, r5, r4
 8015552:	4443      	add	r3, r8
 8015554:	f849 0b04 	str.w	r0, [r9], #4
 8015558:	2b00      	cmp	r3, #0
 801555a:	d1f5      	bne.n	8015548 <_Convert8+0x18>
 801555c:	2f1f      	cmp	r7, #31
 801555e:	d806      	bhi.n	801556e <_Convert8+0x3e>
 8015560:	4630      	mov	r0, r6
 8015562:	4641      	mov	r1, r8
 8015564:	463a      	mov	r2, r7
 8015566:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801556a:	f002 bcf4 	b.w	8017f56 <GUI__CompactPixelIndices>
 801556e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015574 <GUI_MEMDEV__WriteToActiveOpaque>:
 8015574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015578:	b09d      	sub	sp, #116	; 0x74
 801557a:	4606      	mov	r6, r0
 801557c:	910f      	str	r1, [sp, #60]	; 0x3c
 801557e:	920d      	str	r2, [sp, #52]	; 0x34
 8015580:	2800      	cmp	r0, #0
 8015582:	f000 8386 	beq.w	8015c92 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8015586:	f7fd f9f3 	bl	8012970 <GUI_ALLOC_LockH>
 801558a:	ab1c      	add	r3, sp, #112	; 0x70
 801558c:	6944      	ldr	r4, [r0, #20]
 801558e:	f843 0d1c 	str.w	r0, [r3, #-28]!
 8015592:	4618      	mov	r0, r3
 8015594:	f7fd f9fa 	bl	801298c <GUI_ALLOC_UnlockH>
 8015598:	4630      	mov	r0, r6
 801559a:	f7f8 ff95 	bl	800e4c8 <GUI_MEMDEV_GetBitsPerPixel>
 801559e:	2808      	cmp	r0, #8
 80155a0:	4601      	mov	r1, r0
 80155a2:	dd02      	ble.n	80155aa <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 80155a4:	2c00      	cmp	r4, #0
 80155a6:	f000 81c3 	beq.w	8015930 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 80155aa:	2201      	movs	r2, #1
 80155ac:	f04f 0800 	mov.w	r8, #0
 80155b0:	4630      	mov	r0, r6
 80155b2:	921b      	str	r2, [sp, #108]	; 0x6c
 80155b4:	920b      	str	r2, [sp, #44]	; 0x2c
 80155b6:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 80155ba:	f7fd f9d9 	bl	8012970 <GUI_ALLOC_LockH>
 80155be:	6803      	ldr	r3, [r0, #0]
 80155c0:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 8015bd0 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 80155c4:	691b      	ldr	r3, [r3, #16]
 80155c6:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 80155ca:	685b      	ldr	r3, [r3, #4]
 80155cc:	930e      	str	r3, [sp, #56]	; 0x38
 80155ce:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 80155d2:	f8da 3000 	ldr.w	r3, [sl]
 80155d6:	f84b 0d14 	str.w	r0, [fp, #-20]!
 80155da:	6904      	ldr	r4, [r0, #16]
 80155dc:	6945      	ldr	r5, [r0, #20]
 80155de:	f8d0 900c 	ldr.w	r9, [r0, #12]
 80155e2:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 80155e6:	7c58      	ldrb	r0, [r3, #17]
 80155e8:	9112      	str	r1, [sp, #72]	; 0x48
 80155ea:	f7fa f9dd 	bl	800f9a8 <GUI_GetBitsPerPixelEx>
 80155ee:	f8da 3000 	ldr.w	r3, [sl]
 80155f2:	9010      	str	r0, [sp, #64]	; 0x40
 80155f4:	7c58      	ldrb	r0, [r3, #17]
 80155f6:	f7fa f9f5 	bl	800f9e4 <GUI_GetpfIndex2ColorEx>
 80155fa:	4603      	mov	r3, r0
 80155fc:	4658      	mov	r0, fp
 80155fe:	9309      	str	r3, [sp, #36]	; 0x24
 8015600:	f7fd f9c4 	bl	801298c <GUI_ALLOC_UnlockH>
 8015604:	2c08      	cmp	r4, #8
 8015606:	4651      	mov	r1, sl
 8015608:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801560a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801560c:	d904      	bls.n	8015618 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 801560e:	2c10      	cmp	r4, #16
 8015610:	bf8c      	ite	hi
 8015612:	2204      	movhi	r2, #4
 8015614:	2202      	movls	r2, #2
 8015616:	e005      	b.n	8015624 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 8015618:	2c01      	cmp	r4, #1
 801561a:	d103      	bne.n	8015624 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 801561c:	9411      	str	r4, [sp, #68]	; 0x44
 801561e:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 8015622:	e000      	b.n	8015626 <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 8015624:	9211      	str	r2, [sp, #68]	; 0x44
 8015626:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015628:	4298      	cmp	r0, r3
 801562a:	f000 80e2 	beq.w	80157f2 <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 801562e:	680b      	ldr	r3, [r1, #0]
 8015630:	7c58      	ldrb	r0, [r3, #17]
 8015632:	f7fa f9df 	bl	800f9f4 <GUI_GetpfColor2IndexEx>
 8015636:	9013      	str	r0, [sp, #76]	; 0x4c
 8015638:	00b8      	lsls	r0, r7, #2
 801563a:	f7fd fbed 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 801563e:	900c      	str	r0, [sp, #48]	; 0x30
 8015640:	2800      	cmp	r0, #0
 8015642:	f000 8326 	beq.w	8015c92 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8015646:	4630      	mov	r0, r6
 8015648:	f7f8 f8da 	bl	800d800 <GUI_MEMDEV_GetDataPtr>
 801564c:	4606      	mov	r6, r0
 801564e:	2d00      	cmp	r5, #0
 8015650:	f000 80be 	beq.w	80157d0 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 8015654:	4628      	mov	r0, r5
 8015656:	f7fd f98b 	bl	8012970 <GUI_ALLOC_LockH>
 801565a:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 801565e:	9018      	str	r0, [sp, #96]	; 0x60
 8015660:	f04f 0a00 	mov.w	sl, #0
 8015664:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015666:	4592      	cmp	sl, r2
 8015668:	f280 80ae 	bge.w	80157c8 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 801566c:	9818      	ldr	r0, [sp, #96]	; 0x60
 801566e:	2300      	movs	r3, #0
 8015670:	9319      	str	r3, [sp, #100]	; 0x64
 8015672:	6883      	ldr	r3, [r0, #8]
 8015674:	a919      	add	r1, sp, #100	; 0x64
 8015676:	695b      	ldr	r3, [r3, #20]
 8015678:	4652      	mov	r2, sl
 801567a:	4798      	blx	r3
 801567c:	42b8      	cmp	r0, r7
 801567e:	4605      	mov	r5, r0
 8015680:	d12f      	bne.n	80156e2 <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 8015682:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015684:	f7fd f974 	bl	8012970 <GUI_ALLOC_LockH>
 8015688:	2c08      	cmp	r4, #8
 801568a:	4601      	mov	r1, r0
 801568c:	9016      	str	r0, [sp, #88]	; 0x58
 801568e:	d909      	bls.n	80156a4 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 8015690:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015692:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015694:	9200      	str	r2, [sp, #0]
 8015696:	9301      	str	r3, [sp, #4]
 8015698:	4630      	mov	r0, r6
 801569a:	463a      	mov	r2, r7
 801569c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801569e:	f7ff ff28 	bl	80154f2 <_Convert16>
 80156a2:	e008      	b.n	80156b6 <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 80156a4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80156a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80156a8:	9000      	str	r0, [sp, #0]
 80156aa:	9201      	str	r2, [sp, #4]
 80156ac:	4630      	mov	r0, r6
 80156ae:	463a      	mov	r2, r7
 80156b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156b2:	f7ff ff3d 	bl	8015530 <_Convert8>
 80156b6:	2301      	movs	r3, #1
 80156b8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80156ba:	9002      	str	r0, [sp, #8]
 80156bc:	ad1c      	add	r5, sp, #112	; 0x70
 80156be:	2200      	movs	r2, #0
 80156c0:	9300      	str	r3, [sp, #0]
 80156c2:	9301      	str	r3, [sp, #4]
 80156c4:	9203      	str	r2, [sp, #12]
 80156c6:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 80156ca:	9204      	str	r2, [sp, #16]
 80156cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80156ce:	f8cd 8014 	str.w	r8, [sp, #20]
 80156d2:	4659      	mov	r1, fp
 80156d4:	463a      	mov	r2, r7
 80156d6:	f7fa fba9 	bl	800fe2c <LCD_DrawBitmap>
 80156da:	4628      	mov	r0, r5
 80156dc:	f7fd f956 	bl	801298c <GUI_ALLOC_UnlockH>
 80156e0:	e060      	b.n	80157a4 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 80156e2:	2c01      	cmp	r4, #1
 80156e4:	d15c      	bne.n	80157a0 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 80156e6:	2d00      	cmp	r5, #0
 80156e8:	d05c      	beq.n	80157a4 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 80156ea:	9819      	ldr	r0, [sp, #100]	; 0x64
 80156ec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80156ee:	f8cd 900c 	str.w	r9, [sp, #12]
 80156f2:	2208      	movs	r2, #8
 80156f4:	fb90 f2f2 	sdiv	r2, r0, r2
 80156f8:	4432      	add	r2, r6
 80156fa:	2301      	movs	r3, #1
 80156fc:	9204      	str	r2, [sp, #16]
 80156fe:	f000 0207 	and.w	r2, r0, #7
 8015702:	9300      	str	r3, [sp, #0]
 8015704:	4408      	add	r0, r1
 8015706:	9301      	str	r3, [sp, #4]
 8015708:	9302      	str	r3, [sp, #8]
 801570a:	9206      	str	r2, [sp, #24]
 801570c:	4659      	mov	r1, fp
 801570e:	462a      	mov	r2, r5
 8015710:	f8cd 8014 	str.w	r8, [sp, #20]
 8015714:	f7fa faae 	bl	800fc74 <LCD__DrawBitmap_1bpp>
 8015718:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801571a:	9818      	ldr	r0, [sp, #96]	; 0x60
 801571c:	441d      	add	r5, r3
 801571e:	6883      	ldr	r3, [r0, #8]
 8015720:	9519      	str	r5, [sp, #100]	; 0x64
 8015722:	695b      	ldr	r3, [r3, #20]
 8015724:	a919      	add	r1, sp, #100	; 0x64
 8015726:	4652      	mov	r2, sl
 8015728:	4798      	blx	r3
 801572a:	4605      	mov	r5, r0
 801572c:	e7db      	b.n	80156e6 <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 801572e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015730:	f7fd f91e 	bl	8012970 <GUI_ALLOC_LockH>
 8015734:	2c08      	cmp	r4, #8
 8015736:	4601      	mov	r1, r0
 8015738:	9016      	str	r0, [sp, #88]	; 0x58
 801573a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801573c:	d938      	bls.n	80157b0 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 801573e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015740:	9200      	str	r2, [sp, #0]
 8015742:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015744:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015746:	9301      	str	r3, [sp, #4]
 8015748:	fb00 6002 	mla	r0, r0, r2, r6
 801574c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801574e:	462a      	mov	r2, r5
 8015750:	f7ff fecf 	bl	80154f2 <_Convert16>
 8015754:	2301      	movs	r3, #1
 8015756:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 801575a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801575c:	9300      	str	r3, [sp, #0]
 801575e:	2200      	movs	r2, #0
 8015760:	9301      	str	r3, [sp, #4]
 8015762:	9002      	str	r0, [sp, #8]
 8015764:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015766:	9203      	str	r2, [sp, #12]
 8015768:	9819      	ldr	r0, [sp, #100]	; 0x64
 801576a:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 801576e:	9204      	str	r2, [sp, #16]
 8015770:	4408      	add	r0, r1
 8015772:	462a      	mov	r2, r5
 8015774:	4659      	mov	r1, fp
 8015776:	f8cd 8014 	str.w	r8, [sp, #20]
 801577a:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801577e:	f7fa fb55 	bl	800fe2c <LCD_DrawBitmap>
 8015782:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 8015786:	4660      	mov	r0, ip
 8015788:	f7fd f900 	bl	801298c <GUI_ALLOC_UnlockH>
 801578c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801578e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015790:	441d      	add	r5, r3
 8015792:	6883      	ldr	r3, [r0, #8]
 8015794:	9519      	str	r5, [sp, #100]	; 0x64
 8015796:	695b      	ldr	r3, [r3, #20]
 8015798:	a919      	add	r1, sp, #100	; 0x64
 801579a:	4652      	mov	r2, sl
 801579c:	4798      	blx	r3
 801579e:	4605      	mov	r5, r0
 80157a0:	2d00      	cmp	r5, #0
 80157a2:	d1c4      	bne.n	801572e <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 80157a4:	444e      	add	r6, r9
 80157a6:	f10a 0a01 	add.w	sl, sl, #1
 80157aa:	f10b 0b01 	add.w	fp, fp, #1
 80157ae:	e759      	b.n	8015664 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 80157b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80157b2:	9300      	str	r3, [sp, #0]
 80157b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80157b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80157b8:	9201      	str	r2, [sp, #4]
 80157ba:	fb00 6003 	mla	r0, r0, r3, r6
 80157be:	462a      	mov	r2, r5
 80157c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80157c2:	f7ff feb5 	bl	8015530 <_Convert8>
 80157c6:	e7c5      	b.n	8015754 <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 80157c8:	a818      	add	r0, sp, #96	; 0x60
 80157ca:	f7fd f8df 	bl	801298c <GUI_ALLOC_UnlockH>
 80157ce:	e00e      	b.n	80157ee <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 80157d0:	2301      	movs	r3, #1
 80157d2:	9300      	str	r3, [sp, #0]
 80157d4:	9301      	str	r3, [sp, #4]
 80157d6:	9004      	str	r0, [sp, #16]
 80157d8:	9402      	str	r4, [sp, #8]
 80157da:	f8cd 900c 	str.w	r9, [sp, #12]
 80157de:	f8cd 8014 	str.w	r8, [sp, #20]
 80157e2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80157e4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80157e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80157e8:	463a      	mov	r2, r7
 80157ea:	f7fa fb1f 	bl	800fe2c <LCD_DrawBitmap>
 80157ee:	980c      	ldr	r0, [sp, #48]	; 0x30
 80157f0:	e24d      	b.n	8015c8e <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 80157f2:	4630      	mov	r0, r6
 80157f4:	f7f8 f804 	bl	800d800 <GUI_MEMDEV_GetDataPtr>
 80157f8:	4606      	mov	r6, r0
 80157fa:	2d00      	cmp	r5, #0
 80157fc:	f000 808a 	beq.w	8015914 <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 8015800:	4628      	mov	r0, r5
 8015802:	f7fd f8b5 	bl	8012970 <GUI_ALLOC_LockH>
 8015806:	2500      	movs	r5, #0
 8015808:	9018      	str	r0, [sp, #96]	; 0x60
 801580a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801580c:	429d      	cmp	r5, r3
 801580e:	da7d      	bge.n	801590c <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 8015810:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015812:	2300      	movs	r3, #0
 8015814:	9319      	str	r3, [sp, #100]	; 0x64
 8015816:	6883      	ldr	r3, [r0, #8]
 8015818:	a919      	add	r1, sp, #100	; 0x64
 801581a:	695b      	ldr	r3, [r3, #20]
 801581c:	462a      	mov	r2, r5
 801581e:	4798      	blx	r3
 8015820:	42b8      	cmp	r0, r7
 8015822:	4682      	mov	sl, r0
 8015824:	d124      	bne.n	8015870 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 8015826:	46aa      	mov	sl, r5
 8015828:	9818      	ldr	r0, [sp, #96]	; 0x60
 801582a:	6883      	ldr	r3, [r0, #8]
 801582c:	f10a 0b01 	add.w	fp, sl, #1
 8015830:	695b      	ldr	r3, [r3, #20]
 8015832:	a919      	add	r1, sp, #100	; 0x64
 8015834:	465a      	mov	r2, fp
 8015836:	4798      	blx	r3
 8015838:	42b8      	cmp	r0, r7
 801583a:	d101      	bne.n	8015840 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 801583c:	46da      	mov	sl, fp
 801583e:	e7f3      	b.n	8015828 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 8015840:	ebc5 0b0a 	rsb	fp, r5, sl
 8015844:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015846:	9604      	str	r6, [sp, #16]
 8015848:	2301      	movs	r3, #1
 801584a:	f10b 0b01 	add.w	fp, fp, #1
 801584e:	9300      	str	r3, [sp, #0]
 8015850:	9301      	str	r3, [sp, #4]
 8015852:	4429      	add	r1, r5
 8015854:	9402      	str	r4, [sp, #8]
 8015856:	f8cd 900c 	str.w	r9, [sp, #12]
 801585a:	f8cd 8014 	str.w	r8, [sp, #20]
 801585e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015860:	463a      	mov	r2, r7
 8015862:	465b      	mov	r3, fp
 8015864:	f7fa fae2 	bl	800fe2c <LCD_DrawBitmap>
 8015868:	fb09 660b 	mla	r6, r9, fp, r6
 801586c:	4655      	mov	r5, sl
 801586e:	e04b      	b.n	8015908 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 8015870:	2c01      	cmp	r4, #1
 8015872:	d127      	bne.n	80158c4 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 8015874:	f1ba 0f00 	cmp.w	sl, #0
 8015878:	d022      	beq.n	80158c0 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 801587a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801587c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801587e:	f8cd 900c 	str.w	r9, [sp, #12]
 8015882:	2208      	movs	r2, #8
 8015884:	fb90 f2f2 	sdiv	r2, r0, r2
 8015888:	4432      	add	r2, r6
 801588a:	9204      	str	r2, [sp, #16]
 801588c:	f000 0207 	and.w	r2, r0, #7
 8015890:	4408      	add	r0, r1
 8015892:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015894:	9206      	str	r2, [sp, #24]
 8015896:	2301      	movs	r3, #1
 8015898:	4652      	mov	r2, sl
 801589a:	9300      	str	r3, [sp, #0]
 801589c:	9301      	str	r3, [sp, #4]
 801589e:	9302      	str	r3, [sp, #8]
 80158a0:	4429      	add	r1, r5
 80158a2:	f8cd 8014 	str.w	r8, [sp, #20]
 80158a6:	f7fa f9e5 	bl	800fc74 <LCD__DrawBitmap_1bpp>
 80158aa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80158ac:	9818      	ldr	r0, [sp, #96]	; 0x60
 80158ae:	4453      	add	r3, sl
 80158b0:	9319      	str	r3, [sp, #100]	; 0x64
 80158b2:	6883      	ldr	r3, [r0, #8]
 80158b4:	a919      	add	r1, sp, #100	; 0x64
 80158b6:	695b      	ldr	r3, [r3, #20]
 80158b8:	462a      	mov	r2, r5
 80158ba:	4798      	blx	r3
 80158bc:	4682      	mov	sl, r0
 80158be:	e7d9      	b.n	8015874 <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 80158c0:	444e      	add	r6, r9
 80158c2:	e021      	b.n	8015908 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 80158c4:	f1ba 0f00 	cmp.w	sl, #0
 80158c8:	d0fa      	beq.n	80158c0 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 80158ca:	9819      	ldr	r0, [sp, #100]	; 0x64
 80158cc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80158ce:	9402      	str	r4, [sp, #8]
 80158d0:	fb00 6201 	mla	r2, r0, r1, r6
 80158d4:	9204      	str	r2, [sp, #16]
 80158d6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80158d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80158da:	f8cd 900c 	str.w	r9, [sp, #12]
 80158de:	2301      	movs	r3, #1
 80158e0:	4410      	add	r0, r2
 80158e2:	9300      	str	r3, [sp, #0]
 80158e4:	4652      	mov	r2, sl
 80158e6:	9301      	str	r3, [sp, #4]
 80158e8:	4429      	add	r1, r5
 80158ea:	f8cd 8014 	str.w	r8, [sp, #20]
 80158ee:	f7fa fa9d 	bl	800fe2c <LCD_DrawBitmap>
 80158f2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80158f4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80158f6:	4453      	add	r3, sl
 80158f8:	9319      	str	r3, [sp, #100]	; 0x64
 80158fa:	6883      	ldr	r3, [r0, #8]
 80158fc:	a919      	add	r1, sp, #100	; 0x64
 80158fe:	695b      	ldr	r3, [r3, #20]
 8015900:	462a      	mov	r2, r5
 8015902:	4798      	blx	r3
 8015904:	4682      	mov	sl, r0
 8015906:	e7dd      	b.n	80158c4 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 8015908:	3501      	adds	r5, #1
 801590a:	e77e      	b.n	801580a <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 801590c:	a818      	add	r0, sp, #96	; 0x60
 801590e:	f7fd f83d 	bl	801298c <GUI_ALLOC_UnlockH>
 8015912:	e1be      	b.n	8015c92 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8015914:	2301      	movs	r3, #1
 8015916:	9300      	str	r3, [sp, #0]
 8015918:	9301      	str	r3, [sp, #4]
 801591a:	9004      	str	r0, [sp, #16]
 801591c:	9402      	str	r4, [sp, #8]
 801591e:	f8cd 900c 	str.w	r9, [sp, #12]
 8015922:	f8cd 8014 	str.w	r8, [sp, #20]
 8015926:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015928:	990d      	ldr	r1, [sp, #52]	; 0x34
 801592a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801592c:	463a      	mov	r2, r7
 801592e:	e041      	b.n	80159b4 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 8015930:	4630      	mov	r0, r6
 8015932:	910a      	str	r1, [sp, #40]	; 0x28
 8015934:	f7fd f81c 	bl	8012970 <GUI_ALLOC_LockH>
 8015938:	4682      	mov	sl, r0
 801593a:	a81c      	add	r0, sp, #112	; 0x70
 801593c:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 8015940:	f840 ad10 	str.w	sl, [r0, #-16]!
 8015944:	f8da 4000 	ldr.w	r4, [sl]
 8015948:	9210      	str	r2, [sp, #64]	; 0x40
 801594a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801594e:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 8015952:	4c9e      	ldr	r4, [pc, #632]	; (8015bcc <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 8015954:	b213      	sxth	r3, r2
 8015956:	f8da 200c 	ldr.w	r2, [sl, #12]
 801595a:	920b      	str	r2, [sp, #44]	; 0x2c
 801595c:	9309      	str	r3, [sp, #36]	; 0x24
 801595e:	f7fd f815 	bl	801298c <GUI_ALLOC_UnlockH>
 8015962:	f8d9 0004 	ldr.w	r0, [r9, #4]
 8015966:	900e      	str	r0, [sp, #56]	; 0x38
 8015968:	4899      	ldr	r0, [pc, #612]	; (8015bd0 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 801596a:	6800      	ldr	r0, [r0, #0]
 801596c:	7c40      	ldrb	r0, [r0, #17]
 801596e:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 8015972:	6925      	ldr	r5, [r4, #16]
 8015974:	f8d5 8000 	ldr.w	r8, [r5]
 8015978:	f7fa f816 	bl	800f9a8 <GUI_GetBitsPerPixelEx>
 801597c:	2808      	cmp	r0, #8
 801597e:	fa0f fb87 	sxth.w	fp, r7
 8015982:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015984:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015986:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015988:	d904      	bls.n	8015994 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 801598a:	2810      	cmp	r0, #16
 801598c:	bf8c      	ite	hi
 801598e:	2404      	movhi	r4, #4
 8015990:	2402      	movls	r4, #2
 8015992:	e000      	b.n	8015996 <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 8015994:	2401      	movs	r4, #1
 8015996:	45a9      	cmp	r9, r5
 8015998:	d10f      	bne.n	80159ba <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 801599a:	2001      	movs	r0, #1
 801599c:	9203      	str	r2, [sp, #12]
 801599e:	f10a 0218 	add.w	r2, sl, #24
 80159a2:	9000      	str	r0, [sp, #0]
 80159a4:	9001      	str	r0, [sp, #4]
 80159a6:	9102      	str	r1, [sp, #8]
 80159a8:	9204      	str	r2, [sp, #16]
 80159aa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80159ac:	990d      	ldr	r1, [sp, #52]	; 0x34
 80159ae:	2200      	movs	r2, #0
 80159b0:	9205      	str	r2, [sp, #20]
 80159b2:	465a      	mov	r2, fp
 80159b4:	f7fa fa3a 	bl	800fe2c <LCD_DrawBitmap>
 80159b8:	e16b      	b.n	8015c92 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 80159ba:	2920      	cmp	r1, #32
 80159bc:	f040 808e 	bne.w	8015adc <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 80159c0:	fb0b f004 	mul.w	r0, fp, r4
 80159c4:	f7fd fa28 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 80159c8:	900e      	str	r0, [sp, #56]	; 0x38
 80159ca:	2800      	cmp	r0, #0
 80159cc:	f000 8161 	beq.w	8015c92 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 80159d0:	f7fc ffce 	bl	8012970 <GUI_ALLOC_LockH>
 80159d4:	901a      	str	r0, [sp, #104]	; 0x68
 80159d6:	4630      	mov	r0, r6
 80159d8:	f7fc ffca 	bl	8012970 <GUI_ALLOC_LockH>
 80159dc:	9018      	str	r0, [sp, #96]	; 0x60
 80159de:	692b      	ldr	r3, [r5, #16]
 80159e0:	f100 0a18 	add.w	sl, r0, #24
 80159e4:	ea4f 068b 	mov.w	r6, fp, lsl #2
 80159e8:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 80159ec:	2b00      	cmp	r3, #0
 80159ee:	d02f      	beq.n	8015a50 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 80159f0:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 80159f4:	2c02      	cmp	r4, #2
 80159f6:	d003      	beq.n	8015a00 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 80159f8:	2c04      	cmp	r4, #4
 80159fa:	d001      	beq.n	8015a00 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 80159fc:	2c01      	cmp	r4, #1
 80159fe:	d106      	bne.n	8015a0e <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 8015a00:	4650      	mov	r0, sl
 8015a02:	692f      	ldr	r7, [r5, #16]
 8015a04:	991a      	ldr	r1, [sp, #104]	; 0x68
 8015a06:	465a      	mov	r2, fp
 8015a08:	4623      	mov	r3, r4
 8015a0a:	47b8      	blx	r7
 8015a0c:	44b2      	add	sl, r6
 8015a0e:	2301      	movs	r3, #1
 8015a10:	2200      	movs	r2, #0
 8015a12:	991a      	ldr	r1, [sp, #104]	; 0x68
 8015a14:	9300      	str	r3, [sp, #0]
 8015a16:	9301      	str	r3, [sp, #4]
 8015a18:	9203      	str	r2, [sp, #12]
 8015a1a:	9104      	str	r1, [sp, #16]
 8015a1c:	9205      	str	r2, [sp, #20]
 8015a1e:	4641      	mov	r1, r8
 8015a20:	465a      	mov	r2, fp
 8015a22:	f8cd 9008 	str.w	r9, [sp, #8]
 8015a26:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015a28:	f7fa fa00 	bl	800fe2c <LCD_DrawBitmap>
 8015a2c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8015a2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015a30:	f108 0701 	add.w	r7, r8, #1
 8015a34:	fa02 f381 	sxtah	r3, r2, r1
 8015a38:	42bb      	cmp	r3, r7
 8015a3a:	d107      	bne.n	8015a4c <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 8015a3c:	a818      	add	r0, sp, #96	; 0x60
 8015a3e:	f7fc ffa5 	bl	801298c <GUI_ALLOC_UnlockH>
 8015a42:	a81a      	add	r0, sp, #104	; 0x68
 8015a44:	f7fc ffa2 	bl	801298c <GUI_ALLOC_UnlockH>
 8015a48:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015a4a:	e120      	b.n	8015c8e <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 8015a4c:	46b8      	mov	r8, r7
 8015a4e:	e7d1      	b.n	80159f4 <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 8015a50:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015a52:	2c02      	cmp	r4, #2
 8015a54:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8015a56:	d00e      	beq.n	8015a76 <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 8015a58:	2c04      	cmp	r4, #4
 8015a5a:	d018      	beq.n	8015a8e <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 8015a5c:	2c01      	cmp	r4, #1
 8015a5e:	d125      	bne.n	8015aac <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 8015a60:	2300      	movs	r3, #0
 8015a62:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8015a66:	9309      	str	r3, [sp, #36]	; 0x24
 8015a68:	47c0      	blx	r8
 8015a6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015a6c:	54f8      	strb	r0, [r7, r3]
 8015a6e:	3301      	adds	r3, #1
 8015a70:	459b      	cmp	fp, r3
 8015a72:	d1f6      	bne.n	8015a62 <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 8015a74:	e019      	b.n	8015aaa <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 8015a76:	2300      	movs	r3, #0
 8015a78:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8015a7c:	9309      	str	r3, [sp, #36]	; 0x24
 8015a7e:	47c0      	blx	r8
 8015a80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015a82:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 8015a86:	3301      	adds	r3, #1
 8015a88:	459b      	cmp	fp, r3
 8015a8a:	d1f5      	bne.n	8015a78 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 8015a8c:	e00d      	b.n	8015aaa <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 8015a8e:	465a      	mov	r2, fp
 8015a90:	2300      	movs	r3, #0
 8015a92:	f85a 0003 	ldr.w	r0, [sl, r3]
 8015a96:	920b      	str	r2, [sp, #44]	; 0x2c
 8015a98:	9309      	str	r3, [sp, #36]	; 0x24
 8015a9a:	47c0      	blx	r8
 8015a9c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015a9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015aa0:	3a01      	subs	r2, #1
 8015aa2:	50f8      	str	r0, [r7, r3]
 8015aa4:	f103 0304 	add.w	r3, r3, #4
 8015aa8:	d1f3      	bne.n	8015a92 <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 8015aaa:	44b2      	add	sl, r6
 8015aac:	2301      	movs	r3, #1
 8015aae:	2200      	movs	r2, #0
 8015ab0:	991a      	ldr	r1, [sp, #104]	; 0x68
 8015ab2:	9300      	str	r3, [sp, #0]
 8015ab4:	9301      	str	r3, [sp, #4]
 8015ab6:	9203      	str	r2, [sp, #12]
 8015ab8:	9104      	str	r1, [sp, #16]
 8015aba:	9205      	str	r2, [sp, #20]
 8015abc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015abe:	f8cd 9008 	str.w	r9, [sp, #8]
 8015ac2:	4629      	mov	r1, r5
 8015ac4:	465a      	mov	r2, fp
 8015ac6:	f7fa f9b1 	bl	800fe2c <LCD_DrawBitmap>
 8015aca:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015acc:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015ace:	1c6f      	adds	r7, r5, #1
 8015ad0:	fa01 f380 	sxtah	r3, r1, r0
 8015ad4:	42bb      	cmp	r3, r7
 8015ad6:	d0b1      	beq.n	8015a3c <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 8015ad8:	463d      	mov	r5, r7
 8015ada:	e7ba      	b.n	8015a52 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 8015adc:	2910      	cmp	r1, #16
 8015ade:	f040 80d8 	bne.w	8015c92 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8015ae2:	fa0f fa87 	sxth.w	sl, r7
 8015ae6:	fb0a f004 	mul.w	r0, sl, r4
 8015aea:	f7fd f995 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 8015aee:	9012      	str	r0, [sp, #72]	; 0x48
 8015af0:	2800      	cmp	r0, #0
 8015af2:	f000 80ce 	beq.w	8015c92 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8015af6:	f7fc ff3b 	bl	8012970 <GUI_ALLOC_LockH>
 8015afa:	901a      	str	r0, [sp, #104]	; 0x68
 8015afc:	4630      	mov	r0, r6
 8015afe:	f7fc ff37 	bl	8012970 <GUI_ALLOC_LockH>
 8015b02:	9018      	str	r0, [sp, #96]	; 0x60
 8015b04:	692b      	ldr	r3, [r5, #16]
 8015b06:	f100 0618 	add.w	r6, r0, #24
 8015b0a:	b113      	cbz	r3, 8015b12 <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 8015b0c:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8015b10:	b92b      	cbnz	r3, 8015b1e <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 8015b12:	00e2      	lsls	r2, r4, #3
 8015b14:	b23f      	sxth	r7, r7
 8015b16:	9211      	str	r2, [sp, #68]	; 0x44
 8015b18:	007f      	lsls	r7, r7, #1
 8015b1a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015b1c:	e088      	b.n	8015c30 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 8015b1e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8015b22:	0080      	lsls	r0, r0, #2
 8015b24:	f7fd f978 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 8015b28:	9011      	str	r0, [sp, #68]	; 0x44
 8015b2a:	b118      	cbz	r0, 8015b34 <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 8015b2c:	f7fc ff20 	bl	8012970 <GUI_ALLOC_LockH>
 8015b30:	9019      	str	r0, [sp, #100]	; 0x64
 8015b32:	e001      	b.n	8015b38 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 8015b34:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015b36:	9319      	str	r3, [sp, #100]	; 0x64
 8015b38:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015b3a:	2b00      	cmp	r3, #0
 8015b3c:	f000 80a0 	beq.w	8015c80 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8015b40:	b23f      	sxth	r7, r7
 8015b42:	007f      	lsls	r7, r7, #1
 8015b44:	970e      	str	r7, [sp, #56]	; 0x38
 8015b46:	00e7      	lsls	r7, r4, #3
 8015b48:	9713      	str	r7, [sp, #76]	; 0x4c
 8015b4a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8015b4c:	970c      	str	r7, [sp, #48]	; 0x30
 8015b4e:	2c02      	cmp	r4, #2
 8015b50:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8015b54:	d004      	beq.n	8015b60 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 8015b56:	2c04      	cmp	r4, #4
 8015b58:	d007      	beq.n	8015b6a <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8015b5a:	2c01      	cmp	r4, #1
 8015b5c:	d114      	bne.n	8015b88 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 8015b5e:	e004      	b.n	8015b6a <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8015b60:	4630      	mov	r0, r6
 8015b62:	9919      	ldr	r1, [sp, #100]	; 0x64
 8015b64:	4652      	mov	r2, sl
 8015b66:	4623      	mov	r3, r4
 8015b68:	e003      	b.n	8015b72 <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 8015b6a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8015b6c:	4630      	mov	r0, r6
 8015b6e:	4652      	mov	r2, sl
 8015b70:	2302      	movs	r3, #2
 8015b72:	f8d9 7014 	ldr.w	r7, [r9, #20]
 8015b76:	47b8      	blx	r7
 8015b78:	692f      	ldr	r7, [r5, #16]
 8015b7a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015b7c:	4641      	mov	r1, r8
 8015b7e:	4652      	mov	r2, sl
 8015b80:	4623      	mov	r3, r4
 8015b82:	47b8      	blx	r7
 8015b84:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8015b86:	443e      	add	r6, r7
 8015b88:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015b8a:	991a      	ldr	r1, [sp, #104]	; 0x68
 8015b8c:	9104      	str	r1, [sp, #16]
 8015b8e:	2301      	movs	r3, #1
 8015b90:	2200      	movs	r2, #0
 8015b92:	f107 0801 	add.w	r8, r7, #1
 8015b96:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8015b98:	9300      	str	r3, [sp, #0]
 8015b9a:	9301      	str	r3, [sp, #4]
 8015b9c:	9702      	str	r7, [sp, #8]
 8015b9e:	9203      	str	r2, [sp, #12]
 8015ba0:	9205      	str	r2, [sp, #20]
 8015ba2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015ba4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015ba6:	465a      	mov	r2, fp
 8015ba8:	f7fa f940 	bl	800fe2c <LCD_DrawBitmap>
 8015bac:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8015bae:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015bb0:	fa00 f387 	sxtah	r3, r0, r7
 8015bb4:	4543      	cmp	r3, r8
 8015bb6:	d002      	beq.n	8015bbe <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 8015bb8:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8015bbc:	e7c7      	b.n	8015b4e <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 8015bbe:	a819      	add	r0, sp, #100	; 0x64
 8015bc0:	f7fc fee4 	bl	801298c <GUI_ALLOC_UnlockH>
 8015bc4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015bc6:	f7fc ff0d 	bl	80129e4 <GUI_ALLOC_Free>
 8015bca:	e059      	b.n	8015c80 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8015bcc:	20019c9c 	.word	0x20019c9c
 8015bd0:	2000016c 	.word	0x2000016c
 8015bd4:	2c04      	cmp	r4, #4
 8015bd6:	d041      	beq.n	8015c5c <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 8015bd8:	2c01      	cmp	r4, #1
 8015bda:	d111      	bne.n	8015c00 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 8015bdc:	464a      	mov	r2, r9
 8015bde:	4631      	mov	r1, r6
 8015be0:	f831 0b02 	ldrh.w	r0, [r1], #2
 8015be4:	910a      	str	r1, [sp, #40]	; 0x28
 8015be6:	920b      	str	r2, [sp, #44]	; 0x2c
 8015be8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015bea:	4798      	blx	r3
 8015bec:	47c0      	blx	r8
 8015bee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015bf0:	f802 0b01 	strb.w	r0, [r2], #1
 8015bf4:	eb09 000a 	add.w	r0, r9, sl
 8015bf8:	4282      	cmp	r2, r0
 8015bfa:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015bfc:	d1f0      	bne.n	8015be0 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 8015bfe:	443e      	add	r6, r7
 8015c00:	2301      	movs	r3, #1
 8015c02:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c04:	991a      	ldr	r1, [sp, #104]	; 0x68
 8015c06:	9300      	str	r3, [sp, #0]
 8015c08:	2200      	movs	r2, #0
 8015c0a:	9301      	str	r3, [sp, #4]
 8015c0c:	9002      	str	r0, [sp, #8]
 8015c0e:	9203      	str	r2, [sp, #12]
 8015c10:	9104      	str	r1, [sp, #16]
 8015c12:	9205      	str	r2, [sp, #20]
 8015c14:	4629      	mov	r1, r5
 8015c16:	465a      	mov	r2, fp
 8015c18:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015c1a:	f7fa f907 	bl	800fe2c <LCD_DrawBitmap>
 8015c1e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8015c20:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015c22:	f105 0901 	add.w	r9, r5, #1
 8015c26:	fa02 f381 	sxtah	r3, r2, r1
 8015c2a:	454b      	cmp	r3, r9
 8015c2c:	d028      	beq.n	8015c80 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8015c2e:	464d      	mov	r5, r9
 8015c30:	2c02      	cmp	r4, #2
 8015c32:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 8015c36:	d1cd      	bne.n	8015bd4 <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 8015c38:	464b      	mov	r3, r9
 8015c3a:	4631      	mov	r1, r6
 8015c3c:	46d9      	mov	r9, fp
 8015c3e:	f831 0b02 	ldrh.w	r0, [r1], #2
 8015c42:	910a      	str	r1, [sp, #40]	; 0x28
 8015c44:	9309      	str	r3, [sp, #36]	; 0x24
 8015c46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015c48:	4790      	blx	r2
 8015c4a:	47c0      	blx	r8
 8015c4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c4e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015c50:	f823 0b02 	strh.w	r0, [r3], #2
 8015c54:	f1b9 0901 	subs.w	r9, r9, #1
 8015c58:	d1f1      	bne.n	8015c3e <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 8015c5a:	e7d0      	b.n	8015bfe <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 8015c5c:	464b      	mov	r3, r9
 8015c5e:	4631      	mov	r1, r6
 8015c60:	46d9      	mov	r9, fp
 8015c62:	f831 0b02 	ldrh.w	r0, [r1], #2
 8015c66:	910a      	str	r1, [sp, #40]	; 0x28
 8015c68:	9309      	str	r3, [sp, #36]	; 0x24
 8015c6a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015c6c:	4790      	blx	r2
 8015c6e:	47c0      	blx	r8
 8015c70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c72:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015c74:	f843 0b04 	str.w	r0, [r3], #4
 8015c78:	f1b9 0901 	subs.w	r9, r9, #1
 8015c7c:	d1f1      	bne.n	8015c62 <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 8015c7e:	e7be      	b.n	8015bfe <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 8015c80:	a818      	add	r0, sp, #96	; 0x60
 8015c82:	f7fc fe83 	bl	801298c <GUI_ALLOC_UnlockH>
 8015c86:	a81a      	add	r0, sp, #104	; 0x68
 8015c88:	f7fc fe80 	bl	801298c <GUI_ALLOC_UnlockH>
 8015c8c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015c8e:	f7fc fea9 	bl	80129e4 <GUI_ALLOC_Free>
 8015c92:	b01d      	add	sp, #116	; 0x74
 8015c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015c98 <GUI_MEMDEV__WriteToActiveAlpha>:
 8015c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c9c:	b091      	sub	sp, #68	; 0x44
 8015c9e:	460e      	mov	r6, r1
 8015ca0:	4614      	mov	r4, r2
 8015ca2:	900d      	str	r0, [sp, #52]	; 0x34
 8015ca4:	f7fc fe64 	bl	8012970 <GUI_ALLOC_LockH>
 8015ca8:	4602      	mov	r2, r0
 8015caa:	a810      	add	r0, sp, #64	; 0x40
 8015cac:	6813      	ldr	r3, [r2, #0]
 8015cae:	4d5b      	ldr	r5, [pc, #364]	; (8015e1c <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 8015cb0:	691b      	ldr	r3, [r3, #16]
 8015cb2:	f840 2d08 	str.w	r2, [r0, #-8]!
 8015cb6:	685b      	ldr	r3, [r3, #4]
 8015cb8:	f8b2 b008 	ldrh.w	fp, [r2, #8]
 8015cbc:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 8015cc0:	9309      	str	r3, [sp, #36]	; 0x24
 8015cc2:	f7fc fe63 	bl	801298c <GUI_ALLOC_UnlockH>
 8015cc6:	682b      	ldr	r3, [r5, #0]
 8015cc8:	4f55      	ldr	r7, [pc, #340]	; (8015e20 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 8015cca:	7c5b      	ldrb	r3, [r3, #17]
 8015ccc:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8015cd0:	68c3      	ldr	r3, [r0, #12]
 8015cd2:	2108      	movs	r1, #8
 8015cd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015cd6:	4798      	blx	r3
 8015cd8:	682b      	ldr	r3, [r5, #0]
 8015cda:	7c5b      	ldrb	r3, [r3, #17]
 8015cdc:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8015ce0:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8015ce4:	2817      	cmp	r0, #23
 8015ce6:	bf88      	it	hi
 8015ce8:	2020      	movhi	r0, #32
 8015cea:	9008      	str	r0, [sp, #32]
 8015cec:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8015cf0:	f8d8 2000 	ldr.w	r2, [r8]
 8015cf4:	910a      	str	r1, [sp, #40]	; 0x28
 8015cf6:	2000      	movs	r0, #0
 8015cf8:	920b      	str	r2, [sp, #44]	; 0x2c
 8015cfa:	f7fa fe27 	bl	801094c <GUI__AllocAlphaBuffer>
 8015cfe:	2800      	cmp	r0, #0
 8015d00:	f040 8089 	bne.w	8015e16 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8015d04:	682a      	ldr	r2, [r5, #0]
 8015d06:	fa0f f78b 	sxth.w	r7, fp
 8015d0a:	19f5      	adds	r5, r6, r7
 8015d0c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 8015d10:	3d01      	subs	r5, #1
 8015d12:	1aed      	subs	r5, r5, r3
 8015d14:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 8015d18:	2d00      	cmp	r5, #0
 8015d1a:	bfcc      	ite	gt
 8015d1c:	ebc5 0507 	rsbgt	r5, r5, r7
 8015d20:	463d      	movle	r5, r7
 8015d22:	42b3      	cmp	r3, r6
 8015d24:	bfc3      	ittte	gt
 8015d26:	ebc6 0103 	rsbgt	r1, r6, r3
 8015d2a:	ebc1 0505 	rsbgt	r5, r1, r5
 8015d2e:	461e      	movgt	r6, r3
 8015d30:	2100      	movle	r1, #0
 8015d32:	2d00      	cmp	r5, #0
 8015d34:	dd6f      	ble.n	8015e16 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8015d36:	fa0f f389 	sxth.w	r3, r9
 8015d3a:	18e0      	adds	r0, r4, r3
 8015d3c:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 8015d40:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 8015d44:	3801      	subs	r0, #1
 8015d46:	ebcc 0000 	rsb	r0, ip, r0
 8015d4a:	2800      	cmp	r0, #0
 8015d4c:	bfc8      	it	gt
 8015d4e:	ebc0 0303 	rsbgt	r3, r0, r3
 8015d52:	4294      	cmp	r4, r2
 8015d54:	bfbd      	ittte	lt
 8015d56:	ebc4 0a02 	rsblt	sl, r4, r2
 8015d5a:	ebca 0303 	rsblt	r3, sl, r3
 8015d5e:	4614      	movlt	r4, r2
 8015d60:	f04f 0a00 	movge.w	sl, #0
 8015d64:	2b00      	cmp	r3, #0
 8015d66:	dd56      	ble.n	8015e16 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8015d68:	fb07 1a0a 	mla	sl, r7, sl, r1
 8015d6c:	18e3      	adds	r3, r4, r3
 8015d6e:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8015d72:	930c      	str	r3, [sp, #48]	; 0x30
 8015d74:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015d76:	f7f7 fd43 	bl	800d800 <GUI_MEMDEV_GetDataPtr>
 8015d7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d7c:	9300      	str	r3, [sp, #0]
 8015d7e:	ab0f      	add	r3, sp, #60	; 0x3c
 8015d80:	eb00 020a 	add.w	r2, r0, sl
 8015d84:	9301      	str	r3, [sp, #4]
 8015d86:	4630      	mov	r0, r6
 8015d88:	4621      	mov	r1, r4
 8015d8a:	462b      	mov	r3, r5
 8015d8c:	f7fa fcf8 	bl	8010780 <GUI__DoAlphaBlending>
 8015d90:	4681      	mov	r9, r0
 8015d92:	2800      	cmp	r0, #0
 8015d94:	d03f      	beq.n	8015e16 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8015d96:	4b23      	ldr	r3, [pc, #140]	; (8015e24 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 8015d98:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015d9a:	4299      	cmp	r1, r3
 8015d9c:	d01e      	beq.n	8015ddc <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8015d9e:	4629      	mov	r1, r5
 8015da0:	9a08      	ldr	r2, [sp, #32]
 8015da2:	4643      	mov	r3, r8
 8015da4:	f002 fa61 	bl	801826a <GUI__CompactPixelIndicesEx>
 8015da8:	b9c0      	cbnz	r0, 8015ddc <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8015daa:	f8d8 c010 	ldr.w	ip, [r8, #16]
 8015dae:	f1bc 0f00 	cmp.w	ip, #0
 8015db2:	d006      	beq.n	8015dc2 <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 8015db4:	4648      	mov	r0, r9
 8015db6:	4649      	mov	r1, r9
 8015db8:	fa0f f28b 	sxth.w	r2, fp
 8015dbc:	2304      	movs	r3, #4
 8015dbe:	47e0      	blx	ip
 8015dc0:	e00c      	b.n	8015ddc <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8015dc2:	464a      	mov	r2, r9
 8015dc4:	463b      	mov	r3, r7
 8015dc6:	6810      	ldr	r0, [r2, #0]
 8015dc8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8015dca:	9206      	str	r2, [sp, #24]
 8015dcc:	9307      	str	r3, [sp, #28]
 8015dce:	4788      	blx	r1
 8015dd0:	9b07      	ldr	r3, [sp, #28]
 8015dd2:	9a06      	ldr	r2, [sp, #24]
 8015dd4:	3b01      	subs	r3, #1
 8015dd6:	f842 0b04 	str.w	r0, [r2], #4
 8015dda:	d1f4      	bne.n	8015dc6 <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 8015ddc:	9a08      	ldr	r2, [sp, #32]
 8015dde:	9202      	str	r2, [sp, #8]
 8015de0:	2301      	movs	r3, #1
 8015de2:	2200      	movs	r2, #0
 8015de4:	f104 0c01 	add.w	ip, r4, #1
 8015de8:	9300      	str	r3, [sp, #0]
 8015dea:	9301      	str	r3, [sp, #4]
 8015dec:	9203      	str	r2, [sp, #12]
 8015dee:	9205      	str	r2, [sp, #20]
 8015df0:	f8cd 9010 	str.w	r9, [sp, #16]
 8015df4:	4630      	mov	r0, r6
 8015df6:	4621      	mov	r1, r4
 8015df8:	462a      	mov	r2, r5
 8015dfa:	f8cd c01c 	str.w	ip, [sp, #28]
 8015dfe:	f7fa f815 	bl	800fe2c <LCD_DrawBitmap>
 8015e02:	2304      	movs	r3, #4
 8015e04:	fb1b aa03 	smlabb	sl, fp, r3, sl
 8015e08:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8015e0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e0e:	459c      	cmp	ip, r3
 8015e10:	d001      	beq.n	8015e16 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8015e12:	4664      	mov	r4, ip
 8015e14:	e7ae      	b.n	8015d74 <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 8015e16:	b011      	add	sp, #68	; 0x44
 8015e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e1c:	2000016c 	.word	0x2000016c
 8015e20:	20019c9c 	.word	0x20019c9c
 8015e24:	08012fb3 	.word	0x08012fb3

08015e28 <GUI_MEMDEV_WriteAt>:
 8015e28:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8015e2a:	460c      	mov	r4, r1
 8015e2c:	4615      	mov	r5, r2
 8015e2e:	4606      	mov	r6, r0
 8015e30:	b330      	cbz	r0, 8015e80 <GUI_MEMDEV_WriteAt+0x58>
 8015e32:	f7fc fd9d 	bl	8012970 <GUI_ALLOC_LockH>
 8015e36:	4a13      	ldr	r2, [pc, #76]	; (8015e84 <GUI_MEMDEV_WriteAt+0x5c>)
 8015e38:	8943      	ldrh	r3, [r0, #10]
 8015e3a:	9001      	str	r0, [sp, #4]
 8015e3c:	4294      	cmp	r4, r2
 8015e3e:	8902      	ldrh	r2, [r0, #8]
 8015e40:	bf04      	itt	eq
 8015e42:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 8015e46:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 8015e4a:	f8ad 4008 	strh.w	r4, [sp, #8]
 8015e4e:	3a01      	subs	r2, #1
 8015e50:	3b01      	subs	r3, #1
 8015e52:	4422      	add	r2, r4
 8015e54:	442b      	add	r3, r5
 8015e56:	a801      	add	r0, sp, #4
 8015e58:	f8ad 200c 	strh.w	r2, [sp, #12]
 8015e5c:	f8ad 500a 	strh.w	r5, [sp, #10]
 8015e60:	f8ad 300e 	strh.w	r3, [sp, #14]
 8015e64:	f7fc fd92 	bl	801298c <GUI_ALLOC_UnlockH>
 8015e68:	a802      	add	r0, sp, #8
 8015e6a:	f7f7 f90b 	bl	800d084 <WM__InitIVRSearch>
 8015e6e:	b138      	cbz	r0, 8015e80 <GUI_MEMDEV_WriteAt+0x58>
 8015e70:	4630      	mov	r0, r6
 8015e72:	4621      	mov	r1, r4
 8015e74:	462a      	mov	r2, r5
 8015e76:	f7f8 fa89 	bl	800e38c <GUI_MEMDEV__WriteToActiveAt>
 8015e7a:	f7f7 f841 	bl	800cf00 <WM__GetNextIVR>
 8015e7e:	e7f6      	b.n	8015e6e <GUI_MEMDEV_WriteAt+0x46>
 8015e80:	b004      	add	sp, #16
 8015e82:	bd70      	pop	{r4, r5, r6, pc}
 8015e84:	fffff001 	.word	0xfffff001

08015e88 <GUI_MEMDEV_Write>:
 8015e88:	4901      	ldr	r1, [pc, #4]	; (8015e90 <GUI_MEMDEV_Write+0x8>)
 8015e8a:	460a      	mov	r2, r1
 8015e8c:	f7ff bfcc 	b.w	8015e28 <GUI_MEMDEV_WriteAt>
 8015e90:	fffff001 	.word	0xfffff001

08015e94 <GUI_USAGE_BM_AddPixel>:
 8015e94:	4603      	mov	r3, r0
 8015e96:	b510      	push	{r4, lr}
 8015e98:	f933 4b14 	ldrsh.w	r4, [r3], #20
 8015e9c:	1b09      	subs	r1, r1, r4
 8015e9e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8015ea2:	6900      	ldr	r0, [r0, #16]
 8015ea4:	1b12      	subs	r2, r2, r4
 8015ea6:	fb00 3302 	mla	r3, r0, r2, r3
 8015eaa:	10c8      	asrs	r0, r1, #3
 8015eac:	2280      	movs	r2, #128	; 0x80
 8015eae:	f001 0107 	and.w	r1, r1, #7
 8015eb2:	fa42 f101 	asr.w	r1, r2, r1
 8015eb6:	5c1a      	ldrb	r2, [r3, r0]
 8015eb8:	4311      	orrs	r1, r2
 8015eba:	5419      	strb	r1, [r3, r0]
 8015ebc:	bd10      	pop	{r4, pc}

08015ebe <GUI_USAGE_BM_GetNextDirty>:
 8015ebe:	b570      	push	{r4, r5, r6, lr}
 8015ec0:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8015ec4:	680b      	ldr	r3, [r1, #0]
 8015ec6:	8886      	ldrh	r6, [r0, #4]
 8015ec8:	42a2      	cmp	r2, r4
 8015eca:	da41      	bge.n	8015f50 <GUI_USAGE_BM_GetNextDirty+0x92>
 8015ecc:	b236      	sxth	r6, r6
 8015ece:	42b3      	cmp	r3, r6
 8015ed0:	6904      	ldr	r4, [r0, #16]
 8015ed2:	da3d      	bge.n	8015f50 <GUI_USAGE_BM_GetNextDirty+0x92>
 8015ed4:	3014      	adds	r0, #20
 8015ed6:	fb04 0202 	mla	r2, r4, r2, r0
 8015eda:	10dd      	asrs	r5, r3, #3
 8015edc:	1e70      	subs	r0, r6, #1
 8015ede:	1954      	adds	r4, r2, r5
 8015ee0:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 8015ee4:	5d55      	ldrb	r5, [r2, r5]
 8015ee6:	f003 0207 	and.w	r2, r3, #7
 8015eea:	fa05 f202 	lsl.w	r2, r5, r2
 8015eee:	3401      	adds	r4, #1
 8015ef0:	b2d2      	uxtb	r2, r2
 8015ef2:	b93a      	cbnz	r2, 8015f04 <GUI_USAGE_BM_GetNextDirty+0x46>
 8015ef4:	b368      	cbz	r0, 8015f52 <GUI_USAGE_BM_GetNextDirty+0x94>
 8015ef6:	3308      	adds	r3, #8
 8015ef8:	f814 2b01 	ldrb.w	r2, [r4], #1
 8015efc:	3801      	subs	r0, #1
 8015efe:	f023 0307 	bic.w	r3, r3, #7
 8015f02:	e7f6      	b.n	8015ef2 <GUI_USAGE_BM_GetNextDirty+0x34>
 8015f04:	0615      	lsls	r5, r2, #24
 8015f06:	d403      	bmi.n	8015f10 <GUI_USAGE_BM_GetNextDirty+0x52>
 8015f08:	0052      	lsls	r2, r2, #1
 8015f0a:	b2d2      	uxtb	r2, r2
 8015f0c:	3301      	adds	r3, #1
 8015f0e:	e7f9      	b.n	8015f04 <GUI_USAGE_BM_GetNextDirty+0x46>
 8015f10:	2aff      	cmp	r2, #255	; 0xff
 8015f12:	461d      	mov	r5, r3
 8015f14:	d005      	beq.n	8015f22 <GUI_USAGE_BM_GetNextDirty+0x64>
 8015f16:	0656      	lsls	r6, r2, #25
 8015f18:	d504      	bpl.n	8015f24 <GUI_USAGE_BM_GetNextDirty+0x66>
 8015f1a:	0052      	lsls	r2, r2, #1
 8015f1c:	b2d2      	uxtb	r2, r2
 8015f1e:	3301      	adds	r3, #1
 8015f20:	e7f9      	b.n	8015f16 <GUI_USAGE_BM_GetNextDirty+0x58>
 8015f22:	3307      	adds	r3, #7
 8015f24:	f003 0207 	and.w	r2, r3, #7
 8015f28:	2a07      	cmp	r2, #7
 8015f2a:	d10d      	bne.n	8015f48 <GUI_USAGE_BM_GetNextDirty+0x8a>
 8015f2c:	3801      	subs	r0, #1
 8015f2e:	d40b      	bmi.n	8015f48 <GUI_USAGE_BM_GetNextDirty+0x8a>
 8015f30:	f814 2b01 	ldrb.w	r2, [r4], #1
 8015f34:	2aff      	cmp	r2, #255	; 0xff
 8015f36:	d101      	bne.n	8015f3c <GUI_USAGE_BM_GetNextDirty+0x7e>
 8015f38:	3308      	adds	r3, #8
 8015f3a:	e7f7      	b.n	8015f2c <GUI_USAGE_BM_GetNextDirty+0x6e>
 8015f3c:	0610      	lsls	r0, r2, #24
 8015f3e:	d503      	bpl.n	8015f48 <GUI_USAGE_BM_GetNextDirty+0x8a>
 8015f40:	0052      	lsls	r2, r2, #1
 8015f42:	b2d2      	uxtb	r2, r2
 8015f44:	3301      	adds	r3, #1
 8015f46:	e7f9      	b.n	8015f3c <GUI_USAGE_BM_GetNextDirty+0x7e>
 8015f48:	1b58      	subs	r0, r3, r5
 8015f4a:	600d      	str	r5, [r1, #0]
 8015f4c:	3001      	adds	r0, #1
 8015f4e:	bd70      	pop	{r4, r5, r6, pc}
 8015f50:	2000      	movs	r0, #0
 8015f52:	bd70      	pop	{r4, r5, r6, pc}

08015f54 <_GUI_USAGE_BM_Delete>:
 8015f54:	f7fc bd46 	b.w	80129e4 <GUI_ALLOC_Free>

08015f58 <GUI_USAGE_BM_Clear>:
 8015f58:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015f5c:	6902      	ldr	r2, [r0, #16]
 8015f5e:	2100      	movs	r1, #0
 8015f60:	3014      	adds	r0, #20
 8015f62:	435a      	muls	r2, r3
 8015f64:	f004 b9e1 	b.w	801a32a <memset>

08015f68 <GUI_USAGE_BM_AddHLine>:
 8015f68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015f6a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015f6e:	1b09      	subs	r1, r1, r4
 8015f70:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015f74:	42a1      	cmp	r1, r4
 8015f76:	da2f      	bge.n	8015fd8 <GUI_USAGE_BM_AddHLine+0x70>
 8015f78:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 8015f7c:	440b      	add	r3, r1
 8015f7e:	f100 0414 	add.w	r4, r0, #20
 8015f82:	3b01      	subs	r3, #1
 8015f84:	6900      	ldr	r0, [r0, #16]
 8015f86:	1b52      	subs	r2, r2, r5
 8015f88:	43de      	mvns	r6, r3
 8015f8a:	fb00 4202 	mla	r2, r0, r2, r4
 8015f8e:	f001 0707 	and.w	r7, r1, #7
 8015f92:	10cc      	asrs	r4, r1, #3
 8015f94:	f006 0607 	and.w	r6, r6, #7
 8015f98:	21ff      	movs	r1, #255	; 0xff
 8015f9a:	fa41 f707 	asr.w	r7, r1, r7
 8015f9e:	fa01 f606 	lsl.w	r6, r1, r6
 8015fa2:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 8015fa6:	eb02 0504 	add.w	r5, r2, r4
 8015faa:	b2ff      	uxtb	r7, r7
 8015fac:	b2f6      	uxtb	r6, r6
 8015fae:	5d10      	ldrb	r0, [r2, r4]
 8015fb0:	d103      	bne.n	8015fba <GUI_USAGE_BM_AddHLine+0x52>
 8015fb2:	403e      	ands	r6, r7
 8015fb4:	4330      	orrs	r0, r6
 8015fb6:	5510      	strb	r0, [r2, r4]
 8015fb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015fba:	4338      	orrs	r0, r7
 8015fbc:	5510      	strb	r0, [r2, r4]
 8015fbe:	1e5c      	subs	r4, r3, #1
 8015fc0:	2c00      	cmp	r4, #0
 8015fc2:	f105 0501 	add.w	r5, r5, #1
 8015fc6:	dd04      	ble.n	8015fd2 <GUI_USAGE_BM_AddHLine+0x6a>
 8015fc8:	4628      	mov	r0, r5
 8015fca:	4622      	mov	r2, r4
 8015fcc:	f004 f9ad 	bl	801a32a <memset>
 8015fd0:	4425      	add	r5, r4
 8015fd2:	782b      	ldrb	r3, [r5, #0]
 8015fd4:	431e      	orrs	r6, r3
 8015fd6:	702e      	strb	r6, [r5, #0]
 8015fd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08015fdc <GUI_USAGE_BM_Create>:
 8015fdc:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 8015fe0:	f102 060f 	add.w	r6, r2, #15
 8015fe4:	1136      	asrs	r6, r6, #4
 8015fe6:	0076      	lsls	r6, r6, #1
 8015fe8:	4682      	mov	sl, r0
 8015fea:	fb06 f003 	mul.w	r0, r6, r3
 8015fee:	3014      	adds	r0, #20
 8015ff0:	4689      	mov	r9, r1
 8015ff2:	4690      	mov	r8, r2
 8015ff4:	461f      	mov	r7, r3
 8015ff6:	f7fc ff28 	bl	8012e4a <GUI_ALLOC_AllocZero>
 8015ffa:	4683      	mov	fp, r0
 8015ffc:	b198      	cbz	r0, 8016026 <GUI_USAGE_BM_Create+0x4a>
 8015ffe:	f7fc fcb7 	bl	8012970 <GUI_ALLOC_LockH>
 8016002:	4604      	mov	r4, r0
 8016004:	4b0a      	ldr	r3, [pc, #40]	; (8016030 <GUI_USAGE_BM_Create+0x54>)
 8016006:	60a3      	str	r3, [r4, #8]
 8016008:	a802      	add	r0, sp, #8
 801600a:	2301      	movs	r3, #1
 801600c:	f840 4d04 	str.w	r4, [r0, #-4]!
 8016010:	f8a4 8004 	strh.w	r8, [r4, #4]
 8016014:	f8a4 a000 	strh.w	sl, [r4]
 8016018:	f8a4 9002 	strh.w	r9, [r4, #2]
 801601c:	80e7      	strh	r7, [r4, #6]
 801601e:	81a3      	strh	r3, [r4, #12]
 8016020:	6126      	str	r6, [r4, #16]
 8016022:	f7fc fcb3 	bl	801298c <GUI_ALLOC_UnlockH>
 8016026:	4658      	mov	r0, fp
 8016028:	b002      	add	sp, #8
 801602a:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 801602e:	bf00      	nop
 8016030:	0802095c 	.word	0x0802095c

08016034 <GUI_USAGE_DecUseCnt>:
 8016034:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016036:	4605      	mov	r5, r0
 8016038:	f7fc fc9a 	bl	8012970 <GUI_ALLOC_LockH>
 801603c:	4602      	mov	r2, r0
 801603e:	a802      	add	r0, sp, #8
 8016040:	8994      	ldrh	r4, [r2, #12]
 8016042:	f840 2d04 	str.w	r2, [r0, #-4]!
 8016046:	3c01      	subs	r4, #1
 8016048:	b2a4      	uxth	r4, r4
 801604a:	8194      	strh	r4, [r2, #12]
 801604c:	f7fc fc9e 	bl	801298c <GUI_ALLOC_UnlockH>
 8016050:	b914      	cbnz	r4, 8016058 <GUI_USAGE_DecUseCnt+0x24>
 8016052:	4628      	mov	r0, r5
 8016054:	f7fc fcc6 	bl	80129e4 <GUI_ALLOC_Free>
 8016058:	b003      	add	sp, #12
 801605a:	bd30      	pop	{r4, r5, pc}

0801605c <GUI_USAGE_AddRect>:
 801605c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016060:	4605      	mov	r5, r0
 8016062:	4688      	mov	r8, r1
 8016064:	4617      	mov	r7, r2
 8016066:	4699      	mov	r9, r3
 8016068:	68a8      	ldr	r0, [r5, #8]
 801606a:	464b      	mov	r3, r9
 801606c:	6846      	ldr	r6, [r0, #4]
 801606e:	4641      	mov	r1, r8
 8016070:	4628      	mov	r0, r5
 8016072:	1c54      	adds	r4, r2, #1
 8016074:	47b0      	blx	r6
 8016076:	9b08      	ldr	r3, [sp, #32]
 8016078:	443b      	add	r3, r7
 801607a:	42a3      	cmp	r3, r4
 801607c:	d001      	beq.n	8016082 <GUI_USAGE_AddRect+0x26>
 801607e:	4622      	mov	r2, r4
 8016080:	e7f2      	b.n	8016068 <GUI_USAGE_AddRect+0xc>
 8016082:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

08016088 <GUI_MEMDEV_ReduceYSize>:
 8016088:	b513      	push	{r0, r1, r4, lr}
 801608a:	460c      	mov	r4, r1
 801608c:	b918      	cbnz	r0, 8016096 <GUI_MEMDEV_ReduceYSize+0xe>
 801608e:	4b08      	ldr	r3, [pc, #32]	; (80160b0 <GUI_MEMDEV_ReduceYSize+0x28>)
 8016090:	681b      	ldr	r3, [r3, #0]
 8016092:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016094:	b150      	cbz	r0, 80160ac <GUI_MEMDEV_ReduceYSize+0x24>
 8016096:	f7fc fc6b 	bl	8012970 <GUI_ALLOC_LockH>
 801609a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801609e:	9001      	str	r0, [sp, #4]
 80160a0:	429c      	cmp	r4, r3
 80160a2:	bfb8      	it	lt
 80160a4:	8144      	strhlt	r4, [r0, #10]
 80160a6:	a801      	add	r0, sp, #4
 80160a8:	f7fc fc70 	bl	801298c <GUI_ALLOC_UnlockH>
 80160ac:	b002      	add	sp, #8
 80160ae:	bd10      	pop	{r4, pc}
 80160b0:	2000016c 	.word	0x2000016c

080160b4 <GUI_MEMDEV_Clear>:
 80160b4:	b513      	push	{r0, r1, r4, lr}
 80160b6:	b918      	cbnz	r0, 80160c0 <GUI_MEMDEV_Clear+0xc>
 80160b8:	4b0d      	ldr	r3, [pc, #52]	; (80160f0 <GUI_MEMDEV_Clear+0x3c>)
 80160ba:	681b      	ldr	r3, [r3, #0]
 80160bc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80160be:	b1a8      	cbz	r0, 80160ec <GUI_MEMDEV_Clear+0x38>
 80160c0:	f7fc fc56 	bl	8012970 <GUI_ALLOC_LockH>
 80160c4:	ab02      	add	r3, sp, #8
 80160c6:	6944      	ldr	r4, [r0, #20]
 80160c8:	f843 0d08 	str.w	r0, [r3, #-8]!
 80160cc:	4668      	mov	r0, sp
 80160ce:	f7fc fc5d 	bl	801298c <GUI_ALLOC_UnlockH>
 80160d2:	b15c      	cbz	r4, 80160ec <GUI_MEMDEV_Clear+0x38>
 80160d4:	4620      	mov	r0, r4
 80160d6:	f7fc fc4b 	bl	8012970 <GUI_ALLOC_LockH>
 80160da:	ac02      	add	r4, sp, #8
 80160dc:	6883      	ldr	r3, [r0, #8]
 80160de:	f844 0d04 	str.w	r0, [r4, #-4]!
 80160e2:	689b      	ldr	r3, [r3, #8]
 80160e4:	4798      	blx	r3
 80160e6:	4620      	mov	r0, r4
 80160e8:	f7fc fc50 	bl	801298c <GUI_ALLOC_UnlockH>
 80160ec:	b002      	add	sp, #8
 80160ee:	bd10      	pop	{r4, pc}
 80160f0:	2000016c 	.word	0x2000016c

080160f4 <_GetDevData>:
 80160f4:	4802      	ldr	r0, [pc, #8]	; (8016100 <_GetDevData+0xc>)
 80160f6:	2901      	cmp	r1, #1
 80160f8:	bf18      	it	ne
 80160fa:	2000      	movne	r0, #0
 80160fc:	4770      	bx	lr
 80160fe:	bf00      	nop
 8016100:	080209b4 	.word	0x080209b4

08016104 <_GetDevFunc>:
 8016104:	4802      	ldr	r0, [pc, #8]	; (8016110 <_GetDevFunc+0xc>)
 8016106:	2916      	cmp	r1, #22
 8016108:	bf18      	it	ne
 801610a:	2000      	movne	r0, #0
 801610c:	4770      	bx	lr
 801610e:	bf00      	nop
 8016110:	08015575 	.word	0x08015575

08016114 <_SetOrg>:
 8016114:	6800      	ldr	r0, [r0, #0]
 8016116:	b508      	push	{r3, lr}
 8016118:	b110      	cbz	r0, 8016120 <_SetOrg+0xc>
 801611a:	68c3      	ldr	r3, [r0, #12]
 801611c:	6a1b      	ldr	r3, [r3, #32]
 801611e:	4798      	blx	r3
 8016120:	bd08      	pop	{r3, pc}

08016122 <_GetDevProp>:
 8016122:	6800      	ldr	r0, [r0, #0]
 8016124:	b508      	push	{r3, lr}
 8016126:	b118      	cbz	r0, 8016130 <_GetDevProp+0xe>
 8016128:	68c3      	ldr	r3, [r0, #12]
 801612a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801612c:	4798      	blx	r3
 801612e:	bd08      	pop	{r3, pc}
 8016130:	f04f 30ff 	mov.w	r0, #4294967295
 8016134:	bd08      	pop	{r3, pc}

08016136 <_GetRect>:
 8016136:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016138:	6880      	ldr	r0, [r0, #8]
 801613a:	460c      	mov	r4, r1
 801613c:	f7fc fc18 	bl	8012970 <GUI_ALLOC_LockH>
 8016140:	4603      	mov	r3, r0
 8016142:	a802      	add	r0, sp, #8
 8016144:	8899      	ldrh	r1, [r3, #4]
 8016146:	88da      	ldrh	r2, [r3, #6]
 8016148:	891d      	ldrh	r5, [r3, #8]
 801614a:	f840 3d04 	str.w	r3, [r0, #-4]!
 801614e:	895b      	ldrh	r3, [r3, #10]
 8016150:	8021      	strh	r1, [r4, #0]
 8016152:	8062      	strh	r2, [r4, #2]
 8016154:	4429      	add	r1, r5
 8016156:	441a      	add	r2, r3
 8016158:	3901      	subs	r1, #1
 801615a:	3a01      	subs	r2, #1
 801615c:	80a1      	strh	r1, [r4, #4]
 801615e:	80e2      	strh	r2, [r4, #6]
 8016160:	f7fc fc14 	bl	801298c <GUI_ALLOC_UnlockH>
 8016164:	b003      	add	sp, #12
 8016166:	bd30      	pop	{r4, r5, pc}

08016168 <_XY2PTR>:
 8016168:	4b0e      	ldr	r3, [pc, #56]	; (80161a4 <_XY2PTR+0x3c>)
 801616a:	681b      	ldr	r3, [r3, #0]
 801616c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801616e:	4605      	mov	r5, r0
 8016170:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016172:	460e      	mov	r6, r1
 8016174:	f7fc fbfc 	bl	8012970 <GUI_ALLOC_LockH>
 8016178:	4603      	mov	r3, r0
 801617a:	a802      	add	r0, sp, #8
 801617c:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8016180:	f840 3d04 	str.w	r3, [r0, #-4]!
 8016184:	f103 0118 	add.w	r1, r3, #24
 8016188:	1b36      	subs	r6, r6, r4
 801618a:	68dc      	ldr	r4, [r3, #12]
 801618c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8016190:	fb04 1406 	mla	r4, r4, r6, r1
 8016194:	1aed      	subs	r5, r5, r3
 8016196:	f7fc fbf9 	bl	801298c <GUI_ALLOC_UnlockH>
 801619a:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 801619e:	4620      	mov	r0, r4
 80161a0:	b002      	add	sp, #8
 80161a2:	bd70      	pop	{r4, r5, r6, pc}
 80161a4:	2000016c 	.word	0x2000016c

080161a8 <_GetPixelIndex>:
 80161a8:	b508      	push	{r3, lr}
 80161aa:	4608      	mov	r0, r1
 80161ac:	4611      	mov	r1, r2
 80161ae:	f7ff ffdb 	bl	8016168 <_XY2PTR>
 80161b2:	8800      	ldrh	r0, [r0, #0]
 80161b4:	bd08      	pop	{r3, pc}
	...

080161b8 <_XorPixel>:
 80161b8:	4b14      	ldr	r3, [pc, #80]	; (801620c <_XorPixel+0x54>)
 80161ba:	681b      	ldr	r3, [r3, #0]
 80161bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80161be:	4607      	mov	r7, r0
 80161c0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80161c2:	4615      	mov	r5, r2
 80161c4:	460e      	mov	r6, r1
 80161c6:	f7fc fbd3 	bl	8012970 <GUI_ALLOC_LockH>
 80161ca:	4629      	mov	r1, r5
 80161cc:	9000      	str	r0, [sp, #0]
 80161ce:	4630      	mov	r0, r6
 80161d0:	f7ff ffca 	bl	8016168 <_XY2PTR>
 80161d4:	693b      	ldr	r3, [r7, #16]
 80161d6:	4604      	mov	r4, r0
 80161d8:	689b      	ldr	r3, [r3, #8]
 80161da:	4798      	blx	r3
 80161dc:	8823      	ldrh	r3, [r4, #0]
 80161de:	4058      	eors	r0, r3
 80161e0:	9b00      	ldr	r3, [sp, #0]
 80161e2:	8020      	strh	r0, [r4, #0]
 80161e4:	6958      	ldr	r0, [r3, #20]
 80161e6:	b160      	cbz	r0, 8016202 <_XorPixel+0x4a>
 80161e8:	f7fc fbc2 	bl	8012970 <GUI_ALLOC_LockH>
 80161ec:	ac02      	add	r4, sp, #8
 80161ee:	6883      	ldr	r3, [r0, #8]
 80161f0:	f844 0d04 	str.w	r0, [r4, #-4]!
 80161f4:	681b      	ldr	r3, [r3, #0]
 80161f6:	4631      	mov	r1, r6
 80161f8:	462a      	mov	r2, r5
 80161fa:	4798      	blx	r3
 80161fc:	4620      	mov	r0, r4
 80161fe:	f7fc fbc5 	bl	801298c <GUI_ALLOC_UnlockH>
 8016202:	4668      	mov	r0, sp
 8016204:	f7fc fbc2 	bl	801298c <GUI_ALLOC_UnlockH>
 8016208:	b003      	add	sp, #12
 801620a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801620c:	2000016c 	.word	0x2000016c

08016210 <_SetPixelIndex>:
 8016210:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016212:	461c      	mov	r4, r3
 8016214:	4b10      	ldr	r3, [pc, #64]	; (8016258 <_SetPixelIndex+0x48>)
 8016216:	681b      	ldr	r3, [r3, #0]
 8016218:	6e18      	ldr	r0, [r3, #96]	; 0x60
 801621a:	460e      	mov	r6, r1
 801621c:	4615      	mov	r5, r2
 801621e:	f7fc fba7 	bl	8012970 <GUI_ALLOC_LockH>
 8016222:	4629      	mov	r1, r5
 8016224:	9000      	str	r0, [sp, #0]
 8016226:	4630      	mov	r0, r6
 8016228:	f7ff ff9e 	bl	8016168 <_XY2PTR>
 801622c:	9b00      	ldr	r3, [sp, #0]
 801622e:	8004      	strh	r4, [r0, #0]
 8016230:	6958      	ldr	r0, [r3, #20]
 8016232:	b160      	cbz	r0, 801624e <_SetPixelIndex+0x3e>
 8016234:	f7fc fb9c 	bl	8012970 <GUI_ALLOC_LockH>
 8016238:	ac02      	add	r4, sp, #8
 801623a:	6883      	ldr	r3, [r0, #8]
 801623c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8016240:	681b      	ldr	r3, [r3, #0]
 8016242:	4631      	mov	r1, r6
 8016244:	462a      	mov	r2, r5
 8016246:	4798      	blx	r3
 8016248:	4620      	mov	r0, r4
 801624a:	f7fc fb9f 	bl	801298c <GUI_ALLOC_UnlockH>
 801624e:	4668      	mov	r0, sp
 8016250:	f7fc fb9c 	bl	801298c <GUI_ALLOC_UnlockH>
 8016254:	b002      	add	sp, #8
 8016256:	bd70      	pop	{r4, r5, r6, pc}
 8016258:	2000016c 	.word	0x2000016c

0801625c <_DrawVLine>:
 801625c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016260:	4d2c      	ldr	r5, [pc, #176]	; (8016314 <_DrawVLine+0xb8>)
 8016262:	461e      	mov	r6, r3
 8016264:	682b      	ldr	r3, [r5, #0]
 8016266:	4681      	mov	r9, r0
 8016268:	6e18      	ldr	r0, [r3, #96]	; 0x60
 801626a:	460f      	mov	r7, r1
 801626c:	4614      	mov	r4, r2
 801626e:	f7fc fb7f 	bl	8012970 <GUI_ALLOC_LockH>
 8016272:	9000      	str	r0, [sp, #0]
 8016274:	6940      	ldr	r0, [r0, #20]
 8016276:	46aa      	mov	sl, r5
 8016278:	b108      	cbz	r0, 801627e <_DrawVLine+0x22>
 801627a:	f7fc fb79 	bl	8012970 <GUI_ALLOC_LockH>
 801627e:	9001      	str	r0, [sp, #4]
 8016280:	4621      	mov	r1, r4
 8016282:	4638      	mov	r0, r7
 8016284:	f7ff ff70 	bl	8016168 <_XY2PTR>
 8016288:	9b00      	ldr	r3, [sp, #0]
 801628a:	f8d3 800c 	ldr.w	r8, [r3, #12]
 801628e:	f8da 3000 	ldr.w	r3, [sl]
 8016292:	7c1a      	ldrb	r2, [r3, #16]
 8016294:	07d2      	lsls	r2, r2, #31
 8016296:	4605      	mov	r5, r0
 8016298:	d51f      	bpl.n	80162da <_DrawVLine+0x7e>
 801629a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 801629e:	689b      	ldr	r3, [r3, #8]
 80162a0:	4798      	blx	r3
 80162a2:	fa1f f880 	uxth.w	r8, r0
 80162a6:	9801      	ldr	r0, [sp, #4]
 80162a8:	b120      	cbz	r0, 80162b4 <_DrawVLine+0x58>
 80162aa:	6883      	ldr	r3, [r0, #8]
 80162ac:	4639      	mov	r1, r7
 80162ae:	681b      	ldr	r3, [r3, #0]
 80162b0:	4622      	mov	r2, r4
 80162b2:	4798      	blx	r3
 80162b4:	882b      	ldrh	r3, [r5, #0]
 80162b6:	ea88 0303 	eor.w	r3, r8, r3
 80162ba:	802b      	strh	r3, [r5, #0]
 80162bc:	9b00      	ldr	r3, [sp, #0]
 80162be:	3401      	adds	r4, #1
 80162c0:	68db      	ldr	r3, [r3, #12]
 80162c2:	42b4      	cmp	r4, r6
 80162c4:	441d      	add	r5, r3
 80162c6:	ddee      	ble.n	80162a6 <_DrawVLine+0x4a>
 80162c8:	4668      	mov	r0, sp
 80162ca:	f7fc fb5f 	bl	801298c <GUI_ALLOC_UnlockH>
 80162ce:	9b01      	ldr	r3, [sp, #4]
 80162d0:	b1eb      	cbz	r3, 801630e <_DrawVLine+0xb2>
 80162d2:	a801      	add	r0, sp, #4
 80162d4:	f7fc fb5a 	bl	801298c <GUI_ALLOC_UnlockH>
 80162d8:	e019      	b.n	801630e <_DrawVLine+0xb2>
 80162da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80162dc:	f8d3 9000 	ldr.w	r9, [r3]
 80162e0:	9b01      	ldr	r3, [sp, #4]
 80162e2:	b163      	cbz	r3, 80162fe <_DrawVLine+0xa2>
 80162e4:	9801      	ldr	r0, [sp, #4]
 80162e6:	6883      	ldr	r3, [r0, #8]
 80162e8:	4622      	mov	r2, r4
 80162ea:	681b      	ldr	r3, [r3, #0]
 80162ec:	4639      	mov	r1, r7
 80162ee:	3401      	adds	r4, #1
 80162f0:	4798      	blx	r3
 80162f2:	42b4      	cmp	r4, r6
 80162f4:	f8a5 9000 	strh.w	r9, [r5]
 80162f8:	4445      	add	r5, r8
 80162fa:	ddf3      	ble.n	80162e4 <_DrawVLine+0x88>
 80162fc:	e7e4      	b.n	80162c8 <_DrawVLine+0x6c>
 80162fe:	1b34      	subs	r4, r6, r4
 8016300:	3401      	adds	r4, #1
 8016302:	3c01      	subs	r4, #1
 8016304:	f8a5 9000 	strh.w	r9, [r5]
 8016308:	4445      	add	r5, r8
 801630a:	d1fa      	bne.n	8016302 <_DrawVLine+0xa6>
 801630c:	e7dc      	b.n	80162c8 <_DrawVLine+0x6c>
 801630e:	b002      	add	sp, #8
 8016310:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016314:	2000016c 	.word	0x2000016c

08016318 <_FillRect>:
 8016318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801631c:	4f2a      	ldr	r7, [pc, #168]	; (80163c8 <_FillRect+0xb0>)
 801631e:	4614      	mov	r4, r2
 8016320:	683a      	ldr	r2, [r7, #0]
 8016322:	4698      	mov	r8, r3
 8016324:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8016326:	b087      	sub	sp, #28
 8016328:	681b      	ldr	r3, [r3, #0]
 801632a:	9302      	str	r3, [sp, #8]
 801632c:	4682      	mov	sl, r0
 801632e:	6e10      	ldr	r0, [r2, #96]	; 0x60
 8016330:	460e      	mov	r6, r1
 8016332:	f7fc fb1d 	bl	8012970 <GUI_ALLOC_LockH>
 8016336:	4621      	mov	r1, r4
 8016338:	9004      	str	r0, [sp, #16]
 801633a:	4630      	mov	r0, r6
 801633c:	f7ff ff14 	bl	8016168 <_XY2PTR>
 8016340:	9a04      	ldr	r2, [sp, #16]
 8016342:	4605      	mov	r5, r0
 8016344:	6950      	ldr	r0, [r2, #20]
 8016346:	68d3      	ldr	r3, [r2, #12]
 8016348:	9303      	str	r3, [sp, #12]
 801634a:	ebc6 0908 	rsb	r9, r6, r8
 801634e:	f109 0801 	add.w	r8, r9, #1
 8016352:	46bb      	mov	fp, r7
 8016354:	b180      	cbz	r0, 8016378 <_FillRect+0x60>
 8016356:	f7fc fb0b 	bl	8012970 <GUI_ALLOC_LockH>
 801635a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801635c:	af06      	add	r7, sp, #24
 801635e:	1b13      	subs	r3, r2, r4
 8016360:	f847 0d04 	str.w	r0, [r7, #-4]!
 8016364:	3301      	adds	r3, #1
 8016366:	9300      	str	r3, [sp, #0]
 8016368:	4631      	mov	r1, r6
 801636a:	4622      	mov	r2, r4
 801636c:	4643      	mov	r3, r8
 801636e:	f7ff fe75 	bl	801605c <GUI_USAGE_AddRect>
 8016372:	4638      	mov	r0, r7
 8016374:	f7fc fb0a 	bl	801298c <GUI_ALLOC_UnlockH>
 8016378:	ea4f 0649 	mov.w	r6, r9, lsl #1
 801637c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801637e:	429c      	cmp	r4, r3
 8016380:	dc1c      	bgt.n	80163bc <_FillRect+0xa4>
 8016382:	f8db 3000 	ldr.w	r3, [fp]
 8016386:	7c1b      	ldrb	r3, [r3, #16]
 8016388:	07db      	lsls	r3, r3, #31
 801638a:	d50d      	bpl.n	80163a8 <_FillRect+0x90>
 801638c:	f8da 3010 	ldr.w	r3, [sl, #16]
 8016390:	689b      	ldr	r3, [r3, #8]
 8016392:	4798      	blx	r3
 8016394:	19aa      	adds	r2, r5, r6
 8016396:	b280      	uxth	r0, r0
 8016398:	1eab      	subs	r3, r5, #2
 801639a:	8859      	ldrh	r1, [r3, #2]
 801639c:	4041      	eors	r1, r0
 801639e:	f823 1f02 	strh.w	r1, [r3, #2]!
 80163a2:	4293      	cmp	r3, r2
 80163a4:	d1f9      	bne.n	801639a <_FillRect+0x82>
 80163a6:	e005      	b.n	80163b4 <_FillRect+0x9c>
 80163a8:	9b02      	ldr	r3, [sp, #8]
 80163aa:	4628      	mov	r0, r5
 80163ac:	b299      	uxth	r1, r3
 80163ae:	4642      	mov	r2, r8
 80163b0:	f7f9 ff0a 	bl	80101c8 <GUI__memset16>
 80163b4:	9a03      	ldr	r2, [sp, #12]
 80163b6:	3401      	adds	r4, #1
 80163b8:	4415      	add	r5, r2
 80163ba:	e7df      	b.n	801637c <_FillRect+0x64>
 80163bc:	a804      	add	r0, sp, #16
 80163be:	f7fc fae5 	bl	801298c <GUI_ALLOC_UnlockH>
 80163c2:	b007      	add	sp, #28
 80163c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163c8:	2000016c 	.word	0x2000016c

080163cc <_DrawHLine>:
 80163cc:	b507      	push	{r0, r1, r2, lr}
 80163ce:	9200      	str	r2, [sp, #0]
 80163d0:	f7ff ffa2 	bl	8016318 <_FillRect>
 80163d4:	b003      	add	sp, #12
 80163d6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080163dc <_DrawBitmap>:
 80163dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163e0:	4c8a      	ldr	r4, [pc, #552]	; (801660c <_DrawBitmap+0x230>)
 80163e2:	b093      	sub	sp, #76	; 0x4c
 80163e4:	469b      	mov	fp, r3
 80163e6:	6823      	ldr	r3, [r4, #0]
 80163e8:	900d      	str	r0, [sp, #52]	; 0x34
 80163ea:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80163ec:	9207      	str	r2, [sp, #28]
 80163ee:	460d      	mov	r5, r1
 80163f0:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 80163f4:	f7fc fabc 	bl	8012970 <GUI_ALLOC_LockH>
 80163f8:	9010      	str	r0, [sp, #64]	; 0x40
 80163fa:	6940      	ldr	r0, [r0, #20]
 80163fc:	b108      	cbz	r0, 8016402 <_DrawBitmap+0x26>
 80163fe:	f7fc fab7 	bl	8012970 <GUI_ALLOC_LockH>
 8016402:	9011      	str	r0, [sp, #68]	; 0x44
 8016404:	a812      	add	r0, sp, #72	; 0x48
 8016406:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 801640a:	68db      	ldr	r3, [r3, #12]
 801640c:	9308      	str	r3, [sp, #32]
 801640e:	f7fc fabd 	bl	801298c <GUI_ALLOC_UnlockH>
 8016412:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8016414:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016416:	442e      	add	r6, r5
 8016418:	9604      	str	r6, [sp, #16]
 801641a:	b150      	cbz	r0, 8016432 <_DrawBitmap+0x56>
 801641c:	6823      	ldr	r3, [r4, #0]
 801641e:	7c1b      	ldrb	r3, [r3, #16]
 8016420:	0799      	lsls	r1, r3, #30
 8016422:	d106      	bne.n	8016432 <_DrawBitmap+0x56>
 8016424:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8016426:	9700      	str	r7, [sp, #0]
 8016428:	4631      	mov	r1, r6
 801642a:	9a07      	ldr	r2, [sp, #28]
 801642c:	465b      	mov	r3, fp
 801642e:	f7ff fe15 	bl	801605c <GUI_USAGE_AddRect>
 8016432:	9804      	ldr	r0, [sp, #16]
 8016434:	9907      	ldr	r1, [sp, #28]
 8016436:	f7ff fe97 	bl	8016168 <_XY2PTR>
 801643a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801643c:	2e10      	cmp	r6, #16
 801643e:	4604      	mov	r4, r0
 8016440:	d139      	bne.n	80164b6 <_DrawBitmap+0xda>
 8016442:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016444:	b11b      	cbz	r3, 801644e <_DrawBitmap+0x72>
 8016446:	ea4f 064b 	mov.w	r6, fp, lsl #1
 801644a:	2500      	movs	r5, #0
 801644c:	e014      	b.n	8016478 <_DrawBitmap+0x9c>
 801644e:	4b70      	ldr	r3, [pc, #448]	; (8016610 <_DrawBitmap+0x234>)
 8016450:	681d      	ldr	r5, [r3, #0]
 8016452:	2d00      	cmp	r5, #0
 8016454:	d0f7      	beq.n	8016446 <_DrawBitmap+0x6a>
 8016456:	9e08      	ldr	r6, [sp, #32]
 8016458:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 801645a:	9600      	str	r6, [sp, #0]
 801645c:	9701      	str	r7, [sp, #4]
 801645e:	4651      	mov	r1, sl
 8016460:	465a      	mov	r2, fp
 8016462:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016464:	47a8      	blx	r5
 8016466:	e345      	b.n	8016af4 <_DrawBitmap+0x718>
 8016468:	f1ba 0f00 	cmp.w	sl, #0
 801646c:	d10a      	bne.n	8016484 <_DrawBitmap+0xa8>
 801646e:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8016470:	44ba      	add	sl, r7
 8016472:	9f08      	ldr	r7, [sp, #32]
 8016474:	3501      	adds	r5, #1
 8016476:	443c      	add	r4, r7
 8016478:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 801647a:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 801647e:	42bd      	cmp	r5, r7
 8016480:	dbf2      	blt.n	8016468 <_DrawBitmap+0x8c>
 8016482:	e013      	b.n	80164ac <_DrawBitmap+0xd0>
 8016484:	2c00      	cmp	r4, #0
 8016486:	d0f2      	beq.n	801646e <_DrawBitmap+0x92>
 8016488:	4620      	mov	r0, r4
 801648a:	4651      	mov	r1, sl
 801648c:	4632      	mov	r2, r6
 801648e:	f003 ff28 	bl	801a2e2 <memcpy>
 8016492:	f1b8 0f00 	cmp.w	r8, #0
 8016496:	d0ea      	beq.n	801646e <_DrawBitmap+0x92>
 8016498:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801649c:	9a07      	ldr	r2, [sp, #28]
 801649e:	685f      	ldr	r7, [r3, #4]
 80164a0:	9904      	ldr	r1, [sp, #16]
 80164a2:	4640      	mov	r0, r8
 80164a4:	442a      	add	r2, r5
 80164a6:	465b      	mov	r3, fp
 80164a8:	47b8      	blx	r7
 80164aa:	e7e0      	b.n	801646e <_DrawBitmap+0x92>
 80164ac:	f1b8 0f00 	cmp.w	r8, #0
 80164b0:	f040 831d 	bne.w	8016aee <_DrawBitmap+0x712>
 80164b4:	e31e      	b.n	8016af4 <_DrawBitmap+0x718>
 80164b6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80164b8:	2e17      	cmp	r6, #23
 80164ba:	dd38      	ble.n	801652e <_DrawBitmap+0x152>
 80164bc:	2600      	movs	r6, #0
 80164be:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80164c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80164c2:	42be      	cmp	r6, r7
 80164c4:	f280 809d 	bge.w	8016602 <_DrawBitmap+0x226>
 80164c8:	9f07      	ldr	r7, [sp, #28]
 80164ca:	4437      	add	r7, r6
 80164cc:	f1ba 0f00 	cmp.w	sl, #0
 80164d0:	d027      	beq.n	8016522 <_DrawBitmap+0x146>
 80164d2:	b334      	cbz	r4, 8016522 <_DrawBitmap+0x146>
 80164d4:	b13d      	cbz	r5, 80164e6 <_DrawBitmap+0x10a>
 80164d6:	68ab      	ldr	r3, [r5, #8]
 80164d8:	9904      	ldr	r1, [sp, #16]
 80164da:	f8d3 c004 	ldr.w	ip, [r3, #4]
 80164de:	4628      	mov	r0, r5
 80164e0:	463a      	mov	r2, r7
 80164e2:	465b      	mov	r3, fp
 80164e4:	47e0      	blx	ip
 80164e6:	1ea3      	subs	r3, r4, #2
 80164e8:	f1aa 0904 	sub.w	r9, sl, #4
 80164ec:	9303      	str	r3, [sp, #12]
 80164ee:	46d8      	mov	r8, fp
 80164f0:	9b04      	ldr	r3, [sp, #16]
 80164f2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80164f4:	445b      	add	r3, fp
 80164f6:	ebc8 0103 	rsb	r1, r8, r3
 80164fa:	6903      	ldr	r3, [r0, #16]
 80164fc:	f859 0f04 	ldr.w	r0, [r9, #4]!
 8016500:	681b      	ldr	r3, [r3, #0]
 8016502:	9102      	str	r1, [sp, #8]
 8016504:	4798      	blx	r3
 8016506:	9b03      	ldr	r3, [sp, #12]
 8016508:	9902      	ldr	r1, [sp, #8]
 801650a:	f823 0f02 	strh.w	r0, [r3, #2]!
 801650e:	9303      	str	r3, [sp, #12]
 8016510:	b125      	cbz	r5, 801651c <_DrawBitmap+0x140>
 8016512:	68ab      	ldr	r3, [r5, #8]
 8016514:	4628      	mov	r0, r5
 8016516:	681b      	ldr	r3, [r3, #0]
 8016518:	463a      	mov	r2, r7
 801651a:	4798      	blx	r3
 801651c:	f1b8 0801 	subs.w	r8, r8, #1
 8016520:	d1e6      	bne.n	80164f0 <_DrawBitmap+0x114>
 8016522:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8016524:	44ba      	add	sl, r7
 8016526:	9f08      	ldr	r7, [sp, #32]
 8016528:	3601      	adds	r6, #1
 801652a:	443c      	add	r4, r7
 801652c:	e7c7      	b.n	80164be <_DrawBitmap+0xe2>
 801652e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8016530:	2e08      	cmp	r6, #8
 8016532:	f100 0402 	add.w	r4, r0, #2
 8016536:	d16d      	bne.n	8016614 <_DrawBitmap+0x238>
 8016538:	9e07      	ldr	r6, [sp, #28]
 801653a:	9f07      	ldr	r7, [sp, #28]
 801653c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801653e:	1bf3      	subs	r3, r6, r7
 8016540:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8016542:	42bb      	cmp	r3, r7
 8016544:	f1a4 0002 	sub.w	r0, r4, #2
 8016548:	da5b      	bge.n	8016602 <_DrawBitmap+0x226>
 801654a:	4b30      	ldr	r3, [pc, #192]	; (801660c <_DrawBitmap+0x230>)
 801654c:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801654e:	681b      	ldr	r3, [r3, #0]
 8016550:	7c1b      	ldrb	r3, [r3, #16]
 8016552:	b367      	cbz	r7, 80165ae <_DrawBitmap+0x1d2>
 8016554:	f013 0303 	ands.w	r3, r3, #3
 8016558:	d004      	beq.n	8016564 <_DrawBitmap+0x188>
 801655a:	2b02      	cmp	r3, #2
 801655c:	d14b      	bne.n	80165f6 <_DrawBitmap+0x21a>
 801655e:	46a0      	mov	r8, r4
 8016560:	9f04      	ldr	r7, [sp, #16]
 8016562:	e01d      	b.n	80165a0 <_DrawBitmap+0x1c4>
 8016564:	f81a 2003 	ldrb.w	r2, [sl, r3]
 8016568:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801656a:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801656e:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 8016572:	3301      	adds	r3, #1
 8016574:	455b      	cmp	r3, fp
 8016576:	d1f5      	bne.n	8016564 <_DrawBitmap+0x188>
 8016578:	e03d      	b.n	80165f6 <_DrawBitmap+0x21a>
 801657a:	9921      	ldr	r1, [sp, #132]	; 0x84
 801657c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8016580:	f828 3c02 	strh.w	r3, [r8, #-2]
 8016584:	b12d      	cbz	r5, 8016592 <_DrawBitmap+0x1b6>
 8016586:	68ab      	ldr	r3, [r5, #8]
 8016588:	4628      	mov	r0, r5
 801658a:	681b      	ldr	r3, [r3, #0]
 801658c:	4639      	mov	r1, r7
 801658e:	4632      	mov	r2, r6
 8016590:	4798      	blx	r3
 8016592:	9b04      	ldr	r3, [sp, #16]
 8016594:	3701      	adds	r7, #1
 8016596:	445b      	add	r3, fp
 8016598:	42bb      	cmp	r3, r7
 801659a:	f108 0802 	add.w	r8, r8, #2
 801659e:	d02a      	beq.n	80165f6 <_DrawBitmap+0x21a>
 80165a0:	9804      	ldr	r0, [sp, #16]
 80165a2:	ebc0 030a 	rsb	r3, r0, sl
 80165a6:	5ddb      	ldrb	r3, [r3, r7]
 80165a8:	2b00      	cmp	r3, #0
 80165aa:	d0f2      	beq.n	8016592 <_DrawBitmap+0x1b6>
 80165ac:	e7e5      	b.n	801657a <_DrawBitmap+0x19e>
 80165ae:	f013 0303 	ands.w	r3, r3, #3
 80165b2:	d004      	beq.n	80165be <_DrawBitmap+0x1e2>
 80165b4:	2b02      	cmp	r3, #2
 80165b6:	d11e      	bne.n	80165f6 <_DrawBitmap+0x21a>
 80165b8:	46a0      	mov	r8, r4
 80165ba:	9f04      	ldr	r7, [sp, #16]
 80165bc:	e014      	b.n	80165e8 <_DrawBitmap+0x20c>
 80165be:	4651      	mov	r1, sl
 80165c0:	465a      	mov	r2, fp
 80165c2:	f003 fe8e 	bl	801a2e2 <memcpy>
 80165c6:	e016      	b.n	80165f6 <_DrawBitmap+0x21a>
 80165c8:	f828 3c02 	strh.w	r3, [r8, #-2]
 80165cc:	b12d      	cbz	r5, 80165da <_DrawBitmap+0x1fe>
 80165ce:	68ab      	ldr	r3, [r5, #8]
 80165d0:	4628      	mov	r0, r5
 80165d2:	681b      	ldr	r3, [r3, #0]
 80165d4:	4639      	mov	r1, r7
 80165d6:	4632      	mov	r2, r6
 80165d8:	4798      	blx	r3
 80165da:	9b04      	ldr	r3, [sp, #16]
 80165dc:	3701      	adds	r7, #1
 80165de:	445b      	add	r3, fp
 80165e0:	42bb      	cmp	r3, r7
 80165e2:	f108 0802 	add.w	r8, r8, #2
 80165e6:	d006      	beq.n	80165f6 <_DrawBitmap+0x21a>
 80165e8:	9a04      	ldr	r2, [sp, #16]
 80165ea:	ebc2 030a 	rsb	r3, r2, sl
 80165ee:	5ddb      	ldrb	r3, [r3, r7]
 80165f0:	2b00      	cmp	r3, #0
 80165f2:	d0f2      	beq.n	80165da <_DrawBitmap+0x1fe>
 80165f4:	e7e8      	b.n	80165c8 <_DrawBitmap+0x1ec>
 80165f6:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80165f8:	44ba      	add	sl, r7
 80165fa:	9f08      	ldr	r7, [sp, #32]
 80165fc:	3601      	adds	r6, #1
 80165fe:	443c      	add	r4, r7
 8016600:	e79b      	b.n	801653a <_DrawBitmap+0x15e>
 8016602:	2d00      	cmp	r5, #0
 8016604:	f040 8273 	bne.w	8016aee <_DrawBitmap+0x712>
 8016608:	e274      	b.n	8016af4 <_DrawBitmap+0x718>
 801660a:	bf00      	nop
 801660c:	2000016c 	.word	0x2000016c
 8016610:	200196e0 	.word	0x200196e0
 8016614:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8016616:	4bab      	ldr	r3, [pc, #684]	; (80168c4 <_DrawBitmap+0x4e8>)
 8016618:	9f20      	ldr	r7, [sp, #128]	; 0x80
 801661a:	9409      	str	r4, [sp, #36]	; 0x24
 801661c:	2e00      	cmp	r6, #0
 801661e:	bf08      	it	eq
 8016620:	461e      	moveq	r6, r3
 8016622:	9621      	str	r6, [sp, #132]	; 0x84
 8016624:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8016626:	0076      	lsls	r6, r6, #1
 8016628:	960e      	str	r6, [sp, #56]	; 0x38
 801662a:	00bf      	lsls	r7, r7, #2
 801662c:	9e07      	ldr	r6, [sp, #28]
 801662e:	970f      	str	r7, [sp, #60]	; 0x3c
 8016630:	9605      	str	r6, [sp, #20]
 8016632:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016634:	9e05      	ldr	r6, [sp, #20]
 8016636:	9f07      	ldr	r7, [sp, #28]
 8016638:	1e9c      	subs	r4, r3, #2
 801663a:	1bf3      	subs	r3, r6, r7
 801663c:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 801663e:	42b3      	cmp	r3, r6
 8016640:	f280 8253 	bge.w	8016aea <_DrawBitmap+0x70e>
 8016644:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8016646:	2f02      	cmp	r7, #2
 8016648:	f000 80d9 	beq.w	80167fe <_DrawBitmap+0x422>
 801664c:	2f04      	cmp	r7, #4
 801664e:	f000 8178 	beq.w	8016942 <_DrawBitmap+0x566>
 8016652:	2f01      	cmp	r7, #1
 8016654:	f040 823f 	bne.w	8016ad6 <_DrawBitmap+0x6fa>
 8016658:	f8df 9270 	ldr.w	r9, [pc, #624]	; 80168cc <_DrawBitmap+0x4f0>
 801665c:	f8d9 3000 	ldr.w	r3, [r9]
 8016660:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016662:	f7fc f985 	bl	8012970 <GUI_ALLOC_LockH>
 8016666:	f89a 3000 	ldrb.w	r3, [sl]
 801666a:	4a97      	ldr	r2, [pc, #604]	; (80168c8 <_DrawBitmap+0x4ec>)
 801666c:	9010      	str	r0, [sp, #64]	; 0x40
 801666e:	5cd5      	ldrb	r5, [r2, r3]
 8016670:	f8d9 3000 	ldr.w	r3, [r9]
 8016674:	9820      	ldr	r0, [sp, #128]	; 0x80
 8016676:	7c1b      	ldrb	r3, [r3, #16]
 8016678:	9f11      	ldr	r7, [sp, #68]	; 0x44
 801667a:	f003 0303 	and.w	r3, r3, #3
 801667e:	2b02      	cmp	r3, #2
 8016680:	465e      	mov	r6, fp
 8016682:	f1c0 0808 	rsb	r8, r0, #8
 8016686:	fa45 f500 	asr.w	r5, r5, r0
 801668a:	d022      	beq.n	80166d2 <_DrawBitmap+0x2f6>
 801668c:	2b03      	cmp	r3, #3
 801668e:	d062      	beq.n	8016756 <_DrawBitmap+0x37a>
 8016690:	2b01      	cmp	r3, #1
 8016692:	d060      	beq.n	8016756 <_DrawBitmap+0x37a>
 8016694:	4652      	mov	r2, sl
 8016696:	4546      	cmp	r6, r8
 8016698:	bf38      	it	cc
 801669a:	46b0      	movcc	r8, r6
 801669c:	ebc8 0606 	rsb	r6, r8, r6
 80166a0:	4643      	mov	r3, r8
 80166a2:	4621      	mov	r1, r4
 80166a4:	f005 0001 	and.w	r0, r5, #1
 80166a8:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80166aa:	3b01      	subs	r3, #1
 80166ac:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 80166b0:	f821 0b02 	strh.w	r0, [r1], #2
 80166b4:	ea4f 0555 	mov.w	r5, r5, lsr #1
 80166b8:	d1f4      	bne.n	80166a4 <_DrawBitmap+0x2c8>
 80166ba:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80166be:	2e00      	cmp	r6, #0
 80166c0:	f000 8099 	beq.w	80167f6 <_DrawBitmap+0x41a>
 80166c4:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80166c8:	497f      	ldr	r1, [pc, #508]	; (80168c8 <_DrawBitmap+0x4ec>)
 80166ca:	f04f 0808 	mov.w	r8, #8
 80166ce:	5ccd      	ldrb	r5, [r1, r3]
 80166d0:	e7e1      	b.n	8016696 <_DrawBitmap+0x2ba>
 80166d2:	9821      	ldr	r0, [sp, #132]	; 0x84
 80166d4:	f8dd 9010 	ldr.w	r9, [sp, #16]
 80166d8:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 80166dc:	f8cd a018 	str.w	sl, [sp, #24]
 80166e0:	4546      	cmp	r6, r8
 80166e2:	bf38      	it	cc
 80166e4:	46b0      	movcc	r8, r6
 80166e6:	ebc8 0606 	rsb	r6, r8, r6
 80166ea:	b32f      	cbz	r7, 8016738 <_DrawBitmap+0x35c>
 80166ec:	b91d      	cbnz	r5, 80166f6 <_DrawBitmap+0x31a>
 80166ee:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80166f2:	44c1      	add	r9, r8
 80166f4:	e024      	b.n	8016740 <_DrawBitmap+0x364>
 80166f6:	07ea      	lsls	r2, r5, #31
 80166f8:	d50b      	bpl.n	8016712 <_DrawBitmap+0x336>
 80166fa:	68bb      	ldr	r3, [r7, #8]
 80166fc:	9a05      	ldr	r2, [sp, #20]
 80166fe:	681b      	ldr	r3, [r3, #0]
 8016700:	f8cd c008 	str.w	ip, [sp, #8]
 8016704:	4638      	mov	r0, r7
 8016706:	4649      	mov	r1, r9
 8016708:	4798      	blx	r3
 801670a:	f8dd c008 	ldr.w	ip, [sp, #8]
 801670e:	f8a4 c000 	strh.w	ip, [r4]
 8016712:	f1b8 0801 	subs.w	r8, r8, #1
 8016716:	f109 0901 	add.w	r9, r9, #1
 801671a:	f104 0402 	add.w	r4, r4, #2
 801671e:	d00f      	beq.n	8016740 <_DrawBitmap+0x364>
 8016720:	086d      	lsrs	r5, r5, #1
 8016722:	e7e3      	b.n	80166ec <_DrawBitmap+0x310>
 8016724:	07eb      	lsls	r3, r5, #31
 8016726:	bf48      	it	mi
 8016728:	f8a4 c000 	strhmi.w	ip, [r4]
 801672c:	f1b8 0801 	subs.w	r8, r8, #1
 8016730:	f104 0402 	add.w	r4, r4, #2
 8016734:	d004      	beq.n	8016740 <_DrawBitmap+0x364>
 8016736:	086d      	lsrs	r5, r5, #1
 8016738:	2d00      	cmp	r5, #0
 801673a:	d1f3      	bne.n	8016724 <_DrawBitmap+0x348>
 801673c:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8016740:	2e00      	cmp	r6, #0
 8016742:	d058      	beq.n	80167f6 <_DrawBitmap+0x41a>
 8016744:	9906      	ldr	r1, [sp, #24]
 8016746:	4a60      	ldr	r2, [pc, #384]	; (80168c8 <_DrawBitmap+0x4ec>)
 8016748:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 801674c:	9106      	str	r1, [sp, #24]
 801674e:	5cd5      	ldrb	r5, [r2, r3]
 8016750:	f04f 0808 	mov.w	r8, #8
 8016754:	e7c4      	b.n	80166e0 <_DrawBitmap+0x304>
 8016756:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016758:	6913      	ldr	r3, [r2, #16]
 801675a:	689b      	ldr	r3, [r3, #8]
 801675c:	4798      	blx	r3
 801675e:	9b04      	ldr	r3, [sp, #16]
 8016760:	930b      	str	r3, [sp, #44]	; 0x2c
 8016762:	b280      	uxth	r0, r0
 8016764:	900a      	str	r0, [sp, #40]	; 0x28
 8016766:	f10a 0901 	add.w	r9, sl, #1
 801676a:	4546      	cmp	r6, r8
 801676c:	bf38      	it	cc
 801676e:	46b0      	movcc	r8, r6
 8016770:	ebc8 0606 	rsb	r6, r8, r6
 8016774:	1ca3      	adds	r3, r4, #2
 8016776:	b31f      	cbz	r7, 80167c0 <_DrawBitmap+0x3e4>
 8016778:	f8cd 8018 	str.w	r8, [sp, #24]
 801677c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801677e:	9a06      	ldr	r2, [sp, #24]
 8016780:	4440      	add	r0, r8
 8016782:	900c      	str	r0, [sp, #48]	; 0x30
 8016784:	1a81      	subs	r1, r0, r2
 8016786:	07e8      	lsls	r0, r5, #31
 8016788:	d50d      	bpl.n	80167a6 <_DrawBitmap+0x3ca>
 801678a:	68ba      	ldr	r2, [r7, #8]
 801678c:	4638      	mov	r0, r7
 801678e:	f8d2 c000 	ldr.w	ip, [r2]
 8016792:	9a05      	ldr	r2, [sp, #20]
 8016794:	9302      	str	r3, [sp, #8]
 8016796:	47e0      	blx	ip
 8016798:	9b02      	ldr	r3, [sp, #8]
 801679a:	980a      	ldr	r0, [sp, #40]	; 0x28
 801679c:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 80167a0:	4042      	eors	r2, r0
 80167a2:	f823 2c02 	strh.w	r2, [r3, #-2]
 80167a6:	9906      	ldr	r1, [sp, #24]
 80167a8:	3901      	subs	r1, #1
 80167aa:	ea4f 0555 	mov.w	r5, r5, lsr #1
 80167ae:	f103 0302 	add.w	r3, r3, #2
 80167b2:	9106      	str	r1, [sp, #24]
 80167b4:	d1e2      	bne.n	801677c <_DrawBitmap+0x3a0>
 80167b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80167b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80167ba:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80167be:	e010      	b.n	80167e2 <_DrawBitmap+0x406>
 80167c0:	4642      	mov	r2, r8
 80167c2:	07e9      	lsls	r1, r5, #31
 80167c4:	d505      	bpl.n	80167d2 <_DrawBitmap+0x3f6>
 80167c6:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 80167ca:	980a      	ldr	r0, [sp, #40]	; 0x28
 80167cc:	4041      	eors	r1, r0
 80167ce:	f823 1c02 	strh.w	r1, [r3, #-2]
 80167d2:	3a01      	subs	r2, #1
 80167d4:	ea4f 0555 	mov.w	r5, r5, lsr #1
 80167d8:	f103 0302 	add.w	r3, r3, #2
 80167dc:	d1f1      	bne.n	80167c2 <_DrawBitmap+0x3e6>
 80167de:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80167e2:	b146      	cbz	r6, 80167f6 <_DrawBitmap+0x41a>
 80167e4:	f899 3000 	ldrb.w	r3, [r9]
 80167e8:	4a37      	ldr	r2, [pc, #220]	; (80168c8 <_DrawBitmap+0x4ec>)
 80167ea:	f109 0901 	add.w	r9, r9, #1
 80167ee:	5cd5      	ldrb	r5, [r2, r3]
 80167f0:	f04f 0808 	mov.w	r8, #8
 80167f4:	e7b9      	b.n	801676a <_DrawBitmap+0x38e>
 80167f6:	a810      	add	r0, sp, #64	; 0x40
 80167f8:	f7fc f8c8 	bl	801298c <GUI_ALLOC_UnlockH>
 80167fc:	e16b      	b.n	8016ad6 <_DrawBitmap+0x6fa>
 80167fe:	4b33      	ldr	r3, [pc, #204]	; (80168cc <_DrawBitmap+0x4f0>)
 8016800:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8016802:	681b      	ldr	r3, [r3, #0]
 8016804:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016806:	7c1b      	ldrb	r3, [r3, #16]
 8016808:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 801680c:	f1c6 0504 	rsb	r5, r6, #4
 8016810:	f89a 6000 	ldrb.w	r6, [sl]
 8016814:	f003 0303 	and.w	r3, r3, #3
 8016818:	40be      	lsls	r6, r7
 801681a:	2b01      	cmp	r3, #1
 801681c:	b2ed      	uxtb	r5, r5
 801681e:	b2f6      	uxtb	r6, r6
 8016820:	d06a      	beq.n	80168f8 <_DrawBitmap+0x51c>
 8016822:	d308      	bcc.n	8016836 <_DrawBitmap+0x45a>
 8016824:	2b02      	cmp	r3, #2
 8016826:	f040 8156 	bne.w	8016ad6 <_DrawBitmap+0x6fa>
 801682a:	f8cd a018 	str.w	sl, [sp, #24]
 801682e:	465f      	mov	r7, fp
 8016830:	f8dd c010 	ldr.w	ip, [sp, #16]
 8016834:	e03e      	b.n	80168b4 <_DrawBitmap+0x4d8>
 8016836:	4652      	mov	r2, sl
 8016838:	465b      	mov	r3, fp
 801683a:	429d      	cmp	r5, r3
 801683c:	bfc8      	it	gt
 801683e:	b2dd      	uxtbgt	r5, r3
 8016840:	1b5b      	subs	r3, r3, r5
 8016842:	4629      	mov	r1, r5
 8016844:	4620      	mov	r0, r4
 8016846:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 801684a:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801684c:	3901      	subs	r1, #1
 801684e:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 8016852:	f820 cb02 	strh.w	ip, [r0], #2
 8016856:	00b6      	lsls	r6, r6, #2
 8016858:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 801685c:	b2f6      	uxtb	r6, r6
 801685e:	d1f2      	bne.n	8016846 <_DrawBitmap+0x46a>
 8016860:	3d01      	subs	r5, #1
 8016862:	b2ed      	uxtb	r5, r5
 8016864:	3501      	adds	r5, #1
 8016866:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 801686a:	2b00      	cmp	r3, #0
 801686c:	f000 8133 	beq.w	8016ad6 <_DrawBitmap+0x6fa>
 8016870:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8016874:	2504      	movs	r5, #4
 8016876:	e7e0      	b.n	801683a <_DrawBitmap+0x45e>
 8016878:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 801687c:	eb08 010c 	add.w	r1, r8, ip
 8016880:	d126      	bne.n	80168d0 <_DrawBitmap+0x4f4>
 8016882:	f108 0801 	add.w	r8, r8, #1
 8016886:	fa5f f388 	uxtb.w	r3, r8
 801688a:	00b6      	lsls	r6, r6, #2
 801688c:	429d      	cmp	r5, r3
 801688e:	b2f6      	uxtb	r6, r6
 8016890:	d1f2      	bne.n	8016878 <_DrawBitmap+0x49c>
 8016892:	3d01      	subs	r5, #1
 8016894:	b2ed      	uxtb	r5, r5
 8016896:	1c6b      	adds	r3, r5, #1
 8016898:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801689c:	f10c 0301 	add.w	r3, ip, #1
 80168a0:	eb03 0c05 	add.w	ip, r3, r5
 80168a4:	2f00      	cmp	r7, #0
 80168a6:	f000 8116 	beq.w	8016ad6 <_DrawBitmap+0x6fa>
 80168aa:	9b06      	ldr	r3, [sp, #24]
 80168ac:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 80168b0:	9306      	str	r3, [sp, #24]
 80168b2:	2504      	movs	r5, #4
 80168b4:	42bd      	cmp	r5, r7
 80168b6:	bfc8      	it	gt
 80168b8:	b2fd      	uxtbgt	r5, r7
 80168ba:	1b7f      	subs	r7, r7, r5
 80168bc:	f04f 0800 	mov.w	r8, #0
 80168c0:	e7da      	b.n	8016878 <_DrawBitmap+0x49c>
 80168c2:	bf00      	nop
 80168c4:	08020974 	.word	0x08020974
 80168c8:	08020734 	.word	0x08020734
 80168cc:	2000016c 	.word	0x2000016c
 80168d0:	09b3      	lsrs	r3, r6, #6
 80168d2:	9821      	ldr	r0, [sp, #132]	; 0x84
 80168d4:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80168d8:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 80168dc:	f1b9 0f00 	cmp.w	r9, #0
 80168e0:	d0cf      	beq.n	8016882 <_DrawBitmap+0x4a6>
 80168e2:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80168e6:	9a05      	ldr	r2, [sp, #20]
 80168e8:	681b      	ldr	r3, [r3, #0]
 80168ea:	f8cd c008 	str.w	ip, [sp, #8]
 80168ee:	4648      	mov	r0, r9
 80168f0:	4798      	blx	r3
 80168f2:	f8dd c008 	ldr.w	ip, [sp, #8]
 80168f6:	e7c4      	b.n	8016882 <_DrawBitmap+0x4a6>
 80168f8:	4651      	mov	r1, sl
 80168fa:	465b      	mov	r3, fp
 80168fc:	429d      	cmp	r5, r3
 80168fe:	bfc8      	it	gt
 8016900:	b2dd      	uxtbgt	r5, r3
 8016902:	1b5b      	subs	r3, r3, r5
 8016904:	1ca2      	adds	r2, r4, #2
 8016906:	4628      	mov	r0, r5
 8016908:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 801690c:	d005      	beq.n	801691a <_DrawBitmap+0x53e>
 801690e:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 8016912:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8016916:	f822 7c02 	strh.w	r7, [r2, #-2]
 801691a:	3801      	subs	r0, #1
 801691c:	00b6      	lsls	r6, r6, #2
 801691e:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 8016922:	b2f6      	uxtb	r6, r6
 8016924:	f102 0202 	add.w	r2, r2, #2
 8016928:	d1ee      	bne.n	8016908 <_DrawBitmap+0x52c>
 801692a:	3d01      	subs	r5, #1
 801692c:	b2ed      	uxtb	r5, r5
 801692e:	3501      	adds	r5, #1
 8016930:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8016934:	2b00      	cmp	r3, #0
 8016936:	f000 80ce 	beq.w	8016ad6 <_DrawBitmap+0x6fa>
 801693a:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 801693e:	2504      	movs	r5, #4
 8016940:	e7dc      	b.n	80168fc <_DrawBitmap+0x520>
 8016942:	4a6e      	ldr	r2, [pc, #440]	; (8016afc <_DrawBitmap+0x720>)
 8016944:	f89a 3000 	ldrb.w	r3, [sl]
 8016948:	6812      	ldr	r2, [r2, #0]
 801694a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801694c:	7c12      	ldrb	r2, [r2, #16]
 801694e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8016950:	f002 0203 	and.w	r2, r2, #3
 8016954:	40bb      	lsls	r3, r7
 8016956:	2a01      	cmp	r2, #1
 8016958:	b2dd      	uxtb	r5, r3
 801695a:	f000 8095 	beq.w	8016a88 <_DrawBitmap+0x6ac>
 801695e:	d302      	bcc.n	8016966 <_DrawBitmap+0x58a>
 8016960:	2a02      	cmp	r2, #2
 8016962:	d036      	beq.n	80169d2 <_DrawBitmap+0x5f6>
 8016964:	e0b7      	b.n	8016ad6 <_DrawBitmap+0x6fa>
 8016966:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8016968:	b166      	cbz	r6, 8016984 <_DrawBitmap+0x5a8>
 801696a:	092d      	lsrs	r5, r5, #4
 801696c:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801696e:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8016972:	8023      	strh	r3, [r4, #0]
 8016974:	f10a 0201 	add.w	r2, sl, #1
 8016978:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801697a:	f89a 5001 	ldrb.w	r5, [sl, #1]
 801697e:	f10b 33ff 	add.w	r3, fp, #4294967295
 8016982:	e001      	b.n	8016988 <_DrawBitmap+0x5ac>
 8016984:	465b      	mov	r3, fp
 8016986:	4652      	mov	r2, sl
 8016988:	2b01      	cmp	r3, #1
 801698a:	dd19      	ble.n	80169c0 <_DrawBitmap+0x5e4>
 801698c:	1058      	asrs	r0, r3, #1
 801698e:	1d21      	adds	r1, r4, #4
 8016990:	f003 0301 	and.w	r3, r3, #1
 8016994:	eb02 0c00 	add.w	ip, r2, r0
 8016998:	092f      	lsrs	r7, r5, #4
 801699a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801699c:	f005 050f 	and.w	r5, r5, #15
 80169a0:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 80169a4:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 80169a8:	f821 7c04 	strh.w	r7, [r1, #-4]
 80169ac:	f821 5c02 	strh.w	r5, [r1, #-2]
 80169b0:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80169b4:	4562      	cmp	r2, ip
 80169b6:	f101 0104 	add.w	r1, r1, #4
 80169ba:	d1ed      	bne.n	8016998 <_DrawBitmap+0x5bc>
 80169bc:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 80169c0:	2b00      	cmp	r3, #0
 80169c2:	f000 8088 	beq.w	8016ad6 <_DrawBitmap+0x6fa>
 80169c6:	092d      	lsrs	r5, r5, #4
 80169c8:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80169ca:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 80169ce:	8023      	strh	r3, [r4, #0]
 80169d0:	e081      	b.n	8016ad6 <_DrawBitmap+0x6fa>
 80169d2:	9f20      	ldr	r7, [sp, #128]	; 0x80
 80169d4:	b1c7      	cbz	r7, 8016a08 <_DrawBitmap+0x62c>
 80169d6:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 80169da:	d00b      	beq.n	80169f4 <_DrawBitmap+0x618>
 80169dc:	092d      	lsrs	r5, r5, #4
 80169de:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80169e0:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 80169e4:	8023      	strh	r3, [r4, #0]
 80169e6:	b12e      	cbz	r6, 80169f4 <_DrawBitmap+0x618>
 80169e8:	68b3      	ldr	r3, [r6, #8]
 80169ea:	9904      	ldr	r1, [sp, #16]
 80169ec:	681b      	ldr	r3, [r3, #0]
 80169ee:	9a05      	ldr	r2, [sp, #20]
 80169f0:	4630      	mov	r0, r6
 80169f2:	4798      	blx	r3
 80169f4:	9804      	ldr	r0, [sp, #16]
 80169f6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80169f8:	f89a 5001 	ldrb.w	r5, [sl, #1]
 80169fc:	1c47      	adds	r7, r0, #1
 80169fe:	f10b 39ff 	add.w	r9, fp, #4294967295
 8016a02:	f10a 0801 	add.w	r8, sl, #1
 8016a06:	e00f      	b.n	8016a28 <_DrawBitmap+0x64c>
 8016a08:	46d9      	mov	r9, fp
 8016a0a:	46d0      	mov	r8, sl
 8016a0c:	9f04      	ldr	r7, [sp, #16]
 8016a0e:	e00b      	b.n	8016a28 <_DrawBitmap+0x64c>
 8016a10:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 8016a14:	d10c      	bne.n	8016a30 <_DrawBitmap+0x654>
 8016a16:	f015 050f 	ands.w	r5, r5, #15
 8016a1a:	d117      	bne.n	8016a4c <_DrawBitmap+0x670>
 8016a1c:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 8016a20:	3404      	adds	r4, #4
 8016a22:	3702      	adds	r7, #2
 8016a24:	f1a9 0902 	sub.w	r9, r9, #2
 8016a28:	f1b9 0f01 	cmp.w	r9, #1
 8016a2c:	dcf0      	bgt.n	8016a10 <_DrawBitmap+0x634>
 8016a2e:	e01a      	b.n	8016a66 <_DrawBitmap+0x68a>
 8016a30:	092b      	lsrs	r3, r5, #4
 8016a32:	9921      	ldr	r1, [sp, #132]	; 0x84
 8016a34:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8016a38:	8023      	strh	r3, [r4, #0]
 8016a3a:	2e00      	cmp	r6, #0
 8016a3c:	d0eb      	beq.n	8016a16 <_DrawBitmap+0x63a>
 8016a3e:	68b3      	ldr	r3, [r6, #8]
 8016a40:	9a05      	ldr	r2, [sp, #20]
 8016a42:	681b      	ldr	r3, [r3, #0]
 8016a44:	4630      	mov	r0, r6
 8016a46:	4639      	mov	r1, r7
 8016a48:	4798      	blx	r3
 8016a4a:	e7e4      	b.n	8016a16 <_DrawBitmap+0x63a>
 8016a4c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016a4e:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 8016a52:	8063      	strh	r3, [r4, #2]
 8016a54:	2e00      	cmp	r6, #0
 8016a56:	d0e1      	beq.n	8016a1c <_DrawBitmap+0x640>
 8016a58:	68b3      	ldr	r3, [r6, #8]
 8016a5a:	9a05      	ldr	r2, [sp, #20]
 8016a5c:	681b      	ldr	r3, [r3, #0]
 8016a5e:	4630      	mov	r0, r6
 8016a60:	1c79      	adds	r1, r7, #1
 8016a62:	4798      	blx	r3
 8016a64:	e7da      	b.n	8016a1c <_DrawBitmap+0x640>
 8016a66:	f1b9 0f00 	cmp.w	r9, #0
 8016a6a:	d034      	beq.n	8016ad6 <_DrawBitmap+0x6fa>
 8016a6c:	092d      	lsrs	r5, r5, #4
 8016a6e:	d032      	beq.n	8016ad6 <_DrawBitmap+0x6fa>
 8016a70:	9821      	ldr	r0, [sp, #132]	; 0x84
 8016a72:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 8016a76:	8023      	strh	r3, [r4, #0]
 8016a78:	b36e      	cbz	r6, 8016ad6 <_DrawBitmap+0x6fa>
 8016a7a:	68b3      	ldr	r3, [r6, #8]
 8016a7c:	9a05      	ldr	r2, [sp, #20]
 8016a7e:	681b      	ldr	r3, [r3, #0]
 8016a80:	4630      	mov	r0, r6
 8016a82:	4639      	mov	r1, r7
 8016a84:	4798      	blx	r3
 8016a86:	e026      	b.n	8016ad6 <_DrawBitmap+0x6fa>
 8016a88:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8016a8a:	f1c6 0302 	rsb	r3, r6, #2
 8016a8e:	b2db      	uxtb	r3, r3
 8016a90:	4650      	mov	r0, sl
 8016a92:	465a      	mov	r2, fp
 8016a94:	4293      	cmp	r3, r2
 8016a96:	bfc8      	it	gt
 8016a98:	b2d3      	uxtbgt	r3, r2
 8016a9a:	1ad2      	subs	r2, r2, r3
 8016a9c:	1ca1      	adds	r1, r4, #2
 8016a9e:	461e      	mov	r6, r3
 8016aa0:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 8016aa4:	d005      	beq.n	8016ab2 <_DrawBitmap+0x6d6>
 8016aa6:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 8016aaa:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8016aae:	f821 7c02 	strh.w	r7, [r1, #-2]
 8016ab2:	3e01      	subs	r6, #1
 8016ab4:	012d      	lsls	r5, r5, #4
 8016ab6:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 8016aba:	b2ed      	uxtb	r5, r5
 8016abc:	f101 0102 	add.w	r1, r1, #2
 8016ac0:	d1ee      	bne.n	8016aa0 <_DrawBitmap+0x6c4>
 8016ac2:	3b01      	subs	r3, #1
 8016ac4:	b2db      	uxtb	r3, r3
 8016ac6:	3301      	adds	r3, #1
 8016ac8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016acc:	b11a      	cbz	r2, 8016ad6 <_DrawBitmap+0x6fa>
 8016ace:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8016ad2:	2302      	movs	r3, #2
 8016ad4:	e7de      	b.n	8016a94 <_DrawBitmap+0x6b8>
 8016ad6:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8016ad8:	9b05      	ldr	r3, [sp, #20]
 8016ada:	9e08      	ldr	r6, [sp, #32]
 8016adc:	44ba      	add	sl, r7
 8016ade:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8016ae0:	3301      	adds	r3, #1
 8016ae2:	4437      	add	r7, r6
 8016ae4:	9305      	str	r3, [sp, #20]
 8016ae6:	9709      	str	r7, [sp, #36]	; 0x24
 8016ae8:	e5a3      	b.n	8016632 <_DrawBitmap+0x256>
 8016aea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016aec:	b113      	cbz	r3, 8016af4 <_DrawBitmap+0x718>
 8016aee:	a811      	add	r0, sp, #68	; 0x44
 8016af0:	f7fb ff4c 	bl	801298c <GUI_ALLOC_UnlockH>
 8016af4:	b013      	add	sp, #76	; 0x4c
 8016af6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016afa:	bf00      	nop
 8016afc:	2000016c 	.word	0x2000016c

08016b00 <LCD_SelectLCD>:
 8016b00:	b510      	push	{r4, lr}
 8016b02:	4b0d      	ldr	r3, [pc, #52]	; (8016b38 <LCD_SelectLCD+0x38>)
 8016b04:	681a      	ldr	r2, [r3, #0]
 8016b06:	7c51      	ldrb	r1, [r2, #17]
 8016b08:	4a0c      	ldr	r2, [pc, #48]	; (8016b3c <LCD_SelectLCD+0x3c>)
 8016b0a:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8016b0e:	461c      	mov	r4, r3
 8016b10:	b140      	cbz	r0, 8016b24 <LCD_SelectLCD+0x24>
 8016b12:	68c3      	ldr	r3, [r0, #12]
 8016b14:	b113      	cbz	r3, 8016b1c <LCD_SelectLCD+0x1c>
 8016b16:	681b      	ldr	r3, [r3, #0]
 8016b18:	2b04      	cmp	r3, #4
 8016b1a:	d001      	beq.n	8016b20 <LCD_SelectLCD+0x20>
 8016b1c:	6800      	ldr	r0, [r0, #0]
 8016b1e:	e7f7      	b.n	8016b10 <LCD_SelectLCD+0x10>
 8016b20:	f7fb fa04 	bl	8011f2c <GUI_DEVICE_Unlink>
 8016b24:	6823      	ldr	r3, [r4, #0]
 8016b26:	2200      	movs	r2, #0
 8016b28:	661a      	str	r2, [r3, #96]	; 0x60
 8016b2a:	f103 0208 	add.w	r2, r3, #8
 8016b2e:	615a      	str	r2, [r3, #20]
 8016b30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016b34:	f7f9 ba86 	b.w	8010044 <LCD_SetClipRectMax>
 8016b38:	2000016c 	.word	0x2000016c
 8016b3c:	20019c9c 	.word	0x20019c9c

08016b40 <_Rect2TextRect>:
 8016b40:	8803      	ldrh	r3, [r0, #0]
 8016b42:	8881      	ldrh	r1, [r0, #4]
 8016b44:	8842      	ldrh	r2, [r0, #2]
 8016b46:	b510      	push	{r4, lr}
 8016b48:	88c4      	ldrh	r4, [r0, #6]
 8016b4a:	441c      	add	r4, r3
 8016b4c:	1aa4      	subs	r4, r4, r2
 8016b4e:	440a      	add	r2, r1
 8016b50:	1ad3      	subs	r3, r2, r3
 8016b52:	8084      	strh	r4, [r0, #4]
 8016b54:	80c3      	strh	r3, [r0, #6]
 8016b56:	bd10      	pop	{r4, pc}

08016b58 <_TransformPoint>:
 8016b58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016b5a:	460d      	mov	r5, r1
 8016b5c:	4604      	mov	r4, r0
 8016b5e:	2300      	movs	r3, #0
 8016b60:	4668      	mov	r0, sp
 8016b62:	9300      	str	r3, [sp, #0]
 8016b64:	9301      	str	r3, [sp, #4]
 8016b66:	f7fe fc21 	bl	80153ac <WM_GetWindowRect>
 8016b6a:	f7f8 ff05 	bl	800f978 <LCD_GetXSize>
 8016b6e:	f7f8 ff0b 	bl	800f988 <LCD_GetYSize>
 8016b72:	682b      	ldr	r3, [r5, #0]
 8016b74:	f9bd 1000 	ldrsh.w	r1, [sp]
 8016b78:	6822      	ldr	r2, [r4, #0]
 8016b7a:	1acb      	subs	r3, r1, r3
 8016b7c:	6023      	str	r3, [r4, #0]
 8016b7e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8016b82:	4413      	add	r3, r2
 8016b84:	602b      	str	r3, [r5, #0]
 8016b86:	4b08      	ldr	r3, [pc, #32]	; (8016ba8 <_TransformPoint+0x50>)
 8016b88:	6821      	ldr	r1, [r4, #0]
 8016b8a:	f9b3 0004 	ldrsh.w	r0, [r3, #4]
 8016b8e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016b92:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016b96:	4401      	add	r1, r0
 8016b98:	4411      	add	r1, r2
 8016b9a:	6021      	str	r1, [r4, #0]
 8016b9c:	6829      	ldr	r1, [r5, #0]
 8016b9e:	440a      	add	r2, r1
 8016ba0:	1ad2      	subs	r2, r2, r3
 8016ba2:	602a      	str	r2, [r5, #0]
 8016ba4:	b003      	add	sp, #12
 8016ba6:	bd30      	pop	{r4, r5, pc}
 8016ba8:	20019da0 	.word	0x20019da0

08016bac <_TransformRect>:
 8016bac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8016bae:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016bb2:	9300      	str	r3, [sp, #0]
 8016bb4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8016bb8:	9301      	str	r3, [sp, #4]
 8016bba:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016bbe:	9302      	str	r3, [sp, #8]
 8016bc0:	4604      	mov	r4, r0
 8016bc2:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016bc6:	9303      	str	r3, [sp, #12]
 8016bc8:	4668      	mov	r0, sp
 8016bca:	a901      	add	r1, sp, #4
 8016bcc:	f7ff ffc4 	bl	8016b58 <_TransformPoint>
 8016bd0:	a802      	add	r0, sp, #8
 8016bd2:	a903      	add	r1, sp, #12
 8016bd4:	f7ff ffc0 	bl	8016b58 <_TransformPoint>
 8016bd8:	9b02      	ldr	r3, [sp, #8]
 8016bda:	8023      	strh	r3, [r4, #0]
 8016bdc:	9b01      	ldr	r3, [sp, #4]
 8016bde:	8063      	strh	r3, [r4, #2]
 8016be0:	9b00      	ldr	r3, [sp, #0]
 8016be2:	80a3      	strh	r3, [r4, #4]
 8016be4:	9b03      	ldr	r3, [sp, #12]
 8016be6:	80e3      	strh	r3, [r4, #6]
 8016be8:	b004      	add	sp, #16
 8016bea:	bd10      	pop	{r4, pc}

08016bec <_DrawBitmapCW>:
 8016bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bf0:	b091      	sub	sp, #68	; 0x44
 8016bf2:	4693      	mov	fp, r2
 8016bf4:	9009      	str	r0, [sp, #36]	; 0x24
 8016bf6:	9108      	str	r1, [sp, #32]
 8016bf8:	4410      	add	r0, r2
 8016bfa:	4419      	add	r1, r3
 8016bfc:	3901      	subs	r1, #1
 8016bfe:	3801      	subs	r0, #1
 8016c00:	910b      	str	r1, [sp, #44]	; 0x2c
 8016c02:	900a      	str	r0, [sp, #40]	; 0x28
 8016c04:	a908      	add	r1, sp, #32
 8016c06:	a809      	add	r0, sp, #36	; 0x24
 8016c08:	461d      	mov	r5, r3
 8016c0a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8016c0c:	f7ff ffa4 	bl	8016b58 <_TransformPoint>
 8016c10:	a90b      	add	r1, sp, #44	; 0x2c
 8016c12:	a80a      	add	r0, sp, #40	; 0x28
 8016c14:	f7ff ffa0 	bl	8016b58 <_TransformPoint>
 8016c18:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8016c1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016c1c:	2f01      	cmp	r7, #1
 8016c1e:	f040 81a4 	bne.w	8016f6a <_DrawBitmapCW+0x37e>
 8016c22:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8016c24:	2f01      	cmp	r7, #1
 8016c26:	f040 81a0 	bne.w	8016f6a <_DrawBitmapCW+0x37e>
 8016c2a:	4ba6      	ldr	r3, [pc, #664]	; (8016ec4 <_DrawBitmapCW+0x2d8>)
 8016c2c:	681a      	ldr	r2, [r3, #0]
 8016c2e:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 8016c32:	4299      	cmp	r1, r3
 8016c34:	dd07      	ble.n	8016c46 <_DrawBitmapCW+0x5a>
 8016c36:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8016c38:	9309      	str	r3, [sp, #36]	; 0x24
 8016c3a:	ebc3 0901 	rsb	r9, r3, r1
 8016c3e:	ebc9 0505 	rsb	r5, r9, r5
 8016c42:	fb07 4409 	mla	r4, r7, r9, r4
 8016c46:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016c48:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 8016c4c:	4299      	cmp	r1, r3
 8016c4e:	da02      	bge.n	8016c56 <_DrawBitmapCW+0x6a>
 8016c50:	930a      	str	r3, [sp, #40]	; 0x28
 8016c52:	1a5b      	subs	r3, r3, r1
 8016c54:	1aed      	subs	r5, r5, r3
 8016c56:	f9b2 300e 	ldrsh.w	r3, [r2, #14]
 8016c5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8016c5c:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 8016c60:	4299      	cmp	r1, r3
 8016c62:	bfc4      	itt	gt
 8016c64:	ebc3 0301 	rsbgt	r3, r3, r1
 8016c68:	ebc3 0b0b 	rsbgt	fp, r3, fp
 8016c6c:	9b08      	ldr	r3, [sp, #32]
 8016c6e:	4293      	cmp	r3, r2
 8016c70:	da2a      	bge.n	8016cc8 <_DrawBitmapCW+0xdc>
 8016c72:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8016c74:	1ad6      	subs	r6, r2, r3
 8016c76:	1e79      	subs	r1, r7, #1
 8016c78:	ebc6 0b0b 	rsb	fp, r6, fp
 8016c7c:	2907      	cmp	r1, #7
 8016c7e:	d824      	bhi.n	8016cca <_DrawBitmapCW+0xde>
 8016c80:	e8df f001 	tbb	[pc, r1]
 8016c84:	16230d04 	.word	0x16230d04
 8016c88:	1f232323 	.word	0x1f232323
 8016c8c:	f026 0207 	bic.w	r2, r6, #7
 8016c90:	4413      	add	r3, r2
 8016c92:	eb04 04e6 	add.w	r4, r4, r6, asr #3
 8016c96:	9308      	str	r3, [sp, #32]
 8016c98:	f006 0607 	and.w	r6, r6, #7
 8016c9c:	e015      	b.n	8016cca <_DrawBitmapCW+0xde>
 8016c9e:	f026 0203 	bic.w	r2, r6, #3
 8016ca2:	4413      	add	r3, r2
 8016ca4:	eb04 04a6 	add.w	r4, r4, r6, asr #2
 8016ca8:	9308      	str	r3, [sp, #32]
 8016caa:	f006 0603 	and.w	r6, r6, #3
 8016cae:	e00c      	b.n	8016cca <_DrawBitmapCW+0xde>
 8016cb0:	f026 0201 	bic.w	r2, r6, #1
 8016cb4:	4413      	add	r3, r2
 8016cb6:	eb04 0466 	add.w	r4, r4, r6, asr #1
 8016cba:	9308      	str	r3, [sp, #32]
 8016cbc:	f006 0601 	and.w	r6, r6, #1
 8016cc0:	e003      	b.n	8016cca <_DrawBitmapCW+0xde>
 8016cc2:	4434      	add	r4, r6
 8016cc4:	9208      	str	r2, [sp, #32]
 8016cc6:	e000      	b.n	8016cca <_DrawBitmapCW+0xde>
 8016cc8:	2600      	movs	r6, #0
 8016cca:	f1bb 0f00 	cmp.w	fp, #0
 8016cce:	f340 81ab 	ble.w	8017028 <_DrawBitmapCW+0x43c>
 8016cd2:	2d00      	cmp	r5, #0
 8016cd4:	f340 81a8 	ble.w	8017028 <_DrawBitmapCW+0x43c>
 8016cd8:	9f08      	ldr	r7, [sp, #32]
 8016cda:	9702      	str	r7, [sp, #8]
 8016cdc:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8016cde:	9706      	str	r7, [sp, #24]
 8016ce0:	1b7d      	subs	r5, r7, r5
 8016ce2:	9505      	str	r5, [sp, #20]
 8016ce4:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8016ce6:	1e6b      	subs	r3, r5, #1
 8016ce8:	2b07      	cmp	r3, #7
 8016cea:	f200 8134 	bhi.w	8016f56 <_DrawBitmapCW+0x36a>
 8016cee:	e8df f013 	tbh	[pc, r3, lsl #1]
 8016cf2:	0008      	.short	0x0008
 8016cf4:	013200ae 	.word	0x013200ae
 8016cf8:	013200ef 	.word	0x013200ef
 8016cfc:	01320132 	.word	0x01320132
 8016d00:	0121      	.short	0x0121
 8016d02:	4b70      	ldr	r3, [pc, #448]	; (8016ec4 <_DrawBitmapCW+0x2d8>)
 8016d04:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8016d06:	681b      	ldr	r3, [r3, #0]
 8016d08:	682d      	ldr	r5, [r5, #0]
 8016d0a:	7c1a      	ldrb	r2, [r3, #16]
 8016d0c:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8016d0e:	9504      	str	r5, [sp, #16]
 8016d10:	f002 0203 	and.w	r2, r2, #3
 8016d14:	9d02      	ldr	r5, [sp, #8]
 8016d16:	687f      	ldr	r7, [r7, #4]
 8016d18:	9703      	str	r7, [sp, #12]
 8016d1a:	2a01      	cmp	r2, #1
 8016d1c:	4435      	add	r5, r6
 8016d1e:	d052      	beq.n	8016dc6 <_DrawBitmapCW+0x1da>
 8016d20:	d307      	bcc.n	8016d32 <_DrawBitmapCW+0x146>
 8016d22:	2a02      	cmp	r2, #2
 8016d24:	f040 8117 	bne.w	8016f56 <_DrawBitmapCW+0x36a>
 8016d28:	eb05 0a0b 	add.w	sl, r5, fp
 8016d2c:	46b0      	mov	r8, r6
 8016d2e:	46a1      	mov	r9, r4
 8016d30:	e034      	b.n	8016d9c <_DrawBitmapCW+0x1b0>
 8016d32:	eb05 0a0b 	add.w	sl, r5, fp
 8016d36:	46b0      	mov	r8, r6
 8016d38:	46a1      	mov	r9, r4
 8016d3a:	4b62      	ldr	r3, [pc, #392]	; (8016ec4 <_DrawBitmapCW+0x2d8>)
 8016d3c:	9f03      	ldr	r7, [sp, #12]
 8016d3e:	681b      	ldr	r3, [r3, #0]
 8016d40:	9906      	ldr	r1, [sp, #24]
 8016d42:	7c5a      	ldrb	r2, [r3, #17]
 8016d44:	4b60      	ldr	r3, [pc, #384]	; (8016ec8 <_DrawBitmapCW+0x2dc>)
 8016d46:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8016d4a:	f899 2000 	ldrb.w	r2, [r9]
 8016d4e:	68c3      	ldr	r3, [r0, #12]
 8016d50:	f8d3 c018 	ldr.w	ip, [r3, #24]
 8016d54:	2380      	movs	r3, #128	; 0x80
 8016d56:	fa43 f308 	asr.w	r3, r3, r8
 8016d5a:	421a      	tst	r2, r3
 8016d5c:	9b04      	ldr	r3, [sp, #16]
 8016d5e:	462a      	mov	r2, r5
 8016d60:	bf18      	it	ne
 8016d62:	463b      	movne	r3, r7
 8016d64:	f108 0801 	add.w	r8, r8, #1
 8016d68:	47e0      	blx	ip
 8016d6a:	3501      	adds	r5, #1
 8016d6c:	f1b8 0f08 	cmp.w	r8, #8
 8016d70:	bf04      	itt	eq
 8016d72:	f109 0901 	addeq.w	r9, r9, #1
 8016d76:	f04f 0800 	moveq.w	r8, #0
 8016d7a:	4555      	cmp	r5, sl
 8016d7c:	d1dd      	bne.n	8016d3a <_DrawBitmapCW+0x14e>
 8016d7e:	e0ea      	b.n	8016f56 <_DrawBitmapCW+0x36a>
 8016d80:	f108 0801 	add.w	r8, r8, #1
 8016d84:	f1b8 0f08 	cmp.w	r8, #8
 8016d88:	f105 0501 	add.w	r5, r5, #1
 8016d8c:	bf04      	itt	eq
 8016d8e:	f109 0901 	addeq.w	r9, r9, #1
 8016d92:	f04f 0800 	moveq.w	r8, #0
 8016d96:	4555      	cmp	r5, sl
 8016d98:	f000 80dd 	beq.w	8016f56 <_DrawBitmapCW+0x36a>
 8016d9c:	f899 2000 	ldrb.w	r2, [r9]
 8016da0:	2380      	movs	r3, #128	; 0x80
 8016da2:	fa43 f308 	asr.w	r3, r3, r8
 8016da6:	421a      	tst	r2, r3
 8016da8:	d0ea      	beq.n	8016d80 <_DrawBitmapCW+0x194>
 8016daa:	4b46      	ldr	r3, [pc, #280]	; (8016ec4 <_DrawBitmapCW+0x2d8>)
 8016dac:	9906      	ldr	r1, [sp, #24]
 8016dae:	681b      	ldr	r3, [r3, #0]
 8016db0:	7c5a      	ldrb	r2, [r3, #17]
 8016db2:	4b45      	ldr	r3, [pc, #276]	; (8016ec8 <_DrawBitmapCW+0x2dc>)
 8016db4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8016db8:	68c3      	ldr	r3, [r0, #12]
 8016dba:	462a      	mov	r2, r5
 8016dbc:	f8d3 c018 	ldr.w	ip, [r3, #24]
 8016dc0:	9b03      	ldr	r3, [sp, #12]
 8016dc2:	47e0      	blx	ip
 8016dc4:	e7dc      	b.n	8016d80 <_DrawBitmapCW+0x194>
 8016dc6:	7c5a      	ldrb	r2, [r3, #17]
 8016dc8:	4b3f      	ldr	r3, [pc, #252]	; (8016ec8 <_DrawBitmapCW+0x2dc>)
 8016dca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016dce:	691b      	ldr	r3, [r3, #16]
 8016dd0:	689b      	ldr	r3, [r3, #8]
 8016dd2:	4798      	blx	r3
 8016dd4:	eb05 070b 	add.w	r7, r5, fp
 8016dd8:	9004      	str	r0, [sp, #16]
 8016dda:	9703      	str	r7, [sp, #12]
 8016ddc:	46b0      	mov	r8, r6
 8016dde:	46a1      	mov	r9, r4
 8016de0:	f899 2000 	ldrb.w	r2, [r9]
 8016de4:	2380      	movs	r3, #128	; 0x80
 8016de6:	fa43 f308 	asr.w	r3, r3, r8
 8016dea:	421a      	tst	r2, r3
 8016dec:	d020      	beq.n	8016e30 <_DrawBitmapCW+0x244>
 8016dee:	f8df c0d4 	ldr.w	ip, [pc, #212]	; 8016ec4 <_DrawBitmapCW+0x2d8>
 8016df2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8016ec8 <_DrawBitmapCW+0x2dc>
 8016df6:	f8dc 3000 	ldr.w	r3, [ip]
 8016dfa:	9906      	ldr	r1, [sp, #24]
 8016dfc:	7c5b      	ldrb	r3, [r3, #17]
 8016dfe:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8016e02:	68c3      	ldr	r3, [r0, #12]
 8016e04:	462a      	mov	r2, r5
 8016e06:	695b      	ldr	r3, [r3, #20]
 8016e08:	f8cd c000 	str.w	ip, [sp]
 8016e0c:	4798      	blx	r3
 8016e0e:	f8dd c000 	ldr.w	ip, [sp]
 8016e12:	9f04      	ldr	r7, [sp, #16]
 8016e14:	f8dc 3000 	ldr.w	r3, [ip]
 8016e18:	7c5b      	ldrb	r3, [r3, #17]
 8016e1a:	f85a 2023 	ldr.w	r2, [sl, r3, lsl #2]
 8016e1e:	68d1      	ldr	r1, [r2, #12]
 8016e20:	ea80 0307 	eor.w	r3, r0, r7
 8016e24:	f8d1 c018 	ldr.w	ip, [r1, #24]
 8016e28:	9906      	ldr	r1, [sp, #24]
 8016e2a:	4610      	mov	r0, r2
 8016e2c:	462a      	mov	r2, r5
 8016e2e:	47e0      	blx	ip
 8016e30:	f108 0801 	add.w	r8, r8, #1
 8016e34:	9f03      	ldr	r7, [sp, #12]
 8016e36:	f1b8 0f08 	cmp.w	r8, #8
 8016e3a:	f105 0501 	add.w	r5, r5, #1
 8016e3e:	bf04      	itt	eq
 8016e40:	f109 0901 	addeq.w	r9, r9, #1
 8016e44:	f04f 0800 	moveq.w	r8, #0
 8016e48:	42bd      	cmp	r5, r7
 8016e4a:	d1c9      	bne.n	8016de0 <_DrawBitmapCW+0x1f4>
 8016e4c:	e083      	b.n	8016f56 <_DrawBitmapCW+0x36a>
 8016e4e:	4b1f      	ldr	r3, [pc, #124]	; (8016ecc <_DrawBitmapCW+0x2e0>)
 8016e50:	f894 a000 	ldrb.w	sl, [r4]
 8016e54:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8016e56:	ad10      	add	r5, sp, #64	; 0x40
 8016e58:	e905 000f 	stmdb	r5, {r0, r1, r2, r3}
 8016e5c:	2002      	movs	r0, #2
 8016e5e:	9d02      	ldr	r5, [sp, #8]
 8016e60:	f000 fbfc 	bl	801765c <LCD__GetPfSetPixel>
 8016e64:	4435      	add	r5, r6
 8016e66:	4603      	mov	r3, r0
 8016e68:	eb05 0c0b 	add.w	ip, r5, fp
 8016e6c:	46b0      	mov	r8, r6
 8016e6e:	46a1      	mov	r9, r4
 8016e70:	f1c8 0203 	rsb	r2, r8, #3
 8016e74:	0052      	lsls	r2, r2, #1
 8016e76:	f1c2 0106 	rsb	r1, r2, #6
 8016e7a:	20c0      	movs	r0, #192	; 0xc0
 8016e7c:	fa40 f101 	asr.w	r1, r0, r1
 8016e80:	ea01 010a 	and.w	r1, r1, sl
 8016e84:	fa21 f202 	lsr.w	r2, r1, r2
 8016e88:	af10      	add	r7, sp, #64	; 0x40
 8016e8a:	eb07 0282 	add.w	r2, r7, r2, lsl #2
 8016e8e:	4629      	mov	r1, r5
 8016e90:	f812 2c10 	ldrb.w	r2, [r2, #-16]
 8016e94:	9806      	ldr	r0, [sp, #24]
 8016e96:	9301      	str	r3, [sp, #4]
 8016e98:	f8cd c000 	str.w	ip, [sp]
 8016e9c:	f108 0801 	add.w	r8, r8, #1
 8016ea0:	4798      	blx	r3
 8016ea2:	f1b8 0f04 	cmp.w	r8, #4
 8016ea6:	f105 0501 	add.w	r5, r5, #1
 8016eaa:	9b01      	ldr	r3, [sp, #4]
 8016eac:	f8dd c000 	ldr.w	ip, [sp]
 8016eb0:	d105      	bne.n	8016ebe <_DrawBitmapCW+0x2d2>
 8016eb2:	f899 a001 	ldrb.w	sl, [r9, #1]
 8016eb6:	f04f 0800 	mov.w	r8, #0
 8016eba:	f109 0901 	add.w	r9, r9, #1
 8016ebe:	4565      	cmp	r5, ip
 8016ec0:	d1d6      	bne.n	8016e70 <_DrawBitmapCW+0x284>
 8016ec2:	e048      	b.n	8016f56 <_DrawBitmapCW+0x36a>
 8016ec4:	2000016c 	.word	0x2000016c
 8016ec8:	20019c9c 	.word	0x20019c9c
 8016ecc:	0801ab9c 	.word	0x0801ab9c
 8016ed0:	2004      	movs	r0, #4
 8016ed2:	9d02      	ldr	r5, [sp, #8]
 8016ed4:	f894 a000 	ldrb.w	sl, [r4]
 8016ed8:	f000 fbc0 	bl	801765c <LCD__GetPfSetPixel>
 8016edc:	4435      	add	r5, r6
 8016ede:	4603      	mov	r3, r0
 8016ee0:	eb05 0c0b 	add.w	ip, r5, fp
 8016ee4:	46b0      	mov	r8, r6
 8016ee6:	46a1      	mov	r9, r4
 8016ee8:	f1c8 0201 	rsb	r2, r8, #1
 8016eec:	0092      	lsls	r2, r2, #2
 8016eee:	f1c2 0104 	rsb	r1, r2, #4
 8016ef2:	20f0      	movs	r0, #240	; 0xf0
 8016ef4:	fa40 f101 	asr.w	r1, r0, r1
 8016ef8:	ea01 010a 	and.w	r1, r1, sl
 8016efc:	fa21 f202 	lsr.w	r2, r1, r2
 8016f00:	9301      	str	r3, [sp, #4]
 8016f02:	4629      	mov	r1, r5
 8016f04:	f8cd c000 	str.w	ip, [sp]
 8016f08:	9806      	ldr	r0, [sp, #24]
 8016f0a:	b2d2      	uxtb	r2, r2
 8016f0c:	f108 0801 	add.w	r8, r8, #1
 8016f10:	4798      	blx	r3
 8016f12:	f1b8 0f02 	cmp.w	r8, #2
 8016f16:	f105 0501 	add.w	r5, r5, #1
 8016f1a:	9b01      	ldr	r3, [sp, #4]
 8016f1c:	f8dd c000 	ldr.w	ip, [sp]
 8016f20:	d105      	bne.n	8016f2e <_DrawBitmapCW+0x342>
 8016f22:	f899 a001 	ldrb.w	sl, [r9, #1]
 8016f26:	f04f 0800 	mov.w	r8, #0
 8016f2a:	f109 0901 	add.w	r9, r9, #1
 8016f2e:	4565      	cmp	r5, ip
 8016f30:	d1da      	bne.n	8016ee8 <_DrawBitmapCW+0x2fc>
 8016f32:	e010      	b.n	8016f56 <_DrawBitmapCW+0x36a>
 8016f34:	2008      	movs	r0, #8
 8016f36:	f000 fb91 	bl	801765c <LCD__GetPfSetPixel>
 8016f3a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016f3e:	9d02      	ldr	r5, [sp, #8]
 8016f40:	4681      	mov	r9, r0
 8016f42:	44d8      	add	r8, fp
 8016f44:	9f02      	ldr	r7, [sp, #8]
 8016f46:	9806      	ldr	r0, [sp, #24]
 8016f48:	1be3      	subs	r3, r4, r7
 8016f4a:	4629      	mov	r1, r5
 8016f4c:	5d5a      	ldrb	r2, [r3, r5]
 8016f4e:	3501      	adds	r5, #1
 8016f50:	47c8      	blx	r9
 8016f52:	4545      	cmp	r5, r8
 8016f54:	d1f6      	bne.n	8016f44 <_DrawBitmapCW+0x358>
 8016f56:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8016f58:	9f06      	ldr	r7, [sp, #24]
 8016f5a:	442c      	add	r4, r5
 8016f5c:	9d05      	ldr	r5, [sp, #20]
 8016f5e:	3f01      	subs	r7, #1
 8016f60:	42af      	cmp	r7, r5
 8016f62:	9706      	str	r7, [sp, #24]
 8016f64:	f47f aebe 	bne.w	8016ce4 <_DrawBitmapCW+0xf8>
 8016f68:	e05e      	b.n	8017028 <_DrawBitmapCW+0x43c>
 8016f6a:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8016f6c:	f1c7 0708 	rsb	r7, r7, #8
 8016f70:	9706      	str	r7, [sp, #24]
 8016f72:	2700      	movs	r7, #0
 8016f74:	4689      	mov	r9, r1
 8016f76:	46b8      	mov	r8, r7
 8016f78:	42af      	cmp	r7, r5
 8016f7a:	da55      	bge.n	8017028 <_DrawBitmapCW+0x43c>
 8016f7c:	4b2c      	ldr	r3, [pc, #176]	; (8017030 <_DrawBitmapCW+0x444>)
 8016f7e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8016f80:	681b      	ldr	r3, [r3, #0]
 8016f82:	ebc0 0009 	rsb	r0, r0, r9
 8016f86:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8016f8a:	9004      	str	r0, [sp, #16]
 8016f8c:	1c41      	adds	r1, r0, #1
 8016f8e:	4291      	cmp	r1, r2
 8016f90:	9105      	str	r1, [sp, #20]
 8016f92:	db43      	blt.n	801701c <_DrawBitmapCW+0x430>
 8016f94:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8016f98:	4599      	cmp	r9, r3
 8016f9a:	dc3f      	bgt.n	801701c <_DrawBitmapCW+0x430>
 8016f9c:	2600      	movs	r6, #0
 8016f9e:	f8dd a020 	ldr.w	sl, [sp, #32]
 8016fa2:	9402      	str	r4, [sp, #8]
 8016fa4:	46b4      	mov	ip, r6
 8016fa6:	45dc      	cmp	ip, fp
 8016fa8:	da38      	bge.n	801701c <_DrawBitmapCW+0x430>
 8016faa:	b92e      	cbnz	r6, 8016fb8 <_DrawBitmapCW+0x3cc>
 8016fac:	9a02      	ldr	r2, [sp, #8]
 8016fae:	f892 8000 	ldrb.w	r8, [r2]
 8016fb2:	3201      	adds	r2, #1
 8016fb4:	9202      	str	r2, [sp, #8]
 8016fb6:	2608      	movs	r6, #8
 8016fb8:	9806      	ldr	r0, [sp, #24]
 8016fba:	991c      	ldr	r1, [sp, #112]	; 0x70
 8016fbc:	4a1c      	ldr	r2, [pc, #112]	; (8017030 <_DrawBitmapCW+0x444>)
 8016fbe:	fa48 f300 	asr.w	r3, r8, r0
 8016fc2:	1a76      	subs	r6, r6, r1
 8016fc4:	fa08 f801 	lsl.w	r8, r8, r1
 8016fc8:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8016fcc:	fa5f f888 	uxtb.w	r8, r8
 8016fd0:	d103      	bne.n	8016fda <_DrawBitmapCW+0x3ee>
 8016fd2:	6810      	ldr	r0, [r2, #0]
 8016fd4:	7c00      	ldrb	r0, [r0, #16]
 8016fd6:	0780      	lsls	r0, r0, #30
 8016fd8:	d41b      	bmi.n	8017012 <_DrawBitmapCW+0x426>
 8016fda:	6812      	ldr	r2, [r2, #0]
 8016fdc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8016fde:	6810      	ldr	r0, [r2, #0]
 8016fe0:	9007      	str	r0, [sp, #28]
 8016fe2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8016fe4:	b110      	cbz	r0, 8016fec <_DrawBitmapCW+0x400>
 8016fe6:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8016fea:	e000      	b.n	8016fee <_DrawBitmapCW+0x402>
 8016fec:	b2db      	uxtb	r3, r3
 8016fee:	991a      	ldr	r1, [sp, #104]	; 0x68
 8016ff0:	6013      	str	r3, [r2, #0]
 8016ff2:	1e4b      	subs	r3, r1, #1
 8016ff4:	464a      	mov	r2, r9
 8016ff6:	4453      	add	r3, sl
 8016ff8:	9805      	ldr	r0, [sp, #20]
 8016ffa:	f8cd c000 	str.w	ip, [sp]
 8016ffe:	4651      	mov	r1, sl
 8017000:	f7f8 fe0c 	bl	800fc1c <LCD_FillRect>
 8017004:	4b0a      	ldr	r3, [pc, #40]	; (8017030 <_DrawBitmapCW+0x444>)
 8017006:	9a07      	ldr	r2, [sp, #28]
 8017008:	681b      	ldr	r3, [r3, #0]
 801700a:	f8dd c000 	ldr.w	ip, [sp]
 801700e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017010:	601a      	str	r2, [r3, #0]
 8017012:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017014:	f10c 0c01 	add.w	ip, ip, #1
 8017018:	449a      	add	sl, r3
 801701a:	e7c4      	b.n	8016fa6 <_DrawBitmapCW+0x3ba>
 801701c:	981d      	ldr	r0, [sp, #116]	; 0x74
 801701e:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8017022:	3701      	adds	r7, #1
 8017024:	4404      	add	r4, r0
 8017026:	e7a7      	b.n	8016f78 <_DrawBitmapCW+0x38c>
 8017028:	b011      	add	sp, #68	; 0x44
 801702a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801702e:	bf00      	nop
 8017030:	2000016c 	.word	0x2000016c

08017034 <LCD_ReadRectEx>:
 8017034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017038:	b087      	sub	sp, #28
 801703a:	4617      	mov	r7, r2
 801703c:	9304      	str	r3, [sp, #16]
 801703e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017040:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017042:	68da      	ldr	r2, [r3, #12]
 8017044:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8017046:	f8d2 8014 	ldr.w	r8, [r2, #20]
 801704a:	4606      	mov	r6, r0
 801704c:	460d      	mov	r5, r1
 801704e:	b973      	cbnz	r3, 801706e <LCD_ReadRectEx+0x3a>
 8017050:	4b71      	ldr	r3, [pc, #452]	; (8017218 <LCD_ReadRectEx+0x1e4>)
 8017052:	681b      	ldr	r3, [r3, #0]
 8017054:	7c58      	ldrb	r0, [r3, #17]
 8017056:	f7f8 fca7 	bl	800f9a8 <GUI_GetBitsPerPixelEx>
 801705a:	2808      	cmp	r0, #8
 801705c:	4682      	mov	sl, r0
 801705e:	dd15      	ble.n	801708c <LCD_ReadRectEx+0x58>
 8017060:	2810      	cmp	r0, #16
 8017062:	bfcc      	ite	gt
 8017064:	f04f 0904 	movgt.w	r9, #4
 8017068:	f04f 0902 	movle.w	r9, #2
 801706c:	e010      	b.n	8017090 <LCD_ReadRectEx+0x5c>
 801706e:	a811      	add	r0, sp, #68	; 0x44
 8017070:	2101      	movs	r1, #1
 8017072:	4798      	blx	r3
 8017074:	4684      	mov	ip, r0
 8017076:	2800      	cmp	r0, #0
 8017078:	d0ea      	beq.n	8017050 <LCD_ReadRectEx+0x1c>
 801707a:	9b04      	ldr	r3, [sp, #16]
 801707c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801707e:	e88d 0018 	stmia.w	sp, {r3, r4}
 8017082:	4631      	mov	r1, r6
 8017084:	462a      	mov	r2, r5
 8017086:	463b      	mov	r3, r7
 8017088:	47e0      	blx	ip
 801708a:	e0c1      	b.n	8017210 <LCD_ReadRectEx+0x1dc>
 801708c:	f04f 0901 	mov.w	r9, #1
 8017090:	f04f 0b00 	mov.w	fp, #0
 8017094:	9b04      	ldr	r3, [sp, #16]
 8017096:	429d      	cmp	r5, r3
 8017098:	f300 80ba 	bgt.w	8017210 <LCD_ReadRectEx+0x1dc>
 801709c:	f1b9 0f02 	cmp.w	r9, #2
 80170a0:	d009      	beq.n	80170b6 <LCD_ReadRectEx+0x82>
 80170a2:	f1b9 0f04 	cmp.w	r9, #4
 80170a6:	d004      	beq.n	80170b2 <LCD_ReadRectEx+0x7e>
 80170a8:	f1b9 0f01 	cmp.w	r9, #1
 80170ac:	f040 80ae 	bne.w	801720c <LCD_ReadRectEx+0x1d8>
 80170b0:	e003      	b.n	80170ba <LCD_ReadRectEx+0x86>
 80170b2:	46b4      	mov	ip, r6
 80170b4:	e09b      	b.n	80171ee <LCD_ReadRectEx+0x1ba>
 80170b6:	46b4      	mov	ip, r6
 80170b8:	e08a      	b.n	80171d0 <LCD_ReadRectEx+0x19c>
 80170ba:	f10a 32ff 	add.w	r2, sl, #4294967295
 80170be:	2a07      	cmp	r2, #7
 80170c0:	f200 80a4 	bhi.w	801720c <LCD_ReadRectEx+0x1d8>
 80170c4:	e8df f002 	tbb	[pc, r2]
 80170c8:	0606080a 	.word	0x0606080a
 80170cc:	04040404 	.word	0x04040404
 80170d0:	46b4      	mov	ip, r6
 80170d2:	e066      	b.n	80171a2 <LCD_ReadRectEx+0x16e>
 80170d4:	46b4      	mov	ip, r6
 80170d6:	e047      	b.n	8017168 <LCD_ReadRectEx+0x134>
 80170d8:	46b4      	mov	ip, r6
 80170da:	e022      	b.n	8017122 <LCD_ReadRectEx+0xee>
 80170dc:	46b4      	mov	ip, r6
 80170de:	45bc      	cmp	ip, r7
 80170e0:	f300 8094 	bgt.w	801720c <LCD_ReadRectEx+0x1d8>
 80170e4:	4661      	mov	r1, ip
 80170e6:	462a      	mov	r2, r5
 80170e8:	f8cd c00c 	str.w	ip, [sp, #12]
 80170ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80170ee:	47c0      	blx	r8
 80170f0:	f1cb 0207 	rsb	r2, fp, #7
 80170f4:	fa00 f202 	lsl.w	r2, r0, r2
 80170f8:	f64f 717f 	movw	r1, #65407	; 0xff7f
 80170fc:	7820      	ldrb	r0, [r4, #0]
 80170fe:	fa41 f10b 	asr.w	r1, r1, fp
 8017102:	4001      	ands	r1, r0
 8017104:	430a      	orrs	r2, r1
 8017106:	7022      	strb	r2, [r4, #0]
 8017108:	f10b 0301 	add.w	r3, fp, #1
 801710c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017110:	f023 0207 	bic.w	r2, r3, #7
 8017114:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8017118:	fa43 fb02 	asr.w	fp, r3, r2
 801711c:	f10c 0c01 	add.w	ip, ip, #1
 8017120:	e7dd      	b.n	80170de <LCD_ReadRectEx+0xaa>
 8017122:	45bc      	cmp	ip, r7
 8017124:	dc72      	bgt.n	801720c <LCD_ReadRectEx+0x1d8>
 8017126:	4661      	mov	r1, ip
 8017128:	462a      	mov	r2, r5
 801712a:	f8cd c00c 	str.w	ip, [sp, #12]
 801712e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017130:	47c0      	blx	r8
 8017132:	ea4f 024b 	mov.w	r2, fp, lsl #1
 8017136:	f1c2 0106 	rsb	r1, r2, #6
 801713a:	fa00 f101 	lsl.w	r1, r0, r1
 801713e:	f64f 703f 	movw	r0, #65343	; 0xff3f
 8017142:	fa40 f202 	asr.w	r2, r0, r2
 8017146:	7820      	ldrb	r0, [r4, #0]
 8017148:	4002      	ands	r2, r0
 801714a:	4311      	orrs	r1, r2
 801714c:	7021      	strb	r1, [r4, #0]
 801714e:	f10b 0301 	add.w	r3, fp, #1
 8017152:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017156:	f023 0203 	bic.w	r2, r3, #3
 801715a:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 801715e:	fa43 fb02 	asr.w	fp, r3, r2
 8017162:	f10c 0c01 	add.w	ip, ip, #1
 8017166:	e7dc      	b.n	8017122 <LCD_ReadRectEx+0xee>
 8017168:	45bc      	cmp	ip, r7
 801716a:	dc4f      	bgt.n	801720c <LCD_ReadRectEx+0x1d8>
 801716c:	4661      	mov	r1, ip
 801716e:	462a      	mov	r2, r5
 8017170:	f8cd c00c 	str.w	ip, [sp, #12]
 8017174:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017176:	47c0      	blx	r8
 8017178:	ea4f 028b 	mov.w	r2, fp, lsl #2
 801717c:	f1c2 0104 	rsb	r1, r2, #4
 8017180:	fa00 f101 	lsl.w	r1, r0, r1
 8017184:	200f      	movs	r0, #15
 8017186:	fa00 f202 	lsl.w	r2, r0, r2
 801718a:	7820      	ldrb	r0, [r4, #0]
 801718c:	4002      	ands	r2, r0
 801718e:	4311      	orrs	r1, r2
 8017190:	7021      	strb	r1, [r4, #0]
 8017192:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017196:	445c      	add	r4, fp
 8017198:	f10c 0c01 	add.w	ip, ip, #1
 801719c:	f08b 0b01 	eor.w	fp, fp, #1
 80171a0:	e7e2      	b.n	8017168 <LCD_ReadRectEx+0x134>
 80171a2:	4273      	negs	r3, r6
 80171a4:	1ba2      	subs	r2, r4, r6
 80171a6:	45bc      	cmp	ip, r7
 80171a8:	9305      	str	r3, [sp, #20]
 80171aa:	4462      	add	r2, ip
 80171ac:	dc0e      	bgt.n	80171cc <LCD_ReadRectEx+0x198>
 80171ae:	4661      	mov	r1, ip
 80171b0:	462a      	mov	r2, r5
 80171b2:	f8cd c00c 	str.w	ip, [sp, #12]
 80171b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80171b8:	47c0      	blx	r8
 80171ba:	9a05      	ldr	r2, [sp, #20]
 80171bc:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80171c0:	4422      	add	r2, r4
 80171c2:	f802 000c 	strb.w	r0, [r2, ip]
 80171c6:	f10c 0c01 	add.w	ip, ip, #1
 80171ca:	e7ea      	b.n	80171a2 <LCD_ReadRectEx+0x16e>
 80171cc:	4614      	mov	r4, r2
 80171ce:	e01d      	b.n	801720c <LCD_ReadRectEx+0x1d8>
 80171d0:	45bc      	cmp	ip, r7
 80171d2:	dc1b      	bgt.n	801720c <LCD_ReadRectEx+0x1d8>
 80171d4:	4661      	mov	r1, ip
 80171d6:	f8cd c00c 	str.w	ip, [sp, #12]
 80171da:	9811      	ldr	r0, [sp, #68]	; 0x44
 80171dc:	462a      	mov	r2, r5
 80171de:	47c0      	blx	r8
 80171e0:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80171e4:	f824 0b02 	strh.w	r0, [r4], #2
 80171e8:	f10c 0c01 	add.w	ip, ip, #1
 80171ec:	e7f0      	b.n	80171d0 <LCD_ReadRectEx+0x19c>
 80171ee:	45bc      	cmp	ip, r7
 80171f0:	dc0c      	bgt.n	801720c <LCD_ReadRectEx+0x1d8>
 80171f2:	4661      	mov	r1, ip
 80171f4:	f8cd c00c 	str.w	ip, [sp, #12]
 80171f8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80171fa:	462a      	mov	r2, r5
 80171fc:	47c0      	blx	r8
 80171fe:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8017202:	f844 0b04 	str.w	r0, [r4], #4
 8017206:	f10c 0c01 	add.w	ip, ip, #1
 801720a:	e7f0      	b.n	80171ee <LCD_ReadRectEx+0x1ba>
 801720c:	3501      	adds	r5, #1
 801720e:	e741      	b.n	8017094 <LCD_ReadRectEx+0x60>
 8017210:	b007      	add	sp, #28
 8017212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017216:	bf00      	nop
 8017218:	2000016c 	.word	0x2000016c

0801721c <GUI_ReadRectEx>:
 801721c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801721e:	4d16      	ldr	r5, [pc, #88]	; (8017278 <GUI_ReadRectEx+0x5c>)
 8017220:	9e05      	ldr	r6, [sp, #20]
 8017222:	682d      	ldr	r5, [r5, #0]
 8017224:	9c06      	ldr	r4, [sp, #24]
 8017226:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 801722a:	42b8      	cmp	r0, r7
 801722c:	bfb8      	it	lt
 801722e:	4638      	movlt	r0, r7
 8017230:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 8017234:	42ba      	cmp	r2, r7
 8017236:	bfa8      	it	ge
 8017238:	463a      	movge	r2, r7
 801723a:	4282      	cmp	r2, r0
 801723c:	db1b      	blt.n	8017276 <GUI_ReadRectEx+0x5a>
 801723e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8017242:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 8017246:	42b9      	cmp	r1, r7
 8017248:	bfb8      	it	lt
 801724a:	4639      	movlt	r1, r7
 801724c:	42ab      	cmp	r3, r5
 801724e:	bfa8      	it	ge
 8017250:	462b      	movge	r3, r5
 8017252:	428b      	cmp	r3, r1
 8017254:	db0f      	blt.n	8017276 <GUI_ReadRectEx+0x5a>
 8017256:	68e5      	ldr	r5, [r4, #12]
 8017258:	682d      	ldr	r5, [r5, #0]
 801725a:	f035 0704 	bics.w	r7, r5, #4
 801725e:	d105      	bne.n	801726c <GUI_ReadRectEx+0x50>
 8017260:	9605      	str	r6, [sp, #20]
 8017262:	9406      	str	r4, [sp, #24]
 8017264:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017268:	f7ff bee4 	b.w	8017034 <LCD_ReadRectEx>
 801726c:	6825      	ldr	r5, [r4, #0]
 801726e:	2d00      	cmp	r5, #0
 8017270:	d0f6      	beq.n	8017260 <GUI_ReadRectEx+0x44>
 8017272:	462c      	mov	r4, r5
 8017274:	e7ef      	b.n	8017256 <GUI_ReadRectEx+0x3a>
 8017276:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017278:	2000016c 	.word	0x2000016c

0801727c <_OnExit>:
 801727c:	b510      	push	{r4, lr}
 801727e:	4c03      	ldr	r4, [pc, #12]	; (801728c <_OnExit+0x10>)
 8017280:	6820      	ldr	r0, [r4, #0]
 8017282:	f7fb fb61 	bl	8012948 <GUI_ALLOC_FreeFixedBlock>
 8017286:	2300      	movs	r3, #0
 8017288:	6023      	str	r3, [r4, #0]
 801728a:	bd10      	pop	{r4, pc}
 801728c:	20019d9c 	.word	0x20019d9c

08017290 <LCD_InitColors>:
 8017290:	b538      	push	{r3, r4, r5, lr}
 8017292:	4d09      	ldr	r5, [pc, #36]	; (80172b8 <LCD_InitColors+0x28>)
 8017294:	682c      	ldr	r4, [r5, #0]
 8017296:	b95c      	cbnz	r4, 80172b0 <LCD_InitColors+0x20>
 8017298:	4b08      	ldr	r3, [pc, #32]	; (80172bc <LCD_InitColors+0x2c>)
 801729a:	6818      	ldr	r0, [r3, #0]
 801729c:	0080      	lsls	r0, r0, #2
 801729e:	f7fb fcbf 	bl	8012c20 <GUI_ALLOC_GetFixedBlock>
 80172a2:	6028      	str	r0, [r5, #0]
 80172a4:	b130      	cbz	r0, 80172b4 <LCD_InitColors+0x24>
 80172a6:	4806      	ldr	r0, [pc, #24]	; (80172c0 <LCD_InitColors+0x30>)
 80172a8:	4b06      	ldr	r3, [pc, #24]	; (80172c4 <LCD_InitColors+0x34>)
 80172aa:	6003      	str	r3, [r0, #0]
 80172ac:	f7fa ff40 	bl	8012130 <GUI__RegisterExit>
 80172b0:	2000      	movs	r0, #0
 80172b2:	bd38      	pop	{r3, r4, r5, pc}
 80172b4:	2001      	movs	r0, #1
 80172b6:	bd38      	pop	{r3, r4, r5, pc}
 80172b8:	20019d9c 	.word	0x20019d9c
 80172bc:	20000324 	.word	0x20000324
 80172c0:	200196e4 	.word	0x200196e4
 80172c4:	0801727d 	.word	0x0801727d

080172c8 <LCD_InitLUT>:
 80172c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80172cc:	f002 f9a6 	bl	801961c <LCD_GetNumLayers>
 80172d0:	2400      	movs	r4, #0
 80172d2:	4680      	mov	r8, r0
 80172d4:	4544      	cmp	r4, r8
 80172d6:	da2c      	bge.n	8017332 <LCD_InitLUT+0x6a>
 80172d8:	4620      	mov	r0, r4
 80172da:	f7fa fdef 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 80172de:	b330      	cbz	r0, 801732e <LCD_InitLUT+0x66>
 80172e0:	4e15      	ldr	r6, [pc, #84]	; (8017338 <LCD_InitLUT+0x70>)
 80172e2:	6833      	ldr	r3, [r6, #0]
 80172e4:	4620      	mov	r0, r4
 80172e6:	f893 9011 	ldrb.w	r9, [r3, #17]
 80172ea:	745c      	strb	r4, [r3, #17]
 80172ec:	f7f8 fb3e 	bl	800f96c <LCD_GetBitsPerPixelEx>
 80172f0:	2808      	cmp	r0, #8
 80172f2:	dd03      	ble.n	80172fc <LCD_InitLUT+0x34>
 80172f4:	6833      	ldr	r3, [r6, #0]
 80172f6:	f883 9011 	strb.w	r9, [r3, #17]
 80172fa:	e018      	b.n	801732e <LCD_InitLUT+0x66>
 80172fc:	4b0f      	ldr	r3, [pc, #60]	; (801733c <LCD_InitLUT+0x74>)
 80172fe:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8017302:	691a      	ldr	r2, [r3, #16]
 8017304:	4b0e      	ldr	r3, [pc, #56]	; (8017340 <LCD_InitLUT+0x78>)
 8017306:	429a      	cmp	r2, r3
 8017308:	d0f4      	beq.n	80172f4 <LCD_InitLUT+0x2c>
 801730a:	4620      	mov	r0, r4
 801730c:	f7f8 fb31 	bl	800f972 <LCD_GetNumColorsEx>
 8017310:	2500      	movs	r5, #0
 8017312:	4682      	mov	sl, r0
 8017314:	4555      	cmp	r5, sl
 8017316:	daed      	bge.n	80172f4 <LCD_InitLUT+0x2c>
 8017318:	b2ef      	uxtb	r7, r5
 801731a:	4638      	mov	r0, r7
 801731c:	f7f8 fefc 	bl	8010118 <LCD_Index2Color>
 8017320:	4639      	mov	r1, r7
 8017322:	4602      	mov	r2, r0
 8017324:	4620      	mov	r0, r4
 8017326:	f7f8 fac5 	bl	800f8b4 <LCD_SetLUTEntryEx>
 801732a:	3501      	adds	r5, #1
 801732c:	e7f2      	b.n	8017314 <LCD_InitLUT+0x4c>
 801732e:	3401      	adds	r4, #1
 8017330:	e7d0      	b.n	80172d4 <LCD_InitLUT+0xc>
 8017332:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017336:	bf00      	nop
 8017338:	2000016c 	.word	0x2000016c
 801733c:	20019c9c 	.word	0x20019c9c
 8017340:	080214a0 	.word	0x080214a0

08017344 <LCD_AA_SetAndMask>:
 8017344:	4b02      	ldr	r3, [pc, #8]	; (8017350 <LCD_AA_SetAndMask+0xc>)
 8017346:	681a      	ldr	r2, [r3, #0]
 8017348:	6018      	str	r0, [r3, #0]
 801734a:	4610      	mov	r0, r2
 801734c:	4770      	bx	lr
 801734e:	bf00      	nop
 8017350:	20000328 	.word	0x20000328

08017354 <LCD_AA_MixColors16>:
 8017354:	b538      	push	{r3, r4, r5, lr}
 8017356:	0e0d      	lsrs	r5, r1, #24
 8017358:	2dff      	cmp	r5, #255	; 0xff
 801735a:	460b      	mov	r3, r1
 801735c:	d11e      	bne.n	801739c <LCD_AA_MixColors16+0x48>
 801735e:	0e01      	lsrs	r1, r0, #24
 8017360:	d109      	bne.n	8017376 <LCD_AA_MixColors16+0x22>
 8017362:	f06f 0310 	mvn.w	r3, #16
 8017366:	4353      	muls	r3, r2
 8017368:	4a12      	ldr	r2, [pc, #72]	; (80173b4 <LCD_AA_MixColors16+0x60>)
 801736a:	33ff      	adds	r3, #255	; 0xff
 801736c:	6811      	ldr	r1, [r2, #0]
 801736e:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8017372:	400b      	ands	r3, r1
 8017374:	e01b      	b.n	80173ae <LCD_AA_MixColors16+0x5a>
 8017376:	29fe      	cmp	r1, #254	; 0xfe
 8017378:	d819      	bhi.n	80173ae <LCD_AA_MixColors16+0x5a>
 801737a:	f06f 0310 	mvn.w	r3, #16
 801737e:	435a      	muls	r2, r3
 8017380:	32ff      	adds	r2, #255	; 0xff
 8017382:	f1c2 03ff 	rsb	r3, r2, #255	; 0xff
 8017386:	434b      	muls	r3, r1
 8017388:	fbb3 f3f5 	udiv	r3, r3, r5
 801738c:	4413      	add	r3, r2
 801738e:	4a09      	ldr	r2, [pc, #36]	; (80173b4 <LCD_AA_MixColors16+0x60>)
 8017390:	f020 447f 	bic.w	r4, r0, #4278190080	; 0xff000000
 8017394:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
 8017398:	6810      	ldr	r0, [r2, #0]
 801739a:	e007      	b.n	80173ac <LCD_AA_MixColors16+0x58>
 801739c:	4b06      	ldr	r3, [pc, #24]	; (80173b8 <LCD_AA_MixColors16+0x64>)
 801739e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80173a2:	681d      	ldr	r5, [r3, #0]
 80173a4:	b2d2      	uxtb	r2, r2
 80173a6:	47a8      	blx	r5
 80173a8:	4b02      	ldr	r3, [pc, #8]	; (80173b4 <LCD_AA_MixColors16+0x60>)
 80173aa:	681b      	ldr	r3, [r3, #0]
 80173ac:	4003      	ands	r3, r0
 80173ae:	4618      	mov	r0, r3
 80173b0:	bd38      	pop	{r3, r4, r5, pc}
 80173b2:	bf00      	nop
 80173b4:	20000328 	.word	0x20000328
 80173b8:	20000150 	.word	0x20000150

080173bc <LCD_SetPixelAA4_Trans>:
 80173bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80173c0:	4605      	mov	r5, r0
 80173c2:	460c      	mov	r4, r1
 80173c4:	4616      	mov	r6, r2
 80173c6:	2a00      	cmp	r2, #0
 80173c8:	d03d      	beq.n	8017446 <LCD_SetPixelAA4_Trans+0x8a>
 80173ca:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8017450 <LCD_SetPixelAA4_Trans+0x94>
 80173ce:	f8d8 3000 	ldr.w	r3, [r8]
 80173d2:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 80173d6:	4291      	cmp	r1, r2
 80173d8:	db35      	blt.n	8017446 <LCD_SetPixelAA4_Trans+0x8a>
 80173da:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 80173de:	4291      	cmp	r1, r2
 80173e0:	dc31      	bgt.n	8017446 <LCD_SetPixelAA4_Trans+0x8a>
 80173e2:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 80173e6:	4290      	cmp	r0, r2
 80173e8:	db2d      	blt.n	8017446 <LCD_SetPixelAA4_Trans+0x8a>
 80173ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80173ee:	4290      	cmp	r0, r2
 80173f0:	dc29      	bgt.n	8017446 <LCD_SetPixelAA4_Trans+0x8a>
 80173f2:	2e0e      	cmp	r6, #14
 80173f4:	4f15      	ldr	r7, [pc, #84]	; (801744c <LCD_SetPixelAA4_Trans+0x90>)
 80173f6:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 80173fa:	d909      	bls.n	8017410 <LCD_SetPixelAA4_Trans+0x54>
 80173fc:	7c5b      	ldrb	r3, [r3, #17]
 80173fe:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8017402:	68c3      	ldr	r3, [r0, #12]
 8017404:	4629      	mov	r1, r5
 8017406:	699e      	ldr	r6, [r3, #24]
 8017408:	f8de 3000 	ldr.w	r3, [lr]
 801740c:	4622      	mov	r2, r4
 801740e:	e019      	b.n	8017444 <LCD_SetPixelAA4_Trans+0x88>
 8017410:	f8de 0000 	ldr.w	r0, [lr]
 8017414:	f7f8 fe80 	bl	8010118 <LCD_Index2Color>
 8017418:	4621      	mov	r1, r4
 801741a:	4681      	mov	r9, r0
 801741c:	4628      	mov	r0, r5
 801741e:	f002 f8c8 	bl	80195b2 <LCD_GetPixelColor>
 8017422:	4632      	mov	r2, r6
 8017424:	4601      	mov	r1, r0
 8017426:	4648      	mov	r0, r9
 8017428:	f7ff ff94 	bl	8017354 <LCD_AA_MixColors16>
 801742c:	f7f8 fe64 	bl	80100f8 <LCD_Color2Index>
 8017430:	f8d8 2000 	ldr.w	r2, [r8]
 8017434:	7c52      	ldrb	r2, [r2, #17]
 8017436:	4603      	mov	r3, r0
 8017438:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
 801743c:	68c1      	ldr	r1, [r0, #12]
 801743e:	4622      	mov	r2, r4
 8017440:	698e      	ldr	r6, [r1, #24]
 8017442:	4629      	mov	r1, r5
 8017444:	47b0      	blx	r6
 8017446:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801744a:	bf00      	nop
 801744c:	20019c9c 	.word	0x20019c9c
 8017450:	2000016c 	.word	0x2000016c

08017454 <LCD_SetPixelAA4_NoTrans>:
 8017454:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017458:	4f27      	ldr	r7, [pc, #156]	; (80174f8 <LCD_SetPixelAA4_NoTrans+0xa4>)
 801745a:	683b      	ldr	r3, [r7, #0]
 801745c:	4690      	mov	r8, r2
 801745e:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8017462:	4291      	cmp	r1, r2
 8017464:	4605      	mov	r5, r0
 8017466:	460c      	mov	r4, r1
 8017468:	db43      	blt.n	80174f2 <LCD_SetPixelAA4_NoTrans+0x9e>
 801746a:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 801746e:	4291      	cmp	r1, r2
 8017470:	dc3f      	bgt.n	80174f2 <LCD_SetPixelAA4_NoTrans+0x9e>
 8017472:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8017476:	4290      	cmp	r0, r2
 8017478:	db3b      	blt.n	80174f2 <LCD_SetPixelAA4_NoTrans+0x9e>
 801747a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801747e:	4290      	cmp	r0, r2
 8017480:	dc37      	bgt.n	80174f2 <LCD_SetPixelAA4_NoTrans+0x9e>
 8017482:	4e1e      	ldr	r6, [pc, #120]	; (80174fc <LCD_SetPixelAA4_NoTrans+0xa8>)
 8017484:	f1b8 0f00 	cmp.w	r8, #0
 8017488:	d109      	bne.n	801749e <LCD_SetPixelAA4_NoTrans+0x4a>
 801748a:	7c5a      	ldrb	r2, [r3, #17]
 801748c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801748e:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 8017492:	681b      	ldr	r3, [r3, #0]
 8017494:	68c2      	ldr	r2, [r0, #12]
 8017496:	4629      	mov	r1, r5
 8017498:	6996      	ldr	r6, [r2, #24]
 801749a:	4622      	mov	r2, r4
 801749c:	e028      	b.n	80174f0 <LCD_SetPixelAA4_NoTrans+0x9c>
 801749e:	f1b8 0f0f 	cmp.w	r8, #15
 80174a2:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 80174a6:	d109      	bne.n	80174bc <LCD_SetPixelAA4_NoTrans+0x68>
 80174a8:	7c5b      	ldrb	r3, [r3, #17]
 80174aa:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 80174ae:	68c3      	ldr	r3, [r0, #12]
 80174b0:	4629      	mov	r1, r5
 80174b2:	699e      	ldr	r6, [r3, #24]
 80174b4:	f8de 3000 	ldr.w	r3, [lr]
 80174b8:	4622      	mov	r2, r4
 80174ba:	e019      	b.n	80174f0 <LCD_SetPixelAA4_NoTrans+0x9c>
 80174bc:	f8de 0000 	ldr.w	r0, [lr]
 80174c0:	f7f8 fe2a 	bl	8010118 <LCD_Index2Color>
 80174c4:	683b      	ldr	r3, [r7, #0]
 80174c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80174c8:	4681      	mov	r9, r0
 80174ca:	6818      	ldr	r0, [r3, #0]
 80174cc:	f7f8 fe24 	bl	8010118 <LCD_Index2Color>
 80174d0:	4642      	mov	r2, r8
 80174d2:	4601      	mov	r1, r0
 80174d4:	4648      	mov	r0, r9
 80174d6:	f7ff ff3d 	bl	8017354 <LCD_AA_MixColors16>
 80174da:	f7f8 fe0d 	bl	80100f8 <LCD_Color2Index>
 80174de:	683a      	ldr	r2, [r7, #0]
 80174e0:	7c52      	ldrb	r2, [r2, #17]
 80174e2:	4603      	mov	r3, r0
 80174e4:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 80174e8:	68c1      	ldr	r1, [r0, #12]
 80174ea:	4622      	mov	r2, r4
 80174ec:	698e      	ldr	r6, [r1, #24]
 80174ee:	4629      	mov	r1, r5
 80174f0:	47b0      	blx	r6
 80174f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80174f6:	bf00      	nop
 80174f8:	2000016c 	.word	0x2000016c
 80174fc:	20019c9c 	.word	0x20019c9c

08017500 <LCD_AA_MixColors256>:
 8017500:	b508      	push	{r3, lr}
 8017502:	4b03      	ldr	r3, [pc, #12]	; (8017510 <LCD_AA_MixColors256+0x10>)
 8017504:	681b      	ldr	r3, [r3, #0]
 8017506:	4798      	blx	r3
 8017508:	4b02      	ldr	r3, [pc, #8]	; (8017514 <LCD_AA_MixColors256+0x14>)
 801750a:	681b      	ldr	r3, [r3, #0]
 801750c:	4018      	ands	r0, r3
 801750e:	bd08      	pop	{r3, pc}
 8017510:	20000150 	.word	0x20000150
 8017514:	20000328 	.word	0x20000328

08017518 <LCD_SetPixelAA8_Trans>:
 8017518:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801751c:	4605      	mov	r5, r0
 801751e:	460c      	mov	r4, r1
 8017520:	4616      	mov	r6, r2
 8017522:	2a00      	cmp	r2, #0
 8017524:	d03d      	beq.n	80175a2 <LCD_SetPixelAA8_Trans+0x8a>
 8017526:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80175ac <LCD_SetPixelAA8_Trans+0x94>
 801752a:	f8d8 3000 	ldr.w	r3, [r8]
 801752e:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8017532:	4291      	cmp	r1, r2
 8017534:	db35      	blt.n	80175a2 <LCD_SetPixelAA8_Trans+0x8a>
 8017536:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 801753a:	4291      	cmp	r1, r2
 801753c:	dc31      	bgt.n	80175a2 <LCD_SetPixelAA8_Trans+0x8a>
 801753e:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8017542:	4290      	cmp	r0, r2
 8017544:	db2d      	blt.n	80175a2 <LCD_SetPixelAA8_Trans+0x8a>
 8017546:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801754a:	4290      	cmp	r0, r2
 801754c:	dc29      	bgt.n	80175a2 <LCD_SetPixelAA8_Trans+0x8a>
 801754e:	2eff      	cmp	r6, #255	; 0xff
 8017550:	4f15      	ldr	r7, [pc, #84]	; (80175a8 <LCD_SetPixelAA8_Trans+0x90>)
 8017552:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8017556:	d109      	bne.n	801756c <LCD_SetPixelAA8_Trans+0x54>
 8017558:	7c5b      	ldrb	r3, [r3, #17]
 801755a:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 801755e:	68c3      	ldr	r3, [r0, #12]
 8017560:	4629      	mov	r1, r5
 8017562:	699e      	ldr	r6, [r3, #24]
 8017564:	f8de 3000 	ldr.w	r3, [lr]
 8017568:	4622      	mov	r2, r4
 801756a:	e019      	b.n	80175a0 <LCD_SetPixelAA8_Trans+0x88>
 801756c:	f8de 0000 	ldr.w	r0, [lr]
 8017570:	f7f8 fdd2 	bl	8010118 <LCD_Index2Color>
 8017574:	4621      	mov	r1, r4
 8017576:	4681      	mov	r9, r0
 8017578:	4628      	mov	r0, r5
 801757a:	f002 f81a 	bl	80195b2 <LCD_GetPixelColor>
 801757e:	4632      	mov	r2, r6
 8017580:	4601      	mov	r1, r0
 8017582:	4648      	mov	r0, r9
 8017584:	f7ff ffbc 	bl	8017500 <LCD_AA_MixColors256>
 8017588:	f7f8 fdb6 	bl	80100f8 <LCD_Color2Index>
 801758c:	f8d8 2000 	ldr.w	r2, [r8]
 8017590:	7c52      	ldrb	r2, [r2, #17]
 8017592:	4603      	mov	r3, r0
 8017594:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
 8017598:	68c1      	ldr	r1, [r0, #12]
 801759a:	4622      	mov	r2, r4
 801759c:	698e      	ldr	r6, [r1, #24]
 801759e:	4629      	mov	r1, r5
 80175a0:	47b0      	blx	r6
 80175a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80175a6:	bf00      	nop
 80175a8:	20019c9c 	.word	0x20019c9c
 80175ac:	2000016c 	.word	0x2000016c

080175b0 <LCD_SetPixelAA8_NoTrans>:
 80175b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80175b4:	4f27      	ldr	r7, [pc, #156]	; (8017654 <LCD_SetPixelAA8_NoTrans+0xa4>)
 80175b6:	683b      	ldr	r3, [r7, #0]
 80175b8:	4690      	mov	r8, r2
 80175ba:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 80175be:	4291      	cmp	r1, r2
 80175c0:	4605      	mov	r5, r0
 80175c2:	460c      	mov	r4, r1
 80175c4:	db43      	blt.n	801764e <LCD_SetPixelAA8_NoTrans+0x9e>
 80175c6:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 80175ca:	4291      	cmp	r1, r2
 80175cc:	dc3f      	bgt.n	801764e <LCD_SetPixelAA8_NoTrans+0x9e>
 80175ce:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 80175d2:	4290      	cmp	r0, r2
 80175d4:	db3b      	blt.n	801764e <LCD_SetPixelAA8_NoTrans+0x9e>
 80175d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80175da:	4290      	cmp	r0, r2
 80175dc:	dc37      	bgt.n	801764e <LCD_SetPixelAA8_NoTrans+0x9e>
 80175de:	4e1e      	ldr	r6, [pc, #120]	; (8017658 <LCD_SetPixelAA8_NoTrans+0xa8>)
 80175e0:	f1b8 0f00 	cmp.w	r8, #0
 80175e4:	d109      	bne.n	80175fa <LCD_SetPixelAA8_NoTrans+0x4a>
 80175e6:	7c5a      	ldrb	r2, [r3, #17]
 80175e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80175ea:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 80175ee:	681b      	ldr	r3, [r3, #0]
 80175f0:	68c2      	ldr	r2, [r0, #12]
 80175f2:	4629      	mov	r1, r5
 80175f4:	6996      	ldr	r6, [r2, #24]
 80175f6:	4622      	mov	r2, r4
 80175f8:	e028      	b.n	801764c <LCD_SetPixelAA8_NoTrans+0x9c>
 80175fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80175fe:	f8d3 e03c 	ldr.w	lr, [r3, #60]	; 0x3c
 8017602:	d109      	bne.n	8017618 <LCD_SetPixelAA8_NoTrans+0x68>
 8017604:	7c5b      	ldrb	r3, [r3, #17]
 8017606:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 801760a:	68c3      	ldr	r3, [r0, #12]
 801760c:	4629      	mov	r1, r5
 801760e:	699e      	ldr	r6, [r3, #24]
 8017610:	f8de 3000 	ldr.w	r3, [lr]
 8017614:	4622      	mov	r2, r4
 8017616:	e019      	b.n	801764c <LCD_SetPixelAA8_NoTrans+0x9c>
 8017618:	f8de 0000 	ldr.w	r0, [lr]
 801761c:	f7f8 fd7c 	bl	8010118 <LCD_Index2Color>
 8017620:	683b      	ldr	r3, [r7, #0]
 8017622:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017624:	4681      	mov	r9, r0
 8017626:	6818      	ldr	r0, [r3, #0]
 8017628:	f7f8 fd76 	bl	8010118 <LCD_Index2Color>
 801762c:	4642      	mov	r2, r8
 801762e:	4601      	mov	r1, r0
 8017630:	4648      	mov	r0, r9
 8017632:	f7ff ff65 	bl	8017500 <LCD_AA_MixColors256>
 8017636:	f7f8 fd5f 	bl	80100f8 <LCD_Color2Index>
 801763a:	683a      	ldr	r2, [r7, #0]
 801763c:	7c52      	ldrb	r2, [r2, #17]
 801763e:	4603      	mov	r3, r0
 8017640:	f856 0022 	ldr.w	r0, [r6, r2, lsl #2]
 8017644:	68c1      	ldr	r1, [r0, #12]
 8017646:	4622      	mov	r2, r4
 8017648:	698e      	ldr	r6, [r1, #24]
 801764a:	4629      	mov	r1, r5
 801764c:	47b0      	blx	r6
 801764e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017652:	bf00      	nop
 8017654:	2000016c 	.word	0x2000016c
 8017658:	20019c9c 	.word	0x20019c9c

0801765c <LCD__GetPfSetPixel>:
 801765c:	2804      	cmp	r0, #4
 801765e:	d003      	beq.n	8017668 <LCD__GetPfSetPixel+0xc>
 8017660:	2808      	cmp	r0, #8
 8017662:	d009      	beq.n	8017678 <LCD__GetPfSetPixel+0x1c>
 8017664:	2802      	cmp	r0, #2
 8017666:	d111      	bne.n	801768c <LCD__GetPfSetPixel+0x30>
 8017668:	4b09      	ldr	r3, [pc, #36]	; (8017690 <LCD__GetPfSetPixel+0x34>)
 801766a:	480a      	ldr	r0, [pc, #40]	; (8017694 <LCD__GetPfSetPixel+0x38>)
 801766c:	681b      	ldr	r3, [r3, #0]
 801766e:	7c1b      	ldrb	r3, [r3, #16]
 8017670:	f013 0f02 	tst.w	r3, #2
 8017674:	4b08      	ldr	r3, [pc, #32]	; (8017698 <LCD__GetPfSetPixel+0x3c>)
 8017676:	e006      	b.n	8017686 <LCD__GetPfSetPixel+0x2a>
 8017678:	4b05      	ldr	r3, [pc, #20]	; (8017690 <LCD__GetPfSetPixel+0x34>)
 801767a:	4808      	ldr	r0, [pc, #32]	; (801769c <LCD__GetPfSetPixel+0x40>)
 801767c:	681b      	ldr	r3, [r3, #0]
 801767e:	7c1b      	ldrb	r3, [r3, #16]
 8017680:	f013 0f02 	tst.w	r3, #2
 8017684:	4b06      	ldr	r3, [pc, #24]	; (80176a0 <LCD__GetPfSetPixel+0x44>)
 8017686:	bf08      	it	eq
 8017688:	4618      	moveq	r0, r3
 801768a:	4770      	bx	lr
 801768c:	2000      	movs	r0, #0
 801768e:	4770      	bx	lr
 8017690:	2000016c 	.word	0x2000016c
 8017694:	080173bd 	.word	0x080173bd
 8017698:	08017455 	.word	0x08017455
 801769c:	08017519 	.word	0x08017519
 80176a0:	080175b1 	.word	0x080175b1

080176a4 <GUI__strlen>:
 80176a4:	f04f 33ff 	mov.w	r3, #4294967295
 80176a8:	b118      	cbz	r0, 80176b2 <GUI__strlen+0xe>
 80176aa:	3301      	adds	r3, #1
 80176ac:	5cc2      	ldrb	r2, [r0, r3]
 80176ae:	2a00      	cmp	r2, #0
 80176b0:	d1fb      	bne.n	80176aa <GUI__strlen+0x6>
 80176b2:	4618      	mov	r0, r3
 80176b4:	4770      	bx	lr
	...

080176b8 <GUI__strcmp>:
 80176b8:	b510      	push	{r4, lr}
 80176ba:	4b09      	ldr	r3, [pc, #36]	; (80176e0 <GUI__strcmp+0x28>)
 80176bc:	2800      	cmp	r0, #0
 80176be:	bf08      	it	eq
 80176c0:	4618      	moveq	r0, r3
 80176c2:	2900      	cmp	r1, #0
 80176c4:	bf08      	it	eq
 80176c6:	4619      	moveq	r1, r3
 80176c8:	2300      	movs	r3, #0
 80176ca:	5cc4      	ldrb	r4, [r0, r3]
 80176cc:	5cca      	ldrb	r2, [r1, r3]
 80176ce:	42a2      	cmp	r2, r4
 80176d0:	d104      	bne.n	80176dc <GUI__strcmp+0x24>
 80176d2:	3301      	adds	r3, #1
 80176d4:	2a00      	cmp	r2, #0
 80176d6:	d1f8      	bne.n	80176ca <GUI__strcmp+0x12>
 80176d8:	4610      	mov	r0, r2
 80176da:	bd10      	pop	{r4, pc}
 80176dc:	2001      	movs	r0, #1
 80176de:	bd10      	pop	{r4, pc}
 80176e0:	080214bd 	.word	0x080214bd

080176e4 <GUI__strcmp_hp>:
 80176e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80176e6:	460d      	mov	r5, r1
 80176e8:	b160      	cbz	r0, 8017704 <GUI__strcmp_hp+0x20>
 80176ea:	f7fb f941 	bl	8012970 <GUI_ALLOC_LockH>
 80176ee:	ac02      	add	r4, sp, #8
 80176f0:	4629      	mov	r1, r5
 80176f2:	f844 0d04 	str.w	r0, [r4, #-4]!
 80176f6:	f7ff ffdf 	bl	80176b8 <GUI__strcmp>
 80176fa:	4605      	mov	r5, r0
 80176fc:	4620      	mov	r0, r4
 80176fe:	f7fb f945 	bl	801298c <GUI_ALLOC_UnlockH>
 8017702:	e000      	b.n	8017706 <GUI__strcmp_hp+0x22>
 8017704:	2501      	movs	r5, #1
 8017706:	4628      	mov	r0, r5
 8017708:	b003      	add	sp, #12
 801770a:	bd30      	pop	{r4, r5, pc}

0801770c <_GetWordWrap>:
 801770c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017710:	2500      	movs	r5, #0
 8017712:	9001      	str	r0, [sp, #4]
 8017714:	468a      	mov	sl, r1
 8017716:	4691      	mov	r9, r2
 8017718:	46a8      	mov	r8, r5
 801771a:	462e      	mov	r6, r5
 801771c:	462c      	mov	r4, r5
 801771e:	462f      	mov	r7, r5
 8017720:	a801      	add	r0, sp, #4
 8017722:	f7f9 f949 	bl	80109b8 <GUI_UC__GetCharCodeInc>
 8017726:	2d00      	cmp	r5, #0
 8017728:	bf08      	it	eq
 801772a:	4605      	moveq	r5, r0
 801772c:	b108      	cbz	r0, 8017732 <_GetWordWrap+0x26>
 801772e:	280a      	cmp	r0, #10
 8017730:	d10b      	bne.n	801774a <_GetWordWrap+0x3e>
 8017732:	4626      	mov	r6, r4
 8017734:	2e00      	cmp	r6, #0
 8017736:	bf18      	it	ne
 8017738:	4634      	movne	r4, r6
 801773a:	f1b9 0f00 	cmp.w	r9, #0
 801773e:	d016      	beq.n	801776e <_GetWordWrap+0x62>
 8017740:	ebc8 0707 	rsb	r7, r8, r7
 8017744:	f8c9 7000 	str.w	r7, [r9]
 8017748:	e011      	b.n	801776e <_GetWordWrap+0x62>
 801774a:	2820      	cmp	r0, #32
 801774c:	d00d      	beq.n	801776a <_GetWordWrap+0x5e>
 801774e:	2d20      	cmp	r5, #32
 8017750:	bf04      	itt	eq
 8017752:	4626      	moveq	r6, r4
 8017754:	2500      	moveq	r5, #0
 8017756:	f7fa fff7 	bl	8012748 <GUI_GetCharDistX>
 801775a:	4407      	add	r7, r0
 801775c:	4557      	cmp	r7, sl
 801775e:	4680      	mov	r8, r0
 8017760:	dd01      	ble.n	8017766 <_GetWordWrap+0x5a>
 8017762:	2c00      	cmp	r4, #0
 8017764:	d1e6      	bne.n	8017734 <_GetWordWrap+0x28>
 8017766:	3401      	adds	r4, #1
 8017768:	e7da      	b.n	8017720 <_GetWordWrap+0x14>
 801776a:	4626      	mov	r6, r4
 801776c:	e7f3      	b.n	8017756 <_GetWordWrap+0x4a>
 801776e:	4620      	mov	r0, r4
 8017770:	b002      	add	sp, #8
 8017772:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08017776 <_GetCharWrap>:
 8017776:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8017778:	2400      	movs	r4, #0
 801777a:	9001      	str	r0, [sp, #4]
 801777c:	460e      	mov	r6, r1
 801777e:	4625      	mov	r5, r4
 8017780:	a801      	add	r0, sp, #4
 8017782:	f7f9 f919 	bl	80109b8 <GUI_UC__GetCharCodeInc>
 8017786:	4607      	mov	r7, r0
 8017788:	b148      	cbz	r0, 801779e <_GetCharWrap+0x28>
 801778a:	f7fa ffdd 	bl	8012748 <GUI_GetCharDistX>
 801778e:	4405      	add	r5, r0
 8017790:	b10c      	cbz	r4, 8017796 <_GetCharWrap+0x20>
 8017792:	42b5      	cmp	r5, r6
 8017794:	dc03      	bgt.n	801779e <_GetCharWrap+0x28>
 8017796:	2f0a      	cmp	r7, #10
 8017798:	d001      	beq.n	801779e <_GetCharWrap+0x28>
 801779a:	3401      	adds	r4, #1
 801779c:	e7f0      	b.n	8017780 <_GetCharWrap+0xa>
 801779e:	4620      	mov	r0, r4
 80177a0:	b003      	add	sp, #12
 80177a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080177a4 <_WrapGetNumCharsDisp>:
 80177a4:	2a01      	cmp	r2, #1
 80177a6:	b510      	push	{r4, lr}
 80177a8:	d005      	beq.n	80177b6 <_WrapGetNumCharsDisp+0x12>
 80177aa:	2a02      	cmp	r2, #2
 80177ac:	d108      	bne.n	80177c0 <_WrapGetNumCharsDisp+0x1c>
 80177ae:	4b07      	ldr	r3, [pc, #28]	; (80177cc <_WrapGetNumCharsDisp+0x28>)
 80177b0:	681b      	ldr	r3, [r3, #0]
 80177b2:	4798      	blx	r3
 80177b4:	bd10      	pop	{r4, pc}
 80177b6:	4a06      	ldr	r2, [pc, #24]	; (80177d0 <_WrapGetNumCharsDisp+0x2c>)
 80177b8:	6814      	ldr	r4, [r2, #0]
 80177ba:	461a      	mov	r2, r3
 80177bc:	47a0      	blx	r4
 80177be:	bd10      	pop	{r4, pc}
 80177c0:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80177c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80177c8:	f7fa beec 	b.w	80125a4 <GUI__GetLineNumChars>
 80177cc:	2000032c 	.word	0x2000032c
 80177d0:	20000330 	.word	0x20000330

080177d4 <GUI__WrapGetNumCharsDisp>:
 80177d4:	2300      	movs	r3, #0
 80177d6:	f7ff bfe5 	b.w	80177a4 <_WrapGetNumCharsDisp>

080177da <GUI__WrapGetNumCharsToNextLine>:
 80177da:	b5f0      	push	{r4, r5, r6, r7, lr}
 80177dc:	b085      	sub	sp, #20
 80177de:	ab03      	add	r3, sp, #12
 80177e0:	4617      	mov	r7, r2
 80177e2:	460e      	mov	r6, r1
 80177e4:	9001      	str	r0, [sp, #4]
 80177e6:	f7ff ffdd 	bl	80177a4 <_WrapGetNumCharsDisp>
 80177ea:	9d01      	ldr	r5, [sp, #4]
 80177ec:	4604      	mov	r4, r0
 80177ee:	4621      	mov	r1, r4
 80177f0:	4628      	mov	r0, r5
 80177f2:	f7f9 f8f5 	bl	80109e0 <GUI_UC__NumChars2NumBytes>
 80177f6:	4428      	add	r0, r5
 80177f8:	ad04      	add	r5, sp, #16
 80177fa:	f845 0d0c 	str.w	r0, [r5, #-12]!
 80177fe:	4628      	mov	r0, r5
 8017800:	f7f9 f8da 	bl	80109b8 <GUI_UC__GetCharCodeInc>
 8017804:	280a      	cmp	r0, #10
 8017806:	d101      	bne.n	801780c <GUI__WrapGetNumCharsToNextLine+0x32>
 8017808:	3401      	adds	r4, #1
 801780a:	e012      	b.n	8017832 <GUI__WrapGetNumCharsToNextLine+0x58>
 801780c:	2f01      	cmp	r7, #1
 801780e:	d110      	bne.n	8017832 <GUI__WrapGetNumCharsToNextLine+0x58>
 8017810:	2820      	cmp	r0, #32
 8017812:	d10e      	bne.n	8017832 <GUI__WrapGetNumCharsToNextLine+0x58>
 8017814:	f7fa ff98 	bl	8012748 <GUI_GetCharDistX>
 8017818:	4607      	mov	r7, r0
 801781a:	9b03      	ldr	r3, [sp, #12]
 801781c:	429e      	cmp	r6, r3
 801781e:	db08      	blt.n	8017832 <GUI__WrapGetNumCharsToNextLine+0x58>
 8017820:	443b      	add	r3, r7
 8017822:	4628      	mov	r0, r5
 8017824:	9303      	str	r3, [sp, #12]
 8017826:	f7f9 f8c7 	bl	80109b8 <GUI_UC__GetCharCodeInc>
 801782a:	2820      	cmp	r0, #32
 801782c:	f104 0401 	add.w	r4, r4, #1
 8017830:	d0f3      	beq.n	801781a <GUI__WrapGetNumCharsToNextLine+0x40>
 8017832:	4620      	mov	r0, r4
 8017834:	b005      	add	sp, #20
 8017836:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017838 <GUI__WrapGetNumBytesToNextLine>:
 8017838:	b510      	push	{r4, lr}
 801783a:	4604      	mov	r4, r0
 801783c:	f7ff ffcd 	bl	80177da <GUI__WrapGetNumCharsToNextLine>
 8017840:	4601      	mov	r1, r0
 8017842:	4620      	mov	r0, r4
 8017844:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017848:	f7f9 b8ca 	b.w	80109e0 <GUI_UC__NumChars2NumBytes>

0801784c <GUI__ExpandPixelIndicesEx>:
 801784c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017850:	1e0c      	subs	r4, r1, #0
 8017852:	4605      	mov	r5, r0
 8017854:	f340 80b3 	ble.w	80179be <GUI__ExpandPixelIndicesEx+0x172>
 8017858:	2a08      	cmp	r2, #8
 801785a:	685f      	ldr	r7, [r3, #4]
 801785c:	dd04      	ble.n	8017868 <GUI__ExpandPixelIndicesEx+0x1c>
 801785e:	2a10      	cmp	r2, #16
 8017860:	f340 8098 	ble.w	8017994 <GUI__ExpandPixelIndicesEx+0x148>
 8017864:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017868:	3a01      	subs	r2, #1
 801786a:	2a07      	cmp	r2, #7
 801786c:	f200 80a7 	bhi.w	80179be <GUI__ExpandPixelIndicesEx+0x172>
 8017870:	e8df f002 	tbb	[pc, r2]
 8017874:	58a52d04 	.word	0x58a52d04
 8017878:	83a5a5a5 	.word	0x83a5a5a5
 801787c:	1e66      	subs	r6, r4, #1
 801787e:	10f2      	asrs	r2, r6, #3
 8017880:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 8017884:	3b01      	subs	r3, #1
 8017886:	eb05 0802 	add.w	r8, r5, r2
 801788a:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 801788e:	f006 0607 	and.w	r6, r6, #7
 8017892:	f815 a002 	ldrb.w	sl, [r5, r2]
 8017896:	2580      	movs	r5, #128	; 0x80
 8017898:	4135      	asrs	r5, r6
 801789a:	f108 38ff 	add.w	r8, r8, #4294967295
 801789e:	b2ed      	uxtb	r5, r5
 80178a0:	f1c6 0307 	rsb	r3, r6, #7
 80178a4:	ea0a 0005 	and.w	r0, sl, r5
 80178a8:	4118      	asrs	r0, r3
 80178aa:	47b8      	blx	r7
 80178ac:	f849 0904 	str.w	r0, [r9], #-4
 80178b0:	b936      	cbnz	r6, 80178c0 <GUI__ExpandPixelIndicesEx+0x74>
 80178b2:	f898 a000 	ldrb.w	sl, [r8]
 80178b6:	2501      	movs	r5, #1
 80178b8:	f108 38ff 	add.w	r8, r8, #4294967295
 80178bc:	2607      	movs	r6, #7
 80178be:	e002      	b.n	80178c6 <GUI__ExpandPixelIndicesEx+0x7a>
 80178c0:	006d      	lsls	r5, r5, #1
 80178c2:	3e01      	subs	r6, #1
 80178c4:	b2ed      	uxtb	r5, r5
 80178c6:	3c01      	subs	r4, #1
 80178c8:	d1ea      	bne.n	80178a0 <GUI__ExpandPixelIndicesEx+0x54>
 80178ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80178ce:	1e66      	subs	r6, r4, #1
 80178d0:	10b2      	asrs	r2, r6, #2
 80178d2:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 80178d6:	3b01      	subs	r3, #1
 80178d8:	f006 0603 	and.w	r6, r6, #3
 80178dc:	eb05 0802 	add.w	r8, r5, r2
 80178e0:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 80178e4:	f815 a002 	ldrb.w	sl, [r5, r2]
 80178e8:	0073      	lsls	r3, r6, #1
 80178ea:	25c0      	movs	r5, #192	; 0xc0
 80178ec:	411d      	asrs	r5, r3
 80178ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80178f2:	b2ed      	uxtb	r5, r5
 80178f4:	0073      	lsls	r3, r6, #1
 80178f6:	f1c3 0306 	rsb	r3, r3, #6
 80178fa:	ea0a 0005 	and.w	r0, sl, r5
 80178fe:	4118      	asrs	r0, r3
 8017900:	47b8      	blx	r7
 8017902:	f849 0904 	str.w	r0, [r9], #-4
 8017906:	b936      	cbnz	r6, 8017916 <GUI__ExpandPixelIndicesEx+0xca>
 8017908:	2503      	movs	r5, #3
 801790a:	f898 a000 	ldrb.w	sl, [r8]
 801790e:	462e      	mov	r6, r5
 8017910:	f108 38ff 	add.w	r8, r8, #4294967295
 8017914:	e002      	b.n	801791c <GUI__ExpandPixelIndicesEx+0xd0>
 8017916:	00ad      	lsls	r5, r5, #2
 8017918:	3e01      	subs	r6, #1
 801791a:	b2ed      	uxtb	r5, r5
 801791c:	3c01      	subs	r4, #1
 801791e:	d1e9      	bne.n	80178f4 <GUI__ExpandPixelIndicesEx+0xa8>
 8017920:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017924:	1e66      	subs	r6, r4, #1
 8017926:	1072      	asrs	r2, r6, #1
 8017928:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 801792c:	3b01      	subs	r3, #1
 801792e:	f006 0601 	and.w	r6, r6, #1
 8017932:	eb05 0802 	add.w	r8, r5, r2
 8017936:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 801793a:	f815 a002 	ldrb.w	sl, [r5, r2]
 801793e:	00b3      	lsls	r3, r6, #2
 8017940:	25f0      	movs	r5, #240	; 0xf0
 8017942:	411d      	asrs	r5, r3
 8017944:	f108 38ff 	add.w	r8, r8, #4294967295
 8017948:	b2ed      	uxtb	r5, r5
 801794a:	00b3      	lsls	r3, r6, #2
 801794c:	f1c3 0304 	rsb	r3, r3, #4
 8017950:	ea0a 0005 	and.w	r0, sl, r5
 8017954:	4118      	asrs	r0, r3
 8017956:	47b8      	blx	r7
 8017958:	f849 0904 	str.w	r0, [r9], #-4
 801795c:	b936      	cbnz	r6, 801796c <GUI__ExpandPixelIndicesEx+0x120>
 801795e:	f898 a000 	ldrb.w	sl, [r8]
 8017962:	250f      	movs	r5, #15
 8017964:	f108 38ff 	add.w	r8, r8, #4294967295
 8017968:	2601      	movs	r6, #1
 801796a:	e002      	b.n	8017972 <GUI__ExpandPixelIndicesEx+0x126>
 801796c:	012d      	lsls	r5, r5, #4
 801796e:	b2ed      	uxtb	r5, r5
 8017970:	2600      	movs	r6, #0
 8017972:	3c01      	subs	r4, #1
 8017974:	d1e9      	bne.n	801794a <GUI__ExpandPixelIndicesEx+0xfe>
 8017976:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801797a:	192e      	adds	r6, r5, r4
 801797c:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8017980:	1b34      	subs	r4, r6, r4
 8017982:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 8017986:	47b8      	blx	r7
 8017988:	42a6      	cmp	r6, r4
 801798a:	f845 0d04 	str.w	r0, [r5, #-4]!
 801798e:	d1f8      	bne.n	8017982 <GUI__ExpandPixelIndicesEx+0x136>
 8017990:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017994:	695e      	ldr	r6, [r3, #20]
 8017996:	b12e      	cbz	r6, 80179a4 <GUI__ExpandPixelIndicesEx+0x158>
 8017998:	4629      	mov	r1, r5
 801799a:	4622      	mov	r2, r4
 801799c:	2302      	movs	r3, #2
 801799e:	47b0      	blx	r6
 80179a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80179a4:	0064      	lsls	r4, r4, #1
 80179a6:	4425      	add	r5, r4
 80179a8:	192e      	adds	r6, r5, r4
 80179aa:	1b2c      	subs	r4, r5, r4
 80179ac:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 80179b0:	47b8      	blx	r7
 80179b2:	42a5      	cmp	r5, r4
 80179b4:	f846 0d04 	str.w	r0, [r6, #-4]!
 80179b8:	d1f8      	bne.n	80179ac <GUI__ExpandPixelIndicesEx+0x160>
 80179ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80179be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080179c2 <_GetTwinArcPara>:
 80179c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80179c6:	fb01 f901 	mul.w	r9, r1, r1
 80179ca:	1e47      	subs	r7, r0, #1
 80179cc:	4604      	mov	r4, r0
 80179ce:	4340      	muls	r0, r0
 80179d0:	ebc9 0000 	rsb	r0, r9, r0
 80179d4:	460d      	mov	r5, r1
 80179d6:	4692      	mov	sl, r2
 80179d8:	4698      	mov	r8, r3
 80179da:	9e08      	ldr	r6, [sp, #32]
 80179dc:	f001 fe3e 	bl	801965c <GUI__sqrt32>
 80179e0:	42bd      	cmp	r5, r7
 80179e2:	f8ca 0000 	str.w	r0, [sl]
 80179e6:	da10      	bge.n	8017a0a <_GetTwinArcPara+0x48>
 80179e8:	fb07 f007 	mul.w	r0, r7, r7
 80179ec:	ebc9 0000 	rsb	r0, r9, r0
 80179f0:	f001 fe34 	bl	801965c <GUI__sqrt32>
 80179f4:	3c02      	subs	r4, #2
 80179f6:	42a5      	cmp	r5, r4
 80179f8:	f8c8 0000 	str.w	r0, [r8]
 80179fc:	da03      	bge.n	8017a06 <_GetTwinArcPara+0x44>
 80179fe:	3801      	subs	r0, #1
 8017a00:	6030      	str	r0, [r6, #0]
 8017a02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017a06:	2300      	movs	r3, #0
 8017a08:	e002      	b.n	8017a10 <_GetTwinArcPara+0x4e>
 8017a0a:	2300      	movs	r3, #0
 8017a0c:	f8c8 3000 	str.w	r3, [r8]
 8017a10:	6033      	str	r3, [r6, #0]
 8017a12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08017a16 <_GetTrippleArcPara>:
 8017a16:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a1a:	fb01 f801 	mul.w	r8, r1, r1
 8017a1e:	f100 3aff 	add.w	sl, r0, #4294967295
 8017a22:	4604      	mov	r4, r0
 8017a24:	4340      	muls	r0, r0
 8017a26:	ebc8 0000 	rsb	r0, r8, r0
 8017a2a:	460d      	mov	r5, r1
 8017a2c:	4691      	mov	r9, r2
 8017a2e:	469b      	mov	fp, r3
 8017a30:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017a32:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8017a34:	f001 fe12 	bl	801965c <GUI__sqrt32>
 8017a38:	4555      	cmp	r5, sl
 8017a3a:	f8c9 0000 	str.w	r0, [r9]
 8017a3e:	da1d      	bge.n	8017a7c <_GetTrippleArcPara+0x66>
 8017a40:	fb0a f00a 	mul.w	r0, sl, sl
 8017a44:	ebc8 0000 	rsb	r0, r8, r0
 8017a48:	f001 fe08 	bl	801965c <GUI__sqrt32>
 8017a4c:	f1a4 0902 	sub.w	r9, r4, #2
 8017a50:	454d      	cmp	r5, r9
 8017a52:	f8cb 0000 	str.w	r0, [fp]
 8017a56:	da0f      	bge.n	8017a78 <_GetTrippleArcPara+0x62>
 8017a58:	fb09 f009 	mul.w	r0, r9, r9
 8017a5c:	ebc8 0000 	rsb	r0, r8, r0
 8017a60:	f001 fdfc 	bl	801965c <GUI__sqrt32>
 8017a64:	3c03      	subs	r4, #3
 8017a66:	42a5      	cmp	r5, r4
 8017a68:	6038      	str	r0, [r7, #0]
 8017a6a:	da03      	bge.n	8017a74 <_GetTrippleArcPara+0x5e>
 8017a6c:	3801      	subs	r0, #1
 8017a6e:	6030      	str	r0, [r6, #0]
 8017a70:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a74:	2300      	movs	r3, #0
 8017a76:	e005      	b.n	8017a84 <_GetTrippleArcPara+0x6e>
 8017a78:	2300      	movs	r3, #0
 8017a7a:	e002      	b.n	8017a82 <_GetTrippleArcPara+0x6c>
 8017a7c:	2300      	movs	r3, #0
 8017a7e:	f8cb 3000 	str.w	r3, [fp]
 8017a82:	603b      	str	r3, [r7, #0]
 8017a84:	6033      	str	r3, [r6, #0]
 8017a86:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017a8c <GUI__DrawTwinArc4>:
 8017a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a90:	4d76      	ldr	r5, [pc, #472]	; (8017c6c <GUI__DrawTwinArc4+0x1e0>)
 8017a92:	682d      	ldr	r5, [r5, #0]
 8017a94:	6cee      	ldr	r6, [r5, #76]	; 0x4c
 8017a96:	6d2f      	ldr	r7, [r5, #80]	; 0x50
 8017a98:	b08f      	sub	sp, #60	; 0x3c
 8017a9a:	4430      	add	r0, r6
 8017a9c:	4439      	add	r1, r7
 8017a9e:	9005      	str	r0, [sp, #20]
 8017aa0:	4416      	add	r6, r2
 8017aa2:	441f      	add	r7, r3
 8017aa4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8017aa8:	a80c      	add	r0, sp, #48	; 0x30
 8017aaa:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017aac:	9106      	str	r1, [sp, #24]
 8017aae:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8017ab2:	f8ad 6034 	strh.w	r6, [sp, #52]	; 0x34
 8017ab6:	f8ad 7036 	strh.w	r7, [sp, #54]	; 0x36
 8017aba:	f7f5 fae3 	bl	800d084 <WM__InitIVRSearch>
 8017abe:	2800      	cmp	r0, #0
 8017ac0:	f000 80d0 	beq.w	8017c64 <GUI__DrawTwinArc4+0x1d8>
 8017ac4:	2c00      	cmp	r4, #0
 8017ac6:	dc02      	bgt.n	8017ace <GUI__DrawTwinArc4+0x42>
 8017ac8:	f7f5 fa1a 	bl	800cf00 <WM__GetNextIVR>
 8017acc:	e7f7      	b.n	8017abe <GUI__DrawTwinArc4+0x32>
 8017ace:	9819      	ldr	r0, [sp, #100]	; 0x64
 8017ad0:	f7f9 fd5e 	bl	8011590 <GUI_SetColor>
 8017ad4:	9b06      	ldr	r3, [sp, #24]
 8017ad6:	4423      	add	r3, r4
 8017ad8:	9307      	str	r3, [sp, #28]
 8017ada:	9b06      	ldr	r3, [sp, #24]
 8017adc:	1e65      	subs	r5, r4, #1
 8017ade:	f103 0801 	add.w	r8, r3, #1
 8017ae2:	2d00      	cmp	r5, #0
 8017ae4:	d037      	beq.n	8017b56 <GUI__DrawTwinArc4+0xca>
 8017ae6:	ab0b      	add	r3, sp, #44	; 0x2c
 8017ae8:	4629      	mov	r1, r5
 8017aea:	9300      	str	r3, [sp, #0]
 8017aec:	4620      	mov	r0, r4
 8017aee:	aa09      	add	r2, sp, #36	; 0x24
 8017af0:	ab0a      	add	r3, sp, #40	; 0x28
 8017af2:	f7ff ff66 	bl	80179c2 <_GetTwinArcPara>
 8017af6:	9b05      	ldr	r3, [sp, #20]
 8017af8:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017afa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017afc:	4423      	add	r3, r4
 8017afe:	ebc1 0c03 	rsb	ip, r1, r3
 8017b02:	ebc4 0b06 	rsb	fp, r4, r6
 8017b06:	1a9b      	subs	r3, r3, r2
 8017b08:	3b01      	subs	r3, #1
 8017b0a:	eb0b 0901 	add.w	r9, fp, r1
 8017b0e:	4493      	add	fp, r2
 8017b10:	4660      	mov	r0, ip
 8017b12:	461a      	mov	r2, r3
 8017b14:	4641      	mov	r1, r8
 8017b16:	f10b 0b01 	add.w	fp, fp, #1
 8017b1a:	9303      	str	r3, [sp, #12]
 8017b1c:	f8cd c010 	str.w	ip, [sp, #16]
 8017b20:	f7f8 f830 	bl	800fb84 <LCD_DrawHLine>
 8017b24:	4641      	mov	r1, r8
 8017b26:	4658      	mov	r0, fp
 8017b28:	464a      	mov	r2, r9
 8017b2a:	f7f8 f82b 	bl	800fb84 <LCD_DrawHLine>
 8017b2e:	ebc4 0a07 	rsb	sl, r4, r7
 8017b32:	f8dd c010 	ldr.w	ip, [sp, #16]
 8017b36:	9b03      	ldr	r3, [sp, #12]
 8017b38:	44aa      	add	sl, r5
 8017b3a:	4660      	mov	r0, ip
 8017b3c:	461a      	mov	r2, r3
 8017b3e:	4651      	mov	r1, sl
 8017b40:	f7f8 f820 	bl	800fb84 <LCD_DrawHLine>
 8017b44:	4658      	mov	r0, fp
 8017b46:	4651      	mov	r1, sl
 8017b48:	464a      	mov	r2, r9
 8017b4a:	f7f8 f81b 	bl	800fb84 <LCD_DrawHLine>
 8017b4e:	3d01      	subs	r5, #1
 8017b50:	f108 0801 	add.w	r8, r8, #1
 8017b54:	e7c5      	b.n	8017ae2 <GUI__DrawTwinArc4+0x56>
 8017b56:	2c01      	cmp	r4, #1
 8017b58:	d0b6      	beq.n	8017ac8 <GUI__DrawTwinArc4+0x3c>
 8017b5a:	981a      	ldr	r0, [sp, #104]	; 0x68
 8017b5c:	f7f9 fd18 	bl	8011590 <GUI_SetColor>
 8017b60:	9b07      	ldr	r3, [sp, #28]
 8017b62:	f1c4 0802 	rsb	r8, r4, #2
 8017b66:	1ea5      	subs	r5, r4, #2
 8017b68:	4498      	add	r8, r3
 8017b6a:	2d00      	cmp	r5, #0
 8017b6c:	d037      	beq.n	8017bde <GUI__DrawTwinArc4+0x152>
 8017b6e:	ab0b      	add	r3, sp, #44	; 0x2c
 8017b70:	4629      	mov	r1, r5
 8017b72:	9300      	str	r3, [sp, #0]
 8017b74:	4620      	mov	r0, r4
 8017b76:	aa09      	add	r2, sp, #36	; 0x24
 8017b78:	ab0a      	add	r3, sp, #40	; 0x28
 8017b7a:	f7ff ff22 	bl	80179c2 <_GetTwinArcPara>
 8017b7e:	9b05      	ldr	r3, [sp, #20]
 8017b80:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017b82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017b84:	4423      	add	r3, r4
 8017b86:	ebc1 0c03 	rsb	ip, r1, r3
 8017b8a:	ebc4 0b06 	rsb	fp, r4, r6
 8017b8e:	1a9b      	subs	r3, r3, r2
 8017b90:	3b01      	subs	r3, #1
 8017b92:	eb0b 0901 	add.w	r9, fp, r1
 8017b96:	4493      	add	fp, r2
 8017b98:	4660      	mov	r0, ip
 8017b9a:	461a      	mov	r2, r3
 8017b9c:	4641      	mov	r1, r8
 8017b9e:	f10b 0b01 	add.w	fp, fp, #1
 8017ba2:	9303      	str	r3, [sp, #12]
 8017ba4:	f8cd c010 	str.w	ip, [sp, #16]
 8017ba8:	f7f7 ffec 	bl	800fb84 <LCD_DrawHLine>
 8017bac:	4641      	mov	r1, r8
 8017bae:	4658      	mov	r0, fp
 8017bb0:	464a      	mov	r2, r9
 8017bb2:	f7f7 ffe7 	bl	800fb84 <LCD_DrawHLine>
 8017bb6:	ebc4 0a07 	rsb	sl, r4, r7
 8017bba:	f8dd c010 	ldr.w	ip, [sp, #16]
 8017bbe:	9b03      	ldr	r3, [sp, #12]
 8017bc0:	44aa      	add	sl, r5
 8017bc2:	4660      	mov	r0, ip
 8017bc4:	461a      	mov	r2, r3
 8017bc6:	4651      	mov	r1, sl
 8017bc8:	f7f7 ffdc 	bl	800fb84 <LCD_DrawHLine>
 8017bcc:	4658      	mov	r0, fp
 8017bce:	4651      	mov	r1, sl
 8017bd0:	464a      	mov	r2, r9
 8017bd2:	f7f7 ffd7 	bl	800fb84 <LCD_DrawHLine>
 8017bd6:	3d01      	subs	r5, #1
 8017bd8:	f108 0801 	add.w	r8, r8, #1
 8017bdc:	e7c5      	b.n	8017b6a <GUI__DrawTwinArc4+0xde>
 8017bde:	2c02      	cmp	r4, #2
 8017be0:	f43f af72 	beq.w	8017ac8 <GUI__DrawTwinArc4+0x3c>
 8017be4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8017be6:	f7f9 fcd3 	bl	8011590 <GUI_SetColor>
 8017bea:	9b07      	ldr	r3, [sp, #28]
 8017bec:	f1c4 0803 	rsb	r8, r4, #3
 8017bf0:	1ee5      	subs	r5, r4, #3
 8017bf2:	4498      	add	r8, r3
 8017bf4:	2d00      	cmp	r5, #0
 8017bf6:	f43f af67 	beq.w	8017ac8 <GUI__DrawTwinArc4+0x3c>
 8017bfa:	ab0b      	add	r3, sp, #44	; 0x2c
 8017bfc:	4629      	mov	r1, r5
 8017bfe:	9300      	str	r3, [sp, #0]
 8017c00:	4620      	mov	r0, r4
 8017c02:	aa09      	add	r2, sp, #36	; 0x24
 8017c04:	ab0a      	add	r3, sp, #40	; 0x28
 8017c06:	f7ff fedc 	bl	80179c2 <_GetTwinArcPara>
 8017c0a:	9b05      	ldr	r3, [sp, #20]
 8017c0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017c0e:	4423      	add	r3, r4
 8017c10:	ebc2 0c03 	rsb	ip, r2, r3
 8017c14:	ebc4 0b06 	rsb	fp, r4, r6
 8017c18:	3b01      	subs	r3, #1
 8017c1a:	eb0b 0902 	add.w	r9, fp, r2
 8017c1e:	4660      	mov	r0, ip
 8017c20:	461a      	mov	r2, r3
 8017c22:	4641      	mov	r1, r8
 8017c24:	f10b 0b01 	add.w	fp, fp, #1
 8017c28:	9303      	str	r3, [sp, #12]
 8017c2a:	f8cd c010 	str.w	ip, [sp, #16]
 8017c2e:	f7f7 ffa9 	bl	800fb84 <LCD_DrawHLine>
 8017c32:	4641      	mov	r1, r8
 8017c34:	4658      	mov	r0, fp
 8017c36:	464a      	mov	r2, r9
 8017c38:	f7f7 ffa4 	bl	800fb84 <LCD_DrawHLine>
 8017c3c:	ebc4 0a07 	rsb	sl, r4, r7
 8017c40:	f8dd c010 	ldr.w	ip, [sp, #16]
 8017c44:	9b03      	ldr	r3, [sp, #12]
 8017c46:	44aa      	add	sl, r5
 8017c48:	4660      	mov	r0, ip
 8017c4a:	461a      	mov	r2, r3
 8017c4c:	4651      	mov	r1, sl
 8017c4e:	f7f7 ff99 	bl	800fb84 <LCD_DrawHLine>
 8017c52:	4658      	mov	r0, fp
 8017c54:	4651      	mov	r1, sl
 8017c56:	464a      	mov	r2, r9
 8017c58:	f7f7 ff94 	bl	800fb84 <LCD_DrawHLine>
 8017c5c:	3d01      	subs	r5, #1
 8017c5e:	f108 0801 	add.w	r8, r8, #1
 8017c62:	e7c7      	b.n	8017bf4 <GUI__DrawTwinArc4+0x168>
 8017c64:	b00f      	add	sp, #60	; 0x3c
 8017c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c6a:	bf00      	nop
 8017c6c:	2000016c 	.word	0x2000016c

08017c70 <GUI__FillTrippleArc>:
 8017c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c74:	b095      	sub	sp, #84	; 0x54
 8017c76:	930d      	str	r3, [sp, #52]	; 0x34
 8017c78:	4baf      	ldr	r3, [pc, #700]	; (8017f38 <GUI__FillTrippleArc+0x2c8>)
 8017c7a:	9205      	str	r2, [sp, #20]
 8017c7c:	681b      	ldr	r3, [r3, #0]
 8017c7e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8017c80:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 8017c82:	1882      	adds	r2, r0, r2
 8017c84:	9805      	ldr	r0, [sp, #20]
 8017c86:	9206      	str	r2, [sp, #24]
 8017c88:	1e43      	subs	r3, r0, #1
 8017c8a:	440e      	add	r6, r1
 8017c8c:	b29b      	uxth	r3, r3
 8017c8e:	f8ad 2048 	strh.w	r2, [sp, #72]	; 0x48
 8017c92:	a812      	add	r0, sp, #72	; 0x48
 8017c94:	441a      	add	r2, r3
 8017c96:	4433      	add	r3, r6
 8017c98:	f8ad 604a 	strh.w	r6, [sp, #74]	; 0x4a
 8017c9c:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 8017ca0:	f8ad 304e 	strh.w	r3, [sp, #78]	; 0x4e
 8017ca4:	f7f5 f9ee 	bl	800d084 <WM__InitIVRSearch>
 8017ca8:	2800      	cmp	r0, #0
 8017caa:	f000 8141 	beq.w	8017f30 <GUI__FillTrippleArc+0x2c0>
 8017cae:	9a05      	ldr	r2, [sp, #20]
 8017cb0:	1055      	asrs	r5, r2, #1
 8017cb2:	1c6b      	adds	r3, r5, #1
 8017cb4:	1e68      	subs	r0, r5, #1
 8017cb6:	1eaa      	subs	r2, r5, #2
 8017cb8:	1cac      	adds	r4, r5, #2
 8017cba:	930a      	str	r3, [sp, #40]	; 0x28
 8017cbc:	900b      	str	r0, [sp, #44]	; 0x2c
 8017cbe:	920c      	str	r2, [sp, #48]	; 0x30
 8017cc0:	9b05      	ldr	r3, [sp, #20]
 8017cc2:	07da      	lsls	r2, r3, #31
 8017cc4:	f100 812f 	bmi.w	8017f26 <GUI__FillTrippleArc+0x2b6>
 8017cc8:	2c00      	cmp	r4, #0
 8017cca:	f340 812c 	ble.w	8017f26 <GUI__FillTrippleArc+0x2b6>
 8017cce:	9806      	ldr	r0, [sp, #24]
 8017cd0:	9a06      	ldr	r2, [sp, #24]
 8017cd2:	3801      	subs	r0, #1
 8017cd4:	9007      	str	r0, [sp, #28]
 8017cd6:	9805      	ldr	r0, [sp, #20]
 8017cd8:	441a      	add	r2, r3
 8017cda:	1e73      	subs	r3, r6, #1
 8017cdc:	4418      	add	r0, r3
 8017cde:	9009      	str	r0, [sp, #36]	; 0x24
 8017ce0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017ce2:	9208      	str	r2, [sp, #32]
 8017ce4:	f7f9 fc54 	bl	8011590 <GUI_SetColor>
 8017ce8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017cea:	2f01      	cmp	r7, #1
 8017cec:	dd48      	ble.n	8017d80 <GUI__FillTrippleArc+0x110>
 8017cee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017cf0:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8017cf4:	ab10      	add	r3, sp, #64	; 0x40
 8017cf6:	9300      	str	r3, [sp, #0]
 8017cf8:	ea6f 0a05 	mvn.w	sl, r5
 8017cfc:	ab11      	add	r3, sp, #68	; 0x44
 8017cfe:	4492      	add	sl, r2
 8017d00:	9301      	str	r3, [sp, #4]
 8017d02:	4620      	mov	r0, r4
 8017d04:	4639      	mov	r1, r7
 8017d06:	aa0e      	add	r2, sp, #56	; 0x38
 8017d08:	ab0f      	add	r3, sp, #60	; 0x3c
 8017d0a:	f7ff fe84 	bl	8017a16 <_GetTrippleArcPara>
 8017d0e:	9808      	ldr	r0, [sp, #32]
 8017d10:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8017d14:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017d16:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017d18:	1b02      	subs	r2, r0, r4
 8017d1a:	44a4      	add	ip, r4
 8017d1c:	ebc1 090c 	rsb	r9, r1, ip
 8017d20:	ebc3 0c0c 	rsb	ip, r3, ip
 8017d24:	4413      	add	r3, r2
 8017d26:	44b3      	add	fp, r6
 8017d28:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017d2c:	3301      	adds	r3, #1
 8017d2e:	ebc7 0b0b 	rsb	fp, r7, fp
 8017d32:	4563      	cmp	r3, ip
 8017d34:	eb02 0801 	add.w	r8, r2, r1
 8017d38:	44ba      	add	sl, r7
 8017d3a:	4648      	mov	r0, r9
 8017d3c:	4659      	mov	r1, fp
 8017d3e:	da04      	bge.n	8017d4a <GUI__FillTrippleArc+0xda>
 8017d40:	4642      	mov	r2, r8
 8017d42:	f7f7 ff1f 	bl	800fb84 <LCD_DrawHLine>
 8017d46:	4648      	mov	r0, r9
 8017d48:	e014      	b.n	8017d74 <GUI__FillTrippleArc+0x104>
 8017d4a:	4662      	mov	r2, ip
 8017d4c:	f8cd c010 	str.w	ip, [sp, #16]
 8017d50:	9303      	str	r3, [sp, #12]
 8017d52:	f7f7 ff17 	bl	800fb84 <LCD_DrawHLine>
 8017d56:	9b03      	ldr	r3, [sp, #12]
 8017d58:	4659      	mov	r1, fp
 8017d5a:	4618      	mov	r0, r3
 8017d5c:	4642      	mov	r2, r8
 8017d5e:	f7f7 ff11 	bl	800fb84 <LCD_DrawHLine>
 8017d62:	f8dd c010 	ldr.w	ip, [sp, #16]
 8017d66:	4648      	mov	r0, r9
 8017d68:	4651      	mov	r1, sl
 8017d6a:	4662      	mov	r2, ip
 8017d6c:	f7f7 ff0a 	bl	800fb84 <LCD_DrawHLine>
 8017d70:	9b03      	ldr	r3, [sp, #12]
 8017d72:	4618      	mov	r0, r3
 8017d74:	4651      	mov	r1, sl
 8017d76:	4642      	mov	r2, r8
 8017d78:	f7f7 ff04 	bl	800fb84 <LCD_DrawHLine>
 8017d7c:	3f01      	subs	r7, #1
 8017d7e:	e7b4      	b.n	8017cea <GUI__FillTrippleArc+0x7a>
 8017d80:	2c01      	cmp	r4, #1
 8017d82:	f000 80d0 	beq.w	8017f26 <GUI__FillTrippleArc+0x2b6>
 8017d86:	981e      	ldr	r0, [sp, #120]	; 0x78
 8017d88:	f7f9 fc02 	bl	8011590 <GUI_SetColor>
 8017d8c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017d8e:	4437      	add	r7, r6
 8017d90:	1b7f      	subs	r7, r7, r5
 8017d92:	46a8      	mov	r8, r5
 8017d94:	f1b8 0f01 	cmp.w	r8, #1
 8017d98:	dd45      	ble.n	8017e26 <GUI__FillTrippleArc+0x1b6>
 8017d9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017d9c:	ab10      	add	r3, sp, #64	; 0x40
 8017d9e:	9300      	str	r3, [sp, #0]
 8017da0:	ea6f 0b05 	mvn.w	fp, r5
 8017da4:	ab11      	add	r3, sp, #68	; 0x44
 8017da6:	4493      	add	fp, r2
 8017da8:	9301      	str	r3, [sp, #4]
 8017daa:	4620      	mov	r0, r4
 8017dac:	4641      	mov	r1, r8
 8017dae:	aa0e      	add	r2, sp, #56	; 0x38
 8017db0:	ab0f      	add	r3, sp, #60	; 0x3c
 8017db2:	f7ff fe30 	bl	8017a16 <_GetTrippleArcPara>
 8017db6:	9808      	ldr	r0, [sp, #32]
 8017db8:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8017dbc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8017dbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017dc0:	1b02      	subs	r2, r0, r4
 8017dc2:	44a4      	add	ip, r4
 8017dc4:	ebc1 0a0c 	rsb	sl, r1, ip
 8017dc8:	ebc3 0c0c 	rsb	ip, r3, ip
 8017dcc:	4413      	add	r3, r2
 8017dce:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017dd2:	3301      	adds	r3, #1
 8017dd4:	4563      	cmp	r3, ip
 8017dd6:	eb02 0901 	add.w	r9, r2, r1
 8017dda:	44c3      	add	fp, r8
 8017ddc:	4650      	mov	r0, sl
 8017dde:	4639      	mov	r1, r7
 8017de0:	da04      	bge.n	8017dec <GUI__FillTrippleArc+0x17c>
 8017de2:	464a      	mov	r2, r9
 8017de4:	f7f7 fece 	bl	800fb84 <LCD_DrawHLine>
 8017de8:	4650      	mov	r0, sl
 8017dea:	e014      	b.n	8017e16 <GUI__FillTrippleArc+0x1a6>
 8017dec:	4662      	mov	r2, ip
 8017dee:	f8cd c010 	str.w	ip, [sp, #16]
 8017df2:	9303      	str	r3, [sp, #12]
 8017df4:	f7f7 fec6 	bl	800fb84 <LCD_DrawHLine>
 8017df8:	9b03      	ldr	r3, [sp, #12]
 8017dfa:	4639      	mov	r1, r7
 8017dfc:	4618      	mov	r0, r3
 8017dfe:	464a      	mov	r2, r9
 8017e00:	f7f7 fec0 	bl	800fb84 <LCD_DrawHLine>
 8017e04:	f8dd c010 	ldr.w	ip, [sp, #16]
 8017e08:	4650      	mov	r0, sl
 8017e0a:	4659      	mov	r1, fp
 8017e0c:	4662      	mov	r2, ip
 8017e0e:	f7f7 feb9 	bl	800fb84 <LCD_DrawHLine>
 8017e12:	9b03      	ldr	r3, [sp, #12]
 8017e14:	4618      	mov	r0, r3
 8017e16:	4659      	mov	r1, fp
 8017e18:	464a      	mov	r2, r9
 8017e1a:	f7f7 feb3 	bl	800fb84 <LCD_DrawHLine>
 8017e1e:	f108 38ff 	add.w	r8, r8, #4294967295
 8017e22:	3701      	adds	r7, #1
 8017e24:	e7b6      	b.n	8017d94 <GUI__FillTrippleArc+0x124>
 8017e26:	2c02      	cmp	r4, #2
 8017e28:	d07d      	beq.n	8017f26 <GUI__FillTrippleArc+0x2b6>
 8017e2a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8017e2c:	f7f9 fbb0 	bl	8011590 <GUI_SetColor>
 8017e30:	19a7      	adds	r7, r4, r6
 8017e32:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
 8017e36:	1b7f      	subs	r7, r7, r5
 8017e38:	f1b8 0f01 	cmp.w	r8, #1
 8017e3c:	dd45      	ble.n	8017eca <GUI__FillTrippleArc+0x25a>
 8017e3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017e40:	ab10      	add	r3, sp, #64	; 0x40
 8017e42:	9300      	str	r3, [sp, #0]
 8017e44:	ea6f 0b05 	mvn.w	fp, r5
 8017e48:	ab11      	add	r3, sp, #68	; 0x44
 8017e4a:	4493      	add	fp, r2
 8017e4c:	9301      	str	r3, [sp, #4]
 8017e4e:	4620      	mov	r0, r4
 8017e50:	4641      	mov	r1, r8
 8017e52:	aa0e      	add	r2, sp, #56	; 0x38
 8017e54:	ab0f      	add	r3, sp, #60	; 0x3c
 8017e56:	f7ff fdde 	bl	8017a16 <_GetTrippleArcPara>
 8017e5a:	9808      	ldr	r0, [sp, #32]
 8017e5c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8017e60:	9910      	ldr	r1, [sp, #64]	; 0x40
 8017e62:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017e64:	1b02      	subs	r2, r0, r4
 8017e66:	44a4      	add	ip, r4
 8017e68:	ebc1 0a0c 	rsb	sl, r1, ip
 8017e6c:	ebc3 0c0c 	rsb	ip, r3, ip
 8017e70:	4413      	add	r3, r2
 8017e72:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017e76:	3301      	adds	r3, #1
 8017e78:	4563      	cmp	r3, ip
 8017e7a:	eb02 0901 	add.w	r9, r2, r1
 8017e7e:	44c3      	add	fp, r8
 8017e80:	4650      	mov	r0, sl
 8017e82:	4639      	mov	r1, r7
 8017e84:	da04      	bge.n	8017e90 <GUI__FillTrippleArc+0x220>
 8017e86:	464a      	mov	r2, r9
 8017e88:	f7f7 fe7c 	bl	800fb84 <LCD_DrawHLine>
 8017e8c:	4650      	mov	r0, sl
 8017e8e:	e014      	b.n	8017eba <GUI__FillTrippleArc+0x24a>
 8017e90:	4662      	mov	r2, ip
 8017e92:	f8cd c010 	str.w	ip, [sp, #16]
 8017e96:	9303      	str	r3, [sp, #12]
 8017e98:	f7f7 fe74 	bl	800fb84 <LCD_DrawHLine>
 8017e9c:	9b03      	ldr	r3, [sp, #12]
 8017e9e:	4639      	mov	r1, r7
 8017ea0:	4618      	mov	r0, r3
 8017ea2:	464a      	mov	r2, r9
 8017ea4:	f7f7 fe6e 	bl	800fb84 <LCD_DrawHLine>
 8017ea8:	f8dd c010 	ldr.w	ip, [sp, #16]
 8017eac:	4650      	mov	r0, sl
 8017eae:	4659      	mov	r1, fp
 8017eb0:	4662      	mov	r2, ip
 8017eb2:	f7f7 fe67 	bl	800fb84 <LCD_DrawHLine>
 8017eb6:	9b03      	ldr	r3, [sp, #12]
 8017eb8:	4618      	mov	r0, r3
 8017eba:	4659      	mov	r1, fp
 8017ebc:	464a      	mov	r2, r9
 8017ebe:	f7f7 fe61 	bl	800fb84 <LCD_DrawHLine>
 8017ec2:	f108 38ff 	add.w	r8, r8, #4294967295
 8017ec6:	3701      	adds	r7, #1
 8017ec8:	e7b6      	b.n	8017e38 <GUI__FillTrippleArc+0x1c8>
 8017eca:	2c03      	cmp	r4, #3
 8017ecc:	d02b      	beq.n	8017f26 <GUI__FillTrippleArc+0x2b6>
 8017ece:	9820      	ldr	r0, [sp, #128]	; 0x80
 8017ed0:	f7f9 fb5e 	bl	8011590 <GUI_SetColor>
 8017ed4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017ed6:	f106 0803 	add.w	r8, r6, #3
 8017eda:	b327      	cbz	r7, 8017f26 <GUI__FillTrippleArc+0x2b6>
 8017edc:	ab10      	add	r3, sp, #64	; 0x40
 8017ede:	9300      	str	r3, [sp, #0]
 8017ee0:	ab11      	add	r3, sp, #68	; 0x44
 8017ee2:	4639      	mov	r1, r7
 8017ee4:	9301      	str	r3, [sp, #4]
 8017ee6:	4620      	mov	r0, r4
 8017ee8:	aa0e      	add	r2, sp, #56	; 0x38
 8017eea:	ab0f      	add	r3, sp, #60	; 0x3c
 8017eec:	f7ff fd93 	bl	8017a16 <_GetTrippleArcPara>
 8017ef0:	9a08      	ldr	r2, [sp, #32]
 8017ef2:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8017ef6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017ef8:	ebc4 0902 	rsb	r9, r4, r2
 8017efc:	44a2      	add	sl, r4
 8017efe:	ebc3 0a0a 	rsb	sl, r3, sl
 8017f02:	4499      	add	r9, r3
 8017f04:	4641      	mov	r1, r8
 8017f06:	4650      	mov	r0, sl
 8017f08:	464a      	mov	r2, r9
 8017f0a:	f7f7 fe3b 	bl	800fb84 <LCD_DrawHLine>
 8017f0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f10:	43e9      	mvns	r1, r5
 8017f12:	4419      	add	r1, r3
 8017f14:	4439      	add	r1, r7
 8017f16:	4650      	mov	r0, sl
 8017f18:	464a      	mov	r2, r9
 8017f1a:	f7f7 fe33 	bl	800fb84 <LCD_DrawHLine>
 8017f1e:	3f01      	subs	r7, #1
 8017f20:	f108 0801 	add.w	r8, r8, #1
 8017f24:	e7d9      	b.n	8017eda <GUI__FillTrippleArc+0x26a>
 8017f26:	f7f4 ffeb 	bl	800cf00 <WM__GetNextIVR>
 8017f2a:	2800      	cmp	r0, #0
 8017f2c:	f47f aec8 	bne.w	8017cc0 <GUI__FillTrippleArc+0x50>
 8017f30:	b015      	add	sp, #84	; 0x54
 8017f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f36:	bf00      	nop
 8017f38:	2000016c 	.word	0x2000016c

08017f3c <GUI__DivideRound32>:
 8017f3c:	b149      	cbz	r1, 8017f52 <GUI__DivideRound32+0x16>
 8017f3e:	2800      	cmp	r0, #0
 8017f40:	ea4f 0361 	mov.w	r3, r1, asr #1
 8017f44:	bfb4      	ite	lt
 8017f46:	ebc3 0000 	rsblt	r0, r3, r0
 8017f4a:	18c0      	addge	r0, r0, r3
 8017f4c:	fb90 f0f1 	sdiv	r0, r0, r1
 8017f50:	4770      	bx	lr
 8017f52:	4608      	mov	r0, r1
 8017f54:	4770      	bx	lr

08017f56 <GUI__CompactPixelIndices>:
 8017f56:	2a08      	cmp	r2, #8
 8017f58:	b510      	push	{r4, lr}
 8017f5a:	dd0e      	ble.n	8017f7a <GUI__CompactPixelIndices+0x24>
 8017f5c:	2a10      	cmp	r2, #16
 8017f5e:	dc0a      	bgt.n	8017f76 <GUI__CompactPixelIndices+0x20>
 8017f60:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017f64:	4603      	mov	r3, r0
 8017f66:	f850 2b04 	ldr.w	r2, [r0], #4
 8017f6a:	f823 2b02 	strh.w	r2, [r3], #2
 8017f6e:	428b      	cmp	r3, r1
 8017f70:	d1f9      	bne.n	8017f66 <GUI__CompactPixelIndices+0x10>
 8017f72:	2001      	movs	r0, #1
 8017f74:	bd10      	pop	{r4, pc}
 8017f76:	2000      	movs	r0, #0
 8017f78:	bd10      	pop	{r4, pc}
 8017f7a:	2a02      	cmp	r2, #2
 8017f7c:	d06d      	beq.n	801805a <GUI__CompactPixelIndices+0x104>
 8017f7e:	2a04      	cmp	r2, #4
 8017f80:	d054      	beq.n	801802c <GUI__CompactPixelIndices+0xd6>
 8017f82:	2a01      	cmp	r2, #1
 8017f84:	f040 8095 	bne.w	80180b2 <GUI__CompactPixelIndices+0x15c>
 8017f88:	4604      	mov	r4, r0
 8017f8a:	6803      	ldr	r3, [r0, #0]
 8017f8c:	2901      	cmp	r1, #1
 8017f8e:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 8017f92:	b2db      	uxtb	r3, r3
 8017f94:	d047      	beq.n	8018026 <GUI__CompactPixelIndices+0xd0>
 8017f96:	6842      	ldr	r2, [r0, #4]
 8017f98:	2902      	cmp	r1, #2
 8017f9a:	f002 0201 	and.w	r2, r2, #1
 8017f9e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8017fa2:	d102      	bne.n	8017faa <GUI__CompactPixelIndices+0x54>
 8017fa4:	f100 0208 	add.w	r2, r0, #8
 8017fa8:	e03e      	b.n	8018028 <GUI__CompactPixelIndices+0xd2>
 8017faa:	6882      	ldr	r2, [r0, #8]
 8017fac:	2903      	cmp	r1, #3
 8017fae:	f002 0201 	and.w	r2, r2, #1
 8017fb2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8017fb6:	d102      	bne.n	8017fbe <GUI__CompactPixelIndices+0x68>
 8017fb8:	f100 020c 	add.w	r2, r0, #12
 8017fbc:	e034      	b.n	8018028 <GUI__CompactPixelIndices+0xd2>
 8017fbe:	68c2      	ldr	r2, [r0, #12]
 8017fc0:	2904      	cmp	r1, #4
 8017fc2:	f002 0201 	and.w	r2, r2, #1
 8017fc6:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8017fca:	d102      	bne.n	8017fd2 <GUI__CompactPixelIndices+0x7c>
 8017fcc:	f100 0210 	add.w	r2, r0, #16
 8017fd0:	e02a      	b.n	8018028 <GUI__CompactPixelIndices+0xd2>
 8017fd2:	6902      	ldr	r2, [r0, #16]
 8017fd4:	2905      	cmp	r1, #5
 8017fd6:	f002 0201 	and.w	r2, r2, #1
 8017fda:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8017fde:	d102      	bne.n	8017fe6 <GUI__CompactPixelIndices+0x90>
 8017fe0:	f100 0214 	add.w	r2, r0, #20
 8017fe4:	e020      	b.n	8018028 <GUI__CompactPixelIndices+0xd2>
 8017fe6:	6942      	ldr	r2, [r0, #20]
 8017fe8:	2906      	cmp	r1, #6
 8017fea:	f002 0201 	and.w	r2, r2, #1
 8017fee:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8017ff2:	d102      	bne.n	8017ffa <GUI__CompactPixelIndices+0xa4>
 8017ff4:	f100 0218 	add.w	r2, r0, #24
 8017ff8:	e016      	b.n	8018028 <GUI__CompactPixelIndices+0xd2>
 8017ffa:	6982      	ldr	r2, [r0, #24]
 8017ffc:	3907      	subs	r1, #7
 8017ffe:	f002 0201 	and.w	r2, r2, #1
 8018002:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 8018006:	d102      	bne.n	801800e <GUI__CompactPixelIndices+0xb8>
 8018008:	f100 021c 	add.w	r2, r0, #28
 801800c:	e005      	b.n	801801a <GUI__CompactPixelIndices+0xc4>
 801800e:	f100 0220 	add.w	r2, r0, #32
 8018012:	69c0      	ldr	r0, [r0, #28]
 8018014:	f000 0001 	and.w	r0, r0, #1
 8018018:	4303      	orrs	r3, r0
 801801a:	f804 3b01 	strb.w	r3, [r4], #1
 801801e:	2900      	cmp	r1, #0
 8018020:	d0a7      	beq.n	8017f72 <GUI__CompactPixelIndices+0x1c>
 8018022:	4610      	mov	r0, r2
 8018024:	e7b1      	b.n	8017f8a <GUI__CompactPixelIndices+0x34>
 8018026:	1d02      	adds	r2, r0, #4
 8018028:	2100      	movs	r1, #0
 801802a:	e7f6      	b.n	801801a <GUI__CompactPixelIndices+0xc4>
 801802c:	4602      	mov	r2, r0
 801802e:	6803      	ldr	r3, [r0, #0]
 8018030:	2901      	cmp	r1, #1
 8018032:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8018036:	b2db      	uxtb	r3, r3
 8018038:	d102      	bne.n	8018040 <GUI__CompactPixelIndices+0xea>
 801803a:	1d04      	adds	r4, r0, #4
 801803c:	2100      	movs	r1, #0
 801803e:	e006      	b.n	801804e <GUI__CompactPixelIndices+0xf8>
 8018040:	f100 0408 	add.w	r4, r0, #8
 8018044:	6840      	ldr	r0, [r0, #4]
 8018046:	f000 000f 	and.w	r0, r0, #15
 801804a:	4303      	orrs	r3, r0
 801804c:	3902      	subs	r1, #2
 801804e:	f802 3b01 	strb.w	r3, [r2], #1
 8018052:	2900      	cmp	r1, #0
 8018054:	d08d      	beq.n	8017f72 <GUI__CompactPixelIndices+0x1c>
 8018056:	4620      	mov	r0, r4
 8018058:	e7e9      	b.n	801802e <GUI__CompactPixelIndices+0xd8>
 801805a:	4604      	mov	r4, r0
 801805c:	6803      	ldr	r3, [r0, #0]
 801805e:	2901      	cmp	r1, #1
 8018060:	ea4f 1383 	mov.w	r3, r3, lsl #6
 8018064:	b2db      	uxtb	r3, r3
 8018066:	d021      	beq.n	80180ac <GUI__CompactPixelIndices+0x156>
 8018068:	6842      	ldr	r2, [r0, #4]
 801806a:	2902      	cmp	r1, #2
 801806c:	f002 0203 	and.w	r2, r2, #3
 8018070:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8018074:	d102      	bne.n	801807c <GUI__CompactPixelIndices+0x126>
 8018076:	f100 0208 	add.w	r2, r0, #8
 801807a:	e018      	b.n	80180ae <GUI__CompactPixelIndices+0x158>
 801807c:	6882      	ldr	r2, [r0, #8]
 801807e:	2903      	cmp	r1, #3
 8018080:	f002 0203 	and.w	r2, r2, #3
 8018084:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8018088:	d102      	bne.n	8018090 <GUI__CompactPixelIndices+0x13a>
 801808a:	f100 020c 	add.w	r2, r0, #12
 801808e:	e00e      	b.n	80180ae <GUI__CompactPixelIndices+0x158>
 8018090:	f100 0210 	add.w	r2, r0, #16
 8018094:	68c0      	ldr	r0, [r0, #12]
 8018096:	f000 0003 	and.w	r0, r0, #3
 801809a:	4303      	orrs	r3, r0
 801809c:	3904      	subs	r1, #4
 801809e:	f804 3b01 	strb.w	r3, [r4], #1
 80180a2:	2900      	cmp	r1, #0
 80180a4:	f43f af65 	beq.w	8017f72 <GUI__CompactPixelIndices+0x1c>
 80180a8:	4610      	mov	r0, r2
 80180aa:	e7d7      	b.n	801805c <GUI__CompactPixelIndices+0x106>
 80180ac:	1d02      	adds	r2, r0, #4
 80180ae:	2100      	movs	r1, #0
 80180b0:	e7f5      	b.n	801809e <GUI__CompactPixelIndices+0x148>
 80180b2:	2300      	movs	r3, #0
 80180b4:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 80180b8:	54c2      	strb	r2, [r0, r3]
 80180ba:	3301      	adds	r3, #1
 80180bc:	428b      	cmp	r3, r1
 80180be:	d1f9      	bne.n	80180b4 <GUI__CompactPixelIndices+0x15e>
 80180c0:	e757      	b.n	8017f72 <GUI__CompactPixelIndices+0x1c>

080180c2 <GUI__ConvertColor2Index>:
 80180c2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80180c6:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80180ca:	681e      	ldr	r6, [r3, #0]
 80180cc:	f1b8 0f00 	cmp.w	r8, #0
 80180d0:	bf08      	it	eq
 80180d2:	4680      	moveq	r8, r0
 80180d4:	2a08      	cmp	r2, #8
 80180d6:	4604      	mov	r4, r0
 80180d8:	460d      	mov	r5, r1
 80180da:	dd05      	ble.n	80180e8 <GUI__ConvertColor2Index+0x26>
 80180dc:	2a10      	cmp	r2, #16
 80180de:	f340 80b6 	ble.w	801824e <GUI__ConvertColor2Index+0x18c>
 80180e2:	2000      	movs	r0, #0
 80180e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80180e8:	3a01      	subs	r2, #1
 80180ea:	2a07      	cmp	r2, #7
 80180ec:	f200 80a4 	bhi.w	8018238 <GUI__ConvertColor2Index+0x176>
 80180f0:	e8df f002 	tbb	[pc, r2]
 80180f4:	87a26111 	.word	0x87a26111
 80180f8:	92a2a2a2 	.word	0x92a2a2a2
 80180fc:	69e0      	ldr	r0, [r4, #28]
 80180fe:	47b0      	blx	r6
 8018100:	4338      	orrs	r0, r7
 8018102:	f104 0920 	add.w	r9, r4, #32
 8018106:	b2c7      	uxtb	r7, r0
 8018108:	3d08      	subs	r5, #8
 801810a:	f808 7b01 	strb.w	r7, [r8], #1
 801810e:	2d00      	cmp	r5, #0
 8018110:	f000 8092 	beq.w	8018238 <GUI__ConvertColor2Index+0x176>
 8018114:	464c      	mov	r4, r9
 8018116:	6820      	ldr	r0, [r4, #0]
 8018118:	47b0      	blx	r6
 801811a:	2d01      	cmp	r5, #1
 801811c:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 8018120:	b2c7      	uxtb	r7, r0
 8018122:	f000 808c 	beq.w	801823e <GUI__ConvertColor2Index+0x17c>
 8018126:	6860      	ldr	r0, [r4, #4]
 8018128:	47b0      	blx	r6
 801812a:	2d02      	cmp	r5, #2
 801812c:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 8018130:	b2c7      	uxtb	r7, r0
 8018132:	d102      	bne.n	801813a <GUI__ConvertColor2Index+0x78>
 8018134:	f104 0908 	add.w	r9, r4, #8
 8018138:	e083      	b.n	8018242 <GUI__ConvertColor2Index+0x180>
 801813a:	68a0      	ldr	r0, [r4, #8]
 801813c:	47b0      	blx	r6
 801813e:	2d03      	cmp	r5, #3
 8018140:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 8018144:	b2c7      	uxtb	r7, r0
 8018146:	d102      	bne.n	801814e <GUI__ConvertColor2Index+0x8c>
 8018148:	f104 090c 	add.w	r9, r4, #12
 801814c:	e079      	b.n	8018242 <GUI__ConvertColor2Index+0x180>
 801814e:	68e0      	ldr	r0, [r4, #12]
 8018150:	47b0      	blx	r6
 8018152:	2d04      	cmp	r5, #4
 8018154:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 8018158:	b2c7      	uxtb	r7, r0
 801815a:	d102      	bne.n	8018162 <GUI__ConvertColor2Index+0xa0>
 801815c:	f104 0910 	add.w	r9, r4, #16
 8018160:	e06f      	b.n	8018242 <GUI__ConvertColor2Index+0x180>
 8018162:	6920      	ldr	r0, [r4, #16]
 8018164:	47b0      	blx	r6
 8018166:	2d05      	cmp	r5, #5
 8018168:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 801816c:	b2c7      	uxtb	r7, r0
 801816e:	d102      	bne.n	8018176 <GUI__ConvertColor2Index+0xb4>
 8018170:	f104 0914 	add.w	r9, r4, #20
 8018174:	e065      	b.n	8018242 <GUI__ConvertColor2Index+0x180>
 8018176:	6960      	ldr	r0, [r4, #20]
 8018178:	47b0      	blx	r6
 801817a:	2d06      	cmp	r5, #6
 801817c:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 8018180:	b2c7      	uxtb	r7, r0
 8018182:	d102      	bne.n	801818a <GUI__ConvertColor2Index+0xc8>
 8018184:	f104 0918 	add.w	r9, r4, #24
 8018188:	e05b      	b.n	8018242 <GUI__ConvertColor2Index+0x180>
 801818a:	69a0      	ldr	r0, [r4, #24]
 801818c:	47b0      	blx	r6
 801818e:	2d07      	cmp	r5, #7
 8018190:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 8018194:	b2c7      	uxtb	r7, r0
 8018196:	d1b1      	bne.n	80180fc <GUI__ConvertColor2Index+0x3a>
 8018198:	f104 091c 	add.w	r9, r4, #28
 801819c:	e051      	b.n	8018242 <GUI__ConvertColor2Index+0x180>
 801819e:	68e0      	ldr	r0, [r4, #12]
 80181a0:	47b0      	blx	r6
 80181a2:	4338      	orrs	r0, r7
 80181a4:	f104 0910 	add.w	r9, r4, #16
 80181a8:	b2c7      	uxtb	r7, r0
 80181aa:	3d04      	subs	r5, #4
 80181ac:	f808 7b01 	strb.w	r7, [r8], #1
 80181b0:	2d00      	cmp	r5, #0
 80181b2:	d041      	beq.n	8018238 <GUI__ConvertColor2Index+0x176>
 80181b4:	464c      	mov	r4, r9
 80181b6:	6820      	ldr	r0, [r4, #0]
 80181b8:	47b0      	blx	r6
 80181ba:	2d01      	cmp	r5, #1
 80181bc:	ea4f 1080 	mov.w	r0, r0, lsl #6
 80181c0:	b2c7      	uxtb	r7, r0
 80181c2:	d040      	beq.n	8018246 <GUI__ConvertColor2Index+0x184>
 80181c4:	6860      	ldr	r0, [r4, #4]
 80181c6:	47b0      	blx	r6
 80181c8:	2d02      	cmp	r5, #2
 80181ca:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 80181ce:	b2c7      	uxtb	r7, r0
 80181d0:	d102      	bne.n	80181d8 <GUI__ConvertColor2Index+0x116>
 80181d2:	f104 0908 	add.w	r9, r4, #8
 80181d6:	e038      	b.n	801824a <GUI__ConvertColor2Index+0x188>
 80181d8:	68a0      	ldr	r0, [r4, #8]
 80181da:	47b0      	blx	r6
 80181dc:	2d03      	cmp	r5, #3
 80181de:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 80181e2:	b2c7      	uxtb	r7, r0
 80181e4:	d1db      	bne.n	801819e <GUI__ConvertColor2Index+0xdc>
 80181e6:	f104 090c 	add.w	r9, r4, #12
 80181ea:	e02e      	b.n	801824a <GUI__ConvertColor2Index+0x188>
 80181ec:	6860      	ldr	r0, [r4, #4]
 80181ee:	47b0      	blx	r6
 80181f0:	4338      	orrs	r0, r7
 80181f2:	f104 0908 	add.w	r9, r4, #8
 80181f6:	b2c7      	uxtb	r7, r0
 80181f8:	3d02      	subs	r5, #2
 80181fa:	f808 7b01 	strb.w	r7, [r8], #1
 80181fe:	b1dd      	cbz	r5, 8018238 <GUI__ConvertColor2Index+0x176>
 8018200:	464c      	mov	r4, r9
 8018202:	6820      	ldr	r0, [r4, #0]
 8018204:	47b0      	blx	r6
 8018206:	2d01      	cmp	r5, #1
 8018208:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801820c:	b2c7      	uxtb	r7, r0
 801820e:	d1ed      	bne.n	80181ec <GUI__ConvertColor2Index+0x12a>
 8018210:	f104 0904 	add.w	r9, r4, #4
 8018214:	2500      	movs	r5, #0
 8018216:	e7f0      	b.n	80181fa <GUI__ConvertColor2Index+0x138>
 8018218:	691f      	ldr	r7, [r3, #16]
 801821a:	b12f      	cbz	r7, 8018228 <GUI__ConvertColor2Index+0x166>
 801821c:	4620      	mov	r0, r4
 801821e:	4641      	mov	r1, r8
 8018220:	462a      	mov	r2, r5
 8018222:	2301      	movs	r3, #1
 8018224:	47b8      	blx	r7
 8018226:	e007      	b.n	8018238 <GUI__ConvertColor2Index+0x176>
 8018228:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 801822c:	47b0      	blx	r6
 801822e:	f808 0007 	strb.w	r0, [r8, r7]
 8018232:	3701      	adds	r7, #1
 8018234:	42bd      	cmp	r5, r7
 8018236:	d1f7      	bne.n	8018228 <GUI__ConvertColor2Index+0x166>
 8018238:	2001      	movs	r0, #1
 801823a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801823e:	f104 0904 	add.w	r9, r4, #4
 8018242:	2500      	movs	r5, #0
 8018244:	e761      	b.n	801810a <GUI__ConvertColor2Index+0x48>
 8018246:	f104 0904 	add.w	r9, r4, #4
 801824a:	2500      	movs	r5, #0
 801824c:	e7ae      	b.n	80181ac <GUI__ConvertColor2Index+0xea>
 801824e:	691f      	ldr	r7, [r3, #16]
 8018250:	b11f      	cbz	r7, 801825a <GUI__ConvertColor2Index+0x198>
 8018252:	4641      	mov	r1, r8
 8018254:	462a      	mov	r2, r5
 8018256:	2302      	movs	r3, #2
 8018258:	e7e4      	b.n	8018224 <GUI__ConvertColor2Index+0x162>
 801825a:	f854 0b04 	ldr.w	r0, [r4], #4
 801825e:	47b0      	blx	r6
 8018260:	3d01      	subs	r5, #1
 8018262:	f828 0b02 	strh.w	r0, [r8], #2
 8018266:	d1f8      	bne.n	801825a <GUI__ConvertColor2Index+0x198>
 8018268:	e7e6      	b.n	8018238 <GUI__ConvertColor2Index+0x176>

0801826a <GUI__CompactPixelIndicesEx>:
 801826a:	b513      	push	{r0, r1, r4, lr}
 801826c:	2400      	movs	r4, #0
 801826e:	9400      	str	r4, [sp, #0]
 8018270:	f7ff ff27 	bl	80180c2 <GUI__ConvertColor2Index>
 8018274:	b002      	add	sp, #8
 8018276:	bd10      	pop	{r4, pc}

08018278 <_GetCharCode>:
 8018278:	7800      	ldrb	r0, [r0, #0]
 801827a:	4770      	bx	lr

0801827c <_GetCharSize>:
 801827c:	2001      	movs	r0, #1
 801827e:	4770      	bx	lr

08018280 <_CalcSizeOfChar>:
 8018280:	2001      	movs	r0, #1
 8018282:	4770      	bx	lr

08018284 <_Encode>:
 8018284:	7001      	strb	r1, [r0, #0]
 8018286:	2001      	movs	r0, #1
 8018288:	4770      	bx	lr
	...

0801828c <GUI_TOUCH_GetLayer>:
 801828c:	4b01      	ldr	r3, [pc, #4]	; (8018294 <GUI_TOUCH_GetLayer+0x8>)
 801828e:	7a58      	ldrb	r0, [r3, #9]
 8018290:	4770      	bx	lr
 8018292:	bf00      	nop
 8018294:	200196ec 	.word	0x200196ec

08018298 <GUI_SetTextAlign>:
 8018298:	4b03      	ldr	r3, [pc, #12]	; (80182a8 <GUI_SetTextAlign+0x10>)
 801829a:	681b      	ldr	r3, [r3, #0]
 801829c:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 80182a0:	8598      	strh	r0, [r3, #44]	; 0x2c
 80182a2:	4610      	mov	r0, r2
 80182a4:	4770      	bx	lr
 80182a6:	bf00      	nop
 80182a8:	2000016c 	.word	0x2000016c

080182ac <GUI_SetOrg>:
 80182ac:	460a      	mov	r2, r1
 80182ae:	4908      	ldr	r1, [pc, #32]	; (80182d0 <GUI_SetOrg+0x24>)
 80182b0:	b510      	push	{r4, lr}
 80182b2:	8008      	strh	r0, [r1, #0]
 80182b4:	4907      	ldr	r1, [pc, #28]	; (80182d4 <GUI_SetOrg+0x28>)
 80182b6:	800a      	strh	r2, [r1, #0]
 80182b8:	4907      	ldr	r1, [pc, #28]	; (80182d8 <GUI_SetOrg+0x2c>)
 80182ba:	6809      	ldr	r1, [r1, #0]
 80182bc:	4603      	mov	r3, r0
 80182be:	7c48      	ldrb	r0, [r1, #17]
 80182c0:	4906      	ldr	r1, [pc, #24]	; (80182dc <GUI_SetOrg+0x30>)
 80182c2:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 80182c6:	68c1      	ldr	r1, [r0, #12]
 80182c8:	6a0c      	ldr	r4, [r1, #32]
 80182ca:	4619      	mov	r1, r3
 80182cc:	47a0      	blx	r4
 80182ce:	bd10      	pop	{r4, pc}
 80182d0:	20019c84 	.word	0x20019c84
 80182d4:	20019c78 	.word	0x20019c78
 80182d8:	2000016c 	.word	0x2000016c
 80182dc:	20019c9c 	.word	0x20019c9c

080182e0 <GUI_SetLineStyle>:
 80182e0:	4b02      	ldr	r3, [pc, #8]	; (80182ec <GUI_SetLineStyle+0xc>)
 80182e2:	681b      	ldr	r3, [r3, #0]
 80182e4:	7e9a      	ldrb	r2, [r3, #26]
 80182e6:	7698      	strb	r0, [r3, #26]
 80182e8:	4610      	mov	r0, r2
 80182ea:	4770      	bx	lr
 80182ec:	2000016c 	.word	0x2000016c

080182f0 <GUI_GetFontInfo>:
 80182f0:	b508      	push	{r3, lr}
 80182f2:	b910      	cbnz	r0, 80182fa <GUI_GetFontInfo+0xa>
 80182f4:	4b07      	ldr	r3, [pc, #28]	; (8018314 <GUI_GetFontInfo+0x24>)
 80182f6:	681b      	ldr	r3, [r3, #0]
 80182f8:	69d8      	ldr	r0, [r3, #28]
 80182fa:	f890 3020 	ldrb.w	r3, [r0, #32]
 80182fe:	708b      	strb	r3, [r1, #2]
 8018300:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8018304:	710b      	strb	r3, [r1, #4]
 8018306:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 801830a:	70cb      	strb	r3, [r1, #3]
 801830c:	6883      	ldr	r3, [r0, #8]
 801830e:	4798      	blx	r3
 8018310:	bd08      	pop	{r3, pc}
 8018312:	bf00      	nop
 8018314:	2000016c 	.word	0x2000016c

08018318 <GUI_GetBkColor>:
 8018318:	b508      	push	{r3, lr}
 801831a:	f001 f98f 	bl	801963c <LCD_GetBkColorIndex>
 801831e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8018322:	f7f7 bef9 	b.w	8010118 <LCD_Index2Color>

08018326 <GUI_GetColor>:
 8018326:	b508      	push	{r3, lr}
 8018328:	f001 f990 	bl	801964c <LCD_GetColorIndex>
 801832c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8018330:	f7f7 bef2 	b.w	8010118 <LCD_Index2Color>

08018334 <GUI_GetClientRect>:
 8018334:	b108      	cbz	r0, 801833a <GUI_GetClientRect+0x6>
 8018336:	f7f3 bf09 	b.w	800c14c <WM_GetClientRect>
 801833a:	4770      	bx	lr

0801833c <_SetLineColor>:
 801833c:	4b1e      	ldr	r3, [pc, #120]	; (80183b8 <_SetLineColor+0x7c>)
 801833e:	681b      	ldr	r3, [r3, #0]
 8018340:	7e9b      	ldrb	r3, [r3, #26]
 8018342:	3b01      	subs	r3, #1
 8018344:	2b03      	cmp	r3, #3
 8018346:	d832      	bhi.n	80183ae <_SetLineColor+0x72>
 8018348:	e8df f003 	tbb	[pc, r3]
 801834c:	221a0d02 	.word	0x221a0d02
 8018350:	4b1a      	ldr	r3, [pc, #104]	; (80183bc <_SetLineColor+0x80>)
 8018352:	3006      	adds	r0, #6
 8018354:	4003      	ands	r3, r0
 8018356:	2b00      	cmp	r3, #0
 8018358:	da03      	bge.n	8018362 <_SetLineColor+0x26>
 801835a:	3b01      	subs	r3, #1
 801835c:	f063 030f 	orn	r3, r3, #15
 8018360:	3301      	adds	r3, #1
 8018362:	2b0b      	cmp	r3, #11
 8018364:	e008      	b.n	8018378 <_SetLineColor+0x3c>
 8018366:	4b16      	ldr	r3, [pc, #88]	; (80183c0 <_SetLineColor+0x84>)
 8018368:	4003      	ands	r3, r0
 801836a:	2b00      	cmp	r3, #0
 801836c:	da03      	bge.n	8018376 <_SetLineColor+0x3a>
 801836e:	3b01      	subs	r3, #1
 8018370:	f063 0303 	orn	r3, r3, #3
 8018374:	3301      	adds	r3, #1
 8018376:	2b01      	cmp	r3, #1
 8018378:	bfcc      	ite	gt
 801837a:	2000      	movgt	r0, #0
 801837c:	2001      	movle	r0, #1
 801837e:	4770      	bx	lr
 8018380:	2314      	movs	r3, #20
 8018382:	fb90 f2f3 	sdiv	r2, r0, r3
 8018386:	fb03 0012 	mls	r0, r3, r2, r0
 801838a:	280b      	cmp	r0, #11
 801838c:	dc09      	bgt.n	80183a2 <_SetLineColor+0x66>
 801838e:	e010      	b.n	80183b2 <_SetLineColor+0x76>
 8018390:	2318      	movs	r3, #24
 8018392:	fb90 f2f3 	sdiv	r2, r0, r3
 8018396:	fb03 0012 	mls	r0, r3, r2, r0
 801839a:	280b      	cmp	r0, #11
 801839c:	dd09      	ble.n	80183b2 <_SetLineColor+0x76>
 801839e:	f020 0004 	bic.w	r0, r0, #4
 80183a2:	3810      	subs	r0, #16
 80183a4:	2801      	cmp	r0, #1
 80183a6:	bf8c      	ite	hi
 80183a8:	2000      	movhi	r0, #0
 80183aa:	2001      	movls	r0, #1
 80183ac:	4770      	bx	lr
 80183ae:	2000      	movs	r0, #0
 80183b0:	4770      	bx	lr
 80183b2:	2001      	movs	r0, #1
 80183b4:	4770      	bx	lr
 80183b6:	bf00      	nop
 80183b8:	2000016c 	.word	0x2000016c
 80183bc:	8000000f 	.word	0x8000000f
 80183c0:	80000003 	.word	0x80000003

080183c4 <GUI_sin>:
 80183c4:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80183c8:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80183cc:	bfc6      	itte	gt
 80183ce:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 80183d2:	2101      	movgt	r1, #1
 80183d4:	2100      	movle	r1, #0
 80183d6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80183da:	bfc8      	it	gt
 80183dc:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 80183e0:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 80183e4:	b510      	push	{r4, lr}
 80183e6:	1182      	asrs	r2, r0, #6
 80183e8:	4c0b      	ldr	r4, [pc, #44]	; (8018418 <GUI_sin+0x54>)
 80183ea:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 80183ee:	b29b      	uxth	r3, r3
 80183f0:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 80183f4:	2b40      	cmp	r3, #64	; 0x40
 80183f6:	fb00 f003 	mul.w	r0, r0, r3
 80183fa:	d008      	beq.n	801840e <GUI_sin+0x4a>
 80183fc:	2a10      	cmp	r2, #16
 80183fe:	d006      	beq.n	801840e <GUI_sin+0x4a>
 8018400:	3201      	adds	r2, #1
 8018402:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8018406:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 801840a:	fb03 0002 	mla	r0, r3, r2, r0
 801840e:	3020      	adds	r0, #32
 8018410:	0980      	lsrs	r0, r0, #6
 8018412:	b101      	cbz	r1, 8018416 <GUI_sin+0x52>
 8018414:	4240      	negs	r0, r0
 8018416:	bd10      	pop	{r4, pc}
 8018418:	0802145c 	.word	0x0802145c

0801841c <GUI_cos>:
 801841c:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8018420:	f7ff bfd0 	b.w	80183c4 <GUI_sin>

08018424 <GL_DrawLine1Ex>:
 8018424:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018428:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 801842c:	1a17      	subs	r7, r2, r0
 801842e:	1a5c      	subs	r4, r3, r1
 8018430:	ea54 0c07 	orrs.w	ip, r4, r7
 8018434:	4605      	mov	r5, r0
 8018436:	460e      	mov	r6, r1
 8018438:	f8d8 b000 	ldr.w	fp, [r8]
 801843c:	d104      	bne.n	8018448 <GL_DrawLine1Ex+0x24>
 801843e:	b003      	add	sp, #12
 8018440:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018444:	f001 be54 	b.w	801a0f0 <GL_DrawPoint>
 8018448:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 801844c:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 8018450:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8018454:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8018458:	4288      	cmp	r0, r1
 801845a:	db04      	blt.n	8018466 <GL_DrawLine1Ex+0x42>
 801845c:	4621      	mov	r1, r4
 801845e:	463c      	mov	r4, r7
 8018460:	460f      	mov	r7, r1
 8018462:	2100      	movs	r1, #0
 8018464:	e006      	b.n	8018474 <GL_DrawLine1Ex+0x50>
 8018466:	4611      	mov	r1, r2
 8018468:	461a      	mov	r2, r3
 801846a:	460b      	mov	r3, r1
 801846c:	4629      	mov	r1, r5
 801846e:	4635      	mov	r5, r6
 8018470:	460e      	mov	r6, r1
 8018472:	2101      	movs	r1, #1
 8018474:	9100      	str	r1, [sp, #0]
 8018476:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 801847a:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 801847e:	428c      	cmp	r4, r1
 8018480:	d008      	beq.n	8018494 <GL_DrawLine1Ex+0x70>
 8018482:	461e      	mov	r6, r3
 8018484:	462b      	mov	r3, r5
 8018486:	4264      	negs	r4, r4
 8018488:	4615      	mov	r5, r2
 801848a:	427f      	negs	r7, r7
 801848c:	461a      	mov	r2, r3
 801848e:	f04f 3aff 	mov.w	sl, #4294967295
 8018492:	e001      	b.n	8018498 <GL_DrawLine1Ex+0x74>
 8018494:	f04f 0a01 	mov.w	sl, #1
 8018498:	2f00      	cmp	r7, #0
 801849a:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80185e4 <GL_DrawLine1Ex+0x1c0>
 801849e:	d13e      	bne.n	801851e <GL_DrawLine1Ex+0xfa>
 80184a0:	9b00      	ldr	r3, [sp, #0]
 80184a2:	b1d3      	cbz	r3, 80184da <GL_DrawLine1Ex+0xb6>
 80184a4:	f8d9 3000 	ldr.w	r3, [r9]
 80184a8:	7e9b      	ldrb	r3, [r3, #26]
 80184aa:	b98b      	cbnz	r3, 80184d0 <GL_DrawLine1Ex+0xac>
 80184ac:	4630      	mov	r0, r6
 80184ae:	4629      	mov	r1, r5
 80184b0:	b003      	add	sp, #12
 80184b2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184b6:	f7f7 bb8b 	b.w	800fbd0 <LCD_DrawVLine>
 80184ba:	f7ff ff3f 	bl	801833c <_SetLineColor>
 80184be:	b930      	cbnz	r0, 80184ce <GL_DrawLine1Ex+0xaa>
 80184c0:	f8d9 3000 	ldr.w	r3, [r9]
 80184c4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80184c6:	4630      	mov	r0, r6
 80184c8:	685b      	ldr	r3, [r3, #4]
 80184ca:	1979      	adds	r1, r7, r5
 80184cc:	4798      	blx	r3
 80184ce:	3701      	adds	r7, #1
 80184d0:	42a7      	cmp	r7, r4
 80184d2:	eb07 000b 	add.w	r0, r7, fp
 80184d6:	ddf0      	ble.n	80184ba <GL_DrawLine1Ex+0x96>
 80184d8:	e01d      	b.n	8018516 <GL_DrawLine1Ex+0xf2>
 80184da:	f8d9 3000 	ldr.w	r3, [r9]
 80184de:	7e99      	ldrb	r1, [r3, #26]
 80184e0:	b111      	cbz	r1, 80184e8 <GL_DrawLine1Ex+0xc4>
 80184e2:	f8dd a000 	ldr.w	sl, [sp]
 80184e6:	e012      	b.n	801850e <GL_DrawLine1Ex+0xea>
 80184e8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80184ea:	4628      	mov	r0, r5
 80184ec:	681b      	ldr	r3, [r3, #0]
 80184ee:	4631      	mov	r1, r6
 80184f0:	4798      	blx	r3
 80184f2:	e074      	b.n	80185de <GL_DrawLine1Ex+0x1ba>
 80184f4:	f7ff ff22 	bl	801833c <_SetLineColor>
 80184f8:	b938      	cbnz	r0, 801850a <GL_DrawLine1Ex+0xe6>
 80184fa:	f8d9 3000 	ldr.w	r3, [r9]
 80184fe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8018500:	eb0a 0005 	add.w	r0, sl, r5
 8018504:	685b      	ldr	r3, [r3, #4]
 8018506:	4631      	mov	r1, r6
 8018508:	4798      	blx	r3
 801850a:	f10a 0a01 	add.w	sl, sl, #1
 801850e:	45a2      	cmp	sl, r4
 8018510:	eb0a 000b 	add.w	r0, sl, fp
 8018514:	ddee      	ble.n	80184f4 <GL_DrawLine1Ex+0xd0>
 8018516:	3801      	subs	r0, #1
 8018518:	f8c8 0000 	str.w	r0, [r8]
 801851c:	e05f      	b.n	80185de <GL_DrawLine1Ex+0x1ba>
 801851e:	f8d9 1000 	ldr.w	r1, [r9]
 8018522:	f04f 0202 	mov.w	r2, #2
 8018526:	7e89      	ldrb	r1, [r1, #26]
 8018528:	fb94 f2f2 	sdiv	r2, r4, r2
 801852c:	bfb8      	it	lt
 801852e:	4252      	neglt	r2, r2
 8018530:	b9d9      	cbnz	r1, 801856a <GL_DrawLine1Ex+0x146>
 8018532:	4693      	mov	fp, r2
 8018534:	46a8      	mov	r8, r5
 8018536:	ebc5 0308 	rsb	r3, r5, r8
 801853a:	42a3      	cmp	r3, r4
 801853c:	dc4f      	bgt.n	80185de <GL_DrawLine1Ex+0x1ba>
 801853e:	9b00      	ldr	r3, [sp, #0]
 8018540:	fb9b f1f4 	sdiv	r1, fp, r4
 8018544:	4431      	add	r1, r6
 8018546:	b92b      	cbnz	r3, 8018554 <GL_DrawLine1Ex+0x130>
 8018548:	f8d9 3000 	ldr.w	r3, [r9]
 801854c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801854e:	4640      	mov	r0, r8
 8018550:	685b      	ldr	r3, [r3, #4]
 8018552:	e005      	b.n	8018560 <GL_DrawLine1Ex+0x13c>
 8018554:	f8d9 3000 	ldr.w	r3, [r9]
 8018558:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801855a:	685b      	ldr	r3, [r3, #4]
 801855c:	4608      	mov	r0, r1
 801855e:	4641      	mov	r1, r8
 8018560:	4798      	blx	r3
 8018562:	f108 0801 	add.w	r8, r8, #1
 8018566:	44bb      	add	fp, r7
 8018568:	e7e5      	b.n	8018536 <GL_DrawLine1Ex+0x112>
 801856a:	f1ba 3fff 	cmp.w	sl, #4294967295
 801856e:	bf04      	itt	eq
 8018570:	eb04 010b 	addeq.w	r1, r4, fp
 8018574:	f8c8 1000 	streq.w	r1, [r8]
 8018578:	9201      	str	r2, [sp, #4]
 801857a:	46ab      	mov	fp, r5
 801857c:	ebc5 010b 	rsb	r1, r5, fp
 8018580:	42a1      	cmp	r1, r4
 8018582:	f8d8 0000 	ldr.w	r0, [r8]
 8018586:	dc1e      	bgt.n	80185c6 <GL_DrawLine1Ex+0x1a2>
 8018588:	4450      	add	r0, sl
 801858a:	f8c8 0000 	str.w	r0, [r8]
 801858e:	f7ff fed5 	bl	801833c <_SetLineColor>
 8018592:	b980      	cbnz	r0, 80185b6 <GL_DrawLine1Ex+0x192>
 8018594:	f8dd c004 	ldr.w	ip, [sp, #4]
 8018598:	f8d9 0000 	ldr.w	r0, [r9]
 801859c:	9b00      	ldr	r3, [sp, #0]
 801859e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80185a0:	fb9c f1f4 	sdiv	r1, ip, r4
 80185a4:	4431      	add	r1, r6
 80185a6:	b913      	cbnz	r3, 80185ae <GL_DrawLine1Ex+0x18a>
 80185a8:	6843      	ldr	r3, [r0, #4]
 80185aa:	4658      	mov	r0, fp
 80185ac:	e002      	b.n	80185b4 <GL_DrawLine1Ex+0x190>
 80185ae:	6843      	ldr	r3, [r0, #4]
 80185b0:	4608      	mov	r0, r1
 80185b2:	4659      	mov	r1, fp
 80185b4:	4798      	blx	r3
 80185b6:	f8dd c004 	ldr.w	ip, [sp, #4]
 80185ba:	44bc      	add	ip, r7
 80185bc:	f10b 0b01 	add.w	fp, fp, #1
 80185c0:	f8cd c004 	str.w	ip, [sp, #4]
 80185c4:	e7da      	b.n	801857c <GL_DrawLine1Ex+0x158>
 80185c6:	f1ba 3fff 	cmp.w	sl, #4294967295
 80185ca:	bf04      	itt	eq
 80185cc:	1824      	addeq	r4, r4, r0
 80185ce:	f8c8 4000 	streq.w	r4, [r8]
 80185d2:	f8d8 2000 	ldr.w	r2, [r8]
 80185d6:	ebca 0302 	rsb	r3, sl, r2
 80185da:	f8c8 3000 	str.w	r3, [r8]
 80185de:	b003      	add	sp, #12
 80185e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185e4:	2000016c 	.word	0x2000016c

080185e8 <GL_DrawLineEx>:
 80185e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185ec:	4d67      	ldr	r5, [pc, #412]	; (801878c <GL_DrawLineEx+0x1a4>)
 80185ee:	682c      	ldr	r4, [r5, #0]
 80185f0:	f894 b018 	ldrb.w	fp, [r4, #24]
 80185f4:	f1bb 0f01 	cmp.w	fp, #1
 80185f8:	b087      	sub	sp, #28
 80185fa:	4681      	mov	r9, r0
 80185fc:	4688      	mov	r8, r1
 80185fe:	4617      	mov	r7, r2
 8018600:	461e      	mov	r6, r3
 8018602:	46aa      	mov	sl, r5
 8018604:	d104      	bne.n	8018610 <GL_DrawLineEx+0x28>
 8018606:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018608:	9400      	str	r4, [sp, #0]
 801860a:	f7ff ff0b 	bl	8018424 <GL_DrawLine1Ex>
 801860e:	e0ba      	b.n	8018786 <GL_DrawLineEx+0x19e>
 8018610:	1a84      	subs	r4, r0, r2
 8018612:	1acd      	subs	r5, r1, r3
 8018614:	ea54 0305 	orrs.w	r3, r4, r5
 8018618:	f000 80b5 	beq.w	8018786 <GL_DrawLineEx+0x19e>
 801861c:	2c00      	cmp	r4, #0
 801861e:	bfba      	itte	lt
 8018620:	4264      	neglt	r4, r4
 8018622:	2301      	movlt	r3, #1
 8018624:	2300      	movge	r3, #0
 8018626:	2d00      	cmp	r5, #0
 8018628:	bfbc      	itt	lt
 801862a:	426d      	neglt	r5, r5
 801862c:	f043 0302 	orrlt.w	r3, r3, #2
 8018630:	42a5      	cmp	r5, r4
 8018632:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018636:	dd04      	ble.n	8018642 <GL_DrawLineEx+0x5a>
 8018638:	4622      	mov	r2, r4
 801863a:	f043 0304 	orr.w	r3, r3, #4
 801863e:	462c      	mov	r4, r5
 8018640:	4615      	mov	r5, r2
 8018642:	2202      	movs	r2, #2
 8018644:	fb94 f2f2 	sdiv	r2, r4, r2
 8018648:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 801864c:	fb95 f4f4 	sdiv	r4, r5, r4
 8018650:	11a1      	asrs	r1, r4, #6
 8018652:	4a4f      	ldr	r2, [pc, #316]	; (8018790 <GL_DrawLineEx+0x1a8>)
 8018654:	f3c4 0483 	ubfx	r4, r4, #2, #4
 8018658:	f1c4 0510 	rsb	r5, r4, #16
 801865c:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 8018660:	2d10      	cmp	r5, #16
 8018662:	fb05 f000 	mul.w	r0, r5, r0
 8018666:	d004      	beq.n	8018672 <GL_DrawLineEx+0x8a>
 8018668:	3101      	adds	r1, #1
 801866a:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 801866e:	fb04 0002 	mla	r0, r4, r2, r0
 8018672:	2210      	movs	r2, #16
 8018674:	3008      	adds	r0, #8
 8018676:	fb90 f0f2 	sdiv	r0, r0, r2
 801867a:	0759      	lsls	r1, r3, #29
 801867c:	bf48      	it	mi
 801867e:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 8018682:	07da      	lsls	r2, r3, #31
 8018684:	bf48      	it	mi
 8018686:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 801868a:	079b      	lsls	r3, r3, #30
 801868c:	bf48      	it	mi
 801868e:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 8018692:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 8018696:	4628      	mov	r0, r5
 8018698:	f7ff fec0 	bl	801841c <GUI_cos>
 801869c:	fb00 f40b 	mul.w	r4, r0, fp
 80186a0:	4628      	mov	r0, r5
 80186a2:	f7ff fe8f 	bl	80183c4 <GUI_sin>
 80186a6:	2c00      	cmp	r4, #0
 80186a8:	fb00 f00b 	mul.w	r0, r0, fp
 80186ac:	da04      	bge.n	80186b8 <GL_DrawLineEx+0xd0>
 80186ae:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 80186b2:	129b      	asrs	r3, r3, #10
 80186b4:	425b      	negs	r3, r3
 80186b6:	e002      	b.n	80186be <GL_DrawLineEx+0xd6>
 80186b8:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80186bc:	129b      	asrs	r3, r3, #10
 80186be:	2800      	cmp	r0, #0
 80186c0:	da06      	bge.n	80186d0 <GL_DrawLineEx+0xe8>
 80186c2:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 80186c6:	ea4f 2bab 	mov.w	fp, fp, asr #10
 80186ca:	f1cb 0b00 	rsb	fp, fp, #0
 80186ce:	e003      	b.n	80186d8 <GL_DrawLineEx+0xf0>
 80186d0:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 80186d4:	ea4f 2bab 	mov.w	fp, fp, asr #10
 80186d8:	2b00      	cmp	r3, #0
 80186da:	dd03      	ble.n	80186e4 <GL_DrawLineEx+0xfc>
 80186dc:	1c58      	adds	r0, r3, #1
 80186de:	1040      	asrs	r0, r0, #1
 80186e0:	105b      	asrs	r3, r3, #1
 80186e2:	e005      	b.n	80186f0 <GL_DrawLineEx+0x108>
 80186e4:	2202      	movs	r2, #2
 80186e6:	fb93 f0f2 	sdiv	r0, r3, r2
 80186ea:	3b01      	subs	r3, #1
 80186ec:	fb93 f3f2 	sdiv	r3, r3, r2
 80186f0:	f1bb 0f00 	cmp.w	fp, #0
 80186f4:	dd05      	ble.n	8018702 <GL_DrawLineEx+0x11a>
 80186f6:	f10b 0201 	add.w	r2, fp, #1
 80186fa:	1052      	asrs	r2, r2, #1
 80186fc:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 8018700:	e006      	b.n	8018710 <GL_DrawLineEx+0x128>
 8018702:	2102      	movs	r1, #2
 8018704:	fb9b f2f1 	sdiv	r2, fp, r1
 8018708:	f10b 3bff 	add.w	fp, fp, #4294967295
 801870c:	fb9b fbf1 	sdiv	fp, fp, r1
 8018710:	b280      	uxth	r0, r0
 8018712:	fa1f f489 	uxth.w	r4, r9
 8018716:	1901      	adds	r1, r0, r4
 8018718:	b292      	uxth	r2, r2
 801871a:	f8ad 1008 	strh.w	r1, [sp, #8]
 801871e:	fa1f fb8b 	uxth.w	fp, fp
 8018722:	fa1f f188 	uxth.w	r1, r8
 8018726:	1855      	adds	r5, r2, r1
 8018728:	ebcb 0101 	rsb	r1, fp, r1
 801872c:	b29b      	uxth	r3, r3
 801872e:	f8ad 100e 	strh.w	r1, [sp, #14]
 8018732:	b2b9      	uxth	r1, r7
 8018734:	1ae4      	subs	r4, r4, r3
 8018736:	1acb      	subs	r3, r1, r3
 8018738:	f8ad 3010 	strh.w	r3, [sp, #16]
 801873c:	b2b3      	uxth	r3, r6
 801873e:	4401      	add	r1, r0
 8018740:	ebcb 0b03 	rsb	fp, fp, r3
 8018744:	4413      	add	r3, r2
 8018746:	2200      	movs	r2, #0
 8018748:	f8ad 1014 	strh.w	r1, [sp, #20]
 801874c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018750:	a802      	add	r0, sp, #8
 8018752:	4613      	mov	r3, r2
 8018754:	2104      	movs	r1, #4
 8018756:	f8ad 500a 	strh.w	r5, [sp, #10]
 801875a:	f8ad 400c 	strh.w	r4, [sp, #12]
 801875e:	f8ad b012 	strh.w	fp, [sp, #18]
 8018762:	f001 fbe3 	bl	8019f2c <GL_FillPolygon>
 8018766:	f8da 3000 	ldr.w	r3, [sl]
 801876a:	7e5b      	ldrb	r3, [r3, #25]
 801876c:	b91b      	cbnz	r3, 8018776 <GL_DrawLineEx+0x18e>
 801876e:	4648      	mov	r0, r9
 8018770:	4641      	mov	r1, r8
 8018772:	f001 fcbd 	bl	801a0f0 <GL_DrawPoint>
 8018776:	f8da 3000 	ldr.w	r3, [sl]
 801877a:	7e5b      	ldrb	r3, [r3, #25]
 801877c:	b91b      	cbnz	r3, 8018786 <GL_DrawLineEx+0x19e>
 801877e:	4638      	mov	r0, r7
 8018780:	4631      	mov	r1, r6
 8018782:	f001 fcb5 	bl	801a0f0 <GL_DrawPoint>
 8018786:	b007      	add	sp, #28
 8018788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801878c:	2000016c 	.word	0x2000016c
 8018790:	0802147e 	.word	0x0802147e

08018794 <GL_DrawLine>:
 8018794:	b530      	push	{r4, r5, lr}
 8018796:	b085      	sub	sp, #20
 8018798:	ac04      	add	r4, sp, #16
 801879a:	2500      	movs	r5, #0
 801879c:	f844 5d04 	str.w	r5, [r4, #-4]!
 80187a0:	9400      	str	r4, [sp, #0]
 80187a2:	f7ff ff21 	bl	80185e8 <GL_DrawLineEx>
 80187a6:	b005      	add	sp, #20
 80187a8:	bd30      	pop	{r4, r5, pc}
	...

080187ac <GUI_DrawLine>:
 80187ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80187b0:	461e      	mov	r6, r3
 80187b2:	4b0c      	ldr	r3, [pc, #48]	; (80187e4 <GUI_DrawLine+0x38>)
 80187b4:	681c      	ldr	r4, [r3, #0]
 80187b6:	4681      	mov	r9, r0
 80187b8:	2000      	movs	r0, #0
 80187ba:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80187bc:	6d24      	ldr	r4, [r4, #80]	; 0x50
 80187be:	4688      	mov	r8, r1
 80187c0:	4617      	mov	r7, r2
 80187c2:	f7f4 fc5f 	bl	800d084 <WM__InitIVRSearch>
 80187c6:	b150      	cbz	r0, 80187de <GUI_DrawLine+0x32>
 80187c8:	eb09 0005 	add.w	r0, r9, r5
 80187cc:	eb08 0104 	add.w	r1, r8, r4
 80187d0:	197a      	adds	r2, r7, r5
 80187d2:	1933      	adds	r3, r6, r4
 80187d4:	f7ff ffde 	bl	8018794 <GL_DrawLine>
 80187d8:	f7f4 fb92 	bl	800cf00 <WM__GetNextIVR>
 80187dc:	e7f3      	b.n	80187c6 <GUI_DrawLine+0x1a>
 80187de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80187e2:	bf00      	nop
 80187e4:	2000016c 	.word	0x2000016c

080187e8 <_DrawGradient>:
 80187e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187ec:	b091      	sub	sp, #68	; 0x44
 80187ee:	4605      	mov	r5, r0
 80187f0:	4689      	mov	r9, r1
 80187f2:	981c      	ldr	r0, [sp, #112]	; 0x70
 80187f4:	991d      	ldr	r1, [sp, #116]	; 0x74
 80187f6:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
 80187fa:	9002      	str	r0, [sp, #8]
 80187fc:	4614      	mov	r4, r2
 80187fe:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8018800:	9200      	str	r2, [sp, #0]
 8018802:	461e      	mov	r6, r3
 8018804:	9101      	str	r1, [sp, #4]
 8018806:	f7ff fd8e 	bl	8018326 <GUI_GetColor>
 801880a:	9a00      	ldr	r2, [sp, #0]
 801880c:	900b      	str	r0, [sp, #44]	; 0x2c
 801880e:	4542      	cmp	r2, r8
 8018810:	d109      	bne.n	8018826 <_DrawGradient+0x3e>
 8018812:	4610      	mov	r0, r2
 8018814:	f7f7 fcd0 	bl	80101b8 <LCD_SetColor>
 8018818:	9a01      	ldr	r2, [sp, #4]
 801881a:	b112      	cbz	r2, 8018822 <_DrawGradient+0x3a>
 801881c:	4628      	mov	r0, r5
 801881e:	4649      	mov	r1, r9
 8018820:	e0b5      	b.n	801898e <_DrawGradient+0x1a6>
 8018822:	4648      	mov	r0, r9
 8018824:	e0b9      	b.n	801899a <_DrawGradient+0x1b2>
 8018826:	fa5f fc82 	uxtb.w	ip, r2
 801882a:	f8cd c018 	str.w	ip, [sp, #24]
 801882e:	f3c2 2c07 	ubfx	ip, r2, #8, #8
 8018832:	f8cd c01c 	str.w	ip, [sp, #28]
 8018836:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801883a:	f8cd c020 	str.w	ip, [sp, #32]
 801883e:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8018842:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 8018846:	f8dd c018 	ldr.w	ip, [sp, #24]
 801884a:	fa5f f388 	uxtb.w	r3, r8
 801884e:	ebcc 0303 	rsb	r3, ip, r3
 8018852:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8018856:	930d      	str	r3, [sp, #52]	; 0x34
 8018858:	f3c8 2307 	ubfx	r3, r8, #8, #8
 801885c:	ebcc 0303 	rsb	r3, ip, r3
 8018860:	f8dd c020 	ldr.w	ip, [sp, #32]
 8018864:	930c      	str	r3, [sp, #48]	; 0x30
 8018866:	f3c8 4307 	ubfx	r3, r8, #16, #8
 801886a:	ebcc 0303 	rsb	r3, ip, r3
 801886e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8018872:	930e      	str	r3, [sp, #56]	; 0x38
 8018874:	ebcc 6818 	rsb	r8, ip, r8, lsr #24
 8018878:	ebb6 0709 	subs.w	r7, r6, r9
 801887c:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8018880:	f04f 0800 	mov.w	r8, #0
 8018884:	bf08      	it	eq
 8018886:	2701      	moveq	r7, #1
 8018888:	f109 33ff 	add.w	r3, r9, #4294967295
 801888c:	f8cd 8010 	str.w	r8, [sp, #16]
 8018890:	f8cd 800c 	str.w	r8, [sp, #12]
 8018894:	f8cd 8014 	str.w	r8, [sp, #20]
 8018898:	f04f 0a01 	mov.w	sl, #1
 801889c:	f103 0b01 	add.w	fp, r3, #1
 80188a0:	45b3      	cmp	fp, r6
 80188a2:	dc68      	bgt.n	8018976 <_DrawGradient+0x18e>
 80188a4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 80188a8:	fb98 f1f7 	sdiv	r1, r8, r7
 80188ac:	4461      	add	r1, ip
 80188ae:	f8dd c010 	ldr.w	ip, [sp, #16]
 80188b2:	fb9c f0f7 	sdiv	r0, ip, r7
 80188b6:	f8dd c020 	ldr.w	ip, [sp, #32]
 80188ba:	4460      	add	r0, ip
 80188bc:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80188c0:	fb9c fef7 	sdiv	lr, ip, r7
 80188c4:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80188c8:	b2c0      	uxtb	r0, r0
 80188ca:	44e6      	add	lr, ip
 80188cc:	f8dd c014 	ldr.w	ip, [sp, #20]
 80188d0:	0400      	lsls	r0, r0, #16
 80188d2:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
 80188d6:	fb9c f1f7 	sdiv	r1, ip, r7
 80188da:	f8dd c018 	ldr.w	ip, [sp, #24]
 80188de:	4461      	add	r1, ip
 80188e0:	fa5f fe8e 	uxtb.w	lr, lr
 80188e4:	b2c9      	uxtb	r1, r1
 80188e6:	ea41 210e 	orr.w	r1, r1, lr, lsl #8
 80188ea:	4301      	orrs	r1, r0
 80188ec:	45cb      	cmp	fp, r9
 80188ee:	910a      	str	r1, [sp, #40]	; 0x28
 80188f0:	dd26      	ble.n	8018940 <_DrawGradient+0x158>
 80188f2:	4291      	cmp	r1, r2
 80188f4:	d102      	bne.n	80188fc <_DrawGradient+0x114>
 80188f6:	f10a 0a01 	add.w	sl, sl, #1
 80188fa:	e021      	b.n	8018940 <_DrawGradient+0x158>
 80188fc:	4610      	mov	r0, r2
 80188fe:	9300      	str	r3, [sp, #0]
 8018900:	f7f7 fc5a 	bl	80101b8 <LCD_SetColor>
 8018904:	f1ba 0f01 	cmp.w	sl, #1
 8018908:	9b00      	ldr	r3, [sp, #0]
 801890a:	d00f      	beq.n	801892c <_DrawGradient+0x144>
 801890c:	9801      	ldr	r0, [sp, #4]
 801890e:	ebca 010b 	rsb	r1, sl, fp
 8018912:	b110      	cbz	r0, 801891a <_DrawGradient+0x132>
 8018914:	4628      	mov	r0, r5
 8018916:	4622      	mov	r2, r4
 8018918:	e003      	b.n	8018922 <_DrawGradient+0x13a>
 801891a:	4608      	mov	r0, r1
 801891c:	461a      	mov	r2, r3
 801891e:	4629      	mov	r1, r5
 8018920:	4623      	mov	r3, r4
 8018922:	f7f7 f97b 	bl	800fc1c <LCD_FillRect>
 8018926:	f04f 0a01 	mov.w	sl, #1
 801892a:	e009      	b.n	8018940 <_DrawGradient+0x158>
 801892c:	9901      	ldr	r1, [sp, #4]
 801892e:	b111      	cbz	r1, 8018936 <_DrawGradient+0x14e>
 8018930:	4628      	mov	r0, r5
 8018932:	4619      	mov	r1, r3
 8018934:	e001      	b.n	801893a <_DrawGradient+0x152>
 8018936:	4618      	mov	r0, r3
 8018938:	4629      	mov	r1, r5
 801893a:	4622      	mov	r2, r4
 801893c:	9b02      	ldr	r3, [sp, #8]
 801893e:	4798      	blx	r3
 8018940:	f8dd c014 	ldr.w	ip, [sp, #20]
 8018944:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8018948:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801894a:	44f4      	add	ip, lr
 801894c:	f8cd c014 	str.w	ip, [sp, #20]
 8018950:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8018954:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8018958:	44f4      	add	ip, lr
 801895a:	f8cd c00c 	str.w	ip, [sp, #12]
 801895e:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 8018962:	f8dd c010 	ldr.w	ip, [sp, #16]
 8018966:	44f4      	add	ip, lr
 8018968:	f8cd c010 	str.w	ip, [sp, #16]
 801896c:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8018970:	465b      	mov	r3, fp
 8018972:	44e0      	add	r8, ip
 8018974:	e792      	b.n	801889c <_DrawGradient+0xb4>
 8018976:	4610      	mov	r0, r2
 8018978:	f7f7 fc1e 	bl	80101b8 <LCD_SetColor>
 801897c:	f1ba 0f01 	cmp.w	sl, #1
 8018980:	d00f      	beq.n	80189a2 <_DrawGradient+0x1ba>
 8018982:	9801      	ldr	r0, [sp, #4]
 8018984:	ebca 0106 	rsb	r1, sl, r6
 8018988:	b130      	cbz	r0, 8018998 <_DrawGradient+0x1b0>
 801898a:	4628      	mov	r0, r5
 801898c:	3101      	adds	r1, #1
 801898e:	4622      	mov	r2, r4
 8018990:	4633      	mov	r3, r6
 8018992:	f7f7 f943 	bl	800fc1c <LCD_FillRect>
 8018996:	e00e      	b.n	80189b6 <_DrawGradient+0x1ce>
 8018998:	1c48      	adds	r0, r1, #1
 801899a:	4629      	mov	r1, r5
 801899c:	4632      	mov	r2, r6
 801899e:	4623      	mov	r3, r4
 80189a0:	e7f7      	b.n	8018992 <_DrawGradient+0x1aa>
 80189a2:	9901      	ldr	r1, [sp, #4]
 80189a4:	b111      	cbz	r1, 80189ac <_DrawGradient+0x1c4>
 80189a6:	4628      	mov	r0, r5
 80189a8:	4631      	mov	r1, r6
 80189aa:	e001      	b.n	80189b0 <_DrawGradient+0x1c8>
 80189ac:	4630      	mov	r0, r6
 80189ae:	4629      	mov	r1, r5
 80189b0:	4622      	mov	r2, r4
 80189b2:	9b02      	ldr	r3, [sp, #8]
 80189b4:	4798      	blx	r3
 80189b6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80189b8:	b011      	add	sp, #68	; 0x44
 80189ba:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189be:	f7f7 bbfb 	b.w	80101b8 <LCD_SetColor>
	...

080189c4 <GUI_DrawGradientV>:
 80189c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80189c8:	4c15      	ldr	r4, [pc, #84]	; (8018a20 <GUI_DrawGradientV+0x5c>)
 80189ca:	6824      	ldr	r4, [r4, #0]
 80189cc:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80189ce:	6d24      	ldr	r4, [r4, #80]	; 0x50
 80189d0:	b087      	sub	sp, #28
 80189d2:	eb00 0905 	add.w	r9, r0, r5
 80189d6:	eb01 0804 	add.w	r8, r1, r4
 80189da:	4415      	add	r5, r2
 80189dc:	441c      	add	r4, r3
 80189de:	a804      	add	r0, sp, #16
 80189e0:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80189e2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80189e4:	f8ad 9010 	strh.w	r9, [sp, #16]
 80189e8:	f8ad 5014 	strh.w	r5, [sp, #20]
 80189ec:	f8ad 8012 	strh.w	r8, [sp, #18]
 80189f0:	f8ad 4016 	strh.w	r4, [sp, #22]
 80189f4:	f7f4 fb46 	bl	800d084 <WM__InitIVRSearch>
 80189f8:	b170      	cbz	r0, 8018a18 <GUI_DrawGradientV+0x54>
 80189fa:	4b0a      	ldr	r3, [pc, #40]	; (8018a24 <GUI_DrawGradientV+0x60>)
 80189fc:	9302      	str	r3, [sp, #8]
 80189fe:	2301      	movs	r3, #1
 8018a00:	9303      	str	r3, [sp, #12]
 8018a02:	4648      	mov	r0, r9
 8018a04:	4641      	mov	r1, r8
 8018a06:	462a      	mov	r2, r5
 8018a08:	4623      	mov	r3, r4
 8018a0a:	9700      	str	r7, [sp, #0]
 8018a0c:	9601      	str	r6, [sp, #4]
 8018a0e:	f7ff feeb 	bl	80187e8 <_DrawGradient>
 8018a12:	f7f4 fa75 	bl	800cf00 <WM__GetNextIVR>
 8018a16:	e7ef      	b.n	80189f8 <GUI_DrawGradientV+0x34>
 8018a18:	b007      	add	sp, #28
 8018a1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018a1e:	bf00      	nop
 8018a20:	2000016c 	.word	0x2000016c
 8018a24:	0800fb85 	.word	0x0800fb85

08018a28 <GUI_DrawGradientH>:
 8018a28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018a2c:	4c15      	ldr	r4, [pc, #84]	; (8018a84 <GUI_DrawGradientH+0x5c>)
 8018a2e:	6825      	ldr	r5, [r4, #0]
 8018a30:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 8018a32:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 8018a34:	b087      	sub	sp, #28
 8018a36:	eb00 0804 	add.w	r8, r0, r4
 8018a3a:	eb01 0905 	add.w	r9, r1, r5
 8018a3e:	4414      	add	r4, r2
 8018a40:	441d      	add	r5, r3
 8018a42:	a804      	add	r0, sp, #16
 8018a44:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8018a46:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018a48:	f8ad 8010 	strh.w	r8, [sp, #16]
 8018a4c:	f8ad 4014 	strh.w	r4, [sp, #20]
 8018a50:	f8ad 9012 	strh.w	r9, [sp, #18]
 8018a54:	f8ad 5016 	strh.w	r5, [sp, #22]
 8018a58:	f7f4 fb14 	bl	800d084 <WM__InitIVRSearch>
 8018a5c:	b170      	cbz	r0, 8018a7c <GUI_DrawGradientH+0x54>
 8018a5e:	4b0a      	ldr	r3, [pc, #40]	; (8018a88 <GUI_DrawGradientH+0x60>)
 8018a60:	9302      	str	r3, [sp, #8]
 8018a62:	2300      	movs	r3, #0
 8018a64:	9303      	str	r3, [sp, #12]
 8018a66:	4648      	mov	r0, r9
 8018a68:	4641      	mov	r1, r8
 8018a6a:	462a      	mov	r2, r5
 8018a6c:	4623      	mov	r3, r4
 8018a6e:	9700      	str	r7, [sp, #0]
 8018a70:	9601      	str	r6, [sp, #4]
 8018a72:	f7ff feb9 	bl	80187e8 <_DrawGradient>
 8018a76:	f7f4 fa43 	bl	800cf00 <WM__GetNextIVR>
 8018a7a:	e7ef      	b.n	8018a5c <GUI_DrawGradientH+0x34>
 8018a7c:	b007      	add	sp, #28
 8018a7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018a82:	bf00      	nop
 8018a84:	2000016c 	.word	0x2000016c
 8018a88:	0800fbd1 	.word	0x0800fbd1

08018a8c <GUI_DispStringInRectEx>:
 8018a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a90:	b085      	sub	sp, #20
 8018a92:	4681      	mov	r9, r0
 8018a94:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018a96:	460c      	mov	r4, r1
 8018a98:	4690      	mov	r8, r2
 8018a9a:	461f      	mov	r7, r3
 8018a9c:	b915      	cbnz	r5, 8018aa4 <GUI_DispStringInRectEx+0x18>
 8018a9e:	f000 f8ef 	bl	8018c80 <GUI_DispStringInRectMax>
 8018aa2:	e03d      	b.n	8018b20 <GUI_DispStringInRectEx+0x94>
 8018aa4:	b919      	cbnz	r1, 8018aae <GUI_DispStringInRectEx+0x22>
 8018aa6:	9102      	str	r1, [sp, #8]
 8018aa8:	9103      	str	r1, [sp, #12]
 8018aaa:	460d      	mov	r5, r1
 8018aac:	e015      	b.n	8018ada <GUI_DispStringInRectEx+0x4e>
 8018aae:	6808      	ldr	r0, [r1, #0]
 8018ab0:	6849      	ldr	r1, [r1, #4]
 8018ab2:	4b1d      	ldr	r3, [pc, #116]	; (8018b28 <GUI_DispStringInRectEx+0x9c>)
 8018ab4:	ad02      	add	r5, sp, #8
 8018ab6:	c503      	stmia	r5!, {r0, r1}
 8018ab8:	ad02      	add	r5, sp, #8
 8018aba:	cd03      	ldmia	r5!, {r0, r1}
 8018abc:	6018      	str	r0, [r3, #0]
 8018abe:	4620      	mov	r0, r4
 8018ac0:	6059      	str	r1, [r3, #4]
 8018ac2:	f7f2 ff15 	bl	800b8f0 <WM_SetUserClipRect>
 8018ac6:	4605      	mov	r5, r0
 8018ac8:	b138      	cbz	r0, 8018ada <GUI_DispStringInRectEx+0x4e>
 8018aca:	4668      	mov	r0, sp
 8018acc:	4621      	mov	r1, r4
 8018ace:	462a      	mov	r2, r5
 8018ad0:	f7f7 fc98 	bl	8010404 <GUI__IntersectRects>
 8018ad4:	4668      	mov	r0, sp
 8018ad6:	f7f2 ff0b 	bl	800b8f0 <WM_SetUserClipRect>
 8018ada:	4c14      	ldr	r4, [pc, #80]	; (8018b2c <GUI_DispStringInRectEx+0xa0>)
 8018adc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018ade:	f8df a050 	ldr.w	sl, [pc, #80]	; 8018b30 <GUI_DispStringInRectEx+0xa4>
 8018ae2:	6823      	ldr	r3, [r4, #0]
 8018ae4:	f8da b000 	ldr.w	fp, [sl]
 8018ae8:	f8ca 2000 	str.w	r2, [sl]
 8018aec:	2600      	movs	r6, #0
 8018aee:	615e      	str	r6, [r3, #20]
 8018af0:	a802      	add	r0, sp, #8
 8018af2:	6853      	ldr	r3, [r2, #4]
 8018af4:	4798      	blx	r3
 8018af6:	4642      	mov	r2, r8
 8018af8:	463b      	mov	r3, r7
 8018afa:	4648      	mov	r0, r9
 8018afc:	a902      	add	r1, sp, #8
 8018afe:	f000 f819 	bl	8018b34 <GUI__DispStringInRect>
 8018b02:	4628      	mov	r0, r5
 8018b04:	f7f2 fef4 	bl	800b8f0 <WM_SetUserClipRect>
 8018b08:	4652      	mov	r2, sl
 8018b0a:	6823      	ldr	r3, [r4, #0]
 8018b0c:	f1bb 0f00 	cmp.w	fp, #0
 8018b10:	d001      	beq.n	8018b16 <GUI_DispStringInRectEx+0x8a>
 8018b12:	615e      	str	r6, [r3, #20]
 8018b14:	e002      	b.n	8018b1c <GUI_DispStringInRectEx+0x90>
 8018b16:	f103 0108 	add.w	r1, r3, #8
 8018b1a:	6159      	str	r1, [r3, #20]
 8018b1c:	f8c2 b000 	str.w	fp, [r2]
 8018b20:	b005      	add	sp, #20
 8018b22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b26:	bf00      	nop
 8018b28:	20019da0 	.word	0x20019da0
 8018b2c:	2000016c 	.word	0x2000016c
 8018b30:	20019c70 	.word	0x20019c70

08018b34 <GUI__DispStringInRect>:
 8018b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b38:	b087      	sub	sp, #28
 8018b3a:	460c      	mov	r4, r1
 8018b3c:	9001      	str	r0, [sp, #4]
 8018b3e:	4691      	mov	r9, r2
 8018b40:	461d      	mov	r5, r3
 8018b42:	f7f9 fdf9 	bl	8012738 <GUI_GetFontDistY>
 8018b46:	9f01      	ldr	r7, [sp, #4]
 8018b48:	4680      	mov	r8, r0
 8018b4a:	b124      	cbz	r4, 8018b56 <GUI__DispStringInRect+0x22>
 8018b4c:	6820      	ldr	r0, [r4, #0]
 8018b4e:	6861      	ldr	r1, [r4, #4]
 8018b50:	ab04      	add	r3, sp, #16
 8018b52:	c303      	stmia	r3!, {r0, r1}
 8018b54:	e002      	b.n	8018b5c <GUI__DispStringInRect+0x28>
 8018b56:	a804      	add	r0, sp, #16
 8018b58:	f7ff fbec 	bl	8018334 <GUI_GetClientRect>
 8018b5c:	f019 0a0c 	ands.w	sl, r9, #12
 8018b60:	d002      	beq.n	8018b68 <GUI__DispStringInRect+0x34>
 8018b62:	462c      	mov	r4, r5
 8018b64:	2600      	movs	r6, #0
 8018b66:	e016      	b.n	8018b96 <GUI__DispStringInRect+0x62>
 8018b68:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 8018b6c:	e032      	b.n	8018bd4 <GUI__DispStringInRect+0xa0>
 8018b6e:	4621      	mov	r1, r4
 8018b70:	9801      	ldr	r0, [sp, #4]
 8018b72:	f7f9 fd17 	bl	80125a4 <GUI__GetLineNumChars>
 8018b76:	f8dd b004 	ldr.w	fp, [sp, #4]
 8018b7a:	4601      	mov	r1, r0
 8018b7c:	1a24      	subs	r4, r4, r0
 8018b7e:	4658      	mov	r0, fp
 8018b80:	f7f7 ff2e 	bl	80109e0 <GUI_UC__NumChars2NumBytes>
 8018b84:	eb0b 0300 	add.w	r3, fp, r0
 8018b88:	a806      	add	r0, sp, #24
 8018b8a:	3601      	adds	r6, #1
 8018b8c:	f840 3d14 	str.w	r3, [r0, #-20]!
 8018b90:	f000 fd77 	bl	8019682 <GUI__HandleEOLine>
 8018b94:	b908      	cbnz	r0, 8018b9a <GUI__DispStringInRect+0x66>
 8018b96:	2c00      	cmp	r4, #0
 8018b98:	d1e9      	bne.n	8018b6e <GUI__DispStringInRect+0x3a>
 8018b9a:	f1ba 0f08 	cmp.w	sl, #8
 8018b9e:	d005      	beq.n	8018bac <GUI__DispStringInRect+0x78>
 8018ba0:	f1ba 0f0c 	cmp.w	sl, #12
 8018ba4:	d008      	beq.n	8018bb8 <GUI__DispStringInRect+0x84>
 8018ba6:	f1ba 0f04 	cmp.w	sl, #4
 8018baa:	d112      	bne.n	8018bd2 <GUI__DispStringInRect+0x9e>
 8018bac:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8018bb0:	fb08 4416 	mls	r4, r8, r6, r4
 8018bb4:	3401      	adds	r4, #1
 8018bb6:	e00d      	b.n	8018bd4 <GUI__DispStringInRect+0xa0>
 8018bb8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018bbc:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8018bc0:	1ae4      	subs	r4, r4, r3
 8018bc2:	3401      	adds	r4, #1
 8018bc4:	fb08 4416 	mls	r4, r8, r6, r4
 8018bc8:	2202      	movs	r2, #2
 8018bca:	fb94 f4f2 	sdiv	r4, r4, r2
 8018bce:	441c      	add	r4, r3
 8018bd0:	e000      	b.n	8018bd4 <GUI__DispStringInRect+0xa0>
 8018bd2:	2400      	movs	r4, #0
 8018bd4:	9701      	str	r7, [sp, #4]
 8018bd6:	2600      	movs	r6, #0
 8018bd8:	2d00      	cmp	r5, #0
 8018bda:	d04b      	beq.n	8018c74 <GUI__DispStringInRect+0x140>
 8018bdc:	4629      	mov	r1, r5
 8018bde:	9801      	ldr	r0, [sp, #4]
 8018be0:	f7f9 fce0 	bl	80125a4 <GUI__GetLineNumChars>
 8018be4:	4607      	mov	r7, r0
 8018be6:	1a2d      	subs	r5, r5, r0
 8018be8:	4639      	mov	r1, r7
 8018bea:	9801      	ldr	r0, [sp, #4]
 8018bec:	f7f9 fd08 	bl	8012600 <GUI__GetLineDistX>
 8018bf0:	f009 0303 	and.w	r3, r9, #3
 8018bf4:	2b01      	cmp	r3, #1
 8018bf6:	d00f      	beq.n	8018c18 <GUI__DispStringInRect+0xe4>
 8018bf8:	2b02      	cmp	r3, #2
 8018bfa:	d003      	beq.n	8018c04 <GUI__DispStringInRect+0xd0>
 8018bfc:	b983      	cbnz	r3, 8018c20 <GUI__DispStringInRect+0xec>
 8018bfe:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 8018c02:	e00d      	b.n	8018c20 <GUI__DispStringInRect+0xec>
 8018c04:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018c08:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 8018c0c:	1ab6      	subs	r6, r6, r2
 8018c0e:	1a36      	subs	r6, r6, r0
 8018c10:	fb96 f6f3 	sdiv	r6, r6, r3
 8018c14:	4416      	add	r6, r2
 8018c16:	e003      	b.n	8018c20 <GUI__DispStringInRect+0xec>
 8018c18:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 8018c1c:	1a36      	subs	r6, r6, r0
 8018c1e:	3601      	adds	r6, #1
 8018c20:	4b16      	ldr	r3, [pc, #88]	; (8018c7c <GUI__DispStringInRect+0x148>)
 8018c22:	6819      	ldr	r1, [r3, #0]
 8018c24:	3801      	subs	r0, #1
 8018c26:	b2a3      	uxth	r3, r4
 8018c28:	b2b2      	uxth	r2, r6
 8018c2a:	848b      	strh	r3, [r1, #36]	; 0x24
 8018c2c:	4430      	add	r0, r6
 8018c2e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8018c32:	f108 33ff 	add.w	r3, r8, #4294967295
 8018c36:	4423      	add	r3, r4
 8018c38:	844a      	strh	r2, [r1, #34]	; 0x22
 8018c3a:	f8ad 2008 	strh.w	r2, [sp, #8]
 8018c3e:	4639      	mov	r1, r7
 8018c40:	aa02      	add	r2, sp, #8
 8018c42:	f8ad 000c 	strh.w	r0, [sp, #12]
 8018c46:	9801      	ldr	r0, [sp, #4]
 8018c48:	f8ad 300e 	strh.w	r3, [sp, #14]
 8018c4c:	f7f9 fd08 	bl	8012660 <GUI__DispLine>
 8018c50:	f8dd a004 	ldr.w	sl, [sp, #4]
 8018c54:	4639      	mov	r1, r7
 8018c56:	4650      	mov	r0, sl
 8018c58:	f7f7 fec2 	bl	80109e0 <GUI_UC__NumChars2NumBytes>
 8018c5c:	af06      	add	r7, sp, #24
 8018c5e:	4450      	add	r0, sl
 8018c60:	f847 0d14 	str.w	r0, [r7, #-20]!
 8018c64:	f7f9 fd68 	bl	8012738 <GUI_GetFontDistY>
 8018c68:	4404      	add	r4, r0
 8018c6a:	4638      	mov	r0, r7
 8018c6c:	f000 fd09 	bl	8019682 <GUI__HandleEOLine>
 8018c70:	2800      	cmp	r0, #0
 8018c72:	d0b1      	beq.n	8018bd8 <GUI__DispStringInRect+0xa4>
 8018c74:	b007      	add	sp, #28
 8018c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c7a:	bf00      	nop
 8018c7c:	2000016c 	.word	0x2000016c

08018c80 <GUI_DispStringInRectMax>:
 8018c80:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8018c84:	460c      	mov	r4, r1
 8018c86:	4690      	mov	r8, r2
 8018c88:	461f      	mov	r7, r3
 8018c8a:	4606      	mov	r6, r0
 8018c8c:	b1c0      	cbz	r0, 8018cc0 <GUI_DispStringInRectMax+0x40>
 8018c8e:	b169      	cbz	r1, 8018cac <GUI_DispStringInRectMax+0x2c>
 8018c90:	4608      	mov	r0, r1
 8018c92:	f7f2 fe2d 	bl	800b8f0 <WM_SetUserClipRect>
 8018c96:	4605      	mov	r5, r0
 8018c98:	b148      	cbz	r0, 8018cae <GUI_DispStringInRectMax+0x2e>
 8018c9a:	4668      	mov	r0, sp
 8018c9c:	4621      	mov	r1, r4
 8018c9e:	462a      	mov	r2, r5
 8018ca0:	f7f7 fbb0 	bl	8010404 <GUI__IntersectRects>
 8018ca4:	4668      	mov	r0, sp
 8018ca6:	f7f2 fe23 	bl	800b8f0 <WM_SetUserClipRect>
 8018caa:	e000      	b.n	8018cae <GUI_DispStringInRectMax+0x2e>
 8018cac:	460d      	mov	r5, r1
 8018cae:	4630      	mov	r0, r6
 8018cb0:	4621      	mov	r1, r4
 8018cb2:	4642      	mov	r2, r8
 8018cb4:	463b      	mov	r3, r7
 8018cb6:	f7ff ff3d 	bl	8018b34 <GUI__DispStringInRect>
 8018cba:	4628      	mov	r0, r5
 8018cbc:	f7f2 fe18 	bl	800b8f0 <WM_SetUserClipRect>
 8018cc0:	b002      	add	sp, #8
 8018cc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018cc6 <GUI_DispStringInRect>:
 8018cc6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018cca:	f7ff bfd9 	b.w	8018c80 <GUI_DispStringInRectMax>
	...

08018cd0 <GUI_CURSOR_SetPositionEx>:
 8018cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018cd2:	4606      	mov	r6, r0
 8018cd4:	4610      	mov	r0, r2
 8018cd6:	460d      	mov	r5, r1
 8018cd8:	4614      	mov	r4, r2
 8018cda:	f7f8 fc6d 	bl	80115b8 <GUI_GetCursorLayer>
 8018cde:	4f15      	ldr	r7, [pc, #84]	; (8018d34 <GUI_CURSOR_SetPositionEx+0x64>)
 8018ce0:	2314      	movs	r3, #20
 8018ce2:	b148      	cbz	r0, 8018cf8 <GUI_CURSOR_SetPositionEx+0x28>
 8018ce4:	435c      	muls	r4, r3
 8018ce6:	593b      	ldr	r3, [r7, r4]
 8018ce8:	6859      	ldr	r1, [r3, #4]
 8018cea:	689a      	ldr	r2, [r3, #8]
 8018cec:	1a71      	subs	r1, r6, r1
 8018cee:	1aaa      	subs	r2, r5, r2
 8018cf0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8018cf4:	f7f8 bc8a 	b.w	801160c <GUI_SetLayerPosEx>
 8018cf8:	fb03 7304 	mla	r3, r3, r4, r7
 8018cfc:	f103 0208 	add.w	r2, r3, #8
 8018d00:	689b      	ldr	r3, [r3, #8]
 8018d02:	42b3      	cmp	r3, r6
 8018d04:	d102      	bne.n	8018d0c <GUI_CURSOR_SetPositionEx+0x3c>
 8018d06:	6853      	ldr	r3, [r2, #4]
 8018d08:	42ab      	cmp	r3, r5
 8018d0a:	d011      	beq.n	8018d30 <GUI_CURSOR_SetPositionEx+0x60>
 8018d0c:	2314      	movs	r3, #20
 8018d0e:	4363      	muls	r3, r4
 8018d10:	18fa      	adds	r2, r7, r3
 8018d12:	6910      	ldr	r0, [r2, #16]
 8018d14:	b138      	cbz	r0, 8018d26 <GUI_CURSOR_SetPositionEx+0x56>
 8018d16:	4a07      	ldr	r2, [pc, #28]	; (8018d34 <GUI_CURSOR_SetPositionEx+0x64>)
 8018d18:	58d3      	ldr	r3, [r2, r3]
 8018d1a:	6859      	ldr	r1, [r3, #4]
 8018d1c:	689a      	ldr	r2, [r3, #8]
 8018d1e:	1a71      	subs	r1, r6, r1
 8018d20:	1aaa      	subs	r2, r5, r2
 8018d22:	f000 fe0f 	bl	8019944 <GUI_SPRITE_SetPosition>
 8018d26:	2314      	movs	r3, #20
 8018d28:	fb03 7404 	mla	r4, r3, r4, r7
 8018d2c:	60a6      	str	r6, [r4, #8]
 8018d2e:	60e5      	str	r5, [r4, #12]
 8018d30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018d32:	bf00      	nop
 8018d34:	200196f8 	.word	0x200196f8

08018d38 <GUI_ClearRectEx>:
 8018d38:	4603      	mov	r3, r0
 8018d3a:	f9b0 0000 	ldrsh.w	r0, [r0]
 8018d3e:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 8018d42:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8018d46:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8018d4a:	f7f9 b9af 	b.w	80120ac <GUI_ClearRect>
	...

08018d50 <GUI_DrawRect>:
 8018d50:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8018d54:	4c1e      	ldr	r4, [pc, #120]	; (8018dd0 <GUI_DrawRect+0x80>)
 8018d56:	f8d4 e000 	ldr.w	lr, [r4]
 8018d5a:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 8018d5e:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 8018d62:	1905      	adds	r5, r0, r4
 8018d64:	4414      	add	r4, r2
 8018d66:	f89e 2018 	ldrb.w	r2, [lr, #24]
 8018d6a:	3a01      	subs	r2, #1
 8018d6c:	b292      	uxth	r2, r2
 8018d6e:	198f      	adds	r7, r1, r6
 8018d70:	441e      	add	r6, r3
 8018d72:	1aab      	subs	r3, r5, r2
 8018d74:	f8ad 3000 	strh.w	r3, [sp]
 8018d78:	1913      	adds	r3, r2, r4
 8018d7a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8018d7e:	4668      	mov	r0, sp
 8018d80:	1abb      	subs	r3, r7, r2
 8018d82:	4432      	add	r2, r6
 8018d84:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018d88:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018d8c:	f7f4 f97a 	bl	800d084 <WM__InitIVRSearch>
 8018d90:	b1d0      	cbz	r0, 8018dc8 <GUI_DrawRect+0x78>
 8018d92:	4628      	mov	r0, r5
 8018d94:	4639      	mov	r1, r7
 8018d96:	4622      	mov	r2, r4
 8018d98:	f7f6 fef4 	bl	800fb84 <LCD_DrawHLine>
 8018d9c:	f107 0901 	add.w	r9, r7, #1
 8018da0:	4628      	mov	r0, r5
 8018da2:	4631      	mov	r1, r6
 8018da4:	4622      	mov	r2, r4
 8018da6:	f106 38ff 	add.w	r8, r6, #4294967295
 8018daa:	f7f6 feeb 	bl	800fb84 <LCD_DrawHLine>
 8018dae:	4628      	mov	r0, r5
 8018db0:	4649      	mov	r1, r9
 8018db2:	4642      	mov	r2, r8
 8018db4:	f7f6 ff0c 	bl	800fbd0 <LCD_DrawVLine>
 8018db8:	4620      	mov	r0, r4
 8018dba:	4649      	mov	r1, r9
 8018dbc:	4642      	mov	r2, r8
 8018dbe:	f7f6 ff07 	bl	800fbd0 <LCD_DrawVLine>
 8018dc2:	f7f4 f89d 	bl	800cf00 <WM__GetNextIVR>
 8018dc6:	e7e3      	b.n	8018d90 <GUI_DrawRect+0x40>
 8018dc8:	b003      	add	sp, #12
 8018dca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018dce:	bf00      	nop
 8018dd0:	2000016c 	.word	0x2000016c

08018dd4 <_GetIndexMask_0>:
 8018dd4:	b508      	push	{r3, lr}
 8018dd6:	f7f6 fddf 	bl	800f998 <LCD_GetNumColors>
 8018dda:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8018dde:	d010      	beq.n	8018e02 <_GetIndexMask_0+0x2e>
 8018de0:	287f      	cmp	r0, #127	; 0x7f
 8018de2:	d810      	bhi.n	8018e06 <_GetIndexMask_0+0x32>
 8018de4:	283f      	cmp	r0, #63	; 0x3f
 8018de6:	d810      	bhi.n	8018e0a <_GetIndexMask_0+0x36>
 8018de8:	281f      	cmp	r0, #31
 8018dea:	d810      	bhi.n	8018e0e <_GetIndexMask_0+0x3a>
 8018dec:	280f      	cmp	r0, #15
 8018dee:	d810      	bhi.n	8018e12 <_GetIndexMask_0+0x3e>
 8018df0:	2807      	cmp	r0, #7
 8018df2:	d810      	bhi.n	8018e16 <_GetIndexMask_0+0x42>
 8018df4:	2803      	cmp	r0, #3
 8018df6:	d810      	bhi.n	8018e1a <_GetIndexMask_0+0x46>
 8018df8:	2801      	cmp	r0, #1
 8018dfa:	bf94      	ite	ls
 8018dfc:	2000      	movls	r0, #0
 8018dfe:	2001      	movhi	r0, #1
 8018e00:	e00c      	b.n	8018e1c <_GetIndexMask_0+0x48>
 8018e02:	2008      	movs	r0, #8
 8018e04:	e00a      	b.n	8018e1c <_GetIndexMask_0+0x48>
 8018e06:	2007      	movs	r0, #7
 8018e08:	e008      	b.n	8018e1c <_GetIndexMask_0+0x48>
 8018e0a:	2006      	movs	r0, #6
 8018e0c:	e006      	b.n	8018e1c <_GetIndexMask_0+0x48>
 8018e0e:	2005      	movs	r0, #5
 8018e10:	e004      	b.n	8018e1c <_GetIndexMask_0+0x48>
 8018e12:	2004      	movs	r0, #4
 8018e14:	e002      	b.n	8018e1c <_GetIndexMask_0+0x48>
 8018e16:	2003      	movs	r0, #3
 8018e18:	e000      	b.n	8018e1c <_GetIndexMask_0+0x48>
 8018e1a:	2002      	movs	r0, #2
 8018e1c:	2301      	movs	r3, #1
 8018e1e:	fa03 f000 	lsl.w	r0, r3, r0
 8018e22:	3801      	subs	r0, #1
 8018e24:	bd08      	pop	{r3, pc}

08018e26 <_Index2Color_0>:
 8018e26:	b538      	push	{r3, r4, r5, lr}
 8018e28:	4604      	mov	r4, r0
 8018e2a:	f7f6 fdb5 	bl	800f998 <LCD_GetNumColors>
 8018e2e:	4605      	mov	r5, r0
 8018e30:	f7f6 fdd0 	bl	800f9d4 <LCD_GetPalette>
 8018e34:	42ac      	cmp	r4, r5
 8018e36:	d203      	bcs.n	8018e40 <_Index2Color_0+0x1a>
 8018e38:	b118      	cbz	r0, 8018e42 <_Index2Color_0+0x1c>
 8018e3a:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8018e3e:	bd38      	pop	{r3, r4, r5, pc}
 8018e40:	2000      	movs	r0, #0
 8018e42:	bd38      	pop	{r3, r4, r5, pc}

08018e44 <_Color2Index_0>:
 8018e44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018e48:	4681      	mov	r9, r0
 8018e4a:	f7f6 fda5 	bl	800f998 <LCD_GetNumColors>
 8018e4e:	4680      	mov	r8, r0
 8018e50:	f7f6 fdc0 	bl	800f9d4 <LCD_GetPalette>
 8018e54:	4606      	mov	r6, r0
 8018e56:	b1d8      	cbz	r0, 8018e90 <_Color2Index_0+0x4c>
 8018e58:	2300      	movs	r3, #0
 8018e5a:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 8018e5e:	4591      	cmp	r9, r2
 8018e60:	d01a      	beq.n	8018e98 <_Color2Index_0+0x54>
 8018e62:	3301      	adds	r3, #1
 8018e64:	4543      	cmp	r3, r8
 8018e66:	dbf8      	blt.n	8018e5a <_Color2Index_0+0x16>
 8018e68:	2500      	movs	r5, #0
 8018e6a:	f06f 477f 	mvn.w	r7, #4278190080	; 0xff000000
 8018e6e:	462c      	mov	r4, r5
 8018e70:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 8018e74:	4648      	mov	r0, r9
 8018e76:	f001 f9d3 	bl	801a220 <GUI_CalcColorDist>
 8018e7a:	42b8      	cmp	r0, r7
 8018e7c:	bf38      	it	cc
 8018e7e:	4625      	movcc	r5, r4
 8018e80:	f104 0401 	add.w	r4, r4, #1
 8018e84:	bf28      	it	cs
 8018e86:	4638      	movcs	r0, r7
 8018e88:	4544      	cmp	r4, r8
 8018e8a:	da02      	bge.n	8018e92 <_Color2Index_0+0x4e>
 8018e8c:	4607      	mov	r7, r0
 8018e8e:	e7ef      	b.n	8018e70 <_Color2Index_0+0x2c>
 8018e90:	4605      	mov	r5, r0
 8018e92:	4628      	mov	r0, r5
 8018e94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018e98:	4618      	mov	r0, r3
 8018e9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08018e9e <_GetArrowPara>:
 8018e9e:	b510      	push	{r4, lr}
 8018ea0:	b121      	cbz	r1, 8018eac <_GetArrowPara+0xe>
 8018ea2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8018ea6:	f9b0 1000 	ldrsh.w	r1, [r0]
 8018eaa:	e003      	b.n	8018eb4 <_GetArrowPara+0x16>
 8018eac:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8018eb0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018eb4:	1a61      	subs	r1, r4, r1
 8018eb6:	3101      	adds	r1, #1
 8018eb8:	1f0c      	subs	r4, r1, #4
 8018eba:	2003      	movs	r0, #3
 8018ebc:	fb94 f0f0 	sdiv	r0, r4, r0
 8018ec0:	6010      	str	r0, [r2, #0]
 8018ec2:	1a08      	subs	r0, r1, r0
 8018ec4:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 8018ec8:	3901      	subs	r1, #1
 8018eca:	6019      	str	r1, [r3, #0]
 8018ecc:	bd10      	pop	{r4, pc}

08018ece <_DrawGraspH>:
 8018ece:	b570      	push	{r4, r5, r6, lr}
 8018ed0:	f9b0 3000 	ldrsh.w	r3, [r0]
 8018ed4:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8018ed8:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 8018edc:	441e      	add	r6, r3
 8018ede:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8018ee2:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8018ee4:	1b5c      	subs	r4, r3, r5
 8018ee6:	3403      	adds	r4, #3
 8018ee8:	10a4      	asrs	r4, r4, #2
 8018eea:	4425      	add	r5, r4
 8018eec:	1076      	asrs	r6, r6, #1
 8018eee:	1b1c      	subs	r4, r3, r4
 8018ef0:	f7f8 fb4e 	bl	8011590 <GUI_SetColor>
 8018ef4:	4630      	mov	r0, r6
 8018ef6:	4629      	mov	r1, r5
 8018ef8:	4622      	mov	r2, r4
 8018efa:	f7f8 fe0f 	bl	8011b1c <GUI_DrawVLine>
 8018efe:	1cb0      	adds	r0, r6, #2
 8018f00:	4629      	mov	r1, r5
 8018f02:	4622      	mov	r2, r4
 8018f04:	f7f8 fe0a 	bl	8011b1c <GUI_DrawVLine>
 8018f08:	1d30      	adds	r0, r6, #4
 8018f0a:	4629      	mov	r1, r5
 8018f0c:	4622      	mov	r2, r4
 8018f0e:	f7f8 fe05 	bl	8011b1c <GUI_DrawVLine>
 8018f12:	1eb0      	subs	r0, r6, #2
 8018f14:	4629      	mov	r1, r5
 8018f16:	4622      	mov	r2, r4
 8018f18:	f7f8 fe00 	bl	8011b1c <GUI_DrawVLine>
 8018f1c:	1f30      	subs	r0, r6, #4
 8018f1e:	4629      	mov	r1, r5
 8018f20:	4622      	mov	r2, r4
 8018f22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018f26:	f7f8 bdf9 	b.w	8011b1c <GUI_DrawVLine>

08018f2a <_DrawGraspV>:
 8018f2a:	b570      	push	{r4, r5, r6, lr}
 8018f2c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8018f30:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 8018f34:	f9b0 5000 	ldrsh.w	r5, [r0]
 8018f38:	441e      	add	r6, r3
 8018f3a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018f3e:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8018f40:	1b5c      	subs	r4, r3, r5
 8018f42:	3403      	adds	r4, #3
 8018f44:	10a4      	asrs	r4, r4, #2
 8018f46:	4425      	add	r5, r4
 8018f48:	1076      	asrs	r6, r6, #1
 8018f4a:	1b1c      	subs	r4, r3, r4
 8018f4c:	f7f8 fb20 	bl	8011590 <GUI_SetColor>
 8018f50:	4630      	mov	r0, r6
 8018f52:	4629      	mov	r1, r5
 8018f54:	4622      	mov	r2, r4
 8018f56:	f7f8 fe03 	bl	8011b60 <GUI_DrawHLine>
 8018f5a:	1cb0      	adds	r0, r6, #2
 8018f5c:	4629      	mov	r1, r5
 8018f5e:	4622      	mov	r2, r4
 8018f60:	f7f8 fdfe 	bl	8011b60 <GUI_DrawHLine>
 8018f64:	1d30      	adds	r0, r6, #4
 8018f66:	4629      	mov	r1, r5
 8018f68:	4622      	mov	r2, r4
 8018f6a:	f7f8 fdf9 	bl	8011b60 <GUI_DrawHLine>
 8018f6e:	1eb0      	subs	r0, r6, #2
 8018f70:	4629      	mov	r1, r5
 8018f72:	4622      	mov	r2, r4
 8018f74:	f7f8 fdf4 	bl	8011b60 <GUI_DrawHLine>
 8018f78:	1f30      	subs	r0, r6, #4
 8018f7a:	4629      	mov	r1, r5
 8018f7c:	4622      	mov	r2, r4
 8018f7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018f82:	f7f8 bded 	b.w	8011b60 <GUI_DrawHLine>

08018f86 <_DrawFrame>:
 8018f86:	b538      	push	{r3, r4, r5, lr}
 8018f88:	4604      	mov	r4, r0
 8018f8a:	6808      	ldr	r0, [r1, #0]
 8018f8c:	460d      	mov	r5, r1
 8018f8e:	f7f8 faff 	bl	8011590 <GUI_SetColor>
 8018f92:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018f96:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018f9a:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8018f9e:	3101      	adds	r1, #1
 8018fa0:	3a01      	subs	r2, #1
 8018fa2:	f7f8 fddd 	bl	8011b60 <GUI_DrawHLine>
 8018fa6:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018faa:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018fae:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8018fb2:	3101      	adds	r1, #1
 8018fb4:	3a01      	subs	r2, #1
 8018fb6:	f7f8 fdd3 	bl	8011b60 <GUI_DrawHLine>
 8018fba:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8018fbe:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8018fc2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018fc6:	3101      	adds	r1, #1
 8018fc8:	3a01      	subs	r2, #1
 8018fca:	f7f8 fda7 	bl	8011b1c <GUI_DrawVLine>
 8018fce:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8018fd2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8018fd6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018fda:	3101      	adds	r1, #1
 8018fdc:	3a01      	subs	r2, #1
 8018fde:	f7f8 fd9d 	bl	8011b1c <GUI_DrawVLine>
 8018fe2:	6868      	ldr	r0, [r5, #4]
 8018fe4:	f7f8 fad4 	bl	8011590 <GUI_SetColor>
 8018fe8:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8018fec:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018ff0:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018ff4:	3001      	adds	r0, #1
 8018ff6:	3101      	adds	r1, #1
 8018ff8:	3a01      	subs	r2, #1
 8018ffa:	f7f8 fdb1 	bl	8011b60 <GUI_DrawHLine>
 8018ffe:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8019002:	f9b4 1000 	ldrsh.w	r1, [r4]
 8019006:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801900a:	3801      	subs	r0, #1
 801900c:	3101      	adds	r1, #1
 801900e:	3a01      	subs	r2, #1
 8019010:	f7f8 fda6 	bl	8011b60 <GUI_DrawHLine>
 8019014:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019018:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801901c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8019020:	3001      	adds	r0, #1
 8019022:	3102      	adds	r1, #2
 8019024:	3a02      	subs	r2, #2
 8019026:	f7f8 fd79 	bl	8011b1c <GUI_DrawVLine>
 801902a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801902e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8019032:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8019036:	3102      	adds	r1, #2
 8019038:	3a02      	subs	r2, #2
 801903a:	3801      	subs	r0, #1
 801903c:	f7f8 fd6e 	bl	8011b1c <GUI_DrawVLine>
 8019040:	68a8      	ldr	r0, [r5, #8]
 8019042:	f7f8 faa5 	bl	8011590 <GUI_SetColor>
 8019046:	f9b4 0000 	ldrsh.w	r0, [r4]
 801904a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801904e:	f001 f863 	bl	801a118 <GUI_DrawPixel>
 8019052:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019056:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801905a:	f001 f85d 	bl	801a118 <GUI_DrawPixel>
 801905e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019062:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8019066:	f001 f857 	bl	801a118 <GUI_DrawPixel>
 801906a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801906e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8019072:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019076:	f001 b84f 	b.w	801a118 <GUI_DrawPixel>

0801907a <_DrawBackgroundH>:
 801907a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801907c:	4604      	mov	r4, r0
 801907e:	460d      	mov	r5, r1
 8019080:	f7ff ff81 	bl	8018f86 <_DrawFrame>
 8019084:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8019088:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801908c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019090:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8019094:	68ee      	ldr	r6, [r5, #12]
 8019096:	9600      	str	r6, [sp, #0]
 8019098:	440b      	add	r3, r1
 801909a:	692e      	ldr	r6, [r5, #16]
 801909c:	9601      	str	r6, [sp, #4]
 801909e:	3002      	adds	r0, #2
 80190a0:	3102      	adds	r1, #2
 80190a2:	3a02      	subs	r2, #2
 80190a4:	105b      	asrs	r3, r3, #1
 80190a6:	f7ff fc8d 	bl	80189c4 <GUI_DrawGradientV>
 80190aa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80190ae:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80190b2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80190b6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80190ba:	696c      	ldr	r4, [r5, #20]
 80190bc:	9400      	str	r4, [sp, #0]
 80190be:	4419      	add	r1, r3
 80190c0:	69ac      	ldr	r4, [r5, #24]
 80190c2:	9401      	str	r4, [sp, #4]
 80190c4:	1049      	asrs	r1, r1, #1
 80190c6:	3002      	adds	r0, #2
 80190c8:	3101      	adds	r1, #1
 80190ca:	3a02      	subs	r2, #2
 80190cc:	3b02      	subs	r3, #2
 80190ce:	f7ff fc79 	bl	80189c4 <GUI_DrawGradientV>
 80190d2:	b002      	add	sp, #8
 80190d4:	bd70      	pop	{r4, r5, r6, pc}

080190d6 <_DrawBackgroundV>:
 80190d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80190d8:	4604      	mov	r4, r0
 80190da:	460d      	mov	r5, r1
 80190dc:	f7ff ff53 	bl	8018f86 <_DrawFrame>
 80190e0:	f9b4 0000 	ldrsh.w	r0, [r4]
 80190e4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80190e8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80190ec:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80190f0:	68ee      	ldr	r6, [r5, #12]
 80190f2:	9600      	str	r6, [sp, #0]
 80190f4:	4402      	add	r2, r0
 80190f6:	692e      	ldr	r6, [r5, #16]
 80190f8:	9601      	str	r6, [sp, #4]
 80190fa:	3002      	adds	r0, #2
 80190fc:	3102      	adds	r1, #2
 80190fe:	1052      	asrs	r2, r2, #1
 8019100:	3b02      	subs	r3, #2
 8019102:	f7ff fc91 	bl	8018a28 <GUI_DrawGradientH>
 8019106:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801910a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801910e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8019112:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019116:	696c      	ldr	r4, [r5, #20]
 8019118:	9400      	str	r4, [sp, #0]
 801911a:	4410      	add	r0, r2
 801911c:	69ac      	ldr	r4, [r5, #24]
 801911e:	9401      	str	r4, [sp, #4]
 8019120:	1040      	asrs	r0, r0, #1
 8019122:	3001      	adds	r0, #1
 8019124:	3102      	adds	r1, #2
 8019126:	3a02      	subs	r2, #2
 8019128:	3b02      	subs	r3, #2
 801912a:	f7ff fc7d 	bl	8018a28 <GUI_DrawGradientH>
 801912e:	b002      	add	sp, #8
 8019130:	bd70      	pop	{r4, r5, r6, pc}
	...

08019134 <SCROLLBAR_DrawSkinFlex>:
 8019134:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019138:	4604      	mov	r4, r0
 801913a:	b08b      	sub	sp, #44	; 0x2c
 801913c:	6800      	ldr	r0, [r0, #0]
 801913e:	f7f9 fc17 	bl	8012970 <GUI_ALLOC_LockH>
 8019142:	4607      	mov	r7, r0
 8019144:	a80a      	add	r0, sp, #40	; 0x28
 8019146:	ae06      	add	r6, sp, #24
 8019148:	f840 7d1c 	str.w	r7, [r0, #-28]!
 801914c:	f7f9 fc1e 	bl	801298c <GUI_ALLOC_UnlockH>
 8019150:	6923      	ldr	r3, [r4, #16]
 8019152:	f8ad 3018 	strh.w	r3, [sp, #24]
 8019156:	6963      	ldr	r3, [r4, #20]
 8019158:	f8ad 301a 	strh.w	r3, [sp, #26]
 801915c:	69a3      	ldr	r3, [r4, #24]
 801915e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019162:	69e3      	ldr	r3, [r4, #28]
 8019164:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019168:	6a25      	ldr	r5, [r4, #32]
 801916a:	e896 0003 	ldmia.w	r6, {r0, r1}
 801916e:	682b      	ldr	r3, [r5, #0]
 8019170:	f10d 0820 	add.w	r8, sp, #32
 8019174:	e888 0003 	stmia.w	r8, {r0, r1}
 8019178:	b153      	cbz	r3, 8019190 <SCROLLBAR_DrawSkinFlex+0x5c>
 801917a:	4638      	mov	r0, r7
 801917c:	4631      	mov	r1, r6
 801917e:	4632      	mov	r2, r6
 8019180:	f7ef ff49 	bl	8009016 <WIDGET__RotateRect90>
 8019184:	f8df 913c 	ldr.w	r9, [pc, #316]	; 80192c4 <SCROLLBAR_DrawSkinFlex+0x190>
 8019188:	f8df c13c 	ldr.w	ip, [pc, #316]	; 80192c8 <SCROLLBAR_DrawSkinFlex+0x194>
 801918c:	4b49      	ldr	r3, [pc, #292]	; (80192b4 <SCROLLBAR_DrawSkinFlex+0x180>)
 801918e:	e004      	b.n	801919a <SCROLLBAR_DrawSkinFlex+0x66>
 8019190:	f8df 9138 	ldr.w	r9, [pc, #312]	; 80192cc <SCROLLBAR_DrawSkinFlex+0x198>
 8019194:	f8df c138 	ldr.w	ip, [pc, #312]	; 80192d0 <SCROLLBAR_DrawSkinFlex+0x19c>
 8019198:	4b47      	ldr	r3, [pc, #284]	; (80192b8 <SCROLLBAR_DrawSkinFlex+0x184>)
 801919a:	6862      	ldr	r2, [r4, #4]
 801919c:	3a08      	subs	r2, #8
 801919e:	2a11      	cmp	r2, #17
 80191a0:	f200 8083 	bhi.w	80192aa <SCROLLBAR_DrawSkinFlex+0x176>
 80191a4:	e8df f002 	tbb	[pc, r2]
 80191a8:	81815f13 	.word	0x81815f13
 80191ac:	81818134 	.word	0x81818134
 80191b0:	43813434 	.word	0x43813434
 80191b4:	81818181 	.word	0x81818181
 80191b8:	0981      	.short	0x0981
 80191ba:	682b      	ldr	r3, [r5, #0]
 80191bc:	b113      	cbz	r3, 80191c4 <SCROLLBAR_DrawSkinFlex+0x90>
 80191be:	69a0      	ldr	r0, [r4, #24]
 80191c0:	6923      	ldr	r3, [r4, #16]
 80191c2:	e001      	b.n	80191c8 <SCROLLBAR_DrawSkinFlex+0x94>
 80191c4:	69e0      	ldr	r0, [r4, #28]
 80191c6:	6963      	ldr	r3, [r4, #20]
 80191c8:	1ac0      	subs	r0, r0, r3
 80191ca:	3001      	adds	r0, #1
 80191cc:	e06e      	b.n	80192ac <SCROLLBAR_DrawSkinFlex+0x178>
 80191ce:	686a      	ldr	r2, [r5, #4]
 80191d0:	493a      	ldr	r1, [pc, #232]	; (80192bc <SCROLLBAR_DrawSkinFlex+0x188>)
 80191d2:	4c3b      	ldr	r4, [pc, #236]	; (80192c0 <SCROLLBAR_DrawSkinFlex+0x18c>)
 80191d4:	2a02      	cmp	r2, #2
 80191d6:	bf08      	it	eq
 80191d8:	460c      	moveq	r4, r1
 80191da:	4630      	mov	r0, r6
 80191dc:	4621      	mov	r1, r4
 80191de:	4798      	blx	r3
 80191e0:	6829      	ldr	r1, [r5, #0]
 80191e2:	aa04      	add	r2, sp, #16
 80191e4:	ab05      	add	r3, sp, #20
 80191e6:	4640      	mov	r0, r8
 80191e8:	f7ff fe59 	bl	8018e9e <_GetArrowPara>
 80191ec:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80191ee:	f7f8 f9cf 	bl	8011590 <GUI_SetColor>
 80191f2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80191f6:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 80191fa:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80191fe:	1ad2      	subs	r2, r2, r3
 8019200:	f04f 33ff 	mov.w	r3, #4294967295
 8019204:	9300      	str	r3, [sp, #0]
 8019206:	9b05      	ldr	r3, [sp, #20]
 8019208:	3201      	adds	r2, #1
 801920a:	4638      	mov	r0, r7
 801920c:	4419      	add	r1, r3
 801920e:	e048      	b.n	80192a2 <SCROLLBAR_DrawSkinFlex+0x16e>
 8019210:	4c2b      	ldr	r4, [pc, #172]	; (80192c0 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8019212:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8019216:	69e5      	ldr	r5, [r4, #28]
 8019218:	9500      	str	r5, [sp, #0]
 801921a:	6a24      	ldr	r4, [r4, #32]
 801921c:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8019220:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8019224:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8019228:	9401      	str	r4, [sp, #4]
 801922a:	47e0      	blx	ip
 801922c:	e03d      	b.n	80192aa <SCROLLBAR_DrawSkinFlex+0x176>
 801922e:	686a      	ldr	r2, [r5, #4]
 8019230:	4922      	ldr	r1, [pc, #136]	; (80192bc <SCROLLBAR_DrawSkinFlex+0x188>)
 8019232:	4c23      	ldr	r4, [pc, #140]	; (80192c0 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8019234:	2a03      	cmp	r2, #3
 8019236:	bf08      	it	eq
 8019238:	460c      	moveq	r4, r1
 801923a:	4630      	mov	r0, r6
 801923c:	4621      	mov	r1, r4
 801923e:	4798      	blx	r3
 8019240:	682b      	ldr	r3, [r5, #0]
 8019242:	b123      	cbz	r3, 801924e <SCROLLBAR_DrawSkinFlex+0x11a>
 8019244:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 8019248:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801924c:	e003      	b.n	8019256 <SCROLLBAR_DrawSkinFlex+0x122>
 801924e:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8019252:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8019256:	1ad3      	subs	r3, r2, r3
 8019258:	3301      	adds	r3, #1
 801925a:	2b0e      	cmp	r3, #14
 801925c:	dd25      	ble.n	80192aa <SCROLLBAR_DrawSkinFlex+0x176>
 801925e:	4630      	mov	r0, r6
 8019260:	4621      	mov	r1, r4
 8019262:	47c8      	blx	r9
 8019264:	e021      	b.n	80192aa <SCROLLBAR_DrawSkinFlex+0x176>
 8019266:	686a      	ldr	r2, [r5, #4]
 8019268:	4914      	ldr	r1, [pc, #80]	; (80192bc <SCROLLBAR_DrawSkinFlex+0x188>)
 801926a:	4c15      	ldr	r4, [pc, #84]	; (80192c0 <SCROLLBAR_DrawSkinFlex+0x18c>)
 801926c:	2a01      	cmp	r2, #1
 801926e:	bf08      	it	eq
 8019270:	460c      	moveq	r4, r1
 8019272:	4630      	mov	r0, r6
 8019274:	4621      	mov	r1, r4
 8019276:	4798      	blx	r3
 8019278:	6829      	ldr	r1, [r5, #0]
 801927a:	aa04      	add	r2, sp, #16
 801927c:	ab05      	add	r3, sp, #20
 801927e:	4640      	mov	r0, r8
 8019280:	f7ff fe0d 	bl	8018e9e <_GetArrowPara>
 8019284:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8019286:	f7f8 f983 	bl	8011590 <GUI_SetColor>
 801928a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801928e:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 8019292:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 8019296:	1ad2      	subs	r2, r2, r3
 8019298:	2301      	movs	r3, #1
 801929a:	9300      	str	r3, [sp, #0]
 801929c:	9b05      	ldr	r3, [sp, #20]
 801929e:	4638      	mov	r0, r7
 80192a0:	1ac9      	subs	r1, r1, r3
 80192a2:	1052      	asrs	r2, r2, #1
 80192a4:	9b04      	ldr	r3, [sp, #16]
 80192a6:	f7ef fff6 	bl	8009296 <WIDGET__DrawTriangle>
 80192aa:	2000      	movs	r0, #0
 80192ac:	b00b      	add	sp, #44	; 0x2c
 80192ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80192b2:	bf00      	nop
 80192b4:	080190d7 	.word	0x080190d7
 80192b8:	0801907b 	.word	0x0801907b
 80192bc:	20000334 	.word	0x20000334
 80192c0:	20000360 	.word	0x20000360
 80192c4:	08018f2b 	.word	0x08018f2b
 80192c8:	08018a29 	.word	0x08018a29
 80192cc:	08018ecf 	.word	0x08018ecf
 80192d0:	080189c5 	.word	0x080189c5

080192d4 <_Create>:
 80192d4:	b530      	push	{r4, r5, lr}
 80192d6:	b08d      	sub	sp, #52	; 0x34
 80192d8:	4605      	mov	r5, r0
 80192da:	f7f9 fb49 	bl	8012970 <GUI_ALLOC_LockH>
 80192de:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80192e0:	6c04      	ldr	r4, [r0, #64]	; 0x40
 80192e2:	9000      	str	r0, [sp, #0]
 80192e4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80192e8:	9301      	str	r3, [sp, #4]
 80192ea:	4b07      	ldr	r3, [pc, #28]	; (8019308 <_Create+0x34>)
 80192ec:	6483      	str	r3, [r0, #72]	; 0x48
 80192ee:	4668      	mov	r0, sp
 80192f0:	f7f9 fb4c 	bl	801298c <GUI_ALLOC_UnlockH>
 80192f4:	2300      	movs	r3, #0
 80192f6:	9304      	str	r3, [sp, #16]
 80192f8:	ab01      	add	r3, sp, #4
 80192fa:	9503      	str	r5, [sp, #12]
 80192fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80192fe:	a803      	add	r0, sp, #12
 8019300:	47a0      	blx	r4
 8019302:	b00d      	add	sp, #52	; 0x34
 8019304:	bd30      	pop	{r4, r5, pc}
 8019306:	bf00      	nop
 8019308:	0801930d 	.word	0x0801930d

0801930c <_CalcPositions>:
 801930c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019310:	b090      	sub	sp, #64	; 0x40
 8019312:	4605      	mov	r5, r0
 8019314:	460c      	mov	r4, r1
 8019316:	f7f9 fb2b 	bl	8012970 <GUI_ALLOC_LockH>
 801931a:	4603      	mov	r3, r0
 801931c:	9000      	str	r0, [sp, #0]
 801931e:	c803      	ldmia	r0, {r0, r1}
 8019320:	ae03      	add	r6, sp, #12
 8019322:	e886 0003 	stmia.w	r6, {r0, r1}
 8019326:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 8019328:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 801932c:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8019330:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8019334:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8019338:	920e      	str	r2, [sp, #56]	; 0x38
 801933a:	f000 0008 	and.w	r0, r0, #8
 801933e:	2800      	cmp	r0, #0
 8019340:	bf0c      	ite	eq
 8019342:	4608      	moveq	r0, r1
 8019344:	4610      	movne	r0, r2
 8019346:	61a0      	str	r0, [r4, #24]
 8019348:	bf0c      	ite	eq
 801934a:	2000      	moveq	r0, #0
 801934c:	2001      	movne	r0, #1
 801934e:	aa01      	add	r2, sp, #4
 8019350:	9001      	str	r0, [sp, #4]
 8019352:	2019      	movs	r0, #25
 8019354:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019356:	9008      	str	r0, [sp, #32]
 8019358:	9507      	str	r5, [sp, #28]
 801935a:	920f      	str	r2, [sp, #60]	; 0x3c
 801935c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8019360:	970c      	str	r7, [sp, #48]	; 0x30
 8019362:	910d      	str	r1, [sp, #52]	; 0x34
 8019364:	a807      	add	r0, sp, #28
 8019366:	4798      	blx	r3
 8019368:	9b00      	ldr	r3, [sp, #0]
 801936a:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 801936e:	2aff      	cmp	r2, #255	; 0xff
 8019370:	4605      	mov	r5, r0
 8019372:	d111      	bne.n	8019398 <_CalcPositions+0x8c>
 8019374:	6998      	ldr	r0, [r3, #24]
 8019376:	f000 f917 	bl	80195a8 <WM_GetScrollbarV>
 801937a:	b168      	cbz	r0, 8019398 <_CalcPositions+0x8c>
 801937c:	a905      	add	r1, sp, #20
 801937e:	f7fc f829 	bl	80153d4 <WM_GetWindowRectEx>
 8019382:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019386:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801938a:	429a      	cmp	r2, r3
 801938c:	d104      	bne.n	8019398 <_CalcPositions+0x8c>
 801938e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8019392:	3b01      	subs	r3, #1
 8019394:	f8ad 3010 	strh.w	r3, [sp, #16]
 8019398:	9b00      	ldr	r3, [sp, #0]
 801939a:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 801939e:	2afe      	cmp	r2, #254	; 0xfe
 80193a0:	d111      	bne.n	80193c6 <_CalcPositions+0xba>
 80193a2:	6998      	ldr	r0, [r3, #24]
 80193a4:	f000 f8fb 	bl	801959e <WM_GetScrollbarH>
 80193a8:	b168      	cbz	r0, 80193c6 <_CalcPositions+0xba>
 80193aa:	a905      	add	r1, sp, #20
 80193ac:	f7fc f812 	bl	80153d4 <WM_GetWindowRectEx>
 80193b0:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 80193b4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80193b8:	429a      	cmp	r2, r3
 80193ba:	d104      	bne.n	80193c6 <_CalcPositions+0xba>
 80193bc:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80193c0:	3b01      	subs	r3, #1
 80193c2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80193c6:	427a      	negs	r2, r7
 80193c8:	4630      	mov	r0, r6
 80193ca:	f1c8 0100 	rsb	r1, r8, #0
 80193ce:	f7f8 fa41 	bl	8011854 <GUI_MoveRect>
 80193d2:	9800      	ldr	r0, [sp, #0]
 80193d4:	4631      	mov	r1, r6
 80193d6:	f7fa f9e7 	bl	80137a8 <SCROLLBAR__Rect2VRect>
 80193da:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80193de:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 80193e2:	9b00      	ldr	r3, [sp, #0]
 80193e4:	ebc2 0a0a 	rsb	sl, r2, sl
 80193e8:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 80193ec:	6d58      	ldr	r0, [r3, #84]	; 0x54
 80193ee:	f10a 0601 	add.w	r6, sl, #1
 80193f2:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 80193f6:	4649      	mov	r1, r9
 80193f8:	4370      	muls	r0, r6
 80193fa:	f7fe fd9f 	bl	8017f3c <GUI__DivideRound32>
 80193fe:	4b17      	ldr	r3, [pc, #92]	; (801945c <_CalcPositions+0x150>)
 8019400:	f8c4 a014 	str.w	sl, [r4, #20]
 8019404:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019408:	1c5a      	adds	r2, r3, #1
 801940a:	4282      	cmp	r2, r0
 801940c:	bfa8      	it	ge
 801940e:	1c98      	addge	r0, r3, #2
 8019410:	42b0      	cmp	r0, r6
 8019412:	bfb4      	ite	lt
 8019414:	4607      	movlt	r7, r0
 8019416:	4637      	movge	r7, r6
 8019418:	ebc7 0806 	rsb	r8, r7, r6
 801941c:	442e      	add	r6, r5
 801941e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8019422:	6126      	str	r6, [r4, #16]
 8019424:	ae10      	add	r6, sp, #64	; 0x40
 8019426:	6023      	str	r3, [r4, #0]
 8019428:	1e6b      	subs	r3, r5, #1
 801942a:	6063      	str	r3, [r4, #4]
 801942c:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 8019430:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8019432:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8019434:	fb00 f008 	mul.w	r0, r0, r8
 8019438:	ebc1 0109 	rsb	r1, r1, r9
 801943c:	f7fe fd7e 	bl	8017f3c <GUI__DivideRound32>
 8019440:	4428      	add	r0, r5
 8019442:	19c5      	adds	r5, r0, r7
 8019444:	3d01      	subs	r5, #1
 8019446:	60a0      	str	r0, [r4, #8]
 8019448:	60e5      	str	r5, [r4, #12]
 801944a:	f8c4 801c 	str.w	r8, [r4, #28]
 801944e:	6227      	str	r7, [r4, #32]
 8019450:	4668      	mov	r0, sp
 8019452:	f7f9 fa9b 	bl	801298c <GUI_ALLOC_UnlockH>
 8019456:	b010      	add	sp, #64	; 0x40
 8019458:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801945c:	200001f2 	.word	0x200001f2

08019460 <_Paint>:
 8019460:	b570      	push	{r4, r5, r6, lr}
 8019462:	b098      	sub	sp, #96	; 0x60
 8019464:	4606      	mov	r6, r0
 8019466:	f7f9 fa83 	bl	8012970 <GUI_ALLOC_LockH>
 801946a:	6d83      	ldr	r3, [r0, #88]	; 0x58
 801946c:	9305      	str	r3, [sp, #20]
 801946e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8019470:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8019472:	9001      	str	r0, [sp, #4]
 8019474:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8019478:	a906      	add	r1, sp, #24
 801947a:	4605      	mov	r5, r0
 801947c:	4630      	mov	r0, r6
 801947e:	9304      	str	r3, [sp, #16]
 8019480:	f7ff ff44 	bl	801930c <_CalcPositions>
 8019484:	a801      	add	r0, sp, #4
 8019486:	f7f9 fa81 	bl	801298c <GUI_ALLOC_UnlockH>
 801948a:	a902      	add	r1, sp, #8
 801948c:	4628      	mov	r0, r5
 801948e:	f7ef fdd4 	bl	800903a <WIDGET__GetClientRect>
 8019492:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8019496:	9314      	str	r3, [sp, #80]	; 0x50
 8019498:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801949c:	9316      	str	r3, [sp, #88]	; 0x58
 801949e:	ab04      	add	r3, sp, #16
 80194a0:	9317      	str	r3, [sp, #92]	; 0x5c
 80194a2:	2308      	movs	r3, #8
 80194a4:	9310      	str	r3, [sp, #64]	; 0x40
 80194a6:	9b06      	ldr	r3, [sp, #24]
 80194a8:	9313      	str	r3, [sp, #76]	; 0x4c
 80194aa:	9b07      	ldr	r3, [sp, #28]
 80194ac:	9315      	str	r3, [sp, #84]	; 0x54
 80194ae:	960f      	str	r6, [sp, #60]	; 0x3c
 80194b0:	a80f      	add	r0, sp, #60	; 0x3c
 80194b2:	47a0      	blx	r4
 80194b4:	2310      	movs	r3, #16
 80194b6:	9310      	str	r3, [sp, #64]	; 0x40
 80194b8:	9b07      	ldr	r3, [sp, #28]
 80194ba:	3301      	adds	r3, #1
 80194bc:	9313      	str	r3, [sp, #76]	; 0x4c
 80194be:	9b08      	ldr	r3, [sp, #32]
 80194c0:	3b01      	subs	r3, #1
 80194c2:	9315      	str	r3, [sp, #84]	; 0x54
 80194c4:	a80f      	add	r0, sp, #60	; 0x3c
 80194c6:	47a0      	blx	r4
 80194c8:	2311      	movs	r3, #17
 80194ca:	9310      	str	r3, [sp, #64]	; 0x40
 80194cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194ce:	3301      	adds	r3, #1
 80194d0:	9313      	str	r3, [sp, #76]	; 0x4c
 80194d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80194d4:	3b01      	subs	r3, #1
 80194d6:	9315      	str	r3, [sp, #84]	; 0x54
 80194d8:	a80f      	add	r0, sp, #60	; 0x3c
 80194da:	47a0      	blx	r4
 80194dc:	2313      	movs	r3, #19
 80194de:	9310      	str	r3, [sp, #64]	; 0x40
 80194e0:	9b08      	ldr	r3, [sp, #32]
 80194e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80194e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194e6:	9315      	str	r3, [sp, #84]	; 0x54
 80194e8:	a80f      	add	r0, sp, #60	; 0x3c
 80194ea:	47a0      	blx	r4
 80194ec:	2309      	movs	r3, #9
 80194ee:	9310      	str	r3, [sp, #64]	; 0x40
 80194f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80194f2:	9313      	str	r3, [sp, #76]	; 0x4c
 80194f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80194f6:	9315      	str	r3, [sp, #84]	; 0x54
 80194f8:	a80f      	add	r0, sp, #60	; 0x3c
 80194fa:	47a0      	blx	r4
 80194fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80194fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019500:	429a      	cmp	r2, r3
 8019502:	d006      	beq.n	8019512 <_Paint+0xb2>
 8019504:	210c      	movs	r1, #12
 8019506:	3201      	adds	r2, #1
 8019508:	9110      	str	r1, [sp, #64]	; 0x40
 801950a:	9213      	str	r2, [sp, #76]	; 0x4c
 801950c:	9315      	str	r3, [sp, #84]	; 0x54
 801950e:	a80f      	add	r0, sp, #60	; 0x3c
 8019510:	47a0      	blx	r4
 8019512:	b018      	add	sp, #96	; 0x60
 8019514:	bd70      	pop	{r4, r5, r6, pc}

08019516 <WM__SendMessageIfEnabled>:
 8019516:	b538      	push	{r3, r4, r5, lr}
 8019518:	4604      	mov	r4, r0
 801951a:	460d      	mov	r5, r1
 801951c:	f7f2 f8f8 	bl	800b710 <WM__IsEnabled>
 8019520:	b128      	cbz	r0, 801952e <WM__SendMessageIfEnabled+0x18>
 8019522:	4620      	mov	r0, r4
 8019524:	4629      	mov	r1, r5
 8019526:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801952a:	f7fb bc6f 	b.w	8014e0c <WM__SendMessage>
 801952e:	bd38      	pop	{r3, r4, r5, pc}

08019530 <WM__ForEachDesc>:
 8019530:	b570      	push	{r4, r5, r6, lr}
 8019532:	460d      	mov	r5, r1
 8019534:	4616      	mov	r6, r2
 8019536:	f7f9 fa11 	bl	801295c <GUI_ALLOC_h2p>
 801953a:	69c4      	ldr	r4, [r0, #28]
 801953c:	b164      	cbz	r4, 8019558 <WM__ForEachDesc+0x28>
 801953e:	4620      	mov	r0, r4
 8019540:	4631      	mov	r1, r6
 8019542:	47a8      	blx	r5
 8019544:	4620      	mov	r0, r4
 8019546:	4629      	mov	r1, r5
 8019548:	4632      	mov	r2, r6
 801954a:	f7ff fff1 	bl	8019530 <WM__ForEachDesc>
 801954e:	4620      	mov	r0, r4
 8019550:	f7f9 fa04 	bl	801295c <GUI_ALLOC_h2p>
 8019554:	6a04      	ldr	r4, [r0, #32]
 8019556:	e7f1      	b.n	801953c <WM__ForEachDesc+0xc>
 8019558:	bd70      	pop	{r4, r5, r6, pc}

0801955a <_GetDialogItem>:
 801955a:	b570      	push	{r4, r5, r6, lr}
 801955c:	4606      	mov	r6, r0
 801955e:	460d      	mov	r5, r1
 8019560:	f7f9 f9fc 	bl	801295c <GUI_ALLOC_h2p>
 8019564:	69c4      	ldr	r4, [r0, #28]
 8019566:	b14c      	cbz	r4, 801957c <_GetDialogItem+0x22>
 8019568:	4620      	mov	r0, r4
 801956a:	f7f2 fd73 	bl	800c054 <WM_GetId>
 801956e:	42a8      	cmp	r0, r5
 8019570:	4620      	mov	r0, r4
 8019572:	d013      	beq.n	801959c <_GetDialogItem+0x42>
 8019574:	f7f9 f9f2 	bl	801295c <GUI_ALLOC_h2p>
 8019578:	6a04      	ldr	r4, [r0, #32]
 801957a:	e7f4      	b.n	8019566 <_GetDialogItem+0xc>
 801957c:	4630      	mov	r0, r6
 801957e:	f7f9 f9ed 	bl	801295c <GUI_ALLOC_h2p>
 8019582:	69c4      	ldr	r4, [r0, #28]
 8019584:	4620      	mov	r0, r4
 8019586:	b144      	cbz	r4, 801959a <_GetDialogItem+0x40>
 8019588:	4629      	mov	r1, r5
 801958a:	f7ff ffe6 	bl	801955a <_GetDialogItem>
 801958e:	b928      	cbnz	r0, 801959c <_GetDialogItem+0x42>
 8019590:	4620      	mov	r0, r4
 8019592:	f7f9 f9e3 	bl	801295c <GUI_ALLOC_h2p>
 8019596:	6a04      	ldr	r4, [r0, #32]
 8019598:	e7f4      	b.n	8019584 <_GetDialogItem+0x2a>
 801959a:	bd70      	pop	{r4, r5, r6, pc}
 801959c:	bd70      	pop	{r4, r5, r6, pc}

0801959e <WM_GetScrollbarH>:
 801959e:	b110      	cbz	r0, 80195a6 <WM_GetScrollbarH+0x8>
 80195a0:	21ff      	movs	r1, #255	; 0xff
 80195a2:	f7ff bfda 	b.w	801955a <_GetDialogItem>
 80195a6:	4770      	bx	lr

080195a8 <WM_GetScrollbarV>:
 80195a8:	b110      	cbz	r0, 80195b0 <WM_GetScrollbarV+0x8>
 80195aa:	21fe      	movs	r1, #254	; 0xfe
 80195ac:	f7ff bfd5 	b.w	801955a <_GetDialogItem>
 80195b0:	4770      	bx	lr

080195b2 <LCD_GetPixelColor>:
 80195b2:	b508      	push	{r3, lr}
 80195b4:	f000 f804 	bl	80195c0 <LCD_GetPixelIndex>
 80195b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80195bc:	f7f6 bdac 	b.w	8010118 <LCD_Index2Color>

080195c0 <LCD_GetPixelIndex>:
 80195c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80195c2:	4f14      	ldr	r7, [pc, #80]	; (8019614 <LCD_GetPixelIndex+0x54>)
 80195c4:	4e14      	ldr	r6, [pc, #80]	; (8019618 <LCD_GetPixelIndex+0x58>)
 80195c6:	683b      	ldr	r3, [r7, #0]
 80195c8:	7c5b      	ldrb	r3, [r3, #17]
 80195ca:	4605      	mov	r5, r0
 80195cc:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 80195d0:	68c3      	ldr	r3, [r0, #12]
 80195d2:	460c      	mov	r4, r1
 80195d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80195d6:	4669      	mov	r1, sp
 80195d8:	4798      	blx	r3
 80195da:	f9bd 3000 	ldrsh.w	r3, [sp]
 80195de:	429d      	cmp	r5, r3
 80195e0:	db15      	blt.n	801960e <LCD_GetPixelIndex+0x4e>
 80195e2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80195e6:	429d      	cmp	r5, r3
 80195e8:	dc11      	bgt.n	801960e <LCD_GetPixelIndex+0x4e>
 80195ea:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80195ee:	429c      	cmp	r4, r3
 80195f0:	db0d      	blt.n	801960e <LCD_GetPixelIndex+0x4e>
 80195f2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80195f6:	429c      	cmp	r4, r3
 80195f8:	dc09      	bgt.n	801960e <LCD_GetPixelIndex+0x4e>
 80195fa:	683b      	ldr	r3, [r7, #0]
 80195fc:	7c5b      	ldrb	r3, [r3, #17]
 80195fe:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 8019602:	68c3      	ldr	r3, [r0, #12]
 8019604:	4629      	mov	r1, r5
 8019606:	695b      	ldr	r3, [r3, #20]
 8019608:	4622      	mov	r2, r4
 801960a:	4798      	blx	r3
 801960c:	e000      	b.n	8019610 <LCD_GetPixelIndex+0x50>
 801960e:	2000      	movs	r0, #0
 8019610:	b003      	add	sp, #12
 8019612:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019614:	2000016c 	.word	0x2000016c
 8019618:	20019c9c 	.word	0x20019c9c

0801961c <LCD_GetNumLayers>:
 801961c:	b510      	push	{r4, lr}
 801961e:	2000      	movs	r0, #0
 8019620:	f7f8 fc4c 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 8019624:	1c04      	adds	r4, r0, #0
 8019626:	f04f 0001 	mov.w	r0, #1
 801962a:	bf18      	it	ne
 801962c:	2401      	movne	r4, #1
 801962e:	f7f8 fc45 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 8019632:	b100      	cbz	r0, 8019636 <LCD_GetNumLayers+0x1a>
 8019634:	3401      	adds	r4, #1
 8019636:	4620      	mov	r0, r4
 8019638:	bd10      	pop	{r4, pc}
	...

0801963c <LCD_GetBkColorIndex>:
 801963c:	4b02      	ldr	r3, [pc, #8]	; (8019648 <LCD_GetBkColorIndex+0xc>)
 801963e:	681b      	ldr	r3, [r3, #0]
 8019640:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019642:	6818      	ldr	r0, [r3, #0]
 8019644:	4770      	bx	lr
 8019646:	bf00      	nop
 8019648:	2000016c 	.word	0x2000016c

0801964c <LCD_GetColorIndex>:
 801964c:	4b02      	ldr	r3, [pc, #8]	; (8019658 <LCD_GetColorIndex+0xc>)
 801964e:	681b      	ldr	r3, [r3, #0]
 8019650:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019652:	6818      	ldr	r0, [r3, #0]
 8019654:	4770      	bx	lr
 8019656:	bf00      	nop
 8019658:	2000016c 	.word	0x2000016c

0801965c <GUI__sqrt32>:
 801965c:	b510      	push	{r4, lr}
 801965e:	2110      	movs	r1, #16
 8019660:	2300      	movs	r3, #0
 8019662:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8019666:	189c      	adds	r4, r3, r2
 8019668:	4284      	cmp	r4, r0
 801966a:	bf9c      	itt	ls
 801966c:	18a3      	addls	r3, r4, r2
 801966e:	ebc4 0000 	rsbls	r0, r4, r0
 8019672:	3901      	subs	r1, #1
 8019674:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8019678:	ea4f 0292 	mov.w	r2, r2, lsr #2
 801967c:	d1f3      	bne.n	8019666 <GUI__sqrt32+0xa>
 801967e:	4618      	mov	r0, r3
 8019680:	bd10      	pop	{r4, pc}

08019682 <GUI__HandleEOLine>:
 8019682:	6803      	ldr	r3, [r0, #0]
 8019684:	781a      	ldrb	r2, [r3, #0]
 8019686:	b122      	cbz	r2, 8019692 <GUI__HandleEOLine+0x10>
 8019688:	2a0a      	cmp	r2, #10
 801968a:	d104      	bne.n	8019696 <GUI__HandleEOLine+0x14>
 801968c:	3301      	adds	r3, #1
 801968e:	6003      	str	r3, [r0, #0]
 8019690:	e001      	b.n	8019696 <GUI__HandleEOLine+0x14>
 8019692:	2001      	movs	r0, #1
 8019694:	4770      	bx	lr
 8019696:	2000      	movs	r0, #0
 8019698:	4770      	bx	lr

0801969a <_CreateBuffer>:
 801969a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801969c:	6943      	ldr	r3, [r0, #20]
 801969e:	4605      	mov	r5, r0
 80196a0:	8818      	ldrh	r0, [r3, #0]
 80196a2:	300d      	adds	r0, #13
 80196a4:	0080      	lsls	r0, r0, #2
 80196a6:	460e      	mov	r6, r1
 80196a8:	f7f9 fbb6 	bl	8012e18 <GUI_ALLOC_AllocNoInit>
 80196ac:	4607      	mov	r7, r0
 80196ae:	b908      	cbnz	r0, 80196b4 <_CreateBuffer+0x1a>
 80196b0:	2000      	movs	r0, #0
 80196b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80196b4:	f7f9 f95c 	bl	8012970 <GUI_ALLOC_LockH>
 80196b8:	682b      	ldr	r3, [r5, #0]
 80196ba:	4604      	mov	r4, r0
 80196bc:	6998      	ldr	r0, [r3, #24]
 80196be:	f7f8 fbfd 	bl	8011ebc <GUI_DEVICE__GetpDriver>
 80196c2:	2800      	cmp	r0, #0
 80196c4:	d0f4      	beq.n	80196b0 <_CreateBuffer+0x16>
 80196c6:	68c3      	ldr	r3, [r0, #12]
 80196c8:	2108      	movs	r1, #8
 80196ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80196cc:	4798      	blx	r3
 80196ce:	2802      	cmp	r0, #2
 80196d0:	dd0b      	ble.n	80196ea <_CreateBuffer+0x50>
 80196d2:	2804      	cmp	r0, #4
 80196d4:	dd06      	ble.n	80196e4 <_CreateBuffer+0x4a>
 80196d6:	2808      	cmp	r0, #8
 80196d8:	dd06      	ble.n	80196e8 <_CreateBuffer+0x4e>
 80196da:	2811      	cmp	r0, #17
 80196dc:	bfb4      	ite	lt
 80196de:	2010      	movlt	r0, #16
 80196e0:	2020      	movge	r0, #32
 80196e2:	e002      	b.n	80196ea <_CreateBuffer+0x50>
 80196e4:	2004      	movs	r0, #4
 80196e6:	e000      	b.n	80196ea <_CreateBuffer+0x50>
 80196e8:	2008      	movs	r0, #8
 80196ea:	2808      	cmp	r0, #8
 80196ec:	61a0      	str	r0, [r4, #24]
 80196ee:	dd04      	ble.n	80196fa <_CreateBuffer+0x60>
 80196f0:	2810      	cmp	r0, #16
 80196f2:	bfcc      	ite	gt
 80196f4:	2304      	movgt	r3, #4
 80196f6:	2302      	movle	r3, #2
 80196f8:	e000      	b.n	80196fc <_CreateBuffer+0x62>
 80196fa:	2301      	movs	r3, #1
 80196fc:	696a      	ldr	r2, [r5, #20]
 80196fe:	6123      	str	r3, [r4, #16]
 8019700:	8812      	ldrh	r2, [r2, #0]
 8019702:	61e2      	str	r2, [r4, #28]
 8019704:	4353      	muls	r3, r2
 8019706:	6163      	str	r3, [r4, #20]
 8019708:	f7f9 fadc 	bl	8012cc4 <GUI_ALLOC_GetMaxSize>
 801970c:	6963      	ldr	r3, [r4, #20]
 801970e:	f884 6030 	strb.w	r6, [r4, #48]	; 0x30
 8019712:	4283      	cmp	r3, r0
 8019714:	f04f 0200 	mov.w	r2, #0
 8019718:	bfc8      	it	gt
 801971a:	6160      	strgt	r0, [r4, #20]
 801971c:	2e01      	cmp	r6, #1
 801971e:	60e2      	str	r2, [r4, #12]
 8019720:	bf18      	it	ne
 8019722:	69e2      	ldrne	r2, [r4, #28]
 8019724:	60a7      	str	r7, [r4, #8]
 8019726:	bf18      	it	ne
 8019728:	f102 4280 	addne.w	r2, r2, #1073741824	; 0x40000000
 801972c:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8019730:	bf18      	it	ne
 8019732:	f102 32ff 	addne.w	r2, r2, #4294967295
 8019736:	6023      	str	r3, [r4, #0]
 8019738:	bf18      	it	ne
 801973a:	eb03 0382 	addne.w	r3, r3, r2, lsl #2
 801973e:	6063      	str	r3, [r4, #4]
 8019740:	4620      	mov	r0, r4
 8019742:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08019744 <_GetBkIndex.isra.0>:
 8019744:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019748:	f9b3 8004 	ldrsh.w	r8, [r3, #4]
 801974c:	4540      	cmp	r0, r8
 801974e:	4606      	mov	r6, r0
 8019750:	460d      	mov	r5, r1
 8019752:	4691      	mov	r9, r2
 8019754:	461c      	mov	r4, r3
 8019756:	da04      	bge.n	8019762 <_GetBkIndex.isra.0+0x1e>
 8019758:	f8d9 0000 	ldr.w	r0, [r9]
 801975c:	bb28      	cbnz	r0, 80197aa <_GetBkIndex.isra.0+0x66>
 801975e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019762:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019766:	4298      	cmp	r0, r3
 8019768:	dcf6      	bgt.n	8019758 <_GetBkIndex.isra.0+0x14>
 801976a:	f9b4 7006 	ldrsh.w	r7, [r4, #6]
 801976e:	42b9      	cmp	r1, r7
 8019770:	dbf2      	blt.n	8019758 <_GetBkIndex.isra.0+0x14>
 8019772:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8019776:	4299      	cmp	r1, r3
 8019778:	dcee      	bgt.n	8019758 <_GetBkIndex.isra.0+0x14>
 801977a:	ebc8 0800 	rsb	r8, r8, r0
 801977e:	1bcf      	subs	r7, r1, r7
 8019780:	6960      	ldr	r0, [r4, #20]
 8019782:	4641      	mov	r1, r8
 8019784:	463a      	mov	r2, r7
 8019786:	f000 fba3 	bl	8019ed0 <GUI_GetBitmapPixelIndex>
 801978a:	2800      	cmp	r0, #0
 801978c:	d0e4      	beq.n	8019758 <_GetBkIndex.isra.0+0x14>
 801978e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8019792:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8019796:	1a8a      	subs	r2, r1, r2
 8019798:	fb02 7707 	mla	r7, r2, r7, r7
 801979c:	f104 0320 	add.w	r3, r4, #32
 80197a0:	44b8      	add	r8, r7
 80197a2:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 80197a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80197aa:	68c3      	ldr	r3, [r0, #12]
 80197ac:	4631      	mov	r1, r6
 80197ae:	695b      	ldr	r3, [r3, #20]
 80197b0:	462a      	mov	r2, r5
 80197b2:	4798      	blx	r3
 80197b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080197b8 <_GetBkIndexAlpha.isra.2>:
 80197b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80197bc:	f9b3 6004 	ldrsh.w	r6, [r3, #4]
 80197c0:	42b0      	cmp	r0, r6
 80197c2:	4680      	mov	r8, r0
 80197c4:	460f      	mov	r7, r1
 80197c6:	4691      	mov	r9, r2
 80197c8:	461d      	mov	r5, r3
 80197ca:	db14      	blt.n	80197f6 <_GetBkIndexAlpha.isra.2+0x3e>
 80197cc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80197d0:	4298      	cmp	r0, r3
 80197d2:	dc10      	bgt.n	80197f6 <_GetBkIndexAlpha.isra.2+0x3e>
 80197d4:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
 80197d8:	42a1      	cmp	r1, r4
 80197da:	db0c      	blt.n	80197f6 <_GetBkIndexAlpha.isra.2+0x3e>
 80197dc:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80197e0:	4299      	cmp	r1, r3
 80197e2:	dc08      	bgt.n	80197f6 <_GetBkIndexAlpha.isra.2+0x3e>
 80197e4:	1b86      	subs	r6, r0, r6
 80197e6:	6968      	ldr	r0, [r5, #20]
 80197e8:	1b0c      	subs	r4, r1, r4
 80197ea:	b130      	cbz	r0, 80197fa <_GetBkIndexAlpha.isra.2+0x42>
 80197ec:	4631      	mov	r1, r6
 80197ee:	4622      	mov	r2, r4
 80197f0:	f000 fb6e 	bl	8019ed0 <GUI_GetBitmapPixelIndex>
 80197f4:	e003      	b.n	80197fe <_GetBkIndexAlpha.isra.2+0x46>
 80197f6:	2400      	movs	r4, #0
 80197f8:	4626      	mov	r6, r4
 80197fa:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 80197fe:	0e00      	lsrs	r0, r0, #24
 8019800:	28ff      	cmp	r0, #255	; 0xff
 8019802:	d109      	bne.n	8019818 <_GetBkIndexAlpha.isra.2+0x60>
 8019804:	f8d9 0000 	ldr.w	r0, [r9]
 8019808:	b190      	cbz	r0, 8019830 <_GetBkIndexAlpha.isra.2+0x78>
 801980a:	68c3      	ldr	r3, [r0, #12]
 801980c:	4641      	mov	r1, r8
 801980e:	695b      	ldr	r3, [r3, #20]
 8019810:	463a      	mov	r2, r7
 8019812:	4798      	blx	r3
 8019814:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019818:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 801981c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8019820:	1a8a      	subs	r2, r1, r2
 8019822:	fb02 4404 	mla	r4, r2, r4, r4
 8019826:	f105 0320 	add.w	r3, r5, #32
 801982a:	4426      	add	r6, r4
 801982c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8019830:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08019834 <_GetDeviceRect>:
 8019834:	b538      	push	{r3, r4, r5, lr}
 8019836:	4a0c      	ldr	r2, [pc, #48]	; (8019868 <_GetDeviceRect+0x34>)
 8019838:	6983      	ldr	r3, [r0, #24]
 801983a:	56d2      	ldrsb	r2, [r2, r3]
 801983c:	2a01      	cmp	r2, #1
 801983e:	4605      	mov	r5, r0
 8019840:	460c      	mov	r4, r1
 8019842:	dd0d      	ble.n	8019860 <_GetDeviceRect+0x2c>
 8019844:	2200      	movs	r2, #0
 8019846:	804a      	strh	r2, [r1, #2]
 8019848:	800a      	strh	r2, [r1, #0]
 801984a:	4618      	mov	r0, r3
 801984c:	f7f6 f882 	bl	800f954 <LCD_GetXSizeEx>
 8019850:	3801      	subs	r0, #1
 8019852:	80a0      	strh	r0, [r4, #4]
 8019854:	69a8      	ldr	r0, [r5, #24]
 8019856:	f7f6 f880 	bl	800f95a <LCD_GetYSizeEx>
 801985a:	3801      	subs	r0, #1
 801985c:	80e0      	strh	r0, [r4, #6]
 801985e:	bd38      	pop	{r3, r4, r5, pc}
 8019860:	68c3      	ldr	r3, [r0, #12]
 8019862:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019864:	4798      	blx	r3
 8019866:	bd38      	pop	{r3, r4, r5, pc}
 8019868:	20019c6c 	.word	0x20019c6c

0801986c <_FlushBuffer.isra.5>:
 801986c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801986e:	460c      	mov	r4, r1
 8019870:	68c9      	ldr	r1, [r1, #12]
 8019872:	b087      	sub	sp, #28
 8019874:	2900      	cmp	r1, #0
 8019876:	d030      	beq.n	80198da <_FlushBuffer.isra.5+0x6e>
 8019878:	f994 3030 	ldrsb.w	r3, [r4, #48]	; 0x30
 801987c:	6822      	ldr	r2, [r4, #0]
 801987e:	2b01      	cmp	r3, #1
 8019880:	d103      	bne.n	801988a <_FlushBuffer.isra.5+0x1e>
 8019882:	4615      	mov	r5, r2
 8019884:	6062      	str	r2, [r4, #4]
 8019886:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8019888:	e009      	b.n	801989e <_FlushBuffer.isra.5+0x32>
 801988a:	69e3      	ldr	r3, [r4, #28]
 801988c:	6865      	ldr	r5, [r4, #4]
 801988e:	6a27      	ldr	r7, [r4, #32]
 8019890:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019894:	3b01      	subs	r3, #1
 8019896:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801989a:	3504      	adds	r5, #4
 801989c:	6063      	str	r3, [r4, #4]
 801989e:	6806      	ldr	r6, [r0, #0]
 80198a0:	b1b6      	cbz	r6, 80198d0 <_FlushBuffer.isra.5+0x64>
 80198a2:	69a2      	ldr	r2, [r4, #24]
 80198a4:	4628      	mov	r0, r5
 80198a6:	f7fe fb56 	bl	8017f56 <GUI__CompactPixelIndices>
 80198aa:	2301      	movs	r3, #1
 80198ac:	68f2      	ldr	r2, [r6, #12]
 80198ae:	9300      	str	r3, [sp, #0]
 80198b0:	69a3      	ldr	r3, [r4, #24]
 80198b2:	9301      	str	r3, [sp, #4]
 80198b4:	9503      	str	r5, [sp, #12]
 80198b6:	6963      	ldr	r3, [r4, #20]
 80198b8:	9302      	str	r3, [sp, #8]
 80198ba:	2500      	movs	r5, #0
 80198bc:	9504      	str	r5, [sp, #16]
 80198be:	9505      	str	r5, [sp, #20]
 80198c0:	f8d2 c004 	ldr.w	ip, [r2, #4]
 80198c4:	68e3      	ldr	r3, [r4, #12]
 80198c6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80198c8:	4630      	mov	r0, r6
 80198ca:	4639      	mov	r1, r7
 80198cc:	47e0      	blx	ip
 80198ce:	e000      	b.n	80198d2 <_FlushBuffer.isra.5+0x66>
 80198d0:	2501      	movs	r5, #1
 80198d2:	2300      	movs	r3, #0
 80198d4:	60e3      	str	r3, [r4, #12]
 80198d6:	b2e8      	uxtb	r0, r5
 80198d8:	e000      	b.n	80198dc <_FlushBuffer.isra.5+0x70>
 80198da:	4608      	mov	r0, r1
 80198dc:	b007      	add	sp, #28
 80198de:	bdf0      	pop	{r4, r5, r6, r7, pc}

080198e0 <_SetBkIndexBuffered>:
 80198e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80198e2:	9c06      	ldr	r4, [sp, #24]
 80198e4:	460d      	mov	r5, r1
 80198e6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80198e8:	428d      	cmp	r5, r1
 80198ea:	4606      	mov	r6, r0
 80198ec:	4617      	mov	r7, r2
 80198ee:	d105      	bne.n	80198fc <_SetBkIndexBuffered+0x1c>
 80198f0:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 80198f4:	6a21      	ldr	r1, [r4, #32]
 80198f6:	4411      	add	r1, r2
 80198f8:	4288      	cmp	r0, r1
 80198fa:	d003      	beq.n	8019904 <_SetBkIndexBuffered+0x24>
 80198fc:	4618      	mov	r0, r3
 80198fe:	4621      	mov	r1, r4
 8019900:	f7ff ffb4 	bl	801986c <_FlushBuffer.isra.5>
 8019904:	6863      	ldr	r3, [r4, #4]
 8019906:	601f      	str	r7, [r3, #0]
 8019908:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 801990c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8019910:	6063      	str	r3, [r4, #4]
 8019912:	68e3      	ldr	r3, [r4, #12]
 8019914:	b90b      	cbnz	r3, 801991a <_SetBkIndexBuffered+0x3a>
 8019916:	62a6      	str	r6, [r4, #40]	; 0x28
 8019918:	62e5      	str	r5, [r4, #44]	; 0x2c
 801991a:	3301      	adds	r3, #1
 801991c:	60e3      	str	r3, [r4, #12]
 801991e:	6226      	str	r6, [r4, #32]
 8019920:	6265      	str	r5, [r4, #36]	; 0x24
 8019922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08019924 <_ReleaseBuffer.isra.6>:
 8019924:	b513      	push	{r0, r1, r4, lr}
 8019926:	9101      	str	r1, [sp, #4]
 8019928:	f7ff ffa0 	bl	801986c <_FlushBuffer.isra.5>
 801992c:	a802      	add	r0, sp, #8
 801992e:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8019932:	6894      	ldr	r4, [r2, #8]
 8019934:	f7f9 f82a 	bl	801298c <GUI_ALLOC_UnlockH>
 8019938:	4620      	mov	r0, r4
 801993a:	f7f9 f853 	bl	80129e4 <GUI_ALLOC_Free>
 801993e:	b002      	add	sp, #8
 8019940:	bd10      	pop	{r4, pc}
	...

08019944 <GUI_SPRITE_SetPosition>:
 8019944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019948:	b0a7      	sub	sp, #156	; 0x9c
 801994a:	9116      	str	r1, [sp, #88]	; 0x58
 801994c:	9217      	str	r2, [sp, #92]	; 0x5c
 801994e:	2800      	cmp	r0, #0
 8019950:	f000 8275 	beq.w	8019e3e <GUI_SPRITE_SetPosition+0x4fa>
 8019954:	f7f9 f80c 	bl	8012970 <GUI_ALLOC_LockH>
 8019958:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801995a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801995e:	6801      	ldr	r1, [r0, #0]
 8019960:	9023      	str	r0, [sp, #140]	; 0x8c
 8019962:	429a      	cmp	r2, r3
 8019964:	9106      	str	r1, [sp, #24]
 8019966:	d106      	bne.n	8019976 <GUI_SPRITE_SetPosition+0x32>
 8019968:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801996c:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 8019970:	459e      	cmp	lr, r3
 8019972:	f000 8239 	beq.w	8019de8 <GUI_SPRITE_SetPosition+0x4a4>
 8019976:	2000      	movs	r0, #0
 8019978:	f7f4 fe1a 	bl	800e5b0 <GUI_MEMDEV_Select>
 801997c:	4ba0      	ldr	r3, [pc, #640]	; (8019c00 <GUI_SPRITE_SetPosition+0x2bc>)
 801997e:	9906      	ldr	r1, [sp, #24]
 8019980:	681b      	ldr	r3, [r3, #0]
 8019982:	6989      	ldr	r1, [r1, #24]
 8019984:	7c5a      	ldrb	r2, [r3, #17]
 8019986:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8019988:	9108      	str	r1, [sp, #32]
 801998a:	4291      	cmp	r1, r2
 801998c:	bf18      	it	ne
 801998e:	7459      	strbne	r1, [r3, #17]
 8019990:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8019994:	9310      	str	r3, [sp, #64]	; 0x40
 8019996:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 801999a:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 801999e:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 80199a2:	921a      	str	r2, [sp, #104]	; 0x68
 80199a4:	ebce 0303 	rsb	r3, lr, r3
 80199a8:	1c59      	adds	r1, r3, #1
 80199aa:	9307      	str	r3, [sp, #28]
 80199ac:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80199b0:	901f      	str	r0, [sp, #124]	; 0x7c
 80199b2:	1b9b      	subs	r3, r3, r6
 80199b4:	1c5a      	adds	r2, r3, #1
 80199b6:	930e      	str	r3, [sp, #56]	; 0x38
 80199b8:	8a2b      	ldrh	r3, [r5, #16]
 80199ba:	910d      	str	r1, [sp, #52]	; 0x34
 80199bc:	079b      	lsls	r3, r3, #30
 80199be:	921e      	str	r2, [sp, #120]	; 0x78
 80199c0:	f140 81f7 	bpl.w	8019db2 <GUI_SPRITE_SetPosition+0x46e>
 80199c4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80199c6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80199c8:	696b      	ldr	r3, [r5, #20]
 80199ca:	9311      	str	r3, [sp, #68]	; 0x44
 80199cc:	ebce 0a01 	rsb	sl, lr, r1
 80199d0:	f1ba 0f00 	cmp.w	sl, #0
 80199d4:	ebc6 0902 	rsb	r9, r6, r2
 80199d8:	dc0c      	bgt.n	80199f4 <GUI_SPRITE_SetPosition+0xb0>
 80199da:	9b07      	ldr	r3, [sp, #28]
 80199dc:	930a      	str	r3, [sp, #40]	; 0x28
 80199de:	469e      	mov	lr, r3
 80199e0:	f04f 32ff 	mov.w	r2, #4294967295
 80199e4:	44d6      	add	lr, sl
 80199e6:	2100      	movs	r1, #0
 80199e8:	f8cd e01c 	str.w	lr, [sp, #28]
 80199ec:	911c      	str	r1, [sp, #112]	; 0x70
 80199ee:	9214      	str	r2, [sp, #80]	; 0x50
 80199f0:	9204      	str	r2, [sp, #16]
 80199f2:	e009      	b.n	8019a08 <GUI_SPRITE_SetPosition+0xc4>
 80199f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80199f6:	f8cd a070 	str.w	sl, [sp, #112]	; 0x70
 80199fa:	f04f 0e01 	mov.w	lr, #1
 80199fe:	2100      	movs	r1, #0
 8019a00:	9314      	str	r3, [sp, #80]	; 0x50
 8019a02:	f8cd e010 	str.w	lr, [sp, #16]
 8019a06:	910a      	str	r1, [sp, #40]	; 0x28
 8019a08:	f1b9 0f00 	cmp.w	r9, #0
 8019a0c:	dc0c      	bgt.n	8019a28 <GUI_SPRITE_SetPosition+0xe4>
 8019a0e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019a10:	4622      	mov	r2, r4
 8019a12:	f04f 3eff 	mov.w	lr, #4294967295
 8019a16:	444a      	add	r2, r9
 8019a18:	2300      	movs	r3, #0
 8019a1a:	920e      	str	r2, [sp, #56]	; 0x38
 8019a1c:	931b      	str	r3, [sp, #108]	; 0x6c
 8019a1e:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
 8019a22:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
 8019a26:	e006      	b.n	8019a36 <GUI_SPRITE_SetPosition+0xf2>
 8019a28:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8019a2a:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
 8019a2e:	2301      	movs	r3, #1
 8019a30:	9215      	str	r2, [sp, #84]	; 0x54
 8019a32:	9309      	str	r3, [sp, #36]	; 0x24
 8019a34:	2400      	movs	r4, #0
 8019a36:	9806      	ldr	r0, [sp, #24]
 8019a38:	a924      	add	r1, sp, #144	; 0x90
 8019a3a:	f7ff fefb 	bl	8019834 <_GetDeviceRect>
 8019a3e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8019a40:	9904      	ldr	r1, [sp, #16]
 8019a42:	f7ff fe2a 	bl	801969a <_CreateBuffer>
 8019a46:	9012      	str	r0, [sp, #72]	; 0x48
 8019a48:	2800      	cmp	r0, #0
 8019a4a:	f000 81b2 	beq.w	8019db2 <GUI_SPRITE_SetPosition+0x46e>
 8019a4e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8019a50:	9904      	ldr	r1, [sp, #16]
 8019a52:	f7ff fe22 	bl	801969a <_CreateBuffer>
 8019a56:	9013      	str	r0, [sp, #76]	; 0x4c
 8019a58:	2800      	cmp	r0, #0
 8019a5a:	f000 81a5 	beq.w	8019da8 <GUI_SPRITE_SetPosition+0x464>
 8019a5e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019a60:	68d8      	ldr	r0, [r3, #12]
 8019a62:	4426      	add	r6, r4
 8019a64:	b990      	cbnz	r0, 8019a8c <GUI_SPRITE_SetPosition+0x148>
 8019a66:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8019a6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019a6c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019a6e:	9019      	str	r0, [sp, #100]	; 0x64
 8019a70:	ea4f 038e 	mov.w	r3, lr, lsl #2
 8019a74:	434b      	muls	r3, r1
 8019a76:	9321      	str	r3, [sp, #132]	; 0x84
 8019a78:	fb0e 2304 	mla	r3, lr, r4, r2
 8019a7c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8019a80:	930c      	str	r3, [sp, #48]	; 0x30
 8019a82:	9b04      	ldr	r3, [sp, #16]
 8019a84:	009b      	lsls	r3, r3, #2
 8019a86:	444e      	add	r6, r9
 8019a88:	9320      	str	r3, [sp, #128]	; 0x80
 8019a8a:	e0db      	b.n	8019c44 <GUI_SPRITE_SetPosition+0x300>
 8019a8c:	f7f8 ff70 	bl	8012970 <GUI_ALLOC_LockH>
 8019a90:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8019a94:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019a96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019a98:	9022      	str	r0, [sp, #136]	; 0x88
 8019a9a:	ea4f 038e 	mov.w	r3, lr, lsl #2
 8019a9e:	434b      	muls	r3, r1
 8019aa0:	9319      	str	r3, [sp, #100]	; 0x64
 8019aa2:	fb0e 2304 	mla	r3, lr, r4, r2
 8019aa6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8019aaa:	930b      	str	r3, [sp, #44]	; 0x2c
 8019aac:	9b04      	ldr	r3, [sp, #16]
 8019aae:	009b      	lsls	r3, r3, #2
 8019ab0:	444e      	add	r6, r9
 8019ab2:	931d      	str	r3, [sp, #116]	; 0x74
 8019ab4:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019ab6:	428c      	cmp	r4, r1
 8019ab8:	f000 809e 	beq.w	8019bf8 <GUI_SPRITE_SetPosition+0x2b4>
 8019abc:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8019ac0:	4574      	cmp	r4, lr
 8019ac2:	db05      	blt.n	8019ad0 <GUI_SPRITE_SetPosition+0x18c>
 8019ac4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019ac6:	428c      	cmp	r4, r1
 8019ac8:	bfcc      	ite	gt
 8019aca:	2300      	movgt	r3, #0
 8019acc:	2301      	movle	r3, #1
 8019ace:	e000      	b.n	8019ad2 <GUI_SPRITE_SetPosition+0x18e>
 8019ad0:	2300      	movs	r3, #0
 8019ad2:	b2db      	uxtb	r3, r3
 8019ad4:	9318      	str	r3, [sp, #96]	; 0x60
 8019ad6:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8019ad8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ada:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8019adc:	9105      	str	r1, [sp, #20]
 8019ade:	ebc9 0206 	rsb	r2, r9, r6
 8019ae2:	441f      	add	r7, r3
 8019ae4:	920c      	str	r2, [sp, #48]	; 0x30
 8019ae6:	4457      	add	r7, sl
 8019ae8:	461d      	mov	r5, r3
 8019aea:	9914      	ldr	r1, [sp, #80]	; 0x50
 8019aec:	428d      	cmp	r5, r1
 8019aee:	d07a      	beq.n	8019be6 <GUI_SPRITE_SetPosition+0x2a2>
 8019af0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019af2:	4629      	mov	r1, r5
 8019af4:	4622      	mov	r2, r4
 8019af6:	f000 f9eb 	bl	8019ed0 <GUI_GetBitmapPixelIndex>
 8019afa:	900f      	str	r0, [sp, #60]	; 0x3c
 8019afc:	2800      	cmp	r0, #0
 8019afe:	d069      	beq.n	8019bd4 <GUI_SPRITE_SetPosition+0x290>
 8019b00:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8019b02:	4295      	cmp	r5, r2
 8019b04:	ebca 0c07 	rsb	ip, sl, r7
 8019b08:	db07      	blt.n	8019b1a <GUI_SPRITE_SetPosition+0x1d6>
 8019b0a:	9b07      	ldr	r3, [sp, #28]
 8019b0c:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8019b10:	429d      	cmp	r5, r3
 8019b12:	bfc8      	it	gt
 8019b14:	f04f 0b00 	movgt.w	fp, #0
 8019b18:	e001      	b.n	8019b1e <GUI_SPRITE_SetPosition+0x1da>
 8019b1a:	f04f 0b00 	mov.w	fp, #0
 8019b1e:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8019b22:	429f      	cmp	r7, r3
 8019b24:	fa5f fb8b 	uxtb.w	fp, fp
 8019b28:	db17      	blt.n	8019b5a <GUI_SPRITE_SetPosition+0x216>
 8019b2a:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8019b2e:	429e      	cmp	r6, r3
 8019b30:	db13      	blt.n	8019b5a <GUI_SPRITE_SetPosition+0x216>
 8019b32:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8019b36:	429f      	cmp	r7, r3
 8019b38:	dc0f      	bgt.n	8019b5a <GUI_SPRITE_SetPosition+0x216>
 8019b3a:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8019b3e:	429e      	cmp	r6, r3
 8019b40:	dc0b      	bgt.n	8019b5a <GUI_SPRITE_SetPosition+0x216>
 8019b42:	4638      	mov	r0, r7
 8019b44:	4631      	mov	r1, r6
 8019b46:	9a06      	ldr	r2, [sp, #24]
 8019b48:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019b4a:	f8cd c00c 	str.w	ip, [sp, #12]
 8019b4e:	f7ff fdf9 	bl	8019744 <_GetBkIndex.isra.0>
 8019b52:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8019b56:	4680      	mov	r8, r0
 8019b58:	e001      	b.n	8019b5e <GUI_SPRITE_SetPosition+0x21a>
 8019b5a:	f04f 0800 	mov.w	r8, #0
 8019b5e:	f1bb 0f00 	cmp.w	fp, #0
 8019b62:	d00d      	beq.n	8019b80 <GUI_SPRITE_SetPosition+0x23c>
 8019b64:	ebb5 010a 	subs.w	r1, r5, sl
 8019b68:	d415      	bmi.n	8019b96 <GUI_SPRITE_SetPosition+0x252>
 8019b6a:	ebb4 0209 	subs.w	r2, r4, r9
 8019b6e:	d412      	bmi.n	8019b96 <GUI_SPRITE_SetPosition+0x252>
 8019b70:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019b72:	f8cd c00c 	str.w	ip, [sp, #12]
 8019b76:	f000 f9ab 	bl	8019ed0 <GUI_GetBitmapPixelIndex>
 8019b7a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8019b7e:	b950      	cbnz	r0, 8019b96 <GUI_SPRITE_SetPosition+0x252>
 8019b80:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8019b84:	459c      	cmp	ip, r3
 8019b86:	db06      	blt.n	8019b96 <GUI_SPRITE_SetPosition+0x252>
 8019b88:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8019b8c:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8019b90:	459e      	cmp	lr, r3
 8019b92:	f280 812d 	bge.w	8019df0 <GUI_SPRITE_SetPosition+0x4ac>
 8019b96:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8019b9a:	429f      	cmp	r7, r3
 8019b9c:	db17      	blt.n	8019bce <GUI_SPRITE_SetPosition+0x28a>
 8019b9e:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8019ba2:	429e      	cmp	r6, r3
 8019ba4:	db13      	blt.n	8019bce <GUI_SPRITE_SetPosition+0x28a>
 8019ba6:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8019baa:	429f      	cmp	r7, r3
 8019bac:	dc0f      	bgt.n	8019bce <GUI_SPRITE_SetPosition+0x28a>
 8019bae:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8019bb2:	429e      	cmp	r6, r3
 8019bb4:	dc0b      	bgt.n	8019bce <GUI_SPRITE_SetPosition+0x28a>
 8019bb6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019bb8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019bba:	f8dd e03c 	ldr.w	lr, [sp, #60]	; 0x3c
 8019bbe:	9100      	str	r1, [sp, #0]
 8019bc0:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 8019bc4:	9b06      	ldr	r3, [sp, #24]
 8019bc6:	4638      	mov	r0, r7
 8019bc8:	4631      	mov	r1, r6
 8019bca:	f7ff fe89 	bl	80198e0 <_SetBkIndexBuffered>
 8019bce:	9905      	ldr	r1, [sp, #20]
 8019bd0:	f8c1 8020 	str.w	r8, [r1, #32]
 8019bd4:	9b05      	ldr	r3, [sp, #20]
 8019bd6:	f8dd e074 	ldr.w	lr, [sp, #116]	; 0x74
 8019bda:	9a04      	ldr	r2, [sp, #16]
 8019bdc:	4473      	add	r3, lr
 8019bde:	4415      	add	r5, r2
 8019be0:	9305      	str	r3, [sp, #20]
 8019be2:	4417      	add	r7, r2
 8019be4:	e781      	b.n	8019aea <GUI_SPRITE_SetPosition+0x1a6>
 8019be6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019be8:	f8dd e064 	ldr.w	lr, [sp, #100]	; 0x64
 8019bec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019bee:	4473      	add	r3, lr
 8019bf0:	4414      	add	r4, r2
 8019bf2:	930b      	str	r3, [sp, #44]	; 0x2c
 8019bf4:	4416      	add	r6, r2
 8019bf6:	e75d      	b.n	8019ab4 <GUI_SPRITE_SetPosition+0x170>
 8019bf8:	a822      	add	r0, sp, #136	; 0x88
 8019bfa:	f7f8 fec7 	bl	801298c <GUI_ALLOC_UnlockH>
 8019bfe:	e0ce      	b.n	8019d9e <GUI_SPRITE_SetPosition+0x45a>
 8019c00:	2000016c 	.word	0x2000016c
 8019c04:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8019c06:	4294      	cmp	r4, r2
 8019c08:	db20      	blt.n	8019c4c <GUI_SPRITE_SetPosition+0x308>
 8019c0a:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 8019c0e:	4574      	cmp	r4, lr
 8019c10:	bfcc      	ite	gt
 8019c12:	2300      	movgt	r3, #0
 8019c14:	2301      	movle	r3, #1
 8019c16:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019c18:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8019c1a:	b2db      	uxtb	r3, r3
 8019c1c:	931d      	str	r3, [sp, #116]	; 0x74
 8019c1e:	ebc9 0106 	rsb	r1, r9, r6
 8019c22:	4417      	add	r7, r2
 8019c24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019c26:	910f      	str	r1, [sp, #60]	; 0x3c
 8019c28:	4457      	add	r7, sl
 8019c2a:	9305      	str	r3, [sp, #20]
 8019c2c:	4615      	mov	r5, r2
 8019c2e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8019c30:	428d      	cmp	r5, r1
 8019c32:	d10d      	bne.n	8019c50 <GUI_SPRITE_SetPosition+0x30c>
 8019c34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019c36:	f8dd e084 	ldr.w	lr, [sp, #132]	; 0x84
 8019c3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019c3c:	4473      	add	r3, lr
 8019c3e:	4414      	add	r4, r2
 8019c40:	930c      	str	r3, [sp, #48]	; 0x30
 8019c42:	4416      	add	r6, r2
 8019c44:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019c46:	428c      	cmp	r4, r1
 8019c48:	d1dc      	bne.n	8019c04 <GUI_SPRITE_SetPosition+0x2c0>
 8019c4a:	e0a8      	b.n	8019d9e <GUI_SPRITE_SetPosition+0x45a>
 8019c4c:	2300      	movs	r3, #0
 8019c4e:	e7e2      	b.n	8019c16 <GUI_SPRITE_SetPosition+0x2d2>
 8019c50:	4629      	mov	r1, r5
 8019c52:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019c54:	4622      	mov	r2, r4
 8019c56:	f000 f93b 	bl	8019ed0 <GUI_GetBitmapPixelIndex>
 8019c5a:	0e01      	lsrs	r1, r0, #24
 8019c5c:	29ff      	cmp	r1, #255	; 0xff
 8019c5e:	9018      	str	r0, [sp, #96]	; 0x60
 8019c60:	910b      	str	r1, [sp, #44]	; 0x2c
 8019c62:	f000 8093 	beq.w	8019d8c <GUI_SPRITE_SetPosition+0x448>
 8019c66:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8019c68:	4295      	cmp	r5, r2
 8019c6a:	ebca 0c07 	rsb	ip, sl, r7
 8019c6e:	db07      	blt.n	8019c80 <GUI_SPRITE_SetPosition+0x33c>
 8019c70:	9b07      	ldr	r3, [sp, #28]
 8019c72:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 8019c76:	429d      	cmp	r5, r3
 8019c78:	bfc8      	it	gt
 8019c7a:	f04f 0b00 	movgt.w	fp, #0
 8019c7e:	e001      	b.n	8019c84 <GUI_SPRITE_SetPosition+0x340>
 8019c80:	f04f 0b00 	mov.w	fp, #0
 8019c84:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8019c88:	429f      	cmp	r7, r3
 8019c8a:	fa5f fb8b 	uxtb.w	fp, fp
 8019c8e:	db22      	blt.n	8019cd6 <GUI_SPRITE_SetPosition+0x392>
 8019c90:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8019c94:	429e      	cmp	r6, r3
 8019c96:	db1e      	blt.n	8019cd6 <GUI_SPRITE_SetPosition+0x392>
 8019c98:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8019c9c:	429f      	cmp	r7, r3
 8019c9e:	dc1a      	bgt.n	8019cd6 <GUI_SPRITE_SetPosition+0x392>
 8019ca0:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8019ca4:	429e      	cmp	r6, r3
 8019ca6:	dc16      	bgt.n	8019cd6 <GUI_SPRITE_SetPosition+0x392>
 8019ca8:	4631      	mov	r1, r6
 8019caa:	9a06      	ldr	r2, [sp, #24]
 8019cac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019cae:	f8cd c00c 	str.w	ip, [sp, #12]
 8019cb2:	4638      	mov	r0, r7
 8019cb4:	f7ff fd80 	bl	80197b8 <_GetBkIndexAlpha.isra.2>
 8019cb8:	f8dd e020 	ldr.w	lr, [sp, #32]
 8019cbc:	4b61      	ldr	r3, [pc, #388]	; (8019e44 <GUI_SPRITE_SetPosition+0x500>)
 8019cbe:	f853 302e 	ldr.w	r3, [r3, lr, lsl #2]
 8019cc2:	691b      	ldr	r3, [r3, #16]
 8019cc4:	4680      	mov	r8, r0
 8019cc6:	685b      	ldr	r3, [r3, #4]
 8019cc8:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8019ccc:	4798      	blx	r3
 8019cce:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8019cd2:	9019      	str	r0, [sp, #100]	; 0x64
 8019cd4:	e001      	b.n	8019cda <GUI_SPRITE_SetPosition+0x396>
 8019cd6:	f04f 0800 	mov.w	r8, #0
 8019cda:	f1bb 0f00 	cmp.w	fp, #0
 8019cde:	d00f      	beq.n	8019d00 <GUI_SPRITE_SetPosition+0x3bc>
 8019ce0:	ebb5 010a 	subs.w	r1, r5, sl
 8019ce4:	d416      	bmi.n	8019d14 <GUI_SPRITE_SetPosition+0x3d0>
 8019ce6:	ebb4 0209 	subs.w	r2, r4, r9
 8019cea:	d413      	bmi.n	8019d14 <GUI_SPRITE_SetPosition+0x3d0>
 8019cec:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019cee:	f8cd c00c 	str.w	ip, [sp, #12]
 8019cf2:	f000 f8ed 	bl	8019ed0 <GUI_GetBitmapPixelIndex>
 8019cf6:	0e00      	lsrs	r0, r0, #24
 8019cf8:	28ff      	cmp	r0, #255	; 0xff
 8019cfa:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8019cfe:	d109      	bne.n	8019d14 <GUI_SPRITE_SetPosition+0x3d0>
 8019d00:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8019d04:	459c      	cmp	ip, r3
 8019d06:	db05      	blt.n	8019d14 <GUI_SPRITE_SetPosition+0x3d0>
 8019d08:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8019d0c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8019d0e:	4299      	cmp	r1, r3
 8019d10:	f280 8082 	bge.w	8019e18 <GUI_SPRITE_SetPosition+0x4d4>
 8019d14:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8019d18:	429f      	cmp	r7, r3
 8019d1a:	db34      	blt.n	8019d86 <GUI_SPRITE_SetPosition+0x442>
 8019d1c:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8019d20:	429e      	cmp	r6, r3
 8019d22:	db30      	blt.n	8019d86 <GUI_SPRITE_SetPosition+0x442>
 8019d24:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8019d28:	429f      	cmp	r7, r3
 8019d2a:	dc2c      	bgt.n	8019d86 <GUI_SPRITE_SetPosition+0x442>
 8019d2c:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8019d30:	429e      	cmp	r6, r3
 8019d32:	dc28      	bgt.n	8019d86 <GUI_SPRITE_SetPosition+0x442>
 8019d34:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019d38:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8019d3a:	f8df b108 	ldr.w	fp, [pc, #264]	; 8019e44 <GUI_SPRITE_SetPosition+0x500>
 8019d3e:	f02e 407f 	bic.w	r0, lr, #4278190080	; 0xff000000
 8019d42:	b191      	cbz	r1, 8019d6a <GUI_SPRITE_SetPosition+0x426>
 8019d44:	9a08      	ldr	r2, [sp, #32]
 8019d46:	f85b 3022 	ldr.w	r3, [fp, r2, lsl #2]
 8019d4a:	691b      	ldr	r3, [r3, #16]
 8019d4c:	685b      	ldr	r3, [r3, #4]
 8019d4e:	4798      	blx	r3
 8019d50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019d52:	9919      	ldr	r1, [sp, #100]	; 0x64
 8019d54:	43da      	mvns	r2, r3
 8019d56:	b2d2      	uxtb	r2, r2
 8019d58:	f7f6 fc5f 	bl	801061a <GUI__MixColors>
 8019d5c:	f8dd e020 	ldr.w	lr, [sp, #32]
 8019d60:	f85b 302e 	ldr.w	r3, [fp, lr, lsl #2]
 8019d64:	691b      	ldr	r3, [r3, #16]
 8019d66:	681b      	ldr	r3, [r3, #0]
 8019d68:	e004      	b.n	8019d74 <GUI_SPRITE_SetPosition+0x430>
 8019d6a:	9908      	ldr	r1, [sp, #32]
 8019d6c:	f85b 3021 	ldr.w	r3, [fp, r1, lsl #2]
 8019d70:	691b      	ldr	r3, [r3, #16]
 8019d72:	685b      	ldr	r3, [r3, #4]
 8019d74:	4798      	blx	r3
 8019d76:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019d78:	9300      	str	r3, [sp, #0]
 8019d7a:	4602      	mov	r2, r0
 8019d7c:	4631      	mov	r1, r6
 8019d7e:	4638      	mov	r0, r7
 8019d80:	9b06      	ldr	r3, [sp, #24]
 8019d82:	f7ff fdad 	bl	80198e0 <_SetBkIndexBuffered>
 8019d86:	9905      	ldr	r1, [sp, #20]
 8019d88:	f8c1 8020 	str.w	r8, [r1, #32]
 8019d8c:	9b05      	ldr	r3, [sp, #20]
 8019d8e:	f8dd e080 	ldr.w	lr, [sp, #128]	; 0x80
 8019d92:	9a04      	ldr	r2, [sp, #16]
 8019d94:	4473      	add	r3, lr
 8019d96:	4415      	add	r5, r2
 8019d98:	9305      	str	r3, [sp, #20]
 8019d9a:	4417      	add	r7, r2
 8019d9c:	e747      	b.n	8019c2e <GUI_SPRITE_SetPosition+0x2ea>
 8019d9e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019da0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8019da2:	6818      	ldr	r0, [r3, #0]
 8019da4:	f7ff fdbe 	bl	8019924 <_ReleaseBuffer.isra.6>
 8019da8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019daa:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019dac:	6818      	ldr	r0, [r3, #0]
 8019dae:	f7ff fdb9 	bl	8019924 <_ReleaseBuffer.isra.6>
 8019db2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019db4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019db6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8019db8:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 8019dbc:	809a      	strh	r2, [r3, #4]
 8019dbe:	440a      	add	r2, r1
 8019dc0:	3a01      	subs	r2, #1
 8019dc2:	f8a3 e006 	strh.w	lr, [r3, #6]
 8019dc6:	811a      	strh	r2, [r3, #8]
 8019dc8:	f10e 32ff 	add.w	r2, lr, #4294967295
 8019dcc:	f8dd e078 	ldr.w	lr, [sp, #120]	; 0x78
 8019dd0:	9908      	ldr	r1, [sp, #32]
 8019dd2:	4472      	add	r2, lr
 8019dd4:	815a      	strh	r2, [r3, #10]
 8019dd6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8019dd8:	4291      	cmp	r1, r2
 8019dda:	d002      	beq.n	8019de2 <GUI_SPRITE_SetPosition+0x49e>
 8019ddc:	4b1a      	ldr	r3, [pc, #104]	; (8019e48 <GUI_SPRITE_SetPosition+0x504>)
 8019dde:	681b      	ldr	r3, [r3, #0]
 8019de0:	745a      	strb	r2, [r3, #17]
 8019de2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019de4:	f7f4 fbe4 	bl	800e5b0 <GUI_MEMDEV_Select>
 8019de8:	a823      	add	r0, sp, #140	; 0x8c
 8019dea:	f7f8 fdcf 	bl	801298c <GUI_ALLOC_UnlockH>
 8019dee:	e026      	b.n	8019e3e <GUI_SPRITE_SetPosition+0x4fa>
 8019df0:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8019df4:	459c      	cmp	ip, r3
 8019df6:	f73f aece 	bgt.w	8019b96 <GUI_SPRITE_SetPosition+0x252>
 8019dfa:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8019dfe:	459e      	cmp	lr, r3
 8019e00:	f73f aec9 	bgt.w	8019b96 <GUI_SPRITE_SetPosition+0x252>
 8019e04:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8019e06:	9b05      	ldr	r3, [sp, #20]
 8019e08:	9100      	str	r1, [sp, #0]
 8019e0a:	6a1a      	ldr	r2, [r3, #32]
 8019e0c:	9b06      	ldr	r3, [sp, #24]
 8019e0e:	4660      	mov	r0, ip
 8019e10:	4671      	mov	r1, lr
 8019e12:	f7ff fd65 	bl	80198e0 <_SetBkIndexBuffered>
 8019e16:	e6be      	b.n	8019b96 <GUI_SPRITE_SetPosition+0x252>
 8019e18:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8019e1c:	459c      	cmp	ip, r3
 8019e1e:	f73f af79 	bgt.w	8019d14 <GUI_SPRITE_SetPosition+0x3d0>
 8019e22:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8019e26:	4299      	cmp	r1, r3
 8019e28:	f73f af74 	bgt.w	8019d14 <GUI_SPRITE_SetPosition+0x3d0>
 8019e2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019e2e:	9b05      	ldr	r3, [sp, #20]
 8019e30:	9200      	str	r2, [sp, #0]
 8019e32:	6a1a      	ldr	r2, [r3, #32]
 8019e34:	9b06      	ldr	r3, [sp, #24]
 8019e36:	4660      	mov	r0, ip
 8019e38:	f7ff fd52 	bl	80198e0 <_SetBkIndexBuffered>
 8019e3c:	e76a      	b.n	8019d14 <GUI_SPRITE_SetPosition+0x3d0>
 8019e3e:	b027      	add	sp, #156	; 0x9c
 8019e40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e44:	20019c9c 	.word	0x20019c9c
 8019e48:	2000016c 	.word	0x2000016c

08019e4c <GUI_GetBitmapPixelIndexEx>:
 8019e4c:	b510      	push	{r4, lr}
 8019e4e:	2804      	cmp	r0, #4
 8019e50:	9c02      	ldr	r4, [sp, #8]
 8019e52:	d025      	beq.n	8019ea0 <GUI_GetBitmapPixelIndexEx+0x54>
 8019e54:	dc0f      	bgt.n	8019e76 <GUI_GetBitmapPixelIndexEx+0x2a>
 8019e56:	2801      	cmp	r0, #1
 8019e58:	d017      	beq.n	8019e8a <GUI_GetBitmapPixelIndexEx+0x3e>
 8019e5a:	2802      	cmp	r0, #2
 8019e5c:	d136      	bne.n	8019ecc <GUI_GetBitmapPixelIndexEx+0x80>
 8019e5e:	0898      	lsrs	r0, r3, #2
 8019e60:	fb04 2101 	mla	r1, r4, r1, r2
 8019e64:	ea6f 0343 	mvn.w	r3, r3, lsl #1
 8019e68:	5c08      	ldrb	r0, [r1, r0]
 8019e6a:	f003 0306 	and.w	r3, r3, #6
 8019e6e:	40d8      	lsrs	r0, r3
 8019e70:	f000 0003 	and.w	r0, r0, #3
 8019e74:	bd10      	pop	{r4, pc}
 8019e76:	2810      	cmp	r0, #16
 8019e78:	d01c      	beq.n	8019eb4 <GUI_GetBitmapPixelIndexEx+0x68>
 8019e7a:	2820      	cmp	r0, #32
 8019e7c:	d020      	beq.n	8019ec0 <GUI_GetBitmapPixelIndexEx+0x74>
 8019e7e:	2808      	cmp	r0, #8
 8019e80:	d124      	bne.n	8019ecc <GUI_GetBitmapPixelIndexEx+0x80>
 8019e82:	fb04 2101 	mla	r1, r4, r1, r2
 8019e86:	5cc8      	ldrb	r0, [r1, r3]
 8019e88:	bd10      	pop	{r4, pc}
 8019e8a:	08d8      	lsrs	r0, r3, #3
 8019e8c:	fb04 2101 	mla	r1, r4, r1, r2
 8019e90:	43db      	mvns	r3, r3
 8019e92:	5c08      	ldrb	r0, [r1, r0]
 8019e94:	f003 0307 	and.w	r3, r3, #7
 8019e98:	40d8      	lsrs	r0, r3
 8019e9a:	f000 0001 	and.w	r0, r0, #1
 8019e9e:	bd10      	pop	{r4, pc}
 8019ea0:	0858      	lsrs	r0, r3, #1
 8019ea2:	fb04 2101 	mla	r1, r4, r1, r2
 8019ea6:	07db      	lsls	r3, r3, #31
 8019ea8:	5c08      	ldrb	r0, [r1, r0]
 8019eaa:	bf4c      	ite	mi
 8019eac:	f000 000f 	andmi.w	r0, r0, #15
 8019eb0:	0900      	lsrpl	r0, r0, #4
 8019eb2:	bd10      	pop	{r4, pc}
 8019eb4:	1049      	asrs	r1, r1, #1
 8019eb6:	fb04 3301 	mla	r3, r4, r1, r3
 8019eba:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
 8019ebe:	bd10      	pop	{r4, pc}
 8019ec0:	1089      	asrs	r1, r1, #2
 8019ec2:	fb04 3301 	mla	r3, r4, r1, r3
 8019ec6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019eca:	bd10      	pop	{r4, pc}
 8019ecc:	2000      	movs	r0, #0
 8019ece:	bd10      	pop	{r4, pc}

08019ed0 <GUI_GetBitmapPixelIndex>:
 8019ed0:	b513      	push	{r0, r1, r4, lr}
 8019ed2:	460b      	mov	r3, r1
 8019ed4:	4604      	mov	r4, r0
 8019ed6:	b130      	cbz	r0, 8019ee6 <GUI_GetBitmapPixelIndex+0x16>
 8019ed8:	88c0      	ldrh	r0, [r0, #6]
 8019eda:	88a1      	ldrh	r1, [r4, #4]
 8019edc:	9200      	str	r2, [sp, #0]
 8019ede:	68a2      	ldr	r2, [r4, #8]
 8019ee0:	f7ff ffb4 	bl	8019e4c <GUI_GetBitmapPixelIndexEx>
 8019ee4:	e7ff      	b.n	8019ee6 <GUI_GetBitmapPixelIndex+0x16>
 8019ee6:	b002      	add	sp, #8
 8019ee8:	bd10      	pop	{r4, pc}
	...

08019eec <_Add>:
 8019eec:	4a0d      	ldr	r2, [pc, #52]	; (8019f24 <_Add+0x38>)
 8019eee:	6813      	ldr	r3, [r2, #0]
 8019ef0:	2b0b      	cmp	r3, #11
 8019ef2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019ef4:	4615      	mov	r5, r2
 8019ef6:	dc14      	bgt.n	8019f22 <_Add+0x36>
 8019ef8:	4c0b      	ldr	r4, [pc, #44]	; (8019f28 <_Add+0x3c>)
 8019efa:	461a      	mov	r2, r3
 8019efc:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 8019f00:	4626      	mov	r6, r4
 8019f02:	b152      	cbz	r2, 8019f1a <_Add+0x2e>
 8019f04:	f831 4d02 	ldrh.w	r4, [r1, #-2]!
 8019f08:	fa0f fc84 	sxth.w	ip, r4
 8019f0c:	4584      	cmp	ip, r0
 8019f0e:	f102 37ff 	add.w	r7, r2, #4294967295
 8019f12:	db02      	blt.n	8019f1a <_Add+0x2e>
 8019f14:	804c      	strh	r4, [r1, #2]
 8019f16:	463a      	mov	r2, r7
 8019f18:	e7f3      	b.n	8019f02 <_Add+0x16>
 8019f1a:	3301      	adds	r3, #1
 8019f1c:	f826 0012 	strh.w	r0, [r6, r2, lsl #1]
 8019f20:	602b      	str	r3, [r5, #0]
 8019f22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019f24:	20019720 	.word	0x20019720
 8019f28:	20019724 	.word	0x20019724

08019f2c <GL_FillPolygon>:
 8019f2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f30:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 801a0ec <GL_FillPolygon+0x1c0>
 8019f34:	9101      	str	r1, [sp, #4]
 8019f36:	4692      	mov	sl, r2
 8019f38:	4606      	mov	r6, r0
 8019f3a:	f643 74ff 	movw	r4, #16383	; 0x3fff
 8019f3e:	2200      	movs	r2, #0
 8019f40:	9901      	ldr	r1, [sp, #4]
 8019f42:	428a      	cmp	r2, r1
 8019f44:	da0b      	bge.n	8019f5e <GL_FillPolygon+0x32>
 8019f46:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8019f4a:	3201      	adds	r2, #1
 8019f4c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8019f50:	428c      	cmp	r4, r1
 8019f52:	bfa8      	it	ge
 8019f54:	460c      	movge	r4, r1
 8019f56:	4589      	cmp	r9, r1
 8019f58:	bfb8      	it	lt
 8019f5a:	4689      	movlt	r9, r1
 8019f5c:	e7f0      	b.n	8019f40 <GL_FillPolygon+0x14>
 8019f5e:	4960      	ldr	r1, [pc, #384]	; (801a0e0 <GL_FillPolygon+0x1b4>)
 8019f60:	680a      	ldr	r2, [r1, #0]
 8019f62:	6952      	ldr	r2, [r2, #20]
 8019f64:	468b      	mov	fp, r1
 8019f66:	b15a      	cbz	r2, 8019f80 <GL_FillPolygon+0x54>
 8019f68:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 8019f6c:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8019f70:	1ac9      	subs	r1, r1, r3
 8019f72:	1ad2      	subs	r2, r2, r3
 8019f74:	4589      	cmp	r9, r1
 8019f76:	bfa8      	it	ge
 8019f78:	4689      	movge	r9, r1
 8019f7a:	4294      	cmp	r4, r2
 8019f7c:	bfb8      	it	lt
 8019f7e:	4614      	movlt	r4, r2
 8019f80:	eb04 0803 	add.w	r8, r4, r3
 8019f84:	454c      	cmp	r4, r9
 8019f86:	f300 80a7 	bgt.w	801a0d8 <GL_FillPolygon+0x1ac>
 8019f8a:	4b56      	ldr	r3, [pc, #344]	; (801a0e4 <GL_FillPolygon+0x1b8>)
 8019f8c:	2700      	movs	r7, #0
 8019f8e:	601f      	str	r7, [r3, #0]
 8019f90:	4635      	mov	r5, r6
 8019f92:	9901      	ldr	r1, [sp, #4]
 8019f94:	428f      	cmp	r7, r1
 8019f96:	da55      	bge.n	801a044 <GL_FillPolygon+0x118>
 8019f98:	9b01      	ldr	r3, [sp, #4]
 8019f9a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8019f9e:	1e59      	subs	r1, r3, #1
 8019fa0:	428f      	cmp	r7, r1
 8019fa2:	bfb4      	ite	lt
 8019fa4:	f107 0c01 	addlt.w	ip, r7, #1
 8019fa8:	f04f 0c00 	movge.w	ip, #0
 8019fac:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8019fb0:	eb06 030c 	add.w	r3, r6, ip
 8019fb4:	42a2      	cmp	r2, r4
 8019fb6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8019fba:	d136      	bne.n	801a02a <GL_FillPolygon+0xfe>
 8019fbc:	42a3      	cmp	r3, r4
 8019fbe:	d002      	beq.n	8019fc6 <GL_FillPolygon+0x9a>
 8019fc0:	463a      	mov	r2, r7
 8019fc2:	2000      	movs	r0, #0
 8019fc4:	e01b      	b.n	8019ffe <GL_FillPolygon+0xd2>
 8019fc6:	f9b5 e000 	ldrsh.w	lr, [r5]
 8019fca:	f936 200c 	ldrsh.w	r2, [r6, ip]
 8019fce:	f8db 3000 	ldr.w	r3, [fp]
 8019fd2:	44d6      	add	lr, sl
 8019fd4:	4452      	add	r2, sl
 8019fd6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8019fd8:	4596      	cmp	lr, r2
 8019fda:	681b      	ldr	r3, [r3, #0]
 8019fdc:	da02      	bge.n	8019fe4 <GL_FillPolygon+0xb8>
 8019fde:	4670      	mov	r0, lr
 8019fe0:	4641      	mov	r1, r8
 8019fe2:	e020      	b.n	801a026 <GL_FillPolygon+0xfa>
 8019fe4:	4610      	mov	r0, r2
 8019fe6:	4641      	mov	r1, r8
 8019fe8:	4672      	mov	r2, lr
 8019fea:	e01c      	b.n	801a026 <GL_FillPolygon+0xfa>
 8019fec:	b152      	cbz	r2, 801a004 <GL_FillPolygon+0xd8>
 8019fee:	3a01      	subs	r2, #1
 8019ff0:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 8019ff4:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 8019ff8:	45a4      	cmp	ip, r4
 8019ffa:	d105      	bne.n	801a008 <GL_FillPolygon+0xdc>
 8019ffc:	3001      	adds	r0, #1
 8019ffe:	4288      	cmp	r0, r1
 801a000:	dbf4      	blt.n	8019fec <GL_FillPolygon+0xc0>
 801a002:	e01c      	b.n	801a03e <GL_FillPolygon+0x112>
 801a004:	460a      	mov	r2, r1
 801a006:	e7f3      	b.n	8019ff0 <GL_FillPolygon+0xc4>
 801a008:	ebc4 0c0c 	rsb	ip, r4, ip
 801a00c:	1b1b      	subs	r3, r3, r4
 801a00e:	ea9c 0f03 	teq	ip, r3
 801a012:	f9b5 0000 	ldrsh.w	r0, [r5]
 801a016:	d44d      	bmi.n	801a0b4 <GL_FillPolygon+0x188>
 801a018:	f8db 3000 	ldr.w	r3, [fp]
 801a01c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a01e:	4450      	add	r0, sl
 801a020:	681b      	ldr	r3, [r3, #0]
 801a022:	4641      	mov	r1, r8
 801a024:	4602      	mov	r2, r0
 801a026:	4798      	blx	r3
 801a028:	e009      	b.n	801a03e <GL_FillPolygon+0x112>
 801a02a:	42a3      	cmp	r3, r4
 801a02c:	d007      	beq.n	801a03e <GL_FillPolygon+0x112>
 801a02e:	db44      	blt.n	801a0ba <GL_FillPolygon+0x18e>
 801a030:	42a2      	cmp	r2, r4
 801a032:	dd27      	ble.n	801a084 <GL_FillPolygon+0x158>
 801a034:	42a3      	cmp	r3, r4
 801a036:	dd42      	ble.n	801a0be <GL_FillPolygon+0x192>
 801a038:	e001      	b.n	801a03e <GL_FillPolygon+0x112>
 801a03a:	42a3      	cmp	r3, r4
 801a03c:	dd49      	ble.n	801a0d2 <GL_FillPolygon+0x1a6>
 801a03e:	3701      	adds	r7, #1
 801a040:	3504      	adds	r5, #4
 801a042:	e7a6      	b.n	8019f92 <GL_FillPolygon+0x66>
 801a044:	2500      	movs	r5, #0
 801a046:	4628      	mov	r0, r5
 801a048:	462f      	mov	r7, r5
 801a04a:	4b26      	ldr	r3, [pc, #152]	; (801a0e4 <GL_FillPolygon+0x1b8>)
 801a04c:	681b      	ldr	r3, [r3, #0]
 801a04e:	429f      	cmp	r7, r3
 801a050:	da14      	bge.n	801a07c <GL_FillPolygon+0x150>
 801a052:	4b25      	ldr	r3, [pc, #148]	; (801a0e8 <GL_FillPolygon+0x1bc>)
 801a054:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 801a058:	b15d      	cbz	r5, 801a072 <GL_FillPolygon+0x146>
 801a05a:	f8db 2000 	ldr.w	r2, [fp]
 801a05e:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a060:	4450      	add	r0, sl
 801a062:	f8d2 c000 	ldr.w	ip, [r2]
 801a066:	9300      	str	r3, [sp, #0]
 801a068:	eb0a 0203 	add.w	r2, sl, r3
 801a06c:	4641      	mov	r1, r8
 801a06e:	47e0      	blx	ip
 801a070:	9b00      	ldr	r3, [sp, #0]
 801a072:	f085 0501 	eor.w	r5, r5, #1
 801a076:	3701      	adds	r7, #1
 801a078:	4618      	mov	r0, r3
 801a07a:	e7e6      	b.n	801a04a <GL_FillPolygon+0x11e>
 801a07c:	3401      	adds	r4, #1
 801a07e:	f108 0801 	add.w	r8, r8, #1
 801a082:	e77f      	b.n	8019f84 <GL_FillPolygon+0x58>
 801a084:	429a      	cmp	r2, r3
 801a086:	dcd8      	bgt.n	801a03a <GL_FillPolygon+0x10e>
 801a088:	f9b5 1000 	ldrsh.w	r1, [r5]
 801a08c:	f936 000c 	ldrsh.w	r0, [r6, ip]
 801a090:	ebc2 0e04 	rsb	lr, r2, r4
 801a094:	1a40      	subs	r0, r0, r1
 801a096:	fb0e f000 	mul.w	r0, lr, r0
 801a09a:	2800      	cmp	r0, #0
 801a09c:	ebc2 0303 	rsb	r3, r2, r3
 801a0a0:	bfdb      	ittet	le
 801a0a2:	105a      	asrle	r2, r3, #1
 801a0a4:	f1c2 0201 	rsble	r2, r2, #1
 801a0a8:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 801a0ac:	1880      	addle	r0, r0, r2
 801a0ae:	fb90 f0f3 	sdiv	r0, r0, r3
 801a0b2:	4408      	add	r0, r1
 801a0b4:	f7ff ff1a 	bl	8019eec <_Add>
 801a0b8:	e7c1      	b.n	801a03e <GL_FillPolygon+0x112>
 801a0ba:	42a2      	cmp	r2, r4
 801a0bc:	dbbf      	blt.n	801a03e <GL_FillPolygon+0x112>
 801a0be:	429a      	cmp	r2, r3
 801a0c0:	ddbd      	ble.n	801a03e <GL_FillPolygon+0x112>
 801a0c2:	4696      	mov	lr, r2
 801a0c4:	f936 100c 	ldrsh.w	r1, [r6, ip]
 801a0c8:	f9b5 0000 	ldrsh.w	r0, [r5]
 801a0cc:	461a      	mov	r2, r3
 801a0ce:	4673      	mov	r3, lr
 801a0d0:	e7de      	b.n	801a090 <GL_FillPolygon+0x164>
 801a0d2:	42a2      	cmp	r2, r4
 801a0d4:	daf5      	bge.n	801a0c2 <GL_FillPolygon+0x196>
 801a0d6:	e7b2      	b.n	801a03e <GL_FillPolygon+0x112>
 801a0d8:	b003      	add	sp, #12
 801a0da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a0de:	bf00      	nop
 801a0e0:	2000016c 	.word	0x2000016c
 801a0e4:	20019720 	.word	0x20019720
 801a0e8:	20019724 	.word	0x20019724
 801a0ec:	ffffc001 	.word	0xffffc001

0801a0f0 <GL_DrawPoint>:
 801a0f0:	b508      	push	{r3, lr}
 801a0f2:	4b08      	ldr	r3, [pc, #32]	; (801a114 <GL_DrawPoint+0x24>)
 801a0f4:	681b      	ldr	r3, [r3, #0]
 801a0f6:	7e1a      	ldrb	r2, [r3, #24]
 801a0f8:	2a01      	cmp	r2, #1
 801a0fa:	d103      	bne.n	801a104 <GL_DrawPoint+0x14>
 801a0fc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a0fe:	685b      	ldr	r3, [r3, #4]
 801a100:	4798      	blx	r3
 801a102:	bd08      	pop	{r3, pc}
 801a104:	2302      	movs	r3, #2
 801a106:	3a01      	subs	r2, #1
 801a108:	fb92 f2f3 	sdiv	r2, r2, r3
 801a10c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801a110:	f000 b824 	b.w	801a15c <GL_FillCircle>
 801a114:	2000016c 	.word	0x2000016c

0801a118 <GUI_DrawPixel>:
 801a118:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a11a:	4e0f      	ldr	r6, [pc, #60]	; (801a158 <GUI_DrawPixel+0x40>)
 801a11c:	6833      	ldr	r3, [r6, #0]
 801a11e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 801a120:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 801a122:	4405      	add	r5, r0
 801a124:	b2ab      	uxth	r3, r5
 801a126:	440c      	add	r4, r1
 801a128:	f8ad 3004 	strh.w	r3, [sp, #4]
 801a12c:	f8ad 3000 	strh.w	r3, [sp]
 801a130:	4668      	mov	r0, sp
 801a132:	b2a3      	uxth	r3, r4
 801a134:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a138:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a13c:	f7f2 ffa2 	bl	800d084 <WM__InitIVRSearch>
 801a140:	b140      	cbz	r0, 801a154 <GUI_DrawPixel+0x3c>
 801a142:	6833      	ldr	r3, [r6, #0]
 801a144:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a146:	4628      	mov	r0, r5
 801a148:	685b      	ldr	r3, [r3, #4]
 801a14a:	4621      	mov	r1, r4
 801a14c:	4798      	blx	r3
 801a14e:	f7f2 fed7 	bl	800cf00 <WM__GetNextIVR>
 801a152:	e7f5      	b.n	801a140 <GUI_DrawPixel+0x28>
 801a154:	b002      	add	sp, #8
 801a156:	bd70      	pop	{r4, r5, r6, pc}
 801a158:	2000016c 	.word	0x2000016c

0801a15c <GL_FillCircle>:
 801a15c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a160:	f240 29c3 	movw	r9, #707	; 0x2c3
 801a164:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 801a21c <GL_FillCircle+0xc0>
 801a168:	fb09 f902 	mul.w	r9, r9, r2
 801a16c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801a170:	fb99 f9f3 	sdiv	r9, r9, r3
 801a174:	f8d8 3000 	ldr.w	r3, [r8]
 801a178:	f04f 0b02 	mov.w	fp, #2
 801a17c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a17e:	4606      	mov	r6, r0
 801a180:	fb92 fbfb 	sdiv	fp, r2, fp
 801a184:	1a80      	subs	r0, r0, r2
 801a186:	4614      	mov	r4, r2
 801a188:	fb02 bb02 	mla	fp, r2, r2, fp
 801a18c:	681b      	ldr	r3, [r3, #0]
 801a18e:	18b2      	adds	r2, r6, r2
 801a190:	460f      	mov	r7, r1
 801a192:	4798      	blx	r3
 801a194:	f109 0901 	add.w	r9, r9, #1
 801a198:	2501      	movs	r5, #1
 801a19a:	454d      	cmp	r5, r9
 801a19c:	dc3a      	bgt.n	801a214 <GL_FillCircle+0xb8>
 801a19e:	fb04 f304 	mul.w	r3, r4, r4
 801a1a2:	fb05 3305 	mla	r3, r5, r5, r3
 801a1a6:	455b      	cmp	r3, fp
 801a1a8:	dd1b      	ble.n	801a1e2 <GL_FillCircle+0x86>
 801a1aa:	454c      	cmp	r4, r9
 801a1ac:	dd18      	ble.n	801a1e0 <GL_FillCircle+0x84>
 801a1ae:	f8d8 2000 	ldr.w	r2, [r8]
 801a1b2:	1c73      	adds	r3, r6, #1
 801a1b4:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a1b6:	f106 3aff 	add.w	sl, r6, #4294967295
 801a1ba:	1b5b      	subs	r3, r3, r5
 801a1bc:	44aa      	add	sl, r5
 801a1be:	f8d2 c000 	ldr.w	ip, [r2]
 801a1c2:	9301      	str	r3, [sp, #4]
 801a1c4:	4618      	mov	r0, r3
 801a1c6:	1939      	adds	r1, r7, r4
 801a1c8:	4652      	mov	r2, sl
 801a1ca:	47e0      	blx	ip
 801a1cc:	f8d8 2000 	ldr.w	r2, [r8]
 801a1d0:	9b01      	ldr	r3, [sp, #4]
 801a1d2:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a1d4:	4618      	mov	r0, r3
 801a1d6:	f8d2 c000 	ldr.w	ip, [r2]
 801a1da:	1b39      	subs	r1, r7, r4
 801a1dc:	4652      	mov	r2, sl
 801a1de:	47e0      	blx	ip
 801a1e0:	3c01      	subs	r4, #1
 801a1e2:	f8d8 2000 	ldr.w	r2, [r8]
 801a1e6:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a1e8:	1b33      	subs	r3, r6, r4
 801a1ea:	eb06 0a04 	add.w	sl, r6, r4
 801a1ee:	f8d2 c000 	ldr.w	ip, [r2]
 801a1f2:	9301      	str	r3, [sp, #4]
 801a1f4:	4618      	mov	r0, r3
 801a1f6:	19e9      	adds	r1, r5, r7
 801a1f8:	4652      	mov	r2, sl
 801a1fa:	47e0      	blx	ip
 801a1fc:	f8d8 2000 	ldr.w	r2, [r8]
 801a200:	9b01      	ldr	r3, [sp, #4]
 801a202:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801a204:	1b79      	subs	r1, r7, r5
 801a206:	f8d2 c000 	ldr.w	ip, [r2]
 801a20a:	4618      	mov	r0, r3
 801a20c:	4652      	mov	r2, sl
 801a20e:	47e0      	blx	ip
 801a210:	3501      	adds	r5, #1
 801a212:	e7c2      	b.n	801a19a <GL_FillCircle+0x3e>
 801a214:	b003      	add	sp, #12
 801a216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a21a:	bf00      	nop
 801a21c:	2000016c 	.word	0x2000016c

0801a220 <GUI_CalcColorDist>:
 801a220:	b2cb      	uxtb	r3, r1
 801a222:	b2c2      	uxtb	r2, r0
 801a224:	1ad2      	subs	r2, r2, r3
 801a226:	b292      	uxth	r2, r2
 801a228:	b293      	uxth	r3, r2
 801a22a:	b530      	push	{r4, r5, lr}
 801a22c:	041c      	lsls	r4, r3, #16
 801a22e:	bf48      	it	mi
 801a230:	4253      	negmi	r3, r2
 801a232:	f3c1 2507 	ubfx	r5, r1, #8, #8
 801a236:	f3c0 2207 	ubfx	r2, r0, #8, #8
 801a23a:	ebc5 0202 	rsb	r2, r5, r2
 801a23e:	bf48      	it	mi
 801a240:	b29b      	uxthmi	r3, r3
 801a242:	b292      	uxth	r2, r2
 801a244:	0c09      	lsrs	r1, r1, #16
 801a246:	fb13 f403 	smulbb	r4, r3, r3
 801a24a:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 801a24e:	b293      	uxth	r3, r2
 801a250:	041d      	lsls	r5, r3, #16
 801a252:	b289      	uxth	r1, r1
 801a254:	b288      	uxth	r0, r1
 801a256:	bf44      	itt	mi
 801a258:	4253      	negmi	r3, r2
 801a25a:	b29b      	uxthmi	r3, r3
 801a25c:	0402      	lsls	r2, r0, #16
 801a25e:	bf48      	it	mi
 801a260:	4248      	negmi	r0, r1
 801a262:	fb13 4303 	smlabb	r3, r3, r3, r4
 801a266:	bf48      	it	mi
 801a268:	b280      	uxthmi	r0, r0
 801a26a:	fb00 3000 	mla	r0, r0, r0, r3
 801a26e:	bd30      	pop	{r4, r5, pc}

0801a270 <__errno>:
 801a270:	4b01      	ldr	r3, [pc, #4]	; (801a278 <__errno+0x8>)
 801a272:	6818      	ldr	r0, [r3, #0]
 801a274:	4770      	bx	lr
 801a276:	bf00      	nop
 801a278:	20000398 	.word	0x20000398

0801a27c <__libc_init_array>:
 801a27c:	b570      	push	{r4, r5, r6, lr}
 801a27e:	4e0d      	ldr	r6, [pc, #52]	; (801a2b4 <__libc_init_array+0x38>)
 801a280:	4c0d      	ldr	r4, [pc, #52]	; (801a2b8 <__libc_init_array+0x3c>)
 801a282:	1ba4      	subs	r4, r4, r6
 801a284:	10a4      	asrs	r4, r4, #2
 801a286:	2500      	movs	r5, #0
 801a288:	42a5      	cmp	r5, r4
 801a28a:	d109      	bne.n	801a2a0 <__libc_init_array+0x24>
 801a28c:	4e0b      	ldr	r6, [pc, #44]	; (801a2bc <__libc_init_array+0x40>)
 801a28e:	4c0c      	ldr	r4, [pc, #48]	; (801a2c0 <__libc_init_array+0x44>)
 801a290:	f000 fc54 	bl	801ab3c <_init>
 801a294:	1ba4      	subs	r4, r4, r6
 801a296:	10a4      	asrs	r4, r4, #2
 801a298:	2500      	movs	r5, #0
 801a29a:	42a5      	cmp	r5, r4
 801a29c:	d105      	bne.n	801a2aa <__libc_init_array+0x2e>
 801a29e:	bd70      	pop	{r4, r5, r6, pc}
 801a2a0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801a2a4:	4798      	blx	r3
 801a2a6:	3501      	adds	r5, #1
 801a2a8:	e7ee      	b.n	801a288 <__libc_init_array+0xc>
 801a2aa:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801a2ae:	4798      	blx	r3
 801a2b0:	3501      	adds	r5, #1
 801a2b2:	e7f2      	b.n	801a29a <__libc_init_array+0x1e>
 801a2b4:	080214f4 	.word	0x080214f4
 801a2b8:	080214f4 	.word	0x080214f4
 801a2bc:	080214f4 	.word	0x080214f4
 801a2c0:	080214f8 	.word	0x080214f8

0801a2c4 <memcmp>:
 801a2c4:	b530      	push	{r4, r5, lr}
 801a2c6:	2400      	movs	r4, #0
 801a2c8:	42a2      	cmp	r2, r4
 801a2ca:	d101      	bne.n	801a2d0 <memcmp+0xc>
 801a2cc:	2000      	movs	r0, #0
 801a2ce:	e007      	b.n	801a2e0 <memcmp+0x1c>
 801a2d0:	5d03      	ldrb	r3, [r0, r4]
 801a2d2:	3401      	adds	r4, #1
 801a2d4:	190d      	adds	r5, r1, r4
 801a2d6:	f815 5c01 	ldrb.w	r5, [r5, #-1]
 801a2da:	42ab      	cmp	r3, r5
 801a2dc:	d0f4      	beq.n	801a2c8 <memcmp+0x4>
 801a2de:	1b58      	subs	r0, r3, r5
 801a2e0:	bd30      	pop	{r4, r5, pc}

0801a2e2 <memcpy>:
 801a2e2:	b510      	push	{r4, lr}
 801a2e4:	1e43      	subs	r3, r0, #1
 801a2e6:	440a      	add	r2, r1
 801a2e8:	4291      	cmp	r1, r2
 801a2ea:	d100      	bne.n	801a2ee <memcpy+0xc>
 801a2ec:	bd10      	pop	{r4, pc}
 801a2ee:	f811 4b01 	ldrb.w	r4, [r1], #1
 801a2f2:	f803 4f01 	strb.w	r4, [r3, #1]!
 801a2f6:	e7f7      	b.n	801a2e8 <memcpy+0x6>

0801a2f8 <memmove>:
 801a2f8:	4288      	cmp	r0, r1
 801a2fa:	b510      	push	{r4, lr}
 801a2fc:	eb01 0302 	add.w	r3, r1, r2
 801a300:	d807      	bhi.n	801a312 <memmove+0x1a>
 801a302:	1e42      	subs	r2, r0, #1
 801a304:	4299      	cmp	r1, r3
 801a306:	d00a      	beq.n	801a31e <memmove+0x26>
 801a308:	f811 4b01 	ldrb.w	r4, [r1], #1
 801a30c:	f802 4f01 	strb.w	r4, [r2, #1]!
 801a310:	e7f8      	b.n	801a304 <memmove+0xc>
 801a312:	4283      	cmp	r3, r0
 801a314:	d9f5      	bls.n	801a302 <memmove+0xa>
 801a316:	1881      	adds	r1, r0, r2
 801a318:	1ad2      	subs	r2, r2, r3
 801a31a:	42d3      	cmn	r3, r2
 801a31c:	d100      	bne.n	801a320 <memmove+0x28>
 801a31e:	bd10      	pop	{r4, pc}
 801a320:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801a324:	f801 4d01 	strb.w	r4, [r1, #-1]!
 801a328:	e7f7      	b.n	801a31a <memmove+0x22>

0801a32a <memset>:
 801a32a:	4402      	add	r2, r0
 801a32c:	4603      	mov	r3, r0
 801a32e:	4293      	cmp	r3, r2
 801a330:	d100      	bne.n	801a334 <memset+0xa>
 801a332:	4770      	bx	lr
 801a334:	f803 1b01 	strb.w	r1, [r3], #1
 801a338:	e7f9      	b.n	801a32e <memset+0x4>
	...

0801a33c <siprintf>:
 801a33c:	b40e      	push	{r1, r2, r3}
 801a33e:	b500      	push	{lr}
 801a340:	b09c      	sub	sp, #112	; 0x70
 801a342:	ab1d      	add	r3, sp, #116	; 0x74
 801a344:	9002      	str	r0, [sp, #8]
 801a346:	9006      	str	r0, [sp, #24]
 801a348:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801a34c:	4809      	ldr	r0, [pc, #36]	; (801a374 <siprintf+0x38>)
 801a34e:	9107      	str	r1, [sp, #28]
 801a350:	9104      	str	r1, [sp, #16]
 801a352:	4909      	ldr	r1, [pc, #36]	; (801a378 <siprintf+0x3c>)
 801a354:	f853 2b04 	ldr.w	r2, [r3], #4
 801a358:	9105      	str	r1, [sp, #20]
 801a35a:	6800      	ldr	r0, [r0, #0]
 801a35c:	9301      	str	r3, [sp, #4]
 801a35e:	a902      	add	r1, sp, #8
 801a360:	f000 f884 	bl	801a46c <_svfiprintf_r>
 801a364:	9b02      	ldr	r3, [sp, #8]
 801a366:	2200      	movs	r2, #0
 801a368:	701a      	strb	r2, [r3, #0]
 801a36a:	b01c      	add	sp, #112	; 0x70
 801a36c:	f85d eb04 	ldr.w	lr, [sp], #4
 801a370:	b003      	add	sp, #12
 801a372:	4770      	bx	lr
 801a374:	20000398 	.word	0x20000398
 801a378:	ffff0208 	.word	0xffff0208

0801a37c <strcpy>:
 801a37c:	4603      	mov	r3, r0
 801a37e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801a382:	f803 2b01 	strb.w	r2, [r3], #1
 801a386:	2a00      	cmp	r2, #0
 801a388:	d1f9      	bne.n	801a37e <strcpy+0x2>
 801a38a:	4770      	bx	lr

0801a38c <strncpy>:
 801a38c:	b570      	push	{r4, r5, r6, lr}
 801a38e:	3901      	subs	r1, #1
 801a390:	4604      	mov	r4, r0
 801a392:	b902      	cbnz	r2, 801a396 <strncpy+0xa>
 801a394:	bd70      	pop	{r4, r5, r6, pc}
 801a396:	4623      	mov	r3, r4
 801a398:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 801a39c:	f803 5b01 	strb.w	r5, [r3], #1
 801a3a0:	1e56      	subs	r6, r2, #1
 801a3a2:	b92d      	cbnz	r5, 801a3b0 <strncpy+0x24>
 801a3a4:	4414      	add	r4, r2
 801a3a6:	42a3      	cmp	r3, r4
 801a3a8:	d0f4      	beq.n	801a394 <strncpy+0x8>
 801a3aa:	f803 5b01 	strb.w	r5, [r3], #1
 801a3ae:	e7fa      	b.n	801a3a6 <strncpy+0x1a>
 801a3b0:	461c      	mov	r4, r3
 801a3b2:	4632      	mov	r2, r6
 801a3b4:	e7ed      	b.n	801a392 <strncpy+0x6>

0801a3b6 <__ssputs_r>:
 801a3b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a3ba:	688e      	ldr	r6, [r1, #8]
 801a3bc:	429e      	cmp	r6, r3
 801a3be:	4682      	mov	sl, r0
 801a3c0:	460c      	mov	r4, r1
 801a3c2:	4690      	mov	r8, r2
 801a3c4:	4699      	mov	r9, r3
 801a3c6:	d837      	bhi.n	801a438 <__ssputs_r+0x82>
 801a3c8:	898a      	ldrh	r2, [r1, #12]
 801a3ca:	f412 6f90 	tst.w	r2, #1152	; 0x480
 801a3ce:	d031      	beq.n	801a434 <__ssputs_r+0x7e>
 801a3d0:	6825      	ldr	r5, [r4, #0]
 801a3d2:	6909      	ldr	r1, [r1, #16]
 801a3d4:	1a6f      	subs	r7, r5, r1
 801a3d6:	6965      	ldr	r5, [r4, #20]
 801a3d8:	2302      	movs	r3, #2
 801a3da:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a3de:	fb95 f5f3 	sdiv	r5, r5, r3
 801a3e2:	f109 0301 	add.w	r3, r9, #1
 801a3e6:	443b      	add	r3, r7
 801a3e8:	429d      	cmp	r5, r3
 801a3ea:	bf38      	it	cc
 801a3ec:	461d      	movcc	r5, r3
 801a3ee:	0553      	lsls	r3, r2, #21
 801a3f0:	d530      	bpl.n	801a454 <__ssputs_r+0x9e>
 801a3f2:	4629      	mov	r1, r5
 801a3f4:	f000 fb08 	bl	801aa08 <_malloc_r>
 801a3f8:	4606      	mov	r6, r0
 801a3fa:	b950      	cbnz	r0, 801a412 <__ssputs_r+0x5c>
 801a3fc:	230c      	movs	r3, #12
 801a3fe:	f8ca 3000 	str.w	r3, [sl]
 801a402:	89a3      	ldrh	r3, [r4, #12]
 801a404:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801a408:	81a3      	strh	r3, [r4, #12]
 801a40a:	f04f 30ff 	mov.w	r0, #4294967295
 801a40e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a412:	463a      	mov	r2, r7
 801a414:	6921      	ldr	r1, [r4, #16]
 801a416:	f7ff ff64 	bl	801a2e2 <memcpy>
 801a41a:	89a3      	ldrh	r3, [r4, #12]
 801a41c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 801a420:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801a424:	81a3      	strh	r3, [r4, #12]
 801a426:	6126      	str	r6, [r4, #16]
 801a428:	6165      	str	r5, [r4, #20]
 801a42a:	443e      	add	r6, r7
 801a42c:	1bed      	subs	r5, r5, r7
 801a42e:	6026      	str	r6, [r4, #0]
 801a430:	60a5      	str	r5, [r4, #8]
 801a432:	464e      	mov	r6, r9
 801a434:	454e      	cmp	r6, r9
 801a436:	d900      	bls.n	801a43a <__ssputs_r+0x84>
 801a438:	464e      	mov	r6, r9
 801a43a:	4632      	mov	r2, r6
 801a43c:	4641      	mov	r1, r8
 801a43e:	6820      	ldr	r0, [r4, #0]
 801a440:	f7ff ff5a 	bl	801a2f8 <memmove>
 801a444:	68a3      	ldr	r3, [r4, #8]
 801a446:	1b9b      	subs	r3, r3, r6
 801a448:	60a3      	str	r3, [r4, #8]
 801a44a:	6823      	ldr	r3, [r4, #0]
 801a44c:	441e      	add	r6, r3
 801a44e:	6026      	str	r6, [r4, #0]
 801a450:	2000      	movs	r0, #0
 801a452:	e7dc      	b.n	801a40e <__ssputs_r+0x58>
 801a454:	462a      	mov	r2, r5
 801a456:	f000 fb31 	bl	801aabc <_realloc_r>
 801a45a:	4606      	mov	r6, r0
 801a45c:	2800      	cmp	r0, #0
 801a45e:	d1e2      	bne.n	801a426 <__ssputs_r+0x70>
 801a460:	6921      	ldr	r1, [r4, #16]
 801a462:	4650      	mov	r0, sl
 801a464:	f000 fa82 	bl	801a96c <_free_r>
 801a468:	e7c8      	b.n	801a3fc <__ssputs_r+0x46>
	...

0801a46c <_svfiprintf_r>:
 801a46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a470:	461d      	mov	r5, r3
 801a472:	898b      	ldrh	r3, [r1, #12]
 801a474:	061f      	lsls	r7, r3, #24
 801a476:	b09d      	sub	sp, #116	; 0x74
 801a478:	4680      	mov	r8, r0
 801a47a:	460c      	mov	r4, r1
 801a47c:	4616      	mov	r6, r2
 801a47e:	d50f      	bpl.n	801a4a0 <_svfiprintf_r+0x34>
 801a480:	690b      	ldr	r3, [r1, #16]
 801a482:	b96b      	cbnz	r3, 801a4a0 <_svfiprintf_r+0x34>
 801a484:	2140      	movs	r1, #64	; 0x40
 801a486:	f000 fabf 	bl	801aa08 <_malloc_r>
 801a48a:	6020      	str	r0, [r4, #0]
 801a48c:	6120      	str	r0, [r4, #16]
 801a48e:	b928      	cbnz	r0, 801a49c <_svfiprintf_r+0x30>
 801a490:	230c      	movs	r3, #12
 801a492:	f8c8 3000 	str.w	r3, [r8]
 801a496:	f04f 30ff 	mov.w	r0, #4294967295
 801a49a:	e0c8      	b.n	801a62e <_svfiprintf_r+0x1c2>
 801a49c:	2340      	movs	r3, #64	; 0x40
 801a49e:	6163      	str	r3, [r4, #20]
 801a4a0:	2300      	movs	r3, #0
 801a4a2:	9309      	str	r3, [sp, #36]	; 0x24
 801a4a4:	2320      	movs	r3, #32
 801a4a6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801a4aa:	2330      	movs	r3, #48	; 0x30
 801a4ac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801a4b0:	9503      	str	r5, [sp, #12]
 801a4b2:	f04f 0b01 	mov.w	fp, #1
 801a4b6:	4637      	mov	r7, r6
 801a4b8:	463d      	mov	r5, r7
 801a4ba:	f815 3b01 	ldrb.w	r3, [r5], #1
 801a4be:	b10b      	cbz	r3, 801a4c4 <_svfiprintf_r+0x58>
 801a4c0:	2b25      	cmp	r3, #37	; 0x25
 801a4c2:	d13e      	bne.n	801a542 <_svfiprintf_r+0xd6>
 801a4c4:	ebb7 0a06 	subs.w	sl, r7, r6
 801a4c8:	d00b      	beq.n	801a4e2 <_svfiprintf_r+0x76>
 801a4ca:	4653      	mov	r3, sl
 801a4cc:	4632      	mov	r2, r6
 801a4ce:	4621      	mov	r1, r4
 801a4d0:	4640      	mov	r0, r8
 801a4d2:	f7ff ff70 	bl	801a3b6 <__ssputs_r>
 801a4d6:	3001      	adds	r0, #1
 801a4d8:	f000 80a4 	beq.w	801a624 <_svfiprintf_r+0x1b8>
 801a4dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a4de:	4453      	add	r3, sl
 801a4e0:	9309      	str	r3, [sp, #36]	; 0x24
 801a4e2:	783b      	ldrb	r3, [r7, #0]
 801a4e4:	2b00      	cmp	r3, #0
 801a4e6:	f000 809d 	beq.w	801a624 <_svfiprintf_r+0x1b8>
 801a4ea:	2300      	movs	r3, #0
 801a4ec:	f04f 32ff 	mov.w	r2, #4294967295
 801a4f0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801a4f4:	9304      	str	r3, [sp, #16]
 801a4f6:	9307      	str	r3, [sp, #28]
 801a4f8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801a4fc:	931a      	str	r3, [sp, #104]	; 0x68
 801a4fe:	462f      	mov	r7, r5
 801a500:	2205      	movs	r2, #5
 801a502:	f817 1b01 	ldrb.w	r1, [r7], #1
 801a506:	4850      	ldr	r0, [pc, #320]	; (801a648 <_svfiprintf_r+0x1dc>)
 801a508:	f7e5 fe8a 	bl	8000220 <memchr>
 801a50c:	9b04      	ldr	r3, [sp, #16]
 801a50e:	b9d0      	cbnz	r0, 801a546 <_svfiprintf_r+0xda>
 801a510:	06d9      	lsls	r1, r3, #27
 801a512:	bf44      	itt	mi
 801a514:	2220      	movmi	r2, #32
 801a516:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801a51a:	071a      	lsls	r2, r3, #28
 801a51c:	bf44      	itt	mi
 801a51e:	222b      	movmi	r2, #43	; 0x2b
 801a520:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801a524:	782a      	ldrb	r2, [r5, #0]
 801a526:	2a2a      	cmp	r2, #42	; 0x2a
 801a528:	d015      	beq.n	801a556 <_svfiprintf_r+0xea>
 801a52a:	9a07      	ldr	r2, [sp, #28]
 801a52c:	462f      	mov	r7, r5
 801a52e:	2000      	movs	r0, #0
 801a530:	250a      	movs	r5, #10
 801a532:	4639      	mov	r1, r7
 801a534:	f811 3b01 	ldrb.w	r3, [r1], #1
 801a538:	3b30      	subs	r3, #48	; 0x30
 801a53a:	2b09      	cmp	r3, #9
 801a53c:	d94d      	bls.n	801a5da <_svfiprintf_r+0x16e>
 801a53e:	b1b8      	cbz	r0, 801a570 <_svfiprintf_r+0x104>
 801a540:	e00f      	b.n	801a562 <_svfiprintf_r+0xf6>
 801a542:	462f      	mov	r7, r5
 801a544:	e7b8      	b.n	801a4b8 <_svfiprintf_r+0x4c>
 801a546:	4a40      	ldr	r2, [pc, #256]	; (801a648 <_svfiprintf_r+0x1dc>)
 801a548:	1a80      	subs	r0, r0, r2
 801a54a:	fa0b f000 	lsl.w	r0, fp, r0
 801a54e:	4318      	orrs	r0, r3
 801a550:	9004      	str	r0, [sp, #16]
 801a552:	463d      	mov	r5, r7
 801a554:	e7d3      	b.n	801a4fe <_svfiprintf_r+0x92>
 801a556:	9a03      	ldr	r2, [sp, #12]
 801a558:	1d11      	adds	r1, r2, #4
 801a55a:	6812      	ldr	r2, [r2, #0]
 801a55c:	9103      	str	r1, [sp, #12]
 801a55e:	2a00      	cmp	r2, #0
 801a560:	db01      	blt.n	801a566 <_svfiprintf_r+0xfa>
 801a562:	9207      	str	r2, [sp, #28]
 801a564:	e004      	b.n	801a570 <_svfiprintf_r+0x104>
 801a566:	4252      	negs	r2, r2
 801a568:	f043 0302 	orr.w	r3, r3, #2
 801a56c:	9207      	str	r2, [sp, #28]
 801a56e:	9304      	str	r3, [sp, #16]
 801a570:	783b      	ldrb	r3, [r7, #0]
 801a572:	2b2e      	cmp	r3, #46	; 0x2e
 801a574:	d10c      	bne.n	801a590 <_svfiprintf_r+0x124>
 801a576:	787b      	ldrb	r3, [r7, #1]
 801a578:	2b2a      	cmp	r3, #42	; 0x2a
 801a57a:	d133      	bne.n	801a5e4 <_svfiprintf_r+0x178>
 801a57c:	9b03      	ldr	r3, [sp, #12]
 801a57e:	1d1a      	adds	r2, r3, #4
 801a580:	681b      	ldr	r3, [r3, #0]
 801a582:	9203      	str	r2, [sp, #12]
 801a584:	2b00      	cmp	r3, #0
 801a586:	bfb8      	it	lt
 801a588:	f04f 33ff 	movlt.w	r3, #4294967295
 801a58c:	3702      	adds	r7, #2
 801a58e:	9305      	str	r3, [sp, #20]
 801a590:	4d2e      	ldr	r5, [pc, #184]	; (801a64c <_svfiprintf_r+0x1e0>)
 801a592:	7839      	ldrb	r1, [r7, #0]
 801a594:	2203      	movs	r2, #3
 801a596:	4628      	mov	r0, r5
 801a598:	f7e5 fe42 	bl	8000220 <memchr>
 801a59c:	b138      	cbz	r0, 801a5ae <_svfiprintf_r+0x142>
 801a59e:	2340      	movs	r3, #64	; 0x40
 801a5a0:	1b40      	subs	r0, r0, r5
 801a5a2:	fa03 f000 	lsl.w	r0, r3, r0
 801a5a6:	9b04      	ldr	r3, [sp, #16]
 801a5a8:	4303      	orrs	r3, r0
 801a5aa:	3701      	adds	r7, #1
 801a5ac:	9304      	str	r3, [sp, #16]
 801a5ae:	7839      	ldrb	r1, [r7, #0]
 801a5b0:	4827      	ldr	r0, [pc, #156]	; (801a650 <_svfiprintf_r+0x1e4>)
 801a5b2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801a5b6:	2206      	movs	r2, #6
 801a5b8:	1c7e      	adds	r6, r7, #1
 801a5ba:	f7e5 fe31 	bl	8000220 <memchr>
 801a5be:	2800      	cmp	r0, #0
 801a5c0:	d038      	beq.n	801a634 <_svfiprintf_r+0x1c8>
 801a5c2:	4b24      	ldr	r3, [pc, #144]	; (801a654 <_svfiprintf_r+0x1e8>)
 801a5c4:	bb13      	cbnz	r3, 801a60c <_svfiprintf_r+0x1a0>
 801a5c6:	9b03      	ldr	r3, [sp, #12]
 801a5c8:	3307      	adds	r3, #7
 801a5ca:	f023 0307 	bic.w	r3, r3, #7
 801a5ce:	3308      	adds	r3, #8
 801a5d0:	9303      	str	r3, [sp, #12]
 801a5d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a5d4:	444b      	add	r3, r9
 801a5d6:	9309      	str	r3, [sp, #36]	; 0x24
 801a5d8:	e76d      	b.n	801a4b6 <_svfiprintf_r+0x4a>
 801a5da:	fb05 3202 	mla	r2, r5, r2, r3
 801a5de:	2001      	movs	r0, #1
 801a5e0:	460f      	mov	r7, r1
 801a5e2:	e7a6      	b.n	801a532 <_svfiprintf_r+0xc6>
 801a5e4:	2300      	movs	r3, #0
 801a5e6:	3701      	adds	r7, #1
 801a5e8:	9305      	str	r3, [sp, #20]
 801a5ea:	4619      	mov	r1, r3
 801a5ec:	250a      	movs	r5, #10
 801a5ee:	4638      	mov	r0, r7
 801a5f0:	f810 2b01 	ldrb.w	r2, [r0], #1
 801a5f4:	3a30      	subs	r2, #48	; 0x30
 801a5f6:	2a09      	cmp	r2, #9
 801a5f8:	d903      	bls.n	801a602 <_svfiprintf_r+0x196>
 801a5fa:	2b00      	cmp	r3, #0
 801a5fc:	d0c8      	beq.n	801a590 <_svfiprintf_r+0x124>
 801a5fe:	9105      	str	r1, [sp, #20]
 801a600:	e7c6      	b.n	801a590 <_svfiprintf_r+0x124>
 801a602:	fb05 2101 	mla	r1, r5, r1, r2
 801a606:	2301      	movs	r3, #1
 801a608:	4607      	mov	r7, r0
 801a60a:	e7f0      	b.n	801a5ee <_svfiprintf_r+0x182>
 801a60c:	ab03      	add	r3, sp, #12
 801a60e:	9300      	str	r3, [sp, #0]
 801a610:	4622      	mov	r2, r4
 801a612:	4b11      	ldr	r3, [pc, #68]	; (801a658 <_svfiprintf_r+0x1ec>)
 801a614:	a904      	add	r1, sp, #16
 801a616:	4640      	mov	r0, r8
 801a618:	f3af 8000 	nop.w
 801a61c:	f1b0 3fff 	cmp.w	r0, #4294967295
 801a620:	4681      	mov	r9, r0
 801a622:	d1d6      	bne.n	801a5d2 <_svfiprintf_r+0x166>
 801a624:	89a3      	ldrh	r3, [r4, #12]
 801a626:	065b      	lsls	r3, r3, #25
 801a628:	f53f af35 	bmi.w	801a496 <_svfiprintf_r+0x2a>
 801a62c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a62e:	b01d      	add	sp, #116	; 0x74
 801a630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a634:	ab03      	add	r3, sp, #12
 801a636:	9300      	str	r3, [sp, #0]
 801a638:	4622      	mov	r2, r4
 801a63a:	4b07      	ldr	r3, [pc, #28]	; (801a658 <_svfiprintf_r+0x1ec>)
 801a63c:	a904      	add	r1, sp, #16
 801a63e:	4640      	mov	r0, r8
 801a640:	f000 f882 	bl	801a748 <_printf_i>
 801a644:	e7ea      	b.n	801a61c <_svfiprintf_r+0x1b0>
 801a646:	bf00      	nop
 801a648:	080214b8 	.word	0x080214b8
 801a64c:	080214be 	.word	0x080214be
 801a650:	080214c2 	.word	0x080214c2
 801a654:	00000000 	.word	0x00000000
 801a658:	0801a3b7 	.word	0x0801a3b7

0801a65c <_printf_common>:
 801a65c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a660:	4691      	mov	r9, r2
 801a662:	461f      	mov	r7, r3
 801a664:	688a      	ldr	r2, [r1, #8]
 801a666:	690b      	ldr	r3, [r1, #16]
 801a668:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801a66c:	4293      	cmp	r3, r2
 801a66e:	bfb8      	it	lt
 801a670:	4613      	movlt	r3, r2
 801a672:	f8c9 3000 	str.w	r3, [r9]
 801a676:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801a67a:	4606      	mov	r6, r0
 801a67c:	460c      	mov	r4, r1
 801a67e:	b112      	cbz	r2, 801a686 <_printf_common+0x2a>
 801a680:	3301      	adds	r3, #1
 801a682:	f8c9 3000 	str.w	r3, [r9]
 801a686:	6823      	ldr	r3, [r4, #0]
 801a688:	0699      	lsls	r1, r3, #26
 801a68a:	bf42      	ittt	mi
 801a68c:	f8d9 3000 	ldrmi.w	r3, [r9]
 801a690:	3302      	addmi	r3, #2
 801a692:	f8c9 3000 	strmi.w	r3, [r9]
 801a696:	6825      	ldr	r5, [r4, #0]
 801a698:	f015 0506 	ands.w	r5, r5, #6
 801a69c:	d107      	bne.n	801a6ae <_printf_common+0x52>
 801a69e:	f104 0a19 	add.w	sl, r4, #25
 801a6a2:	68e3      	ldr	r3, [r4, #12]
 801a6a4:	f8d9 2000 	ldr.w	r2, [r9]
 801a6a8:	1a9b      	subs	r3, r3, r2
 801a6aa:	42ab      	cmp	r3, r5
 801a6ac:	dc28      	bgt.n	801a700 <_printf_common+0xa4>
 801a6ae:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801a6b2:	6822      	ldr	r2, [r4, #0]
 801a6b4:	3300      	adds	r3, #0
 801a6b6:	bf18      	it	ne
 801a6b8:	2301      	movne	r3, #1
 801a6ba:	0692      	lsls	r2, r2, #26
 801a6bc:	d42d      	bmi.n	801a71a <_printf_common+0xbe>
 801a6be:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801a6c2:	4639      	mov	r1, r7
 801a6c4:	4630      	mov	r0, r6
 801a6c6:	47c0      	blx	r8
 801a6c8:	3001      	adds	r0, #1
 801a6ca:	d020      	beq.n	801a70e <_printf_common+0xb2>
 801a6cc:	6823      	ldr	r3, [r4, #0]
 801a6ce:	68e5      	ldr	r5, [r4, #12]
 801a6d0:	f8d9 2000 	ldr.w	r2, [r9]
 801a6d4:	f003 0306 	and.w	r3, r3, #6
 801a6d8:	2b04      	cmp	r3, #4
 801a6da:	bf08      	it	eq
 801a6dc:	1aad      	subeq	r5, r5, r2
 801a6de:	68a3      	ldr	r3, [r4, #8]
 801a6e0:	6922      	ldr	r2, [r4, #16]
 801a6e2:	bf0c      	ite	eq
 801a6e4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801a6e8:	2500      	movne	r5, #0
 801a6ea:	4293      	cmp	r3, r2
 801a6ec:	bfc4      	itt	gt
 801a6ee:	1a9b      	subgt	r3, r3, r2
 801a6f0:	18ed      	addgt	r5, r5, r3
 801a6f2:	f04f 0900 	mov.w	r9, #0
 801a6f6:	341a      	adds	r4, #26
 801a6f8:	454d      	cmp	r5, r9
 801a6fa:	d11a      	bne.n	801a732 <_printf_common+0xd6>
 801a6fc:	2000      	movs	r0, #0
 801a6fe:	e008      	b.n	801a712 <_printf_common+0xb6>
 801a700:	2301      	movs	r3, #1
 801a702:	4652      	mov	r2, sl
 801a704:	4639      	mov	r1, r7
 801a706:	4630      	mov	r0, r6
 801a708:	47c0      	blx	r8
 801a70a:	3001      	adds	r0, #1
 801a70c:	d103      	bne.n	801a716 <_printf_common+0xba>
 801a70e:	f04f 30ff 	mov.w	r0, #4294967295
 801a712:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a716:	3501      	adds	r5, #1
 801a718:	e7c3      	b.n	801a6a2 <_printf_common+0x46>
 801a71a:	18e1      	adds	r1, r4, r3
 801a71c:	1c5a      	adds	r2, r3, #1
 801a71e:	2030      	movs	r0, #48	; 0x30
 801a720:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801a724:	4422      	add	r2, r4
 801a726:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801a72a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801a72e:	3302      	adds	r3, #2
 801a730:	e7c5      	b.n	801a6be <_printf_common+0x62>
 801a732:	2301      	movs	r3, #1
 801a734:	4622      	mov	r2, r4
 801a736:	4639      	mov	r1, r7
 801a738:	4630      	mov	r0, r6
 801a73a:	47c0      	blx	r8
 801a73c:	3001      	adds	r0, #1
 801a73e:	d0e6      	beq.n	801a70e <_printf_common+0xb2>
 801a740:	f109 0901 	add.w	r9, r9, #1
 801a744:	e7d8      	b.n	801a6f8 <_printf_common+0x9c>
	...

0801a748 <_printf_i>:
 801a748:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a74c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801a750:	460c      	mov	r4, r1
 801a752:	7e09      	ldrb	r1, [r1, #24]
 801a754:	b085      	sub	sp, #20
 801a756:	296e      	cmp	r1, #110	; 0x6e
 801a758:	4617      	mov	r7, r2
 801a75a:	4606      	mov	r6, r0
 801a75c:	4698      	mov	r8, r3
 801a75e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a760:	f000 80b3 	beq.w	801a8ca <_printf_i+0x182>
 801a764:	d822      	bhi.n	801a7ac <_printf_i+0x64>
 801a766:	2963      	cmp	r1, #99	; 0x63
 801a768:	d036      	beq.n	801a7d8 <_printf_i+0x90>
 801a76a:	d80a      	bhi.n	801a782 <_printf_i+0x3a>
 801a76c:	2900      	cmp	r1, #0
 801a76e:	f000 80b9 	beq.w	801a8e4 <_printf_i+0x19c>
 801a772:	2958      	cmp	r1, #88	; 0x58
 801a774:	f000 8083 	beq.w	801a87e <_printf_i+0x136>
 801a778:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a77c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801a780:	e032      	b.n	801a7e8 <_printf_i+0xa0>
 801a782:	2964      	cmp	r1, #100	; 0x64
 801a784:	d001      	beq.n	801a78a <_printf_i+0x42>
 801a786:	2969      	cmp	r1, #105	; 0x69
 801a788:	d1f6      	bne.n	801a778 <_printf_i+0x30>
 801a78a:	6820      	ldr	r0, [r4, #0]
 801a78c:	6813      	ldr	r3, [r2, #0]
 801a78e:	0605      	lsls	r5, r0, #24
 801a790:	f103 0104 	add.w	r1, r3, #4
 801a794:	d52a      	bpl.n	801a7ec <_printf_i+0xa4>
 801a796:	681b      	ldr	r3, [r3, #0]
 801a798:	6011      	str	r1, [r2, #0]
 801a79a:	2b00      	cmp	r3, #0
 801a79c:	da03      	bge.n	801a7a6 <_printf_i+0x5e>
 801a79e:	222d      	movs	r2, #45	; 0x2d
 801a7a0:	425b      	negs	r3, r3
 801a7a2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801a7a6:	486f      	ldr	r0, [pc, #444]	; (801a964 <_printf_i+0x21c>)
 801a7a8:	220a      	movs	r2, #10
 801a7aa:	e039      	b.n	801a820 <_printf_i+0xd8>
 801a7ac:	2973      	cmp	r1, #115	; 0x73
 801a7ae:	f000 809d 	beq.w	801a8ec <_printf_i+0x1a4>
 801a7b2:	d808      	bhi.n	801a7c6 <_printf_i+0x7e>
 801a7b4:	296f      	cmp	r1, #111	; 0x6f
 801a7b6:	d020      	beq.n	801a7fa <_printf_i+0xb2>
 801a7b8:	2970      	cmp	r1, #112	; 0x70
 801a7ba:	d1dd      	bne.n	801a778 <_printf_i+0x30>
 801a7bc:	6823      	ldr	r3, [r4, #0]
 801a7be:	f043 0320 	orr.w	r3, r3, #32
 801a7c2:	6023      	str	r3, [r4, #0]
 801a7c4:	e003      	b.n	801a7ce <_printf_i+0x86>
 801a7c6:	2975      	cmp	r1, #117	; 0x75
 801a7c8:	d017      	beq.n	801a7fa <_printf_i+0xb2>
 801a7ca:	2978      	cmp	r1, #120	; 0x78
 801a7cc:	d1d4      	bne.n	801a778 <_printf_i+0x30>
 801a7ce:	2378      	movs	r3, #120	; 0x78
 801a7d0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801a7d4:	4864      	ldr	r0, [pc, #400]	; (801a968 <_printf_i+0x220>)
 801a7d6:	e055      	b.n	801a884 <_printf_i+0x13c>
 801a7d8:	6813      	ldr	r3, [r2, #0]
 801a7da:	1d19      	adds	r1, r3, #4
 801a7dc:	681b      	ldr	r3, [r3, #0]
 801a7de:	6011      	str	r1, [r2, #0]
 801a7e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a7e4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801a7e8:	2301      	movs	r3, #1
 801a7ea:	e08c      	b.n	801a906 <_printf_i+0x1be>
 801a7ec:	681b      	ldr	r3, [r3, #0]
 801a7ee:	6011      	str	r1, [r2, #0]
 801a7f0:	f010 0f40 	tst.w	r0, #64	; 0x40
 801a7f4:	bf18      	it	ne
 801a7f6:	b21b      	sxthne	r3, r3
 801a7f8:	e7cf      	b.n	801a79a <_printf_i+0x52>
 801a7fa:	6813      	ldr	r3, [r2, #0]
 801a7fc:	6825      	ldr	r5, [r4, #0]
 801a7fe:	1d18      	adds	r0, r3, #4
 801a800:	6010      	str	r0, [r2, #0]
 801a802:	0628      	lsls	r0, r5, #24
 801a804:	d501      	bpl.n	801a80a <_printf_i+0xc2>
 801a806:	681b      	ldr	r3, [r3, #0]
 801a808:	e002      	b.n	801a810 <_printf_i+0xc8>
 801a80a:	0668      	lsls	r0, r5, #25
 801a80c:	d5fb      	bpl.n	801a806 <_printf_i+0xbe>
 801a80e:	881b      	ldrh	r3, [r3, #0]
 801a810:	4854      	ldr	r0, [pc, #336]	; (801a964 <_printf_i+0x21c>)
 801a812:	296f      	cmp	r1, #111	; 0x6f
 801a814:	bf14      	ite	ne
 801a816:	220a      	movne	r2, #10
 801a818:	2208      	moveq	r2, #8
 801a81a:	2100      	movs	r1, #0
 801a81c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801a820:	6865      	ldr	r5, [r4, #4]
 801a822:	60a5      	str	r5, [r4, #8]
 801a824:	2d00      	cmp	r5, #0
 801a826:	f2c0 8095 	blt.w	801a954 <_printf_i+0x20c>
 801a82a:	6821      	ldr	r1, [r4, #0]
 801a82c:	f021 0104 	bic.w	r1, r1, #4
 801a830:	6021      	str	r1, [r4, #0]
 801a832:	2b00      	cmp	r3, #0
 801a834:	d13d      	bne.n	801a8b2 <_printf_i+0x16a>
 801a836:	2d00      	cmp	r5, #0
 801a838:	f040 808e 	bne.w	801a958 <_printf_i+0x210>
 801a83c:	4665      	mov	r5, ip
 801a83e:	2a08      	cmp	r2, #8
 801a840:	d10b      	bne.n	801a85a <_printf_i+0x112>
 801a842:	6823      	ldr	r3, [r4, #0]
 801a844:	07db      	lsls	r3, r3, #31
 801a846:	d508      	bpl.n	801a85a <_printf_i+0x112>
 801a848:	6923      	ldr	r3, [r4, #16]
 801a84a:	6862      	ldr	r2, [r4, #4]
 801a84c:	429a      	cmp	r2, r3
 801a84e:	bfde      	ittt	le
 801a850:	2330      	movle	r3, #48	; 0x30
 801a852:	f805 3c01 	strble.w	r3, [r5, #-1]
 801a856:	f105 35ff 	addle.w	r5, r5, #4294967295
 801a85a:	ebac 0305 	sub.w	r3, ip, r5
 801a85e:	6123      	str	r3, [r4, #16]
 801a860:	f8cd 8000 	str.w	r8, [sp]
 801a864:	463b      	mov	r3, r7
 801a866:	aa03      	add	r2, sp, #12
 801a868:	4621      	mov	r1, r4
 801a86a:	4630      	mov	r0, r6
 801a86c:	f7ff fef6 	bl	801a65c <_printf_common>
 801a870:	3001      	adds	r0, #1
 801a872:	d14d      	bne.n	801a910 <_printf_i+0x1c8>
 801a874:	f04f 30ff 	mov.w	r0, #4294967295
 801a878:	b005      	add	sp, #20
 801a87a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a87e:	4839      	ldr	r0, [pc, #228]	; (801a964 <_printf_i+0x21c>)
 801a880:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801a884:	6813      	ldr	r3, [r2, #0]
 801a886:	6821      	ldr	r1, [r4, #0]
 801a888:	1d1d      	adds	r5, r3, #4
 801a88a:	681b      	ldr	r3, [r3, #0]
 801a88c:	6015      	str	r5, [r2, #0]
 801a88e:	060a      	lsls	r2, r1, #24
 801a890:	d50b      	bpl.n	801a8aa <_printf_i+0x162>
 801a892:	07ca      	lsls	r2, r1, #31
 801a894:	bf44      	itt	mi
 801a896:	f041 0120 	orrmi.w	r1, r1, #32
 801a89a:	6021      	strmi	r1, [r4, #0]
 801a89c:	b91b      	cbnz	r3, 801a8a6 <_printf_i+0x15e>
 801a89e:	6822      	ldr	r2, [r4, #0]
 801a8a0:	f022 0220 	bic.w	r2, r2, #32
 801a8a4:	6022      	str	r2, [r4, #0]
 801a8a6:	2210      	movs	r2, #16
 801a8a8:	e7b7      	b.n	801a81a <_printf_i+0xd2>
 801a8aa:	064d      	lsls	r5, r1, #25
 801a8ac:	bf48      	it	mi
 801a8ae:	b29b      	uxthmi	r3, r3
 801a8b0:	e7ef      	b.n	801a892 <_printf_i+0x14a>
 801a8b2:	4665      	mov	r5, ip
 801a8b4:	fbb3 f1f2 	udiv	r1, r3, r2
 801a8b8:	fb02 3311 	mls	r3, r2, r1, r3
 801a8bc:	5cc3      	ldrb	r3, [r0, r3]
 801a8be:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801a8c2:	460b      	mov	r3, r1
 801a8c4:	2900      	cmp	r1, #0
 801a8c6:	d1f5      	bne.n	801a8b4 <_printf_i+0x16c>
 801a8c8:	e7b9      	b.n	801a83e <_printf_i+0xf6>
 801a8ca:	6813      	ldr	r3, [r2, #0]
 801a8cc:	6825      	ldr	r5, [r4, #0]
 801a8ce:	6961      	ldr	r1, [r4, #20]
 801a8d0:	1d18      	adds	r0, r3, #4
 801a8d2:	6010      	str	r0, [r2, #0]
 801a8d4:	0628      	lsls	r0, r5, #24
 801a8d6:	681b      	ldr	r3, [r3, #0]
 801a8d8:	d501      	bpl.n	801a8de <_printf_i+0x196>
 801a8da:	6019      	str	r1, [r3, #0]
 801a8dc:	e002      	b.n	801a8e4 <_printf_i+0x19c>
 801a8de:	066a      	lsls	r2, r5, #25
 801a8e0:	d5fb      	bpl.n	801a8da <_printf_i+0x192>
 801a8e2:	8019      	strh	r1, [r3, #0]
 801a8e4:	2300      	movs	r3, #0
 801a8e6:	6123      	str	r3, [r4, #16]
 801a8e8:	4665      	mov	r5, ip
 801a8ea:	e7b9      	b.n	801a860 <_printf_i+0x118>
 801a8ec:	6813      	ldr	r3, [r2, #0]
 801a8ee:	1d19      	adds	r1, r3, #4
 801a8f0:	6011      	str	r1, [r2, #0]
 801a8f2:	681d      	ldr	r5, [r3, #0]
 801a8f4:	6862      	ldr	r2, [r4, #4]
 801a8f6:	2100      	movs	r1, #0
 801a8f8:	4628      	mov	r0, r5
 801a8fa:	f7e5 fc91 	bl	8000220 <memchr>
 801a8fe:	b108      	cbz	r0, 801a904 <_printf_i+0x1bc>
 801a900:	1b40      	subs	r0, r0, r5
 801a902:	6060      	str	r0, [r4, #4]
 801a904:	6863      	ldr	r3, [r4, #4]
 801a906:	6123      	str	r3, [r4, #16]
 801a908:	2300      	movs	r3, #0
 801a90a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801a90e:	e7a7      	b.n	801a860 <_printf_i+0x118>
 801a910:	6923      	ldr	r3, [r4, #16]
 801a912:	462a      	mov	r2, r5
 801a914:	4639      	mov	r1, r7
 801a916:	4630      	mov	r0, r6
 801a918:	47c0      	blx	r8
 801a91a:	3001      	adds	r0, #1
 801a91c:	d0aa      	beq.n	801a874 <_printf_i+0x12c>
 801a91e:	6823      	ldr	r3, [r4, #0]
 801a920:	079b      	lsls	r3, r3, #30
 801a922:	d413      	bmi.n	801a94c <_printf_i+0x204>
 801a924:	68e0      	ldr	r0, [r4, #12]
 801a926:	9b03      	ldr	r3, [sp, #12]
 801a928:	4298      	cmp	r0, r3
 801a92a:	bfb8      	it	lt
 801a92c:	4618      	movlt	r0, r3
 801a92e:	e7a3      	b.n	801a878 <_printf_i+0x130>
 801a930:	2301      	movs	r3, #1
 801a932:	464a      	mov	r2, r9
 801a934:	4639      	mov	r1, r7
 801a936:	4630      	mov	r0, r6
 801a938:	47c0      	blx	r8
 801a93a:	3001      	adds	r0, #1
 801a93c:	d09a      	beq.n	801a874 <_printf_i+0x12c>
 801a93e:	3501      	adds	r5, #1
 801a940:	68e3      	ldr	r3, [r4, #12]
 801a942:	9a03      	ldr	r2, [sp, #12]
 801a944:	1a9b      	subs	r3, r3, r2
 801a946:	42ab      	cmp	r3, r5
 801a948:	dcf2      	bgt.n	801a930 <_printf_i+0x1e8>
 801a94a:	e7eb      	b.n	801a924 <_printf_i+0x1dc>
 801a94c:	2500      	movs	r5, #0
 801a94e:	f104 0919 	add.w	r9, r4, #25
 801a952:	e7f5      	b.n	801a940 <_printf_i+0x1f8>
 801a954:	2b00      	cmp	r3, #0
 801a956:	d1ac      	bne.n	801a8b2 <_printf_i+0x16a>
 801a958:	7803      	ldrb	r3, [r0, #0]
 801a95a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801a95e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a962:	e76c      	b.n	801a83e <_printf_i+0xf6>
 801a964:	080214c9 	.word	0x080214c9
 801a968:	080214da 	.word	0x080214da

0801a96c <_free_r>:
 801a96c:	b538      	push	{r3, r4, r5, lr}
 801a96e:	4605      	mov	r5, r0
 801a970:	2900      	cmp	r1, #0
 801a972:	d045      	beq.n	801aa00 <_free_r+0x94>
 801a974:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801a978:	1f0c      	subs	r4, r1, #4
 801a97a:	2b00      	cmp	r3, #0
 801a97c:	bfb8      	it	lt
 801a97e:	18e4      	addlt	r4, r4, r3
 801a980:	f000 f8d2 	bl	801ab28 <__malloc_lock>
 801a984:	4a1f      	ldr	r2, [pc, #124]	; (801aa04 <_free_r+0x98>)
 801a986:	6813      	ldr	r3, [r2, #0]
 801a988:	4610      	mov	r0, r2
 801a98a:	b933      	cbnz	r3, 801a99a <_free_r+0x2e>
 801a98c:	6063      	str	r3, [r4, #4]
 801a98e:	6014      	str	r4, [r2, #0]
 801a990:	4628      	mov	r0, r5
 801a992:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a996:	f000 b8c8 	b.w	801ab2a <__malloc_unlock>
 801a99a:	42a3      	cmp	r3, r4
 801a99c:	d90c      	bls.n	801a9b8 <_free_r+0x4c>
 801a99e:	6821      	ldr	r1, [r4, #0]
 801a9a0:	1862      	adds	r2, r4, r1
 801a9a2:	4293      	cmp	r3, r2
 801a9a4:	bf04      	itt	eq
 801a9a6:	681a      	ldreq	r2, [r3, #0]
 801a9a8:	685b      	ldreq	r3, [r3, #4]
 801a9aa:	6063      	str	r3, [r4, #4]
 801a9ac:	bf04      	itt	eq
 801a9ae:	1852      	addeq	r2, r2, r1
 801a9b0:	6022      	streq	r2, [r4, #0]
 801a9b2:	6004      	str	r4, [r0, #0]
 801a9b4:	e7ec      	b.n	801a990 <_free_r+0x24>
 801a9b6:	4613      	mov	r3, r2
 801a9b8:	685a      	ldr	r2, [r3, #4]
 801a9ba:	b10a      	cbz	r2, 801a9c0 <_free_r+0x54>
 801a9bc:	42a2      	cmp	r2, r4
 801a9be:	d9fa      	bls.n	801a9b6 <_free_r+0x4a>
 801a9c0:	6819      	ldr	r1, [r3, #0]
 801a9c2:	1858      	adds	r0, r3, r1
 801a9c4:	42a0      	cmp	r0, r4
 801a9c6:	d10b      	bne.n	801a9e0 <_free_r+0x74>
 801a9c8:	6820      	ldr	r0, [r4, #0]
 801a9ca:	4401      	add	r1, r0
 801a9cc:	1858      	adds	r0, r3, r1
 801a9ce:	4282      	cmp	r2, r0
 801a9d0:	6019      	str	r1, [r3, #0]
 801a9d2:	d1dd      	bne.n	801a990 <_free_r+0x24>
 801a9d4:	6810      	ldr	r0, [r2, #0]
 801a9d6:	6852      	ldr	r2, [r2, #4]
 801a9d8:	605a      	str	r2, [r3, #4]
 801a9da:	4401      	add	r1, r0
 801a9dc:	6019      	str	r1, [r3, #0]
 801a9de:	e7d7      	b.n	801a990 <_free_r+0x24>
 801a9e0:	d902      	bls.n	801a9e8 <_free_r+0x7c>
 801a9e2:	230c      	movs	r3, #12
 801a9e4:	602b      	str	r3, [r5, #0]
 801a9e6:	e7d3      	b.n	801a990 <_free_r+0x24>
 801a9e8:	6820      	ldr	r0, [r4, #0]
 801a9ea:	1821      	adds	r1, r4, r0
 801a9ec:	428a      	cmp	r2, r1
 801a9ee:	bf04      	itt	eq
 801a9f0:	6811      	ldreq	r1, [r2, #0]
 801a9f2:	6852      	ldreq	r2, [r2, #4]
 801a9f4:	6062      	str	r2, [r4, #4]
 801a9f6:	bf04      	itt	eq
 801a9f8:	1809      	addeq	r1, r1, r0
 801a9fa:	6021      	streq	r1, [r4, #0]
 801a9fc:	605c      	str	r4, [r3, #4]
 801a9fe:	e7c7      	b.n	801a990 <_free_r+0x24>
 801aa00:	bd38      	pop	{r3, r4, r5, pc}
 801aa02:	bf00      	nop
 801aa04:	2001973c 	.word	0x2001973c

0801aa08 <_malloc_r>:
 801aa08:	b570      	push	{r4, r5, r6, lr}
 801aa0a:	1ccd      	adds	r5, r1, #3
 801aa0c:	f025 0503 	bic.w	r5, r5, #3
 801aa10:	3508      	adds	r5, #8
 801aa12:	2d0c      	cmp	r5, #12
 801aa14:	bf38      	it	cc
 801aa16:	250c      	movcc	r5, #12
 801aa18:	2d00      	cmp	r5, #0
 801aa1a:	4606      	mov	r6, r0
 801aa1c:	db01      	blt.n	801aa22 <_malloc_r+0x1a>
 801aa1e:	42a9      	cmp	r1, r5
 801aa20:	d903      	bls.n	801aa2a <_malloc_r+0x22>
 801aa22:	230c      	movs	r3, #12
 801aa24:	6033      	str	r3, [r6, #0]
 801aa26:	2000      	movs	r0, #0
 801aa28:	bd70      	pop	{r4, r5, r6, pc}
 801aa2a:	f000 f87d 	bl	801ab28 <__malloc_lock>
 801aa2e:	4a21      	ldr	r2, [pc, #132]	; (801aab4 <_malloc_r+0xac>)
 801aa30:	6814      	ldr	r4, [r2, #0]
 801aa32:	4621      	mov	r1, r4
 801aa34:	b991      	cbnz	r1, 801aa5c <_malloc_r+0x54>
 801aa36:	4c20      	ldr	r4, [pc, #128]	; (801aab8 <_malloc_r+0xb0>)
 801aa38:	6823      	ldr	r3, [r4, #0]
 801aa3a:	b91b      	cbnz	r3, 801aa44 <_malloc_r+0x3c>
 801aa3c:	4630      	mov	r0, r6
 801aa3e:	f000 f863 	bl	801ab08 <_sbrk_r>
 801aa42:	6020      	str	r0, [r4, #0]
 801aa44:	4629      	mov	r1, r5
 801aa46:	4630      	mov	r0, r6
 801aa48:	f000 f85e 	bl	801ab08 <_sbrk_r>
 801aa4c:	1c43      	adds	r3, r0, #1
 801aa4e:	d124      	bne.n	801aa9a <_malloc_r+0x92>
 801aa50:	230c      	movs	r3, #12
 801aa52:	6033      	str	r3, [r6, #0]
 801aa54:	4630      	mov	r0, r6
 801aa56:	f000 f868 	bl	801ab2a <__malloc_unlock>
 801aa5a:	e7e4      	b.n	801aa26 <_malloc_r+0x1e>
 801aa5c:	680b      	ldr	r3, [r1, #0]
 801aa5e:	1b5b      	subs	r3, r3, r5
 801aa60:	d418      	bmi.n	801aa94 <_malloc_r+0x8c>
 801aa62:	2b0b      	cmp	r3, #11
 801aa64:	d90f      	bls.n	801aa86 <_malloc_r+0x7e>
 801aa66:	600b      	str	r3, [r1, #0]
 801aa68:	50cd      	str	r5, [r1, r3]
 801aa6a:	18cc      	adds	r4, r1, r3
 801aa6c:	4630      	mov	r0, r6
 801aa6e:	f000 f85c 	bl	801ab2a <__malloc_unlock>
 801aa72:	f104 000b 	add.w	r0, r4, #11
 801aa76:	1d23      	adds	r3, r4, #4
 801aa78:	f020 0007 	bic.w	r0, r0, #7
 801aa7c:	1ac3      	subs	r3, r0, r3
 801aa7e:	d0d3      	beq.n	801aa28 <_malloc_r+0x20>
 801aa80:	425a      	negs	r2, r3
 801aa82:	50e2      	str	r2, [r4, r3]
 801aa84:	e7d0      	b.n	801aa28 <_malloc_r+0x20>
 801aa86:	428c      	cmp	r4, r1
 801aa88:	684b      	ldr	r3, [r1, #4]
 801aa8a:	bf16      	itet	ne
 801aa8c:	6063      	strne	r3, [r4, #4]
 801aa8e:	6013      	streq	r3, [r2, #0]
 801aa90:	460c      	movne	r4, r1
 801aa92:	e7eb      	b.n	801aa6c <_malloc_r+0x64>
 801aa94:	460c      	mov	r4, r1
 801aa96:	6849      	ldr	r1, [r1, #4]
 801aa98:	e7cc      	b.n	801aa34 <_malloc_r+0x2c>
 801aa9a:	1cc4      	adds	r4, r0, #3
 801aa9c:	f024 0403 	bic.w	r4, r4, #3
 801aaa0:	42a0      	cmp	r0, r4
 801aaa2:	d005      	beq.n	801aab0 <_malloc_r+0xa8>
 801aaa4:	1a21      	subs	r1, r4, r0
 801aaa6:	4630      	mov	r0, r6
 801aaa8:	f000 f82e 	bl	801ab08 <_sbrk_r>
 801aaac:	3001      	adds	r0, #1
 801aaae:	d0cf      	beq.n	801aa50 <_malloc_r+0x48>
 801aab0:	6025      	str	r5, [r4, #0]
 801aab2:	e7db      	b.n	801aa6c <_malloc_r+0x64>
 801aab4:	2001973c 	.word	0x2001973c
 801aab8:	20019740 	.word	0x20019740

0801aabc <_realloc_r>:
 801aabc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aabe:	4607      	mov	r7, r0
 801aac0:	4614      	mov	r4, r2
 801aac2:	460e      	mov	r6, r1
 801aac4:	b921      	cbnz	r1, 801aad0 <_realloc_r+0x14>
 801aac6:	4611      	mov	r1, r2
 801aac8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801aacc:	f7ff bf9c 	b.w	801aa08 <_malloc_r>
 801aad0:	b922      	cbnz	r2, 801aadc <_realloc_r+0x20>
 801aad2:	f7ff ff4b 	bl	801a96c <_free_r>
 801aad6:	4625      	mov	r5, r4
 801aad8:	4628      	mov	r0, r5
 801aada:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801aadc:	f000 f826 	bl	801ab2c <_malloc_usable_size_r>
 801aae0:	42a0      	cmp	r0, r4
 801aae2:	d20f      	bcs.n	801ab04 <_realloc_r+0x48>
 801aae4:	4621      	mov	r1, r4
 801aae6:	4638      	mov	r0, r7
 801aae8:	f7ff ff8e 	bl	801aa08 <_malloc_r>
 801aaec:	4605      	mov	r5, r0
 801aaee:	2800      	cmp	r0, #0
 801aaf0:	d0f2      	beq.n	801aad8 <_realloc_r+0x1c>
 801aaf2:	4631      	mov	r1, r6
 801aaf4:	4622      	mov	r2, r4
 801aaf6:	f7ff fbf4 	bl	801a2e2 <memcpy>
 801aafa:	4631      	mov	r1, r6
 801aafc:	4638      	mov	r0, r7
 801aafe:	f7ff ff35 	bl	801a96c <_free_r>
 801ab02:	e7e9      	b.n	801aad8 <_realloc_r+0x1c>
 801ab04:	4635      	mov	r5, r6
 801ab06:	e7e7      	b.n	801aad8 <_realloc_r+0x1c>

0801ab08 <_sbrk_r>:
 801ab08:	b538      	push	{r3, r4, r5, lr}
 801ab0a:	4c06      	ldr	r4, [pc, #24]	; (801ab24 <_sbrk_r+0x1c>)
 801ab0c:	2300      	movs	r3, #0
 801ab0e:	4605      	mov	r5, r0
 801ab10:	4608      	mov	r0, r1
 801ab12:	6023      	str	r3, [r4, #0]
 801ab14:	f7ed ffb8 	bl	8008a88 <_sbrk>
 801ab18:	1c43      	adds	r3, r0, #1
 801ab1a:	d102      	bne.n	801ab22 <_sbrk_r+0x1a>
 801ab1c:	6823      	ldr	r3, [r4, #0]
 801ab1e:	b103      	cbz	r3, 801ab22 <_sbrk_r+0x1a>
 801ab20:	602b      	str	r3, [r5, #0]
 801ab22:	bd38      	pop	{r3, r4, r5, pc}
 801ab24:	20019da8 	.word	0x20019da8

0801ab28 <__malloc_lock>:
 801ab28:	4770      	bx	lr

0801ab2a <__malloc_unlock>:
 801ab2a:	4770      	bx	lr

0801ab2c <_malloc_usable_size_r>:
 801ab2c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801ab30:	1f18      	subs	r0, r3, #4
 801ab32:	2b00      	cmp	r3, #0
 801ab34:	bfbc      	itt	lt
 801ab36:	580b      	ldrlt	r3, [r1, r0]
 801ab38:	18c0      	addlt	r0, r0, r3
 801ab3a:	4770      	bx	lr

0801ab3c <_init>:
 801ab3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ab3e:	bf00      	nop
 801ab40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801ab42:	bc08      	pop	{r3}
 801ab44:	469e      	mov	lr, r3
 801ab46:	4770      	bx	lr

0801ab48 <_fini>:
 801ab48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ab4a:	bf00      	nop
 801ab4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801ab4e:	bc08      	pop	{r3}
 801ab50:	469e      	mov	lr, r3
 801ab52:	4770      	bx	lr
